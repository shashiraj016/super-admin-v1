import {
  $ as Z,
  $a as bi,
  $b as Oh,
  A as bh,
  Aa as mc,
  Ab as _c,
  Ac as H_,
  B as oa,
  Ba as b_,
  Bb as U,
  Bc as vr,
  C as Br,
  Ca as oi,
  Cb as k_,
  Cc,
  D as vh,
  Da as Xn,
  Db as E,
  Dc as Gt,
  E as yh,
  Ea as xs,
  Eb as Jt,
  Ec as ti,
  F as Zi,
  Fa as Sh,
  Fb as Lt,
  Fc as rt,
  G as d_,
  Ga as sa,
  Gb as Pn,
  Gc as wc,
  H as hc,
  Ha as la,
  Hb as Xt,
  Hc as ha,
  I as u_,
  Ia as v_,
  Ib as xt,
  Ic as j_,
  J as Hr,
  Ja as y_,
  Jb as Ct,
  Jc as Fe,
  K as jr,
  Ka as x_,
  Kb as At,
  Kc as U_,
  L as xh,
  La as C_,
  Lb as f,
  Lc as er,
  M as h_,
  Ma as w_,
  Mb as B,
  Mc as Es,
  N as p_,
  Na as D_,
  Nb as ae,
  Nc as z_,
  O as _s,
  Oa as S_,
  Ob as Ds,
  Oc as Dc,
  P as Kn,
  Pa as br,
  Pb as Hi,
  Q as wi,
  Qa as Cs,
  Qb as zt,
  R as Ut,
  Ra as Mh,
  Rb as $t,
  Rc as wo,
  S as Qt,
  Sa as M_,
  Sb as Wt,
  Sc as en,
  T as Ch,
  Ta as ws,
  Tb as Vt,
  U as mt,
  Ua as g,
  Ub as ue,
  Uc as ai,
  V as Di,
  Va as H,
  Vb as Si,
  Vc as yr,
  W as te,
  Wa as zr,
  Wb as xe,
  Wc as Rh,
  X as Ce,
  Xa as Zn,
  Xb as Jn,
  Xc as tn,
  Y as m_,
  Ya as T_,
  Yb as Ih,
  Z as Me,
  Za as xo,
  Zb as I_,
  _ as wh,
  _a as fc,
  _b as Ss,
  a as Xi,
  aa as G,
  ab as Ji,
  ac as ei,
  b as o_,
  ba as bs,
  bb as gc,
  bc,
  c as Yn,
  ca as pc,
  cb as fe,
  cc as vc,
  d as mh,
  da as vs,
  db as Je,
  dc as Ph,
  e as fh,
  ea as le,
  eb as Pt,
  ec as Ms,
  f as Ie,
  fa as we,
  fb as E_,
  fc as ji,
  g as Kt,
  ga as Ae,
  gb as Th,
  gc as O_,
  h as qn,
  ha as Qn,
  hb as F,
  hc as yc,
  i as _i,
  ia as f_,
  ib as Eh,
  ic as P_,
  j as be,
  ja as g_,
  jb as kh,
  jc as Ah,
  k as gs,
  ka as fn,
  kb as kn,
  kc as et,
  l as cc,
  la as gn,
  lb as de,
  lc as A_,
  m as a_,
  ma as Nt,
  mb as M,
  mc as R_,
  n as Ke,
  na as N,
  nb as Bi,
  nc as Ee,
  o as yo,
  oa as L,
  ob as Te,
  oc as _n,
  p as Vi,
  pa as yt,
  pb as Ue,
  pc as Co,
  q as gh,
  qa as Ur,
  qb as In,
  qc as An,
  r as dc,
  ra as bt,
  rb as ca,
  rc as xc,
  s as _h,
  sa as aa,
  sb as da,
  sc as F_,
  t as s_,
  ta as St,
  tb as h,
  tc as ua,
  u as En,
  ua as ys,
  ub as u,
  uc as N_,
  v as l_,
  va as De,
  vb as W,
  vc as L_,
  w as ra,
  wa as Re,
  wb as Qe,
  wc as Oe,
  x as Ot,
  xa as Dh,
  xb as Xe,
  xc as V_,
  y as c_,
  ya as Ve,
  yb as On,
  yc as Ts,
  z as uc,
  za as __,
  zb as ce,
  zc as B_,
} from "./chunk-3V3L5O7X.js";
import {
  a as Q,
  b as Be,
  c as r_,
  d as qC,
  e as KC,
  f as lc,
} from "./chunk-EQDQRRRY.js";
var Vx = qC((Lx, Eu) => {
  "use strict";
  (function (n, t) {
    "use strict";
    typeof Eu == "object" && typeof Eu.exports == "object"
      ? (Eu.exports = n.document
          ? t(n, !0)
          : function (e) {
              if (!e.document)
                throw new Error("jQuery requires a window with a document");
              return t(e);
            })
      : t(n);
  })(typeof window < "u" ? window : Lx, function (n, t) {
    "use strict";
    var e = [],
      i = Object.getPrototypeOf,
      r = e.slice,
      o = e.flat
        ? function (c) {
            return e.flat.call(c);
          }
        : function (c) {
            return e.concat.apply([], c);
          },
      a = e.push,
      s = e.indexOf,
      l = {},
      d = l.toString,
      m = l.hasOwnProperty,
      v = m.toString,
      x = v.call(Object),
      C = {},
      S = function (p) {
        return (
          typeof p == "function" &&
          typeof p.nodeType != "number" &&
          typeof p.item != "function"
        );
      },
      T = function (p) {
        return p != null && p === p.window;
      },
      k = n.document,
      P = { type: !0, src: !0, nonce: !0, noModule: !0 };
    function j(c, p, _) {
      _ = _ || k;
      var y,
        w,
        D = _.createElement("script");
      if (((D.text = c), p))
        for (y in P)
          (w = p[y] || (p.getAttribute && p.getAttribute(y))),
            w && D.setAttribute(y, w);
      _.head.appendChild(D).parentNode.removeChild(D);
    }
    function K(c) {
      return c == null
        ? c + ""
        : typeof c == "object" || typeof c == "function"
        ? l[d.call(c)] || "object"
        : typeof c;
    }
    var oe = "3.7.1",
      ee = /HTML$/i,
      b = function (c, p) {
        return new b.fn.init(c, p);
      };
    (b.fn = b.prototype =
      {
        jquery: oe,
        constructor: b,
        length: 0,
        toArray: function () {
          return r.call(this);
        },
        get: function (c) {
          return c == null
            ? r.call(this)
            : c < 0
            ? this[c + this.length]
            : this[c];
        },
        pushStack: function (c) {
          var p = b.merge(this.constructor(), c);
          return (p.prevObject = this), p;
        },
        each: function (c) {
          return b.each(this, c);
        },
        map: function (c) {
          return this.pushStack(
            b.map(this, function (p, _) {
              return c.call(p, _, p);
            })
          );
        },
        slice: function () {
          return this.pushStack(r.apply(this, arguments));
        },
        first: function () {
          return this.eq(0);
        },
        last: function () {
          return this.eq(-1);
        },
        even: function () {
          return this.pushStack(
            b.grep(this, function (c, p) {
              return (p + 1) % 2;
            })
          );
        },
        odd: function () {
          return this.pushStack(
            b.grep(this, function (c, p) {
              return p % 2;
            })
          );
        },
        eq: function (c) {
          var p = this.length,
            _ = +c + (c < 0 ? p : 0);
          return this.pushStack(_ >= 0 && _ < p ? [this[_]] : []);
        },
        end: function () {
          return this.prevObject || this.constructor();
        },
        push: a,
        sort: e.sort,
        splice: e.splice,
      }),
      (b.extend = b.fn.extend =
        function () {
          var c,
            p,
            _,
            y,
            w,
            D,
            I = arguments[0] || {},
            R = 1,
            A = arguments.length,
            z = !1;
          for (
            typeof I == "boolean" && ((z = I), (I = arguments[R] || {}), R++),
              typeof I != "object" && !S(I) && (I = {}),
              R === A && ((I = this), R--);
            R < A;
            R++
          )
            if ((c = arguments[R]) != null)
              for (p in c)
                (y = c[p]),
                  !(p === "__proto__" || I === y) &&
                    (z && y && (b.isPlainObject(y) || (w = Array.isArray(y)))
                      ? ((_ = I[p]),
                        w && !Array.isArray(_)
                          ? (D = [])
                          : !w && !b.isPlainObject(_)
                          ? (D = {})
                          : (D = _),
                        (w = !1),
                        (I[p] = b.extend(z, D, y)))
                      : y !== void 0 && (I[p] = y));
          return I;
        }),
      b.extend({
        expando: "jQuery" + (oe + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function (c) {
          throw new Error(c);
        },
        noop: function () {},
        isPlainObject: function (c) {
          var p, _;
          return !c || d.call(c) !== "[object Object]"
            ? !1
            : ((p = i(c)),
              p
                ? ((_ = m.call(p, "constructor") && p.constructor),
                  typeof _ == "function" && v.call(_) === x)
                : !0);
        },
        isEmptyObject: function (c) {
          var p;
          for (p in c) return !1;
          return !0;
        },
        globalEval: function (c, p, _) {
          j(c, { nonce: p && p.nonce }, _);
        },
        each: function (c, p) {
          var _,
            y = 0;
          if (me(c))
            for (_ = c.length; y < _ && p.call(c[y], y, c[y]) !== !1; y++);
          else for (y in c) if (p.call(c[y], y, c[y]) === !1) break;
          return c;
        },
        text: function (c) {
          var p,
            _ = "",
            y = 0,
            w = c.nodeType;
          if (!w) for (; (p = c[y++]); ) _ += b.text(p);
          return w === 1 || w === 11
            ? c.textContent
            : w === 9
            ? c.documentElement.textContent
            : w === 3 || w === 4
            ? c.nodeValue
            : _;
        },
        makeArray: function (c, p) {
          var _ = p || [];
          return (
            c != null &&
              (me(Object(c))
                ? b.merge(_, typeof c == "string" ? [c] : c)
                : a.call(_, c)),
            _
          );
        },
        inArray: function (c, p, _) {
          return p == null ? -1 : s.call(p, c, _);
        },
        isXMLDoc: function (c) {
          var p = c && c.namespaceURI,
            _ = c && (c.ownerDocument || c).documentElement;
          return !ee.test(p || (_ && _.nodeName) || "HTML");
        },
        merge: function (c, p) {
          for (var _ = +p.length, y = 0, w = c.length; y < _; y++)
            c[w++] = p[y];
          return (c.length = w), c;
        },
        grep: function (c, p, _) {
          for (var y, w = [], D = 0, I = c.length, R = !_; D < I; D++)
            (y = !p(c[D], D)), y !== R && w.push(c[D]);
          return w;
        },
        map: function (c, p, _) {
          var y,
            w,
            D = 0,
            I = [];
          if (me(c))
            for (y = c.length; D < y; D++)
              (w = p(c[D], D, _)), w != null && I.push(w);
          else for (D in c) (w = p(c[D], D, _)), w != null && I.push(w);
          return o(I);
        },
        guid: 1,
        support: C,
      }),
      typeof Symbol == "function" &&
        (b.fn[Symbol.iterator] = e[Symbol.iterator]),
      b.each(
        "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
          " "
        ),
        function (c, p) {
          l["[object " + p + "]"] = p.toLowerCase();
        }
      );
    function me(c) {
      var p = !!c && "length" in c && c.length,
        _ = K(c);
      return S(c) || T(c)
        ? !1
        : _ === "array" ||
            p === 0 ||
            (typeof p == "number" && p > 0 && p - 1 in c);
    }
    function re(c, p) {
      return c.nodeName && c.nodeName.toLowerCase() === p.toLowerCase();
    }
    var _e = e.pop,
      He = e.sort,
      Ge = e.splice,
      Se = "[\\x20\\t\\r\\n\\f]",
      Ft = new RegExp(
        "^" + Se + "+|((?:^|[^\\\\])(?:\\\\.)*)" + Se + "+$",
        "g"
      );
    b.contains = function (c, p) {
      var _ = p && p.parentNode;
      return (
        c === _ ||
        !!(
          _ &&
          _.nodeType === 1 &&
          (c.contains
            ? c.contains(_)
            : c.compareDocumentPosition && c.compareDocumentPosition(_) & 16)
        )
      );
    };
    var Pi = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function pt(c, p) {
      return p
        ? c === "\0"
          ? "\uFFFD"
          : c.slice(0, -1) +
            "\\" +
            c.charCodeAt(c.length - 1).toString(16) +
            " "
        : "\\" + c;
    }
    b.escapeSelector = function (c) {
      return (c + "").replace(Pi, pt);
    };
    var lt = k,
      Et = a;
    (function () {
      var c,
        p,
        _,
        y,
        w,
        D = Et,
        I,
        R,
        A,
        z,
        J,
        ne = b.expando,
        q = 0,
        se = 0,
        ze = rc(),
        ct = rc(),
        qe = rc(),
        gi = rc(),
        ri = function (O, V) {
          return O === V && (w = !0), 0;
        },
        Un =
          "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        zn =
          "(?:\\\\[\\da-fA-F]{1,6}" +
          Se +
          "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
        at =
          "\\[" +
          Se +
          "*(" +
          zn +
          ")(?:" +
          Se +
          "*([*^$|!~]?=)" +
          Se +
          `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` +
          zn +
          "))|)" +
          Se +
          "*\\]",
        bo =
          ":(" +
          zn +
          `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` +
          at +
          ")*)|.*)\\)|)",
        dt = new RegExp(Se + "+", "g"),
        jt = new RegExp("^" + Se + "*," + Se + "*"),
        ps = new RegExp("^" + Se + "*([>+~]|" + Se + ")" + Se + "*"),
        sh = new RegExp(Se + "|>"),
        $n = new RegExp(bo),
        ms = new RegExp("^" + zn + "$"),
        Wn = {
          ID: new RegExp("^#(" + zn + ")"),
          CLASS: new RegExp("^\\.(" + zn + ")"),
          TAG: new RegExp("^(" + zn + "|[*])"),
          ATTR: new RegExp("^" + at),
          PSEUDO: new RegExp("^" + bo),
          CHILD: new RegExp(
            "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
              Se +
              "*(even|odd|(([+-]|)(\\d*)n|)" +
              Se +
              "*(?:([+-]|)" +
              Se +
              "*(\\d+)|))" +
              Se +
              "*\\)|)",
            "i"
          ),
          bool: new RegExp("^(?:" + Un + ")$", "i"),
          needsContext: new RegExp(
            "^" +
              Se +
              "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
              Se +
              "*((?:-\\d)?\\d*)" +
              Se +
              "*\\)|)(?=[^-]|$)",
            "i"
          ),
        },
        Nr = /^(?:input|select|textarea|button)$/i,
        Lr = /^h\d$/i,
        pn = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        lh = /[+~]/,
        gr = new RegExp(
          "\\\\[\\da-fA-F]{1,6}" + Se + "?|\\\\([^\\r\\n\\f])",
          "g"
        ),
        _r = function (O, V) {
          var Y = "0x" + O.slice(1) - 65536;
          return (
            V ||
            (Y < 0
              ? String.fromCharCode(Y + 65536)
              : String.fromCharCode((Y >> 10) | 55296, (Y & 1023) | 56320))
          );
        },
        jC = function () {
          Vr();
        },
        UC = ac(
          function (O) {
            return O.disabled === !0 && re(O, "fieldset");
          },
          { dir: "parentNode", next: "legend" }
        );
      function zC() {
        try {
          return I.activeElement;
        } catch {}
      }
      try {
        D.apply((e = r.call(lt.childNodes)), lt.childNodes),
          e[lt.childNodes.length].nodeType;
      } catch {
        D = {
          apply: function (V, Y) {
            Et.apply(V, r.call(Y));
          },
          call: function (V) {
            Et.apply(V, r.call(arguments, 1));
          },
        };
      }
      function _t(O, V, Y, X) {
        var ie,
          he,
          ve,
          ke,
          ye,
          it,
          je,
          $e = V && V.ownerDocument,
          nt = V ? V.nodeType : 9;
        if (
          ((Y = Y || []),
          typeof O != "string" || !O || (nt !== 1 && nt !== 9 && nt !== 11))
        )
          return Y;
        if (!X && (Vr(V), (V = V || I), A)) {
          if (nt !== 11 && (ye = pn.exec(O)))
            if ((ie = ye[1])) {
              if (nt === 9)
                if ((ve = V.getElementById(ie))) {
                  if (ve.id === ie) return D.call(Y, ve), Y;
                } else return Y;
              else if (
                $e &&
                (ve = $e.getElementById(ie)) &&
                _t.contains(V, ve) &&
                ve.id === ie
              )
                return D.call(Y, ve), Y;
            } else {
              if (ye[2]) return D.apply(Y, V.getElementsByTagName(O)), Y;
              if ((ie = ye[3]) && V.getElementsByClassName)
                return D.apply(Y, V.getElementsByClassName(ie)), Y;
            }
          if (!gi[O + " "] && (!z || !z.test(O))) {
            if (((je = O), ($e = V), nt === 1 && (sh.test(O) || ps.test(O)))) {
              for (
                $e = (lh.test(O) && ch(V.parentNode)) || V,
                  ($e != V || !C.scope) &&
                    ((ke = V.getAttribute("id"))
                      ? (ke = b.escapeSelector(ke))
                      : V.setAttribute("id", (ke = ne))),
                  it = fs(O),
                  he = it.length;
                he--;

              )
                it[he] = (ke ? "#" + ke : ":scope") + " " + oc(it[he]);
              je = it.join(",");
            }
            try {
              return D.apply(Y, $e.querySelectorAll(je)), Y;
            } catch {
              gi(O, !0);
            } finally {
              ke === ne && V.removeAttribute("id");
            }
          }
        }
        return n_(O.replace(Ft, "$1"), V, Y, X);
      }
      function rc() {
        var O = [];
        function V(Y, X) {
          return (
            O.push(Y + " ") > p.cacheLength && delete V[O.shift()],
            (V[Y + " "] = X)
          );
        }
        return V;
      }
      function Tn(O) {
        return (O[ne] = !0), O;
      }
      function ia(O) {
        var V = I.createElement("fieldset");
        try {
          return !!O(V);
        } catch {
          return !1;
        } finally {
          V.parentNode && V.parentNode.removeChild(V), (V = null);
        }
      }
      function $C(O) {
        return function (V) {
          return re(V, "input") && V.type === O;
        };
      }
      function WC(O) {
        return function (V) {
          return (re(V, "input") || re(V, "button")) && V.type === O;
        };
      }
      function t_(O) {
        return function (V) {
          return "form" in V
            ? V.parentNode && V.disabled === !1
              ? "label" in V
                ? "label" in V.parentNode
                  ? V.parentNode.disabled === O
                  : V.disabled === O
                : V.isDisabled === O || (V.isDisabled !== !O && UC(V) === O)
              : V.disabled === O
            : "label" in V
            ? V.disabled === O
            : !1;
        };
      }
      function vo(O) {
        return Tn(function (V) {
          return (
            (V = +V),
            Tn(function (Y, X) {
              for (var ie, he = O([], Y.length, V), ve = he.length; ve--; )
                Y[(ie = he[ve])] && (Y[ie] = !(X[ie] = Y[ie]));
            })
          );
        });
      }
      function ch(O) {
        return O && typeof O.getElementsByTagName < "u" && O;
      }
      function Vr(O) {
        var V,
          Y = O ? O.ownerDocument || O : lt;
        return (
          Y == I ||
            Y.nodeType !== 9 ||
            !Y.documentElement ||
            ((I = Y),
            (R = I.documentElement),
            (A = !b.isXMLDoc(I)),
            (J = R.matches || R.webkitMatchesSelector || R.msMatchesSelector),
            R.msMatchesSelector &&
              lt != I &&
              (V = I.defaultView) &&
              V.top !== V &&
              V.addEventListener("unload", jC),
            (C.getById = ia(function (X) {
              return (
                (R.appendChild(X).id = b.expando),
                !I.getElementsByName || !I.getElementsByName(b.expando).length
              );
            })),
            (C.disconnectedMatch = ia(function (X) {
              return J.call(X, "*");
            })),
            (C.scope = ia(function () {
              return I.querySelectorAll(":scope");
            })),
            (C.cssHas = ia(function () {
              try {
                return I.querySelector(":has(*,:jqfake)"), !1;
              } catch {
                return !0;
              }
            })),
            C.getById
              ? ((p.filter.ID = function (X) {
                  var ie = X.replace(gr, _r);
                  return function (he) {
                    return he.getAttribute("id") === ie;
                  };
                }),
                (p.find.ID = function (X, ie) {
                  if (typeof ie.getElementById < "u" && A) {
                    var he = ie.getElementById(X);
                    return he ? [he] : [];
                  }
                }))
              : ((p.filter.ID = function (X) {
                  var ie = X.replace(gr, _r);
                  return function (he) {
                    var ve =
                      typeof he.getAttributeNode < "u" &&
                      he.getAttributeNode("id");
                    return ve && ve.value === ie;
                  };
                }),
                (p.find.ID = function (X, ie) {
                  if (typeof ie.getElementById < "u" && A) {
                    var he,
                      ve,
                      ke,
                      ye = ie.getElementById(X);
                    if (ye) {
                      if (
                        ((he = ye.getAttributeNode("id")), he && he.value === X)
                      )
                        return [ye];
                      for (
                        ke = ie.getElementsByName(X), ve = 0;
                        (ye = ke[ve++]);

                      )
                        if (
                          ((he = ye.getAttributeNode("id")),
                          he && he.value === X)
                        )
                          return [ye];
                    }
                    return [];
                  }
                })),
            (p.find.TAG = function (X, ie) {
              return typeof ie.getElementsByTagName < "u"
                ? ie.getElementsByTagName(X)
                : ie.querySelectorAll(X);
            }),
            (p.find.CLASS = function (X, ie) {
              if (typeof ie.getElementsByClassName < "u" && A)
                return ie.getElementsByClassName(X);
            }),
            (z = []),
            ia(function (X) {
              var ie;
              (R.appendChild(X).innerHTML =
                "<a id='" +
                ne +
                "' href='' disabled='disabled'></a><select id='" +
                ne +
                "-\r\\' disabled='disabled'><option selected=''></option></select>"),
                X.querySelectorAll("[selected]").length ||
                  z.push("\\[" + Se + "*(?:value|" + Un + ")"),
                X.querySelectorAll("[id~=" + ne + "-]").length || z.push("~="),
                X.querySelectorAll("a#" + ne + "+*").length ||
                  z.push(".#.+[+~]"),
                X.querySelectorAll(":checked").length || z.push(":checked"),
                (ie = I.createElement("input")),
                ie.setAttribute("type", "hidden"),
                X.appendChild(ie).setAttribute("name", "D"),
                (R.appendChild(X).disabled = !0),
                X.querySelectorAll(":disabled").length !== 2 &&
                  z.push(":enabled", ":disabled"),
                (ie = I.createElement("input")),
                ie.setAttribute("name", ""),
                X.appendChild(ie),
                X.querySelectorAll("[name='']").length ||
                  z.push("\\[" + Se + "*name" + Se + "*=" + Se + `*(?:''|"")`);
            }),
            C.cssHas || z.push(":has"),
            (z = z.length && new RegExp(z.join("|"))),
            (ri = function (X, ie) {
              if (X === ie) return (w = !0), 0;
              var he = !X.compareDocumentPosition - !ie.compareDocumentPosition;
              return (
                he ||
                ((he =
                  (X.ownerDocument || X) == (ie.ownerDocument || ie)
                    ? X.compareDocumentPosition(ie)
                    : 1),
                he & 1 ||
                (!C.sortDetached && ie.compareDocumentPosition(X) === he)
                  ? X === I || (X.ownerDocument == lt && _t.contains(lt, X))
                    ? -1
                    : ie === I ||
                      (ie.ownerDocument == lt && _t.contains(lt, ie))
                    ? 1
                    : y
                    ? s.call(y, X) - s.call(y, ie)
                    : 0
                  : he & 4
                  ? -1
                  : 1)
              );
            })),
          I
        );
      }
      (_t.matches = function (O, V) {
        return _t(O, null, null, V);
      }),
        (_t.matchesSelector = function (O, V) {
          if ((Vr(O), A && !gi[V + " "] && (!z || !z.test(V))))
            try {
              var Y = J.call(O, V);
              if (
                Y ||
                C.disconnectedMatch ||
                (O.document && O.document.nodeType !== 11)
              )
                return Y;
            } catch {
              gi(V, !0);
            }
          return _t(V, I, null, [O]).length > 0;
        }),
        (_t.contains = function (O, V) {
          return (O.ownerDocument || O) != I && Vr(O), b.contains(O, V);
        }),
        (_t.attr = function (O, V) {
          (O.ownerDocument || O) != I && Vr(O);
          var Y = p.attrHandle[V.toLowerCase()],
            X =
              Y && m.call(p.attrHandle, V.toLowerCase()) ? Y(O, V, !A) : void 0;
          return X !== void 0 ? X : O.getAttribute(V);
        }),
        (_t.error = function (O) {
          throw new Error("Syntax error, unrecognized expression: " + O);
        }),
        (b.uniqueSort = function (O) {
          var V,
            Y = [],
            X = 0,
            ie = 0;
          if (
            ((w = !C.sortStable),
            (y = !C.sortStable && r.call(O, 0)),
            He.call(O, ri),
            w)
          ) {
            for (; (V = O[ie++]); ) V === O[ie] && (X = Y.push(ie));
            for (; X--; ) Ge.call(O, Y[X], 1);
          }
          return (y = null), O;
        }),
        (b.fn.uniqueSort = function () {
          return this.pushStack(b.uniqueSort(r.apply(this)));
        }),
        (p = b.expr =
          {
            cacheLength: 50,
            createPseudo: Tn,
            match: Wn,
            attrHandle: {},
            find: {},
            relative: {
              ">": { dir: "parentNode", first: !0 },
              " ": { dir: "parentNode" },
              "+": { dir: "previousSibling", first: !0 },
              "~": { dir: "previousSibling" },
            },
            preFilter: {
              ATTR: function (O) {
                return (
                  (O[1] = O[1].replace(gr, _r)),
                  (O[3] = (O[3] || O[4] || O[5] || "").replace(gr, _r)),
                  O[2] === "~=" && (O[3] = " " + O[3] + " "),
                  O.slice(0, 4)
                );
              },
              CHILD: function (O) {
                return (
                  (O[1] = O[1].toLowerCase()),
                  O[1].slice(0, 3) === "nth"
                    ? (O[3] || _t.error(O[0]),
                      (O[4] = +(O[4]
                        ? O[5] + (O[6] || 1)
                        : 2 * (O[3] === "even" || O[3] === "odd"))),
                      (O[5] = +(O[7] + O[8] || O[3] === "odd")))
                    : O[3] && _t.error(O[0]),
                  O
                );
              },
              PSEUDO: function (O) {
                var V,
                  Y = !O[6] && O[2];
                return Wn.CHILD.test(O[0])
                  ? null
                  : (O[3]
                      ? (O[2] = O[4] || O[5] || "")
                      : Y &&
                        $n.test(Y) &&
                        (V = fs(Y, !0)) &&
                        (V = Y.indexOf(")", Y.length - V) - Y.length) &&
                        ((O[0] = O[0].slice(0, V)), (O[2] = Y.slice(0, V))),
                    O.slice(0, 3));
              },
            },
            filter: {
              TAG: function (O) {
                var V = O.replace(gr, _r).toLowerCase();
                return O === "*"
                  ? function () {
                      return !0;
                    }
                  : function (Y) {
                      return re(Y, V);
                    };
              },
              CLASS: function (O) {
                var V = ze[O + " "];
                return (
                  V ||
                  ((V = new RegExp("(^|" + Se + ")" + O + "(" + Se + "|$)")) &&
                    ze(O, function (Y) {
                      return V.test(
                        (typeof Y.className == "string" && Y.className) ||
                          (typeof Y.getAttribute < "u" &&
                            Y.getAttribute("class")) ||
                          ""
                      );
                    }))
                );
              },
              ATTR: function (O, V, Y) {
                return function (X) {
                  var ie = _t.attr(X, O);
                  return ie == null
                    ? V === "!="
                    : V
                    ? ((ie += ""),
                      V === "="
                        ? ie === Y
                        : V === "!="
                        ? ie !== Y
                        : V === "^="
                        ? Y && ie.indexOf(Y) === 0
                        : V === "*="
                        ? Y && ie.indexOf(Y) > -1
                        : V === "$="
                        ? Y && ie.slice(-Y.length) === Y
                        : V === "~="
                        ? (" " + ie.replace(dt, " ") + " ").indexOf(Y) > -1
                        : V === "|="
                        ? ie === Y || ie.slice(0, Y.length + 1) === Y + "-"
                        : !1)
                    : !0;
                };
              },
              CHILD: function (O, V, Y, X, ie) {
                var he = O.slice(0, 3) !== "nth",
                  ve = O.slice(-4) !== "last",
                  ke = V === "of-type";
                return X === 1 && ie === 0
                  ? function (ye) {
                      return !!ye.parentNode;
                    }
                  : function (ye, it, je) {
                      var $e,
                        nt,
                        Le,
                        Dt,
                        Li,
                        Ci = he !== ve ? "nextSibling" : "previousSibling",
                        mn = ye.parentNode,
                        Gn = ke && ye.nodeName.toLowerCase(),
                        na = !je && !ke,
                        Ai = !1;
                      if (mn) {
                        if (he) {
                          for (; Ci; ) {
                            for (Le = ye; (Le = Le[Ci]); )
                              if (ke ? re(Le, Gn) : Le.nodeType === 1)
                                return !1;
                            Li = Ci = O === "only" && !Li && "nextSibling";
                          }
                          return !0;
                        }
                        if (
                          ((Li = [ve ? mn.firstChild : mn.lastChild]), ve && na)
                        ) {
                          for (
                            nt = mn[ne] || (mn[ne] = {}),
                              $e = nt[O] || [],
                              Dt = $e[0] === q && $e[1],
                              Ai = Dt && $e[2],
                              Le = Dt && mn.childNodes[Dt];
                            (Le =
                              (++Dt && Le && Le[Ci]) ||
                              (Ai = Dt = 0) ||
                              Li.pop());

                          )
                            if (Le.nodeType === 1 && ++Ai && Le === ye) {
                              nt[O] = [q, Dt, Ai];
                              break;
                            }
                        } else if (
                          (na &&
                            ((nt = ye[ne] || (ye[ne] = {})),
                            ($e = nt[O] || []),
                            (Dt = $e[0] === q && $e[1]),
                            (Ai = Dt)),
                          Ai === !1)
                        )
                          for (
                            ;
                            (Le =
                              (++Dt && Le && Le[Ci]) ||
                              (Ai = Dt = 0) ||
                              Li.pop()) &&
                            !(
                              (ke ? re(Le, Gn) : Le.nodeType === 1) &&
                              ++Ai &&
                              (na &&
                                ((nt = Le[ne] || (Le[ne] = {})),
                                (nt[O] = [q, Ai])),
                              Le === ye)
                            );

                          );
                        return (
                          (Ai -= ie), Ai === X || (Ai % X === 0 && Ai / X >= 0)
                        );
                      }
                    };
              },
              PSEUDO: function (O, V) {
                var Y,
                  X =
                    p.pseudos[O] ||
                    p.setFilters[O.toLowerCase()] ||
                    _t.error("unsupported pseudo: " + O);
                return X[ne]
                  ? X(V)
                  : X.length > 1
                  ? ((Y = [O, O, "", V]),
                    p.setFilters.hasOwnProperty(O.toLowerCase())
                      ? Tn(function (ie, he) {
                          for (var ve, ke = X(ie, V), ye = ke.length; ye--; )
                            (ve = s.call(ie, ke[ye])),
                              (ie[ve] = !(he[ve] = ke[ye]));
                        })
                      : function (ie) {
                          return X(ie, 0, Y);
                        })
                  : X;
              },
            },
            pseudos: {
              not: Tn(function (O) {
                var V = [],
                  Y = [],
                  X = ph(O.replace(Ft, "$1"));
                return X[ne]
                  ? Tn(function (ie, he, ve, ke) {
                      for (
                        var ye, it = X(ie, null, ke, []), je = ie.length;
                        je--;

                      )
                        (ye = it[je]) && (ie[je] = !(he[je] = ye));
                    })
                  : function (ie, he, ve) {
                      return (
                        (V[0] = ie), X(V, null, ve, Y), (V[0] = null), !Y.pop()
                      );
                    };
              }),
              has: Tn(function (O) {
                return function (V) {
                  return _t(O, V).length > 0;
                };
              }),
              contains: Tn(function (O) {
                return (
                  (O = O.replace(gr, _r)),
                  function (V) {
                    return (V.textContent || b.text(V)).indexOf(O) > -1;
                  }
                );
              }),
              lang: Tn(function (O) {
                return (
                  ms.test(O || "") || _t.error("unsupported lang: " + O),
                  (O = O.replace(gr, _r).toLowerCase()),
                  function (V) {
                    var Y;
                    do
                      if (
                        (Y = A
                          ? V.lang
                          : V.getAttribute("xml:lang") ||
                            V.getAttribute("lang"))
                      )
                        return (
                          (Y = Y.toLowerCase()),
                          Y === O || Y.indexOf(O + "-") === 0
                        );
                    while ((V = V.parentNode) && V.nodeType === 1);
                    return !1;
                  }
                );
              }),
              target: function (O) {
                var V = n.location && n.location.hash;
                return V && V.slice(1) === O.id;
              },
              root: function (O) {
                return O === R;
              },
              focus: function (O) {
                return (
                  O === zC() &&
                  I.hasFocus() &&
                  !!(O.type || O.href || ~O.tabIndex)
                );
              },
              enabled: t_(!1),
              disabled: t_(!0),
              checked: function (O) {
                return (
                  (re(O, "input") && !!O.checked) ||
                  (re(O, "option") && !!O.selected)
                );
              },
              selected: function (O) {
                return (
                  O.parentNode && O.parentNode.selectedIndex, O.selected === !0
                );
              },
              empty: function (O) {
                for (O = O.firstChild; O; O = O.nextSibling)
                  if (O.nodeType < 6) return !1;
                return !0;
              },
              parent: function (O) {
                return !p.pseudos.empty(O);
              },
              header: function (O) {
                return Lr.test(O.nodeName);
              },
              input: function (O) {
                return Nr.test(O.nodeName);
              },
              button: function (O) {
                return (
                  (re(O, "input") && O.type === "button") || re(O, "button")
                );
              },
              text: function (O) {
                var V;
                return (
                  re(O, "input") &&
                  O.type === "text" &&
                  ((V = O.getAttribute("type")) == null ||
                    V.toLowerCase() === "text")
                );
              },
              first: vo(function () {
                return [0];
              }),
              last: vo(function (O, V) {
                return [V - 1];
              }),
              eq: vo(function (O, V, Y) {
                return [Y < 0 ? Y + V : Y];
              }),
              even: vo(function (O, V) {
                for (var Y = 0; Y < V; Y += 2) O.push(Y);
                return O;
              }),
              odd: vo(function (O, V) {
                for (var Y = 1; Y < V; Y += 2) O.push(Y);
                return O;
              }),
              lt: vo(function (O, V, Y) {
                var X;
                for (
                  Y < 0 ? (X = Y + V) : Y > V ? (X = V) : (X = Y);
                  --X >= 0;

                )
                  O.push(X);
                return O;
              }),
              gt: vo(function (O, V, Y) {
                for (var X = Y < 0 ? Y + V : Y; ++X < V; ) O.push(X);
                return O;
              }),
            },
          }),
        (p.pseudos.nth = p.pseudos.eq);
      for (c in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })
        p.pseudos[c] = $C(c);
      for (c in { submit: !0, reset: !0 }) p.pseudos[c] = WC(c);
      function i_() {}
      (i_.prototype = p.filters = p.pseudos), (p.setFilters = new i_());
      function fs(O, V) {
        var Y,
          X,
          ie,
          he,
          ve,
          ke,
          ye,
          it = ct[O + " "];
        if (it) return V ? 0 : it.slice(0);
        for (ve = O, ke = [], ye = p.preFilter; ve; ) {
          (!Y || (X = jt.exec(ve))) &&
            (X && (ve = ve.slice(X[0].length) || ve), ke.push((ie = []))),
            (Y = !1),
            (X = ps.exec(ve)) &&
              ((Y = X.shift()),
              ie.push({ value: Y, type: X[0].replace(Ft, " ") }),
              (ve = ve.slice(Y.length)));
          for (he in p.filter)
            (X = Wn[he].exec(ve)) &&
              (!ye[he] || (X = ye[he](X))) &&
              ((Y = X.shift()),
              ie.push({ value: Y, type: he, matches: X }),
              (ve = ve.slice(Y.length)));
          if (!Y) break;
        }
        return V ? ve.length : ve ? _t.error(O) : ct(O, ke).slice(0);
      }
      function oc(O) {
        for (var V = 0, Y = O.length, X = ""; V < Y; V++) X += O[V].value;
        return X;
      }
      function ac(O, V, Y) {
        var X = V.dir,
          ie = V.next,
          he = ie || X,
          ve = Y && he === "parentNode",
          ke = se++;
        return V.first
          ? function (ye, it, je) {
              for (; (ye = ye[X]); )
                if (ye.nodeType === 1 || ve) return O(ye, it, je);
              return !1;
            }
          : function (ye, it, je) {
              var $e,
                nt,
                Le = [q, ke];
              if (je) {
                for (; (ye = ye[X]); )
                  if ((ye.nodeType === 1 || ve) && O(ye, it, je)) return !0;
              } else
                for (; (ye = ye[X]); )
                  if (ye.nodeType === 1 || ve)
                    if (((nt = ye[ne] || (ye[ne] = {})), ie && re(ye, ie)))
                      ye = ye[X] || ye;
                    else {
                      if (($e = nt[he]) && $e[0] === q && $e[1] === ke)
                        return (Le[2] = $e[2]);
                      if (((nt[he] = Le), (Le[2] = O(ye, it, je)))) return !0;
                    }
              return !1;
            };
      }
      function dh(O) {
        return O.length > 1
          ? function (V, Y, X) {
              for (var ie = O.length; ie--; ) if (!O[ie](V, Y, X)) return !1;
              return !0;
            }
          : O[0];
      }
      function GC(O, V, Y) {
        for (var X = 0, ie = V.length; X < ie; X++) _t(O, V[X], Y);
        return Y;
      }
      function sc(O, V, Y, X, ie) {
        for (
          var he, ve = [], ke = 0, ye = O.length, it = V != null;
          ke < ye;
          ke++
        )
          (he = O[ke]) &&
            (!Y || Y(he, X, ie)) &&
            (ve.push(he), it && V.push(ke));
        return ve;
      }
      function uh(O, V, Y, X, ie, he) {
        return (
          X && !X[ne] && (X = uh(X)),
          ie && !ie[ne] && (ie = uh(ie, he)),
          Tn(function (ve, ke, ye, it) {
            var je,
              $e,
              nt,
              Le,
              Dt = [],
              Li = [],
              Ci = ke.length,
              mn = ve || GC(V || "*", ye.nodeType ? [ye] : ye, []),
              Gn = O && (ve || !V) ? sc(mn, Dt, O, ye, it) : mn;
            if (
              (Y
                ? ((Le = ie || (ve ? O : Ci || X) ? [] : ke), Y(Gn, Le, ye, it))
                : (Le = Gn),
              X)
            )
              for (je = sc(Le, Li), X(je, [], ye, it), $e = je.length; $e--; )
                (nt = je[$e]) && (Le[Li[$e]] = !(Gn[Li[$e]] = nt));
            if (ve) {
              if (ie || O) {
                if (ie) {
                  for (je = [], $e = Le.length; $e--; )
                    (nt = Le[$e]) && je.push((Gn[$e] = nt));
                  ie(null, (Le = []), je, it);
                }
                for ($e = Le.length; $e--; )
                  (nt = Le[$e]) &&
                    (je = ie ? s.call(ve, nt) : Dt[$e]) > -1 &&
                    (ve[je] = !(ke[je] = nt));
              }
            } else (Le = sc(Le === ke ? Le.splice(Ci, Le.length) : Le)), ie ? ie(null, ke, Le, it) : D.apply(ke, Le);
          })
        );
      }
      function hh(O) {
        for (
          var V,
            Y,
            X,
            ie = O.length,
            he = p.relative[O[0].type],
            ve = he || p.relative[" "],
            ke = he ? 1 : 0,
            ye = ac(
              function ($e) {
                return $e === V;
              },
              ve,
              !0
            ),
            it = ac(
              function ($e) {
                return s.call(V, $e) > -1;
              },
              ve,
              !0
            ),
            je = [
              function ($e, nt, Le) {
                var Dt =
                  (!he && (Le || nt != _)) ||
                  ((V = nt).nodeType ? ye($e, nt, Le) : it($e, nt, Le));
                return (V = null), Dt;
              },
            ];
          ke < ie;
          ke++
        )
          if ((Y = p.relative[O[ke].type])) je = [ac(dh(je), Y)];
          else {
            if (
              ((Y = p.filter[O[ke].type].apply(null, O[ke].matches)), Y[ne])
            ) {
              for (X = ++ke; X < ie && !p.relative[O[X].type]; X++);
              return uh(
                ke > 1 && dh(je),
                ke > 1 &&
                  oc(
                    O.slice(0, ke - 1).concat({
                      value: O[ke - 2].type === " " ? "*" : "",
                    })
                  ).replace(Ft, "$1"),
                Y,
                ke < X && hh(O.slice(ke, X)),
                X < ie && hh((O = O.slice(X))),
                X < ie && oc(O)
              );
            }
            je.push(Y);
          }
        return dh(je);
      }
      function YC(O, V) {
        var Y = V.length > 0,
          X = O.length > 0,
          ie = function (he, ve, ke, ye, it) {
            var je,
              $e,
              nt,
              Le = 0,
              Dt = "0",
              Li = he && [],
              Ci = [],
              mn = _,
              Gn = he || (X && p.find.TAG("*", it)),
              na = (q += mn == null ? 1 : Math.random() || 0.1),
              Ai = Gn.length;
            for (
              it && (_ = ve == I || ve || it);
              Dt !== Ai && (je = Gn[Dt]) != null;
              Dt++
            ) {
              if (X && je) {
                for (
                  $e = 0, !ve && je.ownerDocument != I && (Vr(je), (ke = !A));
                  (nt = O[$e++]);

                )
                  if (nt(je, ve || I, ke)) {
                    D.call(ye, je);
                    break;
                  }
                it && (q = na);
              }
              Y && ((je = !nt && je) && Le--, he && Li.push(je));
            }
            if (((Le += Dt), Y && Dt !== Le)) {
              for ($e = 0; (nt = V[$e++]); ) nt(Li, Ci, ve, ke);
              if (he) {
                if (Le > 0)
                  for (; Dt--; ) Li[Dt] || Ci[Dt] || (Ci[Dt] = _e.call(ye));
                Ci = sc(Ci);
              }
              D.apply(ye, Ci),
                it &&
                  !he &&
                  Ci.length > 0 &&
                  Le + V.length > 1 &&
                  b.uniqueSort(ye);
            }
            return it && ((q = na), (_ = mn)), Li;
          };
        return Y ? Tn(ie) : ie;
      }
      function ph(O, V) {
        var Y,
          X = [],
          ie = [],
          he = qe[O + " "];
        if (!he) {
          for (V || (V = fs(O)), Y = V.length; Y--; )
            (he = hh(V[Y])), he[ne] ? X.push(he) : ie.push(he);
          (he = qe(O, YC(ie, X))), (he.selector = O);
        }
        return he;
      }
      function n_(O, V, Y, X) {
        var ie,
          he,
          ve,
          ke,
          ye,
          it = typeof O == "function" && O,
          je = !X && fs((O = it.selector || O));
        if (((Y = Y || []), je.length === 1)) {
          if (
            ((he = je[0] = je[0].slice(0)),
            he.length > 2 &&
              (ve = he[0]).type === "ID" &&
              V.nodeType === 9 &&
              A &&
              p.relative[he[1].type])
          ) {
            if (
              ((V = (p.find.ID(ve.matches[0].replace(gr, _r), V) || [])[0]), V)
            )
              it && (V = V.parentNode);
            else return Y;
            O = O.slice(he.shift().value.length);
          }
          for (
            ie = Wn.needsContext.test(O) ? 0 : he.length;
            ie-- && ((ve = he[ie]), !p.relative[(ke = ve.type)]);

          )
            if (
              (ye = p.find[ke]) &&
              (X = ye(
                ve.matches[0].replace(gr, _r),
                (lh.test(he[0].type) && ch(V.parentNode)) || V
              ))
            ) {
              if ((he.splice(ie, 1), (O = X.length && oc(he)), !O))
                return D.apply(Y, X), Y;
              break;
            }
        }
        return (
          (it || ph(O, je))(
            X,
            V,
            !A,
            Y,
            !V || (lh.test(O) && ch(V.parentNode)) || V
          ),
          Y
        );
      }
      (C.sortStable = ne.split("").sort(ri).join("") === ne),
        Vr(),
        (C.sortDetached = ia(function (O) {
          return O.compareDocumentPosition(I.createElement("fieldset")) & 1;
        })),
        (b.find = _t),
        (b.expr[":"] = b.expr.pseudos),
        (b.unique = b.uniqueSort),
        (_t.compile = ph),
        (_t.select = n_),
        (_t.setDocument = Vr),
        (_t.tokenize = fs),
        (_t.escape = b.escapeSelector),
        (_t.getText = b.text),
        (_t.isXML = b.isXMLDoc),
        (_t.selectors = b.expr),
        (_t.support = b.support),
        (_t.uniqueSort = b.uniqueSort);
    })();
    var hi = function (c, p, _) {
        for (var y = [], w = _ !== void 0; (c = c[p]) && c.nodeType !== 9; )
          if (c.nodeType === 1) {
            if (w && b(c).is(_)) break;
            y.push(c);
          }
        return y;
      },
      ni = function (c, p) {
        for (var _ = []; c; c = c.nextSibling)
          c.nodeType === 1 && c !== p && _.push(c);
        return _;
      },
      ur = b.expr.match.needsContext,
      po = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function Bn(c, p, _) {
      return S(p)
        ? b.grep(c, function (y, w) {
            return !!p.call(y, w, y) !== _;
          })
        : p.nodeType
        ? b.grep(c, function (y) {
            return (y === p) !== _;
          })
        : typeof p != "string"
        ? b.grep(c, function (y) {
            return s.call(p, y) > -1 !== _;
          })
        : b.filter(p, c, _);
    }
    (b.filter = function (c, p, _) {
      var y = p[0];
      return (
        _ && (c = ":not(" + c + ")"),
        p.length === 1 && y.nodeType === 1
          ? b.find.matchesSelector(y, c)
            ? [y]
            : []
          : b.find.matches(
              c,
              b.grep(p, function (w) {
                return w.nodeType === 1;
              })
            )
      );
    }),
      b.fn.extend({
        find: function (c) {
          var p,
            _,
            y = this.length,
            w = this;
          if (typeof c != "string")
            return this.pushStack(
              b(c).filter(function () {
                for (p = 0; p < y; p++) if (b.contains(w[p], this)) return !0;
              })
            );
          for (_ = this.pushStack([]), p = 0; p < y; p++) b.find(c, w[p], _);
          return y > 1 ? b.uniqueSort(_) : _;
        },
        filter: function (c) {
          return this.pushStack(Bn(this, c || [], !1));
        },
        not: function (c) {
          return this.pushStack(Bn(this, c || [], !0));
        },
        is: function (c) {
          return !!Bn(
            this,
            typeof c == "string" && ur.test(c) ? b(c) : c || [],
            !1
          ).length;
        },
      });
    var Fr,
      hr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
      mo = (b.fn.init = function (c, p, _) {
        var y, w;
        if (!c) return this;
        if (((_ = _ || Fr), typeof c == "string"))
          if (
            (c[0] === "<" && c[c.length - 1] === ">" && c.length >= 3
              ? (y = [null, c, null])
              : (y = hr.exec(c)),
            y && (y[1] || !p))
          )
            if (y[1]) {
              if (
                ((p = p instanceof b ? p[0] : p),
                b.merge(
                  this,
                  b.parseHTML(
                    y[1],
                    p && p.nodeType ? p.ownerDocument || p : k,
                    !0
                  )
                ),
                po.test(y[1]) && b.isPlainObject(p))
              )
                for (y in p) S(this[y]) ? this[y](p[y]) : this.attr(y, p[y]);
              return this;
            } else
              return (
                (w = k.getElementById(y[2])),
                w && ((this[0] = w), (this.length = 1)),
                this
              );
          else
            return !p || p.jquery
              ? (p || _).find(c)
              : this.constructor(p).find(c);
        else {
          if (c.nodeType) return (this[0] = c), (this.length = 1), this;
          if (S(c)) return _.ready !== void 0 ? _.ready(c) : c(b);
        }
        return b.makeArray(c, this);
      });
    (mo.prototype = b.fn), (Fr = b(k));
    var pr = /^(?:parents|prev(?:Until|All))/,
      Qx = { children: !0, contents: !0, next: !0, prev: !0 };
    b.fn.extend({
      has: function (c) {
        var p = b(c, this),
          _ = p.length;
        return this.filter(function () {
          for (var y = 0; y < _; y++) if (b.contains(this, p[y])) return !0;
        });
      },
      closest: function (c, p) {
        var _,
          y = 0,
          w = this.length,
          D = [],
          I = typeof c != "string" && b(c);
        if (!ur.test(c)) {
          for (; y < w; y++)
            for (_ = this[y]; _ && _ !== p; _ = _.parentNode)
              if (
                _.nodeType < 11 &&
                (I
                  ? I.index(_) > -1
                  : _.nodeType === 1 && b.find.matchesSelector(_, c))
              ) {
                D.push(_);
                break;
              }
        }
        return this.pushStack(D.length > 1 ? b.uniqueSort(D) : D);
      },
      index: function (c) {
        return c
          ? typeof c == "string"
            ? s.call(b(c), this[0])
            : s.call(this, c.jquery ? c[0] : c)
          : this[0] && this[0].parentNode
          ? this.first().prevAll().length
          : -1;
      },
      add: function (c, p) {
        return this.pushStack(b.uniqueSort(b.merge(this.get(), b(c, p))));
      },
      addBack: function (c) {
        return this.add(
          c == null ? this.prevObject : this.prevObject.filter(c)
        );
      },
    });
    function Cg(c, p) {
      for (; (c = c[p]) && c.nodeType !== 1; );
      return c;
    }
    b.each(
      {
        parent: function (c) {
          var p = c.parentNode;
          return p && p.nodeType !== 11 ? p : null;
        },
        parents: function (c) {
          return hi(c, "parentNode");
        },
        parentsUntil: function (c, p, _) {
          return hi(c, "parentNode", _);
        },
        next: function (c) {
          return Cg(c, "nextSibling");
        },
        prev: function (c) {
          return Cg(c, "previousSibling");
        },
        nextAll: function (c) {
          return hi(c, "nextSibling");
        },
        prevAll: function (c) {
          return hi(c, "previousSibling");
        },
        nextUntil: function (c, p, _) {
          return hi(c, "nextSibling", _);
        },
        prevUntil: function (c, p, _) {
          return hi(c, "previousSibling", _);
        },
        siblings: function (c) {
          return ni((c.parentNode || {}).firstChild, c);
        },
        children: function (c) {
          return ni(c.firstChild);
        },
        contents: function (c) {
          return c.contentDocument != null && i(c.contentDocument)
            ? c.contentDocument
            : (re(c, "template") && (c = c.content || c),
              b.merge([], c.childNodes));
        },
      },
      function (c, p) {
        b.fn[c] = function (_, y) {
          var w = b.map(this, p, _);
          return (
            c.slice(-5) !== "Until" && (y = _),
            y && typeof y == "string" && (w = b.filter(y, w)),
            this.length > 1 &&
              (Qx[c] || b.uniqueSort(w), pr.test(c) && w.reverse()),
            this.pushStack(w)
          );
        };
      }
    );
    var Hn = /[^\x20\t\r\n\f]+/g;
    function Xx(c) {
      var p = {};
      return (
        b.each(c.match(Hn) || [], function (_, y) {
          p[y] = !0;
        }),
        p
      );
    }
    b.Callbacks = function (c) {
      c = typeof c == "string" ? Xx(c) : b.extend({}, c);
      var p,
        _,
        y,
        w,
        D = [],
        I = [],
        R = -1,
        A = function () {
          for (w = w || c.once, y = p = !0; I.length; R = -1)
            for (_ = I.shift(); ++R < D.length; )
              D[R].apply(_[0], _[1]) === !1 &&
                c.stopOnFalse &&
                ((R = D.length), (_ = !1));
          c.memory || (_ = !1), (p = !1), w && (_ ? (D = []) : (D = ""));
        },
        z = {
          add: function () {
            return (
              D &&
                (_ && !p && ((R = D.length - 1), I.push(_)),
                (function J(ne) {
                  b.each(ne, function (q, se) {
                    S(se)
                      ? (!c.unique || !z.has(se)) && D.push(se)
                      : se && se.length && K(se) !== "string" && J(se);
                  });
                })(arguments),
                _ && !p && A()),
              this
            );
          },
          remove: function () {
            return (
              b.each(arguments, function (J, ne) {
                for (var q; (q = b.inArray(ne, D, q)) > -1; )
                  D.splice(q, 1), q <= R && R--;
              }),
              this
            );
          },
          has: function (J) {
            return J ? b.inArray(J, D) > -1 : D.length > 0;
          },
          empty: function () {
            return D && (D = []), this;
          },
          disable: function () {
            return (w = I = []), (D = _ = ""), this;
          },
          disabled: function () {
            return !D;
          },
          lock: function () {
            return (w = I = []), !_ && !p && (D = _ = ""), this;
          },
          locked: function () {
            return !!w;
          },
          fireWith: function (J, ne) {
            return (
              w ||
                ((ne = ne || []),
                (ne = [J, ne.slice ? ne.slice() : ne]),
                I.push(ne),
                p || A()),
              this
            );
          },
          fire: function () {
            return z.fireWith(this, arguments), this;
          },
          fired: function () {
            return !!y;
          },
        };
      return z;
    };
    function Ko(c) {
      return c;
    }
    function Xl(c) {
      throw c;
    }
    function wg(c, p, _, y) {
      var w;
      try {
        c && S((w = c.promise))
          ? w.call(c).done(p).fail(_)
          : c && S((w = c.then))
          ? w.call(c, p, _)
          : p.apply(void 0, [c].slice(y));
      } catch (D) {
        _.apply(void 0, [D]);
      }
    }
    b.extend({
      Deferred: function (c) {
        var p = [
            [
              "notify",
              "progress",
              b.Callbacks("memory"),
              b.Callbacks("memory"),
              2,
            ],
            [
              "resolve",
              "done",
              b.Callbacks("once memory"),
              b.Callbacks("once memory"),
              0,
              "resolved",
            ],
            [
              "reject",
              "fail",
              b.Callbacks("once memory"),
              b.Callbacks("once memory"),
              1,
              "rejected",
            ],
          ],
          _ = "pending",
          y = {
            state: function () {
              return _;
            },
            always: function () {
              return w.done(arguments).fail(arguments), this;
            },
            catch: function (D) {
              return y.then(null, D);
            },
            pipe: function () {
              var D = arguments;
              return b
                .Deferred(function (I) {
                  b.each(p, function (R, A) {
                    var z = S(D[A[4]]) && D[A[4]];
                    w[A[1]](function () {
                      var J = z && z.apply(this, arguments);
                      J && S(J.promise)
                        ? J.promise()
                            .progress(I.notify)
                            .done(I.resolve)
                            .fail(I.reject)
                        : I[A[0] + "With"](this, z ? [J] : arguments);
                    });
                  }),
                    (D = null);
                })
                .promise();
            },
            then: function (D, I, R) {
              var A = 0;
              function z(J, ne, q, se) {
                return function () {
                  var ze = this,
                    ct = arguments,
                    qe = function () {
                      var ri, Un;
                      if (!(J < A)) {
                        if (((ri = q.apply(ze, ct)), ri === ne.promise()))
                          throw new TypeError("Thenable self-resolution");
                        (Un =
                          ri &&
                          (typeof ri == "object" || typeof ri == "function") &&
                          ri.then),
                          S(Un)
                            ? se
                              ? Un.call(ri, z(A, ne, Ko, se), z(A, ne, Xl, se))
                              : (A++,
                                Un.call(
                                  ri,
                                  z(A, ne, Ko, se),
                                  z(A, ne, Xl, se),
                                  z(A, ne, Ko, ne.notifyWith)
                                ))
                            : (q !== Ko && ((ze = void 0), (ct = [ri])),
                              (se || ne.resolveWith)(ze, ct));
                      }
                    },
                    gi = se
                      ? qe
                      : function () {
                          try {
                            qe();
                          } catch (ri) {
                            b.Deferred.exceptionHook &&
                              b.Deferred.exceptionHook(ri, gi.error),
                              J + 1 >= A &&
                                (q !== Xl && ((ze = void 0), (ct = [ri])),
                                ne.rejectWith(ze, ct));
                          }
                        };
                  J
                    ? gi()
                    : (b.Deferred.getErrorHook
                        ? (gi.error = b.Deferred.getErrorHook())
                        : b.Deferred.getStackHook &&
                          (gi.error = b.Deferred.getStackHook()),
                      n.setTimeout(gi));
                };
              }
              return b
                .Deferred(function (J) {
                  p[0][3].add(z(0, J, S(R) ? R : Ko, J.notifyWith)),
                    p[1][3].add(z(0, J, S(D) ? D : Ko)),
                    p[2][3].add(z(0, J, S(I) ? I : Xl));
                })
                .promise();
            },
            promise: function (D) {
              return D != null ? b.extend(D, y) : y;
            },
          },
          w = {};
        return (
          b.each(p, function (D, I) {
            var R = I[2],
              A = I[5];
            (y[I[1]] = R.add),
              A &&
                R.add(
                  function () {
                    _ = A;
                  },
                  p[3 - D][2].disable,
                  p[3 - D][3].disable,
                  p[0][2].lock,
                  p[0][3].lock
                ),
              R.add(I[3].fire),
              (w[I[0]] = function () {
                return (
                  w[I[0] + "With"](this === w ? void 0 : this, arguments), this
                );
              }),
              (w[I[0] + "With"] = R.fireWith);
          }),
          y.promise(w),
          c && c.call(w, w),
          w
        );
      },
      when: function (c) {
        var p = arguments.length,
          _ = p,
          y = Array(_),
          w = r.call(arguments),
          D = b.Deferred(),
          I = function (R) {
            return function (A) {
              (y[R] = this),
                (w[R] = arguments.length > 1 ? r.call(arguments) : A),
                --p || D.resolveWith(y, w);
            };
          };
        if (
          p <= 1 &&
          (wg(c, D.done(I(_)).resolve, D.reject, !p),
          D.state() === "pending" || S(w[_] && w[_].then))
        )
          return D.then();
        for (; _--; ) wg(w[_], I(_), D.reject);
        return D.promise();
      },
    });
    var Zx = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    (b.Deferred.exceptionHook = function (c, p) {
      n.console &&
        n.console.warn &&
        c &&
        Zx.test(c.name) &&
        n.console.warn("jQuery.Deferred exception: " + c.message, c.stack, p);
    }),
      (b.readyException = function (c) {
        n.setTimeout(function () {
          throw c;
        });
      });
    var Gu = b.Deferred();
    (b.fn.ready = function (c) {
      return (
        Gu.then(c).catch(function (p) {
          b.readyException(p);
        }),
        this
      );
    }),
      b.extend({
        isReady: !1,
        readyWait: 1,
        ready: function (c) {
          (c === !0 ? --b.readyWait : b.isReady) ||
            ((b.isReady = !0),
            !(c !== !0 && --b.readyWait > 0) && Gu.resolveWith(k, [b]));
        },
      }),
      (b.ready.then = Gu.then);
    function Zl() {
      k.removeEventListener("DOMContentLoaded", Zl),
        n.removeEventListener("load", Zl),
        b.ready();
    }
    k.readyState === "complete" ||
    (k.readyState !== "loading" && !k.documentElement.doScroll)
      ? n.setTimeout(b.ready)
      : (k.addEventListener("DOMContentLoaded", Zl),
        n.addEventListener("load", Zl));
    var mr = function (c, p, _, y, w, D, I) {
        var R = 0,
          A = c.length,
          z = _ == null;
        if (K(_) === "object") {
          w = !0;
          for (R in _) mr(c, p, R, _[R], !0, D, I);
        } else if (
          y !== void 0 &&
          ((w = !0),
          S(y) || (I = !0),
          z &&
            (I
              ? (p.call(c, y), (p = null))
              : ((z = p),
                (p = function (J, ne, q) {
                  return z.call(b(J), q);
                }))),
          p)
        )
          for (; R < A; R++) p(c[R], _, I ? y : y.call(c[R], R, p(c[R], _)));
        return w ? c : z ? p.call(c) : A ? p(c[0], _) : D;
      },
      Jx = /^-ms-/,
      eC = /-([a-z])/g;
    function tC(c, p) {
      return p.toUpperCase();
    }
    function jn(c) {
      return c.replace(Jx, "ms-").replace(eC, tC);
    }
    var os = function (c) {
      return c.nodeType === 1 || c.nodeType === 9 || !+c.nodeType;
    };
    function as() {
      this.expando = b.expando + as.uid++;
    }
    (as.uid = 1),
      (as.prototype = {
        cache: function (c) {
          var p = c[this.expando];
          return (
            p ||
              ((p = {}),
              os(c) &&
                (c.nodeType
                  ? (c[this.expando] = p)
                  : Object.defineProperty(c, this.expando, {
                      value: p,
                      configurable: !0,
                    }))),
            p
          );
        },
        set: function (c, p, _) {
          var y,
            w = this.cache(c);
          if (typeof p == "string") w[jn(p)] = _;
          else for (y in p) w[jn(y)] = p[y];
          return w;
        },
        get: function (c, p) {
          return p === void 0
            ? this.cache(c)
            : c[this.expando] && c[this.expando][jn(p)];
        },
        access: function (c, p, _) {
          return p === void 0 || (p && typeof p == "string" && _ === void 0)
            ? this.get(c, p)
            : (this.set(c, p, _), _ !== void 0 ? _ : p);
        },
        remove: function (c, p) {
          var _,
            y = c[this.expando];
          if (y !== void 0) {
            if (p !== void 0)
              for (
                Array.isArray(p)
                  ? (p = p.map(jn))
                  : ((p = jn(p)), (p = (p in y) ? [p] : p.match(Hn) || [])),
                  _ = p.length;
                _--;

              )
                delete y[p[_]];
            (p === void 0 || b.isEmptyObject(y)) &&
              (c.nodeType
                ? (c[this.expando] = void 0)
                : delete c[this.expando]);
          }
        },
        hasData: function (c) {
          var p = c[this.expando];
          return p !== void 0 && !b.isEmptyObject(p);
        },
      });
    var Pe = new as(),
      Ri = new as(),
      iC = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      nC = /[A-Z]/g;
    function rC(c) {
      return c === "true"
        ? !0
        : c === "false"
        ? !1
        : c === "null"
        ? null
        : c === +c + ""
        ? +c
        : iC.test(c)
        ? JSON.parse(c)
        : c;
    }
    function Dg(c, p, _) {
      var y;
      if (_ === void 0 && c.nodeType === 1)
        if (
          ((y = "data-" + p.replace(nC, "-$&").toLowerCase()),
          (_ = c.getAttribute(y)),
          typeof _ == "string")
        ) {
          try {
            _ = rC(_);
          } catch {}
          Ri.set(c, p, _);
        } else _ = void 0;
      return _;
    }
    b.extend({
      hasData: function (c) {
        return Ri.hasData(c) || Pe.hasData(c);
      },
      data: function (c, p, _) {
        return Ri.access(c, p, _);
      },
      removeData: function (c, p) {
        Ri.remove(c, p);
      },
      _data: function (c, p, _) {
        return Pe.access(c, p, _);
      },
      _removeData: function (c, p) {
        Pe.remove(c, p);
      },
    }),
      b.fn.extend({
        data: function (c, p) {
          var _,
            y,
            w,
            D = this[0],
            I = D && D.attributes;
          if (c === void 0) {
            if (
              this.length &&
              ((w = Ri.get(D)), D.nodeType === 1 && !Pe.get(D, "hasDataAttrs"))
            ) {
              for (_ = I.length; _--; )
                I[_] &&
                  ((y = I[_].name),
                  y.indexOf("data-") === 0 &&
                    ((y = jn(y.slice(5))), Dg(D, y, w[y])));
              Pe.set(D, "hasDataAttrs", !0);
            }
            return w;
          }
          return typeof c == "object"
            ? this.each(function () {
                Ri.set(this, c);
              })
            : mr(
                this,
                function (R) {
                  var A;
                  if (D && R === void 0)
                    return (
                      (A = Ri.get(D, c)),
                      A !== void 0 || ((A = Dg(D, c)), A !== void 0)
                        ? A
                        : void 0
                    );
                  this.each(function () {
                    Ri.set(this, c, R);
                  });
                },
                null,
                p,
                arguments.length > 1,
                null,
                !0
              );
        },
        removeData: function (c) {
          return this.each(function () {
            Ri.remove(this, c);
          });
        },
      }),
      b.extend({
        queue: function (c, p, _) {
          var y;
          if (c)
            return (
              (p = (p || "fx") + "queue"),
              (y = Pe.get(c, p)),
              _ &&
                (!y || Array.isArray(_)
                  ? (y = Pe.access(c, p, b.makeArray(_)))
                  : y.push(_)),
              y || []
            );
        },
        dequeue: function (c, p) {
          p = p || "fx";
          var _ = b.queue(c, p),
            y = _.length,
            w = _.shift(),
            D = b._queueHooks(c, p),
            I = function () {
              b.dequeue(c, p);
            };
          w === "inprogress" && ((w = _.shift()), y--),
            w &&
              (p === "fx" && _.unshift("inprogress"),
              delete D.stop,
              w.call(c, I, D)),
            !y && D && D.empty.fire();
        },
        _queueHooks: function (c, p) {
          var _ = p + "queueHooks";
          return (
            Pe.get(c, _) ||
            Pe.access(c, _, {
              empty: b.Callbacks("once memory").add(function () {
                Pe.remove(c, [p + "queue", _]);
              }),
            })
          );
        },
      }),
      b.fn.extend({
        queue: function (c, p) {
          var _ = 2;
          return (
            typeof c != "string" && ((p = c), (c = "fx"), _--),
            arguments.length < _
              ? b.queue(this[0], c)
              : p === void 0
              ? this
              : this.each(function () {
                  var y = b.queue(this, c, p);
                  b._queueHooks(this, c),
                    c === "fx" && y[0] !== "inprogress" && b.dequeue(this, c);
                })
          );
        },
        dequeue: function (c) {
          return this.each(function () {
            b.dequeue(this, c);
          });
        },
        clearQueue: function (c) {
          return this.queue(c || "fx", []);
        },
        promise: function (c, p) {
          var _,
            y = 1,
            w = b.Deferred(),
            D = this,
            I = this.length,
            R = function () {
              --y || w.resolveWith(D, [D]);
            };
          for (
            typeof c != "string" && ((p = c), (c = void 0)), c = c || "fx";
            I--;

          )
            (_ = Pe.get(D[I], c + "queueHooks")),
              _ && _.empty && (y++, _.empty.add(R));
          return R(), w.promise(p);
        },
      });
    var Sg = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
      ss = new RegExp("^(?:([+-])=|)(" + Sg + ")([a-z%]*)$", "i"),
      fr = ["Top", "Right", "Bottom", "Left"],
      fo = k.documentElement,
      Qo = function (c) {
        return b.contains(c.ownerDocument, c);
      },
      oC = { composed: !0 };
    fo.getRootNode &&
      (Qo = function (c) {
        return (
          b.contains(c.ownerDocument, c) ||
          c.getRootNode(oC) === c.ownerDocument
        );
      });
    var Jl = function (c, p) {
      return (
        (c = p || c),
        c.style.display === "none" ||
          (c.style.display === "" && Qo(c) && b.css(c, "display") === "none")
      );
    };
    function Mg(c, p, _, y) {
      var w,
        D,
        I = 20,
        R = y
          ? function () {
              return y.cur();
            }
          : function () {
              return b.css(c, p, "");
            },
        A = R(),
        z = (_ && _[3]) || (b.cssNumber[p] ? "" : "px"),
        J =
          c.nodeType &&
          (b.cssNumber[p] || (z !== "px" && +A)) &&
          ss.exec(b.css(c, p));
      if (J && J[3] !== z) {
        for (A = A / 2, z = z || J[3], J = +A || 1; I--; )
          b.style(c, p, J + z),
            (1 - D) * (1 - (D = R() / A || 0.5)) <= 0 && (I = 0),
            (J = J / D);
        (J = J * 2), b.style(c, p, J + z), (_ = _ || []);
      }
      return (
        _ &&
          ((J = +J || +A || 0),
          (w = _[1] ? J + (_[1] + 1) * _[2] : +_[2]),
          y && ((y.unit = z), (y.start = J), (y.end = w))),
        w
      );
    }
    var Tg = {};
    function aC(c) {
      var p,
        _ = c.ownerDocument,
        y = c.nodeName,
        w = Tg[y];
      return (
        w ||
        ((p = _.body.appendChild(_.createElement(y))),
        (w = b.css(p, "display")),
        p.parentNode.removeChild(p),
        w === "none" && (w = "block"),
        (Tg[y] = w),
        w)
      );
    }
    function Xo(c, p) {
      for (var _, y, w = [], D = 0, I = c.length; D < I; D++)
        (y = c[D]),
          y.style &&
            ((_ = y.style.display),
            p
              ? (_ === "none" &&
                  ((w[D] = Pe.get(y, "display") || null),
                  w[D] || (y.style.display = "")),
                y.style.display === "" && Jl(y) && (w[D] = aC(y)))
              : _ !== "none" && ((w[D] = "none"), Pe.set(y, "display", _)));
      for (D = 0; D < I; D++) w[D] != null && (c[D].style.display = w[D]);
      return c;
    }
    b.fn.extend({
      show: function () {
        return Xo(this, !0);
      },
      hide: function () {
        return Xo(this);
      },
      toggle: function (c) {
        return typeof c == "boolean"
          ? c
            ? this.show()
            : this.hide()
          : this.each(function () {
              Jl(this) ? b(this).show() : b(this).hide();
            });
      },
    });
    var ls = /^(?:checkbox|radio)$/i,
      Eg = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
      kg = /^$|^module$|\/(?:java|ecma)script/i;
    (function () {
      var c = k.createDocumentFragment(),
        p = c.appendChild(k.createElement("div")),
        _ = k.createElement("input");
      _.setAttribute("type", "radio"),
        _.setAttribute("checked", "checked"),
        _.setAttribute("name", "t"),
        p.appendChild(_),
        (C.checkClone = p.cloneNode(!0).cloneNode(!0).lastChild.checked),
        (p.innerHTML = "<textarea>x</textarea>"),
        (C.noCloneChecked = !!p.cloneNode(!0).lastChild.defaultValue),
        (p.innerHTML = "<option></option>"),
        (C.option = !!p.lastChild);
    })();
    var hn = {
      thead: [1, "<table>", "</table>"],
      col: [2, "<table><colgroup>", "</colgroup></table>"],
      tr: [2, "<table><tbody>", "</tbody></table>"],
      td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
      _default: [0, "", ""],
    };
    (hn.tbody = hn.tfoot = hn.colgroup = hn.caption = hn.thead),
      (hn.th = hn.td),
      C.option ||
        (hn.optgroup = hn.option =
          [1, "<select multiple='multiple'>", "</select>"]);
    function Fi(c, p) {
      var _;
      return (
        typeof c.getElementsByTagName < "u"
          ? (_ = c.getElementsByTagName(p || "*"))
          : typeof c.querySelectorAll < "u"
          ? (_ = c.querySelectorAll(p || "*"))
          : (_ = []),
        p === void 0 || (p && re(c, p)) ? b.merge([c], _) : _
      );
    }
    function Yu(c, p) {
      for (var _ = 0, y = c.length; _ < y; _++)
        Pe.set(c[_], "globalEval", !p || Pe.get(p[_], "globalEval"));
    }
    var sC = /<|&#?\w+;/;
    function Ig(c, p, _, y, w) {
      for (
        var D,
          I,
          R,
          A,
          z,
          J,
          ne = p.createDocumentFragment(),
          q = [],
          se = 0,
          ze = c.length;
        se < ze;
        se++
      )
        if (((D = c[se]), D || D === 0))
          if (K(D) === "object") b.merge(q, D.nodeType ? [D] : D);
          else if (!sC.test(D)) q.push(p.createTextNode(D));
          else {
            for (
              I = I || ne.appendChild(p.createElement("div")),
                R = (Eg.exec(D) || ["", ""])[1].toLowerCase(),
                A = hn[R] || hn._default,
                I.innerHTML = A[1] + b.htmlPrefilter(D) + A[2],
                J = A[0];
              J--;

            )
              I = I.lastChild;
            b.merge(q, I.childNodes), (I = ne.firstChild), (I.textContent = "");
          }
      for (ne.textContent = "", se = 0; (D = q[se++]); ) {
        if (y && b.inArray(D, y) > -1) {
          w && w.push(D);
          continue;
        }
        if (((z = Qo(D)), (I = Fi(ne.appendChild(D), "script")), z && Yu(I), _))
          for (J = 0; (D = I[J++]); ) kg.test(D.type || "") && _.push(D);
      }
      return ne;
    }
    var Og = /^([^.]*)(?:\.(.+)|)/;
    function Zo() {
      return !0;
    }
    function Jo() {
      return !1;
    }
    function qu(c, p, _, y, w, D) {
      var I, R;
      if (typeof p == "object") {
        typeof _ != "string" && ((y = y || _), (_ = void 0));
        for (R in p) qu(c, R, _, y, p[R], D);
        return c;
      }
      if (
        (y == null && w == null
          ? ((w = _), (y = _ = void 0))
          : w == null &&
            (typeof _ == "string"
              ? ((w = y), (y = void 0))
              : ((w = y), (y = _), (_ = void 0))),
        w === !1)
      )
        w = Jo;
      else if (!w) return c;
      return (
        D === 1 &&
          ((I = w),
          (w = function (A) {
            return b().off(A), I.apply(this, arguments);
          }),
          (w.guid = I.guid || (I.guid = b.guid++))),
        c.each(function () {
          b.event.add(this, p, w, y, _);
        })
      );
    }
    b.event = {
      global: {},
      add: function (c, p, _, y, w) {
        var D,
          I,
          R,
          A,
          z,
          J,
          ne,
          q,
          se,
          ze,
          ct,
          qe = Pe.get(c);
        if (os(c))
          for (
            _.handler && ((D = _), (_ = D.handler), (w = D.selector)),
              w && b.find.matchesSelector(fo, w),
              _.guid || (_.guid = b.guid++),
              (A = qe.events) || (A = qe.events = Object.create(null)),
              (I = qe.handle) ||
                (I = qe.handle =
                  function (gi) {
                    return typeof b < "u" && b.event.triggered !== gi.type
                      ? b.event.dispatch.apply(c, arguments)
                      : void 0;
                  }),
              p = (p || "").match(Hn) || [""],
              z = p.length;
            z--;

          )
            (R = Og.exec(p[z]) || []),
              (se = ct = R[1]),
              (ze = (R[2] || "").split(".").sort()),
              se &&
                ((ne = b.event.special[se] || {}),
                (se = (w ? ne.delegateType : ne.bindType) || se),
                (ne = b.event.special[se] || {}),
                (J = b.extend(
                  {
                    type: se,
                    origType: ct,
                    data: y,
                    handler: _,
                    guid: _.guid,
                    selector: w,
                    needsContext: w && b.expr.match.needsContext.test(w),
                    namespace: ze.join("."),
                  },
                  D
                )),
                (q = A[se]) ||
                  ((q = A[se] = []),
                  (q.delegateCount = 0),
                  (!ne.setup || ne.setup.call(c, y, ze, I) === !1) &&
                    c.addEventListener &&
                    c.addEventListener(se, I)),
                ne.add &&
                  (ne.add.call(c, J),
                  J.handler.guid || (J.handler.guid = _.guid)),
                w ? q.splice(q.delegateCount++, 0, J) : q.push(J),
                (b.event.global[se] = !0));
      },
      remove: function (c, p, _, y, w) {
        var D,
          I,
          R,
          A,
          z,
          J,
          ne,
          q,
          se,
          ze,
          ct,
          qe = Pe.hasData(c) && Pe.get(c);
        if (!(!qe || !(A = qe.events))) {
          for (p = (p || "").match(Hn) || [""], z = p.length; z--; ) {
            if (
              ((R = Og.exec(p[z]) || []),
              (se = ct = R[1]),
              (ze = (R[2] || "").split(".").sort()),
              !se)
            ) {
              for (se in A) b.event.remove(c, se + p[z], _, y, !0);
              continue;
            }
            for (
              ne = b.event.special[se] || {},
                se = (y ? ne.delegateType : ne.bindType) || se,
                q = A[se] || [],
                R =
                  R[2] &&
                  new RegExp("(^|\\.)" + ze.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                I = D = q.length;
              D--;

            )
              (J = q[D]),
                (w || ct === J.origType) &&
                  (!_ || _.guid === J.guid) &&
                  (!R || R.test(J.namespace)) &&
                  (!y || y === J.selector || (y === "**" && J.selector)) &&
                  (q.splice(D, 1),
                  J.selector && q.delegateCount--,
                  ne.remove && ne.remove.call(c, J));
            I &&
              !q.length &&
              ((!ne.teardown || ne.teardown.call(c, ze, qe.handle) === !1) &&
                b.removeEvent(c, se, qe.handle),
              delete A[se]);
          }
          b.isEmptyObject(A) && Pe.remove(c, "handle events");
        }
      },
      dispatch: function (c) {
        var p,
          _,
          y,
          w,
          D,
          I,
          R = new Array(arguments.length),
          A = b.event.fix(c),
          z = (Pe.get(this, "events") || Object.create(null))[A.type] || [],
          J = b.event.special[A.type] || {};
        for (R[0] = A, p = 1; p < arguments.length; p++) R[p] = arguments[p];
        if (
          ((A.delegateTarget = this),
          !(J.preDispatch && J.preDispatch.call(this, A) === !1))
        ) {
          for (
            I = b.event.handlers.call(this, A, z), p = 0;
            (w = I[p++]) && !A.isPropagationStopped();

          )
            for (
              A.currentTarget = w.elem, _ = 0;
              (D = w.handlers[_++]) && !A.isImmediatePropagationStopped();

            )
              (!A.rnamespace ||
                D.namespace === !1 ||
                A.rnamespace.test(D.namespace)) &&
                ((A.handleObj = D),
                (A.data = D.data),
                (y = (
                  (b.event.special[D.origType] || {}).handle || D.handler
                ).apply(w.elem, R)),
                y !== void 0 &&
                  (A.result = y) === !1 &&
                  (A.preventDefault(), A.stopPropagation()));
          return J.postDispatch && J.postDispatch.call(this, A), A.result;
        }
      },
      handlers: function (c, p) {
        var _,
          y,
          w,
          D,
          I,
          R = [],
          A = p.delegateCount,
          z = c.target;
        if (A && z.nodeType && !(c.type === "click" && c.button >= 1)) {
          for (; z !== this; z = z.parentNode || this)
            if (
              z.nodeType === 1 &&
              !(c.type === "click" && z.disabled === !0)
            ) {
              for (D = [], I = {}, _ = 0; _ < A; _++)
                (y = p[_]),
                  (w = y.selector + " "),
                  I[w] === void 0 &&
                    (I[w] = y.needsContext
                      ? b(w, this).index(z) > -1
                      : b.find(w, this, null, [z]).length),
                  I[w] && D.push(y);
              D.length && R.push({ elem: z, handlers: D });
            }
        }
        return (
          (z = this),
          A < p.length && R.push({ elem: z, handlers: p.slice(A) }),
          R
        );
      },
      addProp: function (c, p) {
        Object.defineProperty(b.Event.prototype, c, {
          enumerable: !0,
          configurable: !0,
          get: S(p)
            ? function () {
                if (this.originalEvent) return p(this.originalEvent);
              }
            : function () {
                if (this.originalEvent) return this.originalEvent[c];
              },
          set: function (_) {
            Object.defineProperty(this, c, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: _,
            });
          },
        });
      },
      fix: function (c) {
        return c[b.expando] ? c : new b.Event(c);
      },
      special: {
        load: { noBubble: !0 },
        click: {
          setup: function (c) {
            var p = this || c;
            return (
              ls.test(p.type) &&
                p.click &&
                re(p, "input") &&
                ec(p, "click", !0),
              !1
            );
          },
          trigger: function (c) {
            var p = this || c;
            return (
              ls.test(p.type) && p.click && re(p, "input") && ec(p, "click"), !0
            );
          },
          _default: function (c) {
            var p = c.target;
            return (
              (ls.test(p.type) &&
                p.click &&
                re(p, "input") &&
                Pe.get(p, "click")) ||
              re(p, "a")
            );
          },
        },
        beforeunload: {
          postDispatch: function (c) {
            c.result !== void 0 &&
              c.originalEvent &&
              (c.originalEvent.returnValue = c.result);
          },
        },
      },
    };
    function ec(c, p, _) {
      if (!_) {
        Pe.get(c, p) === void 0 && b.event.add(c, p, Zo);
        return;
      }
      Pe.set(c, p, !1),
        b.event.add(c, p, {
          namespace: !1,
          handler: function (y) {
            var w,
              D = Pe.get(this, p);
            if (y.isTrigger & 1 && this[p]) {
              if (D)
                (b.event.special[p] || {}).delegateType && y.stopPropagation();
              else if (
                ((D = r.call(arguments)),
                Pe.set(this, p, D),
                this[p](),
                (w = Pe.get(this, p)),
                Pe.set(this, p, !1),
                D !== w)
              )
                return y.stopImmediatePropagation(), y.preventDefault(), w;
            } else
              D &&
                (Pe.set(this, p, b.event.trigger(D[0], D.slice(1), this)),
                y.stopPropagation(),
                (y.isImmediatePropagationStopped = Zo));
          },
        });
    }
    (b.removeEvent = function (c, p, _) {
      c.removeEventListener && c.removeEventListener(p, _);
    }),
      (b.Event = function (c, p) {
        if (!(this instanceof b.Event)) return new b.Event(c, p);
        c && c.type
          ? ((this.originalEvent = c),
            (this.type = c.type),
            (this.isDefaultPrevented =
              c.defaultPrevented ||
              (c.defaultPrevented === void 0 && c.returnValue === !1)
                ? Zo
                : Jo),
            (this.target =
              c.target && c.target.nodeType === 3
                ? c.target.parentNode
                : c.target),
            (this.currentTarget = c.currentTarget),
            (this.relatedTarget = c.relatedTarget))
          : (this.type = c),
          p && b.extend(this, p),
          (this.timeStamp = (c && c.timeStamp) || Date.now()),
          (this[b.expando] = !0);
      }),
      (b.Event.prototype = {
        constructor: b.Event,
        isDefaultPrevented: Jo,
        isPropagationStopped: Jo,
        isImmediatePropagationStopped: Jo,
        isSimulated: !1,
        preventDefault: function () {
          var c = this.originalEvent;
          (this.isDefaultPrevented = Zo),
            c && !this.isSimulated && c.preventDefault();
        },
        stopPropagation: function () {
          var c = this.originalEvent;
          (this.isPropagationStopped = Zo),
            c && !this.isSimulated && c.stopPropagation();
        },
        stopImmediatePropagation: function () {
          var c = this.originalEvent;
          (this.isImmediatePropagationStopped = Zo),
            c && !this.isSimulated && c.stopImmediatePropagation(),
            this.stopPropagation();
        },
      }),
      b.each(
        {
          altKey: !0,
          bubbles: !0,
          cancelable: !0,
          changedTouches: !0,
          ctrlKey: !0,
          detail: !0,
          eventPhase: !0,
          metaKey: !0,
          pageX: !0,
          pageY: !0,
          shiftKey: !0,
          view: !0,
          char: !0,
          code: !0,
          charCode: !0,
          key: !0,
          keyCode: !0,
          button: !0,
          buttons: !0,
          clientX: !0,
          clientY: !0,
          offsetX: !0,
          offsetY: !0,
          pointerId: !0,
          pointerType: !0,
          screenX: !0,
          screenY: !0,
          targetTouches: !0,
          toElement: !0,
          touches: !0,
          which: !0,
        },
        b.event.addProp
      ),
      b.each({ focus: "focusin", blur: "focusout" }, function (c, p) {
        function _(y) {
          if (k.documentMode) {
            var w = Pe.get(this, "handle"),
              D = b.event.fix(y);
            (D.type = y.type === "focusin" ? "focus" : "blur"),
              (D.isSimulated = !0),
              w(y),
              D.target === D.currentTarget && w(D);
          } else b.event.simulate(p, y.target, b.event.fix(y));
        }
        (b.event.special[c] = {
          setup: function () {
            var y;
            if ((ec(this, c, !0), k.documentMode))
              (y = Pe.get(this, p)),
                y || this.addEventListener(p, _),
                Pe.set(this, p, (y || 0) + 1);
            else return !1;
          },
          trigger: function () {
            return ec(this, c), !0;
          },
          teardown: function () {
            var y;
            if (k.documentMode)
              (y = Pe.get(this, p) - 1),
                y
                  ? Pe.set(this, p, y)
                  : (this.removeEventListener(p, _), Pe.remove(this, p));
            else return !1;
          },
          _default: function (y) {
            return Pe.get(y.target, c);
          },
          delegateType: p,
        }),
          (b.event.special[p] = {
            setup: function () {
              var y = this.ownerDocument || this.document || this,
                w = k.documentMode ? this : y,
                D = Pe.get(w, p);
              D ||
                (k.documentMode
                  ? this.addEventListener(p, _)
                  : y.addEventListener(c, _, !0)),
                Pe.set(w, p, (D || 0) + 1);
            },
            teardown: function () {
              var y = this.ownerDocument || this.document || this,
                w = k.documentMode ? this : y,
                D = Pe.get(w, p) - 1;
              D
                ? Pe.set(w, p, D)
                : (k.documentMode
                    ? this.removeEventListener(p, _)
                    : y.removeEventListener(c, _, !0),
                  Pe.remove(w, p));
            },
          });
      }),
      b.each(
        {
          mouseenter: "mouseover",
          mouseleave: "mouseout",
          pointerenter: "pointerover",
          pointerleave: "pointerout",
        },
        function (c, p) {
          b.event.special[c] = {
            delegateType: p,
            bindType: p,
            handle: function (_) {
              var y,
                w = this,
                D = _.relatedTarget,
                I = _.handleObj;
              return (
                (!D || (D !== w && !b.contains(w, D))) &&
                  ((_.type = I.origType),
                  (y = I.handler.apply(this, arguments)),
                  (_.type = p)),
                y
              );
            },
          };
        }
      ),
      b.fn.extend({
        on: function (c, p, _, y) {
          return qu(this, c, p, _, y);
        },
        one: function (c, p, _, y) {
          return qu(this, c, p, _, y, 1);
        },
        off: function (c, p, _) {
          var y, w;
          if (c && c.preventDefault && c.handleObj)
            return (
              (y = c.handleObj),
              b(c.delegateTarget).off(
                y.namespace ? y.origType + "." + y.namespace : y.origType,
                y.selector,
                y.handler
              ),
              this
            );
          if (typeof c == "object") {
            for (w in c) this.off(w, p, c[w]);
            return this;
          }
          return (
            (p === !1 || typeof p == "function") && ((_ = p), (p = void 0)),
            _ === !1 && (_ = Jo),
            this.each(function () {
              b.event.remove(this, c, _, p);
            })
          );
        },
      });
    var lC = /<script|<style|<link/i,
      cC = /checked\s*(?:[^=]|=\s*.checked.)/i,
      dC = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function Pg(c, p) {
      return (
        (re(c, "table") &&
          re(p.nodeType !== 11 ? p : p.firstChild, "tr") &&
          b(c).children("tbody")[0]) ||
        c
      );
    }
    function uC(c) {
      return (c.type = (c.getAttribute("type") !== null) + "/" + c.type), c;
    }
    function hC(c) {
      return (
        (c.type || "").slice(0, 5) === "true/"
          ? (c.type = c.type.slice(5))
          : c.removeAttribute("type"),
        c
      );
    }
    function Ag(c, p) {
      var _, y, w, D, I, R, A;
      if (p.nodeType === 1) {
        if (Pe.hasData(c) && ((D = Pe.get(c)), (A = D.events), A)) {
          Pe.remove(p, "handle events");
          for (w in A)
            for (_ = 0, y = A[w].length; _ < y; _++) b.event.add(p, w, A[w][_]);
        }
        Ri.hasData(c) &&
          ((I = Ri.access(c)), (R = b.extend({}, I)), Ri.set(p, R));
      }
    }
    function pC(c, p) {
      var _ = p.nodeName.toLowerCase();
      _ === "input" && ls.test(c.type)
        ? (p.checked = c.checked)
        : (_ === "input" || _ === "textarea") &&
          (p.defaultValue = c.defaultValue);
    }
    function ea(c, p, _, y) {
      p = o(p);
      var w,
        D,
        I,
        R,
        A,
        z,
        J = 0,
        ne = c.length,
        q = ne - 1,
        se = p[0],
        ze = S(se);
      if (
        ze ||
        (ne > 1 && typeof se == "string" && !C.checkClone && cC.test(se))
      )
        return c.each(function (ct) {
          var qe = c.eq(ct);
          ze && (p[0] = se.call(this, ct, qe.html())), ea(qe, p, _, y);
        });
      if (
        ne &&
        ((w = Ig(p, c[0].ownerDocument, !1, c, y)),
        (D = w.firstChild),
        w.childNodes.length === 1 && (w = D),
        D || y)
      ) {
        for (I = b.map(Fi(w, "script"), uC), R = I.length; J < ne; J++)
          (A = w),
            J !== q &&
              ((A = b.clone(A, !0, !0)), R && b.merge(I, Fi(A, "script"))),
            _.call(c[J], A, J);
        if (R)
          for (
            z = I[I.length - 1].ownerDocument, b.map(I, hC), J = 0;
            J < R;
            J++
          )
            (A = I[J]),
              kg.test(A.type || "") &&
                !Pe.access(A, "globalEval") &&
                b.contains(z, A) &&
                (A.src && (A.type || "").toLowerCase() !== "module"
                  ? b._evalUrl &&
                    !A.noModule &&
                    b._evalUrl(
                      A.src,
                      { nonce: A.nonce || A.getAttribute("nonce") },
                      z
                    )
                  : j(A.textContent.replace(dC, ""), A, z));
      }
      return c;
    }
    function Rg(c, p, _) {
      for (var y, w = p ? b.filter(p, c) : c, D = 0; (y = w[D]) != null; D++)
        !_ && y.nodeType === 1 && b.cleanData(Fi(y)),
          y.parentNode &&
            (_ && Qo(y) && Yu(Fi(y, "script")), y.parentNode.removeChild(y));
      return c;
    }
    b.extend({
      htmlPrefilter: function (c) {
        return c;
      },
      clone: function (c, p, _) {
        var y,
          w,
          D,
          I,
          R = c.cloneNode(!0),
          A = Qo(c);
        if (
          !C.noCloneChecked &&
          (c.nodeType === 1 || c.nodeType === 11) &&
          !b.isXMLDoc(c)
        )
          for (I = Fi(R), D = Fi(c), y = 0, w = D.length; y < w; y++)
            pC(D[y], I[y]);
        if (p)
          if (_)
            for (
              D = D || Fi(c), I = I || Fi(R), y = 0, w = D.length;
              y < w;
              y++
            )
              Ag(D[y], I[y]);
          else Ag(c, R);
        return (
          (I = Fi(R, "script")), I.length > 0 && Yu(I, !A && Fi(c, "script")), R
        );
      },
      cleanData: function (c) {
        for (
          var p, _, y, w = b.event.special, D = 0;
          (_ = c[D]) !== void 0;
          D++
        )
          if (os(_)) {
            if ((p = _[Pe.expando])) {
              if (p.events)
                for (y in p.events)
                  w[y] ? b.event.remove(_, y) : b.removeEvent(_, y, p.handle);
              _[Pe.expando] = void 0;
            }
            _[Ri.expando] && (_[Ri.expando] = void 0);
          }
      },
    }),
      b.fn.extend({
        detach: function (c) {
          return Rg(this, c, !0);
        },
        remove: function (c) {
          return Rg(this, c);
        },
        text: function (c) {
          return mr(
            this,
            function (p) {
              return p === void 0
                ? b.text(this)
                : this.empty().each(function () {
                    (this.nodeType === 1 ||
                      this.nodeType === 11 ||
                      this.nodeType === 9) &&
                      (this.textContent = p);
                  });
            },
            null,
            c,
            arguments.length
          );
        },
        append: function () {
          return ea(this, arguments, function (c) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var p = Pg(this, c);
              p.appendChild(c);
            }
          });
        },
        prepend: function () {
          return ea(this, arguments, function (c) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var p = Pg(this, c);
              p.insertBefore(c, p.firstChild);
            }
          });
        },
        before: function () {
          return ea(this, arguments, function (c) {
            this.parentNode && this.parentNode.insertBefore(c, this);
          });
        },
        after: function () {
          return ea(this, arguments, function (c) {
            this.parentNode &&
              this.parentNode.insertBefore(c, this.nextSibling);
          });
        },
        empty: function () {
          for (var c, p = 0; (c = this[p]) != null; p++)
            c.nodeType === 1 && (b.cleanData(Fi(c, !1)), (c.textContent = ""));
          return this;
        },
        clone: function (c, p) {
          return (
            (c = c ?? !1),
            (p = p ?? c),
            this.map(function () {
              return b.clone(this, c, p);
            })
          );
        },
        html: function (c) {
          return mr(
            this,
            function (p) {
              var _ = this[0] || {},
                y = 0,
                w = this.length;
              if (p === void 0 && _.nodeType === 1) return _.innerHTML;
              if (
                typeof p == "string" &&
                !lC.test(p) &&
                !hn[(Eg.exec(p) || ["", ""])[1].toLowerCase()]
              ) {
                p = b.htmlPrefilter(p);
                try {
                  for (; y < w; y++)
                    (_ = this[y] || {}),
                      _.nodeType === 1 &&
                        (b.cleanData(Fi(_, !1)), (_.innerHTML = p));
                  _ = 0;
                } catch {}
              }
              _ && this.empty().append(p);
            },
            null,
            c,
            arguments.length
          );
        },
        replaceWith: function () {
          var c = [];
          return ea(
            this,
            arguments,
            function (p) {
              var _ = this.parentNode;
              b.inArray(this, c) < 0 &&
                (b.cleanData(Fi(this)), _ && _.replaceChild(p, this));
            },
            c
          );
        },
      }),
      b.each(
        {
          appendTo: "append",
          prependTo: "prepend",
          insertBefore: "before",
          insertAfter: "after",
          replaceAll: "replaceWith",
        },
        function (c, p) {
          b.fn[c] = function (_) {
            for (var y, w = [], D = b(_), I = D.length - 1, R = 0; R <= I; R++)
              (y = R === I ? this : this.clone(!0)),
                b(D[R])[p](y),
                a.apply(w, y.get());
            return this.pushStack(w);
          };
        }
      );
    var Ku = new RegExp("^(" + Sg + ")(?!px)[a-z%]+$", "i"),
      Qu = /^--/,
      tc = function (c) {
        var p = c.ownerDocument.defaultView;
        return (!p || !p.opener) && (p = n), p.getComputedStyle(c);
      },
      Fg = function (c, p, _) {
        var y,
          w,
          D = {};
        for (w in p) (D[w] = c.style[w]), (c.style[w] = p[w]);
        y = _.call(c);
        for (w in p) c.style[w] = D[w];
        return y;
      },
      mC = new RegExp(fr.join("|"), "i");
    (function () {
      function c() {
        if (z) {
          (A.style.cssText =
            "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
            (z.style.cssText =
              "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
            fo.appendChild(A).appendChild(z);
          var J = n.getComputedStyle(z);
          (_ = J.top !== "1%"),
            (R = p(J.marginLeft) === 12),
            (z.style.right = "60%"),
            (D = p(J.right) === 36),
            (y = p(J.width) === 36),
            (z.style.position = "absolute"),
            (w = p(z.offsetWidth / 3) === 12),
            fo.removeChild(A),
            (z = null);
        }
      }
      function p(J) {
        return Math.round(parseFloat(J));
      }
      var _,
        y,
        w,
        D,
        I,
        R,
        A = k.createElement("div"),
        z = k.createElement("div");
      z.style &&
        ((z.style.backgroundClip = "content-box"),
        (z.cloneNode(!0).style.backgroundClip = ""),
        (C.clearCloneStyle = z.style.backgroundClip === "content-box"),
        b.extend(C, {
          boxSizingReliable: function () {
            return c(), y;
          },
          pixelBoxStyles: function () {
            return c(), D;
          },
          pixelPosition: function () {
            return c(), _;
          },
          reliableMarginLeft: function () {
            return c(), R;
          },
          scrollboxSize: function () {
            return c(), w;
          },
          reliableTrDimensions: function () {
            var J, ne, q, se;
            return (
              I == null &&
                ((J = k.createElement("table")),
                (ne = k.createElement("tr")),
                (q = k.createElement("div")),
                (J.style.cssText =
                  "position:absolute;left:-11111px;border-collapse:separate"),
                (ne.style.cssText = "box-sizing:content-box;border:1px solid"),
                (ne.style.height = "1px"),
                (q.style.height = "9px"),
                (q.style.display = "block"),
                fo.appendChild(J).appendChild(ne).appendChild(q),
                (se = n.getComputedStyle(ne)),
                (I =
                  parseInt(se.height, 10) +
                    parseInt(se.borderTopWidth, 10) +
                    parseInt(se.borderBottomWidth, 10) ===
                  ne.offsetHeight),
                fo.removeChild(J)),
              I
            );
          },
        }));
    })();
    function cs(c, p, _) {
      var y,
        w,
        D,
        I,
        R = Qu.test(p),
        A = c.style;
      return (
        (_ = _ || tc(c)),
        _ &&
          ((I = _.getPropertyValue(p) || _[p]),
          R && I && (I = I.replace(Ft, "$1") || void 0),
          I === "" && !Qo(c) && (I = b.style(c, p)),
          !C.pixelBoxStyles() &&
            Ku.test(I) &&
            mC.test(p) &&
            ((y = A.width),
            (w = A.minWidth),
            (D = A.maxWidth),
            (A.minWidth = A.maxWidth = A.width = I),
            (I = _.width),
            (A.width = y),
            (A.minWidth = w),
            (A.maxWidth = D))),
        I !== void 0 ? I + "" : I
      );
    }
    function Ng(c, p) {
      return {
        get: function () {
          if (c()) {
            delete this.get;
            return;
          }
          return (this.get = p).apply(this, arguments);
        },
      };
    }
    var Lg = ["Webkit", "Moz", "ms"],
      Vg = k.createElement("div").style,
      Bg = {};
    function fC(c) {
      for (var p = c[0].toUpperCase() + c.slice(1), _ = Lg.length; _--; )
        if (((c = Lg[_] + p), c in Vg)) return c;
    }
    function Xu(c) {
      var p = b.cssProps[c] || Bg[c];
      return p || (c in Vg ? c : (Bg[c] = fC(c) || c));
    }
    var gC = /^(none|table(?!-c[ea]).+)/,
      _C = { position: "absolute", visibility: "hidden", display: "block" },
      Hg = { letterSpacing: "0", fontWeight: "400" };
    function jg(c, p, _) {
      var y = ss.exec(p);
      return y ? Math.max(0, y[2] - (_ || 0)) + (y[3] || "px") : p;
    }
    function Zu(c, p, _, y, w, D) {
      var I = p === "width" ? 1 : 0,
        R = 0,
        A = 0,
        z = 0;
      if (_ === (y ? "border" : "content")) return 0;
      for (; I < 4; I += 2)
        _ === "margin" && (z += b.css(c, _ + fr[I], !0, w)),
          y
            ? (_ === "content" && (A -= b.css(c, "padding" + fr[I], !0, w)),
              _ !== "margin" &&
                (A -= b.css(c, "border" + fr[I] + "Width", !0, w)))
            : ((A += b.css(c, "padding" + fr[I], !0, w)),
              _ !== "padding"
                ? (A += b.css(c, "border" + fr[I] + "Width", !0, w))
                : (R += b.css(c, "border" + fr[I] + "Width", !0, w)));
      return (
        !y &&
          D >= 0 &&
          (A +=
            Math.max(
              0,
              Math.ceil(
                c["offset" + p[0].toUpperCase() + p.slice(1)] - D - A - R - 0.5
              )
            ) || 0),
        A + z
      );
    }
    function Ug(c, p, _) {
      var y = tc(c),
        w = !C.boxSizingReliable() || _,
        D = w && b.css(c, "boxSizing", !1, y) === "border-box",
        I = D,
        R = cs(c, p, y),
        A = "offset" + p[0].toUpperCase() + p.slice(1);
      if (Ku.test(R)) {
        if (!_) return R;
        R = "auto";
      }
      return (
        ((!C.boxSizingReliable() && D) ||
          (!C.reliableTrDimensions() && re(c, "tr")) ||
          R === "auto" ||
          (!parseFloat(R) && b.css(c, "display", !1, y) === "inline")) &&
          c.getClientRects().length &&
          ((D = b.css(c, "boxSizing", !1, y) === "border-box"),
          (I = A in c),
          I && (R = c[A])),
        (R = parseFloat(R) || 0),
        R + Zu(c, p, _ || (D ? "border" : "content"), I, y, R) + "px"
      );
    }
    b.extend({
      cssHooks: {
        opacity: {
          get: function (c, p) {
            if (p) {
              var _ = cs(c, "opacity");
              return _ === "" ? "1" : _;
            }
          },
        },
      },
      cssNumber: {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageSlice: !0,
        columnCount: !0,
        flexGrow: !0,
        flexShrink: !0,
        fontWeight: !0,
        gridArea: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnStart: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowStart: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        scale: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
      },
      cssProps: {},
      style: function (c, p, _, y) {
        if (!(!c || c.nodeType === 3 || c.nodeType === 8 || !c.style)) {
          var w,
            D,
            I,
            R = jn(p),
            A = Qu.test(p),
            z = c.style;
          if (
            (A || (p = Xu(R)),
            (I = b.cssHooks[p] || b.cssHooks[R]),
            _ !== void 0)
          ) {
            if (
              ((D = typeof _),
              D === "string" &&
                (w = ss.exec(_)) &&
                w[1] &&
                ((_ = Mg(c, p, w)), (D = "number")),
              _ == null || _ !== _)
            )
              return;
            D === "number" &&
              !A &&
              (_ += (w && w[3]) || (b.cssNumber[R] ? "" : "px")),
              !C.clearCloneStyle &&
                _ === "" &&
                p.indexOf("background") === 0 &&
                (z[p] = "inherit"),
              (!I || !("set" in I) || (_ = I.set(c, _, y)) !== void 0) &&
                (A ? z.setProperty(p, _) : (z[p] = _));
          } else
            return I && "get" in I && (w = I.get(c, !1, y)) !== void 0
              ? w
              : z[p];
        }
      },
      css: function (c, p, _, y) {
        var w,
          D,
          I,
          R = jn(p),
          A = Qu.test(p);
        return (
          A || (p = Xu(R)),
          (I = b.cssHooks[p] || b.cssHooks[R]),
          I && "get" in I && (w = I.get(c, !0, _)),
          w === void 0 && (w = cs(c, p, y)),
          w === "normal" && p in Hg && (w = Hg[p]),
          _ === "" || _
            ? ((D = parseFloat(w)), _ === !0 || isFinite(D) ? D || 0 : w)
            : w
        );
      },
    }),
      b.each(["height", "width"], function (c, p) {
        b.cssHooks[p] = {
          get: function (_, y, w) {
            if (y)
              return gC.test(b.css(_, "display")) &&
                (!_.getClientRects().length || !_.getBoundingClientRect().width)
                ? Fg(_, _C, function () {
                    return Ug(_, p, w);
                  })
                : Ug(_, p, w);
          },
          set: function (_, y, w) {
            var D,
              I = tc(_),
              R = !C.scrollboxSize() && I.position === "absolute",
              A = R || w,
              z = A && b.css(_, "boxSizing", !1, I) === "border-box",
              J = w ? Zu(_, p, w, z, I) : 0;
            return (
              z &&
                R &&
                (J -= Math.ceil(
                  _["offset" + p[0].toUpperCase() + p.slice(1)] -
                    parseFloat(I[p]) -
                    Zu(_, p, "border", !1, I) -
                    0.5
                )),
              J &&
                (D = ss.exec(y)) &&
                (D[3] || "px") !== "px" &&
                ((_.style[p] = y), (y = b.css(_, p))),
              jg(_, y, J)
            );
          },
        };
      }),
      (b.cssHooks.marginLeft = Ng(C.reliableMarginLeft, function (c, p) {
        if (p)
          return (
            (parseFloat(cs(c, "marginLeft")) ||
              c.getBoundingClientRect().left -
                Fg(c, { marginLeft: 0 }, function () {
                  return c.getBoundingClientRect().left;
                })) + "px"
          );
      })),
      b.each({ margin: "", padding: "", border: "Width" }, function (c, p) {
        (b.cssHooks[c + p] = {
          expand: function (_) {
            for (
              var y = 0, w = {}, D = typeof _ == "string" ? _.split(" ") : [_];
              y < 4;
              y++
            )
              w[c + fr[y] + p] = D[y] || D[y - 2] || D[0];
            return w;
          },
        }),
          c !== "margin" && (b.cssHooks[c + p].set = jg);
      }),
      b.fn.extend({
        css: function (c, p) {
          return mr(
            this,
            function (_, y, w) {
              var D,
                I,
                R = {},
                A = 0;
              if (Array.isArray(y)) {
                for (D = tc(_), I = y.length; A < I; A++)
                  R[y[A]] = b.css(_, y[A], !1, D);
                return R;
              }
              return w !== void 0 ? b.style(_, y, w) : b.css(_, y);
            },
            c,
            p,
            arguments.length > 1
          );
        },
      });
    function Ni(c, p, _, y, w) {
      return new Ni.prototype.init(c, p, _, y, w);
    }
    (b.Tween = Ni),
      (Ni.prototype = {
        constructor: Ni,
        init: function (c, p, _, y, w, D) {
          (this.elem = c),
            (this.prop = _),
            (this.easing = w || b.easing._default),
            (this.options = p),
            (this.start = this.now = this.cur()),
            (this.end = y),
            (this.unit = D || (b.cssNumber[_] ? "" : "px"));
        },
        cur: function () {
          var c = Ni.propHooks[this.prop];
          return c && c.get ? c.get(this) : Ni.propHooks._default.get(this);
        },
        run: function (c) {
          var p,
            _ = Ni.propHooks[this.prop];
          return (
            this.options.duration
              ? (this.pos = p =
                  b.easing[this.easing](
                    c,
                    this.options.duration * c,
                    0,
                    1,
                    this.options.duration
                  ))
              : (this.pos = p = c),
            (this.now = (this.end - this.start) * p + this.start),
            this.options.step &&
              this.options.step.call(this.elem, this.now, this),
            _ && _.set ? _.set(this) : Ni.propHooks._default.set(this),
            this
          );
        },
      }),
      (Ni.prototype.init.prototype = Ni.prototype),
      (Ni.propHooks = {
        _default: {
          get: function (c) {
            var p;
            return c.elem.nodeType !== 1 ||
              (c.elem[c.prop] != null && c.elem.style[c.prop] == null)
              ? c.elem[c.prop]
              : ((p = b.css(c.elem, c.prop, "")), !p || p === "auto" ? 0 : p);
          },
          set: function (c) {
            b.fx.step[c.prop]
              ? b.fx.step[c.prop](c)
              : c.elem.nodeType === 1 &&
                (b.cssHooks[c.prop] || c.elem.style[Xu(c.prop)] != null)
              ? b.style(c.elem, c.prop, c.now + c.unit)
              : (c.elem[c.prop] = c.now);
          },
        },
      }),
      (Ni.propHooks.scrollTop = Ni.propHooks.scrollLeft =
        {
          set: function (c) {
            c.elem.nodeType && c.elem.parentNode && (c.elem[c.prop] = c.now);
          },
        }),
      (b.easing = {
        linear: function (c) {
          return c;
        },
        swing: function (c) {
          return 0.5 - Math.cos(c * Math.PI) / 2;
        },
        _default: "swing",
      }),
      (b.fx = Ni.prototype.init),
      (b.fx.step = {});
    var ta,
      ic,
      bC = /^(?:toggle|show|hide)$/,
      vC = /queueHooks$/;
    function Ju() {
      ic &&
        (k.hidden === !1 && n.requestAnimationFrame
          ? n.requestAnimationFrame(Ju)
          : n.setTimeout(Ju, b.fx.interval),
        b.fx.tick());
    }
    function zg() {
      return (
        n.setTimeout(function () {
          ta = void 0;
        }),
        (ta = Date.now())
      );
    }
    function nc(c, p) {
      var _,
        y = 0,
        w = { height: c };
      for (p = p ? 1 : 0; y < 4; y += 2 - p)
        (_ = fr[y]), (w["margin" + _] = w["padding" + _] = c);
      return p && (w.opacity = w.width = c), w;
    }
    function $g(c, p, _) {
      for (
        var y,
          w = (Mn.tweeners[p] || []).concat(Mn.tweeners["*"]),
          D = 0,
          I = w.length;
        D < I;
        D++
      )
        if ((y = w[D].call(_, p, c))) return y;
    }
    function yC(c, p, _) {
      var y,
        w,
        D,
        I,
        R,
        A,
        z,
        J,
        ne = "width" in p || "height" in p,
        q = this,
        se = {},
        ze = c.style,
        ct = c.nodeType && Jl(c),
        qe = Pe.get(c, "fxshow");
      _.queue ||
        ((I = b._queueHooks(c, "fx")),
        I.unqueued == null &&
          ((I.unqueued = 0),
          (R = I.empty.fire),
          (I.empty.fire = function () {
            I.unqueued || R();
          })),
        I.unqueued++,
        q.always(function () {
          q.always(function () {
            I.unqueued--, b.queue(c, "fx").length || I.empty.fire();
          });
        }));
      for (y in p)
        if (((w = p[y]), bC.test(w))) {
          if (
            (delete p[y],
            (D = D || w === "toggle"),
            w === (ct ? "hide" : "show"))
          )
            if (w === "show" && qe && qe[y] !== void 0) ct = !0;
            else continue;
          se[y] = (qe && qe[y]) || b.style(c, y);
        }
      if (((A = !b.isEmptyObject(p)), !(!A && b.isEmptyObject(se)))) {
        ne &&
          c.nodeType === 1 &&
          ((_.overflow = [ze.overflow, ze.overflowX, ze.overflowY]),
          (z = qe && qe.display),
          z == null && (z = Pe.get(c, "display")),
          (J = b.css(c, "display")),
          J === "none" &&
            (z
              ? (J = z)
              : (Xo([c], !0),
                (z = c.style.display || z),
                (J = b.css(c, "display")),
                Xo([c]))),
          (J === "inline" || (J === "inline-block" && z != null)) &&
            b.css(c, "float") === "none" &&
            (A ||
              (q.done(function () {
                ze.display = z;
              }),
              z == null && ((J = ze.display), (z = J === "none" ? "" : J))),
            (ze.display = "inline-block"))),
          _.overflow &&
            ((ze.overflow = "hidden"),
            q.always(function () {
              (ze.overflow = _.overflow[0]),
                (ze.overflowX = _.overflow[1]),
                (ze.overflowY = _.overflow[2]);
            })),
          (A = !1);
        for (y in se)
          A ||
            (qe
              ? "hidden" in qe && (ct = qe.hidden)
              : (qe = Pe.access(c, "fxshow", { display: z })),
            D && (qe.hidden = !ct),
            ct && Xo([c], !0),
            q.done(function () {
              ct || Xo([c]), Pe.remove(c, "fxshow");
              for (y in se) b.style(c, y, se[y]);
            })),
            (A = $g(ct ? qe[y] : 0, y, q)),
            y in qe ||
              ((qe[y] = A.start), ct && ((A.end = A.start), (A.start = 0)));
      }
    }
    function xC(c, p) {
      var _, y, w, D, I;
      for (_ in c)
        if (
          ((y = jn(_)),
          (w = p[y]),
          (D = c[_]),
          Array.isArray(D) && ((w = D[1]), (D = c[_] = D[0])),
          _ !== y && ((c[y] = D), delete c[_]),
          (I = b.cssHooks[y]),
          I && "expand" in I)
        ) {
          (D = I.expand(D)), delete c[y];
          for (_ in D) _ in c || ((c[_] = D[_]), (p[_] = w));
        } else p[y] = w;
    }
    function Mn(c, p, _) {
      var y,
        w,
        D = 0,
        I = Mn.prefilters.length,
        R = b.Deferred().always(function () {
          delete A.elem;
        }),
        A = function () {
          if (w) return !1;
          for (
            var ne = ta || zg(),
              q = Math.max(0, z.startTime + z.duration - ne),
              se = q / z.duration || 0,
              ze = 1 - se,
              ct = 0,
              qe = z.tweens.length;
            ct < qe;
            ct++
          )
            z.tweens[ct].run(ze);
          return (
            R.notifyWith(c, [z, ze, q]),
            ze < 1 && qe
              ? q
              : (qe || R.notifyWith(c, [z, 1, 0]), R.resolveWith(c, [z]), !1)
          );
        },
        z = R.promise({
          elem: c,
          props: b.extend({}, p),
          opts: b.extend(
            !0,
            { specialEasing: {}, easing: b.easing._default },
            _
          ),
          originalProperties: p,
          originalOptions: _,
          startTime: ta || zg(),
          duration: _.duration,
          tweens: [],
          createTween: function (ne, q) {
            var se = b.Tween(
              c,
              z.opts,
              ne,
              q,
              z.opts.specialEasing[ne] || z.opts.easing
            );
            return z.tweens.push(se), se;
          },
          stop: function (ne) {
            var q = 0,
              se = ne ? z.tweens.length : 0;
            if (w) return this;
            for (w = !0; q < se; q++) z.tweens[q].run(1);
            return (
              ne
                ? (R.notifyWith(c, [z, 1, 0]), R.resolveWith(c, [z, ne]))
                : R.rejectWith(c, [z, ne]),
              this
            );
          },
        }),
        J = z.props;
      for (xC(J, z.opts.specialEasing); D < I; D++)
        if (((y = Mn.prefilters[D].call(z, c, J, z.opts)), y))
          return (
            S(y.stop) &&
              (b._queueHooks(z.elem, z.opts.queue).stop = y.stop.bind(y)),
            y
          );
      return (
        b.map(J, $g, z),
        S(z.opts.start) && z.opts.start.call(c, z),
        z
          .progress(z.opts.progress)
          .done(z.opts.done, z.opts.complete)
          .fail(z.opts.fail)
          .always(z.opts.always),
        b.fx.timer(b.extend(A, { elem: c, anim: z, queue: z.opts.queue })),
        z
      );
    }
    (b.Animation = b.extend(Mn, {
      tweeners: {
        "*": [
          function (c, p) {
            var _ = this.createTween(c, p);
            return Mg(_.elem, c, ss.exec(p), _), _;
          },
        ],
      },
      tweener: function (c, p) {
        S(c) ? ((p = c), (c = ["*"])) : (c = c.match(Hn));
        for (var _, y = 0, w = c.length; y < w; y++)
          (_ = c[y]),
            (Mn.tweeners[_] = Mn.tweeners[_] || []),
            Mn.tweeners[_].unshift(p);
      },
      prefilters: [yC],
      prefilter: function (c, p) {
        p ? Mn.prefilters.unshift(c) : Mn.prefilters.push(c);
      },
    })),
      (b.speed = function (c, p, _) {
        var y =
          c && typeof c == "object"
            ? b.extend({}, c)
            : {
                complete: _ || (!_ && p) || (S(c) && c),
                duration: c,
                easing: (_ && p) || (p && !S(p) && p),
              };
        return (
          b.fx.off
            ? (y.duration = 0)
            : typeof y.duration != "number" &&
              (y.duration in b.fx.speeds
                ? (y.duration = b.fx.speeds[y.duration])
                : (y.duration = b.fx.speeds._default)),
          (y.queue == null || y.queue === !0) && (y.queue = "fx"),
          (y.old = y.complete),
          (y.complete = function () {
            S(y.old) && y.old.call(this), y.queue && b.dequeue(this, y.queue);
          }),
          y
        );
      }),
      b.fn.extend({
        fadeTo: function (c, p, _, y) {
          return this.filter(Jl)
            .css("opacity", 0)
            .show()
            .end()
            .animate({ opacity: p }, c, _, y);
        },
        animate: function (c, p, _, y) {
          var w = b.isEmptyObject(c),
            D = b.speed(p, _, y),
            I = function () {
              var R = Mn(this, b.extend({}, c), D);
              (w || Pe.get(this, "finish")) && R.stop(!0);
            };
          return (
            (I.finish = I),
            w || D.queue === !1 ? this.each(I) : this.queue(D.queue, I)
          );
        },
        stop: function (c, p, _) {
          var y = function (w) {
            var D = w.stop;
            delete w.stop, D(_);
          };
          return (
            typeof c != "string" && ((_ = p), (p = c), (c = void 0)),
            p && this.queue(c || "fx", []),
            this.each(function () {
              var w = !0,
                D = c != null && c + "queueHooks",
                I = b.timers,
                R = Pe.get(this);
              if (D) R[D] && R[D].stop && y(R[D]);
              else for (D in R) R[D] && R[D].stop && vC.test(D) && y(R[D]);
              for (D = I.length; D--; )
                I[D].elem === this &&
                  (c == null || I[D].queue === c) &&
                  (I[D].anim.stop(_), (w = !1), I.splice(D, 1));
              (w || !_) && b.dequeue(this, c);
            })
          );
        },
        finish: function (c) {
          return (
            c !== !1 && (c = c || "fx"),
            this.each(function () {
              var p,
                _ = Pe.get(this),
                y = _[c + "queue"],
                w = _[c + "queueHooks"],
                D = b.timers,
                I = y ? y.length : 0;
              for (
                _.finish = !0,
                  b.queue(this, c, []),
                  w && w.stop && w.stop.call(this, !0),
                  p = D.length;
                p--;

              )
                D[p].elem === this &&
                  D[p].queue === c &&
                  (D[p].anim.stop(!0), D.splice(p, 1));
              for (p = 0; p < I; p++)
                y[p] && y[p].finish && y[p].finish.call(this);
              delete _.finish;
            })
          );
        },
      }),
      b.each(["toggle", "show", "hide"], function (c, p) {
        var _ = b.fn[p];
        b.fn[p] = function (y, w, D) {
          return y == null || typeof y == "boolean"
            ? _.apply(this, arguments)
            : this.animate(nc(p, !0), y, w, D);
        };
      }),
      b.each(
        {
          slideDown: nc("show"),
          slideUp: nc("hide"),
          slideToggle: nc("toggle"),
          fadeIn: { opacity: "show" },
          fadeOut: { opacity: "hide" },
          fadeToggle: { opacity: "toggle" },
        },
        function (c, p) {
          b.fn[c] = function (_, y, w) {
            return this.animate(p, _, y, w);
          };
        }
      ),
      (b.timers = []),
      (b.fx.tick = function () {
        var c,
          p = 0,
          _ = b.timers;
        for (ta = Date.now(); p < _.length; p++)
          (c = _[p]), !c() && _[p] === c && _.splice(p--, 1);
        _.length || b.fx.stop(), (ta = void 0);
      }),
      (b.fx.timer = function (c) {
        b.timers.push(c), b.fx.start();
      }),
      (b.fx.interval = 13),
      (b.fx.start = function () {
        ic || ((ic = !0), Ju());
      }),
      (b.fx.stop = function () {
        ic = null;
      }),
      (b.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
      (b.fn.delay = function (c, p) {
        return (
          (c = (b.fx && b.fx.speeds[c]) || c),
          (p = p || "fx"),
          this.queue(p, function (_, y) {
            var w = n.setTimeout(_, c);
            y.stop = function () {
              n.clearTimeout(w);
            };
          })
        );
      }),
      (function () {
        var c = k.createElement("input"),
          p = k.createElement("select"),
          _ = p.appendChild(k.createElement("option"));
        (c.type = "checkbox"),
          (C.checkOn = c.value !== ""),
          (C.optSelected = _.selected),
          (c = k.createElement("input")),
          (c.value = "t"),
          (c.type = "radio"),
          (C.radioValue = c.value === "t");
      })();
    var Wg,
      ds = b.expr.attrHandle;
    b.fn.extend({
      attr: function (c, p) {
        return mr(this, b.attr, c, p, arguments.length > 1);
      },
      removeAttr: function (c) {
        return this.each(function () {
          b.removeAttr(this, c);
        });
      },
    }),
      b.extend({
        attr: function (c, p, _) {
          var y,
            w,
            D = c.nodeType;
          if (!(D === 3 || D === 8 || D === 2)) {
            if (typeof c.getAttribute > "u") return b.prop(c, p, _);
            if (
              ((D !== 1 || !b.isXMLDoc(c)) &&
                (w =
                  b.attrHooks[p.toLowerCase()] ||
                  (b.expr.match.bool.test(p) ? Wg : void 0)),
              _ !== void 0)
            ) {
              if (_ === null) {
                b.removeAttr(c, p);
                return;
              }
              return w && "set" in w && (y = w.set(c, _, p)) !== void 0
                ? y
                : (c.setAttribute(p, _ + ""), _);
            }
            return w && "get" in w && (y = w.get(c, p)) !== null
              ? y
              : ((y = b.find.attr(c, p)), y ?? void 0);
          }
        },
        attrHooks: {
          type: {
            set: function (c, p) {
              if (!C.radioValue && p === "radio" && re(c, "input")) {
                var _ = c.value;
                return c.setAttribute("type", p), _ && (c.value = _), p;
              }
            },
          },
        },
        removeAttr: function (c, p) {
          var _,
            y = 0,
            w = p && p.match(Hn);
          if (w && c.nodeType === 1)
            for (; (_ = w[y++]); ) c.removeAttribute(_);
        },
      }),
      (Wg = {
        set: function (c, p, _) {
          return p === !1 ? b.removeAttr(c, _) : c.setAttribute(_, _), _;
        },
      }),
      b.each(b.expr.match.bool.source.match(/\w+/g), function (c, p) {
        var _ = ds[p] || b.find.attr;
        ds[p] = function (y, w, D) {
          var I,
            R,
            A = w.toLowerCase();
          return (
            D ||
              ((R = ds[A]),
              (ds[A] = I),
              (I = _(y, w, D) != null ? A : null),
              (ds[A] = R)),
            I
          );
        };
      });
    var CC = /^(?:input|select|textarea|button)$/i,
      wC = /^(?:a|area)$/i;
    b.fn.extend({
      prop: function (c, p) {
        return mr(this, b.prop, c, p, arguments.length > 1);
      },
      removeProp: function (c) {
        return this.each(function () {
          delete this[b.propFix[c] || c];
        });
      },
    }),
      b.extend({
        prop: function (c, p, _) {
          var y,
            w,
            D = c.nodeType;
          if (!(D === 3 || D === 8 || D === 2))
            return (
              (D !== 1 || !b.isXMLDoc(c)) &&
                ((p = b.propFix[p] || p), (w = b.propHooks[p])),
              _ !== void 0
                ? w && "set" in w && (y = w.set(c, _, p)) !== void 0
                  ? y
                  : (c[p] = _)
                : w && "get" in w && (y = w.get(c, p)) !== null
                ? y
                : c[p]
            );
        },
        propHooks: {
          tabIndex: {
            get: function (c) {
              var p = b.find.attr(c, "tabindex");
              return p
                ? parseInt(p, 10)
                : CC.test(c.nodeName) || (wC.test(c.nodeName) && c.href)
                ? 0
                : -1;
            },
          },
        },
        propFix: { for: "htmlFor", class: "className" },
      }),
      C.optSelected ||
        (b.propHooks.selected = {
          get: function (c) {
            var p = c.parentNode;
            return p && p.parentNode && p.parentNode.selectedIndex, null;
          },
          set: function (c) {
            var p = c.parentNode;
            p && (p.selectedIndex, p.parentNode && p.parentNode.selectedIndex);
          },
        }),
      b.each(
        [
          "tabIndex",
          "readOnly",
          "maxLength",
          "cellSpacing",
          "cellPadding",
          "rowSpan",
          "colSpan",
          "useMap",
          "frameBorder",
          "contentEditable",
        ],
        function () {
          b.propFix[this.toLowerCase()] = this;
        }
      );
    function go(c) {
      var p = c.match(Hn) || [];
      return p.join(" ");
    }
    function _o(c) {
      return (c.getAttribute && c.getAttribute("class")) || "";
    }
    function eh(c) {
      return Array.isArray(c)
        ? c
        : typeof c == "string"
        ? c.match(Hn) || []
        : [];
    }
    b.fn.extend({
      addClass: function (c) {
        var p, _, y, w, D, I;
        return S(c)
          ? this.each(function (R) {
              b(this).addClass(c.call(this, R, _o(this)));
            })
          : ((p = eh(c)),
            p.length
              ? this.each(function () {
                  if (
                    ((y = _o(this)),
                    (_ = this.nodeType === 1 && " " + go(y) + " "),
                    _)
                  ) {
                    for (D = 0; D < p.length; D++)
                      (w = p[D]),
                        _.indexOf(" " + w + " ") < 0 && (_ += w + " ");
                    (I = go(_)), y !== I && this.setAttribute("class", I);
                  }
                })
              : this);
      },
      removeClass: function (c) {
        var p, _, y, w, D, I;
        return S(c)
          ? this.each(function (R) {
              b(this).removeClass(c.call(this, R, _o(this)));
            })
          : arguments.length
          ? ((p = eh(c)),
            p.length
              ? this.each(function () {
                  if (
                    ((y = _o(this)),
                    (_ = this.nodeType === 1 && " " + go(y) + " "),
                    _)
                  ) {
                    for (D = 0; D < p.length; D++)
                      for (w = p[D]; _.indexOf(" " + w + " ") > -1; )
                        _ = _.replace(" " + w + " ", " ");
                    (I = go(_)), y !== I && this.setAttribute("class", I);
                  }
                })
              : this)
          : this.attr("class", "");
      },
      toggleClass: function (c, p) {
        var _,
          y,
          w,
          D,
          I = typeof c,
          R = I === "string" || Array.isArray(c);
        return S(c)
          ? this.each(function (A) {
              b(this).toggleClass(c.call(this, A, _o(this), p), p);
            })
          : typeof p == "boolean" && R
          ? p
            ? this.addClass(c)
            : this.removeClass(c)
          : ((_ = eh(c)),
            this.each(function () {
              if (R)
                for (D = b(this), w = 0; w < _.length; w++)
                  (y = _[w]), D.hasClass(y) ? D.removeClass(y) : D.addClass(y);
              else
                (c === void 0 || I === "boolean") &&
                  ((y = _o(this)),
                  y && Pe.set(this, "__className__", y),
                  this.setAttribute &&
                    this.setAttribute(
                      "class",
                      y || c === !1 ? "" : Pe.get(this, "__className__") || ""
                    ));
            }));
      },
      hasClass: function (c) {
        var p,
          _,
          y = 0;
        for (p = " " + c + " "; (_ = this[y++]); )
          if (_.nodeType === 1 && (" " + go(_o(_)) + " ").indexOf(p) > -1)
            return !0;
        return !1;
      },
    });
    var DC = /\r/g;
    b.fn.extend({
      val: function (c) {
        var p,
          _,
          y,
          w = this[0];
        return arguments.length
          ? ((y = S(c)),
            this.each(function (D) {
              var I;
              this.nodeType === 1 &&
                (y ? (I = c.call(this, D, b(this).val())) : (I = c),
                I == null
                  ? (I = "")
                  : typeof I == "number"
                  ? (I += "")
                  : Array.isArray(I) &&
                    (I = b.map(I, function (R) {
                      return R == null ? "" : R + "";
                    })),
                (p =
                  b.valHooks[this.type] ||
                  b.valHooks[this.nodeName.toLowerCase()]),
                (!p || !("set" in p) || p.set(this, I, "value") === void 0) &&
                  (this.value = I));
            }))
          : w
          ? ((p = b.valHooks[w.type] || b.valHooks[w.nodeName.toLowerCase()]),
            p && "get" in p && (_ = p.get(w, "value")) !== void 0
              ? _
              : ((_ = w.value),
                typeof _ == "string" ? _.replace(DC, "") : _ ?? ""))
          : void 0;
      },
    }),
      b.extend({
        valHooks: {
          option: {
            get: function (c) {
              var p = b.find.attr(c, "value");
              return p ?? go(b.text(c));
            },
          },
          select: {
            get: function (c) {
              var p,
                _,
                y,
                w = c.options,
                D = c.selectedIndex,
                I = c.type === "select-one",
                R = I ? null : [],
                A = I ? D + 1 : w.length;
              for (D < 0 ? (y = A) : (y = I ? D : 0); y < A; y++)
                if (
                  ((_ = w[y]),
                  (_.selected || y === D) &&
                    !_.disabled &&
                    (!_.parentNode.disabled || !re(_.parentNode, "optgroup")))
                ) {
                  if (((p = b(_).val()), I)) return p;
                  R.push(p);
                }
              return R;
            },
            set: function (c, p) {
              for (
                var _, y, w = c.options, D = b.makeArray(p), I = w.length;
                I--;

              )
                (y = w[I]),
                  (y.selected = b.inArray(b.valHooks.option.get(y), D) > -1) &&
                    (_ = !0);
              return _ || (c.selectedIndex = -1), D;
            },
          },
        },
      }),
      b.each(["radio", "checkbox"], function () {
        (b.valHooks[this] = {
          set: function (c, p) {
            if (Array.isArray(p))
              return (c.checked = b.inArray(b(c).val(), p) > -1);
          },
        }),
          C.checkOn ||
            (b.valHooks[this].get = function (c) {
              return c.getAttribute("value") === null ? "on" : c.value;
            });
      });
    var us = n.location,
      Gg = { guid: Date.now() },
      th = /\?/;
    b.parseXML = function (c) {
      var p, _;
      if (!c || typeof c != "string") return null;
      try {
        p = new n.DOMParser().parseFromString(c, "text/xml");
      } catch {}
      return (
        (_ = p && p.getElementsByTagName("parsererror")[0]),
        (!p || _) &&
          b.error(
            "Invalid XML: " +
              (_
                ? b.map(_.childNodes, function (y) {
                    return y.textContent;
                  }).join(`
`)
                : c)
          ),
        p
      );
    };
    var Yg = /^(?:focusinfocus|focusoutblur)$/,
      qg = function (c) {
        c.stopPropagation();
      };
    b.extend(b.event, {
      trigger: function (c, p, _, y) {
        var w,
          D,
          I,
          R,
          A,
          z,
          J,
          ne,
          q = [_ || k],
          se = m.call(c, "type") ? c.type : c,
          ze = m.call(c, "namespace") ? c.namespace.split(".") : [];
        if (
          ((D = ne = I = _ = _ || k),
          !(_.nodeType === 3 || _.nodeType === 8) &&
            !Yg.test(se + b.event.triggered) &&
            (se.indexOf(".") > -1 &&
              ((ze = se.split(".")), (se = ze.shift()), ze.sort()),
            (A = se.indexOf(":") < 0 && "on" + se),
            (c = c[b.expando] ? c : new b.Event(se, typeof c == "object" && c)),
            (c.isTrigger = y ? 2 : 3),
            (c.namespace = ze.join(".")),
            (c.rnamespace = c.namespace
              ? new RegExp("(^|\\.)" + ze.join("\\.(?:.*\\.|)") + "(\\.|$)")
              : null),
            (c.result = void 0),
            c.target || (c.target = _),
            (p = p == null ? [c] : b.makeArray(p, [c])),
            (J = b.event.special[se] || {}),
            !(!y && J.trigger && J.trigger.apply(_, p) === !1)))
        ) {
          if (!y && !J.noBubble && !T(_)) {
            for (
              R = J.delegateType || se, Yg.test(R + se) || (D = D.parentNode);
              D;
              D = D.parentNode
            )
              q.push(D), (I = D);
            I === (_.ownerDocument || k) &&
              q.push(I.defaultView || I.parentWindow || n);
          }
          for (w = 0; (D = q[w++]) && !c.isPropagationStopped(); )
            (ne = D),
              (c.type = w > 1 ? R : J.bindType || se),
              (z =
                (Pe.get(D, "events") || Object.create(null))[c.type] &&
                Pe.get(D, "handle")),
              z && z.apply(D, p),
              (z = A && D[A]),
              z &&
                z.apply &&
                os(D) &&
                ((c.result = z.apply(D, p)),
                c.result === !1 && c.preventDefault());
          return (
            (c.type = se),
            !y &&
              !c.isDefaultPrevented() &&
              (!J._default || J._default.apply(q.pop(), p) === !1) &&
              os(_) &&
              A &&
              S(_[se]) &&
              !T(_) &&
              ((I = _[A]),
              I && (_[A] = null),
              (b.event.triggered = se),
              c.isPropagationStopped() && ne.addEventListener(se, qg),
              _[se](),
              c.isPropagationStopped() && ne.removeEventListener(se, qg),
              (b.event.triggered = void 0),
              I && (_[A] = I)),
            c.result
          );
        }
      },
      simulate: function (c, p, _) {
        var y = b.extend(new b.Event(), _, { type: c, isSimulated: !0 });
        b.event.trigger(y, null, p);
      },
    }),
      b.fn.extend({
        trigger: function (c, p) {
          return this.each(function () {
            b.event.trigger(c, p, this);
          });
        },
        triggerHandler: function (c, p) {
          var _ = this[0];
          if (_) return b.event.trigger(c, p, _, !0);
        },
      });
    var SC = /\[\]$/,
      Kg = /\r?\n/g,
      MC = /^(?:submit|button|image|reset|file)$/i,
      TC = /^(?:input|select|textarea|keygen)/i;
    function ih(c, p, _, y) {
      var w;
      if (Array.isArray(p))
        b.each(p, function (D, I) {
          _ || SC.test(c)
            ? y(c, I)
            : ih(
                c + "[" + (typeof I == "object" && I != null ? D : "") + "]",
                I,
                _,
                y
              );
        });
      else if (!_ && K(p) === "object")
        for (w in p) ih(c + "[" + w + "]", p[w], _, y);
      else y(c, p);
    }
    (b.param = function (c, p) {
      var _,
        y = [],
        w = function (D, I) {
          var R = S(I) ? I() : I;
          y[y.length] =
            encodeURIComponent(D) + "=" + encodeURIComponent(R ?? "");
        };
      if (c == null) return "";
      if (Array.isArray(c) || (c.jquery && !b.isPlainObject(c)))
        b.each(c, function () {
          w(this.name, this.value);
        });
      else for (_ in c) ih(_, c[_], p, w);
      return y.join("&");
    }),
      b.fn.extend({
        serialize: function () {
          return b.param(this.serializeArray());
        },
        serializeArray: function () {
          return this.map(function () {
            var c = b.prop(this, "elements");
            return c ? b.makeArray(c) : this;
          })
            .filter(function () {
              var c = this.type;
              return (
                this.name &&
                !b(this).is(":disabled") &&
                TC.test(this.nodeName) &&
                !MC.test(c) &&
                (this.checked || !ls.test(c))
              );
            })
            .map(function (c, p) {
              var _ = b(this).val();
              return _ == null
                ? null
                : Array.isArray(_)
                ? b.map(_, function (y) {
                    return {
                      name: p.name,
                      value: y.replace(
                        Kg,
                        `\r
`
                      ),
                    };
                  })
                : {
                    name: p.name,
                    value: _.replace(
                      Kg,
                      `\r
`
                    ),
                  };
            })
            .get();
        },
      });
    var EC = /%20/g,
      kC = /#.*$/,
      IC = /([?&])_=[^&]*/,
      OC = /^(.*?):[ \t]*([^\r\n]*)$/gm,
      PC = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      AC = /^(?:GET|HEAD)$/,
      RC = /^\/\//,
      Qg = {},
      nh = {},
      Xg = "*/".concat("*"),
      rh = k.createElement("a");
    rh.href = us.href;
    function Zg(c) {
      return function (p, _) {
        typeof p != "string" && ((_ = p), (p = "*"));
        var y,
          w = 0,
          D = p.toLowerCase().match(Hn) || [];
        if (S(_))
          for (; (y = D[w++]); )
            y[0] === "+"
              ? ((y = y.slice(1) || "*"), (c[y] = c[y] || []).unshift(_))
              : (c[y] = c[y] || []).push(_);
      };
    }
    function Jg(c, p, _, y) {
      var w = {},
        D = c === nh;
      function I(R) {
        var A;
        return (
          (w[R] = !0),
          b.each(c[R] || [], function (z, J) {
            var ne = J(p, _, y);
            if (typeof ne == "string" && !D && !w[ne])
              return p.dataTypes.unshift(ne), I(ne), !1;
            if (D) return !(A = ne);
          }),
          A
        );
      }
      return I(p.dataTypes[0]) || (!w["*"] && I("*"));
    }
    function oh(c, p) {
      var _,
        y,
        w = b.ajaxSettings.flatOptions || {};
      for (_ in p) p[_] !== void 0 && ((w[_] ? c : y || (y = {}))[_] = p[_]);
      return y && b.extend(!0, c, y), c;
    }
    function FC(c, p, _) {
      for (var y, w, D, I, R = c.contents, A = c.dataTypes; A[0] === "*"; )
        A.shift(),
          y === void 0 &&
            (y = c.mimeType || p.getResponseHeader("Content-Type"));
      if (y) {
        for (w in R)
          if (R[w] && R[w].test(y)) {
            A.unshift(w);
            break;
          }
      }
      if (A[0] in _) D = A[0];
      else {
        for (w in _) {
          if (!A[0] || c.converters[w + " " + A[0]]) {
            D = w;
            break;
          }
          I || (I = w);
        }
        D = D || I;
      }
      if (D) return D !== A[0] && A.unshift(D), _[D];
    }
    function NC(c, p, _, y) {
      var w,
        D,
        I,
        R,
        A,
        z = {},
        J = c.dataTypes.slice();
      if (J[1]) for (I in c.converters) z[I.toLowerCase()] = c.converters[I];
      for (D = J.shift(); D; )
        if (
          (c.responseFields[D] && (_[c.responseFields[D]] = p),
          !A && y && c.dataFilter && (p = c.dataFilter(p, c.dataType)),
          (A = D),
          (D = J.shift()),
          D)
        ) {
          if (D === "*") D = A;
          else if (A !== "*" && A !== D) {
            if (((I = z[A + " " + D] || z["* " + D]), !I)) {
              for (w in z)
                if (
                  ((R = w.split(" ")),
                  R[1] === D && ((I = z[A + " " + R[0]] || z["* " + R[0]]), I))
                ) {
                  I === !0
                    ? (I = z[w])
                    : z[w] !== !0 && ((D = R[0]), J.unshift(R[1]));
                  break;
                }
            }
            if (I !== !0)
              if (I && c.throws) p = I(p);
              else
                try {
                  p = I(p);
                } catch (ne) {
                  return {
                    state: "parsererror",
                    error: I ? ne : "No conversion from " + A + " to " + D,
                  };
                }
          }
        }
      return { state: "success", data: p };
    }
    b.extend({
      active: 0,
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: us.href,
        type: "GET",
        isLocal: PC.test(us.protocol),
        global: !0,
        processData: !0,
        async: !0,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        accepts: {
          "*": Xg,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript",
        },
        contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON",
        },
        converters: {
          "* text": String,
          "text html": !0,
          "text json": JSON.parse,
          "text xml": b.parseXML,
        },
        flatOptions: { url: !0, context: !0 },
      },
      ajaxSetup: function (c, p) {
        return p ? oh(oh(c, b.ajaxSettings), p) : oh(b.ajaxSettings, c);
      },
      ajaxPrefilter: Zg(Qg),
      ajaxTransport: Zg(nh),
      ajax: function (c, p) {
        typeof c == "object" && ((p = c), (c = void 0)), (p = p || {});
        var _,
          y,
          w,
          D,
          I,
          R,
          A,
          z,
          J,
          ne,
          q = b.ajaxSetup({}, p),
          se = q.context || q,
          ze = q.context && (se.nodeType || se.jquery) ? b(se) : b.event,
          ct = b.Deferred(),
          qe = b.Callbacks("once memory"),
          gi = q.statusCode || {},
          ri = {},
          Un = {},
          zn = "canceled",
          at = {
            readyState: 0,
            getResponseHeader: function (dt) {
              var jt;
              if (A) {
                if (!D)
                  for (D = {}; (jt = OC.exec(w)); )
                    D[jt[1].toLowerCase() + " "] = (
                      D[jt[1].toLowerCase() + " "] || []
                    ).concat(jt[2]);
                jt = D[dt.toLowerCase() + " "];
              }
              return jt == null ? null : jt.join(", ");
            },
            getAllResponseHeaders: function () {
              return A ? w : null;
            },
            setRequestHeader: function (dt, jt) {
              return (
                A == null &&
                  ((dt = Un[dt.toLowerCase()] = Un[dt.toLowerCase()] || dt),
                  (ri[dt] = jt)),
                this
              );
            },
            overrideMimeType: function (dt) {
              return A == null && (q.mimeType = dt), this;
            },
            statusCode: function (dt) {
              var jt;
              if (dt)
                if (A) at.always(dt[at.status]);
                else for (jt in dt) gi[jt] = [gi[jt], dt[jt]];
              return this;
            },
            abort: function (dt) {
              var jt = dt || zn;
              return _ && _.abort(jt), bo(0, jt), this;
            },
          };
        if (
          (ct.promise(at),
          (q.url = ((c || q.url || us.href) + "").replace(
            RC,
            us.protocol + "//"
          )),
          (q.type = p.method || p.type || q.method || q.type),
          (q.dataTypes = (q.dataType || "*").toLowerCase().match(Hn) || [""]),
          q.crossDomain == null)
        ) {
          R = k.createElement("a");
          try {
            (R.href = q.url),
              (R.href = R.href),
              (q.crossDomain =
                rh.protocol + "//" + rh.host != R.protocol + "//" + R.host);
          } catch {
            q.crossDomain = !0;
          }
        }
        if (
          (q.data &&
            q.processData &&
            typeof q.data != "string" &&
            (q.data = b.param(q.data, q.traditional)),
          Jg(Qg, q, p, at),
          A)
        )
          return at;
        (z = b.event && q.global),
          z && b.active++ === 0 && b.event.trigger("ajaxStart"),
          (q.type = q.type.toUpperCase()),
          (q.hasContent = !AC.test(q.type)),
          (y = q.url.replace(kC, "")),
          q.hasContent
            ? q.data &&
              q.processData &&
              (q.contentType || "").indexOf(
                "application/x-www-form-urlencoded"
              ) === 0 &&
              (q.data = q.data.replace(EC, "+"))
            : ((ne = q.url.slice(y.length)),
              q.data &&
                (q.processData || typeof q.data == "string") &&
                ((y += (th.test(y) ? "&" : "?") + q.data), delete q.data),
              q.cache === !1 &&
                ((y = y.replace(IC, "$1")),
                (ne = (th.test(y) ? "&" : "?") + "_=" + Gg.guid++ + ne)),
              (q.url = y + ne)),
          q.ifModified &&
            (b.lastModified[y] &&
              at.setRequestHeader("If-Modified-Since", b.lastModified[y]),
            b.etag[y] && at.setRequestHeader("If-None-Match", b.etag[y])),
          ((q.data && q.hasContent && q.contentType !== !1) || p.contentType) &&
            at.setRequestHeader("Content-Type", q.contentType),
          at.setRequestHeader(
            "Accept",
            q.dataTypes[0] && q.accepts[q.dataTypes[0]]
              ? q.accepts[q.dataTypes[0]] +
                  (q.dataTypes[0] !== "*" ? ", " + Xg + "; q=0.01" : "")
              : q.accepts["*"]
          );
        for (J in q.headers) at.setRequestHeader(J, q.headers[J]);
        if (q.beforeSend && (q.beforeSend.call(se, at, q) === !1 || A))
          return at.abort();
        if (
          ((zn = "abort"),
          qe.add(q.complete),
          at.done(q.success),
          at.fail(q.error),
          (_ = Jg(nh, q, p, at)),
          !_)
        )
          bo(-1, "No Transport");
        else {
          if (((at.readyState = 1), z && ze.trigger("ajaxSend", [at, q]), A))
            return at;
          q.async &&
            q.timeout > 0 &&
            (I = n.setTimeout(function () {
              at.abort("timeout");
            }, q.timeout));
          try {
            (A = !1), _.send(ri, bo);
          } catch (dt) {
            if (A) throw dt;
            bo(-1, dt);
          }
        }
        function bo(dt, jt, ps, sh) {
          var $n,
            ms,
            Wn,
            Nr,
            Lr,
            pn = jt;
          A ||
            ((A = !0),
            I && n.clearTimeout(I),
            (_ = void 0),
            (w = sh || ""),
            (at.readyState = dt > 0 ? 4 : 0),
            ($n = (dt >= 200 && dt < 300) || dt === 304),
            ps && (Nr = FC(q, at, ps)),
            !$n &&
              b.inArray("script", q.dataTypes) > -1 &&
              b.inArray("json", q.dataTypes) < 0 &&
              (q.converters["text script"] = function () {}),
            (Nr = NC(q, Nr, at, $n)),
            $n
              ? (q.ifModified &&
                  ((Lr = at.getResponseHeader("Last-Modified")),
                  Lr && (b.lastModified[y] = Lr),
                  (Lr = at.getResponseHeader("etag")),
                  Lr && (b.etag[y] = Lr)),
                dt === 204 || q.type === "HEAD"
                  ? (pn = "nocontent")
                  : dt === 304
                  ? (pn = "notmodified")
                  : ((pn = Nr.state),
                    (ms = Nr.data),
                    (Wn = Nr.error),
                    ($n = !Wn)))
              : ((Wn = pn),
                (dt || !pn) && ((pn = "error"), dt < 0 && (dt = 0))),
            (at.status = dt),
            (at.statusText = (jt || pn) + ""),
            $n
              ? ct.resolveWith(se, [ms, pn, at])
              : ct.rejectWith(se, [at, pn, Wn]),
            at.statusCode(gi),
            (gi = void 0),
            z &&
              ze.trigger($n ? "ajaxSuccess" : "ajaxError", [
                at,
                q,
                $n ? ms : Wn,
              ]),
            qe.fireWith(se, [at, pn]),
            z &&
              (ze.trigger("ajaxComplete", [at, q]),
              --b.active || b.event.trigger("ajaxStop")));
        }
        return at;
      },
      getJSON: function (c, p, _) {
        return b.get(c, p, _, "json");
      },
      getScript: function (c, p) {
        return b.get(c, void 0, p, "script");
      },
    }),
      b.each(["get", "post"], function (c, p) {
        b[p] = function (_, y, w, D) {
          return (
            S(y) && ((D = D || w), (w = y), (y = void 0)),
            b.ajax(
              b.extend(
                { url: _, type: p, dataType: D, data: y, success: w },
                b.isPlainObject(_) && _
              )
            )
          );
        };
      }),
      b.ajaxPrefilter(function (c) {
        var p;
        for (p in c.headers)
          p.toLowerCase() === "content-type" &&
            (c.contentType = c.headers[p] || "");
      }),
      (b._evalUrl = function (c, p, _) {
        return b.ajax({
          url: c,
          type: "GET",
          dataType: "script",
          cache: !0,
          async: !1,
          global: !1,
          converters: { "text script": function () {} },
          dataFilter: function (y) {
            b.globalEval(y, p, _);
          },
        });
      }),
      b.fn.extend({
        wrapAll: function (c) {
          var p;
          return (
            this[0] &&
              (S(c) && (c = c.call(this[0])),
              (p = b(c, this[0].ownerDocument).eq(0).clone(!0)),
              this[0].parentNode && p.insertBefore(this[0]),
              p
                .map(function () {
                  for (var _ = this; _.firstElementChild; )
                    _ = _.firstElementChild;
                  return _;
                })
                .append(this)),
            this
          );
        },
        wrapInner: function (c) {
          return S(c)
            ? this.each(function (p) {
                b(this).wrapInner(c.call(this, p));
              })
            : this.each(function () {
                var p = b(this),
                  _ = p.contents();
                _.length ? _.wrapAll(c) : p.append(c);
              });
        },
        wrap: function (c) {
          var p = S(c);
          return this.each(function (_) {
            b(this).wrapAll(p ? c.call(this, _) : c);
          });
        },
        unwrap: function (c) {
          return (
            this.parent(c)
              .not("body")
              .each(function () {
                b(this).replaceWith(this.childNodes);
              }),
            this
          );
        },
      }),
      (b.expr.pseudos.hidden = function (c) {
        return !b.expr.pseudos.visible(c);
      }),
      (b.expr.pseudos.visible = function (c) {
        return !!(c.offsetWidth || c.offsetHeight || c.getClientRects().length);
      }),
      (b.ajaxSettings.xhr = function () {
        try {
          return new n.XMLHttpRequest();
        } catch {}
      });
    var LC = { 0: 200, 1223: 204 },
      hs = b.ajaxSettings.xhr();
    (C.cors = !!hs && "withCredentials" in hs),
      (C.ajax = hs = !!hs),
      b.ajaxTransport(function (c) {
        var p, _;
        if (C.cors || (hs && !c.crossDomain))
          return {
            send: function (y, w) {
              var D,
                I = c.xhr();
              if (
                (I.open(c.type, c.url, c.async, c.username, c.password),
                c.xhrFields)
              )
                for (D in c.xhrFields) I[D] = c.xhrFields[D];
              c.mimeType &&
                I.overrideMimeType &&
                I.overrideMimeType(c.mimeType),
                !c.crossDomain &&
                  !y["X-Requested-With"] &&
                  (y["X-Requested-With"] = "XMLHttpRequest");
              for (D in y) I.setRequestHeader(D, y[D]);
              (p = function (R) {
                return function () {
                  p &&
                    ((p =
                      _ =
                      I.onload =
                      I.onerror =
                      I.onabort =
                      I.ontimeout =
                      I.onreadystatechange =
                        null),
                    R === "abort"
                      ? I.abort()
                      : R === "error"
                      ? typeof I.status != "number"
                        ? w(0, "error")
                        : w(I.status, I.statusText)
                      : w(
                          LC[I.status] || I.status,
                          I.statusText,
                          (I.responseType || "text") !== "text" ||
                            typeof I.responseText != "string"
                            ? { binary: I.response }
                            : { text: I.responseText },
                          I.getAllResponseHeaders()
                        ));
                };
              }),
                (I.onload = p()),
                (_ = I.onerror = I.ontimeout = p("error")),
                I.onabort !== void 0
                  ? (I.onabort = _)
                  : (I.onreadystatechange = function () {
                      I.readyState === 4 &&
                        n.setTimeout(function () {
                          p && _();
                        });
                    }),
                (p = p("abort"));
              try {
                I.send((c.hasContent && c.data) || null);
              } catch (R) {
                if (p) throw R;
              }
            },
            abort: function () {
              p && p();
            },
          };
      }),
      b.ajaxPrefilter(function (c) {
        c.crossDomain && (c.contents.script = !1);
      }),
      b.ajaxSetup({
        accepts: {
          script:
            "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
        },
        contents: { script: /\b(?:java|ecma)script\b/ },
        converters: {
          "text script": function (c) {
            return b.globalEval(c), c;
          },
        },
      }),
      b.ajaxPrefilter("script", function (c) {
        c.cache === void 0 && (c.cache = !1), c.crossDomain && (c.type = "GET");
      }),
      b.ajaxTransport("script", function (c) {
        if (c.crossDomain || c.scriptAttrs) {
          var p, _;
          return {
            send: function (y, w) {
              (p = b("<script>")
                .attr(c.scriptAttrs || {})
                .prop({ charset: c.scriptCharset, src: c.url })
                .on(
                  "load error",
                  (_ = function (D) {
                    p.remove(),
                      (_ = null),
                      D && w(D.type === "error" ? 404 : 200, D.type);
                  })
                )),
                k.head.appendChild(p[0]);
            },
            abort: function () {
              _ && _();
            },
          };
        }
      });
    var e_ = [],
      ah = /(=)\?(?=&|$)|\?\?/;
    b.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function () {
        var c = e_.pop() || b.expando + "_" + Gg.guid++;
        return (this[c] = !0), c;
      },
    }),
      b.ajaxPrefilter("json jsonp", function (c, p, _) {
        var y,
          w,
          D,
          I =
            c.jsonp !== !1 &&
            (ah.test(c.url)
              ? "url"
              : typeof c.data == "string" &&
                (c.contentType || "").indexOf(
                  "application/x-www-form-urlencoded"
                ) === 0 &&
                ah.test(c.data) &&
                "data");
        if (I || c.dataTypes[0] === "jsonp")
          return (
            (y = c.jsonpCallback =
              S(c.jsonpCallback) ? c.jsonpCallback() : c.jsonpCallback),
            I
              ? (c[I] = c[I].replace(ah, "$1" + y))
              : c.jsonp !== !1 &&
                (c.url += (th.test(c.url) ? "&" : "?") + c.jsonp + "=" + y),
            (c.converters["script json"] = function () {
              return D || b.error(y + " was not called"), D[0];
            }),
            (c.dataTypes[0] = "json"),
            (w = n[y]),
            (n[y] = function () {
              D = arguments;
            }),
            _.always(function () {
              w === void 0 ? b(n).removeProp(y) : (n[y] = w),
                c[y] && ((c.jsonpCallback = p.jsonpCallback), e_.push(y)),
                D && S(w) && w(D[0]),
                (D = w = void 0);
            }),
            "script"
          );
      }),
      (C.createHTMLDocument = (function () {
        var c = k.implementation.createHTMLDocument("").body;
        return (
          (c.innerHTML = "<form></form><form></form>"),
          c.childNodes.length === 2
        );
      })()),
      (b.parseHTML = function (c, p, _) {
        if (typeof c != "string") return [];
        typeof p == "boolean" && ((_ = p), (p = !1));
        var y, w, D;
        return (
          p ||
            (C.createHTMLDocument
              ? ((p = k.implementation.createHTMLDocument("")),
                (y = p.createElement("base")),
                (y.href = k.location.href),
                p.head.appendChild(y))
              : (p = k)),
          (w = po.exec(c)),
          (D = !_ && []),
          w
            ? [p.createElement(w[1])]
            : ((w = Ig([c], p, D)),
              D && D.length && b(D).remove(),
              b.merge([], w.childNodes))
        );
      }),
      (b.fn.load = function (c, p, _) {
        var y,
          w,
          D,
          I = this,
          R = c.indexOf(" ");
        return (
          R > -1 && ((y = go(c.slice(R))), (c = c.slice(0, R))),
          S(p)
            ? ((_ = p), (p = void 0))
            : p && typeof p == "object" && (w = "POST"),
          I.length > 0 &&
            b
              .ajax({ url: c, type: w || "GET", dataType: "html", data: p })
              .done(function (A) {
                (D = arguments),
                  I.html(y ? b("<div>").append(b.parseHTML(A)).find(y) : A);
              })
              .always(
                _ &&
                  function (A, z) {
                    I.each(function () {
                      _.apply(this, D || [A.responseText, z, A]);
                    });
                  }
              ),
          this
        );
      }),
      (b.expr.pseudos.animated = function (c) {
        return b.grep(b.timers, function (p) {
          return c === p.elem;
        }).length;
      }),
      (b.offset = {
        setOffset: function (c, p, _) {
          var y,
            w,
            D,
            I,
            R,
            A,
            z,
            J = b.css(c, "position"),
            ne = b(c),
            q = {};
          J === "static" && (c.style.position = "relative"),
            (R = ne.offset()),
            (D = b.css(c, "top")),
            (A = b.css(c, "left")),
            (z =
              (J === "absolute" || J === "fixed") &&
              (D + A).indexOf("auto") > -1),
            z
              ? ((y = ne.position()), (I = y.top), (w = y.left))
              : ((I = parseFloat(D) || 0), (w = parseFloat(A) || 0)),
            S(p) && (p = p.call(c, _, b.extend({}, R))),
            p.top != null && (q.top = p.top - R.top + I),
            p.left != null && (q.left = p.left - R.left + w),
            "using" in p ? p.using.call(c, q) : ne.css(q);
        },
      }),
      b.fn.extend({
        offset: function (c) {
          if (arguments.length)
            return c === void 0
              ? this
              : this.each(function (w) {
                  b.offset.setOffset(this, c, w);
                });
          var p,
            _,
            y = this[0];
          if (y)
            return y.getClientRects().length
              ? ((p = y.getBoundingClientRect()),
                (_ = y.ownerDocument.defaultView),
                { top: p.top + _.pageYOffset, left: p.left + _.pageXOffset })
              : { top: 0, left: 0 };
        },
        position: function () {
          if (this[0]) {
            var c,
              p,
              _,
              y = this[0],
              w = { top: 0, left: 0 };
            if (b.css(y, "position") === "fixed") p = y.getBoundingClientRect();
            else {
              for (
                p = this.offset(),
                  _ = y.ownerDocument,
                  c = y.offsetParent || _.documentElement;
                c &&
                (c === _.body || c === _.documentElement) &&
                b.css(c, "position") === "static";

              )
                c = c.parentNode;
              c &&
                c !== y &&
                c.nodeType === 1 &&
                ((w = b(c).offset()),
                (w.top += b.css(c, "borderTopWidth", !0)),
                (w.left += b.css(c, "borderLeftWidth", !0)));
            }
            return {
              top: p.top - w.top - b.css(y, "marginTop", !0),
              left: p.left - w.left - b.css(y, "marginLeft", !0),
            };
          }
        },
        offsetParent: function () {
          return this.map(function () {
            for (
              var c = this.offsetParent;
              c && b.css(c, "position") === "static";

            )
              c = c.offsetParent;
            return c || fo;
          });
        },
      }),
      b.each(
        { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
        function (c, p) {
          var _ = p === "pageYOffset";
          b.fn[c] = function (y) {
            return mr(
              this,
              function (w, D, I) {
                var R;
                if (
                  (T(w) ? (R = w) : w.nodeType === 9 && (R = w.defaultView),
                  I === void 0)
                )
                  return R ? R[p] : w[D];
                R
                  ? R.scrollTo(_ ? R.pageXOffset : I, _ ? I : R.pageYOffset)
                  : (w[D] = I);
              },
              c,
              y,
              arguments.length
            );
          };
        }
      ),
      b.each(["top", "left"], function (c, p) {
        b.cssHooks[p] = Ng(C.pixelPosition, function (_, y) {
          if (y)
            return (y = cs(_, p)), Ku.test(y) ? b(_).position()[p] + "px" : y;
        });
      }),
      b.each({ Height: "height", Width: "width" }, function (c, p) {
        b.each(
          { padding: "inner" + c, content: p, "": "outer" + c },
          function (_, y) {
            b.fn[y] = function (w, D) {
              var I = arguments.length && (_ || typeof w != "boolean"),
                R = _ || (w === !0 || D === !0 ? "margin" : "border");
              return mr(
                this,
                function (A, z, J) {
                  var ne;
                  return T(A)
                    ? y.indexOf("outer") === 0
                      ? A["inner" + c]
                      : A.document.documentElement["client" + c]
                    : A.nodeType === 9
                    ? ((ne = A.documentElement),
                      Math.max(
                        A.body["scroll" + c],
                        ne["scroll" + c],
                        A.body["offset" + c],
                        ne["offset" + c],
                        ne["client" + c]
                      ))
                    : J === void 0
                    ? b.css(A, z, R)
                    : b.style(A, z, J, R);
                },
                p,
                I ? w : void 0,
                I
              );
            };
          }
        );
      }),
      b.each(
        [
          "ajaxStart",
          "ajaxStop",
          "ajaxComplete",
          "ajaxError",
          "ajaxSuccess",
          "ajaxSend",
        ],
        function (c, p) {
          b.fn[p] = function (_) {
            return this.on(p, _);
          };
        }
      ),
      b.fn.extend({
        bind: function (c, p, _) {
          return this.on(c, null, p, _);
        },
        unbind: function (c, p) {
          return this.off(c, null, p);
        },
        delegate: function (c, p, _, y) {
          return this.on(p, c, _, y);
        },
        undelegate: function (c, p, _) {
          return arguments.length === 1
            ? this.off(c, "**")
            : this.off(p, c || "**", _);
        },
        hover: function (c, p) {
          return this.on("mouseenter", c).on("mouseleave", p || c);
        },
      }),
      b.each(
        "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(
          " "
        ),
        function (c, p) {
          b.fn[p] = function (_, y) {
            return arguments.length > 0
              ? this.on(p, null, _, y)
              : this.trigger(p);
          };
        }
      );
    var VC = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    (b.proxy = function (c, p) {
      var _, y, w;
      if ((typeof p == "string" && ((_ = c[p]), (p = c), (c = _)), !!S(c)))
        return (
          (y = r.call(arguments, 2)),
          (w = function () {
            return c.apply(p || this, y.concat(r.call(arguments)));
          }),
          (w.guid = c.guid = c.guid || b.guid++),
          w
        );
    }),
      (b.holdReady = function (c) {
        c ? b.readyWait++ : b.ready(!0);
      }),
      (b.isArray = Array.isArray),
      (b.parseJSON = JSON.parse),
      (b.nodeName = re),
      (b.isFunction = S),
      (b.isWindow = T),
      (b.camelCase = jn),
      (b.type = K),
      (b.now = Date.now),
      (b.isNumeric = function (c) {
        var p = b.type(c);
        return (p === "number" || p === "string") && !isNaN(c - parseFloat(c));
      }),
      (b.trim = function (c) {
        return c == null ? "" : (c + "").replace(VC, "$1");
      }),
      typeof define == "function" &&
        define.amd &&
        define("jquery", [], function () {
          return b;
        });
    var BC = n.jQuery,
      HC = n.$;
    return (
      (b.noConflict = function (c) {
        return (
          n.$ === b && (n.$ = HC), c && n.jQuery === b && (n.jQuery = BC), b
        );
      }),
      typeof t > "u" && (n.jQuery = n.$ = b),
      b
    );
  });
});
var Is = class {},
  Tc = class {},
  vt = class n {
    constructor(t) {
      (this.normalizedNames = new Map()),
        (this.lazyUpdate = null),
        t
          ? typeof t == "string"
            ? (this.lazyInit = () => {
                (this.headers = new Map()),
                  t
                    .split(
                      `
`
                    )
                    .forEach((e) => {
                      let i = e.indexOf(":");
                      if (i > 0) {
                        let r = e.slice(0, i),
                          o = r.toLowerCase(),
                          a = e.slice(i + 1).trim();
                        this.maybeSetNormalizedName(r, o),
                          this.headers.has(o)
                            ? this.headers.get(o).push(a)
                            : this.headers.set(o, [a]);
                      }
                    });
              })
            : typeof Headers < "u" && t instanceof Headers
            ? ((this.headers = new Map()),
              t.forEach((e, i) => {
                this.setHeaderEntries(i, e);
              }))
            : (this.lazyInit = () => {
                (this.headers = new Map()),
                  Object.entries(t).forEach(([e, i]) => {
                    this.setHeaderEntries(e, i);
                  });
              })
          : (this.headers = new Map());
    }
    has(t) {
      return this.init(), this.headers.has(t.toLowerCase());
    }
    get(t) {
      this.init();
      let e = this.headers.get(t.toLowerCase());
      return e && e.length > 0 ? e[0] : null;
    }
    keys() {
      return this.init(), Array.from(this.normalizedNames.values());
    }
    getAll(t) {
      return this.init(), this.headers.get(t.toLowerCase()) || null;
    }
    append(t, e) {
      return this.clone({ name: t, value: e, op: "a" });
    }
    set(t, e) {
      return this.clone({ name: t, value: e, op: "s" });
    }
    delete(t, e) {
      return this.clone({ name: t, value: e, op: "d" });
    }
    maybeSetNormalizedName(t, e) {
      this.normalizedNames.has(e) || this.normalizedNames.set(e, t);
    }
    init() {
      this.lazyInit &&
        (this.lazyInit instanceof n
          ? this.copyFrom(this.lazyInit)
          : this.lazyInit(),
        (this.lazyInit = null),
        this.lazyUpdate &&
          (this.lazyUpdate.forEach((t) => this.applyUpdate(t)),
          (this.lazyUpdate = null)));
    }
    copyFrom(t) {
      t.init(),
        Array.from(t.headers.keys()).forEach((e) => {
          this.headers.set(e, t.headers.get(e)),
            this.normalizedNames.set(e, t.normalizedNames.get(e));
        });
    }
    clone(t) {
      let e = new n();
      return (
        (e.lazyInit =
          this.lazyInit && this.lazyInit instanceof n ? this.lazyInit : this),
        (e.lazyUpdate = (this.lazyUpdate || []).concat([t])),
        e
      );
    }
    applyUpdate(t) {
      let e = t.name.toLowerCase();
      switch (t.op) {
        case "a":
        case "s":
          let i = t.value;
          if ((typeof i == "string" && (i = [i]), i.length === 0)) return;
          this.maybeSetNormalizedName(t.name, e);
          let r = (t.op === "a" ? this.headers.get(e) : void 0) || [];
          r.push(...i), this.headers.set(e, r);
          break;
        case "d":
          let o = t.value;
          if (!o) this.headers.delete(e), this.normalizedNames.delete(e);
          else {
            let a = this.headers.get(e);
            if (!a) return;
            (a = a.filter((s) => o.indexOf(s) === -1)),
              a.length === 0
                ? (this.headers.delete(e), this.normalizedNames.delete(e))
                : this.headers.set(e, a);
          }
          break;
      }
    }
    setHeaderEntries(t, e) {
      let i = (Array.isArray(e) ? e : [e]).map((o) => o.toString()),
        r = t.toLowerCase();
      this.headers.set(r, i), this.maybeSetNormalizedName(t, r);
    }
    forEach(t) {
      this.init(),
        Array.from(this.normalizedNames.keys()).forEach((e) =>
          t(this.normalizedNames.get(e), this.headers.get(e))
        );
    }
  };
var Nh = class {
  encodeKey(t) {
    return $_(t);
  }
  encodeValue(t) {
    return $_(t);
  }
  decodeKey(t) {
    return decodeURIComponent(t);
  }
  decodeValue(t) {
    return decodeURIComponent(t);
  }
};
function XC(n, t) {
  let e = new Map();
  return (
    n.length > 0 &&
      n
        .replace(/^\?/, "")
        .split("&")
        .forEach((r) => {
          let o = r.indexOf("="),
            [a, s] =
              o == -1
                ? [t.decodeKey(r), ""]
                : [t.decodeKey(r.slice(0, o)), t.decodeValue(r.slice(o + 1))],
            l = e.get(a) || [];
          l.push(s), e.set(a, l);
        }),
    e
  );
}
var ZC = /%(\d[a-f0-9])/gi,
  JC = {
    40: "@",
    "3A": ":",
    24: "$",
    "2C": ",",
    "3B": ";",
    "3D": "=",
    "3F": "?",
    "2F": "/",
  };
function $_(n) {
  return encodeURIComponent(n).replace(ZC, (t, e) => JC[e] ?? t);
}
function Sc(n) {
  return `${n}`;
}
var Wr = class n {
  constructor(t = {}) {
    if (
      ((this.updates = null),
      (this.cloneFrom = null),
      (this.encoder = t.encoder || new Nh()),
      t.fromString)
    ) {
      if (t.fromObject)
        throw new Error("Cannot specify both fromString and fromObject.");
      this.map = XC(t.fromString, this.encoder);
    } else
      t.fromObject
        ? ((this.map = new Map()),
          Object.keys(t.fromObject).forEach((e) => {
            let i = t.fromObject[e],
              r = Array.isArray(i) ? i.map(Sc) : [Sc(i)];
            this.map.set(e, r);
          }))
        : (this.map = null);
  }
  has(t) {
    return this.init(), this.map.has(t);
  }
  get(t) {
    this.init();
    let e = this.map.get(t);
    return e ? e[0] : null;
  }
  getAll(t) {
    return this.init(), this.map.get(t) || null;
  }
  keys() {
    return this.init(), Array.from(this.map.keys());
  }
  append(t, e) {
    return this.clone({ param: t, value: e, op: "a" });
  }
  appendAll(t) {
    let e = [];
    return (
      Object.keys(t).forEach((i) => {
        let r = t[i];
        Array.isArray(r)
          ? r.forEach((o) => {
              e.push({ param: i, value: o, op: "a" });
            })
          : e.push({ param: i, value: r, op: "a" });
      }),
      this.clone(e)
    );
  }
  set(t, e) {
    return this.clone({ param: t, value: e, op: "s" });
  }
  delete(t, e) {
    return this.clone({ param: t, value: e, op: "d" });
  }
  toString() {
    return (
      this.init(),
      this.keys()
        .map((t) => {
          let e = this.encoder.encodeKey(t);
          return this.map
            .get(t)
            .map((i) => e + "=" + this.encoder.encodeValue(i))
            .join("&");
        })
        .filter((t) => t !== "")
        .join("&")
    );
  }
  clone(t) {
    let e = new n({ encoder: this.encoder });
    return (
      (e.cloneFrom = this.cloneFrom || this),
      (e.updates = (this.updates || []).concat(t)),
      e
    );
  }
  init() {
    this.map === null && (this.map = new Map()),
      this.cloneFrom !== null &&
        (this.cloneFrom.init(),
        this.cloneFrom
          .keys()
          .forEach((t) => this.map.set(t, this.cloneFrom.map.get(t))),
        this.updates.forEach((t) => {
          switch (t.op) {
            case "a":
            case "s":
              let e = (t.op === "a" ? this.map.get(t.param) : void 0) || [];
              e.push(Sc(t.value)), this.map.set(t.param, e);
              break;
            case "d":
              if (t.value !== void 0) {
                let i = this.map.get(t.param) || [],
                  r = i.indexOf(Sc(t.value));
                r !== -1 && i.splice(r, 1),
                  i.length > 0
                    ? this.map.set(t.param, i)
                    : this.map.delete(t.param);
              } else {
                this.map.delete(t.param);
                break;
              }
          }
        }),
        (this.cloneFrom = this.updates = null));
  }
};
var Lh = class {
  constructor() {
    this.map = new Map();
  }
  set(t, e) {
    return this.map.set(t, e), this;
  }
  get(t) {
    return (
      this.map.has(t) || this.map.set(t, t.defaultValue()), this.map.get(t)
    );
  }
  delete(t) {
    return this.map.delete(t), this;
  }
  has(t) {
    return this.map.has(t);
  }
  keys() {
    return this.map.keys();
  }
};
function ew(n) {
  switch (n) {
    case "DELETE":
    case "GET":
    case "HEAD":
    case "OPTIONS":
    case "JSONP":
      return !1;
    default:
      return !0;
  }
}
function W_(n) {
  return typeof ArrayBuffer < "u" && n instanceof ArrayBuffer;
}
function G_(n) {
  return typeof Blob < "u" && n instanceof Blob;
}
function Y_(n) {
  return typeof FormData < "u" && n instanceof FormData;
}
function tw(n) {
  return typeof URLSearchParams < "u" && n instanceof URLSearchParams;
}
var ks = class n {
    constructor(t, e, i, r) {
      (this.url = e),
        (this.body = null),
        (this.reportProgress = !1),
        (this.withCredentials = !1),
        (this.responseType = "json"),
        (this.method = t.toUpperCase());
      let o;
      if (
        (ew(this.method) || r
          ? ((this.body = i !== void 0 ? i : null), (o = r))
          : (o = i),
        o &&
          ((this.reportProgress = !!o.reportProgress),
          (this.withCredentials = !!o.withCredentials),
          o.responseType && (this.responseType = o.responseType),
          o.headers && (this.headers = o.headers),
          o.context && (this.context = o.context),
          o.params && (this.params = o.params),
          (this.transferCache = o.transferCache)),
        (this.headers ??= new vt()),
        (this.context ??= new Lh()),
        !this.params)
      )
        (this.params = new Wr()), (this.urlWithParams = e);
      else {
        let a = this.params.toString();
        if (a.length === 0) this.urlWithParams = e;
        else {
          let s = e.indexOf("?"),
            l = s === -1 ? "?" : s < e.length - 1 ? "&" : "";
          this.urlWithParams = e + l + a;
        }
      }
    }
    serializeBody() {
      return this.body === null
        ? null
        : typeof this.body == "string" ||
          W_(this.body) ||
          G_(this.body) ||
          Y_(this.body) ||
          tw(this.body)
        ? this.body
        : this.body instanceof Wr
        ? this.body.toString()
        : typeof this.body == "object" ||
          typeof this.body == "boolean" ||
          Array.isArray(this.body)
        ? JSON.stringify(this.body)
        : this.body.toString();
    }
    detectContentTypeHeader() {
      return this.body === null || Y_(this.body)
        ? null
        : G_(this.body)
        ? this.body.type || null
        : W_(this.body)
        ? null
        : typeof this.body == "string"
        ? "text/plain"
        : this.body instanceof Wr
        ? "application/x-www-form-urlencoded;charset=UTF-8"
        : typeof this.body == "object" ||
          typeof this.body == "number" ||
          typeof this.body == "boolean"
        ? "application/json"
        : null;
    }
    clone(t = {}) {
      let e = t.method || this.method,
        i = t.url || this.url,
        r = t.responseType || this.responseType,
        o = t.transferCache ?? this.transferCache,
        a = t.body !== void 0 ? t.body : this.body,
        s = t.withCredentials ?? this.withCredentials,
        l = t.reportProgress ?? this.reportProgress,
        d = t.headers || this.headers,
        m = t.params || this.params,
        v = t.context ?? this.context;
      return (
        t.setHeaders !== void 0 &&
          (d = Object.keys(t.setHeaders).reduce(
            (x, C) => x.set(C, t.setHeaders[C]),
            d
          )),
        t.setParams &&
          (m = Object.keys(t.setParams).reduce(
            (x, C) => x.set(C, t.setParams[C]),
            m
          )),
        new n(e, i, a, {
          params: m,
          headers: d,
          context: v,
          reportProgress: l,
          responseType: r,
          withCredentials: s,
          transferCache: o,
        })
      );
    }
  },
  Gr = (function (n) {
    return (
      (n[(n.Sent = 0)] = "Sent"),
      (n[(n.UploadProgress = 1)] = "UploadProgress"),
      (n[(n.ResponseHeader = 2)] = "ResponseHeader"),
      (n[(n.DownloadProgress = 3)] = "DownloadProgress"),
      (n[(n.Response = 4)] = "Response"),
      (n[(n.User = 5)] = "User"),
      n
    );
  })(Gr || {}),
  Os = class {
    constructor(t, e = 200, i = "OK") {
      (this.headers = t.headers || new vt()),
        (this.status = t.status !== void 0 ? t.status : e),
        (this.statusText = t.statusText || i),
        (this.url = t.url || null),
        (this.ok = this.status >= 200 && this.status < 300);
    }
  },
  Ec = class n extends Os {
    constructor(t = {}) {
      super(t), (this.type = Gr.ResponseHeader);
    }
    clone(t = {}) {
      return new n({
        headers: t.headers || this.headers,
        status: t.status !== void 0 ? t.status : this.status,
        statusText: t.statusText || this.statusText,
        url: t.url || this.url || void 0,
      });
    }
  },
  Do = class n extends Os {
    constructor(t = {}) {
      super(t),
        (this.type = Gr.Response),
        (this.body = t.body !== void 0 ? t.body : null);
    }
    clone(t = {}) {
      return new n({
        body: t.body !== void 0 ? t.body : this.body,
        headers: t.headers || this.headers,
        status: t.status !== void 0 ? t.status : this.status,
        statusText: t.statusText || this.statusText,
        url: t.url || this.url || void 0,
      });
    }
  },
  $r = class extends Os {
    constructor(t) {
      super(t, 0, "Unknown Error"),
        (this.name = "HttpErrorResponse"),
        (this.ok = !1),
        this.status >= 200 && this.status < 300
          ? (this.message = `Http failure during parsing for ${
              t.url || "(unknown url)"
            }`)
          : (this.message = `Http failure response for ${
              t.url || "(unknown url)"
            }: ${t.status} ${t.statusText}`),
        (this.error = t.error || null);
    }
  },
  o0 = 200,
  iw = 204;
function Fh(n, t) {
  return {
    body: t,
    headers: n.headers,
    context: n.context,
    observe: n.observe,
    params: n.params,
    reportProgress: n.reportProgress,
    responseType: n.responseType,
    withCredentials: n.withCredentials,
    transferCache: n.transferCache,
  };
}
var li = (() => {
    class n {
      constructor(e) {
        this.handler = e;
      }
      request(e, i, r = {}) {
        let o;
        if (e instanceof ks) o = e;
        else {
          let l;
          r.headers instanceof vt ? (l = r.headers) : (l = new vt(r.headers));
          let d;
          r.params &&
            (r.params instanceof Wr
              ? (d = r.params)
              : (d = new Wr({ fromObject: r.params }))),
            (o = new ks(e, i, r.body !== void 0 ? r.body : null, {
              headers: l,
              context: r.context,
              params: d,
              reportProgress: r.reportProgress,
              responseType: r.responseType || "json",
              withCredentials: r.withCredentials,
              transferCache: r.transferCache,
            }));
        }
        let a = be(o).pipe(Br((l) => this.handler.handle(l)));
        if (e instanceof ks || r.observe === "events") return a;
        let s = a.pipe(Ot((l) => l instanceof Do));
        switch (r.observe || "body") {
          case "body":
            switch (o.responseType) {
              case "arraybuffer":
                return s.pipe(
                  Ke((l) => {
                    if (l.body !== null && !(l.body instanceof ArrayBuffer))
                      throw new Error("Response is not an ArrayBuffer.");
                    return l.body;
                  })
                );
              case "blob":
                return s.pipe(
                  Ke((l) => {
                    if (l.body !== null && !(l.body instanceof Blob))
                      throw new Error("Response is not a Blob.");
                    return l.body;
                  })
                );
              case "text":
                return s.pipe(
                  Ke((l) => {
                    if (l.body !== null && typeof l.body != "string")
                      throw new Error("Response is not a string.");
                    return l.body;
                  })
                );
              case "json":
              default:
                return s.pipe(Ke((l) => l.body));
            }
          case "response":
            return s;
          default:
            throw new Error(
              `Unreachable: unhandled observe type ${r.observe}}`
            );
        }
      }
      delete(e, i = {}) {
        return this.request("DELETE", e, i);
      }
      get(e, i = {}) {
        return this.request("GET", e, i);
      }
      head(e, i = {}) {
        return this.request("HEAD", e, i);
      }
      jsonp(e, i) {
        return this.request("JSONP", e, {
          params: new Wr().append(i, "JSONP_CALLBACK"),
          observe: "body",
          responseType: "json",
        });
      }
      options(e, i = {}) {
        return this.request("OPTIONS", e, i);
      }
      patch(e, i, r = {}) {
        return this.request("PATCH", e, Fh(r, i));
      }
      post(e, i, r = {}) {
        return this.request("POST", e, Fh(r, i));
      }
      put(e, i, r = {}) {
        return this.request("PUT", e, Fh(r, i));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Is));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  nw = /^\)\]\}',?\n/,
  rw = "X-Request-URL";
function q_(n) {
  if (n.url) return n.url;
  let t = rw.toLocaleLowerCase();
  return n.headers.get(t);
}
var ow = (() => {
    class n {
      constructor() {
        (this.fetchImpl =
          G(Vh, { optional: !0 })?.fetch ?? ((...e) => globalThis.fetch(...e))),
          (this.ngZone = G(Re));
      }
      handle(e) {
        return new Yn((i) => {
          let r = new AbortController();
          return (
            this.doRequest(e, r.signal, i).then(Bh, (o) =>
              i.error(new $r({ error: o }))
            ),
            () => r.abort()
          );
        });
      }
      doRequest(e, i, r) {
        return lc(this, null, function* () {
          let o = this.createRequestInit(e),
            a;
          try {
            let C = this.ngZone.runOutsideAngular(() =>
              this.fetchImpl(e.urlWithParams, Q({ signal: i }, o))
            );
            aw(C), r.next({ type: Gr.Sent }), (a = yield C);
          } catch (C) {
            r.error(
              new $r({
                error: C,
                status: C.status ?? 0,
                statusText: C.statusText,
                url: e.urlWithParams,
                headers: C.headers,
              })
            );
            return;
          }
          let s = new vt(a.headers),
            l = a.statusText,
            d = q_(a) ?? e.urlWithParams,
            m = a.status,
            v = null;
          if (
            (e.reportProgress &&
              r.next(new Ec({ headers: s, status: m, statusText: l, url: d })),
            a.body)
          ) {
            let C = a.headers.get("content-length"),
              S = [],
              T = a.body.getReader(),
              k = 0,
              P,
              j,
              K = typeof Zone < "u" && Zone.current;
            yield this.ngZone.runOutsideAngular(() =>
              lc(this, null, function* () {
                for (;;) {
                  let { done: ee, value: b } = yield T.read();
                  if (ee) break;
                  if ((S.push(b), (k += b.length), e.reportProgress)) {
                    j =
                      e.responseType === "text"
                        ? (j ?? "") +
                          (P ??= new TextDecoder()).decode(b, { stream: !0 })
                        : void 0;
                    let me = () =>
                      r.next({
                        type: Gr.DownloadProgress,
                        total: C ? +C : void 0,
                        loaded: k,
                        partialText: j,
                      });
                    K ? K.run(me) : me();
                  }
                }
              })
            );
            let oe = this.concatChunks(S, k);
            try {
              let ee = a.headers.get("Content-Type") ?? "";
              v = this.parseBody(e, oe, ee);
            } catch (ee) {
              r.error(
                new $r({
                  error: ee,
                  headers: new vt(a.headers),
                  status: a.status,
                  statusText: a.statusText,
                  url: q_(a) ?? e.urlWithParams,
                })
              );
              return;
            }
          }
          m === 0 && (m = v ? o0 : 0),
            m >= 200 && m < 300
              ? (r.next(
                  new Do({
                    body: v,
                    headers: s,
                    status: m,
                    statusText: l,
                    url: d,
                  })
                ),
                r.complete())
              : r.error(
                  new $r({
                    error: v,
                    headers: s,
                    status: m,
                    statusText: l,
                    url: d,
                  })
                );
        });
      }
      parseBody(e, i, r) {
        switch (e.responseType) {
          case "json":
            let o = new TextDecoder().decode(i).replace(nw, "");
            return o === "" ? null : JSON.parse(o);
          case "text":
            return new TextDecoder().decode(i);
          case "blob":
            return new Blob([i], { type: r });
          case "arraybuffer":
            return i.buffer;
        }
      }
      createRequestInit(e) {
        let i = {},
          r = e.withCredentials ? "include" : void 0;
        if (
          (e.headers.forEach((o, a) => (i[o] = a.join(","))),
          e.headers.has("Accept") ||
            (i.Accept = "application/json, text/plain, */*"),
          !e.headers.has("Content-Type"))
        ) {
          let o = e.detectContentTypeHeader();
          o !== null && (i["Content-Type"] = o);
        }
        return {
          body: e.serializeBody(),
          method: e.method,
          headers: i,
          credentials: r,
        };
      }
      concatChunks(e, i) {
        let r = new Uint8Array(i),
          o = 0;
        for (let a of e) r.set(a, o), (o += a.length);
        return r;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  Vh = class {};
function Bh() {}
function aw(n) {
  n.then(Bh, Bh);
}
function a0(n, t) {
  return t(n);
}
function sw(n, t) {
  return (e, i) => t.intercept(e, { handle: (r) => n(r, i) });
}
function lw(n, t, e) {
  return (i, r) => gn(e, () => t(i, (o) => n(o, r)));
}
var cw = new Me(""),
  Hh = new Me(""),
  s0 = new Me(""),
  l0 = new Me("", { providedIn: "root", factory: () => !0 });
function dw() {
  let n = null;
  return (t, e) => {
    n === null && (n = (G(cw, { optional: !0 }) ?? []).reduceRight(sw, a0));
    let i = G(ys);
    if (G(l0)) {
      let o = i.add();
      return n(t, e).pipe(Hr(() => i.remove(o)));
    } else return n(t, e);
  };
}
var K_ = (() => {
  class n extends Is {
    constructor(e, i) {
      super(),
        (this.backend = e),
        (this.injector = i),
        (this.chain = null),
        (this.pendingTasks = G(ys)),
        (this.contributeToStability = G(l0));
    }
    handle(e) {
      if (this.chain === null) {
        let i = Array.from(
          new Set([...this.injector.get(Hh), ...this.injector.get(s0, [])])
        );
        this.chain = i.reduceRight((r, o) => lw(r, o, this.injector), a0);
      }
      if (this.contributeToStability) {
        let i = this.pendingTasks.add();
        return this.chain(e, (r) => this.backend.handle(r)).pipe(
          Hr(() => this.pendingTasks.remove(i))
        );
      } else return this.chain(e, (i) => this.backend.handle(i));
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(Z(Tc), Z(fn));
      };
    }
    static {
      this.ɵprov = te({ token: n, factory: n.ɵfac });
    }
  }
  return n;
})();
var uw = /^\)\]\}',?\n/;
function hw(n) {
  return "responseURL" in n && n.responseURL
    ? n.responseURL
    : /^X-Request-URL:/m.test(n.getAllResponseHeaders())
    ? n.getResponseHeader("X-Request-URL")
    : null;
}
var Q_ = (() => {
    class n {
      constructor(e) {
        this.xhrFactory = e;
      }
      handle(e) {
        if (e.method === "JSONP") throw new mt(-2800, !1);
        let i = this.xhrFactory;
        return (i.ɵloadImpl ? _i(i.ɵloadImpl()) : be(null)).pipe(
          wi(
            () =>
              new Yn((o) => {
                let a = i.build();
                if (
                  (a.open(e.method, e.urlWithParams),
                  e.withCredentials && (a.withCredentials = !0),
                  e.headers.forEach((T, k) =>
                    a.setRequestHeader(T, k.join(","))
                  ),
                  e.headers.has("Accept") ||
                    a.setRequestHeader(
                      "Accept",
                      "application/json, text/plain, */*"
                    ),
                  !e.headers.has("Content-Type"))
                ) {
                  let T = e.detectContentTypeHeader();
                  T !== null && a.setRequestHeader("Content-Type", T);
                }
                if (e.responseType) {
                  let T = e.responseType.toLowerCase();
                  a.responseType = T !== "json" ? T : "text";
                }
                let s = e.serializeBody(),
                  l = null,
                  d = () => {
                    if (l !== null) return l;
                    let T = a.statusText || "OK",
                      k = new vt(a.getAllResponseHeaders()),
                      P = hw(a) || e.url;
                    return (
                      (l = new Ec({
                        headers: k,
                        status: a.status,
                        statusText: T,
                        url: P,
                      })),
                      l
                    );
                  },
                  m = () => {
                    let { headers: T, status: k, statusText: P, url: j } = d(),
                      K = null;
                    k !== iw &&
                      (K =
                        typeof a.response > "u" ? a.responseText : a.response),
                      k === 0 && (k = K ? o0 : 0);
                    let oe = k >= 200 && k < 300;
                    if (e.responseType === "json" && typeof K == "string") {
                      let ee = K;
                      K = K.replace(uw, "");
                      try {
                        K = K !== "" ? JSON.parse(K) : null;
                      } catch (b) {
                        (K = ee),
                          oe && ((oe = !1), (K = { error: b, text: K }));
                      }
                    }
                    oe
                      ? (o.next(
                          new Do({
                            body: K,
                            headers: T,
                            status: k,
                            statusText: P,
                            url: j || void 0,
                          })
                        ),
                        o.complete())
                      : o.error(
                          new $r({
                            error: K,
                            headers: T,
                            status: k,
                            statusText: P,
                            url: j || void 0,
                          })
                        );
                  },
                  v = (T) => {
                    let { url: k } = d(),
                      P = new $r({
                        error: T,
                        status: a.status || 0,
                        statusText: a.statusText || "Unknown Error",
                        url: k || void 0,
                      });
                    o.error(P);
                  },
                  x = !1,
                  C = (T) => {
                    x || (o.next(d()), (x = !0));
                    let k = { type: Gr.DownloadProgress, loaded: T.loaded };
                    T.lengthComputable && (k.total = T.total),
                      e.responseType === "text" &&
                        a.responseText &&
                        (k.partialText = a.responseText),
                      o.next(k);
                  },
                  S = (T) => {
                    let k = { type: Gr.UploadProgress, loaded: T.loaded };
                    T.lengthComputable && (k.total = T.total), o.next(k);
                  };
                return (
                  a.addEventListener("load", m),
                  a.addEventListener("error", v),
                  a.addEventListener("timeout", v),
                  a.addEventListener("abort", v),
                  e.reportProgress &&
                    (a.addEventListener("progress", C),
                    s !== null &&
                      a.upload &&
                      a.upload.addEventListener("progress", S)),
                  a.send(s),
                  o.next({ type: Gr.Sent }),
                  () => {
                    a.removeEventListener("error", v),
                      a.removeEventListener("abort", v),
                      a.removeEventListener("load", m),
                      a.removeEventListener("timeout", v),
                      e.reportProgress &&
                        (a.removeEventListener("progress", C),
                        s !== null &&
                          a.upload &&
                          a.upload.removeEventListener("progress", S)),
                      a.readyState !== a.DONE && a.abort();
                  }
                );
              })
          )
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Dc));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  c0 = new Me(""),
  pw = "XSRF-TOKEN",
  mw = new Me("", { providedIn: "root", factory: () => pw }),
  fw = "X-XSRF-TOKEN",
  gw = new Me("", { providedIn: "root", factory: () => fw }),
  kc = class {},
  _w = (() => {
    class n {
      constructor(e, i, r) {
        (this.doc = e),
          (this.platform = i),
          (this.cookieName = r),
          (this.lastCookieString = ""),
          (this.lastToken = null),
          (this.parseCount = 0);
      }
      getToken() {
        if (this.platform === "server") return null;
        let e = this.doc.cookie || "";
        return (
          e !== this.lastCookieString &&
            (this.parseCount++,
            (this.lastToken = Cc(e, this.cookieName)),
            (this.lastCookieString = e)),
          this.lastToken
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe), Z(oi), Z(mw));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function bw(n, t) {
  let e = n.url.toLowerCase();
  if (
    !G(c0) ||
    n.method === "GET" ||
    n.method === "HEAD" ||
    e.startsWith("http://") ||
    e.startsWith("https://")
  )
    return t(n);
  let i = G(kc).getToken(),
    r = G(gw);
  return (
    i != null &&
      !n.headers.has(r) &&
      (n = n.clone({ headers: n.headers.set(r, i) })),
    t(n)
  );
}
var d0 = (function (n) {
  return (
    (n[(n.Interceptors = 0)] = "Interceptors"),
    (n[(n.LegacyInterceptors = 1)] = "LegacyInterceptors"),
    (n[(n.CustomXsrfConfiguration = 2)] = "CustomXsrfConfiguration"),
    (n[(n.NoXsrfProtection = 3)] = "NoXsrfProtection"),
    (n[(n.JsonpSupport = 4)] = "JsonpSupport"),
    (n[(n.RequestsMadeViaParent = 5)] = "RequestsMadeViaParent"),
    (n[(n.Fetch = 6)] = "Fetch"),
    n
  );
})(d0 || {});
function vw(n, t) {
  return { ɵkind: n, ɵproviders: t };
}
function jh(...n) {
  let t = [
    li,
    Q_,
    K_,
    { provide: Is, useExisting: K_ },
    { provide: Tc, useFactory: () => G(ow, { optional: !0 }) ?? G(Q_) },
    { provide: Hh, useValue: bw, multi: !0 },
    { provide: c0, useValue: !0 },
    { provide: kc, useClass: _w },
  ];
  for (let e of n) t.push(...e.ɵproviders);
  return Qn(t);
}
var X_ = new Me("");
function yw() {
  return vw(d0.LegacyInterceptors, [
    { provide: X_, useFactory: dw },
    { provide: Hh, useExisting: X_, multi: !0 },
  ]);
}
var Ic = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({ providers: [jh(yw())] });
    }
  }
  return n;
})();
var xw = new Me(""),
  Z_ = "b",
  J_ = "h",
  e0 = "s",
  t0 = "st",
  i0 = "u",
  n0 = "rt",
  Mc = new Me(""),
  Cw = ["GET", "HEAD"];
function ww(n, t) {
  let C = G(Mc),
    { isCacheActive: e } = C,
    i = r_(C, ["isCacheActive"]),
    { transferCache: r, method: o } = n;
  if (
    !e ||
    r === !1 ||
    (o === "POST" && !i.includePostRequests && !r) ||
    (o !== "POST" && !Cw.includes(o)) ||
    (!i.includeRequestsWithAuthHeaders && Dw(n)) ||
    i.filter?.(n) === !1
  )
    return t(n);
  let a = G(Sh),
    s = G(xw, { optional: !0 }),
    l = Es(G(oi));
  if (s && !l) throw new mt(2803, !1);
  let d = l && s ? Ew(n.url, s) : n.url,
    m = Mw(n, d),
    v = a.get(m, null),
    x = i.includeHeaders;
  if ((typeof r == "object" && r.includeHeaders && (x = r.includeHeaders), v)) {
    let { [Z_]: S, [n0]: T, [J_]: k, [e0]: P, [t0]: j, [i0]: K } = v,
      oe = S;
    switch (T) {
      case "arraybuffer":
        oe = new TextEncoder().encode(S).buffer;
        break;
      case "blob":
        oe = new Blob([S]);
        break;
    }
    let ee = new vt(k);
    return be(
      new Do({ body: oe, headers: ee, status: P, statusText: j, url: K })
    );
  }
  return t(n).pipe(
    Qt((S) => {
      S instanceof Do &&
        l &&
        a.set(m, {
          [Z_]: S.body,
          [J_]: Sw(S.headers, x),
          [e0]: S.status,
          [t0]: S.statusText,
          [i0]: d,
          [n0]: n.responseType,
        });
    })
  );
}
function Dw(n) {
  return n.headers.has("authorization") || n.headers.has("proxy-authorization");
}
function Sw(n, t) {
  if (!t) return {};
  let e = {};
  for (let i of t) {
    let r = n.getAll(i);
    r !== null && (e[i] = r);
  }
  return e;
}
function r0(n) {
  return [...n.keys()]
    .sort()
    .map((t) => `${t}=${n.getAll(t)}`)
    .join("&");
}
function Mw(n, t) {
  let { params: e, method: i, responseType: r } = n,
    o = r0(e),
    a = n.serializeBody();
  a instanceof URLSearchParams ? (a = r0(a)) : typeof a != "string" && (a = "");
  let s = [i, r, t, a, o].join("|"),
    l = Tw(s);
  return l;
}
function Tw(n) {
  let t = 0;
  for (let e of n) t = (Math.imul(31, t) + e.charCodeAt(0)) << 0;
  return (t += 2147483648), t.toString();
}
function u0(n) {
  return [
    {
      provide: Mc,
      useFactory: () => (
        gc("NgHttpTransferCache"), Q({ isCacheActive: !0 }, n)
      ),
    },
    { provide: s0, useValue: ww, multi: !0, deps: [Sh, Mc] },
    {
      provide: Ms,
      multi: !0,
      useFactory: () => {
        let t = G(ji),
          e = G(Mc);
        return () => {
          O_(t).then(() => {
            e.isCacheActive = !1;
          });
        };
      },
    },
  ];
}
function Ew(n, t) {
  let e = new URL(n, "resolve://").origin,
    i = t[e];
  return i ? n.replace(e, i) : n;
}
var $h = class extends L_ {
    constructor() {
      super(...arguments), (this.supportsDOMEvents = !0);
    }
  },
  Wh = class n extends $h {
    static makeCurrent() {
      N_(new n());
    }
    onAndCancel(t, e, i) {
      return (
        t.addEventListener(e, i),
        () => {
          t.removeEventListener(e, i);
        }
      );
    }
    dispatchEvent(t, e) {
      t.dispatchEvent(e);
    }
    remove(t) {
      t.remove();
    }
    createElement(t, e) {
      return (e = e || this.getDefaultDocument()), e.createElement(t);
    }
    createHtmlDocument() {
      return document.implementation.createHTMLDocument("fakeTitle");
    }
    getDefaultDocument() {
      return document;
    }
    isElementNode(t) {
      return t.nodeType === Node.ELEMENT_NODE;
    }
    isShadowRoot(t) {
      return t instanceof DocumentFragment;
    }
    getGlobalEventTarget(t, e) {
      return e === "window"
        ? window
        : e === "document"
        ? t
        : e === "body"
        ? t.body
        : null;
    }
    getBaseHref(t) {
      let e = Iw();
      return e == null ? null : Ow(e);
    }
    resetBaseElement() {
      Ps = null;
    }
    getUserAgent() {
      return window.navigator.userAgent;
    }
    getCookie(t) {
      return Cc(document.cookie, t);
    }
  },
  Ps = null;
function Iw() {
  return (
    (Ps = Ps || document.querySelector("base")),
    Ps ? Ps.getAttribute("href") : null
  );
}
function Ow(n) {
  return new URL(n, document.baseURI).pathname;
}
var Pw = (() => {
    class n {
      build() {
        return new XMLHttpRequest();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  Gh = new Me(""),
  m0 = (() => {
    class n {
      constructor(e, i) {
        (this._zone = i),
          (this._eventNameToPlugin = new Map()),
          e.forEach((r) => {
            r.manager = this;
          }),
          (this._plugins = e.slice().reverse());
      }
      addEventListener(e, i, r) {
        return this._findPluginFor(i).addEventListener(e, i, r);
      }
      getZone() {
        return this._zone;
      }
      _findPluginFor(e) {
        let i = this._eventNameToPlugin.get(e);
        if (i) return i;
        if (((i = this._plugins.find((o) => o.supports(e))), !i))
          throw new mt(5101, !1);
        return this._eventNameToPlugin.set(e, i), i;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Gh), Z(Re));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  Oc = class {
    constructor(t) {
      this._doc = t;
    }
  },
  Uh = "ng-app-id",
  f0 = (() => {
    class n {
      constructor(e, i, r, o = {}) {
        (this.doc = e),
          (this.appId = i),
          (this.nonce = r),
          (this.platformId = o),
          (this.styleRef = new Map()),
          (this.hostNodes = new Set()),
          (this.styleNodesInDOM = this.collectServerRenderedStyles()),
          (this.platformIsServer = Es(o)),
          this.resetHostNodes();
      }
      addStyles(e) {
        for (let i of e)
          this.changeUsageCount(i, 1) === 1 && this.onStyleAdded(i);
      }
      removeStyles(e) {
        for (let i of e)
          this.changeUsageCount(i, -1) <= 0 && this.onStyleRemoved(i);
      }
      ngOnDestroy() {
        let e = this.styleNodesInDOM;
        e && (e.forEach((i) => i.remove()), e.clear());
        for (let i of this.getAllStyles()) this.onStyleRemoved(i);
        this.resetHostNodes();
      }
      addHost(e) {
        this.hostNodes.add(e);
        for (let i of this.getAllStyles()) this.addStyleToHost(e, i);
      }
      removeHost(e) {
        this.hostNodes.delete(e);
      }
      getAllStyles() {
        return this.styleRef.keys();
      }
      onStyleAdded(e) {
        for (let i of this.hostNodes) this.addStyleToHost(i, e);
      }
      onStyleRemoved(e) {
        let i = this.styleRef;
        i.get(e)?.elements?.forEach((r) => r.remove()), i.delete(e);
      }
      collectServerRenderedStyles() {
        let e = this.doc.head?.querySelectorAll(`style[${Uh}="${this.appId}"]`);
        if (e?.length) {
          let i = new Map();
          return (
            e.forEach((r) => {
              r.textContent != null && i.set(r.textContent, r);
            }),
            i
          );
        }
        return null;
      }
      changeUsageCount(e, i) {
        let r = this.styleRef;
        if (r.has(e)) {
          let o = r.get(e);
          return (o.usage += i), o.usage;
        }
        return r.set(e, { usage: i, elements: [] }), i;
      }
      getStyleElement(e, i) {
        let r = this.styleNodesInDOM,
          o = r?.get(i);
        if (o?.parentNode === e) return r.delete(i), o.removeAttribute(Uh), o;
        {
          let a = this.doc.createElement("style");
          return (
            this.nonce && a.setAttribute("nonce", this.nonce),
            (a.textContent = i),
            this.platformIsServer && a.setAttribute(Uh, this.appId),
            e.appendChild(a),
            a
          );
        }
      }
      addStyleToHost(e, i) {
        let r = this.getStyleElement(e, i),
          o = this.styleRef,
          a = o.get(i)?.elements;
        a ? a.push(r) : o.set(i, { elements: [r], usage: 1 });
      }
      resetHostNodes() {
        let e = this.hostNodes;
        e.clear(), e.add(this.doc.head);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe), Z(mc), Z(xs, 8), Z(oi));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  zh = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: "http://www.w3.org/1999/xhtml",
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/",
    math: "http://www.w3.org/1998/Math/MathML",
  },
  Qh = /%COMP%/g,
  g0 = "%COMP%",
  Aw = `_nghost-${g0}`,
  Rw = `_ngcontent-${g0}`,
  Fw = !0,
  Nw = new Me("", { providedIn: "root", factory: () => Fw });
function Lw(n) {
  return Rw.replace(Qh, n);
}
function Vw(n) {
  return Aw.replace(Qh, n);
}
function _0(n, t) {
  return t.map((e) => e.replace(Qh, n));
}
var Pc = (() => {
    class n {
      constructor(e, i, r, o, a, s, l, d = null) {
        (this.eventManager = e),
          (this.sharedStylesHost = i),
          (this.appId = r),
          (this.removeStylesOnCompDestroy = o),
          (this.doc = a),
          (this.platformId = s),
          (this.ngZone = l),
          (this.nonce = d),
          (this.rendererByCompId = new Map()),
          (this.platformIsServer = Es(s)),
          (this.defaultRenderer = new As(e, a, l, this.platformIsServer));
      }
      createRenderer(e, i) {
        if (!e || !i) return this.defaultRenderer;
        this.platformIsServer &&
          i.encapsulation === vs.ShadowDom &&
          (i = Be(Q({}, i), { encapsulation: vs.Emulated }));
        let r = this.getOrCreateRenderer(e, i);
        return (
          r instanceof Ac
            ? r.applyToHost(e)
            : r instanceof Rs && r.applyStyles(),
          r
        );
      }
      getOrCreateRenderer(e, i) {
        let r = this.rendererByCompId,
          o = r.get(i.id);
        if (!o) {
          let a = this.doc,
            s = this.ngZone,
            l = this.eventManager,
            d = this.sharedStylesHost,
            m = this.removeStylesOnCompDestroy,
            v = this.platformIsServer;
          switch (i.encapsulation) {
            case vs.Emulated:
              o = new Ac(l, d, i, this.appId, m, a, s, v);
              break;
            case vs.ShadowDom:
              return new Yh(l, d, e, i, a, s, this.nonce, v);
            default:
              o = new Rs(l, d, i, m, a, s, v);
              break;
          }
          r.set(i.id, o);
        }
        return o;
      }
      ngOnDestroy() {
        this.rendererByCompId.clear();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(
            Z(m0),
            Z(f0),
            Z(mc),
            Z(Nw),
            Z(Oe),
            Z(oi),
            Z(Re),
            Z(xs)
          );
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  As = class {
    constructor(t, e, i, r) {
      (this.eventManager = t),
        (this.doc = e),
        (this.ngZone = i),
        (this.platformIsServer = r),
        (this.data = Object.create(null)),
        (this.throwOnSyntheticProps = !0),
        (this.destroyNode = null);
    }
    destroy() {}
    createElement(t, e) {
      return e
        ? this.doc.createElementNS(zh[e] || e, t)
        : this.doc.createElement(t);
    }
    createComment(t) {
      return this.doc.createComment(t);
    }
    createText(t) {
      return this.doc.createTextNode(t);
    }
    appendChild(t, e) {
      (h0(t) ? t.content : t).appendChild(e);
    }
    insertBefore(t, e, i) {
      t && (h0(t) ? t.content : t).insertBefore(e, i);
    }
    removeChild(t, e) {
      e.remove();
    }
    selectRootElement(t, e) {
      let i = typeof t == "string" ? this.doc.querySelector(t) : t;
      if (!i) throw new mt(-5104, !1);
      return e || (i.textContent = ""), i;
    }
    parentNode(t) {
      return t.parentNode;
    }
    nextSibling(t) {
      return t.nextSibling;
    }
    setAttribute(t, e, i, r) {
      if (r) {
        e = r + ":" + e;
        let o = zh[r];
        o ? t.setAttributeNS(o, e, i) : t.setAttribute(e, i);
      } else t.setAttribute(e, i);
    }
    removeAttribute(t, e, i) {
      if (i) {
        let r = zh[i];
        r ? t.removeAttributeNS(r, e) : t.removeAttribute(`${i}:${e}`);
      } else t.removeAttribute(e);
    }
    addClass(t, e) {
      t.classList.add(e);
    }
    removeClass(t, e) {
      t.classList.remove(e);
    }
    setStyle(t, e, i, r) {
      r & (ws.DashCase | ws.Important)
        ? t.style.setProperty(e, i, r & ws.Important ? "important" : "")
        : (t.style[e] = i);
    }
    removeStyle(t, e, i) {
      i & ws.DashCase ? t.style.removeProperty(e) : (t.style[e] = "");
    }
    setProperty(t, e, i) {
      t != null && (t[e] = i);
    }
    setValue(t, e) {
      t.nodeValue = e;
    }
    listen(t, e, i) {
      if (
        typeof t == "string" &&
        ((t = ua().getGlobalEventTarget(this.doc, t)), !t)
      )
        throw new Error(`Unsupported event target ${t} for event ${e}`);
      return this.eventManager.addEventListener(
        t,
        e,
        this.decoratePreventDefault(i)
      );
    }
    decoratePreventDefault(t) {
      return (e) => {
        if (e === "__ngUnwrap__") return t;
        (this.platformIsServer ? this.ngZone.runGuarded(() => t(e)) : t(e)) ===
          !1 && e.preventDefault();
      };
    }
  };
function h0(n) {
  return n.tagName === "TEMPLATE" && n.content !== void 0;
}
var Yh = class extends As {
    constructor(t, e, i, r, o, a, s, l) {
      super(t, o, a, l),
        (this.sharedStylesHost = e),
        (this.hostEl = i),
        (this.shadowRoot = i.attachShadow({ mode: "open" })),
        this.sharedStylesHost.addHost(this.shadowRoot);
      let d = _0(r.id, r.styles);
      for (let m of d) {
        let v = document.createElement("style");
        s && v.setAttribute("nonce", s),
          (v.textContent = m),
          this.shadowRoot.appendChild(v);
      }
    }
    nodeOrShadowRoot(t) {
      return t === this.hostEl ? this.shadowRoot : t;
    }
    appendChild(t, e) {
      return super.appendChild(this.nodeOrShadowRoot(t), e);
    }
    insertBefore(t, e, i) {
      return super.insertBefore(this.nodeOrShadowRoot(t), e, i);
    }
    removeChild(t, e) {
      return super.removeChild(null, e);
    }
    parentNode(t) {
      return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)));
    }
    destroy() {
      this.sharedStylesHost.removeHost(this.shadowRoot);
    }
  },
  Rs = class extends As {
    constructor(t, e, i, r, o, a, s, l) {
      super(t, o, a, s),
        (this.sharedStylesHost = e),
        (this.removeStylesOnCompDestroy = r),
        (this.styles = l ? _0(l, i.styles) : i.styles);
    }
    applyStyles() {
      this.sharedStylesHost.addStyles(this.styles);
    }
    destroy() {
      this.removeStylesOnCompDestroy &&
        this.sharedStylesHost.removeStyles(this.styles);
    }
  },
  Ac = class extends Rs {
    constructor(t, e, i, r, o, a, s, l) {
      let d = r + "-" + i.id;
      super(t, e, i, o, a, s, l, d),
        (this.contentAttr = Lw(d)),
        (this.hostAttr = Vw(d));
    }
    applyToHost(t) {
      this.applyStyles(), this.setAttribute(t, this.hostAttr, "");
    }
    createElement(t, e) {
      let i = super.createElement(t, e);
      return super.setAttribute(i, this.contentAttr, ""), i;
    }
  },
  Bw = (() => {
    class n extends Oc {
      constructor(e) {
        super(e);
      }
      supports(e) {
        return !0;
      }
      addEventListener(e, i, r) {
        return (
          e.addEventListener(i, r, !1), () => this.removeEventListener(e, i, r)
        );
      }
      removeEventListener(e, i, r) {
        return e.removeEventListener(i, r);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  p0 = ["alt", "control", "meta", "shift"],
  Hw = {
    "\b": "Backspace",
    "	": "Tab",
    "\x7F": "Delete",
    "\x1B": "Escape",
    Del: "Delete",
    Esc: "Escape",
    Left: "ArrowLeft",
    Right: "ArrowRight",
    Up: "ArrowUp",
    Down: "ArrowDown",
    Menu: "ContextMenu",
    Scroll: "ScrollLock",
    Win: "OS",
  },
  jw = {
    alt: (n) => n.altKey,
    control: (n) => n.ctrlKey,
    meta: (n) => n.metaKey,
    shift: (n) => n.shiftKey,
  },
  Uw = (() => {
    class n extends Oc {
      constructor(e) {
        super(e);
      }
      supports(e) {
        return n.parseEventName(e) != null;
      }
      addEventListener(e, i, r) {
        let o = n.parseEventName(i),
          a = n.eventCallback(o.fullKey, r, this.manager.getZone());
        return this.manager
          .getZone()
          .runOutsideAngular(() => ua().onAndCancel(e, o.domEventName, a));
      }
      static parseEventName(e) {
        let i = e.toLowerCase().split("."),
          r = i.shift();
        if (i.length === 0 || !(r === "keydown" || r === "keyup")) return null;
        let o = n._normalizeKey(i.pop()),
          a = "",
          s = i.indexOf("code");
        if (
          (s > -1 && (i.splice(s, 1), (a = "code.")),
          p0.forEach((d) => {
            let m = i.indexOf(d);
            m > -1 && (i.splice(m, 1), (a += d + "."));
          }),
          (a += o),
          i.length != 0 || o.length === 0)
        )
          return null;
        let l = {};
        return (l.domEventName = r), (l.fullKey = a), l;
      }
      static matchEventFullKeyCode(e, i) {
        let r = Hw[e.key] || e.key,
          o = "";
        return (
          i.indexOf("code.") > -1 && ((r = e.code), (o = "code.")),
          r == null || !r
            ? !1
            : ((r = r.toLowerCase()),
              r === " " ? (r = "space") : r === "." && (r = "dot"),
              p0.forEach((a) => {
                if (a !== r) {
                  let s = jw[a];
                  s(e) && (o += a + ".");
                }
              }),
              (o += r),
              o === i)
        );
      }
      static eventCallback(e, i, r) {
        return (o) => {
          n.matchEventFullKeyCode(o, e) && r.runGuarded(() => i(o));
        };
      }
      static _normalizeKey(e) {
        return e === "esc" ? "escape" : e;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function b0(n, t) {
  return A_(Q({ rootComponent: n }, zw(t)));
}
function zw(n) {
  return {
    appProviders: [...qw, ...(n?.providers ?? [])],
    platformProviders: Yw,
  };
}
function $w() {
  Wh.makeCurrent();
}
function Ww() {
  return new Dh();
}
function Gw() {
  return __(document), document;
}
var Yw = [
  { provide: oi, useValue: U_ },
  { provide: b_, useValue: $w, multi: !0 },
  { provide: Oe, useFactory: Gw, deps: [] },
];
var qw = [
  { provide: g_, useValue: "root" },
  { provide: Dh, useFactory: Ww, deps: [] },
  { provide: Gh, useClass: Bw, multi: !0, deps: [Oe, Re, oi] },
  { provide: Gh, useClass: Uw, multi: !0, deps: [Oe] },
  Pc,
  f0,
  m0,
  { provide: fc, useExisting: Pc },
  { provide: Dc, useClass: Pw, deps: [] },
  [],
];
var v0 = (() => {
  class n {
    constructor(e) {
      this._doc = e;
    }
    getTitle() {
      return this._doc.title;
    }
    setTitle(e) {
      this._doc.title = e || "";
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(Z(Oe));
      };
    }
    static {
      this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Xh = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({
          token: n,
          factory: function (i) {
            let r = null;
            return i ? (r = new (i || n)()) : (r = Z(Kw)), r;
          },
          providedIn: "root",
        });
      }
    }
    return n;
  })(),
  Kw = (() => {
    class n extends Xh {
      constructor(e) {
        super(), (this._doc = e);
      }
      sanitize(e, i) {
        if (i == null) return null;
        switch (e) {
          case br.NONE:
            return i;
          case br.HTML:
            return la(i, "HTML") ? sa(i) : S_(this._doc, String(i)).toString();
          case br.STYLE:
            return la(i, "Style") ? sa(i) : i;
          case br.SCRIPT:
            if (la(i, "Script")) return sa(i);
            throw new mt(5200, !1);
          case br.URL:
            return la(i, "URL") ? sa(i) : D_(String(i));
          case br.RESOURCE_URL:
            if (la(i, "ResourceURL")) return sa(i);
            throw new mt(5201, !1);
          default:
            throw new mt(5202, !1);
        }
      }
      bypassSecurityTrustHtml(e) {
        return v_(e);
      }
      bypassSecurityTrustStyle(e) {
        return y_(e);
      }
      bypassSecurityTrustScript(e) {
        return x_(e);
      }
      bypassSecurityTrustUrl(e) {
        return C_(e);
      }
      bypassSecurityTrustResourceUrl(e) {
        return w_(e);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  qh = (function (n) {
    return (
      (n[(n.NoHttpTransferCache = 0)] = "NoHttpTransferCache"),
      (n[(n.HttpTransferCacheOptions = 1)] = "HttpTransferCacheOptions"),
      (n[(n.I18nSupport = 2)] = "I18nSupport"),
      (n[(n.EventReplay = 3)] = "EventReplay"),
      n
    );
  })(qh || {});
function y0(...n) {
  let t = [],
    e = new Set(),
    i = e.has(qh.HttpTransferCacheOptions);
  for (let { ɵproviders: r, ɵkind: o } of n) e.add(o), r.length && t.push(r);
  return Qn([[], R_(), e.has(qh.NoHttpTransferCache) || i ? [] : u0({}), t]);
}
var Ye = "primary",
  Ks = Symbol("RouteTitle"),
  ip = class {
    constructor(t) {
      this.params = t || {};
    }
    has(t) {
      return Object.prototype.hasOwnProperty.call(this.params, t);
    }
    get(t) {
      if (this.has(t)) {
        let e = this.params[t];
        return Array.isArray(e) ? e[0] : e;
      }
      return null;
    }
    getAll(t) {
      if (this.has(t)) {
        let e = this.params[t];
        return Array.isArray(e) ? e : [e];
      }
      return [];
    }
    get keys() {
      return Object.keys(this.params);
    }
  };
function va(n) {
  return new ip(n);
}
function Qw(n, t, e) {
  let i = e.path.split("/");
  if (
    i.length > n.length ||
    (e.pathMatch === "full" && (t.hasChildren() || i.length < n.length))
  )
    return null;
  let r = {};
  for (let o = 0; o < i.length; o++) {
    let a = i[o],
      s = n[o];
    if (a[0] === ":") r[a.substring(1)] = s;
    else if (a !== s.path) return null;
  }
  return { consumed: n.slice(0, i.length), posParams: r };
}
function Xw(n, t) {
  if (n.length !== t.length) return !1;
  for (let e = 0; e < n.length; ++e) if (!tr(n[e], t[e])) return !1;
  return !0;
}
function tr(n, t) {
  let e = n ? np(n) : void 0,
    i = t ? np(t) : void 0;
  if (!e || !i || e.length != i.length) return !1;
  let r;
  for (let o = 0; o < e.length; o++)
    if (((r = e[o]), !P0(n[r], t[r]))) return !1;
  return !0;
}
function np(n) {
  return [...Object.keys(n), ...Object.getOwnPropertySymbols(n)];
}
function P0(n, t) {
  if (Array.isArray(n) && Array.isArray(t)) {
    if (n.length !== t.length) return !1;
    let e = [...n].sort(),
      i = [...t].sort();
    return e.every((r, o) => i[o] === r);
  } else return n === t;
}
function A0(n) {
  return n.length > 0 ? n[n.length - 1] : null;
}
function qr(n) {
  return cc(n) ? n : vc(n) ? _i(Promise.resolve(n)) : be(n);
}
var Zw = { exact: F0, subset: N0 },
  R0 = { exact: Jw, subset: eD, ignored: () => !0 };
function C0(n, t, e) {
  return (
    Zw[e.paths](n.root, t.root, e.matrixParams) &&
    R0[e.queryParams](n.queryParams, t.queryParams) &&
    !(e.fragment === "exact" && n.fragment !== t.fragment)
  );
}
function Jw(n, t) {
  return tr(n, t);
}
function F0(n, t, e) {
  if (
    !Mo(n.segments, t.segments) ||
    !Nc(n.segments, t.segments, e) ||
    n.numberOfChildren !== t.numberOfChildren
  )
    return !1;
  for (let i in t.children)
    if (!n.children[i] || !F0(n.children[i], t.children[i], e)) return !1;
  return !0;
}
function eD(n, t) {
  return (
    Object.keys(t).length <= Object.keys(n).length &&
    Object.keys(t).every((e) => P0(n[e], t[e]))
  );
}
function N0(n, t, e) {
  return L0(n, t, t.segments, e);
}
function L0(n, t, e, i) {
  if (n.segments.length > e.length) {
    let r = n.segments.slice(0, e.length);
    return !(!Mo(r, e) || t.hasChildren() || !Nc(r, e, i));
  } else if (n.segments.length === e.length) {
    if (!Mo(n.segments, e) || !Nc(n.segments, e, i)) return !1;
    for (let r in t.children)
      if (!n.children[r] || !N0(n.children[r], t.children[r], i)) return !1;
    return !0;
  } else {
    let r = e.slice(0, n.segments.length),
      o = e.slice(n.segments.length);
    return !Mo(n.segments, r) || !Nc(n.segments, r, i) || !n.children[Ye]
      ? !1
      : L0(n.children[Ye], t, o, i);
  }
}
function Nc(n, t, e) {
  return t.every((i, r) => R0[e](n[r].parameters, i.parameters));
}
var Cr = class {
    constructor(t = new ft([], {}), e = {}, i = null) {
      (this.root = t), (this.queryParams = e), (this.fragment = i);
    }
    get queryParamMap() {
      return (
        (this._queryParamMap ??= va(this.queryParams)), this._queryParamMap
      );
    }
    toString() {
      return nD.serialize(this);
    }
  },
  ft = class {
    constructor(t, e) {
      (this.segments = t),
        (this.children = e),
        (this.parent = null),
        Object.values(e).forEach((i) => (i.parent = this));
    }
    hasChildren() {
      return this.numberOfChildren > 0;
    }
    get numberOfChildren() {
      return Object.keys(this.children).length;
    }
    toString() {
      return Lc(this);
    }
  },
  So = class {
    constructor(t, e) {
      (this.path = t), (this.parameters = e);
    }
    get parameterMap() {
      return (this._parameterMap ??= va(this.parameters)), this._parameterMap;
    }
    toString() {
      return B0(this);
    }
  };
function tD(n, t) {
  return Mo(n, t) && n.every((e, i) => tr(e.parameters, t[i].parameters));
}
function Mo(n, t) {
  return n.length !== t.length ? !1 : n.every((e, i) => e.path === t[i].path);
}
function iD(n, t) {
  let e = [];
  return (
    Object.entries(n.children).forEach(([i, r]) => {
      i === Ye && (e = e.concat(t(r, i)));
    }),
    Object.entries(n.children).forEach(([i, r]) => {
      i !== Ye && (e = e.concat(t(r, i)));
    }),
    e
  );
}
var Qs = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({
          token: n,
          factory: () => new ya(),
          providedIn: "root",
        });
      }
    }
    return n;
  })(),
  ya = class {
    parse(t) {
      let e = new op(t);
      return new Cr(
        e.parseRootSegment(),
        e.parseQueryParams(),
        e.parseFragment()
      );
    }
    serialize(t) {
      let e = `/${Fs(t.root, !0)}`,
        i = aD(t.queryParams),
        r = typeof t.fragment == "string" ? `#${rD(t.fragment)}` : "";
      return `${e}${i}${r}`;
    }
  },
  nD = new ya();
function Lc(n) {
  return n.segments.map((t) => B0(t)).join("/");
}
function Fs(n, t) {
  if (!n.hasChildren()) return Lc(n);
  if (t) {
    let e = n.children[Ye] ? Fs(n.children[Ye], !1) : "",
      i = [];
    return (
      Object.entries(n.children).forEach(([r, o]) => {
        r !== Ye && i.push(`${r}:${Fs(o, !1)}`);
      }),
      i.length > 0 ? `${e}(${i.join("//")})` : e
    );
  } else {
    let e = iD(n, (i, r) =>
      r === Ye ? [Fs(n.children[Ye], !1)] : [`${r}:${Fs(i, !1)}`]
    );
    return Object.keys(n.children).length === 1 && n.children[Ye] != null
      ? `${Lc(n)}/${e[0]}`
      : `${Lc(n)}/(${e.join("//")})`;
  }
}
function V0(n) {
  return encodeURIComponent(n)
    .replace(/%40/g, "@")
    .replace(/%3A/gi, ":")
    .replace(/%24/g, "$")
    .replace(/%2C/gi, ",");
}
function Rc(n) {
  return V0(n).replace(/%3B/gi, ";");
}
function rD(n) {
  return encodeURI(n);
}
function rp(n) {
  return V0(n)
    .replace(/\(/g, "%28")
    .replace(/\)/g, "%29")
    .replace(/%26/gi, "&");
}
function Vc(n) {
  return decodeURIComponent(n);
}
function w0(n) {
  return Vc(n.replace(/\+/g, "%20"));
}
function B0(n) {
  return `${rp(n.path)}${oD(n.parameters)}`;
}
function oD(n) {
  return Object.entries(n)
    .map(([t, e]) => `;${rp(t)}=${rp(e)}`)
    .join("");
}
function aD(n) {
  let t = Object.entries(n)
    .map(([e, i]) =>
      Array.isArray(i)
        ? i.map((r) => `${Rc(e)}=${Rc(r)}`).join("&")
        : `${Rc(e)}=${Rc(i)}`
    )
    .filter((e) => e);
  return t.length ? `?${t.join("&")}` : "";
}
var sD = /^[^\/()?;#]+/;
function Zh(n) {
  let t = n.match(sD);
  return t ? t[0] : "";
}
var lD = /^[^\/()?;=#]+/;
function cD(n) {
  let t = n.match(lD);
  return t ? t[0] : "";
}
var dD = /^[^=?&#]+/;
function uD(n) {
  let t = n.match(dD);
  return t ? t[0] : "";
}
var hD = /^[^&#]+/;
function pD(n) {
  let t = n.match(hD);
  return t ? t[0] : "";
}
var op = class {
  constructor(t) {
    (this.url = t), (this.remaining = t);
  }
  parseRootSegment() {
    return (
      this.consumeOptional("/"),
      this.remaining === "" ||
      this.peekStartsWith("?") ||
      this.peekStartsWith("#")
        ? new ft([], {})
        : new ft([], this.parseChildren())
    );
  }
  parseQueryParams() {
    let t = {};
    if (this.consumeOptional("?"))
      do this.parseQueryParam(t);
      while (this.consumeOptional("&"));
    return t;
  }
  parseFragment() {
    return this.consumeOptional("#")
      ? decodeURIComponent(this.remaining)
      : null;
  }
  parseChildren() {
    if (this.remaining === "") return {};
    this.consumeOptional("/");
    let t = [];
    for (
      this.peekStartsWith("(") || t.push(this.parseSegment());
      this.peekStartsWith("/") &&
      !this.peekStartsWith("//") &&
      !this.peekStartsWith("/(");

    )
      this.capture("/"), t.push(this.parseSegment());
    let e = {};
    this.peekStartsWith("/(") &&
      (this.capture("/"), (e = this.parseParens(!0)));
    let i = {};
    return (
      this.peekStartsWith("(") && (i = this.parseParens(!1)),
      (t.length > 0 || Object.keys(e).length > 0) && (i[Ye] = new ft(t, e)),
      i
    );
  }
  parseSegment() {
    let t = Zh(this.remaining);
    if (t === "" && this.peekStartsWith(";")) throw new mt(4009, !1);
    return this.capture(t), new So(Vc(t), this.parseMatrixParams());
  }
  parseMatrixParams() {
    let t = {};
    for (; this.consumeOptional(";"); ) this.parseParam(t);
    return t;
  }
  parseParam(t) {
    let e = cD(this.remaining);
    if (!e) return;
    this.capture(e);
    let i = "";
    if (this.consumeOptional("=")) {
      let r = Zh(this.remaining);
      r && ((i = r), this.capture(i));
    }
    t[Vc(e)] = Vc(i);
  }
  parseQueryParam(t) {
    let e = uD(this.remaining);
    if (!e) return;
    this.capture(e);
    let i = "";
    if (this.consumeOptional("=")) {
      let a = pD(this.remaining);
      a && ((i = a), this.capture(i));
    }
    let r = w0(e),
      o = w0(i);
    if (t.hasOwnProperty(r)) {
      let a = t[r];
      Array.isArray(a) || ((a = [a]), (t[r] = a)), a.push(o);
    } else t[r] = o;
  }
  parseParens(t) {
    let e = {};
    for (
      this.capture("(");
      !this.consumeOptional(")") && this.remaining.length > 0;

    ) {
      let i = Zh(this.remaining),
        r = this.remaining[i.length];
      if (r !== "/" && r !== ")" && r !== ";") throw new mt(4010, !1);
      let o;
      i.indexOf(":") > -1
        ? ((o = i.slice(0, i.indexOf(":"))), this.capture(o), this.capture(":"))
        : t && (o = Ye);
      let a = this.parseChildren();
      (e[o] = Object.keys(a).length === 1 ? a[Ye] : new ft([], a)),
        this.consumeOptional("//");
    }
    return e;
  }
  peekStartsWith(t) {
    return this.remaining.startsWith(t);
  }
  consumeOptional(t) {
    return this.peekStartsWith(t)
      ? ((this.remaining = this.remaining.substring(t.length)), !0)
      : !1;
  }
  capture(t) {
    if (!this.consumeOptional(t)) throw new mt(4011, !1);
  }
};
function H0(n) {
  return n.segments.length > 0 ? new ft([], { [Ye]: n }) : n;
}
function j0(n) {
  let t = {};
  for (let [i, r] of Object.entries(n.children)) {
    let o = j0(r);
    if (i === Ye && o.segments.length === 0 && o.hasChildren())
      for (let [a, s] of Object.entries(o.children)) t[a] = s;
    else (o.segments.length > 0 || o.hasChildren()) && (t[i] = o);
  }
  let e = new ft(n.segments, t);
  return mD(e);
}
function mD(n) {
  if (n.numberOfChildren === 1 && n.children[Ye]) {
    let t = n.children[Ye];
    return new ft(n.segments.concat(t.segments), t.children);
  }
  return n;
}
function To(n) {
  return n instanceof Cr;
}
function fD(n, t, e = null, i = null) {
  let r = U0(n);
  return z0(r, t, e, i);
}
function U0(n) {
  let t;
  function e(o) {
    let a = {};
    for (let l of o.children) {
      let d = e(l);
      a[l.outlet] = d;
    }
    let s = new ft(o.url, a);
    return o === n && (t = s), s;
  }
  let i = e(n.root),
    r = H0(i);
  return t ?? r;
}
function z0(n, t, e, i) {
  let r = n;
  for (; r.parent; ) r = r.parent;
  if (t.length === 0) return Jh(r, r, r, e, i);
  let o = gD(t);
  if (o.toRoot()) return Jh(r, r, new ft([], {}), e, i);
  let a = _D(o, r, n),
    s = a.processChildren
      ? Vs(a.segmentGroup, a.index, o.commands)
      : W0(a.segmentGroup, a.index, o.commands);
  return Jh(r, a.segmentGroup, s, e, i);
}
function Bc(n) {
  return typeof n == "object" && n != null && !n.outlets && !n.segmentPath;
}
function js(n) {
  return typeof n == "object" && n != null && n.outlets;
}
function Jh(n, t, e, i, r) {
  let o = {};
  i &&
    Object.entries(i).forEach(([l, d]) => {
      o[l] = Array.isArray(d) ? d.map((m) => `${m}`) : `${d}`;
    });
  let a;
  n === t ? (a = e) : (a = $0(n, t, e));
  let s = H0(j0(a));
  return new Cr(s, o, r);
}
function $0(n, t, e) {
  let i = {};
  return (
    Object.entries(n.children).forEach(([r, o]) => {
      o === t ? (i[r] = e) : (i[r] = $0(o, t, e));
    }),
    new ft(n.segments, i)
  );
}
var Hc = class {
  constructor(t, e, i) {
    if (
      ((this.isAbsolute = t),
      (this.numberOfDoubleDots = e),
      (this.commands = i),
      t && i.length > 0 && Bc(i[0]))
    )
      throw new mt(4003, !1);
    let r = i.find(js);
    if (r && r !== A0(i)) throw new mt(4004, !1);
  }
  toRoot() {
    return (
      this.isAbsolute && this.commands.length === 1 && this.commands[0] == "/"
    );
  }
};
function gD(n) {
  if (typeof n[0] == "string" && n.length === 1 && n[0] === "/")
    return new Hc(!0, 0, n);
  let t = 0,
    e = !1,
    i = n.reduce((r, o, a) => {
      if (typeof o == "object" && o != null) {
        if (o.outlets) {
          let s = {};
          return (
            Object.entries(o.outlets).forEach(([l, d]) => {
              s[l] = typeof d == "string" ? d.split("/") : d;
            }),
            [...r, { outlets: s }]
          );
        }
        if (o.segmentPath) return [...r, o.segmentPath];
      }
      return typeof o != "string"
        ? [...r, o]
        : a === 0
        ? (o.split("/").forEach((s, l) => {
            (l == 0 && s === ".") ||
              (l == 0 && s === ""
                ? (e = !0)
                : s === ".."
                ? t++
                : s != "" && r.push(s));
          }),
          r)
        : [...r, o];
    }, []);
  return new Hc(e, t, i);
}
var ga = class {
  constructor(t, e, i) {
    (this.segmentGroup = t), (this.processChildren = e), (this.index = i);
  }
};
function _D(n, t, e) {
  if (n.isAbsolute) return new ga(t, !0, 0);
  if (!e) return new ga(t, !1, NaN);
  if (e.parent === null) return new ga(e, !0, 0);
  let i = Bc(n.commands[0]) ? 0 : 1,
    r = e.segments.length - 1 + i;
  return bD(e, r, n.numberOfDoubleDots);
}
function bD(n, t, e) {
  let i = n,
    r = t,
    o = e;
  for (; o > r; ) {
    if (((o -= r), (i = i.parent), !i)) throw new mt(4005, !1);
    r = i.segments.length;
  }
  return new ga(i, !1, r - o);
}
function vD(n) {
  return js(n[0]) ? n[0].outlets : { [Ye]: n };
}
function W0(n, t, e) {
  if (((n ??= new ft([], {})), n.segments.length === 0 && n.hasChildren()))
    return Vs(n, t, e);
  let i = yD(n, t, e),
    r = e.slice(i.commandIndex);
  if (i.match && i.pathIndex < n.segments.length) {
    let o = new ft(n.segments.slice(0, i.pathIndex), {});
    return (
      (o.children[Ye] = new ft(n.segments.slice(i.pathIndex), n.children)),
      Vs(o, 0, r)
    );
  } else
    return i.match && r.length === 0
      ? new ft(n.segments, {})
      : i.match && !n.hasChildren()
      ? ap(n, t, e)
      : i.match
      ? Vs(n, 0, r)
      : ap(n, t, e);
}
function Vs(n, t, e) {
  if (e.length === 0) return new ft(n.segments, {});
  {
    let i = vD(e),
      r = {};
    if (
      Object.keys(i).some((o) => o !== Ye) &&
      n.children[Ye] &&
      n.numberOfChildren === 1 &&
      n.children[Ye].segments.length === 0
    ) {
      let o = Vs(n.children[Ye], t, e);
      return new ft(n.segments, o.children);
    }
    return (
      Object.entries(i).forEach(([o, a]) => {
        typeof a == "string" && (a = [a]),
          a !== null && (r[o] = W0(n.children[o], t, a));
      }),
      Object.entries(n.children).forEach(([o, a]) => {
        i[o] === void 0 && (r[o] = a);
      }),
      new ft(n.segments, r)
    );
  }
}
function yD(n, t, e) {
  let i = 0,
    r = t,
    o = { match: !1, pathIndex: 0, commandIndex: 0 };
  for (; r < n.segments.length; ) {
    if (i >= e.length) return o;
    let a = n.segments[r],
      s = e[i];
    if (js(s)) break;
    let l = `${s}`,
      d = i < e.length - 1 ? e[i + 1] : null;
    if (r > 0 && l === void 0) break;
    if (l && d && typeof d == "object" && d.outlets === void 0) {
      if (!S0(l, d, a)) return o;
      i += 2;
    } else {
      if (!S0(l, {}, a)) return o;
      i++;
    }
    r++;
  }
  return { match: !0, pathIndex: r, commandIndex: i };
}
function ap(n, t, e) {
  let i = n.segments.slice(0, t),
    r = 0;
  for (; r < e.length; ) {
    let o = e[r];
    if (js(o)) {
      let l = xD(o.outlets);
      return new ft(i, l);
    }
    if (r === 0 && Bc(e[0])) {
      let l = n.segments[t];
      i.push(new So(l.path, D0(e[0]))), r++;
      continue;
    }
    let a = js(o) ? o.outlets[Ye] : `${o}`,
      s = r < e.length - 1 ? e[r + 1] : null;
    a && s && Bc(s)
      ? (i.push(new So(a, D0(s))), (r += 2))
      : (i.push(new So(a, {})), r++);
  }
  return new ft(i, {});
}
function xD(n) {
  let t = {};
  return (
    Object.entries(n).forEach(([e, i]) => {
      typeof i == "string" && (i = [i]),
        i !== null && (t[e] = ap(new ft([], {}), 0, i));
    }),
    t
  );
}
function D0(n) {
  let t = {};
  return Object.entries(n).forEach(([e, i]) => (t[e] = `${i}`)), t;
}
function S0(n, t, e) {
  return n == e.path && tr(t, e.parameters);
}
var Bs = "imperative",
  pi = (function (n) {
    return (
      (n[(n.NavigationStart = 0)] = "NavigationStart"),
      (n[(n.NavigationEnd = 1)] = "NavigationEnd"),
      (n[(n.NavigationCancel = 2)] = "NavigationCancel"),
      (n[(n.NavigationError = 3)] = "NavigationError"),
      (n[(n.RoutesRecognized = 4)] = "RoutesRecognized"),
      (n[(n.ResolveStart = 5)] = "ResolveStart"),
      (n[(n.ResolveEnd = 6)] = "ResolveEnd"),
      (n[(n.GuardsCheckStart = 7)] = "GuardsCheckStart"),
      (n[(n.GuardsCheckEnd = 8)] = "GuardsCheckEnd"),
      (n[(n.RouteConfigLoadStart = 9)] = "RouteConfigLoadStart"),
      (n[(n.RouteConfigLoadEnd = 10)] = "RouteConfigLoadEnd"),
      (n[(n.ChildActivationStart = 11)] = "ChildActivationStart"),
      (n[(n.ChildActivationEnd = 12)] = "ChildActivationEnd"),
      (n[(n.ActivationStart = 13)] = "ActivationStart"),
      (n[(n.ActivationEnd = 14)] = "ActivationEnd"),
      (n[(n.Scroll = 15)] = "Scroll"),
      (n[(n.NavigationSkipped = 16)] = "NavigationSkipped"),
      n
    );
  })(pi || {}),
  bn = class {
    constructor(t, e) {
      (this.id = t), (this.url = e);
    }
  },
  xa = class extends bn {
    constructor(t, e, i = "imperative", r = null) {
      super(t, e),
        (this.type = pi.NavigationStart),
        (this.navigationTrigger = i),
        (this.restoredState = r);
    }
    toString() {
      return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
    }
  },
  Mi = class extends bn {
    constructor(t, e, i) {
      super(t, e), (this.urlAfterRedirects = i), (this.type = pi.NavigationEnd);
    }
    toString() {
      return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
    }
  },
  rn = (function (n) {
    return (
      (n[(n.Redirect = 0)] = "Redirect"),
      (n[(n.SupersededByNewNavigation = 1)] = "SupersededByNewNavigation"),
      (n[(n.NoDataFromResolver = 2)] = "NoDataFromResolver"),
      (n[(n.GuardRejected = 3)] = "GuardRejected"),
      n
    );
  })(rn || {}),
  jc = (function (n) {
    return (
      (n[(n.IgnoredSameUrlNavigation = 0)] = "IgnoredSameUrlNavigation"),
      (n[(n.IgnoredByUrlHandlingStrategy = 1)] =
        "IgnoredByUrlHandlingStrategy"),
      n
    );
  })(jc || {}),
  xr = class extends bn {
    constructor(t, e, i, r) {
      super(t, e),
        (this.reason = i),
        (this.code = r),
        (this.type = pi.NavigationCancel);
    }
    toString() {
      return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
    }
  },
  Yr = class extends bn {
    constructor(t, e, i, r) {
      super(t, e),
        (this.reason = i),
        (this.code = r),
        (this.type = pi.NavigationSkipped);
    }
  },
  Us = class extends bn {
    constructor(t, e, i, r) {
      super(t, e),
        (this.error = i),
        (this.target = r),
        (this.type = pi.NavigationError);
    }
    toString() {
      return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
    }
  },
  Uc = class extends bn {
    constructor(t, e, i, r) {
      super(t, e),
        (this.urlAfterRedirects = i),
        (this.state = r),
        (this.type = pi.RoutesRecognized);
    }
    toString() {
      return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  sp = class extends bn {
    constructor(t, e, i, r) {
      super(t, e),
        (this.urlAfterRedirects = i),
        (this.state = r),
        (this.type = pi.GuardsCheckStart);
    }
    toString() {
      return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  lp = class extends bn {
    constructor(t, e, i, r, o) {
      super(t, e),
        (this.urlAfterRedirects = i),
        (this.state = r),
        (this.shouldActivate = o),
        (this.type = pi.GuardsCheckEnd);
    }
    toString() {
      return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
    }
  },
  cp = class extends bn {
    constructor(t, e, i, r) {
      super(t, e),
        (this.urlAfterRedirects = i),
        (this.state = r),
        (this.type = pi.ResolveStart);
    }
    toString() {
      return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  dp = class extends bn {
    constructor(t, e, i, r) {
      super(t, e),
        (this.urlAfterRedirects = i),
        (this.state = r),
        (this.type = pi.ResolveEnd);
    }
    toString() {
      return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  up = class {
    constructor(t) {
      (this.route = t), (this.type = pi.RouteConfigLoadStart);
    }
    toString() {
      return `RouteConfigLoadStart(path: ${this.route.path})`;
    }
  },
  hp = class {
    constructor(t) {
      (this.route = t), (this.type = pi.RouteConfigLoadEnd);
    }
    toString() {
      return `RouteConfigLoadEnd(path: ${this.route.path})`;
    }
  },
  pp = class {
    constructor(t) {
      (this.snapshot = t), (this.type = pi.ChildActivationStart);
    }
    toString() {
      return `ChildActivationStart(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  mp = class {
    constructor(t) {
      (this.snapshot = t), (this.type = pi.ChildActivationEnd);
    }
    toString() {
      return `ChildActivationEnd(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  fp = class {
    constructor(t) {
      (this.snapshot = t), (this.type = pi.ActivationStart);
    }
    toString() {
      return `ActivationStart(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  gp = class {
    constructor(t) {
      (this.snapshot = t), (this.type = pi.ActivationEnd);
    }
    toString() {
      return `ActivationEnd(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  zc = class {
    constructor(t, e, i) {
      (this.routerEvent = t),
        (this.position = e),
        (this.anchor = i),
        (this.type = pi.Scroll);
    }
    toString() {
      let t = this.position ? `${this.position[0]}, ${this.position[1]}` : null;
      return `Scroll(anchor: '${this.anchor}', position: '${t}')`;
    }
  },
  zs = class {},
  Ca = class {
    constructor(t, e) {
      (this.url = t), (this.navigationBehaviorOptions = e);
    }
  };
function CD(n, t) {
  return (
    n.providers &&
      !n._injector &&
      (n._injector = Th(n.providers, t, `Route: ${n.path}`)),
    n._injector ?? t
  );
}
function Rn(n) {
  return n.outlet || Ye;
}
function wD(n, t) {
  let e = n.filter((i) => Rn(i) === t);
  return e.push(...n.filter((i) => Rn(i) !== t)), e;
}
function Xs(n) {
  if (!n) return null;
  if (n.routeConfig?._injector) return n.routeConfig._injector;
  for (let t = n.parent; t; t = t.parent) {
    let e = t.routeConfig;
    if (e?._loadedInjector) return e._loadedInjector;
    if (e?._injector) return e._injector;
  }
  return null;
}
var _p = class {
    get injector() {
      return Xs(this.route?.snapshot) ?? this.rootInjector;
    }
    set injector(t) {}
    constructor(t) {
      (this.rootInjector = t),
        (this.outlet = null),
        (this.route = null),
        (this.children = new Zs(this.rootInjector)),
        (this.attachRef = null);
    }
  },
  Zs = (() => {
    class n {
      constructor(e) {
        (this.rootInjector = e), (this.contexts = new Map());
      }
      onChildOutletCreated(e, i) {
        let r = this.getOrCreateContext(e);
        (r.outlet = i), this.contexts.set(e, r);
      }
      onChildOutletDestroyed(e) {
        let i = this.getContext(e);
        i && ((i.outlet = null), (i.attachRef = null));
      }
      onOutletDeactivated() {
        let e = this.contexts;
        return (this.contexts = new Map()), e;
      }
      onOutletReAttached(e) {
        this.contexts = e;
      }
      getOrCreateContext(e) {
        let i = this.getContext(e);
        return (
          i || ((i = new _p(this.rootInjector)), this.contexts.set(e, i)), i
        );
      }
      getContext(e) {
        return this.contexts.get(e) || null;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(fn));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  $c = class {
    constructor(t) {
      this._root = t;
    }
    get root() {
      return this._root.value;
    }
    parent(t) {
      let e = this.pathFromRoot(t);
      return e.length > 1 ? e[e.length - 2] : null;
    }
    children(t) {
      let e = bp(t, this._root);
      return e ? e.children.map((i) => i.value) : [];
    }
    firstChild(t) {
      let e = bp(t, this._root);
      return e && e.children.length > 0 ? e.children[0].value : null;
    }
    siblings(t) {
      let e = vp(t, this._root);
      return e.length < 2
        ? []
        : e[e.length - 2].children.map((r) => r.value).filter((r) => r !== t);
    }
    pathFromRoot(t) {
      return vp(t, this._root).map((e) => e.value);
    }
  };
function bp(n, t) {
  if (n === t.value) return t;
  for (let e of t.children) {
    let i = bp(n, e);
    if (i) return i;
  }
  return null;
}
function vp(n, t) {
  if (n === t.value) return [t];
  for (let e of t.children) {
    let i = vp(n, e);
    if (i.length) return i.unshift(t), i;
  }
  return [];
}
var nn = class {
  constructor(t, e) {
    (this.value = t), (this.children = e);
  }
  toString() {
    return `TreeNode(${this.value})`;
  }
};
function fa(n) {
  let t = {};
  return n && n.children.forEach((e) => (t[e.value.outlet] = e)), t;
}
var Wc = class extends $c {
  constructor(t, e) {
    super(t), (this.snapshot = e), Ep(this, t);
  }
  toString() {
    return this.snapshot.toString();
  }
};
function G0(n) {
  let t = DD(n),
    e = new Kt([new So("", {})]),
    i = new Kt({}),
    r = new Kt({}),
    o = new Kt({}),
    a = new Kt(""),
    s = new Yt(e, i, o, a, r, Ye, n, t.root);
  return (s.snapshot = t.root), new Wc(new nn(s, []), t);
}
function DD(n) {
  let t = {},
    e = {},
    i = {},
    r = "",
    o = new _a([], t, i, r, e, Ye, n, null, {});
  return new Yc("", new nn(o, []));
}
var Yt = class {
  constructor(t, e, i, r, o, a, s, l) {
    (this.urlSubject = t),
      (this.paramsSubject = e),
      (this.queryParamsSubject = i),
      (this.fragmentSubject = r),
      (this.dataSubject = o),
      (this.outlet = a),
      (this.component = s),
      (this._futureSnapshot = l),
      (this.title = this.dataSubject?.pipe(Ke((d) => d[Ks])) ?? be(void 0)),
      (this.url = t),
      (this.params = e),
      (this.queryParams = i),
      (this.fragment = r),
      (this.data = o);
  }
  get routeConfig() {
    return this._futureSnapshot.routeConfig;
  }
  get root() {
    return this._routerState.root;
  }
  get parent() {
    return this._routerState.parent(this);
  }
  get firstChild() {
    return this._routerState.firstChild(this);
  }
  get children() {
    return this._routerState.children(this);
  }
  get pathFromRoot() {
    return this._routerState.pathFromRoot(this);
  }
  get paramMap() {
    return (
      (this._paramMap ??= this.params.pipe(Ke((t) => va(t)))), this._paramMap
    );
  }
  get queryParamMap() {
    return (
      (this._queryParamMap ??= this.queryParams.pipe(Ke((t) => va(t)))),
      this._queryParamMap
    );
  }
  toString() {
    return this.snapshot
      ? this.snapshot.toString()
      : `Future(${this._futureSnapshot})`;
  }
};
function Gc(n, t, e = "emptyOnly") {
  let i,
    { routeConfig: r } = n;
  return (
    t !== null &&
    (e === "always" ||
      r?.path === "" ||
      (!t.component && !t.routeConfig?.loadComponent))
      ? (i = {
          params: Q(Q({}, t.params), n.params),
          data: Q(Q({}, t.data), n.data),
          resolve: Q(Q(Q(Q({}, n.data), t.data), r?.data), n._resolvedData),
        })
      : (i = {
          params: Q({}, n.params),
          data: Q({}, n.data),
          resolve: Q(Q({}, n.data), n._resolvedData ?? {}),
        }),
    r && q0(r) && (i.resolve[Ks] = r.title),
    i
  );
}
var _a = class {
    get title() {
      return this.data?.[Ks];
    }
    constructor(t, e, i, r, o, a, s, l, d) {
      (this.url = t),
        (this.params = e),
        (this.queryParams = i),
        (this.fragment = r),
        (this.data = o),
        (this.outlet = a),
        (this.component = s),
        (this.routeConfig = l),
        (this._resolve = d);
    }
    get root() {
      return this._routerState.root;
    }
    get parent() {
      return this._routerState.parent(this);
    }
    get firstChild() {
      return this._routerState.firstChild(this);
    }
    get children() {
      return this._routerState.children(this);
    }
    get pathFromRoot() {
      return this._routerState.pathFromRoot(this);
    }
    get paramMap() {
      return (this._paramMap ??= va(this.params)), this._paramMap;
    }
    get queryParamMap() {
      return (
        (this._queryParamMap ??= va(this.queryParams)), this._queryParamMap
      );
    }
    toString() {
      let t = this.url.map((i) => i.toString()).join("/"),
        e = this.routeConfig ? this.routeConfig.path : "";
      return `Route(url:'${t}', path:'${e}')`;
    }
  },
  Yc = class extends $c {
    constructor(t, e) {
      super(e), (this.url = t), Ep(this, e);
    }
    toString() {
      return Y0(this._root);
    }
  };
function Ep(n, t) {
  (t.value._routerState = n), t.children.forEach((e) => Ep(n, e));
}
function Y0(n) {
  let t = n.children.length > 0 ? ` { ${n.children.map(Y0).join(", ")} } ` : "";
  return `${n.value}${t}`;
}
function ep(n) {
  if (n.snapshot) {
    let t = n.snapshot,
      e = n._futureSnapshot;
    (n.snapshot = e),
      tr(t.queryParams, e.queryParams) ||
        n.queryParamsSubject.next(e.queryParams),
      t.fragment !== e.fragment && n.fragmentSubject.next(e.fragment),
      tr(t.params, e.params) || n.paramsSubject.next(e.params),
      Xw(t.url, e.url) || n.urlSubject.next(e.url),
      tr(t.data, e.data) || n.dataSubject.next(e.data);
  } else
    (n.snapshot = n._futureSnapshot),
      n.dataSubject.next(n._futureSnapshot.data);
}
function yp(n, t) {
  let e = tr(n.params, t.params) && tD(n.url, t.url),
    i = !n.parent != !t.parent;
  return e && !i && (!n.parent || yp(n.parent, t.parent));
}
function q0(n) {
  return typeof n.title == "string" || n.title === null;
}
var Js = (() => {
    class n {
      constructor() {
        (this.activated = null),
          (this._activatedRoute = null),
          (this.name = Ye),
          (this.activateEvents = new De()),
          (this.deactivateEvents = new De()),
          (this.attachEvents = new De()),
          (this.detachEvents = new De()),
          (this.parentContexts = G(Zs)),
          (this.location = G(Ji)),
          (this.changeDetector = G(et)),
          (this.inputBinder = G(Xc, { optional: !0 })),
          (this.supportsBindingToComponentInputs = !0);
      }
      get activatedComponentRef() {
        return this.activated;
      }
      ngOnChanges(e) {
        if (e.name) {
          let { firstChange: i, previousValue: r } = e.name;
          if (i) return;
          this.isTrackedInParentContexts(r) &&
            (this.deactivate(), this.parentContexts.onChildOutletDestroyed(r)),
            this.initializeOutletWithName();
        }
      }
      ngOnDestroy() {
        this.isTrackedInParentContexts(this.name) &&
          this.parentContexts.onChildOutletDestroyed(this.name),
          this.inputBinder?.unsubscribeFromRouteData(this);
      }
      isTrackedInParentContexts(e) {
        return this.parentContexts.getContext(e)?.outlet === this;
      }
      ngOnInit() {
        this.initializeOutletWithName();
      }
      initializeOutletWithName() {
        if (
          (this.parentContexts.onChildOutletCreated(this.name, this),
          this.activated)
        )
          return;
        let e = this.parentContexts.getContext(this.name);
        e?.route &&
          (e.attachRef
            ? this.attach(e.attachRef, e.route)
            : this.activateWith(e.route, e.injector));
      }
      get isActivated() {
        return !!this.activated;
      }
      get component() {
        if (!this.activated) throw new mt(4012, !1);
        return this.activated.instance;
      }
      get activatedRoute() {
        if (!this.activated) throw new mt(4012, !1);
        return this._activatedRoute;
      }
      get activatedRouteData() {
        return this._activatedRoute ? this._activatedRoute.snapshot.data : {};
      }
      detach() {
        if (!this.activated) throw new mt(4012, !1);
        this.location.detach();
        let e = this.activated;
        return (
          (this.activated = null),
          (this._activatedRoute = null),
          this.detachEvents.emit(e.instance),
          e
        );
      }
      attach(e, i) {
        (this.activated = e),
          (this._activatedRoute = i),
          this.location.insert(e.hostView),
          this.inputBinder?.bindActivatedRouteToOutletComponent(this),
          this.attachEvents.emit(e.instance);
      }
      deactivate() {
        if (this.activated) {
          let e = this.component;
          this.activated.destroy(),
            (this.activated = null),
            (this._activatedRoute = null),
            this.deactivateEvents.emit(e);
        }
      }
      activateWith(e, i) {
        if (this.isActivated) throw new mt(4013, !1);
        this._activatedRoute = e;
        let r = this.location,
          a = e.snapshot.component,
          s = this.parentContexts.getOrCreateContext(this.name).children,
          l = new xp(e, s, r.injector);
        (this.activated = r.createComponent(a, {
          index: r.length,
          injector: l,
          environmentInjector: i,
        })),
          this.changeDetector.markForCheck(),
          this.inputBinder?.bindActivatedRouteToOutletComponent(this),
          this.activateEvents.emit(this.activated.instance);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [["router-outlet"]],
          inputs: { name: "name" },
          outputs: {
            activateEvents: "activate",
            deactivateEvents: "deactivate",
            attachEvents: "attach",
            detachEvents: "detach",
          },
          exportAs: ["outlet"],
          standalone: !0,
          features: [Nt],
        });
      }
    }
    return n;
  })(),
  xp = class n {
    __ngOutletInjector(t) {
      return new n(this.route, this.childContexts, t);
    }
    constructor(t, e, i) {
      (this.route = t), (this.childContexts = e), (this.parent = i);
    }
    get(t, e) {
      return t === Yt
        ? this.route
        : t === Zs
        ? this.childContexts
        : this.parent.get(t, e);
    }
  },
  Xc = new Me(""),
  M0 = (() => {
    class n {
      constructor() {
        this.outletDataSubscriptions = new Map();
      }
      bindActivatedRouteToOutletComponent(e) {
        this.unsubscribeFromRouteData(e), this.subscribeToRouteData(e);
      }
      unsubscribeFromRouteData(e) {
        this.outletDataSubscriptions.get(e)?.unsubscribe(),
          this.outletDataSubscriptions.delete(e);
      }
      subscribeToRouteData(e) {
        let { activatedRoute: i } = e,
          r = yo([i.queryParams, i.params, i.data])
            .pipe(
              wi(
                ([o, a, s], l) => (
                  (s = Q(Q(Q({}, o), a), s)),
                  l === 0 ? be(s) : Promise.resolve(s)
                )
              )
            )
            .subscribe((o) => {
              if (
                !e.isActivated ||
                !e.activatedComponentRef ||
                e.activatedRoute !== i ||
                i.component === null
              ) {
                this.unsubscribeFromRouteData(e);
                return;
              }
              let a = F_(i.component);
              if (!a) {
                this.unsubscribeFromRouteData(e);
                return;
              }
              for (let { templateName: s } of a.inputs)
                e.activatedComponentRef.setInput(s, o[s]);
            });
        this.outletDataSubscriptions.set(e, r);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function SD(n, t, e) {
  let i = $s(n, t._root, e ? e._root : void 0);
  return new Wc(i, t);
}
function $s(n, t, e) {
  if (e && n.shouldReuseRoute(t.value, e.value.snapshot)) {
    let i = e.value;
    i._futureSnapshot = t.value;
    let r = MD(n, t, e);
    return new nn(i, r);
  } else {
    if (n.shouldAttach(t.value)) {
      let o = n.retrieve(t.value);
      if (o !== null) {
        let a = o.route;
        return (
          (a.value._futureSnapshot = t.value),
          (a.children = t.children.map((s) => $s(n, s))),
          a
        );
      }
    }
    let i = TD(t.value),
      r = t.children.map((o) => $s(n, o));
    return new nn(i, r);
  }
}
function MD(n, t, e) {
  return t.children.map((i) => {
    for (let r of e.children)
      if (n.shouldReuseRoute(i.value, r.value.snapshot)) return $s(n, i, r);
    return $s(n, i);
  });
}
function TD(n) {
  return new Yt(
    new Kt(n.url),
    new Kt(n.params),
    new Kt(n.queryParams),
    new Kt(n.fragment),
    new Kt(n.data),
    n.outlet,
    n.component,
    n
  );
}
var Ws = class {
    constructor(t, e) {
      (this.redirectTo = t), (this.navigationBehaviorOptions = e);
    }
  },
  K0 = "ngNavigationCancelingError";
function qc(n, t) {
  let { redirectTo: e, navigationBehaviorOptions: i } = To(t)
      ? { redirectTo: t, navigationBehaviorOptions: void 0 }
      : t,
    r = Q0(!1, rn.Redirect);
  return (r.url = e), (r.navigationBehaviorOptions = i), r;
}
function Q0(n, t) {
  let e = new Error(`NavigationCancelingError: ${n || ""}`);
  return (e[K0] = !0), (e.cancellationCode = t), e;
}
function ED(n) {
  return X0(n) && To(n.url);
}
function X0(n) {
  return !!n && n[K0];
}
var kD = (n, t, e, i) =>
    Ke(
      (r) => (
        new Cp(t, r.targetRouterState, r.currentRouterState, e, i).activate(n),
        r
      )
    ),
  Cp = class {
    constructor(t, e, i, r, o) {
      (this.routeReuseStrategy = t),
        (this.futureState = e),
        (this.currState = i),
        (this.forwardEvent = r),
        (this.inputBindingEnabled = o);
    }
    activate(t) {
      let e = this.futureState._root,
        i = this.currState ? this.currState._root : null;
      this.deactivateChildRoutes(e, i, t),
        ep(this.futureState.root),
        this.activateChildRoutes(e, i, t);
    }
    deactivateChildRoutes(t, e, i) {
      let r = fa(e);
      t.children.forEach((o) => {
        let a = o.value.outlet;
        this.deactivateRoutes(o, r[a], i), delete r[a];
      }),
        Object.values(r).forEach((o) => {
          this.deactivateRouteAndItsChildren(o, i);
        });
    }
    deactivateRoutes(t, e, i) {
      let r = t.value,
        o = e ? e.value : null;
      if (r === o)
        if (r.component) {
          let a = i.getContext(r.outlet);
          a && this.deactivateChildRoutes(t, e, a.children);
        } else this.deactivateChildRoutes(t, e, i);
      else o && this.deactivateRouteAndItsChildren(e, i);
    }
    deactivateRouteAndItsChildren(t, e) {
      t.value.component &&
      this.routeReuseStrategy.shouldDetach(t.value.snapshot)
        ? this.detachAndStoreRouteSubtree(t, e)
        : this.deactivateRouteAndOutlet(t, e);
    }
    detachAndStoreRouteSubtree(t, e) {
      let i = e.getContext(t.value.outlet),
        r = i && t.value.component ? i.children : e,
        o = fa(t);
      for (let a of Object.values(o)) this.deactivateRouteAndItsChildren(a, r);
      if (i && i.outlet) {
        let a = i.outlet.detach(),
          s = i.children.onOutletDeactivated();
        this.routeReuseStrategy.store(t.value.snapshot, {
          componentRef: a,
          route: t,
          contexts: s,
        });
      }
    }
    deactivateRouteAndOutlet(t, e) {
      let i = e.getContext(t.value.outlet),
        r = i && t.value.component ? i.children : e,
        o = fa(t);
      for (let a of Object.values(o)) this.deactivateRouteAndItsChildren(a, r);
      i &&
        (i.outlet && (i.outlet.deactivate(), i.children.onOutletDeactivated()),
        (i.attachRef = null),
        (i.route = null));
    }
    activateChildRoutes(t, e, i) {
      let r = fa(e);
      t.children.forEach((o) => {
        this.activateRoutes(o, r[o.value.outlet], i),
          this.forwardEvent(new gp(o.value.snapshot));
      }),
        t.children.length && this.forwardEvent(new mp(t.value.snapshot));
    }
    activateRoutes(t, e, i) {
      let r = t.value,
        o = e ? e.value : null;
      if ((ep(r), r === o))
        if (r.component) {
          let a = i.getOrCreateContext(r.outlet);
          this.activateChildRoutes(t, e, a.children);
        } else this.activateChildRoutes(t, e, i);
      else if (r.component) {
        let a = i.getOrCreateContext(r.outlet);
        if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
          let s = this.routeReuseStrategy.retrieve(r.snapshot);
          this.routeReuseStrategy.store(r.snapshot, null),
            a.children.onOutletReAttached(s.contexts),
            (a.attachRef = s.componentRef),
            (a.route = s.route.value),
            a.outlet && a.outlet.attach(s.componentRef, s.route.value),
            ep(s.route.value),
            this.activateChildRoutes(t, null, a.children);
        } else
          (a.attachRef = null),
            (a.route = r),
            a.outlet && a.outlet.activateWith(r, a.injector),
            this.activateChildRoutes(t, null, a.children);
      } else this.activateChildRoutes(t, null, i);
    }
  },
  Kc = class {
    constructor(t) {
      (this.path = t), (this.route = this.path[this.path.length - 1]);
    }
  },
  ba = class {
    constructor(t, e) {
      (this.component = t), (this.route = e);
    }
  };
function ID(n, t, e) {
  let i = n._root,
    r = t ? t._root : null;
  return Ns(i, r, e, [i.value]);
}
function OD(n) {
  let t = n.routeConfig ? n.routeConfig.canActivateChild : null;
  return !t || t.length === 0 ? null : { node: n, guards: t };
}
function Da(n, t) {
  let e = Symbol(),
    i = t.get(n, e);
  return i === e ? (typeof n == "function" && !m_(n) ? n : t.get(n)) : i;
}
function Ns(
  n,
  t,
  e,
  i,
  r = { canDeactivateChecks: [], canActivateChecks: [] }
) {
  let o = fa(t);
  return (
    n.children.forEach((a) => {
      PD(a, o[a.value.outlet], e, i.concat([a.value]), r),
        delete o[a.value.outlet];
    }),
    Object.entries(o).forEach(([a, s]) => Hs(s, e.getContext(a), r)),
    r
  );
}
function PD(
  n,
  t,
  e,
  i,
  r = { canDeactivateChecks: [], canActivateChecks: [] }
) {
  let o = n.value,
    a = t ? t.value : null,
    s = e ? e.getContext(n.value.outlet) : null;
  if (a && o.routeConfig === a.routeConfig) {
    let l = AD(a, o, o.routeConfig.runGuardsAndResolvers);
    l
      ? r.canActivateChecks.push(new Kc(i))
      : ((o.data = a.data), (o._resolvedData = a._resolvedData)),
      o.component ? Ns(n, t, s ? s.children : null, i, r) : Ns(n, t, e, i, r),
      l &&
        s &&
        s.outlet &&
        s.outlet.isActivated &&
        r.canDeactivateChecks.push(new ba(s.outlet.component, a));
  } else
    a && Hs(t, s, r),
      r.canActivateChecks.push(new Kc(i)),
      o.component
        ? Ns(n, null, s ? s.children : null, i, r)
        : Ns(n, null, e, i, r);
  return r;
}
function AD(n, t, e) {
  if (typeof e == "function") return e(n, t);
  switch (e) {
    case "pathParamsChange":
      return !Mo(n.url, t.url);
    case "pathParamsOrQueryParamsChange":
      return !Mo(n.url, t.url) || !tr(n.queryParams, t.queryParams);
    case "always":
      return !0;
    case "paramsOrQueryParamsChange":
      return !yp(n, t) || !tr(n.queryParams, t.queryParams);
    case "paramsChange":
    default:
      return !yp(n, t);
  }
}
function Hs(n, t, e) {
  let i = fa(n),
    r = n.value;
  Object.entries(i).forEach(([o, a]) => {
    r.component
      ? t
        ? Hs(a, t.children.getContext(o), e)
        : Hs(a, null, e)
      : Hs(a, t, e);
  }),
    r.component
      ? t && t.outlet && t.outlet.isActivated
        ? e.canDeactivateChecks.push(new ba(t.outlet.component, r))
        : e.canDeactivateChecks.push(new ba(null, r))
      : e.canDeactivateChecks.push(new ba(null, r));
}
function el(n) {
  return typeof n == "function";
}
function RD(n) {
  return typeof n == "boolean";
}
function FD(n) {
  return n && el(n.canLoad);
}
function ND(n) {
  return n && el(n.canActivate);
}
function LD(n) {
  return n && el(n.canActivateChild);
}
function VD(n) {
  return n && el(n.canDeactivate);
}
function BD(n) {
  return n && el(n.canMatch);
}
function Z0(n) {
  return n instanceof a_ || n?.name === "EmptyError";
}
var Fc = Symbol("INITIAL_VALUE");
function wa() {
  return wi((n) =>
    yo(n.map((t) => t.pipe(Zi(1), Kn(Fc)))).pipe(
      Ke((t) => {
        for (let e of t)
          if (e !== !0) {
            if (e === Fc) return Fc;
            if (e === !1 || HD(e)) return e;
          }
        return !0;
      }),
      Ot((t) => t !== Fc),
      Zi(1)
    )
  );
}
function HD(n) {
  return To(n) || n instanceof Ws;
}
function jD(n, t) {
  return Vi((e) => {
    let {
      targetSnapshot: i,
      currentSnapshot: r,
      guards: { canActivateChecks: o, canDeactivateChecks: a },
    } = e;
    return a.length === 0 && o.length === 0
      ? be(Be(Q({}, e), { guardsResult: !0 }))
      : UD(a, i, r, n).pipe(
          Vi((s) => (s && RD(s) ? zD(i, o, n, t) : be(s))),
          Ke((s) => Be(Q({}, e), { guardsResult: s }))
        );
  });
}
function UD(n, t, e, i) {
  return _i(n).pipe(
    Vi((r) => qD(r.component, r.route, e, t, i)),
    jr((r) => r !== !0, !0)
  );
}
function zD(n, t, e, i) {
  return _i(t).pipe(
    Br((r) =>
      dc(
        WD(r.route.parent, i),
        $D(r.route, i),
        YD(n, r.path, e),
        GD(n, r.route, e)
      )
    ),
    jr((r) => r !== !0, !0)
  );
}
function $D(n, t) {
  return n !== null && t && t(new fp(n)), be(!0);
}
function WD(n, t) {
  return n !== null && t && t(new pp(n)), be(!0);
}
function GD(n, t, e) {
  let i = t.routeConfig ? t.routeConfig.canActivate : null;
  if (!i || i.length === 0) return be(!0);
  let r = i.map((o) =>
    _h(() => {
      let a = Xs(t) ?? e,
        s = Da(o, a),
        l = ND(s) ? s.canActivate(t, n) : gn(a, () => s(t, n));
      return qr(l).pipe(jr());
    })
  );
  return be(r).pipe(wa());
}
function YD(n, t, e) {
  let i = t[t.length - 1],
    o = t
      .slice(0, t.length - 1)
      .reverse()
      .map((a) => OD(a))
      .filter((a) => a !== null)
      .map((a) =>
        _h(() => {
          let s = a.guards.map((l) => {
            let d = Xs(a.node) ?? e,
              m = Da(l, d),
              v = LD(m) ? m.canActivateChild(i, n) : gn(d, () => m(i, n));
            return qr(v).pipe(jr());
          });
          return be(s).pipe(wa());
        })
      );
  return be(o).pipe(wa());
}
function qD(n, t, e, i, r) {
  let o = t && t.routeConfig ? t.routeConfig.canDeactivate : null;
  if (!o || o.length === 0) return be(!0);
  let a = o.map((s) => {
    let l = Xs(t) ?? r,
      d = Da(s, l),
      m = VD(d) ? d.canDeactivate(n, t, e, i) : gn(l, () => d(n, t, e, i));
    return qr(m).pipe(jr());
  });
  return be(a).pipe(wa());
}
function KD(n, t, e, i) {
  let r = t.canLoad;
  if (r === void 0 || r.length === 0) return be(!0);
  let o = r.map((a) => {
    let s = Da(a, n),
      l = FD(s) ? s.canLoad(t, e) : gn(n, () => s(t, e));
    return qr(l);
  });
  return be(o).pipe(wa(), J0(i));
}
function J0(n) {
  return o_(
    Qt((t) => {
      if (typeof t != "boolean") throw qc(n, t);
    }),
    Ke((t) => t === !0)
  );
}
function QD(n, t, e, i) {
  let r = t.canMatch;
  if (!r || r.length === 0) return be(!0);
  let o = r.map((a) => {
    let s = Da(a, n),
      l = BD(s) ? s.canMatch(t, e) : gn(n, () => s(t, e));
    return qr(l);
  });
  return be(o).pipe(wa(), J0(i));
}
var Gs = class {
    constructor(t) {
      this.segmentGroup = t || null;
    }
  },
  Ys = class extends Error {
    constructor(t) {
      super(), (this.urlTree = t);
    }
  };
function ma(n) {
  return gs(new Gs(n));
}
function XD(n) {
  return gs(new mt(4e3, !1));
}
function ZD(n) {
  return gs(Q0(!1, rn.GuardRejected));
}
var wp = class {
    constructor(t, e) {
      (this.urlSerializer = t), (this.urlTree = e);
    }
    lineralizeSegments(t, e) {
      let i = [],
        r = e.root;
      for (;;) {
        if (((i = i.concat(r.segments)), r.numberOfChildren === 0))
          return be(i);
        if (r.numberOfChildren > 1 || !r.children[Ye])
          return XD(`${t.redirectTo}`);
        r = r.children[Ye];
      }
    }
    applyRedirectCommands(t, e, i, r, o) {
      if (typeof e != "string") {
        let s = e,
          {
            queryParams: l,
            fragment: d,
            routeConfig: m,
            url: v,
            outlet: x,
            params: C,
            data: S,
            title: T,
          } = r,
          k = gn(o, () =>
            s({
              params: C,
              data: S,
              queryParams: l,
              fragment: d,
              routeConfig: m,
              url: v,
              outlet: x,
              title: T,
            })
          );
        if (k instanceof Cr) throw new Ys(k);
        e = k;
      }
      let a = this.applyRedirectCreateUrlTree(
        e,
        this.urlSerializer.parse(e),
        t,
        i
      );
      if (e[0] === "/") throw new Ys(a);
      return a;
    }
    applyRedirectCreateUrlTree(t, e, i, r) {
      let o = this.createSegmentGroup(t, e.root, i, r);
      return new Cr(
        o,
        this.createQueryParams(e.queryParams, this.urlTree.queryParams),
        e.fragment
      );
    }
    createQueryParams(t, e) {
      let i = {};
      return (
        Object.entries(t).forEach(([r, o]) => {
          if (typeof o == "string" && o[0] === ":") {
            let s = o.substring(1);
            i[r] = e[s];
          } else i[r] = o;
        }),
        i
      );
    }
    createSegmentGroup(t, e, i, r) {
      let o = this.createSegments(t, e.segments, i, r),
        a = {};
      return (
        Object.entries(e.children).forEach(([s, l]) => {
          a[s] = this.createSegmentGroup(t, l, i, r);
        }),
        new ft(o, a)
      );
    }
    createSegments(t, e, i, r) {
      return e.map((o) =>
        o.path[0] === ":" ? this.findPosParam(t, o, r) : this.findOrReturn(o, i)
      );
    }
    findPosParam(t, e, i) {
      let r = i[e.path.substring(1)];
      if (!r) throw new mt(4001, !1);
      return r;
    }
    findOrReturn(t, e) {
      let i = 0;
      for (let r of e) {
        if (r.path === t.path) return e.splice(i), r;
        i++;
      }
      return t;
    }
  },
  Dp = {
    matched: !1,
    consumedSegments: [],
    remainingSegments: [],
    parameters: {},
    positionalParamSegments: {},
  };
function JD(n, t, e, i, r) {
  let o = eb(n, t, e);
  return o.matched
    ? ((i = CD(t, i)),
      QD(i, t, e, r).pipe(Ke((a) => (a === !0 ? o : Q({}, Dp)))))
    : be(o);
}
function eb(n, t, e) {
  if (t.path === "**") return eS(e);
  if (t.path === "")
    return t.pathMatch === "full" && (n.hasChildren() || e.length > 0)
      ? Q({}, Dp)
      : {
          matched: !0,
          consumedSegments: [],
          remainingSegments: e,
          parameters: {},
          positionalParamSegments: {},
        };
  let r = (t.matcher || Qw)(e, n, t);
  if (!r) return Q({}, Dp);
  let o = {};
  Object.entries(r.posParams ?? {}).forEach(([s, l]) => {
    o[s] = l.path;
  });
  let a =
    r.consumed.length > 0
      ? Q(Q({}, o), r.consumed[r.consumed.length - 1].parameters)
      : o;
  return {
    matched: !0,
    consumedSegments: r.consumed,
    remainingSegments: e.slice(r.consumed.length),
    parameters: a,
    positionalParamSegments: r.posParams ?? {},
  };
}
function eS(n) {
  return {
    matched: !0,
    parameters: n.length > 0 ? A0(n).parameters : {},
    consumedSegments: n,
    remainingSegments: [],
    positionalParamSegments: {},
  };
}
function T0(n, t, e, i) {
  return e.length > 0 && nS(n, e, i)
    ? {
        segmentGroup: new ft(t, iS(i, new ft(e, n.children))),
        slicedSegments: [],
      }
    : e.length === 0 && rS(n, e, i)
    ? {
        segmentGroup: new ft(n.segments, tS(n, e, i, n.children)),
        slicedSegments: e,
      }
    : { segmentGroup: new ft(n.segments, n.children), slicedSegments: e };
}
function tS(n, t, e, i) {
  let r = {};
  for (let o of e)
    if (Zc(n, t, o) && !i[Rn(o)]) {
      let a = new ft([], {});
      r[Rn(o)] = a;
    }
  return Q(Q({}, i), r);
}
function iS(n, t) {
  let e = {};
  e[Ye] = t;
  for (let i of n)
    if (i.path === "" && Rn(i) !== Ye) {
      let r = new ft([], {});
      e[Rn(i)] = r;
    }
  return e;
}
function nS(n, t, e) {
  return e.some((i) => Zc(n, t, i) && Rn(i) !== Ye);
}
function rS(n, t, e) {
  return e.some((i) => Zc(n, t, i));
}
function Zc(n, t, e) {
  return (n.hasChildren() || t.length > 0) && e.pathMatch === "full"
    ? !1
    : e.path === "";
}
function oS(n, t, e) {
  return t.length === 0 && !n.children[e];
}
var Sp = class {};
function aS(n, t, e, i, r, o, a = "emptyOnly") {
  return new Mp(n, t, e, i, r, a, o).recognize();
}
var sS = 31,
  Mp = class {
    constructor(t, e, i, r, o, a, s) {
      (this.injector = t),
        (this.configLoader = e),
        (this.rootComponentType = i),
        (this.config = r),
        (this.urlTree = o),
        (this.paramsInheritanceStrategy = a),
        (this.urlSerializer = s),
        (this.applyRedirects = new wp(this.urlSerializer, this.urlTree)),
        (this.absoluteRedirectCount = 0),
        (this.allowRedirects = !0);
    }
    noMatchError(t) {
      return new mt(4002, `'${t.segmentGroup}'`);
    }
    recognize() {
      let t = T0(this.urlTree.root, [], [], this.config).segmentGroup;
      return this.match(t).pipe(
        Ke(({ children: e, rootSnapshot: i }) => {
          let r = new nn(i, e),
            o = new Yc("", r),
            a = fD(i, [], this.urlTree.queryParams, this.urlTree.fragment);
          return (
            (a.queryParams = this.urlTree.queryParams),
            (o.url = this.urlSerializer.serialize(a)),
            { state: o, tree: a }
          );
        })
      );
    }
    match(t) {
      let e = new _a(
        [],
        Object.freeze({}),
        Object.freeze(Q({}, this.urlTree.queryParams)),
        this.urlTree.fragment,
        Object.freeze({}),
        Ye,
        this.rootComponentType,
        null,
        {}
      );
      return this.processSegmentGroup(
        this.injector,
        this.config,
        t,
        Ye,
        e
      ).pipe(
        Ke((i) => ({ children: i, rootSnapshot: e })),
        oa((i) => {
          if (i instanceof Ys)
            return (this.urlTree = i.urlTree), this.match(i.urlTree.root);
          throw i instanceof Gs ? this.noMatchError(i) : i;
        })
      );
    }
    processSegmentGroup(t, e, i, r, o) {
      return i.segments.length === 0 && i.hasChildren()
        ? this.processChildren(t, e, i, o)
        : this.processSegment(t, e, i, i.segments, r, !0, o).pipe(
            Ke((a) => (a instanceof nn ? [a] : []))
          );
    }
    processChildren(t, e, i, r) {
      let o = [];
      for (let a of Object.keys(i.children))
        a === "primary" ? o.unshift(a) : o.push(a);
      return _i(o).pipe(
        Br((a) => {
          let s = i.children[a],
            l = wD(e, a);
          return this.processSegmentGroup(t, l, s, a, r);
        }),
        p_((a, s) => (a.push(...s), a)),
        yh(null),
        h_(),
        Vi((a) => {
          if (a === null) return ma(i);
          let s = tb(a);
          return lS(s), be(s);
        })
      );
    }
    processSegment(t, e, i, r, o, a, s) {
      return _i(e).pipe(
        Br((l) =>
          this.processSegmentAgainstRoute(
            l._injector ?? t,
            e,
            l,
            i,
            r,
            o,
            a,
            s
          ).pipe(
            oa((d) => {
              if (d instanceof Gs) return be(null);
              throw d;
            })
          )
        ),
        jr((l) => !!l),
        oa((l) => {
          if (Z0(l)) return oS(i, r, o) ? be(new Sp()) : ma(i);
          throw l;
        })
      );
    }
    processSegmentAgainstRoute(t, e, i, r, o, a, s, l) {
      return Rn(i) !== a && (a === Ye || !Zc(r, o, i))
        ? ma(r)
        : i.redirectTo === void 0
        ? this.matchSegmentAgainstRoute(t, r, i, o, a, l)
        : this.allowRedirects && s
        ? this.expandSegmentAgainstRouteUsingRedirect(t, r, e, i, o, a, l)
        : ma(r);
    }
    expandSegmentAgainstRouteUsingRedirect(t, e, i, r, o, a, s) {
      let {
        matched: l,
        parameters: d,
        consumedSegments: m,
        positionalParamSegments: v,
        remainingSegments: x,
      } = eb(e, r, o);
      if (!l) return ma(e);
      typeof r.redirectTo == "string" &&
        r.redirectTo[0] === "/" &&
        (this.absoluteRedirectCount++,
        this.absoluteRedirectCount > sS && (this.allowRedirects = !1));
      let C = new _a(
          o,
          d,
          Object.freeze(Q({}, this.urlTree.queryParams)),
          this.urlTree.fragment,
          E0(r),
          Rn(r),
          r.component ?? r._loadedComponent ?? null,
          r,
          k0(r)
        ),
        S = Gc(C, s, this.paramsInheritanceStrategy);
      (C.params = Object.freeze(S.params)), (C.data = Object.freeze(S.data));
      let T = this.applyRedirects.applyRedirectCommands(
        m,
        r.redirectTo,
        v,
        C,
        t
      );
      return this.applyRedirects
        .lineralizeSegments(r, T)
        .pipe(Vi((k) => this.processSegment(t, i, e, k.concat(x), a, !1, s)));
    }
    matchSegmentAgainstRoute(t, e, i, r, o, a) {
      let s = JD(e, i, r, t, this.urlSerializer);
      return (
        i.path === "**" && (e.children = {}),
        s.pipe(
          wi((l) =>
            l.matched
              ? ((t = i._injector ?? t),
                this.getChildConfig(t, i, r).pipe(
                  wi(({ routes: d }) => {
                    let m = i._loadedInjector ?? t,
                      {
                        parameters: v,
                        consumedSegments: x,
                        remainingSegments: C,
                      } = l,
                      S = new _a(
                        x,
                        v,
                        Object.freeze(Q({}, this.urlTree.queryParams)),
                        this.urlTree.fragment,
                        E0(i),
                        Rn(i),
                        i.component ?? i._loadedComponent ?? null,
                        i,
                        k0(i)
                      ),
                      T = Gc(S, a, this.paramsInheritanceStrategy);
                    (S.params = Object.freeze(T.params)),
                      (S.data = Object.freeze(T.data));
                    let { segmentGroup: k, slicedSegments: P } = T0(e, x, C, d);
                    if (P.length === 0 && k.hasChildren())
                      return this.processChildren(m, d, k, S).pipe(
                        Ke((K) => new nn(S, K))
                      );
                    if (d.length === 0 && P.length === 0)
                      return be(new nn(S, []));
                    let j = Rn(i) === o;
                    return this.processSegment(
                      m,
                      d,
                      k,
                      P,
                      j ? Ye : o,
                      !0,
                      S
                    ).pipe(Ke((K) => new nn(S, K instanceof nn ? [K] : [])));
                  })
                ))
              : ma(e)
          )
        )
      );
    }
    getChildConfig(t, e, i) {
      return e.children
        ? be({ routes: e.children, injector: t })
        : e.loadChildren
        ? e._loadedRoutes !== void 0
          ? be({ routes: e._loadedRoutes, injector: e._loadedInjector })
          : KD(t, e, i, this.urlSerializer).pipe(
              Vi((r) =>
                r
                  ? this.configLoader.loadChildren(t, e).pipe(
                      Qt((o) => {
                        (e._loadedRoutes = o.routes),
                          (e._loadedInjector = o.injector);
                      })
                    )
                  : ZD(e)
              )
            )
        : be({ routes: [], injector: t });
    }
  };
function lS(n) {
  n.sort((t, e) =>
    t.value.outlet === Ye
      ? -1
      : e.value.outlet === Ye
      ? 1
      : t.value.outlet.localeCompare(e.value.outlet)
  );
}
function cS(n) {
  let t = n.value.routeConfig;
  return t && t.path === "";
}
function tb(n) {
  let t = [],
    e = new Set();
  for (let i of n) {
    if (!cS(i)) {
      t.push(i);
      continue;
    }
    let r = t.find((o) => i.value.routeConfig === o.value.routeConfig);
    r !== void 0 ? (r.children.push(...i.children), e.add(r)) : t.push(i);
  }
  for (let i of e) {
    let r = tb(i.children);
    t.push(new nn(i.value, r));
  }
  return t.filter((i) => !e.has(i));
}
function E0(n) {
  return n.data || {};
}
function k0(n) {
  return n.resolve || {};
}
function dS(n, t, e, i, r, o) {
  return Vi((a) =>
    aS(n, t, e, i, a.extractedUrl, r, o).pipe(
      Ke(({ state: s, tree: l }) =>
        Be(Q({}, a), { targetSnapshot: s, urlAfterRedirects: l })
      )
    )
  );
}
function uS(n, t) {
  return Vi((e) => {
    let {
      targetSnapshot: i,
      guards: { canActivateChecks: r },
    } = e;
    if (!r.length) return be(e);
    let o = new Set(r.map((l) => l.route)),
      a = new Set();
    for (let l of o) if (!a.has(l)) for (let d of ib(l)) a.add(d);
    let s = 0;
    return _i(a).pipe(
      Br((l) =>
        o.has(l)
          ? hS(l, i, n, t)
          : ((l.data = Gc(l, l.parent, n).resolve), be(void 0))
      ),
      Qt(() => s++),
      xh(1),
      Vi((l) => (s === a.size ? be(e) : qn))
    );
  });
}
function ib(n) {
  let t = n.children.map((e) => ib(e)).flat();
  return [n, ...t];
}
function hS(n, t, e, i) {
  let r = n.routeConfig,
    o = n._resolve;
  return (
    r?.title !== void 0 && !q0(r) && (o[Ks] = r.title),
    pS(o, n, t, i).pipe(
      Ke(
        (a) => (
          (n._resolvedData = a), (n.data = Gc(n, n.parent, e).resolve), null
        )
      )
    )
  );
}
function pS(n, t, e, i) {
  let r = np(n);
  if (r.length === 0) return be({});
  let o = {};
  return _i(r).pipe(
    Vi((a) =>
      mS(n[a], t, e, i).pipe(
        jr(),
        Qt((s) => {
          if (s instanceof Ws) throw qc(new ya(), s);
          o[a] = s;
        })
      )
    ),
    xh(1),
    d_(o),
    oa((a) => (Z0(a) ? qn : gs(a)))
  );
}
function mS(n, t, e, i) {
  let r = Xs(t) ?? i,
    o = Da(n, r),
    a = o.resolve ? o.resolve(t, e) : gn(r, () => o(t, e));
  return qr(a);
}
function tp(n) {
  return wi((t) => {
    let e = n(t);
    return e ? _i(e).pipe(Ke(() => t)) : be(t);
  });
}
var nb = (() => {
    class n {
      buildTitle(e) {
        let i,
          r = e.root;
        for (; r !== void 0; )
          (i = this.getResolvedTitleForRoute(r) ?? i),
            (r = r.children.find((o) => o.outlet === Ye));
        return i;
      }
      getResolvedTitleForRoute(e) {
        return e.data[Ks];
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: () => G(fS), providedIn: "root" });
      }
    }
    return n;
  })(),
  fS = (() => {
    class n extends nb {
      constructor(e) {
        super(), (this.title = e);
      }
      updateTitle(e) {
        let i = this.buildTitle(e);
        i !== void 0 && this.title.setTitle(i);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(v0));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  tl = new Me("", { providedIn: "root", factory: () => ({}) }),
  gS = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["ng-component"]],
          standalone: !0,
          features: [ue],
          decls: 1,
          vars: 0,
          template: function (i, r) {
            i & 1 && W(0, "router-outlet");
          },
          dependencies: [Js],
          encapsulation: 2,
        });
      }
    }
    return n;
  })();
function kp(n) {
  let t = n.children && n.children.map(kp),
    e = t ? Be(Q({}, n), { children: t }) : Q({}, n);
  return (
    !e.component &&
      !e.loadComponent &&
      (t || e.loadChildren) &&
      e.outlet &&
      e.outlet !== Ye &&
      (e.component = gS),
    e
  );
}
var qs = new Me(""),
  Ip = (() => {
    class n {
      constructor() {
        (this.componentLoaders = new WeakMap()),
          (this.childrenLoaders = new WeakMap()),
          (this.compiler = G(yc));
      }
      loadComponent(e) {
        if (this.componentLoaders.get(e)) return this.componentLoaders.get(e);
        if (e._loadedComponent) return be(e._loadedComponent);
        this.onLoadStartListener && this.onLoadStartListener(e);
        let i = qr(e.loadComponent()).pipe(
            Ke(rb),
            Qt((o) => {
              this.onLoadEndListener && this.onLoadEndListener(e),
                (e._loadedComponent = o);
            }),
            Hr(() => {
              this.componentLoaders.delete(e);
            })
          ),
          r = new fh(i, () => new Ie()).pipe(mh());
        return this.componentLoaders.set(e, r), r;
      }
      loadChildren(e, i) {
        if (this.childrenLoaders.get(i)) return this.childrenLoaders.get(i);
        if (i._loadedRoutes)
          return be({ routes: i._loadedRoutes, injector: i._loadedInjector });
        this.onLoadStartListener && this.onLoadStartListener(i);
        let o = _S(i, this.compiler, e, this.onLoadEndListener).pipe(
            Hr(() => {
              this.childrenLoaders.delete(i);
            })
          ),
          a = new fh(o, () => new Ie()).pipe(mh());
        return this.childrenLoaders.set(i, a), a;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function _S(n, t, e, i) {
  return qr(n.loadChildren()).pipe(
    Ke(rb),
    Vi((r) =>
      r instanceof E_ || Array.isArray(r) ? be(r) : _i(t.compileModuleAsync(r))
    ),
    Ke((r) => {
      i && i(n);
      let o,
        a,
        s = !1;
      return (
        Array.isArray(r)
          ? ((a = r), (s = !0))
          : ((o = r.create(e).injector),
            (a = o.get(qs, [], { optional: !0, self: !0 }).flat())),
        { routes: a.map(kp), injector: o }
      );
    })
  );
}
function bS(n) {
  return n && typeof n == "object" && "default" in n;
}
function rb(n) {
  return bS(n) ? n.default : n;
}
var Op = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: () => G(vS), providedIn: "root" });
      }
    }
    return n;
  })(),
  vS = (() => {
    class n {
      shouldProcessUrl(e) {
        return !0;
      }
      extract(e) {
        return e;
      }
      merge(e, i) {
        return e;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  ob = new Me(""),
  ab = new Me("");
function yS(n, t, e) {
  let i = n.get(ab),
    r = n.get(Oe);
  return n.get(Re).runOutsideAngular(() => {
    if (!r.startViewTransition || i.skipNextTransition)
      return (i.skipNextTransition = !1), new Promise((d) => setTimeout(d));
    let o,
      a = new Promise((d) => {
        o = d;
      }),
      s = r.startViewTransition(() => (o(), xS(n))),
      { onViewTransitionCreated: l } = i;
    return l && gn(n, () => l({ transition: s, from: t, to: e })), a;
  });
}
function xS(n) {
  return new Promise((t) => {
    kn({ read: () => setTimeout(t) }, { injector: n });
  });
}
var CS = new Me(""),
  Pp = (() => {
    class n {
      get hasRequestedNavigation() {
        return this.navigationId !== 0;
      }
      constructor() {
        (this.currentNavigation = null),
          (this.currentTransition = null),
          (this.lastSuccessfulNavigation = null),
          (this.events = new Ie()),
          (this.transitionAbortSubject = new Ie()),
          (this.configLoader = G(Ip)),
          (this.environmentInjector = G(fn)),
          (this.urlSerializer = G(Qs)),
          (this.rootContexts = G(Zs)),
          (this.location = G(vr)),
          (this.inputBindingEnabled = G(Xc, { optional: !0 }) !== null),
          (this.titleStrategy = G(nb)),
          (this.options = G(tl, { optional: !0 }) || {}),
          (this.paramsInheritanceStrategy =
            this.options.paramsInheritanceStrategy || "emptyOnly"),
          (this.urlHandlingStrategy = G(Op)),
          (this.createViewTransition = G(ob, { optional: !0 })),
          (this.navigationErrorHandler = G(CS, { optional: !0 })),
          (this.navigationId = 0),
          (this.afterPreactivation = () => be(void 0)),
          (this.rootComponentType = null);
        let e = (r) => this.events.next(new up(r)),
          i = (r) => this.events.next(new hp(r));
        (this.configLoader.onLoadEndListener = i),
          (this.configLoader.onLoadStartListener = e);
      }
      complete() {
        this.transitions?.complete();
      }
      handleNavigationRequest(e) {
        let i = ++this.navigationId;
        this.transitions?.next(
          Be(Q(Q({}, this.transitions.value), e), { id: i })
        );
      }
      setupNavigations(e, i, r) {
        return (
          (this.transitions = new Kt({
            id: 0,
            currentUrlTree: i,
            currentRawUrl: i,
            extractedUrl: this.urlHandlingStrategy.extract(i),
            urlAfterRedirects: this.urlHandlingStrategy.extract(i),
            rawUrl: i,
            extras: {},
            resolve: () => {},
            reject: () => {},
            promise: Promise.resolve(!0),
            source: Bs,
            restoredState: null,
            currentSnapshot: r.snapshot,
            targetSnapshot: null,
            currentRouterState: r,
            targetRouterState: null,
            guards: { canActivateChecks: [], canDeactivateChecks: [] },
            guardsResult: null,
          })),
          this.transitions.pipe(
            Ot((o) => o.id !== 0),
            Ke((o) =>
              Be(Q({}, o), {
                extractedUrl: this.urlHandlingStrategy.extract(o.rawUrl),
              })
            ),
            wi((o) => {
              let a = !1,
                s = !1;
              return be(o).pipe(
                wi((l) => {
                  if (this.navigationId > o.id)
                    return (
                      this.cancelNavigationTransition(
                        o,
                        "",
                        rn.SupersededByNewNavigation
                      ),
                      qn
                    );
                  (this.currentTransition = o),
                    (this.currentNavigation = {
                      id: l.id,
                      initialUrl: l.rawUrl,
                      extractedUrl: l.extractedUrl,
                      targetBrowserUrl:
                        typeof l.extras.browserUrl == "string"
                          ? this.urlSerializer.parse(l.extras.browserUrl)
                          : l.extras.browserUrl,
                      trigger: l.source,
                      extras: l.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? Be(Q({}, this.lastSuccessfulNavigation), {
                            previousNavigation: null,
                          })
                        : null,
                    });
                  let d =
                      !e.navigated ||
                      this.isUpdatingInternalState() ||
                      this.isUpdatedBrowserUrl(),
                    m = l.extras.onSameUrlNavigation ?? e.onSameUrlNavigation;
                  if (!d && m !== "reload") {
                    let v = "";
                    return (
                      this.events.next(
                        new Yr(
                          l.id,
                          this.urlSerializer.serialize(l.rawUrl),
                          v,
                          jc.IgnoredSameUrlNavigation
                        )
                      ),
                      l.resolve(!1),
                      qn
                    );
                  }
                  if (this.urlHandlingStrategy.shouldProcessUrl(l.rawUrl))
                    return be(l).pipe(
                      wi((v) => {
                        let x = this.transitions?.getValue();
                        return (
                          this.events.next(
                            new xa(
                              v.id,
                              this.urlSerializer.serialize(v.extractedUrl),
                              v.source,
                              v.restoredState
                            )
                          ),
                          x !== this.transitions?.getValue()
                            ? qn
                            : Promise.resolve(v)
                        );
                      }),
                      dS(
                        this.environmentInjector,
                        this.configLoader,
                        this.rootComponentType,
                        e.config,
                        this.urlSerializer,
                        this.paramsInheritanceStrategy
                      ),
                      Qt((v) => {
                        (o.targetSnapshot = v.targetSnapshot),
                          (o.urlAfterRedirects = v.urlAfterRedirects),
                          (this.currentNavigation = Be(
                            Q({}, this.currentNavigation),
                            { finalUrl: v.urlAfterRedirects }
                          ));
                        let x = new Uc(
                          v.id,
                          this.urlSerializer.serialize(v.extractedUrl),
                          this.urlSerializer.serialize(v.urlAfterRedirects),
                          v.targetSnapshot
                        );
                        this.events.next(x);
                      })
                    );
                  if (
                    d &&
                    this.urlHandlingStrategy.shouldProcessUrl(l.currentRawUrl)
                  ) {
                    let {
                        id: v,
                        extractedUrl: x,
                        source: C,
                        restoredState: S,
                        extras: T,
                      } = l,
                      k = new xa(v, this.urlSerializer.serialize(x), C, S);
                    this.events.next(k);
                    let P = G0(this.rootComponentType).snapshot;
                    return (
                      (this.currentTransition = o =
                        Be(Q({}, l), {
                          targetSnapshot: P,
                          urlAfterRedirects: x,
                          extras: Be(Q({}, T), {
                            skipLocationChange: !1,
                            replaceUrl: !1,
                          }),
                        })),
                      (this.currentNavigation.finalUrl = x),
                      be(o)
                    );
                  } else {
                    let v = "";
                    return (
                      this.events.next(
                        new Yr(
                          l.id,
                          this.urlSerializer.serialize(l.extractedUrl),
                          v,
                          jc.IgnoredByUrlHandlingStrategy
                        )
                      ),
                      l.resolve(!1),
                      qn
                    );
                  }
                }),
                Qt((l) => {
                  let d = new sp(
                    l.id,
                    this.urlSerializer.serialize(l.extractedUrl),
                    this.urlSerializer.serialize(l.urlAfterRedirects),
                    l.targetSnapshot
                  );
                  this.events.next(d);
                }),
                Ke(
                  (l) => (
                    (this.currentTransition = o =
                      Be(Q({}, l), {
                        guards: ID(
                          l.targetSnapshot,
                          l.currentSnapshot,
                          this.rootContexts
                        ),
                      })),
                    o
                  )
                ),
                jD(this.environmentInjector, (l) => this.events.next(l)),
                Qt((l) => {
                  if (
                    ((o.guardsResult = l.guardsResult),
                    l.guardsResult && typeof l.guardsResult != "boolean")
                  )
                    throw qc(this.urlSerializer, l.guardsResult);
                  let d = new lp(
                    l.id,
                    this.urlSerializer.serialize(l.extractedUrl),
                    this.urlSerializer.serialize(l.urlAfterRedirects),
                    l.targetSnapshot,
                    !!l.guardsResult
                  );
                  this.events.next(d);
                }),
                Ot((l) =>
                  l.guardsResult
                    ? !0
                    : (this.cancelNavigationTransition(l, "", rn.GuardRejected),
                      !1)
                ),
                tp((l) => {
                  if (l.guards.canActivateChecks.length)
                    return be(l).pipe(
                      Qt((d) => {
                        let m = new cp(
                          d.id,
                          this.urlSerializer.serialize(d.extractedUrl),
                          this.urlSerializer.serialize(d.urlAfterRedirects),
                          d.targetSnapshot
                        );
                        this.events.next(m);
                      }),
                      wi((d) => {
                        let m = !1;
                        return be(d).pipe(
                          uS(
                            this.paramsInheritanceStrategy,
                            this.environmentInjector
                          ),
                          Qt({
                            next: () => (m = !0),
                            complete: () => {
                              m ||
                                this.cancelNavigationTransition(
                                  d,
                                  "",
                                  rn.NoDataFromResolver
                                );
                            },
                          })
                        );
                      }),
                      Qt((d) => {
                        let m = new dp(
                          d.id,
                          this.urlSerializer.serialize(d.extractedUrl),
                          this.urlSerializer.serialize(d.urlAfterRedirects),
                          d.targetSnapshot
                        );
                        this.events.next(m);
                      })
                    );
                }),
                tp((l) => {
                  let d = (m) => {
                    let v = [];
                    m.routeConfig?.loadComponent &&
                      !m.routeConfig._loadedComponent &&
                      v.push(
                        this.configLoader.loadComponent(m.routeConfig).pipe(
                          Qt((x) => {
                            m.component = x;
                          }),
                          Ke(() => {})
                        )
                      );
                    for (let x of m.children) v.push(...d(x));
                    return v;
                  };
                  return yo(d(l.targetSnapshot.root)).pipe(yh(null), Zi(1));
                }),
                tp(() => this.afterPreactivation()),
                wi(() => {
                  let { currentSnapshot: l, targetSnapshot: d } = o,
                    m = this.createViewTransition?.(
                      this.environmentInjector,
                      l.root,
                      d.root
                    );
                  return m ? _i(m).pipe(Ke(() => o)) : be(o);
                }),
                Ke((l) => {
                  let d = SD(
                    e.routeReuseStrategy,
                    l.targetSnapshot,
                    l.currentRouterState
                  );
                  return (
                    (this.currentTransition = o =
                      Be(Q({}, l), { targetRouterState: d })),
                    (this.currentNavigation.targetRouterState = d),
                    o
                  );
                }),
                Qt(() => {
                  this.events.next(new zs());
                }),
                kD(
                  this.rootContexts,
                  e.routeReuseStrategy,
                  (l) => this.events.next(l),
                  this.inputBindingEnabled
                ),
                Zi(1),
                Qt({
                  next: (l) => {
                    (a = !0),
                      (this.lastSuccessfulNavigation = this.currentNavigation),
                      this.events.next(
                        new Mi(
                          l.id,
                          this.urlSerializer.serialize(l.extractedUrl),
                          this.urlSerializer.serialize(l.urlAfterRedirects)
                        )
                      ),
                      this.titleStrategy?.updateTitle(
                        l.targetRouterState.snapshot
                      ),
                      l.resolve(!0);
                  },
                  complete: () => {
                    a = !0;
                  },
                }),
                Ut(
                  this.transitionAbortSubject.pipe(
                    Qt((l) => {
                      throw l;
                    })
                  )
                ),
                Hr(() => {
                  !a &&
                    !s &&
                    this.cancelNavigationTransition(
                      o,
                      "",
                      rn.SupersededByNewNavigation
                    ),
                    this.currentTransition?.id === o.id &&
                      ((this.currentNavigation = null),
                      (this.currentTransition = null));
                }),
                oa((l) => {
                  if (((s = !0), X0(l)))
                    this.events.next(
                      new xr(
                        o.id,
                        this.urlSerializer.serialize(o.extractedUrl),
                        l.message,
                        l.cancellationCode
                      )
                    ),
                      ED(l)
                        ? this.events.next(
                            new Ca(l.url, l.navigationBehaviorOptions)
                          )
                        : o.resolve(!1);
                  else {
                    let d = new Us(
                      o.id,
                      this.urlSerializer.serialize(o.extractedUrl),
                      l,
                      o.targetSnapshot ?? void 0
                    );
                    try {
                      let m = gn(this.environmentInjector, () =>
                        this.navigationErrorHandler?.(d)
                      );
                      if (m instanceof Ws) {
                        let { message: v, cancellationCode: x } = qc(
                          this.urlSerializer,
                          m
                        );
                        this.events.next(
                          new xr(
                            o.id,
                            this.urlSerializer.serialize(o.extractedUrl),
                            v,
                            x
                          )
                        ),
                          this.events.next(
                            new Ca(m.redirectTo, m.navigationBehaviorOptions)
                          );
                      } else {
                        this.events.next(d);
                        let v = e.errorHandler(l);
                        o.resolve(!!v);
                      }
                    } catch (m) {
                      this.options.resolveNavigationPromiseOnError
                        ? o.resolve(!1)
                        : o.reject(m);
                    }
                  }
                  return qn;
                })
              );
            })
          )
        );
      }
      cancelNavigationTransition(e, i, r) {
        let o = new xr(
          e.id,
          this.urlSerializer.serialize(e.extractedUrl),
          i,
          r
        );
        this.events.next(o), e.resolve(!1);
      }
      isUpdatingInternalState() {
        return (
          this.currentTransition?.extractedUrl.toString() !==
          this.currentTransition?.currentUrlTree.toString()
        );
      }
      isUpdatedBrowserUrl() {
        let e = this.urlHandlingStrategy.extract(
            this.urlSerializer.parse(this.location.path(!0))
          ),
          i =
            this.currentNavigation?.targetBrowserUrl ??
            this.currentNavigation?.extractedUrl;
        return (
          e.toString() !== i?.toString() &&
          !this.currentNavigation?.extras.skipLocationChange
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function wS(n) {
  return n !== Bs;
}
var DS = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: () => G(SS), providedIn: "root" });
      }
    }
    return n;
  })(),
  Tp = class {
    shouldDetach(t) {
      return !1;
    }
    store(t, e) {}
    shouldAttach(t) {
      return !1;
    }
    retrieve(t) {
      return null;
    }
    shouldReuseRoute(t, e) {
      return t.routeConfig === e.routeConfig;
    }
  },
  SS = (() => {
    class n extends Tp {
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = bt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  sb = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: () => G(MS), providedIn: "root" });
      }
    }
    return n;
  })(),
  MS = (() => {
    class n extends sb {
      constructor() {
        super(...arguments),
          (this.location = G(vr)),
          (this.urlSerializer = G(Qs)),
          (this.options = G(tl, { optional: !0 }) || {}),
          (this.canceledNavigationResolution =
            this.options.canceledNavigationResolution || "replace"),
          (this.urlHandlingStrategy = G(Op)),
          (this.urlUpdateStrategy =
            this.options.urlUpdateStrategy || "deferred"),
          (this.currentUrlTree = new Cr()),
          (this.rawUrlTree = this.currentUrlTree),
          (this.currentPageId = 0),
          (this.lastSuccessfulId = -1),
          (this.routerState = G0(null)),
          (this.stateMemento = this.createStateMemento());
      }
      getCurrentUrlTree() {
        return this.currentUrlTree;
      }
      getRawUrlTree() {
        return this.rawUrlTree;
      }
      restoredState() {
        return this.location.getState();
      }
      get browserPageId() {
        return this.canceledNavigationResolution !== "computed"
          ? this.currentPageId
          : this.restoredState()?.ɵrouterPageId ?? this.currentPageId;
      }
      getRouterState() {
        return this.routerState;
      }
      createStateMemento() {
        return {
          rawUrlTree: this.rawUrlTree,
          currentUrlTree: this.currentUrlTree,
          routerState: this.routerState,
        };
      }
      registerNonRouterCurrentEntryChangeListener(e) {
        return this.location.subscribe((i) => {
          i.type === "popstate" && e(i.url, i.state);
        });
      }
      handleRouterEvent(e, i) {
        if (e instanceof xa) this.stateMemento = this.createStateMemento();
        else if (e instanceof Yr) this.rawUrlTree = i.initialUrl;
        else if (e instanceof Uc) {
          if (
            this.urlUpdateStrategy === "eager" &&
            !i.extras.skipLocationChange
          ) {
            let r = this.urlHandlingStrategy.merge(i.finalUrl, i.initialUrl);
            this.setBrowserUrl(i.targetBrowserUrl ?? r, i);
          }
        } else
          e instanceof zs
            ? ((this.currentUrlTree = i.finalUrl),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                i.finalUrl,
                i.initialUrl
              )),
              (this.routerState = i.targetRouterState),
              this.urlUpdateStrategy === "deferred" &&
                !i.extras.skipLocationChange &&
                this.setBrowserUrl(i.targetBrowserUrl ?? this.rawUrlTree, i))
            : e instanceof xr &&
              (e.code === rn.GuardRejected || e.code === rn.NoDataFromResolver)
            ? this.restoreHistory(i)
            : e instanceof Us
            ? this.restoreHistory(i, !0)
            : e instanceof Mi &&
              ((this.lastSuccessfulId = e.id),
              (this.currentPageId = this.browserPageId));
      }
      setBrowserUrl(e, i) {
        let r = e instanceof Cr ? this.urlSerializer.serialize(e) : e;
        if (this.location.isCurrentPathEqualTo(r) || i.extras.replaceUrl) {
          let o = this.browserPageId,
            a = Q(Q({}, i.extras.state), this.generateNgRouterState(i.id, o));
          this.location.replaceState(r, "", a);
        } else {
          let o = Q(
            Q({}, i.extras.state),
            this.generateNgRouterState(i.id, this.browserPageId + 1)
          );
          this.location.go(r, "", o);
        }
      }
      restoreHistory(e, i = !1) {
        if (this.canceledNavigationResolution === "computed") {
          let r = this.browserPageId,
            o = this.currentPageId - r;
          o !== 0
            ? this.location.historyGo(o)
            : this.currentUrlTree === e.finalUrl &&
              o === 0 &&
              (this.resetState(e), this.resetUrlToCurrentUrlTree());
        } else
          this.canceledNavigationResolution === "replace" &&
            (i && this.resetState(e), this.resetUrlToCurrentUrlTree());
      }
      resetState(e) {
        (this.routerState = this.stateMemento.routerState),
          (this.currentUrlTree = this.stateMemento.currentUrlTree),
          (this.rawUrlTree = this.urlHandlingStrategy.merge(
            this.currentUrlTree,
            e.finalUrl ?? this.rawUrlTree
          ));
      }
      resetUrlToCurrentUrlTree() {
        this.location.replaceState(
          this.urlSerializer.serialize(this.rawUrlTree),
          "",
          this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId)
        );
      }
      generateNgRouterState(e, i) {
        return this.canceledNavigationResolution === "computed"
          ? { navigationId: e, ɵrouterPageId: i }
          : { navigationId: e };
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = bt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Ls = (function (n) {
    return (
      (n[(n.COMPLETE = 0)] = "COMPLETE"),
      (n[(n.FAILED = 1)] = "FAILED"),
      (n[(n.REDIRECTING = 2)] = "REDIRECTING"),
      n
    );
  })(Ls || {});
function lb(n, t) {
  n.events
    .pipe(
      Ot(
        (e) =>
          e instanceof Mi ||
          e instanceof xr ||
          e instanceof Us ||
          e instanceof Yr
      ),
      Ke((e) =>
        e instanceof Mi || e instanceof Yr
          ? Ls.COMPLETE
          : (
              e instanceof xr
                ? e.code === rn.Redirect ||
                  e.code === rn.SupersededByNewNavigation
                : !1
            )
          ? Ls.REDIRECTING
          : Ls.FAILED
      ),
      Ot((e) => e !== Ls.REDIRECTING),
      Zi(1)
    )
    .subscribe(() => {
      t();
    });
}
function TS(n) {
  throw n;
}
var ES = {
    paths: "exact",
    fragment: "ignored",
    matrixParams: "ignored",
    queryParams: "exact",
  },
  kS = {
    paths: "subset",
    fragment: "ignored",
    matrixParams: "ignored",
    queryParams: "subset",
  },
  Bt = (() => {
    class n {
      get currentUrlTree() {
        return this.stateManager.getCurrentUrlTree();
      }
      get rawUrlTree() {
        return this.stateManager.getRawUrlTree();
      }
      get events() {
        return this._events;
      }
      get routerState() {
        return this.stateManager.getRouterState();
      }
      constructor() {
        (this.disposed = !1),
          (this.console = G(bc)),
          (this.stateManager = G(sb)),
          (this.options = G(tl, { optional: !0 }) || {}),
          (this.pendingTasks = G(ys)),
          (this.urlUpdateStrategy =
            this.options.urlUpdateStrategy || "deferred"),
          (this.navigationTransitions = G(Pp)),
          (this.urlSerializer = G(Qs)),
          (this.location = G(vr)),
          (this.urlHandlingStrategy = G(Op)),
          (this._events = new Ie()),
          (this.errorHandler = this.options.errorHandler || TS),
          (this.navigated = !1),
          (this.routeReuseStrategy = G(DS)),
          (this.onSameUrlNavigation =
            this.options.onSameUrlNavigation || "ignore"),
          (this.config = G(qs, { optional: !0 })?.flat() ?? []),
          (this.componentInputBindingEnabled = !!G(Xc, { optional: !0 })),
          (this.eventsSubscription = new Xi()),
          this.resetConfig(this.config),
          this.navigationTransitions
            .setupNavigations(this, this.currentUrlTree, this.routerState)
            .subscribe({
              error: (e) => {
                this.console.warn(e);
              },
            }),
          this.subscribeToNavigationEvents();
      }
      subscribeToNavigationEvents() {
        let e = this.navigationTransitions.events.subscribe((i) => {
          try {
            let r = this.navigationTransitions.currentTransition,
              o = this.navigationTransitions.currentNavigation;
            if (r !== null && o !== null) {
              if (
                (this.stateManager.handleRouterEvent(i, o),
                i instanceof xr &&
                  i.code !== rn.Redirect &&
                  i.code !== rn.SupersededByNewNavigation)
              )
                this.navigated = !0;
              else if (i instanceof Mi) this.navigated = !0;
              else if (i instanceof Ca) {
                let a = i.navigationBehaviorOptions,
                  s = this.urlHandlingStrategy.merge(i.url, r.currentRawUrl),
                  l = Q(
                    {
                      browserUrl: r.extras.browserUrl,
                      info: r.extras.info,
                      skipLocationChange: r.extras.skipLocationChange,
                      replaceUrl:
                        r.extras.replaceUrl ||
                        this.urlUpdateStrategy === "eager" ||
                        wS(r.source),
                    },
                    a
                  );
                this.scheduleNavigation(s, Bs, null, l, {
                  resolve: r.resolve,
                  reject: r.reject,
                  promise: r.promise,
                });
              }
            }
            OS(i) && this._events.next(i);
          } catch (r) {
            this.navigationTransitions.transitionAbortSubject.next(r);
          }
        });
        this.eventsSubscription.add(e);
      }
      resetRootComponentType(e) {
        (this.routerState.root.component = e),
          (this.navigationTransitions.rootComponentType = e);
      }
      initialNavigation() {
        this.setUpLocationChangeListener(),
          this.navigationTransitions.hasRequestedNavigation ||
            this.navigateToSyncWithBrowser(
              this.location.path(!0),
              Bs,
              this.stateManager.restoredState()
            );
      }
      setUpLocationChangeListener() {
        this.nonRouterCurrentEntryChangeSubscription ??=
          this.stateManager.registerNonRouterCurrentEntryChangeListener(
            (e, i) => {
              setTimeout(() => {
                this.navigateToSyncWithBrowser(e, "popstate", i);
              }, 0);
            }
          );
      }
      navigateToSyncWithBrowser(e, i, r) {
        let o = { replaceUrl: !0 },
          a = r?.navigationId ? r : null;
        if (r) {
          let l = Q({}, r);
          delete l.navigationId,
            delete l.ɵrouterPageId,
            Object.keys(l).length !== 0 && (o.state = l);
        }
        let s = this.parseUrl(e);
        this.scheduleNavigation(s, i, a, o);
      }
      get url() {
        return this.serializeUrl(this.currentUrlTree);
      }
      getCurrentNavigation() {
        return this.navigationTransitions.currentNavigation;
      }
      get lastSuccessfulNavigation() {
        return this.navigationTransitions.lastSuccessfulNavigation;
      }
      resetConfig(e) {
        (this.config = e.map(kp)), (this.navigated = !1);
      }
      ngOnDestroy() {
        this.dispose();
      }
      dispose() {
        this.navigationTransitions.complete(),
          this.nonRouterCurrentEntryChangeSubscription &&
            (this.nonRouterCurrentEntryChangeSubscription.unsubscribe(),
            (this.nonRouterCurrentEntryChangeSubscription = void 0)),
          (this.disposed = !0),
          this.eventsSubscription.unsubscribe();
      }
      createUrlTree(e, i = {}) {
        let {
            relativeTo: r,
            queryParams: o,
            fragment: a,
            queryParamsHandling: s,
            preserveFragment: l,
          } = i,
          d = l ? this.currentUrlTree.fragment : a,
          m = null;
        switch (s ?? this.options.defaultQueryParamsHandling) {
          case "merge":
            m = Q(Q({}, this.currentUrlTree.queryParams), o);
            break;
          case "preserve":
            m = this.currentUrlTree.queryParams;
            break;
          default:
            m = o || null;
        }
        m !== null && (m = this.removeEmptyProps(m));
        let v;
        try {
          let x = r ? r.snapshot : this.routerState.snapshot.root;
          v = U0(x);
        } catch {
          (typeof e[0] != "string" || e[0][0] !== "/") && (e = []),
            (v = this.currentUrlTree.root);
        }
        return z0(v, e, m, d ?? null);
      }
      navigateByUrl(e, i = { skipLocationChange: !1 }) {
        let r = To(e) ? e : this.parseUrl(e),
          o = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
        return this.scheduleNavigation(o, Bs, null, i);
      }
      navigate(e, i = { skipLocationChange: !1 }) {
        return IS(e), this.navigateByUrl(this.createUrlTree(e, i), i);
      }
      serializeUrl(e) {
        return this.urlSerializer.serialize(e);
      }
      parseUrl(e) {
        try {
          return this.urlSerializer.parse(e);
        } catch {
          return this.urlSerializer.parse("/");
        }
      }
      isActive(e, i) {
        let r;
        if (
          (i === !0 ? (r = Q({}, ES)) : i === !1 ? (r = Q({}, kS)) : (r = i),
          To(e))
        )
          return C0(this.currentUrlTree, e, r);
        let o = this.parseUrl(e);
        return C0(this.currentUrlTree, o, r);
      }
      removeEmptyProps(e) {
        return Object.entries(e).reduce(
          (i, [r, o]) => (o != null && (i[r] = o), i),
          {}
        );
      }
      scheduleNavigation(e, i, r, o, a) {
        if (this.disposed) return Promise.resolve(!1);
        let s, l, d;
        a
          ? ((s = a.resolve), (l = a.reject), (d = a.promise))
          : (d = new Promise((v, x) => {
              (s = v), (l = x);
            }));
        let m = this.pendingTasks.add();
        return (
          lb(this, () => {
            queueMicrotask(() => this.pendingTasks.remove(m));
          }),
          this.navigationTransitions.handleNavigationRequest({
            source: i,
            restoredState: r,
            currentUrlTree: this.currentUrlTree,
            currentRawUrl: this.currentUrlTree,
            rawUrl: e,
            extras: o,
            resolve: s,
            reject: l,
            promise: d,
            currentSnapshot: this.routerState.snapshot,
            currentRouterState: this.routerState,
          }),
          d.catch((v) => Promise.reject(v))
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function IS(n) {
  for (let t = 0; t < n.length; t++) if (n[t] == null) throw new mt(4008, !1);
}
function OS(n) {
  return !(n instanceof zs) && !(n instanceof Ca);
}
var mi = (() => {
  class n {
    constructor(e, i, r, o, a, s) {
      (this.router = e),
        (this.route = i),
        (this.tabIndexAttribute = r),
        (this.renderer = o),
        (this.el = a),
        (this.locationStrategy = s),
        (this.href = null),
        (this.onChanges = new Ie()),
        (this.preserveFragment = !1),
        (this.skipLocationChange = !1),
        (this.replaceUrl = !1),
        (this.routerLinkInput = null);
      let l = a.nativeElement.tagName?.toLowerCase();
      (this.isAnchorElement = l === "a" || l === "area"),
        this.isAnchorElement
          ? (this.subscription = e.events.subscribe((d) => {
              d instanceof Mi && this.updateHref();
            }))
          : this.setTabIndexIfNotOnNativeEl("0");
    }
    setTabIndexIfNotOnNativeEl(e) {
      this.tabIndexAttribute != null ||
        this.isAnchorElement ||
        this.applyAttributeValue("tabindex", e);
    }
    ngOnChanges(e) {
      this.isAnchorElement && this.updateHref(), this.onChanges.next(this);
    }
    set routerLink(e) {
      e == null
        ? ((this.routerLinkInput = null), this.setTabIndexIfNotOnNativeEl(null))
        : (To(e)
            ? (this.routerLinkInput = e)
            : (this.routerLinkInput = Array.isArray(e) ? e : [e]),
          this.setTabIndexIfNotOnNativeEl("0"));
    }
    onClick(e, i, r, o, a) {
      let s = this.urlTree;
      if (
        s === null ||
        (this.isAnchorElement &&
          (e !== 0 ||
            i ||
            r ||
            o ||
            a ||
            (typeof this.target == "string" && this.target != "_self")))
      )
        return !0;
      let l = {
        skipLocationChange: this.skipLocationChange,
        replaceUrl: this.replaceUrl,
        state: this.state,
        info: this.info,
      };
      return this.router.navigateByUrl(s, l), !this.isAnchorElement;
    }
    ngOnDestroy() {
      this.subscription?.unsubscribe();
    }
    updateHref() {
      let e = this.urlTree;
      this.href =
        e !== null && this.locationStrategy
          ? this.locationStrategy?.prepareExternalUrl(
              this.router.serializeUrl(e)
            )
          : null;
      let i =
        this.href === null
          ? null
          : M_(this.href, this.el.nativeElement.tagName.toLowerCase(), "href");
      this.applyAttributeValue("href", i);
    }
    applyAttributeValue(e, i) {
      let r = this.renderer,
        o = this.el.nativeElement;
      i !== null ? r.setAttribute(o, e, i) : r.removeAttribute(o, e);
    }
    get urlTree() {
      return this.routerLinkInput === null
        ? null
        : To(this.routerLinkInput)
        ? this.routerLinkInput
        : this.router.createUrlTree(this.routerLinkInput, {
            relativeTo:
              this.relativeTo !== void 0 ? this.relativeTo : this.route,
            queryParams: this.queryParams,
            fragment: this.fragment,
            queryParamsHandling: this.queryParamsHandling,
            preserveFragment: this.preserveFragment,
          });
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(H(Bt), H(Yt), aa("tabindex"), H(bi), H(Ve), H(Ts));
      };
    }
    static {
      this.ɵdir = Ae({
        type: n,
        selectors: [["", "routerLink", ""]],
        hostVars: 1,
        hostBindings: function (i, r) {
          i & 1 &&
            U("click", function (a) {
              return r.onClick(
                a.button,
                a.ctrlKey,
                a.shiftKey,
                a.altKey,
                a.metaKey
              );
            }),
            i & 2 && de("target", r.target);
        },
        inputs: {
          target: "target",
          queryParams: "queryParams",
          fragment: "fragment",
          queryParamsHandling: "queryParamsHandling",
          state: "state",
          info: "info",
          relativeTo: "relativeTo",
          preserveFragment: [2, "preserveFragment", "preserveFragment", Ee],
          skipLocationChange: [
            2,
            "skipLocationChange",
            "skipLocationChange",
            Ee,
          ],
          replaceUrl: [2, "replaceUrl", "replaceUrl", Ee],
          routerLink: "routerLink",
        },
        standalone: !0,
        features: [Pt, Nt],
      });
    }
  }
  return n;
})();
var Qc = class {};
var PS = (() => {
    class n {
      constructor(e, i, r, o, a) {
        (this.router = e),
          (this.injector = r),
          (this.preloadingStrategy = o),
          (this.loader = a);
      }
      setUpPreloading() {
        this.subscription = this.router.events
          .pipe(
            Ot((e) => e instanceof Mi),
            Br(() => this.preload())
          )
          .subscribe(() => {});
      }
      preload() {
        return this.processRoutes(this.injector, this.router.config);
      }
      ngOnDestroy() {
        this.subscription && this.subscription.unsubscribe();
      }
      processRoutes(e, i) {
        let r = [];
        for (let o of i) {
          o.providers &&
            !o._injector &&
            (o._injector = Th(o.providers, e, `Route: ${o.path}`));
          let a = o._injector ?? e,
            s = o._loadedInjector ?? a;
          ((o.loadChildren && !o._loadedRoutes && o.canLoad === void 0) ||
            (o.loadComponent && !o._loadedComponent)) &&
            r.push(this.preloadConfig(a, o)),
            (o.children || o._loadedRoutes) &&
              r.push(this.processRoutes(s, o.children ?? o._loadedRoutes));
        }
        return _i(r).pipe(gh());
      }
      preloadConfig(e, i) {
        return this.preloadingStrategy.preload(i, () => {
          let r;
          i.loadChildren && i.canLoad === void 0
            ? (r = this.loader.loadChildren(e, i))
            : (r = be(null));
          let o = r.pipe(
            Vi((a) =>
              a === null
                ? be(void 0)
                : ((i._loadedRoutes = a.routes),
                  (i._loadedInjector = a.injector),
                  this.processRoutes(a.injector ?? e, a.routes))
            )
          );
          if (i.loadComponent && !i._loadedComponent) {
            let a = this.loader.loadComponent(i);
            return _i([o, a]).pipe(gh());
          } else return o;
        });
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Bt), Z(yc), Z(fn), Z(Qc), Z(Ip));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  cb = new Me(""),
  AS = (() => {
    class n {
      constructor(e, i, r, o, a = {}) {
        (this.urlSerializer = e),
          (this.transitions = i),
          (this.viewportScroller = r),
          (this.zone = o),
          (this.options = a),
          (this.lastId = 0),
          (this.lastSource = "imperative"),
          (this.restoredId = 0),
          (this.store = {}),
          (a.scrollPositionRestoration ||= "disabled"),
          (a.anchorScrolling ||= "disabled");
      }
      init() {
        this.options.scrollPositionRestoration !== "disabled" &&
          this.viewportScroller.setHistoryScrollRestoration("manual"),
          (this.routerEventsSubscription = this.createScrollEvents()),
          (this.scrollEventsSubscription = this.consumeScrollEvents());
      }
      createScrollEvents() {
        return this.transitions.events.subscribe((e) => {
          e instanceof xa
            ? ((this.store[this.lastId] =
                this.viewportScroller.getScrollPosition()),
              (this.lastSource = e.navigationTrigger),
              (this.restoredId = e.restoredState
                ? e.restoredState.navigationId
                : 0))
            : e instanceof Mi
            ? ((this.lastId = e.id),
              this.scheduleScrollEvent(
                e,
                this.urlSerializer.parse(e.urlAfterRedirects).fragment
              ))
            : e instanceof Yr &&
              e.code === jc.IgnoredSameUrlNavigation &&
              ((this.lastSource = void 0),
              (this.restoredId = 0),
              this.scheduleScrollEvent(
                e,
                this.urlSerializer.parse(e.url).fragment
              ));
        });
      }
      consumeScrollEvents() {
        return this.transitions.events.subscribe((e) => {
          e instanceof zc &&
            (e.position
              ? this.options.scrollPositionRestoration === "top"
                ? this.viewportScroller.scrollToPosition([0, 0])
                : this.options.scrollPositionRestoration === "enabled" &&
                  this.viewportScroller.scrollToPosition(e.position)
              : e.anchor && this.options.anchorScrolling === "enabled"
              ? this.viewportScroller.scrollToAnchor(e.anchor)
              : this.options.scrollPositionRestoration !== "disabled" &&
                this.viewportScroller.scrollToPosition([0, 0]));
        });
      }
      scheduleScrollEvent(e, i) {
        this.zone.runOutsideAngular(() => {
          setTimeout(() => {
            this.zone.run(() => {
              this.transitions.events.next(
                new zc(
                  e,
                  this.lastSource === "popstate"
                    ? this.store[this.restoredId]
                    : null,
                  i
                )
              );
            });
          }, 0);
        });
      }
      ngOnDestroy() {
        this.routerEventsSubscription?.unsubscribe(),
          this.scrollEventsSubscription?.unsubscribe();
      }
      static {
        this.ɵfac = function (i) {
          zr();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function db(n, ...t) {
  return Qn([
    { provide: qs, multi: !0, useValue: n },
    [],
    { provide: Yt, useFactory: ub, deps: [Bt] },
    { provide: Ms, multi: !0, useFactory: hb },
    t.map((e) => e.ɵproviders),
  ]);
}
function ub(n) {
  return n.routerState.root;
}
function il(n, t) {
  return { ɵkind: n, ɵproviders: t };
}
function hb() {
  let n = G(St);
  return (t) => {
    let e = n.get(ji);
    if (t !== e.components[0]) return;
    let i = n.get(Bt),
      r = n.get(pb);
    n.get(Ap) === 1 && i.initialNavigation(),
      n.get(mb, null, wh.Optional)?.setUpPreloading(),
      n.get(cb, null, wh.Optional)?.init(),
      i.resetRootComponentType(e.componentTypes[0]),
      r.closed || (r.next(), r.complete(), r.unsubscribe());
  };
}
var pb = new Me("", { factory: () => new Ie() }),
  Ap = new Me("", { providedIn: "root", factory: () => 1 });
function RS() {
  return il(2, [
    { provide: Ap, useValue: 0 },
    {
      provide: Ph,
      multi: !0,
      deps: [St],
      useFactory: (t) => {
        let e = t.get(V_, Promise.resolve());
        return () =>
          e.then(
            () =>
              new Promise((i) => {
                let r = t.get(Bt),
                  o = t.get(pb);
                lb(r, () => {
                  i(!0);
                }),
                  (t.get(Pp).afterPreactivation = () => (
                    i(!0), o.closed ? be(void 0) : o
                  )),
                  r.initialNavigation();
              })
          );
      },
    },
  ]);
}
function FS() {
  return il(3, [
    {
      provide: Ph,
      multi: !0,
      useFactory: () => {
        let t = G(Bt);
        return () => {
          t.setUpLocationChangeListener();
        };
      },
    },
    { provide: Ap, useValue: 2 },
  ]);
}
var mb = new Me("");
function NS(n) {
  return il(0, [
    { provide: mb, useExisting: PS },
    { provide: Qc, useExisting: n },
  ]);
}
function LS() {
  return il(8, [M0, { provide: Xc, useExisting: M0 }]);
}
function VS(n) {
  let t = [
    { provide: ob, useValue: yS },
    {
      provide: ab,
      useValue: Q({ skipNextTransition: !!n?.skipInitialTransition }, n),
    },
  ];
  return il(9, t);
}
var I0 = new Me("ROUTER_FORROOT_GUARD"),
  BS = [
    vr,
    { provide: Qs, useClass: ya },
    Bt,
    Zs,
    { provide: Yt, useFactory: ub, deps: [Bt] },
    Ip,
    [],
  ],
  Ui = (() => {
    class n {
      constructor(e) {}
      static forRoot(e, i) {
        return {
          ngModule: n,
          providers: [
            BS,
            [],
            { provide: qs, multi: !0, useValue: e },
            { provide: I0, useFactory: zS, deps: [[Bt, new bs(), new pc()]] },
            { provide: tl, useValue: i || {} },
            i?.useHash ? jS() : US(),
            HS(),
            i?.preloadingStrategy ? NS(i.preloadingStrategy).ɵproviders : [],
            i?.initialNavigation ? $S(i) : [],
            i?.bindToComponentInputs ? LS().ɵproviders : [],
            i?.enableViewTransitions ? VS().ɵproviders : [],
            WS(),
          ],
        };
      }
      static forChild(e) {
        return {
          ngModule: n,
          providers: [{ provide: qs, multi: !0, useValue: e }],
        };
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(I0, 8));
        };
      }
      static {
        this.ɵmod = we({ type: n });
      }
      static {
        this.ɵinj = Ce({});
      }
    }
    return n;
  })();
function HS() {
  return {
    provide: cb,
    useFactory: () => {
      let n = G(z_),
        t = G(Re),
        e = G(tl),
        i = G(Pp),
        r = G(Qs);
      return (
        e.scrollOffset && n.setOffset(e.scrollOffset), new AS(r, i, n, t, e)
      );
    },
  };
}
function jS() {
  return { provide: Ts, useClass: H_ };
}
function US() {
  return { provide: Ts, useClass: B_ };
}
function zS(n) {
  return "guarded";
}
function $S(n) {
  return [
    n.initialNavigation === "disabled" ? FS().ɵproviders : [],
    n.initialNavigation === "enabledBlocking" ? RS().ɵproviders : [],
  ];
}
var O0 = new Me("");
function WS() {
  return [
    { provide: O0, useFactory: hb },
    { provide: Ms, multi: !0, useExisting: O0 },
  ];
}
var wb = (() => {
    class n {
      constructor(e, i) {
        (this._renderer = e),
          (this._elementRef = i),
          (this.onChange = (r) => {}),
          (this.onTouched = () => {});
      }
      setProperty(e, i) {
        this._renderer.setProperty(this._elementRef.nativeElement, e, i);
      }
      registerOnTouched(e) {
        this.onTouched = e;
      }
      registerOnChange(e) {
        this.onChange = e;
      }
      setDisabledState(e) {
        this.setProperty("disabled", e);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(bi), H(Ve));
        };
      }
      static {
        this.ɵdir = Ae({ type: n });
      }
    }
    return n;
  })(),
  Lp = (() => {
    class n extends wb {
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = bt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ae({ type: n, features: [Je] });
      }
    }
    return n;
  })(),
  ko = new Me("");
var GS = { provide: ko, useExisting: Di(() => fi), multi: !0 };
function YS() {
  let n = ua() ? ua().getUserAgent() : "";
  return /android (\d+)/.test(n.toLowerCase());
}
var qS = new Me(""),
  fi = (() => {
    class n extends wb {
      constructor(e, i, r) {
        super(e, i),
          (this._compositionMode = r),
          (this._composing = !1),
          this._compositionMode == null && (this._compositionMode = !YS());
      }
      writeValue(e) {
        let i = e ?? "";
        this.setProperty("value", i);
      }
      _handleInput(e) {
        (!this._compositionMode ||
          (this._compositionMode && !this._composing)) &&
          this.onChange(e);
      }
      _compositionStart() {
        this._composing = !0;
      }
      _compositionEnd(e) {
        (this._composing = !1), this._compositionMode && this.onChange(e);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(bi), H(Ve), H(qS, 8));
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["input", "formControlName", "", 3, "type", "checkbox"],
            ["textarea", "formControlName", ""],
            ["input", "formControl", "", 3, "type", "checkbox"],
            ["textarea", "formControl", ""],
            ["input", "ngModel", "", 3, "type", "checkbox"],
            ["textarea", "ngModel", ""],
            ["", "ngDefaultControl", ""],
          ],
          hostBindings: function (i, r) {
            i & 1 &&
              U("input", function (a) {
                return r._handleInput(a.target.value);
              })("blur", function () {
                return r.onTouched();
              })("compositionstart", function () {
                return r._compositionStart();
              })("compositionend", function (a) {
                return r._compositionEnd(a.target.value);
              });
          },
          features: [Vt([GS]), Je],
        });
      }
    }
    return n;
  })();
function Kr(n) {
  return (
    n == null || ((typeof n == "string" || Array.isArray(n)) && n.length === 0)
  );
}
function Db(n) {
  return n != null && typeof n.length == "number";
}
var Io = new Me(""),
  cd = new Me(""),
  KS =
    /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
  Ne = class {
    static min(t) {
      return QS(t);
    }
    static max(t) {
      return XS(t);
    }
    static required(t) {
      return Sb(t);
    }
    static requiredTrue(t) {
      return ZS(t);
    }
    static email(t) {
      return Mb(t);
    }
    static minLength(t) {
      return JS(t);
    }
    static maxLength(t) {
      return Tb(t);
    }
    static pattern(t) {
      return eM(t);
    }
    static nullValidator(t) {
      return ed(t);
    }
    static compose(t) {
      return Ab(t);
    }
    static composeAsync(t) {
      return Rb(t);
    }
  };
function QS(n) {
  return (t) => {
    if (Kr(t.value) || Kr(n)) return null;
    let e = parseFloat(t.value);
    return !isNaN(e) && e < n ? { min: { min: n, actual: t.value } } : null;
  };
}
function XS(n) {
  return (t) => {
    if (Kr(t.value) || Kr(n)) return null;
    let e = parseFloat(t.value);
    return !isNaN(e) && e > n ? { max: { max: n, actual: t.value } } : null;
  };
}
function Sb(n) {
  return Kr(n.value) ? { required: !0 } : null;
}
function ZS(n) {
  return n.value === !0 ? null : { required: !0 };
}
function Mb(n) {
  return Kr(n.value) || KS.test(n.value) ? null : { email: !0 };
}
function JS(n) {
  return (t) =>
    Kr(t.value) || !Db(t.value)
      ? null
      : t.value.length < n
      ? { minlength: { requiredLength: n, actualLength: t.value.length } }
      : null;
}
function Tb(n) {
  return (t) =>
    Db(t.value) && t.value.length > n
      ? { maxlength: { requiredLength: n, actualLength: t.value.length } }
      : null;
}
function eM(n) {
  if (!n) return ed;
  let t, e;
  return (
    typeof n == "string"
      ? ((e = ""),
        n.charAt(0) !== "^" && (e += "^"),
        (e += n),
        n.charAt(n.length - 1) !== "$" && (e += "$"),
        (t = new RegExp(e)))
      : ((e = n.toString()), (t = n)),
    (i) => {
      if (Kr(i.value)) return null;
      let r = i.value;
      return t.test(r)
        ? null
        : { pattern: { requiredPattern: e, actualValue: r } };
    }
  );
}
function ed(n) {
  return null;
}
function Eb(n) {
  return n != null;
}
function kb(n) {
  return vc(n) ? _i(n) : n;
}
function Ib(n) {
  let t = {};
  return (
    n.forEach((e) => {
      t = e != null ? Q(Q({}, t), e) : t;
    }),
    Object.keys(t).length === 0 ? null : t
  );
}
function Ob(n, t) {
  return t.map((e) => e(n));
}
function tM(n) {
  return !n.validate;
}
function Pb(n) {
  return n.map((t) => (tM(t) ? t : (e) => t.validate(e)));
}
function Ab(n) {
  if (!n) return null;
  let t = n.filter(Eb);
  return t.length == 0
    ? null
    : function (e) {
        return Ib(Ob(e, t));
      };
}
function Vp(n) {
  return n != null ? Ab(Pb(n)) : null;
}
function Rb(n) {
  if (!n) return null;
  let t = n.filter(Eb);
  return t.length == 0
    ? null
    : function (e) {
        let i = Ob(e, t).map(kb);
        return s_(i).pipe(Ke(Ib));
      };
}
function Bp(n) {
  return n != null ? Rb(Pb(n)) : null;
}
function fb(n, t) {
  return n === null ? [t] : Array.isArray(n) ? [...n, t] : [n, t];
}
function Fb(n) {
  return n._rawValidators;
}
function Nb(n) {
  return n._rawAsyncValidators;
}
function Rp(n) {
  return n ? (Array.isArray(n) ? n : [n]) : [];
}
function td(n, t) {
  return Array.isArray(n) ? n.includes(t) : n === t;
}
function gb(n, t) {
  let e = Rp(t);
  return (
    Rp(n).forEach((r) => {
      td(e, r) || e.push(r);
    }),
    e
  );
}
function _b(n, t) {
  return Rp(t).filter((e) => !td(n, e));
}
var id = class {
    constructor() {
      (this._rawValidators = []),
        (this._rawAsyncValidators = []),
        (this._onDestroyCallbacks = []);
    }
    get value() {
      return this.control ? this.control.value : null;
    }
    get valid() {
      return this.control ? this.control.valid : null;
    }
    get invalid() {
      return this.control ? this.control.invalid : null;
    }
    get pending() {
      return this.control ? this.control.pending : null;
    }
    get disabled() {
      return this.control ? this.control.disabled : null;
    }
    get enabled() {
      return this.control ? this.control.enabled : null;
    }
    get errors() {
      return this.control ? this.control.errors : null;
    }
    get pristine() {
      return this.control ? this.control.pristine : null;
    }
    get dirty() {
      return this.control ? this.control.dirty : null;
    }
    get touched() {
      return this.control ? this.control.touched : null;
    }
    get status() {
      return this.control ? this.control.status : null;
    }
    get untouched() {
      return this.control ? this.control.untouched : null;
    }
    get statusChanges() {
      return this.control ? this.control.statusChanges : null;
    }
    get valueChanges() {
      return this.control ? this.control.valueChanges : null;
    }
    get path() {
      return null;
    }
    _setValidators(t) {
      (this._rawValidators = t || []),
        (this._composedValidatorFn = Vp(this._rawValidators));
    }
    _setAsyncValidators(t) {
      (this._rawAsyncValidators = t || []),
        (this._composedAsyncValidatorFn = Bp(this._rawAsyncValidators));
    }
    get validator() {
      return this._composedValidatorFn || null;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn || null;
    }
    _registerOnDestroy(t) {
      this._onDestroyCallbacks.push(t);
    }
    _invokeOnDestroyCallbacks() {
      this._onDestroyCallbacks.forEach((t) => t()),
        (this._onDestroyCallbacks = []);
    }
    reset(t = void 0) {
      this.control && this.control.reset(t);
    }
    hasError(t, e) {
      return this.control ? this.control.hasError(t, e) : !1;
    }
    getError(t, e) {
      return this.control ? this.control.getError(t, e) : null;
    }
  },
  wr = class extends id {
    get formDirective() {
      return null;
    }
    get path() {
      return null;
    }
  },
  Eo = class extends id {
    constructor() {
      super(...arguments),
        (this._parent = null),
        (this.name = null),
        (this.valueAccessor = null);
    }
  },
  nd = class {
    constructor(t) {
      this._cd = t;
    }
    get isTouched() {
      return this._cd?.control?._touched?.(), !!this._cd?.control?.touched;
    }
    get isUntouched() {
      return !!this._cd?.control?.untouched;
    }
    get isPristine() {
      return this._cd?.control?._pristine?.(), !!this._cd?.control?.pristine;
    }
    get isDirty() {
      return !!this._cd?.control?.dirty;
    }
    get isValid() {
      return this._cd?.control?._status?.(), !!this._cd?.control?.valid;
    }
    get isInvalid() {
      return !!this._cd?.control?.invalid;
    }
    get isPending() {
      return !!this._cd?.control?.pending;
    }
    get isSubmitted() {
      return this._cd?._submitted?.(), !!this._cd?.submitted;
    }
  },
  iM = {
    "[class.ng-untouched]": "isUntouched",
    "[class.ng-touched]": "isTouched",
    "[class.ng-pristine]": "isPristine",
    "[class.ng-dirty]": "isDirty",
    "[class.ng-valid]": "isValid",
    "[class.ng-invalid]": "isInvalid",
    "[class.ng-pending]": "isPending",
  },
  TV = Be(Q({}, iM), { "[class.ng-submitted]": "isSubmitted" }),
  Ti = (() => {
    class n extends nd {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Eo, 2));
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["", "formControlName", ""],
            ["", "ngModel", ""],
            ["", "formControl", ""],
          ],
          hostVars: 14,
          hostBindings: function (i, r) {
            i & 2 &&
              Te("ng-untouched", r.isUntouched)("ng-touched", r.isTouched)(
                "ng-pristine",
                r.isPristine
              )("ng-dirty", r.isDirty)("ng-valid", r.isValid)(
                "ng-invalid",
                r.isInvalid
              )("ng-pending", r.isPending);
          },
          features: [Je],
        });
      }
    }
    return n;
  })(),
  zi = (() => {
    class n extends nd {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(wr, 10));
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["", "formGroupName", ""],
            ["", "formArrayName", ""],
            ["", "ngModelGroup", ""],
            ["", "formGroup", ""],
            ["form", 3, "ngNoForm", ""],
            ["", "ngForm", ""],
          ],
          hostVars: 16,
          hostBindings: function (i, r) {
            i & 2 &&
              Te("ng-untouched", r.isUntouched)("ng-touched", r.isTouched)(
                "ng-pristine",
                r.isPristine
              )("ng-dirty", r.isDirty)("ng-valid", r.isValid)(
                "ng-invalid",
                r.isInvalid
              )("ng-pending", r.isPending)("ng-submitted", r.isSubmitted);
          },
          features: [Je],
        });
      }
    }
    return n;
  })();
var nl = "VALID",
  Jc = "INVALID",
  Sa = "PENDING",
  rl = "DISABLED",
  Qr = class {},
  rd = class extends Qr {
    constructor(t, e) {
      super(), (this.value = t), (this.source = e);
    }
  },
  al = class extends Qr {
    constructor(t, e) {
      super(), (this.pristine = t), (this.source = e);
    }
  },
  sl = class extends Qr {
    constructor(t, e) {
      super(), (this.touched = t), (this.source = e);
    }
  },
  Ma = class extends Qr {
    constructor(t, e) {
      super(), (this.status = t), (this.source = e);
    }
  },
  Fp = class extends Qr {
    constructor(t) {
      super(), (this.source = t);
    }
  },
  Np = class extends Qr {
    constructor(t) {
      super(), (this.source = t);
    }
  };
function Lb(n) {
  return (dd(n) ? n.validators : n) || null;
}
function nM(n) {
  return Array.isArray(n) ? Vp(n) : n || null;
}
function Vb(n, t) {
  return (dd(t) ? t.asyncValidators : n) || null;
}
function rM(n) {
  return Array.isArray(n) ? Bp(n) : n || null;
}
function dd(n) {
  return n != null && !Array.isArray(n) && typeof n == "object";
}
function oM(n, t, e) {
  let i = n.controls;
  if (!(t ? Object.keys(i) : i).length) throw new mt(1e3, "");
  if (!i[e]) throw new mt(1001, "");
}
function aM(n, t, e) {
  n._forEachChild((i, r) => {
    if (e[r] === void 0) throw new mt(1002, "");
  });
}
var od = class {
    constructor(t, e) {
      (this._pendingDirty = !1),
        (this._hasOwnPendingAsyncValidator = null),
        (this._pendingTouched = !1),
        (this._onCollectionChange = () => {}),
        (this._parent = null),
        (this._status = Co(() => this.statusReactive())),
        (this.statusReactive = fe(void 0)),
        (this._pristine = Co(() => this.pristineReactive())),
        (this.pristineReactive = fe(!0)),
        (this._touched = Co(() => this.touchedReactive())),
        (this.touchedReactive = fe(!1)),
        (this._events = new Ie()),
        (this.events = this._events.asObservable()),
        (this._onDisabledChange = []),
        this._assignValidators(t),
        this._assignAsyncValidators(e);
    }
    get validator() {
      return this._composedValidatorFn;
    }
    set validator(t) {
      this._rawValidators = this._composedValidatorFn = t;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn;
    }
    set asyncValidator(t) {
      this._rawAsyncValidators = this._composedAsyncValidatorFn = t;
    }
    get parent() {
      return this._parent;
    }
    get status() {
      return An(this.statusReactive);
    }
    set status(t) {
      An(() => this.statusReactive.set(t));
    }
    get valid() {
      return this.status === nl;
    }
    get invalid() {
      return this.status === Jc;
    }
    get pending() {
      return this.status == Sa;
    }
    get disabled() {
      return this.status === rl;
    }
    get enabled() {
      return this.status !== rl;
    }
    get pristine() {
      return An(this.pristineReactive);
    }
    set pristine(t) {
      An(() => this.pristineReactive.set(t));
    }
    get dirty() {
      return !this.pristine;
    }
    get touched() {
      return An(this.touchedReactive);
    }
    set touched(t) {
      An(() => this.touchedReactive.set(t));
    }
    get untouched() {
      return !this.touched;
    }
    get updateOn() {
      return this._updateOn
        ? this._updateOn
        : this.parent
        ? this.parent.updateOn
        : "change";
    }
    setValidators(t) {
      this._assignValidators(t);
    }
    setAsyncValidators(t) {
      this._assignAsyncValidators(t);
    }
    addValidators(t) {
      this.setValidators(gb(t, this._rawValidators));
    }
    addAsyncValidators(t) {
      this.setAsyncValidators(gb(t, this._rawAsyncValidators));
    }
    removeValidators(t) {
      this.setValidators(_b(t, this._rawValidators));
    }
    removeAsyncValidators(t) {
      this.setAsyncValidators(_b(t, this._rawAsyncValidators));
    }
    hasValidator(t) {
      return td(this._rawValidators, t);
    }
    hasAsyncValidator(t) {
      return td(this._rawAsyncValidators, t);
    }
    clearValidators() {
      this.validator = null;
    }
    clearAsyncValidators() {
      this.asyncValidator = null;
    }
    markAsTouched(t = {}) {
      let e = this.touched === !1;
      this.touched = !0;
      let i = t.sourceControl ?? this;
      this._parent &&
        !t.onlySelf &&
        this._parent.markAsTouched(Be(Q({}, t), { sourceControl: i })),
        e && t.emitEvent !== !1 && this._events.next(new sl(!0, i));
    }
    markAllAsTouched(t = {}) {
      this.markAsTouched({
        onlySelf: !0,
        emitEvent: t.emitEvent,
        sourceControl: this,
      }),
        this._forEachChild((e) => e.markAllAsTouched(t));
    }
    markAsUntouched(t = {}) {
      let e = this.touched === !0;
      (this.touched = !1), (this._pendingTouched = !1);
      let i = t.sourceControl ?? this;
      this._forEachChild((r) => {
        r.markAsUntouched({
          onlySelf: !0,
          emitEvent: t.emitEvent,
          sourceControl: i,
        });
      }),
        this._parent && !t.onlySelf && this._parent._updateTouched(t, i),
        e && t.emitEvent !== !1 && this._events.next(new sl(!1, i));
    }
    markAsDirty(t = {}) {
      let e = this.pristine === !0;
      this.pristine = !1;
      let i = t.sourceControl ?? this;
      this._parent &&
        !t.onlySelf &&
        this._parent.markAsDirty(Be(Q({}, t), { sourceControl: i })),
        e && t.emitEvent !== !1 && this._events.next(new al(!1, i));
    }
    markAsPristine(t = {}) {
      let e = this.pristine === !1;
      (this.pristine = !0), (this._pendingDirty = !1);
      let i = t.sourceControl ?? this;
      this._forEachChild((r) => {
        r.markAsPristine({ onlySelf: !0, emitEvent: t.emitEvent });
      }),
        this._parent && !t.onlySelf && this._parent._updatePristine(t, i),
        e && t.emitEvent !== !1 && this._events.next(new al(!0, i));
    }
    markAsPending(t = {}) {
      this.status = Sa;
      let e = t.sourceControl ?? this;
      t.emitEvent !== !1 &&
        (this._events.next(new Ma(this.status, e)),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !t.onlySelf &&
          this._parent.markAsPending(Be(Q({}, t), { sourceControl: e }));
    }
    disable(t = {}) {
      let e = this._parentMarkedDirty(t.onlySelf);
      (this.status = rl),
        (this.errors = null),
        this._forEachChild((r) => {
          r.disable(Be(Q({}, t), { onlySelf: !0 }));
        }),
        this._updateValue();
      let i = t.sourceControl ?? this;
      t.emitEvent !== !1 &&
        (this._events.next(new rd(this.value, i)),
        this._events.next(new Ma(this.status, i)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._updateAncestors(Be(Q({}, t), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((r) => r(!0));
    }
    enable(t = {}) {
      let e = this._parentMarkedDirty(t.onlySelf);
      (this.status = nl),
        this._forEachChild((i) => {
          i.enable(Be(Q({}, t), { onlySelf: !0 }));
        }),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent }),
        this._updateAncestors(Be(Q({}, t), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((i) => i(!1));
    }
    _updateAncestors(t, e) {
      this._parent &&
        !t.onlySelf &&
        (this._parent.updateValueAndValidity(t),
        t.skipPristineCheck || this._parent._updatePristine({}, e),
        this._parent._updateTouched({}, e));
    }
    setParent(t) {
      this._parent = t;
    }
    getRawValue() {
      return this.value;
    }
    updateValueAndValidity(t = {}) {
      if ((this._setInitialStatus(), this._updateValue(), this.enabled)) {
        let i = this._cancelExistingSubscription();
        (this.errors = this._runValidator()),
          (this.status = this._calculateStatus()),
          (this.status === nl || this.status === Sa) &&
            this._runAsyncValidator(i, t.emitEvent);
      }
      let e = t.sourceControl ?? this;
      t.emitEvent !== !1 &&
        (this._events.next(new rd(this.value, e)),
        this._events.next(new Ma(this.status, e)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !t.onlySelf &&
          this._parent.updateValueAndValidity(
            Be(Q({}, t), { sourceControl: e })
          );
    }
    _updateTreeValidity(t = { emitEvent: !0 }) {
      this._forEachChild((e) => e._updateTreeValidity(t)),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent });
    }
    _setInitialStatus() {
      this.status = this._allControlsDisabled() ? rl : nl;
    }
    _runValidator() {
      return this.validator ? this.validator(this) : null;
    }
    _runAsyncValidator(t, e) {
      if (this.asyncValidator) {
        (this.status = Sa),
          (this._hasOwnPendingAsyncValidator = { emitEvent: e !== !1 });
        let i = kb(this.asyncValidator(this));
        this._asyncValidationSubscription = i.subscribe((r) => {
          (this._hasOwnPendingAsyncValidator = null),
            this.setErrors(r, { emitEvent: e, shouldHaveEmitted: t });
        });
      }
    }
    _cancelExistingSubscription() {
      if (this._asyncValidationSubscription) {
        this._asyncValidationSubscription.unsubscribe();
        let t = this._hasOwnPendingAsyncValidator?.emitEvent ?? !1;
        return (this._hasOwnPendingAsyncValidator = null), t;
      }
      return !1;
    }
    setErrors(t, e = {}) {
      (this.errors = t),
        this._updateControlsErrors(
          e.emitEvent !== !1,
          this,
          e.shouldHaveEmitted
        );
    }
    get(t) {
      let e = t;
      return e == null ||
        (Array.isArray(e) || (e = e.split(".")), e.length === 0)
        ? null
        : e.reduce((i, r) => i && i._find(r), this);
    }
    getError(t, e) {
      let i = e ? this.get(e) : this;
      return i && i.errors ? i.errors[t] : null;
    }
    hasError(t, e) {
      return !!this.getError(t, e);
    }
    get root() {
      let t = this;
      for (; t._parent; ) t = t._parent;
      return t;
    }
    _updateControlsErrors(t, e, i) {
      (this.status = this._calculateStatus()),
        t && this.statusChanges.emit(this.status),
        (t || i) && this._events.next(new Ma(this.status, e)),
        this._parent && this._parent._updateControlsErrors(t, e, i);
    }
    _initObservables() {
      (this.valueChanges = new De()), (this.statusChanges = new De());
    }
    _calculateStatus() {
      return this._allControlsDisabled()
        ? rl
        : this.errors
        ? Jc
        : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(Sa)
        ? Sa
        : this._anyControlsHaveStatus(Jc)
        ? Jc
        : nl;
    }
    _anyControlsHaveStatus(t) {
      return this._anyControls((e) => e.status === t);
    }
    _anyControlsDirty() {
      return this._anyControls((t) => t.dirty);
    }
    _anyControlsTouched() {
      return this._anyControls((t) => t.touched);
    }
    _updatePristine(t, e) {
      let i = !this._anyControlsDirty(),
        r = this.pristine !== i;
      (this.pristine = i),
        this._parent && !t.onlySelf && this._parent._updatePristine(t, e),
        r && this._events.next(new al(this.pristine, e));
    }
    _updateTouched(t = {}, e) {
      (this.touched = this._anyControlsTouched()),
        this._events.next(new sl(this.touched, e)),
        this._parent && !t.onlySelf && this._parent._updateTouched(t, e);
    }
    _registerOnCollectionChange(t) {
      this._onCollectionChange = t;
    }
    _setUpdateStrategy(t) {
      dd(t) && t.updateOn != null && (this._updateOn = t.updateOn);
    }
    _parentMarkedDirty(t) {
      let e = this._parent && this._parent.dirty;
      return !t && !!e && !this._parent._anyControlsDirty();
    }
    _find(t) {
      return null;
    }
    _assignValidators(t) {
      (this._rawValidators = Array.isArray(t) ? t.slice() : t),
        (this._composedValidatorFn = nM(this._rawValidators));
    }
    _assignAsyncValidators(t) {
      (this._rawAsyncValidators = Array.isArray(t) ? t.slice() : t),
        (this._composedAsyncValidatorFn = rM(this._rawAsyncValidators));
    }
  },
  Rt = class extends od {
    constructor(t, e, i) {
      super(Lb(e), Vb(i, e)),
        (this.controls = t),
        this._initObservables(),
        this._setUpdateStrategy(e),
        this._setUpControls(),
        this.updateValueAndValidity({
          onlySelf: !0,
          emitEvent: !!this.asyncValidator,
        });
    }
    registerControl(t, e) {
      return this.controls[t]
        ? this.controls[t]
        : ((this.controls[t] = e),
          e.setParent(this),
          e._registerOnCollectionChange(this._onCollectionChange),
          e);
    }
    addControl(t, e, i = {}) {
      this.registerControl(t, e),
        this.updateValueAndValidity({ emitEvent: i.emitEvent }),
        this._onCollectionChange();
    }
    removeControl(t, e = {}) {
      this.controls[t] &&
        this.controls[t]._registerOnCollectionChange(() => {}),
        delete this.controls[t],
        this.updateValueAndValidity({ emitEvent: e.emitEvent }),
        this._onCollectionChange();
    }
    setControl(t, e, i = {}) {
      this.controls[t] &&
        this.controls[t]._registerOnCollectionChange(() => {}),
        delete this.controls[t],
        e && this.registerControl(t, e),
        this.updateValueAndValidity({ emitEvent: i.emitEvent }),
        this._onCollectionChange();
    }
    contains(t) {
      return this.controls.hasOwnProperty(t) && this.controls[t].enabled;
    }
    setValue(t, e = {}) {
      aM(this, !0, t),
        Object.keys(t).forEach((i) => {
          oM(this, !0, i),
            this.controls[i].setValue(t[i], {
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }),
        this.updateValueAndValidity(e);
    }
    patchValue(t, e = {}) {
      t != null &&
        (Object.keys(t).forEach((i) => {
          let r = this.controls[i];
          r && r.patchValue(t[i], { onlySelf: !0, emitEvent: e.emitEvent });
        }),
        this.updateValueAndValidity(e));
    }
    reset(t = {}, e = {}) {
      this._forEachChild((i, r) => {
        i.reset(t ? t[r] : null, { onlySelf: !0, emitEvent: e.emitEvent });
      }),
        this._updatePristine(e, this),
        this._updateTouched(e, this),
        this.updateValueAndValidity(e);
    }
    getRawValue() {
      return this._reduceChildren(
        {},
        (t, e, i) => ((t[i] = e.getRawValue()), t)
      );
    }
    _syncPendingControls() {
      let t = this._reduceChildren(!1, (e, i) =>
        i._syncPendingControls() ? !0 : e
      );
      return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
    }
    _forEachChild(t) {
      Object.keys(this.controls).forEach((e) => {
        let i = this.controls[e];
        i && t(i, e);
      });
    }
    _setUpControls() {
      this._forEachChild((t) => {
        t.setParent(this),
          t._registerOnCollectionChange(this._onCollectionChange);
      });
    }
    _updateValue() {
      this.value = this._reduceValue();
    }
    _anyControls(t) {
      for (let [e, i] of Object.entries(this.controls))
        if (this.contains(e) && t(i)) return !0;
      return !1;
    }
    _reduceValue() {
      let t = {};
      return this._reduceChildren(
        t,
        (e, i, r) => ((i.enabled || this.disabled) && (e[r] = i.value), e)
      );
    }
    _reduceChildren(t, e) {
      let i = t;
      return (
        this._forEachChild((r, o) => {
          i = e(i, r, o);
        }),
        i
      );
    }
    _allControlsDisabled() {
      for (let t of Object.keys(this.controls))
        if (this.controls[t].enabled) return !1;
      return Object.keys(this.controls).length > 0 || this.disabled;
    }
    _find(t) {
      return this.controls.hasOwnProperty(t) ? this.controls[t] : null;
    }
  };
var ll = new Me("CallSetDisabledState", {
    providedIn: "root",
    factory: () => ud,
  }),
  ud = "always";
function Bb(n, t) {
  return [...t.path, n];
}
function ad(n, t, e = ud) {
  Hp(n, t),
    t.valueAccessor.writeValue(n.value),
    (n.disabled || e === "always") &&
      t.valueAccessor.setDisabledState?.(n.disabled),
    lM(n, t),
    dM(n, t),
    cM(n, t),
    sM(n, t);
}
function bb(n, t, e = !0) {
  let i = () => {};
  t.valueAccessor &&
    (t.valueAccessor.registerOnChange(i), t.valueAccessor.registerOnTouched(i)),
    ld(n, t),
    n &&
      (t._invokeOnDestroyCallbacks(), n._registerOnCollectionChange(() => {}));
}
function sd(n, t) {
  n.forEach((e) => {
    e.registerOnValidatorChange && e.registerOnValidatorChange(t);
  });
}
function sM(n, t) {
  if (t.valueAccessor.setDisabledState) {
    let e = (i) => {
      t.valueAccessor.setDisabledState(i);
    };
    n.registerOnDisabledChange(e),
      t._registerOnDestroy(() => {
        n._unregisterOnDisabledChange(e);
      });
  }
}
function Hp(n, t) {
  let e = Fb(n);
  t.validator !== null
    ? n.setValidators(fb(e, t.validator))
    : typeof e == "function" && n.setValidators([e]);
  let i = Nb(n);
  t.asyncValidator !== null
    ? n.setAsyncValidators(fb(i, t.asyncValidator))
    : typeof i == "function" && n.setAsyncValidators([i]);
  let r = () => n.updateValueAndValidity();
  sd(t._rawValidators, r), sd(t._rawAsyncValidators, r);
}
function ld(n, t) {
  let e = !1;
  if (n !== null) {
    if (t.validator !== null) {
      let r = Fb(n);
      if (Array.isArray(r) && r.length > 0) {
        let o = r.filter((a) => a !== t.validator);
        o.length !== r.length && ((e = !0), n.setValidators(o));
      }
    }
    if (t.asyncValidator !== null) {
      let r = Nb(n);
      if (Array.isArray(r) && r.length > 0) {
        let o = r.filter((a) => a !== t.asyncValidator);
        o.length !== r.length && ((e = !0), n.setAsyncValidators(o));
      }
    }
  }
  let i = () => {};
  return sd(t._rawValidators, i), sd(t._rawAsyncValidators, i), e;
}
function lM(n, t) {
  t.valueAccessor.registerOnChange((e) => {
    (n._pendingValue = e),
      (n._pendingChange = !0),
      (n._pendingDirty = !0),
      n.updateOn === "change" && Hb(n, t);
  });
}
function cM(n, t) {
  t.valueAccessor.registerOnTouched(() => {
    (n._pendingTouched = !0),
      n.updateOn === "blur" && n._pendingChange && Hb(n, t),
      n.updateOn !== "submit" && n.markAsTouched();
  });
}
function Hb(n, t) {
  n._pendingDirty && n.markAsDirty(),
    n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
    t.viewToModelUpdate(n._pendingValue),
    (n._pendingChange = !1);
}
function dM(n, t) {
  let e = (i, r) => {
    t.valueAccessor.writeValue(i), r && t.viewToModelUpdate(i);
  };
  n.registerOnChange(e),
    t._registerOnDestroy(() => {
      n._unregisterOnChange(e);
    });
}
function jb(n, t) {
  n == null, Hp(n, t);
}
function uM(n, t) {
  return ld(n, t);
}
function Ub(n, t) {
  if (!n.hasOwnProperty("model")) return !1;
  let e = n.model;
  return e.isFirstChange() ? !0 : !Object.is(t, e.currentValue);
}
function hM(n) {
  return Object.getPrototypeOf(n.constructor) === Lp;
}
function zb(n, t) {
  n._syncPendingControls(),
    t.forEach((e) => {
      let i = e.control;
      i.updateOn === "submit" &&
        i._pendingChange &&
        (e.viewToModelUpdate(i._pendingValue), (i._pendingChange = !1));
    });
}
function $b(n, t) {
  if (!t) return null;
  Array.isArray(t);
  let e, i, r;
  return (
    t.forEach((o) => {
      o.constructor === fi ? (e = o) : hM(o) ? (i = o) : (r = o);
    }),
    r || i || e || null
  );
}
function pM(n, t) {
  let e = n.indexOf(t);
  e > -1 && n.splice(e, 1);
}
var mM = { provide: wr, useExisting: Di(() => jp) },
  ol = Promise.resolve(),
  jp = (() => {
    class n extends wr {
      get submitted() {
        return An(this.submittedReactive);
      }
      constructor(e, i, r) {
        super(),
          (this.callSetDisabledState = r),
          (this._submitted = Co(() => this.submittedReactive())),
          (this.submittedReactive = fe(!1)),
          (this._directives = new Set()),
          (this.ngSubmit = new De()),
          (this.form = new Rt({}, Vp(e), Bp(i)));
      }
      ngAfterViewInit() {
        this._setUpdateStrategy();
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      get controls() {
        return this.form.controls;
      }
      addControl(e) {
        ol.then(() => {
          let i = this._findContainer(e.path);
          (e.control = i.registerControl(e.name, e.control)),
            ad(e.control, e, this.callSetDisabledState),
            e.control.updateValueAndValidity({ emitEvent: !1 }),
            this._directives.add(e);
        });
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        ol.then(() => {
          let i = this._findContainer(e.path);
          i && i.removeControl(e.name), this._directives.delete(e);
        });
      }
      addFormGroup(e) {
        ol.then(() => {
          let i = this._findContainer(e.path),
            r = new Rt({});
          jb(r, e),
            i.registerControl(e.name, r),
            r.updateValueAndValidity({ emitEvent: !1 });
        });
      }
      removeFormGroup(e) {
        ol.then(() => {
          let i = this._findContainer(e.path);
          i && i.removeControl(e.name);
        });
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      updateModel(e, i) {
        ol.then(() => {
          this.form.get(e.path).setValue(i);
        });
      }
      setValue(e) {
        this.control.setValue(e);
      }
      onSubmit(e) {
        return (
          this.submittedReactive.set(!0),
          zb(this.form, this._directives),
          this.ngSubmit.emit(e),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e), this.submittedReactive.set(!1);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.form._updateOn = this.options.updateOn);
      }
      _findContainer(e) {
        return e.pop(), e.length ? this.form.get(e) : this.form;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Io, 10), H(cd, 10), H(ll, 8));
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
            ["ng-form"],
            ["", "ngForm", ""],
          ],
          hostBindings: function (i, r) {
            i & 1 &&
              U("submit", function (a) {
                return r.onSubmit(a);
              })("reset", function () {
                return r.onReset();
              });
          },
          inputs: { options: [0, "ngFormOptions", "options"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [Vt([mM]), Je],
        });
      }
    }
    return n;
  })();
function vb(n, t) {
  let e = n.indexOf(t);
  e > -1 && n.splice(e, 1);
}
function yb(n) {
  return (
    typeof n == "object" &&
    n !== null &&
    Object.keys(n).length === 2 &&
    "value" in n &&
    "disabled" in n
  );
}
var st = class extends od {
  constructor(t = null, e, i) {
    super(Lb(e), Vb(i, e)),
      (this.defaultValue = null),
      (this._onChange = []),
      (this._pendingChange = !1),
      this._applyFormState(t),
      this._setUpdateStrategy(e),
      this._initObservables(),
      this.updateValueAndValidity({
        onlySelf: !0,
        emitEvent: !!this.asyncValidator,
      }),
      dd(e) &&
        (e.nonNullable || e.initialValueIsDefault) &&
        (yb(t) ? (this.defaultValue = t.value) : (this.defaultValue = t));
  }
  setValue(t, e = {}) {
    (this.value = this._pendingValue = t),
      this._onChange.length &&
        e.emitModelToViewChange !== !1 &&
        this._onChange.forEach((i) =>
          i(this.value, e.emitViewToModelChange !== !1)
        ),
      this.updateValueAndValidity(e);
  }
  patchValue(t, e = {}) {
    this.setValue(t, e);
  }
  reset(t = this.defaultValue, e = {}) {
    this._applyFormState(t),
      this.markAsPristine(e),
      this.markAsUntouched(e),
      this.setValue(this.value, e),
      (this._pendingChange = !1);
  }
  _updateValue() {}
  _anyControls(t) {
    return !1;
  }
  _allControlsDisabled() {
    return this.disabled;
  }
  registerOnChange(t) {
    this._onChange.push(t);
  }
  _unregisterOnChange(t) {
    vb(this._onChange, t);
  }
  registerOnDisabledChange(t) {
    this._onDisabledChange.push(t);
  }
  _unregisterOnDisabledChange(t) {
    vb(this._onDisabledChange, t);
  }
  _forEachChild(t) {}
  _syncPendingControls() {
    return this.updateOn === "submit" &&
      (this._pendingDirty && this.markAsDirty(),
      this._pendingTouched && this.markAsTouched(),
      this._pendingChange)
      ? (this.setValue(this._pendingValue, {
          onlySelf: !0,
          emitModelToViewChange: !1,
        }),
        !0)
      : !1;
  }
  _applyFormState(t) {
    yb(t)
      ? ((this.value = this._pendingValue = t.value),
        t.disabled
          ? this.disable({ onlySelf: !0, emitEvent: !1 })
          : this.enable({ onlySelf: !0, emitEvent: !1 }))
      : (this.value = this._pendingValue = t);
  }
};
var fM = (n) => n instanceof st;
var gM = { provide: Eo, useExisting: Di(() => an) },
  xb = Promise.resolve(),
  an = (() => {
    class n extends Eo {
      constructor(e, i, r, o, a, s) {
        super(),
          (this._changeDetectorRef = a),
          (this.callSetDisabledState = s),
          (this.control = new st()),
          (this._registered = !1),
          (this.name = ""),
          (this.update = new De()),
          (this._parent = e),
          this._setValidators(i),
          this._setAsyncValidators(r),
          (this.valueAccessor = $b(this, o));
      }
      ngOnChanges(e) {
        if ((this._checkForErrors(), !this._registered || "name" in e)) {
          if (this._registered && (this._checkName(), this.formDirective)) {
            let i = e.name.previousValue;
            this.formDirective.removeControl({
              name: i,
              path: this._getPath(i),
            });
          }
          this._setUpControl();
        }
        "isDisabled" in e && this._updateDisabled(e),
          Ub(e, this.viewModel) &&
            (this._updateValue(this.model), (this.viewModel = this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      get path() {
        return this._getPath(this.name);
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      _setUpControl() {
        this._setUpdateStrategy(),
          this._isStandalone()
            ? this._setUpStandalone()
            : this.formDirective.addControl(this),
          (this._registered = !0);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.control._updateOn = this.options.updateOn);
      }
      _isStandalone() {
        return !this._parent || !!(this.options && this.options.standalone);
      }
      _setUpStandalone() {
        ad(this.control, this, this.callSetDisabledState),
          this.control.updateValueAndValidity({ emitEvent: !1 });
      }
      _checkForErrors() {
        this._isStandalone() || this._checkParentType(), this._checkName();
      }
      _checkParentType() {}
      _checkName() {
        this.options && this.options.name && (this.name = this.options.name),
          !this._isStandalone() && this.name;
      }
      _updateValue(e) {
        xb.then(() => {
          this.control.setValue(e, { emitViewToModelChange: !1 }),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _updateDisabled(e) {
        let i = e.isDisabled.currentValue,
          r = i !== 0 && Ee(i);
        xb.then(() => {
          r && !this.control.disabled
            ? this.control.disable()
            : !r && this.control.disabled && this.control.enable(),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _getPath(e) {
        return this._parent ? Bb(e, this._parent) : [e];
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(
            H(wr, 9),
            H(Io, 10),
            H(cd, 10),
            H(ko, 10),
            H(et, 8),
            H(ll, 8)
          );
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""],
          ],
          inputs: {
            name: "name",
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
            options: [0, "ngModelOptions", "options"],
          },
          outputs: { update: "ngModelChange" },
          exportAs: ["ngModel"],
          features: [Vt([gM]), Je, Nt],
        });
      }
    }
    return n;
  })(),
  Xr = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]],
          hostAttrs: ["novalidate", ""],
        });
      }
    }
    return n;
  })();
var Wb = new Me("");
var _M = { provide: wr, useExisting: Di(() => sn) },
  sn = (() => {
    class n extends wr {
      get submitted() {
        return An(this._submittedReactive);
      }
      set submitted(e) {
        this._submittedReactive.set(e);
      }
      constructor(e, i, r) {
        super(),
          (this.callSetDisabledState = r),
          (this._submitted = Co(() => this._submittedReactive())),
          (this._submittedReactive = fe(!1)),
          (this._onCollectionChange = () => this._updateDomValue()),
          (this.directives = []),
          (this.form = null),
          (this.ngSubmit = new De()),
          this._setValidators(e),
          this._setAsyncValidators(i);
      }
      ngOnChanges(e) {
        this._checkFormPresent(),
          e.hasOwnProperty("form") &&
            (this._updateValidators(),
            this._updateDomValue(),
            this._updateRegistrations(),
            (this._oldForm = this.form));
      }
      ngOnDestroy() {
        this.form &&
          (ld(this.form, this),
          this.form._onCollectionChange === this._onCollectionChange &&
            this.form._registerOnCollectionChange(() => {}));
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      addControl(e) {
        let i = this.form.get(e.path);
        return (
          ad(i, e, this.callSetDisabledState),
          i.updateValueAndValidity({ emitEvent: !1 }),
          this.directives.push(e),
          i
        );
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        bb(e.control || null, e, !1), pM(this.directives, e);
      }
      addFormGroup(e) {
        this._setUpFormContainer(e);
      }
      removeFormGroup(e) {
        this._cleanUpFormContainer(e);
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      addFormArray(e) {
        this._setUpFormContainer(e);
      }
      removeFormArray(e) {
        this._cleanUpFormContainer(e);
      }
      getFormArray(e) {
        return this.form.get(e.path);
      }
      updateModel(e, i) {
        this.form.get(e.path).setValue(i);
      }
      onSubmit(e) {
        return (
          this._submittedReactive.set(!0),
          zb(this.form, this.directives),
          this.ngSubmit.emit(e),
          this.form._events.next(new Fp(this.control)),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e),
          this._submittedReactive.set(!1),
          this.form._events.next(new Np(this.form));
      }
      _updateDomValue() {
        this.directives.forEach((e) => {
          let i = e.control,
            r = this.form.get(e.path);
          i !== r &&
            (bb(i || null, e),
            fM(r) && (ad(r, e, this.callSetDisabledState), (e.control = r)));
        }),
          this.form._updateTreeValidity({ emitEvent: !1 });
      }
      _setUpFormContainer(e) {
        let i = this.form.get(e.path);
        jb(i, e), i.updateValueAndValidity({ emitEvent: !1 });
      }
      _cleanUpFormContainer(e) {
        if (this.form) {
          let i = this.form.get(e.path);
          i && uM(i, e) && i.updateValueAndValidity({ emitEvent: !1 });
        }
      }
      _updateRegistrations() {
        this.form._registerOnCollectionChange(this._onCollectionChange),
          this._oldForm && this._oldForm._registerOnCollectionChange(() => {});
      }
      _updateValidators() {
        Hp(this.form, this), this._oldForm && ld(this._oldForm, this);
      }
      _checkFormPresent() {
        this.form;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Io, 10), H(cd, 10), H(ll, 8));
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [["", "formGroup", ""]],
          hostBindings: function (i, r) {
            i & 1 &&
              U("submit", function (a) {
                return r.onSubmit(a);
              })("reset", function () {
                return r.onReset();
              });
          },
          inputs: { form: [0, "formGroup", "form"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [Vt([_M]), Je, Nt],
        });
      }
    }
    return n;
  })();
var bM = { provide: Eo, useExisting: Di(() => ln) },
  ln = (() => {
    class n extends Eo {
      set isDisabled(e) {}
      static {
        this._ngModelWarningSentOnce = !1;
      }
      constructor(e, i, r, o, a) {
        super(),
          (this._ngModelWarningConfig = a),
          (this._added = !1),
          (this.name = null),
          (this.update = new De()),
          (this._ngModelWarningSent = !1),
          (this._parent = e),
          this._setValidators(i),
          this._setAsyncValidators(r),
          (this.valueAccessor = $b(this, o));
      }
      ngOnChanges(e) {
        this._added || this._setUpControl(),
          Ub(e, this.viewModel) &&
            ((this.viewModel = this.model),
            this.formDirective.updateModel(this, this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      get path() {
        return Bb(
          this.name == null ? this.name : this.name.toString(),
          this._parent
        );
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      _checkParentType() {}
      _setUpControl() {
        this._checkParentType(),
          (this.control = this.formDirective.addControl(this)),
          (this._added = !0);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(
            H(wr, 13),
            H(Io, 10),
            H(cd, 10),
            H(ko, 10),
            H(Wb, 8)
          );
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [["", "formControlName", ""]],
          inputs: {
            name: [0, "formControlName", "name"],
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
          },
          outputs: { update: "ngModelChange" },
          features: [Vt([bM]), Je, Nt],
        });
      }
    }
    return n;
  })(),
  vM = { provide: ko, useExisting: Di(() => ir), multi: !0 };
function Gb(n, t) {
  return n == null
    ? `${t}`
    : (t && typeof t == "object" && (t = "Object"), `${n}: ${t}`.slice(0, 50));
}
function yM(n) {
  return n.split(":")[0];
}
var ir = (() => {
    class n extends Lp {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let i = this._getOptionId(e),
          r = Gb(i, e);
        this.setProperty("value", r);
      }
      registerOnChange(e) {
        this.onChange = (i) => {
          (this.value = this._getOptionValue(i)), e(this.value);
        };
      }
      _registerOption() {
        return (this._idCounter++).toString();
      }
      _getOptionId(e) {
        for (let i of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(i), e)) return i;
        return null;
      }
      _getOptionValue(e) {
        let i = yM(e);
        return this._optionMap.has(i) ? this._optionMap.get(i) : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = bt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["select", "formControlName", "", 3, "multiple", ""],
            ["select", "formControl", "", 3, "multiple", ""],
            ["select", "ngModel", "", 3, "multiple", ""],
          ],
          hostBindings: function (i, r) {
            i & 1 &&
              U("change", function (a) {
                return r.onChange(a.target.value);
              })("blur", function () {
                return r.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [Vt([vM]), Je],
        });
      }
    }
    return n;
  })(),
  $i = (() => {
    class n {
      constructor(e, i, r) {
        (this._element = e),
          (this._renderer = i),
          (this._select = r),
          this._select && (this.id = this._select._registerOption());
      }
      set ngValue(e) {
        this._select != null &&
          (this._select._optionMap.set(this.id, e),
          this._setElementValue(Gb(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._setElementValue(e),
          this._select && this._select.writeValue(this._select.value);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Ve), H(bi), H(ir, 9));
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return n;
  })(),
  xM = { provide: ko, useExisting: Di(() => Yb), multi: !0 };
function Cb(n, t) {
  return n == null
    ? `${t}`
    : (typeof t == "string" && (t = `'${t}'`),
      t && typeof t == "object" && (t = "Object"),
      `${n}: ${t}`.slice(0, 50));
}
function CM(n) {
  return n.split(":")[0];
}
var Yb = (() => {
    class n extends Lp {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let i;
        if (Array.isArray(e)) {
          let r = e.map((o) => this._getOptionId(o));
          i = (o, a) => {
            o._setSelected(r.indexOf(a.toString()) > -1);
          };
        } else
          i = (r, o) => {
            r._setSelected(!1);
          };
        this._optionMap.forEach(i);
      }
      registerOnChange(e) {
        this.onChange = (i) => {
          let r = [],
            o = i.selectedOptions;
          if (o !== void 0) {
            let a = o;
            for (let s = 0; s < a.length; s++) {
              let l = a[s],
                d = this._getOptionValue(l.value);
              r.push(d);
            }
          } else {
            let a = i.options;
            for (let s = 0; s < a.length; s++) {
              let l = a[s];
              if (l.selected) {
                let d = this._getOptionValue(l.value);
                r.push(d);
              }
            }
          }
          (this.value = r), e(r);
        };
      }
      _registerOption(e) {
        let i = (this._idCounter++).toString();
        return this._optionMap.set(i, e), i;
      }
      _getOptionId(e) {
        for (let i of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(i)._value, e)) return i;
        return null;
      }
      _getOptionValue(e) {
        let i = CM(e);
        return this._optionMap.has(i) ? this._optionMap.get(i)._value : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = bt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["select", "multiple", "", "formControlName", ""],
            ["select", "multiple", "", "formControl", ""],
            ["select", "multiple", "", "ngModel", ""],
          ],
          hostBindings: function (i, r) {
            i & 1 &&
              U("change", function (a) {
                return r.onChange(a.target);
              })("blur", function () {
                return r.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [Vt([xM]), Je],
        });
      }
    }
    return n;
  })(),
  Wi = (() => {
    class n {
      constructor(e, i, r) {
        (this._element = e),
          (this._renderer = i),
          (this._select = r),
          this._select && (this.id = this._select._registerOption(this));
      }
      set ngValue(e) {
        this._select != null &&
          ((this._value = e),
          this._setElementValue(Cb(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._select
          ? ((this._value = e),
            this._setElementValue(Cb(this.id, e)),
            this._select.writeValue(this._select.value))
          : this._setElementValue(e);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      _setSelected(e) {
        this._renderer.setProperty(this._element.nativeElement, "selected", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Ve), H(bi), H(Yb, 9));
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return n;
  })();
function wM(n) {
  return typeof n == "number" ? n : parseInt(n, 10);
}
var Up = (() => {
  class n {
    constructor() {
      this._validator = ed;
    }
    ngOnChanges(e) {
      if (this.inputName in e) {
        let i = this.normalizeInput(e[this.inputName].currentValue);
        (this._enabled = this.enabled(i)),
          (this._validator = this._enabled ? this.createValidator(i) : ed),
          this._onChange && this._onChange();
      }
    }
    validate(e) {
      return this._validator(e);
    }
    registerOnValidatorChange(e) {
      this._onChange = e;
    }
    enabled(e) {
      return e != null;
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵdir = Ae({ type: n, features: [Nt] });
    }
  }
  return n;
})();
var DM = { provide: Io, useExisting: Di(() => Dr), multi: !0 };
var Dr = (() => {
  class n extends Up {
    constructor() {
      super(...arguments),
        (this.inputName = "required"),
        (this.normalizeInput = Ee),
        (this.createValidator = (e) => Sb);
    }
    enabled(e) {
      return e;
    }
    static {
      this.ɵfac = (() => {
        let e;
        return function (r) {
          return (e || (e = bt(n)))(r || n);
        };
      })();
    }
    static {
      this.ɵdir = Ae({
        type: n,
        selectors: [
          ["", "required", "", "formControlName", "", 3, "type", "checkbox"],
          ["", "required", "", "formControl", "", 3, "type", "checkbox"],
          ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
        ],
        hostVars: 1,
        hostBindings: function (i, r) {
          i & 2 && de("required", r._enabled ? "" : null);
        },
        inputs: { required: "required" },
        features: [Vt([DM]), Je],
      });
    }
  }
  return n;
})();
var SM = { provide: Io, useExisting: Di(() => zp), multi: !0 },
  zp = (() => {
    class n extends Up {
      constructor() {
        super(...arguments),
          (this.inputName = "email"),
          (this.normalizeInput = Ee),
          (this.createValidator = (e) => Mb);
      }
      enabled(e) {
        return e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = bt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["", "email", "", "formControlName", ""],
            ["", "email", "", "formControl", ""],
            ["", "email", "", "ngModel", ""],
          ],
          inputs: { email: "email" },
          features: [Vt([SM]), Je],
        });
      }
    }
    return n;
  })();
var MM = { provide: Io, useExisting: Di(() => $p), multi: !0 },
  $p = (() => {
    class n extends Up {
      constructor() {
        super(...arguments),
          (this.inputName = "maxlength"),
          (this.normalizeInput = (e) => wM(e)),
          (this.createValidator = (e) => Tb(e));
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = bt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["", "maxlength", "", "formControlName", ""],
            ["", "maxlength", "", "formControl", ""],
            ["", "maxlength", "", "ngModel", ""],
          ],
          hostVars: 1,
          hostBindings: function (i, r) {
            i & 2 && de("maxlength", r._enabled ? r.maxlength : null);
          },
          inputs: { maxlength: "maxlength" },
          features: [Vt([MM]), Je],
        });
      }
    }
    return n;
  })();
var qb = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({});
    }
  }
  return n;
})();
var ht = (() => {
    class n {
      static withConfig(e) {
        return {
          ngModule: n,
          providers: [{ provide: ll, useValue: e.callSetDisabledState ?? ud }],
        };
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = we({ type: n });
      }
      static {
        this.ɵinj = Ce({ imports: [qb] });
      }
    }
    return n;
  })(),
  vn = (() => {
    class n {
      static withConfig(e) {
        return {
          ngModule: n,
          providers: [
            {
              provide: Wb,
              useValue: e.warnOnNgModelWithFormControl ?? "always",
            },
            { provide: ll, useValue: e.callSetDisabledState ?? ud },
          ],
        };
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = we({ type: n });
      }
      static {
        this.ɵinj = Ce({ imports: [qb] });
      }
    }
    return n;
  })();
var yn = class n {
  onSideBarClick$ = new Ie();
  selectedOption = fe("users");
  getSelectedOption() {
    return this.selectedOption;
  }
  setSelectedOption(t) {
    this.selectedOption.set(t);
  }
  pageTitleSubject = new Kt("Dashboard");
  pageTitle$ = this.pageTitleSubject.asObservable();
  setPageTitle(t) {
    this.pageTitleSubject.next(t);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Zr = class n {
  isOpen = new Kt(!0);
  isOpen$ = this.isOpen.asObservable();
  toggleSidebar() {
    this.isOpen.next(!this.isOpen.value);
  }
  setSidebar(t) {
    this.isOpen.next(t);
  }
  get currentState() {
    return this.isOpen.value;
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var TM = (n) => ({ "collapsed-sidebar": n }),
  EM = (n) => ({ collapsed: n });
function kM(n, t) {
  if (
    (n & 1 &&
      (h(0, "li", 4)(1, "a", 5), W(2, "i", 6), h(3, "span", 7), f(4), u()()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = E();
    Te("active", i.isActive(e.key)),
      g(),
      M("routerLink", e.route),
      g(),
      M("ngClass", e.icon),
      g(2),
      B(e.label);
  }
}
var Ta = class n {
  constructor(t, e, i) {
    this.router = t;
    this.context = e;
    this.sidebarService = i;
  }
  activeMenu = "";
  isSidebarOpen = !0;
  sidebarSub;
  routerSub;
  menuItems = [
    {
      key: "dashboard",
      label: "Dashboard",
      route: "/Admin/dashboard",
      icon: "fas fa-tachometer-alt",
    },
    {
      key: "role",
      label: "Role Management",
      route: "/Admin/role",
      icon: "fas fa-user-shield",
    },
    {
      key: "vehicle",
      label: "Vehicle Management",
      route: "/Admin/vehicle",
      icon: "fas fa-car",
    },
    {
      key: "dealer",
      label: "Dealer Management",
      route: "/Admin/dealer",
      icon: "fas fa-user-tie",
    },
  ];
  ngOnInit() {
    (this.sidebarSub = this.sidebarService.isOpen$.subscribe((t) => {
      this.isSidebarOpen = t;
    })),
      this.updateActiveFromUrl(this.router.url),
      (this.routerSub = this.router.events.subscribe((t) => {
        t instanceof Mi && this.updateActiveFromUrl(t.urlAfterRedirects);
      }));
  }
  ngOnDestroy() {
    this.sidebarSub?.unsubscribe(), this.routerSub?.unsubscribe();
  }
  updateActiveFromUrl(t) {
    console.log("Updating active from URL:", t);
    let e = this.menuItems.find((i) => t.includes(i.route));
    e &&
      this.activeMenu !== e.key &&
      (console.log("Setting active menu to:", e.key),
      (this.activeMenu = e.key),
      this.context.setPageTitle(e.label),
      this.context.onSideBarClick$.next({ role: e.key, pageTitle: e.label }));
  }
  isActive(t) {
    return this.activeMenu === t;
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Bt), H(yn), H(Zr));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-sidebar"]],
    standalone: !0,
    features: [ue],
    decls: 5,
    vars: 7,
    consts: [
      [1, "deznav", 2, "background-color", "#222fb9", 3, "ngClass"],
      ["id", "menu", 1, "metismenu", 3, "ngClass"],
      ["style", "margin-bottom:10px;", 3, "active", 4, "ngFor", "ngForOf"],
      [1, "copyright", 2, "margin-top", "280px"],
      [2, "margin-bottom", "10px"],
      [3, "routerLink"],
      [3, "ngClass"],
      [1, "nav-text", 2, "font-size", "11px", "white-space", "nowrap"],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 0)(1, "div")(2, "ul", 1),
        F(3, kM, 5, 5, "li", 2),
        u(),
        W(4, "div", 3),
        u()()),
        e & 2 &&
          (M("ngClass", xe(3, TM, !i.isSidebarOpen)),
          g(2),
          M("ngClass", xe(5, EM, !i.isSidebarOpen)),
          g(),
          M("ngForOf", i.menuItems));
    },
    dependencies: [ht, mi, Ui, Fe, Gt, ti],
    styles: [
      ".metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{background:#fff3!important;color:#fff!important;border-radius:50px;align-items:center;gap:8px;transition:none!important}.deznav[_ngcontent-%COMP%]:not(.collapsed-sidebar)   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:#fff!important;color:#222fb9!important}.collapsed-sidebar[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:transparent!important;color:#fff!important}.metismenu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{background-color:inherit!important;color:inherit!important}.deznav[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{font-size:1.5rem}.nav-text[_ngcontent-%COMP%]{font-size:15px}",
    ],
  });
};
var Gi = class n {
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵmod = we({ type: n });
  static ɵinj = Ce({ imports: [Fe, ht, Ui, Ta, Fe, ht, Ui] });
};
var pd = class n {
  constructor(t) {
    this.http = t;
  }
  getProfile() {
    let t = sessionStorage.getItem("token"),
      e = new vt({ Authorization: `Bearer ${t}` });
    return this.http.get(
      "https://uat.smartassistapp.in/api/
superAdmin/show-profile",
      { headers: e }
    );
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(li));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var md = class n {
  constructor(t, e, i, r, o, a, s) {
    this.router = t;
    this.platformId = e;
    this.activatedRoute = i;
    this.context = r;
    this.cdr = o;
    this.sidebarService = a;
    this.userService = s;
  }
  sidebarToggle = new De();
  guestDetails;
  currentHeading = "Dashboard";
  userName = "";
  ngOnInit() {
    this.context.onSideBarClick$.subscribe(({ pageTitle: t }) => {
      console.log("Current Heading Updated:", t),
        (this.currentHeading = t),
        this.cdr.markForCheck();
    }),
      this.updateTitle(),
      this.router.events
        .pipe(Ot((t) => t instanceof Mi))
        .subscribe(() => this.updateTitle()),
      this.userService.getProfile().subscribe({
        next: (t) => {
          console.log("Profile response:", t),
            (this.userName = t.data?.name || ""),
            console.log("Assigned userName:", this.userName),
            this.cdr.detectChanges();
        },
        error: (t) => {
          console.error("Failed to fetch profile", t),
            (this.userName = ""),
            this.cdr.detectChanges();
        },
      });
  }
  onToggleClick() {
    console.log("Hamburger clicked"), this.sidebarService.toggleSidebar();
  }
  updateTitle() {
    let t = this.getDeepestChild(this.activatedRoute);
  }
  getDeepestChild(t) {
    return t.firstChild ? this.getDeepestChild(t.firstChild) : t;
  }
  logout() {
    console.log("Logging out..."),
      sessionStorage.removeItem("token"),
      (this.guestDetails = null),
      this.router.navigate(["/"]);
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Bt), H(oi), H(Yt), H(yn), H(et), H(Zr), H(pd));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-header"]],
    outputs: { sidebarToggle: "sidebarToggle" },
    standalone: !0,
    features: [ue],
    decls: 83,
    vars: 2,
    consts: [
      [1, "nav-header", 2, "background-color", "#222fb9"],
      [
        "href",
        "javascript:void(0)",
        1,
        "brand-logo",
        2,
        "padding-left",
        "15px !important",
      ],
      [1, "demo-section"],
      [1, "demo-title"],
      [1, "brand-container"],
      [1, "logo-section"],
      ["src", "assets/admin-img/image (1).png", "alt", "Logo", 1, "logo-img"],
      [1, "brand-title"],
      [1, "nav-control", 3, "click"],
      [1, "hamburger"],
      [1, "line"],
      [1, "header"],
      [1, "header-content"],
      [1, "navbar", "navbar-expand"],
      [1, "collapse", "navbar-collapse", "justify-content-between"],
      [1, "header-left"],
      [1, "dashboard_bar"],
      [1, "navbar-nav", "header-right"],
      [1, "nav-item", "dropdown", "header-profile"],
      [
        "data-toggle",
        "dropdown",
        "data-toggle",
        "tooltip",
        "title",
        "Profile",
        1,
        "nav-link",
        "tooltip-test",
        "text-primary",
      ],
      ["src", "./assets/images/1.jpg", 1, "logo-abbr"],
      [1, "dropdown-menu", "dropdown-menu-right"],
      ["routerLink", "/login", 1, "dropdown-item", "ai-icon"],
      [
        "id",
        "icon-user1",
        "xmlns",
        "http://www.w3.org/2000/svg",
        "width",
        "18",
        "height",
        "18",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "stroke",
        "currentColor",
        "stroke-width",
        "2",
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
        1,
        "text-primary",
      ],
      ["d", "M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"],
      ["cx", "12", "cy", "7", "r", "4"],
      [1, "ml-2"],
      [
        "href",
        "javascript:void(0)",
        "onclick",
        "document.getElementById('logoutModal').style.display='block'",
        1,
        "dropdown-item",
      ],
      [
        "id",
        "icon-logout",
        "xmlns",
        "http://www.w3.org/2000/svg",
        "width",
        "18",
        "height",
        "18",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "stroke",
        "currentColor",
        "stroke-width",
        "2",
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
        1,
        "text-danger",
      ],
      ["d", "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"],
      ["points", "16 17 21 12 16 7"],
      ["x1", "21", "y1", "12", "x2", "9", "y2", "12"],
      ["id", "logoutModal", 1, "modal"],
      [1, "modal-content"],
      [
        2,
        "font-family",
        "'Poppins', sans-serif",
        "color",
        "black",
        "font-size",
        "15px",
      ],
      [
        "href",
        "javascript:void(0)",
        "onclick",
        "document.getElementById('logoutModal').style.display='none'",
        1,
        "close-btn",
      ],
      [
        "href",
        "javascript:void(0)",
        "onclick",
        "window.location.href='/login'",
        1,
        "logout-btn",
      ],
      [1, "navbar-nav", "header-right", "bg-red-500"],
      [1, "nav-item", "dropdown", "notification_dropdown"],
      [
        "href",
        "#",
        "role",
        "button",
        "data-toggle",
        "dropdown",
        1,
        "nav-link",
        "d-flex",
        "align-items-center",
      ],
      [1, "fa", "fa-user-circle", "mr-2", 2, "font-size", "40px"],
      [
        1,
        "d-none",
        "d-md-inline-block",
        2,
        "color",
        "#000000",
        "font-weight",
        "500",
        "font-size",
        "20px",
      ],
      [
        1,
        "dropdown-menu",
        "dropdown-menu-right",
        2,
        "z-index",
        "999",
        "position",
        "absolute",
      ],
      ["routerLink", "/Admin/profile", 1, "dropdown-item", "ai-icon"],
      [2, "padding", "10px"],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 0)(1, "a", 1)(2, "div", 2),
        W(3, "h2", 3),
        h(4, "div", 4)(5, "div", 5),
        W(6, "img", 6),
        u(),
        h(7, "div", 7)(8, "p"),
        f(9, "Smart Assist"),
        u()()()()(),
        h(10, "div", 8),
        U("click", function () {
          return i.onToggleClick();
        }),
        h(11, "div", 9),
        W(12, "span", 10)(13, "span", 10)(14, "span", 10),
        u()()(),
        h(15, "div", 11)(16, "div", 12)(17, "nav", 13)(18, "div", 14)(
          19,
          "div",
          15
        ),
        W(20, "div", 16),
        u(),
        h(21, "ul", 17)(22, "li", 18)(23, "a", 19),
        W(24, "img", 20),
        u(),
        h(25, "div", 21)(26, "a", 22),
        yt(),
        h(27, "svg", 23),
        W(28, "path", 24)(29, "circle", 25),
        u(),
        Ur(),
        h(30, "span", 26),
        f(31, "Profile "),
        u()(),
        h(32, "a", 27),
        yt(),
        h(33, "svg", 28),
        W(34, "path", 29)(35, "polyline", 30)(36, "line", 31),
        u(),
        Ur(),
        h(37, "span"),
        f(38, "Logout"),
        u()()()()()()()()(),
        h(39, "div", 32)(40, "div", 33)(41, "h3", 34),
        f(42, "Are you sure you want to logout?"),
        u(),
        h(43, "a", 35),
        f(44, "Cancel"),
        u(),
        h(45, "a", 36),
        f(46, "Logout"),
        u()()(),
        h(47, "div", 11)(48, "div", 12)(49, "nav", 13)(50, "div", 14)(
          51,
          "div",
          15
        )(52, "div", 16),
        f(53),
        u()(),
        h(54, "ul", 37),
        W(55, "li", 38),
        h(56, "li", 18)(57, "a", 39),
        W(58, "i", 40),
        h(59, "span", 41),
        f(60),
        u()(),
        h(61, "div", 42)(62, "a", 43),
        yt(),
        h(63, "svg", 23),
        W(64, "path", 24)(65, "circle", 25),
        u(),
        Ur(),
        h(66, "span", 26),
        f(67, "Profile "),
        u()(),
        h(68, "a", 27),
        yt(),
        h(69, "svg", 28),
        W(70, "path", 29)(71, "polyline", 30)(72, "line", 31),
        u(),
        Ur(),
        h(73, "span", 44),
        f(74, "Logout"),
        u()()()()()()()()(),
        h(75, "div", 32)(76, "div", 33)(77, "h3", 34),
        f(78, "Are you sure you want to logout?"),
        u(),
        h(79, "a", 35),
        f(80, "Cancel"),
        u(),
        h(81, "a", 36),
        f(82, "Logout"),
        u()()()),
        e & 2 &&
          (g(53), B(i.currentHeading), g(7), ae(" Welcome ", i.userName, "! "));
    },
    dependencies: [mi],
    styles: [
      ".brand-title[_ngcontent-%COMP%]{display:block;max-width:170px!important;margin-left:0}.sidebar.hidden[_ngcontent-%COMP%]{transform:translate(-100%);transition:transform .3s ease}.sidebar[_ngcontent-%COMP%]{transform:translate(0)}.menu-toggle[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{padding:0!important}.logo-abbr[_ngcontent-%COMP%]{display:none}.brand-title[_ngcontent-%COMP%]{display:block;max-width:170px!important;margin-left:30px}.menu-toggle[_ngcontent-%COMP%]   .logo-abbr[_ngcontent-%COMP%]{display:block}.menu-toggle[_ngcontent-%COMP%]   .brand-title[_ngcontent-%COMP%]{display:none}.brand-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;height:60px;gap:10px}.logo-img[_ngcontent-%COMP%]{height:32px;width:auto}.brand-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;font-size:29px;white-space:nowrap;font-weight:600}@media (max-width: 1400px){.nav-control[_ngcontent-%COMP%]{top:40%!important}}@media (max-width: 767px){.brand-title[_ngcontent-%COMP%]{display:none!important}.logo-abbr[_ngcontent-%COMP%]{display:block!important}}.nav-control[_ngcontent-%COMP%]{border:1px solid #ccc;height:40px;border-radius:5px}.brand-container[_ngcontent-%COMP%]{display:flex;align-items:center;padding:12px 16px;border-radius:8px;width:100%;max-width:250px;gap:12px}.logo-section[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;background-color:#ffffff26;border-radius:6px;width:40px;height:40px;flex-shrink:0}.logo-icon[_ngcontent-%COMP%]{width:24px;height:24px;fill:#000}.brand-title[_ngcontent-%COMP%]{fill:#fff;font-size:1.125rem;font-weight:700;white-space:nowrap;margin:0;letter-spacing:-.025em}.brand-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}.logo-img[_ngcontent-%COMP%]{width:24px;height:24px;object-fit:contain}.demo-section[_ngcontent-%COMP%]{margin-bottom:30px}.demo-title[_ngcontent-%COMP%]{font-size:18px;font-weight:600;margin-bottom:15px;color:#374151}@media screen and (min-width: 1280px) and (max-width: 1600px){.brand-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:20px!important}}.modal[_ngcontent-%COMP%]{display:none;position:fixed;z-index:9999;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#00000080}.modal[_ngcontent-%COMP%]:target{display:block}.modal-content[_ngcontent-%COMP%]{background-color:#fff;margin:15% auto;padding:20px;border-radius:10px;width:300px;text-align:center;animation:_ngcontent-%COMP%_fadeIn .3s ease-in-out}@keyframes _ngcontent-%COMP%_fadeIn{0%{transform:scale(.8);opacity:0}to{transform:scale(1);opacity:1}}.close-btn[_ngcontent-%COMP%]{display:inline-block;margin-top:15px;padding:8px 16px;background-color:#ccc;color:#000;text-decoration:none;border-radius:5px}.logout-btn[_ngcontent-%COMP%]{display:inline-block;margin-top:15px;padding:8px 16px;background-color:#222fb9;color:#fff;text-decoration:none;border-radius:5px}.dropdown-item[_ngcontent-%COMP%]{cursor:pointer;display:flex;align-items:center;gap:10px;color:#000;text-decoration:none}.dropdown-item[_ngcontent-%COMP%]:hover{color:#222fb9}",
    ],
    changeDetection: 0,
  });
};
var fd = class n {
  constructor(t) {
    this.sidebarService = t;
  }
  ngOnInit() {
    this.sidebarService.isOpen$.subscribe((t) => {
      this.isSidebarOpen = t;
    });
  }
  isSidebarOpen = !0;
  toggleSidebar() {
    this.sidebarService.toggleSidebar();
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Zr));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-overview"]],
    standalone: !0,
    features: [ue],
    decls: 6,
    vars: 2,
    consts: [
      ["id", "main-wrapper"],
      [3, "sidebarToggle"],
      [1, "content-body"],
      [1, "container-fluid"],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 0)(1, "app-header", 1),
        U("sidebarToggle", function () {
          return i.toggleSidebar();
        }),
        u(),
        W(2, "app-sidebar"),
        h(3, "div", 2)(4, "div", 3),
        W(5, "router-outlet"),
        u()()()),
        e & 2 && Te("menu-toggle", !i.isSidebarOpen);
    },
    dependencies: [Gi, Js, md, Ta],
    styles: [
      ".sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:7rem}@media (min-width: 768px) and (max-width: 819px){.content-body[_ngcontent-%COMP%]{margin-left:42px!important}}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .deznav[_ngcontent-%COMP%]{width:80px}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .nav-text[_ngcontent-%COMP%]{display:none}@media (min-width: 2560px){.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:336px!important}}@media screen and (min-width: 1920px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:336px}}@media screen and (width: 1366px){.content-body[_ngcontent-%COMP%]{margin-left:4rem}}#main-wrapper[_ngcontent-%COMP%]{display:flex}.content-body[_ngcontent-%COMP%]{margin-left:250px;transition:margin-left .3s ease;width:100%}@media (min-width: 1601px){.content-body[_ngcontent-%COMP%]{margin-left:336px}}@media only screen and (min-width: 820px) and (max-width: 1279px){.content-body[_ngcontent-%COMP%]{margin-left:5rem}}.content-section[_ngcontent-%COMP%]{padding:20px;margin-top:70px}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:2rem;margin-top:20px}.performance-panel[_ngcontent-%COMP%]{flex:1;background:#f9f9f9;border-radius:8px;padding:20px;height:300px}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px}.metric-box[_ngcontent-%COMP%]{background:#fff;padding:1rem;border-radius:8px;text-align:center;box-shadow:0 2px 4px #0000001a}",
    ],
  });
};
function ul(n) {
  return (n + 0.5) | 0;
}
var Jr = (n, t, e) => Math.max(Math.min(n, e), t);
function cl(n) {
  return Jr(ul(n * 2.55), 0, 255);
}
function eo(n) {
  return Jr(ul(n * 255), 0, 255);
}
function Mr(n) {
  return Jr(ul(n / 2.55) / 100, 0, 1);
}
function Kb(n) {
  return Jr(ul(n * 100), 0, 100);
}
var xn = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    A: 10,
    B: 11,
    C: 12,
    D: 13,
    E: 14,
    F: 15,
    a: 10,
    b: 11,
    c: 12,
    d: 13,
    e: 14,
    f: 15,
  },
  Yp = [..."0123456789ABCDEF"],
  AM = (n) => Yp[n & 15],
  RM = (n) => Yp[(n & 240) >> 4] + Yp[n & 15],
  gd = (n) => (n & 240) >> 4 === (n & 15),
  FM = (n) => gd(n.r) && gd(n.g) && gd(n.b) && gd(n.a);
function NM(n) {
  var t = n.length,
    e;
  return (
    n[0] === "#" &&
      (t === 4 || t === 5
        ? (e = {
            r: 255 & (xn[n[1]] * 17),
            g: 255 & (xn[n[2]] * 17),
            b: 255 & (xn[n[3]] * 17),
            a: t === 5 ? xn[n[4]] * 17 : 255,
          })
        : (t === 7 || t === 9) &&
          (e = {
            r: (xn[n[1]] << 4) | xn[n[2]],
            g: (xn[n[3]] << 4) | xn[n[4]],
            b: (xn[n[5]] << 4) | xn[n[6]],
            a: t === 9 ? (xn[n[7]] << 4) | xn[n[8]] : 255,
          })),
    e
  );
}
var LM = (n, t) => (n < 255 ? t(n) : "");
function VM(n) {
  var t = FM(n) ? AM : RM;
  return n ? "#" + t(n.r) + t(n.g) + t(n.b) + LM(n.a, t) : void 0;
}
var BM =
  /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
function Jb(n, t, e) {
  let i = t * Math.min(e, 1 - e),
    r = (o, a = (o + n / 30) % 12) =>
      e - i * Math.max(Math.min(a - 3, 9 - a, 1), -1);
  return [r(0), r(8), r(4)];
}
function HM(n, t, e) {
  let i = (r, o = (r + n / 60) % 6) =>
    e - e * t * Math.max(Math.min(o, 4 - o, 1), 0);
  return [i(5), i(3), i(1)];
}
function jM(n, t, e) {
  let i = Jb(n, 1, 0.5),
    r;
  for (t + e > 1 && ((r = 1 / (t + e)), (t *= r), (e *= r)), r = 0; r < 3; r++)
    (i[r] *= 1 - t - e), (i[r] += t);
  return i;
}
function UM(n, t, e, i, r) {
  return n === r
    ? (t - e) / i + (t < e ? 6 : 0)
    : t === r
    ? (e - n) / i + 2
    : (n - t) / i + 4;
}
function qp(n) {
  let e = n.r / 255,
    i = n.g / 255,
    r = n.b / 255,
    o = Math.max(e, i, r),
    a = Math.min(e, i, r),
    s = (o + a) / 2,
    l,
    d,
    m;
  return (
    o !== a &&
      ((m = o - a),
      (d = s > 0.5 ? m / (2 - o - a) : m / (o + a)),
      (l = UM(e, i, r, m, o)),
      (l = l * 60 + 0.5)),
    [l | 0, d || 0, s]
  );
}
function Kp(n, t, e, i) {
  return (Array.isArray(t) ? n(t[0], t[1], t[2]) : n(t, e, i)).map(eo);
}
function Qp(n, t, e) {
  return Kp(Jb, n, t, e);
}
function zM(n, t, e) {
  return Kp(jM, n, t, e);
}
function $M(n, t, e) {
  return Kp(HM, n, t, e);
}
function ev(n) {
  return ((n % 360) + 360) % 360;
}
function WM(n) {
  let t = BM.exec(n),
    e = 255,
    i;
  if (!t) return;
  t[5] !== i && (e = t[6] ? cl(+t[5]) : eo(+t[5]));
  let r = ev(+t[2]),
    o = +t[3] / 100,
    a = +t[4] / 100;
  return (
    t[1] === "hwb"
      ? (i = zM(r, o, a))
      : t[1] === "hsv"
      ? (i = $M(r, o, a))
      : (i = Qp(r, o, a)),
    { r: i[0], g: i[1], b: i[2], a: e }
  );
}
function GM(n, t) {
  var e = qp(n);
  (e[0] = ev(e[0] + t)), (e = Qp(e)), (n.r = e[0]), (n.g = e[1]), (n.b = e[2]);
}
function YM(n) {
  if (!n) return;
  let t = qp(n),
    e = t[0],
    i = Kb(t[1]),
    r = Kb(t[2]);
  return n.a < 255
    ? `hsla(${e}, ${i}%, ${r}%, ${Mr(n.a)})`
    : `hsl(${e}, ${i}%, ${r}%)`;
}
var Qb = {
    x: "dark",
    Z: "light",
    Y: "re",
    X: "blu",
    W: "gr",
    V: "medium",
    U: "slate",
    A: "ee",
    T: "ol",
    S: "or",
    B: "ra",
    C: "lateg",
    D: "ights",
    R: "in",
    Q: "turquois",
    E: "hi",
    P: "ro",
    O: "al",
    N: "le",
    M: "de",
    L: "yello",
    F: "en",
    K: "ch",
    G: "arks",
    H: "ea",
    I: "ightg",
    J: "wh",
  },
  Xb = {
    OiceXe: "f0f8ff",
    antiquewEte: "faebd7",
    aqua: "ffff",
    aquamarRe: "7fffd4",
    azuY: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "0",
    blanKedOmond: "ffebcd",
    Xe: "ff",
    XeviTet: "8a2be2",
    bPwn: "a52a2a",
    burlywood: "deb887",
    caMtXe: "5f9ea0",
    KartYuse: "7fff00",
    KocTate: "d2691e",
    cSO: "ff7f50",
    cSnflowerXe: "6495ed",
    cSnsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "ffff",
    xXe: "8b",
    xcyan: "8b8b",
    xgTMnPd: "b8860b",
    xWay: "a9a9a9",
    xgYF: "6400",
    xgYy: "a9a9a9",
    xkhaki: "bdb76b",
    xmagFta: "8b008b",
    xTivegYF: "556b2f",
    xSange: "ff8c00",
    xScEd: "9932cc",
    xYd: "8b0000",
    xsOmon: "e9967a",
    xsHgYF: "8fbc8f",
    xUXe: "483d8b",
    xUWay: "2f4f4f",
    xUgYy: "2f4f4f",
    xQe: "ced1",
    xviTet: "9400d3",
    dAppRk: "ff1493",
    dApskyXe: "bfff",
    dimWay: "696969",
    dimgYy: "696969",
    dodgerXe: "1e90ff",
    fiYbrick: "b22222",
    flSOwEte: "fffaf0",
    foYstWAn: "228b22",
    fuKsia: "ff00ff",
    gaRsbSo: "dcdcdc",
    ghostwEte: "f8f8ff",
    gTd: "ffd700",
    gTMnPd: "daa520",
    Way: "808080",
    gYF: "8000",
    gYFLw: "adff2f",
    gYy: "808080",
    honeyMw: "f0fff0",
    hotpRk: "ff69b4",
    RdianYd: "cd5c5c",
    Rdigo: "4b0082",
    ivSy: "fffff0",
    khaki: "f0e68c",
    lavFMr: "e6e6fa",
    lavFMrXsh: "fff0f5",
    lawngYF: "7cfc00",
    NmoncEffon: "fffacd",
    ZXe: "add8e6",
    ZcSO: "f08080",
    Zcyan: "e0ffff",
    ZgTMnPdLw: "fafad2",
    ZWay: "d3d3d3",
    ZgYF: "90ee90",
    ZgYy: "d3d3d3",
    ZpRk: "ffb6c1",
    ZsOmon: "ffa07a",
    ZsHgYF: "20b2aa",
    ZskyXe: "87cefa",
    ZUWay: "778899",
    ZUgYy: "778899",
    ZstAlXe: "b0c4de",
    ZLw: "ffffe0",
    lime: "ff00",
    limegYF: "32cd32",
    lRF: "faf0e6",
    magFta: "ff00ff",
    maPon: "800000",
    VaquamarRe: "66cdaa",
    VXe: "cd",
    VScEd: "ba55d3",
    VpurpN: "9370db",
    VsHgYF: "3cb371",
    VUXe: "7b68ee",
    VsprRggYF: "fa9a",
    VQe: "48d1cc",
    VviTetYd: "c71585",
    midnightXe: "191970",
    mRtcYam: "f5fffa",
    mistyPse: "ffe4e1",
    moccasR: "ffe4b5",
    navajowEte: "ffdead",
    navy: "80",
    Tdlace: "fdf5e6",
    Tive: "808000",
    TivedBb: "6b8e23",
    Sange: "ffa500",
    SangeYd: "ff4500",
    ScEd: "da70d6",
    pOegTMnPd: "eee8aa",
    pOegYF: "98fb98",
    pOeQe: "afeeee",
    pOeviTetYd: "db7093",
    papayawEp: "ffefd5",
    pHKpuff: "ffdab9",
    peru: "cd853f",
    pRk: "ffc0cb",
    plum: "dda0dd",
    powMrXe: "b0e0e6",
    purpN: "800080",
    YbeccapurpN: "663399",
    Yd: "ff0000",
    Psybrown: "bc8f8f",
    PyOXe: "4169e1",
    saddNbPwn: "8b4513",
    sOmon: "fa8072",
    sandybPwn: "f4a460",
    sHgYF: "2e8b57",
    sHshell: "fff5ee",
    siFna: "a0522d",
    silver: "c0c0c0",
    skyXe: "87ceeb",
    UXe: "6a5acd",
    UWay: "708090",
    UgYy: "708090",
    snow: "fffafa",
    sprRggYF: "ff7f",
    stAlXe: "4682b4",
    tan: "d2b48c",
    teO: "8080",
    tEstN: "d8bfd8",
    tomato: "ff6347",
    Qe: "40e0d0",
    viTet: "ee82ee",
    JHt: "f5deb3",
    wEte: "ffffff",
    wEtesmoke: "f5f5f5",
    Lw: "ffff00",
    LwgYF: "9acd32",
  };
function qM() {
  let n = {},
    t = Object.keys(Xb),
    e = Object.keys(Qb),
    i,
    r,
    o,
    a,
    s;
  for (i = 0; i < t.length; i++) {
    for (a = s = t[i], r = 0; r < e.length; r++)
      (o = e[r]), (s = s.replace(o, Qb[o]));
    (o = parseInt(Xb[a], 16)),
      (n[s] = [(o >> 16) & 255, (o >> 8) & 255, o & 255]);
  }
  return n;
}
var _d;
function KM(n) {
  _d || ((_d = qM()), (_d.transparent = [0, 0, 0, 0]));
  let t = _d[n.toLowerCase()];
  return t && { r: t[0], g: t[1], b: t[2], a: t.length === 4 ? t[3] : 255 };
}
var QM =
  /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
function XM(n) {
  let t = QM.exec(n),
    e = 255,
    i,
    r,
    o;
  if (t) {
    if (t[7] !== i) {
      let a = +t[7];
      e = t[8] ? cl(a) : Jr(a * 255, 0, 255);
    }
    return (
      (i = +t[1]),
      (r = +t[3]),
      (o = +t[5]),
      (i = 255 & (t[2] ? cl(i) : Jr(i, 0, 255))),
      (r = 255 & (t[4] ? cl(r) : Jr(r, 0, 255))),
      (o = 255 & (t[6] ? cl(o) : Jr(o, 0, 255))),
      { r: i, g: r, b: o, a: e }
    );
  }
}
function ZM(n) {
  return (
    n &&
    (n.a < 255
      ? `rgba(${n.r}, ${n.g}, ${n.b}, ${Mr(n.a)})`
      : `rgb(${n.r}, ${n.g}, ${n.b})`)
  );
}
var Gp = (n) =>
    n <= 0.0031308 ? n * 12.92 : Math.pow(n, 1 / 2.4) * 1.055 - 0.055,
  Ea = (n) => (n <= 0.04045 ? n / 12.92 : Math.pow((n + 0.055) / 1.055, 2.4));
function JM(n, t, e) {
  let i = Ea(Mr(n.r)),
    r = Ea(Mr(n.g)),
    o = Ea(Mr(n.b));
  return {
    r: eo(Gp(i + e * (Ea(Mr(t.r)) - i))),
    g: eo(Gp(r + e * (Ea(Mr(t.g)) - r))),
    b: eo(Gp(o + e * (Ea(Mr(t.b)) - o))),
    a: n.a + e * (t.a - n.a),
  };
}
function bd(n, t, e) {
  if (n) {
    let i = qp(n);
    (i[t] = Math.max(0, Math.min(i[t] + i[t] * e, t === 0 ? 360 : 1))),
      (i = Qp(i)),
      (n.r = i[0]),
      (n.g = i[1]),
      (n.b = i[2]);
  }
}
function tv(n, t) {
  return n && Object.assign(t || {}, n);
}
function Zb(n) {
  var t = { r: 0, g: 0, b: 0, a: 255 };
  return (
    Array.isArray(n)
      ? n.length >= 3 &&
        ((t = { r: n[0], g: n[1], b: n[2], a: 255 }),
        n.length > 3 && (t.a = eo(n[3])))
      : ((t = tv(n, { r: 0, g: 0, b: 0, a: 1 })), (t.a = eo(t.a))),
    t
  );
}
function eT(n) {
  return n.charAt(0) === "r" ? XM(n) : WM(n);
}
var dl = class n {
  constructor(t) {
    if (t instanceof n) return t;
    let e = typeof t,
      i;
    e === "object"
      ? (i = Zb(t))
      : e === "string" && (i = NM(t) || KM(t) || eT(t)),
      (this._rgb = i),
      (this._valid = !!i);
  }
  get valid() {
    return this._valid;
  }
  get rgb() {
    var t = tv(this._rgb);
    return t && (t.a = Mr(t.a)), t;
  }
  set rgb(t) {
    this._rgb = Zb(t);
  }
  rgbString() {
    return this._valid ? ZM(this._rgb) : void 0;
  }
  hexString() {
    return this._valid ? VM(this._rgb) : void 0;
  }
  hslString() {
    return this._valid ? YM(this._rgb) : void 0;
  }
  mix(t, e) {
    if (t) {
      let i = this.rgb,
        r = t.rgb,
        o,
        a = e === o ? 0.5 : e,
        s = 2 * a - 1,
        l = i.a - r.a,
        d = ((s * l === -1 ? s : (s + l) / (1 + s * l)) + 1) / 2;
      (o = 1 - d),
        (i.r = 255 & (d * i.r + o * r.r + 0.5)),
        (i.g = 255 & (d * i.g + o * r.g + 0.5)),
        (i.b = 255 & (d * i.b + o * r.b + 0.5)),
        (i.a = a * i.a + (1 - a) * r.a),
        (this.rgb = i);
    }
    return this;
  }
  interpolate(t, e) {
    return t && (this._rgb = JM(this._rgb, t._rgb, e)), this;
  }
  clone() {
    return new n(this.rgb);
  }
  alpha(t) {
    return (this._rgb.a = eo(t)), this;
  }
  clearer(t) {
    let e = this._rgb;
    return (e.a *= 1 - t), this;
  }
  greyscale() {
    let t = this._rgb,
      e = ul(t.r * 0.3 + t.g * 0.59 + t.b * 0.11);
    return (t.r = t.g = t.b = e), this;
  }
  opaquer(t) {
    let e = this._rgb;
    return (e.a *= 1 + t), this;
  }
  negate() {
    let t = this._rgb;
    return (t.r = 255 - t.r), (t.g = 255 - t.g), (t.b = 255 - t.b), this;
  }
  lighten(t) {
    return bd(this._rgb, 2, t), this;
  }
  darken(t) {
    return bd(this._rgb, 2, -t), this;
  }
  saturate(t) {
    return bd(this._rgb, 1, t), this;
  }
  desaturate(t) {
    return bd(this._rgb, 1, -t), this;
  }
  rotate(t) {
    return GM(this._rgb, t), this;
  }
};
function or() {}
var hv = (() => {
  let n = 0;
  return () => n++;
})();
function tt(n) {
  return n == null;
}
function Mt(n) {
  if (Array.isArray && Array.isArray(n)) return !0;
  let t = Object.prototype.toString.call(n);
  return t.slice(0, 7) === "[object" && t.slice(-6) === "Array]";
}
function ot(n) {
  return n !== null && Object.prototype.toString.call(n) === "[object Object]";
}
function Ht(n) {
  return (typeof n == "number" || n instanceof Number) && isFinite(+n);
}
function Yi(n, t) {
  return Ht(n) ? n : t;
}
function We(n, t) {
  return typeof n > "u" ? t : n;
}
var pv = (n, t) =>
    typeof n == "string" && n.endsWith("%") ? parseFloat(n) / 100 : +n / t,
  em = (n, t) =>
    typeof n == "string" && n.endsWith("%") ? (parseFloat(n) / 100) * t : +n;
function wt(n, t, e) {
  if (n && typeof n.call == "function") return n.apply(e, t);
}
function gt(n, t, e, i) {
  let r, o, a;
  if (Mt(n))
    if (((o = n.length), i)) for (r = o - 1; r >= 0; r--) t.call(e, n[r], r);
    else for (r = 0; r < o; r++) t.call(e, n[r], r);
  else if (ot(n))
    for (a = Object.keys(n), o = a.length, r = 0; r < o; r++)
      t.call(e, n[a[r]], a[r]);
}
function ml(n, t) {
  let e, i, r, o;
  if (!n || !t || n.length !== t.length) return !1;
  for (e = 0, i = n.length; e < i; ++e)
    if (
      ((r = n[e]),
      (o = t[e]),
      r.datasetIndex !== o.datasetIndex || r.index !== o.index)
    )
      return !1;
  return !0;
}
function wd(n) {
  if (Mt(n)) return n.map(wd);
  if (ot(n)) {
    let t = Object.create(null),
      e = Object.keys(n),
      i = e.length,
      r = 0;
    for (; r < i; ++r) t[e[r]] = wd(n[e[r]]);
    return t;
  }
  return n;
}
function mv(n) {
  return ["__proto__", "prototype", "constructor"].indexOf(n) === -1;
}
function tT(n, t, e, i) {
  if (!mv(n)) return;
  let r = t[n],
    o = e[n];
  ot(r) && ot(o) ? Ia(r, o, i) : (t[n] = wd(o));
}
function Ia(n, t, e) {
  let i = Mt(t) ? t : [t],
    r = i.length;
  if (!ot(n)) return n;
  e = e || {};
  let o = e.merger || tT,
    a;
  for (let s = 0; s < r; ++s) {
    if (((a = i[s]), !ot(a))) continue;
    let l = Object.keys(a);
    for (let d = 0, m = l.length; d < m; ++d) o(l[d], n, a, e);
  }
  return n;
}
function Pa(n, t) {
  return Ia(n, t, { merger: iT });
}
function iT(n, t, e) {
  if (!mv(n)) return;
  let i = t[n],
    r = e[n];
  ot(i) && ot(r)
    ? Pa(i, r)
    : Object.prototype.hasOwnProperty.call(t, n) || (t[n] = wd(r));
}
var iv = { "": (n) => n, x: (n) => n.x, y: (n) => n.y };
function nT(n) {
  let t = n.split("."),
    e = [],
    i = "";
  for (let r of t)
    (i += r),
      i.endsWith("\\") ? (i = i.slice(0, -1) + ".") : (e.push(i), (i = ""));
  return e;
}
function rT(n) {
  let t = nT(n);
  return (e) => {
    for (let i of t) {
      if (i === "") break;
      e = e && e[i];
    }
    return e;
  };
}
function kr(n, t) {
  return (iv[t] || (iv[t] = rT(t)))(n);
}
function Td(n) {
  return n.charAt(0).toUpperCase() + n.slice(1);
}
var Aa = (n) => typeof n < "u",
  Tr = (n) => typeof n == "function",
  tm = (n, t) => {
    if (n.size !== t.size) return !1;
    for (let e of n) if (!t.has(e)) return !1;
    return !0;
  };
function fv(n) {
  return n.type === "mouseup" || n.type === "click" || n.type === "contextmenu";
}
var ut = Math.PI,
  Tt = 2 * ut,
  oT = Tt + ut,
  Dd = Number.POSITIVE_INFINITY,
  aT = ut / 180,
  qt = ut / 2,
  Oo = ut / 4,
  nv = (ut * 2) / 3,
  Er = Math.log10,
  Fn = Math.sign;
function Ra(n, t, e) {
  return Math.abs(n - t) < e;
}
function im(n) {
  let t = Math.round(n);
  n = Ra(n, t, n / 1e3) ? t : n;
  let e = Math.pow(10, Math.floor(Er(n))),
    i = n / e;
  return (i <= 1 ? 1 : i <= 2 ? 2 : i <= 5 ? 5 : 10) * e;
}
function gv(n) {
  let t = [],
    e = Math.sqrt(n),
    i;
  for (i = 1; i < e; i++) n % i === 0 && (t.push(i), t.push(n / i));
  return e === (e | 0) && t.push(e), t.sort((r, o) => r - o).pop(), t;
}
function sT(n) {
  return (
    typeof n == "symbol" ||
    (typeof n == "object" &&
      n !== null &&
      !(Symbol.toPrimitive in n || "toString" in n || "valueOf" in n))
  );
}
function Ro(n) {
  return !sT(n) && !isNaN(parseFloat(n)) && isFinite(n);
}
function _v(n, t) {
  let e = Math.round(n);
  return e - t <= n && e + t >= n;
}
function nm(n, t, e) {
  let i, r, o;
  for (i = 0, r = n.length; i < r; i++)
    (o = n[i][e]),
      isNaN(o) || ((t.min = Math.min(t.min, o)), (t.max = Math.max(t.max, o)));
}
function Cn(n) {
  return n * (ut / 180);
}
function Ed(n) {
  return n * (180 / ut);
}
function rm(n) {
  if (!Ht(n)) return;
  let t = 1,
    e = 0;
  for (; Math.round(n * t) / t !== n; ) (t *= 10), e++;
  return e;
}
function om(n, t) {
  let e = t.x - n.x,
    i = t.y - n.y,
    r = Math.sqrt(e * e + i * i),
    o = Math.atan2(i, e);
  return o < -0.5 * ut && (o += Tt), { angle: o, distance: r };
}
function Sd(n, t) {
  return Math.sqrt(Math.pow(t.x - n.x, 2) + Math.pow(t.y - n.y, 2));
}
function lT(n, t) {
  return ((n - t + oT) % Tt) - ut;
}
function vi(n) {
  return ((n % Tt) + Tt) % Tt;
}
function Fa(n, t, e, i) {
  let r = vi(n),
    o = vi(t),
    a = vi(e),
    s = vi(o - r),
    l = vi(a - r),
    d = vi(r - o),
    m = vi(r - a);
  return r === o || r === a || (i && o === a) || (s > l && d < m);
}
function di(n, t, e) {
  return Math.max(t, Math.min(e, n));
}
function bv(n) {
  return di(n, -32768, 32767);
}
function ar(n, t, e, i = 1e-6) {
  return n >= Math.min(t, e) - i && n <= Math.max(t, e) + i;
}
function kd(n, t, e) {
  e = e || ((a) => n[a] < t);
  let i = n.length - 1,
    r = 0,
    o;
  for (; i - r > 1; ) (o = (r + i) >> 1), e(o) ? (r = o) : (i = o);
  return { lo: r, hi: i };
}
var nr = (n, t, e, i) =>
    kd(
      n,
      e,
      i
        ? (r) => {
            let o = n[r][t];
            return o < e || (o === e && n[r + 1][t] === e);
          }
        : (r) => n[r][t] < e
    ),
  vv = (n, t, e) => kd(n, e, (i) => n[i][t] >= e);
function yv(n, t, e) {
  let i = 0,
    r = n.length;
  for (; i < r && n[i] < t; ) i++;
  for (; r > i && n[r - 1] > e; ) r--;
  return i > 0 || r < n.length ? n.slice(i, r) : n;
}
var xv = ["push", "pop", "shift", "splice", "unshift"];
function Cv(n, t) {
  if (n._chartjs) {
    n._chartjs.listeners.push(t);
    return;
  }
  Object.defineProperty(n, "_chartjs", {
    configurable: !0,
    enumerable: !1,
    value: { listeners: [t] },
  }),
    xv.forEach((e) => {
      let i = "_onData" + Td(e),
        r = n[e];
      Object.defineProperty(n, e, {
        configurable: !0,
        enumerable: !1,
        value(...o) {
          let a = r.apply(this, o);
          return (
            n._chartjs.listeners.forEach((s) => {
              typeof s[i] == "function" && s[i](...o);
            }),
            a
          );
        },
      });
    });
}
function am(n, t) {
  let e = n._chartjs;
  if (!e) return;
  let i = e.listeners,
    r = i.indexOf(t);
  r !== -1 && i.splice(r, 1),
    !(i.length > 0) &&
      (xv.forEach((o) => {
        delete n[o];
      }),
      delete n._chartjs);
}
function sm(n) {
  let t = new Set(n);
  return t.size === n.length ? n : Array.from(t);
}
var lm = (function () {
  return typeof window > "u"
    ? function (n) {
        return n();
      }
    : window.requestAnimationFrame;
})();
function cm(n, t) {
  let e = [],
    i = !1;
  return function (...r) {
    (e = r),
      i ||
        ((i = !0),
        lm.call(window, () => {
          (i = !1), n.apply(t, e);
        }));
  };
}
function wv(n, t) {
  let e;
  return function (...i) {
    return (
      t ? (clearTimeout(e), (e = setTimeout(n, t, i))) : n.apply(this, i), t
    );
  };
}
var Id = (n) => (n === "start" ? "left" : n === "end" ? "right" : "center"),
  yi = (n, t, e) => (n === "start" ? t : n === "end" ? e : (t + e) / 2),
  Dv = (n, t, e, i) =>
    n === (i ? "left" : "right") ? e : n === "center" ? (t + e) / 2 : t;
function dm(n, t, e) {
  let i = t.length,
    r = 0,
    o = i;
  if (n._sorted) {
    let { iScale: a, vScale: s, _parsed: l } = n,
      d = n.dataset && n.dataset.options ? n.dataset.options.spanGaps : null,
      m = a.axis,
      { min: v, max: x, minDefined: C, maxDefined: S } = a.getUserBounds();
    if (C) {
      if (
        ((r = Math.min(
          nr(l, m, v).lo,
          e ? i : nr(t, m, a.getPixelForValue(v)).lo
        )),
        d)
      ) {
        let T = l
          .slice(0, r + 1)
          .reverse()
          .findIndex((k) => !tt(k[s.axis]));
        r -= Math.max(0, T);
      }
      r = di(r, 0, i - 1);
    }
    if (S) {
      let T = Math.max(
        nr(l, a.axis, x, !0).hi + 1,
        e ? 0 : nr(t, m, a.getPixelForValue(x), !0).hi + 1
      );
      if (d) {
        let k = l.slice(T - 1).findIndex((P) => !tt(P[s.axis]));
        T += Math.max(0, k);
      }
      o = di(T, r, i) - r;
    } else o = i - r;
  }
  return { start: r, count: o };
}
function um(n) {
  let { xScale: t, yScale: e, _scaleRanges: i } = n,
    r = { xmin: t.min, xmax: t.max, ymin: e.min, ymax: e.max };
  if (!i) return (n._scaleRanges = r), !0;
  let o =
    i.xmin !== t.min ||
    i.xmax !== t.max ||
    i.ymin !== e.min ||
    i.ymax !== e.max;
  return Object.assign(i, r), o;
}
var vd = (n) => n === 0 || n === 1,
  rv = (n, t, e) =>
    -(Math.pow(2, 10 * (n -= 1)) * Math.sin(((n - t) * Tt) / e)),
  ov = (n, t, e) => Math.pow(2, -10 * n) * Math.sin(((n - t) * Tt) / e) + 1,
  ka = {
    linear: (n) => n,
    easeInQuad: (n) => n * n,
    easeOutQuad: (n) => -n * (n - 2),
    easeInOutQuad: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n : -0.5 * (--n * (n - 2) - 1),
    easeInCubic: (n) => n * n * n,
    easeOutCubic: (n) => (n -= 1) * n * n + 1,
    easeInOutCubic: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n * n : 0.5 * ((n -= 2) * n * n + 2),
    easeInQuart: (n) => n * n * n * n,
    easeOutQuart: (n) => -((n -= 1) * n * n * n - 1),
    easeInOutQuart: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n * n * n : -0.5 * ((n -= 2) * n * n * n - 2),
    easeInQuint: (n) => n * n * n * n * n,
    easeOutQuint: (n) => (n -= 1) * n * n * n * n + 1,
    easeInOutQuint: (n) =>
      (n /= 0.5) < 1
        ? 0.5 * n * n * n * n * n
        : 0.5 * ((n -= 2) * n * n * n * n + 2),
    easeInSine: (n) => -Math.cos(n * qt) + 1,
    easeOutSine: (n) => Math.sin(n * qt),
    easeInOutSine: (n) => -0.5 * (Math.cos(ut * n) - 1),
    easeInExpo: (n) => (n === 0 ? 0 : Math.pow(2, 10 * (n - 1))),
    easeOutExpo: (n) => (n === 1 ? 1 : -Math.pow(2, -10 * n) + 1),
    easeInOutExpo: (n) =>
      vd(n)
        ? n
        : n < 0.5
        ? 0.5 * Math.pow(2, 10 * (n * 2 - 1))
        : 0.5 * (-Math.pow(2, -10 * (n * 2 - 1)) + 2),
    easeInCirc: (n) => (n >= 1 ? n : -(Math.sqrt(1 - n * n) - 1)),
    easeOutCirc: (n) => Math.sqrt(1 - (n -= 1) * n),
    easeInOutCirc: (n) =>
      (n /= 0.5) < 1
        ? -0.5 * (Math.sqrt(1 - n * n) - 1)
        : 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1),
    easeInElastic: (n) => (vd(n) ? n : rv(n, 0.075, 0.3)),
    easeOutElastic: (n) => (vd(n) ? n : ov(n, 0.075, 0.3)),
    easeInOutElastic(n) {
      return vd(n)
        ? n
        : n < 0.5
        ? 0.5 * rv(n * 2, 0.1125, 0.45)
        : 0.5 + 0.5 * ov(n * 2 - 1, 0.1125, 0.45);
    },
    easeInBack(n) {
      return n * n * ((1.70158 + 1) * n - 1.70158);
    },
    easeOutBack(n) {
      return (n -= 1) * n * ((1.70158 + 1) * n + 1.70158) + 1;
    },
    easeInOutBack(n) {
      let t = 1.70158;
      return (n /= 0.5) < 1
        ? 0.5 * (n * n * (((t *= 1.525) + 1) * n - t))
        : 0.5 * ((n -= 2) * n * (((t *= 1.525) + 1) * n + t) + 2);
    },
    easeInBounce: (n) => 1 - ka.easeOutBounce(1 - n),
    easeOutBounce(n) {
      return n < 1 / 2.75
        ? 7.5625 * n * n
        : n < 2 / 2.75
        ? 7.5625 * (n -= 1.5 / 2.75) * n + 0.75
        : n < 2.5 / 2.75
        ? 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375
        : 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;
    },
    easeInOutBounce: (n) =>
      n < 0.5
        ? ka.easeInBounce(n * 2) * 0.5
        : ka.easeOutBounce(n * 2 - 1) * 0.5 + 0.5,
  };
function hm(n) {
  if (n && typeof n == "object") {
    let t = n.toString();
    return t === "[object CanvasPattern]" || t === "[object CanvasGradient]";
  }
  return !1;
}
function pm(n) {
  return hm(n) ? n : new dl(n);
}
function Xp(n) {
  return hm(n) ? n : new dl(n).saturate(0.5).darken(0.1).hexString();
}
var cT = ["x", "y", "borderWidth", "radius", "tension"],
  dT = ["color", "borderColor", "backgroundColor"];
function uT(n) {
  n.set("animation", {
    delay: void 0,
    duration: 1e3,
    easing: "easeOutQuart",
    fn: void 0,
    from: void 0,
    loop: void 0,
    to: void 0,
    type: void 0,
  }),
    n.describe("animation", {
      _fallback: !1,
      _indexable: !1,
      _scriptable: (t) =>
        t !== "onProgress" && t !== "onComplete" && t !== "fn",
    }),
    n.set("animations", {
      colors: { type: "color", properties: dT },
      numbers: { type: "number", properties: cT },
    }),
    n.describe("animations", { _fallback: "animation" }),
    n.set("transitions", {
      active: { animation: { duration: 400 } },
      resize: { animation: { duration: 0 } },
      show: {
        animations: {
          colors: { from: "transparent" },
          visible: { type: "boolean", duration: 0 },
        },
      },
      hide: {
        animations: {
          colors: { to: "transparent" },
          visible: { type: "boolean", easing: "linear", fn: (t) => t | 0 },
        },
      },
    });
}
function hT(n) {
  n.set("layout", {
    autoPadding: !0,
    padding: { top: 0, right: 0, bottom: 0, left: 0 },
  });
}
var av = new Map();
function pT(n, t) {
  t = t || {};
  let e = n + JSON.stringify(t),
    i = av.get(e);
  return i || ((i = new Intl.NumberFormat(n, t)), av.set(e, i)), i;
}
function Na(n, t, e) {
  return pT(t, e).format(n);
}
var Sv = {
  values(n) {
    return Mt(n) ? n : "" + n;
  },
  numeric(n, t, e) {
    if (n === 0) return "0";
    let i = this.chart.options.locale,
      r,
      o = n;
    if (e.length > 1) {
      let d = Math.max(Math.abs(e[0].value), Math.abs(e[e.length - 1].value));
      (d < 1e-4 || d > 1e15) && (r = "scientific"), (o = mT(n, e));
    }
    let a = Er(Math.abs(o)),
      s = isNaN(a) ? 1 : Math.max(Math.min(-1 * Math.floor(a), 20), 0),
      l = { notation: r, minimumFractionDigits: s, maximumFractionDigits: s };
    return Object.assign(l, this.options.ticks.format), Na(n, i, l);
  },
  logarithmic(n, t, e) {
    if (n === 0) return "0";
    let i = e[t].significand || n / Math.pow(10, Math.floor(Er(n)));
    return [1, 2, 3, 5, 10, 15].includes(i) || t > 0.8 * e.length
      ? Sv.numeric.call(this, n, t, e)
      : "";
  },
};
function mT(n, t) {
  let e = t.length > 3 ? t[2].value - t[1].value : t[1].value - t[0].value;
  return Math.abs(e) >= 1 && n !== Math.floor(n) && (e = n - Math.floor(n)), e;
}
var fl = { formatters: Sv };
function fT(n) {
  n.set("scale", {
    display: !0,
    offset: !1,
    reverse: !1,
    beginAtZero: !1,
    bounds: "ticks",
    clip: !0,
    grace: 0,
    grid: {
      display: !0,
      lineWidth: 1,
      drawOnChartArea: !0,
      drawTicks: !0,
      tickLength: 8,
      tickWidth: (t, e) => e.lineWidth,
      tickColor: (t, e) => e.color,
      offset: !1,
    },
    border: { display: !0, dash: [], dashOffset: 0, width: 1 },
    title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
    ticks: {
      minRotation: 0,
      maxRotation: 50,
      mirror: !1,
      textStrokeWidth: 0,
      textStrokeColor: "",
      padding: 3,
      display: !0,
      autoSkip: !0,
      autoSkipPadding: 3,
      labelOffset: 0,
      callback: fl.formatters.values,
      minor: {},
      major: {},
      align: "center",
      crossAlign: "near",
      showLabelBackdrop: !1,
      backdropColor: "rgba(255, 255, 255, 0.75)",
      backdropPadding: 2,
    },
  }),
    n.route("scale.ticks", "color", "", "color"),
    n.route("scale.grid", "color", "", "borderColor"),
    n.route("scale.border", "color", "", "borderColor"),
    n.route("scale.title", "color", "", "color"),
    n.describe("scale", {
      _fallback: !1,
      _scriptable: (t) =>
        !t.startsWith("before") &&
        !t.startsWith("after") &&
        t !== "callback" &&
        t !== "parser",
      _indexable: (t) =>
        t !== "borderDash" && t !== "tickBorderDash" && t !== "dash",
    }),
    n.describe("scales", { _fallback: "scale" }),
    n.describe("scale.ticks", {
      _scriptable: (t) => t !== "backdropPadding" && t !== "callback",
      _indexable: (t) => t !== "backdropPadding",
    });
}
var io = Object.create(null),
  Od = Object.create(null);
function hl(n, t) {
  if (!t) return n;
  let e = t.split(".");
  for (let i = 0, r = e.length; i < r; ++i) {
    let o = e[i];
    n = n[o] || (n[o] = Object.create(null));
  }
  return n;
}
function Zp(n, t, e) {
  return typeof t == "string" ? Ia(hl(n, t), e) : Ia(hl(n, ""), t);
}
var Jp = class {
    constructor(t, e) {
      (this.animation = void 0),
        (this.backgroundColor = "rgba(0,0,0,0.1)"),
        (this.borderColor = "rgba(0,0,0,0.1)"),
        (this.color = "#666"),
        (this.datasets = {}),
        (this.devicePixelRatio = (i) => i.chart.platform.getDevicePixelRatio()),
        (this.elements = {}),
        (this.events = [
          "mousemove",
          "mouseout",
          "click",
          "touchstart",
          "touchmove",
        ]),
        (this.font = {
          family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
          size: 12,
          style: "normal",
          lineHeight: 1.2,
          weight: null,
        }),
        (this.hover = {}),
        (this.hoverBackgroundColor = (i, r) => Xp(r.backgroundColor)),
        (this.hoverBorderColor = (i, r) => Xp(r.borderColor)),
        (this.hoverColor = (i, r) => Xp(r.color)),
        (this.indexAxis = "x"),
        (this.interaction = {
          mode: "nearest",
          intersect: !0,
          includeInvisible: !1,
        }),
        (this.maintainAspectRatio = !0),
        (this.onHover = null),
        (this.onClick = null),
        (this.parsing = !0),
        (this.plugins = {}),
        (this.responsive = !0),
        (this.scale = void 0),
        (this.scales = {}),
        (this.showLine = !0),
        (this.drawActiveElementsOnTop = !0),
        this.describe(t),
        this.apply(e);
    }
    set(t, e) {
      return Zp(this, t, e);
    }
    get(t) {
      return hl(this, t);
    }
    describe(t, e) {
      return Zp(Od, t, e);
    }
    override(t, e) {
      return Zp(io, t, e);
    }
    route(t, e, i, r) {
      let o = hl(this, t),
        a = hl(this, i),
        s = "_" + e;
      Object.defineProperties(o, {
        [s]: { value: o[e], writable: !0 },
        [e]: {
          enumerable: !0,
          get() {
            let l = this[s],
              d = a[r];
            return ot(l) ? Object.assign({}, d, l) : We(l, d);
          },
          set(l) {
            this[s] = l;
          },
        },
      });
    }
    apply(t) {
      t.forEach((e) => e(this));
    }
  },
  kt = new Jp(
    {
      _scriptable: (n) => !n.startsWith("on"),
      _indexable: (n) => n !== "events",
      hover: { _fallback: "interaction" },
      interaction: { _scriptable: !1, _indexable: !1 },
    },
    [uT, hT, fT]
  );
function gT(n) {
  return !n || tt(n.size) || tt(n.family)
    ? null
    : (n.style ? n.style + " " : "") +
        (n.weight ? n.weight + " " : "") +
        n.size +
        "px " +
        n.family;
}
function pl(n, t, e, i, r) {
  let o = t[r];
  return (
    o || ((o = t[r] = n.measureText(r).width), e.push(r)), o > i && (i = o), i
  );
}
function Mv(n, t, e, i) {
  i = i || {};
  let r = (i.data = i.data || {}),
    o = (i.garbageCollect = i.garbageCollect || []);
  i.font !== t &&
    ((r = i.data = {}), (o = i.garbageCollect = []), (i.font = t)),
    n.save(),
    (n.font = t);
  let a = 0,
    s = e.length,
    l,
    d,
    m,
    v,
    x;
  for (l = 0; l < s; l++)
    if (((v = e[l]), v != null && !Mt(v))) a = pl(n, r, o, a, v);
    else if (Mt(v))
      for (d = 0, m = v.length; d < m; d++)
        (x = v[d]), x != null && !Mt(x) && (a = pl(n, r, o, a, x));
  n.restore();
  let C = o.length / 2;
  if (C > e.length) {
    for (l = 0; l < C; l++) delete r[o[l]];
    o.splice(0, C);
  }
  return a;
}
function no(n, t, e) {
  let i = n.currentDevicePixelRatio,
    r = e !== 0 ? Math.max(e / 2, 0.5) : 0;
  return Math.round((t - r) * i) / i + r;
}
function mm(n, t) {
  (!t && !n) ||
    ((t = t || n.getContext("2d")),
    t.save(),
    t.resetTransform(),
    t.clearRect(0, 0, n.width, n.height),
    t.restore());
}
function Pd(n, t, e, i) {
  fm(n, t, e, i, null);
}
function fm(n, t, e, i, r) {
  let o,
    a,
    s,
    l,
    d,
    m,
    v,
    x,
    C = t.pointStyle,
    S = t.rotation,
    T = t.radius,
    k = (S || 0) * aT;
  if (
    C &&
    typeof C == "object" &&
    ((o = C.toString()),
    o === "[object HTMLImageElement]" || o === "[object HTMLCanvasElement]")
  ) {
    n.save(),
      n.translate(e, i),
      n.rotate(k),
      n.drawImage(C, -C.width / 2, -C.height / 2, C.width, C.height),
      n.restore();
    return;
  }
  if (!(isNaN(T) || T <= 0)) {
    switch ((n.beginPath(), C)) {
      default:
        r ? n.ellipse(e, i, r / 2, T, 0, 0, Tt) : n.arc(e, i, T, 0, Tt),
          n.closePath();
        break;
      case "triangle":
        (m = r ? r / 2 : T),
          n.moveTo(e + Math.sin(k) * m, i - Math.cos(k) * T),
          (k += nv),
          n.lineTo(e + Math.sin(k) * m, i - Math.cos(k) * T),
          (k += nv),
          n.lineTo(e + Math.sin(k) * m, i - Math.cos(k) * T),
          n.closePath();
        break;
      case "rectRounded":
        (d = T * 0.516),
          (l = T - d),
          (a = Math.cos(k + Oo) * l),
          (v = Math.cos(k + Oo) * (r ? r / 2 - d : l)),
          (s = Math.sin(k + Oo) * l),
          (x = Math.sin(k + Oo) * (r ? r / 2 - d : l)),
          n.arc(e - v, i - s, d, k - ut, k - qt),
          n.arc(e + x, i - a, d, k - qt, k),
          n.arc(e + v, i + s, d, k, k + qt),
          n.arc(e - x, i + a, d, k + qt, k + ut),
          n.closePath();
        break;
      case "rect":
        if (!S) {
          (l = Math.SQRT1_2 * T),
            (m = r ? r / 2 : l),
            n.rect(e - m, i - l, 2 * m, 2 * l);
          break;
        }
        k += Oo;
      case "rectRot":
        (v = Math.cos(k) * (r ? r / 2 : T)),
          (a = Math.cos(k) * T),
          (s = Math.sin(k) * T),
          (x = Math.sin(k) * (r ? r / 2 : T)),
          n.moveTo(e - v, i - s),
          n.lineTo(e + x, i - a),
          n.lineTo(e + v, i + s),
          n.lineTo(e - x, i + a),
          n.closePath();
        break;
      case "crossRot":
        k += Oo;
      case "cross":
        (v = Math.cos(k) * (r ? r / 2 : T)),
          (a = Math.cos(k) * T),
          (s = Math.sin(k) * T),
          (x = Math.sin(k) * (r ? r / 2 : T)),
          n.moveTo(e - v, i - s),
          n.lineTo(e + v, i + s),
          n.moveTo(e + x, i - a),
          n.lineTo(e - x, i + a);
        break;
      case "star":
        (v = Math.cos(k) * (r ? r / 2 : T)),
          (a = Math.cos(k) * T),
          (s = Math.sin(k) * T),
          (x = Math.sin(k) * (r ? r / 2 : T)),
          n.moveTo(e - v, i - s),
          n.lineTo(e + v, i + s),
          n.moveTo(e + x, i - a),
          n.lineTo(e - x, i + a),
          (k += Oo),
          (v = Math.cos(k) * (r ? r / 2 : T)),
          (a = Math.cos(k) * T),
          (s = Math.sin(k) * T),
          (x = Math.sin(k) * (r ? r / 2 : T)),
          n.moveTo(e - v, i - s),
          n.lineTo(e + v, i + s),
          n.moveTo(e + x, i - a),
          n.lineTo(e - x, i + a);
        break;
      case "line":
        (a = r ? r / 2 : Math.cos(k) * T),
          (s = Math.sin(k) * T),
          n.moveTo(e - a, i - s),
          n.lineTo(e + a, i + s);
        break;
      case "dash":
        n.moveTo(e, i),
          n.lineTo(e + Math.cos(k) * (r ? r / 2 : T), i + Math.sin(k) * T);
        break;
      case !1:
        n.closePath();
        break;
    }
    n.fill(), t.borderWidth > 0 && n.stroke();
  }
}
function rr(n, t, e) {
  return (
    (e = e || 0.5),
    !t ||
      (n &&
        n.x > t.left - e &&
        n.x < t.right + e &&
        n.y > t.top - e &&
        n.y < t.bottom + e)
  );
}
function gl(n, t) {
  n.save(),
    n.beginPath(),
    n.rect(t.left, t.top, t.right - t.left, t.bottom - t.top),
    n.clip();
}
function _l(n) {
  n.restore();
}
function Tv(n, t, e, i, r) {
  if (!t) return n.lineTo(e.x, e.y);
  if (r === "middle") {
    let o = (t.x + e.x) / 2;
    n.lineTo(o, t.y), n.lineTo(o, e.y);
  } else (r === "after") != !!i ? n.lineTo(t.x, e.y) : n.lineTo(e.x, t.y);
  n.lineTo(e.x, e.y);
}
function Ev(n, t, e, i) {
  if (!t) return n.lineTo(e.x, e.y);
  n.bezierCurveTo(
    i ? t.cp1x : t.cp2x,
    i ? t.cp1y : t.cp2y,
    i ? e.cp2x : e.cp1x,
    i ? e.cp2y : e.cp1y,
    e.x,
    e.y
  );
}
function _T(n, t) {
  t.translation && n.translate(t.translation[0], t.translation[1]),
    tt(t.rotation) || n.rotate(t.rotation),
    t.color && (n.fillStyle = t.color),
    t.textAlign && (n.textAlign = t.textAlign),
    t.textBaseline && (n.textBaseline = t.textBaseline);
}
function bT(n, t, e, i, r) {
  if (r.strikethrough || r.underline) {
    let o = n.measureText(i),
      a = t - o.actualBoundingBoxLeft,
      s = t + o.actualBoundingBoxRight,
      l = e - o.actualBoundingBoxAscent,
      d = e + o.actualBoundingBoxDescent,
      m = r.strikethrough ? (l + d) / 2 : d;
    (n.strokeStyle = n.fillStyle),
      n.beginPath(),
      (n.lineWidth = r.decorationWidth || 2),
      n.moveTo(a, m),
      n.lineTo(s, m),
      n.stroke();
  }
}
function vT(n, t) {
  let e = n.fillStyle;
  (n.fillStyle = t.color),
    n.fillRect(t.left, t.top, t.width, t.height),
    (n.fillStyle = e);
}
function ro(n, t, e, i, r, o = {}) {
  let a = Mt(t) ? t : [t],
    s = o.strokeWidth > 0 && o.strokeColor !== "",
    l,
    d;
  for (n.save(), n.font = r.string, _T(n, o), l = 0; l < a.length; ++l)
    (d = a[l]),
      o.backdrop && vT(n, o.backdrop),
      s &&
        (o.strokeColor && (n.strokeStyle = o.strokeColor),
        tt(o.strokeWidth) || (n.lineWidth = o.strokeWidth),
        n.strokeText(d, e, i, o.maxWidth)),
      n.fillText(d, e, i, o.maxWidth),
      bT(n, e, i, d, o),
      (i += Number(r.lineHeight));
  n.restore();
}
function La(n, t) {
  let { x: e, y: i, w: r, h: o, radius: a } = t;
  n.arc(e + a.topLeft, i + a.topLeft, a.topLeft, 1.5 * ut, ut, !0),
    n.lineTo(e, i + o - a.bottomLeft),
    n.arc(e + a.bottomLeft, i + o - a.bottomLeft, a.bottomLeft, ut, qt, !0),
    n.lineTo(e + r - a.bottomRight, i + o),
    n.arc(
      e + r - a.bottomRight,
      i + o - a.bottomRight,
      a.bottomRight,
      qt,
      0,
      !0
    ),
    n.lineTo(e + r, i + a.topRight),
    n.arc(e + r - a.topRight, i + a.topRight, a.topRight, 0, -qt, !0),
    n.lineTo(e + a.topLeft, i);
}
var yT = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,
  xT = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
function CT(n, t) {
  let e = ("" + n).match(yT);
  if (!e || e[1] === "normal") return t * 1.2;
  switch (((n = +e[2]), e[3])) {
    case "px":
      return n;
    case "%":
      n /= 100;
      break;
  }
  return t * n;
}
var wT = (n) => +n || 0;
function Ad(n, t) {
  let e = {},
    i = ot(t),
    r = i ? Object.keys(t) : t,
    o = ot(n) ? (i ? (a) => We(n[a], n[t[a]]) : (a) => n[a]) : () => n;
  for (let a of r) e[a] = wT(o(a));
  return e;
}
function gm(n) {
  return Ad(n, { top: "y", right: "x", bottom: "y", left: "x" });
}
function oo(n) {
  return Ad(n, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
}
function xi(n) {
  let t = gm(n);
  return (t.width = t.left + t.right), (t.height = t.top + t.bottom), t;
}
function ii(n, t) {
  (n = n || {}), (t = t || kt.font);
  let e = We(n.size, t.size);
  typeof e == "string" && (e = parseInt(e, 10));
  let i = We(n.style, t.style);
  i &&
    !("" + i).match(xT) &&
    (console.warn('Invalid font style specified: "' + i + '"'), (i = void 0));
  let r = {
    family: We(n.family, t.family),
    lineHeight: CT(We(n.lineHeight, t.lineHeight), e),
    size: e,
    style: i,
    weight: We(n.weight, t.weight),
    string: "",
  };
  return (r.string = gT(r)), r;
}
function Va(n, t, e, i) {
  let r = !0,
    o,
    a,
    s;
  for (o = 0, a = n.length; o < a; ++o)
    if (
      ((s = n[o]),
      s !== void 0 &&
        (t !== void 0 && typeof s == "function" && ((s = s(t)), (r = !1)),
        e !== void 0 && Mt(s) && ((s = s[e % s.length]), (r = !1)),
        s !== void 0))
    )
      return i && !r && (i.cacheable = !1), s;
}
function kv(n, t, e) {
  let { min: i, max: r } = n,
    o = em(t, (r - i) / 2),
    a = (s, l) => (e && s === 0 ? 0 : s + l);
  return { min: a(i, -Math.abs(o)), max: a(r, o) };
}
function Ir(n, t) {
  return Object.assign(Object.create(n), t);
}
function Rd(n, t = [""], e, i, r = () => n[0]) {
  let o = e || n;
  typeof i > "u" && (i = Pv("_fallback", n));
  let a = {
    [Symbol.toStringTag]: "Object",
    _cacheable: !0,
    _scopes: n,
    _rootScopes: o,
    _fallback: i,
    _getTarget: r,
    override: (s) => Rd([s, ...n], t, o, i),
  };
  return new Proxy(a, {
    deleteProperty(s, l) {
      return delete s[l], delete s._keys, delete n[0][l], !0;
    },
    get(s, l) {
      return Iv(s, l, () => OT(l, t, n, s));
    },
    getOwnPropertyDescriptor(s, l) {
      return Reflect.getOwnPropertyDescriptor(s._scopes[0], l);
    },
    getPrototypeOf() {
      return Reflect.getPrototypeOf(n[0]);
    },
    has(s, l) {
      return lv(s).includes(l);
    },
    ownKeys(s) {
      return lv(s);
    },
    set(s, l, d) {
      let m = s._storage || (s._storage = r());
      return (s[l] = m[l] = d), delete s._keys, !0;
    },
  });
}
function Ao(n, t, e, i) {
  let r = {
    _cacheable: !1,
    _proxy: n,
    _context: t,
    _subProxy: e,
    _stack: new Set(),
    _descriptors: _m(n, i),
    setContext: (o) => Ao(n, o, e, i),
    override: (o) => Ao(n.override(o), t, e, i),
  };
  return new Proxy(r, {
    deleteProperty(o, a) {
      return delete o[a], delete n[a], !0;
    },
    get(o, a, s) {
      return Iv(o, a, () => ST(o, a, s));
    },
    getOwnPropertyDescriptor(o, a) {
      return o._descriptors.allKeys
        ? Reflect.has(n, a)
          ? { enumerable: !0, configurable: !0 }
          : void 0
        : Reflect.getOwnPropertyDescriptor(n, a);
    },
    getPrototypeOf() {
      return Reflect.getPrototypeOf(n);
    },
    has(o, a) {
      return Reflect.has(n, a);
    },
    ownKeys() {
      return Reflect.ownKeys(n);
    },
    set(o, a, s) {
      return (n[a] = s), delete o[a], !0;
    },
  });
}
function _m(n, t = { scriptable: !0, indexable: !0 }) {
  let {
    _scriptable: e = t.scriptable,
    _indexable: i = t.indexable,
    _allKeys: r = t.allKeys,
  } = n;
  return {
    allKeys: r,
    scriptable: e,
    indexable: i,
    isScriptable: Tr(e) ? e : () => e,
    isIndexable: Tr(i) ? i : () => i,
  };
}
var DT = (n, t) => (n ? n + Td(t) : t),
  bm = (n, t) =>
    ot(t) &&
    n !== "adapters" &&
    (Object.getPrototypeOf(t) === null || t.constructor === Object);
function Iv(n, t, e) {
  if (Object.prototype.hasOwnProperty.call(n, t) || t === "constructor")
    return n[t];
  let i = e();
  return (n[t] = i), i;
}
function ST(n, t, e) {
  let { _proxy: i, _context: r, _subProxy: o, _descriptors: a } = n,
    s = i[t];
  return (
    Tr(s) && a.isScriptable(t) && (s = MT(t, s, n, e)),
    Mt(s) && s.length && (s = TT(t, s, n, a.isIndexable)),
    bm(t, s) && (s = Ao(s, r, o && o[t], a)),
    s
  );
}
function MT(n, t, e, i) {
  let { _proxy: r, _context: o, _subProxy: a, _stack: s } = e;
  if (s.has(n))
    throw new Error(
      "Recursion detected: " + Array.from(s).join("->") + "->" + n
    );
  s.add(n);
  let l = t(o, a || i);
  return s.delete(n), bm(n, l) && (l = vm(r._scopes, r, n, l)), l;
}
function TT(n, t, e, i) {
  let { _proxy: r, _context: o, _subProxy: a, _descriptors: s } = e;
  if (typeof o.index < "u" && i(n)) return t[o.index % t.length];
  if (ot(t[0])) {
    let l = t,
      d = r._scopes.filter((m) => m !== l);
    t = [];
    for (let m of l) {
      let v = vm(d, r, n, m);
      t.push(Ao(v, o, a && a[n], s));
    }
  }
  return t;
}
function Ov(n, t, e) {
  return Tr(n) ? n(t, e) : n;
}
var ET = (n, t) => (n === !0 ? t : typeof n == "string" ? kr(t, n) : void 0);
function kT(n, t, e, i, r) {
  for (let o of t) {
    let a = ET(e, o);
    if (a) {
      n.add(a);
      let s = Ov(a._fallback, e, r);
      if (typeof s < "u" && s !== e && s !== i) return s;
    } else if (a === !1 && typeof i < "u" && e !== i) return null;
  }
  return !1;
}
function vm(n, t, e, i) {
  let r = t._rootScopes,
    o = Ov(t._fallback, e, i),
    a = [...n, ...r],
    s = new Set();
  s.add(i);
  let l = sv(s, a, e, o || e, i);
  return l === null ||
    (typeof o < "u" && o !== e && ((l = sv(s, a, o, l, i)), l === null))
    ? !1
    : Rd(Array.from(s), [""], r, o, () => IT(t, e, i));
}
function sv(n, t, e, i, r) {
  for (; e; ) e = kT(n, t, e, i, r);
  return e;
}
function IT(n, t, e) {
  let i = n._getTarget();
  t in i || (i[t] = {});
  let r = i[t];
  return Mt(r) && ot(e) ? e : r || {};
}
function OT(n, t, e, i) {
  let r;
  for (let o of t)
    if (((r = Pv(DT(o, n), e)), typeof r < "u"))
      return bm(n, r) ? vm(e, i, n, r) : r;
}
function Pv(n, t) {
  for (let e of t) {
    if (!e) continue;
    let i = e[n];
    if (typeof i < "u") return i;
  }
}
function lv(n) {
  let t = n._keys;
  return t || (t = n._keys = PT(n._scopes)), t;
}
function PT(n) {
  let t = new Set();
  for (let e of n)
    for (let i of Object.keys(e).filter((r) => !r.startsWith("_"))) t.add(i);
  return Array.from(t);
}
function ym(n, t, e, i) {
  let { iScale: r } = n,
    { key: o = "r" } = this._parsing,
    a = new Array(i),
    s,
    l,
    d,
    m;
  for (s = 0, l = i; s < l; ++s)
    (d = s + e), (m = t[d]), (a[s] = { r: r.parse(kr(m, o), d) });
  return a;
}
var AT = Number.EPSILON || 1e-14,
  Oa = (n, t) => t < n.length && !n[t].skip && n[t],
  Av = (n) => (n === "x" ? "y" : "x");
function RT(n, t, e, i) {
  let r = n.skip ? t : n,
    o = t,
    a = e.skip ? t : e,
    s = Sd(o, r),
    l = Sd(a, o),
    d = s / (s + l),
    m = l / (s + l);
  (d = isNaN(d) ? 0 : d), (m = isNaN(m) ? 0 : m);
  let v = i * d,
    x = i * m;
  return {
    previous: { x: o.x - v * (a.x - r.x), y: o.y - v * (a.y - r.y) },
    next: { x: o.x + x * (a.x - r.x), y: o.y + x * (a.y - r.y) },
  };
}
function FT(n, t, e) {
  let i = n.length,
    r,
    o,
    a,
    s,
    l,
    d = Oa(n, 0);
  for (let m = 0; m < i - 1; ++m)
    if (((l = d), (d = Oa(n, m + 1)), !(!l || !d))) {
      if (Ra(t[m], 0, AT)) {
        e[m] = e[m + 1] = 0;
        continue;
      }
      (r = e[m] / t[m]),
        (o = e[m + 1] / t[m]),
        (s = Math.pow(r, 2) + Math.pow(o, 2)),
        !(s <= 9) &&
          ((a = 3 / Math.sqrt(s)),
          (e[m] = r * a * t[m]),
          (e[m + 1] = o * a * t[m]));
    }
}
function NT(n, t, e = "x") {
  let i = Av(e),
    r = n.length,
    o,
    a,
    s,
    l = Oa(n, 0);
  for (let d = 0; d < r; ++d) {
    if (((a = s), (s = l), (l = Oa(n, d + 1)), !s)) continue;
    let m = s[e],
      v = s[i];
    a &&
      ((o = (m - a[e]) / 3),
      (s[`cp1${e}`] = m - o),
      (s[`cp1${i}`] = v - o * t[d])),
      l &&
        ((o = (l[e] - m) / 3),
        (s[`cp2${e}`] = m + o),
        (s[`cp2${i}`] = v + o * t[d]));
  }
}
function LT(n, t = "x") {
  let e = Av(t),
    i = n.length,
    r = Array(i).fill(0),
    o = Array(i),
    a,
    s,
    l,
    d = Oa(n, 0);
  for (a = 0; a < i; ++a)
    if (((s = l), (l = d), (d = Oa(n, a + 1)), !!l)) {
      if (d) {
        let m = d[t] - l[t];
        r[a] = m !== 0 ? (d[e] - l[e]) / m : 0;
      }
      o[a] = s
        ? d
          ? Fn(r[a - 1]) !== Fn(r[a])
            ? 0
            : (r[a - 1] + r[a]) / 2
          : r[a - 1]
        : r[a];
    }
  FT(n, r, o), NT(n, o, t);
}
function yd(n, t, e) {
  return Math.max(Math.min(n, e), t);
}
function VT(n, t) {
  let e,
    i,
    r,
    o,
    a,
    s = rr(n[0], t);
  for (e = 0, i = n.length; e < i; ++e)
    (a = o),
      (o = s),
      (s = e < i - 1 && rr(n[e + 1], t)),
      o &&
        ((r = n[e]),
        a &&
          ((r.cp1x = yd(r.cp1x, t.left, t.right)),
          (r.cp1y = yd(r.cp1y, t.top, t.bottom))),
        s &&
          ((r.cp2x = yd(r.cp2x, t.left, t.right)),
          (r.cp2y = yd(r.cp2y, t.top, t.bottom))));
}
function Rv(n, t, e, i, r) {
  let o, a, s, l;
  if (
    (t.spanGaps && (n = n.filter((d) => !d.skip)),
    t.cubicInterpolationMode === "monotone")
  )
    LT(n, r);
  else {
    let d = i ? n[n.length - 1] : n[0];
    for (o = 0, a = n.length; o < a; ++o)
      (s = n[o]),
        (l = RT(d, s, n[Math.min(o + 1, a - (i ? 0 : 1)) % a], t.tension)),
        (s.cp1x = l.previous.x),
        (s.cp1y = l.previous.y),
        (s.cp2x = l.next.x),
        (s.cp2y = l.next.y),
        (d = s);
  }
  t.capBezierPoints && VT(n, e);
}
function Fd() {
  return typeof window < "u" && typeof document < "u";
}
function Nd(n) {
  let t = n.parentNode;
  return t && t.toString() === "[object ShadowRoot]" && (t = t.host), t;
}
function Md(n, t, e) {
  let i;
  return (
    typeof n == "string"
      ? ((i = parseInt(n, 10)),
        n.indexOf("%") !== -1 && (i = (i / 100) * t.parentNode[e]))
      : (i = n),
    i
  );
}
var Ld = (n) => n.ownerDocument.defaultView.getComputedStyle(n, null);
function BT(n, t) {
  return Ld(n).getPropertyValue(t);
}
var HT = ["top", "right", "bottom", "left"];
function Po(n, t, e) {
  let i = {};
  e = e ? "-" + e : "";
  for (let r = 0; r < 4; r++) {
    let o = HT[r];
    i[o] = parseFloat(n[t + "-" + o + e]) || 0;
  }
  return (i.width = i.left + i.right), (i.height = i.top + i.bottom), i;
}
var jT = (n, t, e) => (n > 0 || t > 0) && (!e || !e.shadowRoot);
function UT(n, t) {
  let e = n.touches,
    i = e && e.length ? e[0] : n,
    { offsetX: r, offsetY: o } = i,
    a = !1,
    s,
    l;
  if (jT(r, o, n.target)) (s = r), (l = o);
  else {
    let d = t.getBoundingClientRect();
    (s = i.clientX - d.left), (l = i.clientY - d.top), (a = !0);
  }
  return { x: s, y: l, box: a };
}
function ao(n, t) {
  if ("native" in n) return n;
  let { canvas: e, currentDevicePixelRatio: i } = t,
    r = Ld(e),
    o = r.boxSizing === "border-box",
    a = Po(r, "padding"),
    s = Po(r, "border", "width"),
    { x: l, y: d, box: m } = UT(n, e),
    v = a.left + (m && s.left),
    x = a.top + (m && s.top),
    { width: C, height: S } = t;
  return (
    o && ((C -= a.width + s.width), (S -= a.height + s.height)),
    {
      x: Math.round((((l - v) / C) * e.width) / i),
      y: Math.round((((d - x) / S) * e.height) / i),
    }
  );
}
function zT(n, t, e) {
  let i, r;
  if (t === void 0 || e === void 0) {
    let o = n && Nd(n);
    if (!o) (t = n.clientWidth), (e = n.clientHeight);
    else {
      let a = o.getBoundingClientRect(),
        s = Ld(o),
        l = Po(s, "border", "width"),
        d = Po(s, "padding");
      (t = a.width - d.width - l.width),
        (e = a.height - d.height - l.height),
        (i = Md(s.maxWidth, o, "clientWidth")),
        (r = Md(s.maxHeight, o, "clientHeight"));
    }
  }
  return { width: t, height: e, maxWidth: i || Dd, maxHeight: r || Dd };
}
var xd = (n) => Math.round(n * 10) / 10;
function Fv(n, t, e, i) {
  let r = Ld(n),
    o = Po(r, "margin"),
    a = Md(r.maxWidth, n, "clientWidth") || Dd,
    s = Md(r.maxHeight, n, "clientHeight") || Dd,
    l = zT(n, t, e),
    { width: d, height: m } = l;
  if (r.boxSizing === "content-box") {
    let x = Po(r, "border", "width"),
      C = Po(r, "padding");
    (d -= C.width + x.width), (m -= C.height + x.height);
  }
  return (
    (d = Math.max(0, d - o.width)),
    (m = Math.max(0, i ? d / i : m - o.height)),
    (d = xd(Math.min(d, a, l.maxWidth))),
    (m = xd(Math.min(m, s, l.maxHeight))),
    d && !m && (m = xd(d / 2)),
    (t !== void 0 || e !== void 0) &&
      i &&
      l.height &&
      m > l.height &&
      ((m = l.height), (d = xd(Math.floor(m * i)))),
    { width: d, height: m }
  );
}
function xm(n, t, e) {
  let i = t || 1,
    r = Math.floor(n.height * i),
    o = Math.floor(n.width * i);
  (n.height = Math.floor(n.height)), (n.width = Math.floor(n.width));
  let a = n.canvas;
  return (
    a.style &&
      (e || (!a.style.height && !a.style.width)) &&
      ((a.style.height = `${n.height}px`), (a.style.width = `${n.width}px`)),
    n.currentDevicePixelRatio !== i || a.height !== r || a.width !== o
      ? ((n.currentDevicePixelRatio = i),
        (a.height = r),
        (a.width = o),
        n.ctx.setTransform(i, 0, 0, i, 0, 0),
        !0)
      : !1
  );
}
var Nv = (function () {
  let n = !1;
  try {
    let t = {
      get passive() {
        return (n = !0), !1;
      },
    };
    Fd() &&
      (window.addEventListener("test", null, t),
      window.removeEventListener("test", null, t));
  } catch {}
  return n;
})();
function Cm(n, t) {
  let e = BT(n, t),
    i = e && e.match(/^(\d+)(\.\d+)?px$/);
  return i ? +i[1] : void 0;
}
function to(n, t, e, i) {
  return { x: n.x + e * (t.x - n.x), y: n.y + e * (t.y - n.y) };
}
function Lv(n, t, e, i) {
  return {
    x: n.x + e * (t.x - n.x),
    y:
      i === "middle"
        ? e < 0.5
          ? n.y
          : t.y
        : i === "after"
        ? e < 1
          ? n.y
          : t.y
        : e > 0
        ? t.y
        : n.y,
  };
}
function Vv(n, t, e, i) {
  let r = { x: n.cp2x, y: n.cp2y },
    o = { x: t.cp1x, y: t.cp1y },
    a = to(n, r, e),
    s = to(r, o, e),
    l = to(o, t, e),
    d = to(a, s, e),
    m = to(s, l, e);
  return to(d, m, e);
}
var $T = function (n, t) {
    return {
      x(e) {
        return n + n + t - e;
      },
      setWidth(e) {
        t = e;
      },
      textAlign(e) {
        return e === "center" ? e : e === "right" ? "left" : "right";
      },
      xPlus(e, i) {
        return e - i;
      },
      leftForLtr(e, i) {
        return e - i;
      },
    };
  },
  WT = function () {
    return {
      x(n) {
        return n;
      },
      setWidth(n) {},
      textAlign(n) {
        return n;
      },
      xPlus(n, t) {
        return n + t;
      },
      leftForLtr(n, t) {
        return n;
      },
    };
  };
function Fo(n, t, e) {
  return n ? $T(t, e) : WT();
}
function wm(n, t) {
  let e, i;
  (t === "ltr" || t === "rtl") &&
    ((e = n.canvas.style),
    (i = [e.getPropertyValue("direction"), e.getPropertyPriority("direction")]),
    e.setProperty("direction", t, "important"),
    (n.prevTextDirection = i));
}
function Dm(n, t) {
  t !== void 0 &&
    (delete n.prevTextDirection,
    n.canvas.style.setProperty("direction", t[0], t[1]));
}
function Bv(n) {
  return n === "angle"
    ? { between: Fa, compare: lT, normalize: vi }
    : { between: ar, compare: (t, e) => t - e, normalize: (t) => t };
}
function cv({ start: n, end: t, count: e, loop: i, style: r }) {
  return {
    start: n % e,
    end: t % e,
    loop: i && (t - n + 1) % e === 0,
    style: r,
  };
}
function GT(n, t, e) {
  let { property: i, start: r, end: o } = e,
    { between: a, normalize: s } = Bv(i),
    l = t.length,
    { start: d, end: m, loop: v } = n,
    x,
    C;
  if (v) {
    for (d += l, m += l, x = 0, C = l; x < C && a(s(t[d % l][i]), r, o); ++x)
      d--, m--;
    (d %= l), (m %= l);
  }
  return m < d && (m += l), { start: d, end: m, loop: v, style: n.style };
}
function Sm(n, t, e) {
  if (!e) return [n];
  let { property: i, start: r, end: o } = e,
    a = t.length,
    { compare: s, between: l, normalize: d } = Bv(i),
    { start: m, end: v, loop: x, style: C } = GT(n, t, e),
    S = [],
    T = !1,
    k = null,
    P,
    j,
    K,
    oe = () => l(r, K, P) && s(r, K) !== 0,
    ee = () => s(o, P) === 0 || l(o, K, P),
    b = () => T || oe(),
    me = () => !T || ee();
  for (let re = m, _e = m; re <= v; ++re)
    (j = t[re % a]),
      !j.skip &&
        ((P = d(j[i])),
        P !== K &&
          ((T = l(P, r, o)),
          k === null && b() && (k = s(P, r) === 0 ? re : _e),
          k !== null &&
            me() &&
            (S.push(cv({ start: k, end: re, loop: x, count: a, style: C })),
            (k = null)),
          (_e = re),
          (K = P)));
  return (
    k !== null && S.push(cv({ start: k, end: v, loop: x, count: a, style: C })),
    S
  );
}
function Mm(n, t) {
  let e = [],
    i = n.segments;
  for (let r = 0; r < i.length; r++) {
    let o = Sm(i[r], n.points, t);
    o.length && e.push(...o);
  }
  return e;
}
function YT(n, t, e, i) {
  let r = 0,
    o = t - 1;
  if (e && !i) for (; r < t && !n[r].skip; ) r++;
  for (; r < t && n[r].skip; ) r++;
  for (r %= t, e && (o += r); o > r && n[o % t].skip; ) o--;
  return (o %= t), { start: r, end: o };
}
function qT(n, t, e, i) {
  let r = n.length,
    o = [],
    a = t,
    s = n[t],
    l;
  for (l = t + 1; l <= e; ++l) {
    let d = n[l % r];
    d.skip || d.stop
      ? s.skip ||
        ((i = !1),
        o.push({ start: t % r, end: (l - 1) % r, loop: i }),
        (t = a = d.stop ? l : null))
      : ((a = l), s.skip && (t = l)),
      (s = d);
  }
  return a !== null && o.push({ start: t % r, end: a % r, loop: i }), o;
}
function Hv(n, t) {
  let e = n.points,
    i = n.options.spanGaps,
    r = e.length;
  if (!r) return [];
  let o = !!n._loop,
    { start: a, end: s } = YT(e, r, o, i);
  if (i === !0) return dv(n, [{ start: a, end: s, loop: o }], e, t);
  let l = s < a ? s + r : s,
    d = !!n._fullLoop && a === 0 && s === r - 1;
  return dv(n, qT(e, a, l, d), e, t);
}
function dv(n, t, e, i) {
  return !i || !i.setContext || !e ? t : KT(n, t, e, i);
}
function KT(n, t, e, i) {
  let r = n._chart.getContext(),
    o = uv(n.options),
    {
      _datasetIndex: a,
      options: { spanGaps: s },
    } = n,
    l = e.length,
    d = [],
    m = o,
    v = t[0].start,
    x = v;
  function C(S, T, k, P) {
    let j = s ? -1 : 1;
    if (S !== T) {
      for (S += l; e[S % l].skip; ) S -= j;
      for (; e[T % l].skip; ) T += j;
      S % l !== T % l &&
        (d.push({ start: S % l, end: T % l, loop: k, style: P }),
        (m = P),
        (v = T % l));
    }
  }
  for (let S of t) {
    v = s ? v : S.start;
    let T = e[v % l],
      k;
    for (x = v + 1; x <= S.end; x++) {
      let P = e[x % l];
      (k = uv(
        i.setContext(
          Ir(r, {
            type: "segment",
            p0: T,
            p1: P,
            p0DataIndex: (x - 1) % l,
            p1DataIndex: x % l,
            datasetIndex: a,
          })
        )
      )),
        QT(k, m) && C(v, x - 1, S.loop, m),
        (T = P),
        (m = k);
    }
    v < x - 1 && C(v, x - 1, S.loop, m);
  }
  return d;
}
function uv(n) {
  return {
    backgroundColor: n.backgroundColor,
    borderCapStyle: n.borderCapStyle,
    borderDash: n.borderDash,
    borderDashOffset: n.borderDashOffset,
    borderJoinStyle: n.borderJoinStyle,
    borderWidth: n.borderWidth,
    borderColor: n.borderColor,
  };
}
function QT(n, t) {
  if (!t) return !1;
  let e = [],
    i = function (r, o) {
      return hm(o) ? (e.includes(o) || e.push(o), e.indexOf(o)) : o;
    };
  return JSON.stringify(n, i) !== JSON.stringify(t, i);
}
function Cd(n, t, e) {
  return n.options.clip ? n[e] : t[e];
}
function XT(n, t) {
  let { xScale: e, yScale: i } = n;
  return e && i
    ? {
        left: Cd(e, t, "left"),
        right: Cd(e, t, "right"),
        top: Cd(i, t, "top"),
        bottom: Cd(i, t, "bottom"),
      }
    : t;
}
function Tm(n, t) {
  let e = t._clip;
  if (e.disabled) return !1;
  let i = XT(t, n.chartArea);
  return {
    left: e.left === !1 ? 0 : i.left - (e.left === !0 ? 0 : e.left),
    right: e.right === !1 ? n.width : i.right + (e.right === !0 ? 0 : e.right),
    top: e.top === !1 ? 0 : i.top - (e.top === !0 ? 0 : e.top),
    bottom:
      e.bottom === !1 ? n.height : i.bottom + (e.bottom === !0 ? 0 : e.bottom),
  };
}
var Bm = class {
    constructor() {
      (this._request = null),
        (this._charts = new Map()),
        (this._running = !1),
        (this._lastDate = void 0);
    }
    _notify(t, e, i, r) {
      let o = e.listeners[r],
        a = e.duration;
      o.forEach((s) =>
        s({
          chart: t,
          initial: e.initial,
          numSteps: a,
          currentStep: Math.min(i - e.start, a),
        })
      );
    }
    _refresh() {
      this._request ||
        ((this._running = !0),
        (this._request = lm.call(window, () => {
          this._update(),
            (this._request = null),
            this._running && this._refresh();
        })));
    }
    _update(t = Date.now()) {
      let e = 0;
      this._charts.forEach((i, r) => {
        if (!i.running || !i.items.length) return;
        let o = i.items,
          a = o.length - 1,
          s = !1,
          l;
        for (; a >= 0; --a)
          (l = o[a]),
            l._active
              ? (l._total > i.duration && (i.duration = l._total),
                l.tick(t),
                (s = !0))
              : ((o[a] = o[o.length - 1]), o.pop());
        s && (r.draw(), this._notify(r, i, t, "progress")),
          o.length ||
            ((i.running = !1),
            this._notify(r, i, t, "complete"),
            (i.initial = !1)),
          (e += o.length);
      }),
        (this._lastDate = t),
        e === 0 && (this._running = !1);
    }
    _getAnims(t) {
      let e = this._charts,
        i = e.get(t);
      return (
        i ||
          ((i = {
            running: !1,
            initial: !0,
            items: [],
            listeners: { complete: [], progress: [] },
          }),
          e.set(t, i)),
        i
      );
    }
    listen(t, e, i) {
      this._getAnims(t).listeners[e].push(i);
    }
    add(t, e) {
      !e || !e.length || this._getAnims(t).items.push(...e);
    }
    has(t) {
      return this._getAnims(t).items.length > 0;
    }
    start(t) {
      let e = this._charts.get(t);
      e &&
        ((e.running = !0),
        (e.start = Date.now()),
        (e.duration = e.items.reduce((i, r) => Math.max(i, r._duration), 0)),
        this._refresh());
    }
    running(t) {
      if (!this._running) return !1;
      let e = this._charts.get(t);
      return !(!e || !e.running || !e.items.length);
    }
    stop(t) {
      let e = this._charts.get(t);
      if (!e || !e.items.length) return;
      let i = e.items,
        r = i.length - 1;
      for (; r >= 0; --r) i[r].cancel();
      (e.items = []), this._notify(t, e, Date.now(), "complete");
    }
    remove(t) {
      return this._charts.delete(t);
    }
  },
  Or = new Bm(),
  jv = "transparent",
  ZT = {
    boolean(n, t, e) {
      return e > 0.5 ? t : n;
    },
    color(n, t, e) {
      let i = pm(n || jv),
        r = i.valid && pm(t || jv);
      return r && r.valid ? r.mix(i, e).hexString() : t;
    },
    number(n, t, e) {
      return n + (t - n) * e;
    },
  },
  Hm = class {
    constructor(t, e, i, r) {
      let o = e[i];
      r = Va([t.to, r, o, t.from]);
      let a = Va([t.from, o, r]);
      (this._active = !0),
        (this._fn = t.fn || ZT[t.type || typeof a]),
        (this._easing = ka[t.easing] || ka.linear),
        (this._start = Math.floor(Date.now() + (t.delay || 0))),
        (this._duration = this._total = Math.floor(t.duration)),
        (this._loop = !!t.loop),
        (this._target = e),
        (this._prop = i),
        (this._from = a),
        (this._to = r),
        (this._promises = void 0);
    }
    active() {
      return this._active;
    }
    update(t, e, i) {
      if (this._active) {
        this._notify(!1);
        let r = this._target[this._prop],
          o = i - this._start,
          a = this._duration - o;
        (this._start = i),
          (this._duration = Math.floor(Math.max(a, t.duration))),
          (this._total += o),
          (this._loop = !!t.loop),
          (this._to = Va([t.to, e, r, t.from])),
          (this._from = Va([t.from, r, e]));
      }
    }
    cancel() {
      this._active &&
        (this.tick(Date.now()), (this._active = !1), this._notify(!1));
    }
    tick(t) {
      let e = t - this._start,
        i = this._duration,
        r = this._prop,
        o = this._from,
        a = this._loop,
        s = this._to,
        l;
      if (((this._active = o !== s && (a || e < i)), !this._active)) {
        (this._target[r] = s), this._notify(!0);
        return;
      }
      if (e < 0) {
        this._target[r] = o;
        return;
      }
      (l = (e / i) % 2),
        (l = a && l > 1 ? 2 - l : l),
        (l = this._easing(Math.min(1, Math.max(0, l)))),
        (this._target[r] = this._fn(o, s, l));
    }
    wait() {
      let t = this._promises || (this._promises = []);
      return new Promise((e, i) => {
        t.push({ res: e, rej: i });
      });
    }
    _notify(t) {
      let e = t ? "res" : "rej",
        i = this._promises || [];
      for (let r = 0; r < i.length; r++) i[r][e]();
    }
  },
  Gd = class {
    constructor(t, e) {
      (this._chart = t), (this._properties = new Map()), this.configure(e);
    }
    configure(t) {
      if (!ot(t)) return;
      let e = Object.keys(kt.animation),
        i = this._properties;
      Object.getOwnPropertyNames(t).forEach((r) => {
        let o = t[r];
        if (!ot(o)) return;
        let a = {};
        for (let s of e) a[s] = o[s];
        ((Mt(o.properties) && o.properties) || [r]).forEach((s) => {
          (s === r || !i.has(s)) && i.set(s, a);
        });
      });
    }
    _animateOptions(t, e) {
      let i = e.options,
        r = eE(t, i);
      if (!r) return [];
      let o = this._createAnimations(r, i);
      return (
        i.$shared &&
          JT(t.options.$animations, i).then(
            () => {
              t.options = i;
            },
            () => {}
          ),
        o
      );
    }
    _createAnimations(t, e) {
      let i = this._properties,
        r = [],
        o = t.$animations || (t.$animations = {}),
        a = Object.keys(e),
        s = Date.now(),
        l;
      for (l = a.length - 1; l >= 0; --l) {
        let d = a[l];
        if (d.charAt(0) === "$") continue;
        if (d === "options") {
          r.push(...this._animateOptions(t, e));
          continue;
        }
        let m = e[d],
          v = o[d],
          x = i.get(d);
        if (v)
          if (x && v.active()) {
            v.update(x, m, s);
            continue;
          } else v.cancel();
        if (!x || !x.duration) {
          t[d] = m;
          continue;
        }
        (o[d] = v = new Hm(x, t, d, m)), r.push(v);
      }
      return r;
    }
    update(t, e) {
      if (this._properties.size === 0) {
        Object.assign(t, e);
        return;
      }
      let i = this._createAnimations(t, e);
      if (i.length) return Or.add(this._chart, i), !0;
    }
  };
function JT(n, t) {
  let e = [],
    i = Object.keys(t);
  for (let r = 0; r < i.length; r++) {
    let o = n[i[r]];
    o && o.active() && e.push(o.wait());
  }
  return Promise.all(e);
}
function eE(n, t) {
  if (!t) return;
  let e = n.options;
  if (!e) {
    n.options = t;
    return;
  }
  return (
    e.$shared &&
      (n.options = e = Object.assign({}, e, { $shared: !1, $animations: {} })),
    e
  );
}
function Uv(n, t) {
  let e = (n && n.options) || {},
    i = e.reverse,
    r = e.min === void 0 ? t : 0,
    o = e.max === void 0 ? t : 0;
  return { start: i ? o : r, end: i ? r : o };
}
function tE(n, t, e) {
  if (e === !1) return !1;
  let i = Uv(n, e),
    r = Uv(t, e);
  return { top: r.end, right: i.end, bottom: r.start, left: i.start };
}
function iE(n) {
  let t, e, i, r;
  return (
    ot(n)
      ? ((t = n.top), (e = n.right), (i = n.bottom), (r = n.left))
      : (t = e = i = r = n),
    { top: t, right: e, bottom: i, left: r, disabled: n === !1 }
  );
}
function jy(n, t) {
  let e = [],
    i = n._getSortedDatasetMetas(t),
    r,
    o;
  for (r = 0, o = i.length; r < o; ++r) e.push(i[r].index);
  return e;
}
function zv(n, t, e, i = {}) {
  let r = n.keys,
    o = i.mode === "single",
    a,
    s,
    l,
    d;
  if (t === null) return;
  let m = !1;
  for (a = 0, s = r.length; a < s; ++a) {
    if (((l = +r[a]), l === e)) {
      if (((m = !0), i.all)) continue;
      break;
    }
    (d = n.values[l]), Ht(d) && (o || t === 0 || Fn(t) === Fn(d)) && (t += d);
  }
  return !m && !i.all ? 0 : t;
}
function nE(n, t) {
  let { iScale: e, vScale: i } = t,
    r = e.axis === "x" ? "x" : "y",
    o = i.axis === "x" ? "x" : "y",
    a = Object.keys(n),
    s = new Array(a.length),
    l,
    d,
    m;
  for (l = 0, d = a.length; l < d; ++l)
    (m = a[l]), (s[l] = { [r]: m, [o]: n[m] });
  return s;
}
function Em(n, t) {
  let e = n && n.options.stacked;
  return e || (e === void 0 && t.stack !== void 0);
}
function rE(n, t, e) {
  return `${n.id}.${t.id}.${e.stack || e.type}`;
}
function oE(n) {
  let { min: t, max: e, minDefined: i, maxDefined: r } = n.getUserBounds();
  return {
    min: i ? t : Number.NEGATIVE_INFINITY,
    max: r ? e : Number.POSITIVE_INFINITY,
  };
}
function aE(n, t, e) {
  let i = n[t] || (n[t] = {});
  return i[e] || (i[e] = {});
}
function $v(n, t, e, i) {
  for (let r of t.getMatchingVisibleMetas(i).reverse()) {
    let o = n[r.index];
    if ((e && o > 0) || (!e && o < 0)) return r.index;
  }
  return null;
}
function Wv(n, t) {
  let { chart: e, _cachedMeta: i } = n,
    r = e._stacks || (e._stacks = {}),
    { iScale: o, vScale: a, index: s } = i,
    l = o.axis,
    d = a.axis,
    m = rE(o, a, i),
    v = t.length,
    x;
  for (let C = 0; C < v; ++C) {
    let S = t[C],
      { [l]: T, [d]: k } = S,
      P = S._stacks || (S._stacks = {});
    (x = P[d] = aE(r, m, T)),
      (x[s] = k),
      (x._top = $v(x, a, !0, i.type)),
      (x._bottom = $v(x, a, !1, i.type));
    let j = x._visualValues || (x._visualValues = {});
    j[s] = k;
  }
}
function km(n, t) {
  let e = n.scales;
  return Object.keys(e)
    .filter((i) => e[i].axis === t)
    .shift();
}
function sE(n, t) {
  return Ir(n, {
    active: !1,
    dataset: void 0,
    datasetIndex: t,
    index: t,
    mode: "default",
    type: "dataset",
  });
}
function lE(n, t, e) {
  return Ir(n, {
    active: !1,
    dataIndex: t,
    parsed: void 0,
    raw: void 0,
    element: e,
    index: t,
    mode: "default",
    type: "data",
  });
}
function bl(n, t) {
  let e = n.controller.index,
    i = n.vScale && n.vScale.axis;
  if (i) {
    t = t || n._parsed;
    for (let r of t) {
      let o = r._stacks;
      if (!o || o[i] === void 0 || o[i][e] === void 0) return;
      delete o[i][e],
        o[i]._visualValues !== void 0 &&
          o[i]._visualValues[e] !== void 0 &&
          delete o[i]._visualValues[e];
    }
  }
}
var Im = (n) => n === "reset" || n === "none",
  Gv = (n, t) => (t ? n : Object.assign({}, n)),
  cE = (n, t, e) =>
    n && !t.hidden && t._stacked && { keys: jy(e, !0), values: null },
  lo = (() => {
    class n {
      static defaults = {};
      static datasetElementType = null;
      static dataElementType = null;
      constructor(e, i) {
        (this.chart = e),
          (this._ctx = e.ctx),
          (this.index = i),
          (this._cachedDataOpts = {}),
          (this._cachedMeta = this.getMeta()),
          (this._type = this._cachedMeta.type),
          (this.options = void 0),
          (this._parsing = !1),
          (this._data = void 0),
          (this._objectData = void 0),
          (this._sharedOptions = void 0),
          (this._drawStart = void 0),
          (this._drawCount = void 0),
          (this.enableOptionSharing = !1),
          (this.supportsDecimation = !1),
          (this.$context = void 0),
          (this._syncList = []),
          (this.datasetElementType = new.target.datasetElementType),
          (this.dataElementType = new.target.dataElementType),
          this.initialize();
      }
      initialize() {
        let e = this._cachedMeta;
        this.configure(),
          this.linkScales(),
          (e._stacked = Em(e.vScale, e)),
          this.addElements(),
          this.options.fill &&
            !this.chart.isPluginEnabled("filler") &&
            console.warn(
              "Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options"
            );
      }
      updateIndex(e) {
        this.index !== e && bl(this._cachedMeta), (this.index = e);
      }
      linkScales() {
        let e = this.chart,
          i = this._cachedMeta,
          r = this.getDataset(),
          o = (x, C, S, T) => (x === "x" ? C : x === "r" ? T : S),
          a = (i.xAxisID = We(r.xAxisID, km(e, "x"))),
          s = (i.yAxisID = We(r.yAxisID, km(e, "y"))),
          l = (i.rAxisID = We(r.rAxisID, km(e, "r"))),
          d = i.indexAxis,
          m = (i.iAxisID = o(d, a, s, l)),
          v = (i.vAxisID = o(d, s, a, l));
        (i.xScale = this.getScaleForId(a)),
          (i.yScale = this.getScaleForId(s)),
          (i.rScale = this.getScaleForId(l)),
          (i.iScale = this.getScaleForId(m)),
          (i.vScale = this.getScaleForId(v));
      }
      getDataset() {
        return this.chart.data.datasets[this.index];
      }
      getMeta() {
        return this.chart.getDatasetMeta(this.index);
      }
      getScaleForId(e) {
        return this.chart.scales[e];
      }
      _getOtherScale(e) {
        let i = this._cachedMeta;
        return e === i.iScale ? i.vScale : i.iScale;
      }
      reset() {
        this._update("reset");
      }
      _destroy() {
        let e = this._cachedMeta;
        this._data && am(this._data, this), e._stacked && bl(e);
      }
      _dataCheck() {
        let e = this.getDataset(),
          i = e.data || (e.data = []),
          r = this._data;
        if (ot(i)) {
          let o = this._cachedMeta;
          this._data = nE(i, o);
        } else if (r !== i) {
          if (r) {
            am(r, this);
            let o = this._cachedMeta;
            bl(o), (o._parsed = []);
          }
          i && Object.isExtensible(i) && Cv(i, this),
            (this._syncList = []),
            (this._data = i);
        }
      }
      addElements() {
        let e = this._cachedMeta;
        this._dataCheck(),
          this.datasetElementType &&
            (e.dataset = new this.datasetElementType());
      }
      buildOrUpdateElements(e) {
        let i = this._cachedMeta,
          r = this.getDataset(),
          o = !1;
        this._dataCheck();
        let a = i._stacked;
        (i._stacked = Em(i.vScale, i)),
          i.stack !== r.stack && ((o = !0), bl(i), (i.stack = r.stack)),
          this._resyncElements(e),
          (o || a !== i._stacked) &&
            (Wv(this, i._parsed), (i._stacked = Em(i.vScale, i)));
      }
      configure() {
        let e = this.chart.config,
          i = e.datasetScopeKeys(this._type),
          r = e.getOptionScopes(this.getDataset(), i, !0);
        (this.options = e.createResolver(r, this.getContext())),
          (this._parsing = this.options.parsing),
          (this._cachedDataOpts = {});
      }
      parse(e, i) {
        let { _cachedMeta: r, _data: o } = this,
          { iScale: a, _stacked: s } = r,
          l = a.axis,
          d = e === 0 && i === o.length ? !0 : r._sorted,
          m = e > 0 && r._parsed[e - 1],
          v,
          x,
          C;
        if (this._parsing === !1) (r._parsed = o), (r._sorted = !0), (C = o);
        else {
          Mt(o[e])
            ? (C = this.parseArrayData(r, o, e, i))
            : ot(o[e])
            ? (C = this.parseObjectData(r, o, e, i))
            : (C = this.parsePrimitiveData(r, o, e, i));
          let S = () => x[l] === null || (m && x[l] < m[l]);
          for (v = 0; v < i; ++v)
            (r._parsed[v + e] = x = C[v]), d && (S() && (d = !1), (m = x));
          r._sorted = d;
        }
        s && Wv(this, C);
      }
      parsePrimitiveData(e, i, r, o) {
        let { iScale: a, vScale: s } = e,
          l = a.axis,
          d = s.axis,
          m = a.getLabels(),
          v = a === s,
          x = new Array(o),
          C,
          S,
          T;
        for (C = 0, S = o; C < S; ++C)
          (T = C + r),
            (x[C] = { [l]: v || a.parse(m[T], T), [d]: s.parse(i[T], T) });
        return x;
      }
      parseArrayData(e, i, r, o) {
        let { xScale: a, yScale: s } = e,
          l = new Array(o),
          d,
          m,
          v,
          x;
        for (d = 0, m = o; d < m; ++d)
          (v = d + r),
            (x = i[v]),
            (l[d] = { x: a.parse(x[0], v), y: s.parse(x[1], v) });
        return l;
      }
      parseObjectData(e, i, r, o) {
        let { xScale: a, yScale: s } = e,
          { xAxisKey: l = "x", yAxisKey: d = "y" } = this._parsing,
          m = new Array(o),
          v,
          x,
          C,
          S;
        for (v = 0, x = o; v < x; ++v)
          (C = v + r),
            (S = i[C]),
            (m[v] = { x: a.parse(kr(S, l), C), y: s.parse(kr(S, d), C) });
        return m;
      }
      getParsed(e) {
        return this._cachedMeta._parsed[e];
      }
      getDataElement(e) {
        return this._cachedMeta.data[e];
      }
      applyStack(e, i, r) {
        let o = this.chart,
          a = this._cachedMeta,
          s = i[e.axis],
          l = { keys: jy(o, !0), values: i._stacks[e.axis]._visualValues };
        return zv(l, s, a.index, { mode: r });
      }
      updateRangeFromParsed(e, i, r, o) {
        let a = r[i.axis],
          s = a === null ? NaN : a,
          l = o && r._stacks[i.axis];
        o && l && ((o.values = l), (s = zv(o, a, this._cachedMeta.index))),
          (e.min = Math.min(e.min, s)),
          (e.max = Math.max(e.max, s));
      }
      getMinMax(e, i) {
        let r = this._cachedMeta,
          o = r._parsed,
          a = r._sorted && e === r.iScale,
          s = o.length,
          l = this._getOtherScale(e),
          d = cE(i, r, this.chart),
          m = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY },
          { min: v, max: x } = oE(l),
          C,
          S;
        function T() {
          S = o[C];
          let k = S[l.axis];
          return !Ht(S[e.axis]) || v > k || x < k;
        }
        for (
          C = 0;
          C < s && !(!T() && (this.updateRangeFromParsed(m, e, S, d), a));
          ++C
        );
        if (a) {
          for (C = s - 1; C >= 0; --C)
            if (!T()) {
              this.updateRangeFromParsed(m, e, S, d);
              break;
            }
        }
        return m;
      }
      getAllParsedValues(e) {
        let i = this._cachedMeta._parsed,
          r = [],
          o,
          a,
          s;
        for (o = 0, a = i.length; o < a; ++o)
          (s = i[o][e.axis]), Ht(s) && r.push(s);
        return r;
      }
      getMaxOverflow() {
        return !1;
      }
      getLabelAndValue(e) {
        let i = this._cachedMeta,
          r = i.iScale,
          o = i.vScale,
          a = this.getParsed(e);
        return {
          label: r ? "" + r.getLabelForValue(a[r.axis]) : "",
          value: o ? "" + o.getLabelForValue(a[o.axis]) : "",
        };
      }
      _update(e) {
        let i = this._cachedMeta;
        this.update(e || "default"),
          (i._clip = iE(
            We(this.options.clip, tE(i.xScale, i.yScale, this.getMaxOverflow()))
          ));
      }
      update(e) {}
      draw() {
        let e = this._ctx,
          i = this.chart,
          r = this._cachedMeta,
          o = r.data || [],
          a = i.chartArea,
          s = [],
          l = this._drawStart || 0,
          d = this._drawCount || o.length - l,
          m = this.options.drawActiveElementsOnTop,
          v;
        for (r.dataset && r.dataset.draw(e, a, l, d), v = l; v < l + d; ++v) {
          let x = o[v];
          x.hidden || (x.active && m ? s.push(x) : x.draw(e, a));
        }
        for (v = 0; v < s.length; ++v) s[v].draw(e, a);
      }
      getStyle(e, i) {
        let r = i ? "active" : "default";
        return e === void 0 && this._cachedMeta.dataset
          ? this.resolveDatasetElementOptions(r)
          : this.resolveDataElementOptions(e || 0, r);
      }
      getContext(e, i, r) {
        let o = this.getDataset(),
          a;
        if (e >= 0 && e < this._cachedMeta.data.length) {
          let s = this._cachedMeta.data[e];
          (a = s.$context || (s.$context = lE(this.getContext(), e, s))),
            (a.parsed = this.getParsed(e)),
            (a.raw = o.data[e]),
            (a.index = a.dataIndex = e);
        } else
          (a =
            this.$context ||
            (this.$context = sE(this.chart.getContext(), this.index))),
            (a.dataset = o),
            (a.index = a.datasetIndex = this.index);
        return (a.active = !!i), (a.mode = r), a;
      }
      resolveDatasetElementOptions(e) {
        return this._resolveElementOptions(this.datasetElementType.id, e);
      }
      resolveDataElementOptions(e, i) {
        return this._resolveElementOptions(this.dataElementType.id, i, e);
      }
      _resolveElementOptions(e, i = "default", r) {
        let o = i === "active",
          a = this._cachedDataOpts,
          s = e + "-" + i,
          l = a[s],
          d = this.enableOptionSharing && Aa(r);
        if (l) return Gv(l, d);
        let m = this.chart.config,
          v = m.datasetElementScopeKeys(this._type, e),
          x = o ? [`${e}Hover`, "hover", e, ""] : [e, ""],
          C = m.getOptionScopes(this.getDataset(), v),
          S = Object.keys(kt.elements[e]),
          T = () => this.getContext(r, o, i),
          k = m.resolveNamedOptions(C, S, T, x);
        return (
          k.$shared && ((k.$shared = d), (a[s] = Object.freeze(Gv(k, d)))), k
        );
      }
      _resolveAnimations(e, i, r) {
        let o = this.chart,
          a = this._cachedDataOpts,
          s = `animation-${i}`,
          l = a[s];
        if (l) return l;
        let d;
        if (o.options.animation !== !1) {
          let v = this.chart.config,
            x = v.datasetAnimationScopeKeys(this._type, i),
            C = v.getOptionScopes(this.getDataset(), x);
          d = v.createResolver(C, this.getContext(e, r, i));
        }
        let m = new Gd(o, d && d.animations);
        return d && d._cacheable && (a[s] = Object.freeze(m)), m;
      }
      getSharedOptions(e) {
        if (e.$shared)
          return (
            this._sharedOptions || (this._sharedOptions = Object.assign({}, e))
          );
      }
      includeOptions(e, i) {
        return !i || Im(e) || this.chart._animationsDisabled;
      }
      _getSharedOptions(e, i) {
        let r = this.resolveDataElementOptions(e, i),
          o = this._sharedOptions,
          a = this.getSharedOptions(r),
          s = this.includeOptions(i, a) || a !== o;
        return (
          this.updateSharedOptions(a, i, r),
          { sharedOptions: a, includeOptions: s }
        );
      }
      updateElement(e, i, r, o) {
        Im(o)
          ? Object.assign(e, r)
          : this._resolveAnimations(i, o).update(e, r);
      }
      updateSharedOptions(e, i, r) {
        e && !Im(i) && this._resolveAnimations(void 0, i).update(e, r);
      }
      _setStyle(e, i, r, o) {
        e.active = o;
        let a = this.getStyle(i, o);
        this._resolveAnimations(i, r, o).update(e, {
          options: (!o && this.getSharedOptions(a)) || a,
        });
      }
      removeHoverStyle(e, i, r) {
        this._setStyle(e, r, "active", !1);
      }
      setHoverStyle(e, i, r) {
        this._setStyle(e, r, "active", !0);
      }
      _removeDatasetHoverStyle() {
        let e = this._cachedMeta.dataset;
        e && this._setStyle(e, void 0, "active", !1);
      }
      _setDatasetHoverStyle() {
        let e = this._cachedMeta.dataset;
        e && this._setStyle(e, void 0, "active", !0);
      }
      _resyncElements(e) {
        let i = this._data,
          r = this._cachedMeta.data;
        for (let [l, d, m] of this._syncList) this[l](d, m);
        this._syncList = [];
        let o = r.length,
          a = i.length,
          s = Math.min(a, o);
        s && this.parse(0, s),
          a > o
            ? this._insertElements(o, a - o, e)
            : a < o && this._removeElements(a, o - a);
      }
      _insertElements(e, i, r = !0) {
        let o = this._cachedMeta,
          a = o.data,
          s = e + i,
          l,
          d = (m) => {
            for (m.length += i, l = m.length - 1; l >= s; l--) m[l] = m[l - i];
          };
        for (d(a), l = e; l < s; ++l) a[l] = new this.dataElementType();
        this._parsing && d(o._parsed),
          this.parse(e, i),
          r && this.updateElements(a, e, i, "reset");
      }
      updateElements(e, i, r, o) {}
      _removeElements(e, i) {
        let r = this._cachedMeta;
        if (this._parsing) {
          let o = r._parsed.splice(e, i);
          r._stacked && bl(r, o);
        }
        r.data.splice(e, i);
      }
      _sync(e) {
        if (this._parsing) this._syncList.push(e);
        else {
          let [i, r, o] = e;
          this[i](r, o);
        }
        this.chart._dataChanges.push([this.index, ...e]);
      }
      _onDataPush() {
        let e = arguments.length;
        this._sync(["_insertElements", this.getDataset().data.length - e, e]);
      }
      _onDataPop() {
        this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1]);
      }
      _onDataShift() {
        this._sync(["_removeElements", 0, 1]);
      }
      _onDataSplice(e, i) {
        i && this._sync(["_removeElements", e, i]);
        let r = arguments.length - 2;
        r && this._sync(["_insertElements", e, r]);
      }
      _onDataUnshift() {
        this._sync(["_insertElements", 0, arguments.length]);
      }
    }
    return n;
  })();
function dE(n, t) {
  if (!n._cache.$bar) {
    let e = n.getMatchingVisibleMetas(t),
      i = [];
    for (let r = 0, o = e.length; r < o; r++)
      i = i.concat(e[r].controller.getAllParsedValues(n));
    n._cache.$bar = sm(i.sort((r, o) => r - o));
  }
  return n._cache.$bar;
}
function uE(n) {
  let t = n.iScale,
    e = dE(t, n.type),
    i = t._length,
    r,
    o,
    a,
    s,
    l = () => {
      a === 32767 ||
        a === -32768 ||
        (Aa(s) && (i = Math.min(i, Math.abs(a - s) || i)), (s = a));
    };
  for (r = 0, o = e.length; r < o; ++r) (a = t.getPixelForValue(e[r])), l();
  for (s = void 0, r = 0, o = t.ticks.length; r < o; ++r)
    (a = t.getPixelForTick(r)), l();
  return i;
}
function hE(n, t, e, i) {
  let r = e.barThickness,
    o,
    a;
  return (
    tt(r)
      ? ((o = t.min * e.categoryPercentage), (a = e.barPercentage))
      : ((o = r * i), (a = 1)),
    { chunk: o / i, ratio: a, start: t.pixels[n] - o / 2 }
  );
}
function pE(n, t, e, i) {
  let r = t.pixels,
    o = r[n],
    a = n > 0 ? r[n - 1] : null,
    s = n < r.length - 1 ? r[n + 1] : null,
    l = e.categoryPercentage;
  a === null && (a = o - (s === null ? t.end - t.start : s - o)),
    s === null && (s = o + o - a);
  let d = o - ((o - Math.min(a, s)) / 2) * l;
  return {
    chunk: ((Math.abs(s - a) / 2) * l) / i,
    ratio: e.barPercentage,
    start: d,
  };
}
function mE(n, t, e, i) {
  let r = e.parse(n[0], i),
    o = e.parse(n[1], i),
    a = Math.min(r, o),
    s = Math.max(r, o),
    l = a,
    d = s;
  Math.abs(a) > Math.abs(s) && ((l = s), (d = a)),
    (t[e.axis] = d),
    (t._custom = { barStart: l, barEnd: d, start: r, end: o, min: a, max: s });
}
function Uy(n, t, e, i) {
  return Mt(n) ? mE(n, t, e, i) : (t[e.axis] = e.parse(n, i)), t;
}
function Yv(n, t, e, i) {
  let r = n.iScale,
    o = n.vScale,
    a = r.getLabels(),
    s = r === o,
    l = [],
    d,
    m,
    v,
    x;
  for (d = e, m = e + i; d < m; ++d)
    (x = t[d]),
      (v = {}),
      (v[r.axis] = s || r.parse(a[d], d)),
      l.push(Uy(x, v, o, d));
  return l;
}
function Om(n) {
  return n && n.barStart !== void 0 && n.barEnd !== void 0;
}
function fE(n, t, e) {
  return n !== 0 ? Fn(n) : (t.isHorizontal() ? 1 : -1) * (t.min >= e ? 1 : -1);
}
function gE(n) {
  let t, e, i, r, o;
  return (
    n.horizontal
      ? ((t = n.base > n.x), (e = "left"), (i = "right"))
      : ((t = n.base < n.y), (e = "bottom"), (i = "top")),
    t ? ((r = "end"), (o = "start")) : ((r = "start"), (o = "end")),
    { start: e, end: i, reverse: t, top: r, bottom: o }
  );
}
function _E(n, t, e, i) {
  let r = t.borderSkipped,
    o = {};
  if (!r) {
    n.borderSkipped = o;
    return;
  }
  if (r === !0) {
    n.borderSkipped = { top: !0, right: !0, bottom: !0, left: !0 };
    return;
  }
  let { start: a, end: s, reverse: l, top: d, bottom: m } = gE(n);
  r === "middle" &&
    e &&
    ((n.enableBorderRadius = !0),
    (e._top || 0) === i
      ? (r = d)
      : (e._bottom || 0) === i
      ? (r = m)
      : ((o[qv(m, a, s, l)] = !0), (r = d))),
    (o[qv(r, a, s, l)] = !0),
    (n.borderSkipped = o);
}
function qv(n, t, e, i) {
  return i ? ((n = bE(n, t, e)), (n = Kv(n, e, t))) : (n = Kv(n, t, e)), n;
}
function bE(n, t, e) {
  return n === t ? e : n === e ? t : n;
}
function Kv(n, t, e) {
  return n === "start" ? t : n === "end" ? e : n;
}
function vE(n, { inflateAmount: t }, e) {
  n.inflateAmount = t === "auto" ? (e === 1 ? 0.33 : 0) : t;
}
var yE = (() => {
    class n extends lo {
      static id = "bar";
      static defaults = {
        datasetElementType: !1,
        dataElementType: "bar",
        categoryPercentage: 0.8,
        barPercentage: 0.9,
        grouped: !0,
        animations: {
          numbers: {
            type: "number",
            properties: ["x", "y", "base", "width", "height"],
          },
        },
      };
      static overrides = {
        scales: {
          _index_: { type: "category", offset: !0, grid: { offset: !0 } },
          _value_: { type: "linear", beginAtZero: !0 },
        },
      };
      parsePrimitiveData(e, i, r, o) {
        return Yv(e, i, r, o);
      }
      parseArrayData(e, i, r, o) {
        return Yv(e, i, r, o);
      }
      parseObjectData(e, i, r, o) {
        let { iScale: a, vScale: s } = e,
          { xAxisKey: l = "x", yAxisKey: d = "y" } = this._parsing,
          m = a.axis === "x" ? l : d,
          v = s.axis === "x" ? l : d,
          x = [],
          C,
          S,
          T,
          k;
        for (C = r, S = r + o; C < S; ++C)
          (k = i[C]),
            (T = {}),
            (T[a.axis] = a.parse(kr(k, m), C)),
            x.push(Uy(kr(k, v), T, s, C));
        return x;
      }
      updateRangeFromParsed(e, i, r, o) {
        super.updateRangeFromParsed(e, i, r, o);
        let a = r._custom;
        a &&
          i === this._cachedMeta.vScale &&
          ((e.min = Math.min(e.min, a.min)), (e.max = Math.max(e.max, a.max)));
      }
      getMaxOverflow() {
        return 0;
      }
      getLabelAndValue(e) {
        let i = this._cachedMeta,
          { iScale: r, vScale: o } = i,
          a = this.getParsed(e),
          s = a._custom,
          l = Om(s)
            ? "[" + s.start + ", " + s.end + "]"
            : "" + o.getLabelForValue(a[o.axis]);
        return { label: "" + r.getLabelForValue(a[r.axis]), value: l };
      }
      initialize() {
        (this.enableOptionSharing = !0), super.initialize();
        let e = this._cachedMeta;
        e.stack = this.getDataset().stack;
      }
      update(e) {
        let i = this._cachedMeta;
        this.updateElements(i.data, 0, i.data.length, e);
      }
      updateElements(e, i, r, o) {
        let a = o === "reset",
          {
            index: s,
            _cachedMeta: { vScale: l },
          } = this,
          d = l.getBasePixel(),
          m = l.isHorizontal(),
          v = this._getRuler(),
          { sharedOptions: x, includeOptions: C } = this._getSharedOptions(
            i,
            o
          );
        for (let S = i; S < i + r; S++) {
          let T = this.getParsed(S),
            k =
              a || tt(T[l.axis])
                ? { base: d, head: d }
                : this._calculateBarValuePixels(S),
            P = this._calculateBarIndexPixels(S, v),
            j = (T._stacks || {})[l.axis],
            K = {
              horizontal: m,
              base: k.base,
              enableBorderRadius:
                !j || Om(T._custom) || s === j._top || s === j._bottom,
              x: m ? k.head : P.center,
              y: m ? P.center : k.head,
              height: m ? P.size : Math.abs(k.size),
              width: m ? Math.abs(k.size) : P.size,
            };
          C &&
            (K.options =
              x ||
              this.resolveDataElementOptions(S, e[S].active ? "active" : o));
          let oe = K.options || e[S].options;
          _E(K, oe, j, s),
            vE(K, oe, v.ratio),
            this.updateElement(e[S], S, K, o);
        }
      }
      _getStacks(e, i) {
        let { iScale: r } = this._cachedMeta,
          o = r
            .getMatchingVisibleMetas(this._type)
            .filter((v) => v.controller.options.grouped),
          a = r.options.stacked,
          s = [],
          l = this._cachedMeta.controller.getParsed(i),
          d = l && l[r.axis],
          m = (v) => {
            let x = v._parsed.find((S) => S[r.axis] === d),
              C = x && x[v.vScale.axis];
            if (tt(C) || isNaN(C)) return !0;
          };
        for (let v of o)
          if (
            !(i !== void 0 && m(v)) &&
            ((a === !1 ||
              s.indexOf(v.stack) === -1 ||
              (a === void 0 && v.stack === void 0)) &&
              s.push(v.stack),
            v.index === e)
          )
            break;
        return s.length || s.push(void 0), s;
      }
      _getStackCount(e) {
        return this._getStacks(void 0, e).length;
      }
      _getAxisCount() {
        return this._getAxis().length;
      }
      getFirstScaleIdForIndexAxis() {
        let e = this.chart.scales,
          i = this.chart.options.indexAxis;
        return Object.keys(e)
          .filter((r) => e[r].axis === i)
          .shift();
      }
      _getAxis() {
        let e = {},
          i = this.getFirstScaleIdForIndexAxis();
        for (let r of this.chart.data.datasets)
          e[
            We(this.chart.options.indexAxis === "x" ? r.xAxisID : r.yAxisID, i)
          ] = !0;
        return Object.keys(e);
      }
      _getStackIndex(e, i, r) {
        let o = this._getStacks(e, r),
          a = i !== void 0 ? o.indexOf(i) : -1;
        return a === -1 ? o.length - 1 : a;
      }
      _getRuler() {
        let e = this.options,
          i = this._cachedMeta,
          r = i.iScale,
          o = [],
          a,
          s;
        for (a = 0, s = i.data.length; a < s; ++a)
          o.push(r.getPixelForValue(this.getParsed(a)[r.axis], a));
        let l = e.barThickness;
        return {
          min: l || uE(i),
          pixels: o,
          start: r._startPixel,
          end: r._endPixel,
          stackCount: this._getStackCount(),
          scale: r,
          grouped: e.grouped,
          ratio: l ? 1 : e.categoryPercentage * e.barPercentage,
        };
      }
      _calculateBarValuePixels(e) {
        let {
            _cachedMeta: { vScale: i, _stacked: r, index: o },
            options: { base: a, minBarLength: s },
          } = this,
          l = a || 0,
          d = this.getParsed(e),
          m = d._custom,
          v = Om(m),
          x = d[i.axis],
          C = 0,
          S = r ? this.applyStack(i, d, r) : x,
          T,
          k;
        S !== x && ((C = S - x), (S = x)),
          v &&
            ((x = m.barStart),
            (S = m.barEnd - m.barStart),
            x !== 0 && Fn(x) !== Fn(m.barEnd) && (C = 0),
            (C += x));
        let P = !tt(a) && !v ? a : C,
          j = i.getPixelForValue(P);
        if (
          (this.chart.getDataVisibility(e)
            ? (T = i.getPixelForValue(C + S))
            : (T = j),
          (k = T - j),
          Math.abs(k) < s)
        ) {
          (k = fE(k, i, l) * s), x === l && (j -= k / 2);
          let K = i.getPixelForDecimal(0),
            oe = i.getPixelForDecimal(1),
            ee = Math.min(K, oe),
            b = Math.max(K, oe);
          (j = Math.max(Math.min(j, b), ee)),
            (T = j + k),
            r &&
              !v &&
              (d._stacks[i.axis]._visualValues[o] =
                i.getValueForPixel(T) - i.getValueForPixel(j));
        }
        if (j === i.getPixelForValue(l)) {
          let K = (Fn(k) * i.getLineWidthForValue(l)) / 2;
          (j += K), (k -= K);
        }
        return { size: k, base: j, head: T, center: T + k / 2 };
      }
      _calculateBarIndexPixels(e, i) {
        let r = i.scale,
          o = this.options,
          a = o.skipNull,
          s = We(o.maxBarThickness, 1 / 0),
          l,
          d,
          m = this._getAxisCount();
        if (i.grouped) {
          let v = a ? this._getStackCount(e) : i.stackCount,
            x =
              o.barThickness === "flex"
                ? pE(e, i, o, v * m)
                : hE(e, i, o, v * m),
            C =
              this.chart.options.indexAxis === "x"
                ? this.getDataset().xAxisID
                : this.getDataset().yAxisID,
            S = this._getAxis().indexOf(
              We(C, this.getFirstScaleIdForIndexAxis())
            ),
            T =
              this._getStackIndex(
                this.index,
                this._cachedMeta.stack,
                a ? e : void 0
              ) + S;
          (l = x.start + x.chunk * T + x.chunk / 2),
            (d = Math.min(s, x.chunk * x.ratio));
        } else
          (l = r.getPixelForValue(this.getParsed(e)[r.axis], e)),
            (d = Math.min(s, i.min * i.ratio));
        return { base: l - d / 2, head: l + d / 2, center: l, size: d };
      }
      draw() {
        let e = this._cachedMeta,
          i = e.vScale,
          r = e.data,
          o = r.length,
          a = 0;
        for (; a < o; ++a)
          this.getParsed(a)[i.axis] !== null &&
            !r[a].hidden &&
            r[a].draw(this._ctx);
      }
    }
    return n;
  })(),
  xE = (() => {
    class n extends lo {
      static id = "bubble";
      static defaults = {
        datasetElementType: !1,
        dataElementType: "point",
        animations: {
          numbers: {
            type: "number",
            properties: ["x", "y", "borderWidth", "radius"],
          },
        },
      };
      static overrides = {
        scales: { x: { type: "linear" }, y: { type: "linear" } },
      };
      initialize() {
        (this.enableOptionSharing = !0), super.initialize();
      }
      parsePrimitiveData(e, i, r, o) {
        let a = super.parsePrimitiveData(e, i, r, o);
        for (let s = 0; s < a.length; s++)
          a[s]._custom = this.resolveDataElementOptions(s + r).radius;
        return a;
      }
      parseArrayData(e, i, r, o) {
        let a = super.parseArrayData(e, i, r, o);
        for (let s = 0; s < a.length; s++) {
          let l = i[r + s];
          a[s]._custom = We(l[2], this.resolveDataElementOptions(s + r).radius);
        }
        return a;
      }
      parseObjectData(e, i, r, o) {
        let a = super.parseObjectData(e, i, r, o);
        for (let s = 0; s < a.length; s++) {
          let l = i[r + s];
          a[s]._custom = We(
            l && l.r && +l.r,
            this.resolveDataElementOptions(s + r).radius
          );
        }
        return a;
      }
      getMaxOverflow() {
        let e = this._cachedMeta.data,
          i = 0;
        for (let r = e.length - 1; r >= 0; --r)
          i = Math.max(i, e[r].size(this.resolveDataElementOptions(r)) / 2);
        return i > 0 && i;
      }
      getLabelAndValue(e) {
        let i = this._cachedMeta,
          r = this.chart.data.labels || [],
          { xScale: o, yScale: a } = i,
          s = this.getParsed(e),
          l = o.getLabelForValue(s.x),
          d = a.getLabelForValue(s.y),
          m = s._custom;
        return {
          label: r[e] || "",
          value: "(" + l + ", " + d + (m ? ", " + m : "") + ")",
        };
      }
      update(e) {
        let i = this._cachedMeta.data;
        this.updateElements(i, 0, i.length, e);
      }
      updateElements(e, i, r, o) {
        let a = o === "reset",
          { iScale: s, vScale: l } = this._cachedMeta,
          { sharedOptions: d, includeOptions: m } = this._getSharedOptions(
            i,
            o
          ),
          v = s.axis,
          x = l.axis;
        for (let C = i; C < i + r; C++) {
          let S = e[C],
            T = !a && this.getParsed(C),
            k = {},
            P = (k[v] = a
              ? s.getPixelForDecimal(0.5)
              : s.getPixelForValue(T[v])),
            j = (k[x] = a ? l.getBasePixel() : l.getPixelForValue(T[x]));
          (k.skip = isNaN(P) || isNaN(j)),
            m &&
              ((k.options =
                d ||
                this.resolveDataElementOptions(C, S.active ? "active" : o)),
              a && (k.options.radius = 0)),
            this.updateElement(S, C, k, o);
        }
      }
      resolveDataElementOptions(e, i) {
        let r = this.getParsed(e),
          o = super.resolveDataElementOptions(e, i);
        o.$shared && (o = Object.assign({}, o, { $shared: !1 }));
        let a = o.radius;
        return (
          i !== "active" && (o.radius = 0),
          (o.radius += We(r && r._custom, a)),
          o
        );
      }
    }
    return n;
  })();
function CE(n, t, e) {
  let i = 1,
    r = 1,
    o = 0,
    a = 0;
  if (t < Tt) {
    let s = n,
      l = s + t,
      d = Math.cos(s),
      m = Math.sin(s),
      v = Math.cos(l),
      x = Math.sin(l),
      C = (K, oe, ee) =>
        Fa(K, s, l, !0) ? 1 : Math.max(oe, oe * e, ee, ee * e),
      S = (K, oe, ee) =>
        Fa(K, s, l, !0) ? -1 : Math.min(oe, oe * e, ee, ee * e),
      T = C(0, d, v),
      k = C(qt, m, x),
      P = S(ut, d, v),
      j = S(ut + qt, m, x);
    (i = (T - P) / 2),
      (r = (k - j) / 2),
      (o = -(T + P) / 2),
      (a = -(k + j) / 2);
  }
  return { ratioX: i, ratioY: r, offsetX: o, offsetY: a };
}
var af = (() => {
    class n extends lo {
      static id = "doughnut";
      static defaults = {
        datasetElementType: !1,
        dataElementType: "arc",
        animation: { animateRotate: !0, animateScale: !1 },
        animations: {
          numbers: {
            type: "number",
            properties: [
              "circumference",
              "endAngle",
              "innerRadius",
              "outerRadius",
              "startAngle",
              "x",
              "y",
              "offset",
              "borderWidth",
              "spacing",
            ],
          },
        },
        cutout: "50%",
        rotation: 0,
        circumference: 360,
        radius: "100%",
        spacing: 0,
        indexAxis: "r",
      };
      static descriptors = {
        _scriptable: (e) => e !== "spacing",
        _indexable: (e) =>
          e !== "spacing" &&
          !e.startsWith("borderDash") &&
          !e.startsWith("hoverBorderDash"),
      };
      static overrides = {
        aspectRatio: 1,
        plugins: {
          legend: {
            labels: {
              generateLabels(e) {
                let i = e.data;
                if (i.labels.length && i.datasets.length) {
                  let {
                    labels: { pointStyle: r, color: o },
                  } = e.legend.options;
                  return i.labels.map((a, s) => {
                    let d = e.getDatasetMeta(0).controller.getStyle(s);
                    return {
                      text: a,
                      fillStyle: d.backgroundColor,
                      strokeStyle: d.borderColor,
                      fontColor: o,
                      lineWidth: d.borderWidth,
                      pointStyle: r,
                      hidden: !e.getDataVisibility(s),
                      index: s,
                    };
                  });
                }
                return [];
              },
            },
            onClick(e, i, r) {
              r.chart.toggleDataVisibility(i.index), r.chart.update();
            },
          },
        },
      };
      constructor(e, i) {
        super(e, i),
          (this.enableOptionSharing = !0),
          (this.innerRadius = void 0),
          (this.outerRadius = void 0),
          (this.offsetX = void 0),
          (this.offsetY = void 0);
      }
      linkScales() {}
      parse(e, i) {
        let r = this.getDataset().data,
          o = this._cachedMeta;
        if (this._parsing === !1) o._parsed = r;
        else {
          let a = (d) => +r[d];
          if (ot(r[e])) {
            let { key: d = "value" } = this._parsing;
            a = (m) => +kr(r[m], d);
          }
          let s, l;
          for (s = e, l = e + i; s < l; ++s) o._parsed[s] = a(s);
        }
      }
      _getRotation() {
        return Cn(this.options.rotation - 90);
      }
      _getCircumference() {
        return Cn(this.options.circumference);
      }
      _getRotationExtents() {
        let e = Tt,
          i = -Tt;
        for (let r = 0; r < this.chart.data.datasets.length; ++r)
          if (
            this.chart.isDatasetVisible(r) &&
            this.chart.getDatasetMeta(r).type === this._type
          ) {
            let o = this.chart.getDatasetMeta(r).controller,
              a = o._getRotation(),
              s = o._getCircumference();
            (e = Math.min(e, a)), (i = Math.max(i, a + s));
          }
        return { rotation: e, circumference: i - e };
      }
      update(e) {
        let i = this.chart,
          { chartArea: r } = i,
          o = this._cachedMeta,
          a = o.data,
          s =
            this.getMaxBorderWidth() +
            this.getMaxOffset(a) +
            this.options.spacing,
          l = Math.max((Math.min(r.width, r.height) - s) / 2, 0),
          d = Math.min(pv(this.options.cutout, l), 1),
          m = this._getRingWeight(this.index),
          { circumference: v, rotation: x } = this._getRotationExtents(),
          { ratioX: C, ratioY: S, offsetX: T, offsetY: k } = CE(x, v, d),
          P = (r.width - s) / C,
          j = (r.height - s) / S,
          K = Math.max(Math.min(P, j) / 2, 0),
          oe = em(this.options.radius, K),
          ee = Math.max(oe * d, 0),
          b = (oe - ee) / this._getVisibleDatasetWeightTotal();
        (this.offsetX = T * oe),
          (this.offsetY = k * oe),
          (o.total = this.calculateTotal()),
          (this.outerRadius = oe - b * this._getRingWeightOffset(this.index)),
          (this.innerRadius = Math.max(this.outerRadius - b * m, 0)),
          this.updateElements(a, 0, a.length, e);
      }
      _circumference(e, i) {
        let r = this.options,
          o = this._cachedMeta,
          a = this._getCircumference();
        return (i && r.animation.animateRotate) ||
          !this.chart.getDataVisibility(e) ||
          o._parsed[e] === null ||
          o.data[e].hidden
          ? 0
          : this.calculateCircumference((o._parsed[e] * a) / Tt);
      }
      updateElements(e, i, r, o) {
        let a = o === "reset",
          s = this.chart,
          l = s.chartArea,
          m = s.options.animation,
          v = (l.left + l.right) / 2,
          x = (l.top + l.bottom) / 2,
          C = a && m.animateScale,
          S = C ? 0 : this.innerRadius,
          T = C ? 0 : this.outerRadius,
          { sharedOptions: k, includeOptions: P } = this._getSharedOptions(
            i,
            o
          ),
          j = this._getRotation(),
          K;
        for (K = 0; K < i; ++K) j += this._circumference(K, a);
        for (K = i; K < i + r; ++K) {
          let oe = this._circumference(K, a),
            ee = e[K],
            b = {
              x: v + this.offsetX,
              y: x + this.offsetY,
              startAngle: j,
              endAngle: j + oe,
              circumference: oe,
              outerRadius: T,
              innerRadius: S,
            };
          P &&
            (b.options =
              k || this.resolveDataElementOptions(K, ee.active ? "active" : o)),
            (j += oe),
            this.updateElement(ee, K, b, o);
        }
      }
      calculateTotal() {
        let e = this._cachedMeta,
          i = e.data,
          r = 0,
          o;
        for (o = 0; o < i.length; o++) {
          let a = e._parsed[o];
          a !== null &&
            !isNaN(a) &&
            this.chart.getDataVisibility(o) &&
            !i[o].hidden &&
            (r += Math.abs(a));
        }
        return r;
      }
      calculateCircumference(e) {
        let i = this._cachedMeta.total;
        return i > 0 && !isNaN(e) ? Tt * (Math.abs(e) / i) : 0;
      }
      getLabelAndValue(e) {
        let i = this._cachedMeta,
          r = this.chart,
          o = r.data.labels || [],
          a = Na(i._parsed[e], r.options.locale);
        return { label: o[e] || "", value: a };
      }
      getMaxBorderWidth(e) {
        let i = 0,
          r = this.chart,
          o,
          a,
          s,
          l,
          d;
        if (!e) {
          for (o = 0, a = r.data.datasets.length; o < a; ++o)
            if (r.isDatasetVisible(o)) {
              (s = r.getDatasetMeta(o)), (e = s.data), (l = s.controller);
              break;
            }
        }
        if (!e) return 0;
        for (o = 0, a = e.length; o < a; ++o)
          (d = l.resolveDataElementOptions(o)),
            d.borderAlign !== "inner" &&
              (i = Math.max(i, d.borderWidth || 0, d.hoverBorderWidth || 0));
        return i;
      }
      getMaxOffset(e) {
        let i = 0;
        for (let r = 0, o = e.length; r < o; ++r) {
          let a = this.resolveDataElementOptions(r);
          i = Math.max(i, a.offset || 0, a.hoverOffset || 0);
        }
        return i;
      }
      _getRingWeightOffset(e) {
        let i = 0;
        for (let r = 0; r < e; ++r)
          this.chart.isDatasetVisible(r) && (i += this._getRingWeight(r));
        return i;
      }
      _getRingWeight(e) {
        return Math.max(We(this.chart.data.datasets[e].weight, 1), 0);
      }
      _getVisibleDatasetWeightTotal() {
        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;
      }
    }
    return n;
  })(),
  sf = (() => {
    class n extends lo {
      static id = "line";
      static defaults = {
        datasetElementType: "line",
        dataElementType: "point",
        showLine: !0,
        spanGaps: !1,
      };
      static overrides = {
        scales: { _index_: { type: "category" }, _value_: { type: "linear" } },
      };
      initialize() {
        (this.enableOptionSharing = !0),
          (this.supportsDecimation = !0),
          super.initialize();
      }
      update(e) {
        let i = this._cachedMeta,
          { dataset: r, data: o = [], _dataset: a } = i,
          s = this.chart._animationsDisabled,
          { start: l, count: d } = dm(i, o, s);
        (this._drawStart = l),
          (this._drawCount = d),
          um(i) && ((l = 0), (d = o.length)),
          (r._chart = this.chart),
          (r._datasetIndex = this.index),
          (r._decimated = !!a._decimated),
          (r.points = o);
        let m = this.resolveDatasetElementOptions(e);
        this.options.showLine || (m.borderWidth = 0),
          (m.segment = this.options.segment),
          this.updateElement(r, void 0, { animated: !s, options: m }, e),
          this.updateElements(o, l, d, e);
      }
      updateElements(e, i, r, o) {
        let a = o === "reset",
          { iScale: s, vScale: l, _stacked: d, _dataset: m } = this._cachedMeta,
          { sharedOptions: v, includeOptions: x } = this._getSharedOptions(
            i,
            o
          ),
          C = s.axis,
          S = l.axis,
          { spanGaps: T, segment: k } = this.options,
          P = Ro(T) ? T : Number.POSITIVE_INFINITY,
          j = this.chart._animationsDisabled || a || o === "none",
          K = i + r,
          oe = e.length,
          ee = i > 0 && this.getParsed(i - 1);
        for (let b = 0; b < oe; ++b) {
          let me = e[b],
            re = j ? me : {};
          if (b < i || b >= K) {
            re.skip = !0;
            continue;
          }
          let _e = this.getParsed(b),
            He = tt(_e[S]),
            Ge = (re[C] = s.getPixelForValue(_e[C], b)),
            Se = (re[S] =
              a || He
                ? l.getBasePixel()
                : l.getPixelForValue(d ? this.applyStack(l, _e, d) : _e[S], b));
          (re.skip = isNaN(Ge) || isNaN(Se) || He),
            (re.stop = b > 0 && Math.abs(_e[C] - ee[C]) > P),
            k && ((re.parsed = _e), (re.raw = m.data[b])),
            x &&
              (re.options =
                v ||
                this.resolveDataElementOptions(b, me.active ? "active" : o)),
            j || this.updateElement(me, b, re, o),
            (ee = _e);
        }
      }
      getMaxOverflow() {
        let e = this._cachedMeta,
          i = e.dataset,
          r = (i.options && i.options.borderWidth) || 0,
          o = e.data || [];
        if (!o.length) return r;
        let a = o[0].size(this.resolveDataElementOptions(0)),
          s = o[o.length - 1].size(
            this.resolveDataElementOptions(o.length - 1)
          );
        return Math.max(r, a, s) / 2;
      }
      draw() {
        let e = this._cachedMeta;
        e.dataset.updateControlPoints(this.chart.chartArea, e.iScale.axis),
          super.draw();
      }
    }
    return n;
  })(),
  zy = (() => {
    class n extends lo {
      static id = "polarArea";
      static defaults = {
        dataElementType: "arc",
        animation: { animateRotate: !0, animateScale: !0 },
        animations: {
          numbers: {
            type: "number",
            properties: [
              "x",
              "y",
              "startAngle",
              "endAngle",
              "innerRadius",
              "outerRadius",
            ],
          },
        },
        indexAxis: "r",
        startAngle: 0,
      };
      static overrides = {
        aspectRatio: 1,
        plugins: {
          legend: {
            labels: {
              generateLabels(e) {
                let i = e.data;
                if (i.labels.length && i.datasets.length) {
                  let {
                    labels: { pointStyle: r, color: o },
                  } = e.legend.options;
                  return i.labels.map((a, s) => {
                    let d = e.getDatasetMeta(0).controller.getStyle(s);
                    return {
                      text: a,
                      fillStyle: d.backgroundColor,
                      strokeStyle: d.borderColor,
                      fontColor: o,
                      lineWidth: d.borderWidth,
                      pointStyle: r,
                      hidden: !e.getDataVisibility(s),
                      index: s,
                    };
                  });
                }
                return [];
              },
            },
            onClick(e, i, r) {
              r.chart.toggleDataVisibility(i.index), r.chart.update();
            },
          },
        },
        scales: {
          r: {
            type: "radialLinear",
            angleLines: { display: !1 },
            beginAtZero: !0,
            grid: { circular: !0 },
            pointLabels: { display: !1 },
            startAngle: 0,
          },
        },
      };
      constructor(e, i) {
        super(e, i), (this.innerRadius = void 0), (this.outerRadius = void 0);
      }
      getLabelAndValue(e) {
        let i = this._cachedMeta,
          r = this.chart,
          o = r.data.labels || [],
          a = Na(i._parsed[e].r, r.options.locale);
        return { label: o[e] || "", value: a };
      }
      parseObjectData(e, i, r, o) {
        return ym.bind(this)(e, i, r, o);
      }
      update(e) {
        let i = this._cachedMeta.data;
        this._updateRadius(), this.updateElements(i, 0, i.length, e);
      }
      getMinMax() {
        let e = this._cachedMeta,
          i = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY };
        return (
          e.data.forEach((r, o) => {
            let a = this.getParsed(o).r;
            !isNaN(a) &&
              this.chart.getDataVisibility(o) &&
              (a < i.min && (i.min = a), a > i.max && (i.max = a));
          }),
          i
        );
      }
      _updateRadius() {
        let e = this.chart,
          i = e.chartArea,
          r = e.options,
          o = Math.min(i.right - i.left, i.bottom - i.top),
          a = Math.max(o / 2, 0),
          s = Math.max(
            r.cutoutPercentage ? (a / 100) * r.cutoutPercentage : 1,
            0
          ),
          l = (a - s) / e.getVisibleDatasetCount();
        (this.outerRadius = a - l * this.index),
          (this.innerRadius = this.outerRadius - l);
      }
      updateElements(e, i, r, o) {
        let a = o === "reset",
          s = this.chart,
          d = s.options.animation,
          m = this._cachedMeta.rScale,
          v = m.xCenter,
          x = m.yCenter,
          C = m.getIndexAngle(0) - 0.5 * ut,
          S = C,
          T,
          k = 360 / this.countVisibleElements();
        for (T = 0; T < i; ++T) S += this._computeAngle(T, o, k);
        for (T = i; T < i + r; T++) {
          let P = e[T],
            j = S,
            K = S + this._computeAngle(T, o, k),
            oe = s.getDataVisibility(T)
              ? m.getDistanceFromCenterForValue(this.getParsed(T).r)
              : 0;
          (S = K),
            a && (d.animateScale && (oe = 0), d.animateRotate && (j = K = C));
          let ee = {
            x: v,
            y: x,
            innerRadius: 0,
            outerRadius: oe,
            startAngle: j,
            endAngle: K,
            options: this.resolveDataElementOptions(T, P.active ? "active" : o),
          };
          this.updateElement(P, T, ee, o);
        }
      }
      countVisibleElements() {
        let e = this._cachedMeta,
          i = 0;
        return (
          e.data.forEach((r, o) => {
            !isNaN(this.getParsed(o).r) &&
              this.chart.getDataVisibility(o) &&
              i++;
          }),
          i
        );
      }
      _computeAngle(e, i, r) {
        return this.chart.getDataVisibility(e)
          ? Cn(this.resolveDataElementOptions(e, i).angle || r)
          : 0;
      }
    }
    return n;
  })(),
  wE = (() => {
    class n extends af {
      static id = "pie";
      static defaults = {
        cutout: 0,
        rotation: 0,
        circumference: 360,
        radius: "100%",
      };
    }
    return n;
  })(),
  DE = (() => {
    class n extends lo {
      static id = "radar";
      static defaults = {
        datasetElementType: "line",
        dataElementType: "point",
        indexAxis: "r",
        showLine: !0,
        elements: { line: { fill: "start" } },
      };
      static overrides = {
        aspectRatio: 1,
        scales: { r: { type: "radialLinear" } },
      };
      getLabelAndValue(e) {
        let i = this._cachedMeta.vScale,
          r = this.getParsed(e);
        return {
          label: i.getLabels()[e],
          value: "" + i.getLabelForValue(r[i.axis]),
        };
      }
      parseObjectData(e, i, r, o) {
        return ym.bind(this)(e, i, r, o);
      }
      update(e) {
        let i = this._cachedMeta,
          r = i.dataset,
          o = i.data || [],
          a = i.iScale.getLabels();
        if (((r.points = o), e !== "resize")) {
          let s = this.resolveDatasetElementOptions(e);
          this.options.showLine || (s.borderWidth = 0);
          let l = { _loop: !0, _fullLoop: a.length === o.length, options: s };
          this.updateElement(r, void 0, l, e);
        }
        this.updateElements(o, 0, o.length, e);
      }
      updateElements(e, i, r, o) {
        let a = this._cachedMeta.rScale,
          s = o === "reset";
        for (let l = i; l < i + r; l++) {
          let d = e[l],
            m = this.resolveDataElementOptions(l, d.active ? "active" : o),
            v = a.getPointPositionForValue(l, this.getParsed(l).r),
            x = s ? a.xCenter : v.x,
            C = s ? a.yCenter : v.y,
            S = {
              x,
              y: C,
              angle: v.angle,
              skip: isNaN(x) || isNaN(C),
              options: m,
            };
          this.updateElement(d, l, S, o);
        }
      }
    }
    return n;
  })(),
  SE = (() => {
    class n extends lo {
      static id = "scatter";
      static defaults = {
        datasetElementType: !1,
        dataElementType: "point",
        showLine: !1,
        fill: !1,
      };
      static overrides = {
        interaction: { mode: "point" },
        scales: { x: { type: "linear" }, y: { type: "linear" } },
      };
      getLabelAndValue(e) {
        let i = this._cachedMeta,
          r = this.chart.data.labels || [],
          { xScale: o, yScale: a } = i,
          s = this.getParsed(e),
          l = o.getLabelForValue(s.x),
          d = a.getLabelForValue(s.y);
        return { label: r[e] || "", value: "(" + l + ", " + d + ")" };
      }
      update(e) {
        let i = this._cachedMeta,
          { data: r = [] } = i,
          o = this.chart._animationsDisabled,
          { start: a, count: s } = dm(i, r, o);
        if (
          ((this._drawStart = a),
          (this._drawCount = s),
          um(i) && ((a = 0), (s = r.length)),
          this.options.showLine)
        ) {
          this.datasetElementType || this.addElements();
          let { dataset: l, _dataset: d } = i;
          (l._chart = this.chart),
            (l._datasetIndex = this.index),
            (l._decimated = !!d._decimated),
            (l.points = r);
          let m = this.resolveDatasetElementOptions(e);
          (m.segment = this.options.segment),
            this.updateElement(l, void 0, { animated: !o, options: m }, e);
        } else
          this.datasetElementType &&
            (delete i.dataset, (this.datasetElementType = !1));
        this.updateElements(r, a, s, e);
      }
      addElements() {
        let { showLine: e } = this.options;
        !this.datasetElementType &&
          e &&
          (this.datasetElementType = this.chart.registry.getElement("line")),
          super.addElements();
      }
      updateElements(e, i, r, o) {
        let a = o === "reset",
          { iScale: s, vScale: l, _stacked: d, _dataset: m } = this._cachedMeta,
          v = this.resolveDataElementOptions(i, o),
          x = this.getSharedOptions(v),
          C = this.includeOptions(o, x),
          S = s.axis,
          T = l.axis,
          { spanGaps: k, segment: P } = this.options,
          j = Ro(k) ? k : Number.POSITIVE_INFINITY,
          K = this.chart._animationsDisabled || a || o === "none",
          oe = i > 0 && this.getParsed(i - 1);
        for (let ee = i; ee < i + r; ++ee) {
          let b = e[ee],
            me = this.getParsed(ee),
            re = K ? b : {},
            _e = tt(me[T]),
            He = (re[S] = s.getPixelForValue(me[S], ee)),
            Ge = (re[T] =
              a || _e
                ? l.getBasePixel()
                : l.getPixelForValue(
                    d ? this.applyStack(l, me, d) : me[T],
                    ee
                  ));
          (re.skip = isNaN(He) || isNaN(Ge) || _e),
            (re.stop = ee > 0 && Math.abs(me[S] - oe[S]) > j),
            P && ((re.parsed = me), (re.raw = m.data[ee])),
            C &&
              (re.options =
                x ||
                this.resolveDataElementOptions(ee, b.active ? "active" : o)),
            K || this.updateElement(b, ee, re, o),
            (oe = me);
        }
        this.updateSharedOptions(x, o, v);
      }
      getMaxOverflow() {
        let e = this._cachedMeta,
          i = e.data || [];
        if (!this.options.showLine) {
          let l = 0;
          for (let d = i.length - 1; d >= 0; --d)
            l = Math.max(l, i[d].size(this.resolveDataElementOptions(d)) / 2);
          return l > 0 && l;
        }
        let r = e.dataset,
          o = (r.options && r.options.borderWidth) || 0;
        if (!i.length) return o;
        let a = i[0].size(this.resolveDataElementOptions(0)),
          s = i[i.length - 1].size(
            this.resolveDataElementOptions(i.length - 1)
          );
        return Math.max(o, a, s) / 2;
      }
    }
    return n;
  })(),
  ME = Object.freeze({
    __proto__: null,
    BarController: yE,
    BubbleController: xE,
    DoughnutController: af,
    LineController: sf,
    PieController: wE,
    PolarAreaController: zy,
    RadarController: DE,
    ScatterController: SE,
  });
function No() {
  throw new Error(
    "This method is not implemented: Check that a complete date adapter is provided."
  );
}
var jm = class n {
    static override(t) {
      Object.assign(n.prototype, t);
    }
    options;
    constructor(t) {
      this.options = t || {};
    }
    init() {}
    formats() {
      return No();
    }
    parse() {
      return No();
    }
    format() {
      return No();
    }
    add() {
      return No();
    }
    diff() {
      return No();
    }
    startOf() {
      return No();
    }
    endOf() {
      return No();
    }
  },
  TE = { _date: jm };
function EE(n, t, e, i) {
  let { controller: r, data: o, _sorted: a } = n,
    s = r._cachedMeta.iScale,
    l = n.dataset && n.dataset.options ? n.dataset.options.spanGaps : null;
  if (s && t === s.axis && t !== "r" && a && o.length) {
    let d = s._reversePixels ? vv : nr;
    if (i) {
      if (r._sharedOptions) {
        let m = o[0],
          v = typeof m.getRange == "function" && m.getRange(t);
        if (v) {
          let x = d(o, t, e - v),
            C = d(o, t, e + v);
          return { lo: x.lo, hi: C.hi };
        }
      }
    } else {
      let m = d(o, t, e);
      if (l) {
        let { vScale: v } = r._cachedMeta,
          { _parsed: x } = n,
          C = x
            .slice(0, m.lo + 1)
            .reverse()
            .findIndex((T) => !tt(T[v.axis]));
        m.lo -= Math.max(0, C);
        let S = x.slice(m.hi).findIndex((T) => !tt(T[v.axis]));
        m.hi += Math.max(0, S);
      }
      return m;
    }
  }
  return { lo: 0, hi: o.length - 1 };
}
function kl(n, t, e, i, r) {
  let o = n.getSortedVisibleDatasetMetas(),
    a = e[t];
  for (let s = 0, l = o.length; s < l; ++s) {
    let { index: d, data: m } = o[s],
      { lo: v, hi: x } = EE(o[s], t, a, r);
    for (let C = v; C <= x; ++C) {
      let S = m[C];
      S.skip || i(S, d, C);
    }
  }
}
function kE(n) {
  let t = n.indexOf("x") !== -1,
    e = n.indexOf("y") !== -1;
  return function (i, r) {
    let o = t ? Math.abs(i.x - r.x) : 0,
      a = e ? Math.abs(i.y - r.y) : 0;
    return Math.sqrt(Math.pow(o, 2) + Math.pow(a, 2));
  };
}
function Pm(n, t, e, i, r) {
  let o = [];
  return (
    (!r && !n.isPointInArea(t)) ||
      kl(
        n,
        e,
        t,
        function (s, l, d) {
          (!r && !rr(s, n.chartArea, 0)) ||
            (s.inRange(t.x, t.y, i) &&
              o.push({ element: s, datasetIndex: l, index: d }));
        },
        !0
      ),
    o
  );
}
function IE(n, t, e, i) {
  let r = [];
  function o(a, s, l) {
    let { startAngle: d, endAngle: m } = a.getProps(
        ["startAngle", "endAngle"],
        i
      ),
      { angle: v } = om(a, { x: t.x, y: t.y });
    Fa(v, d, m) && r.push({ element: a, datasetIndex: s, index: l });
  }
  return kl(n, e, t, o), r;
}
function OE(n, t, e, i, r, o) {
  let a = [],
    s = kE(e),
    l = Number.POSITIVE_INFINITY;
  function d(m, v, x) {
    let C = m.inRange(t.x, t.y, r);
    if (i && !C) return;
    let S = m.getCenterPoint(r);
    if (!(!!o || n.isPointInArea(S)) && !C) return;
    let k = s(t, S);
    k < l
      ? ((a = [{ element: m, datasetIndex: v, index: x }]), (l = k))
      : k === l && a.push({ element: m, datasetIndex: v, index: x });
  }
  return kl(n, e, t, d), a;
}
function Am(n, t, e, i, r, o) {
  return !o && !n.isPointInArea(t)
    ? []
    : e === "r" && !i
    ? IE(n, t, e, r)
    : OE(n, t, e, i, r, o);
}
function Qv(n, t, e, i, r) {
  let o = [],
    a = e === "x" ? "inXRange" : "inYRange",
    s = !1;
  return (
    kl(n, e, t, (l, d, m) => {
      l[a] &&
        l[a](t[e], r) &&
        (o.push({ element: l, datasetIndex: d, index: m }),
        (s = s || l.inRange(t.x, t.y, r)));
    }),
    i && !s ? [] : o
  );
}
var PE = {
    evaluateInteractionItems: kl,
    modes: {
      index(n, t, e, i) {
        let r = ao(t, n),
          o = e.axis || "x",
          a = e.includeInvisible || !1,
          s = e.intersect ? Pm(n, r, o, i, a) : Am(n, r, o, !1, i, a),
          l = [];
        return s.length
          ? (n.getSortedVisibleDatasetMetas().forEach((d) => {
              let m = s[0].index,
                v = d.data[m];
              v &&
                !v.skip &&
                l.push({ element: v, datasetIndex: d.index, index: m });
            }),
            l)
          : [];
      },
      dataset(n, t, e, i) {
        let r = ao(t, n),
          o = e.axis || "xy",
          a = e.includeInvisible || !1,
          s = e.intersect ? Pm(n, r, o, i, a) : Am(n, r, o, !1, i, a);
        if (s.length > 0) {
          let l = s[0].datasetIndex,
            d = n.getDatasetMeta(l).data;
          s = [];
          for (let m = 0; m < d.length; ++m)
            s.push({ element: d[m], datasetIndex: l, index: m });
        }
        return s;
      },
      point(n, t, e, i) {
        let r = ao(t, n),
          o = e.axis || "xy",
          a = e.includeInvisible || !1;
        return Pm(n, r, o, i, a);
      },
      nearest(n, t, e, i) {
        let r = ao(t, n),
          o = e.axis || "xy",
          a = e.includeInvisible || !1;
        return Am(n, r, o, e.intersect, i, a);
      },
      x(n, t, e, i) {
        let r = ao(t, n);
        return Qv(n, r, "x", e.intersect, i);
      },
      y(n, t, e, i) {
        let r = ao(t, n);
        return Qv(n, r, "y", e.intersect, i);
      },
    },
  },
  $y = ["left", "top", "right", "bottom"];
function vl(n, t) {
  return n.filter((e) => e.pos === t);
}
function Xv(n, t) {
  return n.filter((e) => $y.indexOf(e.pos) === -1 && e.box.axis === t);
}
function yl(n, t) {
  return n.sort((e, i) => {
    let r = t ? i : e,
      o = t ? e : i;
    return r.weight === o.weight ? r.index - o.index : r.weight - o.weight;
  });
}
function AE(n) {
  let t = [],
    e,
    i,
    r,
    o,
    a,
    s;
  for (e = 0, i = (n || []).length; e < i; ++e)
    (r = n[e]),
      ({
        position: o,
        options: { stack: a, stackWeight: s = 1 },
      } = r),
      t.push({
        index: e,
        box: r,
        pos: o,
        horizontal: r.isHorizontal(),
        weight: r.weight,
        stack: a && o + a,
        stackWeight: s,
      });
  return t;
}
function RE(n) {
  let t = {};
  for (let e of n) {
    let { stack: i, pos: r, stackWeight: o } = e;
    if (!i || !$y.includes(r)) continue;
    let a = t[i] || (t[i] = { count: 0, placed: 0, weight: 0, size: 0 });
    a.count++, (a.weight += o);
  }
  return t;
}
function FE(n, t) {
  let e = RE(n),
    { vBoxMaxWidth: i, hBoxMaxHeight: r } = t,
    o,
    a,
    s;
  for (o = 0, a = n.length; o < a; ++o) {
    s = n[o];
    let { fullSize: l } = s.box,
      d = e[s.stack],
      m = d && s.stackWeight / d.weight;
    s.horizontal
      ? ((s.width = m ? m * i : l && t.availableWidth), (s.height = r))
      : ((s.width = i), (s.height = m ? m * r : l && t.availableHeight));
  }
  return e;
}
function NE(n) {
  let t = AE(n),
    e = yl(
      t.filter((d) => d.box.fullSize),
      !0
    ),
    i = yl(vl(t, "left"), !0),
    r = yl(vl(t, "right")),
    o = yl(vl(t, "top"), !0),
    a = yl(vl(t, "bottom")),
    s = Xv(t, "x"),
    l = Xv(t, "y");
  return {
    fullSize: e,
    leftAndTop: i.concat(o),
    rightAndBottom: r.concat(l).concat(a).concat(s),
    chartArea: vl(t, "chartArea"),
    vertical: i.concat(r).concat(l),
    horizontal: o.concat(a).concat(s),
  };
}
function Zv(n, t, e, i) {
  return Math.max(n[e], t[e]) + Math.max(n[i], t[i]);
}
function Wy(n, t) {
  (n.top = Math.max(n.top, t.top)),
    (n.left = Math.max(n.left, t.left)),
    (n.bottom = Math.max(n.bottom, t.bottom)),
    (n.right = Math.max(n.right, t.right));
}
function LE(n, t, e, i) {
  let { pos: r, box: o } = e,
    a = n.maxPadding;
  if (!ot(r)) {
    e.size && (n[r] -= e.size);
    let v = i[e.stack] || { size: 0, count: 1 };
    (v.size = Math.max(v.size, e.horizontal ? o.height : o.width)),
      (e.size = v.size / v.count),
      (n[r] += e.size);
  }
  o.getPadding && Wy(a, o.getPadding());
  let s = Math.max(0, t.outerWidth - Zv(a, n, "left", "right")),
    l = Math.max(0, t.outerHeight - Zv(a, n, "top", "bottom")),
    d = s !== n.w,
    m = l !== n.h;
  return (
    (n.w = s),
    (n.h = l),
    e.horizontal ? { same: d, other: m } : { same: m, other: d }
  );
}
function VE(n) {
  let t = n.maxPadding;
  function e(i) {
    let r = Math.max(t[i] - n[i], 0);
    return (n[i] += r), r;
  }
  (n.y += e("top")), (n.x += e("left")), e("right"), e("bottom");
}
function BE(n, t) {
  let e = t.maxPadding;
  function i(r) {
    let o = { left: 0, top: 0, right: 0, bottom: 0 };
    return (
      r.forEach((a) => {
        o[a] = Math.max(t[a], e[a]);
      }),
      o
    );
  }
  return i(n ? ["left", "right"] : ["top", "bottom"]);
}
function wl(n, t, e, i) {
  let r = [],
    o,
    a,
    s,
    l,
    d,
    m;
  for (o = 0, a = n.length, d = 0; o < a; ++o) {
    (s = n[o]),
      (l = s.box),
      l.update(s.width || t.w, s.height || t.h, BE(s.horizontal, t));
    let { same: v, other: x } = LE(t, e, s, i);
    (d |= v && r.length), (m = m || x), l.fullSize || r.push(s);
  }
  return (d && wl(r, t, e, i)) || m;
}
function Vd(n, t, e, i, r) {
  (n.top = e),
    (n.left = t),
    (n.right = t + i),
    (n.bottom = e + r),
    (n.width = i),
    (n.height = r);
}
function Jv(n, t, e, i) {
  let r = e.padding,
    { x: o, y: a } = t;
  for (let s of n) {
    let l = s.box,
      d = i[s.stack] || { count: 1, placed: 0, weight: 1 },
      m = s.stackWeight / d.weight || 1;
    if (s.horizontal) {
      let v = t.w * m,
        x = d.size || l.height;
      Aa(d.start) && (a = d.start),
        l.fullSize
          ? Vd(l, r.left, a, e.outerWidth - r.right - r.left, x)
          : Vd(l, t.left + d.placed, a, v, x),
        (d.start = a),
        (d.placed += v),
        (a = l.bottom);
    } else {
      let v = t.h * m,
        x = d.size || l.width;
      Aa(d.start) && (o = d.start),
        l.fullSize
          ? Vd(l, o, r.top, x, e.outerHeight - r.bottom - r.top)
          : Vd(l, o, t.top + d.placed, x, v),
        (d.start = o),
        (d.placed += v),
        (o = l.right);
    }
  }
  (t.x = o), (t.y = a);
}
var Ei = {
    addBox(n, t) {
      n.boxes || (n.boxes = []),
        (t.fullSize = t.fullSize || !1),
        (t.position = t.position || "top"),
        (t.weight = t.weight || 0),
        (t._layers =
          t._layers ||
          function () {
            return [
              {
                z: 0,
                draw(e) {
                  t.draw(e);
                },
              },
            ];
          }),
        n.boxes.push(t);
    },
    removeBox(n, t) {
      let e = n.boxes ? n.boxes.indexOf(t) : -1;
      e !== -1 && n.boxes.splice(e, 1);
    },
    configure(n, t, e) {
      (t.fullSize = e.fullSize),
        (t.position = e.position),
        (t.weight = e.weight);
    },
    update(n, t, e, i) {
      if (!n) return;
      let r = xi(n.options.layout.padding),
        o = Math.max(t - r.width, 0),
        a = Math.max(e - r.height, 0),
        s = NE(n.boxes),
        l = s.vertical,
        d = s.horizontal;
      gt(n.boxes, (T) => {
        typeof T.beforeLayout == "function" && T.beforeLayout();
      });
      let m =
          l.reduce(
            (T, k) =>
              k.box.options && k.box.options.display === !1 ? T : T + 1,
            0
          ) || 1,
        v = Object.freeze({
          outerWidth: t,
          outerHeight: e,
          padding: r,
          availableWidth: o,
          availableHeight: a,
          vBoxMaxWidth: o / 2 / m,
          hBoxMaxHeight: a / 2,
        }),
        x = Object.assign({}, r);
      Wy(x, xi(i));
      let C = Object.assign(
          { maxPadding: x, w: o, h: a, x: r.left, y: r.top },
          r
        ),
        S = FE(l.concat(d), v);
      wl(s.fullSize, C, v, S),
        wl(l, C, v, S),
        wl(d, C, v, S) && wl(l, C, v, S),
        VE(C),
        Jv(s.leftAndTop, C, v, S),
        (C.x += C.w),
        (C.y += C.h),
        Jv(s.rightAndBottom, C, v, S),
        (n.chartArea = {
          left: C.left,
          top: C.top,
          right: C.left + C.w,
          bottom: C.top + C.h,
          height: C.h,
          width: C.w,
        }),
        gt(s.chartArea, (T) => {
          let k = T.box;
          Object.assign(k, n.chartArea),
            k.update(C.w, C.h, { left: 0, top: 0, right: 0, bottom: 0 });
        });
    },
  },
  Yd = class {
    acquireContext(t, e) {}
    releaseContext(t) {
      return !1;
    }
    addEventListener(t, e, i) {}
    removeEventListener(t, e, i) {}
    getDevicePixelRatio() {
      return 1;
    }
    getMaximumSize(t, e, i, r) {
      return (
        (e = Math.max(0, e || t.width)),
        (i = i || t.height),
        { width: e, height: Math.max(0, r ? Math.floor(e / r) : i) }
      );
    }
    isAttached(t) {
      return !0;
    }
    updateConfig(t) {}
  },
  Um = class extends Yd {
    acquireContext(t) {
      return (t && t.getContext && t.getContext("2d")) || null;
    }
    updateConfig(t) {
      t.options.animation = !1;
    }
  },
  $d = "$chartjs",
  HE = {
    touchstart: "mousedown",
    touchmove: "mousemove",
    touchend: "mouseup",
    pointerenter: "mouseenter",
    pointerdown: "mousedown",
    pointermove: "mousemove",
    pointerup: "mouseup",
    pointerleave: "mouseout",
    pointerout: "mouseout",
  },
  ey = (n) => n === null || n === "";
function jE(n, t) {
  let e = n.style,
    i = n.getAttribute("height"),
    r = n.getAttribute("width");
  if (
    ((n[$d] = {
      initial: {
        height: i,
        width: r,
        style: { display: e.display, height: e.height, width: e.width },
      },
    }),
    (e.display = e.display || "block"),
    (e.boxSizing = e.boxSizing || "border-box"),
    ey(r))
  ) {
    let o = Cm(n, "width");
    o !== void 0 && (n.width = o);
  }
  if (ey(i))
    if (n.style.height === "") n.height = n.width / (t || 2);
    else {
      let o = Cm(n, "height");
      o !== void 0 && (n.height = o);
    }
  return n;
}
var Gy = Nv ? { passive: !0 } : !1;
function UE(n, t, e) {
  n && n.addEventListener(t, e, Gy);
}
function zE(n, t, e) {
  n && n.canvas && n.canvas.removeEventListener(t, e, Gy);
}
function $E(n, t) {
  let e = HE[n.type] || n.type,
    { x: i, y: r } = ao(n, t);
  return {
    type: e,
    chart: t,
    native: n,
    x: i !== void 0 ? i : null,
    y: r !== void 0 ? r : null,
  };
}
function qd(n, t) {
  for (let e of n) if (e === t || e.contains(t)) return !0;
}
function WE(n, t, e) {
  let i = n.canvas,
    r = new MutationObserver((o) => {
      let a = !1;
      for (let s of o)
        (a = a || qd(s.addedNodes, i)), (a = a && !qd(s.removedNodes, i));
      a && e();
    });
  return r.observe(document, { childList: !0, subtree: !0 }), r;
}
function GE(n, t, e) {
  let i = n.canvas,
    r = new MutationObserver((o) => {
      let a = !1;
      for (let s of o)
        (a = a || qd(s.removedNodes, i)), (a = a && !qd(s.addedNodes, i));
      a && e();
    });
  return r.observe(document, { childList: !0, subtree: !0 }), r;
}
var Sl = new Map(),
  ty = 0;
function Yy() {
  let n = window.devicePixelRatio;
  n !== ty &&
    ((ty = n),
    Sl.forEach((t, e) => {
      e.currentDevicePixelRatio !== n && t();
    }));
}
function YE(n, t) {
  Sl.size || window.addEventListener("resize", Yy), Sl.set(n, t);
}
function qE(n) {
  Sl.delete(n), Sl.size || window.removeEventListener("resize", Yy);
}
function KE(n, t, e) {
  let i = n.canvas,
    r = i && Nd(i);
  if (!r) return;
  let o = cm((s, l) => {
      let d = r.clientWidth;
      e(s, l), d < r.clientWidth && e();
    }, window),
    a = new ResizeObserver((s) => {
      let l = s[0],
        d = l.contentRect.width,
        m = l.contentRect.height;
      (d === 0 && m === 0) || o(d, m);
    });
  return a.observe(r), YE(n, o), a;
}
function Rm(n, t, e) {
  e && e.disconnect(), t === "resize" && qE(n);
}
function QE(n, t, e) {
  let i = n.canvas,
    r = cm((o) => {
      n.ctx !== null && e($E(o, n));
    }, n);
  return UE(i, t, r), r;
}
var zm = class extends Yd {
  acquireContext(t, e) {
    let i = t && t.getContext && t.getContext("2d");
    return i && i.canvas === t ? (jE(t, e), i) : null;
  }
  releaseContext(t) {
    let e = t.canvas;
    if (!e[$d]) return !1;
    let i = e[$d].initial;
    ["height", "width"].forEach((o) => {
      let a = i[o];
      tt(a) ? e.removeAttribute(o) : e.setAttribute(o, a);
    });
    let r = i.style || {};
    return (
      Object.keys(r).forEach((o) => {
        e.style[o] = r[o];
      }),
      (e.width = e.width),
      delete e[$d],
      !0
    );
  }
  addEventListener(t, e, i) {
    this.removeEventListener(t, e);
    let r = t.$proxies || (t.$proxies = {}),
      a = { attach: WE, detach: GE, resize: KE }[e] || QE;
    r[e] = a(t, e, i);
  }
  removeEventListener(t, e) {
    let i = t.$proxies || (t.$proxies = {}),
      r = i[e];
    if (!r) return;
    (({ attach: Rm, detach: Rm, resize: Rm })[e] || zE)(t, e, r),
      (i[e] = void 0);
  }
  getDevicePixelRatio() {
    return window.devicePixelRatio;
  }
  getMaximumSize(t, e, i, r) {
    return Fv(t, e, i, r);
  }
  isAttached(t) {
    let e = t && Nd(t);
    return !!(e && e.isConnected);
  }
};
function XE(n) {
  return !Fd() || (typeof OffscreenCanvas < "u" && n instanceof OffscreenCanvas)
    ? Um
    : zm;
}
var Nn = class {
  static defaults = {};
  static defaultRoutes = void 0;
  x;
  y;
  active = !1;
  options;
  $animations;
  tooltipPosition(t) {
    let { x: e, y: i } = this.getProps(["x", "y"], t);
    return { x: e, y: i };
  }
  hasValue() {
    return Ro(this.x) && Ro(this.y);
  }
  getProps(t, e) {
    let i = this.$animations;
    if (!e || !i) return this;
    let r = {};
    return (
      t.forEach((o) => {
        r[o] = i[o] && i[o].active() ? i[o]._to : this[o];
      }),
      r
    );
  }
};
function ZE(n, t) {
  let e = n.options.ticks,
    i = JE(n),
    r = Math.min(e.maxTicksLimit || i, i),
    o = e.major.enabled ? t2(t) : [],
    a = o.length,
    s = o[0],
    l = o[a - 1],
    d = [];
  if (a > r) return i2(t, d, o, a / r), d;
  let m = e2(o, t, r);
  if (a > 0) {
    let v,
      x,
      C = a > 1 ? Math.round((l - s) / (a - 1)) : null;
    for (Bd(t, d, m, tt(C) ? 0 : s - C, s), v = 0, x = a - 1; v < x; v++)
      Bd(t, d, m, o[v], o[v + 1]);
    return Bd(t, d, m, l, tt(C) ? t.length : l + C), d;
  }
  return Bd(t, d, m), d;
}
function JE(n) {
  let t = n.options.offset,
    e = n._tickSize(),
    i = n._length / e + (t ? 0 : 1),
    r = n._maxLength / e;
  return Math.floor(Math.min(i, r));
}
function e2(n, t, e) {
  let i = n2(n),
    r = t.length / e;
  if (!i) return Math.max(r, 1);
  let o = gv(i);
  for (let a = 0, s = o.length - 1; a < s; a++) {
    let l = o[a];
    if (l > r) return l;
  }
  return Math.max(r, 1);
}
function t2(n) {
  let t = [],
    e,
    i;
  for (e = 0, i = n.length; e < i; e++) n[e].major && t.push(e);
  return t;
}
function i2(n, t, e, i) {
  let r = 0,
    o = e[0],
    a;
  for (i = Math.ceil(i), a = 0; a < n.length; a++)
    a === o && (t.push(n[a]), r++, (o = e[r * i]));
}
function Bd(n, t, e, i, r) {
  let o = We(i, 0),
    a = Math.min(We(r, n.length), n.length),
    s = 0,
    l,
    d,
    m;
  for (
    e = Math.ceil(e), r && ((l = r - i), (e = l / Math.floor(l / e))), m = o;
    m < 0;

  )
    s++, (m = Math.round(o + s * e));
  for (d = Math.max(o, 0); d < a; d++)
    d === m && (t.push(n[d]), s++, (m = Math.round(o + s * e)));
}
function n2(n) {
  let t = n.length,
    e,
    i;
  if (t < 2) return !1;
  for (i = n[0], e = 1; e < t; ++e) if (n[e] - n[e - 1] !== i) return !1;
  return i;
}
var r2 = (n) => (n === "left" ? "right" : n === "right" ? "left" : n),
  iy = (n, t, e) => (t === "top" || t === "left" ? n[t] + e : n[t] - e),
  ny = (n, t) => Math.min(t || n, n);
function ry(n, t) {
  let e = [],
    i = n.length / t,
    r = n.length,
    o = 0;
  for (; o < r; o += i) e.push(n[Math.floor(o)]);
  return e;
}
function o2(n, t, e) {
  let i = n.ticks.length,
    r = Math.min(t, i - 1),
    o = n._startPixel,
    a = n._endPixel,
    s = 1e-6,
    l = n.getPixelForTick(r),
    d;
  if (
    !(
      e &&
      (i === 1
        ? (d = Math.max(l - o, a - l))
        : t === 0
        ? (d = (n.getPixelForTick(1) - l) / 2)
        : (d = (l - n.getPixelForTick(r - 1)) / 2),
      (l += r < t ? d : -d),
      l < o - s || l > a + s)
    )
  )
    return l;
}
function a2(n, t) {
  gt(n, (e) => {
    let i = e.gc,
      r = i.length / 2,
      o;
    if (r > t) {
      for (o = 0; o < r; ++o) delete e.data[i[o]];
      i.splice(0, r);
    }
  });
}
function xl(n) {
  return n.drawTicks ? n.tickLength : 0;
}
function oy(n, t) {
  if (!n.display) return 0;
  let e = ii(n.font, t),
    i = xi(n.padding);
  return (Mt(n.text) ? n.text.length : 1) * e.lineHeight + i.height;
}
function s2(n, t) {
  return Ir(n, { scale: t, type: "scale" });
}
function l2(n, t, e) {
  return Ir(n, { tick: e, index: t, type: "tick" });
}
function c2(n, t, e) {
  let i = Id(n);
  return ((e && t !== "right") || (!e && t === "right")) && (i = r2(i)), i;
}
function d2(n, t, e, i) {
  let { top: r, left: o, bottom: a, right: s, chart: l } = n,
    { chartArea: d, scales: m } = l,
    v = 0,
    x,
    C,
    S,
    T = a - r,
    k = s - o;
  if (n.isHorizontal()) {
    if (((C = yi(i, o, s)), ot(e))) {
      let P = Object.keys(e)[0],
        j = e[P];
      S = m[P].getPixelForValue(j) + T - t;
    } else
      e === "center" ? (S = (d.bottom + d.top) / 2 + T - t) : (S = iy(n, e, t));
    x = s - o;
  } else {
    if (ot(e)) {
      let P = Object.keys(e)[0],
        j = e[P];
      C = m[P].getPixelForValue(j) - k + t;
    } else
      e === "center" ? (C = (d.left + d.right) / 2 - k + t) : (C = iy(n, e, t));
    (S = yi(i, a, r)), (v = e === "left" ? -qt : qt);
  }
  return { titleX: C, titleY: S, maxWidth: x, rotation: v };
}
var Vo = class n extends Nn {
    constructor(t) {
      super(),
        (this.id = t.id),
        (this.type = t.type),
        (this.options = void 0),
        (this.ctx = t.ctx),
        (this.chart = t.chart),
        (this.top = void 0),
        (this.bottom = void 0),
        (this.left = void 0),
        (this.right = void 0),
        (this.width = void 0),
        (this.height = void 0),
        (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
        (this.maxWidth = void 0),
        (this.maxHeight = void 0),
        (this.paddingTop = void 0),
        (this.paddingBottom = void 0),
        (this.paddingLeft = void 0),
        (this.paddingRight = void 0),
        (this.axis = void 0),
        (this.labelRotation = void 0),
        (this.min = void 0),
        (this.max = void 0),
        (this._range = void 0),
        (this.ticks = []),
        (this._gridLineItems = null),
        (this._labelItems = null),
        (this._labelSizes = null),
        (this._length = 0),
        (this._maxLength = 0),
        (this._longestTextCache = {}),
        (this._startPixel = void 0),
        (this._endPixel = void 0),
        (this._reversePixels = !1),
        (this._userMax = void 0),
        (this._userMin = void 0),
        (this._suggestedMax = void 0),
        (this._suggestedMin = void 0),
        (this._ticksLength = 0),
        (this._borderValue = 0),
        (this._cache = {}),
        (this._dataLimitsCached = !1),
        (this.$context = void 0);
    }
    init(t) {
      (this.options = t.setContext(this.getContext())),
        (this.axis = t.axis),
        (this._userMin = this.parse(t.min)),
        (this._userMax = this.parse(t.max)),
        (this._suggestedMin = this.parse(t.suggestedMin)),
        (this._suggestedMax = this.parse(t.suggestedMax));
    }
    parse(t, e) {
      return t;
    }
    getUserBounds() {
      let {
        _userMin: t,
        _userMax: e,
        _suggestedMin: i,
        _suggestedMax: r,
      } = this;
      return (
        (t = Yi(t, Number.POSITIVE_INFINITY)),
        (e = Yi(e, Number.NEGATIVE_INFINITY)),
        (i = Yi(i, Number.POSITIVE_INFINITY)),
        (r = Yi(r, Number.NEGATIVE_INFINITY)),
        { min: Yi(t, i), max: Yi(e, r), minDefined: Ht(t), maxDefined: Ht(e) }
      );
    }
    getMinMax(t) {
      let {
          min: e,
          max: i,
          minDefined: r,
          maxDefined: o,
        } = this.getUserBounds(),
        a;
      if (r && o) return { min: e, max: i };
      let s = this.getMatchingVisibleMetas();
      for (let l = 0, d = s.length; l < d; ++l)
        (a = s[l].controller.getMinMax(this, t)),
          r || (e = Math.min(e, a.min)),
          o || (i = Math.max(i, a.max));
      return (
        (e = o && e > i ? i : e),
        (i = r && e > i ? e : i),
        { min: Yi(e, Yi(i, e)), max: Yi(i, Yi(e, i)) }
      );
    }
    getPadding() {
      return {
        left: this.paddingLeft || 0,
        top: this.paddingTop || 0,
        right: this.paddingRight || 0,
        bottom: this.paddingBottom || 0,
      };
    }
    getTicks() {
      return this.ticks;
    }
    getLabels() {
      let t = this.chart.data;
      return (
        this.options.labels ||
        (this.isHorizontal() ? t.xLabels : t.yLabels) ||
        t.labels ||
        []
      );
    }
    getLabelItems(t = this.chart.chartArea) {
      return (
        this._labelItems || (this._labelItems = this._computeLabelItems(t))
      );
    }
    beforeLayout() {
      (this._cache = {}), (this._dataLimitsCached = !1);
    }
    beforeUpdate() {
      wt(this.options.beforeUpdate, [this]);
    }
    update(t, e, i) {
      let { beginAtZero: r, grace: o, ticks: a } = this.options,
        s = a.sampleSize;
      this.beforeUpdate(),
        (this.maxWidth = t),
        (this.maxHeight = e),
        (this._margins = i =
          Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, i)),
        (this.ticks = null),
        (this._labelSizes = null),
        (this._gridLineItems = null),
        (this._labelItems = null),
        this.beforeSetDimensions(),
        this.setDimensions(),
        this.afterSetDimensions(),
        (this._maxLength = this.isHorizontal()
          ? this.width + i.left + i.right
          : this.height + i.top + i.bottom),
        this._dataLimitsCached ||
          (this.beforeDataLimits(),
          this.determineDataLimits(),
          this.afterDataLimits(),
          (this._range = kv(this, o, r)),
          (this._dataLimitsCached = !0)),
        this.beforeBuildTicks(),
        (this.ticks = this.buildTicks() || []),
        this.afterBuildTicks();
      let l = s < this.ticks.length;
      this._convertTicksToLabels(l ? ry(this.ticks, s) : this.ticks),
        this.configure(),
        this.beforeCalculateLabelRotation(),
        this.calculateLabelRotation(),
        this.afterCalculateLabelRotation(),
        a.display &&
          (a.autoSkip || a.source === "auto") &&
          ((this.ticks = ZE(this, this.ticks)),
          (this._labelSizes = null),
          this.afterAutoSkip()),
        l && this._convertTicksToLabels(this.ticks),
        this.beforeFit(),
        this.fit(),
        this.afterFit(),
        this.afterUpdate();
    }
    configure() {
      let t = this.options.reverse,
        e,
        i;
      this.isHorizontal()
        ? ((e = this.left), (i = this.right))
        : ((e = this.top), (i = this.bottom), (t = !t)),
        (this._startPixel = e),
        (this._endPixel = i),
        (this._reversePixels = t),
        (this._length = i - e),
        (this._alignToPixels = this.options.alignToPixels);
    }
    afterUpdate() {
      wt(this.options.afterUpdate, [this]);
    }
    beforeSetDimensions() {
      wt(this.options.beforeSetDimensions, [this]);
    }
    setDimensions() {
      this.isHorizontal()
        ? ((this.width = this.maxWidth),
          (this.left = 0),
          (this.right = this.width))
        : ((this.height = this.maxHeight),
          (this.top = 0),
          (this.bottom = this.height)),
        (this.paddingLeft = 0),
        (this.paddingTop = 0),
        (this.paddingRight = 0),
        (this.paddingBottom = 0);
    }
    afterSetDimensions() {
      wt(this.options.afterSetDimensions, [this]);
    }
    _callHooks(t) {
      this.chart.notifyPlugins(t, this.getContext()),
        wt(this.options[t], [this]);
    }
    beforeDataLimits() {
      this._callHooks("beforeDataLimits");
    }
    determineDataLimits() {}
    afterDataLimits() {
      this._callHooks("afterDataLimits");
    }
    beforeBuildTicks() {
      this._callHooks("beforeBuildTicks");
    }
    buildTicks() {
      return [];
    }
    afterBuildTicks() {
      this._callHooks("afterBuildTicks");
    }
    beforeTickToLabelConversion() {
      wt(this.options.beforeTickToLabelConversion, [this]);
    }
    generateTickLabels(t) {
      let e = this.options.ticks,
        i,
        r,
        o;
      for (i = 0, r = t.length; i < r; i++)
        (o = t[i]), (o.label = wt(e.callback, [o.value, i, t], this));
    }
    afterTickToLabelConversion() {
      wt(this.options.afterTickToLabelConversion, [this]);
    }
    beforeCalculateLabelRotation() {
      wt(this.options.beforeCalculateLabelRotation, [this]);
    }
    calculateLabelRotation() {
      let t = this.options,
        e = t.ticks,
        i = ny(this.ticks.length, t.ticks.maxTicksLimit),
        r = e.minRotation || 0,
        o = e.maxRotation,
        a = r,
        s,
        l,
        d;
      if (
        !this._isVisible() ||
        !e.display ||
        r >= o ||
        i <= 1 ||
        !this.isHorizontal()
      ) {
        this.labelRotation = r;
        return;
      }
      let m = this._getLabelSizes(),
        v = m.widest.width,
        x = m.highest.height,
        C = di(this.chart.width - v, 0, this.maxWidth);
      (s = t.offset ? this.maxWidth / i : C / (i - 1)),
        v + 6 > s &&
          ((s = C / (i - (t.offset ? 0.5 : 1))),
          (l =
            this.maxHeight -
            xl(t.grid) -
            e.padding -
            oy(t.title, this.chart.options.font)),
          (d = Math.sqrt(v * v + x * x)),
          (a = Ed(
            Math.min(
              Math.asin(di((m.highest.height + 6) / s, -1, 1)),
              Math.asin(di(l / d, -1, 1)) - Math.asin(di(x / d, -1, 1))
            )
          )),
          (a = Math.max(r, Math.min(o, a)))),
        (this.labelRotation = a);
    }
    afterCalculateLabelRotation() {
      wt(this.options.afterCalculateLabelRotation, [this]);
    }
    afterAutoSkip() {}
    beforeFit() {
      wt(this.options.beforeFit, [this]);
    }
    fit() {
      let t = { width: 0, height: 0 },
        {
          chart: e,
          options: { ticks: i, title: r, grid: o },
        } = this,
        a = this._isVisible(),
        s = this.isHorizontal();
      if (a) {
        let l = oy(r, e.options.font);
        if (
          (s
            ? ((t.width = this.maxWidth), (t.height = xl(o) + l))
            : ((t.height = this.maxHeight), (t.width = xl(o) + l)),
          i.display && this.ticks.length)
        ) {
          let {
              first: d,
              last: m,
              widest: v,
              highest: x,
            } = this._getLabelSizes(),
            C = i.padding * 2,
            S = Cn(this.labelRotation),
            T = Math.cos(S),
            k = Math.sin(S);
          if (s) {
            let P = i.mirror ? 0 : k * v.width + T * x.height;
            t.height = Math.min(this.maxHeight, t.height + P + C);
          } else {
            let P = i.mirror ? 0 : T * v.width + k * x.height;
            t.width = Math.min(this.maxWidth, t.width + P + C);
          }
          this._calculatePadding(d, m, k, T);
        }
      }
      this._handleMargins(),
        s
          ? ((this.width = this._length =
              e.width - this._margins.left - this._margins.right),
            (this.height = t.height))
          : ((this.width = t.width),
            (this.height = this._length =
              e.height - this._margins.top - this._margins.bottom));
    }
    _calculatePadding(t, e, i, r) {
      let {
          ticks: { align: o, padding: a },
          position: s,
        } = this.options,
        l = this.labelRotation !== 0,
        d = s !== "top" && this.axis === "x";
      if (this.isHorizontal()) {
        let m = this.getPixelForTick(0) - this.left,
          v = this.right - this.getPixelForTick(this.ticks.length - 1),
          x = 0,
          C = 0;
        l
          ? d
            ? ((x = r * t.width), (C = i * e.height))
            : ((x = i * t.height), (C = r * e.width))
          : o === "start"
          ? (C = e.width)
          : o === "end"
          ? (x = t.width)
          : o !== "inner" && ((x = t.width / 2), (C = e.width / 2)),
          (this.paddingLeft = Math.max(
            ((x - m + a) * this.width) / (this.width - m),
            0
          )),
          (this.paddingRight = Math.max(
            ((C - v + a) * this.width) / (this.width - v),
            0
          ));
      } else {
        let m = e.height / 2,
          v = t.height / 2;
        o === "start"
          ? ((m = 0), (v = t.height))
          : o === "end" && ((m = e.height), (v = 0)),
          (this.paddingTop = m + a),
          (this.paddingBottom = v + a);
      }
    }
    _handleMargins() {
      this._margins &&
        ((this._margins.left = Math.max(this.paddingLeft, this._margins.left)),
        (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
        (this._margins.right = Math.max(
          this.paddingRight,
          this._margins.right
        )),
        (this._margins.bottom = Math.max(
          this.paddingBottom,
          this._margins.bottom
        )));
    }
    afterFit() {
      wt(this.options.afterFit, [this]);
    }
    isHorizontal() {
      let { axis: t, position: e } = this.options;
      return e === "top" || e === "bottom" || t === "x";
    }
    isFullSize() {
      return this.options.fullSize;
    }
    _convertTicksToLabels(t) {
      this.beforeTickToLabelConversion(), this.generateTickLabels(t);
      let e, i;
      for (e = 0, i = t.length; e < i; e++)
        tt(t[e].label) && (t.splice(e, 1), i--, e--);
      this.afterTickToLabelConversion();
    }
    _getLabelSizes() {
      let t = this._labelSizes;
      if (!t) {
        let e = this.options.ticks.sampleSize,
          i = this.ticks;
        e < i.length && (i = ry(i, e)),
          (this._labelSizes = t =
            this._computeLabelSizes(
              i,
              i.length,
              this.options.ticks.maxTicksLimit
            ));
      }
      return t;
    }
    _computeLabelSizes(t, e, i) {
      let { ctx: r, _longestTextCache: o } = this,
        a = [],
        s = [],
        l = Math.floor(e / ny(e, i)),
        d = 0,
        m = 0,
        v,
        x,
        C,
        S,
        T,
        k,
        P,
        j,
        K,
        oe,
        ee;
      for (v = 0; v < e; v += l) {
        if (
          ((S = t[v].label),
          (T = this._resolveTickFontOptions(v)),
          (r.font = k = T.string),
          (P = o[k] = o[k] || { data: {}, gc: [] }),
          (j = T.lineHeight),
          (K = oe = 0),
          !tt(S) && !Mt(S))
        )
          (K = pl(r, P.data, P.gc, K, S)), (oe = j);
        else if (Mt(S))
          for (x = 0, C = S.length; x < C; ++x)
            (ee = S[x]),
              !tt(ee) &&
                !Mt(ee) &&
                ((K = pl(r, P.data, P.gc, K, ee)), (oe += j));
        a.push(K), s.push(oe), (d = Math.max(K, d)), (m = Math.max(oe, m));
      }
      a2(o, e);
      let b = a.indexOf(d),
        me = s.indexOf(m),
        re = (_e) => ({ width: a[_e] || 0, height: s[_e] || 0 });
      return {
        first: re(0),
        last: re(e - 1),
        widest: re(b),
        highest: re(me),
        widths: a,
        heights: s,
      };
    }
    getLabelForValue(t) {
      return t;
    }
    getPixelForValue(t, e) {
      return NaN;
    }
    getValueForPixel(t) {}
    getPixelForTick(t) {
      let e = this.ticks;
      return t < 0 || t > e.length - 1
        ? null
        : this.getPixelForValue(e[t].value);
    }
    getPixelForDecimal(t) {
      this._reversePixels && (t = 1 - t);
      let e = this._startPixel + t * this._length;
      return bv(this._alignToPixels ? no(this.chart, e, 0) : e);
    }
    getDecimalForPixel(t) {
      let e = (t - this._startPixel) / this._length;
      return this._reversePixels ? 1 - e : e;
    }
    getBasePixel() {
      return this.getPixelForValue(this.getBaseValue());
    }
    getBaseValue() {
      let { min: t, max: e } = this;
      return t < 0 && e < 0 ? e : t > 0 && e > 0 ? t : 0;
    }
    getContext(t) {
      let e = this.ticks || [];
      if (t >= 0 && t < e.length) {
        let i = e[t];
        return i.$context || (i.$context = l2(this.getContext(), t, i));
      }
      return (
        this.$context || (this.$context = s2(this.chart.getContext(), this))
      );
    }
    _tickSize() {
      let t = this.options.ticks,
        e = Cn(this.labelRotation),
        i = Math.abs(Math.cos(e)),
        r = Math.abs(Math.sin(e)),
        o = this._getLabelSizes(),
        a = t.autoSkipPadding || 0,
        s = o ? o.widest.width + a : 0,
        l = o ? o.highest.height + a : 0;
      return this.isHorizontal()
        ? l * i > s * r
          ? s / i
          : l / r
        : l * r < s * i
        ? l / i
        : s / r;
    }
    _isVisible() {
      let t = this.options.display;
      return t !== "auto" ? !!t : this.getMatchingVisibleMetas().length > 0;
    }
    _computeGridLineItems(t) {
      let e = this.axis,
        i = this.chart,
        r = this.options,
        { grid: o, position: a, border: s } = r,
        l = o.offset,
        d = this.isHorizontal(),
        v = this.ticks.length + (l ? 1 : 0),
        x = xl(o),
        C = [],
        S = s.setContext(this.getContext()),
        T = S.display ? S.width : 0,
        k = T / 2,
        P = function (lt) {
          return no(i, lt, T);
        },
        j,
        K,
        oe,
        ee,
        b,
        me,
        re,
        _e,
        He,
        Ge,
        Se,
        Ft;
      if (a === "top")
        (j = P(this.bottom)),
          (me = this.bottom - x),
          (_e = j - k),
          (Ge = P(t.top) + k),
          (Ft = t.bottom);
      else if (a === "bottom")
        (j = P(this.top)),
          (Ge = t.top),
          (Ft = P(t.bottom) - k),
          (me = j + k),
          (_e = this.top + x);
      else if (a === "left")
        (j = P(this.right)),
          (b = this.right - x),
          (re = j - k),
          (He = P(t.left) + k),
          (Se = t.right);
      else if (a === "right")
        (j = P(this.left)),
          (He = t.left),
          (Se = P(t.right) - k),
          (b = j + k),
          (re = this.left + x);
      else if (e === "x") {
        if (a === "center") j = P((t.top + t.bottom) / 2 + 0.5);
        else if (ot(a)) {
          let lt = Object.keys(a)[0],
            Et = a[lt];
          j = P(this.chart.scales[lt].getPixelForValue(Et));
        }
        (Ge = t.top), (Ft = t.bottom), (me = j + k), (_e = me + x);
      } else if (e === "y") {
        if (a === "center") j = P((t.left + t.right) / 2);
        else if (ot(a)) {
          let lt = Object.keys(a)[0],
            Et = a[lt];
          j = P(this.chart.scales[lt].getPixelForValue(Et));
        }
        (b = j - k), (re = b - x), (He = t.left), (Se = t.right);
      }
      let Pi = We(r.ticks.maxTicksLimit, v),
        pt = Math.max(1, Math.ceil(v / Pi));
      for (K = 0; K < v; K += pt) {
        let lt = this.getContext(K),
          Et = o.setContext(lt),
          hi = s.setContext(lt),
          ni = Et.lineWidth,
          ur = Et.color,
          po = hi.dash || [],
          Bn = hi.dashOffset,
          Fr = Et.tickWidth,
          hr = Et.tickColor,
          mo = Et.tickBorderDash || [],
          pr = Et.tickBorderDashOffset;
        (oe = o2(this, K, l)),
          oe !== void 0 &&
            ((ee = no(i, oe, ni)),
            d ? (b = re = He = Se = ee) : (me = _e = Ge = Ft = ee),
            C.push({
              tx1: b,
              ty1: me,
              tx2: re,
              ty2: _e,
              x1: He,
              y1: Ge,
              x2: Se,
              y2: Ft,
              width: ni,
              color: ur,
              borderDash: po,
              borderDashOffset: Bn,
              tickWidth: Fr,
              tickColor: hr,
              tickBorderDash: mo,
              tickBorderDashOffset: pr,
            }));
      }
      return (this._ticksLength = v), (this._borderValue = j), C;
    }
    _computeLabelItems(t) {
      let e = this.axis,
        i = this.options,
        { position: r, ticks: o } = i,
        a = this.isHorizontal(),
        s = this.ticks,
        { align: l, crossAlign: d, padding: m, mirror: v } = o,
        x = xl(i.grid),
        C = x + m,
        S = v ? -m : C,
        T = -Cn(this.labelRotation),
        k = [],
        P,
        j,
        K,
        oe,
        ee,
        b,
        me,
        re,
        _e,
        He,
        Ge,
        Se,
        Ft = "middle";
      if (r === "top")
        (b = this.bottom - S), (me = this._getXAxisLabelAlignment());
      else if (r === "bottom")
        (b = this.top + S), (me = this._getXAxisLabelAlignment());
      else if (r === "left") {
        let pt = this._getYAxisLabelAlignment(x);
        (me = pt.textAlign), (ee = pt.x);
      } else if (r === "right") {
        let pt = this._getYAxisLabelAlignment(x);
        (me = pt.textAlign), (ee = pt.x);
      } else if (e === "x") {
        if (r === "center") b = (t.top + t.bottom) / 2 + C;
        else if (ot(r)) {
          let pt = Object.keys(r)[0],
            lt = r[pt];
          b = this.chart.scales[pt].getPixelForValue(lt) + C;
        }
        me = this._getXAxisLabelAlignment();
      } else if (e === "y") {
        if (r === "center") ee = (t.left + t.right) / 2 - C;
        else if (ot(r)) {
          let pt = Object.keys(r)[0],
            lt = r[pt];
          ee = this.chart.scales[pt].getPixelForValue(lt);
        }
        me = this._getYAxisLabelAlignment(x).textAlign;
      }
      e === "y" &&
        (l === "start" ? (Ft = "top") : l === "end" && (Ft = "bottom"));
      let Pi = this._getLabelSizes();
      for (P = 0, j = s.length; P < j; ++P) {
        (K = s[P]), (oe = K.label);
        let pt = o.setContext(this.getContext(P));
        (re = this.getPixelForTick(P) + o.labelOffset),
          (_e = this._resolveTickFontOptions(P)),
          (He = _e.lineHeight),
          (Ge = Mt(oe) ? oe.length : 1);
        let lt = Ge / 2,
          Et = pt.color,
          hi = pt.textStrokeColor,
          ni = pt.textStrokeWidth,
          ur = me;
        a
          ? ((ee = re),
            me === "inner" &&
              (P === j - 1
                ? (ur = this.options.reverse ? "left" : "right")
                : P === 0
                ? (ur = this.options.reverse ? "right" : "left")
                : (ur = "center")),
            r === "top"
              ? d === "near" || T !== 0
                ? (Se = -Ge * He + He / 2)
                : d === "center"
                ? (Se = -Pi.highest.height / 2 - lt * He + He)
                : (Se = -Pi.highest.height + He / 2)
              : d === "near" || T !== 0
              ? (Se = He / 2)
              : d === "center"
              ? (Se = Pi.highest.height / 2 - lt * He)
              : (Se = Pi.highest.height - Ge * He),
            v && (Se *= -1),
            T !== 0 && !pt.showLabelBackdrop && (ee += (He / 2) * Math.sin(T)))
          : ((b = re), (Se = ((1 - Ge) * He) / 2));
        let po;
        if (pt.showLabelBackdrop) {
          let Bn = xi(pt.backdropPadding),
            Fr = Pi.heights[P],
            hr = Pi.widths[P],
            mo = Se - Bn.top,
            pr = 0 - Bn.left;
          switch (Ft) {
            case "middle":
              mo -= Fr / 2;
              break;
            case "bottom":
              mo -= Fr;
              break;
          }
          switch (me) {
            case "center":
              pr -= hr / 2;
              break;
            case "right":
              pr -= hr;
              break;
            case "inner":
              P === j - 1 ? (pr -= hr) : P > 0 && (pr -= hr / 2);
              break;
          }
          po = {
            left: pr,
            top: mo,
            width: hr + Bn.width,
            height: Fr + Bn.height,
            color: pt.backdropColor,
          };
        }
        k.push({
          label: oe,
          font: _e,
          textOffset: Se,
          options: {
            rotation: T,
            color: Et,
            strokeColor: hi,
            strokeWidth: ni,
            textAlign: ur,
            textBaseline: Ft,
            translation: [ee, b],
            backdrop: po,
          },
        });
      }
      return k;
    }
    _getXAxisLabelAlignment() {
      let { position: t, ticks: e } = this.options;
      if (-Cn(this.labelRotation)) return t === "top" ? "left" : "right";
      let r = "center";
      return (
        e.align === "start"
          ? (r = "left")
          : e.align === "end"
          ? (r = "right")
          : e.align === "inner" && (r = "inner"),
        r
      );
    }
    _getYAxisLabelAlignment(t) {
      let {
          position: e,
          ticks: { crossAlign: i, mirror: r, padding: o },
        } = this.options,
        a = this._getLabelSizes(),
        s = t + o,
        l = a.widest.width,
        d,
        m;
      return (
        e === "left"
          ? r
            ? ((m = this.right + o),
              i === "near"
                ? (d = "left")
                : i === "center"
                ? ((d = "center"), (m += l / 2))
                : ((d = "right"), (m += l)))
            : ((m = this.right - s),
              i === "near"
                ? (d = "right")
                : i === "center"
                ? ((d = "center"), (m -= l / 2))
                : ((d = "left"), (m = this.left)))
          : e === "right"
          ? r
            ? ((m = this.left + o),
              i === "near"
                ? (d = "right")
                : i === "center"
                ? ((d = "center"), (m -= l / 2))
                : ((d = "left"), (m -= l)))
            : ((m = this.left + s),
              i === "near"
                ? (d = "left")
                : i === "center"
                ? ((d = "center"), (m += l / 2))
                : ((d = "right"), (m = this.right)))
          : (d = "right"),
        { textAlign: d, x: m }
      );
    }
    _computeLabelArea() {
      if (this.options.ticks.mirror) return;
      let t = this.chart,
        e = this.options.position;
      if (e === "left" || e === "right")
        return { top: 0, left: this.left, bottom: t.height, right: this.right };
      if (e === "top" || e === "bottom")
        return { top: this.top, left: 0, bottom: this.bottom, right: t.width };
    }
    drawBackground() {
      let {
        ctx: t,
        options: { backgroundColor: e },
        left: i,
        top: r,
        width: o,
        height: a,
      } = this;
      e && (t.save(), (t.fillStyle = e), t.fillRect(i, r, o, a), t.restore());
    }
    getLineWidthForValue(t) {
      let e = this.options.grid;
      if (!this._isVisible() || !e.display) return 0;
      let r = this.ticks.findIndex((o) => o.value === t);
      return r >= 0 ? e.setContext(this.getContext(r)).lineWidth : 0;
    }
    drawGrid(t) {
      let e = this.options.grid,
        i = this.ctx,
        r =
          this._gridLineItems ||
          (this._gridLineItems = this._computeGridLineItems(t)),
        o,
        a,
        s = (l, d, m) => {
          !m.width ||
            !m.color ||
            (i.save(),
            (i.lineWidth = m.width),
            (i.strokeStyle = m.color),
            i.setLineDash(m.borderDash || []),
            (i.lineDashOffset = m.borderDashOffset),
            i.beginPath(),
            i.moveTo(l.x, l.y),
            i.lineTo(d.x, d.y),
            i.stroke(),
            i.restore());
        };
      if (e.display)
        for (o = 0, a = r.length; o < a; ++o) {
          let l = r[o];
          e.drawOnChartArea && s({ x: l.x1, y: l.y1 }, { x: l.x2, y: l.y2 }, l),
            e.drawTicks &&
              s(
                { x: l.tx1, y: l.ty1 },
                { x: l.tx2, y: l.ty2 },
                {
                  color: l.tickColor,
                  width: l.tickWidth,
                  borderDash: l.tickBorderDash,
                  borderDashOffset: l.tickBorderDashOffset,
                }
              );
        }
    }
    drawBorder() {
      let {
          chart: t,
          ctx: e,
          options: { border: i, grid: r },
        } = this,
        o = i.setContext(this.getContext()),
        a = i.display ? o.width : 0;
      if (!a) return;
      let s = r.setContext(this.getContext(0)).lineWidth,
        l = this._borderValue,
        d,
        m,
        v,
        x;
      this.isHorizontal()
        ? ((d = no(t, this.left, a) - a / 2),
          (m = no(t, this.right, s) + s / 2),
          (v = x = l))
        : ((v = no(t, this.top, a) - a / 2),
          (x = no(t, this.bottom, s) + s / 2),
          (d = m = l)),
        e.save(),
        (e.lineWidth = o.width),
        (e.strokeStyle = o.color),
        e.beginPath(),
        e.moveTo(d, v),
        e.lineTo(m, x),
        e.stroke(),
        e.restore();
    }
    drawLabels(t) {
      if (!this.options.ticks.display) return;
      let i = this.ctx,
        r = this._computeLabelArea();
      r && gl(i, r);
      let o = this.getLabelItems(t);
      for (let a of o) {
        let s = a.options,
          l = a.font,
          d = a.label,
          m = a.textOffset;
        ro(i, d, 0, m, l, s);
      }
      r && _l(i);
    }
    drawTitle() {
      let {
        ctx: t,
        options: { position: e, title: i, reverse: r },
      } = this;
      if (!i.display) return;
      let o = ii(i.font),
        a = xi(i.padding),
        s = i.align,
        l = o.lineHeight / 2;
      e === "bottom" || e === "center" || ot(e)
        ? ((l += a.bottom),
          Mt(i.text) && (l += o.lineHeight * (i.text.length - 1)))
        : (l += a.top);
      let {
        titleX: d,
        titleY: m,
        maxWidth: v,
        rotation: x,
      } = d2(this, l, e, s);
      ro(t, i.text, 0, 0, o, {
        color: i.color,
        maxWidth: v,
        rotation: x,
        textAlign: c2(s, e, r),
        textBaseline: "middle",
        translation: [d, m],
      });
    }
    draw(t) {
      this._isVisible() &&
        (this.drawBackground(),
        this.drawGrid(t),
        this.drawBorder(),
        this.drawTitle(),
        this.drawLabels(t));
    }
    _layers() {
      let t = this.options,
        e = (t.ticks && t.ticks.z) || 0,
        i = We(t.grid && t.grid.z, -1),
        r = We(t.border && t.border.z, 0);
      return !this._isVisible() || this.draw !== n.prototype.draw
        ? [
            {
              z: e,
              draw: (o) => {
                this.draw(o);
              },
            },
          ]
        : [
            {
              z: i,
              draw: (o) => {
                this.drawBackground(), this.drawGrid(o), this.drawTitle();
              },
            },
            {
              z: r,
              draw: () => {
                this.drawBorder();
              },
            },
            {
              z: e,
              draw: (o) => {
                this.drawLabels(o);
              },
            },
          ];
    }
    getMatchingVisibleMetas(t) {
      let e = this.chart.getSortedVisibleDatasetMetas(),
        i = this.axis + "AxisID",
        r = [],
        o,
        a;
      for (o = 0, a = e.length; o < a; ++o) {
        let s = e[o];
        s[i] === this.id && (!t || s.type === t) && r.push(s);
      }
      return r;
    }
    _resolveTickFontOptions(t) {
      let e = this.options.ticks.setContext(this.getContext(t));
      return ii(e.font);
    }
    _maxDigits() {
      let t = this._resolveTickFontOptions(0).lineHeight;
      return (this.isHorizontal() ? this.width : this.height) / t;
    }
  },
  Ha = class {
    constructor(t, e, i) {
      (this.type = t),
        (this.scope = e),
        (this.override = i),
        (this.items = Object.create(null));
    }
    isForType(t) {
      return Object.prototype.isPrototypeOf.call(
        this.type.prototype,
        t.prototype
      );
    }
    register(t) {
      let e = Object.getPrototypeOf(t),
        i;
      p2(e) && (i = this.register(e));
      let r = this.items,
        o = t.id,
        a = this.scope + "." + o;
      if (!o) throw new Error("class does not have id: " + t);
      return (
        o in r ||
          ((r[o] = t),
          u2(t, a, i),
          this.override && kt.override(t.id, t.overrides)),
        a
      );
    }
    get(t) {
      return this.items[t];
    }
    unregister(t) {
      let e = this.items,
        i = t.id,
        r = this.scope;
      i in e && delete e[i],
        r && i in kt[r] && (delete kt[r][i], this.override && delete io[i]);
    }
  };
function u2(n, t, e) {
  let i = Ia(Object.create(null), [e ? kt.get(e) : {}, kt.get(t), n.defaults]);
  kt.set(t, i),
    n.defaultRoutes && h2(t, n.defaultRoutes),
    n.descriptors && kt.describe(t, n.descriptors);
}
function h2(n, t) {
  Object.keys(t).forEach((e) => {
    let i = e.split("."),
      r = i.pop(),
      o = [n].concat(i).join("."),
      a = t[e].split("."),
      s = a.pop(),
      l = a.join(".");
    kt.route(o, r, l, s);
  });
}
function p2(n) {
  return "id" in n && "defaults" in n;
}
var $m = class {
    constructor() {
      (this.controllers = new Ha(lo, "datasets", !0)),
        (this.elements = new Ha(Nn, "elements")),
        (this.plugins = new Ha(Object, "plugins")),
        (this.scales = new Ha(Vo, "scales")),
        (this._typedRegistries = [
          this.controllers,
          this.scales,
          this.elements,
        ]);
    }
    add(...t) {
      this._each("register", t);
    }
    remove(...t) {
      this._each("unregister", t);
    }
    addControllers(...t) {
      this._each("register", t, this.controllers);
    }
    addElements(...t) {
      this._each("register", t, this.elements);
    }
    addPlugins(...t) {
      this._each("register", t, this.plugins);
    }
    addScales(...t) {
      this._each("register", t, this.scales);
    }
    getController(t) {
      return this._get(t, this.controllers, "controller");
    }
    getElement(t) {
      return this._get(t, this.elements, "element");
    }
    getPlugin(t) {
      return this._get(t, this.plugins, "plugin");
    }
    getScale(t) {
      return this._get(t, this.scales, "scale");
    }
    removeControllers(...t) {
      this._each("unregister", t, this.controllers);
    }
    removeElements(...t) {
      this._each("unregister", t, this.elements);
    }
    removePlugins(...t) {
      this._each("unregister", t, this.plugins);
    }
    removeScales(...t) {
      this._each("unregister", t, this.scales);
    }
    _each(t, e, i) {
      [...e].forEach((r) => {
        let o = i || this._getRegistryForType(r);
        i || o.isForType(r) || (o === this.plugins && r.id)
          ? this._exec(t, o, r)
          : gt(r, (a) => {
              let s = i || this._getRegistryForType(a);
              this._exec(t, s, a);
            });
      });
    }
    _exec(t, e, i) {
      let r = Td(t);
      wt(i["before" + r], [], i), e[t](i), wt(i["after" + r], [], i);
    }
    _getRegistryForType(t) {
      for (let e = 0; e < this._typedRegistries.length; e++) {
        let i = this._typedRegistries[e];
        if (i.isForType(t)) return i;
      }
      return this.plugins;
    }
    _get(t, e, i) {
      let r = e.get(t);
      if (r === void 0)
        throw new Error('"' + t + '" is not a registered ' + i + ".");
      return r;
    }
  },
  lr = new $m(),
  Wm = class {
    constructor() {
      this._init = [];
    }
    notify(t, e, i, r) {
      e === "beforeInit" &&
        ((this._init = this._createDescriptors(t, !0)),
        this._notify(this._init, t, "install"));
      let o = r ? this._descriptors(t).filter(r) : this._descriptors(t),
        a = this._notify(o, t, e, i);
      return (
        e === "afterDestroy" &&
          (this._notify(o, t, "stop"),
          this._notify(this._init, t, "uninstall")),
        a
      );
    }
    _notify(t, e, i, r) {
      r = r || {};
      for (let o of t) {
        let a = o.plugin,
          s = a[i],
          l = [e, r, o.options];
        if (wt(s, l, a) === !1 && r.cancelable) return !1;
      }
      return !0;
    }
    invalidate() {
      tt(this._cache) ||
        ((this._oldCache = this._cache), (this._cache = void 0));
    }
    _descriptors(t) {
      if (this._cache) return this._cache;
      let e = (this._cache = this._createDescriptors(t));
      return this._notifyStateChanges(t), e;
    }
    _createDescriptors(t, e) {
      let i = t && t.config,
        r = We(i.options && i.options.plugins, {}),
        o = m2(i);
      return r === !1 && !e ? [] : g2(t, o, r, e);
    }
    _notifyStateChanges(t) {
      let e = this._oldCache || [],
        i = this._cache,
        r = (o, a) =>
          o.filter((s) => !a.some((l) => s.plugin.id === l.plugin.id));
      this._notify(r(e, i), t, "stop"), this._notify(r(i, e), t, "start");
    }
  };
function m2(n) {
  let t = {},
    e = [],
    i = Object.keys(lr.plugins.items);
  for (let o = 0; o < i.length; o++) e.push(lr.getPlugin(i[o]));
  let r = n.plugins || [];
  for (let o = 0; o < r.length; o++) {
    let a = r[o];
    e.indexOf(a) === -1 && (e.push(a), (t[a.id] = !0));
  }
  return { plugins: e, localIds: t };
}
function f2(n, t) {
  return !t && n === !1 ? null : n === !0 ? {} : n;
}
function g2(n, { plugins: t, localIds: e }, i, r) {
  let o = [],
    a = n.getContext();
  for (let s of t) {
    let l = s.id,
      d = f2(i[l], r);
    d !== null &&
      o.push({
        plugin: s,
        options: _2(n.config, { plugin: s, local: e[l] }, d, a),
      });
  }
  return o;
}
function _2(n, { plugin: t, local: e }, i, r) {
  let o = n.pluginScopeKeys(t),
    a = n.getOptionScopes(i, o);
  return (
    e && t.defaults && a.push(t.defaults),
    n.createResolver(a, r, [""], { scriptable: !1, indexable: !1, allKeys: !0 })
  );
}
function Gm(n, t) {
  let e = kt.datasets[n] || {};
  return (
    ((t.datasets || {})[n] || {}).indexAxis || t.indexAxis || e.indexAxis || "x"
  );
}
function b2(n, t) {
  let e = n;
  return (
    n === "_index_" ? (e = t) : n === "_value_" && (e = t === "x" ? "y" : "x"),
    e
  );
}
function v2(n, t) {
  return n === t ? "_index_" : "_value_";
}
function ay(n) {
  if (n === "x" || n === "y" || n === "r") return n;
}
function y2(n) {
  if (n === "top" || n === "bottom") return "x";
  if (n === "left" || n === "right") return "y";
}
function Ym(n, ...t) {
  if (ay(n)) return n;
  for (let e of t) {
    let i =
      e.axis || y2(e.position) || (n.length > 1 && ay(n[0].toLowerCase()));
    if (i) return i;
  }
  throw new Error(
    `Cannot determine type of '${n}' axis. Please provide 'axis' or 'position' option.`
  );
}
function sy(n, t, e) {
  if (e[t + "AxisID"] === n) return { axis: t };
}
function x2(n, t) {
  if (t.data && t.data.datasets) {
    let e = t.data.datasets.filter((i) => i.xAxisID === n || i.yAxisID === n);
    if (e.length) return sy(n, "x", e[0]) || sy(n, "y", e[0]);
  }
  return {};
}
function C2(n, t) {
  let e = io[n.type] || { scales: {} },
    i = t.scales || {},
    r = Gm(n.type, t),
    o = Object.create(null);
  return (
    Object.keys(i).forEach((a) => {
      let s = i[a];
      if (!ot(s))
        return console.error(`Invalid scale configuration for scale: ${a}`);
      if (s._proxy)
        return console.warn(
          `Ignoring resolver passed as options for scale: ${a}`
        );
      let l = Ym(a, s, x2(a, n), kt.scales[s.type]),
        d = v2(l, r),
        m = e.scales || {};
      o[a] = Pa(Object.create(null), [{ axis: l }, s, m[l], m[d]]);
    }),
    n.data.datasets.forEach((a) => {
      let s = a.type || n.type,
        l = a.indexAxis || Gm(s, t),
        m = (io[s] || {}).scales || {};
      Object.keys(m).forEach((v) => {
        let x = b2(v, l),
          C = a[x + "AxisID"] || x;
        (o[C] = o[C] || Object.create(null)),
          Pa(o[C], [{ axis: x }, i[C], m[v]]);
      });
    }),
    Object.keys(o).forEach((a) => {
      let s = o[a];
      Pa(s, [kt.scales[s.type], kt.scale]);
    }),
    o
  );
}
function qy(n) {
  let t = n.options || (n.options = {});
  (t.plugins = We(t.plugins, {})), (t.scales = C2(n, t));
}
function Ky(n) {
  return (
    (n = n || {}),
    (n.datasets = n.datasets || []),
    (n.labels = n.labels || []),
    n
  );
}
function w2(n) {
  return (n = n || {}), (n.data = Ky(n.data)), qy(n), n;
}
var ly = new Map(),
  Qy = new Set();
function Hd(n, t) {
  let e = ly.get(n);
  return e || ((e = t()), ly.set(n, e), Qy.add(e)), e;
}
var Cl = (n, t, e) => {
    let i = kr(t, e);
    i !== void 0 && n.add(i);
  },
  qm = class {
    constructor(t) {
      (this._config = w2(t)),
        (this._scopeCache = new Map()),
        (this._resolverCache = new Map());
    }
    get platform() {
      return this._config.platform;
    }
    get type() {
      return this._config.type;
    }
    set type(t) {
      this._config.type = t;
    }
    get data() {
      return this._config.data;
    }
    set data(t) {
      this._config.data = Ky(t);
    }
    get options() {
      return this._config.options;
    }
    set options(t) {
      this._config.options = t;
    }
    get plugins() {
      return this._config.plugins;
    }
    update() {
      let t = this._config;
      this.clearCache(), qy(t);
    }
    clearCache() {
      this._scopeCache.clear(), this._resolverCache.clear();
    }
    datasetScopeKeys(t) {
      return Hd(t, () => [[`datasets.${t}`, ""]]);
    }
    datasetAnimationScopeKeys(t, e) {
      return Hd(`${t}.transition.${e}`, () => [
        [`datasets.${t}.transitions.${e}`, `transitions.${e}`],
        [`datasets.${t}`, ""],
      ]);
    }
    datasetElementScopeKeys(t, e) {
      return Hd(`${t}-${e}`, () => [
        [`datasets.${t}.elements.${e}`, `datasets.${t}`, `elements.${e}`, ""],
      ]);
    }
    pluginScopeKeys(t) {
      let e = t.id,
        i = this.type;
      return Hd(`${i}-plugin-${e}`, () => [
        [`plugins.${e}`, ...(t.additionalOptionScopes || [])],
      ]);
    }
    _cachedScopes(t, e) {
      let i = this._scopeCache,
        r = i.get(t);
      return (!r || e) && ((r = new Map()), i.set(t, r)), r;
    }
    getOptionScopes(t, e, i) {
      let { options: r, type: o } = this,
        a = this._cachedScopes(t, i),
        s = a.get(e);
      if (s) return s;
      let l = new Set();
      e.forEach((m) => {
        t && (l.add(t), m.forEach((v) => Cl(l, t, v))),
          m.forEach((v) => Cl(l, r, v)),
          m.forEach((v) => Cl(l, io[o] || {}, v)),
          m.forEach((v) => Cl(l, kt, v)),
          m.forEach((v) => Cl(l, Od, v));
      });
      let d = Array.from(l);
      return (
        d.length === 0 && d.push(Object.create(null)),
        Qy.has(e) && a.set(e, d),
        d
      );
    }
    chartOptionScopes() {
      let { options: t, type: e } = this;
      return [t, io[e] || {}, kt.datasets[e] || {}, { type: e }, kt, Od];
    }
    resolveNamedOptions(t, e, i, r = [""]) {
      let o = { $shared: !0 },
        { resolver: a, subPrefixes: s } = cy(this._resolverCache, t, r),
        l = a;
      if (S2(a, e)) {
        (o.$shared = !1), (i = Tr(i) ? i() : i);
        let d = this.createResolver(t, i, s);
        l = Ao(a, i, d);
      }
      for (let d of e) o[d] = l[d];
      return o;
    }
    createResolver(t, e, i = [""], r) {
      let { resolver: o } = cy(this._resolverCache, t, i);
      return ot(e) ? Ao(o, e, void 0, r) : o;
    }
  };
function cy(n, t, e) {
  let i = n.get(t);
  i || ((i = new Map()), n.set(t, i));
  let r = e.join(),
    o = i.get(r);
  return (
    o ||
      ((o = {
        resolver: Rd(t, e),
        subPrefixes: e.filter((s) => !s.toLowerCase().includes("hover")),
      }),
      i.set(r, o)),
    o
  );
}
var D2 = (n) => ot(n) && Object.getOwnPropertyNames(n).some((t) => Tr(n[t]));
function S2(n, t) {
  let { isScriptable: e, isIndexable: i } = _m(n);
  for (let r of t) {
    let o = e(r),
      a = i(r),
      s = (a || o) && n[r];
    if ((o && (Tr(s) || D2(s))) || (a && Mt(s))) return !0;
  }
  return !1;
}
var M2 = "4.5.0",
  T2 = ["top", "bottom", "left", "right", "chartArea"];
function dy(n, t) {
  return n === "top" || n === "bottom" || (T2.indexOf(n) === -1 && t === "x");
}
function uy(n, t) {
  return function (e, i) {
    return e[n] === i[n] ? e[t] - i[t] : e[n] - i[n];
  };
}
function hy(n) {
  let t = n.chart,
    e = t.options.animation;
  t.notifyPlugins("afterRender"), wt(e && e.onComplete, [n], t);
}
function E2(n) {
  let t = n.chart,
    e = t.options.animation;
  wt(e && e.onProgress, [n], t);
}
function Xy(n) {
  return (
    Fd() && typeof n == "string"
      ? (n = document.getElementById(n))
      : n && n.length && (n = n[0]),
    n && n.canvas && (n = n.canvas),
    n
  );
}
var Wd = {},
  py = (n) => {
    let t = Xy(n);
    return Object.values(Wd)
      .filter((e) => e.canvas === t)
      .pop();
  };
function k2(n, t, e) {
  let i = Object.keys(n);
  for (let r of i) {
    let o = +r;
    if (o >= t) {
      let a = n[r];
      delete n[r], (e > 0 || o > t) && (n[o + e] = a);
    }
  }
}
function I2(n, t, e, i) {
  return !e || n.type === "mouseout" ? null : i ? t : n;
}
var Bo = (() => {
  class n {
    static defaults = kt;
    static instances = Wd;
    static overrides = io;
    static registry = lr;
    static version = M2;
    static getChart = py;
    static register(...e) {
      lr.add(...e), my();
    }
    static unregister(...e) {
      lr.remove(...e), my();
    }
    constructor(e, i) {
      let r = (this.config = new qm(i)),
        o = Xy(e),
        a = py(o);
      if (a)
        throw new Error(
          "Canvas is already in use. Chart with ID '" +
            a.id +
            "' must be destroyed before the canvas with ID '" +
            a.canvas.id +
            "' can be reused."
        );
      let s = r.createResolver(r.chartOptionScopes(), this.getContext());
      (this.platform = new (r.platform || XE(o))()),
        this.platform.updateConfig(r);
      let l = this.platform.acquireContext(o, s.aspectRatio),
        d = l && l.canvas,
        m = d && d.height,
        v = d && d.width;
      if (
        ((this.id = hv()),
        (this.ctx = l),
        (this.canvas = d),
        (this.width = v),
        (this.height = m),
        (this._options = s),
        (this._aspectRatio = this.aspectRatio),
        (this._layers = []),
        (this._metasets = []),
        (this._stacks = void 0),
        (this.boxes = []),
        (this.currentDevicePixelRatio = void 0),
        (this.chartArea = void 0),
        (this._active = []),
        (this._lastEvent = void 0),
        (this._listeners = {}),
        (this._responsiveListeners = void 0),
        (this._sortedMetasets = []),
        (this.scales = {}),
        (this._plugins = new Wm()),
        (this.$proxies = {}),
        (this._hiddenIndices = {}),
        (this.attached = !1),
        (this._animationsDisabled = void 0),
        (this.$context = void 0),
        (this._doResize = wv((x) => this.update(x), s.resizeDelay || 0)),
        (this._dataChanges = []),
        (Wd[this.id] = this),
        !l || !d)
      ) {
        console.error(
          "Failed to create chart: can't acquire context from the given item"
        );
        return;
      }
      Or.listen(this, "complete", hy),
        Or.listen(this, "progress", E2),
        this._initialize(),
        this.attached && this.update();
    }
    get aspectRatio() {
      let {
        options: { aspectRatio: e, maintainAspectRatio: i },
        width: r,
        height: o,
        _aspectRatio: a,
      } = this;
      return tt(e) ? (i && a ? a : o ? r / o : null) : e;
    }
    get data() {
      return this.config.data;
    }
    set data(e) {
      this.config.data = e;
    }
    get options() {
      return this._options;
    }
    set options(e) {
      this.config.options = e;
    }
    get registry() {
      return lr;
    }
    _initialize() {
      return (
        this.notifyPlugins("beforeInit"),
        this.options.responsive
          ? this.resize()
          : xm(this, this.options.devicePixelRatio),
        this.bindEvents(),
        this.notifyPlugins("afterInit"),
        this
      );
    }
    clear() {
      return mm(this.canvas, this.ctx), this;
    }
    stop() {
      return Or.stop(this), this;
    }
    resize(e, i) {
      Or.running(this)
        ? (this._resizeBeforeDraw = { width: e, height: i })
        : this._resize(e, i);
    }
    _resize(e, i) {
      let r = this.options,
        o = this.canvas,
        a = r.maintainAspectRatio && this.aspectRatio,
        s = this.platform.getMaximumSize(o, e, i, a),
        l = r.devicePixelRatio || this.platform.getDevicePixelRatio(),
        d = this.width ? "resize" : "attach";
      (this.width = s.width),
        (this.height = s.height),
        (this._aspectRatio = this.aspectRatio),
        xm(this, l, !0) &&
          (this.notifyPlugins("resize", { size: s }),
          wt(r.onResize, [this, s], this),
          this.attached && this._doResize(d) && this.render());
    }
    ensureScalesHaveIDs() {
      let i = this.options.scales || {};
      gt(i, (r, o) => {
        r.id = o;
      });
    }
    buildOrUpdateScales() {
      let e = this.options,
        i = e.scales,
        r = this.scales,
        o = Object.keys(r).reduce((s, l) => ((s[l] = !1), s), {}),
        a = [];
      i &&
        (a = a.concat(
          Object.keys(i).map((s) => {
            let l = i[s],
              d = Ym(s, l),
              m = d === "r",
              v = d === "x";
            return {
              options: l,
              dposition: m ? "chartArea" : v ? "bottom" : "left",
              dtype: m ? "radialLinear" : v ? "category" : "linear",
            };
          })
        )),
        gt(a, (s) => {
          let l = s.options,
            d = l.id,
            m = Ym(d, l),
            v = We(l.type, s.dtype);
          (l.position === void 0 || dy(l.position, m) !== dy(s.dposition)) &&
            (l.position = s.dposition),
            (o[d] = !0);
          let x = null;
          if (d in r && r[d].type === v) x = r[d];
          else {
            let C = lr.getScale(v);
            (x = new C({ id: d, type: v, ctx: this.ctx, chart: this })),
              (r[x.id] = x);
          }
          x.init(l, e);
        }),
        gt(o, (s, l) => {
          s || delete r[l];
        }),
        gt(r, (s) => {
          Ei.configure(this, s, s.options), Ei.addBox(this, s);
        });
    }
    _updateMetasets() {
      let e = this._metasets,
        i = this.data.datasets.length,
        r = e.length;
      if ((e.sort((o, a) => o.index - a.index), r > i)) {
        for (let o = i; o < r; ++o) this._destroyDatasetMeta(o);
        e.splice(i, r - i);
      }
      this._sortedMetasets = e.slice(0).sort(uy("order", "index"));
    }
    _removeUnreferencedMetasets() {
      let {
        _metasets: e,
        data: { datasets: i },
      } = this;
      e.length > i.length && delete this._stacks,
        e.forEach((r, o) => {
          i.filter((a) => a === r._dataset).length === 0 &&
            this._destroyDatasetMeta(o);
        });
    }
    buildOrUpdateControllers() {
      let e = [],
        i = this.data.datasets,
        r,
        o;
      for (
        this._removeUnreferencedMetasets(), r = 0, o = i.length;
        r < o;
        r++
      ) {
        let a = i[r],
          s = this.getDatasetMeta(r),
          l = a.type || this.config.type;
        if (
          (s.type &&
            s.type !== l &&
            (this._destroyDatasetMeta(r), (s = this.getDatasetMeta(r))),
          (s.type = l),
          (s.indexAxis = a.indexAxis || Gm(l, this.options)),
          (s.order = a.order || 0),
          (s.index = r),
          (s.label = "" + a.label),
          (s.visible = this.isDatasetVisible(r)),
          s.controller)
        )
          s.controller.updateIndex(r), s.controller.linkScales();
        else {
          let d = lr.getController(l),
            { datasetElementType: m, dataElementType: v } = kt.datasets[l];
          Object.assign(d, {
            dataElementType: lr.getElement(v),
            datasetElementType: m && lr.getElement(m),
          }),
            (s.controller = new d(this, r)),
            e.push(s.controller);
        }
      }
      return this._updateMetasets(), e;
    }
    _resetElements() {
      gt(
        this.data.datasets,
        (e, i) => {
          this.getDatasetMeta(i).controller.reset();
        },
        this
      );
    }
    reset() {
      this._resetElements(), this.notifyPlugins("reset");
    }
    update(e) {
      let i = this.config;
      i.update();
      let r = (this._options = i.createResolver(
          i.chartOptionScopes(),
          this.getContext()
        )),
        o = (this._animationsDisabled = !r.animation);
      if (
        (this._updateScales(),
        this._checkEventBindings(),
        this._updateHiddenIndices(),
        this._plugins.invalidate(),
        this.notifyPlugins("beforeUpdate", { mode: e, cancelable: !0 }) === !1)
      )
        return;
      let a = this.buildOrUpdateControllers();
      this.notifyPlugins("beforeElementsUpdate");
      let s = 0;
      for (let m = 0, v = this.data.datasets.length; m < v; m++) {
        let { controller: x } = this.getDatasetMeta(m),
          C = !o && a.indexOf(x) === -1;
        x.buildOrUpdateElements(C), (s = Math.max(+x.getMaxOverflow(), s));
      }
      (s = this._minPadding = r.layout.autoPadding ? s : 0),
        this._updateLayout(s),
        o ||
          gt(a, (m) => {
            m.reset();
          }),
        this._updateDatasets(e),
        this.notifyPlugins("afterUpdate", { mode: e }),
        this._layers.sort(uy("z", "_idx"));
      let { _active: l, _lastEvent: d } = this;
      d
        ? this._eventHandler(d, !0)
        : l.length && this._updateHoverStyles(l, l, !0),
        this.render();
    }
    _updateScales() {
      gt(this.scales, (e) => {
        Ei.removeBox(this, e);
      }),
        this.ensureScalesHaveIDs(),
        this.buildOrUpdateScales();
    }
    _checkEventBindings() {
      let e = this.options,
        i = new Set(Object.keys(this._listeners)),
        r = new Set(e.events);
      (!tm(i, r) || !!this._responsiveListeners !== e.responsive) &&
        (this.unbindEvents(), this.bindEvents());
    }
    _updateHiddenIndices() {
      let { _hiddenIndices: e } = this,
        i = this._getUniformDataChanges() || [];
      for (let { method: r, start: o, count: a } of i) {
        let s = r === "_removeElements" ? -a : a;
        k2(e, o, s);
      }
    }
    _getUniformDataChanges() {
      let e = this._dataChanges;
      if (!e || !e.length) return;
      this._dataChanges = [];
      let i = this.data.datasets.length,
        r = (a) =>
          new Set(
            e
              .filter((s) => s[0] === a)
              .map((s, l) => l + "," + s.splice(1).join(","))
          ),
        o = r(0);
      for (let a = 1; a < i; a++) if (!tm(o, r(a))) return;
      return Array.from(o)
        .map((a) => a.split(","))
        .map((a) => ({ method: a[1], start: +a[2], count: +a[3] }));
    }
    _updateLayout(e) {
      if (this.notifyPlugins("beforeLayout", { cancelable: !0 }) === !1) return;
      Ei.update(this, this.width, this.height, e);
      let i = this.chartArea,
        r = i.width <= 0 || i.height <= 0;
      (this._layers = []),
        gt(
          this.boxes,
          (o) => {
            (r && o.position === "chartArea") ||
              (o.configure && o.configure(), this._layers.push(...o._layers()));
          },
          this
        ),
        this._layers.forEach((o, a) => {
          o._idx = a;
        }),
        this.notifyPlugins("afterLayout");
    }
    _updateDatasets(e) {
      if (
        this.notifyPlugins("beforeDatasetsUpdate", {
          mode: e,
          cancelable: !0,
        }) !== !1
      ) {
        for (let i = 0, r = this.data.datasets.length; i < r; ++i)
          this.getDatasetMeta(i).controller.configure();
        for (let i = 0, r = this.data.datasets.length; i < r; ++i)
          this._updateDataset(i, Tr(e) ? e({ datasetIndex: i }) : e);
        this.notifyPlugins("afterDatasetsUpdate", { mode: e });
      }
    }
    _updateDataset(e, i) {
      let r = this.getDatasetMeta(e),
        o = { meta: r, index: e, mode: i, cancelable: !0 };
      this.notifyPlugins("beforeDatasetUpdate", o) !== !1 &&
        (r.controller._update(i),
        (o.cancelable = !1),
        this.notifyPlugins("afterDatasetUpdate", o));
    }
    render() {
      this.notifyPlugins("beforeRender", { cancelable: !0 }) !== !1 &&
        (Or.has(this)
          ? this.attached && !Or.running(this) && Or.start(this)
          : (this.draw(), hy({ chart: this })));
    }
    draw() {
      let e;
      if (this._resizeBeforeDraw) {
        let { width: r, height: o } = this._resizeBeforeDraw;
        (this._resizeBeforeDraw = null), this._resize(r, o);
      }
      if (
        (this.clear(),
        this.width <= 0 ||
          this.height <= 0 ||
          this.notifyPlugins("beforeDraw", { cancelable: !0 }) === !1)
      )
        return;
      let i = this._layers;
      for (e = 0; e < i.length && i[e].z <= 0; ++e) i[e].draw(this.chartArea);
      for (this._drawDatasets(); e < i.length; ++e) i[e].draw(this.chartArea);
      this.notifyPlugins("afterDraw");
    }
    _getSortedDatasetMetas(e) {
      let i = this._sortedMetasets,
        r = [],
        o,
        a;
      for (o = 0, a = i.length; o < a; ++o) {
        let s = i[o];
        (!e || s.visible) && r.push(s);
      }
      return r;
    }
    getSortedVisibleDatasetMetas() {
      return this._getSortedDatasetMetas(!0);
    }
    _drawDatasets() {
      if (this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 }) === !1)
        return;
      let e = this.getSortedVisibleDatasetMetas();
      for (let i = e.length - 1; i >= 0; --i) this._drawDataset(e[i]);
      this.notifyPlugins("afterDatasetsDraw");
    }
    _drawDataset(e) {
      let i = this.ctx,
        r = { meta: e, index: e.index, cancelable: !0 },
        o = Tm(this, e);
      this.notifyPlugins("beforeDatasetDraw", r) !== !1 &&
        (o && gl(i, o),
        e.controller.draw(),
        o && _l(i),
        (r.cancelable = !1),
        this.notifyPlugins("afterDatasetDraw", r));
    }
    isPointInArea(e) {
      return rr(e, this.chartArea, this._minPadding);
    }
    getElementsAtEventForMode(e, i, r, o) {
      let a = PE.modes[i];
      return typeof a == "function" ? a(this, e, r, o) : [];
    }
    getDatasetMeta(e) {
      let i = this.data.datasets[e],
        r = this._metasets,
        o = r.filter((a) => a && a._dataset === i).pop();
      return (
        o ||
          ((o = {
            type: null,
            data: [],
            dataset: null,
            controller: null,
            hidden: null,
            xAxisID: null,
            yAxisID: null,
            order: (i && i.order) || 0,
            index: e,
            _dataset: i,
            _parsed: [],
            _sorted: !1,
          }),
          r.push(o)),
        o
      );
    }
    getContext() {
      return (
        this.$context ||
        (this.$context = Ir(null, { chart: this, type: "chart" }))
      );
    }
    getVisibleDatasetCount() {
      return this.getSortedVisibleDatasetMetas().length;
    }
    isDatasetVisible(e) {
      let i = this.data.datasets[e];
      if (!i) return !1;
      let r = this.getDatasetMeta(e);
      return typeof r.hidden == "boolean" ? !r.hidden : !i.hidden;
    }
    setDatasetVisibility(e, i) {
      let r = this.getDatasetMeta(e);
      r.hidden = !i;
    }
    toggleDataVisibility(e) {
      this._hiddenIndices[e] = !this._hiddenIndices[e];
    }
    getDataVisibility(e) {
      return !this._hiddenIndices[e];
    }
    _updateVisibility(e, i, r) {
      let o = r ? "show" : "hide",
        a = this.getDatasetMeta(e),
        s = a.controller._resolveAnimations(void 0, o);
      Aa(i)
        ? ((a.data[i].hidden = !r), this.update())
        : (this.setDatasetVisibility(e, r),
          s.update(a, { visible: r }),
          this.update((l) => (l.datasetIndex === e ? o : void 0)));
    }
    hide(e, i) {
      this._updateVisibility(e, i, !1);
    }
    show(e, i) {
      this._updateVisibility(e, i, !0);
    }
    _destroyDatasetMeta(e) {
      let i = this._metasets[e];
      i && i.controller && i.controller._destroy(), delete this._metasets[e];
    }
    _stop() {
      let e, i;
      for (
        this.stop(), Or.remove(this), e = 0, i = this.data.datasets.length;
        e < i;
        ++e
      )
        this._destroyDatasetMeta(e);
    }
    destroy() {
      this.notifyPlugins("beforeDestroy");
      let { canvas: e, ctx: i } = this;
      this._stop(),
        this.config.clearCache(),
        e &&
          (this.unbindEvents(),
          mm(e, i),
          this.platform.releaseContext(i),
          (this.canvas = null),
          (this.ctx = null)),
        delete Wd[this.id],
        this.notifyPlugins("afterDestroy");
    }
    toBase64Image(...e) {
      return this.canvas.toDataURL(...e);
    }
    bindEvents() {
      this.bindUserEvents(),
        this.options.responsive
          ? this.bindResponsiveEvents()
          : (this.attached = !0);
    }
    bindUserEvents() {
      let e = this._listeners,
        i = this.platform,
        r = (a, s) => {
          i.addEventListener(this, a, s), (e[a] = s);
        },
        o = (a, s, l) => {
          (a.offsetX = s), (a.offsetY = l), this._eventHandler(a);
        };
      gt(this.options.events, (a) => r(a, o));
    }
    bindResponsiveEvents() {
      this._responsiveListeners || (this._responsiveListeners = {});
      let e = this._responsiveListeners,
        i = this.platform,
        r = (d, m) => {
          i.addEventListener(this, d, m), (e[d] = m);
        },
        o = (d, m) => {
          e[d] && (i.removeEventListener(this, d, m), delete e[d]);
        },
        a = (d, m) => {
          this.canvas && this.resize(d, m);
        },
        s,
        l = () => {
          o("attach", l),
            (this.attached = !0),
            this.resize(),
            r("resize", a),
            r("detach", s);
        };
      (s = () => {
        (this.attached = !1),
          o("resize", a),
          this._stop(),
          this._resize(0, 0),
          r("attach", l);
      }),
        i.isAttached(this.canvas) ? l() : s();
    }
    unbindEvents() {
      gt(this._listeners, (e, i) => {
        this.platform.removeEventListener(this, i, e);
      }),
        (this._listeners = {}),
        gt(this._responsiveListeners, (e, i) => {
          this.platform.removeEventListener(this, i, e);
        }),
        (this._responsiveListeners = void 0);
    }
    updateHoverStyle(e, i, r) {
      let o = r ? "set" : "remove",
        a,
        s,
        l,
        d;
      for (
        i === "dataset" &&
          ((a = this.getDatasetMeta(e[0].datasetIndex)),
          a.controller["_" + o + "DatasetHoverStyle"]()),
          l = 0,
          d = e.length;
        l < d;
        ++l
      ) {
        s = e[l];
        let m = s && this.getDatasetMeta(s.datasetIndex).controller;
        m && m[o + "HoverStyle"](s.element, s.datasetIndex, s.index);
      }
    }
    getActiveElements() {
      return this._active || [];
    }
    setActiveElements(e) {
      let i = this._active || [],
        r = e.map(({ datasetIndex: a, index: s }) => {
          let l = this.getDatasetMeta(a);
          if (!l) throw new Error("No dataset found at index " + a);
          return { datasetIndex: a, element: l.data[s], index: s };
        });
      !ml(r, i) &&
        ((this._active = r),
        (this._lastEvent = null),
        this._updateHoverStyles(r, i));
    }
    notifyPlugins(e, i, r) {
      return this._plugins.notify(this, e, i, r);
    }
    isPluginEnabled(e) {
      return this._plugins._cache.filter((i) => i.plugin.id === e).length === 1;
    }
    _updateHoverStyles(e, i, r) {
      let o = this.options.hover,
        a = (d, m) =>
          d.filter(
            (v) =>
              !m.some(
                (x) => v.datasetIndex === x.datasetIndex && v.index === x.index
              )
          ),
        s = a(i, e),
        l = r ? e : a(e, i);
      s.length && this.updateHoverStyle(s, o.mode, !1),
        l.length && o.mode && this.updateHoverStyle(l, o.mode, !0);
    }
    _eventHandler(e, i) {
      let r = {
          event: e,
          replay: i,
          cancelable: !0,
          inChartArea: this.isPointInArea(e),
        },
        o = (s) =>
          (s.options.events || this.options.events).includes(e.native.type);
      if (this.notifyPlugins("beforeEvent", r, o) === !1) return;
      let a = this._handleEvent(e, i, r.inChartArea);
      return (
        (r.cancelable = !1),
        this.notifyPlugins("afterEvent", r, o),
        (a || r.changed) && this.render(),
        this
      );
    }
    _handleEvent(e, i, r) {
      let { _active: o = [], options: a } = this,
        s = i,
        l = this._getActiveElements(e, o, r, s),
        d = fv(e),
        m = I2(e, this._lastEvent, r, d);
      r &&
        ((this._lastEvent = null),
        wt(a.onHover, [e, l, this], this),
        d && wt(a.onClick, [e, l, this], this));
      let v = !ml(l, o);
      return (
        (v || i) && ((this._active = l), this._updateHoverStyles(l, o, i)),
        (this._lastEvent = m),
        v
      );
    }
    _getActiveElements(e, i, r, o) {
      if (e.type === "mouseout") return [];
      if (!r) return i;
      let a = this.options.hover;
      return this.getElementsAtEventForMode(e, a.mode, a, o);
    }
  }
  return n;
})();
function my() {
  return gt(Bo.instances, (n) => n._plugins.invalidate());
}
function O2(n, t, e) {
  let {
      startAngle: i,
      x: r,
      y: o,
      outerRadius: a,
      innerRadius: s,
      options: l,
    } = t,
    { borderWidth: d, borderJoinStyle: m } = l,
    v = Math.min(d / a, vi(i - e));
  if ((n.beginPath(), n.arc(r, o, a - d / 2, i + v / 2, e - v / 2), s > 0)) {
    let x = Math.min(d / s, vi(i - e));
    n.arc(r, o, s + d / 2, e - x / 2, i + x / 2, !0);
  } else {
    let x = Math.min(d / 2, a * vi(i - e));
    if (m === "round") n.arc(r, o, x, e - ut / 2, i + ut / 2, !0);
    else if (m === "bevel") {
      let C = 2 * x * x,
        S = -C * Math.cos(e + ut / 2) + r,
        T = -C * Math.sin(e + ut / 2) + o,
        k = C * Math.cos(i + ut / 2) + r,
        P = C * Math.sin(i + ut / 2) + o;
      n.lineTo(S, T), n.lineTo(k, P);
    }
  }
  n.closePath(),
    n.moveTo(0, 0),
    n.rect(0, 0, n.canvas.width, n.canvas.height),
    n.clip("evenodd");
}
function P2(n, t, e) {
  let {
      startAngle: i,
      pixelMargin: r,
      x: o,
      y: a,
      outerRadius: s,
      innerRadius: l,
    } = t,
    d = r / s;
  n.beginPath(),
    n.arc(o, a, s, i - d, e + d),
    l > r
      ? ((d = r / l), n.arc(o, a, l, e + d, i - d, !0))
      : n.arc(o, a, r, e + qt, i - qt),
    n.closePath(),
    n.clip();
}
function A2(n) {
  return Ad(n, ["outerStart", "outerEnd", "innerStart", "innerEnd"]);
}
function R2(n, t, e, i) {
  let r = A2(n.options.borderRadius),
    o = (e - t) / 2,
    a = Math.min(o, (i * t) / 2),
    s = (l) => {
      let d = ((e - Math.min(o, l)) * i) / 2;
      return di(l, 0, Math.min(o, d));
    };
  return {
    outerStart: s(r.outerStart),
    outerEnd: s(r.outerEnd),
    innerStart: di(r.innerStart, 0, a),
    innerEnd: di(r.innerEnd, 0, a),
  };
}
function Ba(n, t, e, i) {
  return { x: e + n * Math.cos(t), y: i + n * Math.sin(t) };
}
function Kd(n, t, e, i, r, o) {
  let { x: a, y: s, startAngle: l, pixelMargin: d, innerRadius: m } = t,
    v = Math.max(t.outerRadius + i + e - d, 0),
    x = m > 0 ? m + i + e + d : 0,
    C = 0,
    S = r - l;
  if (i) {
    let pt = m > 0 ? m - i : 0,
      lt = v > 0 ? v - i : 0,
      Et = (pt + lt) / 2,
      hi = Et !== 0 ? (S * Et) / (Et + i) : S;
    C = (S - hi) / 2;
  }
  let T = Math.max(0.001, S * v - e / ut) / v,
    k = (S - T) / 2,
    P = l + k + C,
    j = r - k - C,
    {
      outerStart: K,
      outerEnd: oe,
      innerStart: ee,
      innerEnd: b,
    } = R2(t, x, v, j - P),
    me = v - K,
    re = v - oe,
    _e = P + K / me,
    He = j - oe / re,
    Ge = x + ee,
    Se = x + b,
    Ft = P + ee / Ge,
    Pi = j - b / Se;
  if ((n.beginPath(), o)) {
    let pt = (_e + He) / 2;
    if ((n.arc(a, s, v, _e, pt), n.arc(a, s, v, pt, He), oe > 0)) {
      let ni = Ba(re, He, a, s);
      n.arc(ni.x, ni.y, oe, He, j + qt);
    }
    let lt = Ba(Se, j, a, s);
    if ((n.lineTo(lt.x, lt.y), b > 0)) {
      let ni = Ba(Se, Pi, a, s);
      n.arc(ni.x, ni.y, b, j + qt, Pi + Math.PI);
    }
    let Et = (j - b / x + (P + ee / x)) / 2;
    if (
      (n.arc(a, s, x, j - b / x, Et, !0),
      n.arc(a, s, x, Et, P + ee / x, !0),
      ee > 0)
    ) {
      let ni = Ba(Ge, Ft, a, s);
      n.arc(ni.x, ni.y, ee, Ft + Math.PI, P - qt);
    }
    let hi = Ba(me, P, a, s);
    if ((n.lineTo(hi.x, hi.y), K > 0)) {
      let ni = Ba(me, _e, a, s);
      n.arc(ni.x, ni.y, K, P - qt, _e);
    }
  } else {
    n.moveTo(a, s);
    let pt = Math.cos(_e) * v + a,
      lt = Math.sin(_e) * v + s;
    n.lineTo(pt, lt);
    let Et = Math.cos(He) * v + a,
      hi = Math.sin(He) * v + s;
    n.lineTo(Et, hi);
  }
  n.closePath();
}
function F2(n, t, e, i, r) {
  let { fullCircles: o, startAngle: a, circumference: s } = t,
    l = t.endAngle;
  if (o) {
    Kd(n, t, e, i, l, r);
    for (let d = 0; d < o; ++d) n.fill();
    isNaN(s) || (l = a + (s % Tt || Tt));
  }
  return Kd(n, t, e, i, l, r), n.fill(), l;
}
function N2(n, t, e, i, r) {
  let { fullCircles: o, startAngle: a, circumference: s, options: l } = t,
    {
      borderWidth: d,
      borderJoinStyle: m,
      borderDash: v,
      borderDashOffset: x,
      borderRadius: C,
    } = l,
    S = l.borderAlign === "inner";
  if (!d) return;
  n.setLineDash(v || []),
    (n.lineDashOffset = x),
    S
      ? ((n.lineWidth = d * 2), (n.lineJoin = m || "round"))
      : ((n.lineWidth = d), (n.lineJoin = m || "bevel"));
  let T = t.endAngle;
  if (o) {
    Kd(n, t, e, i, T, r);
    for (let k = 0; k < o; ++k) n.stroke();
    isNaN(s) || (T = a + (s % Tt || Tt));
  }
  S && P2(n, t, T),
    l.selfJoin && T - a >= ut && C === 0 && m !== "miter" && O2(n, t, T),
    o || (Kd(n, t, e, i, T, r), n.stroke());
}
var Km = class extends Nn {
  static id = "arc";
  static defaults = {
    borderAlign: "center",
    borderColor: "#fff",
    borderDash: [],
    borderDashOffset: 0,
    borderJoinStyle: void 0,
    borderRadius: 0,
    borderWidth: 2,
    offset: 0,
    spacing: 0,
    angle: void 0,
    circular: !0,
    selfJoin: !1,
  };
  static defaultRoutes = { backgroundColor: "backgroundColor" };
  static descriptors = {
    _scriptable: !0,
    _indexable: (t) => t !== "borderDash",
  };
  circumference;
  endAngle;
  fullCircles;
  innerRadius;
  outerRadius;
  pixelMargin;
  startAngle;
  constructor(t) {
    super(),
      (this.options = void 0),
      (this.circumference = void 0),
      (this.startAngle = void 0),
      (this.endAngle = void 0),
      (this.innerRadius = void 0),
      (this.outerRadius = void 0),
      (this.pixelMargin = 0),
      (this.fullCircles = 0),
      t && Object.assign(this, t);
  }
  inRange(t, e, i) {
    let r = this.getProps(["x", "y"], i),
      { angle: o, distance: a } = om(r, { x: t, y: e }),
      {
        startAngle: s,
        endAngle: l,
        innerRadius: d,
        outerRadius: m,
        circumference: v,
      } = this.getProps(
        [
          "startAngle",
          "endAngle",
          "innerRadius",
          "outerRadius",
          "circumference",
        ],
        i
      ),
      x = (this.options.spacing + this.options.borderWidth) / 2,
      C = We(v, l - s),
      S = Fa(o, s, l) && s !== l,
      T = C >= Tt || S,
      k = ar(a, d + x, m + x);
    return T && k;
  }
  getCenterPoint(t) {
    let {
        x: e,
        y: i,
        startAngle: r,
        endAngle: o,
        innerRadius: a,
        outerRadius: s,
      } = this.getProps(
        ["x", "y", "startAngle", "endAngle", "innerRadius", "outerRadius"],
        t
      ),
      { offset: l, spacing: d } = this.options,
      m = (r + o) / 2,
      v = (a + s + d + l) / 2;
    return { x: e + Math.cos(m) * v, y: i + Math.sin(m) * v };
  }
  tooltipPosition(t) {
    return this.getCenterPoint(t);
  }
  draw(t) {
    let { options: e, circumference: i } = this,
      r = (e.offset || 0) / 4,
      o = (e.spacing || 0) / 2,
      a = e.circular;
    if (
      ((this.pixelMargin = e.borderAlign === "inner" ? 0.33 : 0),
      (this.fullCircles = i > Tt ? Math.floor(i / Tt) : 0),
      i === 0 || this.innerRadius < 0 || this.outerRadius < 0)
    )
      return;
    t.save();
    let s = (this.startAngle + this.endAngle) / 2;
    t.translate(Math.cos(s) * r, Math.sin(s) * r);
    let l = 1 - Math.sin(Math.min(ut, i || 0)),
      d = r * l;
    (t.fillStyle = e.backgroundColor),
      (t.strokeStyle = e.borderColor),
      F2(t, this, d, o, a),
      N2(t, this, d, o, a),
      t.restore();
  }
};
function Zy(n, t, e = t) {
  (n.lineCap = We(e.borderCapStyle, t.borderCapStyle)),
    n.setLineDash(We(e.borderDash, t.borderDash)),
    (n.lineDashOffset = We(e.borderDashOffset, t.borderDashOffset)),
    (n.lineJoin = We(e.borderJoinStyle, t.borderJoinStyle)),
    (n.lineWidth = We(e.borderWidth, t.borderWidth)),
    (n.strokeStyle = We(e.borderColor, t.borderColor));
}
function L2(n, t, e) {
  n.lineTo(e.x, e.y);
}
function V2(n) {
  return n.stepped
    ? Tv
    : n.tension || n.cubicInterpolationMode === "monotone"
    ? Ev
    : L2;
}
function Jy(n, t, e = {}) {
  let i = n.length,
    { start: r = 0, end: o = i - 1 } = e,
    { start: a, end: s } = t,
    l = Math.max(r, a),
    d = Math.min(o, s),
    m = (r < a && o < a) || (r > s && o > s);
  return {
    count: i,
    start: l,
    loop: t.loop,
    ilen: d < l && !m ? i + d - l : d - l,
  };
}
function B2(n, t, e, i) {
  let { points: r, options: o } = t,
    { count: a, start: s, loop: l, ilen: d } = Jy(r, e, i),
    m = V2(o),
    { move: v = !0, reverse: x } = i || {},
    C,
    S,
    T;
  for (C = 0; C <= d; ++C)
    (S = r[(s + (x ? d - C : C)) % a]),
      !S.skip &&
        (v ? (n.moveTo(S.x, S.y), (v = !1)) : m(n, T, S, x, o.stepped),
        (T = S));
  return l && ((S = r[(s + (x ? d : 0)) % a]), m(n, T, S, x, o.stepped)), !!l;
}
function H2(n, t, e, i) {
  let r = t.points,
    { count: o, start: a, ilen: s } = Jy(r, e, i),
    { move: l = !0, reverse: d } = i || {},
    m = 0,
    v = 0,
    x,
    C,
    S,
    T,
    k,
    P,
    j = (oe) => (a + (d ? s - oe : oe)) % o,
    K = () => {
      T !== k && (n.lineTo(m, k), n.lineTo(m, T), n.lineTo(m, P));
    };
  for (l && ((C = r[j(0)]), n.moveTo(C.x, C.y)), x = 0; x <= s; ++x) {
    if (((C = r[j(x)]), C.skip)) continue;
    let oe = C.x,
      ee = C.y,
      b = oe | 0;
    b === S
      ? (ee < T ? (T = ee) : ee > k && (k = ee), (m = (v * m + oe) / ++v))
      : (K(), n.lineTo(oe, ee), (S = b), (v = 0), (T = k = ee)),
      (P = ee);
  }
  K();
}
function Qm(n) {
  let t = n.options,
    e = t.borderDash && t.borderDash.length;
  return !n._decimated &&
    !n._loop &&
    !t.tension &&
    t.cubicInterpolationMode !== "monotone" &&
    !t.stepped &&
    !e
    ? H2
    : B2;
}
function j2(n) {
  return n.stepped
    ? Lv
    : n.tension || n.cubicInterpolationMode === "monotone"
    ? Vv
    : to;
}
function U2(n, t, e, i) {
  let r = t._path;
  r || ((r = t._path = new Path2D()), t.path(r, e, i) && r.closePath()),
    Zy(n, t.options),
    n.stroke(r);
}
function z2(n, t, e, i) {
  let { segments: r, options: o } = t,
    a = Qm(t);
  for (let s of r)
    Zy(n, o, s.style),
      n.beginPath(),
      a(n, t, s, { start: e, end: e + i - 1 }) && n.closePath(),
      n.stroke();
}
var $2 = typeof Path2D == "function";
function W2(n, t, e, i) {
  $2 && !t.options.segment ? U2(n, t, e, i) : z2(n, t, e, i);
}
var Ua = (() => {
  class n extends Nn {
    static id = "line";
    static defaults = {
      borderCapStyle: "butt",
      borderDash: [],
      borderDashOffset: 0,
      borderJoinStyle: "miter",
      borderWidth: 3,
      capBezierPoints: !0,
      cubicInterpolationMode: "default",
      fill: !1,
      spanGaps: !1,
      stepped: !1,
      tension: 0,
    };
    static defaultRoutes = {
      backgroundColor: "backgroundColor",
      borderColor: "borderColor",
    };
    static descriptors = {
      _scriptable: !0,
      _indexable: (e) => e !== "borderDash" && e !== "fill",
    };
    constructor(e) {
      super(),
        (this.animated = !0),
        (this.options = void 0),
        (this._chart = void 0),
        (this._loop = void 0),
        (this._fullLoop = void 0),
        (this._path = void 0),
        (this._points = void 0),
        (this._segments = void 0),
        (this._decimated = !1),
        (this._pointsUpdated = !1),
        (this._datasetIndex = void 0),
        e && Object.assign(this, e);
    }
    updateControlPoints(e, i) {
      let r = this.options;
      if (
        (r.tension || r.cubicInterpolationMode === "monotone") &&
        !r.stepped &&
        !this._pointsUpdated
      ) {
        let o = r.spanGaps ? this._loop : this._fullLoop;
        Rv(this._points, r, e, o, i), (this._pointsUpdated = !0);
      }
    }
    set points(e) {
      (this._points = e),
        delete this._segments,
        delete this._path,
        (this._pointsUpdated = !1);
    }
    get points() {
      return this._points;
    }
    get segments() {
      return (
        this._segments || (this._segments = Hv(this, this.options.segment))
      );
    }
    first() {
      let e = this.segments,
        i = this.points;
      return e.length && i[e[0].start];
    }
    last() {
      let e = this.segments,
        i = this.points,
        r = e.length;
      return r && i[e[r - 1].end];
    }
    interpolate(e, i) {
      let r = this.options,
        o = e[i],
        a = this.points,
        s = Mm(this, { property: i, start: o, end: o });
      if (!s.length) return;
      let l = [],
        d = j2(r),
        m,
        v;
      for (m = 0, v = s.length; m < v; ++m) {
        let { start: x, end: C } = s[m],
          S = a[x],
          T = a[C];
        if (S === T) {
          l.push(S);
          continue;
        }
        let k = Math.abs((o - S[i]) / (T[i] - S[i])),
          P = d(S, T, k, r.stepped);
        (P[i] = e[i]), l.push(P);
      }
      return l.length === 1 ? l[0] : l;
    }
    pathSegment(e, i, r) {
      return Qm(this)(e, this, i, r);
    }
    path(e, i, r) {
      let o = this.segments,
        a = Qm(this),
        s = this._loop;
      (i = i || 0), (r = r || this.points.length - i);
      for (let l of o) s &= a(e, this, l, { start: i, end: i + r - 1 });
      return !!s;
    }
    draw(e, i, r, o) {
      let a = this.options || {};
      (this.points || []).length &&
        a.borderWidth &&
        (e.save(), W2(e, this, r, o), e.restore()),
        this.animated && ((this._pointsUpdated = !1), (this._path = void 0));
    }
  }
  return n;
})();
function fy(n, t, e, i) {
  let r = n.options,
    { [e]: o } = n.getProps([e], i);
  return Math.abs(t - o) < r.radius + r.hitRadius;
}
var lf = (() => {
  class n extends Nn {
    static id = "point";
    parsed;
    skip;
    stop;
    static defaults = {
      borderWidth: 1,
      hitRadius: 1,
      hoverBorderWidth: 1,
      hoverRadius: 4,
      pointStyle: "circle",
      radius: 3,
      rotation: 0,
    };
    static defaultRoutes = {
      backgroundColor: "backgroundColor",
      borderColor: "borderColor",
    };
    constructor(e) {
      super(),
        (this.options = void 0),
        (this.parsed = void 0),
        (this.skip = void 0),
        (this.stop = void 0),
        e && Object.assign(this, e);
    }
    inRange(e, i, r) {
      let o = this.options,
        { x: a, y: s } = this.getProps(["x", "y"], r);
      return (
        Math.pow(e - a, 2) + Math.pow(i - s, 2) <
        Math.pow(o.hitRadius + o.radius, 2)
      );
    }
    inXRange(e, i) {
      return fy(this, e, "x", i);
    }
    inYRange(e, i) {
      return fy(this, e, "y", i);
    }
    getCenterPoint(e) {
      let { x: i, y: r } = this.getProps(["x", "y"], e);
      return { x: i, y: r };
    }
    size(e) {
      e = e || this.options || {};
      let i = e.radius || 0;
      i = Math.max(i, (i && e.hoverRadius) || 0);
      let r = (i && e.borderWidth) || 0;
      return (i + r) * 2;
    }
    draw(e, i) {
      let r = this.options;
      this.skip ||
        r.radius < 0.1 ||
        !rr(this, i, this.size(r) / 2) ||
        ((e.strokeStyle = r.borderColor),
        (e.lineWidth = r.borderWidth),
        (e.fillStyle = r.backgroundColor),
        Pd(e, r, this.x, this.y));
    }
    getRange() {
      let e = this.options || {};
      return e.radius + e.hitRadius;
    }
  }
  return n;
})();
function e1(n, t) {
  let {
      x: e,
      y: i,
      base: r,
      width: o,
      height: a,
    } = n.getProps(["x", "y", "base", "width", "height"], t),
    s,
    l,
    d,
    m,
    v;
  return (
    n.horizontal
      ? ((v = a / 2),
        (s = Math.min(e, r)),
        (l = Math.max(e, r)),
        (d = i - v),
        (m = i + v))
      : ((v = o / 2),
        (s = e - v),
        (l = e + v),
        (d = Math.min(i, r)),
        (m = Math.max(i, r))),
    { left: s, top: d, right: l, bottom: m }
  );
}
function so(n, t, e, i) {
  return n ? 0 : di(t, e, i);
}
function G2(n, t, e) {
  let i = n.options.borderWidth,
    r = n.borderSkipped,
    o = gm(i);
  return {
    t: so(r.top, o.top, 0, e),
    r: so(r.right, o.right, 0, t),
    b: so(r.bottom, o.bottom, 0, e),
    l: so(r.left, o.left, 0, t),
  };
}
function Y2(n, t, e) {
  let { enableBorderRadius: i } = n.getProps(["enableBorderRadius"]),
    r = n.options.borderRadius,
    o = oo(r),
    a = Math.min(t, e),
    s = n.borderSkipped,
    l = i || ot(r);
  return {
    topLeft: so(!l || s.top || s.left, o.topLeft, 0, a),
    topRight: so(!l || s.top || s.right, o.topRight, 0, a),
    bottomLeft: so(!l || s.bottom || s.left, o.bottomLeft, 0, a),
    bottomRight: so(!l || s.bottom || s.right, o.bottomRight, 0, a),
  };
}
function q2(n) {
  let t = e1(n),
    e = t.right - t.left,
    i = t.bottom - t.top,
    r = G2(n, e / 2, i / 2),
    o = Y2(n, e / 2, i / 2);
  return {
    outer: { x: t.left, y: t.top, w: e, h: i, radius: o },
    inner: {
      x: t.left + r.l,
      y: t.top + r.t,
      w: e - r.l - r.r,
      h: i - r.t - r.b,
      radius: {
        topLeft: Math.max(0, o.topLeft - Math.max(r.t, r.l)),
        topRight: Math.max(0, o.topRight - Math.max(r.t, r.r)),
        bottomLeft: Math.max(0, o.bottomLeft - Math.max(r.b, r.l)),
        bottomRight: Math.max(0, o.bottomRight - Math.max(r.b, r.r)),
      },
    },
  };
}
function Fm(n, t, e, i) {
  let r = t === null,
    o = e === null,
    s = n && !(r && o) && e1(n, i);
  return s && (r || ar(t, s.left, s.right)) && (o || ar(e, s.top, s.bottom));
}
function K2(n) {
  return n.topLeft || n.topRight || n.bottomLeft || n.bottomRight;
}
function Q2(n, t) {
  n.rect(t.x, t.y, t.w, t.h);
}
function Nm(n, t, e = {}) {
  let i = n.x !== e.x ? -t : 0,
    r = n.y !== e.y ? -t : 0,
    o = (n.x + n.w !== e.x + e.w ? t : 0) - i,
    a = (n.y + n.h !== e.y + e.h ? t : 0) - r;
  return { x: n.x + i, y: n.y + r, w: n.w + o, h: n.h + a, radius: n.radius };
}
var Xm = class extends Nn {
    static id = "bar";
    static defaults = {
      borderSkipped: "start",
      borderWidth: 0,
      borderRadius: 0,
      inflateAmount: "auto",
      pointStyle: void 0,
    };
    static defaultRoutes = {
      backgroundColor: "backgroundColor",
      borderColor: "borderColor",
    };
    constructor(t) {
      super(),
        (this.options = void 0),
        (this.horizontal = void 0),
        (this.base = void 0),
        (this.width = void 0),
        (this.height = void 0),
        (this.inflateAmount = void 0),
        t && Object.assign(this, t);
    }
    draw(t) {
      let {
          inflateAmount: e,
          options: { borderColor: i, backgroundColor: r },
        } = this,
        { inner: o, outer: a } = q2(this),
        s = K2(a.radius) ? La : Q2;
      t.save(),
        (a.w !== o.w || a.h !== o.h) &&
          (t.beginPath(),
          s(t, Nm(a, e, o)),
          t.clip(),
          s(t, Nm(o, -e, a)),
          (t.fillStyle = i),
          t.fill("evenodd")),
        t.beginPath(),
        s(t, Nm(o, e)),
        (t.fillStyle = r),
        t.fill(),
        t.restore();
    }
    inRange(t, e, i) {
      return Fm(this, t, e, i);
    }
    inXRange(t, e) {
      return Fm(this, t, null, e);
    }
    inYRange(t, e) {
      return Fm(this, null, t, e);
    }
    getCenterPoint(t) {
      let {
        x: e,
        y: i,
        base: r,
        horizontal: o,
      } = this.getProps(["x", "y", "base", "horizontal"], t);
      return { x: o ? (e + r) / 2 : e, y: o ? i : (i + r) / 2 };
    }
    getRange(t) {
      return t === "x" ? this.width / 2 : this.height / 2;
    }
  },
  X2 = Object.freeze({
    __proto__: null,
    ArcElement: Km,
    BarElement: Xm,
    LineElement: Ua,
    PointElement: lf,
  }),
  Zm = [
    "rgb(54, 162, 235)",
    "rgb(255, 99, 132)",
    "rgb(255, 159, 64)",
    "rgb(255, 205, 86)",
    "rgb(75, 192, 192)",
    "rgb(153, 102, 255)",
    "rgb(201, 203, 207)",
  ],
  gy = Zm.map((n) => n.replace("rgb(", "rgba(").replace(")", ", 0.5)"));
function t1(n) {
  return Zm[n % Zm.length];
}
function i1(n) {
  return gy[n % gy.length];
}
function Z2(n, t) {
  return (n.borderColor = t1(t)), (n.backgroundColor = i1(t)), ++t;
}
function J2(n, t) {
  return (n.backgroundColor = n.data.map(() => t1(t++))), t;
}
function ek(n, t) {
  return (n.backgroundColor = n.data.map(() => i1(t++))), t;
}
function tk(n) {
  let t = 0;
  return (e, i) => {
    let r = n.getDatasetMeta(i).controller;
    r instanceof af
      ? (t = J2(e, t))
      : r instanceof zy
      ? (t = ek(e, t))
      : r && (t = Z2(e, t));
  };
}
function _y(n) {
  let t;
  for (t in n) if (n[t].borderColor || n[t].backgroundColor) return !0;
  return !1;
}
function ik(n) {
  return n && (n.borderColor || n.backgroundColor);
}
function nk() {
  return (
    kt.borderColor !== "rgba(0,0,0,0.1)" ||
    kt.backgroundColor !== "rgba(0,0,0,0.1)"
  );
}
var rk = {
  id: "colors",
  defaults: { enabled: !0, forceOverride: !1 },
  beforeLayout(n, t, e) {
    if (!e.enabled) return;
    let {
        data: { datasets: i },
        options: r,
      } = n.config,
      { elements: o } = r,
      a = _y(i) || ik(r) || (o && _y(o)) || nk();
    if (!e.forceOverride && a) return;
    let s = tk(n);
    i.forEach(s);
  },
};
function ok(n, t, e, i, r) {
  let o = r.samples || i;
  if (o >= e) return n.slice(t, t + e);
  let a = [],
    s = (e - 2) / (o - 2),
    l = 0,
    d = t + e - 1,
    m = t,
    v,
    x,
    C,
    S,
    T;
  for (a[l++] = n[m], v = 0; v < o - 2; v++) {
    let k = 0,
      P = 0,
      j,
      K = Math.floor((v + 1) * s) + 1 + t,
      oe = Math.min(Math.floor((v + 2) * s) + 1, e) + t,
      ee = oe - K;
    for (j = K; j < oe; j++) (k += n[j].x), (P += n[j].y);
    (k /= ee), (P /= ee);
    let b = Math.floor(v * s) + 1 + t,
      me = Math.min(Math.floor((v + 1) * s) + 1, e) + t,
      { x: re, y: _e } = n[m];
    for (C = S = -1, j = b; j < me; j++)
      (S = 0.5 * Math.abs((re - k) * (n[j].y - _e) - (re - n[j].x) * (P - _e))),
        S > C && ((C = S), (x = n[j]), (T = j));
    (a[l++] = x), (m = T);
  }
  return (a[l++] = n[d]), a;
}
function ak(n, t, e, i) {
  let r = 0,
    o = 0,
    a,
    s,
    l,
    d,
    m,
    v,
    x,
    C,
    S,
    T,
    k = [],
    P = t + e - 1,
    j = n[t].x,
    oe = n[P].x - j;
  for (a = t; a < t + e; ++a) {
    (s = n[a]), (l = ((s.x - j) / oe) * i), (d = s.y);
    let ee = l | 0;
    if (ee === m)
      d < S ? ((S = d), (v = a)) : d > T && ((T = d), (x = a)),
        (r = (o * r + s.x) / ++o);
    else {
      let b = a - 1;
      if (!tt(v) && !tt(x)) {
        let me = Math.min(v, x),
          re = Math.max(v, x);
        me !== C && me !== b && k.push(Be(Q({}, n[me]), { x: r })),
          re !== C && re !== b && k.push(Be(Q({}, n[re]), { x: r }));
      }
      a > 0 && b !== C && k.push(n[b]),
        k.push(s),
        (m = ee),
        (o = 0),
        (S = T = d),
        (v = x = C = a);
    }
  }
  return k;
}
function n1(n) {
  if (n._decimated) {
    let t = n._data;
    delete n._decimated,
      delete n._data,
      Object.defineProperty(n, "data", {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        value: t,
      });
  }
}
function by(n) {
  n.data.datasets.forEach((t) => {
    n1(t);
  });
}
function sk(n, t) {
  let e = t.length,
    i = 0,
    r,
    { iScale: o } = n,
    { min: a, max: s, minDefined: l, maxDefined: d } = o.getUserBounds();
  return (
    l && (i = di(nr(t, o.axis, a).lo, 0, e - 1)),
    d ? (r = di(nr(t, o.axis, s).hi + 1, i, e) - i) : (r = e - i),
    { start: i, count: r }
  );
}
var lk = {
  id: "decimation",
  defaults: { algorithm: "min-max", enabled: !1 },
  beforeElementsUpdate: (n, t, e) => {
    if (!e.enabled) {
      by(n);
      return;
    }
    let i = n.width;
    n.data.datasets.forEach((r, o) => {
      let { _data: a, indexAxis: s } = r,
        l = n.getDatasetMeta(o),
        d = a || r.data;
      if (
        Va([s, n.options.indexAxis]) === "y" ||
        !l.controller.supportsDecimation
      )
        return;
      let m = n.scales[l.xAxisID];
      if ((m.type !== "linear" && m.type !== "time") || n.options.parsing)
        return;
      let { start: v, count: x } = sk(l, d),
        C = e.threshold || 4 * i;
      if (x <= C) {
        n1(r);
        return;
      }
      tt(a) &&
        ((r._data = d),
        delete r.data,
        Object.defineProperty(r, "data", {
          configurable: !0,
          enumerable: !0,
          get: function () {
            return this._decimated;
          },
          set: function (T) {
            this._data = T;
          },
        }));
      let S;
      switch (e.algorithm) {
        case "lttb":
          S = ok(d, v, x, i, e);
          break;
        case "min-max":
          S = ak(d, v, x, i);
          break;
        default:
          throw new Error(`Unsupported decimation algorithm '${e.algorithm}'`);
      }
      r._decimated = S;
    });
  },
  destroy(n) {
    by(n);
  },
};
function ck(n, t, e) {
  let i = n.segments,
    r = n.points,
    o = t.points,
    a = [];
  for (let s of i) {
    let { start: l, end: d } = s;
    d = Zd(l, d, r);
    let m = Jm(e, r[l], r[d], s.loop);
    if (!t.segments) {
      a.push({ source: s, target: m, start: r[l], end: r[d] });
      continue;
    }
    let v = Mm(t, m);
    for (let x of v) {
      let C = Jm(e, o[x.start], o[x.end], x.loop),
        S = Sm(s, r, C);
      for (let T of S)
        a.push({
          source: T,
          target: x,
          start: { [e]: vy(m, C, "start", Math.max) },
          end: { [e]: vy(m, C, "end", Math.min) },
        });
    }
  }
  return a;
}
function Jm(n, t, e, i) {
  if (i) return;
  let r = t[n],
    o = e[n];
  return (
    n === "angle" && ((r = vi(r)), (o = vi(o))),
    { property: n, start: r, end: o }
  );
}
function dk(n, t) {
  let { x: e = null, y: i = null } = n || {},
    r = t.points,
    o = [];
  return (
    t.segments.forEach(({ start: a, end: s }) => {
      s = Zd(a, s, r);
      let l = r[a],
        d = r[s];
      i !== null
        ? (o.push({ x: l.x, y: i }), o.push({ x: d.x, y: i }))
        : e !== null && (o.push({ x: e, y: l.y }), o.push({ x: e, y: d.y }));
    }),
    o
  );
}
function Zd(n, t, e) {
  for (; t > n; t--) {
    let i = e[t];
    if (!isNaN(i.x) && !isNaN(i.y)) break;
  }
  return t;
}
function vy(n, t, e, i) {
  return n && t ? i(n[e], t[e]) : n ? n[e] : t ? t[e] : 0;
}
function r1(n, t) {
  let e = [],
    i = !1;
  return (
    Mt(n) ? ((i = !0), (e = n)) : (e = dk(n, t)),
    e.length
      ? new Ua({ points: e, options: { tension: 0 }, _loop: i, _fullLoop: i })
      : null
  );
}
function yy(n) {
  return n && n.fill !== !1;
}
function uk(n, t, e) {
  let r = n[t].fill,
    o = [t],
    a;
  if (!e) return r;
  for (; r !== !1 && o.indexOf(r) === -1; ) {
    if (!Ht(r)) return r;
    if (((a = n[r]), !a)) return !1;
    if (a.visible) return r;
    o.push(r), (r = a.fill);
  }
  return !1;
}
function hk(n, t, e) {
  let i = gk(n);
  if (ot(i)) return isNaN(i.value) ? !1 : i;
  let r = parseFloat(i);
  return Ht(r) && Math.floor(r) === r
    ? pk(i[0], t, r, e)
    : ["origin", "start", "end", "stack", "shape"].indexOf(i) >= 0 && i;
}
function pk(n, t, e, i) {
  return (
    (n === "-" || n === "+") && (e = t + e), e === t || e < 0 || e >= i ? !1 : e
  );
}
function mk(n, t) {
  let e = null;
  return (
    n === "start"
      ? (e = t.bottom)
      : n === "end"
      ? (e = t.top)
      : ot(n)
      ? (e = t.getPixelForValue(n.value))
      : t.getBasePixel && (e = t.getBasePixel()),
    e
  );
}
function fk(n, t, e) {
  let i;
  return (
    n === "start"
      ? (i = e)
      : n === "end"
      ? (i = t.options.reverse ? t.min : t.max)
      : ot(n)
      ? (i = n.value)
      : (i = t.getBaseValue()),
    i
  );
}
function gk(n) {
  let t = n.options,
    e = t.fill,
    i = We(e && e.target, e);
  return (
    i === void 0 && (i = !!t.backgroundColor),
    i === !1 || i === null ? !1 : i === !0 ? "origin" : i
  );
}
function _k(n) {
  let { scale: t, index: e, line: i } = n,
    r = [],
    o = i.segments,
    a = i.points,
    s = bk(t, e);
  s.push(r1({ x: null, y: t.bottom }, i));
  for (let l = 0; l < o.length; l++) {
    let d = o[l];
    for (let m = d.start; m <= d.end; m++) vk(r, a[m], s);
  }
  return new Ua({ points: r, options: {} });
}
function bk(n, t) {
  let e = [],
    i = n.getMatchingVisibleMetas("line");
  for (let r = 0; r < i.length; r++) {
    let o = i[r];
    if (o.index === t) break;
    o.hidden || e.unshift(o.dataset);
  }
  return e;
}
function vk(n, t, e) {
  let i = [];
  for (let r = 0; r < e.length; r++) {
    let o = e[r],
      { first: a, last: s, point: l } = yk(o, t, "x");
    if (!(!l || (a && s))) {
      if (a) i.unshift(l);
      else if ((n.push(l), !s)) break;
    }
  }
  n.push(...i);
}
function yk(n, t, e) {
  let i = n.interpolate(t, e);
  if (!i) return {};
  let r = i[e],
    o = n.segments,
    a = n.points,
    s = !1,
    l = !1;
  for (let d = 0; d < o.length; d++) {
    let m = o[d],
      v = a[m.start][e],
      x = a[m.end][e];
    if (ar(r, v, x)) {
      (s = r === v), (l = r === x);
      break;
    }
  }
  return { first: s, last: l, point: i };
}
var Qd = class {
  constructor(t) {
    (this.x = t.x), (this.y = t.y), (this.radius = t.radius);
  }
  pathSegment(t, e, i) {
    let { x: r, y: o, radius: a } = this;
    return (
      (e = e || { start: 0, end: Tt }),
      t.arc(r, o, a, e.end, e.start, !0),
      !i.bounds
    );
  }
  interpolate(t) {
    let { x: e, y: i, radius: r } = this,
      o = t.angle;
    return { x: e + Math.cos(o) * r, y: i + Math.sin(o) * r, angle: o };
  }
};
function xk(n) {
  let { chart: t, fill: e, line: i } = n;
  if (Ht(e)) return Ck(t, e);
  if (e === "stack") return _k(n);
  if (e === "shape") return !0;
  let r = wk(n);
  return r instanceof Qd ? r : r1(r, i);
}
function Ck(n, t) {
  let e = n.getDatasetMeta(t);
  return e && n.isDatasetVisible(t) ? e.dataset : null;
}
function wk(n) {
  return (n.scale || {}).getPointPositionForValue ? Sk(n) : Dk(n);
}
function Dk(n) {
  let { scale: t = {}, fill: e } = n,
    i = mk(e, t);
  if (Ht(i)) {
    let r = t.isHorizontal();
    return { x: r ? i : null, y: r ? null : i };
  }
  return null;
}
function Sk(n) {
  let { scale: t, fill: e } = n,
    i = t.options,
    r = t.getLabels().length,
    o = i.reverse ? t.max : t.min,
    a = fk(e, t, o),
    s = [];
  if (i.grid.circular) {
    let l = t.getPointPositionForValue(0, o);
    return new Qd({
      x: l.x,
      y: l.y,
      radius: t.getDistanceFromCenterForValue(a),
    });
  }
  for (let l = 0; l < r; ++l) s.push(t.getPointPositionForValue(l, a));
  return s;
}
function Lm(n, t, e) {
  let i = xk(t),
    { chart: r, index: o, line: a, scale: s, axis: l } = t,
    d = a.options,
    m = d.fill,
    v = d.backgroundColor,
    { above: x = v, below: C = v } = m || {},
    S = r.getDatasetMeta(o),
    T = Tm(r, S);
  i &&
    a.points.length &&
    (gl(n, e),
    Mk(n, {
      line: a,
      target: i,
      above: x,
      below: C,
      area: e,
      scale: s,
      axis: l,
      clip: T,
    }),
    _l(n));
}
function Mk(n, t) {
  let {
      line: e,
      target: i,
      above: r,
      below: o,
      area: a,
      scale: s,
      clip: l,
    } = t,
    d = e._loop ? "angle" : t.axis;
  n.save();
  let m = o;
  o !== r &&
    (d === "x"
      ? (xy(n, i, a.top),
        Vm(n, { line: e, target: i, color: r, scale: s, property: d, clip: l }),
        n.restore(),
        n.save(),
        xy(n, i, a.bottom))
      : d === "y" &&
        (Cy(n, i, a.left),
        Vm(n, { line: e, target: i, color: o, scale: s, property: d, clip: l }),
        n.restore(),
        n.save(),
        Cy(n, i, a.right),
        (m = r))),
    Vm(n, { line: e, target: i, color: m, scale: s, property: d, clip: l }),
    n.restore();
}
function xy(n, t, e) {
  let { segments: i, points: r } = t,
    o = !0,
    a = !1;
  n.beginPath();
  for (let s of i) {
    let { start: l, end: d } = s,
      m = r[l],
      v = r[Zd(l, d, r)];
    o ? (n.moveTo(m.x, m.y), (o = !1)) : (n.lineTo(m.x, e), n.lineTo(m.x, m.y)),
      (a = !!t.pathSegment(n, s, { move: a })),
      a ? n.closePath() : n.lineTo(v.x, e);
  }
  n.lineTo(t.first().x, e), n.closePath(), n.clip();
}
function Cy(n, t, e) {
  let { segments: i, points: r } = t,
    o = !0,
    a = !1;
  n.beginPath();
  for (let s of i) {
    let { start: l, end: d } = s,
      m = r[l],
      v = r[Zd(l, d, r)];
    o ? (n.moveTo(m.x, m.y), (o = !1)) : (n.lineTo(e, m.y), n.lineTo(m.x, m.y)),
      (a = !!t.pathSegment(n, s, { move: a })),
      a ? n.closePath() : n.lineTo(e, v.y);
  }
  n.lineTo(e, t.first().y), n.closePath(), n.clip();
}
function Vm(n, t) {
  let { line: e, target: i, property: r, color: o, scale: a, clip: s } = t,
    l = ck(e, i, r);
  for (let { source: d, target: m, start: v, end: x } of l) {
    let { style: { backgroundColor: C = o } = {} } = d,
      S = i !== !0;
    n.save(), (n.fillStyle = C), Tk(n, a, s, S && Jm(r, v, x)), n.beginPath();
    let T = !!e.pathSegment(n, d),
      k;
    if (S) {
      T ? n.closePath() : wy(n, i, x, r);
      let P = !!i.pathSegment(n, m, { move: T, reverse: !0 });
      (k = T && P), k || wy(n, i, v, r);
    }
    n.closePath(), n.fill(k ? "evenodd" : "nonzero"), n.restore();
  }
}
function Tk(n, t, e, i) {
  let r = t.chart.chartArea,
    { property: o, start: a, end: s } = i || {};
  if (o === "x" || o === "y") {
    let l, d, m, v;
    o === "x"
      ? ((l = a), (d = r.top), (m = s), (v = r.bottom))
      : ((l = r.left), (d = a), (m = r.right), (v = s)),
      n.beginPath(),
      e &&
        ((l = Math.max(l, e.left)),
        (m = Math.min(m, e.right)),
        (d = Math.max(d, e.top)),
        (v = Math.min(v, e.bottom))),
      n.rect(l, d, m - l, v - d),
      n.clip();
  }
}
function wy(n, t, e, i) {
  let r = t.interpolate(e, i);
  r && n.lineTo(r.x, r.y);
}
var Ek = {
    id: "filler",
    afterDatasetsUpdate(n, t, e) {
      let i = (n.data.datasets || []).length,
        r = [],
        o,
        a,
        s,
        l;
      for (a = 0; a < i; ++a)
        (o = n.getDatasetMeta(a)),
          (s = o.dataset),
          (l = null),
          s &&
            s.options &&
            s instanceof Ua &&
            (l = {
              visible: n.isDatasetVisible(a),
              index: a,
              fill: hk(s, a, i),
              chart: n,
              axis: o.controller.options.indexAxis,
              scale: o.vScale,
              line: s,
            }),
          (o.$filler = l),
          r.push(l);
      for (a = 0; a < i; ++a)
        (l = r[a]), !(!l || l.fill === !1) && (l.fill = uk(r, a, e.propagate));
    },
    beforeDraw(n, t, e) {
      let i = e.drawTime === "beforeDraw",
        r = n.getSortedVisibleDatasetMetas(),
        o = n.chartArea;
      for (let a = r.length - 1; a >= 0; --a) {
        let s = r[a].$filler;
        s &&
          (s.line.updateControlPoints(o, s.axis),
          i && s.fill && Lm(n.ctx, s, o));
      }
    },
    beforeDatasetsDraw(n, t, e) {
      if (e.drawTime !== "beforeDatasetsDraw") return;
      let i = n.getSortedVisibleDatasetMetas();
      for (let r = i.length - 1; r >= 0; --r) {
        let o = i[r].$filler;
        yy(o) && Lm(n.ctx, o, n.chartArea);
      }
    },
    beforeDatasetDraw(n, t, e) {
      let i = t.meta.$filler;
      !yy(i) || e.drawTime !== "beforeDatasetDraw" || Lm(n.ctx, i, n.chartArea);
    },
    defaults: { propagate: !0, drawTime: "beforeDatasetDraw" },
  },
  Dy = (n, t) => {
    let { boxHeight: e = t, boxWidth: i = t } = n;
    return (
      n.usePointStyle &&
        ((e = Math.min(e, t)), (i = n.pointStyleWidth || Math.min(i, t))),
      { boxWidth: i, boxHeight: e, itemHeight: Math.max(t, e) }
    );
  },
  kk = (n, t) =>
    n !== null &&
    t !== null &&
    n.datasetIndex === t.datasetIndex &&
    n.index === t.index,
  Xd = class extends Nn {
    constructor(t) {
      super(),
        (this._added = !1),
        (this.legendHitBoxes = []),
        (this._hoveredItem = null),
        (this.doughnutMode = !1),
        (this.chart = t.chart),
        (this.options = t.options),
        (this.ctx = t.ctx),
        (this.legendItems = void 0),
        (this.columnSizes = void 0),
        (this.lineWidths = void 0),
        (this.maxHeight = void 0),
        (this.maxWidth = void 0),
        (this.top = void 0),
        (this.bottom = void 0),
        (this.left = void 0),
        (this.right = void 0),
        (this.height = void 0),
        (this.width = void 0),
        (this._margins = void 0),
        (this.position = void 0),
        (this.weight = void 0),
        (this.fullSize = void 0);
    }
    update(t, e, i) {
      (this.maxWidth = t),
        (this.maxHeight = e),
        (this._margins = i),
        this.setDimensions(),
        this.buildLabels(),
        this.fit();
    }
    setDimensions() {
      this.isHorizontal()
        ? ((this.width = this.maxWidth),
          (this.left = this._margins.left),
          (this.right = this.width))
        : ((this.height = this.maxHeight),
          (this.top = this._margins.top),
          (this.bottom = this.height));
    }
    buildLabels() {
      let t = this.options.labels || {},
        e = wt(t.generateLabels, [this.chart], this) || [];
      t.filter && (e = e.filter((i) => t.filter(i, this.chart.data))),
        t.sort && (e = e.sort((i, r) => t.sort(i, r, this.chart.data))),
        this.options.reverse && e.reverse(),
        (this.legendItems = e);
    }
    fit() {
      let { options: t, ctx: e } = this;
      if (!t.display) {
        this.width = this.height = 0;
        return;
      }
      let i = t.labels,
        r = ii(i.font),
        o = r.size,
        a = this._computeTitleHeight(),
        { boxWidth: s, itemHeight: l } = Dy(i, o),
        d,
        m;
      (e.font = r.string),
        this.isHorizontal()
          ? ((d = this.maxWidth), (m = this._fitRows(a, o, s, l) + 10))
          : ((m = this.maxHeight), (d = this._fitCols(a, r, s, l) + 10)),
        (this.width = Math.min(d, t.maxWidth || this.maxWidth)),
        (this.height = Math.min(m, t.maxHeight || this.maxHeight));
    }
    _fitRows(t, e, i, r) {
      let {
          ctx: o,
          maxWidth: a,
          options: {
            labels: { padding: s },
          },
        } = this,
        l = (this.legendHitBoxes = []),
        d = (this.lineWidths = [0]),
        m = r + s,
        v = t;
      (o.textAlign = "left"), (o.textBaseline = "middle");
      let x = -1,
        C = -m;
      return (
        this.legendItems.forEach((S, T) => {
          let k = i + e / 2 + o.measureText(S.text).width;
          (T === 0 || d[d.length - 1] + k + 2 * s > a) &&
            ((v += m), (d[d.length - (T > 0 ? 0 : 1)] = 0), (C += m), x++),
            (l[T] = { left: 0, top: C, row: x, width: k, height: r }),
            (d[d.length - 1] += k + s);
        }),
        v
      );
    }
    _fitCols(t, e, i, r) {
      let {
          ctx: o,
          maxHeight: a,
          options: {
            labels: { padding: s },
          },
        } = this,
        l = (this.legendHitBoxes = []),
        d = (this.columnSizes = []),
        m = a - t,
        v = s,
        x = 0,
        C = 0,
        S = 0,
        T = 0;
      return (
        this.legendItems.forEach((k, P) => {
          let { itemWidth: j, itemHeight: K } = Ik(i, e, o, k, r);
          P > 0 &&
            C + K + 2 * s > m &&
            ((v += x + s),
            d.push({ width: x, height: C }),
            (S += x + s),
            T++,
            (x = C = 0)),
            (l[P] = { left: S, top: C, col: T, width: j, height: K }),
            (x = Math.max(x, j)),
            (C += K + s);
        }),
        (v += x),
        d.push({ width: x, height: C }),
        v
      );
    }
    adjustHitBoxes() {
      if (!this.options.display) return;
      let t = this._computeTitleHeight(),
        {
          legendHitBoxes: e,
          options: {
            align: i,
            labels: { padding: r },
            rtl: o,
          },
        } = this,
        a = Fo(o, this.left, this.width);
      if (this.isHorizontal()) {
        let s = 0,
          l = yi(i, this.left + r, this.right - this.lineWidths[s]);
        for (let d of e)
          s !== d.row &&
            ((s = d.row),
            (l = yi(i, this.left + r, this.right - this.lineWidths[s]))),
            (d.top += this.top + t + r),
            (d.left = a.leftForLtr(a.x(l), d.width)),
            (l += d.width + r);
      } else {
        let s = 0,
          l = yi(i, this.top + t + r, this.bottom - this.columnSizes[s].height);
        for (let d of e)
          d.col !== s &&
            ((s = d.col),
            (l = yi(
              i,
              this.top + t + r,
              this.bottom - this.columnSizes[s].height
            ))),
            (d.top = l),
            (d.left += this.left + r),
            (d.left = a.leftForLtr(a.x(d.left), d.width)),
            (l += d.height + r);
      }
    }
    isHorizontal() {
      return (
        this.options.position === "top" || this.options.position === "bottom"
      );
    }
    draw() {
      if (this.options.display) {
        let t = this.ctx;
        gl(t, this), this._draw(), _l(t);
      }
    }
    _draw() {
      let { options: t, columnSizes: e, lineWidths: i, ctx: r } = this,
        { align: o, labels: a } = t,
        s = kt.color,
        l = Fo(t.rtl, this.left, this.width),
        d = ii(a.font),
        { padding: m } = a,
        v = d.size,
        x = v / 2,
        C;
      this.drawTitle(),
        (r.textAlign = l.textAlign("left")),
        (r.textBaseline = "middle"),
        (r.lineWidth = 0.5),
        (r.font = d.string);
      let { boxWidth: S, boxHeight: T, itemHeight: k } = Dy(a, v),
        P = function (b, me, re) {
          if (isNaN(S) || S <= 0 || isNaN(T) || T < 0) return;
          r.save();
          let _e = We(re.lineWidth, 1);
          if (
            ((r.fillStyle = We(re.fillStyle, s)),
            (r.lineCap = We(re.lineCap, "butt")),
            (r.lineDashOffset = We(re.lineDashOffset, 0)),
            (r.lineJoin = We(re.lineJoin, "miter")),
            (r.lineWidth = _e),
            (r.strokeStyle = We(re.strokeStyle, s)),
            r.setLineDash(We(re.lineDash, [])),
            a.usePointStyle)
          ) {
            let He = {
                radius: (T * Math.SQRT2) / 2,
                pointStyle: re.pointStyle,
                rotation: re.rotation,
                borderWidth: _e,
              },
              Ge = l.xPlus(b, S / 2),
              Se = me + x;
            fm(r, He, Ge, Se, a.pointStyleWidth && S);
          } else {
            let He = me + Math.max((v - T) / 2, 0),
              Ge = l.leftForLtr(b, S),
              Se = oo(re.borderRadius);
            r.beginPath(),
              Object.values(Se).some((Ft) => Ft !== 0)
                ? La(r, { x: Ge, y: He, w: S, h: T, radius: Se })
                : r.rect(Ge, He, S, T),
              r.fill(),
              _e !== 0 && r.stroke();
          }
          r.restore();
        },
        j = function (b, me, re) {
          ro(r, re.text, b, me + k / 2, d, {
            strikethrough: re.hidden,
            textAlign: l.textAlign(re.textAlign),
          });
        },
        K = this.isHorizontal(),
        oe = this._computeTitleHeight();
      K
        ? (C = {
            x: yi(o, this.left + m, this.right - i[0]),
            y: this.top + m + oe,
            line: 0,
          })
        : (C = {
            x: this.left + m,
            y: yi(o, this.top + oe + m, this.bottom - e[0].height),
            line: 0,
          }),
        wm(this.ctx, t.textDirection);
      let ee = k + m;
      this.legendItems.forEach((b, me) => {
        (r.strokeStyle = b.fontColor), (r.fillStyle = b.fontColor);
        let re = r.measureText(b.text).width,
          _e = l.textAlign(b.textAlign || (b.textAlign = a.textAlign)),
          He = S + x + re,
          Ge = C.x,
          Se = C.y;
        l.setWidth(this.width),
          K
            ? me > 0 &&
              Ge + He + m > this.right &&
              ((Se = C.y += ee),
              C.line++,
              (Ge = C.x = yi(o, this.left + m, this.right - i[C.line])))
            : me > 0 &&
              Se + ee > this.bottom &&
              ((Ge = C.x = Ge + e[C.line].width + m),
              C.line++,
              (Se = C.y =
                yi(o, this.top + oe + m, this.bottom - e[C.line].height)));
        let Ft = l.x(Ge);
        if (
          (P(Ft, Se, b),
          (Ge = Dv(_e, Ge + S + x, K ? Ge + He : this.right, t.rtl)),
          j(l.x(Ge), Se, b),
          K)
        )
          C.x += He + m;
        else if (typeof b.text != "string") {
          let Pi = d.lineHeight;
          C.y += o1(b, Pi) + m;
        } else C.y += ee;
      }),
        Dm(this.ctx, t.textDirection);
    }
    drawTitle() {
      let t = this.options,
        e = t.title,
        i = ii(e.font),
        r = xi(e.padding);
      if (!e.display) return;
      let o = Fo(t.rtl, this.left, this.width),
        a = this.ctx,
        s = e.position,
        l = i.size / 2,
        d = r.top + l,
        m,
        v = this.left,
        x = this.width;
      if (this.isHorizontal())
        (x = Math.max(...this.lineWidths)),
          (m = this.top + d),
          (v = yi(t.align, v, this.right - x));
      else {
        let S = this.columnSizes.reduce((T, k) => Math.max(T, k.height), 0);
        m =
          d +
          yi(
            t.align,
            this.top,
            this.bottom - S - t.labels.padding - this._computeTitleHeight()
          );
      }
      let C = yi(s, v, v + x);
      (a.textAlign = o.textAlign(Id(s))),
        (a.textBaseline = "middle"),
        (a.strokeStyle = e.color),
        (a.fillStyle = e.color),
        (a.font = i.string),
        ro(a, e.text, C, m, i);
    }
    _computeTitleHeight() {
      let t = this.options.title,
        e = ii(t.font),
        i = xi(t.padding);
      return t.display ? e.lineHeight + i.height : 0;
    }
    _getLegendItemAt(t, e) {
      let i, r, o;
      if (ar(t, this.left, this.right) && ar(e, this.top, this.bottom)) {
        for (o = this.legendHitBoxes, i = 0; i < o.length; ++i)
          if (
            ((r = o[i]),
            ar(t, r.left, r.left + r.width) && ar(e, r.top, r.top + r.height))
          )
            return this.legendItems[i];
      }
      return null;
    }
    handleEvent(t) {
      let e = this.options;
      if (!Ak(t.type, e)) return;
      let i = this._getLegendItemAt(t.x, t.y);
      if (t.type === "mousemove" || t.type === "mouseout") {
        let r = this._hoveredItem,
          o = kk(r, i);
        r && !o && wt(e.onLeave, [t, r, this], this),
          (this._hoveredItem = i),
          i && !o && wt(e.onHover, [t, i, this], this);
      } else i && wt(e.onClick, [t, i, this], this);
    }
  };
function Ik(n, t, e, i, r) {
  let o = Ok(i, n, t, e),
    a = Pk(r, i, t.lineHeight);
  return { itemWidth: o, itemHeight: a };
}
function Ok(n, t, e, i) {
  let r = n.text;
  return (
    r &&
      typeof r != "string" &&
      (r = r.reduce((o, a) => (o.length > a.length ? o : a))),
    t + e.size / 2 + i.measureText(r).width
  );
}
function Pk(n, t, e) {
  let i = n;
  return typeof t.text != "string" && (i = o1(t, e)), i;
}
function o1(n, t) {
  let e = n.text ? n.text.length : 0;
  return t * e;
}
function Ak(n, t) {
  return !!(
    ((n === "mousemove" || n === "mouseout") && (t.onHover || t.onLeave)) ||
    (t.onClick && (n === "click" || n === "mouseup"))
  );
}
var Rk = {
    id: "legend",
    _element: Xd,
    start(n, t, e) {
      let i = (n.legend = new Xd({ ctx: n.ctx, options: e, chart: n }));
      Ei.configure(n, i, e), Ei.addBox(n, i);
    },
    stop(n) {
      Ei.removeBox(n, n.legend), delete n.legend;
    },
    beforeUpdate(n, t, e) {
      let i = n.legend;
      Ei.configure(n, i, e), (i.options = e);
    },
    afterUpdate(n) {
      let t = n.legend;
      t.buildLabels(), t.adjustHitBoxes();
    },
    afterEvent(n, t) {
      t.replay || n.legend.handleEvent(t.event);
    },
    defaults: {
      display: !0,
      position: "top",
      align: "center",
      fullSize: !0,
      reverse: !1,
      weight: 1e3,
      onClick(n, t, e) {
        let i = t.datasetIndex,
          r = e.chart;
        r.isDatasetVisible(i)
          ? (r.hide(i), (t.hidden = !0))
          : (r.show(i), (t.hidden = !1));
      },
      onHover: null,
      onLeave: null,
      labels: {
        color: (n) => n.chart.options.color,
        boxWidth: 40,
        padding: 10,
        generateLabels(n) {
          let t = n.data.datasets,
            {
              labels: {
                usePointStyle: e,
                pointStyle: i,
                textAlign: r,
                color: o,
                useBorderRadius: a,
                borderRadius: s,
              },
            } = n.legend.options;
          return n._getSortedDatasetMetas().map((l) => {
            let d = l.controller.getStyle(e ? 0 : void 0),
              m = xi(d.borderWidth);
            return {
              text: t[l.index].label,
              fillStyle: d.backgroundColor,
              fontColor: o,
              hidden: !l.visible,
              lineCap: d.borderCapStyle,
              lineDash: d.borderDash,
              lineDashOffset: d.borderDashOffset,
              lineJoin: d.borderJoinStyle,
              lineWidth: (m.width + m.height) / 4,
              strokeStyle: d.borderColor,
              pointStyle: i || d.pointStyle,
              rotation: d.rotation,
              textAlign: r || d.textAlign,
              borderRadius: a && (s || d.borderRadius),
              datasetIndex: l.index,
            };
          }, this);
        },
      },
      title: {
        color: (n) => n.chart.options.color,
        display: !1,
        position: "center",
        text: "",
      },
    },
    descriptors: {
      _scriptable: (n) => !n.startsWith("on"),
      labels: {
        _scriptable: (n) => !["generateLabels", "filter", "sort"].includes(n),
      },
    },
  },
  Ml = class extends Nn {
    constructor(t) {
      super(),
        (this.chart = t.chart),
        (this.options = t.options),
        (this.ctx = t.ctx),
        (this._padding = void 0),
        (this.top = void 0),
        (this.bottom = void 0),
        (this.left = void 0),
        (this.right = void 0),
        (this.width = void 0),
        (this.height = void 0),
        (this.position = void 0),
        (this.weight = void 0),
        (this.fullSize = void 0);
    }
    update(t, e) {
      let i = this.options;
      if (((this.left = 0), (this.top = 0), !i.display)) {
        this.width = this.height = this.right = this.bottom = 0;
        return;
      }
      (this.width = this.right = t), (this.height = this.bottom = e);
      let r = Mt(i.text) ? i.text.length : 1;
      this._padding = xi(i.padding);
      let o = r * ii(i.font).lineHeight + this._padding.height;
      this.isHorizontal() ? (this.height = o) : (this.width = o);
    }
    isHorizontal() {
      let t = this.options.position;
      return t === "top" || t === "bottom";
    }
    _drawArgs(t) {
      let { top: e, left: i, bottom: r, right: o, options: a } = this,
        s = a.align,
        l = 0,
        d,
        m,
        v;
      return (
        this.isHorizontal()
          ? ((m = yi(s, i, o)), (v = e + t), (d = o - i))
          : (a.position === "left"
              ? ((m = i + t), (v = yi(s, r, e)), (l = ut * -0.5))
              : ((m = o - t), (v = yi(s, e, r)), (l = ut * 0.5)),
            (d = r - e)),
        { titleX: m, titleY: v, maxWidth: d, rotation: l }
      );
    }
    draw() {
      let t = this.ctx,
        e = this.options;
      if (!e.display) return;
      let i = ii(e.font),
        o = i.lineHeight / 2 + this._padding.top,
        { titleX: a, titleY: s, maxWidth: l, rotation: d } = this._drawArgs(o);
      ro(t, e.text, 0, 0, i, {
        color: e.color,
        maxWidth: l,
        rotation: d,
        textAlign: Id(e.align),
        textBaseline: "middle",
        translation: [a, s],
      });
    }
  };
function Fk(n, t) {
  let e = new Ml({ ctx: n.ctx, options: t, chart: n });
  Ei.configure(n, e, t), Ei.addBox(n, e), (n.titleBlock = e);
}
var cf = {
    id: "title",
    _element: Ml,
    start(n, t, e) {
      Fk(n, e);
    },
    stop(n) {
      let t = n.titleBlock;
      Ei.removeBox(n, t), delete n.titleBlock;
    },
    beforeUpdate(n, t, e) {
      let i = n.titleBlock;
      Ei.configure(n, i, e), (i.options = e);
    },
    defaults: {
      align: "center",
      display: !1,
      font: { weight: "bold" },
      fullSize: !0,
      padding: 10,
      position: "top",
      text: "",
      weight: 2e3,
    },
    defaultRoutes: { color: "color" },
    descriptors: { _scriptable: !0, _indexable: !1 },
  },
  jd = new WeakMap(),
  Nk = {
    id: "subtitle",
    start(n, t, e) {
      let i = new Ml({ ctx: n.ctx, options: e, chart: n });
      Ei.configure(n, i, e), Ei.addBox(n, i), jd.set(n, i);
    },
    stop(n) {
      Ei.removeBox(n, jd.get(n)), jd.delete(n);
    },
    beforeUpdate(n, t, e) {
      let i = jd.get(n);
      Ei.configure(n, i, e), (i.options = e);
    },
    defaults: {
      align: "center",
      display: !1,
      font: { weight: "normal" },
      fullSize: !0,
      padding: 0,
      position: "top",
      text: "",
      weight: 1500,
    },
    defaultRoutes: { color: "color" },
    descriptors: { _scriptable: !0, _indexable: !1 },
  },
  Dl = {
    average(n) {
      if (!n.length) return !1;
      let t,
        e,
        i = new Set(),
        r = 0,
        o = 0;
      for (t = 0, e = n.length; t < e; ++t) {
        let s = n[t].element;
        if (s && s.hasValue()) {
          let l = s.tooltipPosition();
          i.add(l.x), (r += l.y), ++o;
        }
      }
      return o === 0 || i.size === 0
        ? !1
        : { x: [...i].reduce((s, l) => s + l) / i.size, y: r / o };
    },
    nearest(n, t) {
      if (!n.length) return !1;
      let e = t.x,
        i = t.y,
        r = Number.POSITIVE_INFINITY,
        o,
        a,
        s;
      for (o = 0, a = n.length; o < a; ++o) {
        let l = n[o].element;
        if (l && l.hasValue()) {
          let d = l.getCenterPoint(),
            m = Sd(t, d);
          m < r && ((r = m), (s = l));
        }
      }
      if (s) {
        let l = s.tooltipPosition();
        (e = l.x), (i = l.y);
      }
      return { x: e, y: i };
    },
  };
function sr(n, t) {
  return t && (Mt(t) ? Array.prototype.push.apply(n, t) : n.push(t)), n;
}
function Pr(n) {
  return (typeof n == "string" || n instanceof String) &&
    n.indexOf(`
`) > -1
    ? n.split(`
`)
    : n;
}
function Lk(n, t) {
  let { element: e, datasetIndex: i, index: r } = t,
    o = n.getDatasetMeta(i).controller,
    { label: a, value: s } = o.getLabelAndValue(r);
  return {
    chart: n,
    label: a,
    parsed: o.getParsed(r),
    raw: n.data.datasets[i].data[r],
    formattedValue: s,
    dataset: o.getDataset(),
    dataIndex: r,
    datasetIndex: i,
    element: e,
  };
}
function Sy(n, t) {
  let e = n.chart.ctx,
    { body: i, footer: r, title: o } = n,
    { boxWidth: a, boxHeight: s } = t,
    l = ii(t.bodyFont),
    d = ii(t.titleFont),
    m = ii(t.footerFont),
    v = o.length,
    x = r.length,
    C = i.length,
    S = xi(t.padding),
    T = S.height,
    k = 0,
    P = i.reduce(
      (oe, ee) => oe + ee.before.length + ee.lines.length + ee.after.length,
      0
    );
  if (
    ((P += n.beforeBody.length + n.afterBody.length),
    v &&
      (T += v * d.lineHeight + (v - 1) * t.titleSpacing + t.titleMarginBottom),
    P)
  ) {
    let oe = t.displayColors ? Math.max(s, l.lineHeight) : l.lineHeight;
    T += C * oe + (P - C) * l.lineHeight + (P - 1) * t.bodySpacing;
  }
  x && (T += t.footerMarginTop + x * m.lineHeight + (x - 1) * t.footerSpacing);
  let j = 0,
    K = function (oe) {
      k = Math.max(k, e.measureText(oe).width + j);
    };
  return (
    e.save(),
    (e.font = d.string),
    gt(n.title, K),
    (e.font = l.string),
    gt(n.beforeBody.concat(n.afterBody), K),
    (j = t.displayColors ? a + 2 + t.boxPadding : 0),
    gt(i, (oe) => {
      gt(oe.before, K), gt(oe.lines, K), gt(oe.after, K);
    }),
    (j = 0),
    (e.font = m.string),
    gt(n.footer, K),
    e.restore(),
    (k += S.width),
    { width: k, height: T }
  );
}
function Vk(n, t) {
  let { y: e, height: i } = t;
  return e < i / 2 ? "top" : e > n.height - i / 2 ? "bottom" : "center";
}
function Bk(n, t, e, i) {
  let { x: r, width: o } = i,
    a = e.caretSize + e.caretPadding;
  if ((n === "left" && r + o + a > t.width) || (n === "right" && r - o - a < 0))
    return !0;
}
function Hk(n, t, e, i) {
  let { x: r, width: o } = e,
    {
      width: a,
      chartArea: { left: s, right: l },
    } = n,
    d = "center";
  return (
    i === "center"
      ? (d = r <= (s + l) / 2 ? "left" : "right")
      : r <= o / 2
      ? (d = "left")
      : r >= a - o / 2 && (d = "right"),
    Bk(d, n, t, e) && (d = "center"),
    d
  );
}
function My(n, t, e) {
  let i = e.yAlign || t.yAlign || Vk(n, e);
  return { xAlign: e.xAlign || t.xAlign || Hk(n, t, e, i), yAlign: i };
}
function jk(n, t) {
  let { x: e, width: i } = n;
  return t === "right" ? (e -= i) : t === "center" && (e -= i / 2), e;
}
function Uk(n, t, e) {
  let { y: i, height: r } = n;
  return (
    t === "top" ? (i += e) : t === "bottom" ? (i -= r + e) : (i -= r / 2), i
  );
}
function Ty(n, t, e, i) {
  let { caretSize: r, caretPadding: o, cornerRadius: a } = n,
    { xAlign: s, yAlign: l } = e,
    d = r + o,
    { topLeft: m, topRight: v, bottomLeft: x, bottomRight: C } = oo(a),
    S = jk(t, s),
    T = Uk(t, l, d);
  return (
    l === "center"
      ? s === "left"
        ? (S += d)
        : s === "right" && (S -= d)
      : s === "left"
      ? (S -= Math.max(m, x) + r)
      : s === "right" && (S += Math.max(v, C) + r),
    { x: di(S, 0, i.width - t.width), y: di(T, 0, i.height - t.height) }
  );
}
function Ud(n, t, e) {
  let i = xi(e.padding);
  return t === "center"
    ? n.x + n.width / 2
    : t === "right"
    ? n.x + n.width - i.right
    : n.x + i.left;
}
function Ey(n) {
  return sr([], Pr(n));
}
function zk(n, t, e) {
  return Ir(n, { tooltip: t, tooltipItems: e, type: "tooltip" });
}
function ky(n, t) {
  let e = t && t.dataset && t.dataset.tooltip && t.dataset.tooltip.callbacks;
  return e ? n.override(e) : n;
}
var a1 = {
  beforeTitle: or,
  title(n) {
    if (n.length > 0) {
      let t = n[0],
        e = t.chart.data.labels,
        i = e ? e.length : 0;
      if (this && this.options && this.options.mode === "dataset")
        return t.dataset.label || "";
      if (t.label) return t.label;
      if (i > 0 && t.dataIndex < i) return e[t.dataIndex];
    }
    return "";
  },
  afterTitle: or,
  beforeBody: or,
  beforeLabel: or,
  label(n) {
    if (this && this.options && this.options.mode === "dataset")
      return n.label + ": " + n.formattedValue || n.formattedValue;
    let t = n.dataset.label || "";
    t && (t += ": ");
    let e = n.formattedValue;
    return tt(e) || (t += e), t;
  },
  labelColor(n) {
    let e = n.chart
      .getDatasetMeta(n.datasetIndex)
      .controller.getStyle(n.dataIndex);
    return {
      borderColor: e.borderColor,
      backgroundColor: e.backgroundColor,
      borderWidth: e.borderWidth,
      borderDash: e.borderDash,
      borderDashOffset: e.borderDashOffset,
      borderRadius: 0,
    };
  },
  labelTextColor() {
    return this.options.bodyColor;
  },
  labelPointStyle(n) {
    let e = n.chart
      .getDatasetMeta(n.datasetIndex)
      .controller.getStyle(n.dataIndex);
    return { pointStyle: e.pointStyle, rotation: e.rotation };
  },
  afterLabel: or,
  afterBody: or,
  beforeFooter: or,
  footer: or,
  afterFooter: or,
};
function qi(n, t, e, i) {
  let r = n[t].call(e, i);
  return typeof r > "u" ? a1[t].call(e, i) : r;
}
var Iy = (() => {
    class n extends Nn {
      static positioners = Dl;
      constructor(e) {
        super(),
          (this.opacity = 0),
          (this._active = []),
          (this._eventPosition = void 0),
          (this._size = void 0),
          (this._cachedAnimations = void 0),
          (this._tooltipItems = []),
          (this.$animations = void 0),
          (this.$context = void 0),
          (this.chart = e.chart),
          (this.options = e.options),
          (this.dataPoints = void 0),
          (this.title = void 0),
          (this.beforeBody = void 0),
          (this.body = void 0),
          (this.afterBody = void 0),
          (this.footer = void 0),
          (this.xAlign = void 0),
          (this.yAlign = void 0),
          (this.x = void 0),
          (this.y = void 0),
          (this.height = void 0),
          (this.width = void 0),
          (this.caretX = void 0),
          (this.caretY = void 0),
          (this.labelColors = void 0),
          (this.labelPointStyles = void 0),
          (this.labelTextColors = void 0);
      }
      initialize(e) {
        (this.options = e),
          (this._cachedAnimations = void 0),
          (this.$context = void 0);
      }
      _resolveAnimations() {
        let e = this._cachedAnimations;
        if (e) return e;
        let i = this.chart,
          r = this.options.setContext(this.getContext()),
          o = r.enabled && i.options.animation && r.animations,
          a = new Gd(this.chart, o);
        return o._cacheable && (this._cachedAnimations = Object.freeze(a)), a;
      }
      getContext() {
        return (
          this.$context ||
          (this.$context = zk(
            this.chart.getContext(),
            this,
            this._tooltipItems
          ))
        );
      }
      getTitle(e, i) {
        let { callbacks: r } = i,
          o = qi(r, "beforeTitle", this, e),
          a = qi(r, "title", this, e),
          s = qi(r, "afterTitle", this, e),
          l = [];
        return (l = sr(l, Pr(o))), (l = sr(l, Pr(a))), (l = sr(l, Pr(s))), l;
      }
      getBeforeBody(e, i) {
        return Ey(qi(i.callbacks, "beforeBody", this, e));
      }
      getBody(e, i) {
        let { callbacks: r } = i,
          o = [];
        return (
          gt(e, (a) => {
            let s = { before: [], lines: [], after: [] },
              l = ky(r, a);
            sr(s.before, Pr(qi(l, "beforeLabel", this, a))),
              sr(s.lines, qi(l, "label", this, a)),
              sr(s.after, Pr(qi(l, "afterLabel", this, a))),
              o.push(s);
          }),
          o
        );
      }
      getAfterBody(e, i) {
        return Ey(qi(i.callbacks, "afterBody", this, e));
      }
      getFooter(e, i) {
        let { callbacks: r } = i,
          o = qi(r, "beforeFooter", this, e),
          a = qi(r, "footer", this, e),
          s = qi(r, "afterFooter", this, e),
          l = [];
        return (l = sr(l, Pr(o))), (l = sr(l, Pr(a))), (l = sr(l, Pr(s))), l;
      }
      _createItems(e) {
        let i = this._active,
          r = this.chart.data,
          o = [],
          a = [],
          s = [],
          l = [],
          d,
          m;
        for (d = 0, m = i.length; d < m; ++d) l.push(Lk(this.chart, i[d]));
        return (
          e.filter && (l = l.filter((v, x, C) => e.filter(v, x, C, r))),
          e.itemSort && (l = l.sort((v, x) => e.itemSort(v, x, r))),
          gt(l, (v) => {
            let x = ky(e.callbacks, v);
            o.push(qi(x, "labelColor", this, v)),
              a.push(qi(x, "labelPointStyle", this, v)),
              s.push(qi(x, "labelTextColor", this, v));
          }),
          (this.labelColors = o),
          (this.labelPointStyles = a),
          (this.labelTextColors = s),
          (this.dataPoints = l),
          l
        );
      }
      update(e, i) {
        let r = this.options.setContext(this.getContext()),
          o = this._active,
          a,
          s = [];
        if (!o.length) this.opacity !== 0 && (a = { opacity: 0 });
        else {
          let l = Dl[r.position].call(this, o, this._eventPosition);
          (s = this._createItems(r)),
            (this.title = this.getTitle(s, r)),
            (this.beforeBody = this.getBeforeBody(s, r)),
            (this.body = this.getBody(s, r)),
            (this.afterBody = this.getAfterBody(s, r)),
            (this.footer = this.getFooter(s, r));
          let d = (this._size = Sy(this, r)),
            m = Object.assign({}, l, d),
            v = My(this.chart, r, m),
            x = Ty(r, m, v, this.chart);
          (this.xAlign = v.xAlign),
            (this.yAlign = v.yAlign),
            (a = {
              opacity: 1,
              x: x.x,
              y: x.y,
              width: d.width,
              height: d.height,
              caretX: l.x,
              caretY: l.y,
            });
        }
        (this._tooltipItems = s),
          (this.$context = void 0),
          a && this._resolveAnimations().update(this, a),
          e &&
            r.external &&
            r.external.call(this, {
              chart: this.chart,
              tooltip: this,
              replay: i,
            });
      }
      drawCaret(e, i, r, o) {
        let a = this.getCaretPosition(e, r, o);
        i.lineTo(a.x1, a.y1), i.lineTo(a.x2, a.y2), i.lineTo(a.x3, a.y3);
      }
      getCaretPosition(e, i, r) {
        let { xAlign: o, yAlign: a } = this,
          { caretSize: s, cornerRadius: l } = r,
          { topLeft: d, topRight: m, bottomLeft: v, bottomRight: x } = oo(l),
          { x: C, y: S } = e,
          { width: T, height: k } = i,
          P,
          j,
          K,
          oe,
          ee,
          b;
        return (
          a === "center"
            ? ((ee = S + k / 2),
              o === "left"
                ? ((P = C), (j = P - s), (oe = ee + s), (b = ee - s))
                : ((P = C + T), (j = P + s), (oe = ee - s), (b = ee + s)),
              (K = P))
            : (o === "left"
                ? (j = C + Math.max(d, v) + s)
                : o === "right"
                ? (j = C + T - Math.max(m, x) - s)
                : (j = this.caretX),
              a === "top"
                ? ((oe = S), (ee = oe - s), (P = j - s), (K = j + s))
                : ((oe = S + k), (ee = oe + s), (P = j + s), (K = j - s)),
              (b = oe)),
          { x1: P, x2: j, x3: K, y1: oe, y2: ee, y3: b }
        );
      }
      drawTitle(e, i, r) {
        let o = this.title,
          a = o.length,
          s,
          l,
          d;
        if (a) {
          let m = Fo(r.rtl, this.x, this.width);
          for (
            e.x = Ud(this, r.titleAlign, r),
              i.textAlign = m.textAlign(r.titleAlign),
              i.textBaseline = "middle",
              s = ii(r.titleFont),
              l = r.titleSpacing,
              i.fillStyle = r.titleColor,
              i.font = s.string,
              d = 0;
            d < a;
            ++d
          )
            i.fillText(o[d], m.x(e.x), e.y + s.lineHeight / 2),
              (e.y += s.lineHeight + l),
              d + 1 === a && (e.y += r.titleMarginBottom - l);
        }
      }
      _drawColorBox(e, i, r, o, a) {
        let s = this.labelColors[r],
          l = this.labelPointStyles[r],
          { boxHeight: d, boxWidth: m } = a,
          v = ii(a.bodyFont),
          x = Ud(this, "left", a),
          C = o.x(x),
          S = d < v.lineHeight ? (v.lineHeight - d) / 2 : 0,
          T = i.y + S;
        if (a.usePointStyle) {
          let k = {
              radius: Math.min(m, d) / 2,
              pointStyle: l.pointStyle,
              rotation: l.rotation,
              borderWidth: 1,
            },
            P = o.leftForLtr(C, m) + m / 2,
            j = T + d / 2;
          (e.strokeStyle = a.multiKeyBackground),
            (e.fillStyle = a.multiKeyBackground),
            Pd(e, k, P, j),
            (e.strokeStyle = s.borderColor),
            (e.fillStyle = s.backgroundColor),
            Pd(e, k, P, j);
        } else {
          (e.lineWidth = ot(s.borderWidth)
            ? Math.max(...Object.values(s.borderWidth))
            : s.borderWidth || 1),
            (e.strokeStyle = s.borderColor),
            e.setLineDash(s.borderDash || []),
            (e.lineDashOffset = s.borderDashOffset || 0);
          let k = o.leftForLtr(C, m),
            P = o.leftForLtr(o.xPlus(C, 1), m - 2),
            j = oo(s.borderRadius);
          Object.values(j).some((K) => K !== 0)
            ? (e.beginPath(),
              (e.fillStyle = a.multiKeyBackground),
              La(e, { x: k, y: T, w: m, h: d, radius: j }),
              e.fill(),
              e.stroke(),
              (e.fillStyle = s.backgroundColor),
              e.beginPath(),
              La(e, { x: P, y: T + 1, w: m - 2, h: d - 2, radius: j }),
              e.fill())
            : ((e.fillStyle = a.multiKeyBackground),
              e.fillRect(k, T, m, d),
              e.strokeRect(k, T, m, d),
              (e.fillStyle = s.backgroundColor),
              e.fillRect(P, T + 1, m - 2, d - 2));
        }
        e.fillStyle = this.labelTextColors[r];
      }
      drawBody(e, i, r) {
        let { body: o } = this,
          {
            bodySpacing: a,
            bodyAlign: s,
            displayColors: l,
            boxHeight: d,
            boxWidth: m,
            boxPadding: v,
          } = r,
          x = ii(r.bodyFont),
          C = x.lineHeight,
          S = 0,
          T = Fo(r.rtl, this.x, this.width),
          k = function (_e) {
            i.fillText(_e, T.x(e.x + S), e.y + C / 2), (e.y += C + a);
          },
          P = T.textAlign(s),
          j,
          K,
          oe,
          ee,
          b,
          me,
          re;
        for (
          i.textAlign = s,
            i.textBaseline = "middle",
            i.font = x.string,
            e.x = Ud(this, P, r),
            i.fillStyle = r.bodyColor,
            gt(this.beforeBody, k),
            S =
              l && P !== "right" ? (s === "center" ? m / 2 + v : m + 2 + v) : 0,
            ee = 0,
            me = o.length;
          ee < me;
          ++ee
        ) {
          for (
            j = o[ee],
              K = this.labelTextColors[ee],
              i.fillStyle = K,
              gt(j.before, k),
              oe = j.lines,
              l &&
                oe.length &&
                (this._drawColorBox(i, e, ee, T, r),
                (C = Math.max(x.lineHeight, d))),
              b = 0,
              re = oe.length;
            b < re;
            ++b
          )
            k(oe[b]), (C = x.lineHeight);
          gt(j.after, k);
        }
        (S = 0), (C = x.lineHeight), gt(this.afterBody, k), (e.y -= a);
      }
      drawFooter(e, i, r) {
        let o = this.footer,
          a = o.length,
          s,
          l;
        if (a) {
          let d = Fo(r.rtl, this.x, this.width);
          for (
            e.x = Ud(this, r.footerAlign, r),
              e.y += r.footerMarginTop,
              i.textAlign = d.textAlign(r.footerAlign),
              i.textBaseline = "middle",
              s = ii(r.footerFont),
              i.fillStyle = r.footerColor,
              i.font = s.string,
              l = 0;
            l < a;
            ++l
          )
            i.fillText(o[l], d.x(e.x), e.y + s.lineHeight / 2),
              (e.y += s.lineHeight + r.footerSpacing);
        }
      }
      drawBackground(e, i, r, o) {
        let { xAlign: a, yAlign: s } = this,
          { x: l, y: d } = e,
          { width: m, height: v } = r,
          {
            topLeft: x,
            topRight: C,
            bottomLeft: S,
            bottomRight: T,
          } = oo(o.cornerRadius);
        (i.fillStyle = o.backgroundColor),
          (i.strokeStyle = o.borderColor),
          (i.lineWidth = o.borderWidth),
          i.beginPath(),
          i.moveTo(l + x, d),
          s === "top" && this.drawCaret(e, i, r, o),
          i.lineTo(l + m - C, d),
          i.quadraticCurveTo(l + m, d, l + m, d + C),
          s === "center" && a === "right" && this.drawCaret(e, i, r, o),
          i.lineTo(l + m, d + v - T),
          i.quadraticCurveTo(l + m, d + v, l + m - T, d + v),
          s === "bottom" && this.drawCaret(e, i, r, o),
          i.lineTo(l + S, d + v),
          i.quadraticCurveTo(l, d + v, l, d + v - S),
          s === "center" && a === "left" && this.drawCaret(e, i, r, o),
          i.lineTo(l, d + x),
          i.quadraticCurveTo(l, d, l + x, d),
          i.closePath(),
          i.fill(),
          o.borderWidth > 0 && i.stroke();
      }
      _updateAnimationTarget(e) {
        let i = this.chart,
          r = this.$animations,
          o = r && r.x,
          a = r && r.y;
        if (o || a) {
          let s = Dl[e.position].call(this, this._active, this._eventPosition);
          if (!s) return;
          let l = (this._size = Sy(this, e)),
            d = Object.assign({}, s, this._size),
            m = My(i, e, d),
            v = Ty(e, d, m, i);
          (o._to !== v.x || a._to !== v.y) &&
            ((this.xAlign = m.xAlign),
            (this.yAlign = m.yAlign),
            (this.width = l.width),
            (this.height = l.height),
            (this.caretX = s.x),
            (this.caretY = s.y),
            this._resolveAnimations().update(this, v));
        }
      }
      _willRender() {
        return !!this.opacity;
      }
      draw(e) {
        let i = this.options.setContext(this.getContext()),
          r = this.opacity;
        if (!r) return;
        this._updateAnimationTarget(i);
        let o = { width: this.width, height: this.height },
          a = { x: this.x, y: this.y };
        r = Math.abs(r) < 0.001 ? 0 : r;
        let s = xi(i.padding),
          l =
            this.title.length ||
            this.beforeBody.length ||
            this.body.length ||
            this.afterBody.length ||
            this.footer.length;
        i.enabled &&
          l &&
          (e.save(),
          (e.globalAlpha = r),
          this.drawBackground(a, e, o, i),
          wm(e, i.textDirection),
          (a.y += s.top),
          this.drawTitle(a, e, i),
          this.drawBody(a, e, i),
          this.drawFooter(a, e, i),
          Dm(e, i.textDirection),
          e.restore());
      }
      getActiveElements() {
        return this._active || [];
      }
      setActiveElements(e, i) {
        let r = this._active,
          o = e.map(({ datasetIndex: l, index: d }) => {
            let m = this.chart.getDatasetMeta(l);
            if (!m) throw new Error("Cannot find a dataset at index " + l);
            return { datasetIndex: l, element: m.data[d], index: d };
          }),
          a = !ml(r, o),
          s = this._positionChanged(o, i);
        (a || s) &&
          ((this._active = o),
          (this._eventPosition = i),
          (this._ignoreReplayEvents = !0),
          this.update(!0));
      }
      handleEvent(e, i, r = !0) {
        if (i && this._ignoreReplayEvents) return !1;
        this._ignoreReplayEvents = !1;
        let o = this.options,
          a = this._active || [],
          s = this._getActiveElements(e, a, i, r),
          l = this._positionChanged(s, e),
          d = i || !ml(s, a) || l;
        return (
          d &&
            ((this._active = s),
            (o.enabled || o.external) &&
              ((this._eventPosition = { x: e.x, y: e.y }), this.update(!0, i))),
          d
        );
      }
      _getActiveElements(e, i, r, o) {
        let a = this.options;
        if (e.type === "mouseout") return [];
        if (!o)
          return i.filter(
            (l) =>
              this.chart.data.datasets[l.datasetIndex] &&
              this.chart
                .getDatasetMeta(l.datasetIndex)
                .controller.getParsed(l.index) !== void 0
          );
        let s = this.chart.getElementsAtEventForMode(e, a.mode, a, r);
        return a.reverse && s.reverse(), s;
      }
      _positionChanged(e, i) {
        let { caretX: r, caretY: o, options: a } = this,
          s = Dl[a.position].call(this, e, i);
        return s !== !1 && (r !== s.x || o !== s.y);
      }
    }
    return n;
  })(),
  df = {
    id: "tooltip",
    _element: Iy,
    positioners: Dl,
    afterInit(n, t, e) {
      e && (n.tooltip = new Iy({ chart: n, options: e }));
    },
    beforeUpdate(n, t, e) {
      n.tooltip && n.tooltip.initialize(e);
    },
    reset(n, t, e) {
      n.tooltip && n.tooltip.initialize(e);
    },
    afterDraw(n) {
      let t = n.tooltip;
      if (t && t._willRender()) {
        let e = { tooltip: t };
        if (
          n.notifyPlugins(
            "beforeTooltipDraw",
            Be(Q({}, e), { cancelable: !0 })
          ) === !1
        )
          return;
        t.draw(n.ctx), n.notifyPlugins("afterTooltipDraw", e);
      }
    },
    afterEvent(n, t) {
      if (n.tooltip) {
        let e = t.replay;
        n.tooltip.handleEvent(t.event, e, t.inChartArea) && (t.changed = !0);
      }
    },
    defaults: {
      enabled: !0,
      external: null,
      position: "average",
      backgroundColor: "rgba(0,0,0,0.8)",
      titleColor: "#fff",
      titleFont: { weight: "bold" },
      titleSpacing: 2,
      titleMarginBottom: 6,
      titleAlign: "left",
      bodyColor: "#fff",
      bodySpacing: 2,
      bodyFont: {},
      bodyAlign: "left",
      footerColor: "#fff",
      footerSpacing: 2,
      footerMarginTop: 6,
      footerFont: { weight: "bold" },
      footerAlign: "left",
      padding: 6,
      caretPadding: 2,
      caretSize: 5,
      cornerRadius: 6,
      boxHeight: (n, t) => t.bodyFont.size,
      boxWidth: (n, t) => t.bodyFont.size,
      multiKeyBackground: "#fff",
      displayColors: !0,
      boxPadding: 0,
      borderColor: "rgba(0,0,0,0)",
      borderWidth: 0,
      animation: { duration: 400, easing: "easeOutQuart" },
      animations: {
        numbers: {
          type: "number",
          properties: ["x", "y", "width", "height", "caretX", "caretY"],
        },
        opacity: { easing: "linear", duration: 200 },
      },
      callbacks: a1,
    },
    defaultRoutes: { bodyFont: "font", footerFont: "font", titleFont: "font" },
    descriptors: {
      _scriptable: (n) =>
        n !== "filter" && n !== "itemSort" && n !== "external",
      _indexable: !1,
      callbacks: { _scriptable: !1, _indexable: !1 },
      animation: { _fallback: !1 },
      animations: { _fallback: "animation" },
    },
    additionalOptionScopes: ["interaction"],
  },
  $k = Object.freeze({
    __proto__: null,
    Colors: rk,
    Decimation: lk,
    Filler: Ek,
    Legend: Rk,
    SubTitle: Nk,
    Title: cf,
    Tooltip: df,
  }),
  Wk = (n, t, e, i) => (
    typeof t == "string"
      ? ((e = n.push(t) - 1), i.unshift({ index: e, label: t }))
      : isNaN(t) && (e = null),
    e
  );
function Gk(n, t, e, i) {
  let r = n.indexOf(t);
  if (r === -1) return Wk(n, t, e, i);
  let o = n.lastIndexOf(t);
  return r !== o ? e : r;
}
var Yk = (n, t) => (n === null ? null : di(Math.round(n), 0, t));
function Oy(n) {
  let t = this.getLabels();
  return n >= 0 && n < t.length ? t[n] : n;
}
var uf = (() => {
  class n extends Vo {
    static id = "category";
    static defaults = { ticks: { callback: Oy } };
    constructor(e) {
      super(e),
        (this._startValue = void 0),
        (this._valueRange = 0),
        (this._addedLabels = []);
    }
    init(e) {
      let i = this._addedLabels;
      if (i.length) {
        let r = this.getLabels();
        for (let { index: o, label: a } of i) r[o] === a && r.splice(o, 1);
        this._addedLabels = [];
      }
      super.init(e);
    }
    parse(e, i) {
      if (tt(e)) return null;
      let r = this.getLabels();
      return (
        (i =
          isFinite(i) && r[i] === e
            ? i
            : Gk(r, e, We(i, e), this._addedLabels)),
        Yk(i, r.length - 1)
      );
    }
    determineDataLimits() {
      let { minDefined: e, maxDefined: i } = this.getUserBounds(),
        { min: r, max: o } = this.getMinMax(!0);
      this.options.bounds === "ticks" &&
        (e || (r = 0), i || (o = this.getLabels().length - 1)),
        (this.min = r),
        (this.max = o);
    }
    buildTicks() {
      let e = this.min,
        i = this.max,
        r = this.options.offset,
        o = [],
        a = this.getLabels();
      (a = e === 0 && i === a.length - 1 ? a : a.slice(e, i + 1)),
        (this._valueRange = Math.max(a.length - (r ? 0 : 1), 1)),
        (this._startValue = this.min - (r ? 0.5 : 0));
      for (let s = e; s <= i; s++) o.push({ value: s });
      return o;
    }
    getLabelForValue(e) {
      return Oy.call(this, e);
    }
    configure() {
      super.configure(),
        this.isHorizontal() || (this._reversePixels = !this._reversePixels);
    }
    getPixelForValue(e) {
      return (
        typeof e != "number" && (e = this.parse(e)),
        e === null
          ? NaN
          : this.getPixelForDecimal((e - this._startValue) / this._valueRange)
      );
    }
    getPixelForTick(e) {
      let i = this.ticks;
      return e < 0 || e > i.length - 1
        ? null
        : this.getPixelForValue(i[e].value);
    }
    getValueForPixel(e) {
      return Math.round(
        this._startValue + this.getDecimalForPixel(e) * this._valueRange
      );
    }
    getBasePixel() {
      return this.bottom;
    }
  }
  return n;
})();
function qk(n, t) {
  let e = [],
    {
      bounds: r,
      step: o,
      min: a,
      max: s,
      precision: l,
      count: d,
      maxTicks: m,
      maxDigits: v,
      includeBounds: x,
    } = n,
    C = o || 1,
    S = m - 1,
    { min: T, max: k } = t,
    P = !tt(a),
    j = !tt(s),
    K = !tt(d),
    oe = (k - T) / (v + 1),
    ee = im((k - T) / S / C) * C,
    b,
    me,
    re,
    _e;
  if (ee < 1e-14 && !P && !j) return [{ value: T }, { value: k }];
  (_e = Math.ceil(k / ee) - Math.floor(T / ee)),
    _e > S && (ee = im((_e * ee) / S / C) * C),
    tt(l) || ((b = Math.pow(10, l)), (ee = Math.ceil(ee * b) / b)),
    r === "ticks"
      ? ((me = Math.floor(T / ee) * ee), (re = Math.ceil(k / ee) * ee))
      : ((me = T), (re = k)),
    P && j && o && _v((s - a) / o, ee / 1e3)
      ? ((_e = Math.round(Math.min((s - a) / ee, m))),
        (ee = (s - a) / _e),
        (me = a),
        (re = s))
      : K
      ? ((me = P ? a : me),
        (re = j ? s : re),
        (_e = d - 1),
        (ee = (re - me) / _e))
      : ((_e = (re - me) / ee),
        Ra(_e, Math.round(_e), ee / 1e3)
          ? (_e = Math.round(_e))
          : (_e = Math.ceil(_e)));
  let He = Math.max(rm(ee), rm(me));
  (b = Math.pow(10, tt(l) ? He : l)),
    (me = Math.round(me * b) / b),
    (re = Math.round(re * b) / b);
  let Ge = 0;
  for (
    P &&
    (x && me !== a
      ? (e.push({ value: a }),
        me < a && Ge++,
        Ra(Math.round((me + Ge * ee) * b) / b, a, Py(a, oe, n)) && Ge++)
      : me < a && Ge++);
    Ge < _e;
    ++Ge
  ) {
    let Se = Math.round((me + Ge * ee) * b) / b;
    if (j && Se > s) break;
    e.push({ value: Se });
  }
  return (
    j && x && re !== s
      ? e.length && Ra(e[e.length - 1].value, s, Py(s, oe, n))
        ? (e[e.length - 1].value = s)
        : e.push({ value: s })
      : (!j || re === s) && e.push({ value: re }),
    e
  );
}
function Py(n, t, { horizontal: e, minRotation: i }) {
  let r = Cn(i),
    o = (e ? Math.sin(r) : Math.cos(r)) || 0.001,
    a = 0.75 * t * ("" + n).length;
  return Math.min(t / o, a);
}
var ja = class extends Vo {
    constructor(t) {
      super(t),
        (this.start = void 0),
        (this.end = void 0),
        (this._startValue = void 0),
        (this._endValue = void 0),
        (this._valueRange = 0);
    }
    parse(t, e) {
      return tt(t) ||
        ((typeof t == "number" || t instanceof Number) && !isFinite(+t))
        ? null
        : +t;
    }
    handleTickRangeOptions() {
      let { beginAtZero: t } = this.options,
        { minDefined: e, maxDefined: i } = this.getUserBounds(),
        { min: r, max: o } = this,
        a = (l) => (r = e ? r : l),
        s = (l) => (o = i ? o : l);
      if (t) {
        let l = Fn(r),
          d = Fn(o);
        l < 0 && d < 0 ? s(0) : l > 0 && d > 0 && a(0);
      }
      if (r === o) {
        let l = o === 0 ? 1 : Math.abs(o * 0.05);
        s(o + l), t || a(r - l);
      }
      (this.min = r), (this.max = o);
    }
    getTickLimit() {
      let t = this.options.ticks,
        { maxTicksLimit: e, stepSize: i } = t,
        r;
      return (
        i
          ? ((r = Math.ceil(this.max / i) - Math.floor(this.min / i) + 1),
            r > 1e3 &&
              (console.warn(
                `scales.${this.id}.ticks.stepSize: ${i} would result generating up to ${r} ticks. Limiting to 1000.`
              ),
              (r = 1e3)))
          : ((r = this.computeTickLimit()), (e = e || 11)),
        e && (r = Math.min(e, r)),
        r
      );
    }
    computeTickLimit() {
      return Number.POSITIVE_INFINITY;
    }
    buildTicks() {
      let t = this.options,
        e = t.ticks,
        i = this.getTickLimit();
      i = Math.max(2, i);
      let r = {
          maxTicks: i,
          bounds: t.bounds,
          min: t.min,
          max: t.max,
          precision: e.precision,
          step: e.stepSize,
          count: e.count,
          maxDigits: this._maxDigits(),
          horizontal: this.isHorizontal(),
          minRotation: e.minRotation || 0,
          includeBounds: e.includeBounds !== !1,
        },
        o = this._range || this,
        a = qk(r, o);
      return (
        t.bounds === "ticks" && nm(a, this, "value"),
        t.reverse
          ? (a.reverse(), (this.start = this.max), (this.end = this.min))
          : ((this.start = this.min), (this.end = this.max)),
        a
      );
    }
    configure() {
      let t = this.ticks,
        e = this.min,
        i = this.max;
      if ((super.configure(), this.options.offset && t.length)) {
        let r = (i - e) / Math.max(t.length - 1, 1) / 2;
        (e -= r), (i += r);
      }
      (this._startValue = e), (this._endValue = i), (this._valueRange = i - e);
    }
    getLabelForValue(t) {
      return Na(t, this.chart.options.locale, this.options.ticks.format);
    }
  },
  Tl = class extends ja {
    static id = "linear";
    static defaults = { ticks: { callback: fl.formatters.numeric } };
    determineDataLimits() {
      let { min: t, max: e } = this.getMinMax(!0);
      (this.min = Ht(t) ? t : 0),
        (this.max = Ht(e) ? e : 1),
        this.handleTickRangeOptions();
    }
    computeTickLimit() {
      let t = this.isHorizontal(),
        e = t ? this.width : this.height,
        i = Cn(this.options.ticks.minRotation),
        r = (t ? Math.sin(i) : Math.cos(i)) || 0.001,
        o = this._resolveTickFontOptions(0);
      return Math.ceil(e / Math.min(40, o.lineHeight / r));
    }
    getPixelForValue(t) {
      return t === null
        ? NaN
        : this.getPixelForDecimal((t - this._startValue) / this._valueRange);
    }
    getValueForPixel(t) {
      return this._startValue + this.getDecimalForPixel(t) * this._valueRange;
    }
  },
  El = (n) => Math.floor(Er(n)),
  Lo = (n, t) => Math.pow(10, El(n) + t);
function Ay(n) {
  return n / Math.pow(10, El(n)) === 1;
}
function Ry(n, t, e) {
  let i = Math.pow(10, e),
    r = Math.floor(n / i);
  return Math.ceil(t / i) - r;
}
function Kk(n, t) {
  let e = t - n,
    i = El(e);
  for (; Ry(n, t, i) > 10; ) i++;
  for (; Ry(n, t, i) < 10; ) i--;
  return Math.min(i, El(n));
}
function Qk(n, { min: t, max: e }) {
  t = Yi(n.min, t);
  let i = [],
    r = El(t),
    o = Kk(t, e),
    a = o < 0 ? Math.pow(10, Math.abs(o)) : 1,
    s = Math.pow(10, o),
    l = r > o ? Math.pow(10, r) : 0,
    d = Math.round((t - l) * a) / a,
    m = Math.floor((t - l) / s / 10) * s * 10,
    v = Math.floor((d - m) / Math.pow(10, o)),
    x = Yi(n.min, Math.round((l + m + v * Math.pow(10, o)) * a) / a);
  for (; x < e; )
    i.push({ value: x, major: Ay(x), significand: v }),
      v >= 10 ? (v = v < 15 ? 15 : 20) : v++,
      v >= 20 && (o++, (v = 2), (a = o >= 0 ? 1 : a)),
      (x = Math.round((l + m + v * Math.pow(10, o)) * a) / a);
  let C = Yi(n.max, x);
  return i.push({ value: C, major: Ay(C), significand: v }), i;
}
var ef = class extends Vo {
  static id = "logarithmic";
  static defaults = {
    ticks: { callback: fl.formatters.logarithmic, major: { enabled: !0 } },
  };
  constructor(t) {
    super(t),
      (this.start = void 0),
      (this.end = void 0),
      (this._startValue = void 0),
      (this._valueRange = 0);
  }
  parse(t, e) {
    let i = ja.prototype.parse.apply(this, [t, e]);
    if (i === 0) {
      this._zero = !0;
      return;
    }
    return Ht(i) && i > 0 ? i : null;
  }
  determineDataLimits() {
    let { min: t, max: e } = this.getMinMax(!0);
    (this.min = Ht(t) ? Math.max(0, t) : null),
      (this.max = Ht(e) ? Math.max(0, e) : null),
      this.options.beginAtZero && (this._zero = !0),
      this._zero &&
        this.min !== this._suggestedMin &&
        !Ht(this._userMin) &&
        (this.min = t === Lo(this.min, 0) ? Lo(this.min, -1) : Lo(this.min, 0)),
      this.handleTickRangeOptions();
  }
  handleTickRangeOptions() {
    let { minDefined: t, maxDefined: e } = this.getUserBounds(),
      i = this.min,
      r = this.max,
      o = (s) => (i = t ? i : s),
      a = (s) => (r = e ? r : s);
    i === r && (i <= 0 ? (o(1), a(10)) : (o(Lo(i, -1)), a(Lo(r, 1)))),
      i <= 0 && o(Lo(r, -1)),
      r <= 0 && a(Lo(i, 1)),
      (this.min = i),
      (this.max = r);
  }
  buildTicks() {
    let t = this.options,
      e = { min: this._userMin, max: this._userMax },
      i = Qk(e, this);
    return (
      t.bounds === "ticks" && nm(i, this, "value"),
      t.reverse
        ? (i.reverse(), (this.start = this.max), (this.end = this.min))
        : ((this.start = this.min), (this.end = this.max)),
      i
    );
  }
  getLabelForValue(t) {
    return t === void 0
      ? "0"
      : Na(t, this.chart.options.locale, this.options.ticks.format);
  }
  configure() {
    let t = this.min;
    super.configure(),
      (this._startValue = Er(t)),
      (this._valueRange = Er(this.max) - Er(t));
  }
  getPixelForValue(t) {
    return (
      (t === void 0 || t === 0) && (t = this.min),
      t === null || isNaN(t)
        ? NaN
        : this.getPixelForDecimal(
            t === this.min ? 0 : (Er(t) - this._startValue) / this._valueRange
          )
    );
  }
  getValueForPixel(t) {
    let e = this.getDecimalForPixel(t);
    return Math.pow(10, this._startValue + e * this._valueRange);
  }
};
function tf(n) {
  let t = n.ticks;
  if (t.display && n.display) {
    let e = xi(t.backdropPadding);
    return We(t.font && t.font.size, kt.font.size) + e.height;
  }
  return 0;
}
function Xk(n, t, e) {
  return (
    (e = Mt(e) ? e : [e]), { w: Mv(n, t.string, e), h: e.length * t.lineHeight }
  );
}
function Fy(n, t, e, i, r) {
  return n === i || n === r
    ? { start: t - e / 2, end: t + e / 2 }
    : n < i || n > r
    ? { start: t - e, end: t }
    : { start: t, end: t + e };
}
function Zk(n) {
  let t = {
      l: n.left + n._padding.left,
      r: n.right - n._padding.right,
      t: n.top + n._padding.top,
      b: n.bottom - n._padding.bottom,
    },
    e = Object.assign({}, t),
    i = [],
    r = [],
    o = n._pointLabels.length,
    a = n.options.pointLabels,
    s = a.centerPointLabels ? ut / o : 0;
  for (let l = 0; l < o; l++) {
    let d = a.setContext(n.getPointLabelContext(l));
    r[l] = d.padding;
    let m = n.getPointPosition(l, n.drawingArea + r[l], s),
      v = ii(d.font),
      x = Xk(n.ctx, v, n._pointLabels[l]);
    i[l] = x;
    let C = vi(n.getIndexAngle(l) + s),
      S = Math.round(Ed(C)),
      T = Fy(S, m.x, x.w, 0, 180),
      k = Fy(S, m.y, x.h, 90, 270);
    Jk(e, t, C, T, k);
  }
  n.setCenterPoint(t.l - e.l, e.r - t.r, t.t - e.t, e.b - t.b),
    (n._pointLabelItems = iI(n, i, r));
}
function Jk(n, t, e, i, r) {
  let o = Math.abs(Math.sin(e)),
    a = Math.abs(Math.cos(e)),
    s = 0,
    l = 0;
  i.start < t.l
    ? ((s = (t.l - i.start) / o), (n.l = Math.min(n.l, t.l - s)))
    : i.end > t.r && ((s = (i.end - t.r) / o), (n.r = Math.max(n.r, t.r + s))),
    r.start < t.t
      ? ((l = (t.t - r.start) / a), (n.t = Math.min(n.t, t.t - l)))
      : r.end > t.b &&
        ((l = (r.end - t.b) / a), (n.b = Math.max(n.b, t.b + l)));
}
function eI(n, t, e) {
  let i = n.drawingArea,
    { extra: r, additionalAngle: o, padding: a, size: s } = e,
    l = n.getPointPosition(t, i + r + a, o),
    d = Math.round(Ed(vi(l.angle + qt))),
    m = oI(l.y, s.h, d),
    v = nI(d),
    x = rI(l.x, s.w, v);
  return {
    visible: !0,
    x: l.x,
    y: m,
    textAlign: v,
    left: x,
    top: m,
    right: x + s.w,
    bottom: m + s.h,
  };
}
function tI(n, t) {
  if (!t) return !0;
  let { left: e, top: i, right: r, bottom: o } = n;
  return !(
    rr({ x: e, y: i }, t) ||
    rr({ x: e, y: o }, t) ||
    rr({ x: r, y: i }, t) ||
    rr({ x: r, y: o }, t)
  );
}
function iI(n, t, e) {
  let i = [],
    r = n._pointLabels.length,
    o = n.options,
    { centerPointLabels: a, display: s } = o.pointLabels,
    l = { extra: tf(o) / 2, additionalAngle: a ? ut / r : 0 },
    d;
  for (let m = 0; m < r; m++) {
    (l.padding = e[m]), (l.size = t[m]);
    let v = eI(n, m, l);
    i.push(v), s === "auto" && ((v.visible = tI(v, d)), v.visible && (d = v));
  }
  return i;
}
function nI(n) {
  return n === 0 || n === 180 ? "center" : n < 180 ? "left" : "right";
}
function rI(n, t, e) {
  return e === "right" ? (n -= t) : e === "center" && (n -= t / 2), n;
}
function oI(n, t, e) {
  return (
    e === 90 || e === 270 ? (n -= t / 2) : (e > 270 || e < 90) && (n -= t), n
  );
}
function aI(n, t, e) {
  let { left: i, top: r, right: o, bottom: a } = e,
    { backdropColor: s } = t;
  if (!tt(s)) {
    let l = oo(t.borderRadius),
      d = xi(t.backdropPadding);
    n.fillStyle = s;
    let m = i - d.left,
      v = r - d.top,
      x = o - i + d.width,
      C = a - r + d.height;
    Object.values(l).some((S) => S !== 0)
      ? (n.beginPath(), La(n, { x: m, y: v, w: x, h: C, radius: l }), n.fill())
      : n.fillRect(m, v, x, C);
  }
}
function sI(n, t) {
  let {
    ctx: e,
    options: { pointLabels: i },
  } = n;
  for (let r = t - 1; r >= 0; r--) {
    let o = n._pointLabelItems[r];
    if (!o.visible) continue;
    let a = i.setContext(n.getPointLabelContext(r));
    aI(e, a, o);
    let s = ii(a.font),
      { x: l, y: d, textAlign: m } = o;
    ro(e, n._pointLabels[r], l, d + s.lineHeight / 2, s, {
      color: a.color,
      textAlign: m,
      textBaseline: "middle",
    });
  }
}
function s1(n, t, e, i) {
  let { ctx: r } = n;
  if (e) r.arc(n.xCenter, n.yCenter, t, 0, Tt);
  else {
    let o = n.getPointPosition(0, t);
    r.moveTo(o.x, o.y);
    for (let a = 1; a < i; a++)
      (o = n.getPointPosition(a, t)), r.lineTo(o.x, o.y);
  }
}
function lI(n, t, e, i, r) {
  let o = n.ctx,
    a = t.circular,
    { color: s, lineWidth: l } = t;
  (!a && !i) ||
    !s ||
    !l ||
    e < 0 ||
    (o.save(),
    (o.strokeStyle = s),
    (o.lineWidth = l),
    o.setLineDash(r.dash || []),
    (o.lineDashOffset = r.dashOffset),
    o.beginPath(),
    s1(n, e, a, i),
    o.closePath(),
    o.stroke(),
    o.restore());
}
function cI(n, t, e) {
  return Ir(n, { label: e, index: t, type: "pointLabel" });
}
var nf = class extends ja {
    static id = "radialLinear";
    static defaults = {
      display: !0,
      animate: !0,
      position: "chartArea",
      angleLines: {
        display: !0,
        lineWidth: 1,
        borderDash: [],
        borderDashOffset: 0,
      },
      grid: { circular: !1 },
      startAngle: 0,
      ticks: { showLabelBackdrop: !0, callback: fl.formatters.numeric },
      pointLabels: {
        backdropColor: void 0,
        backdropPadding: 2,
        display: !0,
        font: { size: 10 },
        callback(t) {
          return t;
        },
        padding: 5,
        centerPointLabels: !1,
      },
    };
    static defaultRoutes = {
      "angleLines.color": "borderColor",
      "pointLabels.color": "color",
      "ticks.color": "color",
    };
    static descriptors = { angleLines: { _fallback: "grid" } };
    constructor(t) {
      super(t),
        (this.xCenter = void 0),
        (this.yCenter = void 0),
        (this.drawingArea = void 0),
        (this._pointLabels = []),
        (this._pointLabelItems = []);
    }
    setDimensions() {
      let t = (this._padding = xi(tf(this.options) / 2)),
        e = (this.width = this.maxWidth - t.width),
        i = (this.height = this.maxHeight - t.height);
      (this.xCenter = Math.floor(this.left + e / 2 + t.left)),
        (this.yCenter = Math.floor(this.top + i / 2 + t.top)),
        (this.drawingArea = Math.floor(Math.min(e, i) / 2));
    }
    determineDataLimits() {
      let { min: t, max: e } = this.getMinMax(!1);
      (this.min = Ht(t) && !isNaN(t) ? t : 0),
        (this.max = Ht(e) && !isNaN(e) ? e : 0),
        this.handleTickRangeOptions();
    }
    computeTickLimit() {
      return Math.ceil(this.drawingArea / tf(this.options));
    }
    generateTickLabels(t) {
      ja.prototype.generateTickLabels.call(this, t),
        (this._pointLabels = this.getLabels()
          .map((e, i) => {
            let r = wt(this.options.pointLabels.callback, [e, i], this);
            return r || r === 0 ? r : "";
          })
          .filter((e, i) => this.chart.getDataVisibility(i)));
    }
    fit() {
      let t = this.options;
      t.display && t.pointLabels.display
        ? Zk(this)
        : this.setCenterPoint(0, 0, 0, 0);
    }
    setCenterPoint(t, e, i, r) {
      (this.xCenter += Math.floor((t - e) / 2)),
        (this.yCenter += Math.floor((i - r) / 2)),
        (this.drawingArea -= Math.min(
          this.drawingArea / 2,
          Math.max(t, e, i, r)
        ));
    }
    getIndexAngle(t) {
      let e = Tt / (this._pointLabels.length || 1),
        i = this.options.startAngle || 0;
      return vi(t * e + Cn(i));
    }
    getDistanceFromCenterForValue(t) {
      if (tt(t)) return NaN;
      let e = this.drawingArea / (this.max - this.min);
      return this.options.reverse ? (this.max - t) * e : (t - this.min) * e;
    }
    getValueForDistanceFromCenter(t) {
      if (tt(t)) return NaN;
      let e = t / (this.drawingArea / (this.max - this.min));
      return this.options.reverse ? this.max - e : this.min + e;
    }
    getPointLabelContext(t) {
      let e = this._pointLabels || [];
      if (t >= 0 && t < e.length) {
        let i = e[t];
        return cI(this.getContext(), t, i);
      }
    }
    getPointPosition(t, e, i = 0) {
      let r = this.getIndexAngle(t) - qt + i;
      return {
        x: Math.cos(r) * e + this.xCenter,
        y: Math.sin(r) * e + this.yCenter,
        angle: r,
      };
    }
    getPointPositionForValue(t, e) {
      return this.getPointPosition(t, this.getDistanceFromCenterForValue(e));
    }
    getBasePosition(t) {
      return this.getPointPositionForValue(t || 0, this.getBaseValue());
    }
    getPointLabelPosition(t) {
      let { left: e, top: i, right: r, bottom: o } = this._pointLabelItems[t];
      return { left: e, top: i, right: r, bottom: o };
    }
    drawBackground() {
      let {
        backgroundColor: t,
        grid: { circular: e },
      } = this.options;
      if (t) {
        let i = this.ctx;
        i.save(),
          i.beginPath(),
          s1(
            this,
            this.getDistanceFromCenterForValue(this._endValue),
            e,
            this._pointLabels.length
          ),
          i.closePath(),
          (i.fillStyle = t),
          i.fill(),
          i.restore();
      }
    }
    drawGrid() {
      let t = this.ctx,
        e = this.options,
        { angleLines: i, grid: r, border: o } = e,
        a = this._pointLabels.length,
        s,
        l,
        d;
      if (
        (e.pointLabels.display && sI(this, a),
        r.display &&
          this.ticks.forEach((m, v) => {
            if (v !== 0 || (v === 0 && this.min < 0)) {
              l = this.getDistanceFromCenterForValue(m.value);
              let x = this.getContext(v),
                C = r.setContext(x),
                S = o.setContext(x);
              lI(this, C, l, a, S);
            }
          }),
        i.display)
      ) {
        for (t.save(), s = a - 1; s >= 0; s--) {
          let m = i.setContext(this.getPointLabelContext(s)),
            { color: v, lineWidth: x } = m;
          !x ||
            !v ||
            ((t.lineWidth = x),
            (t.strokeStyle = v),
            t.setLineDash(m.borderDash),
            (t.lineDashOffset = m.borderDashOffset),
            (l = this.getDistanceFromCenterForValue(
              e.reverse ? this.min : this.max
            )),
            (d = this.getPointPosition(s, l)),
            t.beginPath(),
            t.moveTo(this.xCenter, this.yCenter),
            t.lineTo(d.x, d.y),
            t.stroke());
        }
        t.restore();
      }
    }
    drawBorder() {}
    drawLabels() {
      let t = this.ctx,
        e = this.options,
        i = e.ticks;
      if (!i.display) return;
      let r = this.getIndexAngle(0),
        o,
        a;
      t.save(),
        t.translate(this.xCenter, this.yCenter),
        t.rotate(r),
        (t.textAlign = "center"),
        (t.textBaseline = "middle"),
        this.ticks.forEach((s, l) => {
          if (l === 0 && this.min >= 0 && !e.reverse) return;
          let d = i.setContext(this.getContext(l)),
            m = ii(d.font);
          if (
            ((o = this.getDistanceFromCenterForValue(this.ticks[l].value)),
            d.showLabelBackdrop)
          ) {
            (t.font = m.string),
              (a = t.measureText(s.label).width),
              (t.fillStyle = d.backdropColor);
            let v = xi(d.backdropPadding);
            t.fillRect(
              -a / 2 - v.left,
              -o - m.size / 2 - v.top,
              a + v.width,
              m.size + v.height
            );
          }
          ro(t, s.label, 0, -o, m, {
            color: d.color,
            strokeColor: d.textStrokeColor,
            strokeWidth: d.textStrokeWidth,
          });
        }),
        t.restore();
    }
    drawTitle() {}
  },
  Jd = {
    millisecond: { common: !0, size: 1, steps: 1e3 },
    second: { common: !0, size: 1e3, steps: 60 },
    minute: { common: !0, size: 6e4, steps: 60 },
    hour: { common: !0, size: 36e5, steps: 24 },
    day: { common: !0, size: 864e5, steps: 30 },
    week: { common: !1, size: 6048e5, steps: 4 },
    month: { common: !0, size: 2628e6, steps: 12 },
    quarter: { common: !1, size: 7884e6, steps: 4 },
    year: { common: !0, size: 3154e7 },
  },
  Ki = Object.keys(Jd);
function Ny(n, t) {
  return n - t;
}
function Ly(n, t) {
  if (tt(t)) return null;
  let e = n._adapter,
    { parser: i, round: r, isoWeekday: o } = n._parseOpts,
    a = t;
  return (
    typeof i == "function" && (a = i(a)),
    Ht(a) || (a = typeof i == "string" ? e.parse(a, i) : e.parse(a)),
    a === null
      ? null
      : (r &&
          (a =
            r === "week" && (Ro(o) || o === !0)
              ? e.startOf(a, "isoWeek", o)
              : e.startOf(a, r)),
        +a)
  );
}
function Vy(n, t, e, i) {
  let r = Ki.length;
  for (let o = Ki.indexOf(n); o < r - 1; ++o) {
    let a = Jd[Ki[o]],
      s = a.steps ? a.steps : Number.MAX_SAFE_INTEGER;
    if (a.common && Math.ceil((e - t) / (s * a.size)) <= i) return Ki[o];
  }
  return Ki[r - 1];
}
function dI(n, t, e, i, r) {
  for (let o = Ki.length - 1; o >= Ki.indexOf(e); o--) {
    let a = Ki[o];
    if (Jd[a].common && n._adapter.diff(r, i, a) >= t - 1) return a;
  }
  return Ki[e ? Ki.indexOf(e) : 0];
}
function uI(n) {
  for (let t = Ki.indexOf(n) + 1, e = Ki.length; t < e; ++t)
    if (Jd[Ki[t]].common) return Ki[t];
}
function By(n, t, e) {
  if (!e) n[t] = !0;
  else if (e.length) {
    let { lo: i, hi: r } = kd(e, t),
      o = e[i] >= t ? e[i] : e[r];
    n[o] = !0;
  }
}
function hI(n, t, e, i) {
  let r = n._adapter,
    o = +r.startOf(t[0].value, i),
    a = t[t.length - 1].value,
    s,
    l;
  for (s = o; s <= a; s = +r.add(s, 1, i))
    (l = e[s]), l >= 0 && (t[l].major = !0);
  return t;
}
function Hy(n, t, e) {
  let i = [],
    r = {},
    o = t.length,
    a,
    s;
  for (a = 0; a < o; ++a)
    (s = t[a]), (r[s] = a), i.push({ value: s, major: !1 });
  return o === 0 || !e ? i : hI(n, i, r, e);
}
var rf = (() => {
  class n extends Vo {
    static id = "time";
    static defaults = {
      bounds: "data",
      adapters: {},
      time: {
        parser: !1,
        unit: !1,
        round: !1,
        isoWeekday: !1,
        minUnit: "millisecond",
        displayFormats: {},
      },
      ticks: { source: "auto", callback: !1, major: { enabled: !1 } },
    };
    constructor(e) {
      super(e),
        (this._cache = { data: [], labels: [], all: [] }),
        (this._unit = "day"),
        (this._majorUnit = void 0),
        (this._offsets = {}),
        (this._normalized = !1),
        (this._parseOpts = void 0);
    }
    init(e, i = {}) {
      let r = e.time || (e.time = {}),
        o = (this._adapter = new TE._date(e.adapters.date));
      o.init(i),
        Pa(r.displayFormats, o.formats()),
        (this._parseOpts = {
          parser: r.parser,
          round: r.round,
          isoWeekday: r.isoWeekday,
        }),
        super.init(e),
        (this._normalized = i.normalized);
    }
    parse(e, i) {
      return e === void 0 ? null : Ly(this, e);
    }
    beforeLayout() {
      super.beforeLayout(), (this._cache = { data: [], labels: [], all: [] });
    }
    determineDataLimits() {
      let e = this.options,
        i = this._adapter,
        r = e.time.unit || "day",
        { min: o, max: a, minDefined: s, maxDefined: l } = this.getUserBounds();
      function d(m) {
        !s && !isNaN(m.min) && (o = Math.min(o, m.min)),
          !l && !isNaN(m.max) && (a = Math.max(a, m.max));
      }
      (!s || !l) &&
        (d(this._getLabelBounds()),
        (e.bounds !== "ticks" || e.ticks.source !== "labels") &&
          d(this.getMinMax(!1))),
        (o = Ht(o) && !isNaN(o) ? o : +i.startOf(Date.now(), r)),
        (a = Ht(a) && !isNaN(a) ? a : +i.endOf(Date.now(), r) + 1),
        (this.min = Math.min(o, a - 1)),
        (this.max = Math.max(o + 1, a));
    }
    _getLabelBounds() {
      let e = this.getLabelTimestamps(),
        i = Number.POSITIVE_INFINITY,
        r = Number.NEGATIVE_INFINITY;
      return (
        e.length && ((i = e[0]), (r = e[e.length - 1])), { min: i, max: r }
      );
    }
    buildTicks() {
      let e = this.options,
        i = e.time,
        r = e.ticks,
        o =
          r.source === "labels" ? this.getLabelTimestamps() : this._generate();
      e.bounds === "ticks" &&
        o.length &&
        ((this.min = this._userMin || o[0]),
        (this.max = this._userMax || o[o.length - 1]));
      let a = this.min,
        s = this.max,
        l = yv(o, a, s);
      return (
        (this._unit =
          i.unit ||
          (r.autoSkip
            ? Vy(i.minUnit, this.min, this.max, this._getLabelCapacity(a))
            : dI(this, l.length, i.minUnit, this.min, this.max))),
        (this._majorUnit =
          !r.major.enabled || this._unit === "year" ? void 0 : uI(this._unit)),
        this.initOffsets(o),
        e.reverse && l.reverse(),
        Hy(this, l, this._majorUnit)
      );
    }
    afterAutoSkip() {
      this.options.offsetAfterAutoskip &&
        this.initOffsets(this.ticks.map((e) => +e.value));
    }
    initOffsets(e = []) {
      let i = 0,
        r = 0,
        o,
        a;
      this.options.offset &&
        e.length &&
        ((o = this.getDecimalForValue(e[0])),
        e.length === 1
          ? (i = 1 - o)
          : (i = (this.getDecimalForValue(e[1]) - o) / 2),
        (a = this.getDecimalForValue(e[e.length - 1])),
        e.length === 1
          ? (r = a)
          : (r = (a - this.getDecimalForValue(e[e.length - 2])) / 2));
      let s = e.length < 3 ? 0.5 : 0.25;
      (i = di(i, 0, s)),
        (r = di(r, 0, s)),
        (this._offsets = { start: i, end: r, factor: 1 / (i + 1 + r) });
    }
    _generate() {
      let e = this._adapter,
        i = this.min,
        r = this.max,
        o = this.options,
        a = o.time,
        s = a.unit || Vy(a.minUnit, i, r, this._getLabelCapacity(i)),
        l = We(o.ticks.stepSize, 1),
        d = s === "week" ? a.isoWeekday : !1,
        m = Ro(d) || d === !0,
        v = {},
        x = i,
        C,
        S;
      if (
        (m && (x = +e.startOf(x, "isoWeek", d)),
        (x = +e.startOf(x, m ? "day" : s)),
        e.diff(r, i, s) > 1e5 * l)
      )
        throw new Error(
          i + " and " + r + " are too far apart with stepSize of " + l + " " + s
        );
      let T = o.ticks.source === "data" && this.getDataTimestamps();
      for (C = x, S = 0; C < r; C = +e.add(C, l, s), S++) By(v, C, T);
      return (
        (C === r || o.bounds === "ticks" || S === 1) && By(v, C, T),
        Object.keys(v)
          .sort(Ny)
          .map((k) => +k)
      );
    }
    getLabelForValue(e) {
      let i = this._adapter,
        r = this.options.time;
      return r.tooltipFormat
        ? i.format(e, r.tooltipFormat)
        : i.format(e, r.displayFormats.datetime);
    }
    format(e, i) {
      let o = this.options.time.displayFormats,
        a = this._unit,
        s = i || o[a];
      return this._adapter.format(e, s);
    }
    _tickFormatFunction(e, i, r, o) {
      let a = this.options,
        s = a.ticks.callback;
      if (s) return wt(s, [e, i, r], this);
      let l = a.time.displayFormats,
        d = this._unit,
        m = this._majorUnit,
        v = d && l[d],
        x = m && l[m],
        C = r[i],
        S = m && x && C && C.major;
      return this._adapter.format(e, o || (S ? x : v));
    }
    generateTickLabels(e) {
      let i, r, o;
      for (i = 0, r = e.length; i < r; ++i)
        (o = e[i]), (o.label = this._tickFormatFunction(o.value, i, e));
    }
    getDecimalForValue(e) {
      return e === null ? NaN : (e - this.min) / (this.max - this.min);
    }
    getPixelForValue(e) {
      let i = this._offsets,
        r = this.getDecimalForValue(e);
      return this.getPixelForDecimal((i.start + r) * i.factor);
    }
    getValueForPixel(e) {
      let i = this._offsets,
        r = this.getDecimalForPixel(e) / i.factor - i.end;
      return this.min + r * (this.max - this.min);
    }
    _getLabelSize(e) {
      let i = this.options.ticks,
        r = this.ctx.measureText(e).width,
        o = Cn(this.isHorizontal() ? i.maxRotation : i.minRotation),
        a = Math.cos(o),
        s = Math.sin(o),
        l = this._resolveTickFontOptions(0).size;
      return { w: r * a + l * s, h: r * s + l * a };
    }
    _getLabelCapacity(e) {
      let i = this.options.time,
        r = i.displayFormats,
        o = r[i.unit] || r.millisecond,
        a = this._tickFormatFunction(e, 0, Hy(this, [e], this._majorUnit), o),
        s = this._getLabelSize(a),
        l =
          Math.floor(
            this.isHorizontal() ? this.width / s.w : this.height / s.h
          ) - 1;
      return l > 0 ? l : 1;
    }
    getDataTimestamps() {
      let e = this._cache.data || [],
        i,
        r;
      if (e.length) return e;
      let o = this.getMatchingVisibleMetas();
      if (this._normalized && o.length)
        return (this._cache.data = o[0].controller.getAllParsedValues(this));
      for (i = 0, r = o.length; i < r; ++i)
        e = e.concat(o[i].controller.getAllParsedValues(this));
      return (this._cache.data = this.normalize(e));
    }
    getLabelTimestamps() {
      let e = this._cache.labels || [],
        i,
        r;
      if (e.length) return e;
      let o = this.getLabels();
      for (i = 0, r = o.length; i < r; ++i) e.push(Ly(this, o[i]));
      return (this._cache.labels = this._normalized ? e : this.normalize(e));
    }
    normalize(e) {
      return sm(e.sort(Ny));
    }
  }
  return n;
})();
function zd(n, t, e) {
  let i = 0,
    r = n.length - 1,
    o,
    a,
    s,
    l;
  e
    ? (t >= n[i].pos && t <= n[r].pos && ({ lo: i, hi: r } = nr(n, "pos", t)),
      ({ pos: o, time: s } = n[i]),
      ({ pos: a, time: l } = n[r]))
    : (t >= n[i].time &&
        t <= n[r].time &&
        ({ lo: i, hi: r } = nr(n, "time", t)),
      ({ time: o, pos: s } = n[i]),
      ({ time: a, pos: l } = n[r]));
  let d = a - o;
  return d ? s + ((l - s) * (t - o)) / d : s;
}
var of = class extends rf {
    static id = "timeseries";
    static defaults = rf.defaults;
    constructor(t) {
      super(t),
        (this._table = []),
        (this._minPos = void 0),
        (this._tableRange = void 0);
    }
    initOffsets() {
      let t = this._getTimestampsForTable(),
        e = (this._table = this.buildLookupTable(t));
      (this._minPos = zd(e, this.min)),
        (this._tableRange = zd(e, this.max) - this._minPos),
        super.initOffsets(t);
    }
    buildLookupTable(t) {
      let { min: e, max: i } = this,
        r = [],
        o = [],
        a,
        s,
        l,
        d,
        m;
      for (a = 0, s = t.length; a < s; ++a)
        (d = t[a]), d >= e && d <= i && r.push(d);
      if (r.length < 2)
        return [
          { time: e, pos: 0 },
          { time: i, pos: 1 },
        ];
      for (a = 0, s = r.length; a < s; ++a)
        (m = r[a + 1]),
          (l = r[a - 1]),
          (d = r[a]),
          Math.round((m + l) / 2) !== d &&
            o.push({ time: d, pos: a / (s - 1) });
      return o;
    }
    _generate() {
      let t = this.min,
        e = this.max,
        i = super.getDataTimestamps();
      return (
        (!i.includes(t) || !i.length) && i.splice(0, 0, t),
        (!i.includes(e) || i.length === 1) && i.push(e),
        i.sort((r, o) => r - o)
      );
    }
    _getTimestampsForTable() {
      let t = this._cache.all || [];
      if (t.length) return t;
      let e = this.getDataTimestamps(),
        i = this.getLabelTimestamps();
      return (
        e.length && i.length
          ? (t = this.normalize(e.concat(i)))
          : (t = e.length ? e : i),
        (t = this._cache.all = t),
        t
      );
    }
    getDecimalForValue(t) {
      return (zd(this._table, t) - this._minPos) / this._tableRange;
    }
    getValueForPixel(t) {
      let e = this._offsets,
        i = this.getDecimalForPixel(t) / e.factor - e.end;
      return zd(this._table, i * this._tableRange + this._minPos, !0);
    }
  },
  pI = Object.freeze({
    __proto__: null,
    CategoryScale: uf,
    LinearScale: Tl,
    LogarithmicScale: ef,
    RadialLinearScale: nf,
    TimeScale: rf,
    TimeSeriesScale: of,
  }),
  l1 = [ME, X2, $k, pI];
var hf = class {
  constructor() {
    (this.class = ""),
      (this.backgroundGradient = !1),
      (this.backgroundColor = "transparent"),
      (this.backgroundGradientStopColor = "transparent"),
      (this.backgroundOpacity = 1),
      (this.backgroundStroke = "transparent"),
      (this.backgroundStrokeWidth = 0),
      (this.backgroundPadding = 5),
      (this.percent = 0),
      (this.radius = 90),
      (this.space = 4),
      (this.toFixed = 0),
      (this.maxPercent = 1e3),
      (this.renderOnClick = !0),
      (this.units = "%"),
      (this.unitsFontSize = "10"),
      (this.unitsFontWeight = "normal"),
      (this.unitsColor = "#444444"),
      (this.outerStrokeGradient = !1),
      (this.outerStrokeWidth = 8),
      (this.outerStrokeColor = "#78C000"),
      (this.outerStrokeGradientStopColor = "transparent"),
      (this.outerStrokeLinecap = "round"),
      (this.innerStrokeColor = "#C7E596"),
      (this.innerStrokeWidth = 4),
      (this.titleFormat = void 0),
      (this.title = "auto"),
      (this.titleColor = "#444444"),
      (this.titleFontSize = "20"),
      (this.titleFontWeight = "normal"),
      (this.subtitleFormat = void 0),
      (this.subtitle = "progress"),
      (this.subtitleColor = "#A9A9A9"),
      (this.subtitleFontSize = "10"),
      (this.subtitleFontWeight = "normal"),
      (this.imageSrc = void 0),
      (this.imageHeight = 0),
      (this.imageWidth = 0),
      (this.animation = !0),
      (this.animateTitle = !0),
      (this.animateSubtitle = !1),
      (this.animationDuration = 500),
      (this.showTitle = !0),
      (this.showSubtitle = !0),
      (this.showUnits = !0),
      (this.showImage = !1),
      (this.showBackground = !0),
      (this.showInnerStroke = !0),
      (this.clockwise = !0),
      (this.responsive = !1),
      (this.startFromZero = !0),
      (this.showZeroOuterStroke = !0),
      (this.lazy = !1);
  }
};
var c1 = (() => {
  class n {
    static forRoot(e = {}) {
      return { ngModule: n, providers: [{ provide: hf, useValue: e }] };
    }
  }
  return (
    (n.ɵfac = function (e) {
      return new (e || n)();
    }),
    (n.ɵmod = we({ type: n })),
    (n.ɵinj = Ce({ imports: [Fe] })),
    n
  );
})();
var eu = class n {
  constructor(t) {
    this.http = t;
  }
  baseUrl = "https://uat.smartassistapp.in/api/
superAdmin/dashboard";
  getDealerActivities(t) {
    let e = sessionStorage.getItem("token"),
      i = new vt({ Authorization: `Bearer ${e}` }),
      r = `${this.baseUrl}/NoSM?type=${t}`;
    return this.http.get(r, { headers: i });
  }
  getDealerActivitiesCustom(t, e, i) {
    let r = sessionStorage.getItem("token"),
      o = new vt({ Authorization: `Bearer ${r}` }),
      a = i || "MTD",
      s = `${this.baseUrl}/NoSM?type=${a}&start_date=${t}&end_date=${e}`;
    return this.http.get(s, { headers: o });
  }
  getNoSMUsers(t, e = "MTD") {
    let i = sessionStorage.getItem("token"),
      r = new vt({ Authorization: `Bearer ${i}` });
    return this.http.get(`${this.baseUrl}/NoSM?dealer_id=${t}&type=${e}`, {
      headers: r,
    });
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(li));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var pf = (n) => ({ active: n }),
  fI = () => [];
function gI(n, t) {
  if (
    (n & 1 && (h(0, "span", 10), f(1), Ss(2, "date"), Ss(3, "date"), u()),
    n & 2)
  ) {
    let e = E();
    g(),
      Ds(
        " Showing data from ",
        Oh(2, 2, e.appliedStartDate, "shortDate"),
        " to ",
        Oh(3, 5, e.appliedEndDate, "shortDate"),
        " "
      );
  }
}
function _I(n, t) {
  if ((n & 1 && (h(0, "tr", 22)(1, "td", 23), f(2), u()()), n & 2)) {
    let e = E(2).$implicit;
    g(2), ae(" Users for ", e.dealer_name, " ");
  }
}
function bI(n, t) {
  if (
    (n & 1 &&
      (h(0, "tr")(1, "td", 24),
      f(2),
      u(),
      h(3, "td", 25),
      f(4),
      u(),
      h(5, "td", 25),
      f(6),
      u(),
      h(7, "td", 25),
      f(8),
      u(),
      h(9, "td", 25),
      f(10),
      u(),
      h(11, "td", 26),
      f(12),
      u(),
      h(13, "td", 25),
      f(14),
      u(),
      h(15, "td", 25),
      f(16),
      u(),
      h(17, "td", 25),
      f(18),
      u(),
      h(19, "td", 25),
      f(20),
      u(),
      h(21, "td", 25),
      f(22),
      u(),
      h(23, "td", 25),
      f(24),
      u(),
      h(25, "td", 25),
      f(26),
      u(),
      h(27, "td", 26),
      f(28),
      u(),
      h(29, "td", 25),
      f(30),
      u(),
      h(31, "td"),
      f(32, "-"),
      u(),
      h(33, "td"),
      f(34, "-"),
      u(),
      W(35, "td"),
      u()),
    n & 2)
  ) {
    let e = t.$implicit;
    g(2),
      B(e.user_name),
      g(2),
      B(e.enquiries),
      g(2),
      B(e.testDrives),
      g(2),
      B(e.orders),
      g(2),
      B(e.net_orders),
      g(2),
      B(e.lostEnquiries),
      g(2),
      B(e.retail),
      g(2),
      B(e.cancellations),
      g(2),
      B(e.upComingFollowups),
      g(2),
      B(e.overdueFollowups),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.outgoing),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.incoming),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.connected),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.declined),
      g(2),
      B((e.callLogs == null ? null : e.callLogs.duration) || "-");
  }
}
function vI(n, t) {
  if ((n & 1 && (h(0, "tr")(1, "td", 27), f(2), u()()), n & 2)) {
    let e = E(2).$implicit;
    g(2), ae(" No users found for ", e.dealer_name, ". ");
  }
}
function yI(n, t) {
  if (
    (n & 1 &&
      (Qe(0),
      F(1, _I, 3, 1, "tr", 20)(2, bI, 36, 15, "tr", 21)(3, vI, 3, 1, "tr", 19),
      Xe()),
    n & 2)
  ) {
    let e = E().$implicit,
      i = E(2);
    g(),
      M("ngIf", (i.dealerUsers[e.dealer_id] || Si(3, fI)).length > 0),
      g(),
      M("ngForOf", i.dealerUsers[e.dealer_id]),
      g(),
      M(
        "ngIf",
        i.dealerUsers[e.dealer_id] && i.dealerUsers[e.dealer_id].length === 0
      );
  }
}
function xI(n, t) {
  if (n & 1) {
    let e = ce();
    Qe(0),
      h(1, "tr")(2, "td", 15),
      f(3),
      u(),
      h(4, "td"),
      f(5),
      u(),
      h(6, "td"),
      f(7),
      u(),
      h(8, "td"),
      f(9),
      u(),
      h(10, "td"),
      f(11),
      u(),
      h(12, "td"),
      f(13),
      u(),
      h(14, "td"),
      f(15),
      u(),
      h(16, "td"),
      f(17),
      u(),
      h(18, "td", 16),
      f(19),
      u(),
      h(20, "td"),
      f(21),
      u(),
      h(22, "td"),
      f(23),
      u(),
      h(24, "td"),
      f(25),
      u(),
      h(26, "td"),
      f(27),
      u(),
      h(28, "td"),
      f(29),
      u(),
      h(30, "td"),
      f(31),
      u(),
      h(32, "td"),
      f(33),
      u(),
      h(34, "td", 16),
      f(35),
      u(),
      h(36, "td"),
      f(37),
      u(),
      h(38, "td"),
      f(39),
      u(),
      h(40, "td"),
      f(41),
      u(),
      h(42, "td")(43, "button", 17),
      U("click", function () {
        let r = N(e),
          o = r.$implicit,
          a = r.index,
          s = E(2);
        return L(s.toggleDetails(a, o));
      }),
      W(44, "i", 18),
      u()()(),
      F(45, yI, 4, 4, "ng-container", 19),
      Xe();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      r = E(2);
    g(3),
      B(e.dealer_name),
      g(2),
      B(e.enquiries),
      g(2),
      B(e.testDrives),
      g(2),
      B(e.upComingTestDrives),
      g(2),
      B(e.overdueTestDrives),
      g(2),
      B(e.completedTestDrives),
      g(2),
      B(e.orders),
      g(2),
      B(e.net_orders),
      g(2),
      B(e.lostEnquiries),
      g(2),
      B(e.retail),
      g(2),
      B(e.cancellations),
      g(2),
      B(e.upComingFollowups),
      g(2),
      B(e.overdueFollowups),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.outgoing),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.incoming),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.connected),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.declined),
      g(2),
      B((e.callLogs == null ? null : e.callLogs.duration) || "-"),
      g(2),
      B(e.totalUsersCount),
      g(2),
      B(e.activeUsersCount),
      g(3),
      M("ngClass", r.expandedRow === i ? "fa-minus" : "fa-plus"),
      g(),
      M("ngIf", r.expandedRow === i);
  }
}
function CI(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 28)(1, "button", 29),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.toggleShow());
      }),
      f(2),
      u()();
  }
  if (n & 2) {
    let e = E(2);
    g(2), ae(" ", e.showButtonText, " ");
  }
}
function wI(n, t) {
  n & 1 &&
    (h(0, "div", 28),
    f(
      1,
      ` No dealers found.
`
    ),
    u());
}
function DI(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 11)(1, "table", 12)(2, "thead")(3, "tr")(4, "th"),
      f(5, "Dealer name"),
      u(),
      h(6, "th"),
      f(7, "Enquiries"),
      u(),
      h(8, "th"),
      f(9, "Test Drives"),
      u(),
      h(10, "th"),
      f(11, "Upcoming Test Drives"),
      u(),
      h(12, "th"),
      f(13, "Overdue Test Drives"),
      u(),
      h(14, "th"),
      f(15, "Completed Test Drives"),
      u(),
      h(16, "th"),
      f(17, "Orders"),
      u(),
      h(18, "th"),
      f(19, "Net orders"),
      u(),
      h(20, "th"),
      f(21, "Lost leads"),
      u(),
      h(22, "th"),
      f(23, "Retail"),
      u(),
      h(24, "th"),
      f(25, "Cancellations"),
      u(),
      h(26, "th"),
      f(27, "Upcoming Followups"),
      u(),
      h(28, "th"),
      f(29, "Overdue Followups"),
      u(),
      h(30, "th"),
      f(31, "Outgoing"),
      u(),
      h(32, "th"),
      f(33, "Incoming"),
      u(),
      h(34, "th"),
      f(35, "Connected"),
      u(),
      h(36, "th"),
      f(37, "Declined"),
      u(),
      h(38, "th"),
      f(39, "Duration"),
      u(),
      h(40, "th"),
      f(41, "Total user"),
      u(),
      h(42, "th"),
      f(43, "Active user"),
      u(),
      W(44, "th"),
      u()(),
      h(45, "tbody"),
      F(46, xI, 46, 22, "ng-container", 13),
      u()(),
      F(47, CI, 3, 1, "div", 14)(48, wI, 2, 0, "div", 14),
      u()),
    n & 2)
  ) {
    let e = E();
    g(46),
      M("ngForOf", e.paginatedDealers)("ngForTrackBy", e.trackByDealerId),
      g(),
      M("ngIf", e.dealers.length > e.itemsPerPage),
      g(),
      M("ngIf", e.paginatedDealers.length === 0);
  }
}
Bo.register(...l1);
Bo.register(sf, Ua, lf, Tl, cf, uf, df);
var tu = class n {
  constructor(t, e, i, r, o) {
    this.http = t;
    this.cdr = e;
    this.context = i;
    this.router = r;
    this.dashboardService = o;
  }
  dashboardMetrics = {
    totalLeads: 0,
    totalTestDrives: 0,
    totalOrders: 0,
    lostLeads: 0,
    cancellations: 0,
    netOrders: 0,
    retail: 0,
  };
  currentPageMap = {};
  showAllSMs = {};
  totalLeads = fe(0);
  totalTestDrives = fe(0);
  totalOrders = fe(0);
  prevLeads = fe(0);
  prevTestDrives = fe(0);
  prevOrders = fe(0);
  selectedOption = "leads-MTD";
  testDrives = 0;
  displayedData = [];
  filteredData = [];
  mtdTestDrives = fe(0);
  qtdTestDrives = fe(0);
  hoveredSM = null;
  loading = !1;
  selectedDealer = null;
  ps1Data = [];
  ps2Data = [];
  pageSize = 20;
  selectedSection = "analysis";
  ytdTestDrives = fe(0);
  loadingSM = !1;
  psData = {};
  showDetails = !1;
  paginatedDealers = [];
  dealerUsers = {};
  mtdOrders = fe(0);
  qtdOrders = fe(0);
  ytdOrders = fe(0);
  selectedFilter = "MTD";
  dealerColors = ["#e6f2ff", "#f9f2ec", "#eaf7ea", "#f3e8ff"];
  appliedStartDate = null;
  appliedEndDate = null;
  mtdLeads = fe(0);
  qtdLeads = fe(0);
  currentLeads = 0;
  previousLeads = 0;
  changeLeads = 0;
  testDriveChange = 0;
  testDriveProgressValue = 0;
  testDriveStrokeColor = "#4CAF50";
  selectedCategory = "leads";
  selectedDuration = "MTD";
  orderChange = 0;
  orderProgressValue = 0;
  loadingPS = !1;
  activeAccordion = null;
  showAll = !1;
  orderStrokeColor = "#4CAF50";
  currentTestDrives = 0;
  previousTestDrives = 0;
  selectedDealerId = null;
  dealerSMS = {};
  salesManagers = {};
  loadingSMs = {};
  expandedRow = null;
  Math = Math;
  itemsPerPagedeal = 10;
  currentDisplayCount;
  orders = 0;
  currentOrders = 0;
  previousOrders = 0;
  ytdLeads = fe(0);
  selectedPeriod = "MTD";
  dashboardData = {};
  leads = 0;
  selectedSM = null;
  isSidebarOpen = !0;
  paginatedDealerskpis = [];
  currentIndex = 0;
  currentDealerPage = 1;
  dealersPerPage = 5;
  expandedItems = {};
  filterOptions = ["MTD", "QTD", "YTD"];
  expandedRows = [!1, !1, !1, !1, !1, !1];
  showMoreActive = !1;
  rankings = {};
  sidebarTestDrives = fe(0);
  sidebarOrders = fe(0);
  sidebarLeads = fe(0);
  pieChartInstance;
  leadsData = {};
  chart;
  miniChart;
  hoveredPS = null;
  activeDealer = null;
  activeSM = null;
  activePS = null;
  incrementSize = 10;
  graphPath = "";
  leadsChange = 0;
  testDrivesChange = 0;
  ordersChange = 0;
  change = 0;
  doughnutChart;
  animatedValue = 0;
  itemsPerPage = 10;
  currentPage = 1;
  paginatedData = [];
  activeFilter = "MTD";
  dealers = [];
  currentdealerPage = 1;
  itemsPerdealerPage = 5;
  maxValue = 0;
  selectedFilterPS = "MTD";
  customStartDate = null;
  customEndDate = null;
  changeDisplay = 0;
  progressValue = 0;
  strokeColor = "red";
  data;
  apiUrl = "https://uat.smartassistapp.in/api/
superAdmin/dashbaordNew";
  ngOnInit() {
    (this.currentDisplayCount = this.itemsPerPage),
      this.loadInitialDealers(),
      (this.selectedFilter = "MTD"),
      this.fetchDealers(this.selectedFilter),
      this.fetchSuperAdminDashboard("MTD"),
      this.fetchDashboardDataForTopCards(this.selectedFilter),
      this.onDropdownChange(),
      this.context.onSideBarClick$.next({
        role: "dashboard",
        pageTitle: "Dashboard",
      }),
      (this.selectedFilter = "MTD"),
      this.fetchDashboardData("MTD"),
      this.applyFilter(this.selectedFilter),
      setTimeout(() => {
        this.animatedValue = this.progressValue;
      }, 100);
  }
  initializeDisplay() {
    (this.currentDisplayCount = this.itemsPerPage),
      this.updatePaginatedDealers();
  }
  toggleShow() {
    this.currentDisplayCount >= this.dealers.length
      ? (this.currentDisplayCount = this.itemsPerPage)
      : (this.currentDisplayCount = Math.min(
          this.dealers.length,
          this.currentDisplayCount + this.incrementSize
        )),
      this.updatePaginatedDealers();
  }
  get canShowMore() {
    return this.currentDisplayCount < this.dealers.length;
  }
  get canShowLess() {
    return this.currentDisplayCount > this.itemsPerPage;
  }
  get isShowingAll() {
    return this.currentDisplayCount >= this.dealers.length;
  }
  get showButtonText() {
    return this.currentDisplayCount >= this.dealers.length
      ? "Show Less"
      : "Show More";
  }
  toggleExpand(t) {
    (this.expandedRows[t] = !this.expandedRows[t]),
      console.log(`Order ${t + 1} expanded:`, this.expandedRows[t]);
  }
  getStrokeColor(t) {
    let e = Number(t);
    return e > 0 ? "#4CAF50" : e < 0 ? "#F44336" : "#9E9E9E";
  }
  getDealerBackground(t) {
    let e = [
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
      "linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)",
      "linear-gradient(135deg, #fa709a 0%, #fee140 100%)",
      "linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)",
      "linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)",
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
    ];
    return e[t % e.length];
  }
  ngAfterViewInit() {
    this.totalTestDrives() &&
      this.totalOrders() &&
      this.createDoughnutChart(this.totalTestDrives(), this.totalOrders()),
      this.initLineChart();
  }
  onFilterClick(t) {}
  toggleShowAllSMs(t) {
    this.showAllSMs[t] = !this.showAllSMs[t];
  }
  onFilterChange(t) {
    (this.selectedFilter = t), this.fetchDealers(t);
    let e = this.activeSM;
    (this.selectedFilter = t),
      this.fetchDashboardDataForTopCards(t),
      this.fetchSuperAdminDashboard(t),
      this.selectedDealerId &&
        (this.fetchDealerSMs(this.selectedDealerId, t),
        (this.dealerSMS[this.selectedDealerId] || []).some((r) => r.sm_id === e)
          ? (this.activeSM = e)
          : (this.activeSM = null));
  }
  fetchDealerSMs(t, e, i) {
    let r = sessionStorage.getItem("token");
    if (!r) return;
    let o = new vt({ Authorization: `Bearer ${r}` }),
      a = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/NoSM?dealer_id=${t}&type=${e}`;
    this.http.get(a, { headers: o }).subscribe({
      next: (s) => {
        (this.dealerSMS[t] =
          s?.status === 200 && s.data?.dealers?.[0]?.user_list
            ? s.data.dealers[0].user_list
            : []),
          i && this.dealerSMS[t].some((l) => l.user_id === i)
            ? (this.activeSM = i)
            : (this.activeSM = null);
      },
      error: (s) => {
        console.error("Failed to fetch SM data:", s),
          (this.dealerSMS[t] = []),
          (this.activeSM = null);
      },
    });
  }
  fetchPS(t, e) {
    let i = sessionStorage.getItem("token");
    if (!i) return;
    let r = new vt({ Authorization: `Bearer ${i}` }),
      o = `https://uat.smartassistapp.in/api/
superAdmin/dashbaordNew?type=${this.selectedFilter}&dealer_id=${e}&sm_id=${t}`;
    this.http.get(o, { headers: r }).subscribe({
      next: (a) => {
        this.psData[t] = a?.data?.ps || [];
      },
      error: (a) => {
        console.error("Failed to fetch PS data:", a), (this.psData[t] = []);
      },
    });
  }
  toggleDetails(t, e) {
    if (this.expandedRow === t) {
      this.expandedRow = null;
      return;
    }
    (this.expandedRow = t),
      this.dealerUsers[e.dealer_id] ||
        this.dashboardService.getNoSMUsers(e.dealer_id, "MTD").subscribe({
          next: (i) => {
            if (i.status === 200) {
              let r = i.data?.dealers?.[0]?.user_list || [];
              this.dealerUsers[e.dealer_id] = r;
            } else this.dealerUsers[e.dealer_id] = [];
          },
          error: () => {
            this.dealerUsers[e.dealer_id] = [];
          },
        });
  }
  updateProgressAndColor(t) {
    (this.changeDisplay = t),
      (this.progressValue = this.getProgressFromChange(t)),
      (this.strokeColor = this.getStrokeColor(t)),
      this.cdr.detectChanges();
  }
  selectSection(t) {
    this.selectedSection = t;
  }
  getProgressFromChange(t) {
    return Math.min((Math.abs(t) / 500) * 100, 100);
  }
  isDealerDataAvailable(t) {
    return t?.dealer_id && this.dealerSMS[t.dealer_id]?.length > 0;
  }
  getDashOffset(t) {
    return 100 - t;
  }
  get totalDealerPages() {
    return Math.ceil(this.dealers.length / this.itemsPerdealerPage);
  }
  goToPage(t) {
    t >= 1 && t <= this.totalDealerPages && (this.currentdealerPage = t);
  }
  getShowingRange() {
    let t = (this.currentdealerPage - 1) * this.itemsPerdealerPage + 1,
      e = Math.min(
        this.currentdealerPage * this.itemsPerdealerPage,
        this.dealers.length
      );
    return `Showing ${t} \u2013 ${e} of ${this.dealers.length} dealers`;
  }
  goBack() {
    (this.selectedSM = null),
      (this.selectedDealer = null),
      (this.selectedDealerId = null);
  }
  getDealerColor(t) {
    return this.dealerColors[t % this.dealerColors.length];
  }
  toggleAccordion(t) {
    this.activeAccordion === t
      ? (this.activeAccordion = null)
      : (this.activeAccordion = t);
  }
  toggleDealer(t) {
    this.activeDealer = this.activeDealer === t ? null : t;
  }
  get totalPagesdealer() {
    return Math.ceil(this.dealers.length / this.dealersPerPage);
  }
  prevPage() {
    this.currentPage > 1 && this.currentPage--;
  }
  get paginatedDealerskpi() {
    let t = (this.currentPage - 1) * this.dealersPerPage;
    return this.dealers.slice(t, t + this.dealersPerPage);
  }
  get startEntry() {
    return (this.currentPage - 1) * this.dealersPerPage + 1;
  }
  get endEntry() {
    return Math.min(
      this.currentPage * this.dealersPerPage,
      this.dealers.length
    );
  }
  nextPage() {
    this.currentPage < this.totalPagesdealer && this.currentPage++;
  }
  applyCustomDateFilter() {
    this.customStartDate && this.customEndDate
      ? ((this.appliedStartDate = this.customStartDate),
        (this.appliedEndDate = this.customEndDate),
        (this.dealers = []),
        (this.paginatedDealers = []),
        (this.expandedRow = null),
        this.dashboardService
          .getDealerActivitiesCustom(
            this.customStartDate,
            this.customEndDate,
            this.selectedFilter
          )
          .subscribe((t) => {
            t.status === 200 &&
              ((this.dealers = t.data.dealers || []),
              (this.currentPage = 1),
              this.paginateDealers(),
              (this.expandedRow = null));
          }))
      : alert("Please select both start and end dates.");
  }
  onPageChange(t) {
    let e = Math.ceil(this.dealers.length / this.itemsPerPage);
    t >= 1 && t <= e && ((this.currentPage = t), this.updatePaginatedDealers());
  }
  toggleSM(t, e) {
    if (this.activeSM === t) (this.activeSM = null), (this.activePS = null);
    else {
      (this.activeSM = t), (this.activePS = null);
      let i = sessionStorage.getItem("token");
      if (!i) return;
      let r = new vt({ Authorization: `Bearer ${i}` }),
        o = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?dealer_id=${e}&sm_id=${t}&type=${this.selectedFilter}`;
      this.http.get(o, { headers: r }).subscribe({
        next: (a) => {
          let s = a?.data?.dealers?.find((d) => d.dealer_id === e);
          this.dealerSMS[e] = s?.sm_list || [];
          let l = this.dealerSMS[e].find((d) => d.sm_id === t);
          this.psData[t] = l?.ps_list || [];
        },
        error: (a) => {
          console.error("Failed to fetch SMs and PS:", a),
            (this.dealerSMS[e] = []),
            (this.psData[t] = []);
        },
      });
    }
  }
  togglePS(t) {
    this.activePS = this.activePS === t ? null : t;
  }
  onDropdownChange() {
    console.log("Dropdown changed:"),
      console.log("selectedCategory:", this.selectedCategory),
      console.log("selectedDuration:", this.selectedDuration),
      this.selectedCategory && this.selectedDuration
        ? (console.log(
            "\u2705 Both dropdowns selected. Proceeding to fetch data..."
          ),
          (this.selectedOption = `${this.selectedCategory}-${this.selectedDuration}`))
        : console.warn(
            "\u26A0\uFE0F One or both dropdowns not selected. Skipping fetch."
          );
  }
  onSMClick(t) {
    (this.selectedSM = t),
      (this.selectedDealer = null),
      (this.currentPage = 1),
      (this.ps1Data = []),
      this.fetchPS1Data();
  }
  changeDealerPage(t) {
    let e = this.currentDealerPage + t;
    e >= 1 && e <= this.totalDealerPages && this.goToDealerPage(e);
  }
  goToDealerPage(t) {
    t >= 1 &&
      t <= this.totalDealerPages &&
      ((this.currentDealerPage = t),
      this.updateDealerPagination(),
      this.loadDealersForPage(t));
  }
  updateDealerPagination() {
    let t = (this.currentDealerPage - 1) * this.dealersPerPage + 1,
      e = Math.min(this.currentDealerPage * this.dealersPerPage, 23),
      i = document.getElementById("dealer-range");
    i && (i.textContent = `${t}-${e}`),
      document.querySelectorAll(".pagination-btn").forEach((o, a) => {
        o.textContent === "Previous"
          ? (o.disabled = this.currentDealerPage === 1)
          : o.textContent === "Next"
          ? (o.disabled = this.currentDealerPage === this.totalDealerPages)
          : o.textContent &&
            !isNaN(parseInt(o.textContent)) &&
            o.classList.toggle(
              "active",
              parseInt(o.textContent) === this.currentDealerPage
            );
      });
  }
  loadDealersForPage(t) {
    console.log(`Loading dealers for page ${t}`);
    let e = document.querySelectorAll(".accordion.level-1");
    e.forEach((i) => {
      i.style.opacity = "0.5";
    }),
      setTimeout(() => {
        e.forEach((i) => {
          i.style.opacity = "1";
        });
      }, 300);
  }
  changeTablePage(t, e) {
    console.log(`Changing page for ${t} by ${e}`);
  }
  searchDealer(t) {
    console.log("Searching for:", t);
  }
  autoCollapseOthers(t) {
    document.querySelectorAll(".accordion-content.active").forEach((i) => {
      if (i.id !== `content-${t}`) {
        let r = i.id.replace("content-", "toggle-"),
          o = document.getElementById(r);
        o &&
          o.parentElement &&
          (i.classList.remove("active"),
          o.parentElement.classList.remove("active"),
          (o.textContent = "\u25BC"));
      }
    });
  }
  initializeFilters() {
    document.querySelectorAll('select, input[type="date"]').forEach((e) => {
      e.addEventListener("change", (i) => {
        let r = i.target;
        console.log("Filter changed:", r.value),
          this.handleFilterChange(r.value);
      });
    });
  }
  handleFilterChange(t) {
    console.log("Handling filter change:", t);
  }
  onSearchChange(t) {
    let e = t.target;
    this.searchDealer(e.value);
  }
  fetchSuperAdminDashboard(t = "MTD") {
    let e = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/NoSM?type=${t}`,
      i = sessionStorage.getItem("token"),
      r = new vt({ Authorization: `Bearer ${i}` });
    this.http.get(e, { headers: r }).subscribe({
      next: (o) => {
        if (((this.loading = !1), o?.status === 200)) {
          this.dealers = o.data?.dealers || [];
          let a = o.data?.sms || [];
          (this.dealerSMS = {}),
            a.forEach((s) => {
              let l = s.team_id;
              this.dealerSMS[l] || (this.dealerSMS[l] = []),
                this.dealerSMS[l].push(s);
            }),
            (this.ps1Data = o.data?.ps || []),
            (this.hoveredSM = null),
            console.log("Grouped dealerSMS:", this.dealerSMS);
        } else console.error("Unexpected response format:", o);
      },
      error: (o) => {
        console.error("Super Admin Dashboard API failed:", o);
      },
    });
  }
  fetchDealers(t) {
    this.dashboardService.getDealerActivities(t).subscribe((e) => {
      console.log("API responseeeeeeeeeee:", e),
        e.status === 200
          ? ((this.dealers = e.data.dealers || []),
            console.log("Dealers array:", this.dealers),
            (this.currentPage = 1),
            this.updatePaginatedDealers())
          : ((this.dealers = []), (this.paginatedDealers = []));
    });
  }
  trackByDealerId(t, e) {
    return e.dealer_id;
  }
  updatePaginatedDealers() {
    this.paginatedDealers = this.dealers.slice(0, this.currentDisplayCount);
  }
  toggleDealerSMs(t) {
    if (this.selectedDealerId === t) {
      this.selectedDealerId = null;
      return;
    }
    this.selectedDealerId = t;
    let e = sessionStorage.getItem("token"),
      i = new vt({ Authorization: `Bearer ${e}` }),
      r = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?dealer_id=${t}&type=${this.selectedFilter}`;
    this.http.get(r, { headers: i }).subscribe({
      next: (o) => {
        let a = o.data.dealers.find((s) => s.dealer_id === t);
        a && a.sm_list
          ? (this.dealerSMS[t] = a.sm_list)
          : (this.dealerSMS[t] = []);
      },
      error: (o) => {
        console.error("Error fetching SMs for dealer:", o),
          (this.dealerSMS[t] = []);
      },
    });
  }
  onDealerClick(t) {
    if (this.selectedDealerId === t) {
      this.selectedDealerId = null;
      return;
    }
    if (((this.selectedDealerId = t), !this.dealerSMS[t])) {
      this.loadingSM = !0;
      let e = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?type=${this.selectedFilter}&dealer_id=${t}`,
        i = sessionStorage.getItem("token"),
        r = new vt({ Authorization: `Bearer ${i}` });
      this.http.get(e, { headers: r }).subscribe({
        next: (o) => {
          o?.status === 200 && o.data?.sms
            ? (this.dealerSMS[t] = o.data.sms)
            : (this.dealerSMS[t] = []),
            (this.loadingSM = !1);
        },
        error: (o) => {
          console.error("Failed to fetch SM data:", o),
            (this.dealerSMS[t] = []),
            (this.loadingSM = !1);
        },
      });
    }
  }
  avatarColors = [
    { background: "#E2E0F5", color: "#4B3C9B" },
    { background: "#D1F8F2", color: "#008B7F" },
    { background: "#FFD6D6", color: "#C62828" },
    { background: "#D6FFD6", color: "#2E7D32" },
    { background: "#D6E6FF", color: "#2962FF" },
    { background: "#FFE6FF", color: "#AD1457" },
  ];
  getAvatarStyle(t) {
    let e = this.avatarColors[t % this.avatarColors.length];
    return {
      width: "60px",
      height: "60px",
      margin: "0 auto 12px auto",
      borderRadius: "50%",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      fontWeight: "600",
      fontSize: "24px",
      background: e.background,
      color: e.color,
    };
  }
  isLastRow(t) {
    let e = Math.floor(window.innerWidth / 160),
      i = Math.ceil(this.ps1Data.length / e);
    return Math.floor(t / e) + 1 === i;
  }
  getAvatarColor(t) {
    let e = [
      { background: "#E2E0F5", text: "#4B3C9B" },
      { background: "#C4FEFB", text: "#007A78" },
      { background: "#FED1CF", text: "#C9302C" },
      { background: "#E3FFDF", text: "#3E8E41" },
      { background: "#CFDFFE", text: "#2C4DB2" },
      { background: "#FFEDFE", text: "#AF4C96" },
      { background: "#EAD1DC", text: "#9C2550" },
      { background: "#FFF2CC", text: "#B58900" },
      { background: "#D9EAD3", text: "#3B7A2A" },
      { background: "#F4CCCC", text: "#990000" },
      { background: "#F3F3F3", text: "#4D4D4D" },
      { background: "#FFE6F0", text: "#C2185B" },
    ];
    return e[t % e.length];
  }
  onPSCardClick(t) {
    console.log("Clicked PS ID:", t);
  }
  fetchPS1Data() {
    if (!this.selectedSM || !this.selectedDealerId) {
      console.warn("SM or Dealer not selected");
      return;
    }
    this.loadingPS = !0;
    let t = this.selectedFilter,
      e = "https://uat.smartassistapp.in/api/
superAdmin/dashbaordNew",
      i = this.selectedDealerId,
      r = this.selectedSM.sm_id,
      o = `${e}?type=${t}&dealer_id=${i}&sm_id=${r}`,
      a = sessionStorage.getItem("token");
    if (!a) {
      console.error("No token found in sessionStorage"), (this.loadingPS = !1);
      return;
    }
    let s = new vt().set("Authorization", `Bearer ${a}`);
    this.http.get(o, { headers: s }).subscribe({
      next: (l) => {
        let d = l?.data?.ps;
        Array.isArray(d)
          ? (this.ps1Data = d.map((m) => ({
              ps_id: m.ps_id,
              ps_name: `${m.ps_fname} ${m.ps_lname}`,
              enquiries: m.enquiries,
              testDrives: m.testDrives,
              orders: m.orders,
              cancellations: m.cancellation,
              netOrders: m.net_orders,
              retail: m.retail,
            })))
          : (console.warn("No PS data found in API response"),
            (this.ps1Data = [])),
          (this.loadingPS = !1);
      },
      error: (l) => {
        console.error("Error fetching PS1 data:", l),
          (this.ps1Data = []),
          (this.loadingPS = !1);
      },
    });
  }
  get paginatedPs1Data() {
    let t = (this.currentPage - 1) * this.pageSize,
      e = t + this.pageSize;
    return this.ps1Data.slice(t, e);
  }
  get totalPs1Pages() {
    return Math.ceil(this.ps1Data.length / this.pageSize);
  }
  formatChangeValue(t) {
    return t === 0 || Object.is(t, -0) ? "0%" : t > 0 ? `+${t}%` : `${t}%`;
  }
  getChangeColor(t) {
    return t > 0 ? "text-success" : (t < 0, "text-danger");
  }
  showMore() {
    let t = this.currentIndex + this.itemsPerPage;
    (this.paginatedDealers = this.paginatedDealers.concat(
      this.dealers.slice(this.currentIndex, t)
    )),
      (this.currentIndex = this.paginatedDealers.length);
  }
  fetchDashboardData(t = "MTD") {
    let e = sessionStorage.getItem("token");
    if (!e) {
      console.error("Token not found!");
      return;
    }
    let i = new vt().set("Authorization", `Bearer ${e}`),
      r = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?type=${t}`;
    this.http.get(r, { headers: i }).subscribe({
      next: (o) => {
        console.log(`API response for type=${t}:`, o);
        let a = o?.data || {},
          s = (l) =>
            typeof l == "string"
              ? parseFloat(l.replace("%", "").trim())
              : Number(l) || 0;
        if (
          ((this.currentLeads = Number(a.current) || 0),
          (this.previousLeads = Number(a.previous) || 0),
          (this.changeDisplay = s(a.change)),
          (this.currentTestDrives = Number(a.currentTestDrives) || 0),
          (this.previousTestDrives = Number(a.previousTestDrives) || 0),
          (this.testDriveChange = s(a.testDriveChange)),
          (this.currentOrders = Number(a.currentOrders) || 0),
          (this.previousOrders = Number(a.previousOrders) || 0),
          (this.orderChange = s(a.orderChange)),
          (this.progressValue = Math.abs(this.changeDisplay)),
          (this.strokeColor = this.getStrokeColor(this.changeDisplay)),
          (this.testDriveProgressValue = Math.abs(this.testDriveChange)),
          (this.testDriveStrokeColor = this.getStrokeColor(
            this.testDriveChange
          )),
          (this.orderProgressValue = Math.abs(this.orderChange)),
          (this.orderStrokeColor = this.getStrokeColor(this.orderChange)),
          console.log("\u2705 Final Parsed Data:", {
            leads: {
              current: this.currentLeads,
              previous: this.previousLeads,
              change: this.changeDisplay,
            },
            testDrives: {
              current: this.currentTestDrives,
              previous: this.previousTestDrives,
              change: this.testDriveChange,
            },
            orders: {
              current: this.currentOrders,
              previous: this.previousOrders,
              change: this.orderChange,
            },
          }),
          a.kpi)
        ) {
          let l = Number(a.kpi.totalTestDrives) || 0,
            d = Number(a.kpi.totalOrders) || 0;
          (l > 0 || d > 0) &&
            console.log("\u{1F4CA} Creating Doughnut Chart with:", {
              totalTestDrives: l,
              totalOrders: d,
            });
        }
      },
      error: (o) => {
        console.error("Dashboard API error:", o);
      },
    });
  }
  initLineChart() {
    let t = document.getElementById("enquiryLineChart");
    new Bo(t, {
      type: "line",
      data: {
        labels: ["Jan", "Feb", "Mar", "Apr"],
        datasets: [
          {
            data: [3, 5, 7, 4],
            borderColor: "#4CAF50",
            tension: 0.4,
            pointRadius: 0,
            borderWidth: 2,
          },
        ],
      },
      options: {
        responsive: !0,
        plugins: { legend: { display: !1 }, tooltip: { enabled: !0 } },
        scales: { x: { display: !1 }, y: { display: !1 } },
      },
    });
  }
  renderChart(t) {
    let e = {
      labels: ["Leads", "Test Drives", "Orders"],
      datasets: [
        {
          label: "MTD Data",
          data: [t.mtdLeads, t.mtdTestDrives, t.mtdOrders],
          backgroundColor: ["#FF5733", "#33FF57", "#3357FF"],
          borderColor: ["#FF5733", "#33FF57", "#3357FF"],
          borderWidth: 1,
        },
      ],
    };
    this.chart = new Bo("myColumnChart", {
      type: "bar",
      data: e,
      options: {
        responsive: !0,
        scales: { y: { beginAtZero: !0, ticks: { stepSize: 1 } } },
        plugins: {
          legend: { position: "top" },
          tooltip: { callbacks: { label: (i) => `${i.label}: ${i.raw}` } },
        },
      },
    });
  }
  fetchData() {
    this.http
      .get("https://uat.smartassistapp.in/api/
superAdmin/dashbaordNew")
      .subscribe(
        (t) => {
          console.log("API Response:", t),
            t?.data
              ? ((this.data = t.data),
                console.log("Data after assignment:", this.data))
              : console.error("No data in response:", t);
        },
        (t) => {
          console.error("Error fetching data:", t);
        }
      );
  }
  getLeadChange() {
    return (
      console.log("Data:", this.data),
      console.log("Lead Change:", this.data?.leads?.change),
      this.data?.leads?.change ? this.data.leads.change : 0
    );
  }
  getChangePercentage() {
    return this.data?.leads?.change || 0;
  }
  getLeadPercentageChange() {
    return (
      console.log(this.dashboardData),
      console.log(this.dashboardData?.leads?.change),
      this.dashboardData?.leads?.change || 0
    );
  }
  getPaginatedLogs(t) {
    let e = Array.isArray(t.callLogs) ? t.callLogs : [t.callLogs],
      r = ((this.currentPageMap[t.dealer_id] || 1) - 1) * this.itemsPerPage,
      o = r + this.itemsPerPage;
    return e.slice(r, o);
  }
  getTotalPages(t) {
    let e = Array.isArray(t.callLogs) ? t.callLogs : [t.callLogs];
    return Math.ceil(e.length / this.itemsPerPage);
  }
  changePagesm(t, e) {
    let i = this.dealers.find((o) => o.dealer_id === t);
    if (!i) return;
    let r = this.getTotalPages(i);
    e >= 1 && e <= r && (this.currentPageMap[t] = e);
  }
  updateData(t) {
    switch (this.selectedOption) {
      case "leads":
        this.displayedData = t.rankings.leads;
        break;
      case "testDrives":
        this.displayedData = t.rankings.testDrives;
        break;
      case "orders":
        this.displayedData = t.rankings.orders;
        break;
      default:
        this.displayedData = t.rankings.leads;
    }
    this.maxValue = Math.max(...this.displayedData.map((e) => e.value)) || 1;
  }
  getChangeData(t, e) {
    if (e === 0 && t === 0) return { value: "-0%", color: "text-danger" };
    if (e === 0 && t > 0) return { value: "+100%", color: "text-success" };
    if (e > 0 && t === 0) return { value: "-100%", color: "text-danger" };
    let i = ((t - e) / e) * 100,
      r = Math.round(i);
    return {
      value:
        (i === 0 ? (t < e ? "-" : "") : i > 0 ? "+" : "") + Math.abs(r) + "%",
      color: i > 0 ? "text-success" : i < 0 ? "text-danger" : "text-muted",
    };
  }
  getFilteredLeads() {
    switch (this.selectedPeriod) {
      case "MTD":
      case "QTD":
      case "YTD":
        return this.leads;
      default:
        return this.leads;
    }
  }
  getFilteredTestDrives() {
    switch (this.selectedPeriod) {
      case "MTD":
      case "QTD":
      case "YTD":
        return this.testDrives;
      default:
        return this.testDrives;
    }
  }
  getFilteredOrders() {
    switch (this.selectedPeriod) {
      case "MTD":
      case "QTD":
      case "YTD":
        return this.orders;
      default:
        return this.orders;
    }
  }
  showTooltip() {
    let t = document.querySelector(".tooltip-content");
    t && (t.style.opacity = "1");
  }
  hideTooltip() {
    let t = document.querySelector(".tooltip-content");
    t && (t.style.opacity = "0");
  }
  fetchDashboardDataForTopCards(t) {
    let e = sessionStorage.getItem("token");
    if (!e) {
      console.error("No token found!");
      return;
    }
    let i = new vt().set("Authorization", `Bearer ${e}`);
    this.http
      .get(
        `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?type=${t}`,
        { headers: i }
      )
      .subscribe(
        (r) => {
          if (r && r.status === 200) {
            let o = r.data?.kpi;
            if (o) {
              this.dashboardMetrics = {
                totalLeads: o.totalLeads || 0,
                totalTestDrives: o.totalTestDrives || 0,
                totalOrders: o.totalOrders || 0,
                lostLeads: o.lostLeads || 0,
                cancellations: o.cancellations || 0,
                netOrders: o.netOrders || 0,
                retail: o.retail || 0,
              };
              let a = this.dashboardMetrics.totalTestDrives,
                s = this.dashboardMetrics.totalOrders;
              setTimeout(() => {
                this.createDoughnutChart(a, s);
              }, 0);
            } else console.warn("No KPI data found in response");
          } else
            console.error("Error fetching data:", r.message || "Unknown error");
        },
        (r) => {
          console.error("Error fetching data:", r);
        }
      );
  }
  fetchDashboardDataForTable(t) {
    let e = sessionStorage.getItem("token");
    if (!e) {
      console.error("No token found!");
      return;
    }
    let i = new vt().set("Authorization", `Bearer ${e}`);
    this.http
      .get(
        `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?type=${t};`,
        { headers: i }
      )
      .subscribe(
        (r) => {
          r && r.status === 200
            ? ((this.displayedData = r.data.tableData || []),
              (this.maxValue =
                Math.max(...this.displayedData.map((o) => o.value)) || 1))
            : console.error("Failed to fetch table data:", r.message);
        },
        (r) => {
          console.error("Fetch error:", r);
        }
      );
  }
  createDoughnutChart(t, e) {
    this.cdr.detectChanges();
    let i = document.getElementById("doughnutChart");
    if (!i) {
      console.error('Canvas element with ID "doughnutChart" not found.');
      return;
    }
    this.doughnutChart &&
      (this.doughnutChart.destroy(), (this.doughnutChart = null));
    let r = i.getContext("2d");
    r?.clearRect(0, 0, i.width, i.height),
      (this.doughnutChart = new Bo(r, {
        type: "doughnut",
        data: {
          labels: ["Test Drives", "Orders"],
          datasets: [{ data: [t, e], backgroundColor: ["#1E90FF", "#87CEFA"] }],
        },
        options: {
          responsive: !0,
          maintainAspectRatio: !0,
          plugins: {
            legend: { position: "top" },
            tooltip: {
              callbacks: {
                label: function (o) {
                  let a = o.raw;
                  return `${o.label}: ${a}`;
                },
              },
            },
          },
        },
      }));
  }
  getPercentageChange() {
    if (this.previousLeads === 0) return 100;
    let t = this.currentLeads - this.previousLeads;
    return Math.round((t / this.previousLeads) * 100);
  }
  updatePieChart(t, e) {
    this.pieChartInstance
      ? ((this.pieChartInstance.data.datasets[0].data = [t, e]),
        this.pieChartInstance.update())
      : this.createDoughnutChart(t, e);
  }
  paginateData() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    this.paginatedData = this.displayedData.slice(t, e);
  }
  paginateDealers() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    this.paginatedDealers = [...this.dealers.slice(t, e)];
  }
  getFormattedChange(t) {
    return Object.is(t, -0) ? "-0%" : `${t >= 0 ? "+" : ""}${t}%`;
  }
  getProgressPercentage(t, e) {
    return (t / e) * 100;
  }
  getColor(t) {
    return t <= 3 ? "#28a745" : "#dc3545";
  }
  changePage(t) {
    t < 1 ||
      t > this.totalPages() ||
      ((this.currentPage = t), this.paginateData());
  }
  totalPages() {
    return Math.ceil(this.displayedData.length / this.itemsPerPage);
  }
  getPageNumbers() {
    return Array(this.totalPages())
      .fill(0)
      .map((t, e) => e + 1);
  }
  clearCustomDateFilter() {
    (this.customStartDate = null),
      (this.customEndDate = null),
      (this.appliedStartDate = null),
      (this.appliedEndDate = null),
      this.applyFilter(this.selectedFilter);
  }
  applyFilter(t) {
    this.selectedPeriod = t;
    let e = sessionStorage.getItem("token");
    if (!e) return;
    let i =
      "https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities";
    t && t !== "today" && (i += `?type=${t}`);
    let r = { Authorization: `Bearer ${e}` };
    this.http.get(i, { headers: r }).subscribe({
      next: (o) => {
        let a = o.data;
        if (
          ((this.leads = a.leads ?? 0),
          (this.currentLeads = a.current ?? 0),
          (this.previousLeads = a.previous ?? 0),
          (this.changeLeads = a.change ?? 0),
          (this.testDrives = a.testDrives ?? 0),
          (this.currentTestDrives = a.currentTestDrives ?? 0),
          (this.previousTestDrives = a.previousTestDrives ?? 0),
          (this.testDriveChange = a.testDriveChange ?? 0),
          (this.orders = a.orders ?? 0),
          (this.currentOrders = a.currentOrders ?? 0),
          (this.previousOrders = a.previousOrders ?? 0),
          (this.orderChange = a.orderChange ?? 0),
          ["MTD", "QTD", "YTD"].includes(t))
        ) {
          let s = a.totalTestDrives ?? 0,
            l = a.totalOrders ?? 0;
          this.createDoughnutChart(s, l);
        } else
          this.doughnutChart &&
            (this.doughnutChart.destroy(), (this.doughnutChart = null));
        this.cdr.detectChanges();
      },
      error: (o) => {
        console.error("API error:", o);
      },
    });
  }
  loadInitialDealers() {
    (this.paginatedDealers = this.dealers.slice(0, this.itemsPerPage)),
      (this.currentIndex = this.paginatedDealers.length),
      (this.showMoreActive = !1);
  }
  loadTodayData() {
    (this.selectedPeriod = ""), this.applyFilter("today");
  }
  static ɵfac = function (e) {
    return new (e || n)(H(li), H(et), H(yn), H(Bt), H(eu));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-dashboard"]],
    standalone: !0,
    features: [ue],
    decls: 19,
    vars: 13,
    consts: [
      [1, "container-fluid"],
      [1, "orders-table-container"],
      [1, "filter-container", "mb-3", "d-flex", "align-items-center"],
      [1, "btn", "filter-btn", "me-2", 3, "click", "ngClass"],
      [1, "btn", "filter-btn", "me-3", 3, "click", "ngClass"],
      [1, "me-2", "mb-0", 2, "margin-left", "10px"],
      [
        "type",
        "date",
        1,
        "form-control",
        "form-control-sm",
        "me-2",
        2,
        "width",
        "120px",
        "display",
        "inline-block",
        "margin-left",
        "10px",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "btn", "btn-sm", 2, "margin-left", "10px", 3, "click"],
      ["class", "ms-3 fw-bold text-primary", 4, "ngIf"],
      ["class", "table-responsive", 4, "ngIf"],
      [1, "ms-3", "fw-bold", "text-primary"],
      [1, "table-responsive"],
      [1, "table", "table-bordered", "table-striped"],
      [4, "ngFor", "ngForOf", "ngForTrackBy"],
      ["class", "text-center mt-3", 4, "ngIf"],
      [2, "text-align", "left"],
      [2, "color", "red"],
      [1, "icon-btn", 3, "click"],
      [1, "fas", 3, "ngClass"],
      [4, "ngIf"],
      ["class", "table-secondary", 4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "table-secondary"],
      ["colspan", "18", 1, "fw-bold", "ps-3"],
      [1, "ps-4", 2, "color", "#222fb9 !important"],
      [2, "color", "#222fb9 !important"],
      [2, "color", "red !important"],
      ["colspan", "18", 1, "text-center", "text-muted"],
      [1, "text-center", "mt-3"],
      [1, "btn", "btn-primary", 3, "click"],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "button", 3),
        U("click", function () {
          return i.onFilterChange("MTD");
        }),
        f(4, "MTD"),
        u(),
        h(5, "button", 3),
        U("click", function () {
          return i.onFilterChange("QTD");
        }),
        f(6, "QTD"),
        u(),
        h(7, "button", 4),
        U("click", function () {
          return i.onFilterChange("YTD");
        }),
        f(8, "YTD"),
        u(),
        h(9, "label", 5),
        f(10, "Custom date:"),
        u(),
        h(11, "input", 6),
        Wt("ngModelChange", function (o) {
          return $t(i.customStartDate, o) || (i.customStartDate = o), o;
        }),
        u(),
        h(12, "input", 6),
        Wt("ngModelChange", function (o) {
          return $t(i.customEndDate, o) || (i.customEndDate = o), o;
        }),
        u(),
        h(13, "button", 7),
        U("click", function () {
          return i.applyCustomDateFilter();
        }),
        f(14, "Apply"),
        u(),
        h(15, "button", 7),
        U("click", function () {
          return i.clearCustomDateFilter();
        }),
        f(16, "Clear"),
        u(),
        F(17, gI, 4, 8, "span", 8),
        u(),
        F(18, DI, 49, 4, "div", 9),
        u()()),
        e & 2 &&
          (g(3),
          M("ngClass", xe(7, pf, i.selectedFilter === "MTD")),
          g(2),
          M("ngClass", xe(9, pf, i.selectedFilter === "QTD")),
          g(2),
          M("ngClass", xe(11, pf, i.selectedFilter === "YTD")),
          g(4),
          zt("ngModel", i.customStartDate),
          g(),
          zt("ngModel", i.customEndDate),
          g(5),
          M("ngIf", i.appliedStartDate && i.appliedEndDate),
          g(),
          M("ngIf", i.paginatedDealers.length > 0));
    },
    dependencies: [Fe, Gt, ti, rt, j_, Ic, ht, fi, Ti, an, c1],
    styles: [
      '.wrapper[_ngcontent-%COMP%]{display:flex}.table-responsive[_ngcontent-%COMP%]{width:80%;overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}.card-header[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;align-items:center}.card-header[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%]{margin-left:10px}.card[_ngcontent-%COMP%]{border-radius:6px!important}.custom-btn[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;border:none;padding:8px 16px;font-size:14px;border-radius:4px;transition:background-color .3s,color .3s}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#007bff;color:#fff}#dataTable[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border:none!important}#doughnutChart[_ngcontent-%COMP%]{max-width:100%;max-height:100%}.progress-circle[_ngcontent-%COMP%]{--size: 50px;--progress: 70%;--color: #28a745;width:var(--size);height:var(--size);border-radius:50%;background:conic-gradient(var(--color) var(--progress),#e6e6e6 0);display:flex;align-items:center;justify-content:center;position:relative}.custom-btn[_ngcontent-%COMP%]{border:none;background-color:#f0f0f0;padding:8px 20px;border-radius:20px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#dcdcdc}.selected-btn[_ngcontent-%COMP%]{background-color:#1e88e5!important;color:#fff!important}.circle-text[_ngcontent-%COMP%]{font-weight:700;color:#333}.position-absolute[_ngcontent-%COMP%]{position:absolute}.circular-chart[_ngcontent-%COMP%]{transition:transform .3s ease}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.5rem;font-weight:700;color:#4caf50;opacity:1}.circular-chart[_ngcontent-%COMP%]   .circle-fill[_ngcontent-%COMP%]{transition:stroke-dasharray 1s ease-out}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.2rem;font-weight:700}.tooltip-content[_ngcontent-%COMP%]{position:absolute;bottom:110%;left:50%;transform:translate(-50%);background-color:#333;color:#fff;padding:6px 10px;border-radius:5px;white-space:nowrap;font-size:13px;z-index:10;opacity:0;pointer-events:none;transition:opacity .3s ease}.tooltip-content[_ngcontent-%COMP%]:after{content:"";position:absolute;top:100%;left:50%;transform:translate(-50%);border-width:5px;border-style:solid;border-color:#333 transparent transparent transparent}.tooltip-container[_ngcontent-%COMP%]:hover   .tooltip-content[_ngcontent-%COMP%]{opacity:1}.no-scrollbar[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch;scrollbar-width:none}.no-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}@media (min-width: 992px) and (max-width: 1250px){.tooltip-container[_ngcontent-%COMP%]{right:15px!important;width:83px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:80px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   .tooltip-content[_ngcontent-%COMP%]{font-size:.85rem}#num[_ngcontent-%COMP%]{right:-53px}.tooltip-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{font-size:1.1rem;padding:10px!important}}@media screen and (width: 1024px) and (height: 1366px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:0!important}}.tooltip-container[_ngcontent-%COMP%]{top:18%}@media screen and (min-width: 1024px) and (max-width: 1366px){#first[_ngcontent-%COMP%]{top:10px!important}#sec[_ngcontent-%COMP%], #third[_ngcontent-%COMP%]{top:49%!important}}.custom-btn[_ngcontent-%COMP%]{background:transparent;border:none;padding:6px 16px;font-weight:500;cursor:pointer;transition:all .2s ease-in-out}.custom-btn[_ngcontent-%COMP%]:hover{color:#222fb9}.selected-btn[_ngcontent-%COMP%]{background:#222fb9;color:#fff;border-radius:6px}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:6px;margin-top:20px;font-family:Poppins,sans-serif}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;background-color:#fff;border:1px solid #d4d4d8;border-radius:6px;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 3px #0000000d}.back-arrow[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:24px;cursor:pointer;color:#333;transition:transform .2s ease}.back-arrow[_ngcontent-%COMP%]:hover{transform:scale(1.1);color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:600;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{background-color:#f1f1f1;color:#ccc;border-color:#e5e5e5;cursor:not-allowed}.sm-card[_ngcontent-%COMP%]{background:#fff;border-radius:12px;box-shadow:0 2px 8px #00000014;padding:20px 16px;text-align:center;font-family:Poppins,sans-serif;transition:transform .2s ease,box-shadow .2s ease}.sm-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 4px 12px #0000001f}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:none!important;border-bottom:1px solid #ccc!important}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto;font-family:Poppins,sans-serif}.header[_ngcontent-%COMP%]{background-color:#fff;color:#000;padding:1rem;display:flex;justify-content:space-between;align-items:center;margin-top:50px!important}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:1rem}.nav-button[_ngcontent-%COMP%]{background:none;border:none;color:#fff;padding:.5rem 1rem;border-radius:4px;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#fff;color:#06c;font-weight:500}.nav-button[_ngcontent-%COMP%]:hover{background-color:#fff;color:#06c}.nav-button[_ngcontent-%COMP%]{color:#000}.nav-button[_ngcontent-%COMP%]:hover{background-color:#00f;color:#fff}.metrics-container[_ngcontent-%COMP%]{background-color:#e6e6e6;padding:1.5rem;border-radius:8px;box-shadow:0 2px 4px #0000000d;margin-bottom:1.5rem;position:relative}.dashboard-section[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;width:100%;max-width:100%}.card[_ngcontent-%COMP%]{width:100%;box-shadow:0 1px 5px #0000001a;border-radius:8px;padding:16px;background:#fff}.metrics-grid[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:20px;align-items:flex-start}.filters-container[_ngcontent-%COMP%]{width:290px;min-width:200px;flex-shrink:0;margin-left:30px}.filter-section[_ngcontent-%COMP%]{background-color:#fff}.dealer-block[_ngcontent-%COMP%]{background:transparent!important;margin-bottom:10px}.dashboard-container[_ngcontent-%COMP%]{background:transparent!important}.metric-box[_ngcontent-%COMP%]{background-color:#fff;padding:1rem;border-radius:15px;text-align:center;box-shadow:0 1px 3px #0000001a;height:130px;display:flex;width:150px;flex-direction:column;justify-content:center;align-items:center}.metric-value[_ngcontent-%COMP%]{font-size:2rem;font-weight:700;color:#06c;margin-bottom:.5rem}.metric-label[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.filters-panel[_ngcontent-%COMP%]{background-color:#e5e5e5;padding:.75rem;border-radius:8px}.filters-title[_ngcontent-%COMP%]{text-align:center;font-size:.9rem;font-weight:600}.time-filters[_ngcontent-%COMP%]{display:flex;margin-bottom:.5rem}.select-container[_ngcontent-%COMP%]{position:relative}.sm-select[_ngcontent-%COMP%]{width:100%;padding:.35rem .75rem;border:1px solid #ccc;border-radius:4px;appearance:none;font-size:.85rem}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:.6rem;color:#666}.performance-panels[_ngcontent-%COMP%]{gap:1.5rem}.person-info[_ngcontent-%COMP%]{background-color:#f9f9f9;padding:14px;border-radius:6px;box-shadow:0 2px 5px #0000001a;width:fit-content;margin-bottom:16px}.person-n[_ngcontent-%COMP%]   .panel-title[_ngcontent-%COMP%]{text-align:center;font-size:1.8rem;font-weight:500;margin-bottom:1rem;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{margin-top:-190px;display:flex;align-items:center;justify-content:center;color:#999}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:3.5rem;box-sizing:border-box}@media (max-width: 1024px) and (min-width: 768px){.performance-panels[_ngcontent-%COMP%]{display:block!important;gap:0!important}}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{pointer-events:none;display:none;position:fixed;left:-100%}}.performance-panel[_ngcontent-%COMP%]{flex:1;background-color:#e6e6e6}.avatar[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:50%;background-color:#e0e0e0;display:flex;align-items:center;justify-content:center;font-size:24px;color:#888}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;margin:0;padding:0}.dashboard-container[_ngcontent-%COMP%]{width:100%;margin:0 auto;position:relative}.header[_ngcontent-%COMP%]{background-color:#f5f5f5;padding:15px;top:0;width:100%;max-width:1540px;z-index:100;box-shadow:0 2px 5px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#eee;cursor:pointer;border-radius:4px}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{vertical-align:middle}.content-section[_ngcontent-%COMP%]{margin-top:40px}.nav-button[_ngcontent-%COMP%]:hover{background-color:gray}.main-content[_ngcontent-%COMP%]{background-color:#f9f9f9}[_nghost-%COMP%]     .header{position:static!important}[_nghost-%COMP%]     .header{width:100%!important;max-width:100%!important;transition:width .3s ease,margin-left .3s ease!important;z-index:auto!important}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:24px;font-weight:700;color:#fff}.header[_ngcontent-%COMP%]{transition:width .3s ease!important;transition:width .3s ease,margin-left .3s ease!important}.metric-label[_ngcontent-%COMP%]{font-size:14px;color:#666;margin-top:5px}.filters-container[_ngcontent-%COMP%]{grid-column:1 / -1;margin-top:15px}.filters-panel[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a}.filters-title[_ngcontent-%COMP%]{font-weight:700}.time-filters[_ngcontent-%COMP%]{display:flex;gap:0px;margin-bottom:10px}.filter-button[_ngcontent-%COMP%]{padding:5px 10px;border:none;background-color:#fff;border-radius:4px;cursor:pointer}.filter-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;border-color:#222fb9}.select-container[_ngcontent-%COMP%]{position:relative;width:200px}.sm-select[_ngcontent-%COMP%]{width:100%;padding:8px;border-radius:4px;border:1px solid #ddd;appearance:none}.performance-panels[_ngcontent-%COMP%]{margin-top:20px}.performance-panel[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;box-shadow:0 2px 5px #0000001a;padding:15px}.panel-title[_ngcontent-%COMP%]{font-size:30px!important;margin-top:0;margin-bottom:15px;padding-bottom:10px;font-weight:500;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{min-height:300px}table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.content-section[_ngcontent-%COMP%]{display:none}.content-section.active[_ngcontent-%COMP%]{display:block}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#f0f0f0;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-of-type(odd){--bs-table-accent-bg: transparent !important}table.table-striped[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd){background-color:red!important}.team-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;background-color:#fff;border-radius:10px;padding:15px 25px;gap:15px}.team-name[_ngcontent-%COMP%]{font-size:17px;color:#000;white-space:nowrap;font-weight:500;font-family:Poppins,sans-serif}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:8px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:4px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.metrics-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;justify-content:flex-end;flex:1}.metric-card[_ngcontent-%COMP%]{display:flex;align-items:center;padding:8px 12px;border-radius:22px;font-size:.85em;font-weight:600;color:#333;text-align:center;box-shadow:0 0 12px #0000001a;flex-shrink:0;height:50px}.metric-card[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:6px;font-size:1em}.metric-value[_ngcontent-%COMP%]{font-weight:700;margin-left:10px}@media (max-width: 768px){.team-container[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.metrics-wrapper[_ngcontent-%COMP%]{justify-content:flex-start}}.back-button[_ngcontent-%COMP%]{margin-right:15px;cursor:pointer;color:#fff;font-size:20px}.nav-button[_ngcontent-%COMP%]{background-color:#fff;color:#000;border:none;border-radius:4px;padding:5px 15px;margin-right:10px;font-weight:700;cursor:pointer}.nav-tab[_ngcontent-%COMP%]{color:#fff;margin-left:20px;font-size:16px}.container[_ngcontent-%COMP%]{margin:0;padding:20px 0}.card[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:20px;margin-bottom:20px;box-shadow:0 1px 3px #0000001a}.card-title[_ngcontent-%COMP%]{font-size:18px;font-weight:700;margin-bottom:15px}.profiles[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;gap:25px;margin-bottom:20px;flex-wrap:wrap}.profile[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:70px}.avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#e0e0e0;margin-bottom:8px}.name[_ngcontent-%COMP%]{font-size:12px;text-align:center;line-height:1.2}.actions[_ngcontent-%COMP%]{margin-top:20px}.action-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:10px}.person-info[_ngcontent-%COMP%]{display:flex;flex-direction:column}.person-name[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px}.person-role[_ngcontent-%COMP%]{color:#666;font-size:14px}.action-button[_ngcontent-%COMP%]{background-color:#1e88e5;color:#fff;border:none;border-radius:15px;padding:5px 15px;cursor:pointer}.test-drive[_ngcontent-%COMP%], .follow-up[_ngcontent-%COMP%]{background-color:#1e88e5}.show-more[_ngcontent-%COMP%]{text-align:center;margin-top:10px;color:#333;font-size:14px}.metrics-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;margin-left:-10px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:15px;min-width:120px;flex:1;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:20px;font-weight:700;color:#fff;margin-bottom:5px}.metric-label[_ngcontent-%COMP%]{color:#666;font-size:14px}.filters-row[_ngcontent-%COMP%]{display:flex;background-color:#fff;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a;align-items:center}.filters-title[_ngcontent-%COMP%]{font-weight:700;padding-top:10px}.time-filters[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-button[_ngcontent-%COMP%]{padding:6px 12px;cursor:pointer;font-size:14px}.select-container[_ngcontent-%COMP%]{position:relative;margin-left:auto}.sm-select[_ngcontent-%COMP%]{padding:6px 30px 6px 10px;border:1px solid #ddd;border-radius:4px;appearance:none;background-color:#fff;font-size:14px;cursor:pointer}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:12px}select[_ngcontent-%COMP%]{position:relative;z-index:1000}.dropdown-row[_ngcontent-%COMP%]{margin-bottom:150px}.modal[_ngcontent-%COMP%]{display:flex;position:fixed;z-index:1000;left:0;top:0;width:100%;height:100%;background-color:#00000080;justify-content:center;align-items:center}.modal-content[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:6px;max-width:400px;width:90%;box-shadow:0 5px 15px #0000004d;position:relative}.close[_ngcontent-%COMP%]{position:absolute;right:12px;top:8px;font-size:24px;font-weight:700;cursor:pointer}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0}[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}[_ngcontent-%COMP%]::-webkit-scrollbar-button:single-button{display:none;width:0;height:0}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0;width:0}.selected-user[_ngcontent-%COMP%]{background-color:#cce5ff;border:2px solid #3399ff;border-radius:8px;padding:5px;width:90px}.container-fluid[_ngcontent-%COMP%]{width:100%;padding:0 20px;margin:0 auto;box-sizing:border-box}@media only screen and (max-width: 600px){.metrics-row[_ngcontent-%COMP%]{width:100%!important;flex-direction:column!important;gap:10px!important}.metric-box[_ngcontent-%COMP%]{width:100%!important;box-sizing:border-box}.metric-box[_ngcontent-%COMP%]:last-child{width:100%!important}}@media (max-width: 600px){.performance-panels[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;margin-left:0!important;width:100%!important}.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%]{flex-direction:column!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{min-width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   h2.panel-title[_ngcontent-%COMP%]{text-align:center}}.table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{margin-top:20px!important;padding:10px!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px!important;font-size:14px}}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;padding:0 10px;margin-left:0!important;height:200px!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%!important;margin-top:20px!important;padding:0!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px 4px!important;font-size:14px}.performance-panel[_ngcontent-%COMP%]   .table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media screen and (max-width: 767px){.header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{box-sizing:border-box;max-width:100vw;overflow-x:hidden;padding-left:10px;padding-right:10px}.nav-buttons[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:10px;align-items:stretch;width:100%}.nav-button[_ngcontent-%COMP%]{width:100%;font-size:1rem;box-sizing:border-box}}  table.highlight-alt-rows tbody tr:nth-child(2n){background-color:#f3f9ff!important}  table.highlight-alt-rows tbody tr:nth-child(2n) td{background-color:#f3f9ff!important}  .highlight-alt-rows tbody tr:nth-child(1){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(1) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5) td{background-color:transparent!important}@media (max-width: 768px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important;margin-bottom:20px!important}.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;word-wrap:break-word;white-space:normal;margin-top:5px}.container[_ngcontent-%COMP%]{max-width:100%;padding-left:15px;padding-right:15px;margin-left:auto;margin-right:auto}}@media (max-width: 400px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, .profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{grid-template-columns:repeat(2,1fr)!important}}.user-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(15,1fr);gap:30px;margin-bottom:20px}@media (max-width: 768px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;margin-top:5px;word-wrap:break-word;white-space:normal}}@media (max-width: 400px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)!important}}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .dashboard-content[_ngcontent-%COMP%]{transition:margin-left .3s ease}.sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-container[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .header2[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-content[_ngcontent-%COMP%]{margin-left:7rem}.header2[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;background:#fff;padding:1rem;box-shadow:0 2px 4px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f5f5f5;padding:4px;border-radius:6px}.nav-button[_ngcontent-%COMP%]{background:#fff;border:none;font-weight:700;padding:8px 16px;cursor:pointer;border-radius:4px}@media (max-width: 768px){.nav-buttons[_ngcontent-%COMP%]{align-items:stretch}.nav-button[_ngcontent-%COMP%]{width:100%}}.filter-btn[_ngcontent-%COMP%]{padding:5px 12px;font-size:14px;border-radius:4px;border:1px solid #ccc;background-color:#fff;transition:all .3s ease;cursor:pointer;color:#333}.filter-btn[_ngcontent-%COMP%]:hover{background-color:#f2f2f2}.active-filter-today[_ngcontent-%COMP%], .active-filter-upcoming[_ngcontent-%COMP%]{background:linear-gradient(#222fb9);color:#fff}.avatar-color-1[_ngcontent-%COMP%]{background-color:#ffd3b6}.avatar-color-2[_ngcontent-%COMP%]{background-color:#caffbf}.avatar-color-3[_ngcontent-%COMP%]{background-color:#9bf6ff}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:9999!important}.header2-right[_ngcontent-%COMP%]   .header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{padding:15px 0;min-width:12.5rem;z-index:9999;position:absolute}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important}.nav-buttons[_ngcontent-%COMP%]{z-index:1000}.header2-profile[_ngcontent-%COMP%]{position:relative;z-index:9999}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:99999!important;top:100%;right:0;display:block}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important;z-index:auto!important}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.user-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin:8px;width:80px}.user-avatar[_ngcontent-%COMP%]{width:50px;height:50px;background-color:#f0f0f0;color:#126893;border-radius:50%;display:flex;align-items:center;justify-content:center;font-weight:700;font-size:18px;box-shadow:0 2px 6px #0000001a}.user-name[_ngcontent-%COMP%]{font-size:12px;text-align:center;margin-top:4px;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{background-color:#fff;border-radius:12px;padding:16px;box-shadow:0 4px 10px #00000014;text-align:center;margin-bottom:12px}.user-avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#c4fefb;color:#26eee4;font-weight:700;display:flex;align-items:center;justify-content:center;margin:0 auto 8px;font-size:25px}.user-name[_ngcontent-%COMP%]{font-size:14px;font-weight:500;color:#333}.header-box[_ngcontent-%COMP%]{background-color:#f4f6fb;padding:6px 10px;border-radius:8px;display:inline-flex;align-items:center;gap:6px;font-weight:600;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:max-content;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse;outline:none!important}.header-box1[_ngcontent-%COMP%], .header-box2[_ngcontent-%COMP%], .header-box3[_ngcontent-%COMP%], .header-box4[_ngcontent-%COMP%], .header-box5[_ngcontent-%COMP%], .header-box6[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:6px;padding:6px 8px;border-radius:12px;font-weight:400;color:#000;text-align:center;font-family:Poppins,sans-serif;white-space:normal}.pagination-container[_ngcontent-%COMP%]{margin-top:20px;display:flex;justify-content:center;align-items:center;gap:6px;flex-wrap:wrap}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ccc;background-color:#fff;color:#333;cursor:pointer;border-radius:6px;font-size:14px;transition:all .2s ease-in-out}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#222fb9;color:#fff;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.pagination-container[_ngcontent-%COMP%]   button.active-page[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:700;border-color:#222fb9}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:10px;border:none}.header-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:wrap;width:100%;margin-bottom:15px}.panel-title[_ngcontent-%COMP%]{font-size:25px;color:#313131;font-family:Poppins,sans-serif;font-weight:600;border-radius:20px;margin:0}.panel-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#000;font-weight:400;font-size:16px;margin:0}.dealer-select[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;border-radius:6px;border:1px solid #ccc;height:fit-content;margin-top:5px}.dropdown-wrapper[_ngcontent-%COMP%]{width:250px;border:1px solid #ccc;border-radius:6px;position:relative;background:#fff;cursor:pointer}.selected-value[_ngcontent-%COMP%]{padding:10px;display:flex;justify-content:space-between;align-items:center}.arrow[_ngcontent-%COMP%]{font-size:12px}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;width:100%;top:100%;left:0;right:0;border:1px solid #ccc;background:#fff;z-index:1000;border-radius:0 0 6px 6px;box-shadow:0 2px 6px #00000026;max-height:240px;overflow-y:auto;padding:0;margin:0}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:none;padding:10px 12px;transition:background .2s;cursor:pointer}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#f0f0f0}.user-dropdown[_ngcontent-%COMP%]{width:100%;max-width:300px;padding:10px 16px;border:none;border-radius:20px;background-color:#ebedf0;color:#333;font-size:16px;appearance:none;outline:none;cursor:pointer;box-shadow:0 2px 6px #0000001a;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{padding:8px;font-size:14px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-height:200px}  .custom-ng-select .ng-dropdown-panel{max-height:200px!important;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]{max-height:200px;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{white-space:nowrap}.radio-circle[_ngcontent-%COMP%]{width:16px;height:16px;border-radius:50%;border:2px solid currentColor;display:flex;align-items:center;justify-content:center}.radio-circle-inner[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:currentColor}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(1)   th[_ngcontent-%COMP%]{background-color:#fff!important}.table-wrapper[_ngcontent-%COMP%]{padding:20px}table[_ngcontent-%COMP%]{width:100%;border-collapse:separate;border-spacing:0 12px}td[_ngcontent-%COMP%]{background-color:#f9f9fb;text-align:center;font-weight:500;color:#000;border:none;padding:30px;transition:all .3s ease}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child{border-top-left-radius:12px;border-bottom-left-radius:12px}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child{border-top-right-radius:12px;border-bottom-right-radius:12px}.badge[_ngcontent-%COMP%]{padding:6px 14px;border-radius:8px;font-size:14px;font-weight:500;display:inline-block}.badge-upcoming[_ngcontent-%COMP%], .badge-enquiry[_ngcontent-%COMP%]{background-color:#d9f2e7;color:#177a47}.badge-coldcalls[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.badge-completed[_ngcontent-%COMP%]{background-color:#fef3c7;color:#b45309}.badge-overdue[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.nav-button[_ngcontent-%COMP%]{font-family:Poppins,sans-serif}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#1f2937}.filter-wrapper[_ngcontent-%COMP%]{background-color:#fff;border-radius:16px;box-shadow:0 4px 12px #0000000d;padding:15px 20px;width:fit-content;margin:20px}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f2f2f2;border-radius:50px;padding:5px 10px}.filter-btn[_ngcontent-%COMP%]{border:none;background:transparent;padding:6px 14px;border-radius:50px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.filter-btn.active[_ngcontent-%COMP%]{background-color:#fff;color:#2b45c7;border:2px solid #2b45c7}.filter-wrapper[_ngcontent-%COMP%]{margin-top:20px;background:#fff;padding:10px;border-radius:8px;width:fit-content}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-btn[_ngcontent-%COMP%]{padding:6px 10px;border:none;background:#f0f0f0;border-radius:4px;cursor:pointer}.filter-btn.active[_ngcontent-%COMP%]{background-color:#126893;color:#fff}.no-bottom-border[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:none!important}.back-button[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:35px;color:#333;cursor:pointer;padding:4px 10px;transition:transform .2s ease,color .2s ease}.back-button[_ngcontent-%COMP%]:hover{transform:translate(-3px);color:#126893}.nav-button[_ngcontent-%COMP%]{background-color:transparent;color:#000;border:none;padding:10px 16px;font-weight:500;border-radius:6px;cursor:pointer;transition:background-color .2s ease-in-out}.nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb926;color:#000}.nav-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:100%;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}.active-filter[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}.pill-button[_ngcontent-%COMP%]{padding:6px 16px;border:none;border-radius:999px;font-family:Poppins,sans-serif;background-color:transparent;color:#000;font-weight:500;cursor:pointer;transition:background-color .3s ease}.pill-active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}@media (min-width: 768px) and (max-width: 1080px){.dashboard-container[_ngcontent-%COMP%]{padding:20px}}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:6px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f1f1;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#999}.user-card[_ngcontent-%COMP%]{flex:0 0 auto;min-width:80px;cursor:pointer}.user-row[_ngcontent-%COMP%]{position:relative}.user-row[_ngcontent-%COMP%]:after{content:"";position:absolute;right:0;top:0;bottom:0;width:20px;background:linear-gradient(to right,transparent,rgba(255,255,255,.8));pointer-events:none;z-index:1}.dashboard-container[_ngcontent-%COMP%]{padding:10px}@media (max-width: 991.98px){.performance-panels[_ngcontent-%COMP%]{flex-direction:column}}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{padding:10px!important;margin:0 auto}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:#fff;font-size:1.2rem;border:none!important;font-weight:700;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:#fff;box-shadow:0 4px 6px #0000001a}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;font-family:Poppins,sans-serif;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4;font-family:Poppins,sans-serif}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#cfe8fc,#a0cfff);font-family:Poppins,sans-serif;font-size:1rem;font-weight:500;padding-left:60px;color:#000;border-radius:5px;transition:background .3s ease}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:linear-gradient(135deg,#b6dcf8,#87c5f5);cursor:pointer}.accordion-header[_ngcontent-%COMP%]:hover{transform:translateY(-2px)}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;transition:max-height .4s ease;background:#fffffff2;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px}*[_ngcontent-%COMP%]{margin:0;padding:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;background:linear-gradient(135deg,#667eea,#764ba2);min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto}.dashboard-header[_ngcontent-%COMP%]{text-align:center;color:#fff;margin-bottom:30px}.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:300;text-shadow:0 2px 4px rgba(0,0,0,.3)}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;padding:15px 20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.pagination-info[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.pagination-controls[_ngcontent-%COMP%]{display:flex;gap:10px}.pagination-btn[_ngcontent-%COMP%]{padding:8px 15px;background:#fff3;border:1px solid rgba(255,255,255,.3);border-radius:5px;color:#fff;cursor:pointer;transition:all .3s ease}.pagination-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:#ffffff4d}.pagination-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.pagination-btn.active[_ngcontent-%COMP%]{background:#fff6;font-weight:700}.accordion[_ngcontent-%COMP%]{margin-bottom:15px;border-radius:12px;overflow:hidden;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);border:1px solid rgba(255,255,255,.2)}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:700;color:#036;border:1px solid #b3d4ff;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{cursor:pointer}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif;box-shadow:0 8px 32px #0000001a}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4}.accordion-header[_ngcontent-%COMP%]{padding:20px 30px;cursor:pointer;display:flex;justify-content:space-between;align-items:center;color:#fff;transition:all .3s ease;position:relative}.accordion-header.active[_ngcontent-%COMP%]{box-shadow:inset 0 2px 4px #0003}.accordion-toggle[_ngcontent-%COMP%]{background:#fff3;border:none;width:30px;height:30px;border-radius:50%;color:#fff;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .3s ease}.accordion-toggle[_ngcontent-%COMP%]:hover{background:#ffffff4d}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;box-shadow:0 8px 32px #0000001a;transition:max-height .4s ease;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px;box-shadow:0 8px 32px #0000001a}.content-wrapper[_ngcontent-%COMP%]{padding:30px}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px 8px;background:#fff3;border-radius:12px;font-size:.75rem;font-weight:500;margin-right:10px}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:15px;margin-bottom:25px;padding:20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.filter-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:5px}.filter-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.85rem;color:#666;font-weight:500}.filter-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .filter-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:8px 12px;border:1px solid #ddd;border-radius:6px;font-size:.9rem;min-width:120px}.table-container[_ngcontent-%COMP%]{overflow-x:auto;border-radius:10px;box-shadow:0 4px 15px #0000001a;margin-bottom:20px}.call-logs-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background:#fff}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .call-logs-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:left;border-bottom:1px solid #eee}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background:linear-gradient(135deg,#f8f9fa,#e9ecef);font-weight:600;color:#495057;font-size:.9rem;position:sticky;top:0}.call-logs-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.status-badge[_ngcontent-%COMP%]{padding:4px 10px;border-radius:20px;font-size:.8rem;font-weight:500}.status-connected[_ngcontent-%COMP%]{background:#d4edda;color:#155724}.status-missed[_ngcontent-%COMP%]{background:#f8d7da;color:#721c24}.status-rejected[_ngcontent-%COMP%]{background:#f1f3f4;color:#5f6368}.status-enquiry[_ngcontent-%COMP%]{background:#e7f3ff;color:#06c}.status-cold[_ngcontent-%COMP%]{background:#fff3cd;color:#856404}.duration[_ngcontent-%COMP%]{font-family:monospace;font-weight:500}.table-pagination[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:10px;padding:15px;background:#fff;border-top:1px solid #eee}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ddd;background:#fff;border-radius:4px;cursor:pointer;font-size:.85rem}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background:#f8f9fa}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.table-pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background:#007bff;color:#fff;border-color:#007bff}@media (max-width: 768px){.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2rem}.accordion-header[_ngcontent-%COMP%]{padding:15px 20px;font-size:.95rem}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%], .accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{padding-left:30px}.content-wrapper[_ngcontent-%COMP%]{padding:20px}.kpi-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(auto-fit,minmax(140px,1fr));gap:12px}.filters[_ngcontent-%COMP%]{flex-direction:column}.pagination-container[_ngcontent-%COMP%]{flex-direction:column;gap:10px;text-align:center}}.loading[_ngcontent-%COMP%]{display:inline-block;width:20px;height:20px;border:2px solid rgba(255,255,255,.3);border-radius:50%;border-top-color:#fff;animation:_ngcontent-%COMP%_spin 1s ease-in-out infinite}@keyframes _ngcontent-%COMP%_spin{to{transform:rotate(360deg)}}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(7,1fr);gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease;min-width:0}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px;background-color:#fff;border:2px solid #222fb9;border-radius:15px;font-size:12px;font-weight:600;color:#222fb9}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-3px)}.kpi-value[_ngcontent-%COMP%]{font-size:1.8rem;font-weight:700;margin-bottom:5px}.kpi-label[_ngcontent-%COMP%]{font-size:.85rem;opacity:.9}@media (max-width: 1366px){.kpi-card[_ngcontent-%COMP%]{padding:12px 8px}.kpi-value[_ngcontent-%COMP%]{font-size:1.5rem}.kpi-label[_ngcontent-%COMP%]{font-size:.75rem}}@media (max-width: 1024px){.kpi-grid[_ngcontent-%COMP%]{gap:8px}.kpi-card[_ngcontent-%COMP%]{padding:10px 6px}.kpi-value[_ngcontent-%COMP%]{font-size:1.3rem}.kpi-label[_ngcontent-%COMP%]{font-size:.7rem}}.shadow-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;margin-top:10px;background-color:#fff;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .shadow-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f4f4f4;font-weight:700}.dealer-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden;background:linear-gradient(135deg,#f8f9fa,#e9ecef);margin-top:15px;font-family:Arial,sans-serif}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .dealer-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:center}.dealer-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{background-color:#f0f0f0}.dealer-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.dealer-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f7ff}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#333}.show-more-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:15px 0}.show-more-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;border:none;padding:8px 20px;border-radius:8px;cursor:pointer;font-size:14px;font-weight:500;transition:background-color .3s ease,transform .2s ease}.show-more-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}.pagination-center[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:8px;margin-top:15px}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #007bff;background-color:#fff;color:#007bff;cursor:pointer;border-radius:4px;transition:all .2s}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#007bff;color:#fff}.pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;font-weight:700}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.expand-row[_ngcontent-%COMP%]{background-color:#f8f9fa}.expanded-content[_ngcontent-%COMP%]{padding:20px;border-left:4px solid #007bff;margin:10px;background-color:#fff;border-radius:6px;box-shadow:0 2px 4px #0000000d}.expanded-content[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin:0}.expanded-content[_ngcontent-%COMP%]   .col-md-4[_ngcontent-%COMP%]{margin-bottom:15px}.expanded-content[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:#495057;font-size:13px}.orders-table-container[_ngcontent-%COMP%]{border-radius:8px;overflow:hidden;margin:20px 0;max-width:100%}.table[_ngcontent-%COMP%]{margin-bottom:0;font-size:14px}.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;font-weight:600;font-size:12px;text-transform:uppercase;letter-spacing:.5px;border-bottom:1px solid #dee2e6;padding:16px 12px;white-space:nowrap}.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:16px 12px;vertical-align:middle;border-bottom:1px solid #f1f3f4}.order-row[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.order-id[_ngcontent-%COMP%]{font-weight:600;color:#495057}.created-time[_ngcontent-%COMP%]{color:#6c757d}.customer-name[_ngcontent-%COMP%]{font-weight:500;color:#212529}.total-amount[_ngcontent-%COMP%], .profit-amount[_ngcontent-%COMP%]{font-weight:600;color:#212529}.status-badge[_ngcontent-%COMP%]{padding:6px 12px;border-radius:20px;font-size:12px;font-weight:500;text-transform:capitalize}.status-pending[_ngcontent-%COMP%]{background-color:#fff3cd;color:#856404}.status-confirmed[_ngcontent-%COMP%]{background-color:#cce5ff;color:#06c}.status-shipped[_ngcontent-%COMP%]{background-color:#d4edda;color:#155724}.status-rejected[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24}.btn-plus[_ngcontent-%COMP%]{background:none;border:none;color:#6c757d;font-size:16px;cursor:pointer;padding:8px;border-radius:50%;transition:all .2s ease;display:flex;align-items:center;justify-content:center;width:32px;height:32px}.btn-plus[_ngcontent-%COMP%]:hover{background-color:#e9ecef;color:#495057}.btn-plus[_ngcontent-%COMP%]:focus{outline:2px solid #007bff;outline-offset:2px}.action-cell[_ngcontent-%COMP%]{text-align:center;width:60px}@media (max-width: 768px){.table-responsive[_ngcontent-%COMP%]{font-size:12px}.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 8px}}.filter-btn[_ngcontent-%COMP%]{border-radius:20px;padding:6px 16px;font-size:14px;font-weight:500;border:1px solid #0d6efd;background-color:#fff;color:#0d6efd;box-sizing:border-box}.filter-btn.active[_ngcontent-%COMP%], .filter-btn[_ngcontent-%COMP%]:hover{background-color:#0d6efd;color:#fff;border:1px solid #0d6efd}.icon-btn[_ngcontent-%COMP%]{border:none;outline:none;background:#f8f9fa;border-radius:8px;padding:6px 10px;cursor:pointer;transition:all .2s ease-in-out;box-shadow:0 1px 3px #0000001a}.icon-btn[_ngcontent-%COMP%]:hover{background:#e9ecef}.icon-btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:16px;color:#0d6efd}.filter-btn[_ngcontent-%COMP%]{background-color:#fff;color:#222fb9;border:1px solid #222fb9}.filter-btn.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;border-color:#222fb9}.filter-btn[_ngcontent-%COMP%]:hover{background-color:#1b26a0;color:#fff}.btn-sm[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;padding:5px;border-radius:10px}',
    ],
  });
};
var iu = class n {
  isSessionStorageAvailable() {
    return typeof window < "u" && typeof sessionStorage < "u";
  }
  getItem(t) {
    return this.isSessionStorageAvailable() ? sessionStorage.getItem(t) : null;
  }
  setItem(t, e) {
    this.isSessionStorageAvailable() && sessionStorage.setItem(t, e);
  }
  removeItem(t) {
    this.isSessionStorageAvailable() && sessionStorage.removeItem(t);
  }
  clear() {
    this.isSessionStorageAvailable() && sessionStorage.clear();
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ze = class n {
  constructor(t, e) {
    this.http = t;
    this.storageService = e;
  }
  apiUrl = "https://uat.smartassistapp.in/api/
superAdmin/";
  getAuthHeaders() {
    let t = this.storageService.getItem("token");
    return (
      console.log("Retrieved Token:", t),
      new vt()
        .set("authorization", `Bearer ${t}`)
        .set("accept", "application/json")
    );
  }
  getAllDealer() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "dealers/all", { headers: t });
  }
  getDealerById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}`, { headers: e });
  }
  getCustomerById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}accounts/${t}`, { headers: e });
  }
  getTeamById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}teams/${t}`, { headers: e });
  }
  getVehicleById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}vehicles/${t}`, { headers: e });
  }
  getUserById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}users/${t}`, { headers: e });
  }
  getAllUser(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/users/all`, {
      headers: e,
    });
  }
  getAllLead(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/leads/all`, {
      headers: e,
    });
  }
  getAllTask(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/tasks/all`, {
      headers: e,
    });
  }
  getEventsAll(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/events/t-drives/all`, {
      headers: e,
    });
  }
  getAllOpportunities(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/opportunities/all`, {
      headers: e,
    });
  }
  updateDealer(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}dealers/${t.dealer_id}/update`, t, {
      headers: e,
    });
  }
  createDealer(t) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "dealers/create", t, { headers: e });
  }
  deleteDealer(t) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}dealers/${t}/delete`,
      {},
      { headers: e }
    );
  }
  getAllVehicle() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "vehicles/all", { headers: t });
  }
  getSingleVehicle(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/vehicles/${t}`, { headers: e });
  }
  createNewVehicle(t) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "vehicles/create", t, { headers: e });
  }
  deleteVehicle(t) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}vehicles/${t}/delete`,
      {},
      { headers: e }
    );
  }
  updateVehicle(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}vehicles/${t.vehicle_id}/update`, t, {
      headers: e,
    });
  }
  eventById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}events/${t}`, { headers: e });
  }
  leadById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}leads/${t}`, { headers: e });
  }
  userById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/users/all`, {
      headers: e,
    });
  }
  oppById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}opportunities/${t}`, { headers: e });
  }
  taskById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}tasks/${t}`, { headers: e });
  }
  getMultipleUser() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "users/all", { headers: t });
  }
  getMultipleTeams() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: t });
  }
  createNewUser(t) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "users/create", t, { headers: e });
  }
  createNewTeam(t) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "teams/new", t, { headers: e });
  }
  updateUser(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${t.user_id}/update`, t, {
      headers: e,
    });
  }
  updateTeam(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${t.team_id}/update`, t, {
      headers: e,
    });
  }
  getSingleUser(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/users/${t}`, { headers: e });
  }
  getAllTeams() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: t });
  }
  deleteUser(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${t}/delete`, {}, { headers: e });
  }
  deleteTeam(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${t}/delete`, {}, { headers: e });
  }
  getAllCustomer() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "accounts/all", { headers: t });
  }
  getSingleAccount(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/accounts/${t}`, { headers: e });
  }
  createCustomer(t) {
    let e = this.getAuthHeaders();
    return this.http.post(`${this.apiUrl}accounts/create`, t, { headers: e });
  }
  updateCustomer(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}accounts/${t.account_id}/update`, t, {
      headers: e,
    });
  }
  deleteCustomer(t) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}accounts/${t}/delete`,
      {},
      { headers: e }
    );
  }
  getProfileData() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "show-profile", { headers: t });
  }
  getAllRole() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "role/all", { headers: t });
  }
  createRole(t) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "roles/new", t, { headers: e });
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(li), Z(iu));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ar = class n {
  dealer_id;
  dealer_name;
  dealer_code;
  dealer_email;
  corporate_id;
  constructor() {
    (this.dealer_id = ""),
      (this.dealer_name = ""),
      (this.dealer_code = null),
      (this.corporate_id = ""),
      (this.dealer_email = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var d1 = ["toast-component", ""];
function MI(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 5),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.remove());
      }),
      h(1, "span", 6),
      f(2, "\xD7"),
      u()();
  }
}
function TI(n, t) {
  if ((n & 1 && (Qe(0), f(1), Xe()), n & 2)) {
    let e = E(2);
    g(), ae("[", e.duplicatesCount + 1, "]");
  }
}
function EI(n, t) {
  if (
    (n & 1 && (h(0, "div"), f(1), F(2, TI, 2, 1, "ng-container", 4), u()),
    n & 2)
  ) {
    let e = E();
    Ue(e.options.titleClass),
      de("aria-label", e.title),
      g(),
      ae(" ", e.title, " "),
      g(),
      M("ngIf", e.duplicatesCount);
  }
}
function kI(n, t) {
  if ((n & 1 && W(0, "div", 7), n & 2)) {
    let e = E();
    Ue(e.options.messageClass), M("innerHTML", e.message, Cs);
  }
}
function II(n, t) {
  if ((n & 1 && (h(0, "div", 8), f(1), u()), n & 2)) {
    let e = E();
    Ue(e.options.messageClass),
      de("aria-label", e.message),
      g(),
      ae(" ", e.message, " ");
  }
}
function OI(n, t) {
  if ((n & 1 && (h(0, "div"), W(1, "div", 9), u()), n & 2)) {
    let e = E();
    g(), Bi("width", e.width() + "%");
  }
}
function PI(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 5),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.remove());
      }),
      h(1, "span", 6),
      f(2, "\xD7"),
      u()();
  }
}
function AI(n, t) {
  if ((n & 1 && (Qe(0), f(1), Xe()), n & 2)) {
    let e = E(2);
    g(), ae("[", e.duplicatesCount + 1, "]");
  }
}
function RI(n, t) {
  if (
    (n & 1 && (h(0, "div"), f(1), F(2, AI, 2, 1, "ng-container", 4), u()),
    n & 2)
  ) {
    let e = E();
    Ue(e.options.titleClass),
      de("aria-label", e.title),
      g(),
      ae(" ", e.title, " "),
      g(),
      M("ngIf", e.duplicatesCount);
  }
}
function FI(n, t) {
  if ((n & 1 && W(0, "div", 7), n & 2)) {
    let e = E();
    Ue(e.options.messageClass), M("innerHTML", e.message, Cs);
  }
}
function NI(n, t) {
  if ((n & 1 && (h(0, "div", 8), f(1), u()), n & 2)) {
    let e = E();
    Ue(e.options.messageClass),
      de("aria-label", e.message),
      g(),
      ae(" ", e.message, " ");
  }
}
function LI(n, t) {
  if ((n & 1 && (h(0, "div"), W(1, "div", 9), u()), n & 2)) {
    let e = E();
    g(), Bi("width", e.width() + "%");
  }
}
var mf = class {
    _attachedHost;
    component;
    viewContainerRef;
    injector;
    constructor(t, e) {
      (this.component = t), (this.injector = e);
    }
    attach(t, e) {
      return (this._attachedHost = t), t.attach(this, e);
    }
    detach() {
      let t = this._attachedHost;
      if (t) return (this._attachedHost = void 0), t.detach();
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(t) {
      this._attachedHost = t;
    }
  },
  ff = class {
    _attachedPortal;
    _disposeFn;
    attach(t, e) {
      return (this._attachedPortal = t), this.attachComponentPortal(t, e);
    }
    detach() {
      this._attachedPortal && this._attachedPortal.setAttachedHost(),
        (this._attachedPortal = void 0),
        this._disposeFn && (this._disposeFn(), (this._disposeFn = void 0));
    }
    setDisposeFn(t) {
      this._disposeFn = t;
    }
  },
  gf = class {
    _overlayRef;
    componentInstance;
    duplicatesCount = 0;
    _afterClosed = new Ie();
    _activate = new Ie();
    _manualClose = new Ie();
    _resetTimeout = new Ie();
    _countDuplicate = new Ie();
    constructor(t) {
      this._overlayRef = t;
    }
    manualClose() {
      this._manualClose.next(), this._manualClose.complete();
    }
    manualClosed() {
      return this._manualClose.asObservable();
    }
    timeoutReset() {
      return this._resetTimeout.asObservable();
    }
    countDuplicate() {
      return this._countDuplicate.asObservable();
    }
    close() {
      this._overlayRef.detach(),
        this._afterClosed.next(),
        this._manualClose.next(),
        this._afterClosed.complete(),
        this._manualClose.complete(),
        this._activate.complete(),
        this._resetTimeout.complete(),
        this._countDuplicate.complete();
    }
    afterClosed() {
      return this._afterClosed.asObservable();
    }
    isInactive() {
      return this._activate.isStopped;
    }
    activate() {
      this._activate.next(), this._activate.complete();
    }
    afterActivate() {
      return this._activate.asObservable();
    }
    onDuplicate(t, e) {
      t && this._resetTimeout.next(),
        e && this._countDuplicate.next(++this.duplicatesCount);
    }
  },
  $a = class {
    toastId;
    config;
    message;
    title;
    toastType;
    toastRef;
    _onTap = new Ie();
    _onAction = new Ie();
    constructor(t, e, i, r, o, a) {
      (this.toastId = t),
        (this.config = e),
        (this.message = i),
        (this.title = r),
        (this.toastType = o),
        (this.toastRef = a),
        this.toastRef.afterClosed().subscribe(() => {
          this._onAction.complete(), this._onTap.complete();
        });
    }
    triggerTap() {
      this._onTap.next(), this.config.tapToDismiss && this._onTap.complete();
    }
    onTap() {
      return this._onTap.asObservable();
    }
    triggerAction(t) {
      this._onAction.next(t);
    }
    onAction() {
      return this._onAction.asObservable();
    }
  },
  u1 = {
    maxOpened: 0,
    autoDismiss: !1,
    newestOnTop: !0,
    preventDuplicates: !1,
    countDuplicates: !1,
    resetTimeoutOnDuplicate: !1,
    includeTitleDuplicates: !1,
    iconClasses: {
      error: "toast-error",
      info: "toast-info",
      success: "toast-success",
      warning: "toast-warning",
    },
    closeButton: !1,
    disableTimeOut: !1,
    timeOut: 5e3,
    extendedTimeOut: 1e3,
    enableHtml: !1,
    progressBar: !1,
    toastClass: "ngx-toastr",
    positionClass: "toast-top-right",
    titleClass: "toast-title",
    messageClass: "toast-message",
    easing: "ease-in",
    easeTime: 300,
    tapToDismiss: !0,
    onActivateTick: !1,
    progressAnimation: "decreasing",
  },
  h1 = new Me("ToastConfig"),
  _f = class extends ff {
    _hostDomElement;
    _componentFactoryResolver;
    _appRef;
    constructor(t, e, i) {
      super(),
        (this._hostDomElement = t),
        (this._componentFactoryResolver = e),
        (this._appRef = i);
    }
    attachComponentPortal(t, e) {
      let i = this._componentFactoryResolver.resolveComponentFactory(
          t.component
        ),
        r;
      return (
        (r = i.create(t.injector)),
        this._appRef.attachView(r.hostView),
        this.setDisposeFn(() => {
          this._appRef.detachView(r.hostView), r.destroy();
        }),
        e
          ? this._hostDomElement.insertBefore(
              this._getComponentRootNode(r),
              this._hostDomElement.firstChild
            )
          : this._hostDomElement.appendChild(this._getComponentRootNode(r)),
        r
      );
    }
    _getComponentRootNode(t) {
      return t.hostView.rootNodes[0];
    }
  },
  VI = (() => {
    class n {
      _document = G(Oe);
      _containerElement;
      ngOnDestroy() {
        this._containerElement &&
          this._containerElement.parentNode &&
          this._containerElement.parentNode.removeChild(this._containerElement);
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = this._document.createElement("div");
        e.classList.add("overlay-container"),
          e.setAttribute("aria-live", "polite"),
          this._document.body.appendChild(e),
          (this._containerElement = e);
      }
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  bf = class {
    _portalHost;
    constructor(t) {
      this._portalHost = t;
    }
    attach(t, e = !0) {
      return this._portalHost.attach(t, e);
    }
    detach() {
      return this._portalHost.detach();
    }
  },
  BI = (() => {
    class n {
      _overlayContainer = G(VI);
      _componentFactoryResolver = G(xo);
      _appRef = G(ji);
      _document = G(Oe);
      _paneElements = new Map();
      create(e, i) {
        return this._createOverlayRef(this.getPaneElement(e, i));
      }
      getPaneElement(e = "", i) {
        return (
          this._paneElements.get(i) || this._paneElements.set(i, {}),
          this._paneElements.get(i)[e] ||
            (this._paneElements.get(i)[e] = this._createPaneElement(e, i)),
          this._paneElements.get(i)[e]
        );
      }
      _createPaneElement(e, i) {
        let r = this._document.createElement("div");
        return (
          (r.id = "toast-container"),
          r.classList.add(e),
          r.classList.add("toast-container"),
          i
            ? i.getContainerElement().appendChild(r)
            : this._overlayContainer.getContainerElement().appendChild(r),
          r
        );
      }
      _createPortalHost(e) {
        return new _f(e, this._componentFactoryResolver, this._appRef);
      }
      _createOverlayRef(e) {
        return new bf(this._createPortalHost(e));
      }
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  ki = (() => {
    class n {
      overlay;
      _injector;
      sanitizer;
      ngZone;
      toastrConfig;
      currentlyActive = 0;
      toasts = [];
      overlayContainer;
      previousToastMessage;
      index = 0;
      constructor(e, i, r, o, a) {
        (this.overlay = i),
          (this._injector = r),
          (this.sanitizer = o),
          (this.ngZone = a),
          (this.toastrConfig = Q(Q({}, e.default), e.config)),
          e.config.iconClasses &&
            (this.toastrConfig.iconClasses = Q(
              Q({}, e.default.iconClasses),
              e.config.iconClasses
            ));
      }
      show(e, i, r = {}, o = "") {
        return this._preBuildNotification(o, e, i, this.applyConfig(r));
      }
      success(e, i, r = {}) {
        let o = this.toastrConfig.iconClasses.success || "";
        return this._preBuildNotification(o, e, i, this.applyConfig(r));
      }
      error(e, i, r = {}) {
        let o = this.toastrConfig.iconClasses.error || "";
        return this._preBuildNotification(o, e, i, this.applyConfig(r));
      }
      info(e, i, r = {}) {
        let o = this.toastrConfig.iconClasses.info || "";
        return this._preBuildNotification(o, e, i, this.applyConfig(r));
      }
      warning(e, i, r = {}) {
        let o = this.toastrConfig.iconClasses.warning || "";
        return this._preBuildNotification(o, e, i, this.applyConfig(r));
      }
      clear(e) {
        for (let i of this.toasts)
          if (e !== void 0) {
            if (i.toastId === e) {
              i.toastRef.manualClose();
              return;
            }
          } else i.toastRef.manualClose();
      }
      remove(e) {
        let i = this._findToast(e);
        if (
          !i ||
          (i.activeToast.toastRef.close(),
          this.toasts.splice(i.index, 1),
          (this.currentlyActive = this.currentlyActive - 1),
          !this.toastrConfig.maxOpened || !this.toasts.length)
        )
          return !1;
        if (
          this.currentlyActive < this.toastrConfig.maxOpened &&
          this.toasts[this.currentlyActive]
        ) {
          let r = this.toasts[this.currentlyActive].toastRef;
          r.isInactive() ||
            ((this.currentlyActive = this.currentlyActive + 1), r.activate());
        }
        return !0;
      }
      findDuplicate(e = "", i = "", r, o) {
        let { includeTitleDuplicates: a } = this.toastrConfig;
        for (let s of this.toasts) {
          let l = a && s.title === e;
          if ((!a || l) && s.message === i)
            return s.toastRef.onDuplicate(r, o), s;
        }
        return null;
      }
      applyConfig(e = {}) {
        return Q(Q({}, this.toastrConfig), e);
      }
      _findToast(e) {
        for (let i = 0; i < this.toasts.length; i++)
          if (this.toasts[i].toastId === e)
            return { index: i, activeToast: this.toasts[i] };
        return null;
      }
      _preBuildNotification(e, i, r, o) {
        return o.onActivateTick
          ? this.ngZone.run(() => this._buildNotification(e, i, r, o))
          : this._buildNotification(e, i, r, o);
      }
      _buildNotification(e, i, r, o) {
        if (!o.toastComponent) throw new Error("toastComponent required");
        let a = this.findDuplicate(
          r,
          i,
          this.toastrConfig.resetTimeoutOnDuplicate && o.timeOut > 0,
          this.toastrConfig.countDuplicates
        );
        if (
          ((this.toastrConfig.includeTitleDuplicates && r) || i) &&
          this.toastrConfig.preventDuplicates &&
          a !== null
        )
          return a;
        this.previousToastMessage = i;
        let s = !1;
        this.toastrConfig.maxOpened &&
          this.currentlyActive >= this.toastrConfig.maxOpened &&
          ((s = !0),
          this.toastrConfig.autoDismiss && this.clear(this.toasts[0].toastId));
        let l = this.overlay.create(o.positionClass, this.overlayContainer);
        this.index = this.index + 1;
        let d = i;
        i && o.enableHtml && (d = this.sanitizer.sanitize(br.HTML, i));
        let m = new gf(l),
          v = new $a(this.index, o, d, r, e, m),
          x = [{ provide: $a, useValue: v }],
          C = St.create({ providers: x, parent: this._injector }),
          S = new mf(o.toastComponent, C),
          T = l.attach(S, o.newestOnTop);
        m.componentInstance = T.instance;
        let k = {
          toastId: this.index,
          title: r || "",
          message: i || "",
          toastRef: m,
          onShown: m.afterActivate(),
          onHidden: m.afterClosed(),
          onTap: v.onTap(),
          onAction: v.onAction(),
          portal: T,
        };
        return (
          s ||
            ((this.currentlyActive = this.currentlyActive + 1),
            setTimeout(() => {
              k.toastRef.activate();
            })),
          this.toasts.push(k),
          k
        );
      }
      static ɵfac = function (i) {
        return new (i || n)(Z(h1), Z(BI), Z(St), Z(Xh), Z(Re));
      };
      static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  HI = (() => {
    class n {
      toastrService;
      toastPackage;
      ngZone;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = fe(-1);
      toastClasses = "";
      state;
      get _state() {
        return this.state();
      }
      get displayStyle() {
        if (this.state().value === "inactive") return "none";
      }
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, i, r) {
        (this.toastrService = e),
          (this.toastPackage = i),
          (this.ngZone = r),
          (this.message = i.message),
          (this.title = i.title),
          (this.options = i.config),
          (this.originalTimeout = i.config.timeOut),
          (this.toastClasses = `${i.toastType} ${i.config.toastClass}`),
          (this.sub = i.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = i.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = i.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = i.toastRef.countDuplicate().subscribe((o) => {
            this.duplicatesCount = o;
          })),
          (this.state = fe({
            value: "inactive",
            params: {
              easeTime: this.toastPackage.config.easeTime,
              easing: "ease-in",
            },
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.update((e) => Be(Q({}, e), { value: "active" })),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            (this.outsideTimeout(() => this.remove(), this.options.timeOut),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              this.outsideInterval(() => this.updateProgress(), 10));
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          i = this.hideTime - e;
        this.width.set((i / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((r) => 100 - r),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.update((e) => Be(Q({}, e), { value: "active" })),
          this.outsideTimeout(() => this.remove(), this.originalTimeout),
          (this.options.timeOut = this.originalTimeout),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10);
      }
      remove() {
        this.state().value !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.update((e) => Be(Q({}, e), { value: "removed" })),
          this.outsideTimeout(
            () => this.toastrService.remove(this.toastPackage.toastId),
            +this.toastPackage.config.easeTime
          ));
      }
      tapToast() {
        this.state().value !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state().value !== "removed" &&
          this.options.disableTimeOut !== "extendedTimeOut" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state().value === "removed" ||
          (this.outsideTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          ),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10));
      }
      outsideTimeout(e, i) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.timeout = setTimeout(() => this.runInsideAngular(e), i))
            )
          : (this.timeout = setTimeout(() => e(), i));
      }
      outsideInterval(e, i) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.intervalId = setInterval(
                  () => this.runInsideAngular(e),
                  i
                ))
            )
          : (this.intervalId = setInterval(() => e(), i));
      }
      runInsideAngular(e) {
        this.ngZone ? this.ngZone.run(() => e()) : e();
      }
      static ɵfac = function (i) {
        return new (i || n)(H(ki), H($a), H(Re));
      };
      static ɵcmp = le({
        type: n,
        selectors: [["", "toast-component", ""]],
        hostVars: 5,
        hostBindings: function (i, r) {
          i & 1 &&
            U("click", function () {
              return r.tapToast();
            })("mouseenter", function () {
              return r.stickAround();
            })("mouseleave", function () {
              return r.delayedHideToast();
            }),
            i & 2 &&
              (_c("@flyInOut", r._state),
              Ue(r.toastClasses),
              Bi("display", r.displayStyle));
        },
        standalone: !0,
        features: [ue],
        attrs: d1,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (i, r) {
          i & 1 &&
            F(0, MI, 3, 0, "button", 0)(1, EI, 3, 5, "div", 1)(
              2,
              kI,
              1,
              3,
              "div",
              2
            )(3, II, 2, 4, "div", 3)(4, OI, 2, 2, "div", 4),
            i & 2 &&
              (M("ngIf", r.options.closeButton),
              g(),
              M("ngIf", r.title),
              g(),
              M("ngIf", r.message && r.options.enableHtml),
              g(),
              M("ngIf", r.message && !r.options.enableHtml),
              g(),
              M("ngIf", r.options.progressBar));
        },
        dependencies: [rt],
        encapsulation: 2,
        data: {
          animation: [
            wo("flyInOut", [
              yr("inactive", ai({ opacity: 0 })),
              yr("active", ai({ opacity: 1 })),
              yr("removed", ai({ opacity: 0 })),
              tn("inactive => active", en("{{ easeTime }}ms {{ easing }}")),
              tn("active => removed", en("{{ easeTime }}ms {{ easing }}")),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return n;
  })(),
  jI = Be(Q({}, u1), { toastComponent: HI }),
  UI = (n = {}) => Qn([{ provide: h1, useValue: { default: jI, config: n } }]),
  p1 = (() => {
    class n {
      static forRoot(e = {}) {
        return { ngModule: n, providers: [UI(e)] };
      }
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = we({ type: n });
      static ɵinj = Ce({});
    }
    return n;
  })();
var zI = (() => {
    class n {
      toastrService;
      toastPackage;
      appRef;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = fe(-1);
      toastClasses = "";
      get displayStyle() {
        return this.state() === "inactive" ? "none" : null;
      }
      state = fe("inactive");
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, i, r) {
        (this.toastrService = e),
          (this.toastPackage = i),
          (this.appRef = r),
          (this.message = i.message),
          (this.title = i.title),
          (this.options = i.config),
          (this.originalTimeout = i.config.timeOut),
          (this.toastClasses = `${i.toastType} ${i.config.toastClass}`),
          (this.sub = i.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = i.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = i.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = i.toastRef.countDuplicate().subscribe((o) => {
            this.duplicatesCount = o;
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.set("active"),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            ((this.timeout = setTimeout(() => {
              this.remove();
            }, this.options.timeOut)),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              (this.intervalId = setInterval(() => this.updateProgress(), 10))),
          this.options.onActivateTick && this.appRef.tick();
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          i = this.hideTime - e;
        this.width.set((i / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((r) => 100 - r),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.set("active"),
          (this.options.timeOut = this.originalTimeout),
          (this.timeout = setTimeout(
            () => this.remove(),
            this.originalTimeout
          )),
          (this.hideTime = new Date().getTime() + (this.originalTimeout || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10));
      }
      remove() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.set("removed"),
          (this.timeout = setTimeout(() =>
            this.toastrService.remove(this.toastPackage.toastId)
          )));
      }
      tapToast() {
        this.state() !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state() === "removed" ||
          ((this.timeout = setTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          )),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10)));
      }
      static ɵfac = function (i) {
        return new (i || n)(H(ki), H($a), H(ji));
      };
      static ɵcmp = le({
        type: n,
        selectors: [["", "toast-component", ""]],
        hostVars: 4,
        hostBindings: function (i, r) {
          i & 1 &&
            U("click", function () {
              return r.tapToast();
            })("mouseenter", function () {
              return r.stickAround();
            })("mouseleave", function () {
              return r.delayedHideToast();
            }),
            i & 2 && (Ue(r.toastClasses), Bi("display", r.displayStyle));
        },
        standalone: !0,
        features: [ue],
        attrs: d1,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (i, r) {
          i & 1 &&
            F(0, PI, 3, 0, "button", 0)(1, RI, 3, 5, "div", 1)(
              2,
              FI,
              1,
              3,
              "div",
              2
            )(3, NI, 2, 4, "div", 3)(4, LI, 2, 2, "div", 4),
            i & 2 &&
              (M("ngIf", r.options.closeButton),
              g(),
              M("ngIf", r.title),
              g(),
              M("ngIf", r.message && r.options.enableHtml),
              g(),
              M("ngIf", r.message && !r.options.enableHtml),
              g(),
              M("ngIf", r.options.progressBar));
        },
        dependencies: [rt],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })(),
  G4 = Be(Q({}, u1), { toastComponent: zI });
var GI = ["*"];
var YI = ["dialog"];
var m1 = { animation: !0, transitionTimerDelayMs: 5 },
  qI = (() => {
    class n {
      constructor() {
        this.animation = m1.animation;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function KI(n) {
  let { transitionDelay: t, transitionDuration: e } =
      window.getComputedStyle(n),
    i = parseFloat(t),
    r = parseFloat(e);
  return (i + r) * 1e3;
}
function f1(n) {
  return typeof n == "string";
}
function vf(n) {
  return n != null;
}
function QI(n) {
  return n && n.then;
}
function g1(n) {
  return (n || document.body).getBoundingClientRect();
}
function XI(n) {
  return (t) =>
    new Yn((e) => {
      let i = (a) => n.run(() => e.next(a)),
        r = (a) => n.run(() => e.error(a)),
        o = () => n.run(() => e.complete());
      return t.subscribe({ next: i, error: r, complete: o });
    });
}
var ZI = () => {},
  { transitionTimerDelayMs: JI } = m1,
  nu = new Map(),
  Ho = (n, t, e, i) => {
    let r = i.context || {},
      o = nu.get(t);
    if (o)
      switch (i.runningTransition) {
        case "continue":
          return qn;
        case "stop":
          n.run(() => o.transition$.complete()),
            (r = Object.assign(o.context, r)),
            nu.delete(t);
      }
    let a = e(t, i.animation, r) || ZI;
    if (
      !i.animation ||
      window.getComputedStyle(t).transitionProperty === "none"
    )
      return n.run(() => a()), be(void 0).pipe(XI(n));
    let s = new Ie(),
      l = new Ie(),
      d = s.pipe(u_(!0));
    nu.set(t, {
      transition$: s,
      complete: () => {
        l.next(), l.complete();
      },
      context: r,
    });
    let m = KI(t);
    return (
      n.runOutsideAngular(() => {
        let v = En(t, "transitionend").pipe(
            Ut(d),
            Ot(({ target: C }) => C === t)
          ),
          x = l_(m + JI).pipe(Ut(d));
        c_(x, v, l)
          .pipe(Ut(d))
          .subscribe(() => {
            nu.delete(t),
              n.run(() => {
                a(), s.next(), s.complete();
              });
          });
      }),
      s.asObservable()
    );
  };
var D5 = (() => {
  let n = () =>
      /iPad|iPhone|iPod/.test(navigator.userAgent) ||
      (/Macintosh/.test(navigator.userAgent) &&
        navigator.maxTouchPoints &&
        navigator.maxTouchPoints > 2),
    t = () => /Android/.test(navigator.userAgent);
  return typeof navigator < "u" ? !!navigator.userAgent && (n() || t()) : !1;
})();
var eO = [
  "a[href]",
  "button:not([disabled])",
  'input:not([disabled]):not([type="hidden"])',
  "select:not([disabled])",
  "textarea:not([disabled])",
  "[contenteditable]",
  '[tabindex]:not([tabindex="-1"])',
].join(", ");
function _1(n) {
  let t = Array.from(n.querySelectorAll(eO)).filter((e) => e.tabIndex !== -1);
  return [t[0], t[t.length - 1]];
}
var tO = (n, t, e, i = !1) => {
  n.runOutsideAngular(() => {
    let r = En(t, "focusin").pipe(
      Ut(e),
      Ke((o) => o.target)
    );
    En(t, "keydown")
      .pipe(
        Ut(e),
        Ot((o) => o.key === "Tab"),
        Ch(r)
      )
      .subscribe(([o, a]) => {
        let [s, l] = _1(t);
        (a === s || a === t) && o.shiftKey && (l.focus(), o.preventDefault()),
          a === l && !o.shiftKey && (s.focus(), o.preventDefault());
      }),
      i &&
        En(t, "click")
          .pipe(
            Ut(e),
            Ch(r),
            Ke((o) => o[1])
          )
          .subscribe((o) => o.focus());
  });
};
var S5 = new Date(1882, 10, 12),
  M5 = new Date(2174, 10, 25);
var T5 = 1e3 * 60 * 60 * 24;
var Cf = 1080,
  iO = 24 * Cf,
  nO = 12 * Cf + 793,
  E5 = 29 * iO + nO,
  k5 = 11 * Cf + 204;
var rO = (() => {
    class n {
      constructor() {
        (this._ngbConfig = G(qI)),
          (this.backdrop = !0),
          (this.fullscreen = !1),
          (this.keyboard = !0);
      }
      get animation() {
        return this._animation ?? this._ngbConfig.animation;
      }
      set animation(e) {
        this._animation = e;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Wa = class {
    constructor(t, e, i) {
      (this.nodes = t), (this.viewRef = e), (this.componentRef = i);
    }
  };
var oO = (() => {
    class n {
      constructor() {
        this._document = G(Oe);
      }
      hide() {
        let e = Math.abs(
            window.innerWidth - this._document.documentElement.clientWidth
          ),
          i = this._document.body,
          r = i.style,
          { overflow: o, paddingRight: a } = r;
        if (e > 0) {
          let s = parseFloat(window.getComputedStyle(i).paddingRight);
          r.paddingRight = `${s + e}px`;
        }
        return (
          (r.overflow = "hidden"),
          () => {
            e > 0 && (r.paddingRight = a), (r.overflow = o);
          }
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  aO = (() => {
    class n {
      constructor() {
        (this._nativeElement = G(Ve).nativeElement),
          (this._zone = G(Re)),
          (this._injector = G(St));
      }
      ngOnInit() {
        kn(
          () =>
            Ho(
              this._zone,
              this._nativeElement,
              (e, i) => {
                i && g1(e), e.classList.add("show");
              },
              { animation: this.animation, runningTransition: "continue" }
            ),
          { injector: this._injector, phase: Eh.MixedReadWrite }
        );
      }
      hide() {
        return Ho(
          this._zone,
          this._nativeElement,
          ({ classList: e }) => e.remove("show"),
          { animation: this.animation, runningTransition: "stop" }
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["ngb-modal-backdrop"]],
          hostAttrs: [2, "z-index", "1055"],
          hostVars: 6,
          hostBindings: function (i, r) {
            i & 2 &&
              (Ue(
                "modal-backdrop" +
                  (r.backdropClass ? " " + r.backdropClass : "")
              ),
              Te("show", !r.animation)("fade", r.animation));
          },
          inputs: { animation: "animation", backdropClass: "backdropClass" },
          standalone: !0,
          features: [ue],
          decls: 0,
          vars: 0,
          template: function (i, r) {},
          encapsulation: 2,
        });
      }
    }
    return n;
  })(),
  ru = class {
    update(t) {}
    close(t) {}
    dismiss(t) {}
  },
  sO = [
    "animation",
    "ariaLabelledBy",
    "ariaDescribedBy",
    "backdrop",
    "centered",
    "fullscreen",
    "keyboard",
    "scrollable",
    "size",
    "windowClass",
    "modalDialogClass",
  ],
  lO = ["animation", "backdropClass"],
  yf = class {
    _applyWindowOptions(t, e) {
      sO.forEach((i) => {
        vf(e[i]) && (t[i] = e[i]);
      });
    }
    _applyBackdropOptions(t, e) {
      lO.forEach((i) => {
        vf(e[i]) && (t[i] = e[i]);
      });
    }
    update(t) {
      this._applyWindowOptions(this._windowCmptRef.instance, t),
        this._backdropCmptRef &&
          this._backdropCmptRef.instance &&
          this._applyBackdropOptions(this._backdropCmptRef.instance, t);
    }
    get componentInstance() {
      if (this._contentRef && this._contentRef.componentRef)
        return this._contentRef.componentRef.instance;
    }
    get closed() {
      return this._closed.asObservable().pipe(Ut(this._hidden));
    }
    get dismissed() {
      return this._dismissed.asObservable().pipe(Ut(this._hidden));
    }
    get hidden() {
      return this._hidden.asObservable();
    }
    get shown() {
      return this._windowCmptRef.instance.shown.asObservable();
    }
    constructor(t, e, i, r) {
      (this._windowCmptRef = t),
        (this._contentRef = e),
        (this._backdropCmptRef = i),
        (this._beforeDismiss = r),
        (this._closed = new Ie()),
        (this._dismissed = new Ie()),
        (this._hidden = new Ie()),
        t.instance.dismissEvent.subscribe((o) => {
          this.dismiss(o);
        }),
        (this.result = new Promise((o, a) => {
          (this._resolve = o), (this._reject = a);
        })),
        this.result.then(null, () => {});
    }
    close(t) {
      this._windowCmptRef &&
        (this._closed.next(t), this._resolve(t), this._removeModalElements());
    }
    _dismiss(t) {
      this._dismissed.next(t), this._reject(t), this._removeModalElements();
    }
    dismiss(t) {
      if (this._windowCmptRef)
        if (!this._beforeDismiss) this._dismiss(t);
        else {
          let e = this._beforeDismiss();
          QI(e)
            ? e.then(
                (i) => {
                  i !== !1 && this._dismiss(t);
                },
                () => {}
              )
            : e !== !1 && this._dismiss(t);
        }
    }
    _removeModalElements() {
      let t = this._windowCmptRef.instance.hide(),
        e = this._backdropCmptRef
          ? this._backdropCmptRef.instance.hide()
          : be(void 0);
      t.subscribe(() => {
        let { nativeElement: i } = this._windowCmptRef.location;
        i.parentNode.removeChild(i),
          this._windowCmptRef.destroy(),
          this._contentRef?.viewRef?.destroy(),
          (this._windowCmptRef = null),
          (this._contentRef = null);
      }),
        e.subscribe(() => {
          if (this._backdropCmptRef) {
            let { nativeElement: i } = this._backdropCmptRef.location;
            i.parentNode.removeChild(i),
              this._backdropCmptRef.destroy(),
              (this._backdropCmptRef = null);
          }
        }),
        uc(t, e).subscribe(() => {
          this._hidden.next(), this._hidden.complete();
        });
    }
  },
  xf = (function (n) {
    return (
      (n[(n.BACKDROP_CLICK = 0)] = "BACKDROP_CLICK"),
      (n[(n.ESC = 1)] = "ESC"),
      n
    );
  })(xf || {}),
  cO = (() => {
    class n {
      constructor() {
        (this._document = G(Oe)),
          (this._elRef = G(Ve)),
          (this._zone = G(Re)),
          (this._injector = G(St)),
          (this._closed$ = new Ie()),
          (this._elWithFocus = null),
          (this.backdrop = !0),
          (this.keyboard = !0),
          (this.dismissEvent = new De()),
          (this.shown = new Ie()),
          (this.hidden = new Ie());
      }
      get fullscreenClass() {
        return this.fullscreen === !0
          ? " modal-fullscreen"
          : f1(this.fullscreen)
          ? ` modal-fullscreen-${this.fullscreen}-down`
          : "";
      }
      dismiss(e) {
        this.dismissEvent.emit(e);
      }
      ngOnInit() {
        (this._elWithFocus = this._document.activeElement),
          kn(() => this._show(), {
            injector: this._injector,
            phase: Eh.MixedReadWrite,
          });
      }
      ngOnDestroy() {
        this._disableEventHandling();
      }
      hide() {
        let { nativeElement: e } = this._elRef,
          i = { animation: this.animation, runningTransition: "stop" },
          r = Ho(this._zone, e, () => e.classList.remove("show"), i),
          o = Ho(this._zone, this._dialogEl.nativeElement, () => {}, i),
          a = uc(r, o);
        return (
          a.subscribe(() => {
            this.hidden.next(), this.hidden.complete();
          }),
          this._disableEventHandling(),
          this._restoreFocus(),
          a
        );
      }
      _show() {
        let e = { animation: this.animation, runningTransition: "continue" },
          i = Ho(
            this._zone,
            this._elRef.nativeElement,
            (o, a) => {
              a && g1(o), o.classList.add("show");
            },
            e
          ),
          r = Ho(this._zone, this._dialogEl.nativeElement, () => {}, e);
        uc(i, r).subscribe(() => {
          this.shown.next(), this.shown.complete();
        }),
          this._enableEventHandling(),
          this._setFocus();
      }
      _enableEventHandling() {
        let { nativeElement: e } = this._elRef;
        this._zone.runOutsideAngular(() => {
          En(e, "keydown")
            .pipe(
              Ut(this._closed$),
              Ot((r) => r.key === "Escape")
            )
            .subscribe((r) => {
              this.keyboard
                ? requestAnimationFrame(() => {
                    r.defaultPrevented ||
                      this._zone.run(() => this.dismiss(xf.ESC));
                  })
                : this.backdrop === "static" && this._bumpBackdrop();
            });
          let i = !1;
          En(this._dialogEl.nativeElement, "mousedown")
            .pipe(
              Ut(this._closed$),
              Qt(() => (i = !1)),
              wi(() => En(e, "mouseup").pipe(Ut(this._closed$), Zi(1))),
              Ot(({ target: r }) => e === r)
            )
            .subscribe(() => {
              i = !0;
            }),
            En(e, "click")
              .pipe(Ut(this._closed$))
              .subscribe(({ target: r }) => {
                e === r &&
                  (this.backdrop === "static"
                    ? this._bumpBackdrop()
                    : this.backdrop === !0 &&
                      !i &&
                      this._zone.run(() => this.dismiss(xf.BACKDROP_CLICK))),
                  (i = !1);
              });
        });
      }
      _disableEventHandling() {
        this._closed$.next();
      }
      _setFocus() {
        let { nativeElement: e } = this._elRef;
        if (!e.contains(document.activeElement)) {
          let i = e.querySelector("[ngbAutofocus]"),
            r = _1(e)[0];
          (i || r || e).focus();
        }
      }
      _restoreFocus() {
        let e = this._document.body,
          i = this._elWithFocus,
          r;
        i && i.focus && e.contains(i) ? (r = i) : (r = e),
          this._zone.runOutsideAngular(() => {
            setTimeout(() => r.focus()), (this._elWithFocus = null);
          });
      }
      _bumpBackdrop() {
        this.backdrop === "static" &&
          Ho(
            this._zone,
            this._elRef.nativeElement,
            ({ classList: e }) => (
              e.add("modal-static"), () => e.remove("modal-static")
            ),
            { animation: this.animation, runningTransition: "continue" }
          );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["ngb-modal-window"]],
          viewQuery: function (i, r) {
            if ((i & 1 && Xt(YI, 7), i & 2)) {
              let o;
              xt((o = Ct())) && (r._dialogEl = o.first);
            }
          },
          hostAttrs: ["role", "dialog", "tabindex", "-1"],
          hostVars: 7,
          hostBindings: function (i, r) {
            i & 2 &&
              (de("aria-modal", !0)("aria-labelledby", r.ariaLabelledBy)(
                "aria-describedby",
                r.ariaDescribedBy
              ),
              Ue("modal d-block" + (r.windowClass ? " " + r.windowClass : "")),
              Te("fade", r.animation));
          },
          inputs: {
            animation: "animation",
            ariaLabelledBy: "ariaLabelledBy",
            ariaDescribedBy: "ariaDescribedBy",
            backdrop: "backdrop",
            centered: "centered",
            fullscreen: "fullscreen",
            keyboard: "keyboard",
            scrollable: "scrollable",
            size: "size",
            windowClass: "windowClass",
            modalDialogClass: "modalDialogClass",
          },
          outputs: { dismissEvent: "dismiss" },
          standalone: !0,
          features: [ue],
          ngContentSelectors: GI,
          decls: 4,
          vars: 2,
          consts: [
            ["dialog", ""],
            ["role", "document"],
            [1, "modal-content"],
          ],
          template: function (i, r) {
            i & 1 && (Jt(), h(0, "div", 1, 0)(2, "div", 2), Lt(3), u()()),
              i & 2 &&
                Ue(
                  "modal-dialog" +
                    (r.size ? " modal-" + r.size : "") +
                    (r.centered ? " modal-dialog-centered" : "") +
                    r.fullscreenClass +
                    (r.scrollable ? " modal-dialog-scrollable" : "") +
                    (r.modalDialogClass ? " " + r.modalDialogClass : "")
                );
          },
          styles: [
            `ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}
`,
          ],
          encapsulation: 2,
        });
      }
    }
    return n;
  })(),
  dO = (() => {
    class n {
      constructor() {
        (this._applicationRef = G(ji)),
          (this._injector = G(St)),
          (this._environmentInjector = G(fn)),
          (this._document = G(Oe)),
          (this._scrollBar = G(oO)),
          (this._activeWindowCmptHasChanged = new Ie()),
          (this._ariaHiddenValues = new Map()),
          (this._scrollBarRestoreFn = null),
          (this._modalRefs = []),
          (this._windowCmpts = []),
          (this._activeInstances = new De());
        let e = G(Re);
        this._activeWindowCmptHasChanged.subscribe(() => {
          if (this._windowCmpts.length) {
            let i = this._windowCmpts[this._windowCmpts.length - 1];
            tO(e, i.location.nativeElement, this._activeWindowCmptHasChanged),
              this._revertAriaHidden(),
              this._setAriaHidden(i.location.nativeElement);
          }
        });
      }
      _restoreScrollBar() {
        let e = this._scrollBarRestoreFn;
        e && ((this._scrollBarRestoreFn = null), e());
      }
      _hideScrollBar() {
        this._scrollBarRestoreFn ||
          (this._scrollBarRestoreFn = this._scrollBar.hide());
      }
      open(e, i, r) {
        let o =
          r.container instanceof HTMLElement
            ? r.container
            : vf(r.container)
            ? this._document.querySelector(r.container)
            : this._document.body;
        if (!o)
          throw new Error(
            `The specified modal container "${
              r.container || "body"
            }" was not found in the DOM.`
          );
        this._hideScrollBar();
        let a = new ru();
        e = r.injector || e;
        let s = e.get(fn, null) || this._environmentInjector,
          l = this._getContentRef(e, s, i, a, r),
          d = r.backdrop !== !1 ? this._attachBackdrop(o) : void 0,
          m = this._attachWindowComponent(o, l.nodes),
          v = new yf(m, l, d, r.beforeDismiss);
        return (
          this._registerModalRef(v),
          this._registerWindowCmpt(m),
          v.hidden.pipe(Zi(1)).subscribe(() =>
            Promise.resolve(!0).then(() => {
              this._modalRefs.length ||
                (this._document.body.classList.remove("modal-open"),
                this._restoreScrollBar(),
                this._revertAriaHidden());
            })
          ),
          (a.close = (x) => {
            v.close(x);
          }),
          (a.dismiss = (x) => {
            v.dismiss(x);
          }),
          (a.update = (x) => {
            v.update(x);
          }),
          v.update(r),
          this._modalRefs.length === 1 &&
            this._document.body.classList.add("modal-open"),
          d && d.instance && d.changeDetectorRef.detectChanges(),
          m.changeDetectorRef.detectChanges(),
          v
        );
      }
      get activeInstances() {
        return this._activeInstances;
      }
      dismissAll(e) {
        this._modalRefs.forEach((i) => i.dismiss(e));
      }
      hasOpenModals() {
        return this._modalRefs.length > 0;
      }
      _attachBackdrop(e) {
        let i = xc(aO, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
        });
        return (
          this._applicationRef.attachView(i.hostView),
          e.appendChild(i.location.nativeElement),
          i
        );
      }
      _attachWindowComponent(e, i) {
        let r = xc(cO, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
          projectableNodes: i,
        });
        return (
          this._applicationRef.attachView(r.hostView),
          e.appendChild(r.location.nativeElement),
          r
        );
      }
      _getContentRef(e, i, r, o, a) {
        return r
          ? r instanceof Zn
            ? this._createFromTemplateRef(r, o)
            : f1(r)
            ? this._createFromString(r)
            : this._createFromComponent(e, i, r, o, a)
          : new Wa([]);
      }
      _createFromTemplateRef(e, i) {
        let r = {
            $implicit: i,
            close(a) {
              i.close(a);
            },
            dismiss(a) {
              i.dismiss(a);
            },
          },
          o = e.createEmbeddedView(r);
        return this._applicationRef.attachView(o), new Wa([o.rootNodes], o);
      }
      _createFromString(e) {
        let i = this._document.createTextNode(`${e}`);
        return new Wa([[i]]);
      }
      _createFromComponent(e, i, r, o, a) {
        let s = St.create({
            providers: [{ provide: ru, useValue: o }],
            parent: e,
          }),
          l = xc(r, { environmentInjector: i, elementInjector: s }),
          d = l.location.nativeElement;
        return (
          a.scrollable && d.classList.add("component-host-scrollable"),
          this._applicationRef.attachView(l.hostView),
          new Wa([[d]], l.hostView, l)
        );
      }
      _setAriaHidden(e) {
        let i = e.parentElement;
        i &&
          e !== this._document.body &&
          (Array.from(i.children).forEach((r) => {
            r !== e &&
              r.nodeName !== "SCRIPT" &&
              (this._ariaHiddenValues.set(r, r.getAttribute("aria-hidden")),
              r.setAttribute("aria-hidden", "true"));
          }),
          this._setAriaHidden(i));
      }
      _revertAriaHidden() {
        this._ariaHiddenValues.forEach((e, i) => {
          e
            ? i.setAttribute("aria-hidden", e)
            : i.removeAttribute("aria-hidden");
        }),
          this._ariaHiddenValues.clear();
      }
      _registerModalRef(e) {
        let i = () => {
          let r = this._modalRefs.indexOf(e);
          r > -1 &&
            (this._modalRefs.splice(r, 1),
            this._activeInstances.emit(this._modalRefs));
        };
        this._modalRefs.push(e),
          this._activeInstances.emit(this._modalRefs),
          e.result.then(i, i);
      }
      _registerWindowCmpt(e) {
        this._windowCmpts.push(e),
          this._activeWindowCmptHasChanged.next(),
          e.onDestroy(() => {
            let i = this._windowCmpts.indexOf(e);
            i > -1 &&
              (this._windowCmpts.splice(i, 1),
              this._activeWindowCmptHasChanged.next());
          });
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Ol = (() => {
    class n {
      constructor() {
        (this._injector = G(St)),
          (this._modalStack = G(dO)),
          (this._config = G(rO));
      }
      open(e, i = {}) {
        let r = Q(
          Be(Q({}, this._config), { animation: this._config.animation }),
          i
        );
        return this._modalStack.open(this._injector, e, r);
      }
      get activeInstances() {
        return this._modalStack.activeInstances;
      }
      dismissAll(e) {
        this._modalStack.dismissAll(e);
      }
      hasOpenModals() {
        return this._modalStack.hasOpenModals();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  cr = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = we({ type: n });
      }
      static {
        this.ɵinj = Ce({ providers: [Ol] });
      }
    }
    return n;
  })();
var I5 = new Me("live announcer delay", {
  providedIn: "root",
  factory: () => 100,
});
var uO = (n) => ["/Admin/singleUser", n],
  v1 = (n) => ({ "is-invalid": n });
function hO(n, t) {
  n & 1 && (h(0, "tr")(1, "td", 45)(2, "p"), f(3, "No Dealers Found"), u()()());
}
function pO(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td"),
      f(6),
      u(),
      h(7, "td")(8, "div", 46)(9, "a", 47),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.onEdit(r.dealer_id));
      }),
      W(10, "i", 48),
      u(),
      h(11, "a", 49),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.openDeleteModal(r));
      }),
      W(12, "i", 50),
      u(),
      h(13, "a", 51)(14, "span", 52),
      W(15, "i", 53),
      u()()()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      r = E();
    g(2),
      B((r.currentPage - 1) * r.itemsPerPage + i + 1),
      g(2),
      B(e.dealer_name),
      g(2),
      B(e.dealer_code),
      g(7),
      M("routerLink", xe(4, uO, e.dealer_id));
  }
}
function mO(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "li", 54)(1, "a", 41),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.goToPage(r));
      }),
      f(2),
      u()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = E();
    Te("active", e === i.currentPage), g(2), B(e);
  }
}
function fO(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 55)(1, "div", 56)(2, "div", 57)(3, "div", 58)(4, "h5", 59),
      f(5, "Delete Dealer"),
      u()(),
      h(6, "div", 60),
      f(7, "Are you sure you want to delete this dealer?"),
      u(),
      h(8, "div", 61)(9, "button", 62),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeDeleteModal());
      }),
      f(10, "Cancel"),
      u(),
      h(11, "button", 63),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.deleteDealerId());
      }),
      f(12, "Delete"),
      u()()()()();
  }
}
function gO(n, t) {
  n & 1 && (h(0, "span", 77), f(1, "*"), u());
}
function _O(n, t) {
  n & 1 &&
    (h(0, "div", 78)(1, "span"), f(2, "Dealer Name is required."), u()());
}
function bO(n, t) {
  n & 1 && (h(0, "span", 78), f(1, "*"), u());
}
function vO(n, t) {
  n & 1 &&
    (h(0, "div", 78)(1, "span"), f(2, "Dealer Code is required."), u()());
}
function yO(n, t) {
  if (n & 1) {
    let e = ce();
    Qe(0),
      h(1, "button", 79),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.onUpdate());
      }),
      f(2, " Edit "),
      u(),
      Xe();
  }
  if (n & 2) {
    let e = E(2);
    g(), M("disabled", !e.isFormChanged());
  }
}
function xO(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 62),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.onSave());
      }),
      f(1, " save "),
      u();
  }
  if (n & 2) {
    let e = E(2);
    de("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function CO(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 55)(1, "div", 64)(2, "div", 57)(3, "div", 58)(4, "h5", 65),
      f(5),
      u(),
      h(6, "button", 66),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeModal());
      }),
      h(7, "span", 67),
      f(8, "\xD7"),
      u()()(),
      h(9, "div", 68)(10, "label", 69),
      f(11, " Dealer Name"),
      F(12, gO, 2, 0, "span", 70),
      u(),
      W(13, "input", 71),
      F(14, _O, 3, 0, "div", 72),
      u(),
      h(15, "div", 68)(16, "label", 73),
      f(17, " Dealer Code"),
      F(18, bO, 2, 0, "span", 72),
      u(),
      W(19, "input", 74),
      F(20, vO, 3, 0, "div", 72),
      u(),
      h(21, "div", 61),
      F(22, yO, 3, 1, "ng-container", 75),
      h(23, "button", 76),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeModal());
      }),
      f(24, " Close "),
      u(),
      F(25, xO, 2, 1, "ng-template", null, 0, ei),
      u()()()();
  }
  if (n & 2) {
    let e,
      i,
      r,
      o,
      a = At(26),
      s = E();
    g(5),
      ae(" ", s.dealerObj.dealer_id ? "Edit Dealer" : "Add New Dealer", " "),
      g(4),
      M("formGroup", s.useForm),
      g(3),
      M("ngIf", !s.isEditMode),
      g(),
      M(
        "ngClass",
        xe(
          11,
          v1,
          ((e = s.useForm.get("dealer_name")) == null ? null : e.touched) &&
            ((e = s.useForm.get("dealer_name")) == null ? null : e.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        ((i = s.useForm.get("dealer_name")) == null ? null : i.touched) &&
          ((i = s.useForm.get("dealer_name")) == null ? null : i.invalid)
      ),
      g(),
      M("formGroup", s.useForm),
      g(3),
      M("ngIf", !s.isEditMode),
      g(),
      M(
        "ngClass",
        xe(
          13,
          v1,
          ((r = s.useForm.get("dealer_code")) == null ? null : r.touched) &&
            ((r = s.useForm.get("dealer_code")) == null ? null : r.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        ((o = s.useForm.get("dealer_code")) == null ? null : o.touched) &&
          ((o = s.useForm.get("dealer_code")) == null ? null : o.invalid)
      ),
      g(2),
      M("ngIf", s.dealerObj == null ? null : s.dealerObj.dealer_id)(
        "ngIfElse",
        a
      );
  }
}
var ou = class n {
  constructor(t) {
    this.modalService = t;
    this.useForm = new Rt({
      dealer_name: new st(this.dealerObj.dealer_name, [
        Ne.required,
        Ne.minLength(2),
      ]),
      dealer_code: new st(this.dealerObj.dealer_code, [
        Ne.required,
        Ne.minLength(5),
      ]),
    });
  }
  http = G(li);
  dealerList = fe([]);
  totalDealer = fe(0);
  masterSrv = G(Ze);
  dealerObj = new Ar();
  selectedRowCount = 3;
  isLoading = !1;
  isModalVisible = !1;
  isModalOpen = !1;
  isEditMode = !1;
  useForm;
  previousValue = "";
  isDeleteModalOpen = !1;
  itemsPerPage = 10;
  originalDealerName = "";
  originalDealerC = "";
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  currentPage = 1;
  originalFormValue;
  searchTerm = "";
  filteredDealers = [];
  paginatedDealers = [];
  totalPages = 0;
  pages = [];
  toastr = G(ki);
  openModal(t) {
    (this.isModalOpen = !0),
      console.log("open modal called"),
      this.useForm.reset(),
      (this.isModalVisible = !0),
      t
        ? ((this.previousValue = t.dealer_name),
          this.useForm.patchValue({
            dealer_name: t.dealer_name,
            dealer_code: t.dealer_code,
            dealer_email: t.dealer_email,
          }),
          (this.dealerObj = Q({}, t)))
        : (this.dealerObj = new Ar());
  }
  isDealerNameChanged() {
    return this.useForm.get("dealer_name")?.value !== this.originalDealerName;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (t, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllDealer(),
      this.getAllDealer();
  }
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe(
      (t) => {
        console.log("Dealer list updated:", t.data.dealer.rows),
          this.dealerList.set(t.data.dealer.rows),
          (this.filteredDealers = t.data.dealer.rows),
          this.totalDealer.set(t.data.dealer.count),
          this.initializeDealerPagination();
      },
      (t) => {
        this.toastr.error("Error fetching dealers", "Error"),
          console.error("Error fetching dealers:", t),
          this.dealerList.set([]),
          (this.filteredDealers = []),
          this.totalDealer.set(0),
          this.initializeDealerPagination();
      }
    );
  }
  initializeDealerPagination() {
    let t = this.filteredDealers.length;
    (this.totalPages = Math.ceil(t / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, i) => i + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateDealers();
  }
  applyFilterAndPagination() {
    let e = this.dealerList().filter(
      (o) =>
        o.dealer_name?.toLowerCase().includes(this.searchTerm.toLowerCase()) ||
        o.dealer_code
          ?.toString()
          .toLowerCase()
          .includes(this.searchTerm.toLowerCase())
    );
    (this.filteredDealers = e),
      (this.totalPages = Math.ceil(e.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (o, a) => a + 1));
    let i = (this.currentPage - 1) * this.itemsPerPage,
      r = i + this.itemsPerPage;
    this.paginatedDealers = e.slice(i, r);
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateDealers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredDealers = this.dealerList();
    else {
      let t = this.searchTerm.toLowerCase();
      this.filteredDealers = this.dealerList().filter((e) =>
        e.dealer_name.toLowerCase().includes(t)
      );
    }
    (this.currentPage = 1), this.paginateDealers();
  }
  min(t, e) {
    return Math.min(t, e);
  }
  updateVisiblePages() {
    let t =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(t, t + this.maxVisiblePages);
  }
  goToPage(t) {
    (this.currentPage = t), this.updateVisiblePages(), this.paginateDealers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateDealers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateDealers());
  }
  paginateDealers() {
    let e = this.dealerList().filter(
        (o) =>
          o.dealer_name
            ?.toLowerCase()
            .includes(this.searchTerm.toLowerCase()) ||
          o.dealer_code
            ?.toString()
            .toLowerCase()
            .includes(this.searchTerm.toLowerCase())
      ),
      i = (this.currentPage - 1) * this.itemsPerPage,
      r = i + this.itemsPerPage;
    this.paginatedDealers = e.slice(i, r);
  }
  openDeleteModal(t) {
    console.log("\u{1F5D1}\uFE0F Delete button clicked", t),
      (this.selectedDealerForDeletion = t),
      (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    this.isEditMode ? this.onUpdate() : this.createNewDealer(),
      this.closeModal();
  }
  createNewDealer() {
    this.masterSrv.createDealer(this.dealerObj).subscribe(
      (t) => {
        this.toastr.success("Dealer created successfully!", "Success"),
          this.getAllDealer();
      },
      (t) => {
        this.toastr.error("Error creating dealer", "Error");
      }
    );
  }
  onItemsPerPageChange(t) {
    (this.itemsPerPage = parseInt(t.target.value, 10)),
      (this.currentPage = 1),
      console.log("Dropdown changed to:", this.itemsPerPage),
      this.applyFilterAndPagination();
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.dealerObj = Q(Q({}, this.dealerObj), this.useForm.value)),
        console.log(
          "\u{1F680} Updated Payload before API call:",
          this.dealerObj
        ),
        this.masterSrv.updateDealer(this.dealerObj).subscribe(
          (t) => {
            console.log("\u2705 API Response:", t),
              t.status === 200
                ? (this.toastr.success(
                    t.message || "Dealer updated successfully",
                    "Success"
                  ),
                  (this.isModalOpen = !1),
                  (this.originalDealerName = ""),
                  (this.originalDealerC = ""),
                  setTimeout(() => {
                    this.getAllDealer();
                  }, 500))
                : this.toastr.error(t.message || "Update failed", "Error");
          },
          (t) => {
            console.error("\u274C API Error:", t);
            let e = t?.error?.message || "Failed to update dealer";
            this.toastr.error(e, "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(t) {
    console.log("Edit button clicked. Dealer ID:", t),
      (this.isEditMode = !0),
      this.masterSrv.getDealerById(t).subscribe(
        (e) => {
          let i = e?.data?.dealer;
          i
            ? ((this.dealerObj = Be(Q({}, i), {
                dealer_code: Number(i.dealer_code),
              })),
              this.useForm.patchValue({
                dealer_name: i.dealer_name,
                dealer_code: Number(i.dealer_code),
              }),
              (this.originalFormValue = Q({}, this.useForm.value)),
              (this.isModalOpen = !0))
            : this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isFormChanged() {
    return (
      this.useForm.get("dealer_name")?.value !== this.originalDealerName ||
      this.useForm.get("dealer_code")?.value !== this.originalDealerC
    );
  }
  selectedDealerForDeletion = null;
  selectDealerForDeletion(t) {
    this.selectedDealerForDeletion = t;
  }
  deleteDealerId() {
    this.selectedDealerForDeletion && this.selectedDealerForDeletion.dealer_id
      ? this.masterSrv
          .deleteDealer(this.selectedDealerForDeletion.dealer_id)
          .subscribe(
            (t) => {
              this.getAllDealer(),
                this.closeModal(),
                this.toastr.success("Dealer Deleted", "Successful");
            },
            (t) => {
              alert(t.message || "Failed to delete vehicle");
            }
          )
      : alert("No vehicle selected for deletion");
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Ol));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-dealer"]],
    standalone: !0,
    features: [ue],
    decls: 72,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "dashboard-container"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search dealers...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      ["colspan", "5", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        "border",
        "2px solid #222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-success",
        "shadow",
        "btn-xs",
        "sharp",
        2,
        "margin-left",
        "5px",
        3,
        "routerLink",
      ],
      [1, "", 2, "margin-left", "0 !important"],
      [1, "fa", "fa-eye"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      ["role", "document", 1, "modal-dialog", "modal-dialog-centered"],
      [1, "modal-title", 2, "align-items", "center", "margin-inline", "auto"],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "form-group", 2, "margin-inline", "1em", 3, "formGroup"],
      ["for", "dealer_name", 1, "form-label"],
      ["style", "color: red;", 4, "ngIf"],
      [
        "type",
        "text",
        "placeholder",
        "Dealer Name",
        "formControlName",
        "dealer_name",
        1,
        "form-control",
        "form-control-lg",
        "editable-input",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      ["for", "dealer_code", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Dealer Code",
        "formControlName",
        "dealer_code",
        1,
        "form-control",
        "form-control-lg",
        "editable-input",
        3,
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [2, "color", "red"],
      [1, "text-danger"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        2,
        "border-color",
        "#222fb9",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        f(6, "Users"),
        u()(),
        h(7, "li", 7)(8, "a", 8),
        f(9, "Dealers"),
        u()()()(),
        h(10, "div", 9)(11, "div", 10)(12, "a", 11),
        U("click", function () {
          return i.openModal();
        }),
        W(13, "i", 12),
        f(14, "Add Dealer "),
        u()(),
        h(15, "div", 10)(16, "div", 13)(17, "p", 14),
        f(18, "Total dealer"),
        u(),
        h(19, "h3", 15),
        f(20),
        u()()()(),
        h(21, "div", 16)(22, "div", 17)(23, "div", 18)(24, "div", 19)(
          25,
          "div",
          20
        ),
        W(26, "label", 21),
        h(27, "select", 22),
        U("change", function (o) {
          return i.onItemsPerPageChange(o);
        }),
        h(28, "option", 23),
        f(29, "10"),
        u(),
        h(30, "option", 24),
        f(31, "25"),
        u(),
        h(32, "option", 25),
        f(33, "50"),
        u(),
        h(34, "option", 26),
        f(35, "100"),
        u()(),
        h(36, "label", 27),
        f(37, "records per page"),
        u()(),
        h(38, "div", 28)(39, "div", 29)(40, "input", 30),
        Wt("ngModelChange", function (o) {
          return $t(i.searchTerm, o) || (i.searchTerm = o), o;
        }),
        U("input", function () {
          return i.onSearchChange();
        }),
        u()()()(),
        h(41, "div", 31)(42, "table", 32)(43, "thead")(44, "tr")(45, "th"),
        f(46, "Sr No"),
        u(),
        h(47, "th"),
        f(48, "Dealer Name"),
        u(),
        h(49, "th"),
        f(50, "Dealer Code"),
        u(),
        h(51, "th"),
        f(52, "Action"),
        u()()(),
        h(53, "tbody"),
        F(54, hO, 4, 0, "tr", 33)(55, pO, 16, 6, "tr", 34),
        u()()(),
        h(56, "div", 35)(57, "div", 36)(58, "div", 37),
        f(59),
        u()(),
        h(60, "div", 36)(61, "div", 38)(62, "ul", 39)(63, "li", 40)(
          64,
          "a",
          41
        ),
        U("click", function () {
          return i.previousPage();
        }),
        f(65, "Previous"),
        u()(),
        F(66, mO, 3, 3, "li", 42),
        h(67, "li", 43)(68, "a", 41),
        U("click", function () {
          return i.nextPage();
        }),
        f(69, "Next"),
        u()()()()()()()()()()(),
        F(70, fO, 13, 0, "div", 44)(71, CO, 27, 15, "div", 44)),
        e & 2 &&
          (g(20),
          ae(" ", i.filteredDealers.length, " "),
          g(20),
          zt("ngModel", i.searchTerm),
          g(14),
          M("ngIf", i.paginatedDealers.length === 0),
          g(),
          M("ngForOf", i.paginatedDealers),
          g(4),
          Hi(
            " Showing ",
            (i.currentPage - 1) * i.itemsPerPage + 1,
            " to ",
            i.min(i.currentPage * i.itemsPerPage, i.dealerList().length),
            " of ",
            i.dealerList().length,
            " entries "
          ),
          g(4),
          Te("disabled", i.currentPage === 1),
          g(3),
          M("ngForOf", i.visiblePages),
          g(),
          Te("disabled", i.currentPage === i.totalPages),
          g(3),
          M("ngIf", i.isDeleteModalOpen),
          g(),
          M("ngIf", i.isModalOpen));
    },
    dependencies: [
      Fe,
      Gt,
      ti,
      rt,
      Gi,
      $i,
      Wi,
      fi,
      Ti,
      zi,
      an,
      mi,
      ht,
      cr,
      vn,
      sn,
      ln,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}input[_ngcontent-%COMP%]::-webkit-clear-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button, input[_ngcontent-%COMP%]::-webkit-calendar-picker-indicator{display:none!important;-webkit-appearance:none!important}input[_ngcontent-%COMP%]:invalid{box-shadow:none!important}input[_ngcontent-%COMP%]:-moz-ui-invalid{box-shadow:none!important}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border:none}.modal-backdrop[_ngcontent-%COMP%]{display:none!important}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.edit-btn[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:#fff;transition:all .3s ease}.edit-btn[_ngcontent-%COMP%]:hover:enabled{background-color:#222fb9;color:#fff}.edit-btn[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:not-allowed}#editButton[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}",
    ],
  });
};
var y1 = (() => {
  class n {
    constructor(e, i, r) {
      (this.el = e), (this.vcr = i), (this.renderer = r), (this.dtOptions = {});
    }
    ngOnInit() {
      this.dtTrigger
        ? this.dtTrigger.subscribe((e) => {
            this.displayTable(e);
          })
        : this.displayTable(null);
    }
    ngOnDestroy() {
      this.dtTrigger && this.dtTrigger.unsubscribe(),
        this.dt && this.dt.destroy(!0);
    }
    displayTable(e) {
      e && (this.dtOptions = e),
        (this.dtInstance = new Promise((i, r) => {
          Promise.resolve(this.dtOptions).then((o) => {
            if (
              Object.keys(o).length === 0 &&
              $("tbody tr", this.el.nativeElement).length === 0
            ) {
              r("Both the table and dtOptions cannot be empty");
              return;
            }
            o.columns &&
              o.columns.forEach((s) => {
                (s.id ?? "").trim() === "" && (s.id = this.getColumnUniqueId());
              }),
              setTimeout(() => {
                let s = {
                  rowCallback: (l, d, m) => {
                    if (o.columns) {
                      let v = o.columns;
                      this.applyNgPipeTransform(l, v),
                        this.applyNgRefTemplate(l, v, d);
                    }
                    o.rowCallback && o.rowCallback(l, d, m);
                  },
                };
                (s = Object.assign({}, o, s)),
                  (this.dt = $(this.el.nativeElement).DataTable(s)),
                  i(this.dt);
              });
          });
        }));
    }
    applyNgPipeTransform(e, i) {
      i.filter((o) => o.ngPipeInstance && !o.ngTemplateRef).forEach((o) => {
        let a = o.ngPipeInstance,
          s = o.ngPipeArgs || [],
          l = i.filter((x) => x.visible !== !1).findIndex((x) => x.id === o.id),
          d = e.childNodes.item(l),
          m = $(d).text(),
          v = a.transform(m, ...s);
        $(d).text(v);
      });
    }
    applyNgRefTemplate(e, i, r) {
      i.filter((a) => a.ngTemplateRef && !a.ngPipeInstance).forEach((a) => {
        let { ref: s, context: l } = a.ngTemplateRef,
          d = i.filter((C) => C.visible !== !1).findIndex((C) => C.id === a.id),
          m = e.childNodes.item(d);
        $(m).html("");
        let v = Object.assign({}, l, l?.userData, { adtData: r }),
          x = this.vcr.createEmbeddedView(s, v);
        this.renderer.appendChild(m, x.rootNodes[0]);
      });
    }
    getColumnUniqueId() {
      let e = "",
        i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
      for (let r = 0; r < 6; r++) {
        let o = Math.floor(Math.random() * i.length);
        e += i.charAt(o);
      }
      return e.trim();
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(H(Ve), H(Ji), H(bi));
      };
    }
    static {
      this.ɵdir = Ae({
        type: n,
        selectors: [["", "datatable", ""]],
        inputs: { dtOptions: "dtOptions", dtTrigger: "dtTrigger" },
      });
    }
  }
  return n;
})();
var Ga = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({ imports: [Fe] });
    }
  }
  return n;
})();
var Pl = class n {
  vehicle_id;
  YOM;
  vehicle_name;
  type;
  VIN;
  created_at;
  updated_at;
  corporate_id;
  deleted;
  chasis_number;
  demo_start_date;
  demo_end_date;
  constructor() {
    (this.deleted = !1),
      (this.vehicle_id = " "),
      (this.YOM = ""),
      (this.vehicle_name = ""),
      (this.type = ""),
      (this.VIN = ""),
      (this.created_at = ""),
      (this.updated_at = ""),
      (this.corporate_id = ""),
      (this.chasis_number = ""),
      (this.demo_start_date = " "),
      (this.demo_end_date = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Df;
try {
  Df = typeof Intl < "u" && Intl.v8BreakIterator;
} catch {
  Df = !1;
}
var It = (() => {
  class n {
    constructor(e) {
      (this._platformId = e),
        (this.isBrowser = this._platformId
          ? er(this._platformId)
          : typeof document == "object" && !!document),
        (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
        (this.TRIDENT =
          this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
        (this.BLINK =
          this.isBrowser &&
          !!(window.chrome || Df) &&
          typeof CSS < "u" &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.WEBKIT =
          this.isBrowser &&
          /AppleWebKit/i.test(navigator.userAgent) &&
          !this.BLINK &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.IOS =
          this.isBrowser &&
          /iPad|iPhone|iPod/.test(navigator.userAgent) &&
          !("MSStream" in window)),
        (this.FIREFOX =
          this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent)),
        (this.ANDROID =
          this.isBrowser &&
          /android/i.test(navigator.userAgent) &&
          !this.TRIDENT),
        (this.SAFARI =
          this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT);
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(Z(oi));
      };
    }
    static {
      this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Al;
function DO() {
  if (Al == null && typeof window < "u")
    try {
      window.addEventListener(
        "test",
        null,
        Object.defineProperty({}, "passive", { get: () => (Al = !0) })
      );
    } finally {
      Al = Al || !1;
    }
  return Al;
}
function dr(n) {
  return DO() ? n : !!n.capture;
}
var jo;
function x1() {
  if (jo == null) {
    if (
      typeof document != "object" ||
      !document ||
      typeof Element != "function" ||
      !Element
    )
      return (jo = !1), jo;
    if ("scrollBehavior" in document.documentElement.style) jo = !0;
    else {
      let n = Element.prototype.scrollTo;
      n ? (jo = !/\{\s*\[native code\]\s*\}/.test(n.toString())) : (jo = !1);
    }
  }
  return jo;
}
var wf;
function SO() {
  if (wf == null) {
    let n = typeof document < "u" ? document.head : null;
    wf = !!(n && (n.createShadowRoot || n.attachShadow));
  }
  return wf;
}
function C1(n) {
  if (SO()) {
    let t = n.getRootNode ? n.getRootNode() : null;
    if (typeof ShadowRoot < "u" && ShadowRoot && t instanceof ShadowRoot)
      return t;
  }
  return null;
}
function Sf() {
  let n = typeof document < "u" && document ? document.activeElement : null;
  for (; n && n.shadowRoot; ) {
    let t = n.shadowRoot.activeElement;
    if (t === n) break;
    n = t;
  }
  return n;
}
function wn(n) {
  return n.composedPath ? n.composedPath()[0] : n.target;
}
function Rl() {
  return (
    (typeof __karma__ < "u" && !!__karma__) ||
    (typeof jasmine < "u" && !!jasmine) ||
    (typeof jest < "u" && !!jest) ||
    (typeof Mocha < "u" && !!Mocha)
  );
}
function w1(n, ...t) {
  return t.length
    ? t.some((e) => n[e])
    : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
}
function qa(n) {
  return Array.isArray(n) ? n : [n];
}
function Zt(n) {
  return n == null ? "" : typeof n == "string" ? n : `${n}px`;
}
function Rr(n) {
  return n instanceof Ve ? n.nativeElement : n;
}
var MO = (() => {
  class n {
    create(e) {
      return typeof MutationObserver > "u" ? null : new MutationObserver(e);
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var au = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({ providers: [MO] });
    }
  }
  return n;
})();
var D1 = new Set(),
  Uo,
  TO = (() => {
    class n {
      constructor(e, i) {
        (this._platform = e),
          (this._nonce = i),
          (this._matchMedia =
            this._platform.isBrowser && window.matchMedia
              ? window.matchMedia.bind(window)
              : kO);
      }
      matchMedia(e) {
        return (
          (this._platform.WEBKIT || this._platform.BLINK) && EO(e, this._nonce),
          this._matchMedia(e)
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(It), Z(xs, 8));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function EO(n, t) {
  if (!D1.has(n))
    try {
      Uo ||
        ((Uo = document.createElement("style")),
        t && Uo.setAttribute("nonce", t),
        Uo.setAttribute("type", "text/css"),
        document.head.appendChild(Uo)),
        Uo.sheet &&
          (Uo.sheet.insertRule(`@media ${n} {body{ }}`, 0), D1.add(n));
    } catch (e) {
      console.error(e);
    }
}
function kO(n) {
  return {
    matches: n === "all" || n === "",
    media: n,
    addListener: () => {},
    removeListener: () => {},
  };
}
var M1 = (() => {
  class n {
    constructor(e, i) {
      (this._mediaMatcher = e),
        (this._zone = i),
        (this._queries = new Map()),
        (this._destroySubject = new Ie());
    }
    ngOnDestroy() {
      this._destroySubject.next(), this._destroySubject.complete();
    }
    isMatched(e) {
      return S1(qa(e)).some((r) => this._registerQuery(r).mql.matches);
    }
    observe(e) {
      let r = S1(qa(e)).map((a) => this._registerQuery(a).observable),
        o = yo(r);
      return (
        (o = dc(o.pipe(Zi(1)), o.pipe(_s(1), vh(0)))),
        o.pipe(
          Ke((a) => {
            let s = { matches: !1, breakpoints: {} };
            return (
              a.forEach(({ matches: l, query: d }) => {
                (s.matches = s.matches || l), (s.breakpoints[d] = l);
              }),
              s
            );
          })
        )
      );
    }
    _registerQuery(e) {
      if (this._queries.has(e)) return this._queries.get(e);
      let i = this._mediaMatcher.matchMedia(e),
        o = {
          observable: new Yn((a) => {
            let s = (l) => this._zone.run(() => a.next(l));
            return (
              i.addListener(s),
              () => {
                i.removeListener(s);
              }
            );
          }).pipe(
            Kn(i),
            Ke(({ matches: a }) => ({ query: e, matches: a })),
            Ut(this._destroySubject)
          ),
          mql: i,
        };
      return this._queries.set(e, o), o;
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(Z(TO), Z(Re));
      };
    }
    static {
      this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
function S1(n) {
  return n
    .map((t) => t.split(","))
    .reduce((t, e) => t.concat(e))
    .map((t) => t.trim());
}
var IO = (() => {
  class n {
    constructor(e) {
      this._platform = e;
    }
    isDisabled(e) {
      return e.hasAttribute("disabled");
    }
    isVisible(e) {
      return PO(e) && getComputedStyle(e).visibility === "visible";
    }
    isTabbable(e) {
      if (!this._platform.isBrowser) return !1;
      let i = OO(HO(e));
      if (i && (T1(i) === -1 || !this.isVisible(i))) return !1;
      let r = e.nodeName.toLowerCase(),
        o = T1(e);
      return e.hasAttribute("contenteditable")
        ? o !== -1
        : r === "iframe" ||
          r === "object" ||
          (this._platform.WEBKIT && this._platform.IOS && !VO(e))
        ? !1
        : r === "audio"
        ? e.hasAttribute("controls")
          ? o !== -1
          : !1
        : r === "video"
        ? o === -1
          ? !1
          : o !== null
          ? !0
          : this._platform.FIREFOX || e.hasAttribute("controls")
        : e.tabIndex >= 0;
    }
    isFocusable(e, i) {
      return (
        BO(e) &&
        !this.isDisabled(e) &&
        (i?.ignoreVisibility || this.isVisible(e))
      );
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(Z(It));
      };
    }
    static {
      this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
function OO(n) {
  try {
    return n.frameElement;
  } catch {
    return null;
  }
}
function PO(n) {
  return !!(
    n.offsetWidth ||
    n.offsetHeight ||
    (typeof n.getClientRects == "function" && n.getClientRects().length)
  );
}
function AO(n) {
  let t = n.nodeName.toLowerCase();
  return t === "input" || t === "select" || t === "button" || t === "textarea";
}
function RO(n) {
  return NO(n) && n.type == "hidden";
}
function FO(n) {
  return LO(n) && n.hasAttribute("href");
}
function NO(n) {
  return n.nodeName.toLowerCase() == "input";
}
function LO(n) {
  return n.nodeName.toLowerCase() == "a";
}
function I1(n) {
  if (!n.hasAttribute("tabindex") || n.tabIndex === void 0) return !1;
  let t = n.getAttribute("tabindex");
  return !!(t && !isNaN(parseInt(t, 10)));
}
function T1(n) {
  if (!I1(n)) return null;
  let t = parseInt(n.getAttribute("tabindex") || "", 10);
  return isNaN(t) ? -1 : t;
}
function VO(n) {
  let t = n.nodeName.toLowerCase(),
    e = t === "input" && n.type;
  return e === "text" || e === "password" || t === "select" || t === "textarea";
}
function BO(n) {
  return RO(n)
    ? !1
    : AO(n) || FO(n) || n.hasAttribute("contenteditable") || I1(n);
}
function HO(n) {
  return (n.ownerDocument && n.ownerDocument.defaultView) || window;
}
var Tf = class {
    get enabled() {
      return this._enabled;
    }
    set enabled(t) {
      (this._enabled = t),
        this._startAnchor &&
          this._endAnchor &&
          (this._toggleAnchorTabIndex(t, this._startAnchor),
          this._toggleAnchorTabIndex(t, this._endAnchor));
    }
    constructor(t, e, i, r, o = !1, a) {
      (this._element = t),
        (this._checker = e),
        (this._ngZone = i),
        (this._document = r),
        (this._injector = a),
        (this._hasAttached = !1),
        (this.startAnchorListener = () => this.focusLastTabbableElement()),
        (this.endAnchorListener = () => this.focusFirstTabbableElement()),
        (this._enabled = !0),
        o || this.attachAnchors();
    }
    destroy() {
      let t = this._startAnchor,
        e = this._endAnchor;
      t &&
        (t.removeEventListener("focus", this.startAnchorListener), t.remove()),
        e &&
          (e.removeEventListener("focus", this.endAnchorListener), e.remove()),
        (this._startAnchor = this._endAnchor = null),
        (this._hasAttached = !1);
    }
    attachAnchors() {
      return this._hasAttached
        ? !0
        : (this._ngZone.runOutsideAngular(() => {
            this._startAnchor ||
              ((this._startAnchor = this._createAnchor()),
              this._startAnchor.addEventListener(
                "focus",
                this.startAnchorListener
              )),
              this._endAnchor ||
                ((this._endAnchor = this._createAnchor()),
                this._endAnchor.addEventListener(
                  "focus",
                  this.endAnchorListener
                ));
          }),
          this._element.parentNode &&
            (this._element.parentNode.insertBefore(
              this._startAnchor,
              this._element
            ),
            this._element.parentNode.insertBefore(
              this._endAnchor,
              this._element.nextSibling
            ),
            (this._hasAttached = !0)),
          this._hasAttached);
    }
    focusInitialElementWhenReady(t) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusInitialElement(t)));
      });
    }
    focusFirstTabbableElementWhenReady(t) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusFirstTabbableElement(t)));
      });
    }
    focusLastTabbableElementWhenReady(t) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusLastTabbableElement(t)));
      });
    }
    _getRegionBoundary(t) {
      let e = this._element.querySelectorAll(
        `[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`
      );
      return t == "start"
        ? e.length
          ? e[0]
          : this._getFirstTabbableElement(this._element)
        : e.length
        ? e[e.length - 1]
        : this._getLastTabbableElement(this._element);
    }
    focusInitialElement(t) {
      let e = this._element.querySelector(
        "[cdk-focus-initial], [cdkFocusInitial]"
      );
      if (e) {
        if (!this._checker.isFocusable(e)) {
          let i = this._getFirstTabbableElement(e);
          return i?.focus(t), !!i;
        }
        return e.focus(t), !0;
      }
      return this.focusFirstTabbableElement(t);
    }
    focusFirstTabbableElement(t) {
      let e = this._getRegionBoundary("start");
      return e && e.focus(t), !!e;
    }
    focusLastTabbableElement(t) {
      let e = this._getRegionBoundary("end");
      return e && e.focus(t), !!e;
    }
    hasAttached() {
      return this._hasAttached;
    }
    _getFirstTabbableElement(t) {
      if (this._checker.isFocusable(t) && this._checker.isTabbable(t)) return t;
      let e = t.children;
      for (let i = 0; i < e.length; i++) {
        let r =
          e[i].nodeType === this._document.ELEMENT_NODE
            ? this._getFirstTabbableElement(e[i])
            : null;
        if (r) return r;
      }
      return null;
    }
    _getLastTabbableElement(t) {
      if (this._checker.isFocusable(t) && this._checker.isTabbable(t)) return t;
      let e = t.children;
      for (let i = e.length - 1; i >= 0; i--) {
        let r =
          e[i].nodeType === this._document.ELEMENT_NODE
            ? this._getLastTabbableElement(e[i])
            : null;
        if (r) return r;
      }
      return null;
    }
    _createAnchor() {
      let t = this._document.createElement("div");
      return (
        this._toggleAnchorTabIndex(this._enabled, t),
        t.classList.add("cdk-visually-hidden"),
        t.classList.add("cdk-focus-trap-anchor"),
        t.setAttribute("aria-hidden", "true"),
        t
      );
    }
    _toggleAnchorTabIndex(t, e) {
      t ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
    }
    toggleAnchors(t) {
      this._startAnchor &&
        this._endAnchor &&
        (this._toggleAnchorTabIndex(t, this._startAnchor),
        this._toggleAnchorTabIndex(t, this._endAnchor));
    }
    _executeOnStable(t) {
      this._injector ? kn(t, { injector: this._injector }) : setTimeout(t);
    }
  },
  jO = (() => {
    class n {
      constructor(e, i, r) {
        (this._checker = e),
          (this._ngZone = i),
          (this._injector = G(St)),
          (this._document = r);
      }
      create(e, i = !1) {
        return new Tf(
          e,
          this._checker,
          this._ngZone,
          this._document,
          i,
          this._injector
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(IO), Z(Re), Z(Oe));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  O1 = (() => {
    class n {
      get enabled() {
        return this.focusTrap?.enabled || !1;
      }
      set enabled(e) {
        this.focusTrap && (this.focusTrap.enabled = e);
      }
      constructor(e, i, r) {
        (this._elementRef = e),
          (this._focusTrapFactory = i),
          (this._previouslyFocusedElement = null),
          G(It).isBrowser &&
            (this.focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
              !0
            ));
      }
      ngOnDestroy() {
        this.focusTrap?.destroy(),
          this._previouslyFocusedElement &&
            (this._previouslyFocusedElement.focus(),
            (this._previouslyFocusedElement = null));
      }
      ngAfterContentInit() {
        this.focusTrap?.attachAnchors(),
          this.autoCapture && this._captureFocus();
      }
      ngDoCheck() {
        this.focusTrap &&
          !this.focusTrap.hasAttached() &&
          this.focusTrap.attachAnchors();
      }
      ngOnChanges(e) {
        let i = e.autoCapture;
        i &&
          !i.firstChange &&
          this.autoCapture &&
          this.focusTrap?.hasAttached() &&
          this._captureFocus();
      }
      _captureFocus() {
        (this._previouslyFocusedElement = Sf()),
          this.focusTrap?.focusInitialElementWhenReady();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Ve), H(jO), H(Oe));
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [["", "cdkTrapFocus", ""]],
          inputs: {
            enabled: [2, "cdkTrapFocus", "enabled", Ee],
            autoCapture: [2, "cdkTrapFocusAutoCapture", "autoCapture", Ee],
          },
          exportAs: ["cdkTrapFocus"],
          standalone: !0,
          features: [Pt, Nt],
        });
      }
    }
    return n;
  })();
function Ef(n) {
  return n.buttons === 0 || n.detail === 0;
}
function kf(n) {
  let t =
    (n.touches && n.touches[0]) || (n.changedTouches && n.changedTouches[0]);
  return (
    !!t &&
    t.identifier === -1 &&
    (t.radiusX == null || t.radiusX === 1) &&
    (t.radiusY == null || t.radiusY === 1)
  );
}
var UO = new Me("cdk-input-modality-detector-options"),
  zO = { ignoreKeys: [18, 17, 224, 91, 16] },
  P1 = 650,
  Ka = dr({ passive: !0, capture: !0 }),
  $O = (() => {
    class n {
      get mostRecentModality() {
        return this._modality.value;
      }
      constructor(e, i, r, o) {
        (this._platform = e),
          (this._mostRecentTarget = null),
          (this._modality = new Kt(null)),
          (this._lastTouchMs = 0),
          (this._onKeydown = (a) => {
            this._options?.ignoreKeys?.some((s) => s === a.keyCode) ||
              (this._modality.next("keyboard"),
              (this._mostRecentTarget = wn(a)));
          }),
          (this._onMousedown = (a) => {
            Date.now() - this._lastTouchMs < P1 ||
              (this._modality.next(Ef(a) ? "keyboard" : "mouse"),
              (this._mostRecentTarget = wn(a)));
          }),
          (this._onTouchstart = (a) => {
            if (kf(a)) {
              this._modality.next("keyboard");
              return;
            }
            (this._lastTouchMs = Date.now()),
              this._modality.next("touch"),
              (this._mostRecentTarget = wn(a));
          }),
          (this._options = Q(Q({}, zO), o)),
          (this.modalityDetected = this._modality.pipe(_s(1))),
          (this.modalityChanged = this.modalityDetected.pipe(hc())),
          e.isBrowser &&
            i.runOutsideAngular(() => {
              r.addEventListener("keydown", this._onKeydown, Ka),
                r.addEventListener("mousedown", this._onMousedown, Ka),
                r.addEventListener("touchstart", this._onTouchstart, Ka);
            });
      }
      ngOnDestroy() {
        this._modality.complete(),
          this._platform.isBrowser &&
            (document.removeEventListener("keydown", this._onKeydown, Ka),
            document.removeEventListener("mousedown", this._onMousedown, Ka),
            document.removeEventListener("touchstart", this._onTouchstart, Ka));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(It), Z(Re), Z(Oe), Z(UO, 8));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var lu = (function (n) {
    return (
      (n[(n.IMMEDIATE = 0)] = "IMMEDIATE"),
      (n[(n.EVENTUAL = 1)] = "EVENTUAL"),
      n
    );
  })(lu || {}),
  WO = new Me("cdk-focus-monitor-default-options"),
  su = dr({ passive: !0, capture: !0 }),
  If = (() => {
    class n {
      constructor(e, i, r, o, a) {
        (this._ngZone = e),
          (this._platform = i),
          (this._inputModalityDetector = r),
          (this._origin = null),
          (this._windowFocused = !1),
          (this._originFromTouchInteraction = !1),
          (this._elementInfo = new Map()),
          (this._monitoredElementCount = 0),
          (this._rootNodeFocusListenerCount = new Map()),
          (this._windowFocusListener = () => {
            (this._windowFocused = !0),
              (this._windowFocusTimeoutId = window.setTimeout(
                () => (this._windowFocused = !1)
              ));
          }),
          (this._stopInputModalityDetector = new Ie()),
          (this._rootNodeFocusAndBlurListener = (s) => {
            let l = wn(s);
            for (let d = l; d; d = d.parentElement)
              s.type === "focus" ? this._onFocus(s, d) : this._onBlur(s, d);
          }),
          (this._document = o),
          (this._detectionMode = a?.detectionMode || lu.IMMEDIATE);
      }
      monitor(e, i = !1) {
        let r = Rr(e);
        if (!this._platform.isBrowser || r.nodeType !== 1) return be();
        let o = C1(r) || this._getDocument(),
          a = this._elementInfo.get(r);
        if (a) return i && (a.checkChildren = !0), a.subject;
        let s = { checkChildren: i, subject: new Ie(), rootNode: o };
        return (
          this._elementInfo.set(r, s),
          this._registerGlobalListeners(s),
          s.subject
        );
      }
      stopMonitoring(e) {
        let i = Rr(e),
          r = this._elementInfo.get(i);
        r &&
          (r.subject.complete(),
          this._setClasses(i),
          this._elementInfo.delete(i),
          this._removeGlobalListeners(r));
      }
      focusVia(e, i, r) {
        let o = Rr(e),
          a = this._getDocument().activeElement;
        o === a
          ? this._getClosestElementsInfo(o).forEach(([s, l]) =>
              this._originChanged(s, i, l)
            )
          : (this._setOrigin(i), typeof o.focus == "function" && o.focus(r));
      }
      ngOnDestroy() {
        this._elementInfo.forEach((e, i) => this.stopMonitoring(i));
      }
      _getDocument() {
        return this._document || document;
      }
      _getWindow() {
        return this._getDocument().defaultView || window;
      }
      _getFocusOrigin(e) {
        return this._origin
          ? this._originFromTouchInteraction
            ? this._shouldBeAttributedToTouch(e)
              ? "touch"
              : "program"
            : this._origin
          : this._windowFocused && this._lastFocusOrigin
          ? this._lastFocusOrigin
          : e && this._isLastInteractionFromInputLabel(e)
          ? "mouse"
          : "program";
      }
      _shouldBeAttributedToTouch(e) {
        return (
          this._detectionMode === lu.EVENTUAL ||
          !!e?.contains(this._inputModalityDetector._mostRecentTarget)
        );
      }
      _setClasses(e, i) {
        e.classList.toggle("cdk-focused", !!i),
          e.classList.toggle("cdk-touch-focused", i === "touch"),
          e.classList.toggle("cdk-keyboard-focused", i === "keyboard"),
          e.classList.toggle("cdk-mouse-focused", i === "mouse"),
          e.classList.toggle("cdk-program-focused", i === "program");
      }
      _setOrigin(e, i = !1) {
        this._ngZone.runOutsideAngular(() => {
          if (
            ((this._origin = e),
            (this._originFromTouchInteraction = e === "touch" && i),
            this._detectionMode === lu.IMMEDIATE)
          ) {
            clearTimeout(this._originTimeoutId);
            let r = this._originFromTouchInteraction ? P1 : 1;
            this._originTimeoutId = setTimeout(() => (this._origin = null), r);
          }
        });
      }
      _onFocus(e, i) {
        let r = this._elementInfo.get(i),
          o = wn(e);
        !r ||
          (!r.checkChildren && i !== o) ||
          this._originChanged(i, this._getFocusOrigin(o), r);
      }
      _onBlur(e, i) {
        let r = this._elementInfo.get(i);
        !r ||
          (r.checkChildren &&
            e.relatedTarget instanceof Node &&
            i.contains(e.relatedTarget)) ||
          (this._setClasses(i), this._emitOrigin(r, null));
      }
      _emitOrigin(e, i) {
        e.subject.observers.length && this._ngZone.run(() => e.subject.next(i));
      }
      _registerGlobalListeners(e) {
        if (!this._platform.isBrowser) return;
        let i = e.rootNode,
          r = this._rootNodeFocusListenerCount.get(i) || 0;
        r ||
          this._ngZone.runOutsideAngular(() => {
            i.addEventListener("focus", this._rootNodeFocusAndBlurListener, su),
              i.addEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                su
              );
          }),
          this._rootNodeFocusListenerCount.set(i, r + 1),
          ++this._monitoredElementCount === 1 &&
            (this._ngZone.runOutsideAngular(() => {
              this._getWindow().addEventListener(
                "focus",
                this._windowFocusListener
              );
            }),
            this._inputModalityDetector.modalityDetected
              .pipe(Ut(this._stopInputModalityDetector))
              .subscribe((o) => {
                this._setOrigin(o, !0);
              }));
      }
      _removeGlobalListeners(e) {
        let i = e.rootNode;
        if (this._rootNodeFocusListenerCount.has(i)) {
          let r = this._rootNodeFocusListenerCount.get(i);
          r > 1
            ? this._rootNodeFocusListenerCount.set(i, r - 1)
            : (i.removeEventListener(
                "focus",
                this._rootNodeFocusAndBlurListener,
                su
              ),
              i.removeEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                su
              ),
              this._rootNodeFocusListenerCount.delete(i));
        }
        --this._monitoredElementCount ||
          (this._getWindow().removeEventListener(
            "focus",
            this._windowFocusListener
          ),
          this._stopInputModalityDetector.next(),
          clearTimeout(this._windowFocusTimeoutId),
          clearTimeout(this._originTimeoutId));
      }
      _originChanged(e, i, r) {
        this._setClasses(e, i),
          this._emitOrigin(r, i),
          (this._lastFocusOrigin = i);
      }
      _getClosestElementsInfo(e) {
        let i = [];
        return (
          this._elementInfo.forEach((r, o) => {
            (o === e || (r.checkChildren && o.contains(e))) && i.push([o, r]);
          }),
          i
        );
      }
      _isLastInteractionFromInputLabel(e) {
        let { _mostRecentTarget: i, mostRecentModality: r } =
          this._inputModalityDetector;
        if (
          r !== "mouse" ||
          !i ||
          i === e ||
          (e.nodeName !== "INPUT" && e.nodeName !== "TEXTAREA") ||
          e.disabled
        )
          return !1;
        let o = e.labels;
        if (o) {
          for (let a = 0; a < o.length; a++) if (o[a].contains(i)) return !0;
        }
        return !1;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Re), Z(It), Z($O), Z(Oe, 8), Z(WO, 8));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  A1 = (() => {
    class n {
      constructor(e, i) {
        (this._elementRef = e),
          (this._focusMonitor = i),
          (this._focusOrigin = null),
          (this.cdkFocusChange = new De());
      }
      get focusOrigin() {
        return this._focusOrigin;
      }
      ngAfterViewInit() {
        let e = this._elementRef.nativeElement;
        this._monitorSubscription = this._focusMonitor
          .monitor(
            e,
            e.nodeType === 1 && e.hasAttribute("cdkMonitorSubtreeFocus")
          )
          .subscribe((i) => {
            (this._focusOrigin = i), this.cdkFocusChange.emit(i);
          });
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._monitorSubscription && this._monitorSubscription.unsubscribe();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Ve), H(If));
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["", "cdkMonitorElementFocus", ""],
            ["", "cdkMonitorSubtreeFocus", ""],
          ],
          outputs: { cdkFocusChange: "cdkFocusChange" },
          exportAs: ["cdkMonitorFocus"],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  zo = (function (n) {
    return (
      (n[(n.NONE = 0)] = "NONE"),
      (n[(n.BLACK_ON_WHITE = 1)] = "BLACK_ON_WHITE"),
      (n[(n.WHITE_ON_BLACK = 2)] = "WHITE_ON_BLACK"),
      n
    );
  })(zo || {}),
  E1 = "cdk-high-contrast-black-on-white",
  k1 = "cdk-high-contrast-white-on-black",
  Mf = "cdk-high-contrast-active",
  Of = (() => {
    class n {
      constructor(e, i) {
        (this._platform = e),
          (this._document = i),
          (this._breakpointSubscription = G(M1)
            .observe("(forced-colors: active)")
            .subscribe(() => {
              this._hasCheckedHighContrastMode &&
                ((this._hasCheckedHighContrastMode = !1),
                this._applyBodyHighContrastModeCssClasses());
            }));
      }
      getHighContrastMode() {
        if (!this._platform.isBrowser) return zo.NONE;
        let e = this._document.createElement("div");
        (e.style.backgroundColor = "rgb(1,2,3)"),
          (e.style.position = "absolute"),
          this._document.body.appendChild(e);
        let i = this._document.defaultView || window,
          r = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
          o = ((r && r.backgroundColor) || "").replace(/ /g, "");
        switch ((e.remove(), o)) {
          case "rgb(0,0,0)":
          case "rgb(45,50,54)":
          case "rgb(32,32,32)":
            return zo.WHITE_ON_BLACK;
          case "rgb(255,255,255)":
          case "rgb(255,250,239)":
            return zo.BLACK_ON_WHITE;
        }
        return zo.NONE;
      }
      ngOnDestroy() {
        this._breakpointSubscription.unsubscribe();
      }
      _applyBodyHighContrastModeCssClasses() {
        if (
          !this._hasCheckedHighContrastMode &&
          this._platform.isBrowser &&
          this._document.body
        ) {
          let e = this._document.body.classList;
          e.remove(Mf, E1, k1), (this._hasCheckedHighContrastMode = !0);
          let i = this.getHighContrastMode();
          i === zo.BLACK_ON_WHITE
            ? e.add(Mf, E1)
            : i === zo.WHITE_ON_BLACK && e.add(Mf, k1);
        }
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(It), Z(Oe));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  R1 = (() => {
    class n {
      constructor(e) {
        e._applyBodyHighContrastModeCssClasses();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Of));
        };
      }
      static {
        this.ɵmod = we({ type: n });
      }
      static {
        this.ɵinj = Ce({ imports: [au] });
      }
    }
    return n;
  })();
var YO = new Me("cdk-dir-doc", { providedIn: "root", factory: qO });
function qO() {
  return G(Oe);
}
var KO =
  /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
function QO(n) {
  let t = n?.toLowerCase() || "";
  return t === "auto" && typeof navigator < "u" && navigator?.language
    ? KO.test(navigator.language)
      ? "rtl"
      : "ltr"
    : t === "rtl"
    ? "rtl"
    : "ltr";
}
var Qa = (() => {
  class n {
    constructor(e) {
      if (((this.value = "ltr"), (this.change = new De()), e)) {
        let i = e.body ? e.body.dir : null,
          r = e.documentElement ? e.documentElement.dir : null;
        this.value = QO(i || r || "ltr");
      }
    }
    ngOnDestroy() {
      this.change.complete();
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(Z(YO, 8));
      };
    }
    static {
      this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var co = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({});
    }
  }
  return n;
})();
var JO = 20,
  N1 = (() => {
    class n {
      constructor(e, i, r) {
        (this._ngZone = e),
          (this._platform = i),
          (this._scrolled = new Ie()),
          (this._globalSubscription = null),
          (this._scrolledCount = 0),
          (this.scrollContainers = new Map()),
          (this._document = r);
      }
      register(e) {
        this.scrollContainers.has(e) ||
          this.scrollContainers.set(
            e,
            e.elementScrolled().subscribe(() => this._scrolled.next(e))
          );
      }
      deregister(e) {
        let i = this.scrollContainers.get(e);
        i && (i.unsubscribe(), this.scrollContainers.delete(e));
      }
      scrolled(e = JO) {
        return this._platform.isBrowser
          ? new Yn((i) => {
              this._globalSubscription || this._addGlobalListener();
              let r =
                e > 0
                  ? this._scrolled.pipe(bh(e)).subscribe(i)
                  : this._scrolled.subscribe(i);
              return (
                this._scrolledCount++,
                () => {
                  r.unsubscribe(),
                    this._scrolledCount--,
                    this._scrolledCount || this._removeGlobalListener();
                }
              );
            })
          : be();
      }
      ngOnDestroy() {
        this._removeGlobalListener(),
          this.scrollContainers.forEach((e, i) => this.deregister(i)),
          this._scrolled.complete();
      }
      ancestorScrolled(e, i) {
        let r = this.getAncestorScrollContainers(e);
        return this.scrolled(i).pipe(Ot((o) => !o || r.indexOf(o) > -1));
      }
      getAncestorScrollContainers(e) {
        let i = [];
        return (
          this.scrollContainers.forEach((r, o) => {
            this._scrollableContainsElement(o, e) && i.push(o);
          }),
          i
        );
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _scrollableContainsElement(e, i) {
        let r = Rr(i),
          o = e.getElementRef().nativeElement;
        do if (r == o) return !0;
        while ((r = r.parentElement));
        return !1;
      }
      _addGlobalListener() {
        this._globalSubscription = this._ngZone.runOutsideAngular(() => {
          let e = this._getWindow();
          return En(e.document, "scroll").subscribe(() =>
            this._scrolled.next()
          );
        });
      }
      _removeGlobalListener() {
        this._globalSubscription &&
          (this._globalSubscription.unsubscribe(),
          (this._globalSubscription = null));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Re), Z(It), Z(Oe, 8));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var eP = 20,
  Pf = (() => {
    class n {
      constructor(e, i, r) {
        (this._platform = e),
          (this._change = new Ie()),
          (this._changeListener = (o) => {
            this._change.next(o);
          }),
          (this._document = r),
          i.runOutsideAngular(() => {
            if (e.isBrowser) {
              let o = this._getWindow();
              o.addEventListener("resize", this._changeListener),
                o.addEventListener("orientationchange", this._changeListener);
            }
            this.change().subscribe(() => (this._viewportSize = null));
          });
      }
      ngOnDestroy() {
        if (this._platform.isBrowser) {
          let e = this._getWindow();
          e.removeEventListener("resize", this._changeListener),
            e.removeEventListener("orientationchange", this._changeListener);
        }
        this._change.complete();
      }
      getViewportSize() {
        this._viewportSize || this._updateViewportSize();
        let e = {
          width: this._viewportSize.width,
          height: this._viewportSize.height,
        };
        return this._platform.isBrowser || (this._viewportSize = null), e;
      }
      getViewportRect() {
        let e = this.getViewportScrollPosition(),
          { width: i, height: r } = this.getViewportSize();
        return {
          top: e.top,
          left: e.left,
          bottom: e.top + r,
          right: e.left + i,
          height: r,
          width: i,
        };
      }
      getViewportScrollPosition() {
        if (!this._platform.isBrowser) return { top: 0, left: 0 };
        let e = this._document,
          i = this._getWindow(),
          r = e.documentElement,
          o = r.getBoundingClientRect(),
          a = -o.top || e.body.scrollTop || i.scrollY || r.scrollTop || 0,
          s = -o.left || e.body.scrollLeft || i.scrollX || r.scrollLeft || 0;
        return { top: a, left: s };
      }
      change(e = eP) {
        return e > 0 ? this._change.pipe(bh(e)) : this._change;
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _updateViewportSize() {
        let e = this._getWindow();
        this._viewportSize = this._platform.isBrowser
          ? { width: e.innerWidth, height: e.innerHeight }
          : { width: 0, height: 0 };
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(It), Z(Re), Z(Oe, 8));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var cu = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = we({ type: n });
      }
      static {
        this.ɵinj = Ce({});
      }
    }
    return n;
  })(),
  Af = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = we({ type: n });
      }
      static {
        this.ɵinj = Ce({ imports: [co, cu, co, cu] });
      }
    }
    return n;
  })();
var Fl = class {
    attach(t) {
      return (this._attachedHost = t), t.attach(this);
    }
    detach() {
      let t = this._attachedHost;
      t != null && ((this._attachedHost = null), t.detach());
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(t) {
      this._attachedHost = t;
    }
  },
  Nl = class extends Fl {
    constructor(t, e, i, r, o) {
      super(),
        (this.component = t),
        (this.viewContainerRef = e),
        (this.injector = i),
        (this.componentFactoryResolver = r),
        (this.projectableNodes = o);
    }
  },
  Ll = class extends Fl {
    constructor(t, e, i, r) {
      super(),
        (this.templateRef = t),
        (this.viewContainerRef = e),
        (this.context = i),
        (this.injector = r);
    }
    get origin() {
      return this.templateRef.elementRef;
    }
    attach(t, e = this.context) {
      return (this.context = e), super.attach(t);
    }
    detach() {
      return (this.context = void 0), super.detach();
    }
  },
  Rf = class extends Fl {
    constructor(t) {
      super(), (this.element = t instanceof Ve ? t.nativeElement : t);
    }
  },
  du = class {
    constructor() {
      (this._isDisposed = !1), (this.attachDomPortal = null);
    }
    hasAttached() {
      return !!this._attachedPortal;
    }
    attach(t) {
      if (t instanceof Nl)
        return (this._attachedPortal = t), this.attachComponentPortal(t);
      if (t instanceof Ll)
        return (this._attachedPortal = t), this.attachTemplatePortal(t);
      if (this.attachDomPortal && t instanceof Rf)
        return (this._attachedPortal = t), this.attachDomPortal(t);
    }
    detach() {
      this._attachedPortal &&
        (this._attachedPortal.setAttachedHost(null),
        (this._attachedPortal = null)),
        this._invokeDisposeFn();
    }
    dispose() {
      this.hasAttached() && this.detach(),
        this._invokeDisposeFn(),
        (this._isDisposed = !0);
    }
    setDisposeFn(t) {
      this._disposeFn = t;
    }
    _invokeDisposeFn() {
      this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
    }
  };
var uu = class extends du {
  constructor(t, e, i, r, o) {
    super(),
      (this.outletElement = t),
      (this._componentFactoryResolver = e),
      (this._appRef = i),
      (this._defaultInjector = r),
      (this.attachDomPortal = (a) => {
        this._document;
        let s = a.element;
        s.parentNode;
        let l = this._document.createComment("dom-portal");
        s.parentNode.insertBefore(l, s),
          this.outletElement.appendChild(s),
          (this._attachedPortal = a),
          super.setDisposeFn(() => {
            l.parentNode && l.parentNode.replaceChild(s, l);
          });
      }),
      (this._document = o);
  }
  attachComponentPortal(t) {
    let i = (
        t.componentFactoryResolver || this._componentFactoryResolver
      ).resolveComponentFactory(t.component),
      r;
    return (
      t.viewContainerRef
        ? ((r = t.viewContainerRef.createComponent(
            i,
            t.viewContainerRef.length,
            t.injector || t.viewContainerRef.injector,
            t.projectableNodes || void 0
          )),
          this.setDisposeFn(() => r.destroy()))
        : ((r = i.create(t.injector || this._defaultInjector || St.NULL)),
          this._appRef.attachView(r.hostView),
          this.setDisposeFn(() => {
            this._appRef.viewCount > 0 && this._appRef.detachView(r.hostView),
              r.destroy();
          })),
      this.outletElement.appendChild(this._getComponentRootNode(r)),
      (this._attachedPortal = t),
      r
    );
  }
  attachTemplatePortal(t) {
    let e = t.viewContainerRef,
      i = e.createEmbeddedView(t.templateRef, t.context, {
        injector: t.injector,
      });
    return (
      i.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
      i.detectChanges(),
      this.setDisposeFn(() => {
        let r = e.indexOf(i);
        r !== -1 && e.remove(r);
      }),
      (this._attachedPortal = t),
      i
    );
  }
  dispose() {
    super.dispose(), this.outletElement.remove();
  }
  _getComponentRootNode(t) {
    return t.hostView.rootNodes[0];
  }
};
var Ff = (() => {
  class n extends du {
    constructor(e, i, r) {
      super(),
        (this._componentFactoryResolver = e),
        (this._viewContainerRef = i),
        (this._isInitialized = !1),
        (this.attached = new De()),
        (this.attachDomPortal = (o) => {
          this._document;
          let a = o.element;
          a.parentNode;
          let s = this._document.createComment("dom-portal");
          o.setAttachedHost(this),
            a.parentNode.insertBefore(s, a),
            this._getRootNode().appendChild(a),
            (this._attachedPortal = o),
            super.setDisposeFn(() => {
              s.parentNode && s.parentNode.replaceChild(a, s);
            });
        }),
        (this._document = r);
    }
    get portal() {
      return this._attachedPortal;
    }
    set portal(e) {
      (this.hasAttached() && !e && !this._isInitialized) ||
        (this.hasAttached() && super.detach(),
        e && super.attach(e),
        (this._attachedPortal = e || null));
    }
    get attachedRef() {
      return this._attachedRef;
    }
    ngOnInit() {
      this._isInitialized = !0;
    }
    ngOnDestroy() {
      super.dispose(), (this._attachedRef = this._attachedPortal = null);
    }
    attachComponentPortal(e) {
      e.setAttachedHost(this);
      let i =
          e.viewContainerRef != null
            ? e.viewContainerRef
            : this._viewContainerRef,
        o = (
          e.componentFactoryResolver || this._componentFactoryResolver
        ).resolveComponentFactory(e.component),
        a = i.createComponent(
          o,
          i.length,
          e.injector || i.injector,
          e.projectableNodes || void 0
        );
      return (
        i !== this._viewContainerRef &&
          this._getRootNode().appendChild(a.hostView.rootNodes[0]),
        super.setDisposeFn(() => a.destroy()),
        (this._attachedPortal = e),
        (this._attachedRef = a),
        this.attached.emit(a),
        a
      );
    }
    attachTemplatePortal(e) {
      e.setAttachedHost(this);
      let i = this._viewContainerRef.createEmbeddedView(
        e.templateRef,
        e.context,
        { injector: e.injector }
      );
      return (
        super.setDisposeFn(() => this._viewContainerRef.clear()),
        (this._attachedPortal = e),
        (this._attachedRef = i),
        this.attached.emit(i),
        i
      );
    }
    _getRootNode() {
      let e = this._viewContainerRef.element.nativeElement;
      return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(H(xo), H(Ji), H(Oe));
      };
    }
    static {
      this.ɵdir = Ae({
        type: n,
        selectors: [["", "cdkPortalOutlet", ""]],
        inputs: { portal: [0, "cdkPortalOutlet", "portal"] },
        outputs: { attached: "attached" },
        exportAs: ["cdkPortalOutlet"],
        standalone: !0,
        features: [Je],
      });
    }
  }
  return n;
})();
var hu = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({});
    }
  }
  return n;
})();
var L1 = x1(),
  Nf = class {
    constructor(t, e) {
      (this._viewportRuler = t),
        (this._previousHTMLStyles = { top: "", left: "" }),
        (this._isEnabled = !1),
        (this._document = e);
    }
    attach() {}
    enable() {
      if (this._canBeEnabled()) {
        let t = this._document.documentElement;
        (this._previousScrollPosition =
          this._viewportRuler.getViewportScrollPosition()),
          (this._previousHTMLStyles.left = t.style.left || ""),
          (this._previousHTMLStyles.top = t.style.top || ""),
          (t.style.left = Zt(-this._previousScrollPosition.left)),
          (t.style.top = Zt(-this._previousScrollPosition.top)),
          t.classList.add("cdk-global-scrollblock"),
          (this._isEnabled = !0);
      }
    }
    disable() {
      if (this._isEnabled) {
        let t = this._document.documentElement,
          e = this._document.body,
          i = t.style,
          r = e.style,
          o = i.scrollBehavior || "",
          a = r.scrollBehavior || "";
        (this._isEnabled = !1),
          (i.left = this._previousHTMLStyles.left),
          (i.top = this._previousHTMLStyles.top),
          t.classList.remove("cdk-global-scrollblock"),
          L1 && (i.scrollBehavior = r.scrollBehavior = "auto"),
          window.scroll(
            this._previousScrollPosition.left,
            this._previousScrollPosition.top
          ),
          L1 && ((i.scrollBehavior = o), (r.scrollBehavior = a));
      }
    }
    _canBeEnabled() {
      if (
        this._document.documentElement.classList.contains(
          "cdk-global-scrollblock"
        ) ||
        this._isEnabled
      )
        return !1;
      let e = this._document.body,
        i = this._viewportRuler.getViewportSize();
      return e.scrollHeight > i.height || e.scrollWidth > i.width;
    }
  };
var Lf = class {
    constructor(t, e, i, r) {
      (this._scrollDispatcher = t),
        (this._ngZone = e),
        (this._viewportRuler = i),
        (this._config = r),
        (this._scrollSubscription = null),
        (this._detach = () => {
          this.disable(),
            this._overlayRef.hasAttached() &&
              this._ngZone.run(() => this._overlayRef.detach());
        });
    }
    attach(t) {
      this._overlayRef, (this._overlayRef = t);
    }
    enable() {
      if (this._scrollSubscription) return;
      let t = this._scrollDispatcher
        .scrolled(0)
        .pipe(
          Ot(
            (e) =>
              !e ||
              !this._overlayRef.overlayElement.contains(
                e.getElementRef().nativeElement
              )
          )
        );
      this._config && this._config.threshold && this._config.threshold > 1
        ? ((this._initialScrollPosition =
            this._viewportRuler.getViewportScrollPosition().top),
          (this._scrollSubscription = t.subscribe(() => {
            let e = this._viewportRuler.getViewportScrollPosition().top;
            Math.abs(e - this._initialScrollPosition) > this._config.threshold
              ? this._detach()
              : this._overlayRef.updatePosition();
          })))
        : (this._scrollSubscription = t.subscribe(this._detach));
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  pu = class {
    enable() {}
    disable() {}
    attach() {}
  };
function Vf(n, t) {
  return t.some((e) => {
    let i = n.bottom < e.top,
      r = n.top > e.bottom,
      o = n.right < e.left,
      a = n.left > e.right;
    return i || r || o || a;
  });
}
function V1(n, t) {
  return t.some((e) => {
    let i = n.top < e.top,
      r = n.bottom > e.bottom,
      o = n.left < e.left,
      a = n.right > e.right;
    return i || r || o || a;
  });
}
var Bf = class {
    constructor(t, e, i, r) {
      (this._scrollDispatcher = t),
        (this._viewportRuler = e),
        (this._ngZone = i),
        (this._config = r),
        (this._scrollSubscription = null);
    }
    attach(t) {
      this._overlayRef, (this._overlayRef = t);
    }
    enable() {
      if (!this._scrollSubscription) {
        let t = this._config ? this._config.scrollThrottle : 0;
        this._scrollSubscription = this._scrollDispatcher
          .scrolled(t)
          .subscribe(() => {
            if (
              (this._overlayRef.updatePosition(),
              this._config && this._config.autoClose)
            ) {
              let e = this._overlayRef.overlayElement.getBoundingClientRect(),
                { width: i, height: r } = this._viewportRuler.getViewportSize();
              Vf(e, [
                { width: i, height: r, bottom: r, right: i, top: 0, left: 0 },
              ]) &&
                (this.disable(),
                this._ngZone.run(() => this._overlayRef.detach()));
            }
          });
      }
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  iP = (() => {
    class n {
      constructor(e, i, r, o) {
        (this._scrollDispatcher = e),
          (this._viewportRuler = i),
          (this._ngZone = r),
          (this.noop = () => new pu()),
          (this.close = (a) =>
            new Lf(
              this._scrollDispatcher,
              this._ngZone,
              this._viewportRuler,
              a
            )),
          (this.block = () => new Nf(this._viewportRuler, this._document)),
          (this.reposition = (a) =>
            new Bf(
              this._scrollDispatcher,
              this._viewportRuler,
              this._ngZone,
              a
            )),
          (this._document = o);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(N1), Z(Pf), Z(Re), Z(Oe));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  mu = class {
    constructor(t) {
      if (
        ((this.scrollStrategy = new pu()),
        (this.panelClass = ""),
        (this.hasBackdrop = !1),
        (this.backdropClass = "cdk-overlay-dark-backdrop"),
        (this.disposeOnNavigation = !1),
        t)
      ) {
        let e = Object.keys(t);
        for (let i of e) t[i] !== void 0 && (this[i] = t[i]);
      }
    }
  };
var Hf = class {
  constructor(t, e) {
    (this.connectionPair = t), (this.scrollableViewProperties = e);
  }
};
var $1 = (() => {
    class n {
      constructor(e) {
        (this._attachedOverlays = []), (this._document = e);
      }
      ngOnDestroy() {
        this.detach();
      }
      add(e) {
        this.remove(e), this._attachedOverlays.push(e);
      }
      remove(e) {
        let i = this._attachedOverlays.indexOf(e);
        i > -1 && this._attachedOverlays.splice(i, 1),
          this._attachedOverlays.length === 0 && this.detach();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  nP = (() => {
    class n extends $1 {
      constructor(e, i) {
        super(e),
          (this._ngZone = i),
          (this._keydownListener = (r) => {
            let o = this._attachedOverlays;
            for (let a = o.length - 1; a > -1; a--)
              if (o[a]._keydownEvents.observers.length > 0) {
                let s = o[a]._keydownEvents;
                this._ngZone ? this._ngZone.run(() => s.next(r)) : s.next(r);
                break;
              }
          });
      }
      add(e) {
        super.add(e),
          this._isAttached ||
            (this._ngZone
              ? this._ngZone.runOutsideAngular(() =>
                  this._document.body.addEventListener(
                    "keydown",
                    this._keydownListener
                  )
                )
              : this._document.body.addEventListener(
                  "keydown",
                  this._keydownListener
                ),
            (this._isAttached = !0));
      }
      detach() {
        this._isAttached &&
          (this._document.body.removeEventListener(
            "keydown",
            this._keydownListener
          ),
          (this._isAttached = !1));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe), Z(Re, 8));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  rP = (() => {
    class n extends $1 {
      constructor(e, i, r) {
        super(e),
          (this._platform = i),
          (this._ngZone = r),
          (this._cursorStyleIsSet = !1),
          (this._pointerDownListener = (o) => {
            this._pointerDownEventTarget = wn(o);
          }),
          (this._clickListener = (o) => {
            let a = wn(o),
              s =
                o.type === "click" && this._pointerDownEventTarget
                  ? this._pointerDownEventTarget
                  : a;
            this._pointerDownEventTarget = null;
            let l = this._attachedOverlays.slice();
            for (let d = l.length - 1; d > -1; d--) {
              let m = l[d];
              if (
                m._outsidePointerEvents.observers.length < 1 ||
                !m.hasAttached()
              )
                continue;
              if (B1(m.overlayElement, a) || B1(m.overlayElement, s)) break;
              let v = m._outsidePointerEvents;
              this._ngZone ? this._ngZone.run(() => v.next(o)) : v.next(o);
            }
          });
      }
      add(e) {
        if ((super.add(e), !this._isAttached)) {
          let i = this._document.body;
          this._ngZone
            ? this._ngZone.runOutsideAngular(() => this._addEventListeners(i))
            : this._addEventListeners(i),
            this._platform.IOS &&
              !this._cursorStyleIsSet &&
              ((this._cursorOriginalValue = i.style.cursor),
              (i.style.cursor = "pointer"),
              (this._cursorStyleIsSet = !0)),
            (this._isAttached = !0);
        }
      }
      detach() {
        if (this._isAttached) {
          let e = this._document.body;
          e.removeEventListener("pointerdown", this._pointerDownListener, !0),
            e.removeEventListener("click", this._clickListener, !0),
            e.removeEventListener("auxclick", this._clickListener, !0),
            e.removeEventListener("contextmenu", this._clickListener, !0),
            this._platform.IOS &&
              this._cursorStyleIsSet &&
              ((e.style.cursor = this._cursorOriginalValue),
              (this._cursorStyleIsSet = !1)),
            (this._isAttached = !1);
        }
      }
      _addEventListeners(e) {
        e.addEventListener("pointerdown", this._pointerDownListener, !0),
          e.addEventListener("click", this._clickListener, !0),
          e.addEventListener("auxclick", this._clickListener, !0),
          e.addEventListener("contextmenu", this._clickListener, !0);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe), Z(It), Z(Re, 8));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function B1(n, t) {
  let e = typeof ShadowRoot < "u" && ShadowRoot,
    i = t;
  for (; i; ) {
    if (i === n) return !0;
    i = e && i instanceof ShadowRoot ? i.host : i.parentNode;
  }
  return !1;
}
var W1 = (() => {
    class n {
      constructor(e, i) {
        (this._platform = i), (this._document = e);
      }
      ngOnDestroy() {
        this._containerElement?.remove();
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = "cdk-overlay-container";
        if (this._platform.isBrowser || Rl()) {
          let r = this._document.querySelectorAll(
            `.${e}[platform="server"], .${e}[platform="test"]`
          );
          for (let o = 0; o < r.length; o++) r[o].remove();
        }
        let i = this._document.createElement("div");
        i.classList.add(e),
          Rl()
            ? i.setAttribute("platform", "test")
            : this._platform.isBrowser || i.setAttribute("platform", "server"),
          this._document.body.appendChild(i),
          (this._containerElement = i);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe), Z(It));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  jf = class {
    constructor(t, e, i, r, o, a, s, l, d, m = !1, v) {
      (this._portalOutlet = t),
        (this._host = e),
        (this._pane = i),
        (this._config = r),
        (this._ngZone = o),
        (this._keyboardDispatcher = a),
        (this._document = s),
        (this._location = l),
        (this._outsideClickDispatcher = d),
        (this._animationsDisabled = m),
        (this._injector = v),
        (this._backdropElement = null),
        (this._backdropClick = new Ie()),
        (this._attachments = new Ie()),
        (this._detachments = new Ie()),
        (this._locationChanges = Xi.EMPTY),
        (this._backdropClickHandler = (x) => this._backdropClick.next(x)),
        (this._backdropTransitionendHandler = (x) => {
          this._disposeBackdrop(x.target);
        }),
        (this._keydownEvents = new Ie()),
        (this._outsidePointerEvents = new Ie()),
        (this._renders = new Ie()),
        r.scrollStrategy &&
          ((this._scrollStrategy = r.scrollStrategy),
          this._scrollStrategy.attach(this)),
        (this._positionStrategy = r.positionStrategy),
        (this._afterRenderRef = An(() =>
          kh(
            () => {
              this._renders.next();
            },
            { injector: this._injector }
          )
        ));
    }
    get overlayElement() {
      return this._pane;
    }
    get backdropElement() {
      return this._backdropElement;
    }
    get hostElement() {
      return this._host;
    }
    attach(t) {
      !this._host.parentElement &&
        this._previousHostParent &&
        this._previousHostParent.appendChild(this._host);
      let e = this._portalOutlet.attach(t);
      return (
        this._positionStrategy && this._positionStrategy.attach(this),
        this._updateStackingOrder(),
        this._updateElementSize(),
        this._updateElementDirection(),
        this._scrollStrategy && this._scrollStrategy.enable(),
        this._afterNextRenderRef?.destroy(),
        (this._afterNextRenderRef = kn(
          () => {
            this.hasAttached() && this.updatePosition();
          },
          { injector: this._injector }
        )),
        this._togglePointerEvents(!0),
        this._config.hasBackdrop && this._attachBackdrop(),
        this._config.panelClass &&
          this._toggleClasses(this._pane, this._config.panelClass, !0),
        this._attachments.next(),
        this._keyboardDispatcher.add(this),
        this._config.disposeOnNavigation &&
          (this._locationChanges = this._location.subscribe(() =>
            this.dispose()
          )),
        this._outsideClickDispatcher.add(this),
        typeof e?.onDestroy == "function" &&
          e.onDestroy(() => {
            this.hasAttached() &&
              this._ngZone.runOutsideAngular(() =>
                Promise.resolve().then(() => this.detach())
              );
          }),
        e
      );
    }
    detach() {
      if (!this.hasAttached()) return;
      this.detachBackdrop(),
        this._togglePointerEvents(!1),
        this._positionStrategy &&
          this._positionStrategy.detach &&
          this._positionStrategy.detach(),
        this._scrollStrategy && this._scrollStrategy.disable();
      let t = this._portalOutlet.detach();
      return (
        this._detachments.next(),
        this._keyboardDispatcher.remove(this),
        this._detachContentWhenEmpty(),
        this._locationChanges.unsubscribe(),
        this._outsideClickDispatcher.remove(this),
        t
      );
    }
    dispose() {
      let t = this.hasAttached();
      this._positionStrategy && this._positionStrategy.dispose(),
        this._disposeScrollStrategy(),
        this._disposeBackdrop(this._backdropElement),
        this._locationChanges.unsubscribe(),
        this._keyboardDispatcher.remove(this),
        this._portalOutlet.dispose(),
        this._attachments.complete(),
        this._backdropClick.complete(),
        this._keydownEvents.complete(),
        this._outsidePointerEvents.complete(),
        this._outsideClickDispatcher.remove(this),
        this._host?.remove(),
        this._afterNextRenderRef?.destroy(),
        (this._previousHostParent = this._pane = this._host = null),
        t && this._detachments.next(),
        this._detachments.complete(),
        this._afterRenderRef.destroy(),
        this._renders.complete();
    }
    hasAttached() {
      return this._portalOutlet.hasAttached();
    }
    backdropClick() {
      return this._backdropClick;
    }
    attachments() {
      return this._attachments;
    }
    detachments() {
      return this._detachments;
    }
    keydownEvents() {
      return this._keydownEvents;
    }
    outsidePointerEvents() {
      return this._outsidePointerEvents;
    }
    getConfig() {
      return this._config;
    }
    updatePosition() {
      this._positionStrategy && this._positionStrategy.apply();
    }
    updatePositionStrategy(t) {
      t !== this._positionStrategy &&
        (this._positionStrategy && this._positionStrategy.dispose(),
        (this._positionStrategy = t),
        this.hasAttached() && (t.attach(this), this.updatePosition()));
    }
    updateSize(t) {
      (this._config = Q(Q({}, this._config), t)), this._updateElementSize();
    }
    setDirection(t) {
      (this._config = Be(Q({}, this._config), { direction: t })),
        this._updateElementDirection();
    }
    addPanelClass(t) {
      this._pane && this._toggleClasses(this._pane, t, !0);
    }
    removePanelClass(t) {
      this._pane && this._toggleClasses(this._pane, t, !1);
    }
    getDirection() {
      let t = this._config.direction;
      return t ? (typeof t == "string" ? t : t.value) : "ltr";
    }
    updateScrollStrategy(t) {
      t !== this._scrollStrategy &&
        (this._disposeScrollStrategy(),
        (this._scrollStrategy = t),
        this.hasAttached() && (t.attach(this), t.enable()));
    }
    _updateElementDirection() {
      this._host.setAttribute("dir", this.getDirection());
    }
    _updateElementSize() {
      if (!this._pane) return;
      let t = this._pane.style;
      (t.width = Zt(this._config.width)),
        (t.height = Zt(this._config.height)),
        (t.minWidth = Zt(this._config.minWidth)),
        (t.minHeight = Zt(this._config.minHeight)),
        (t.maxWidth = Zt(this._config.maxWidth)),
        (t.maxHeight = Zt(this._config.maxHeight));
    }
    _togglePointerEvents(t) {
      this._pane.style.pointerEvents = t ? "" : "none";
    }
    _attachBackdrop() {
      let t = "cdk-overlay-backdrop-showing";
      (this._backdropElement = this._document.createElement("div")),
        this._backdropElement.classList.add("cdk-overlay-backdrop"),
        this._animationsDisabled &&
          this._backdropElement.classList.add(
            "cdk-overlay-backdrop-noop-animation"
          ),
        this._config.backdropClass &&
          this._toggleClasses(
            this._backdropElement,
            this._config.backdropClass,
            !0
          ),
        this._host.parentElement.insertBefore(
          this._backdropElement,
          this._host
        ),
        this._backdropElement.addEventListener(
          "click",
          this._backdropClickHandler
        ),
        !this._animationsDisabled && typeof requestAnimationFrame < "u"
          ? this._ngZone.runOutsideAngular(() => {
              requestAnimationFrame(() => {
                this._backdropElement && this._backdropElement.classList.add(t);
              });
            })
          : this._backdropElement.classList.add(t);
    }
    _updateStackingOrder() {
      this._host.nextSibling && this._host.parentNode.appendChild(this._host);
    }
    detachBackdrop() {
      let t = this._backdropElement;
      if (t) {
        if (this._animationsDisabled) {
          this._disposeBackdrop(t);
          return;
        }
        t.classList.remove("cdk-overlay-backdrop-showing"),
          this._ngZone.runOutsideAngular(() => {
            t.addEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            );
          }),
          (t.style.pointerEvents = "none"),
          (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
            setTimeout(() => {
              this._disposeBackdrop(t);
            }, 500)
          ));
      }
    }
    _toggleClasses(t, e, i) {
      let r = qa(e || []).filter((o) => !!o);
      r.length && (i ? t.classList.add(...r) : t.classList.remove(...r));
    }
    _detachContentWhenEmpty() {
      this._ngZone.runOutsideAngular(() => {
        let t = this._renders
          .pipe(Ut(ra(this._attachments, this._detachments)))
          .subscribe(() => {
            (!this._pane || !this._host || this._pane.children.length === 0) &&
              (this._pane &&
                this._config.panelClass &&
                this._toggleClasses(this._pane, this._config.panelClass, !1),
              this._host &&
                this._host.parentElement &&
                ((this._previousHostParent = this._host.parentElement),
                this._host.remove()),
              t.unsubscribe());
          });
      });
    }
    _disposeScrollStrategy() {
      let t = this._scrollStrategy;
      t && (t.disable(), t.detach && t.detach());
    }
    _disposeBackdrop(t) {
      t &&
        (t.removeEventListener("click", this._backdropClickHandler),
        t.removeEventListener(
          "transitionend",
          this._backdropTransitionendHandler
        ),
        t.remove(),
        this._backdropElement === t && (this._backdropElement = null)),
        this._backdropTimeout &&
          (clearTimeout(this._backdropTimeout),
          (this._backdropTimeout = void 0));
    }
  },
  H1 = "cdk-overlay-connected-position-bounding-box",
  oP = /([A-Za-z%]+)$/,
  fu = class {
    get positions() {
      return this._preferredPositions;
    }
    constructor(t, e, i, r, o) {
      (this._viewportRuler = e),
        (this._document = i),
        (this._platform = r),
        (this._overlayContainer = o),
        (this._lastBoundingBoxSize = { width: 0, height: 0 }),
        (this._isPushed = !1),
        (this._canPush = !0),
        (this._growAfterOpen = !1),
        (this._hasFlexibleDimensions = !0),
        (this._positionLocked = !1),
        (this._viewportMargin = 0),
        (this._scrollables = []),
        (this._preferredPositions = []),
        (this._positionChanges = new Ie()),
        (this._resizeSubscription = Xi.EMPTY),
        (this._offsetX = 0),
        (this._offsetY = 0),
        (this._appliedPanelClasses = []),
        (this.positionChanges = this._positionChanges),
        this.setOrigin(t);
    }
    attach(t) {
      this._overlayRef && this._overlayRef,
        this._validatePositions(),
        t.hostElement.classList.add(H1),
        (this._overlayRef = t),
        (this._boundingBox = t.hostElement),
        (this._pane = t.overlayElement),
        (this._isDisposed = !1),
        (this._isInitialRender = !0),
        (this._lastPosition = null),
        this._resizeSubscription.unsubscribe(),
        (this._resizeSubscription = this._viewportRuler
          .change()
          .subscribe(() => {
            (this._isInitialRender = !0), this.apply();
          }));
    }
    apply() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      if (
        !this._isInitialRender &&
        this._positionLocked &&
        this._lastPosition
      ) {
        this.reapplyLastPosition();
        return;
      }
      this._clearPanelClasses(),
        this._resetOverlayElementStyles(),
        this._resetBoundingBoxStyles(),
        (this._viewportRect = this._getNarrowedViewportRect()),
        (this._originRect = this._getOriginRect()),
        (this._overlayRect = this._pane.getBoundingClientRect()),
        (this._containerRect = this._overlayContainer
          .getContainerElement()
          .getBoundingClientRect());
      let t = this._originRect,
        e = this._overlayRect,
        i = this._viewportRect,
        r = this._containerRect,
        o = [],
        a;
      for (let s of this._preferredPositions) {
        let l = this._getOriginPoint(t, r, s),
          d = this._getOverlayPoint(l, e, s),
          m = this._getOverlayFit(d, e, i, s);
        if (m.isCompletelyWithinViewport) {
          (this._isPushed = !1), this._applyPosition(s, l);
          return;
        }
        if (this._canFitWithFlexibleDimensions(m, d, i)) {
          o.push({
            position: s,
            origin: l,
            overlayRect: e,
            boundingBoxRect: this._calculateBoundingBoxRect(l, s),
          });
          continue;
        }
        (!a || a.overlayFit.visibleArea < m.visibleArea) &&
          (a = {
            overlayFit: m,
            overlayPoint: d,
            originPoint: l,
            position: s,
            overlayRect: e,
          });
      }
      if (o.length) {
        let s = null,
          l = -1;
        for (let d of o) {
          let m =
            d.boundingBoxRect.width *
            d.boundingBoxRect.height *
            (d.position.weight || 1);
          m > l && ((l = m), (s = d));
        }
        (this._isPushed = !1), this._applyPosition(s.position, s.origin);
        return;
      }
      if (this._canPush) {
        (this._isPushed = !0), this._applyPosition(a.position, a.originPoint);
        return;
      }
      this._applyPosition(a.position, a.originPoint);
    }
    detach() {
      this._clearPanelClasses(),
        (this._lastPosition = null),
        (this._previousPushAmount = null),
        this._resizeSubscription.unsubscribe();
    }
    dispose() {
      this._isDisposed ||
        (this._boundingBox &&
          $o(this._boundingBox.style, {
            top: "",
            left: "",
            right: "",
            bottom: "",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          }),
        this._pane && this._resetOverlayElementStyles(),
        this._overlayRef && this._overlayRef.hostElement.classList.remove(H1),
        this.detach(),
        this._positionChanges.complete(),
        (this._overlayRef = this._boundingBox = null),
        (this._isDisposed = !0));
    }
    reapplyLastPosition() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      let t = this._lastPosition;
      if (t) {
        (this._originRect = this._getOriginRect()),
          (this._overlayRect = this._pane.getBoundingClientRect()),
          (this._viewportRect = this._getNarrowedViewportRect()),
          (this._containerRect = this._overlayContainer
            .getContainerElement()
            .getBoundingClientRect());
        let e = this._getOriginPoint(this._originRect, this._containerRect, t);
        this._applyPosition(t, e);
      } else this.apply();
    }
    withScrollableContainers(t) {
      return (this._scrollables = t), this;
    }
    withPositions(t) {
      return (
        (this._preferredPositions = t),
        t.indexOf(this._lastPosition) === -1 && (this._lastPosition = null),
        this._validatePositions(),
        this
      );
    }
    withViewportMargin(t) {
      return (this._viewportMargin = t), this;
    }
    withFlexibleDimensions(t = !0) {
      return (this._hasFlexibleDimensions = t), this;
    }
    withGrowAfterOpen(t = !0) {
      return (this._growAfterOpen = t), this;
    }
    withPush(t = !0) {
      return (this._canPush = t), this;
    }
    withLockedPosition(t = !0) {
      return (this._positionLocked = t), this;
    }
    setOrigin(t) {
      return (this._origin = t), this;
    }
    withDefaultOffsetX(t) {
      return (this._offsetX = t), this;
    }
    withDefaultOffsetY(t) {
      return (this._offsetY = t), this;
    }
    withTransformOriginOn(t) {
      return (this._transformOriginSelector = t), this;
    }
    _getOriginPoint(t, e, i) {
      let r;
      if (i.originX == "center") r = t.left + t.width / 2;
      else {
        let a = this._isRtl() ? t.right : t.left,
          s = this._isRtl() ? t.left : t.right;
        r = i.originX == "start" ? a : s;
      }
      e.left < 0 && (r -= e.left);
      let o;
      return (
        i.originY == "center"
          ? (o = t.top + t.height / 2)
          : (o = i.originY == "top" ? t.top : t.bottom),
        e.top < 0 && (o -= e.top),
        { x: r, y: o }
      );
    }
    _getOverlayPoint(t, e, i) {
      let r;
      i.overlayX == "center"
        ? (r = -e.width / 2)
        : i.overlayX === "start"
        ? (r = this._isRtl() ? -e.width : 0)
        : (r = this._isRtl() ? 0 : -e.width);
      let o;
      return (
        i.overlayY == "center"
          ? (o = -e.height / 2)
          : (o = i.overlayY == "top" ? 0 : -e.height),
        { x: t.x + r, y: t.y + o }
      );
    }
    _getOverlayFit(t, e, i, r) {
      let o = U1(e),
        { x: a, y: s } = t,
        l = this._getOffset(r, "x"),
        d = this._getOffset(r, "y");
      l && (a += l), d && (s += d);
      let m = 0 - a,
        v = a + o.width - i.width,
        x = 0 - s,
        C = s + o.height - i.height,
        S = this._subtractOverflows(o.width, m, v),
        T = this._subtractOverflows(o.height, x, C),
        k = S * T;
      return {
        visibleArea: k,
        isCompletelyWithinViewport: o.width * o.height === k,
        fitsInViewportVertically: T === o.height,
        fitsInViewportHorizontally: S == o.width,
      };
    }
    _canFitWithFlexibleDimensions(t, e, i) {
      if (this._hasFlexibleDimensions) {
        let r = i.bottom - e.y,
          o = i.right - e.x,
          a = j1(this._overlayRef.getConfig().minHeight),
          s = j1(this._overlayRef.getConfig().minWidth),
          l = t.fitsInViewportVertically || (a != null && a <= r),
          d = t.fitsInViewportHorizontally || (s != null && s <= o);
        return l && d;
      }
      return !1;
    }
    _pushOverlayOnScreen(t, e, i) {
      if (this._previousPushAmount && this._positionLocked)
        return {
          x: t.x + this._previousPushAmount.x,
          y: t.y + this._previousPushAmount.y,
        };
      let r = U1(e),
        o = this._viewportRect,
        a = Math.max(t.x + r.width - o.width, 0),
        s = Math.max(t.y + r.height - o.height, 0),
        l = Math.max(o.top - i.top - t.y, 0),
        d = Math.max(o.left - i.left - t.x, 0),
        m = 0,
        v = 0;
      return (
        r.width <= o.width
          ? (m = d || -a)
          : (m = t.x < this._viewportMargin ? o.left - i.left - t.x : 0),
        r.height <= o.height
          ? (v = l || -s)
          : (v = t.y < this._viewportMargin ? o.top - i.top - t.y : 0),
        (this._previousPushAmount = { x: m, y: v }),
        { x: t.x + m, y: t.y + v }
      );
    }
    _applyPosition(t, e) {
      if (
        (this._setTransformOrigin(t),
        this._setOverlayElementStyles(e, t),
        this._setBoundingBoxStyles(e, t),
        t.panelClass && this._addPanelClasses(t.panelClass),
        this._positionChanges.observers.length)
      ) {
        let i = this._getScrollVisibility();
        if (
          t !== this._lastPosition ||
          !this._lastScrollVisibility ||
          !aP(this._lastScrollVisibility, i)
        ) {
          let r = new Hf(t, i);
          this._positionChanges.next(r);
        }
        this._lastScrollVisibility = i;
      }
      (this._lastPosition = t), (this._isInitialRender = !1);
    }
    _setTransformOrigin(t) {
      if (!this._transformOriginSelector) return;
      let e = this._boundingBox.querySelectorAll(this._transformOriginSelector),
        i,
        r = t.overlayY;
      t.overlayX === "center"
        ? (i = "center")
        : this._isRtl()
        ? (i = t.overlayX === "start" ? "right" : "left")
        : (i = t.overlayX === "start" ? "left" : "right");
      for (let o = 0; o < e.length; o++)
        e[o].style.transformOrigin = `${i} ${r}`;
    }
    _calculateBoundingBoxRect(t, e) {
      let i = this._viewportRect,
        r = this._isRtl(),
        o,
        a,
        s;
      if (e.overlayY === "top")
        (a = t.y), (o = i.height - a + this._viewportMargin);
      else if (e.overlayY === "bottom")
        (s = i.height - t.y + this._viewportMargin * 2),
          (o = i.height - s + this._viewportMargin);
      else {
        let C = Math.min(i.bottom - t.y + i.top, t.y),
          S = this._lastBoundingBoxSize.height;
        (o = C * 2),
          (a = t.y - C),
          o > S &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (a = t.y - S / 2);
      }
      let l = (e.overlayX === "start" && !r) || (e.overlayX === "end" && r),
        d = (e.overlayX === "end" && !r) || (e.overlayX === "start" && r),
        m,
        v,
        x;
      if (d)
        (x = i.width - t.x + this._viewportMargin * 2),
          (m = t.x - this._viewportMargin);
      else if (l) (v = t.x), (m = i.right - t.x);
      else {
        let C = Math.min(i.right - t.x + i.left, t.x),
          S = this._lastBoundingBoxSize.width;
        (m = C * 2),
          (v = t.x - C),
          m > S &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (v = t.x - S / 2);
      }
      return { top: a, left: v, bottom: s, right: x, width: m, height: o };
    }
    _setBoundingBoxStyles(t, e) {
      let i = this._calculateBoundingBoxRect(t, e);
      !this._isInitialRender &&
        !this._growAfterOpen &&
        ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
        (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
      let r = {};
      if (this._hasExactPosition())
        (r.top = r.left = "0"),
          (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
          (r.width = r.height = "100%");
      else {
        let o = this._overlayRef.getConfig().maxHeight,
          a = this._overlayRef.getConfig().maxWidth;
        (r.height = Zt(i.height)),
          (r.top = Zt(i.top)),
          (r.bottom = Zt(i.bottom)),
          (r.width = Zt(i.width)),
          (r.left = Zt(i.left)),
          (r.right = Zt(i.right)),
          e.overlayX === "center"
            ? (r.alignItems = "center")
            : (r.alignItems = e.overlayX === "end" ? "flex-end" : "flex-start"),
          e.overlayY === "center"
            ? (r.justifyContent = "center")
            : (r.justifyContent =
                e.overlayY === "bottom" ? "flex-end" : "flex-start"),
          o && (r.maxHeight = Zt(o)),
          a && (r.maxWidth = Zt(a));
      }
      (this._lastBoundingBoxSize = i), $o(this._boundingBox.style, r);
    }
    _resetBoundingBoxStyles() {
      $o(this._boundingBox.style, {
        top: "0",
        left: "0",
        right: "0",
        bottom: "0",
        height: "",
        width: "",
        alignItems: "",
        justifyContent: "",
      });
    }
    _resetOverlayElementStyles() {
      $o(this._pane.style, {
        top: "",
        left: "",
        bottom: "",
        right: "",
        position: "",
        transform: "",
      });
    }
    _setOverlayElementStyles(t, e) {
      let i = {},
        r = this._hasExactPosition(),
        o = this._hasFlexibleDimensions,
        a = this._overlayRef.getConfig();
      if (r) {
        let m = this._viewportRuler.getViewportScrollPosition();
        $o(i, this._getExactOverlayY(e, t, m)),
          $o(i, this._getExactOverlayX(e, t, m));
      } else i.position = "static";
      let s = "",
        l = this._getOffset(e, "x"),
        d = this._getOffset(e, "y");
      l && (s += `translateX(${l}px) `),
        d && (s += `translateY(${d}px)`),
        (i.transform = s.trim()),
        a.maxHeight &&
          (r ? (i.maxHeight = Zt(a.maxHeight)) : o && (i.maxHeight = "")),
        a.maxWidth &&
          (r ? (i.maxWidth = Zt(a.maxWidth)) : o && (i.maxWidth = "")),
        $o(this._pane.style, i);
    }
    _getExactOverlayY(t, e, i) {
      let r = { top: "", bottom: "" },
        o = this._getOverlayPoint(e, this._overlayRect, t);
      if (
        (this._isPushed &&
          (o = this._pushOverlayOnScreen(o, this._overlayRect, i)),
        t.overlayY === "bottom")
      ) {
        let a = this._document.documentElement.clientHeight;
        r.bottom = `${a - (o.y + this._overlayRect.height)}px`;
      } else r.top = Zt(o.y);
      return r;
    }
    _getExactOverlayX(t, e, i) {
      let r = { left: "", right: "" },
        o = this._getOverlayPoint(e, this._overlayRect, t);
      this._isPushed &&
        (o = this._pushOverlayOnScreen(o, this._overlayRect, i));
      let a;
      if (
        (this._isRtl()
          ? (a = t.overlayX === "end" ? "left" : "right")
          : (a = t.overlayX === "end" ? "right" : "left"),
        a === "right")
      ) {
        let s = this._document.documentElement.clientWidth;
        r.right = `${s - (o.x + this._overlayRect.width)}px`;
      } else r.left = Zt(o.x);
      return r;
    }
    _getScrollVisibility() {
      let t = this._getOriginRect(),
        e = this._pane.getBoundingClientRect(),
        i = this._scrollables.map((r) =>
          r.getElementRef().nativeElement.getBoundingClientRect()
        );
      return {
        isOriginClipped: V1(t, i),
        isOriginOutsideView: Vf(t, i),
        isOverlayClipped: V1(e, i),
        isOverlayOutsideView: Vf(e, i),
      };
    }
    _subtractOverflows(t, ...e) {
      return e.reduce((i, r) => i - Math.max(r, 0), t);
    }
    _getNarrowedViewportRect() {
      let t = this._document.documentElement.clientWidth,
        e = this._document.documentElement.clientHeight,
        i = this._viewportRuler.getViewportScrollPosition();
      return {
        top: i.top + this._viewportMargin,
        left: i.left + this._viewportMargin,
        right: i.left + t - this._viewportMargin,
        bottom: i.top + e - this._viewportMargin,
        width: t - 2 * this._viewportMargin,
        height: e - 2 * this._viewportMargin,
      };
    }
    _isRtl() {
      return this._overlayRef.getDirection() === "rtl";
    }
    _hasExactPosition() {
      return !this._hasFlexibleDimensions || this._isPushed;
    }
    _getOffset(t, e) {
      return e === "x"
        ? t.offsetX == null
          ? this._offsetX
          : t.offsetX
        : t.offsetY == null
        ? this._offsetY
        : t.offsetY;
    }
    _validatePositions() {}
    _addPanelClasses(t) {
      this._pane &&
        qa(t).forEach((e) => {
          e !== "" &&
            this._appliedPanelClasses.indexOf(e) === -1 &&
            (this._appliedPanelClasses.push(e), this._pane.classList.add(e));
        });
    }
    _clearPanelClasses() {
      this._pane &&
        (this._appliedPanelClasses.forEach((t) => {
          this._pane.classList.remove(t);
        }),
        (this._appliedPanelClasses = []));
    }
    _getOriginRect() {
      let t = this._origin;
      if (t instanceof Ve) return t.nativeElement.getBoundingClientRect();
      if (t instanceof Element) return t.getBoundingClientRect();
      let e = t.width || 0,
        i = t.height || 0;
      return {
        top: t.y,
        bottom: t.y + i,
        left: t.x,
        right: t.x + e,
        height: i,
        width: e,
      };
    }
  };
function $o(n, t) {
  for (let e in t) t.hasOwnProperty(e) && (n[e] = t[e]);
  return n;
}
function j1(n) {
  if (typeof n != "number" && n != null) {
    let [t, e] = n.split(oP);
    return !e || e === "px" ? parseFloat(t) : null;
  }
  return n || null;
}
function U1(n) {
  return {
    top: Math.floor(n.top),
    right: Math.floor(n.right),
    bottom: Math.floor(n.bottom),
    left: Math.floor(n.left),
    width: Math.floor(n.width),
    height: Math.floor(n.height),
  };
}
function aP(n, t) {
  return n === t
    ? !0
    : n.isOriginClipped === t.isOriginClipped &&
        n.isOriginOutsideView === t.isOriginOutsideView &&
        n.isOverlayClipped === t.isOverlayClipped &&
        n.isOverlayOutsideView === t.isOverlayOutsideView;
}
var z1 = "cdk-global-overlay-wrapper",
  Uf = class {
    constructor() {
      (this._cssPosition = "static"),
        (this._topOffset = ""),
        (this._bottomOffset = ""),
        (this._alignItems = ""),
        (this._xPosition = ""),
        (this._xOffset = ""),
        (this._width = ""),
        (this._height = ""),
        (this._isDisposed = !1);
    }
    attach(t) {
      let e = t.getConfig();
      (this._overlayRef = t),
        this._width && !e.width && t.updateSize({ width: this._width }),
        this._height && !e.height && t.updateSize({ height: this._height }),
        t.hostElement.classList.add(z1),
        (this._isDisposed = !1);
    }
    top(t = "") {
      return (
        (this._bottomOffset = ""),
        (this._topOffset = t),
        (this._alignItems = "flex-start"),
        this
      );
    }
    left(t = "") {
      return (this._xOffset = t), (this._xPosition = "left"), this;
    }
    bottom(t = "") {
      return (
        (this._topOffset = ""),
        (this._bottomOffset = t),
        (this._alignItems = "flex-end"),
        this
      );
    }
    right(t = "") {
      return (this._xOffset = t), (this._xPosition = "right"), this;
    }
    start(t = "") {
      return (this._xOffset = t), (this._xPosition = "start"), this;
    }
    end(t = "") {
      return (this._xOffset = t), (this._xPosition = "end"), this;
    }
    width(t = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ width: t })
          : (this._width = t),
        this
      );
    }
    height(t = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ height: t })
          : (this._height = t),
        this
      );
    }
    centerHorizontally(t = "") {
      return this.left(t), (this._xPosition = "center"), this;
    }
    centerVertically(t = "") {
      return this.top(t), (this._alignItems = "center"), this;
    }
    apply() {
      if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
      let t = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement.style,
        i = this._overlayRef.getConfig(),
        { width: r, height: o, maxWidth: a, maxHeight: s } = i,
        l =
          (r === "100%" || r === "100vw") &&
          (!a || a === "100%" || a === "100vw"),
        d =
          (o === "100%" || o === "100vh") &&
          (!s || s === "100%" || s === "100vh"),
        m = this._xPosition,
        v = this._xOffset,
        x = this._overlayRef.getConfig().direction === "rtl",
        C = "",
        S = "",
        T = "";
      l
        ? (T = "flex-start")
        : m === "center"
        ? ((T = "center"), x ? (S = v) : (C = v))
        : x
        ? m === "left" || m === "end"
          ? ((T = "flex-end"), (C = v))
          : (m === "right" || m === "start") && ((T = "flex-start"), (S = v))
        : m === "left" || m === "start"
        ? ((T = "flex-start"), (C = v))
        : (m === "right" || m === "end") && ((T = "flex-end"), (S = v)),
        (t.position = this._cssPosition),
        (t.marginLeft = l ? "0" : C),
        (t.marginTop = d ? "0" : this._topOffset),
        (t.marginBottom = this._bottomOffset),
        (t.marginRight = l ? "0" : S),
        (e.justifyContent = T),
        (e.alignItems = d ? "flex-start" : this._alignItems);
    }
    dispose() {
      if (this._isDisposed || !this._overlayRef) return;
      let t = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement,
        i = e.style;
      e.classList.remove(z1),
        (i.justifyContent =
          i.alignItems =
          t.marginTop =
          t.marginBottom =
          t.marginLeft =
          t.marginRight =
          t.position =
            ""),
        (this._overlayRef = null),
        (this._isDisposed = !0);
    }
  },
  sP = (() => {
    class n {
      constructor(e, i, r, o) {
        (this._viewportRuler = e),
          (this._document = i),
          (this._platform = r),
          (this._overlayContainer = o);
      }
      global() {
        return new Uf();
      }
      flexibleConnectedTo(e) {
        return new fu(
          e,
          this._viewportRuler,
          this._document,
          this._platform,
          this._overlayContainer
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Pf), Z(Oe), Z(It), Z(W1));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  lP = 0,
  Xa = (() => {
    class n {
      constructor(e, i, r, o, a, s, l, d, m, v, x, C) {
        (this.scrollStrategies = e),
          (this._overlayContainer = i),
          (this._componentFactoryResolver = r),
          (this._positionBuilder = o),
          (this._keyboardDispatcher = a),
          (this._injector = s),
          (this._ngZone = l),
          (this._document = d),
          (this._directionality = m),
          (this._location = v),
          (this._outsideClickDispatcher = x),
          (this._animationsModuleType = C);
      }
      create(e) {
        let i = this._createHostElement(),
          r = this._createPaneElement(i),
          o = this._createPortalOutlet(r),
          a = new mu(e);
        return (
          (a.direction = a.direction || this._directionality.value),
          new jf(
            o,
            i,
            r,
            a,
            this._ngZone,
            this._keyboardDispatcher,
            this._document,
            this._location,
            this._outsideClickDispatcher,
            this._animationsModuleType === "NoopAnimations",
            this._injector.get(fn)
          )
        );
      }
      position() {
        return this._positionBuilder;
      }
      _createPaneElement(e) {
        let i = this._document.createElement("div");
        return (
          (i.id = `cdk-overlay-${lP++}`),
          i.classList.add("cdk-overlay-pane"),
          e.appendChild(i),
          i
        );
      }
      _createHostElement() {
        let e = this._document.createElement("div");
        return this._overlayContainer.getContainerElement().appendChild(e), e;
      }
      _createPortalOutlet(e) {
        return (
          this._appRef || (this._appRef = this._injector.get(ji)),
          new uu(
            e,
            this._componentFactoryResolver,
            this._appRef,
            this._injector,
            this._document
          )
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(
            Z(iP),
            Z(W1),
            Z(xo),
            Z(sP),
            Z(nP),
            Z(St),
            Z(Re),
            Z(Oe),
            Z(Qa),
            Z(vr),
            Z(rP),
            Z(Xn, 8)
          );
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var cP = new Me("cdk-connected-overlay-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let n = G(Xa);
    return () => n.scrollStrategies.reposition();
  },
});
function dP(n) {
  return () => n.scrollStrategies.reposition();
}
var uP = { provide: cP, deps: [Xa], useFactory: dP },
  G1 = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = we({ type: n });
      }
      static {
        this.ɵinj = Ce({ providers: [Xa, uP], imports: [co, hu, Af, Af] });
      }
    }
    return n;
  })();
function hP() {
  return !0;
}
var pP = new Me("mat-sanity-checks", { providedIn: "root", factory: hP }),
  cn = (() => {
    class n {
      constructor(e, i, r) {
        (this._sanityChecks = i),
          (this._document = r),
          (this._hasDoneGlobalChecks = !1),
          e._applyBodyHighContrastModeCssClasses(),
          this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
      }
      _checkIsEnabled(e) {
        return Rl()
          ? !1
          : typeof this._sanityChecks == "boolean"
          ? this._sanityChecks
          : !!this._sanityChecks[e];
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Of), Z(pP, 8), Z(Oe));
        };
      }
      static {
        this.ɵmod = we({ type: n });
      }
      static {
        this.ɵinj = Ce({ imports: [co, co] });
      }
    }
    return n;
  })();
var Y1 = new Me("MAT_DATE_LOCALE", { providedIn: "root", factory: mP });
function mP() {
  return G(Ah);
}
var Qi = class {
    constructor() {
      (this._localeChanges = new Ie()),
        (this.localeChanges = this._localeChanges);
    }
    getValidDateOrNull(t) {
      return this.isDateInstance(t) && this.isValid(t) ? t : null;
    }
    deserialize(t) {
      return t == null || (this.isDateInstance(t) && this.isValid(t))
        ? t
        : this.invalid();
    }
    setLocale(t) {
      (this.locale = t), this._localeChanges.next();
    }
    compareDate(t, e) {
      return (
        this.getYear(t) - this.getYear(e) ||
        this.getMonth(t) - this.getMonth(e) ||
        this.getDate(t) - this.getDate(e)
      );
    }
    sameDate(t, e) {
      if (t && e) {
        let i = this.isValid(t),
          r = this.isValid(e);
        return i && r ? !this.compareDate(t, e) : i == r;
      }
      return t == e;
    }
    clampDate(t, e, i) {
      return e && this.compareDate(t, e) < 0
        ? e
        : i && this.compareDate(t, i) > 0
        ? i
        : t;
    }
  },
  Za = new Me("mat-date-formats"),
  fP =
    /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
function zf(n, t) {
  let e = Array(n);
  for (let i = 0; i < n; i++) e[i] = t(i);
  return e;
}
var gP = (() => {
    class n extends Qi {
      constructor(e) {
        super(),
          (this.useUtcForDisplay = !1),
          (this._matDateLocale = G(Y1, { optional: !0 })),
          e !== void 0 && (this._matDateLocale = e),
          super.setLocale(this._matDateLocale);
      }
      getYear(e) {
        return e.getFullYear();
      }
      getMonth(e) {
        return e.getMonth();
      }
      getDate(e) {
        return e.getDate();
      }
      getDayOfWeek(e) {
        return e.getDay();
      }
      getMonthNames(e) {
        let i = new Intl.DateTimeFormat(this.locale, {
          month: e,
          timeZone: "utc",
        });
        return zf(12, (r) => this._format(i, new Date(2017, r, 1)));
      }
      getDateNames() {
        let e = new Intl.DateTimeFormat(this.locale, {
          day: "numeric",
          timeZone: "utc",
        });
        return zf(31, (i) => this._format(e, new Date(2017, 0, i + 1)));
      }
      getDayOfWeekNames(e) {
        let i = new Intl.DateTimeFormat(this.locale, {
          weekday: e,
          timeZone: "utc",
        });
        return zf(7, (r) => this._format(i, new Date(2017, 0, r + 1)));
      }
      getYearName(e) {
        let i = new Intl.DateTimeFormat(this.locale, {
          year: "numeric",
          timeZone: "utc",
        });
        return this._format(i, e);
      }
      getFirstDayOfWeek() {
        if (typeof Intl < "u" && Intl.Locale) {
          let e = new Intl.Locale(this.locale),
            i = (e.getWeekInfo?.() || e.weekInfo)?.firstDay ?? 0;
          return i === 7 ? 0 : i;
        }
        return 0;
      }
      getNumDaysInMonth(e) {
        return this.getDate(
          this._createDateWithOverflow(this.getYear(e), this.getMonth(e) + 1, 0)
        );
      }
      clone(e) {
        return new Date(e.getTime());
      }
      createDate(e, i, r) {
        let o = this._createDateWithOverflow(e, i, r);
        return o.getMonth() != i, o;
      }
      today() {
        return new Date();
      }
      parse(e, i) {
        return typeof e == "number"
          ? new Date(e)
          : e
          ? new Date(Date.parse(e))
          : null;
      }
      format(e, i) {
        if (!this.isValid(e))
          throw Error("NativeDateAdapter: Cannot format invalid date.");
        let r = new Intl.DateTimeFormat(
          this.locale,
          Be(Q({}, i), { timeZone: "utc" })
        );
        return this._format(r, e);
      }
      addCalendarYears(e, i) {
        return this.addCalendarMonths(e, i * 12);
      }
      addCalendarMonths(e, i) {
        let r = this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e) + i,
          this.getDate(e)
        );
        return (
          this.getMonth(r) != (((this.getMonth(e) + i) % 12) + 12) % 12 &&
            (r = this._createDateWithOverflow(
              this.getYear(r),
              this.getMonth(r),
              0
            )),
          r
        );
      }
      addCalendarDays(e, i) {
        return this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e),
          this.getDate(e) + i
        );
      }
      toIso8601(e) {
        return [
          e.getUTCFullYear(),
          this._2digit(e.getUTCMonth() + 1),
          this._2digit(e.getUTCDate()),
        ].join("-");
      }
      deserialize(e) {
        if (typeof e == "string") {
          if (!e) return null;
          if (fP.test(e)) {
            let i = new Date(e);
            if (this.isValid(i)) return i;
          }
        }
        return super.deserialize(e);
      }
      isDateInstance(e) {
        return e instanceof Date;
      }
      isValid(e) {
        return !isNaN(e.getTime());
      }
      invalid() {
        return new Date(NaN);
      }
      _createDateWithOverflow(e, i, r) {
        let o = new Date();
        return o.setFullYear(e, i, r), o.setHours(0, 0, 0, 0), o;
      }
      _2digit(e) {
        return ("00" + e).slice(-2);
      }
      _format(e, i) {
        let r = new Date();
        return (
          r.setUTCFullYear(i.getFullYear(), i.getMonth(), i.getDate()),
          r.setUTCHours(
            i.getHours(),
            i.getMinutes(),
            i.getSeconds(),
            i.getMilliseconds()
          ),
          e.format(r)
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Y1, 8));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  _P = {
    parse: { dateInput: null },
    display: {
      dateInput: { year: "numeric", month: "numeric", day: "numeric" },
      monthYearLabel: { year: "numeric", month: "short" },
      dateA11yLabel: { year: "numeric", month: "long", day: "numeric" },
      monthYearA11yLabel: { year: "numeric", month: "long" },
    },
  };
var _u = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({ providers: [bP()] });
    }
  }
  return n;
})();
function bP(n = _P) {
  return [
    { provide: Qi, useClass: gP },
    { provide: Za, useValue: n },
  ];
}
var Dn = (function (n) {
    return (
      (n[(n.FADING_IN = 0)] = "FADING_IN"),
      (n[(n.VISIBLE = 1)] = "VISIBLE"),
      (n[(n.FADING_OUT = 2)] = "FADING_OUT"),
      (n[(n.HIDDEN = 3)] = "HIDDEN"),
      n
    );
  })(Dn || {}),
  Gf = class {
    constructor(t, e, i, r = !1) {
      (this._renderer = t),
        (this.element = e),
        (this.config = i),
        (this._animationForciblyDisabledThroughCss = r),
        (this.state = Dn.HIDDEN);
    }
    fadeOut() {
      this._renderer.fadeOutRipple(this);
    }
  },
  q1 = dr({ passive: !0, capture: !0 }),
  Yf = class {
    constructor() {
      (this._events = new Map()),
        (this._delegateEventHandler = (t) => {
          let e = wn(t);
          e &&
            this._events.get(t.type)?.forEach((i, r) => {
              (r === e || r.contains(e)) && i.forEach((o) => o.handleEvent(t));
            });
        });
    }
    addHandler(t, e, i, r) {
      let o = this._events.get(e);
      if (o) {
        let a = o.get(i);
        a ? a.add(r) : o.set(i, new Set([r]));
      } else
        this._events.set(e, new Map([[i, new Set([r])]])),
          t.runOutsideAngular(() => {
            document.addEventListener(e, this._delegateEventHandler, q1);
          });
    }
    removeHandler(t, e, i) {
      let r = this._events.get(t);
      if (!r) return;
      let o = r.get(e);
      o &&
        (o.delete(i),
        o.size === 0 && r.delete(e),
        r.size === 0 &&
          (this._events.delete(t),
          document.removeEventListener(t, this._delegateEventHandler, q1)));
    }
  },
  K1 = { enterDuration: 225, exitDuration: 150 },
  vP = 800,
  Q1 = dr({ passive: !0, capture: !0 }),
  X1 = ["mousedown", "touchstart"],
  Z1 = ["mouseup", "mouseleave", "touchend", "touchcancel"],
  qf = class n {
    static {
      this._eventManager = new Yf();
    }
    constructor(t, e, i, r) {
      (this._target = t),
        (this._ngZone = e),
        (this._platform = r),
        (this._isPointerDown = !1),
        (this._activeRipples = new Map()),
        (this._pointerUpEventsRegistered = !1),
        r.isBrowser && (this._containerElement = Rr(i));
    }
    fadeInRipple(t, e, i = {}) {
      let r = (this._containerRect =
          this._containerRect ||
          this._containerElement.getBoundingClientRect()),
        o = Q(Q({}, K1), i.animation);
      i.centered && ((t = r.left + r.width / 2), (e = r.top + r.height / 2));
      let a = i.radius || yP(t, e, r),
        s = t - r.left,
        l = e - r.top,
        d = o.enterDuration,
        m = document.createElement("div");
      m.classList.add("mat-ripple-element"),
        (m.style.left = `${s - a}px`),
        (m.style.top = `${l - a}px`),
        (m.style.height = `${a * 2}px`),
        (m.style.width = `${a * 2}px`),
        i.color != null && (m.style.backgroundColor = i.color),
        (m.style.transitionDuration = `${d}ms`),
        this._containerElement.appendChild(m);
      let v = window.getComputedStyle(m),
        x = v.transitionProperty,
        C = v.transitionDuration,
        S =
          x === "none" ||
          C === "0s" ||
          C === "0s, 0s" ||
          (r.width === 0 && r.height === 0),
        T = new Gf(this, m, i, S);
      (m.style.transform = "scale3d(1, 1, 1)"),
        (T.state = Dn.FADING_IN),
        i.persistent || (this._mostRecentTransientRipple = T);
      let k = null;
      return (
        !S &&
          (d || o.exitDuration) &&
          this._ngZone.runOutsideAngular(() => {
            let P = () => {
                k && (k.fallbackTimer = null),
                  clearTimeout(K),
                  this._finishRippleTransition(T);
              },
              j = () => this._destroyRipple(T),
              K = setTimeout(j, d + 100);
            m.addEventListener("transitionend", P),
              m.addEventListener("transitioncancel", j),
              (k = {
                onTransitionEnd: P,
                onTransitionCancel: j,
                fallbackTimer: K,
              });
          }),
        this._activeRipples.set(T, k),
        (S || !d) && this._finishRippleTransition(T),
        T
      );
    }
    fadeOutRipple(t) {
      if (t.state === Dn.FADING_OUT || t.state === Dn.HIDDEN) return;
      let e = t.element,
        i = Q(Q({}, K1), t.config.animation);
      (e.style.transitionDuration = `${i.exitDuration}ms`),
        (e.style.opacity = "0"),
        (t.state = Dn.FADING_OUT),
        (t._animationForciblyDisabledThroughCss || !i.exitDuration) &&
          this._finishRippleTransition(t);
    }
    fadeOutAll() {
      this._getActiveRipples().forEach((t) => t.fadeOut());
    }
    fadeOutAllNonPersistent() {
      this._getActiveRipples().forEach((t) => {
        t.config.persistent || t.fadeOut();
      });
    }
    setupTriggerEvents(t) {
      let e = Rr(t);
      !this._platform.isBrowser ||
        !e ||
        e === this._triggerElement ||
        (this._removeTriggerEvents(),
        (this._triggerElement = e),
        X1.forEach((i) => {
          n._eventManager.addHandler(this._ngZone, i, e, this);
        }));
    }
    handleEvent(t) {
      t.type === "mousedown"
        ? this._onMousedown(t)
        : t.type === "touchstart"
        ? this._onTouchStart(t)
        : this._onPointerUp(),
        this._pointerUpEventsRegistered ||
          (this._ngZone.runOutsideAngular(() => {
            Z1.forEach((e) => {
              this._triggerElement.addEventListener(e, this, Q1);
            });
          }),
          (this._pointerUpEventsRegistered = !0));
    }
    _finishRippleTransition(t) {
      t.state === Dn.FADING_IN
        ? this._startFadeOutTransition(t)
        : t.state === Dn.FADING_OUT && this._destroyRipple(t);
    }
    _startFadeOutTransition(t) {
      let e = t === this._mostRecentTransientRipple,
        { persistent: i } = t.config;
      (t.state = Dn.VISIBLE), !i && (!e || !this._isPointerDown) && t.fadeOut();
    }
    _destroyRipple(t) {
      let e = this._activeRipples.get(t) ?? null;
      this._activeRipples.delete(t),
        this._activeRipples.size || (this._containerRect = null),
        t === this._mostRecentTransientRipple &&
          (this._mostRecentTransientRipple = null),
        (t.state = Dn.HIDDEN),
        e !== null &&
          (t.element.removeEventListener("transitionend", e.onTransitionEnd),
          t.element.removeEventListener(
            "transitioncancel",
            e.onTransitionCancel
          ),
          e.fallbackTimer !== null && clearTimeout(e.fallbackTimer)),
        t.element.remove();
    }
    _onMousedown(t) {
      let e = Ef(t),
        i =
          this._lastTouchStartEvent &&
          Date.now() < this._lastTouchStartEvent + vP;
      !this._target.rippleDisabled &&
        !e &&
        !i &&
        ((this._isPointerDown = !0),
        this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
    }
    _onTouchStart(t) {
      if (!this._target.rippleDisabled && !kf(t)) {
        (this._lastTouchStartEvent = Date.now()), (this._isPointerDown = !0);
        let e = t.changedTouches;
        if (e)
          for (let i = 0; i < e.length; i++)
            this.fadeInRipple(
              e[i].clientX,
              e[i].clientY,
              this._target.rippleConfig
            );
      }
    }
    _onPointerUp() {
      this._isPointerDown &&
        ((this._isPointerDown = !1),
        this._getActiveRipples().forEach((t) => {
          let e =
            t.state === Dn.VISIBLE ||
            (t.config.terminateOnPointerUp && t.state === Dn.FADING_IN);
          !t.config.persistent && e && t.fadeOut();
        }));
    }
    _getActiveRipples() {
      return Array.from(this._activeRipples.keys());
    }
    _removeTriggerEvents() {
      let t = this._triggerElement;
      t &&
        (X1.forEach((e) => n._eventManager.removeHandler(e, t, this)),
        this._pointerUpEventsRegistered &&
          (Z1.forEach((e) => t.removeEventListener(e, this, Q1)),
          (this._pointerUpEventsRegistered = !1)));
    }
  };
function yP(n, t, e) {
  let i = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
    r = Math.max(Math.abs(t - e.top), Math.abs(t - e.bottom));
  return Math.sqrt(i * i + r * r);
}
var ix = new Me("mat-ripple-global-options"),
  xP = (() => {
    class n {
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        e && this.fadeOutAllNonPersistent(),
          (this._disabled = e),
          this._setupTriggerEventsIfEnabled();
      }
      get trigger() {
        return this._trigger || this._elementRef.nativeElement;
      }
      set trigger(e) {
        (this._trigger = e), this._setupTriggerEventsIfEnabled();
      }
      constructor(e, i, r, o, a) {
        (this._elementRef = e),
          (this._animationMode = a),
          (this.radius = 0),
          (this._disabled = !1),
          (this._isInitialized = !1),
          (this._globalOptions = o || {}),
          (this._rippleRenderer = new qf(this, i, e, r));
      }
      ngOnInit() {
        (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
      }
      ngOnDestroy() {
        this._rippleRenderer._removeTriggerEvents();
      }
      fadeOutAll() {
        this._rippleRenderer.fadeOutAll();
      }
      fadeOutAllNonPersistent() {
        this._rippleRenderer.fadeOutAllNonPersistent();
      }
      get rippleConfig() {
        return {
          centered: this.centered,
          radius: this.radius,
          color: this.color,
          animation: Q(
            Q(
              Q({}, this._globalOptions.animation),
              this._animationMode === "NoopAnimations"
                ? { enterDuration: 0, exitDuration: 0 }
                : {}
            ),
            this.animation
          ),
          terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
        };
      }
      get rippleDisabled() {
        return this.disabled || !!this._globalOptions.disabled;
      }
      _setupTriggerEventsIfEnabled() {
        !this.disabled &&
          this._isInitialized &&
          this._rippleRenderer.setupTriggerEvents(this.trigger);
      }
      launch(e, i = 0, r) {
        return typeof e == "number"
          ? this._rippleRenderer.fadeInRipple(
              e,
              i,
              Q(Q({}, this.rippleConfig), r)
            )
          : this._rippleRenderer.fadeInRipple(
              0,
              0,
              Q(Q({}, this.rippleConfig), e)
            );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Ve), H(Re), H(It), H(ix, 8), H(Xn, 8));
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [
            ["", "mat-ripple", ""],
            ["", "matRipple", ""],
          ],
          hostAttrs: [1, "mat-ripple"],
          hostVars: 2,
          hostBindings: function (i, r) {
            i & 2 && Te("mat-ripple-unbounded", r.unbounded);
          },
          inputs: {
            color: [0, "matRippleColor", "color"],
            unbounded: [0, "matRippleUnbounded", "unbounded"],
            centered: [0, "matRippleCentered", "centered"],
            radius: [0, "matRippleRadius", "radius"],
            animation: [0, "matRippleAnimation", "animation"],
            disabled: [0, "matRippleDisabled", "disabled"],
            trigger: [0, "matRippleTrigger", "trigger"],
          },
          exportAs: ["matRipple"],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  nx = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = we({ type: n });
      }
      static {
        this.ɵinj = Ce({ imports: [cn, cn] });
      }
    }
    return n;
  })();
var J1 = { capture: !0 },
  ex = ["focus", "mousedown", "mouseenter", "touchstart"],
  $f = "mat-ripple-loader-uninitialized",
  Wf = "mat-ripple-loader-class-name",
  tx = "mat-ripple-loader-centered",
  gu = "mat-ripple-loader-disabled",
  rx = (() => {
    class n {
      constructor() {
        (this._document = G(Oe, { optional: !0 })),
          (this._animationMode = G(Xn, { optional: !0 })),
          (this._globalRippleOptions = G(ix, { optional: !0 })),
          (this._platform = G(It)),
          (this._ngZone = G(Re)),
          (this._hosts = new Map()),
          (this._onInteraction = (e) => {
            let i = wn(e);
            if (i instanceof HTMLElement) {
              let r = i.closest(
                `[${$f}="${this._globalRippleOptions?.namespace ?? ""}"]`
              );
              r && this._createRipple(r);
            }
          }),
          this._ngZone.runOutsideAngular(() => {
            for (let e of ex)
              this._document?.addEventListener(e, this._onInteraction, J1);
          });
      }
      ngOnDestroy() {
        let e = this._hosts.keys();
        for (let i of e) this.destroyRipple(i);
        for (let i of ex)
          this._document?.removeEventListener(i, this._onInteraction, J1);
      }
      configureRipple(e, i) {
        e.setAttribute($f, this._globalRippleOptions?.namespace ?? ""),
          (i.className || !e.hasAttribute(Wf)) &&
            e.setAttribute(Wf, i.className || ""),
          i.centered && e.setAttribute(tx, ""),
          i.disabled && e.setAttribute(gu, "");
      }
      getRipple(e) {
        return this._hosts.get(e) || this._createRipple(e);
      }
      setDisabled(e, i) {
        let r = this._hosts.get(e);
        if (r) {
          r.disabled = i;
          return;
        }
        i ? e.setAttribute(gu, "") : e.removeAttribute(gu);
      }
      _createRipple(e) {
        if (!this._document) return;
        let i = this._hosts.get(e);
        if (i) return i;
        e.querySelector(".mat-ripple")?.remove();
        let r = this._document.createElement("span");
        r.classList.add("mat-ripple", e.getAttribute(Wf)), e.append(r);
        let o = new xP(
          new Ve(r),
          this._ngZone,
          this._platform,
          this._globalRippleOptions ? this._globalRippleOptions : void 0,
          this._animationMode ? this._animationMode : void 0
        );
        return (
          (o._isInitialized = !0),
          (o.trigger = e),
          (o.centered = e.hasAttribute(tx)),
          (o.disabled = e.hasAttribute(gu)),
          this.attachRipple(e, o),
          o
        );
      }
      attachRipple(e, i) {
        e.removeAttribute($f), this._hosts.set(e, i);
      }
      destroyRipple(e) {
        let i = this._hosts.get(e);
        i && (i.ngOnDestroy(), this._hosts.delete(e));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var wP = ["mat-button", ""],
  DP = [
    [
      ["", 8, "material-icons", 3, "iconPositionEnd", ""],
      ["mat-icon", 3, "iconPositionEnd", ""],
      ["", "matButtonIcon", "", 3, "iconPositionEnd", ""],
    ],
    "*",
    [
      ["", "iconPositionEnd", "", 8, "material-icons"],
      ["mat-icon", "iconPositionEnd", ""],
      ["", "matButtonIcon", "", "iconPositionEnd", ""],
    ],
  ],
  SP = [
    ".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])",
    "*",
    ".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]",
  ];
var MP =
  ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}";
var TP = ["mat-icon-button", ""],
  EP = ["*"];
var kP = new Me("MAT_BUTTON_CONFIG");
var IP = [
    { attribute: "mat-button", mdcClasses: ["mdc-button", "mat-mdc-button"] },
    {
      attribute: "mat-flat-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--unelevated",
        "mat-mdc-unelevated-button",
      ],
    },
    {
      attribute: "mat-raised-button",
      mdcClasses: ["mdc-button", "mdc-button--raised", "mat-mdc-raised-button"],
    },
    {
      attribute: "mat-stroked-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--outlined",
        "mat-mdc-outlined-button",
      ],
    },
    {
      attribute: "mat-fab",
      mdcClasses: ["mdc-fab", "mat-mdc-fab-base", "mat-mdc-fab"],
    },
    {
      attribute: "mat-mini-fab",
      mdcClasses: [
        "mdc-fab",
        "mat-mdc-fab-base",
        "mdc-fab--mini",
        "mat-mdc-mini-fab",
      ],
    },
    {
      attribute: "mat-icon-button",
      mdcClasses: ["mdc-icon-button", "mat-mdc-icon-button"],
    },
  ],
  ox = (() => {
    class n {
      get ripple() {
        return this._rippleLoader?.getRipple(this._elementRef.nativeElement);
      }
      set ripple(e) {
        this._rippleLoader?.attachRipple(this._elementRef.nativeElement, e);
      }
      get disableRipple() {
        return this._disableRipple;
      }
      set disableRipple(e) {
        (this._disableRipple = e), this._updateRippleDisabled();
      }
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        (this._disabled = e), this._updateRippleDisabled();
      }
      constructor(e, i, r, o) {
        (this._elementRef = e),
          (this._platform = i),
          (this._ngZone = r),
          (this._animationMode = o),
          (this._focusMonitor = G(If)),
          (this._rippleLoader = G(rx)),
          (this._isFab = !1),
          (this._disableRipple = !1),
          (this._disabled = !1);
        let a = G(kP, { optional: !0 }),
          s = e.nativeElement,
          l = s.classList;
        (this.disabledInteractive = a?.disabledInteractive ?? !1),
          (this.color = a?.color ?? null),
          this._rippleLoader?.configureRipple(s, {
            className: "mat-mdc-button-ripple",
          });
        for (let { attribute: d, mdcClasses: m } of IP)
          s.hasAttribute(d) && l.add(...m);
      }
      ngAfterViewInit() {
        this._focusMonitor.monitor(this._elementRef, !0);
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);
      }
      focus(e = "program", i) {
        e
          ? this._focusMonitor.focusVia(this._elementRef.nativeElement, e, i)
          : this._elementRef.nativeElement.focus(i);
      }
      _getAriaDisabled() {
        return this.ariaDisabled != null
          ? this.ariaDisabled
          : this.disabled && this.disabledInteractive
          ? !0
          : null;
      }
      _getDisabledAttribute() {
        return this.disabledInteractive || !this.disabled ? null : !0;
      }
      _updateRippleDisabled() {
        this._rippleLoader?.setDisabled(
          this._elementRef.nativeElement,
          this.disableRipple || this.disabled
        );
      }
      static {
        this.ɵfac = function (i) {
          zr();
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          inputs: {
            color: "color",
            disableRipple: [2, "disableRipple", "disableRipple", Ee],
            disabled: [2, "disabled", "disabled", Ee],
            ariaDisabled: [2, "aria-disabled", "ariaDisabled", Ee],
            disabledInteractive: [
              2,
              "disabledInteractive",
              "disabledInteractive",
              Ee,
            ],
          },
          features: [Pt],
        });
      }
    }
    return n;
  })();
var Kf = (() => {
  class n extends ox {
    constructor(e, i, r, o) {
      super(e, i, r, o);
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(H(Ve), H(It), H(Re), H(Xn, 8));
      };
    }
    static {
      this.ɵcmp = le({
        type: n,
        selectors: [
          ["button", "mat-button", ""],
          ["button", "mat-raised-button", ""],
          ["button", "mat-flat-button", ""],
          ["button", "mat-stroked-button", ""],
        ],
        hostVars: 14,
        hostBindings: function (i, r) {
          i & 2 &&
            (de("disabled", r._getDisabledAttribute())(
              "aria-disabled",
              r._getAriaDisabled()
            ),
            Ue(r.color ? "mat-" + r.color : ""),
            Te("mat-mdc-button-disabled", r.disabled)(
              "mat-mdc-button-disabled-interactive",
              r.disabledInteractive
            )("_mat-animation-noopable", r._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !r.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [Je, ue],
        attrs: wP,
        ngContentSelectors: SP,
        decls: 7,
        vars: 4,
        consts: [
          [1, "mat-mdc-button-persistent-ripple"],
          [1, "mdc-button__label"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (i, r) {
          i & 1 &&
            (Jt(DP),
            W(0, "span", 0),
            Lt(1),
            h(2, "span", 1),
            Lt(3, 1),
            u(),
            Lt(4, 2),
            W(5, "span", 2)(6, "span", 3)),
            i & 2 &&
              Te("mdc-button__ripple", !r._isFab)("mdc-fab__ripple", r._isFab);
        },
        styles: [
          '.mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-text-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-text-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, var(--mat-app-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-filled-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-filled-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color, var(--mat-app-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, var(--mat-app-on-primary));background-color:var(--mdc-filled-button-container-color, var(--mat-app-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow, var(--mat-app-level1));height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-protected-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-protected-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, var(--mat-app-primary));background-color:var(--mdc-protected-button-container-color, var(--mat-app-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow, var(--mat-app-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow, var(--mat-app-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-outlined-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-outlined-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight, var(--mat-app-label-large-weight));border-radius:var(--mdc-outlined-button-container-shape, var(--mat-app-corner-full));border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, var(--mat-app-primary));border-color:var(--mdc-outlined-button-outline-color, var(--mat-app-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}',
          ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}",
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return n;
})();
var Qf = (() => {
  class n extends ox {
    constructor(e, i, r, o) {
      super(e, i, r, o),
        this._rippleLoader.configureRipple(this._elementRef.nativeElement, {
          centered: !0,
        });
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(H(Ve), H(It), H(Re), H(Xn, 8));
      };
    }
    static {
      this.ɵcmp = le({
        type: n,
        selectors: [["button", "mat-icon-button", ""]],
        hostVars: 14,
        hostBindings: function (i, r) {
          i & 2 &&
            (de("disabled", r._getDisabledAttribute())(
              "aria-disabled",
              r._getAriaDisabled()
            ),
            Ue(r.color ? "mat-" + r.color : ""),
            Te("mat-mdc-button-disabled", r.disabled)(
              "mat-mdc-button-disabled-interactive",
              r.disabledInteractive
            )("_mat-animation-noopable", r._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !r.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [Je, ue],
        attrs: TP,
        ngContentSelectors: EP,
        decls: 4,
        vars: 0,
        consts: [
          [1, "mat-mdc-button-persistent-ripple", "mdc-icon-button__ripple"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (i, r) {
          i & 1 &&
            (Jt(), W(0, "span", 0), Lt(1), W(2, "span", 1)(3, "span", 2));
        },
        styles: [
          '.mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color, var(--mat-app-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
          MP,
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return n;
})();
var ax = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({ imports: [cn, nx, cn] });
    }
  }
  return n;
})();
var Wo = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({ imports: [cn, Fe, au, cn] });
    }
  }
  return n;
})();
var sx = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({});
    }
  }
  return n;
})();
var bu = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({ imports: [cn, Wo, Wo, sx, cn] });
    }
  }
  return n;
})();
var AP = ["mat-calendar-body", ""];
function RP(n, t) {
  return this._trackRow(t);
}
var mx = (n, t) => t.id;
function FP(n, t) {
  if ((n & 1 && (h(0, "tr", 0)(1, "td", 3), f(2), u()()), n & 2)) {
    let e = E();
    g(),
      Bi("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      de("colspan", e.numCols),
      g(),
      ae(" ", e.label, " ");
  }
}
function NP(n, t) {
  if ((n & 1 && (h(0, "td", 3), f(1), u()), n & 2)) {
    let e = E(2);
    Bi("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      de("colspan", e._firstRowOffset),
      g(),
      ae(" ", e._firstRowOffset >= e.labelMinRequiredCells ? e.label : "", " ");
  }
}
function LP(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "td", 6)(1, "button", 7),
      U("click", function (r) {
        let o = N(e).$implicit,
          a = E(2);
        return L(a._cellClicked(o, r));
      })("focus", function (r) {
        let o = N(e).$implicit,
          a = E(2);
        return L(a._emitActiveDateChange(o, r));
      }),
      h(2, "span", 8),
      f(3),
      u(),
      W(4, "span", 9),
      u()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.$index,
      r = E().$index,
      o = E();
    Bi("width", o._cellWidth)("padding-top", o._cellPadding)(
      "padding-bottom",
      o._cellPadding
    ),
      de("data-mat-row", r)("data-mat-col", i),
      g(),
      Te("mat-calendar-body-disabled", !e.enabled)(
        "mat-calendar-body-active",
        o._isActiveCell(r, i)
      )("mat-calendar-body-range-start", o._isRangeStart(e.compareValue))(
        "mat-calendar-body-range-end",
        o._isRangeEnd(e.compareValue)
      )("mat-calendar-body-in-range", o._isInRange(e.compareValue))(
        "mat-calendar-body-comparison-bridge-start",
        o._isComparisonBridgeStart(e.compareValue, r, i)
      )(
        "mat-calendar-body-comparison-bridge-end",
        o._isComparisonBridgeEnd(e.compareValue, r, i)
      )(
        "mat-calendar-body-comparison-start",
        o._isComparisonStart(e.compareValue)
      )("mat-calendar-body-comparison-end", o._isComparisonEnd(e.compareValue))(
        "mat-calendar-body-in-comparison-range",
        o._isInComparisonRange(e.compareValue)
      )("mat-calendar-body-preview-start", o._isPreviewStart(e.compareValue))(
        "mat-calendar-body-preview-end",
        o._isPreviewEnd(e.compareValue)
      )("mat-calendar-body-in-preview", o._isInPreview(e.compareValue)),
      M("ngClass", e.cssClasses)("tabindex", o._isActiveCell(r, i) ? 0 : -1),
      de("aria-label", e.ariaLabel)("aria-disabled", !e.enabled || null)(
        "aria-pressed",
        o._isSelected(e.compareValue)
      )("aria-current", o.todayValue === e.compareValue ? "date" : null)(
        "aria-describedby",
        o._getDescribedby(e.compareValue)
      ),
      g(),
      Te("mat-calendar-body-selected", o._isSelected(e.compareValue))(
        "mat-calendar-body-comparison-identical",
        o._isComparisonIdentical(e.compareValue)
      )("mat-calendar-body-today", o.todayValue === e.compareValue),
      g(),
      ae(" ", e.displayValue, " ");
  }
}
function VP(n, t) {
  if (
    (n & 1 &&
      (h(0, "tr", 1),
      F(1, NP, 2, 6, "td", 4),
      ca(2, LP, 5, 48, "td", 5, mx),
      u()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.$index,
      r = E();
    g(), In(i === 0 && r._firstRowOffset ? 1 : -1), g(), da(e);
  }
}
function BP(n, t) {
  if (
    (n & 1 &&
      (h(0, "th", 2)(1, "span", 6), f(2), u(), h(3, "span", 3), f(4), u()()),
    n & 2)
  ) {
    let e = t.$implicit;
    g(2), B(e.long), g(2), B(e.narrow);
  }
}
var HP = ["*"];
function jP(n, t) {}
function UP(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "mat-month-view", 4),
      Wt("activeDateChange", function (r) {
        N(e);
        let o = E();
        return $t(o.activeDate, r) || (o.activeDate = r), L(r);
      }),
      U("_userSelection", function (r) {
        N(e);
        let o = E();
        return L(o._dateSelected(r));
      })("dragStarted", function (r) {
        N(e);
        let o = E();
        return L(o._dragStarted(r));
      })("dragEnded", function (r) {
        N(e);
        let o = E();
        return L(o._dragEnded(r));
      }),
      u();
  }
  if (n & 2) {
    let e = E();
    zt("activeDate", e.activeDate),
      M("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass)(
        "comparisonStart",
        e.comparisonStart
      )("comparisonEnd", e.comparisonEnd)(
        "startDateAccessibleName",
        e.startDateAccessibleName
      )("endDateAccessibleName", e.endDateAccessibleName)(
        "activeDrag",
        e._activeDrag
      );
  }
}
function zP(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "mat-year-view", 5),
      Wt("activeDateChange", function (r) {
        N(e);
        let o = E();
        return $t(o.activeDate, r) || (o.activeDate = r), L(r);
      }),
      U("monthSelected", function (r) {
        N(e);
        let o = E();
        return L(o._monthSelectedInYearView(r));
      })("selectedChange", function (r) {
        N(e);
        let o = E();
        return L(o._goToDateInView(r, "month"));
      }),
      u();
  }
  if (n & 2) {
    let e = E();
    zt("activeDate", e.activeDate),
      M("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function $P(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "mat-multi-year-view", 6),
      Wt("activeDateChange", function (r) {
        N(e);
        let o = E();
        return $t(o.activeDate, r) || (o.activeDate = r), L(r);
      }),
      U("yearSelected", function (r) {
        N(e);
        let o = E();
        return L(o._yearSelectedInMultiYearView(r));
      })("selectedChange", function (r) {
        N(e);
        let o = E();
        return L(o._goToDateInView(r, "year"));
      }),
      u();
  }
  if (n & 2) {
    let e = E();
    zt("activeDate", e.activeDate),
      M("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function WP(n, t) {}
var GP = ["button"],
  YP = [[["", "matDatepickerToggleIcon", ""]]],
  qP = ["[matDatepickerToggleIcon]"];
function KP(n, t) {
  n & 1 && (yt(), h(0, "svg", 2), W(1, "path", 3), u());
}
var Hl = (() => {
    class n {
      constructor() {
        (this.changes = new Ie()),
          (this.calendarLabel = "Calendar"),
          (this.openCalendarLabel = "Open calendar"),
          (this.closeCalendarLabel = "Close calendar"),
          (this.prevMonthLabel = "Previous month"),
          (this.nextMonthLabel = "Next month"),
          (this.prevYearLabel = "Previous year"),
          (this.nextYearLabel = "Next year"),
          (this.prevMultiYearLabel = "Previous 24 years"),
          (this.nextMultiYearLabel = "Next 24 years"),
          (this.switchToMonthViewLabel = "Choose date"),
          (this.switchToMultiYearViewLabel = "Choose month and year"),
          (this.startDateLabel = "Start date"),
          (this.endDateLabel = "End date");
      }
      formatYearRange(e, i) {
        return `${e} \u2013 ${i}`;
      }
      formatYearRangeLabel(e, i) {
        return `${e} to ${i}`;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  QP = 0,
  Bl = class {
    constructor(t, e, i, r, o = {}, a = t, s) {
      (this.value = t),
        (this.displayValue = e),
        (this.ariaLabel = i),
        (this.enabled = r),
        (this.cssClasses = o),
        (this.compareValue = a),
        (this.rawValue = s),
        (this.id = QP++);
    }
  },
  XP = 1,
  lx = dr({ passive: !1, capture: !0 }),
  uo = dr({ passive: !0, capture: !0 }),
  vu = dr({ passive: !0 }),
  ts = (() => {
    class n {
      ngAfterViewChecked() {
        this._focusActiveCellAfterViewChecked &&
          (this._focusActiveCell(),
          (this._focusActiveCellAfterViewChecked = !1));
      }
      constructor(e, i) {
        (this._elementRef = e),
          (this._ngZone = i),
          (this._platform = G(It)),
          (this._focusActiveCellAfterViewChecked = !1),
          (this.numCols = 7),
          (this.activeCell = 0),
          (this.isRange = !1),
          (this.cellAspectRatio = 1),
          (this.previewStart = null),
          (this.previewEnd = null),
          (this.selectedValueChange = new De()),
          (this.previewChange = new De()),
          (this.activeDateChange = new De()),
          (this.dragStarted = new De()),
          (this.dragEnded = new De()),
          (this._didDragSinceMouseDown = !1),
          (this._injector = G(St)),
          (this._trackRow = (r) => r),
          (this._enterHandler = (r) => {
            if (this._skipNextFocus && r.type === "focus") {
              this._skipNextFocus = !1;
              return;
            }
            if (r.target && this.isRange) {
              let o = this._getCellFromElement(r.target);
              o &&
                this._ngZone.run(() =>
                  this.previewChange.emit({
                    value: o.enabled ? o : null,
                    event: r,
                  })
                );
            }
          }),
          (this._touchmoveHandler = (r) => {
            if (!this.isRange) return;
            let o = cx(r),
              a = o ? this._getCellFromElement(o) : null;
            o !== r.target && (this._didDragSinceMouseDown = !0),
              Zf(r.target) && r.preventDefault(),
              this._ngZone.run(() =>
                this.previewChange.emit({
                  value: a?.enabled ? a : null,
                  event: r,
                })
              );
          }),
          (this._leaveHandler = (r) => {
            this.previewEnd !== null &&
              this.isRange &&
              (r.type !== "blur" && (this._didDragSinceMouseDown = !0),
              r.target &&
                this._getCellFromElement(r.target) &&
                !(
                  r.relatedTarget && this._getCellFromElement(r.relatedTarget)
                ) &&
                this._ngZone.run(() =>
                  this.previewChange.emit({ value: null, event: r })
                ));
          }),
          (this._mousedownHandler = (r) => {
            if (!this.isRange) return;
            this._didDragSinceMouseDown = !1;
            let o = r.target && this._getCellFromElement(r.target);
            !o ||
              !this._isInRange(o.compareValue) ||
              this._ngZone.run(() => {
                this.dragStarted.emit({ value: o.rawValue, event: r });
              });
          }),
          (this._mouseupHandler = (r) => {
            if (!this.isRange) return;
            let o = Zf(r.target);
            if (!o) {
              this._ngZone.run(() => {
                this.dragEnded.emit({ value: null, event: r });
              });
              return;
            }
            o.closest(".mat-calendar-body") ===
              this._elementRef.nativeElement &&
              this._ngZone.run(() => {
                let a = this._getCellFromElement(o);
                this.dragEnded.emit({ value: a?.rawValue ?? null, event: r });
              });
          }),
          (this._touchendHandler = (r) => {
            let o = cx(r);
            o && this._mouseupHandler({ target: o });
          }),
          (this._id = `mat-calendar-body-${XP++}`),
          (this._startDateLabelId = `${this._id}-start-date`),
          (this._endDateLabelId = `${this._id}-end-date`),
          i.runOutsideAngular(() => {
            let r = e.nativeElement;
            r.addEventListener("touchmove", this._touchmoveHandler, lx),
              r.addEventListener("mouseenter", this._enterHandler, uo),
              r.addEventListener("focus", this._enterHandler, uo),
              r.addEventListener("mouseleave", this._leaveHandler, uo),
              r.addEventListener("blur", this._leaveHandler, uo),
              r.addEventListener("mousedown", this._mousedownHandler, vu),
              r.addEventListener("touchstart", this._mousedownHandler, vu),
              this._platform.isBrowser &&
                (window.addEventListener("mouseup", this._mouseupHandler),
                window.addEventListener("touchend", this._touchendHandler));
          });
      }
      _cellClicked(e, i) {
        this._didDragSinceMouseDown ||
          (e.enabled &&
            this.selectedValueChange.emit({ value: e.value, event: i }));
      }
      _emitActiveDateChange(e, i) {
        e.enabled && this.activeDateChange.emit({ value: e.value, event: i });
      }
      _isSelected(e) {
        return this.startValue === e || this.endValue === e;
      }
      ngOnChanges(e) {
        let i = e.numCols,
          { rows: r, numCols: o } = this;
        (e.rows || i) &&
          (this._firstRowOffset =
            r && r.length && r[0].length ? o - r[0].length : 0),
          (e.cellAspectRatio || i || !this._cellPadding) &&
            (this._cellPadding = `${(50 * this.cellAspectRatio) / o}%`),
          (i || !this._cellWidth) && (this._cellWidth = `${100 / o}%`);
      }
      ngOnDestroy() {
        let e = this._elementRef.nativeElement;
        e.removeEventListener("touchmove", this._touchmoveHandler, lx),
          e.removeEventListener("mouseenter", this._enterHandler, uo),
          e.removeEventListener("focus", this._enterHandler, uo),
          e.removeEventListener("mouseleave", this._leaveHandler, uo),
          e.removeEventListener("blur", this._leaveHandler, uo),
          e.removeEventListener("mousedown", this._mousedownHandler, vu),
          e.removeEventListener("touchstart", this._mousedownHandler, vu),
          this._platform.isBrowser &&
            (window.removeEventListener("mouseup", this._mouseupHandler),
            window.removeEventListener("touchend", this._touchendHandler));
      }
      _isActiveCell(e, i) {
        let r = e * this.numCols + i;
        return e && (r -= this._firstRowOffset), r == this.activeCell;
      }
      _focusActiveCell(e = !0) {
        kn(
          () => {
            setTimeout(() => {
              let i = this._elementRef.nativeElement.querySelector(
                ".mat-calendar-body-active"
              );
              i && (e || (this._skipNextFocus = !0), i.focus());
            });
          },
          { injector: this._injector }
        );
      }
      _scheduleFocusActiveCellAfterViewChecked() {
        this._focusActiveCellAfterViewChecked = !0;
      }
      _isRangeStart(e) {
        return Jf(e, this.startValue, this.endValue);
      }
      _isRangeEnd(e) {
        return eg(e, this.startValue, this.endValue);
      }
      _isInRange(e) {
        return tg(e, this.startValue, this.endValue, this.isRange);
      }
      _isComparisonStart(e) {
        return Jf(e, this.comparisonStart, this.comparisonEnd);
      }
      _isComparisonBridgeStart(e, i, r) {
        if (
          !this._isComparisonStart(e) ||
          this._isRangeStart(e) ||
          !this._isInRange(e)
        )
          return !1;
        let o = this.rows[i][r - 1];
        if (!o) {
          let a = this.rows[i - 1];
          o = a && a[a.length - 1];
        }
        return o && !this._isRangeEnd(o.compareValue);
      }
      _isComparisonBridgeEnd(e, i, r) {
        if (
          !this._isComparisonEnd(e) ||
          this._isRangeEnd(e) ||
          !this._isInRange(e)
        )
          return !1;
        let o = this.rows[i][r + 1];
        if (!o) {
          let a = this.rows[i + 1];
          o = a && a[0];
        }
        return o && !this._isRangeStart(o.compareValue);
      }
      _isComparisonEnd(e) {
        return eg(e, this.comparisonStart, this.comparisonEnd);
      }
      _isInComparisonRange(e) {
        return tg(e, this.comparisonStart, this.comparisonEnd, this.isRange);
      }
      _isComparisonIdentical(e) {
        return (
          this.comparisonStart === this.comparisonEnd &&
          e === this.comparisonStart
        );
      }
      _isPreviewStart(e) {
        return Jf(e, this.previewStart, this.previewEnd);
      }
      _isPreviewEnd(e) {
        return eg(e, this.previewStart, this.previewEnd);
      }
      _isInPreview(e) {
        return tg(e, this.previewStart, this.previewEnd, this.isRange);
      }
      _getDescribedby(e) {
        return this.isRange
          ? this.startValue === e && this.endValue === e
            ? `${this._startDateLabelId} ${this._endDateLabelId}`
            : this.startValue === e
            ? this._startDateLabelId
            : this.endValue === e
            ? this._endDateLabelId
            : null
          : null;
      }
      _getCellFromElement(e) {
        let i = Zf(e);
        if (i) {
          let r = i.getAttribute("data-mat-row"),
            o = i.getAttribute("data-mat-col");
          if (r && o) return this.rows[parseInt(r)][parseInt(o)];
        }
        return null;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Ve), H(Re));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["", "mat-calendar-body", ""]],
          hostAttrs: [1, "mat-calendar-body"],
          inputs: {
            label: "label",
            rows: "rows",
            todayValue: "todayValue",
            startValue: "startValue",
            endValue: "endValue",
            labelMinRequiredCells: "labelMinRequiredCells",
            numCols: "numCols",
            activeCell: "activeCell",
            isRange: "isRange",
            cellAspectRatio: "cellAspectRatio",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            previewStart: "previewStart",
            previewEnd: "previewEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedValueChange: "selectedValueChange",
            previewChange: "previewChange",
            activeDateChange: "activeDateChange",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
          },
          exportAs: ["matCalendarBody"],
          standalone: !0,
          features: [Nt, ue],
          attrs: AP,
          decls: 7,
          vars: 5,
          consts: [
            ["aria-hidden", "true"],
            ["role", "row"],
            [1, "mat-calendar-body-hidden-label", 3, "id"],
            [1, "mat-calendar-body-label"],
            [1, "mat-calendar-body-label", 3, "paddingTop", "paddingBottom"],
            [
              "role",
              "gridcell",
              1,
              "mat-calendar-body-cell-container",
              3,
              "width",
              "paddingTop",
              "paddingBottom",
            ],
            ["role", "gridcell", 1, "mat-calendar-body-cell-container"],
            [
              "type",
              "button",
              1,
              "mat-calendar-body-cell",
              3,
              "click",
              "focus",
              "ngClass",
              "tabindex",
            ],
            [1, "mat-calendar-body-cell-content", "mat-focus-indicator"],
            ["aria-hidden", "true", 1, "mat-calendar-body-cell-preview"],
          ],
          template: function (i, r) {
            i & 1 &&
              (F(0, FP, 3, 6, "tr", 0),
              ca(1, VP, 4, 1, "tr", 1, RP, !0),
              h(3, "span", 2),
              f(4),
              u(),
              h(5, "span", 2),
              f(6),
              u()),
              i & 2 &&
                (In(r._firstRowOffset < r.labelMinRequiredCells ? 0 : -1),
                g(),
                da(r.rows),
                g(2),
                M("id", r._startDateLabelId),
                g(),
                ae(
                  " ",
                  r.startDateAccessibleName,
                  `
`
                ),
                g(),
                M("id", r._endDateLabelId),
                g(),
                ae(
                  " ",
                  r.endDateAccessibleName,
                  `
`
                ));
          },
          dependencies: [Gt],
          styles: [
            '.mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color)}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color)}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color)}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-app-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-app-secondary))}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
function Xf(n) {
  return n?.nodeName === "TD";
}
function Zf(n) {
  let t;
  return (
    Xf(n)
      ? (t = n)
      : Xf(n.parentNode)
      ? (t = n.parentNode)
      : Xf(n.parentNode?.parentNode) && (t = n.parentNode.parentNode),
    t?.getAttribute("data-mat-row") != null ? t : null
  );
}
function Jf(n, t, e) {
  return e !== null && t !== e && n < e && n === t;
}
function eg(n, t, e) {
  return t !== null && t !== e && n >= t && n === e;
}
function tg(n, t, e, i) {
  return i && t !== null && e !== null && t !== e && n >= t && n <= e;
}
function cx(n) {
  let t = n.changedTouches[0];
  return document.elementFromPoint(t.clientX, t.clientY);
}
var Sn = class {
    constructor(t, e) {
      (this.start = t), (this.end = e);
    }
  },
  yu = (() => {
    class n {
      constructor(e, i) {
        (this.selection = e),
          (this._adapter = i),
          (this._selectionChanged = new Ie()),
          (this.selectionChanged = this._selectionChanged),
          (this.selection = e);
      }
      updateSelection(e, i) {
        let r = this.selection;
        (this.selection = e),
          this._selectionChanged.next({ selection: e, source: i, oldValue: r });
      }
      ngOnDestroy() {
        this._selectionChanged.complete();
      }
      _isValidDateInstance(e) {
        return this._adapter.isDateInstance(e) && this._adapter.isValid(e);
      }
      static {
        this.ɵfac = function (i) {
          zr();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  ZP = (() => {
    class n extends yu {
      constructor(e) {
        super(null, e);
      }
      add(e) {
        super.updateSelection(e, this);
      }
      isValid() {
        return (
          this.selection != null && this._isValidDateInstance(this.selection)
        );
      }
      isComplete() {
        return this.selection != null;
      }
      clone() {
        let e = new n(this._adapter);
        return e.updateSelection(this.selection, this), e;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Qi));
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function JP(n, t) {
  return n || new ZP(t);
}
var eA = { provide: yu, deps: [[new bs(), new pc(), yu], Qi], useFactory: JP };
var fx = new Me("MAT_DATE_RANGE_SELECTION_STRATEGY");
var ig = 7,
  tA = 0,
  dx = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let i = this._activeDate,
          r =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          r,
          this.minDate,
          this.maxDate
        )),
          this._hasSameMonthAndYear(i, this._activeDate) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Sn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setRanges(this._selected);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, i, r, o, a) {
        (this._changeDetectorRef = e),
          (this._dateFormats = i),
          (this._dateAdapter = r),
          (this._dir = o),
          (this._rangeStrategy = a),
          (this._rerenderSubscription = Xi.EMPTY),
          (this.activeDrag = null),
          (this.selectedChange = new De()),
          (this._userSelection = new De()),
          (this.dragStarted = new De()),
          (this.dragEnded = new De()),
          (this.activeDateChange = new De()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Kn(null))
          .subscribe(() => this._init());
      }
      ngOnChanges(e) {
        let i = e.comparisonStart || e.comparisonEnd;
        i && !i.firstChange && this._setRanges(this.selected),
          e.activeDrag && !this.activeDrag && this._clearPreview();
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _dateSelected(e) {
        let i = e.value,
          r = this._getDateFromDayOfMonth(i),
          o,
          a;
        this._selected instanceof Sn
          ? ((o = this._getDateInCurrentMonth(this._selected.start)),
            (a = this._getDateInCurrentMonth(this._selected.end)))
          : (o = a = this._getDateInCurrentMonth(this._selected)),
          (o !== i || a !== i) && this.selectedChange.emit(r),
          this._userSelection.emit({ value: r, event: e.event }),
          this._clearPreview(),
          this._changeDetectorRef.markForCheck();
      }
      _updateActiveDate(e) {
        let i = e.value,
          r = this._activeDate;
        (this.activeDate = this._getDateFromDayOfMonth(i)),
          this._dateAdapter.compareDate(r, this.activeDate) &&
            this.activeDateChange.emit(this._activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let i = this._activeDate,
          r = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              r ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              r ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              -7
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              7
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              1 - this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              this._dateAdapter.getNumDaysInMonth(this._activeDate) -
                this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
            break;
          case 34:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
            break;
          case 13:
          case 32:
            (this._selectionKeyPressed = !0),
              this._canSelect(this._activeDate) && e.preventDefault();
            return;
          case 27:
            this._previewEnd != null &&
              !w1(e) &&
              (this._clearPreview(),
              this.activeDrag
                ? this.dragEnded.emit({ value: null, event: e })
                : (this.selectedChange.emit(null),
                  this._userSelection.emit({ value: null, event: e })),
              e.preventDefault(),
              e.stopPropagation());
            return;
          default:
            return;
        }
        this._dateAdapter.compareDate(i, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._canSelect(this._activeDate) &&
            this._dateSelected({
              value: this._dateAdapter.getDate(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setRanges(this.selected),
          (this._todayDate = this._getCellCompareValue(
            this._dateAdapter.today()
          )),
          (this._monthLabel = this._dateFormats.display.monthLabel
            ? this._dateAdapter.format(
                this.activeDate,
                this._dateFormats.display.monthLabel
              )
            : this._dateAdapter
                .getMonthNames("short")
                [
                  this._dateAdapter.getMonth(this.activeDate)
                ].toLocaleUpperCase());
        let e = this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          1
        );
        (this._firstWeekOffset =
          (ig +
            this._dateAdapter.getDayOfWeek(e) -
            this._dateAdapter.getFirstDayOfWeek()) %
          ig),
          this._initWeekdays(),
          this._createWeekCells(),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell(e) {
        this._matCalendarBody._focusActiveCell(e);
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _previewChanged({ event: e, value: i }) {
        if (this._rangeStrategy) {
          let r = i ? i.rawValue : null,
            o = this._rangeStrategy.createPreview(r, this.selected, e);
          if (
            ((this._previewStart = this._getCellCompareValue(o.start)),
            (this._previewEnd = this._getCellCompareValue(o.end)),
            this.activeDrag && r)
          ) {
            let a = this._rangeStrategy.createDrag?.(
              this.activeDrag.value,
              this.selected,
              r,
              e
            );
            a &&
              ((this._previewStart = this._getCellCompareValue(a.start)),
              (this._previewEnd = this._getCellCompareValue(a.end)));
          }
          this._changeDetectorRef.detectChanges();
        }
      }
      _dragEnded(e) {
        if (this.activeDrag)
          if (e.value) {
            let i = this._rangeStrategy?.createDrag?.(
              this.activeDrag.value,
              this.selected,
              e.value,
              e.event
            );
            this.dragEnded.emit({ value: i ?? null, event: e.event });
          } else this.dragEnded.emit({ value: null, event: e.event });
      }
      _getDateFromDayOfMonth(e) {
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          e
        );
      }
      _initWeekdays() {
        let e = this._dateAdapter.getFirstDayOfWeek(),
          i = this._dateAdapter.getDayOfWeekNames("narrow"),
          o = this._dateAdapter
            .getDayOfWeekNames("long")
            .map((a, s) => ({ long: a, narrow: i[s], id: tA++ }));
        this._weekdays = o.slice(e).concat(o.slice(0, e));
      }
      _createWeekCells() {
        let e = this._dateAdapter.getNumDaysInMonth(this.activeDate),
          i = this._dateAdapter.getDateNames();
        this._weeks = [[]];
        for (let r = 0, o = this._firstWeekOffset; r < e; r++, o++) {
          o == ig && (this._weeks.push([]), (o = 0));
          let a = this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              r + 1
            ),
            s = this._shouldEnableDate(a),
            l = this._dateAdapter.format(
              a,
              this._dateFormats.display.dateA11yLabel
            ),
            d = this.dateClass ? this.dateClass(a, "month") : void 0;
          this._weeks[this._weeks.length - 1].push(
            new Bl(r + 1, i[r], l, s, d, this._getCellCompareValue(a), a)
          );
        }
      }
      _shouldEnableDate(e) {
        return (
          !!e &&
          (!this.minDate ||
            this._dateAdapter.compareDate(e, this.minDate) >= 0) &&
          (!this.maxDate ||
            this._dateAdapter.compareDate(e, this.maxDate) <= 0) &&
          (!this.dateFilter || this.dateFilter(e))
        );
      }
      _getDateInCurrentMonth(e) {
        return e && this._hasSameMonthAndYear(e, this.activeDate)
          ? this._dateAdapter.getDate(e)
          : null;
      }
      _hasSameMonthAndYear(e, i) {
        return !!(
          e &&
          i &&
          this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(i) &&
          this._dateAdapter.getYear(e) == this._dateAdapter.getYear(i)
        );
      }
      _getCellCompareValue(e) {
        if (e) {
          let i = this._dateAdapter.getYear(e),
            r = this._dateAdapter.getMonth(e),
            o = this._dateAdapter.getDate(e);
          return new Date(i, r, o).getTime();
        }
        return null;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setRanges(e) {
        e instanceof Sn
          ? ((this._rangeStart = this._getCellCompareValue(e.start)),
            (this._rangeEnd = this._getCellCompareValue(e.end)),
            (this._isRange = !0))
          : ((this._rangeStart = this._rangeEnd = this._getCellCompareValue(e)),
            (this._isRange = !1)),
          (this._comparisonRangeStart = this._getCellCompareValue(
            this.comparisonStart
          )),
          (this._comparisonRangeEnd = this._getCellCompareValue(
            this.comparisonEnd
          ));
      }
      _canSelect(e) {
        return !this.dateFilter || this.dateFilter(e);
      }
      _clearPreview() {
        this._previewStart = this._previewEnd = null;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(et), H(Za, 8), H(Qi, 8), H(Qa, 8), H(fx, 8));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-month-view"]],
          viewQuery: function (i, r) {
            if ((i & 1 && Xt(ts, 5), i & 2)) {
              let o;
              xt((o = Ct())) && (r._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
            activeDrag: "activeDrag",
          },
          outputs: {
            selectedChange: "selectedChange",
            _userSelection: "_userSelection",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMonthView"],
          standalone: !0,
          features: [Nt, ue],
          decls: 8,
          vars: 14,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            [1, "mat-calendar-table-header"],
            ["scope", "col"],
            ["aria-hidden", "true"],
            ["colspan", "7", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "previewChange",
              "dragStarted",
              "dragEnded",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "comparisonStart",
              "comparisonEnd",
              "previewStart",
              "previewEnd",
              "isRange",
              "labelMinRequiredCells",
              "activeCell",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [1, "cdk-visually-hidden"],
          ],
          template: function (i, r) {
            i & 1 &&
              (h(0, "table", 0)(1, "thead", 1)(2, "tr"),
              ca(3, BP, 5, 2, "th", 2, mx),
              u(),
              h(5, "tr", 3),
              W(6, "th", 4),
              u()(),
              h(7, "tbody", 5),
              U("selectedValueChange", function (a) {
                return r._dateSelected(a);
              })("activeDateChange", function (a) {
                return r._updateActiveDate(a);
              })("previewChange", function (a) {
                return r._previewChanged(a);
              })("dragStarted", function (a) {
                return r.dragStarted.emit(a);
              })("dragEnded", function (a) {
                return r._dragEnded(a);
              })("keyup", function (a) {
                return r._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return r._handleCalendarBodyKeydown(a);
              }),
              u()()),
              i & 2 &&
                (g(3),
                da(r._weekdays),
                g(4),
                M("label", r._monthLabel)("rows", r._weeks)(
                  "todayValue",
                  r._todayDate
                )("startValue", r._rangeStart)("endValue", r._rangeEnd)(
                  "comparisonStart",
                  r._comparisonRangeStart
                )("comparisonEnd", r._comparisonRangeEnd)(
                  "previewStart",
                  r._previewStart
                )("previewEnd", r._previewEnd)("isRange", r._isRange)(
                  "labelMinRequiredCells",
                  3
                )("activeCell", r._dateAdapter.getDate(r.activeDate) - 1)(
                  "startDateAccessibleName",
                  r.startDateAccessibleName
                )("endDateAccessibleName", r.endDateAccessibleName));
          },
          dependencies: [ts],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  dn = 24,
  ng = 4,
  ux = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let i = this._activeDate,
          r =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          r,
          this.minDate,
          this.maxDate
        )),
          gx(
            this._dateAdapter,
            i,
            this._activeDate,
            this.minDate,
            this.maxDate
          ) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Sn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedYear(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, i, r) {
        (this._changeDetectorRef = e),
          (this._dateAdapter = i),
          (this._dir = r),
          (this._rerenderSubscription = Xi.EMPTY),
          (this.selectedChange = new De()),
          (this.yearSelected = new De()),
          (this.activeDateChange = new De()),
          this._dateAdapter,
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Kn(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _init() {
        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());
        let i =
          this._dateAdapter.getYear(this._activeDate) -
          Vl(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
        this._years = [];
        for (let r = 0, o = []; r < dn; r++)
          o.push(i + r),
            o.length == ng &&
              (this._years.push(o.map((a) => this._createCellForYear(a))),
              (o = []));
        this._changeDetectorRef.markForCheck();
      }
      _yearSelected(e) {
        let i = e.value,
          r = this._dateAdapter.createDate(i, 0, 1),
          o = this._getDateFromYear(i);
        this.yearSelected.emit(r), this.selectedChange.emit(o);
      }
      _updateActiveDate(e) {
        let i = e.value,
          r = this._activeDate;
        (this.activeDate = this._getDateFromYear(i)),
          this._dateAdapter.compareDate(r, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let i = this._activeDate,
          r = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              r ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              r ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -ng
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              ng
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -Vl(
                this._dateAdapter,
                this.activeDate,
                this.minDate,
                this.maxDate
              )
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              dn -
                Vl(
                  this._dateAdapter,
                  this.activeDate,
                  this.minDate,
                  this.maxDate
                ) -
                1
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -dn * 10 : -dn
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? dn * 10 : dn
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(i, this.activeDate) &&
          this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked(),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._yearSelected({
              value: this._dateAdapter.getYear(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _getActiveCell() {
        return Vl(
          this._dateAdapter,
          this.activeDate,
          this.minDate,
          this.maxDate
        );
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getDateFromYear(e) {
        let i = this._dateAdapter.getMonth(this.activeDate),
          r = this._dateAdapter.getNumDaysInMonth(
            this._dateAdapter.createDate(e, i, 1)
          );
        return this._dateAdapter.createDate(
          e,
          i,
          Math.min(this._dateAdapter.getDate(this.activeDate), r)
        );
      }
      _createCellForYear(e) {
        let i = this._dateAdapter.createDate(e, 0, 1),
          r = this._dateAdapter.getYearName(i),
          o = this.dateClass ? this.dateClass(i, "multi-year") : void 0;
        return new Bl(e, r, r, this._shouldEnableYear(e), o);
      }
      _shouldEnableYear(e) {
        if (
          e == null ||
          (this.maxDate && e > this._dateAdapter.getYear(this.maxDate)) ||
          (this.minDate && e < this._dateAdapter.getYear(this.minDate))
        )
          return !1;
        if (!this.dateFilter) return !0;
        let i = this._dateAdapter.createDate(e, 0, 1);
        for (
          let r = i;
          this._dateAdapter.getYear(r) == e;
          r = this._dateAdapter.addCalendarDays(r, 1)
        )
          if (this.dateFilter(r)) return !0;
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedYear(e) {
        if (((this._selectedYear = null), e instanceof Sn)) {
          let i = e.start || e.end;
          i && (this._selectedYear = this._dateAdapter.getYear(i));
        } else e && (this._selectedYear = this._dateAdapter.getYear(e));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(et), H(Qi, 8), H(Qa, 8));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-multi-year-view"]],
          viewQuery: function (i, r) {
            if ((i & 1 && Xt(ts, 5), i & 2)) {
              let o;
              xt((o = Ct())) && (r._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMultiYearView"],
          standalone: !0,
          features: [ue],
          decls: 5,
          vars: 7,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (i, r) {
            i & 1 &&
              (h(0, "table", 0)(1, "thead", 1)(2, "tr"),
              W(3, "th", 2),
              u()(),
              h(4, "tbody", 3),
              U("selectedValueChange", function (a) {
                return r._yearSelected(a);
              })("activeDateChange", function (a) {
                return r._updateActiveDate(a);
              })("keyup", function (a) {
                return r._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return r._handleCalendarBodyKeydown(a);
              }),
              u()()),
              i & 2 &&
                (g(4),
                M("rows", r._years)("todayValue", r._todayYear)(
                  "startValue",
                  r._selectedYear
                )("endValue", r._selectedYear)("numCols", 4)(
                  "cellAspectRatio",
                  4 / 7
                )("activeCell", r._getActiveCell()));
          },
          dependencies: [ts],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
function gx(n, t, e, i, r) {
  let o = n.getYear(t),
    a = n.getYear(e),
    s = _x(n, i, r);
  return Math.floor((o - s) / dn) === Math.floor((a - s) / dn);
}
function Vl(n, t, e, i) {
  let r = n.getYear(t);
  return iA(r - _x(n, e, i), dn);
}
function _x(n, t, e) {
  let i = 0;
  return e ? (i = n.getYear(e) - dn + 1) : t && (i = n.getYear(t)), i;
}
function iA(n, t) {
  return ((n % t) + t) % t;
}
var hx = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let i = this._activeDate,
          r =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          r,
          this.minDate,
          this.maxDate
        )),
          this._dateAdapter.getYear(i) !==
            this._dateAdapter.getYear(this._activeDate) && this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Sn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedMonth(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, i, r, o) {
        (this._changeDetectorRef = e),
          (this._dateFormats = i),
          (this._dateAdapter = r),
          (this._dir = o),
          (this._rerenderSubscription = Xi.EMPTY),
          (this.selectedChange = new De()),
          (this.monthSelected = new De()),
          (this.activeDateChange = new De()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Kn(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _monthSelected(e) {
        let i = e.value,
          r = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            i,
            1
          );
        this.monthSelected.emit(r);
        let o = this._getDateFromMonth(i);
        this.selectedChange.emit(o);
      }
      _updateActiveDate(e) {
        let i = e.value,
          r = this._activeDate;
        (this.activeDate = this._getDateFromMonth(i)),
          this._dateAdapter.compareDate(r, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let i = this._activeDate,
          r = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              r ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              r ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -4
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              4
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              11 - this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -10 : -1
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? 10 : 1
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(i, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._monthSelected({
              value: this._dateAdapter.getMonth(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setSelectedMonth(this.selected),
          (this._todayMonth = this._getMonthInCurrentYear(
            this._dateAdapter.today()
          )),
          (this._yearLabel = this._dateAdapter.getYearName(this.activeDate));
        let e = this._dateAdapter.getMonthNames("short");
        (this._months = [
          [0, 1, 2, 3],
          [4, 5, 6, 7],
          [8, 9, 10, 11],
        ].map((i) => i.map((r) => this._createCellForMonth(r, e[r])))),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getMonthInCurrentYear(e) {
        return e &&
          this._dateAdapter.getYear(e) ==
            this._dateAdapter.getYear(this.activeDate)
          ? this._dateAdapter.getMonth(e)
          : null;
      }
      _getDateFromMonth(e) {
        let i = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          r = this._dateAdapter.getNumDaysInMonth(i);
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          e,
          Math.min(this._dateAdapter.getDate(this.activeDate), r)
        );
      }
      _createCellForMonth(e, i) {
        let r = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          o = this._dateAdapter.format(
            r,
            this._dateFormats.display.monthYearA11yLabel
          ),
          a = this.dateClass ? this.dateClass(r, "year") : void 0;
        return new Bl(
          e,
          i.toLocaleUpperCase(),
          o,
          this._shouldEnableMonth(e),
          a
        );
      }
      _shouldEnableMonth(e) {
        let i = this._dateAdapter.getYear(this.activeDate);
        if (
          e == null ||
          this._isYearAndMonthAfterMaxDate(i, e) ||
          this._isYearAndMonthBeforeMinDate(i, e)
        )
          return !1;
        if (!this.dateFilter) return !0;
        let r = this._dateAdapter.createDate(i, e, 1);
        for (
          let o = r;
          this._dateAdapter.getMonth(o) == e;
          o = this._dateAdapter.addCalendarDays(o, 1)
        )
          if (this.dateFilter(o)) return !0;
        return !1;
      }
      _isYearAndMonthAfterMaxDate(e, i) {
        if (this.maxDate) {
          let r = this._dateAdapter.getYear(this.maxDate),
            o = this._dateAdapter.getMonth(this.maxDate);
          return e > r || (e === r && i > o);
        }
        return !1;
      }
      _isYearAndMonthBeforeMinDate(e, i) {
        if (this.minDate) {
          let r = this._dateAdapter.getYear(this.minDate),
            o = this._dateAdapter.getMonth(this.minDate);
          return e < r || (e === r && i < o);
        }
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedMonth(e) {
        e instanceof Sn
          ? (this._selectedMonth =
              this._getMonthInCurrentYear(e.start) ||
              this._getMonthInCurrentYear(e.end))
          : (this._selectedMonth = this._getMonthInCurrentYear(e));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(et), H(Za, 8), H(Qi, 8), H(Qa, 8));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-year-view"]],
          viewQuery: function (i, r) {
            if ((i & 1 && Xt(ts, 5), i & 2)) {
              let o;
              xt((o = Ct())) && (r._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            monthSelected: "monthSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matYearView"],
          standalone: !0,
          features: [ue],
          decls: 5,
          vars: 9,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "labelMinRequiredCells",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (i, r) {
            i & 1 &&
              (h(0, "table", 0)(1, "thead", 1)(2, "tr"),
              W(3, "th", 2),
              u()(),
              h(4, "tbody", 3),
              U("selectedValueChange", function (a) {
                return r._monthSelected(a);
              })("activeDateChange", function (a) {
                return r._updateActiveDate(a);
              })("keyup", function (a) {
                return r._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return r._handleCalendarBodyKeydown(a);
              }),
              u()()),
              i & 2 &&
                (g(4),
                M("label", r._yearLabel)("rows", r._months)(
                  "todayValue",
                  r._todayMonth
                )("startValue", r._selectedMonth)("endValue", r._selectedMonth)(
                  "labelMinRequiredCells",
                  2
                )("numCols", 4)("cellAspectRatio", 4 / 7)(
                  "activeCell",
                  r._dateAdapter.getMonth(r.activeDate)
                ));
          },
          dependencies: [ts],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  nA = 1,
  bx = (() => {
    class n {
      constructor(e, i, r, o, a) {
        (this._intl = e),
          (this.calendar = i),
          (this._dateAdapter = r),
          (this._dateFormats = o),
          (this._id = `mat-calendar-header-${nA++}`),
          (this._periodButtonLabelId = `${this._id}-period-label`),
          this.calendar.stateChanges.subscribe(() => a.markForCheck());
      }
      get periodButtonText() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRange(...this._formatMinAndMaxYearLabels());
      }
      get periodButtonDescription() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRangeLabel(
              ...this._formatMinAndMaxYearLabels()
            );
      }
      get periodButtonLabel() {
        return this.calendar.currentView == "month"
          ? this._intl.switchToMultiYearViewLabel
          : this._intl.switchToMonthViewLabel;
      }
      get prevButtonLabel() {
        return {
          month: this._intl.prevMonthLabel,
          year: this._intl.prevYearLabel,
          "multi-year": this._intl.prevMultiYearLabel,
        }[this.calendar.currentView];
      }
      get nextButtonLabel() {
        return {
          month: this._intl.nextMonthLabel,
          year: this._intl.nextYearLabel,
          "multi-year": this._intl.nextMultiYearLabel,
        }[this.calendar.currentView];
      }
      currentPeriodClicked() {
        this.calendar.currentView =
          this.calendar.currentView == "month" ? "multi-year" : "month";
      }
      previousClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? -1 : -dn
              );
      }
      nextClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? 1 : dn
              );
      }
      previousEnabled() {
        return this.calendar.minDate
          ? !this.calendar.minDate ||
              !this._isSameView(this.calendar.activeDate, this.calendar.minDate)
          : !0;
      }
      nextEnabled() {
        return (
          !this.calendar.maxDate ||
          !this._isSameView(this.calendar.activeDate, this.calendar.maxDate)
        );
      }
      _isSameView(e, i) {
        return this.calendar.currentView == "month"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(i) &&
              this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(i)
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(i)
          : gx(
              this._dateAdapter,
              e,
              i,
              this.calendar.minDate,
              this.calendar.maxDate
            );
      }
      _formatMinAndMaxYearLabels() {
        let i =
            this._dateAdapter.getYear(this.calendar.activeDate) -
            Vl(
              this._dateAdapter,
              this.calendar.activeDate,
              this.calendar.minDate,
              this.calendar.maxDate
            ),
          r = i + dn - 1,
          o = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(i, 0, 1)
          ),
          a = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(r, 0, 1)
          );
        return [o, a];
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(
            H(Hl),
            H(Di(() => rg)),
            H(Qi, 8),
            H(Za, 8),
            H(et)
          );
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-calendar-header"]],
          exportAs: ["matCalendarHeader"],
          standalone: !0,
          features: [ue],
          ngContentSelectors: HP,
          decls: 17,
          vars: 11,
          consts: [
            [1, "mat-calendar-header"],
            [1, "mat-calendar-controls"],
            ["aria-live", "polite", 1, "cdk-visually-hidden", 3, "id"],
            [
              "mat-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-period-button",
              3,
              "click",
            ],
            ["aria-hidden", "true"],
            [
              "viewBox",
              "0 0 10 5",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-calendar-arrow",
            ],
            ["points", "0,0 5,5 10,0"],
            [1, "mat-calendar-spacer"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-previous-button",
              3,
              "click",
              "disabled",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "focusable",
              "false",
              "aria-hidden",
              "true",
            ],
            ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-next-button",
              3,
              "click",
              "disabled",
            ],
            ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
          ],
          template: function (i, r) {
            i & 1 &&
              (Jt(),
              h(0, "div", 0)(1, "div", 1)(2, "span", 2),
              f(3),
              u(),
              h(4, "button", 3),
              U("click", function () {
                return r.currentPeriodClicked();
              }),
              h(5, "span", 4),
              f(6),
              u(),
              yt(),
              h(7, "svg", 5),
              W(8, "polygon", 6),
              u()(),
              Ur(),
              W(9, "div", 7),
              Lt(10),
              h(11, "button", 8),
              U("click", function () {
                return r.previousClicked();
              }),
              yt(),
              h(12, "svg", 9),
              W(13, "path", 10),
              u()(),
              Ur(),
              h(14, "button", 11),
              U("click", function () {
                return r.nextClicked();
              }),
              yt(),
              h(15, "svg", 9),
              W(16, "path", 12),
              u()()()()),
              i & 2 &&
                (g(2),
                M("id", r._periodButtonLabelId),
                g(),
                B(r.periodButtonDescription),
                g(),
                de("aria-label", r.periodButtonLabel)(
                  "aria-describedby",
                  r._periodButtonLabelId
                ),
                g(2),
                B(r.periodButtonText),
                g(),
                Te("mat-calendar-invert", r.calendar.currentView !== "month"),
                g(4),
                M("disabled", !r.previousEnabled()),
                de("aria-label", r.prevButtonLabel),
                g(3),
                M("disabled", !r.nextEnabled()),
                de("aria-label", r.nextButtonLabel));
          },
          dependencies: [Kf, Qf],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  rg = (() => {
    class n {
      get startAt() {
        return this._startAt;
      }
      set startAt(e) {
        this._startAt = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Sn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ));
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get activeDate() {
        return this._clampedActiveDate;
      }
      set activeDate(e) {
        (this._clampedActiveDate = this._dateAdapter.clampDate(
          e,
          this.minDate,
          this.maxDate
        )),
          this.stateChanges.next(),
          this._changeDetectorRef.markForCheck();
      }
      get currentView() {
        return this._currentView;
      }
      set currentView(e) {
        let i = this._currentView !== e ? e : null;
        (this._currentView = e),
          (this._moveFocusOnNextTick = !0),
          this._changeDetectorRef.markForCheck(),
          i && this.viewChanged.emit(i);
      }
      constructor(e, i, r, o) {
        (this._dateAdapter = i),
          (this._dateFormats = r),
          (this._changeDetectorRef = o),
          (this._moveFocusOnNextTick = !1),
          (this.startView = "month"),
          (this.selectedChange = new De()),
          (this.yearSelected = new De()),
          (this.monthSelected = new De()),
          (this.viewChanged = new De(!0)),
          (this._userSelection = new De()),
          (this._userDragDrop = new De()),
          (this._activeDrag = null),
          (this.stateChanges = new Ie()),
          (this._intlChanges = e.changes.subscribe(() => {
            o.markForCheck(), this.stateChanges.next();
          }));
      }
      ngAfterContentInit() {
        (this._calendarHeaderPortal = new Nl(this.headerComponent || bx)),
          (this.activeDate = this.startAt || this._dateAdapter.today()),
          (this._currentView = this.startView);
      }
      ngAfterViewChecked() {
        this._moveFocusOnNextTick &&
          ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
      }
      ngOnDestroy() {
        this._intlChanges.unsubscribe(), this.stateChanges.complete();
      }
      ngOnChanges(e) {
        let i =
            e.minDate &&
            !this._dateAdapter.sameDate(
              e.minDate.previousValue,
              e.minDate.currentValue
            )
              ? e.minDate
              : void 0,
          r =
            e.maxDate &&
            !this._dateAdapter.sameDate(
              e.maxDate.previousValue,
              e.maxDate.currentValue
            )
              ? e.maxDate
              : void 0,
          o = i || r || e.dateFilter;
        if (o && !o.firstChange) {
          let a = this._getCurrentViewComponent();
          a &&
            ((this._moveFocusOnNextTick = !0),
            this._changeDetectorRef.detectChanges(),
            a._init());
        }
        this.stateChanges.next();
      }
      focusActiveCell() {
        this._getCurrentViewComponent()._focusActiveCell(!1);
      }
      updateTodaysDate() {
        this._getCurrentViewComponent()._init();
      }
      _dateSelected(e) {
        let i = e.value;
        (this.selected instanceof Sn ||
          (i && !this._dateAdapter.sameDate(i, this.selected))) &&
          this.selectedChange.emit(i),
          this._userSelection.emit(e);
      }
      _yearSelectedInMultiYearView(e) {
        this.yearSelected.emit(e);
      }
      _monthSelectedInYearView(e) {
        this.monthSelected.emit(e);
      }
      _goToDateInView(e, i) {
        (this.activeDate = e), (this.currentView = i);
      }
      _dragStarted(e) {
        this._activeDrag = e;
      }
      _dragEnded(e) {
        this._activeDrag &&
          (e.value && this._userDragDrop.emit(e), (this._activeDrag = null));
      }
      _getCurrentViewComponent() {
        return this.monthView || this.yearView || this.multiYearView;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Hl), H(Qi, 8), H(Za, 8), H(et));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-calendar"]],
          viewQuery: function (i, r) {
            if ((i & 1 && (Xt(dx, 5), Xt(hx, 5), Xt(ux, 5)), i & 2)) {
              let o;
              xt((o = Ct())) && (r.monthView = o.first),
                xt((o = Ct())) && (r.yearView = o.first),
                xt((o = Ct())) && (r.multiYearView = o.first);
            }
          },
          hostAttrs: [1, "mat-calendar"],
          inputs: {
            headerComponent: "headerComponent",
            startAt: "startAt",
            startView: "startView",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            monthSelected: "monthSelected",
            viewChanged: "viewChanged",
            _userSelection: "_userSelection",
            _userDragDrop: "_userDragDrop",
          },
          exportAs: ["matCalendar"],
          standalone: !0,
          features: [Vt([eA]), Nt, ue],
          decls: 5,
          vars: 2,
          consts: [
            [3, "cdkPortalOutlet"],
            [
              "cdkMonitorSubtreeFocus",
              "",
              "tabindex",
              "-1",
              1,
              "mat-calendar-content",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "_userSelection",
              "dragStarted",
              "dragEnded",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDateChange",
              "monthSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "yearSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
          ],
          template: function (i, r) {
            if (
              (i & 1 &&
                (F(0, jP, 0, 0, "ng-template", 0),
                h(1, "div", 1),
                F(2, UP, 1, 11, "mat-month-view", 2)(
                  3,
                  zP,
                  1,
                  6,
                  "mat-year-view",
                  3
                )(4, $P, 1, 6, "mat-multi-year-view", 3),
                u()),
              i & 2)
            ) {
              let o;
              M("cdkPortalOutlet", r._calendarHeaderPortal),
                g(2),
                In(
                  (o = r.currentView) === "month"
                    ? 2
                    : o === "year"
                    ? 3
                    : o === "multi-year"
                    ? 4
                    : -1
                );
            }
          },
          dependencies: [Ff, A1, dx, hx, ux],
          styles: [
            '.mat-calendar{display:block;line-height:normal;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-app-on-surface-variant))}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-app-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  px = {
    transformPanel: wo("transformPanel", [
      tn(
        "void => enter-dropdown",
        en(
          "120ms cubic-bezier(0, 0, 0.2, 1)",
          Rh([
            ai({ opacity: 0, transform: "scale(1, 0.8)" }),
            ai({ opacity: 1, transform: "scale(1, 1)" }),
          ])
        )
      ),
      tn(
        "void => enter-dialog",
        en(
          "150ms cubic-bezier(0, 0, 0.2, 1)",
          Rh([
            ai({ opacity: 0, transform: "scale(0.7)" }),
            ai({ transform: "none", opacity: 1 }),
          ])
        )
      ),
      tn("* => void", en("100ms linear", ai({ opacity: 0 }))),
    ]),
    fadeInCalendar: wo("fadeInCalendar", [
      yr("void", ai({ opacity: 0 })),
      yr("enter", ai({ opacity: 1 })),
      tn("void => *", en("120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)")),
    ]),
  };
var rA = new Me("mat-datepicker-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let n = G(Xa);
    return () => n.scrollStrategies.reposition();
  },
});
function oA(n) {
  return () => n.scrollStrategies.reposition();
}
var aA = { provide: rA, deps: [Xa], useFactory: oA },
  sA = (() => {
    class n {
      constructor(e, i, r, o, a, s) {
        (this._elementRef = e),
          (this._changeDetectorRef = i),
          (this._globalModel = r),
          (this._dateAdapter = o),
          (this._rangeSelectionStrategy = a),
          (this._subscriptions = new Xi()),
          (this._animationDone = new Ie()),
          (this._isAnimating = !1),
          (this._actionsPortal = null),
          (this._closeButtonText = s.closeCalendarLabel);
      }
      ngOnInit() {
        this._animationState = this.datepicker.touchUi
          ? "enter-dialog"
          : "enter-dropdown";
      }
      ngAfterViewInit() {
        this._subscriptions.add(
          this.datepicker.stateChanges.subscribe(() => {
            this._changeDetectorRef.markForCheck();
          })
        ),
          this._calendar.focusActiveCell();
      }
      ngOnDestroy() {
        this._subscriptions.unsubscribe(), this._animationDone.complete();
      }
      _handleUserSelection(e) {
        let i = this._model.selection,
          r = e.value,
          o = i instanceof Sn;
        if (o && this._rangeSelectionStrategy) {
          let a = this._rangeSelectionStrategy.selectionFinished(r, i, e.event);
          this._model.updateSelection(a, this);
        } else
          r && (o || !this._dateAdapter.sameDate(r, i)) && this._model.add(r);
        (!this._model || this._model.isComplete()) &&
          !this._actionsPortal &&
          this.datepicker.close();
      }
      _handleUserDragDrop(e) {
        this._model.updateSelection(e.value, this);
      }
      _startExitAnimation() {
        (this._animationState = "void"), this._changeDetectorRef.markForCheck();
      }
      _handleAnimationEvent(e) {
        (this._isAnimating = e.phaseName === "start"),
          this._isAnimating || this._animationDone.next();
      }
      _getSelected() {
        return this._model.selection;
      }
      _applyPendingSelection() {
        this._model !== this._globalModel &&
          this._globalModel.updateSelection(this._model.selection, this);
      }
      _assignActions(e, i) {
        (this._model = e ? this._globalModel.clone() : this._globalModel),
          (this._actionsPortal = e),
          i && this._changeDetectorRef.detectChanges();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Ve), H(et), H(yu), H(Qi), H(fx, 8), H(Hl));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-datepicker-content"]],
          viewQuery: function (i, r) {
            if ((i & 1 && Xt(rg, 5), i & 2)) {
              let o;
              xt((o = Ct())) && (r._calendar = o.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-content"],
          hostVars: 5,
          hostBindings: function (i, r) {
            i & 1 &&
              k_("@transformPanel.start", function (a) {
                return r._handleAnimationEvent(a);
              })("@transformPanel.done", function (a) {
                return r._handleAnimationEvent(a);
              }),
              i & 2 &&
                (_c("@transformPanel", r._animationState),
                Ue(r.color ? "mat-" + r.color : ""),
                Te("mat-datepicker-content-touch", r.datepicker.touchUi));
          },
          inputs: { color: "color" },
          exportAs: ["matDatepickerContent"],
          standalone: !0,
          features: [ue],
          decls: 5,
          vars: 27,
          consts: [
            [
              "cdkTrapFocus",
              "",
              "role",
              "dialog",
              1,
              "mat-datepicker-content-container",
            ],
            [
              3,
              "yearSelected",
              "monthSelected",
              "viewChanged",
              "_userSelection",
              "_userDragDrop",
              "id",
              "startAt",
              "startView",
              "minDate",
              "maxDate",
              "dateFilter",
              "headerComponent",
              "selected",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [3, "cdkPortalOutlet"],
            [
              "type",
              "button",
              "mat-raised-button",
              "",
              1,
              "mat-datepicker-close-button",
              3,
              "focus",
              "blur",
              "click",
              "color",
            ],
          ],
          template: function (i, r) {
            if (
              (i & 1 &&
                (h(0, "div", 0)(1, "mat-calendar", 1),
                U("yearSelected", function (a) {
                  return r.datepicker._selectYear(a);
                })("monthSelected", function (a) {
                  return r.datepicker._selectMonth(a);
                })("viewChanged", function (a) {
                  return r.datepicker._viewChanged(a);
                })("_userSelection", function (a) {
                  return r._handleUserSelection(a);
                })("_userDragDrop", function (a) {
                  return r._handleUserDragDrop(a);
                }),
                u(),
                F(2, WP, 0, 0, "ng-template", 2),
                h(3, "button", 3),
                U("focus", function () {
                  return (r._closeButtonFocused = !0);
                })("blur", function () {
                  return (r._closeButtonFocused = !1);
                })("click", function () {
                  return r.datepicker.close();
                }),
                f(4),
                u()()),
              i & 2)
            ) {
              let o;
              Te(
                "mat-datepicker-content-container-with-custom-header",
                r.datepicker.calendarHeaderComponent
              )(
                "mat-datepicker-content-container-with-actions",
                r._actionsPortal
              ),
                de("aria-modal", !0)(
                  "aria-labelledby",
                  (o = r._dialogLabelId) !== null && o !== void 0 ? o : void 0
                ),
                g(),
                Ue(r.datepicker.panelClass),
                M("id", r.datepicker.id)("startAt", r.datepicker.startAt)(
                  "startView",
                  r.datepicker.startView
                )("minDate", r.datepicker._getMinDate())(
                  "maxDate",
                  r.datepicker._getMaxDate()
                )("dateFilter", r.datepicker._getDateFilter())(
                  "headerComponent",
                  r.datepicker.calendarHeaderComponent
                )("selected", r._getSelected())(
                  "dateClass",
                  r.datepicker.dateClass
                )("comparisonStart", r.comparisonStart)(
                  "comparisonEnd",
                  r.comparisonEnd
                )("@fadeInCalendar", "enter")(
                  "startDateAccessibleName",
                  r.startDateAccessibleName
                )("endDateAccessibleName", r.endDateAccessibleName),
                g(),
                M("cdkPortalOutlet", r._actionsPortal),
                g(),
                Te("cdk-visually-hidden", !r._closeButtonFocused),
                M("color", r.color || "primary"),
                g(),
                B(r._closeButtonText);
            }
          },
          dependencies: [O1, rg, Ff, Kf],
          styles: [
            ".mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-app-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-app-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-app-corner-large))}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}",
          ],
          encapsulation: 2,
          data: { animation: [px.transformPanel, px.fadeInCalendar] },
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var lA = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵdir = Ae({
          type: n,
          selectors: [["", "matDatepickerToggleIcon", ""]],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  cA = (() => {
    class n {
      get disabled() {
        return this._disabled === void 0 && this.datepicker
          ? this.datepicker.disabled
          : !!this._disabled;
      }
      set disabled(e) {
        this._disabled = e;
      }
      constructor(e, i, r) {
        (this._intl = e),
          (this._changeDetectorRef = i),
          (this._stateChanges = Xi.EMPTY);
        let o = Number(r);
        this.tabIndex = o || o === 0 ? o : null;
      }
      ngOnChanges(e) {
        e.datepicker && this._watchStateChanges();
      }
      ngOnDestroy() {
        this._stateChanges.unsubscribe();
      }
      ngAfterContentInit() {
        this._watchStateChanges();
      }
      _open(e) {
        this.datepicker &&
          !this.disabled &&
          (this.datepicker.open(), e.stopPropagation());
      }
      _watchStateChanges() {
        let e = this.datepicker ? this.datepicker.stateChanges : be(),
          i =
            this.datepicker && this.datepicker.datepickerInput
              ? this.datepicker.datepickerInput.stateChanges
              : be(),
          r = this.datepicker
            ? ra(this.datepicker.openedStream, this.datepicker.closedStream)
            : be();
        this._stateChanges.unsubscribe(),
          (this._stateChanges = ra(this._intl.changes, e, i, r).subscribe(() =>
            this._changeDetectorRef.markForCheck()
          ));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(H(Hl), H(et), aa("tabindex"));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-datepicker-toggle"]],
          contentQueries: function (i, r, o) {
            if ((i & 1 && Pn(o, lA, 5), i & 2)) {
              let a;
              xt((a = Ct())) && (r._customIcon = a.first);
            }
          },
          viewQuery: function (i, r) {
            if ((i & 1 && Xt(GP, 5), i & 2)) {
              let o;
              xt((o = Ct())) && (r._button = o.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-toggle"],
          hostVars: 8,
          hostBindings: function (i, r) {
            i & 1 &&
              U("click", function (a) {
                return r._open(a);
              }),
              i & 2 &&
                (de("tabindex", null)(
                  "data-mat-calendar",
                  r.datepicker ? r.datepicker.id : null
                ),
                Te(
                  "mat-datepicker-toggle-active",
                  r.datepicker && r.datepicker.opened
                )(
                  "mat-accent",
                  r.datepicker && r.datepicker.color === "accent"
                )("mat-warn", r.datepicker && r.datepicker.color === "warn"));
          },
          inputs: {
            datepicker: [0, "for", "datepicker"],
            tabIndex: "tabIndex",
            ariaLabel: [0, "aria-label", "ariaLabel"],
            disabled: [2, "disabled", "disabled", Ee],
            disableRipple: "disableRipple",
          },
          exportAs: ["matDatepickerToggle"],
          standalone: !0,
          features: [Pt, Nt, ue],
          ngContentSelectors: qP,
          decls: 4,
          vars: 6,
          consts: [
            ["button", ""],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              3,
              "disabled",
              "disableRipple",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "width",
              "24px",
              "height",
              "24px",
              "fill",
              "currentColor",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-datepicker-toggle-default-icon",
            ],
            [
              "d",
              "M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z",
            ],
          ],
          template: function (i, r) {
            i & 1 &&
              (Jt(YP),
              h(0, "button", 1, 0),
              F(2, KP, 2, 0, ":svg:svg", 2),
              Lt(3),
              u()),
              i & 2 &&
                (M("disabled", r.disabled)("disableRipple", r.disableRipple),
                de("aria-haspopup", r.datepicker ? "dialog" : null)(
                  "aria-label",
                  r.ariaLabel || r._intl.openCalendarLabel
                )("tabindex", r.disabled ? -1 : r.tabIndex),
                g(2),
                In(r._customIcon ? -1 : 2));
          },
          dependencies: [Qf],
          styles: [
            ".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var xu = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({
        providers: [Hl, aA],
        imports: [Fe, ax, G1, R1, hu, cn, sA, cA, bx, cu],
      });
    }
  }
  return n;
})();
var pg = new Me("@sweetalert2/ngx-sweetalert2#swalProvider"),
  vx = new Me("@sweetalert2/ngx-sweetalert2#fireOnInit"),
  yx = new Me("@sweetalert2/ngx-sweetalert2#dismissOnDestroy"),
  xx = (() => {
    class n {
      swalProvider;
      swalPromiseCache;
      constructor(e) {
        this.swalProvider = e;
      }
      get swal() {
        return (
          this.swalPromiseCache || this.preloadSweetAlertLibrary(),
          this.swalPromiseCache
        );
      }
      preloadSweetAlertLibrary() {
        if (this.swalPromiseCache) return;
        let e = i(this.swalProvider)
          ? this.swalProvider()
          : Promise.resolve(this.swalProvider);
        this.swalPromiseCache = e.then((o) => (r(o) ? o : o.default));
        function i(o) {
          return typeof o == "function" && o.version === void 0;
        }
        function r(o) {
          return typeof o == "function";
        }
      }
      static ɵfac = function (i) {
        return new (i || n)(Z(pg));
      };
      static ɵprov = te({ token: n, factory: n.ɵfac });
    }
    return n;
  })();
function dA() {
  return import("./chunk-DLQBNBDR.js");
}
var Cx = (() => {
  class n {
    static forRoot(e = {}) {
      return {
        ngModule: n,
        providers: [
          xx,
          { provide: pg, useValue: e.provideSwal || dA },
          { provide: vx, useValue: e.fireOnInit || !1 },
          { provide: yx, useValue: e.dismissOnDestroy || !0 },
        ],
      };
    }
    static forChild(e = {}) {
      return {
        ngModule: n,
        providers: [
          ...(e.provideSwal
            ? [xx, { provide: pg, useValue: e.provideSwal }]
            : []),
          ...(e.fireOnInit !== void 0
            ? [{ provide: vx, useValue: e.fireOnInit }]
            : []),
          ...(e.dismissOnDestroy !== void 0
            ? [{ provide: yx, useValue: e.dismissOnDestroy }]
            : []),
        ],
      };
    }
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵmod = we({ type: n });
    static ɵinj = Ce({ imports: [Fe] });
  }
  return n;
})();
var Go = (n) => ({ "is-invalid": n }),
  uA = (n, t) => ({ "btn-outline-primary": n, "btn-edit-enabled": t });
function hA(n, t) {
  n & 1 &&
    (h(0, "tr")(1, "td", 47)(2, "p"), f(3, "No Vehicles Found"), u()()());
}
function pA(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td"),
      f(6),
      u(),
      h(7, "td"),
      f(8),
      u(),
      h(9, "td"),
      f(10),
      u(),
      h(11, "td"),
      f(12),
      u(),
      h(13, "td"),
      f(14),
      u(),
      h(15, "td"),
      f(16),
      u(),
      h(17, "td")(18, "div", 48)(19, "a", 49),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.onEdit(r));
      }),
      W(20, "i", 50),
      u(),
      h(21, "a", 51),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.openDeleteModal(r));
      }),
      W(22, "i", 52),
      u()()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      r = E();
    g(2),
      B((r.currentPage - 1) * r.itemsPerPage + i + 1),
      g(2),
      B(e.vehicle_name),
      g(2),
      B(e.YOM),
      g(2),
      B(e.type),
      g(2),
      B(e.VIN),
      g(2),
      B(e.chasis_number),
      g(2),
      B(e.demo_start_date),
      g(2),
      B(e.demo_end_date);
  }
}
function mA(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "li", 53)(1, "a", 42),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.goToPage(r));
      }),
      f(2),
      u()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = E();
    Te("active", e === i.currentPage), g(2), B(e);
  }
}
function fA(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 54)(1, "div", 55)(2, "div", 56)(3, "div", 57)(4, "h5", 58),
      f(5, "Delete User"),
      u()(),
      h(6, "div", 59),
      f(7, "Are you sure you want to delete this user?"),
      u(),
      h(8, "div", 60)(9, "button", 61),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeDeleteModal());
      }),
      f(10, "Cancel"),
      u(),
      h(11, "button", 62),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.deleteVehicleId());
      }),
      f(12, "Delete"),
      u()()()()();
  }
}
function gA(n, t) {
  n & 1 && (h(0, "span", 97), f(1, "*"), u());
}
function _A(n, t) {
  n & 1 &&
    (h(0, "div", 98)(1, "span"), f(2, "Vehicle name is required."), u()());
}
function bA(n, t) {
  n & 1 && (h(0, "span", 98), f(1, "*"), u());
}
function vA(n, t) {
  n & 1 && (h(0, "span"), f(1, "YOM is required."), u());
}
function yA(n, t) {
  if ((n & 1 && (h(0, "div", 98), F(1, vA, 2, 0, "span", 34), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("YOM")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function xA(n, t) {
  n & 1 && (h(0, "span", 97), f(1, "*"), u());
}
function CA(n, t) {
  n & 1 && (h(0, "div", 98)(1, "span"), f(2, "Type is required."), u()());
}
function wA(n, t) {
  n & 1 && (h(0, "span", 98), f(1, "*"), u());
}
function DA(n, t) {
  n & 1 && (h(0, "span"), f(1, " Chasis number is required. "), u());
}
function SA(n, t) {
  if ((n & 1 && (h(0, "div", 98), F(1, DA, 2, 0, "span", 34), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("chasis_number")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function MA(n, t) {
  n & 1 && (h(0, "span", 98), f(1, "*"), u());
}
function TA(n, t) {
  n & 1 && (h(0, "span"), f(1, " Start date is required. "), u());
}
function EA(n, t) {
  if ((n & 1 && (h(0, "div", 98), F(1, TA, 2, 0, "span", 34), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("demo_start_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function kA(n, t) {
  n & 1 && (h(0, "span", 98), f(1, "*"), u());
}
function IA(n, t) {
  n & 1 && (h(0, "span"), f(1, " End date is required. "), u());
}
function OA(n, t) {
  if ((n & 1 && (h(0, "div", 98), F(1, IA, 2, 0, "span", 34), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("demo_end_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function PA(n, t) {
  n & 1 && (h(0, "span", 98), f(1, "*"), u());
}
function AA(n, t) {
  n & 1 && (h(0, "span"), f(1, " VIN is required. "), u());
}
function RA(n, t) {
  if ((n & 1 && (h(0, "div", 98), F(1, AA, 2, 0, "span", 34), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("VIN")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function FA(n, t) {
  if (n & 1) {
    let e = ce();
    Qe(0),
      h(1, "button", 99),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.onUpdate());
      }),
      f(2, " Edit "),
      u(),
      Xe();
  }
  if (n & 2) {
    let e = E(2);
    g(),
      M("disabled", !e.isVehicleNameChanged())(
        "ngClass",
        Jn(2, uA, !e.isVehicleNameChanged(), e.isVehicleNameChanged())
      );
  }
}
function NA(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 61),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.onSave());
      }),
      f(1, " Save "),
      u();
  }
  if (n & 2) {
    let e = E(2);
    de("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function LA(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 63)(1, "div", 64)(2, "div", 65)(3, "div", 56)(4, "div", 57)(
      5,
      "h5",
      66
    ),
      f(6),
      u(),
      h(7, "button", 67),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeModal());
      }),
      h(8, "span", 68),
      f(9, "\xD7"),
      u()()(),
      h(10, "div", 69)(11, "div", 70)(12, "div", 71)(13, "label", 72),
      f(14, " Vehicle Name "),
      F(15, gA, 2, 0, "span", 73),
      u(),
      W(16, "input", 74),
      F(17, _A, 3, 0, "div", 75),
      u(),
      h(18, "div", 76)(19, "label", 77),
      f(20, " YOM "),
      F(21, bA, 2, 0, "span", 75),
      u(),
      W(22, "input", 78),
      F(23, yA, 2, 1, "div", 75),
      u()(),
      h(24, "div", 70)(25, "div", 71)(26, "label", 79),
      f(27, " Type "),
      F(28, xA, 2, 0, "span", 73),
      u(),
      h(29, "select", 80)(30, "option", 81),
      f(31, "Select Type"),
      u(),
      h(32, "option", 82),
      f(33, "Petrol"),
      u(),
      h(34, "option", 83),
      f(35, "Diesel"),
      u(),
      h(36, "option", 84),
      f(37, "EV"),
      u()(),
      F(38, CA, 3, 0, "div", 75),
      u(),
      h(39, "div", 71)(40, "label", 85),
      f(41, " Chasis Number "),
      F(42, wA, 2, 0, "span", 75),
      u(),
      W(43, "input", 86),
      F(44, SA, 2, 1, "div", 75),
      u(),
      h(45, "div", 87)(46, "div", 71)(47, "label", 88),
      f(48, " Start date "),
      F(49, MA, 2, 0, "span", 75),
      u(),
      W(50, "input", 89),
      F(51, EA, 2, 1, "div", 75),
      u()(),
      h(52, "div", 90)(53, "label", 91),
      f(54, " End date "),
      F(55, kA, 2, 0, "span", 75),
      u(),
      W(56, "input", 92),
      F(57, OA, 2, 1, "div", 75),
      u(),
      h(58, "div", 93)(59, "label", 94),
      f(60, " VIN "),
      F(61, PA, 2, 0, "span", 75),
      u(),
      W(62, "input", 95),
      F(63, RA, 2, 1, "div", 75),
      u()()(),
      h(64, "div", 60),
      F(65, FA, 3, 5, "ng-container", 96),
      h(66, "button", 62),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeModal());
      }),
      f(67, " Close "),
      u(),
      F(68, NA, 2, 1, "ng-template", null, 0, ei),
      u()()()()();
  }
  if (n & 2) {
    let e,
      i,
      r,
      o,
      a,
      s,
      l,
      d,
      m,
      v,
      x,
      C,
      S,
      T,
      k = At(69),
      P = E();
    g(6),
      ae(
        " ",
        P.vehicleObj.vehicle_id ? "Edit Vehicle" : "Add New Vehicle",
        " "
      ),
      g(4),
      M("formGroup", P.useForm),
      g(5),
      M("ngIf", !P.isEditMode),
      g(),
      M(
        "ngClass",
        xe(
          25,
          Go,
          !P.isEditMode &&
            ((e = P.useForm.get("vehicle_name")) == null ? null : e.touched) &&
            ((e = P.useForm.get("vehicle_name")) == null ? null : e.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        !P.isEditMode &&
          ((i = P.useForm.get("vehicle_name")) == null ? null : i.touched) &&
          ((i = P.useForm.get("vehicle_name")) == null ? null : i.invalid)
      ),
      g(4),
      M("ngIf", !P.isEditMode),
      g(),
      M(
        "ngClass",
        xe(
          27,
          Go,
          !P.isEditMode &&
            ((r = P.useForm.get("YOM")) == null ? null : r.touched) &&
            ((r = P.useForm.get("YOM")) == null ? null : r.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        !P.isEditMode &&
          ((o = P.useForm.get("YOM")) == null ? null : o.touched) &&
          ((o = P.useForm.get("YOM")) == null ? null : o.invalid)
      ),
      g(5),
      M("ngIf", !P.isEditMode),
      g(),
      M(
        "ngClass",
        xe(
          29,
          Go,
          !P.isEditMode &&
            ((a = P.useForm.get("type")) == null ? null : a.touched) &&
            ((a = P.useForm.get("type")) == null ? null : a.invalid)
        )
      ),
      g(9),
      M(
        "ngIf",
        !P.isEditMode &&
          ((s = P.useForm.get("type")) == null ? null : s.touched) &&
          ((s = P.useForm.get("type")) == null ? null : s.invalid)
      ),
      g(4),
      M("ngIf", !P.isEditMode),
      g(),
      M(
        "ngClass",
        xe(
          31,
          Go,
          !P.isEditMode &&
            ((l = P.useForm.get("chasis_number")) == null ? null : l.touched) &&
            ((l = P.useForm.get("chasis_number")) == null ? null : l.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        !P.isEditMode &&
          ((d = P.useForm.get("chasis_number")) == null ? null : d.touched) &&
          ((d = P.useForm.get("chasis_number")) == null ? null : d.invalid)
      ),
      g(5),
      M("ngIf", !P.isEditMode),
      g(),
      M(
        "ngClass",
        xe(
          33,
          Go,
          !P.isEditMode &&
            ((m = P.useForm.get("demo_start_date")) == null
              ? null
              : m.touched) &&
            ((m = P.useForm.get("demo_start_date")) == null ? null : m.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        !P.isEditMode &&
          ((v = P.useForm.get("demo_start_date")) == null ? null : v.touched) &&
          ((v = P.useForm.get("demo_start_date")) == null ? null : v.invalid)
      ),
      g(4),
      M("ngIf", !P.isEditMode),
      g(),
      M(
        "ngClass",
        xe(
          35,
          Go,
          !P.isEditMode &&
            ((x = P.useForm.get("demo_end_date")) == null ? null : x.touched) &&
            ((x = P.useForm.get("demo_end_date")) == null ? null : x.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        !P.isEditMode &&
          ((C = P.useForm.get("demo_end_date")) == null ? null : C.touched) &&
          ((C = P.useForm.get("demo_end_date")) == null ? null : C.invalid)
      ),
      g(4),
      M("ngIf", !P.isEditMode),
      g(),
      M(
        "ngClass",
        xe(
          37,
          Go,
          !P.isEditMode &&
            ((S = P.useForm.get("VIN")) == null ? null : S.touched) &&
            ((S = P.useForm.get("VIN")) == null ? null : S.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        !P.isEditMode &&
          ((T = P.useForm.get("VIN")) == null ? null : T.touched) &&
          ((T = P.useForm.get("VIN")) == null ? null : T.invalid)
      ),
      g(2),
      M(
        "ngIf",
        P.vehicleObj.vehicle_id !== null && P.vehicleObj.vehicle_id !== void 0
      )("ngIfElse", k);
  }
}
var Cu = class n {
  constructor(t) {
    this.changeDetectorRef = t;
    this.initializeForm();
  }
  count = fe(0);
  vehicleList = fe([]);
  totalVehicle = fe(0);
  vehicles = [];
  paginatedVehicles = [];
  masterSrv = G(Ze);
  toastr = G(ki);
  modalService = G(Ol);
  vehicleObj = new Pl();
  isModalVisible = !1;
  isEditMode = !1;
  previousValue = "";
  isModalOpen = !1;
  filteredVehicle = [];
  searchTerm = "";
  filteredVehicles = [];
  currentPage = 1;
  itemsPerPage = 10;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  useForm = new Rt({});
  ngOnInit() {
    this.loadVehicles(),
      (this.filteredVehicles = this.vehicleList()),
      this.paginateVehicles(),
      this.filterVehicles();
  }
  initializeForm() {
    this.useForm = new Rt({
      vehicle_name: new st("", [
        Ne.required,
        Ne.minLength(2),
        Ne.maxLength(50),
      ]),
      VIN: new st("", [Ne.required]),
      type: new st("", [Ne.required]),
      YOM: new st("", [Ne.required]),
      chasis_number: new st("", [Ne.required]),
      demo_start_date: new st("", [Ne.required]),
      demo_end_date: new st("", [Ne.required]),
    });
  }
  loadVehicles() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (t) => {
        this.count.set(t.data.count),
          (this.vehicles = t.data.rows),
          this.vehicleList.set(this.vehicles),
          (this.filteredVehicles = [...this.vehicles]),
          (this.currentPage = 1),
          this.paginateVehicles();
      },
      error: (t) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", t);
      },
    });
  }
  openModal(t) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!t),
      console.log("hello"),
      t
        ? ((this.vehicleObj = Q({}, t)),
          this.useForm.patchValue({
            vehicle_name: t.vehicle_name || "",
            VIN: t.VIN || "",
            type: t.type || "",
            YOM: this.formatDate(t.YOM) || "",
            demo_start_date: t.demo_start_date
              ? this.formatDate(t.demo_start_date)
              : "",
            demo_end_date: t.demo_end_date
              ? this.formatDate(t.demo_end_date)
              : "",
            chasis_number: t.chasis_number || "",
          }))
        : ((this.vehicleObj = new Pl()),
          (this.vehicleObj.vehicle_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.vehicleObj
          ));
  }
  onSave() {
    console.log("onsave being called"),
      console.log(this.useForm.value),
      console.log(
        "Form end_date value:",
        this.useForm.get("demo_end_date")?.value
      );
    let t = new Date(this.useForm.get("demo_start_date")?.value);
    if (new Date(this.useForm.get("demo_end_date")?.value) < t) {
      this.toastr.error(
        "End date cannot be before start date.",
        "Date Validation"
      );
      return;
    }
    if (this.useForm.invalid) {
      this.markFormGroupTouched(this.useForm),
        console.log("Form Values:", this.useForm.value),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let i = this.useForm.value;
    console.log("Form Data being sent to API:", i),
      this.masterSrv.createNewVehicle(i).subscribe({
        next: () => {
          this.toastr.success("Vehicle created successfully!", "Success"),
            this.getAllVehicle(),
            this.closeModal();
        },
        error: (r) => {
          console.error("Vehicle creation error:", r);
          let o = r.error?.message || "Failed to create vehicle";
          this.toastr.error(o, "Creation Error");
        },
      });
  }
  getAllVehicle() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (t) => {
        t && t.data.rows
          ? (this.totalVehicle.set(t.data.count),
            this.vehicleList.set(t.data.rows),
            (this.paginatedVehicles = this.vehicleList().slice(
              (this.currentPage - 1) * this.itemsPerPage,
              this.currentPage * this.itemsPerPage
            )))
          : this.toastr.warning("No Vehicle found", "Information");
      },
      error: (t) => {
        console.error("Vehicle fetch error:", t),
          this.toastr.error(t.message || "Failed to fetch vehicles", "Error");
      },
    });
  }
  getShowingFrom() {
    return this.filteredVehicles.length === 0
      ? 0
      : (this.currentPage - 1) * this.itemsPerPage + 1;
  }
  getShowingTo() {
    return this.filteredVehicles.length === 0
      ? 0
      : Math.min(
          this.currentPage * this.itemsPerPage,
          this.filteredVehicles.length
        );
  }
  onUpdate() {
    if (!this.vehicleObj || !this.vehicleObj.vehicle_id) {
      this.toastr.warning("No vehicle selected for update!", "Warning");
      return;
    }
    (this.vehicleObj = Q(Q({}, this.vehicleObj), this.useForm.value)),
      console.log("Updating vehicle:", this.vehicleObj),
      this.masterSrv.updateVehicle(this.vehicleObj).subscribe(
        (t) => {
          t && t.status === 200
            ? (this.toastr.success(
                t.message || "Vehicle updated successfully",
                "Success"
              ),
              this.loadVehicles(),
              this.closeModal())
            : this.toastr.warning("Update failed, check data.", "Warning");
        },
        (t) => {
          this.toastr.error("Error updating vehicle", "Error");
        }
      );
  }
  getAllVehicles() {}
  onSearchChange() {
    (this.currentPage = 1), this.filterVehicles();
  }
  onItemsPerPageChange(t) {
    (this.itemsPerPage = +t.target.value),
      (this.currentPage = 1),
      this.paginateVehicles();
  }
  displayAllVehicles() {
    (this.filteredVehicles = this.vehicleList()), this.paginateVehicles();
  }
  filterVehicles() {
    let t = this.vehicleList();
    if (
      (console.log("\u{1F50D} Raw vehicle list:", t),
      console.log("\u{1F50E} Current search term:", this.searchTerm),
      !this.searchTerm || this.searchTerm.trim() === "")
    )
      console.log("\u{1F4C4} Empty search term. Showing full list."),
        (this.filteredVehicles = t);
    else {
      let e = this.searchTerm.trim().toLowerCase();
      console.log("\u{1F50D} Normalized search term:", e),
        (this.filteredVehicles = t.filter((i) => {
          let r =
            i.vehicle_name?.toLowerCase().includes(e) ||
            i.VIN?.toLowerCase().includes(e) ||
            i.chasis_number?.toLowerCase().includes(e) ||
            i.type?.toLowerCase().includes(e);
          return (
            console.log("\u{1F697} Checking vehicle:", i, "=> Match:", r), r
          );
        })),
        console.log("\u2705 Filtered vehicles:", this.filteredVehicles);
    }
    (this.currentPage = 1), this.paginateVehicles();
  }
  paginateVehicles() {
    (this.totalPages = Math.ceil(
      this.filteredVehicles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (t, e) => e + 1)),
      this.updatePaginatedVehicles();
  }
  updatePaginatedVehicles() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    this.paginatedVehicles = this.filteredVehicles.slice(t, e);
  }
  goToPage(t) {
    (this.currentPage = t), this.updatePaginatedVehicles();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updatePaginatedVehicles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updatePaginatedVehicles());
  }
  selectedVehicleForDeletion = null;
  selectVehicleForDeletion(t) {
    (this.selectedVehicleForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  openDeleteModal(t) {
    (this.selectedVehicleForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  deleteVehicleId() {
    let t = this.selectedVehicleForDeletion;
    if (t && t.vehicle_id) {
      let e = t.vehicle_id;
      this.masterSrv.deleteVehicle(e).subscribe(
        (i) => {
          this.toastr.success("Vehicle deleted successfully", "Success"),
            (this.isDeleteModalOpen = !1);
          let r = this.vehicleList().filter((o) => o.vehicle_id !== e);
          this.vehicleList.set(r),
            (this.filteredVehicles = [...r]),
            this.paginateVehicles();
        },
        (i) => {
          this.toastr.error("Server Error", "Error");
        }
      );
    } else alert("No Vehicle selected for deletion");
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  formatDateForInput(t) {
    if (!t) return "";
    let e = new Date(t);
    return isNaN(e.getTime()) ? "" : e.toISOString().split("T")[0];
  }
  onEdit(t) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", t?.vehicle_id),
      (this.vehicleObj = Q({}, t)),
      (this.previousValue = t.vehicle_name),
      this.useForm.patchValue({
        vehicle_name: t.vehicle_name,
        VIN: t.VIN,
        type: t.type,
        YOM: this.formatDate(t.YOM),
        chasis_number: t.chasis_number,
        demo_start_date: t.demo_start_date,
        demo_end_date: t.demo_end_date,
      }),
      console.log(
        "vehicleobj.vehicle_id after setting:",
        this.vehicleObj?.vehicle_id
      );
  }
  isVehicleNameChanged() {
    return this.useForm.dirty && this.useForm.value.name !== this.previousValue;
  }
  markFormGroupTouched(t) {
    Object.values(t.controls).forEach((e) => {
      e.markAsTouched(), e instanceof Rt && this.markFormGroupTouched(e);
    });
  }
  formatDate(t) {
    return t ? new Date(t).toISOString().split("T")[0] : "";
  }
  isFieldInvalid(t) {
    let e = this.useForm.get(t);
    return !!(e && e.invalid && (e.dirty || e.touched));
  }
  isVehicleName() {
    return this.useForm.value.vehicle_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || n)(H(et));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-vehicle"]],
    standalone: !0,
    features: [ue],
    decls: 82,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", "mt-10"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search Vehicles...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "9", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
      ],
      [1, "modal-dialog", "modal-lg"],
      [
        1,
        "modal-title",
        2,
        "align-items",
        "center",
        "margin-inline",
        "auto",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      [
        "for",
        "vehicle_name",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      ["style", "color: red;", 4, "ngIf"],
      [
        "id",
        "vehicle_name",
        "type",
        "text",
        "placeholder",
        "Vehicle Name",
        "formControlName",
        "vehicle_name",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "form-group", "col-md-6"],
      [
        "for",
        "YOM",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "YOM",
        "type",
        "date",
        "formControlName",
        "YOM",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [
        "for",
        "typeSelect",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "typeSelect",
        "formControlName",
        "type",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "pointer",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "petrol"],
      ["value", "diesel"],
      ["value", "EV"],
      [
        "for",
        "chasis_number",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "chasis_number",
        "type",
        "text",
        "placeholder",
        "Enter Chassis Number",
        "formControlName",
        "chasis_number",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "row", 2, "margin-left", "-3px !important"],
      [
        "for",
        "demo_start_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "demo_start_date",
        "type",
        "date",
        "placeholder",
        "start date",
        "formControlName",
        "demo_start_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "17px"],
      [
        "for",
        "demo_end_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
        "margin-left",
        "-2px",
      ],
      [
        "id",
        "demo_end_date",
        "type",
        "date",
        "placeholder",
        "end date",
        "formControlName",
        "demo_end_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "5px"],
      [
        "for",
        "vin",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "vin",
        "type",
        "text",
        "placeholder",
        "VIN",
        "formControlName",
        "VIN",
        1,
        "form-control",
        "form-control-lg",
        2,
        "margin-left",
        "-5px",
        3,
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [2, "color", "red"],
      [1, "text-danger"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        3,
        "click",
        "disabled",
        "ngClass",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        f(6, "Transaction"),
        u()(),
        h(7, "li", 7)(8, "a", 8),
        f(9, "Vehicle Master"),
        u()()()(),
        h(10, "div", 9)(11, "div", 10)(12, "a", 11),
        U("click", function () {
          return i.openModal();
        }),
        W(13, "i", 12),
        f(14, "Add Vehicle "),
        u()(),
        h(15, "div", 13)(16, "div", 14)(17, "p", 15),
        f(18, "Total Vehicle"),
        u(),
        h(19, "h3", 16),
        f(20),
        u()()()(),
        h(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        W(26, "label", 22),
        h(27, "select", 23),
        U("change", function (o) {
          return i.onItemsPerPageChange(o);
        }),
        h(28, "option", 24),
        f(29, "10"),
        u(),
        h(30, "option", 25),
        f(31, "25"),
        u(),
        h(32, "option", 26),
        f(33, "50"),
        u(),
        h(34, "option", 27),
        f(35, "100"),
        u()(),
        h(36, "label", 28),
        f(37, "records per page"),
        u()(),
        h(38, "div", 29)(39, "div", 30)(40, "input", 31),
        Wt("ngModelChange", function (o) {
          return $t(i.searchTerm, o) || (i.searchTerm = o), o;
        }),
        U("input", function () {
          return i.onSearchChange();
        }),
        u()()()(),
        h(41, "div", 32)(42, "table", 33)(43, "thead")(44, "tr")(45, "th"),
        f(46, "Sr No"),
        u(),
        h(47, "th"),
        f(48, "Vehicle Name"),
        u(),
        h(49, "th"),
        f(50, "YOM"),
        u(),
        h(51, "th"),
        f(52, "Type"),
        u(),
        h(53, "th"),
        f(54, "VIN"),
        u(),
        h(55, "th"),
        f(56, "Chasis number"),
        u(),
        h(57, "th"),
        f(58, "Demo start date"),
        u(),
        h(59, "th"),
        f(60, "Demo end date"),
        u(),
        h(61, "th"),
        f(62, "Action"),
        u()()(),
        h(63, "tbody"),
        F(64, hA, 4, 0, "tr", 34)(65, pA, 23, 8, "tr", 35),
        u()()(),
        h(66, "div", 36)(67, "div", 37)(68, "div", 38),
        f(69),
        u()(),
        h(70, "div", 37)(71, "div", 39)(72, "ul", 40)(73, "li", 41)(
          74,
          "a",
          42
        ),
        U("click", function () {
          return i.previousPage();
        }),
        f(75, "Previous"),
        u()(),
        F(76, mA, 3, 3, "li", 43),
        h(77, "li", 44)(78, "a", 42),
        U("click", function () {
          return i.nextPage();
        }),
        f(79, "Next"),
        u()()()()()()()()()(),
        F(80, fA, 13, 0, "div", 45)(81, LA, 70, 39, "div", 46),
        u()),
        e & 2 &&
          (g(20),
          ae(" ", i.count(), " "),
          g(20),
          zt("ngModel", i.searchTerm),
          g(24),
          M("ngIf", i.paginatedVehicles.length === 0),
          g(),
          M("ngForOf", i.paginatedVehicles),
          g(4),
          Hi(
            " Showing ",
            i.getShowingFrom(),
            " to ",
            i.getShowingTo(),
            " of ",
            i.filteredVehicles.length,
            " entries "
          ),
          g(4),
          Te("disabled", i.currentPage === 1),
          g(3),
          M("ngForOf", i.pages),
          g(),
          Te("disabled", i.currentPage === i.totalPages),
          g(3),
          M("ngIf", i.isDeleteModalOpen),
          g(),
          M("ngIf", i.isModalOpen));
    },
    dependencies: [
      Fe,
      Gt,
      ti,
      rt,
      Gi,
      $i,
      Wi,
      fi,
      ir,
      Ti,
      zi,
      an,
      Ga,
      ht,
      xu,
      Wo,
      bu,
      _u,
      vn,
      sn,
      ln,
      Cx,
      cr,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}input[type=text][_ngcontent-%COMP%]::-ms-clear, input[type=text][_ngcontent-%COMP%]::-ms-reveal, input[type=text][_ngcontent-%COMP%]::-webkit-clear-button, input[type=text][_ngcontent-%COMP%]::-webkit-search-cancel-button{display:none;-webkit-appearance:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}",
    ],
  });
};
var jl = class {
  account_id;
  account_type;
  salutation;
  fname;
  lname;
  language;
  employment_status;
  lead_source;
  gender;
  industry;
  occupation;
  cust_journey_stage;
  national_id;
  phone;
  mobile;
  billing_street;
  billing_city;
  billing_state;
  billing_zip_code;
  billing_country;
  account_name;
  parent_account;
  company_fleet_size;
  website;
  account_owner;
  corporate_program_code;
  type;
  annual_revenue;
  email;
  household_income;
  birthdate;
  dealer_code;
  marital_status;
  children;
  no_of_people;
  dealer_id;
  constructor() {
    (this.dealer_code = 0),
      (this.dealer_id = ""),
      (this.account_id = ""),
      (this.account_type = ""),
      (this.salutation = null),
      (this.fname = ""),
      (this.lname = ""),
      (this.language = null),
      (this.employment_status = null),
      (this.lead_source = null),
      (this.gender = null),
      (this.industry = null),
      (this.occupation = null),
      (this.cust_journey_stage = null),
      (this.national_id = null),
      (this.phone = void 0),
      (this.mobile = void 0),
      (this.billing_street = null),
      (this.billing_city = null),
      (this.billing_state = null),
      (this.billing_zip_code = null),
      (this.billing_country = null),
      (this.account_name = ""),
      (this.parent_account = null),
      (this.company_fleet_size = null),
      (this.website = null),
      (this.account_owner = null),
      (this.corporate_program_code = null),
      (this.type = null),
      (this.annual_revenue = null),
      (this.email = ""),
      (this.household_income = null),
      (this.birthdate = null),
      (this.marital_status = null),
      (this.children = null),
      (this.no_of_people = null);
  }
};
var un = class n {
    static isArray(t, e = !0) {
      return Array.isArray(t) && (e || t.length !== 0);
    }
    static isObject(t, e = !0) {
      return (
        typeof t == "object" &&
        !Array.isArray(t) &&
        t != null &&
        (e || Object.keys(t).length !== 0)
      );
    }
    static equals(t, e, i) {
      return i
        ? this.resolveFieldData(t, i) === this.resolveFieldData(e, i)
        : this.equalsByValue(t, e);
    }
    static equalsByValue(t, e) {
      if (t === e) return !0;
      if (t && e && typeof t == "object" && typeof e == "object") {
        var i = Array.isArray(t),
          r = Array.isArray(e),
          o,
          a,
          s;
        if (i && r) {
          if (((a = t.length), a != e.length)) return !1;
          for (o = a; o-- !== 0; )
            if (!this.equalsByValue(t[o], e[o])) return !1;
          return !0;
        }
        if (i != r) return !1;
        var l = this.isDate(t),
          d = this.isDate(e);
        if (l != d) return !1;
        if (l && d) return t.getTime() == e.getTime();
        var m = t instanceof RegExp,
          v = e instanceof RegExp;
        if (m != v) return !1;
        if (m && v) return t.toString() == e.toString();
        var x = Object.keys(t);
        if (((a = x.length), a !== Object.keys(e).length)) return !1;
        for (o = a; o-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, x[o])) return !1;
        for (o = a; o-- !== 0; )
          if (((s = x[o]), !this.equalsByValue(t[s], e[s]))) return !1;
        return !0;
      }
      return t !== t && e !== e;
    }
    static resolveFieldData(t, e) {
      if (t && e) {
        if (this.isFunction(e)) return e(t);
        if (e.indexOf(".") == -1) return t[e];
        {
          let i = e.split("."),
            r = t;
          for (let o = 0, a = i.length; o < a; ++o) {
            if (r == null) return null;
            r = r[i[o]];
          }
          return r;
        }
      } else return null;
    }
    static isFunction(t) {
      return !!(t && t.constructor && t.call && t.apply);
    }
    static reorderArray(t, e, i) {
      let r;
      t &&
        e !== i &&
        (i >= t.length && ((i %= t.length), (e %= t.length)),
        t.splice(i, 0, t.splice(e, 1)[0]));
    }
    static insertIntoOrderedArray(t, e, i, r) {
      if (i.length > 0) {
        let o = !1;
        for (let a = 0; a < i.length; a++)
          if (this.findIndexInList(i[a], r) > e) {
            i.splice(a, 0, t), (o = !0);
            break;
          }
        o || i.push(t);
      } else i.push(t);
    }
    static findIndexInList(t, e) {
      let i = -1;
      if (e) {
        for (let r = 0; r < e.length; r++)
          if (e[r] == t) {
            i = r;
            break;
          }
      }
      return i;
    }
    static contains(t, e) {
      if (t != null && e && e.length) {
        for (let i of e) if (this.equals(t, i)) return !0;
      }
      return !1;
    }
    static removeAccents(t) {
      return (
        t &&
          (t = t
            .normalize("NFKD")
            .replace(new RegExp("\\p{Diacritic}", "gu"), "")),
        t
      );
    }
    static isDate(t) {
      return Object.prototype.toString.call(t) === "[object Date]";
    }
    static isEmpty(t) {
      return (
        t == null ||
        t === "" ||
        (Array.isArray(t) && t.length === 0) ||
        (!this.isDate(t) && typeof t == "object" && Object.keys(t).length === 0)
      );
    }
    static isNotEmpty(t) {
      return !this.isEmpty(t);
    }
    static compare(t, e, i, r = 1) {
      let o = -1,
        a = this.isEmpty(t),
        s = this.isEmpty(e);
      return (
        a && s
          ? (o = 0)
          : a
          ? (o = r)
          : s
          ? (o = -r)
          : typeof t == "string" && typeof e == "string"
          ? (o = t.localeCompare(e, i, { numeric: !0 }))
          : (o = t < e ? -1 : t > e ? 1 : 0),
        o
      );
    }
    static sort(t, e, i = 1, r, o = 1) {
      let a = n.compare(t, e, r, i),
        s = i;
      return (n.isEmpty(t) || n.isEmpty(e)) && (s = o === 1 ? i : o), s * a;
    }
    static merge(t, e) {
      if (!(t == null && e == null)) {
        {
          if (
            (t == null || typeof t == "object") &&
            (e == null || typeof e == "object")
          )
            return Q(Q({}, t || {}), e || {});
          if (
            (t == null || typeof t == "string") &&
            (e == null || typeof e == "string")
          )
            return [t || "", e || ""].join(" ");
        }
        return e || t;
      }
    }
    static isPrintableCharacter(t = "") {
      return this.isNotEmpty(t) && t.length === 1 && t.match(/\S| /);
    }
    static getItemValue(t, ...e) {
      return this.isFunction(t) ? t(...e) : t;
    }
    static findLastIndex(t, e) {
      let i = -1;
      if (this.isNotEmpty(t))
        try {
          i = t.findLastIndex(e);
        } catch {
          i = t.lastIndexOf([...t].reverse().find(e));
        }
      return i;
    }
    static findLast(t, e) {
      let i;
      if (this.isNotEmpty(t))
        try {
          i = t.findLast(e);
        } catch {
          i = [...t].reverse().find(e);
        }
      return i;
    }
    static deepEquals(t, e) {
      if (t === e) return !0;
      if (t && e && typeof t == "object" && typeof e == "object") {
        var i = Array.isArray(t),
          r = Array.isArray(e),
          o,
          a,
          s;
        if (i && r) {
          if (((a = t.length), a != e.length)) return !1;
          for (o = a; o-- !== 0; ) if (!this.deepEquals(t[o], e[o])) return !1;
          return !0;
        }
        if (i != r) return !1;
        var l = t instanceof Date,
          d = e instanceof Date;
        if (l != d) return !1;
        if (l && d) return t.getTime() == e.getTime();
        var m = t instanceof RegExp,
          v = e instanceof RegExp;
        if (m != v) return !1;
        if (m && v) return t.toString() == e.toString();
        var x = Object.keys(t);
        if (((a = x.length), a !== Object.keys(e).length)) return !1;
        for (o = a; o-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, x[o])) return !1;
        for (o = a; o-- !== 0; )
          if (((s = x[o]), !this.deepEquals(t[s], e[s]))) return !1;
        return !0;
      }
      return t !== t && e !== e;
    }
  },
  wx = 0;
function is(n = "pn_id_") {
  return wx++, `${n}${wx}`;
}
function VA() {
  let n = [],
    t = (o, a) => {
      let s = n.length > 0 ? n[n.length - 1] : { key: o, value: a },
        l = s.value + (s.key === o ? 0 : a) + 2;
      return n.push({ key: o, value: l }), l;
    },
    e = (o) => {
      n = n.filter((a) => a.value !== o);
    },
    i = () => (n.length > 0 ? n[n.length - 1].value : 0),
    r = (o) => (o && parseInt(o.style.zIndex, 10)) || 0;
  return {
    get: r,
    set: (o, a, s) => {
      a && (a.style.zIndex = String(t(o, s)));
    },
    clear: (o) => {
      o && (e(r(o)), (o.style.zIndex = ""));
    },
    getCurrent: () => i(),
  };
}
var Ul = VA();
var Ii = (() => {
  class n {
    static STARTS_WITH = "startsWith";
    static CONTAINS = "contains";
    static NOT_CONTAINS = "notContains";
    static ENDS_WITH = "endsWith";
    static EQUALS = "equals";
    static NOT_EQUALS = "notEquals";
    static IN = "in";
    static LESS_THAN = "lt";
    static LESS_THAN_OR_EQUAL_TO = "lte";
    static GREATER_THAN = "gt";
    static GREATER_THAN_OR_EQUAL_TO = "gte";
    static BETWEEN = "between";
    static IS = "is";
    static IS_NOT = "isNot";
    static BEFORE = "before";
    static AFTER = "after";
    static DATE_IS = "dateIs";
    static DATE_IS_NOT = "dateIsNot";
    static DATE_BEFORE = "dateBefore";
    static DATE_AFTER = "dateAfter";
  }
  return n;
})();
var Dx = (() => {
  class n {
    clickSource = new Ie();
    clickObservable = this.clickSource.asObservable();
    add(e) {
      e && this.clickSource.next(e);
    }
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
  }
  return n;
})();
var wu = (() => {
  class n {
    ripple = !1;
    inputStyle = fe("outlined");
    overlayOptions = {};
    csp = fe({ nonce: void 0 });
    filterMatchModeOptions = {
      text: [
        Ii.STARTS_WITH,
        Ii.CONTAINS,
        Ii.NOT_CONTAINS,
        Ii.ENDS_WITH,
        Ii.EQUALS,
        Ii.NOT_EQUALS,
      ],
      numeric: [
        Ii.EQUALS,
        Ii.NOT_EQUALS,
        Ii.LESS_THAN,
        Ii.LESS_THAN_OR_EQUAL_TO,
        Ii.GREATER_THAN,
        Ii.GREATER_THAN_OR_EQUAL_TO,
      ],
      date: [Ii.DATE_IS, Ii.DATE_IS_NOT, Ii.DATE_BEFORE, Ii.DATE_AFTER],
    };
    translation = {
      startsWith: "Starts with",
      contains: "Contains",
      notContains: "Not contains",
      endsWith: "Ends with",
      equals: "Equals",
      notEquals: "Not equals",
      noFilter: "No Filter",
      lt: "Less than",
      lte: "Less than or equal to",
      gt: "Greater than",
      gte: "Greater than or equal to",
      is: "Is",
      isNot: "Is not",
      before: "Before",
      after: "After",
      dateIs: "Date is",
      dateIsNot: "Date is not",
      dateBefore: "Date is before",
      dateAfter: "Date is after",
      clear: "Clear",
      apply: "Apply",
      matchAll: "Match All",
      matchAny: "Match Any",
      addRule: "Add Rule",
      removeRule: "Remove Rule",
      accept: "Yes",
      reject: "No",
      choose: "Choose",
      upload: "Upload",
      cancel: "Cancel",
      pending: "Pending",
      fileSizeTypes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
      dayNames: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ],
      dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      monthNames: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ],
      monthNamesShort: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec",
      ],
      chooseYear: "Choose Year",
      chooseMonth: "Choose Month",
      chooseDate: "Choose Date",
      prevDecade: "Previous Decade",
      nextDecade: "Next Decade",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      prevHour: "Previous Hour",
      nextHour: "Next Hour",
      prevMinute: "Previous Minute",
      nextMinute: "Next Minute",
      prevSecond: "Previous Second",
      nextSecond: "Next Second",
      am: "am",
      pm: "pm",
      dateFormat: "mm/dd/yy",
      firstDayOfWeek: 0,
      today: "Today",
      weekHeader: "Wk",
      weak: "Weak",
      medium: "Medium",
      strong: "Strong",
      passwordPrompt: "Enter a password",
      emptyMessage: "No results found",
      searchMessage: "{0} results are available",
      selectionMessage: "{0} items selected",
      emptySelectionMessage: "No selected item",
      emptySearchMessage: "No results found",
      emptyFilterMessage: "No results found",
      aria: {
        trueLabel: "True",
        falseLabel: "False",
        nullLabel: "Not Selected",
        star: "1 star",
        stars: "{star} stars",
        selectAll: "All items selected",
        unselectAll: "All items unselected",
        close: "Close",
        previous: "Previous",
        next: "Next",
        navigation: "Navigation",
        scrollTop: "Scroll Top",
        moveTop: "Move Top",
        moveUp: "Move Up",
        moveDown: "Move Down",
        moveBottom: "Move Bottom",
        moveToTarget: "Move to Target",
        moveToSource: "Move to Source",
        moveAllToTarget: "Move All to Target",
        moveAllToSource: "Move All to Source",
        pageLabel: "{page}",
        firstPageLabel: "First Page",
        lastPageLabel: "Last Page",
        nextPageLabel: "Next Page",
        prevPageLabel: "Previous Page",
        rowsPerPageLabel: "Rows per page",
        previousPageLabel: "Previous Page",
        jumpToPageDropdownLabel: "Jump to Page Dropdown",
        jumpToPageInputLabel: "Jump to Page Input",
        selectRow: "Row Selected",
        unselectRow: "Row Unselected",
        expandRow: "Row Expanded",
        collapseRow: "Row Collapsed",
        showFilterMenu: "Show Filter Menu",
        hideFilterMenu: "Hide Filter Menu",
        filterOperator: "Filter Operator",
        filterConstraint: "Filter Constraint",
        editRow: "Row Edit",
        saveEdit: "Save Edit",
        cancelEdit: "Cancel Edit",
        listView: "List View",
        gridView: "Grid View",
        slide: "Slide",
        slideNumber: "{slideNumber}",
        zoomImage: "Zoom Image",
        zoomIn: "Zoom In",
        zoomOut: "Zoom Out",
        rotateRight: "Rotate Right",
        rotateLeft: "Rotate Left",
        listLabel: "Option List",
        selectColor: "Select a color",
        removeLabel: "Remove",
        browseFiles: "Browse Files",
        maximizeLabel: "Maximize",
      },
    };
    zIndex = { modal: 1100, overlay: 1e3, menu: 1e3, tooltip: 1100 };
    translationSource = new Ie();
    translationObserver = this.translationSource.asObservable();
    getTranslation(e) {
      return this.translation[e];
    }
    setTranslation(e) {
      (this.translation = Q(Q({}, this.translation), e)),
        this.translationSource.next(this.translation);
    }
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
  }
  return n;
})();
var zl = (() => {
    class n {
      template;
      type;
      name;
      constructor(e) {
        this.template = e;
      }
      getType() {
        return this.name;
      }
      static ɵfac = function (i) {
        return new (i || n)(H(Zn));
      };
      static ɵdir = Ae({
        type: n,
        selectors: [["", "pTemplate", ""]],
        inputs: { type: "type", name: [0, "pTemplate", "name"] },
        standalone: !0,
      });
    }
    return n;
  })(),
  Ln = (() => {
    class n {
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = we({ type: n });
      static ɵinj = Ce({});
    }
    return n;
  })(),
  Vn = (() => {
    class n {
      static STARTS_WITH = "startsWith";
      static CONTAINS = "contains";
      static NOT_CONTAINS = "notContains";
      static ENDS_WITH = "endsWith";
      static EQUALS = "equals";
      static NOT_EQUALS = "notEquals";
      static NO_FILTER = "noFilter";
      static LT = "lt";
      static LTE = "lte";
      static GT = "gt";
      static GTE = "gte";
      static IS = "is";
      static IS_NOT = "isNot";
      static BEFORE = "before";
      static AFTER = "after";
      static CLEAR = "clear";
      static APPLY = "apply";
      static MATCH_ALL = "matchAll";
      static MATCH_ANY = "matchAny";
      static ADD_RULE = "addRule";
      static REMOVE_RULE = "removeRule";
      static ACCEPT = "accept";
      static REJECT = "reject";
      static CHOOSE = "choose";
      static UPLOAD = "upload";
      static CANCEL = "cancel";
      static PENDING = "pending";
      static FILE_SIZE_TYPES = "fileSizeTypes";
      static DAY_NAMES = "dayNames";
      static DAY_NAMES_SHORT = "dayNamesShort";
      static DAY_NAMES_MIN = "dayNamesMin";
      static MONTH_NAMES = "monthNames";
      static MONTH_NAMES_SHORT = "monthNamesShort";
      static FIRST_DAY_OF_WEEK = "firstDayOfWeek";
      static TODAY = "today";
      static WEEK_HEADER = "weekHeader";
      static WEAK = "weak";
      static MEDIUM = "medium";
      static STRONG = "strong";
      static PASSWORD_PROMPT = "passwordPrompt";
      static EMPTY_MESSAGE = "emptyMessage";
      static EMPTY_FILTER_MESSAGE = "emptyFilterMessage";
      static SHOW_FILTER_MENU = "showFilterMenu";
      static HIDE_FILTER_MENU = "hideFilterMenu";
      static SELECTION_MESSAGE = "selectionMessage";
      static ARIA = "aria";
      static SELECT_COLOR = "selectColor";
      static BROWSE_FILES = "browseFiles";
    }
    return n;
  })();
var ge = (() => {
    class n {
      static zindex = 1e3;
      static calculatedScrollbarWidth = null;
      static calculatedScrollbarHeight = null;
      static browser;
      static addClass(e, i) {
        e && i && (e.classList ? e.classList.add(i) : (e.className += " " + i));
      }
      static addMultipleClasses(e, i) {
        if (e && i)
          if (e.classList) {
            let r = i.trim().split(" ");
            for (let o = 0; o < r.length; o++) e.classList.add(r[o]);
          } else {
            let r = i.split(" ");
            for (let o = 0; o < r.length; o++) e.className += " " + r[o];
          }
      }
      static removeClass(e, i) {
        e &&
          i &&
          (e.classList
            ? e.classList.remove(i)
            : (e.className = e.className.replace(
                new RegExp(
                  "(^|\\b)" + i.split(" ").join("|") + "(\\b|$)",
                  "gi"
                ),
                " "
              )));
      }
      static removeMultipleClasses(e, i) {
        e &&
          i &&
          [i]
            .flat()
            .filter(Boolean)
            .forEach((r) =>
              r.split(" ").forEach((o) => this.removeClass(e, o))
            );
      }
      static hasClass(e, i) {
        return e && i
          ? e.classList
            ? e.classList.contains(i)
            : new RegExp("(^| )" + i + "( |$)", "gi").test(e.className)
          : !1;
      }
      static siblings(e) {
        return Array.prototype.filter.call(e.parentNode.children, function (i) {
          return i !== e;
        });
      }
      static find(e, i) {
        return Array.from(e.querySelectorAll(i));
      }
      static findSingle(e, i) {
        return this.isElement(e) ? e.querySelector(i) : null;
      }
      static index(e) {
        let i = e.parentNode.childNodes,
          r = 0;
        for (var o = 0; o < i.length; o++) {
          if (i[o] == e) return r;
          i[o].nodeType == 1 && r++;
        }
        return -1;
      }
      static indexWithinGroup(e, i) {
        let r = e.parentNode ? e.parentNode.childNodes : [],
          o = 0;
        for (var a = 0; a < r.length; a++) {
          if (r[a] == e) return o;
          r[a].attributes && r[a].attributes[i] && r[a].nodeType == 1 && o++;
        }
        return -1;
      }
      static appendOverlay(e, i, r = "self") {
        r !== "self" && e && i && this.appendChild(e, i);
      }
      static alignOverlay(e, i, r = "self", o = !0) {
        e &&
          i &&
          (o && (e.style.minWidth = `${n.getOuterWidth(i)}px`),
          r === "self"
            ? this.relativePosition(e, i)
            : this.absolutePosition(e, i));
      }
      static relativePosition(e, i, r = !0) {
        let o = (j) => {
            if (j)
              return getComputedStyle(j).getPropertyValue("position") ===
                "relative"
                ? j
                : o(j.parentElement);
          },
          a = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          s = i.offsetHeight ?? i.getBoundingClientRect().height,
          l = i.getBoundingClientRect(),
          d = this.getWindowScrollTop(),
          m = this.getWindowScrollLeft(),
          v = this.getViewport(),
          C = o(e)?.getBoundingClientRect() || { top: -1 * d, left: -1 * m },
          S,
          T;
        l.top + s + a.height > v.height
          ? ((S = l.top - C.top - a.height),
            (e.style.transformOrigin = "bottom"),
            l.top + S < 0 && (S = -1 * l.top))
          : ((S = s + l.top - C.top), (e.style.transformOrigin = "top"));
        let k = l.left + a.width - v.width,
          P = l.left - C.left;
        a.width > v.width
          ? (T = (l.left - C.left) * -1)
          : k > 0
          ? (T = P - k)
          : (T = l.left - C.left),
          (e.style.top = S + "px"),
          (e.style.left = T + "px"),
          r &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static absolutePosition(e, i, r = !0) {
        let o = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          a = o.height,
          s = o.width,
          l = i.offsetHeight ?? i.getBoundingClientRect().height,
          d = i.offsetWidth ?? i.getBoundingClientRect().width,
          m = i.getBoundingClientRect(),
          v = this.getWindowScrollTop(),
          x = this.getWindowScrollLeft(),
          C = this.getViewport(),
          S,
          T;
        m.top + l + a > C.height
          ? ((S = m.top + v - a),
            (e.style.transformOrigin = "bottom"),
            S < 0 && (S = v))
          : ((S = l + m.top + v), (e.style.transformOrigin = "top")),
          m.left + s > C.width
            ? (T = Math.max(0, m.left + x + d - s))
            : (T = m.left + x),
          (e.style.top = S + "px"),
          (e.style.left = T + "px"),
          r &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static getParents(e, i = []) {
        return e.parentNode === null
          ? i
          : this.getParents(e.parentNode, i.concat([e.parentNode]));
      }
      static getScrollableParents(e) {
        let i = [];
        if (e) {
          let r = this.getParents(e),
            o = /(auto|scroll)/,
            a = (s) => {
              let l = window.getComputedStyle(s, null);
              return (
                o.test(l.getPropertyValue("overflow")) ||
                o.test(l.getPropertyValue("overflowX")) ||
                o.test(l.getPropertyValue("overflowY"))
              );
            };
          for (let s of r) {
            let l = s.nodeType === 1 && s.dataset.scrollselectors;
            if (l) {
              let d = l.split(",");
              for (let m of d) {
                let v = this.findSingle(s, m);
                v && a(v) && i.push(v);
              }
            }
            s.nodeType !== 9 && a(s) && i.push(s);
          }
        }
        return i;
      }
      static getHiddenElementOuterHeight(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let i = e.offsetHeight;
        return (e.style.display = "none"), (e.style.visibility = "visible"), i;
      }
      static getHiddenElementOuterWidth(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let i = e.offsetWidth;
        return (e.style.display = "none"), (e.style.visibility = "visible"), i;
      }
      static getHiddenElementDimensions(e) {
        let i = {};
        return (
          (e.style.visibility = "hidden"),
          (e.style.display = "block"),
          (i.width = e.offsetWidth),
          (i.height = e.offsetHeight),
          (e.style.display = "none"),
          (e.style.visibility = "visible"),
          i
        );
      }
      static scrollInView(e, i) {
        let r = getComputedStyle(e).getPropertyValue("borderTopWidth"),
          o = r ? parseFloat(r) : 0,
          a = getComputedStyle(e).getPropertyValue("paddingTop"),
          s = a ? parseFloat(a) : 0,
          l = e.getBoundingClientRect(),
          m =
            i.getBoundingClientRect().top +
            document.body.scrollTop -
            (l.top + document.body.scrollTop) -
            o -
            s,
          v = e.scrollTop,
          x = e.clientHeight,
          C = this.getOuterHeight(i);
        m < 0
          ? (e.scrollTop = v + m)
          : m + C > x && (e.scrollTop = v + m - x + C);
      }
      static fadeIn(e, i) {
        e.style.opacity = 0;
        let r = +new Date(),
          o = 0,
          a = function () {
            (o =
              +e.style.opacity.replace(",", ".") +
              (new Date().getTime() - r) / i),
              (e.style.opacity = o),
              (r = +new Date()),
              +o < 1 &&
                ((window.requestAnimationFrame && requestAnimationFrame(a)) ||
                  setTimeout(a, 16));
          };
        a();
      }
      static fadeOut(e, i) {
        var r = 1,
          o = 50,
          a = i,
          s = o / a;
        let l = setInterval(() => {
          (r = r - s),
            r <= 0 && ((r = 0), clearInterval(l)),
            (e.style.opacity = r);
        }, o);
      }
      static getWindowScrollTop() {
        let e = document.documentElement;
        return (window.pageYOffset || e.scrollTop) - (e.clientTop || 0);
      }
      static getWindowScrollLeft() {
        let e = document.documentElement;
        return (window.pageXOffset || e.scrollLeft) - (e.clientLeft || 0);
      }
      static matches(e, i) {
        var r = Element.prototype,
          o =
            r.matches ||
            r.webkitMatchesSelector ||
            r.mozMatchesSelector ||
            r.msMatchesSelector ||
            function (a) {
              return [].indexOf.call(document.querySelectorAll(a), this) !== -1;
            };
        return o.call(e, i);
      }
      static getOuterWidth(e, i) {
        let r = e.offsetWidth;
        if (i) {
          let o = getComputedStyle(e);
          r += parseFloat(o.marginLeft) + parseFloat(o.marginRight);
        }
        return r;
      }
      static getHorizontalPadding(e) {
        let i = getComputedStyle(e);
        return parseFloat(i.paddingLeft) + parseFloat(i.paddingRight);
      }
      static getHorizontalMargin(e) {
        let i = getComputedStyle(e);
        return parseFloat(i.marginLeft) + parseFloat(i.marginRight);
      }
      static innerWidth(e) {
        let i = e.offsetWidth,
          r = getComputedStyle(e);
        return (i += parseFloat(r.paddingLeft) + parseFloat(r.paddingRight)), i;
      }
      static width(e) {
        let i = e.offsetWidth,
          r = getComputedStyle(e);
        return (i -= parseFloat(r.paddingLeft) + parseFloat(r.paddingRight)), i;
      }
      static getInnerHeight(e) {
        let i = e.offsetHeight,
          r = getComputedStyle(e);
        return (i += parseFloat(r.paddingTop) + parseFloat(r.paddingBottom)), i;
      }
      static getOuterHeight(e, i) {
        let r = e.offsetHeight;
        if (i) {
          let o = getComputedStyle(e);
          r += parseFloat(o.marginTop) + parseFloat(o.marginBottom);
        }
        return r;
      }
      static getHeight(e) {
        let i = e.offsetHeight,
          r = getComputedStyle(e);
        return (
          (i -=
            parseFloat(r.paddingTop) +
            parseFloat(r.paddingBottom) +
            parseFloat(r.borderTopWidth) +
            parseFloat(r.borderBottomWidth)),
          i
        );
      }
      static getWidth(e) {
        let i = e.offsetWidth,
          r = getComputedStyle(e);
        return (
          (i -=
            parseFloat(r.paddingLeft) +
            parseFloat(r.paddingRight) +
            parseFloat(r.borderLeftWidth) +
            parseFloat(r.borderRightWidth)),
          i
        );
      }
      static getViewport() {
        let e = window,
          i = document,
          r = i.documentElement,
          o = i.getElementsByTagName("body")[0],
          a = e.innerWidth || r.clientWidth || o.clientWidth,
          s = e.innerHeight || r.clientHeight || o.clientHeight;
        return { width: a, height: s };
      }
      static getOffset(e) {
        var i = e.getBoundingClientRect();
        return {
          top:
            i.top +
            (window.pageYOffset ||
              document.documentElement.scrollTop ||
              document.body.scrollTop ||
              0),
          left:
            i.left +
            (window.pageXOffset ||
              document.documentElement.scrollLeft ||
              document.body.scrollLeft ||
              0),
        };
      }
      static replaceElementWith(e, i) {
        let r = e.parentNode;
        if (!r) throw "Can't replace element";
        return r.replaceChild(i, e);
      }
      static getUserAgent() {
        if (navigator && this.isClient()) return navigator.userAgent;
      }
      static isIE() {
        var e = window.navigator.userAgent,
          i = e.indexOf("MSIE ");
        if (i > 0) return !0;
        var r = e.indexOf("Trident/");
        if (r > 0) {
          var o = e.indexOf("rv:");
          return !0;
        }
        var a = e.indexOf("Edge/");
        return a > 0;
      }
      static isIOS() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
      }
      static isAndroid() {
        return /(android)/i.test(navigator.userAgent);
      }
      static isTouchDevice() {
        return "ontouchstart" in window || navigator.maxTouchPoints > 0;
      }
      static appendChild(e, i) {
        if (this.isElement(i)) i.appendChild(e);
        else if (i && i.el && i.el.nativeElement)
          i.el.nativeElement.appendChild(e);
        else throw "Cannot append " + i + " to " + e;
      }
      static removeChild(e, i) {
        if (this.isElement(i)) i.removeChild(e);
        else if (i.el && i.el.nativeElement) i.el.nativeElement.removeChild(e);
        else throw "Cannot remove " + e + " from " + i;
      }
      static removeElement(e) {
        "remove" in Element.prototype
          ? e.remove()
          : e.parentNode.removeChild(e);
      }
      static isElement(e) {
        return typeof HTMLElement == "object"
          ? e instanceof HTMLElement
          : e &&
              typeof e == "object" &&
              e !== null &&
              e.nodeType === 1 &&
              typeof e.nodeName == "string";
      }
      static calculateScrollbarWidth(e) {
        if (e) {
          let i = getComputedStyle(e);
          return (
            e.offsetWidth -
            e.clientWidth -
            parseFloat(i.borderLeftWidth) -
            parseFloat(i.borderRightWidth)
          );
        } else {
          if (this.calculatedScrollbarWidth !== null)
            return this.calculatedScrollbarWidth;
          let i = document.createElement("div");
          (i.className = "p-scrollbar-measure"), document.body.appendChild(i);
          let r = i.offsetWidth - i.clientWidth;
          return (
            document.body.removeChild(i), (this.calculatedScrollbarWidth = r), r
          );
        }
      }
      static calculateScrollbarHeight() {
        if (this.calculatedScrollbarHeight !== null)
          return this.calculatedScrollbarHeight;
        let e = document.createElement("div");
        (e.className = "p-scrollbar-measure"), document.body.appendChild(e);
        let i = e.offsetHeight - e.clientHeight;
        return (
          document.body.removeChild(e), (this.calculatedScrollbarWidth = i), i
        );
      }
      static invokeElementMethod(e, i, r) {
        e[i].apply(e, r);
      }
      static clearSelection() {
        if (window.getSelection)
          window.getSelection().empty
            ? window.getSelection().empty()
            : window.getSelection().removeAllRanges &&
              window.getSelection().rangeCount > 0 &&
              window.getSelection().getRangeAt(0).getClientRects().length > 0 &&
              window.getSelection().removeAllRanges();
        else if (document.selection && document.selection.empty)
          try {
            document.selection.empty();
          } catch {}
      }
      static getBrowser() {
        if (!this.browser) {
          let e = this.resolveUserAgent();
          (this.browser = {}),
            e.browser &&
              ((this.browser[e.browser] = !0),
              (this.browser.version = e.version)),
            this.browser.chrome
              ? (this.browser.webkit = !0)
              : this.browser.webkit && (this.browser.safari = !0);
        }
        return this.browser;
      }
      static resolveUserAgent() {
        let e = navigator.userAgent.toLowerCase(),
          i =
            /(chrome)[ \/]([\w.]+)/.exec(e) ||
            /(webkit)[ \/]([\w.]+)/.exec(e) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) ||
            /(msie) ([\w.]+)/.exec(e) ||
            (e.indexOf("compatible") < 0 &&
              /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)) ||
            [];
        return { browser: i[1] || "", version: i[2] || "0" };
      }
      static isInteger(e) {
        return Number.isInteger
          ? Number.isInteger(e)
          : typeof e == "number" && isFinite(e) && Math.floor(e) === e;
      }
      static isHidden(e) {
        return !e || e.offsetParent === null;
      }
      static isVisible(e) {
        return e && e.offsetParent != null;
      }
      static isExist(e) {
        return e !== null && typeof e < "u" && e.nodeName && e.parentNode;
      }
      static focus(e, i) {
        e && document.activeElement !== e && e.focus(i);
      }
      static getFocusableSelectorString(e = "") {
        return `button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-inputtext:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e}`;
      }
      static getFocusableElements(e, i = "") {
        let r = this.find(e, this.getFocusableSelectorString(i)),
          o = [];
        for (let a of r) {
          let s = getComputedStyle(a);
          this.isVisible(a) &&
            s.display != "none" &&
            s.visibility != "hidden" &&
            o.push(a);
        }
        return o;
      }
      static getFocusableElement(e, i = "") {
        let r = this.findSingle(e, this.getFocusableSelectorString(i));
        if (r) {
          let o = getComputedStyle(r);
          if (
            this.isVisible(r) &&
            o.display != "none" &&
            o.visibility != "hidden"
          )
            return r;
        }
        return null;
      }
      static getFirstFocusableElement(e, i = "") {
        let r = this.getFocusableElements(e, i);
        return r.length > 0 ? r[0] : null;
      }
      static getLastFocusableElement(e, i) {
        let r = this.getFocusableElements(e, i);
        return r.length > 0 ? r[r.length - 1] : null;
      }
      static getNextFocusableElement(e, i = !1) {
        let r = n.getFocusableElements(e),
          o = 0;
        if (r && r.length > 0) {
          let a = r.indexOf(r[0].ownerDocument.activeElement);
          i
            ? a == -1 || a === 0
              ? (o = r.length - 1)
              : (o = a - 1)
            : a != -1 && a !== r.length - 1 && (o = a + 1);
        }
        return r[o];
      }
      static generateZIndex() {
        return (this.zindex = this.zindex || 999), ++this.zindex;
      }
      static getSelection() {
        return window.getSelection
          ? window.getSelection().toString()
          : document.getSelection
          ? document.getSelection().toString()
          : document.selection
          ? document.selection.createRange().text
          : null;
      }
      static getTargetElement(e, i) {
        if (!e) return null;
        switch (e) {
          case "document":
            return document;
          case "window":
            return window;
          case "@next":
            return i?.nextElementSibling;
          case "@prev":
            return i?.previousElementSibling;
          case "@parent":
            return i?.parentElement;
          case "@grandparent":
            return i?.parentElement.parentElement;
          default:
            let r = typeof e;
            if (r === "string") return document.querySelector(e);
            if (r === "object" && e.hasOwnProperty("nativeElement"))
              return this.isExist(e.nativeElement) ? e.nativeElement : void 0;
            let a = ((s) => !!(s && s.constructor && s.call && s.apply))(e)
              ? e()
              : e;
            return (a && a.nodeType === 9) || this.isExist(a) ? a : null;
        }
      }
      static isClient() {
        return !!(
          typeof window < "u" &&
          window.document &&
          window.document.createElement
        );
      }
      static getAttribute(e, i) {
        if (e) {
          let r = e.getAttribute(i);
          return isNaN(r)
            ? r === "true" || r === "false"
              ? r === "true"
              : r
            : +r;
        }
      }
      static calculateBodyScrollbarWidth() {
        return window.innerWidth - document.documentElement.offsetWidth;
      }
      static blockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.setProperty(
          "--scrollbar-width",
          this.calculateBodyScrollbarWidth() + "px"
        ),
          this.addClass(document.body, e);
      }
      static unblockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.removeProperty("--scrollbar-width"),
          this.removeClass(document.body, e);
      }
      static createElement(e, i = {}, ...r) {
        if (e) {
          let o = document.createElement(e);
          return this.setAttributes(o, i), o.append(...r), o;
        }
      }
      static setAttribute(e, i = "", r) {
        this.isElement(e) && r !== null && r !== void 0 && e.setAttribute(i, r);
      }
      static setAttributes(e, i = {}) {
        if (this.isElement(e)) {
          let r = (o, a) => {
            let s = e?.$attrs?.[o] ? [e?.$attrs?.[o]] : [];
            return [a].flat().reduce((l, d) => {
              if (d != null) {
                let m = typeof d;
                if (m === "string" || m === "number") l.push(d);
                else if (m === "object") {
                  let v = Array.isArray(d)
                    ? r(o, d)
                    : Object.entries(d).map(([x, C]) =>
                        o === "style" && (C || C === 0)
                          ? `${x
                              .replace(/([a-z])([A-Z])/g, "$1-$2")
                              .toLowerCase()}:${C}`
                          : C
                          ? x
                          : void 0
                      );
                  l = v.length ? l.concat(v.filter((x) => !!x)) : l;
                }
              }
              return l;
            }, s);
          };
          Object.entries(i).forEach(([o, a]) => {
            if (a != null) {
              let s = o.match(/^on(.+)/);
              s
                ? e.addEventListener(s[1].toLowerCase(), a)
                : o === "pBind"
                ? this.setAttributes(e, a)
                : ((a =
                    o === "class"
                      ? [...new Set(r("class", a))].join(" ").trim()
                      : o === "style"
                      ? r("style", a).join(";").trim()
                      : a),
                  (e.$attrs = e.$attrs || {}) && (e.$attrs[o] = a),
                  e.setAttribute(o, a));
            }
          });
        }
      }
      static isFocusableElement(e, i = "") {
        return this.isElement(e)
          ? e.matches(`button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i}`)
          : !1;
      }
    }
    return n;
  })(),
  Du = class {
    element;
    listener;
    scrollableParents;
    constructor(t, e = () => {}) {
      (this.element = t), (this.listener = e);
    }
    bindScrollListener() {
      this.scrollableParents = ge.getScrollableParents(this.element);
      for (let t = 0; t < this.scrollableParents.length; t++)
        this.scrollableParents[t].addEventListener("scroll", this.listener);
    }
    unbindScrollListener() {
      if (this.scrollableParents)
        for (let t = 0; t < this.scrollableParents.length; t++)
          this.scrollableParents[t].removeEventListener(
            "scroll",
            this.listener
          );
    }
    destroy() {
      this.unbindScrollListener(),
        (this.element = null),
        (this.listener = null),
        (this.scrollableParents = null);
    }
  };
var Su = (() => {
    class n {
      autofocus = !1;
      focused = !1;
      platformId = G(oi);
      document = G(Oe);
      host = G(Ve);
      ngAfterContentChecked() {
        this.autofocus === !1
          ? this.host.nativeElement.removeAttribute("autofocus")
          : this.host.nativeElement.setAttribute("autofocus", !0),
          this.focused || this.autoFocus();
      }
      ngAfterViewChecked() {
        this.focused || this.autoFocus();
      }
      autoFocus() {
        er(this.platformId) &&
          this.autofocus &&
          setTimeout(() => {
            let e = ge.getFocusableElements(this.host?.nativeElement);
            e.length === 0 && this.host.nativeElement.focus(),
              e.length > 0 && e[0].focus(),
              (this.focused = !0);
          });
      }
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵdir = Ae({
        type: n,
        selectors: [["", "pAutoFocus", ""]],
        hostAttrs: [1, "p-element"],
        inputs: { autofocus: [2, "autofocus", "autofocus", Ee] },
        standalone: !0,
        features: [Pt],
      });
    }
    return n;
  })(),
  Mx = (() => {
    class n {
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = we({ type: n });
      static ɵinj = Ce({});
    }
    return n;
  })();
var HA = ["*"],
  Oi = (() => {
    class n {
      label;
      spin = !1;
      styleClass;
      role;
      ariaLabel;
      ariaHidden;
      ngOnInit() {
        this.getAttributes();
      }
      getAttributes() {
        let e = un.isEmpty(this.label);
        (this.role = e ? void 0 : "img"),
          (this.ariaLabel = e ? void 0 : this.label),
          (this.ariaHidden = e);
      }
      getClassNames() {
        return `p-icon ${this.styleClass ? this.styleClass + " " : ""}${
          this.spin ? "p-icon-spin" : ""
        }`;
      }
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵcmp = le({
        type: n,
        selectors: [["ng-component"]],
        hostAttrs: [1, "p-element", "p-icon-wrapper"],
        inputs: {
          label: "label",
          spin: [2, "spin", "spin", Ee],
          styleClass: "styleClass",
        },
        standalone: !0,
        features: [Pt, ue],
        ngContentSelectors: HA,
        decls: 1,
        vars: 0,
        template: function (i, r) {
          i & 1 && (Jt(), Lt(0));
        },
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })();
var Tx = (() => {
  class n extends Oi {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + is() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = bt(n)))(r || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["SpinnerIcon"]],
      standalone: !0,
      features: [Je, ue],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (i, r) {
        i & 1 &&
          (yt(),
          h(0, "svg", 0)(1, "g"),
          W(2, "path", 1),
          u(),
          h(3, "defs")(4, "clipPath", 2),
          W(5, "rect", 3),
          u()()()),
          i & 2 &&
            (Ue(r.getClassNames()),
            de("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ),
            g(),
            de("clip-path", r.pathId),
            g(3),
            M("id", r.pathId));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Mu = (() => {
    class n {
      document;
      platformId;
      renderer;
      el;
      zone;
      config;
      constructor(e, i, r, o, a, s) {
        (this.document = e),
          (this.platformId = i),
          (this.renderer = r),
          (this.el = o),
          (this.zone = a),
          (this.config = s);
      }
      animationListener;
      mouseDownListener;
      timeout;
      ngAfterViewInit() {
        er(this.platformId) &&
          this.config &&
          this.config.ripple &&
          this.zone.runOutsideAngular(() => {
            this.create(),
              (this.mouseDownListener = this.renderer.listen(
                this.el.nativeElement,
                "mousedown",
                this.onMouseDown.bind(this)
              ));
          });
      }
      onMouseDown(e) {
        let i = this.getInk();
        if (
          !i ||
          this.document.defaultView?.getComputedStyle(i, null).display ===
            "none"
        )
          return;
        if (
          (ge.removeClass(i, "p-ink-active"),
          !ge.getHeight(i) && !ge.getWidth(i))
        ) {
          let s = Math.max(
            ge.getOuterWidth(this.el.nativeElement),
            ge.getOuterHeight(this.el.nativeElement)
          );
          (i.style.height = s + "px"), (i.style.width = s + "px");
        }
        let r = ge.getOffset(this.el.nativeElement),
          o =
            e.pageX -
            r.left +
            this.document.body.scrollTop -
            ge.getWidth(i) / 2,
          a =
            e.pageY -
            r.top +
            this.document.body.scrollLeft -
            ge.getHeight(i) / 2;
        this.renderer.setStyle(i, "top", a + "px"),
          this.renderer.setStyle(i, "left", o + "px"),
          ge.addClass(i, "p-ink-active"),
          (this.timeout = setTimeout(() => {
            let s = this.getInk();
            s && ge.removeClass(s, "p-ink-active");
          }, 401));
      }
      getInk() {
        let e = this.el.nativeElement.children;
        for (let i = 0; i < e.length; i++)
          if (
            typeof e[i].className == "string" &&
            e[i].className.indexOf("p-ink") !== -1
          )
            return e[i];
        return null;
      }
      resetInk() {
        let e = this.getInk();
        e && ge.removeClass(e, "p-ink-active");
      }
      onAnimationEnd(e) {
        this.timeout && clearTimeout(this.timeout),
          ge.removeClass(e.currentTarget, "p-ink-active");
      }
      create() {
        let e = this.renderer.createElement("span");
        this.renderer.addClass(e, "p-ink"),
          this.renderer.appendChild(this.el.nativeElement, e),
          this.renderer.setAttribute(e, "aria-hidden", "true"),
          this.renderer.setAttribute(e, "role", "presentation"),
          this.animationListener ||
            (this.animationListener = this.renderer.listen(
              e,
              "animationend",
              this.onAnimationEnd.bind(this)
            ));
      }
      remove() {
        let e = this.getInk();
        e &&
          (this.mouseDownListener && this.mouseDownListener(),
          this.animationListener && this.animationListener(),
          (this.mouseDownListener = null),
          (this.animationListener = null),
          ge.removeElement(e));
      }
      ngOnDestroy() {
        this.config && this.config.ripple && this.remove();
      }
      static ɵfac = function (i) {
        return new (i || n)(H(Oe), H(oi), H(bi), H(Ve), H(Re), H(wu, 8));
      };
      static ɵdir = Ae({
        type: n,
        selectors: [["", "pRipple", ""]],
        hostAttrs: [1, "p-ripple", "p-element"],
        standalone: !0,
      });
    }
    return n;
  })(),
  Ex = (() => {
    class n {
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = we({ type: n });
      static ɵinj = Ce({});
    }
    return n;
  })();
var UA = ["*"],
  kx = (n) => ({ class: n });
function zA(n, t) {
  n & 1 && On(0);
}
function $A(n, t) {
  if ((n & 1 && W(0, "span", 8), n & 2)) {
    let e = E(3);
    M("ngClass", e.iconClass()),
      de("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function WA(n, t) {
  if ((n & 1 && W(0, "SpinnerIcon", 9), n & 2)) {
    let e = E(3);
    M("styleClass", e.spinnerIconClass())("spin", !0),
      de("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function GA(n, t) {
  if (
    (n & 1 &&
      (Qe(0), F(1, $A, 1, 3, "span", 6)(2, WA, 1, 4, "SpinnerIcon", 7), Xe()),
    n & 2)
  ) {
    let e = E(2);
    g(), M("ngIf", e.loadingIcon), g(), M("ngIf", !e.loadingIcon);
  }
}
function YA(n, t) {}
function qA(n, t) {
  if ((n & 1 && F(0, YA, 0, 0, "ng-template", 10), n & 2)) {
    let e = E(2);
    M("ngIf", e.loadingIconTemplate);
  }
}
function KA(n, t) {
  if (
    (n & 1 &&
      (Qe(0), F(1, GA, 3, 2, "ng-container", 2)(2, qA, 1, 1, null, 5), Xe()),
    n & 2)
  ) {
    let e = E();
    g(),
      M("ngIf", !e.loadingIconTemplate),
      g(),
      M("ngTemplateOutlet", e.loadingIconTemplate)(
        "ngTemplateOutletContext",
        xe(3, kx, e.iconClass())
      );
  }
}
function QA(n, t) {
  if ((n & 1 && W(0, "span", 8), n & 2)) {
    let e = E(2);
    M("ngClass", e.iconClass()), de("data-pc-section", "icon");
  }
}
function XA(n, t) {}
function ZA(n, t) {
  if ((n & 1 && F(0, XA, 0, 0, "ng-template", 10), n & 2)) {
    let e = E(2);
    M("ngIf", !e.icon && e.iconTemplate);
  }
}
function JA(n, t) {
  if (
    (n & 1 && (Qe(0), F(1, QA, 1, 2, "span", 6)(2, ZA, 1, 1, null, 5), Xe()),
    n & 2)
  ) {
    let e = E();
    g(),
      M("ngIf", e.icon && !e.iconTemplate),
      g(),
      M("ngTemplateOutlet", e.iconTemplate)(
        "ngTemplateOutletContext",
        xe(3, kx, e.iconClass())
      );
  }
}
function eR(n, t) {
  if ((n & 1 && (h(0, "span", 11), f(1), u()), n & 2)) {
    let e = E();
    de("aria-hidden", e.icon && !e.label)("data-pc-section", "label"),
      g(),
      B(e.label);
  }
}
function tR(n, t) {
  if ((n & 1 && (h(0, "span", 8), f(1), u()), n & 2)) {
    let e = E();
    Ue(e.badgeClass),
      M("ngClass", e.badgeStyleClass()),
      de("data-pc-section", "badge"),
      g(),
      B(e.badge);
  }
}
var ho = {
    button: "p-button",
    component: "p-component",
    iconOnly: "p-button-icon-only",
    disabled: "p-disabled",
    loading: "p-button-loading",
    labelOnly: "p-button-loading-label-only",
  },
  Ix = (() => {
    class n {
      el;
      document;
      iconPos = "left";
      loadingIcon;
      get label() {
        return this._label;
      }
      set label(e) {
        (this._label = e),
          this.initialized &&
            (this.updateLabel(), this.updateIcon(), this.setStyleClass());
      }
      get icon() {
        return this._icon;
      }
      set icon(e) {
        (this._icon = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      get loading() {
        return this._loading;
      }
      set loading(e) {
        (this._loading = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      severity;
      raised = !1;
      rounded = !1;
      text = !1;
      outlined = !1;
      size = null;
      plain = !1;
      _label;
      _icon;
      _loading = !1;
      initialized;
      get htmlElement() {
        return this.el.nativeElement;
      }
      _internalClasses = Object.values(ho);
      constructor(e, i) {
        (this.el = e), (this.document = i);
      }
      ngAfterViewInit() {
        ge.addMultipleClasses(this.htmlElement, this.getStyleClass().join(" ")),
          this.createIcon(),
          this.createLabel(),
          (this.initialized = !0);
      }
      getStyleClass() {
        let e = [ho.button, ho.component];
        return (
          this.icon &&
            !this.label &&
            un.isEmpty(this.htmlElement.textContent) &&
            e.push(ho.iconOnly),
          this.loading &&
            (e.push(ho.disabled, ho.loading),
            !this.icon && this.label && e.push(ho.labelOnly),
            this.icon &&
              !this.label &&
              !un.isEmpty(this.htmlElement.textContent) &&
              e.push(ho.iconOnly)),
          this.text && e.push("p-button-text"),
          this.severity && e.push(`p-button-${this.severity}`),
          this.plain && e.push("p-button-plain"),
          this.raised && e.push("p-button-raised"),
          this.size && e.push(`p-button-${this.size}`),
          this.outlined && e.push("p-button-outlined"),
          this.rounded && e.push("p-button-rounded"),
          this.size === "small" && e.push("p-button-sm"),
          this.size === "large" && e.push("p-button-lg"),
          e
        );
      }
      setStyleClass() {
        let e = this.getStyleClass();
        this.htmlElement.classList.remove(...this._internalClasses),
          this.htmlElement.classList.add(...e);
      }
      createLabel() {
        if (!ge.findSingle(this.htmlElement, ".p-button-label") && this.label) {
          let i = this.document.createElement("span");
          this.icon && !this.label && i.setAttribute("aria-hidden", "true"),
            (i.className = "p-button-label"),
            i.appendChild(this.document.createTextNode(this.label)),
            this.htmlElement.appendChild(i);
        }
      }
      createIcon() {
        if (
          !ge.findSingle(this.htmlElement, ".p-button-icon") &&
          (this.icon || this.loading)
        ) {
          let i = this.document.createElement("span");
          (i.className = "p-button-icon"),
            i.setAttribute("aria-hidden", "true");
          let r = this.label ? "p-button-icon-" + this.iconPos : null;
          r && ge.addClass(i, r);
          let o = this.getIconClass();
          o && ge.addMultipleClasses(i, o),
            this.htmlElement.insertBefore(i, this.htmlElement.firstChild);
        }
      }
      updateLabel() {
        let e = ge.findSingle(this.htmlElement, ".p-button-label");
        if (!this.label) {
          e && this.htmlElement.removeChild(e);
          return;
        }
        e ? (e.textContent = this.label) : this.createLabel();
      }
      updateIcon() {
        let e = ge.findSingle(this.htmlElement, ".p-button-icon"),
          i = ge.findSingle(this.htmlElement, ".p-button-label");
        e
          ? this.iconPos
            ? (e.className =
                "p-button-icon " +
                (i ? "p-button-icon-" + this.iconPos : "") +
                " " +
                this.getIconClass())
            : (e.className = "p-button-icon " + this.getIconClass())
          : this.createIcon();
      }
      getIconClass() {
        return this.loading
          ? "p-button-loading-icon pi-spin " +
              (this.loadingIcon ?? "pi pi-spinner")
          : this.icon || "p-hidden";
      }
      ngOnDestroy() {
        this.initialized = !1;
      }
      static ɵfac = function (i) {
        return new (i || n)(H(Ve), H(Oe));
      };
      static ɵdir = Ae({
        type: n,
        selectors: [["", "pButton", ""]],
        hostAttrs: [1, "p-element"],
        inputs: {
          iconPos: "iconPos",
          loadingIcon: "loadingIcon",
          label: "label",
          icon: "icon",
          loading: "loading",
          severity: "severity",
          raised: [2, "raised", "raised", Ee],
          rounded: [2, "rounded", "rounded", Ee],
          text: [2, "text", "text", Ee],
          outlined: [2, "outlined", "outlined", Ee],
          size: "size",
          plain: [2, "plain", "plain", Ee],
        },
        standalone: !0,
        features: [Pt],
      });
    }
    return n;
  })(),
  iR = (() => {
    class n {
      el;
      type = "button";
      iconPos = "left";
      icon;
      badge;
      label;
      disabled;
      loading = !1;
      loadingIcon;
      raised = !1;
      rounded = !1;
      text = !1;
      plain = !1;
      severity;
      outlined = !1;
      link = !1;
      tabindex;
      size;
      style;
      styleClass;
      badgeClass;
      ariaLabel;
      autofocus;
      onClick = new De();
      onFocus = new De();
      onBlur = new De();
      contentTemplate;
      loadingIconTemplate;
      iconTemplate;
      templates;
      constructor(e) {
        this.el = e;
      }
      spinnerIconClass() {
        return Object.entries(this.iconClass())
          .filter(([, e]) => !!e)
          .reduce((e, [i]) => e + ` ${i}`, "p-button-loading-icon");
      }
      iconClass() {
        let e = {
          "p-button-icon": !0,
          "p-button-icon-left": this.iconPos === "left" && this.label,
          "p-button-icon-right": this.iconPos === "right" && this.label,
          "p-button-icon-top": this.iconPos === "top" && this.label,
          "p-button-icon-bottom": this.iconPos === "bottom" && this.label,
        };
        return (
          this.loading
            ? (e[`p-button-loading-icon pi-spin ${this.loadingIcon ?? ""}`] =
                !0)
            : this.icon && (e[this.icon] = !0),
          e
        );
      }
      get buttonClass() {
        return {
          "p-button p-component": !0,
          "p-button-icon-only":
            (this.icon ||
              this.iconTemplate ||
              this.loadingIcon ||
              this.loadingIconTemplate) &&
            !this.label,
          "p-button-vertical":
            (this.iconPos === "top" || this.iconPos === "bottom") && this.label,
          "p-button-loading": this.loading,
          "p-button-loading-label-only":
            this.loading &&
            !this.icon &&
            this.label &&
            !this.loadingIcon &&
            this.iconPos === "left",
          "p-button-link": this.link,
          [`p-button-${this.severity}`]: this.severity,
          "p-button-raised": this.raised,
          "p-button-rounded": this.rounded,
          "p-button-text": this.text,
          "p-button-outlined": this.outlined,
          "p-button-sm": this.size === "small",
          "p-button-lg": this.size === "large",
          "p-button-plain": this.plain,
          [`${this.styleClass}`]: this.styleClass,
        };
      }
      ngAfterContentInit() {
        this.templates?.forEach((e) => {
          switch (e.getType()) {
            case "content":
              this.contentTemplate = e.template;
              break;
            case "icon":
              this.iconTemplate = e.template;
              break;
            case "loadingicon":
              this.loadingIconTemplate = e.template;
              break;
            default:
              this.contentTemplate = e.template;
              break;
          }
        });
      }
      badgeStyleClass() {
        return {
          "p-badge p-component": !0,
          "p-badge-no-gutter": this.badge && String(this.badge).length === 1,
        };
      }
      focus() {
        this.el.nativeElement.firstChild.focus();
      }
      static ɵfac = function (i) {
        return new (i || n)(H(Ve));
      };
      static ɵcmp = le({
        type: n,
        selectors: [["p-button"]],
        contentQueries: function (i, r, o) {
          if ((i & 1 && Pn(o, zl, 4), i & 2)) {
            let a;
            xt((a = Ct())) && (r.templates = a);
          }
        },
        hostAttrs: [1, "p-element"],
        hostVars: 2,
        hostBindings: function (i, r) {
          i & 2 && Te("p-disabled", r.disabled);
        },
        inputs: {
          type: "type",
          iconPos: "iconPos",
          icon: "icon",
          badge: "badge",
          label: "label",
          disabled: [2, "disabled", "disabled", Ee],
          loading: [2, "loading", "loading", Ee],
          loadingIcon: "loadingIcon",
          raised: [2, "raised", "raised", Ee],
          rounded: [2, "rounded", "rounded", Ee],
          text: [2, "text", "text", Ee],
          plain: [2, "plain", "plain", Ee],
          severity: "severity",
          outlined: [2, "outlined", "outlined", Ee],
          link: [2, "link", "link", Ee],
          tabindex: [2, "tabindex", "tabindex", _n],
          size: "size",
          style: "style",
          styleClass: "styleClass",
          badgeClass: "badgeClass",
          ariaLabel: "ariaLabel",
          autofocus: [2, "autofocus", "autofocus", Ee],
        },
        outputs: { onClick: "onClick", onFocus: "onFocus", onBlur: "onBlur" },
        standalone: !0,
        features: [Pt, ue],
        ngContentSelectors: UA,
        decls: 7,
        vars: 14,
        consts: [
          [
            "pRipple",
            "",
            "pAutoFocus",
            "",
            3,
            "click",
            "focus",
            "blur",
            "ngStyle",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngTemplateOutlet"],
          [4, "ngIf"],
          ["class", "p-button-label", 4, "ngIf"],
          [3, "ngClass", "class", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "ngClass", 4, "ngIf"],
          [3, "styleClass", "spin", 4, "ngIf"],
          [3, "ngClass"],
          [3, "styleClass", "spin"],
          [3, "ngIf"],
          [1, "p-button-label"],
        ],
        template: function (i, r) {
          i & 1 &&
            (Jt(),
            h(0, "button", 0),
            U("click", function (a) {
              return r.onClick.emit(a);
            })("focus", function (a) {
              return r.onFocus.emit(a);
            })("blur", function (a) {
              return r.onBlur.emit(a);
            }),
            Lt(1),
            F(2, zA, 1, 0, "ng-container", 1)(3, KA, 3, 5, "ng-container", 2)(
              4,
              JA,
              3,
              5,
              "ng-container",
              2
            )(5, eR, 2, 3, "span", 3)(6, tR, 2, 5, "span", 4),
            u()),
            i & 2 &&
              (M("ngStyle", r.style)("disabled", r.disabled || r.loading)(
                "ngClass",
                r.buttonClass
              )("autofocus", r.autofocus),
              de("type", r.type)("aria-label", r.ariaLabel)(
                "data-pc-name",
                "button"
              )("data-pc-section", "root")("tabindex", r.tabindex),
              g(2),
              M("ngTemplateOutlet", r.contentTemplate),
              g(),
              M("ngIf", r.loading),
              g(),
              M("ngIf", !r.loading),
              g(),
              M("ngIf", !r.contentTemplate && r.label),
              g(),
              M("ngIf", !r.contentTemplate && r.badge));
        },
        dependencies: [rt, ha, wc, Gt, Mu, Su, Tx],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })(),
  mg = (() => {
    class n {
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = we({ type: n });
      static ɵinj = Ce({ imports: [iR, Ln] });
    }
    return n;
  })();
var fg = (() => {
  class n extends Oi {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = bt(n)))(r || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["ChevronLeftIcon"]],
      standalone: !0,
      features: [Je, ue],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M9.61296 13C9.50997 13.0005 9.40792 12.9804 9.3128 12.9409C9.21767 12.9014 9.13139 12.8433 9.05902 12.7701L3.83313 7.54416C3.68634 7.39718 3.60388 7.19795 3.60388 6.99022C3.60388 6.78249 3.68634 6.58325 3.83313 6.43628L9.05902 1.21039C9.20762 1.07192 9.40416 0.996539 9.60724 1.00012C9.81032 1.00371 10.0041 1.08597 10.1477 1.22959C10.2913 1.37322 10.3736 1.56698 10.3772 1.77005C10.3808 1.97313 10.3054 2.16968 10.1669 2.31827L5.49496 6.99022L10.1669 11.6622C10.3137 11.8091 10.3962 12.0084 10.3962 12.2161C10.3962 12.4238 10.3137 12.6231 10.1669 12.7701C10.0945 12.8433 10.0083 12.9014 9.91313 12.9409C9.81801 12.9804 9.71596 13.0005 9.61296 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, r) {
        i & 1 && (yt(), h(0, "svg", 0), W(1, "path", 1), u()),
          i & 2 &&
            (Ue(r.getClassNames()),
            de("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var $l = (() => {
  class n extends Oi {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = bt(n)))(r || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["ChevronRightIcon"]],
      standalone: !0,
      features: [Je, ue],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M4.38708 13C4.28408 13.0005 4.18203 12.9804 4.08691 12.9409C3.99178 12.9014 3.9055 12.8433 3.83313 12.7701C3.68634 12.6231 3.60388 12.4238 3.60388 12.2161C3.60388 12.0084 3.68634 11.8091 3.83313 11.6622L8.50507 6.99022L3.83313 2.31827C3.69467 2.16968 3.61928 1.97313 3.62287 1.77005C3.62645 1.56698 3.70872 1.37322 3.85234 1.22959C3.99596 1.08597 4.18972 1.00371 4.3928 1.00012C4.59588 0.996539 4.79242 1.07192 4.94102 1.21039L10.1669 6.43628C10.3137 6.58325 10.3962 6.78249 10.3962 6.99022C10.3962 7.19795 10.3137 7.39718 10.1669 7.54416L4.94102 12.7701C4.86865 12.8433 4.78237 12.9014 4.68724 12.9409C4.59212 12.9804 4.49007 13.0005 4.38708 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, r) {
        i & 1 && (yt(), h(0, "svg", 0), W(1, "path", 1), u()),
          i & 2 &&
            (Ue(r.getClassNames()),
            de("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var gg = (() => {
  class n extends Oi {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = bt(n)))(r || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["ChevronUpIcon"]],
      standalone: !0,
      features: [Je, ue],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M12.2097 10.4113C12.1057 10.4118 12.0027 10.3915 11.9067 10.3516C11.8107 10.3118 11.7237 10.2532 11.6506 10.1792L6.93602 5.46461L2.22139 10.1476C2.07272 10.244 1.89599 10.2877 1.71953 10.2717C1.54307 10.2556 1.3771 10.1808 1.24822 10.0593C1.11933 9.93766 1.035 9.77633 1.00874 9.6011C0.982477 9.42587 1.0158 9.2469 1.10338 9.09287L6.37701 3.81923C6.52533 3.6711 6.72639 3.58789 6.93602 3.58789C7.14565 3.58789 7.3467 3.6711 7.49502 3.81923L12.7687 9.09287C12.9168 9.24119 13 9.44225 13 9.65187C13 9.8615 12.9168 10.0626 12.7687 10.2109C12.616 10.3487 12.4151 10.4207 12.2097 10.4113Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, r) {
        i & 1 && (yt(), h(0, "svg", 0), W(1, "path", 1), u()),
          i & 2 &&
            (Ue(r.getClassNames()),
            de("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var _g = (() => {
  class n extends Oi {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = bt(n)))(r || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["ChevronDownIcon"]],
      standalone: !0,
      features: [Je, ue],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, r) {
        i & 1 && (yt(), h(0, "svg", 0), W(1, "path", 1), u()),
          i & 2 &&
            (Ue(r.getClassNames()),
            de("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var bg = (() => {
  class n extends Oi {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = bt(n)))(r || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["TimesIcon"]],
      standalone: !0,
      features: [Je, ue],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, r) {
        i & 1 && (yt(), h(0, "svg", 0), W(1, "path", 1), u()),
          i & 2 &&
            (Ue(r.getClassNames()),
            de("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var vg = (() => {
  class n extends Oi {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = bt(n)))(r || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["CalendarIcon"]],
      standalone: !0,
      features: [Je, ue],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M10.7838 1.51351H9.83783V0.567568C9.83783 0.417039 9.77804 0.272676 9.6716 0.166237C9.56516 0.0597971 9.42079 0 9.27027 0C9.11974 0 8.97538 0.0597971 8.86894 0.166237C8.7625 0.272676 8.7027 0.417039 8.7027 0.567568V1.51351H5.29729V0.567568C5.29729 0.417039 5.2375 0.272676 5.13106 0.166237C5.02462 0.0597971 4.88025 0 4.72973 0C4.5792 0 4.43484 0.0597971 4.3284 0.166237C4.22196 0.272676 4.16216 0.417039 4.16216 0.567568V1.51351H3.21621C2.66428 1.51351 2.13494 1.73277 1.74467 2.12305C1.35439 2.51333 1.13513 3.04266 1.13513 3.59459V11.9189C1.13513 12.4709 1.35439 13.0002 1.74467 13.3905C2.13494 13.7807 2.66428 14 3.21621 14H10.7838C11.3357 14 11.865 13.7807 12.2553 13.3905C12.6456 13.0002 12.8649 12.4709 12.8649 11.9189V3.59459C12.8649 3.04266 12.6456 2.51333 12.2553 2.12305C11.865 1.73277 11.3357 1.51351 10.7838 1.51351ZM3.21621 2.64865H4.16216V3.59459C4.16216 3.74512 4.22196 3.88949 4.3284 3.99593C4.43484 4.10237 4.5792 4.16216 4.72973 4.16216C4.88025 4.16216 5.02462 4.10237 5.13106 3.99593C5.2375 3.88949 5.29729 3.74512 5.29729 3.59459V2.64865H8.7027V3.59459C8.7027 3.74512 8.7625 3.88949 8.86894 3.99593C8.97538 4.10237 9.11974 4.16216 9.27027 4.16216C9.42079 4.16216 9.56516 4.10237 9.6716 3.99593C9.77804 3.88949 9.83783 3.74512 9.83783 3.59459V2.64865H10.7838C11.0347 2.64865 11.2753 2.74831 11.4527 2.92571C11.6301 3.10311 11.7297 3.34371 11.7297 3.59459V5.67568H2.27027V3.59459C2.27027 3.34371 2.36993 3.10311 2.54733 2.92571C2.72473 2.74831 2.96533 2.64865 3.21621 2.64865ZM10.7838 12.8649H3.21621C2.96533 12.8649 2.72473 12.7652 2.54733 12.5878C2.36993 12.4104 2.27027 12.1698 2.27027 11.9189V6.81081H11.7297V11.9189C11.7297 12.1698 11.6301 12.4104 11.4527 12.5878C11.2753 12.7652 11.0347 12.8649 10.7838 12.8649Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, r) {
        i & 1 && (yt(), h(0, "svg", 0), W(1, "path", 1), u()),
          i & 2 &&
            (Ue(r.getClassNames()),
            de("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var rR = ["container"],
  oR = ["inputfield"],
  aR = ["contentWrapper"],
  sR = [[["p-header"]], [["p-footer"]]],
  lR = ["p-header", "p-footer"],
  cR = (n, t, e, i, r) => ({
    "p-calendar": !0,
    "p-input-icon-right": n,
    "p-calendar-w-btn": t,
    "p-calendar-timeonly": e,
    "p-calendar-disabled": i,
    "p-focus": r,
  }),
  dR = (n) => ({ clickCallBack: n }),
  uR = (n) => ({ "p-datepicker-icon": n }),
  hR = (n, t, e, i, r, o) => ({
    "p-datepicker p-component": !0,
    "p-datepicker-inline": n,
    "p-disabled": t,
    "p-datepicker-timeonly": e,
    "p-datepicker-multiple-month": i,
    "p-datepicker-monthpicker": r,
    "p-datepicker-touch-ui": o,
  }),
  Ox = (n, t) => ({ showTransitionParams: n, hideTransitionParams: t }),
  pR = (n) => ({ value: "visibleTouchUI", params: n }),
  mR = (n) => ({ value: "visible", params: n }),
  yg = (n) => ({ $implicit: n }),
  fR = (n, t) => ({ "p-datepicker-other-month": n, "p-datepicker-today": t }),
  gR = (n, t) => ({
    "p-highlight p-datepicker-current-day": n,
    "p-disabled": t,
  }),
  Ax = (n, t) => ({ "p-highlight": n, "p-disabled": t }),
  Px = (n) => [n];
function _R(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "TimesIcon", 11),
      U("click", function () {
        N(e);
        let r = E(3);
        return L(r.clear());
      }),
      u();
  }
  n & 2 && M("styleClass", "p-calendar-clear-icon");
}
function bR(n, t) {}
function vR(n, t) {
  n & 1 && F(0, bR, 0, 0, "ng-template");
}
function yR(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "span", 12),
      U("click", function () {
        N(e);
        let r = E(3);
        return L(r.clear());
      }),
      F(1, vR, 1, 0, null, 13),
      u();
  }
  if (n & 2) {
    let e = E(3);
    g(), M("ngTemplateOutlet", e.clearIconTemplate);
  }
}
function xR(n, t) {
  if (
    (n & 1 &&
      (Qe(0), F(1, _R, 1, 1, "TimesIcon", 9)(2, yR, 2, 1, "span", 10), Xe()),
    n & 2)
  ) {
    let e = E(2);
    g(), M("ngIf", !e.clearIconTemplate), g(), M("ngIf", e.clearIconTemplate);
  }
}
function CR(n, t) {
  if ((n & 1 && W(0, "span", 16), n & 2)) {
    let e = E(3);
    M("ngClass", e.icon);
  }
}
function wR(n, t) {
  n & 1 && W(0, "CalendarIcon");
}
function DR(n, t) {}
function SR(n, t) {
  n & 1 && F(0, DR, 0, 0, "ng-template");
}
function MR(n, t) {
  if (
    (n & 1 &&
      (Qe(0), F(1, wR, 1, 0, "CalendarIcon", 7)(2, SR, 1, 0, null, 13), Xe()),
    n & 2)
  ) {
    let e = E(3);
    g(),
      M("ngIf", !e.triggerIconTemplate),
      g(),
      M("ngTemplateOutlet", e.triggerIconTemplate);
  }
}
function TR(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 14),
      U("click", function (r) {
        N(e), E();
        let o = At(1),
          a = E();
        return L(a.onButtonClick(r, o));
      }),
      F(1, CR, 1, 1, "span", 15)(2, MR, 3, 2, "ng-container", 7),
      u();
  }
  if (n & 2) {
    let e,
      i = E(2);
    M("disabled", i.disabled),
      de("aria-label", i.iconButtonAriaLabel)(
        "aria-expanded",
        (e = i.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", i.overlayVisible ? i.panelId : null),
      g(),
      M("ngIf", i.icon),
      g(),
      M("ngIf", !i.icon);
  }
}
function ER(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "CalendarIcon", 19),
      U("click", function (r) {
        N(e);
        let o = E(3);
        return L(o.onButtonClick(r));
      }),
      u();
  }
  if (n & 2) {
    let e = E(3);
    M("ngClass", xe(1, uR, e.showOnFocus));
  }
}
function kR(n, t) {
  n & 1 && On(0);
}
function IR(n, t) {
  if (
    (n & 1 &&
      (Qe(0),
      F(1, ER, 1, 3, "CalendarIcon", 17)(2, kR, 1, 0, "ng-container", 18),
      Xe()),
    n & 2)
  ) {
    let e = E(2);
    g(),
      M("ngIf", !e.inputIconTemplate),
      g(),
      M("ngTemplateOutlet", e.inputIconTemplate)(
        "ngTemplateOutletContext",
        xe(3, dR, e.onButtonClick.bind(e))
      );
  }
}
function OR(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "input", 6, 1),
      U("focus", function (r) {
        N(e);
        let o = E();
        return L(o.onInputFocus(r));
      })("keydown", function (r) {
        N(e);
        let o = E();
        return L(o.onInputKeydown(r));
      })("click", function () {
        N(e);
        let r = E();
        return L(r.onInputClick());
      })("blur", function (r) {
        N(e);
        let o = E();
        return L(o.onInputBlur(r));
      })("input", function (r) {
        N(e);
        let o = E();
        return L(o.onUserInput(r));
      }),
      u(),
      F(2, xR, 3, 2, "ng-container", 7)(3, TR, 3, 6, "button", 8)(
        4,
        IR,
        3,
        5,
        "ng-container",
        7
      );
  }
  if (n & 2) {
    let e,
      i = E();
    Ue(i.inputStyleClass),
      M("value", i.inputFieldValue)("readonly", i.readonlyInput)(
        "ngStyle",
        i.inputStyle
      )("placeholder", i.placeholder || "")("disabled", i.disabled)(
        "ngClass",
        i.inputClass
      )("autofocus", i.autofocus),
      de("id", i.inputId)("name", i.name)("required", i.required)(
        "aria-required",
        i.required
      )(
        "aria-expanded",
        (e = i.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", i.overlayVisible ? i.panelId : null)(
        "aria-labelledby",
        i.ariaLabelledBy
      )("aria-label", i.ariaLabel)("tabindex", i.tabindex)(
        "inputmode",
        i.touchUI ? "off" : null
      ),
      g(2),
      M("ngIf", i.showClear && !i.disabled && i.value != null),
      g(),
      M("ngIf", i.showIcon && i.iconDisplay === "button"),
      g(),
      M("ngIf", i.iconDisplay === "input" && i.showIcon);
  }
}
function PR(n, t) {
  n & 1 && On(0);
}
function AR(n, t) {
  n & 1 && W(0, "ChevronLeftIcon", 40),
    n & 2 && M("styleClass", "p-datepicker-prev-icon");
}
function RR(n, t) {}
function FR(n, t) {
  n & 1 && F(0, RR, 0, 0, "ng-template");
}
function NR(n, t) {
  if ((n & 1 && (h(0, "span", 41), F(1, FR, 1, 0, null, 13), u()), n & 2)) {
    let e = E(5);
    g(), M("ngTemplateOutlet", e.previousIconTemplate);
  }
}
function LR(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 38),
      U("keydown", function (r) {
        N(e);
        let o = E(4);
        return L(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        N(e);
        let o = E(4);
        return L(o.onPrevButtonClick(r));
      }),
      F(1, AR, 1, 1, "ChevronLeftIcon", 35)(2, NR, 2, 1, "span", 39),
      u();
  }
  if (n & 2) {
    let e = E(4);
    de("aria-label", e.prevIconAriaLabel),
      g(),
      M("ngIf", !e.previousIconTemplate),
      g(),
      M("ngIf", e.previousIconTemplate);
  }
}
function VR(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 42),
      U("click", function (r) {
        N(e);
        let o = E(4);
        return L(o.switchToMonthView(r));
      })("keydown", function (r) {
        N(e);
        let o = E(4);
        return L(o.onContainerButtonKeydown(r));
      }),
      f(1),
      u();
  }
  if (n & 2) {
    let e = E().$implicit,
      i = E(3);
    M("disabled", i.switchViewButtonDisabled()),
      de("aria-label", i.getTranslation("chooseMonth")),
      g(),
      ae(" ", i.getMonthName(e.month), " ");
  }
}
function BR(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 43),
      U("click", function (r) {
        N(e);
        let o = E(4);
        return L(o.switchToYearView(r));
      })("keydown", function (r) {
        N(e);
        let o = E(4);
        return L(o.onContainerButtonKeydown(r));
      }),
      f(1),
      u();
  }
  if (n & 2) {
    let e = E().$implicit,
      i = E(3);
    M("disabled", i.switchViewButtonDisabled()),
      de("aria-label", i.getTranslation("chooseYear")),
      g(),
      ae(" ", i.getYear(e), " ");
  }
}
function HR(n, t) {
  if ((n & 1 && (Qe(0), f(1), Xe()), n & 2)) {
    let e = E(5);
    g(),
      Ds(
        "",
        e.yearPickerValues()[0],
        " - ",
        e.yearPickerValues()[e.yearPickerValues().length - 1],
        ""
      );
  }
}
function jR(n, t) {
  n & 1 && On(0);
}
function UR(n, t) {
  if (
    (n & 1 &&
      (h(0, "span", 44),
      F(1, HR, 2, 2, "ng-container", 7)(2, jR, 1, 0, "ng-container", 18),
      u()),
    n & 2)
  ) {
    let e = E(4);
    g(),
      M("ngIf", !e.decadeTemplate),
      g(),
      M("ngTemplateOutlet", e.decadeTemplate)(
        "ngTemplateOutletContext",
        xe(3, yg, e.yearPickerValues)
      );
  }
}
function zR(n, t) {
  n & 1 && W(0, "ChevronRightIcon", 40),
    n & 2 && M("styleClass", "p-datepicker-next-icon");
}
function $R(n, t) {}
function WR(n, t) {
  n & 1 && F(0, $R, 0, 0, "ng-template");
}
function GR(n, t) {
  if ((n & 1 && (h(0, "span", 45), F(1, WR, 1, 0, null, 13), u()), n & 2)) {
    let e = E(4);
    g(), M("ngTemplateOutlet", e.nextIconTemplate);
  }
}
function YR(n, t) {
  if ((n & 1 && (h(0, "th", 51)(1, "span"), f(2), u()()), n & 2)) {
    let e = E(5);
    g(2), B(e.getTranslation("weekHeader"));
  }
}
function qR(n, t) {
  if ((n & 1 && (h(0, "th", 52)(1, "span"), f(2), u()()), n & 2)) {
    let e = t.$implicit;
    g(2), B(e);
  }
}
function KR(n, t) {
  if ((n & 1 && (h(0, "td", 55)(1, "span", 56), f(2), u()()), n & 2)) {
    let e = E().index,
      i = E(2).$implicit;
    g(2), ae(" ", i.weekNumbers[e], " ");
  }
}
function QR(n, t) {
  if ((n & 1 && (Qe(0), f(1), Xe()), n & 2)) {
    let e = E(2).$implicit;
    g(), B(e.day);
  }
}
function XR(n, t) {
  n & 1 && On(0);
}
function ZR(n, t) {
  if ((n & 1 && (Qe(0), F(1, XR, 1, 0, "ng-container", 18), Xe()), n & 2)) {
    let e = E(2).$implicit,
      i = E(6);
    g(),
      M("ngTemplateOutlet", i.dateTemplate)(
        "ngTemplateOutletContext",
        xe(2, yg, e)
      );
  }
}
function JR(n, t) {
  n & 1 && On(0);
}
function eF(n, t) {
  if ((n & 1 && (Qe(0), F(1, JR, 1, 0, "ng-container", 18), Xe()), n & 2)) {
    let e = E(2).$implicit,
      i = E(6);
    g(),
      M("ngTemplateOutlet", i.disabledDateTemplate)(
        "ngTemplateOutletContext",
        xe(2, yg, e)
      );
  }
}
function tF(n, t) {
  if ((n & 1 && (h(0, "div", 59), f(1), u()), n & 2)) {
    let e = E(2).$implicit;
    g(), ae(" ", e.day, " ");
  }
}
function iF(n, t) {
  if (n & 1) {
    let e = ce();
    Qe(0),
      h(1, "span", 57),
      U("click", function (r) {
        N(e);
        let o = E().$implicit,
          a = E(6);
        return L(a.onDateSelect(r, o));
      })("keydown", function (r) {
        N(e);
        let o = E().$implicit,
          a = E(3).index,
          s = E(3);
        return L(s.onDateCellKeydown(r, o, a));
      }),
      F(2, QR, 2, 1, "ng-container", 7)(3, ZR, 2, 4, "ng-container", 7)(
        4,
        eF,
        2,
        4,
        "ng-container",
        7
      ),
      u(),
      F(5, tF, 2, 1, "div", 58),
      Xe();
  }
  if (n & 2) {
    let e = E().$implicit,
      i = E(6);
    g(),
      M("ngClass", Jn(6, gR, i.isSelected(e) && e.selectable, !e.selectable)),
      de("data-date", i.formatDateKey(i.formatDateMetaToDate(e))),
      g(),
      M("ngIf", !i.dateTemplate && (e.selectable || !i.disabledDateTemplate)),
      g(),
      M("ngIf", e.selectable || !i.disabledDateTemplate),
      g(),
      M("ngIf", !e.selectable),
      g(),
      M("ngIf", i.isSelected(e));
  }
}
function nF(n, t) {
  if (
    (n & 1 && (h(0, "td", 16), F(1, iF, 6, 9, "ng-container", 7), u()), n & 2)
  ) {
    let e = t.$implicit,
      i = E(6);
    M("ngClass", Jn(3, fR, e.otherMonth, e.today)),
      de("aria-label", e.day),
      g(),
      M("ngIf", e.otherMonth ? i.showOtherMonths : !0);
  }
}
function rF(n, t) {
  if (
    (n & 1 &&
      (h(0, "tr"), F(1, KR, 3, 1, "td", 53)(2, nF, 2, 6, "td", 54), u()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = E(5);
    g(), M("ngIf", i.showWeek), g(), M("ngForOf", e);
  }
}
function oF(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 46)(1, "table", 47)(2, "thead")(3, "tr"),
      F(4, YR, 3, 1, "th", 48)(5, qR, 3, 1, "th", 49),
      u()(),
      h(6, "tbody"),
      F(7, rF, 3, 2, "tr", 50),
      u()()()),
    n & 2)
  ) {
    let e = E().$implicit,
      i = E(3);
    g(4),
      M("ngIf", i.showWeek),
      g(),
      M("ngForOf", i.weekDays),
      g(2),
      M("ngForOf", e.dates);
  }
}
function aF(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 27)(1, "div", 28),
      F(2, LR, 3, 3, "button", 29),
      h(3, "div", 30),
      F(4, VR, 2, 3, "button", 31)(5, BR, 2, 3, "button", 32)(
        6,
        UR,
        3,
        5,
        "span",
        33
      ),
      u(),
      h(7, "button", 34),
      U("keydown", function (r) {
        N(e);
        let o = E(3);
        return L(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        N(e);
        let o = E(3);
        return L(o.onNextButtonClick(r));
      }),
      F(8, zR, 1, 1, "ChevronRightIcon", 35)(9, GR, 2, 1, "span", 36),
      u()(),
      F(10, oF, 8, 3, "div", 37),
      u();
  }
  if (n & 2) {
    let e = t.index,
      i = E(3);
    g(2),
      M("ngIf", e === 0),
      g(2),
      M("ngIf", i.currentView === "date"),
      g(),
      M("ngIf", i.currentView !== "year"),
      g(),
      M("ngIf", i.currentView === "year"),
      g(),
      Bi(
        "display",
        i.numberOfMonths === 1 || e === i.numberOfMonths - 1
          ? "inline-flex"
          : "none"
      ),
      de("aria-label", i.nextIconAriaLabel),
      g(),
      M("ngIf", !i.nextIconTemplate),
      g(),
      M("ngIf", i.nextIconTemplate),
      g(),
      M("ngIf", i.currentView === "date");
  }
}
function sF(n, t) {
  if ((n & 1 && (h(0, "div", 59), f(1), u()), n & 2)) {
    let e = E().$implicit;
    g(), ae(" ", e, " ");
  }
}
function lF(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "span", 62),
      U("click", function (r) {
        let o = N(e).index,
          a = E(4);
        return L(a.onMonthSelect(r, o));
      })("keydown", function (r) {
        let o = N(e).index,
          a = E(4);
        return L(a.onMonthCellKeydown(r, o));
      }),
      f(1),
      F(2, sF, 2, 1, "div", 58),
      u();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      r = E(4);
    M("ngClass", Jn(3, Ax, r.isMonthSelected(i), r.isMonthDisabled(i))),
      g(),
      ae(" ", e, " "),
      g(),
      M("ngIf", r.isMonthSelected(i));
  }
}
function cF(n, t) {
  if ((n & 1 && (h(0, "div", 60), F(1, lF, 3, 6, "span", 61), u()), n & 2)) {
    let e = E(3);
    g(), M("ngForOf", e.monthPickerValues());
  }
}
function dF(n, t) {
  if ((n & 1 && (h(0, "div", 59), f(1), u()), n & 2)) {
    let e = E().$implicit;
    g(), ae(" ", e, " ");
  }
}
function uF(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "span", 65),
      U("click", function (r) {
        let o = N(e).$implicit,
          a = E(4);
        return L(a.onYearSelect(r, o));
      })("keydown", function (r) {
        let o = N(e).$implicit,
          a = E(4);
        return L(a.onYearCellKeydown(r, o));
      }),
      f(1),
      F(2, dF, 2, 1, "div", 58),
      u();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = E(4);
    M("ngClass", Jn(3, Ax, i.isYearSelected(e), i.isYearDisabled(e))),
      g(),
      ae(" ", e, " "),
      g(),
      M("ngIf", i.isYearSelected(e));
  }
}
function hF(n, t) {
  if ((n & 1 && (h(0, "div", 63), F(1, uF, 3, 6, "span", 64), u()), n & 2)) {
    let e = E(3);
    g(), M("ngForOf", e.yearPickerValues());
  }
}
function pF(n, t) {
  if (
    (n & 1 &&
      (Qe(0),
      h(1, "div", 23),
      F(2, aF, 11, 10, "div", 24),
      u(),
      F(3, cF, 2, 1, "div", 25)(4, hF, 2, 1, "div", 26),
      Xe()),
    n & 2)
  ) {
    let e = E(2);
    g(2),
      M("ngForOf", e.months),
      g(),
      M("ngIf", e.currentView === "month"),
      g(),
      M("ngIf", e.currentView === "year");
  }
}
function mF(n, t) {
  n & 1 && W(0, "ChevronUpIcon");
}
function fF(n, t) {}
function gF(n, t) {
  n & 1 && F(0, fF, 0, 0, "ng-template");
}
function _F(n, t) {
  n & 1 && (Qe(0), f(1, "0"), Xe());
}
function bF(n, t) {
  n & 1 && W(0, "ChevronDownIcon");
}
function vF(n, t) {}
function yF(n, t) {
  n & 1 && F(0, vF, 0, 0, "ng-template");
}
function xF(n, t) {
  n & 1 && W(0, "ChevronUpIcon");
}
function CF(n, t) {}
function wF(n, t) {
  n & 1 && F(0, CF, 0, 0, "ng-template");
}
function DF(n, t) {
  n & 1 && (Qe(0), f(1, "0"), Xe());
}
function SF(n, t) {
  n & 1 && W(0, "ChevronDownIcon");
}
function MF(n, t) {}
function TF(n, t) {
  n & 1 && F(0, MF, 0, 0, "ng-template");
}
function EF(n, t) {
  if ((n & 1 && (h(0, "div", 69)(1, "span"), f(2), u()()), n & 2)) {
    let e = E(3);
    g(2), B(e.timeSeparator);
  }
}
function kF(n, t) {
  n & 1 && W(0, "ChevronUpIcon");
}
function IF(n, t) {}
function OF(n, t) {
  n & 1 && F(0, IF, 0, 0, "ng-template");
}
function PF(n, t) {
  n & 1 && (Qe(0), f(1, "0"), Xe());
}
function AF(n, t) {
  n & 1 && W(0, "ChevronDownIcon");
}
function RF(n, t) {}
function FF(n, t) {
  n & 1 && F(0, RF, 0, 0, "ng-template");
}
function NF(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 74)(1, "button", 68),
      U("keydown", function (r) {
        N(e);
        let o = E(3);
        return L(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        N(e);
        let o = E(3);
        return L(o.incrementSecond(r));
      })("keydown.space", function (r) {
        N(e);
        let o = E(3);
        return L(o.incrementSecond(r));
      })("mousedown", function (r) {
        N(e);
        let o = E(3);
        return L(o.onTimePickerElementMouseDown(r, 2, 1));
      })("mouseup", function (r) {
        N(e);
        let o = E(3);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        N(e);
        let o = E(3);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        N(e);
        let o = E(3);
        return L(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        N(e);
        let r = E(3);
        return L(r.onTimePickerElementMouseLeave());
      }),
      F(2, kF, 1, 0, "ChevronUpIcon", 7)(3, OF, 1, 0, null, 13),
      u(),
      h(4, "span"),
      F(5, PF, 2, 0, "ng-container", 7),
      f(6),
      u(),
      h(7, "button", 68),
      U("keydown", function (r) {
        N(e);
        let o = E(3);
        return L(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        N(e);
        let o = E(3);
        return L(o.decrementSecond(r));
      })("keydown.space", function (r) {
        N(e);
        let o = E(3);
        return L(o.decrementSecond(r));
      })("mousedown", function (r) {
        N(e);
        let o = E(3);
        return L(o.onTimePickerElementMouseDown(r, 2, -1));
      })("mouseup", function (r) {
        N(e);
        let o = E(3);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        N(e);
        let o = E(3);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        N(e);
        let o = E(3);
        return L(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        N(e);
        let r = E(3);
        return L(r.onTimePickerElementMouseLeave());
      }),
      F(8, AF, 1, 0, "ChevronDownIcon", 7)(9, FF, 1, 0, null, 13),
      u()();
  }
  if (n & 2) {
    let e = E(3);
    g(),
      de("aria-label", e.getTranslation("nextSecond")),
      g(),
      M("ngIf", !e.incrementIconTemplate),
      g(),
      M("ngTemplateOutlet", e.incrementIconTemplate),
      g(2),
      M("ngIf", e.currentSecond < 10),
      g(),
      B(e.currentSecond),
      g(),
      de("aria-label", e.getTranslation("prevSecond")),
      g(),
      M("ngIf", !e.decrementIconTemplate),
      g(),
      M("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function LF(n, t) {
  n & 1 && W(0, "ChevronUpIcon");
}
function VF(n, t) {}
function BF(n, t) {
  n & 1 && F(0, VF, 0, 0, "ng-template");
}
function HF(n, t) {
  n & 1 && W(0, "ChevronDownIcon");
}
function jF(n, t) {}
function UF(n, t) {
  n & 1 && F(0, jF, 0, 0, "ng-template");
}
function zF(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 75)(1, "button", 76),
      U("keydown", function (r) {
        N(e);
        let o = E(3);
        return L(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        N(e);
        let o = E(3);
        return L(o.toggleAMPM(r));
      })("keydown.enter", function (r) {
        N(e);
        let o = E(3);
        return L(o.toggleAMPM(r));
      }),
      F(2, LF, 1, 0, "ChevronUpIcon", 7)(3, BF, 1, 0, null, 13),
      u(),
      h(4, "span"),
      f(5),
      u(),
      h(6, "button", 76),
      U("keydown", function (r) {
        N(e);
        let o = E(3);
        return L(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        N(e);
        let o = E(3);
        return L(o.toggleAMPM(r));
      })("keydown.enter", function (r) {
        N(e);
        let o = E(3);
        return L(o.toggleAMPM(r));
      }),
      F(7, HF, 1, 0, "ChevronDownIcon", 7)(8, UF, 1, 0, null, 13),
      u()();
  }
  if (n & 2) {
    let e = E(3);
    g(),
      de("aria-label", e.getTranslation("am")),
      g(),
      M("ngIf", !e.incrementIconTemplate),
      g(),
      M("ngTemplateOutlet", e.incrementIconTemplate),
      g(2),
      B(e.pm ? "PM" : "AM"),
      g(),
      de("aria-label", e.getTranslation("pm")),
      g(),
      M("ngIf", !e.decrementIconTemplate),
      g(),
      M("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function $F(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 66)(1, "div", 67)(2, "button", 68),
      U("keydown", function (r) {
        N(e);
        let o = E(2);
        return L(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        N(e);
        let o = E(2);
        return L(o.incrementHour(r));
      })("keydown.space", function (r) {
        N(e);
        let o = E(2);
        return L(o.incrementHour(r));
      })("mousedown", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseDown(r, 0, 1));
      })("mouseup", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        N(e);
        let r = E(2);
        return L(r.onTimePickerElementMouseLeave());
      }),
      F(3, mF, 1, 0, "ChevronUpIcon", 7)(4, gF, 1, 0, null, 13),
      u(),
      h(5, "span"),
      F(6, _F, 2, 0, "ng-container", 7),
      f(7),
      u(),
      h(8, "button", 68),
      U("keydown", function (r) {
        N(e);
        let o = E(2);
        return L(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        N(e);
        let o = E(2);
        return L(o.decrementHour(r));
      })("keydown.space", function (r) {
        N(e);
        let o = E(2);
        return L(o.decrementHour(r));
      })("mousedown", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseDown(r, 0, -1));
      })("mouseup", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        N(e);
        let r = E(2);
        return L(r.onTimePickerElementMouseLeave());
      }),
      F(9, bF, 1, 0, "ChevronDownIcon", 7)(10, yF, 1, 0, null, 13),
      u()(),
      h(11, "div", 69)(12, "span"),
      f(13),
      u()(),
      h(14, "div", 70)(15, "button", 68),
      U("keydown", function (r) {
        N(e);
        let o = E(2);
        return L(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        N(e);
        let o = E(2);
        return L(o.incrementMinute(r));
      })("keydown.space", function (r) {
        N(e);
        let o = E(2);
        return L(o.incrementMinute(r));
      })("mousedown", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseDown(r, 1, 1));
      })("mouseup", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        N(e);
        let r = E(2);
        return L(r.onTimePickerElementMouseLeave());
      }),
      F(16, xF, 1, 0, "ChevronUpIcon", 7)(17, wF, 1, 0, null, 13),
      u(),
      h(18, "span"),
      F(19, DF, 2, 0, "ng-container", 7),
      f(20),
      u(),
      h(21, "button", 68),
      U("keydown", function (r) {
        N(e);
        let o = E(2);
        return L(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        N(e);
        let o = E(2);
        return L(o.decrementMinute(r));
      })("keydown.space", function (r) {
        N(e);
        let o = E(2);
        return L(o.decrementMinute(r));
      })("mousedown", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseDown(r, 1, -1));
      })("mouseup", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        N(e);
        let r = E(2);
        return L(r.onTimePickerElementMouseLeave());
      }),
      F(22, SF, 1, 0, "ChevronDownIcon", 7)(23, TF, 1, 0, null, 13),
      u()(),
      F(24, EF, 3, 1, "div", 71)(25, NF, 10, 8, "div", 72)(
        26,
        zF,
        9,
        7,
        "div",
        73
      ),
      u();
  }
  if (n & 2) {
    let e = E(2);
    g(2),
      de("aria-label", e.getTranslation("nextHour")),
      g(),
      M("ngIf", !e.incrementIconTemplate),
      g(),
      M("ngTemplateOutlet", e.incrementIconTemplate),
      g(2),
      M("ngIf", e.currentHour < 10),
      g(),
      B(e.currentHour),
      g(),
      de("aria-label", e.getTranslation("prevHour")),
      g(),
      M("ngIf", !e.decrementIconTemplate),
      g(),
      M("ngTemplateOutlet", e.decrementIconTemplate),
      g(3),
      B(e.timeSeparator),
      g(2),
      de("aria-label", e.getTranslation("nextMinute")),
      g(),
      M("ngIf", !e.incrementIconTemplate),
      g(),
      M("ngTemplateOutlet", e.incrementIconTemplate),
      g(2),
      M("ngIf", e.currentMinute < 10),
      g(),
      B(e.currentMinute),
      g(),
      de("aria-label", e.getTranslation("prevMinute")),
      g(),
      M("ngIf", !e.decrementIconTemplate),
      g(),
      M("ngTemplateOutlet", e.decrementIconTemplate),
      g(),
      M("ngIf", e.showSeconds),
      g(),
      M("ngIf", e.showSeconds),
      g(),
      M("ngIf", e.hourFormat == "12");
  }
}
function WF(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 77)(1, "button", 78),
      U("keydown", function (r) {
        N(e);
        let o = E(2);
        return L(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        N(e);
        let o = E(2);
        return L(o.onTodayButtonClick(r));
      }),
      u(),
      h(2, "button", 78),
      U("keydown", function (r) {
        N(e);
        let o = E(2);
        return L(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        N(e);
        let o = E(2);
        return L(o.onClearButtonClick(r));
      }),
      u()();
  }
  if (n & 2) {
    let e = E(2);
    g(),
      M("label", e.getTranslation("today"))(
        "ngClass",
        xe(4, Px, e.todayButtonStyleClass)
      ),
      g(),
      M("label", e.getTranslation("clear"))(
        "ngClass",
        xe(6, Px, e.clearButtonStyleClass)
      );
  }
}
function GF(n, t) {
  n & 1 && On(0);
}
function YF(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 20, 2),
      U("@overlayAnimation.start", function (r) {
        N(e);
        let o = E();
        return L(o.onOverlayAnimationStart(r));
      })("@overlayAnimation.done", function (r) {
        N(e);
        let o = E();
        return L(o.onOverlayAnimationDone(r));
      })("click", function (r) {
        N(e);
        let o = E();
        return L(o.onOverlayClick(r));
      }),
      Lt(2),
      F(3, PR, 1, 0, "ng-container", 13)(4, pF, 5, 3, "ng-container", 7)(
        5,
        $F,
        27,
        20,
        "div",
        21
      )(6, WF, 3, 8, "div", 22),
      Lt(7, 1),
      F(8, GF, 1, 0, "ng-container", 13),
      u();
  }
  if (n & 2) {
    let e = E();
    Ue(e.panelStyleClass),
      M("ngStyle", e.panelStyle)(
        "ngClass",
        I_(
          15,
          hR,
          e.inline,
          e.disabled,
          e.timeOnly,
          e.numberOfMonths > 1,
          e.view === "month",
          e.touchUI
        )
      )(
        "@overlayAnimation",
        e.touchUI
          ? xe(
              25,
              pR,
              Jn(22, Ox, e.showTransitionOptions, e.hideTransitionOptions)
            )
          : xe(
              30,
              mR,
              Jn(27, Ox, e.showTransitionOptions, e.hideTransitionOptions)
            )
      )("@.disabled", e.inline === !0),
      de("id", e.panelId)("aria-label", e.getTranslation("chooseDate"))(
        "role",
        e.inline ? null : "dialog"
      )("aria-modal", e.inline ? null : "true"),
      g(3),
      M("ngTemplateOutlet", e.headerTemplate),
      g(),
      M("ngIf", !e.timeOnly),
      g(),
      M("ngIf", (e.showTime || e.timeOnly) && e.currentView === "date"),
      g(),
      M("ngIf", e.showButtonBar),
      g(2),
      M("ngTemplateOutlet", e.footerTemplate);
  }
}
var qF = { provide: ko, useExisting: Di(() => KF), multi: !0 },
  KF = (() => {
    class n {
      document;
      el;
      renderer;
      cd;
      zone;
      config;
      overlayService;
      iconDisplay = "button";
      style;
      styleClass;
      inputStyle;
      inputId;
      name;
      inputStyleClass;
      placeholder;
      ariaLabelledBy;
      ariaLabel;
      iconAriaLabel;
      disabled;
      dateFormat;
      multipleSeparator = ",";
      rangeSeparator = "-";
      inline = !1;
      showOtherMonths = !0;
      selectOtherMonths;
      showIcon;
      icon;
      appendTo;
      readonlyInput;
      shortYearCutoff = "+10";
      monthNavigator;
      yearNavigator;
      hourFormat = "24";
      timeOnly;
      stepYearPicker = 10;
      stepHour = 1;
      stepMinute = 1;
      stepSecond = 1;
      showSeconds = !1;
      required;
      showOnFocus = !0;
      showWeek = !1;
      startWeekFromFirstDayOfYear = !1;
      showClear = !1;
      dataType = "date";
      selectionMode = "single";
      maxDateCount;
      showButtonBar;
      todayButtonStyleClass = "p-button-text";
      clearButtonStyleClass = "p-button-text";
      autofocus;
      autoZIndex = !0;
      baseZIndex = 0;
      panelStyleClass;
      panelStyle;
      keepInvalid = !1;
      hideOnDateTimeSelect = !0;
      touchUI;
      timeSeparator = ":";
      focusTrap = !0;
      showTransitionOptions = ".12s cubic-bezier(0, 0, 0.2, 1)";
      hideTransitionOptions = ".1s linear";
      tabindex;
      variant = "outlined";
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        (this._minDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        (this._maxDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDates() {
        return this._disabledDates;
      }
      set disabledDates(e) {
        (this._disabledDates = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDays() {
        return this._disabledDays;
      }
      set disabledDays(e) {
        (this._disabledDays = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get yearRange() {
        return this._yearRange;
      }
      set yearRange(e) {
        if (((this._yearRange = e), e)) {
          let i = e.split(":"),
            r = parseInt(i[0]),
            o = parseInt(i[1]);
          this.populateYearOptions(r, o);
        }
      }
      get showTime() {
        return this._showTime;
      }
      set showTime(e) {
        (this._showTime = e),
          this.currentHour === void 0 &&
            this.initTime(this.value || new Date()),
          this.updateInputfield();
      }
      get responsiveOptions() {
        return this._responsiveOptions;
      }
      set responsiveOptions(e) {
        (this._responsiveOptions = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get numberOfMonths() {
        return this._numberOfMonths;
      }
      set numberOfMonths(e) {
        (this._numberOfMonths = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get firstDayOfWeek() {
        return this._firstDayOfWeek;
      }
      set firstDayOfWeek(e) {
        (this._firstDayOfWeek = e), this.createWeekDays();
      }
      set locale(e) {
        console.warn(
          "Locale property has no effect, use new i18n API instead."
        );
      }
      get view() {
        return this._view;
      }
      set view(e) {
        (this._view = e), (this.currentView = this._view);
      }
      get defaultDate() {
        return this._defaultDate;
      }
      set defaultDate(e) {
        if (((this._defaultDate = e), this.initialized)) {
          let i = e || new Date();
          (this.currentMonth = i.getMonth()),
            (this.currentYear = i.getFullYear()),
            this.initTime(i),
            this.createMonths(this.currentMonth, this.currentYear);
        }
      }
      get inputClass() {
        return {
          "p-inputtext p-component": !0,
          "p-variant-filled":
            this.variant === "filled" || this.config.inputStyle() === "filled",
        };
      }
      onFocus = new De();
      onBlur = new De();
      onClose = new De();
      onSelect = new De();
      onClear = new De();
      onInput = new De();
      onTodayClick = new De();
      onClearClick = new De();
      onMonthChange = new De();
      onYearChange = new De();
      onClickOutside = new De();
      onShow = new De();
      templates;
      containerViewChild;
      inputfieldViewChild;
      set content(e) {
        (this.contentViewChild = e),
          this.contentViewChild &&
            (this.isMonthNavigate
              ? (Promise.resolve(null).then(() => this.updateFocus()),
                (this.isMonthNavigate = !1))
              : !this.focus && !this.inline && this.initFocusableCell());
      }
      contentViewChild;
      value;
      dates;
      months;
      weekDays;
      currentMonth;
      currentYear;
      currentHour;
      currentMinute;
      currentSecond;
      pm;
      mask;
      maskClickListener;
      overlay;
      responsiveStyleElement;
      overlayVisible;
      onModelChange = () => {};
      onModelTouched = () => {};
      calendarElement;
      timePickerTimer;
      documentClickListener;
      animationEndListener;
      ticksTo1970;
      yearOptions;
      focus;
      isKeydown;
      filled;
      inputFieldValue = null;
      _minDate;
      _maxDate;
      _showTime;
      _yearRange;
      preventDocumentListener;
      dateTemplate;
      headerTemplate;
      footerTemplate;
      disabledDateTemplate;
      decadeTemplate;
      previousIconTemplate;
      nextIconTemplate;
      triggerIconTemplate;
      clearIconTemplate;
      decrementIconTemplate;
      incrementIconTemplate;
      inputIconTemplate;
      _disabledDates;
      _disabledDays;
      selectElement;
      todayElement;
      focusElement;
      scrollHandler;
      documentResizeListener;
      navigationState = null;
      isMonthNavigate;
      initialized;
      translationSubscription;
      _locale;
      _responsiveOptions;
      currentView;
      attributeSelector;
      panelId;
      _numberOfMonths = 1;
      _firstDayOfWeek;
      _view = "date";
      preventFocus;
      _defaultDate;
      _focusKey = null;
      window;
      get locale() {
        return this._locale;
      }
      get iconButtonAriaLabel() {
        return this.iconAriaLabel
          ? this.iconAriaLabel
          : this.getTranslation("chooseDate");
      }
      get prevIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("prevDecade")
          : this.currentView === "month"
          ? this.getTranslation("prevYear")
          : this.getTranslation("prevMonth");
      }
      get nextIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("nextDecade")
          : this.currentView === "month"
          ? this.getTranslation("nextYear")
          : this.getTranslation("nextMonth");
      }
      constructor(e, i, r, o, a, s, l) {
        (this.document = e),
          (this.el = i),
          (this.renderer = r),
          (this.cd = o),
          (this.zone = a),
          (this.config = s),
          (this.overlayService = l),
          (this.window = this.document.defaultView);
      }
      ngOnInit() {
        (this.attributeSelector = is()),
          (this.panelId = this.attributeSelector + "_panel");
        let e = this.defaultDate || new Date();
        this.createResponsiveStyle(),
          (this.currentMonth = e.getMonth()),
          (this.currentYear = e.getFullYear()),
          (this.yearOptions = []),
          (this.currentView = this.view),
          this.view === "date" &&
            (this.createWeekDays(),
            this.initTime(e),
            this.createMonths(this.currentMonth, this.currentYear),
            (this.ticksTo1970 =
              (1969 * 365 +
                Math.floor(1970 / 4) -
                Math.floor(1970 / 100) +
                Math.floor(1970 / 400)) *
              24 *
              60 *
              60 *
              1e7)),
          (this.translationSubscription =
            this.config.translationObserver.subscribe(() => {
              this.createWeekDays(), this.cd.markForCheck();
            })),
          (this.initialized = !0);
      }
      ngAfterContentInit() {
        this.templates.forEach((e) => {
          switch (e.getType()) {
            case "date":
              this.dateTemplate = e.template;
              break;
            case "decade":
              this.decadeTemplate = e.template;
              break;
            case "disabledDate":
              this.disabledDateTemplate = e.template;
              break;
            case "header":
              this.headerTemplate = e.template;
              break;
            case "inputicon":
              this.inputIconTemplate = e.template;
              break;
            case "previousicon":
              this.previousIconTemplate = e.template;
              break;
            case "nexticon":
              this.nextIconTemplate = e.template;
              break;
            case "triggericon":
              this.triggerIconTemplate = e.template;
              break;
            case "clearicon":
              this.clearIconTemplate = e.template;
              break;
            case "decrementicon":
              this.decrementIconTemplate = e.template;
              break;
            case "incrementicon":
              this.incrementIconTemplate = e.template;
              break;
            case "footer":
              this.footerTemplate = e.template;
              break;
            default:
              this.dateTemplate = e.template;
              break;
          }
        });
      }
      ngAfterViewInit() {
        this.inline &&
          (this.contentViewChild &&
            this.contentViewChild.nativeElement.setAttribute(
              this.attributeSelector,
              ""
            ),
          !this.disabled &&
            !this.inline &&
            (this.initFocusableCell(),
            this.numberOfMonths === 1 &&
              this.contentViewChild &&
              this.contentViewChild.nativeElement &&
              (this.contentViewChild.nativeElement.style.width =
                ge.getOuterWidth(this.containerViewChild?.nativeElement) +
                "px")));
      }
      getTranslation(e) {
        return this.config.getTranslation(e);
      }
      populateYearOptions(e, i) {
        this.yearOptions = [];
        for (let r = e; r <= i; r++) this.yearOptions.push(r);
      }
      createWeekDays() {
        this.weekDays = [];
        let e = this.getFirstDateOfWeek(),
          i = this.getTranslation(Vn.DAY_NAMES_MIN);
        for (let r = 0; r < 7; r++)
          this.weekDays.push(i[e]), (e = e == 6 ? 0 : ++e);
      }
      monthPickerValues() {
        let e = [];
        for (let i = 0; i <= 11; i++)
          e.push(this.config.getTranslation("monthNamesShort")[i]);
        return e;
      }
      yearPickerValues() {
        let e = [],
          i = this.currentYear - (this.currentYear % this.stepYearPicker);
        for (let r = 0; r < this.stepYearPicker; r++) e.push(i + r);
        return e;
      }
      createMonths(e, i) {
        this.months = this.months = [];
        for (let r = 0; r < this.numberOfMonths; r++) {
          let o = e + r,
            a = i;
          o > 11 && ((o = (o % 11) - 1), (a = i + 1)),
            this.months.push(this.createMonth(o, a));
        }
      }
      getWeekNumber(e) {
        let i = new Date(e.getTime());
        if (this.startWeekFromFirstDayOfYear) {
          let o = +this.getFirstDateOfWeek();
          i.setDate(i.getDate() + 6 + o - i.getDay());
        } else i.setDate(i.getDate() + 4 - (i.getDay() || 7));
        let r = i.getTime();
        return (
          i.setMonth(0),
          i.setDate(1),
          Math.floor(Math.round((r - i.getTime()) / 864e5) / 7) + 1
        );
      }
      createMonth(e, i) {
        let r = [],
          o = this.getFirstDayOfMonthIndex(e, i),
          a = this.getDaysCountInMonth(e, i),
          s = this.getDaysCountInPrevMonth(e, i),
          l = 1,
          d = new Date(),
          m = [],
          v = Math.ceil((a + o) / 7);
        for (let x = 0; x < v; x++) {
          let C = [];
          if (x == 0) {
            for (let T = s - o + 1; T <= s; T++) {
              let k = this.getPreviousMonthAndYear(e, i);
              C.push({
                day: T,
                month: k.month,
                year: k.year,
                otherMonth: !0,
                today: this.isToday(d, T, k.month, k.year),
                selectable: this.isSelectable(T, k.month, k.year, !0),
              });
            }
            let S = 7 - C.length;
            for (let T = 0; T < S; T++)
              C.push({
                day: l,
                month: e,
                year: i,
                today: this.isToday(d, l, e, i),
                selectable: this.isSelectable(l, e, i, !1),
              }),
                l++;
          } else
            for (let S = 0; S < 7; S++) {
              if (l > a) {
                let T = this.getNextMonthAndYear(e, i);
                C.push({
                  day: l - a,
                  month: T.month,
                  year: T.year,
                  otherMonth: !0,
                  today: this.isToday(d, l - a, T.month, T.year),
                  selectable: this.isSelectable(l - a, T.month, T.year, !0),
                });
              } else
                C.push({
                  day: l,
                  month: e,
                  year: i,
                  today: this.isToday(d, l, e, i),
                  selectable: this.isSelectable(l, e, i, !1),
                });
              l++;
            }
          this.showWeek &&
            m.push(
              this.getWeekNumber(new Date(C[0].year, C[0].month, C[0].day))
            ),
            r.push(C);
        }
        return { month: e, year: i, dates: r, weekNumbers: m };
      }
      initTime(e) {
        (this.pm = e.getHours() > 11),
          this.showTime
            ? ((this.currentMinute = e.getMinutes()),
              (this.currentSecond = e.getSeconds()),
              this.setCurrentHourPM(e.getHours()))
            : this.timeOnly &&
              ((this.currentMinute = 0),
              (this.currentHour = 0),
              (this.currentSecond = 0));
      }
      navBackward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.decrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.decrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 0
                ? ((this.currentMonth = 11), this.decrementYear())
                : this.currentMonth--,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      navForward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.incrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.incrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 11
                ? ((this.currentMonth = 0), this.incrementYear())
                : this.currentMonth++,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      decrementYear() {
        this.currentYear--;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear < e[0]) {
          let i = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] - i, e[e.length - 1] - i);
        }
      }
      decrementYearPickerStep() {
        this.currentYear = this.currentYear - this.stepYearPicker;
      }
      incrementYearPickerStep() {
        this.currentYear = this.currentYear + this.stepYearPicker;
      }
      incrementYear() {
        this.currentYear++;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear > e[e.length - 1]) {
          let i = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] + i, e[e.length - 1] + i);
        }
      }
      switchToMonthView(e) {
        this.setCurrentView("month"), e.preventDefault();
      }
      switchToYearView(e) {
        this.setCurrentView("year"), e.preventDefault();
      }
      onDateSelect(e, i) {
        if (this.disabled || !i.selectable) {
          e.preventDefault();
          return;
        }
        this.isMultipleSelection() && this.isSelected(i)
          ? ((this.value = this.value.filter(
              (r, o) => !this.isDateEquals(r, i)
            )),
            this.value.length === 0 && (this.value = null),
            this.updateModel(this.value))
          : this.shouldSelectDate(i) && this.selectDate(i),
          this.hideOnDateTimeSelect &&
            (this.isSingleSelection() ||
              (this.isRangeSelection() && this.value[1])) &&
            setTimeout(() => {
              e.preventDefault(),
                this.hideOverlay(),
                this.mask && this.disableModality(),
                this.cd.markForCheck();
            }, 150),
          this.updateInputfield(),
          e.preventDefault();
      }
      shouldSelectDate(e) {
        return this.isMultipleSelection() && this.maxDateCount != null
          ? this.maxDateCount > (this.value ? this.value.length : 0)
          : !0;
      }
      onMonthSelect(e, i) {
        this.view === "month"
          ? this.onDateSelect(e, {
              year: this.currentYear,
              month: i,
              day: 1,
              selectable: !0,
            })
          : ((this.currentMonth = i),
            this.createMonths(this.currentMonth, this.currentYear),
            this.setCurrentView("date"),
            this.onMonthChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      onYearSelect(e, i) {
        this.view === "year"
          ? this.onDateSelect(e, { year: i, month: 0, day: 1, selectable: !0 })
          : ((this.currentYear = i),
            this.setCurrentView("month"),
            this.onYearChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      updateInputfield() {
        let e = "";
        if (this.value) {
          if (this.isSingleSelection()) e = this.formatDateTime(this.value);
          else if (this.isMultipleSelection())
            for (let i = 0; i < this.value.length; i++) {
              let r = this.formatDateTime(this.value[i]);
              (e += r),
                i !== this.value.length - 1 &&
                  (e += this.multipleSeparator + " ");
            }
          else if (this.isRangeSelection() && this.value && this.value.length) {
            let i = this.value[0],
              r = this.value[1];
            (e = this.formatDateTime(i)),
              r &&
                (e += " " + this.rangeSeparator + " " + this.formatDateTime(r));
          }
        }
        (this.inputFieldValue = e),
          this.updateFilledState(),
          this.inputfieldViewChild &&
            this.inputfieldViewChild.nativeElement &&
            (this.inputfieldViewChild.nativeElement.value =
              this.inputFieldValue);
      }
      formatDateTime(e) {
        let i = this.keepInvalid ? e : null,
          r = this.isValidDateForTimeConstraints(e);
        return (
          this.isValidDate(e)
            ? this.timeOnly
              ? (i = this.formatTime(e))
              : ((i = this.formatDate(e, this.getDateFormat())),
                this.showTime && (i += " " + this.formatTime(e)))
            : this.dataType === "string" && (i = e),
          (i = r ? i : ""),
          i
        );
      }
      formatDateMetaToDate(e) {
        return new Date(e.year, e.month, e.day);
      }
      formatDateKey(e) {
        return `${e.getFullYear()}-${e.getMonth() + 1}-${e.getDate()}`;
      }
      setCurrentHourPM(e) {
        this.hourFormat == "12"
          ? ((this.pm = e > 11),
            e >= 12
              ? (this.currentHour = e == 12 ? 12 : e - 12)
              : (this.currentHour = e == 0 ? 12 : e))
          : (this.currentHour = e);
      }
      setCurrentView(e) {
        (this.currentView = e), this.cd.detectChanges(), this.alignOverlay();
      }
      selectDate(e) {
        let i = this.formatDateMetaToDate(e);
        if (
          (this.showTime &&
            (this.hourFormat == "12"
              ? this.currentHour === 12
                ? i.setHours(this.pm ? 12 : 0)
                : i.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
              : i.setHours(this.currentHour),
            i.setMinutes(this.currentMinute),
            i.setSeconds(this.currentSecond)),
          this.minDate &&
            this.minDate > i &&
            ((i = this.minDate),
            this.setCurrentHourPM(i.getHours()),
            (this.currentMinute = i.getMinutes()),
            (this.currentSecond = i.getSeconds())),
          this.maxDate &&
            this.maxDate < i &&
            ((i = this.maxDate),
            this.setCurrentHourPM(i.getHours()),
            (this.currentMinute = i.getMinutes()),
            (this.currentSecond = i.getSeconds())),
          this.isSingleSelection())
        )
          this.updateModel(i);
        else if (this.isMultipleSelection())
          this.updateModel(this.value ? [...this.value, i] : [i]);
        else if (this.isRangeSelection())
          if (this.value && this.value.length) {
            let r = this.value[0],
              o = this.value[1];
            !o && i.getTime() >= r.getTime() ? (o = i) : ((r = i), (o = null)),
              this.updateModel([r, o]);
          } else this.updateModel([i, null]);
        this.onSelect.emit(i);
      }
      updateModel(e) {
        if (((this.value = e), this.dataType == "date"))
          this.onModelChange(this.value);
        else if (this.dataType == "string")
          if (this.isSingleSelection())
            this.onModelChange(this.formatDateTime(this.value));
          else {
            let i = null;
            Array.isArray(this.value) &&
              (i = this.value.map((r) => this.formatDateTime(r))),
              this.onModelChange(i);
          }
      }
      getFirstDayOfMonthIndex(e, i) {
        let r = new Date();
        r.setDate(1), r.setMonth(e), r.setFullYear(i);
        let o = r.getDay() + this.getSundayIndex();
        return o >= 7 ? o - 7 : o;
      }
      getDaysCountInMonth(e, i) {
        return 32 - this.daylightSavingAdjust(new Date(i, e, 32)).getDate();
      }
      getDaysCountInPrevMonth(e, i) {
        let r = this.getPreviousMonthAndYear(e, i);
        return this.getDaysCountInMonth(r.month, r.year);
      }
      getPreviousMonthAndYear(e, i) {
        let r, o;
        return (
          e === 0 ? ((r = 11), (o = i - 1)) : ((r = e - 1), (o = i)),
          { month: r, year: o }
        );
      }
      getNextMonthAndYear(e, i) {
        let r, o;
        return (
          e === 11 ? ((r = 0), (o = i + 1)) : ((r = e + 1), (o = i)),
          { month: r, year: o }
        );
      }
      getSundayIndex() {
        let e = this.getFirstDateOfWeek();
        return e > 0 ? 7 - e : 0;
      }
      isSelected(e) {
        if (this.value) {
          if (this.isSingleSelection()) return this.isDateEquals(this.value, e);
          if (this.isMultipleSelection()) {
            let i = !1;
            for (let r of this.value)
              if (((i = this.isDateEquals(r, e)), i)) break;
            return i;
          } else if (this.isRangeSelection())
            return this.value[1]
              ? this.isDateEquals(this.value[0], e) ||
                  this.isDateEquals(this.value[1], e) ||
                  this.isDateBetween(this.value[0], this.value[1], e)
              : this.isDateEquals(this.value[0], e);
        } else return !1;
      }
      isComparable() {
        return this.value != null && typeof this.value != "string";
      }
      isMonthSelected(e) {
        if (this.isComparable() && !this.isMultipleSelection()) {
          let [i, r] = this.isRangeSelection()
              ? this.value
              : [this.value, this.value],
            o = new Date(this.currentYear, e, 1);
          return o >= i && o <= (r ?? i);
        }
        return !1;
      }
      isMonthDisabled(e, i) {
        let r = i ?? this.currentYear;
        for (let o = 1; o < this.getDaysCountInMonth(e, r) + 1; o++)
          if (this.isSelectable(o, e, r, !1)) return !1;
        return !0;
      }
      isYearDisabled(e) {
        return Array(12)
          .fill(0)
          .every((i, r) => this.isMonthDisabled(r, e));
      }
      isYearSelected(e) {
        if (!this.isComparable() || this.isMultipleSelection()) return !1;
        let i = this.isRangeSelection() ? this.value[0] : this.value;
        return i ? i.getFullYear() === e : !1;
      }
      isDateEquals(e, i) {
        return e && un.isDate(e)
          ? e.getDate() === i.day &&
              e.getMonth() === i.month &&
              e.getFullYear() === i.year
          : !1;
      }
      isDateBetween(e, i, r) {
        let o = !1;
        if (un.isDate(e) && un.isDate(i)) {
          let a = this.formatDateMetaToDate(r);
          return e.getTime() <= a.getTime() && i.getTime() >= a.getTime();
        }
        return o;
      }
      isSingleSelection() {
        return this.selectionMode === "single";
      }
      isRangeSelection() {
        return this.selectionMode === "range";
      }
      isMultipleSelection() {
        return this.selectionMode === "multiple";
      }
      isToday(e, i, r, o) {
        return e.getDate() === i && e.getMonth() === r && e.getFullYear() === o;
      }
      isSelectable(e, i, r, o) {
        let a = !0,
          s = !0,
          l = !0,
          d = !0;
        return o && !this.selectOtherMonths
          ? !1
          : (this.minDate &&
              (this.minDate.getFullYear() > r ||
                (this.minDate.getFullYear() === r &&
                  this.currentView != "year" &&
                  (this.minDate.getMonth() > i ||
                    (this.minDate.getMonth() === i &&
                      this.minDate.getDate() > e)))) &&
              (a = !1),
            this.maxDate &&
              (this.maxDate.getFullYear() < r ||
                (this.maxDate.getFullYear() === r &&
                  (this.maxDate.getMonth() < i ||
                    (this.maxDate.getMonth() === i &&
                      this.maxDate.getDate() < e)))) &&
              (s = !1),
            this.disabledDates && (l = !this.isDateDisabled(e, i, r)),
            this.disabledDays && (d = !this.isDayDisabled(e, i, r)),
            a && s && l && d);
      }
      isDateDisabled(e, i, r) {
        if (this.disabledDates) {
          for (let o of this.disabledDates)
            if (
              o.getFullYear() === r &&
              o.getMonth() === i &&
              o.getDate() === e
            )
              return !0;
        }
        return !1;
      }
      isDayDisabled(e, i, r) {
        if (this.disabledDays) {
          let a = new Date(r, i, e).getDay();
          return this.disabledDays.indexOf(a) !== -1;
        }
        return !1;
      }
      onInputFocus(e) {
        (this.focus = !0),
          this.showOnFocus && this.showOverlay(),
          this.onFocus.emit(e);
      }
      onInputClick() {
        this.showOnFocus && !this.overlayVisible && this.showOverlay();
      }
      onInputBlur(e) {
        (this.focus = !1),
          this.onBlur.emit(e),
          this.keepInvalid || this.updateInputfield(),
          this.onModelTouched();
      }
      onButtonClick(e, i = this.inputfieldViewChild?.nativeElement) {
        this.overlayVisible
          ? this.hideOverlay()
          : (i.focus(), this.showOverlay());
      }
      clear() {
        (this.inputFieldValue = null),
          (this.value = null),
          this.onModelChange(this.value),
          this.onClear.emit();
      }
      onOverlayClick(e) {
        this.overlayService.add({
          originalEvent: e,
          target: this.el.nativeElement,
        });
      }
      getMonthName(e) {
        return this.config.getTranslation("monthNames")[e];
      }
      getYear(e) {
        return this.currentView === "month" ? this.currentYear : e.year;
      }
      switchViewButtonDisabled() {
        return this.numberOfMonths > 1 || this.disabled;
      }
      onPrevButtonClick(e) {
        (this.navigationState = { backward: !0, button: !0 }),
          this.navBackward(e);
      }
      onNextButtonClick(e) {
        (this.navigationState = { backward: !1, button: !0 }),
          this.navForward(e);
      }
      onContainerButtonKeydown(e) {
        switch (e.which) {
          case 9:
            if ((this.inline || this.trapFocus(e), this.inline)) {
              let i = ge.findSingle(
                  this.containerViewChild?.nativeElement,
                  ".p-datepicker-header"
                ),
                r = e.target;
              if (this.timeOnly) return;
              r == i.children[i?.children?.length - 1] &&
                this.initFocusableCell();
            }
            break;
          case 27:
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          default:
            break;
        }
      }
      onInputKeydown(e) {
        (this.isKeydown = !0),
          e.keyCode === 40 && this.contentViewChild
            ? this.trapFocus(e)
            : e.keyCode === 27
            ? this.overlayVisible &&
              (this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault())
            : e.keyCode === 13
            ? this.overlayVisible &&
              ((this.overlayVisible = !1), e.preventDefault())
            : e.keyCode === 9 &&
              this.contentViewChild &&
              (ge
                .getFocusableElements(this.contentViewChild.nativeElement)
                .forEach((i) => (i.tabIndex = "-1")),
              this.overlayVisible && (this.overlayVisible = !1));
      }
      onDateCellKeydown(e, i, r) {
        let o = e.currentTarget,
          a = o.parentElement,
          s = this.formatDateMetaToDate(i);
        switch (e.which) {
          case 40: {
            o.tabIndex = "-1";
            let S = ge.index(a),
              T = a.parentElement.nextElementSibling;
            if (T) {
              let k = T.children[S].children[0];
              ge.hasClass(k, "p-disabled")
                ? ((this.navigationState = { backward: !1 }),
                  this.navForward(e))
                : ((T.children[S].children[0].tabIndex = "0"),
                  T.children[S].children[0].focus());
            } else
              (this.navigationState = { backward: !1 }), this.navForward(e);
            e.preventDefault();
            break;
          }
          case 38: {
            o.tabIndex = "-1";
            let S = ge.index(a),
              T = a.parentElement.previousElementSibling;
            if (T) {
              let k = T.children[S].children[0];
              ge.hasClass(k, "p-disabled")
                ? ((this.navigationState = { backward: !0 }),
                  this.navBackward(e))
                : ((k.tabIndex = "0"), k.focus());
            } else
              (this.navigationState = { backward: !0 }), this.navBackward(e);
            e.preventDefault();
            break;
          }
          case 37: {
            o.tabIndex = "-1";
            let S = a.previousElementSibling;
            if (S) {
              let T = S.children[0];
              ge.hasClass(T, "p-disabled") ||
              ge.hasClass(T.parentElement, "p-datepicker-weeknumber")
                ? this.navigateToMonth(!0, r)
                : ((T.tabIndex = "0"), T.focus());
            } else this.navigateToMonth(!0, r);
            e.preventDefault();
            break;
          }
          case 39: {
            o.tabIndex = "-1";
            let S = a.nextElementSibling;
            if (S) {
              let T = S.children[0];
              ge.hasClass(T, "p-disabled")
                ? this.navigateToMonth(!1, r)
                : ((T.tabIndex = "0"), T.focus());
            } else this.navigateToMonth(!1, r);
            e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onDateSelect(e, i), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          case 33: {
            o.tabIndex = "-1";
            let S = new Date(s.getFullYear(), s.getMonth() - 1, s.getDate()),
              T = this.formatDateKey(S);
            this.navigateToMonth(
              !0,
              r,
              `span[data-date='${T}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 34: {
            o.tabIndex = "-1";
            let S = new Date(s.getFullYear(), s.getMonth() + 1, s.getDate()),
              T = this.formatDateKey(S);
            this.navigateToMonth(
              !1,
              r,
              `span[data-date='${T}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 36:
            o.tabIndex = "-1";
            let l = new Date(s.getFullYear(), s.getMonth(), 1),
              d = this.formatDateKey(l),
              m = ge.findSingle(
                o.offsetParent,
                `span[data-date='${d}']:not(.p-disabled):not(.p-ink)`
              );
            m && ((m.tabIndex = "0"), m.focus()), e.preventDefault();
            break;
          case 35:
            o.tabIndex = "-1";
            let v = new Date(s.getFullYear(), s.getMonth() + 1, 0),
              x = this.formatDateKey(v),
              C = ge.findSingle(
                o.offsetParent,
                `span[data-date='${x}']:not(.p-disabled):not(.p-ink)`
              );
            v && ((C.tabIndex = "0"), C.focus()), e.preventDefault();
            break;
          default:
            break;
        }
      }
      onMonthCellKeydown(e, i) {
        let r = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            r.tabIndex = "-1";
            var o = r.parentElement.children,
              a = ge.index(r);
            let s = o[e.which === 40 ? a + 3 : a - 3];
            s && ((s.tabIndex = "0"), s.focus()), e.preventDefault();
            break;
          }
          case 37: {
            r.tabIndex = "-1";
            let s = r.previousElementSibling;
            s
              ? ((s.tabIndex = "0"), s.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            r.tabIndex = "-1";
            let s = r.nextElementSibling;
            s
              ? ((s.tabIndex = "0"), s.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onMonthSelect(e, i), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      onYearCellKeydown(e, i) {
        let r = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            r.tabIndex = "-1";
            var o = r.parentElement.children,
              a = ge.index(r);
            let s = o[e.which === 40 ? a + 2 : a - 2];
            s && ((s.tabIndex = "0"), s.focus()), e.preventDefault();
            break;
          }
          case 37: {
            r.tabIndex = "-1";
            let s = r.previousElementSibling;
            s
              ? ((s.tabIndex = "0"), s.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            r.tabIndex = "-1";
            let s = r.nextElementSibling;
            s
              ? ((s.tabIndex = "0"), s.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onYearSelect(e, i), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      navigateToMonth(e, i, r) {
        if (e)
          if (this.numberOfMonths === 1 || i === 0)
            (this.navigationState = { backward: !0 }),
              (this._focusKey = r),
              this.navBackward(event);
          else {
            let o = this.contentViewChild.nativeElement.children[i - 1];
            if (r) {
              let a = ge.findSingle(o, r);
              (a.tabIndex = "0"), a.focus();
            } else {
              let a = ge.find(
                  o,
                  ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                ),
                s = a[a.length - 1];
              (s.tabIndex = "0"), s.focus();
            }
          }
        else if (this.numberOfMonths === 1 || i === this.numberOfMonths - 1)
          (this.navigationState = { backward: !1 }),
            (this._focusKey = r),
            this.navForward(event);
        else {
          let o = this.contentViewChild.nativeElement.children[i + 1];
          if (r) {
            let a = ge.findSingle(o, r);
            (a.tabIndex = "0"), a.focus();
          } else {
            let a = ge.findSingle(
              o,
              ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
            );
            (a.tabIndex = "0"), a.focus();
          }
        }
      }
      updateFocus() {
        let e;
        if (this.navigationState) {
          if (this.navigationState.button)
            this.initFocusableCell(),
              this.navigationState.backward
                ? ge
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-prev"
                    )
                    .focus()
                : ge
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-next"
                    )
                    .focus();
          else {
            if (this.navigationState.backward) {
              let i;
              this.currentView === "month"
                ? (i = ge.find(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (i = ge.find(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (i = ge.find(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  )),
                i && i.length > 0 && (e = i[i.length - 1]);
            } else
              this.currentView === "month"
                ? (e = ge.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (e = ge.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (e = ge.findSingle(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  ));
            e && ((e.tabIndex = "0"), e.focus());
          }
          (this.navigationState = null), (this._focusKey = null);
        } else this.initFocusableCell();
        this.alignOverlay();
      }
      initFocusableCell() {
        let e = this.contentViewChild?.nativeElement,
          i;
        if (this.currentView === "month") {
          let r = ge.find(
              e,
              ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
            ),
            o = ge.findSingle(
              e,
              ".p-monthpicker .p-monthpicker-month.p-highlight"
            );
          r.forEach((a) => (a.tabIndex = -1)),
            (i = o || r[0]),
            r.length === 0 &&
              ge
                .find(
                  e,
                  '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = "0"]'
                )
                .forEach((s) => (s.tabIndex = -1));
        } else if (this.currentView === "year") {
          let r = ge.find(
              e,
              ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
            ),
            o = ge.findSingle(
              e,
              ".p-yearpicker .p-yearpicker-year.p-highlight"
            );
          r.forEach((a) => (a.tabIndex = -1)),
            (i = o || r[0]),
            r.length === 0 &&
              ge
                .find(
                  e,
                  '.p-yearpicker .p-yearpicker-year.p-disabled[tabindex = "0"]'
                )
                .forEach((s) => (s.tabIndex = -1));
        } else if (((i = ge.findSingle(e, "span.p-highlight")), !i)) {
          let r = ge.findSingle(
            e,
            "td.p-datepicker-today span:not(.p-disabled):not(.p-ink)"
          );
          r
            ? (i = r)
            : (i = ge.findSingle(
                e,
                ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
              ));
        }
        i &&
          ((i.tabIndex = "0"),
          !this.preventFocus &&
            (!this.navigationState || !this.navigationState.button) &&
            setTimeout(() => {
              this.disabled || i.focus();
            }, 1),
          (this.preventFocus = !1));
      }
      trapFocus(e) {
        let i = ge.getFocusableElements(this.contentViewChild.nativeElement);
        if (i && i.length > 0)
          if (!i[0].ownerDocument.activeElement) i[0].focus();
          else {
            let r = i.indexOf(i[0].ownerDocument.activeElement);
            if (e.shiftKey)
              if (r == -1 || r === 0)
                if (this.focusTrap) i[i.length - 1].focus();
                else {
                  if (r === -1) return this.hideOverlay();
                  if (r === 0) return;
                }
              else i[r - 1].focus();
            else if (r == -1)
              if (this.timeOnly) i[0].focus();
              else {
                let o = 0;
                for (let a = 0; a < i.length; a++)
                  i[a].tagName === "SPAN" && (o = a);
                i[o].focus();
              }
            else if (r === i.length - 1) {
              if (!this.focusTrap && r != -1) return this.hideOverlay();
              i[0].focus();
            } else i[r + 1].focus();
          }
        e.preventDefault();
      }
      onMonthDropdownChange(e) {
        (this.currentMonth = parseInt(e)),
          this.onMonthChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      onYearDropdownChange(e) {
        (this.currentYear = parseInt(e)),
          this.onYearChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      convertTo24Hour(e, i) {
        return this.hourFormat == "12"
          ? e === 12
            ? i
              ? 12
              : 0
            : i
            ? e + 12
            : e
          : e;
      }
      constrainTime(e, i, r, o) {
        let a = [e, i, r],
          s,
          l = this.value,
          d = this.convertTo24Hour(e, o),
          m = this.isRangeSelection(),
          v = this.isMultipleSelection();
        (m || v) &&
          (this.value || (this.value = [new Date(), new Date()]),
          m && (l = this.value[1] || this.value[0]),
          v && (l = this.value[this.value.length - 1]));
        let C = l ? l.toDateString() : null,
          S = this.minDate && C && this.minDate.toDateString() === C,
          T = this.maxDate && C && this.maxDate.toDateString() === C;
        switch ((S && (s = this.minDate.getHours() >= 12), !0)) {
          case S &&
            s &&
            this.minDate.getHours() === 12 &&
            this.minDate.getHours() > d:
            a[0] = 11;
          case S &&
            this.minDate.getHours() === d &&
            this.minDate.getMinutes() > i:
            a[1] = this.minDate.getMinutes();
          case S &&
            this.minDate.getHours() === d &&
            this.minDate.getMinutes() === i &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case S &&
            !s &&
            this.minDate.getHours() - 1 === d &&
            this.minDate.getHours() > d:
            (a[0] = 11), (this.pm = !0);
          case S &&
            this.minDate.getHours() === d &&
            this.minDate.getMinutes() > i:
            a[1] = this.minDate.getMinutes();
          case S &&
            this.minDate.getHours() === d &&
            this.minDate.getMinutes() === i &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case S && s && this.minDate.getHours() > d && d !== 12:
            this.setCurrentHourPM(this.minDate.getHours()),
              (a[0] = this.currentHour);
          case S &&
            this.minDate.getHours() === d &&
            this.minDate.getMinutes() > i:
            a[1] = this.minDate.getMinutes();
          case S &&
            this.minDate.getHours() === d &&
            this.minDate.getMinutes() === i &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case S && this.minDate.getHours() > d:
            a[0] = this.minDate.getHours();
          case S &&
            this.minDate.getHours() === d &&
            this.minDate.getMinutes() > i:
            a[1] = this.minDate.getMinutes();
          case S &&
            this.minDate.getHours() === d &&
            this.minDate.getMinutes() === i &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case T && this.maxDate.getHours() < d:
            a[0] = this.maxDate.getHours();
          case T &&
            this.maxDate.getHours() === d &&
            this.maxDate.getMinutes() < i:
            a[1] = this.maxDate.getMinutes();
          case T &&
            this.maxDate.getHours() === d &&
            this.maxDate.getMinutes() === i &&
            this.maxDate.getSeconds() < r:
            a[2] = this.maxDate.getSeconds();
            break;
        }
        return a;
      }
      incrementHour(e) {
        let i = this.currentHour ?? 0,
          r = (this.currentHour ?? 0) + this.stepHour,
          o = this.pm;
        this.hourFormat == "24"
          ? (r = r >= 24 ? r - 24 : r)
          : this.hourFormat == "12" &&
            (i < 12 && r > 11 && (o = !this.pm), (r = r >= 13 ? r - 12 : r)),
          this.toggleAMPMIfNotMinDate(o),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(r, this.currentMinute, this.currentSecond, o)),
          e.preventDefault();
      }
      toggleAMPMIfNotMinDate(e) {
        let i = this.value;
        (this.selectionMode == "range" || this.selectionMode == "multiple") &&
          Array.isArray(i) &&
          i.length > 0 &&
          (i = i[i.length - 1]);
        let r = i ? i.toDateString() : null;
        this.minDate &&
        r &&
        this.minDate.toDateString() === r &&
        this.minDate.getHours() >= 12
          ? (this.pm = !0)
          : (this.pm = e);
      }
      onTimePickerElementMouseDown(e, i, r) {
        this.disabled || (this.repeat(e, null, i, r), e.preventDefault());
      }
      onTimePickerElementMouseUp(e) {
        this.disabled || (this.clearTimePickerTimer(), this.updateTime());
      }
      onTimePickerElementMouseLeave() {
        !this.disabled &&
          this.timePickerTimer &&
          (this.clearTimePickerTimer(), this.updateTime());
      }
      repeat(e, i, r, o) {
        let a = i || 500;
        switch (
          (this.clearTimePickerTimer(),
          (this.timePickerTimer = setTimeout(() => {
            this.repeat(e, 100, r, o), this.cd.markForCheck();
          }, a)),
          r)
        ) {
          case 0:
            o === 1 ? this.incrementHour(e) : this.decrementHour(e);
            break;
          case 1:
            o === 1 ? this.incrementMinute(e) : this.decrementMinute(e);
            break;
          case 2:
            o === 1 ? this.incrementSecond(e) : this.decrementSecond(e);
            break;
        }
        this.updateInputfield();
      }
      clearTimePickerTimer() {
        this.timePickerTimer &&
          (clearTimeout(this.timePickerTimer), (this.timePickerTimer = null));
      }
      decrementHour(e) {
        let i = (this.currentHour ?? 0) - this.stepHour,
          r = this.pm;
        this.hourFormat == "24"
          ? (i = i < 0 ? 24 + i : i)
          : this.hourFormat == "12" &&
            (this.currentHour === 12 && (r = !this.pm),
            (i = i <= 0 ? 12 + i : i)),
          this.toggleAMPMIfNotMinDate(r),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(i, this.currentMinute, this.currentSecond, r)),
          e.preventDefault();
      }
      incrementMinute(e) {
        let i = (this.currentMinute ?? 0) + this.stepMinute;
        (i = i > 59 ? i - 60 : i),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              i,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      decrementMinute(e) {
        let i = (this.currentMinute ?? 0) - this.stepMinute;
        (i = i < 0 ? 60 + i : i),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              i,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      incrementSecond(e) {
        let i = this.currentSecond + this.stepSecond;
        (i = i > 59 ? i - 60 : i),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              i,
              this.pm
            )),
          e.preventDefault();
      }
      decrementSecond(e) {
        let i = this.currentSecond - this.stepSecond;
        (i = i < 0 ? 60 + i : i),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              i,
              this.pm
            )),
          e.preventDefault();
      }
      updateTime() {
        let e = this.value;
        this.isRangeSelection() && (e = this.value[1] || this.value[0]),
          this.isMultipleSelection() && (e = this.value[this.value.length - 1]),
          (e = e ? new Date(e.getTime()) : new Date()),
          this.hourFormat == "12"
            ? this.currentHour === 12
              ? e.setHours(this.pm ? 12 : 0)
              : e.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
            : e.setHours(this.currentHour),
          e.setMinutes(this.currentMinute),
          e.setSeconds(this.currentSecond),
          this.isRangeSelection() &&
            (this.value[1] ? (e = [this.value[0], e]) : (e = [e, null])),
          this.isMultipleSelection() && (e = [...this.value.slice(0, -1), e]),
          this.updateModel(e),
          this.onSelect.emit(e),
          this.updateInputfield();
      }
      toggleAMPM(e) {
        let i = !this.pm;
        (this.pm = i),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              this.currentSecond,
              i
            )),
          this.updateTime(),
          e.preventDefault();
      }
      onUserInput(e) {
        if (!this.isKeydown) return;
        this.isKeydown = !1;
        let i = e.target.value;
        try {
          let r = this.parseValueFromString(i);
          this.isValidSelection(r)
            ? (this.updateModel(r), this.updateUI())
            : this.keepInvalid && this.updateModel(r);
        } catch {
          let o = this.keepInvalid ? i : null;
          this.updateModel(o);
        }
        (this.filled = i != null && i.length), this.onInput.emit(e);
      }
      isValidSelection(e) {
        if (this.isSingleSelection())
          return this.isSelectable(
            e.getDate(),
            e.getMonth(),
            e.getFullYear(),
            !1
          );
        let i = e.every((r) =>
          this.isSelectable(r.getDate(), r.getMonth(), r.getFullYear(), !1)
        );
        return (
          i &&
            this.isRangeSelection() &&
            (i = e.length === 1 || (e.length > 1 && e[1] >= e[0])),
          i
        );
      }
      parseValueFromString(e) {
        if (!e || e.trim().length === 0) return null;
        let i;
        if (this.isSingleSelection()) i = this.parseDateTime(e);
        else if (this.isMultipleSelection()) {
          let r = e.split(this.multipleSeparator);
          i = [];
          for (let o of r) i.push(this.parseDateTime(o.trim()));
        } else if (this.isRangeSelection()) {
          let r = e.split(" " + this.rangeSeparator + " ");
          i = [];
          for (let o = 0; o < r.length; o++)
            i[o] = this.parseDateTime(r[o].trim());
        }
        return i;
      }
      parseDateTime(e) {
        let i,
          r = e.split(" ");
        if (this.timeOnly) (i = new Date()), this.populateTime(i, r[0], r[1]);
        else {
          let o = this.getDateFormat();
          if (this.showTime) {
            let a = this.hourFormat == "12" ? r.pop() : null,
              s = r.pop();
            (i = this.parseDate(r.join(" "), o)), this.populateTime(i, s, a);
          } else i = this.parseDate(e, o);
        }
        return i;
      }
      populateTime(e, i, r) {
        if (this.hourFormat == "12" && !r) throw "Invalid Time";
        this.pm = r === "PM" || r === "pm";
        let o = this.parseTime(i);
        e.setHours(o.hour), e.setMinutes(o.minute), e.setSeconds(o.second);
      }
      isValidDate(e) {
        return un.isDate(e) && un.isNotEmpty(e);
      }
      updateUI() {
        let e = this.value;
        Array.isArray(e) && (e = e[1] || e[0]);
        let i =
          this.defaultDate && this.isValidDate(this.defaultDate) && !this.value
            ? this.defaultDate
            : e && this.isValidDate(e)
            ? e
            : new Date();
        (this.currentMonth = i.getMonth()),
          (this.currentYear = i.getFullYear()),
          this.createMonths(this.currentMonth, this.currentYear),
          (this.showTime || this.timeOnly) &&
            (this.setCurrentHourPM(i.getHours()),
            (this.currentMinute = i.getMinutes()),
            (this.currentSecond = i.getSeconds()));
      }
      showOverlay() {
        this.overlayVisible ||
          (this.updateUI(),
          this.touchUI || (this.preventFocus = !0),
          (this.overlayVisible = !0));
      }
      hideOverlay() {
        this.inputfieldViewChild?.nativeElement.focus(),
          (this.overlayVisible = !1),
          this.clearTimePickerTimer(),
          this.touchUI && this.disableModality(),
          this.cd.markForCheck();
      }
      toggle() {
        this.inline ||
          (this.overlayVisible
            ? this.hideOverlay()
            : (this.showOverlay(),
              this.inputfieldViewChild?.nativeElement.focus()));
      }
      onOverlayAnimationStart(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              ((this.overlay = e.element),
              this.overlay?.setAttribute(this.attributeSelector, ""),
              this.appendOverlay(),
              this.updateFocus(),
              this.autoZIndex &&
                (this.touchUI
                  ? Ul.set(
                      "modal",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.modal
                    )
                  : Ul.set(
                      "overlay",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.overlay
                    )),
              this.alignOverlay(),
              this.onShow.emit(e));
            break;
          case "void":
            this.onOverlayHide(), this.onClose.emit(e);
            break;
        }
      }
      onOverlayAnimationDone(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              (this.bindDocumentClickListener(),
              this.bindDocumentResizeListener(),
              this.bindScrollListener());
            break;
          case "void":
            this.autoZIndex && Ul.clear(e.element);
            break;
        }
      }
      appendOverlay() {
        this.appendTo &&
          (this.appendTo === "body"
            ? this.document.body.appendChild(this.overlay)
            : ge.appendChild(this.overlay, this.appendTo));
      }
      restoreOverlayAppend() {
        this.overlay &&
          this.appendTo &&
          this.el.nativeElement.appendChild(this.overlay);
      }
      alignOverlay() {
        this.touchUI
          ? this.enableModality(this.overlay)
          : this.overlay &&
            (this.appendTo
              ? (this.view === "date"
                  ? (this.overlay.style.width ||
                      (this.overlay.style.width =
                        ge.getOuterWidth(this.overlay) + "px"),
                    this.overlay.style.minWidth ||
                      (this.overlay.style.minWidth =
                        ge.getOuterWidth(
                          this.inputfieldViewChild?.nativeElement
                        ) + "px"))
                  : this.overlay.style.width ||
                    (this.overlay.style.width =
                      ge.getOuterWidth(
                        this.inputfieldViewChild?.nativeElement
                      ) + "px"),
                ge.absolutePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ))
              : ge.relativePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ));
      }
      enableModality(e) {
        !this.mask &&
          this.touchUI &&
          ((this.mask = this.renderer.createElement("div")),
          this.renderer.setStyle(
            this.mask,
            "zIndex",
            String(parseInt(e.style.zIndex) - 1)
          ),
          ge.addMultipleClasses(
            this.mask,
            "p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter"
          ),
          (this.maskClickListener = this.renderer.listen(
            this.mask,
            "click",
            (r) => {
              this.disableModality(), (this.overlayVisible = !1);
            }
          )),
          this.renderer.appendChild(this.document.body, this.mask),
          ge.blockBodyScroll());
      }
      disableModality() {
        this.mask &&
          (ge.addClass(this.mask, "p-component-overlay-leave"),
          this.animationEndListener ||
            (this.animationEndListener = this.renderer.listen(
              this.mask,
              "animationend",
              this.destroyMask.bind(this)
            )));
      }
      destroyMask() {
        if (!this.mask) return;
        this.renderer.removeChild(this.document.body, this.mask);
        let e = this.document.body.children,
          i;
        for (let r = 0; r < e.length; r++) {
          let o = e[r];
          if (ge.hasClass(o, "p-datepicker-mask-scrollblocker")) {
            i = !0;
            break;
          }
        }
        i || ge.unblockBodyScroll(),
          this.unbindAnimationEndListener(),
          this.unbindMaskClickListener(),
          (this.mask = null);
      }
      unbindMaskClickListener() {
        this.maskClickListener &&
          (this.maskClickListener(), (this.maskClickListener = null));
      }
      unbindAnimationEndListener() {
        this.animationEndListener &&
          this.mask &&
          (this.animationEndListener(), (this.animationEndListener = null));
      }
      writeValue(e) {
        if (((this.value = e), this.value && typeof this.value == "string"))
          try {
            this.value = this.parseValueFromString(this.value);
          } catch {
            this.keepInvalid && (this.value = e);
          }
        this.updateInputfield(), this.updateUI(), this.cd.markForCheck();
      }
      registerOnChange(e) {
        this.onModelChange = e;
      }
      registerOnTouched(e) {
        this.onModelTouched = e;
      }
      setDisabledState(e) {
        (this.disabled = e), this.cd.markForCheck();
      }
      getDateFormat() {
        return this.dateFormat || this.getTranslation("dateFormat");
      }
      getFirstDateOfWeek() {
        return (
          this._firstDayOfWeek || this.getTranslation(Vn.FIRST_DAY_OF_WEEK)
        );
      }
      formatDate(e, i) {
        if (!e) return "";
        let r,
          o = (m) => {
            let v = r + 1 < i.length && i.charAt(r + 1) === m;
            return v && r++, v;
          },
          a = (m, v, x) => {
            let C = "" + v;
            if (o(m)) for (; C.length < x; ) C = "0" + C;
            return C;
          },
          s = (m, v, x, C) => (o(m) ? C[v] : x[v]),
          l = "",
          d = !1;
        if (e)
          for (r = 0; r < i.length; r++)
            if (d)
              i.charAt(r) === "'" && !o("'") ? (d = !1) : (l += i.charAt(r));
            else
              switch (i.charAt(r)) {
                case "d":
                  l += a("d", e.getDate(), 2);
                  break;
                case "D":
                  l += s(
                    "D",
                    e.getDay(),
                    this.getTranslation(Vn.DAY_NAMES_SHORT),
                    this.getTranslation(Vn.DAY_NAMES)
                  );
                  break;
                case "o":
                  l += a(
                    "o",
                    Math.round(
                      (new Date(
                        e.getFullYear(),
                        e.getMonth(),
                        e.getDate()
                      ).getTime() -
                        new Date(e.getFullYear(), 0, 0).getTime()) /
                        864e5
                    ),
                    3
                  );
                  break;
                case "m":
                  l += a("m", e.getMonth() + 1, 2);
                  break;
                case "M":
                  l += s(
                    "M",
                    e.getMonth(),
                    this.getTranslation(Vn.MONTH_NAMES_SHORT),
                    this.getTranslation(Vn.MONTH_NAMES)
                  );
                  break;
                case "y":
                  l += o("y")
                    ? e.getFullYear()
                    : (e.getFullYear() % 100 < 10 ? "0" : "") +
                      (e.getFullYear() % 100);
                  break;
                case "@":
                  l += e.getTime();
                  break;
                case "!":
                  l += e.getTime() * 1e4 + this.ticksTo1970;
                  break;
                case "'":
                  o("'") ? (l += "'") : (d = !0);
                  break;
                default:
                  l += i.charAt(r);
              }
        return l;
      }
      formatTime(e) {
        if (!e) return "";
        let i = "",
          r = e.getHours(),
          o = e.getMinutes(),
          a = e.getSeconds();
        return (
          this.hourFormat == "12" && r > 11 && r != 12 && (r -= 12),
          this.hourFormat == "12"
            ? (i += r === 0 ? 12 : r < 10 ? "0" + r : r)
            : (i += r < 10 ? "0" + r : r),
          (i += ":"),
          (i += o < 10 ? "0" + o : o),
          this.showSeconds && ((i += ":"), (i += a < 10 ? "0" + a : a)),
          this.hourFormat == "12" && (i += e.getHours() > 11 ? " PM" : " AM"),
          i
        );
      }
      parseTime(e) {
        let i = e.split(":"),
          r = this.showSeconds ? 3 : 2;
        if (i.length !== r) throw "Invalid time";
        let o = parseInt(i[0]),
          a = parseInt(i[1]),
          s = this.showSeconds ? parseInt(i[2]) : null;
        if (
          isNaN(o) ||
          isNaN(a) ||
          o > 23 ||
          a > 59 ||
          (this.hourFormat == "12" && o > 12) ||
          (this.showSeconds && (isNaN(s) || s > 59))
        )
          throw "Invalid time";
        return (
          this.hourFormat == "12" &&
            (o !== 12 && this.pm
              ? (o += 12)
              : !this.pm && o === 12 && (o -= 12)),
          { hour: o, minute: a, second: s }
        );
      }
      parseDate(e, i) {
        if (i == null || e == null) throw "Invalid arguments";
        if (((e = typeof e == "object" ? e.toString() : e + ""), e === ""))
          return null;
        let r,
          o,
          a,
          s = 0,
          l =
            typeof this.shortYearCutoff != "string"
              ? this.shortYearCutoff
              : (new Date().getFullYear() % 100) +
                parseInt(this.shortYearCutoff, 10),
          d = -1,
          m = -1,
          v = -1,
          x = -1,
          C = !1,
          S,
          T = (K) => {
            let oe = r + 1 < i.length && i.charAt(r + 1) === K;
            return oe && r++, oe;
          },
          k = (K) => {
            let oe = T(K),
              ee =
                K === "@"
                  ? 14
                  : K === "!"
                  ? 20
                  : K === "y" && oe
                  ? 4
                  : K === "o"
                  ? 3
                  : 2,
              b = K === "y" ? ee : 1,
              me = new RegExp("^\\d{" + b + "," + ee + "}"),
              re = e.substring(s).match(me);
            if (!re) throw "Missing number at position " + s;
            return (s += re[0].length), parseInt(re[0], 10);
          },
          P = (K, oe, ee) => {
            let b = -1,
              me = T(K) ? ee : oe,
              re = [];
            for (let _e = 0; _e < me.length; _e++) re.push([_e, me[_e]]);
            re.sort((_e, He) => -(_e[1].length - He[1].length));
            for (let _e = 0; _e < re.length; _e++) {
              let He = re[_e][1];
              if (e.substr(s, He.length).toLowerCase() === He.toLowerCase()) {
                (b = re[_e][0]), (s += He.length);
                break;
              }
            }
            if (b !== -1) return b + 1;
            throw "Unknown name at position " + s;
          },
          j = () => {
            if (e.charAt(s) !== i.charAt(r))
              throw "Unexpected literal at position " + s;
            s++;
          };
        for (this.view === "month" && (v = 1), r = 0; r < i.length; r++)
          if (C) i.charAt(r) === "'" && !T("'") ? (C = !1) : j();
          else
            switch (i.charAt(r)) {
              case "d":
                v = k("d");
                break;
              case "D":
                P(
                  "D",
                  this.getTranslation(Vn.DAY_NAMES_SHORT),
                  this.getTranslation(Vn.DAY_NAMES)
                );
                break;
              case "o":
                x = k("o");
                break;
              case "m":
                m = k("m");
                break;
              case "M":
                m = P(
                  "M",
                  this.getTranslation(Vn.MONTH_NAMES_SHORT),
                  this.getTranslation(Vn.MONTH_NAMES)
                );
                break;
              case "y":
                d = k("y");
                break;
              case "@":
                (S = new Date(k("@"))),
                  (d = S.getFullYear()),
                  (m = S.getMonth() + 1),
                  (v = S.getDate());
                break;
              case "!":
                (S = new Date((k("!") - this.ticksTo1970) / 1e4)),
                  (d = S.getFullYear()),
                  (m = S.getMonth() + 1),
                  (v = S.getDate());
                break;
              case "'":
                T("'") ? j() : (C = !0);
                break;
              default:
                j();
            }
        if (s < e.length && ((a = e.substr(s)), !/^\s+/.test(a)))
          throw "Extra/unparsed characters found in date: " + a;
        if (
          (d === -1
            ? (d = new Date().getFullYear())
            : d < 100 &&
              (d +=
                new Date().getFullYear() -
                (new Date().getFullYear() % 100) +
                (d <= l ? 0 : -100)),
          x > -1)
        ) {
          (m = 1), (v = x);
          do {
            if (((o = this.getDaysCountInMonth(d, m - 1)), v <= o)) break;
            m++, (v -= o);
          } while (!0);
        }
        if (
          (this.view === "year" &&
            ((m = m === -1 ? 1 : m), (v = v === -1 ? 1 : v)),
          (S = this.daylightSavingAdjust(new Date(d, m - 1, v))),
          S.getFullYear() !== d || S.getMonth() + 1 !== m || S.getDate() !== v)
        )
          throw "Invalid date";
        return S;
      }
      daylightSavingAdjust(e) {
        return e
          ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
          : null;
      }
      updateFilledState() {
        this.filled = this.inputFieldValue && this.inputFieldValue != "";
      }
      isValidDateForTimeConstraints(e) {
        return this.keepInvalid
          ? !0
          : (!this.minDate || e >= this.minDate) &&
              (!this.maxDate || e <= this.maxDate);
      }
      onTodayButtonClick(e) {
        let i = new Date(),
          r = {
            day: i.getDate(),
            month: i.getMonth(),
            year: i.getFullYear(),
            otherMonth:
              i.getMonth() !== this.currentMonth ||
              i.getFullYear() !== this.currentYear,
            today: !0,
            selectable: !0,
          };
        this.createMonths(i.getMonth(), i.getFullYear()),
          this.onDateSelect(e, r),
          this.onTodayClick.emit(i);
      }
      onClearButtonClick(e) {
        this.updateModel(null),
          this.updateInputfield(),
          this.hideOverlay(),
          this.onClearClick.emit(e);
      }
      createResponsiveStyle() {
        if (this.numberOfMonths > 1 && this.responsiveOptions) {
          this.responsiveStyleElement ||
            ((this.responsiveStyleElement =
              this.renderer.createElement("style")),
            (this.responsiveStyleElement.type = "text/css"),
            ge.setAttribute(
              this.responsiveStyleElement,
              "nonce",
              this.config?.csp()?.nonce
            ),
            this.renderer.appendChild(
              this.document.body,
              this.responsiveStyleElement
            ));
          let e = "";
          if (this.responsiveOptions) {
            let i = [...this.responsiveOptions]
              .filter((r) => !!(r.breakpoint && r.numMonths))
              .sort(
                (r, o) =>
                  -1 *
                  r.breakpoint.localeCompare(o.breakpoint, void 0, {
                    numeric: !0,
                  })
              );
            for (let r = 0; r < i.length; r++) {
              let { breakpoint: o, numMonths: a } = i[r],
                s = `
                        .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${a}) .p-datepicker-next {
                            display: inline-flex !important;
                        }
                    `;
              for (let l = a; l < this.numberOfMonths; l++)
                s += `
                            .p-datepicker[${
                              this.attributeSelector
                            }] .p-datepicker-group:nth-child(${l + 1}) {
                                display: none !important;
                            }
                        `;
              e += `
                        @media screen and (max-width: ${o}) {
                            ${s}
                        }
                    `;
            }
          }
          this.responsiveStyleElement.innerHTML = e;
        }
      }
      destroyResponsiveStyleElement() {
        this.responsiveStyleElement &&
          (this.responsiveStyleElement.remove(),
          (this.responsiveStyleElement = null));
      }
      bindDocumentClickListener() {
        this.documentClickListener ||
          this.zone.runOutsideAngular(() => {
            let e = this.el
              ? this.el.nativeElement.ownerDocument
              : this.document;
            this.documentClickListener = this.renderer.listen(
              e,
              "mousedown",
              (i) => {
                this.isOutsideClicked(i) &&
                  this.overlayVisible &&
                  this.zone.run(() => {
                    this.hideOverlay(),
                      this.onClickOutside.emit(i),
                      this.cd.markForCheck();
                  });
              }
            );
          });
      }
      unbindDocumentClickListener() {
        this.documentClickListener &&
          (this.documentClickListener(), (this.documentClickListener = null));
      }
      bindDocumentResizeListener() {
        !this.documentResizeListener &&
          !this.touchUI &&
          (this.documentResizeListener = this.renderer.listen(
            this.window,
            "resize",
            this.onWindowResize.bind(this)
          ));
      }
      unbindDocumentResizeListener() {
        this.documentResizeListener &&
          (this.documentResizeListener(), (this.documentResizeListener = null));
      }
      bindScrollListener() {
        this.scrollHandler ||
          (this.scrollHandler = new Du(
            this.containerViewChild?.nativeElement,
            () => {
              this.overlayVisible && this.hideOverlay();
            }
          )),
          this.scrollHandler.bindScrollListener();
      }
      unbindScrollListener() {
        this.scrollHandler && this.scrollHandler.unbindScrollListener();
      }
      isOutsideClicked(e) {
        return !(
          this.el.nativeElement.isSameNode(e.target) ||
          this.isNavIconClicked(e) ||
          this.el.nativeElement.contains(e.target) ||
          (this.overlay && this.overlay.contains(e.target))
        );
      }
      isNavIconClicked(e) {
        return (
          ge.hasClass(e.target, "p-datepicker-prev") ||
          ge.hasClass(e.target, "p-datepicker-prev-icon") ||
          ge.hasClass(e.target, "p-datepicker-next") ||
          ge.hasClass(e.target, "p-datepicker-next-icon")
        );
      }
      onWindowResize() {
        this.overlayVisible && !ge.isTouchDevice() && this.hideOverlay();
      }
      onOverlayHide() {
        (this.currentView = this.view),
          this.mask && this.destroyMask(),
          this.unbindDocumentClickListener(),
          this.unbindDocumentResizeListener(),
          this.unbindScrollListener(),
          (this.overlay = null);
      }
      ngOnDestroy() {
        this.scrollHandler &&
          (this.scrollHandler.destroy(), (this.scrollHandler = null)),
          this.translationSubscription &&
            this.translationSubscription.unsubscribe(),
          this.overlay && this.autoZIndex && Ul.clear(this.overlay),
          this.destroyResponsiveStyleElement(),
          this.clearTimePickerTimer(),
          this.restoreOverlayAppend(),
          this.onOverlayHide();
      }
      static ɵfac = function (i) {
        return new (i || n)(H(Oe), H(Ve), H(bi), H(et), H(Re), H(wu), H(Dx));
      };
      static ɵcmp = le({
        type: n,
        selectors: [["p-calendar"]],
        contentQueries: function (i, r, o) {
          if ((i & 1 && Pn(o, zl, 4), i & 2)) {
            let a;
            xt((a = Ct())) && (r.templates = a);
          }
        },
        viewQuery: function (i, r) {
          if ((i & 1 && (Xt(rR, 5), Xt(oR, 5), Xt(aR, 5)), i & 2)) {
            let o;
            xt((o = Ct())) && (r.containerViewChild = o.first),
              xt((o = Ct())) && (r.inputfieldViewChild = o.first),
              xt((o = Ct())) && (r.content = o.first);
          }
        },
        hostAttrs: [1, "p-element", "p-inputwrapper"],
        hostVars: 6,
        hostBindings: function (i, r) {
          i & 2 &&
            Te("p-inputwrapper-filled", r.filled)(
              "p-inputwrapper-focus",
              r.focus
            )("p-calendar-clearable", r.showClear && !r.disabled);
        },
        inputs: {
          iconDisplay: "iconDisplay",
          style: "style",
          styleClass: "styleClass",
          inputStyle: "inputStyle",
          inputId: "inputId",
          name: "name",
          inputStyleClass: "inputStyleClass",
          placeholder: "placeholder",
          ariaLabelledBy: "ariaLabelledBy",
          ariaLabel: "ariaLabel",
          iconAriaLabel: "iconAriaLabel",
          disabled: [2, "disabled", "disabled", Ee],
          dateFormat: "dateFormat",
          multipleSeparator: "multipleSeparator",
          rangeSeparator: "rangeSeparator",
          inline: [2, "inline", "inline", Ee],
          showOtherMonths: [2, "showOtherMonths", "showOtherMonths", Ee],
          selectOtherMonths: [2, "selectOtherMonths", "selectOtherMonths", Ee],
          showIcon: [2, "showIcon", "showIcon", Ee],
          icon: "icon",
          appendTo: "appendTo",
          readonlyInput: [2, "readonlyInput", "readonlyInput", Ee],
          shortYearCutoff: "shortYearCutoff",
          monthNavigator: [2, "monthNavigator", "monthNavigator", Ee],
          yearNavigator: [2, "yearNavigator", "yearNavigator", Ee],
          hourFormat: "hourFormat",
          timeOnly: [2, "timeOnly", "timeOnly", Ee],
          stepYearPicker: [2, "stepYearPicker", "stepYearPicker", _n],
          stepHour: [2, "stepHour", "stepHour", _n],
          stepMinute: [2, "stepMinute", "stepMinute", _n],
          stepSecond: [2, "stepSecond", "stepSecond", _n],
          showSeconds: [2, "showSeconds", "showSeconds", Ee],
          required: [2, "required", "required", Ee],
          showOnFocus: [2, "showOnFocus", "showOnFocus", Ee],
          showWeek: [2, "showWeek", "showWeek", Ee],
          startWeekFromFirstDayOfYear: "startWeekFromFirstDayOfYear",
          showClear: [2, "showClear", "showClear", Ee],
          dataType: "dataType",
          selectionMode: "selectionMode",
          maxDateCount: [2, "maxDateCount", "maxDateCount", _n],
          showButtonBar: [2, "showButtonBar", "showButtonBar", Ee],
          todayButtonStyleClass: "todayButtonStyleClass",
          clearButtonStyleClass: "clearButtonStyleClass",
          autofocus: [2, "autofocus", "autofocus", Ee],
          autoZIndex: [2, "autoZIndex", "autoZIndex", Ee],
          baseZIndex: [2, "baseZIndex", "baseZIndex", _n],
          panelStyleClass: "panelStyleClass",
          panelStyle: "panelStyle",
          keepInvalid: [2, "keepInvalid", "keepInvalid", Ee],
          hideOnDateTimeSelect: [
            2,
            "hideOnDateTimeSelect",
            "hideOnDateTimeSelect",
            Ee,
          ],
          touchUI: [2, "touchUI", "touchUI", Ee],
          timeSeparator: "timeSeparator",
          focusTrap: [2, "focusTrap", "focusTrap", Ee],
          showTransitionOptions: "showTransitionOptions",
          hideTransitionOptions: "hideTransitionOptions",
          tabindex: [2, "tabindex", "tabindex", _n],
          variant: "variant",
          minDate: "minDate",
          maxDate: "maxDate",
          disabledDates: "disabledDates",
          disabledDays: "disabledDays",
          yearRange: "yearRange",
          showTime: "showTime",
          responsiveOptions: "responsiveOptions",
          numberOfMonths: "numberOfMonths",
          firstDayOfWeek: "firstDayOfWeek",
          locale: "locale",
          view: "view",
          defaultDate: "defaultDate",
        },
        outputs: {
          onFocus: "onFocus",
          onBlur: "onBlur",
          onClose: "onClose",
          onSelect: "onSelect",
          onClear: "onClear",
          onInput: "onInput",
          onTodayClick: "onTodayClick",
          onClearClick: "onClearClick",
          onMonthChange: "onMonthChange",
          onYearChange: "onYearChange",
          onClickOutside: "onClickOutside",
          onShow: "onShow",
        },
        features: [Vt([qF]), Pt],
        ngContentSelectors: lR,
        decls: 4,
        vars: 12,
        consts: [
          ["container", ""],
          ["inputfield", ""],
          ["contentWrapper", ""],
          [3, "ngClass", "ngStyle"],
          [3, "ngIf"],
          [3, "class", "ngStyle", "ngClass", "click", 4, "ngIf"],
          [
            "type",
            "text",
            "role",
            "combobox",
            "aria-autocomplete",
            "none",
            "aria-haspopup",
            "dialog",
            "autocomplete",
            "off",
            "pAutoFocus",
            "",
            3,
            "focus",
            "keydown",
            "click",
            "blur",
            "input",
            "value",
            "readonly",
            "ngStyle",
            "placeholder",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "class",
            "p-datepicker-trigger p-button-icon-only",
            "tabindex",
            "0",
            3,
            "disabled",
            "click",
            4,
            "ngIf",
          ],
          [3, "styleClass", "click", 4, "ngIf"],
          ["class", "p-calendar-clear-icon", 3, "click", 4, "ngIf"],
          [3, "click", "styleClass"],
          [1, "p-calendar-clear-icon", 3, "click"],
          [4, "ngTemplateOutlet"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "tabindex",
            "0",
            1,
            "p-datepicker-trigger",
            "p-button-icon-only",
            3,
            "click",
            "disabled",
          ],
          [3, "ngClass", 4, "ngIf"],
          [3, "ngClass"],
          [3, "ngClass", "click", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "click", "ngClass"],
          [3, "click", "ngStyle", "ngClass"],
          ["class", "p-timepicker", 4, "ngIf"],
          ["class", "p-datepicker-buttonbar", 4, "ngIf"],
          [1, "p-datepicker-group-container"],
          ["class", "p-datepicker-group", 4, "ngFor", "ngForOf"],
          ["class", "p-monthpicker", 4, "ngIf"],
          ["class", "p-yearpicker", 4, "ngIf"],
          [1, "p-datepicker-group"],
          [1, "p-datepicker-header"],
          [
            "class",
            "p-datepicker-prev p-link",
            "type",
            "button",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            4,
            "ngIf",
          ],
          [1, "p-datepicker-title"],
          [
            "type",
            "button",
            "class",
            "p-datepicker-month p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          [
            "type",
            "button",
            "class",
            "p-datepicker-year p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          ["class", "p-datepicker-decade", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-next",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          [3, "styleClass", 4, "ngIf"],
          ["class", "p-datepicker-next-icon", 4, "ngIf"],
          ["class", "p-datepicker-calendar-container", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-prev",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          ["class", "p-datepicker-prev-icon", 4, "ngIf"],
          [3, "styleClass"],
          [1, "p-datepicker-prev-icon"],
          [
            "type",
            "button",
            1,
            "p-datepicker-month",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [
            "type",
            "button",
            1,
            "p-datepicker-year",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [1, "p-datepicker-decade"],
          [1, "p-datepicker-next-icon"],
          [1, "p-datepicker-calendar-container"],
          ["role", "grid", 1, "p-datepicker-calendar"],
          ["class", "p-datepicker-weekheader p-disabled", 4, "ngIf"],
          ["scope", "col", 4, "ngFor", "ngForOf"],
          [4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weekheader", "p-disabled"],
          ["scope", "col"],
          ["class", "p-datepicker-weeknumber", 4, "ngIf"],
          [3, "ngClass", 4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weeknumber"],
          [1, "p-disabled"],
          [
            "draggable",
            "false",
            "pRipple",
            "",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          ["class", "p-hidden-accessible", "aria-live", "polite", 4, "ngIf"],
          ["aria-live", "polite", 1, "p-hidden-accessible"],
          [1, "p-monthpicker"],
          [
            "class",
            "p-monthpicker-month",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-monthpicker-month",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-yearpicker"],
          [
            "class",
            "p-yearpicker-year",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-yearpicker-year",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-timepicker"],
          [1, "p-hour-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "keydown.enter",
            "keydown.space",
            "mousedown",
            "mouseup",
            "keyup.enter",
            "keyup.space",
            "mouseleave",
          ],
          [1, "p-separator"],
          [1, "p-minute-picker"],
          ["class", "p-separator", 4, "ngIf"],
          ["class", "p-second-picker", 4, "ngIf"],
          ["class", "p-ampm-picker", 4, "ngIf"],
          [1, "p-second-picker"],
          [1, "p-ampm-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "click",
            "keydown.enter",
          ],
          [1, "p-datepicker-buttonbar"],
          [
            "type",
            "button",
            "pButton",
            "",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            "label",
            "ngClass",
          ],
        ],
        template: function (i, r) {
          i & 1 &&
            (Jt(sR),
            h(0, "span", 3, 0),
            F(2, OR, 5, 22, "ng-template", 4)(3, YF, 9, 32, "div", 5),
            u()),
            i & 2 &&
              (Ue(r.styleClass),
              M(
                "ngClass",
                Ih(
                  6,
                  cR,
                  r.showIcon && r.iconDisplay === "input",
                  r.showIcon && r.iconDisplay === "button",
                  r.timeOnly,
                  r.disabled,
                  r.focus || r.overlayVisible
                )
              )("ngStyle", r.style),
              g(2),
              M("ngIf", !r.inline),
              g(),
              M("ngIf", r.inline || r.overlayVisible));
        },
        dependencies: () => [
          Gt,
          ti,
          rt,
          ha,
          wc,
          Ix,
          Mu,
          fg,
          $l,
          gg,
          _g,
          bg,
          vg,
          Su,
        ],
        styles: [
          `@layer primeng{.p-calendar{position:relative;display:inline-flex;max-width:100%}.p-calendar .p-inputtext{flex:1 1 auto;width:1%;text-overflow:ellipsis}.p-calendar-w-btn .p-inputtext{border-top-right-radius:0;border-bottom-right-radius:0}.p-calendar-w-btn .p-datepicker-trigger{border-top-left-radius:0;border-bottom-left-radius:0}.p-fluid .p-calendar{display:flex}.p-fluid .p-calendar .p-inputtext{width:1%}.p-calendar .p-datepicker{min-width:100%}.p-datepicker{width:auto;position:absolute;top:0;left:0}.p-datepicker-inline{display:inline-block;position:static;overflow-x:auto}.p-datepicker-header{display:flex;align-items:center;justify-content:space-between}.p-datepicker-header .p-datepicker-title{margin:0 auto}.p-datepicker-prev,.p-datepicker-next{cursor:pointer;display:inline-flex;justify-content:center;align-items:center;overflow:hidden;position:relative}.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group{flex:1 1 auto}.p-datepicker-multiple-month .p-datepicker-group-container{display:flex}.p-datepicker table{width:100%;border-collapse:collapse}.p-datepicker td>span{display:flex;justify-content:center;align-items:center;cursor:pointer;margin:0 auto;overflow:hidden;position:relative}.p-monthpicker-month{width:33.3%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-datepicker-buttonbar{display:flex;justify-content:space-between;align-items:center}.p-timepicker{display:flex;justify-content:center;align-items:center}.p-timepicker button{display:flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-timepicker>div{display:flex;align-items:center;flex-direction:column}.p-datepicker-touch-ui,.p-calendar .p-datepicker-touch-ui{position:fixed;top:50%;left:50%;min-width:80vw;transform:translate(-50%,-50%)}.p-yearpicker-year{width:50%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-calendar-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-datepicker-icon{pointer-events:none}.p-calendar-clearable{position:relative}}
`,
        ],
        encapsulation: 2,
        data: {
          animation: [
            wo("overlayAnimation", [
              yr(
                "visibleTouchUI",
                ai({ transform: "translate(-50%,-50%)", opacity: 1 })
              ),
              tn("void => visible", [
                ai({ opacity: 0, transform: "scaleY(0.8)" }),
                en(
                  "{{showTransitionParams}}",
                  ai({ opacity: 1, transform: "*" })
                ),
              ]),
              tn("visible => void", [
                en("{{hideTransitionParams}}", ai({ opacity: 0 })),
              ]),
              tn("void => visibleTouchUI", [
                ai({
                  opacity: 0,
                  transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                }),
                en("{{showTransitionParams}}"),
              ]),
              tn("visibleTouchUI => void", [
                en(
                  "{{hideTransitionParams}}",
                  ai({
                    opacity: 0,
                    transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                  })
                ),
              ]),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return n;
  })(),
  Rx = (() => {
    class n {
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = we({ type: n });
      static ɵinj = Ce({
        imports: [Fe, mg, Ln, Ex, fg, $l, gg, _g, bg, vg, Mx, mg, Ln],
      });
    }
    return n;
  })();
var Fx = (() => {
  class n extends Oi {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + is() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = bt(n)))(r || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["HomeIcon"]],
      standalone: !0,
      features: [Je, ue],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "fill-rule",
          "evenodd",
          "clip-rule",
          "evenodd",
          "d",
          "M13.4175 6.79971C13.2874 6.80029 13.1608 6.75807 13.057 6.67955L12.4162 6.19913V12.6073C12.4141 12.7659 12.3502 12.9176 12.2379 13.0298C12.1257 13.142 11.9741 13.206 11.8154 13.208H8.61206C8.61179 13.208 8.61151 13.208 8.61123 13.2081C8.61095 13.208 8.61068 13.208 8.6104 13.208H5.41076C5.40952 13.208 5.40829 13.2081 5.40705 13.2081C5.40581 13.2081 5.40458 13.208 5.40334 13.208H2.20287C2.04418 13.206 1.89257 13.142 1.78035 13.0298C1.66813 12.9176 1.60416 12.7659 1.60209 12.6073V6.19914L0.961256 6.67955C0.833786 6.77515 0.673559 6.8162 0.515823 6.79367C0.358086 6.77114 0.215762 6.68686 0.120159 6.55939C0.0245566 6.43192 -0.0164931 6.2717 0.00604063 6.11396C0.0285744 5.95622 0.112846 5.8139 0.240316 5.7183L1.83796 4.52007L1.84689 4.51337L6.64868 0.912027C6.75267 0.834032 6.87915 0.79187 7.00915 0.79187C7.13914 0.79187 7.26562 0.834032 7.36962 0.912027L12.1719 4.51372L12.1799 4.51971L13.778 5.7183C13.8943 5.81278 13.9711 5.94732 13.9934 6.09553C14.0156 6.24373 13.9816 6.39489 13.8981 6.51934C13.8471 6.60184 13.7766 6.67054 13.6928 6.71942C13.609 6.76831 13.5144 6.79587 13.4175 6.79971ZM6.00783 12.0065H8.01045V7.60074H6.00783V12.0065ZM9.21201 12.0065V6.99995C9.20994 6.84126 9.14598 6.68965 9.03375 6.57743C8.92153 6.46521 8.76992 6.40124 8.61123 6.39917H5.40705C5.24836 6.40124 5.09675 6.46521 4.98453 6.57743C4.8723 6.68965 4.80834 6.84126 4.80627 6.99995V12.0065H2.80366V5.29836L7.00915 2.14564L11.2146 5.29836V12.0065H9.21201Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (i, r) {
        i & 1 &&
          (yt(),
          h(0, "svg", 0)(1, "g"),
          W(2, "path", 1),
          u(),
          h(3, "defs")(4, "clipPath", 2),
          W(5, "rect", 3),
          u()()()),
          i & 2 &&
            (Ue(r.getClassNames()),
            de("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ),
            g(),
            de("clip-path", r.pathId),
            g(3),
            M("id", r.pathId));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Wl = (() => {
  class n {
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵmod = we({ type: n });
    static ɵinj = Ce({ imports: [Fe] });
  }
  return n;
})();
var Nx = (() => {
  class n {
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵmod = we({ type: n });
    static ɵinj = Ce({ imports: [Fe, Ui, Wl, $l, Fx, Ln, Ui, Wl, Ln] });
  }
  return n;
})();
var Yo = (n) => ({ "is-invalid": n });
function QF(n, t) {
  n & 1 &&
    (h(0, "tr")(1, "td", 53)(2, "p"), f(3, "No Accounts Found"), u()()());
}
function XF(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td"),
      f(6),
      u(),
      h(7, "td"),
      f(8),
      u(),
      h(9, "td"),
      f(10),
      u(),
      h(11, "td", 55)(12, "a", 56),
      U("click", function () {
        let r = N(e).$implicit,
          o = E(2);
        return L(o.onEdit(r.account_id));
      }),
      W(13, "i", 57),
      u(),
      h(14, "a", 58),
      U("click", function () {
        let r = N(e).$implicit,
          o = E(2);
        return L(o.selectCustomerForDeletion(r));
      }),
      W(15, "i", 59),
      u(),
      h(16, "div", 60)(17, "div", 61)(18, "div", 23)(19, "div", 62)(
        20,
        "h5",
        63
      ),
      f(21, "Delete User"),
      u()(),
      h(22, "div", 64),
      f(23, "HEY ARE YOU SURE TO DELETE..!"),
      u(),
      h(24, "div", 50)(25, "button", 65),
      f(26, " Cancel "),
      u(),
      h(27, "button", 66),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.closeModal());
      })("click", function () {
        N(e);
        let r = E(2);
        return L(r.deleteCustomerId());
      }),
      f(28, " Delete "),
      u()()()()()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index;
    g(2),
      B(i + 1),
      g(2),
      B(e.fname),
      g(2),
      B(e.lname),
      g(2),
      B(e.email),
      g(2),
      B(e.phone);
  }
}
function ZF(n, t) {
  if ((n & 1 && F(0, XF, 29, 5, "tr", 54), n & 2)) {
    let e = E();
    M("ngForOf", e.customerList());
  }
}
function JF(n, t) {
  n & 1 &&
    (h(0, "div", 67)(1, "span"), f(2, "Account Type is required."), u()());
}
function eN(n, t) {
  n & 1 && (h(0, "span"), f(1, "First Name is required."), u());
}
function tN(n, t) {
  n & 1 &&
    (h(0, "span"), f(1, "First Name must be at least 3 characters long."), u());
}
function iN(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 67),
      F(1, eN, 2, 0, "span", 68)(2, tN, 2, 0, "span", 68),
      u()),
    n & 2)
  ) {
    let e,
      i,
      r = E();
    g(),
      M(
        "ngIf",
        (e = r.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      M(
        "ngIf",
        (i = r.useForm.get("fname")) == null || i.errors == null
          ? null
          : i.errors.minlength
      );
  }
}
function nN(n, t) {
  n & 1 && (h(0, "span"), f(1, "Last Name is required."), u());
}
function rN(n, t) {
  n & 1 &&
    (h(0, "span"), f(1, "Last Name must be at least 3 characters long."), u());
}
function oN(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 67),
      F(1, nN, 2, 0, "span", 68)(2, rN, 2, 0, "span", 68),
      u()),
    n & 2)
  ) {
    let e,
      i,
      r = E();
    g(),
      M(
        "ngIf",
        (e = r.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      M(
        "ngIf",
        (i = r.useForm.get("lname")) == null || i.errors == null
          ? null
          : i.errors.minlength
      );
  }
}
function aN(n, t) {
  if ((n & 1 && (h(0, "option", 69), f(1), u()), n & 2)) {
    let e = t.$implicit;
    M("value", e.dealer_code), g(), ae(" ", e.dealer_code, " ");
  }
}
function sN(n, t) {
  if ((n & 1 && (h(0, "option", 69), f(1), u()), n & 2)) {
    let e = t.$implicit;
    M("value", e.dealer_code), g(), ae(" ", e.dealer_code, " ");
  }
}
function lN(n, t) {
  n & 1 && (h(0, "div", 67)(1, "span"), f(2, "Dealer is required."), u()());
}
function cN(n, t) {
  n & 1 && (h(0, "span"), f(1, "Email is required."), u());
}
function dN(n, t) {
  n & 1 && (h(0, "span"), f(1, "Please enter a valid email."), u());
}
function uN(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 67),
      F(1, cN, 2, 0, "span", 68)(2, dN, 2, 0, "span", 68),
      u()),
    n & 2)
  ) {
    let e,
      i,
      r = E();
    g(),
      M(
        "ngIf",
        (e = r.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      M(
        "ngIf",
        (i = r.useForm.get("email")) == null || i.errors == null
          ? null
          : i.errors.email
      );
  }
}
function hN(n, t) {
  n & 1 && (h(0, "span"), f(1, "Phone is required."), u());
}
function pN(n, t) {
  n & 1 &&
    (h(0, "span"), f(1, "Phone must be at least 3 characters long."), u());
}
function mN(n, t) {
  n & 1 && (h(0, "span"), f(1, "Phone must contain only numbers."), u());
}
function fN(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 67),
      F(1, hN, 2, 0, "span", 68)(2, pN, 2, 0, "span", 68)(
        3,
        mN,
        2,
        0,
        "span",
        68
      ),
      u()),
    n & 2)
  ) {
    let e,
      i,
      r,
      o = E();
    g(),
      M(
        "ngIf",
        (e = o.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      M(
        "ngIf",
        (i = o.useForm.get("phone")) == null || i.errors == null
          ? null
          : i.errors.minlength
      ),
      g(),
      M(
        "ngIf",
        (r = o.useForm.get("phone")) == null || r.errors == null
          ? null
          : r.errors.pattern
      );
  }
}
function gN(n, t) {
  n & 1 && (h(0, "span"), f(1, "Mobile is required."), u());
}
function _N(n, t) {
  n & 1 &&
    (h(0, "span"), f(1, "Mobile must be at least 3 characters long."), u());
}
function bN(n, t) {
  n & 1 && (h(0, "span"), f(1, "Mobile must contain only numbers."), u());
}
function vN(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 67),
      F(1, gN, 2, 0, "span", 68)(2, _N, 2, 0, "span", 68)(
        3,
        bN,
        2,
        0,
        "span",
        68
      ),
      u()),
    n & 2)
  ) {
    let e,
      i,
      r,
      o = E();
    g(),
      M(
        "ngIf",
        (e = o.useForm.get("mobile")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      M(
        "ngIf",
        (i = o.useForm.get("mobile")) == null || i.errors == null
          ? null
          : i.errors.minlength
      ),
      g(),
      M(
        "ngIf",
        (r = o.useForm.get("mobile")) == null || r.errors == null
          ? null
          : r.errors.pattern
      );
  }
}
function yN(n, t) {
  if (n & 1) {
    let e = ce();
    Qe(0),
      h(1, "button", 70),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.onUpdate());
      }),
      f(2, " Edit "),
      u(),
      Xe();
  }
  if (n & 2) {
    let e = E();
    g(), M("disabled", !e.isCustomerNameChanged());
  }
}
function xN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 66),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.onSave());
      }),
      f(1, " save "),
      u();
  }
  if (n & 2) {
    let e = E();
    de("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
var Tu = class n {
  constructor(t, e) {
    this.modalService = t;
    this.cdRef = e;
    this.initializeForm();
  }
  totalCustomer = fe(0);
  customerList = fe([]);
  dealerList = fe([]);
  masterSrv = G(Ze);
  toastr = G(ki);
  previousEmail = "";
  useForm = new Rt({});
  customerObj = new jl();
  dealerObj = new Ar();
  isEditMode = !1;
  previousValue = "";
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  ngOnInit() {
    this.initializeForm(),
      this.loadCustomers(),
      this.loadDealers(),
      this.getAllCustomer();
  }
  isModalVisible = !1;
  initializeForm() {
    this.useForm = new Rt({
      account_type: new st("", [Ne.required]),
      fname: new st("", [Ne.required, Ne.minLength(3)]),
      lname: new st("", [Ne.required, Ne.minLength(3)]),
      email: new st("", [Ne.required, Ne.email]),
      phone: new st("", [Ne.required, Ne.pattern(/^\d+$/)]),
      mobile: new st("", [Ne.required, Ne.pattern(/^\d+$/)]),
      dealer_code: new st("", [Ne.required]),
    });
  }
  openModal(t) {
    (this.isEditMode = !1),
      console.log("hello openmodal", t),
      this.useForm.reset(),
      (this.isModalVisible = !0),
      t
        ? (console.log("\u{1F680} Customer Data:", t),
          (this.customerObj = Q({}, t)),
          (this.previousValue = t.account_name || ""),
          this.useForm.patchValue({
            account_type: t.account_type || "",
            fname: t.fname || "",
            lname: t.lname || "",
            email: t.email || "",
            phone: t.phone || "",
            mobile: t.mobile || "",
            dealer_code: t.dealer_code || "",
          }),
          (this.previousEmail = t.email || ""),
          console.log("Edit Mode: Customer Object ->", this.customerObj))
        : ((this.customerObj = new jl()),
          (this.customerObj.account_id = ""),
          console.log(
            "New Customer Mode: Reset customerObj",
            this.customerObj
          ));
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalVisible = !1);
  }
  isEmailChange() {
    return this.useForm.value.email !== this.previousValue;
  }
  loadCustomers() {
    this.masterSrv.getAllCustomer().subscribe(
      (t) => {
        console.log("Fetched Accounts:", t),
          this.customerList.set(t.data.rows),
          this.totalCustomer.set(t.data.count);
      },
      (t) => {
        console.error("Error fetching customers:", t),
          this.toastr.error("Failed to load customers", "Error");
      }
    );
  }
  getDealerCode(t) {
    let e = this.dealerList().find((i) => i.dealer_id === t);
    return console.log(this.dealerList), e?.dealer_code?.toString() ?? "N/A";
  }
  onDealerChange() {
    console.log("on dealer chnage func called "),
      console.log("\u{1F4DD} Dealer List:", this.dealerList());
    let t = this.dealerList().find(
      (e) => e.dealer_id === this.customerObj.dealer_id
    );
    console.log("Selected Dealer:", t),
      t &&
        ((this.customerObj.dealer_code = t.dealer_code),
        this.useForm.patchValue({ dealer_code: t.dealer_code }));
  }
  loadDealers() {
    this.masterSrv.getAllDealer().subscribe(
      (t) => {
        this.dealerList.set(t.data.dealer.rows), console.log(t);
      },
      (t) => {
        this.toastr.error("Serverside Error", "Error");
      }
    );
  }
  createCustomer() {
    console.log("create cust called "),
      console.log("\u{1F6E0} Submitting customer data:", this.customerObj),
      console.log("\u{1F6E0} createCustomer() triggered!"),
      this.masterSrv.createCustomer(this.customerObj).subscribe(
        (t) => {
          this.toastr.success("Customerrr created successfully!", "Success"),
            this.getAllCustomer();
        },
        (t) => {
          this.toastr.error("Error creating dealer", "Error");
        }
      );
  }
  selectedCustomerForDeletion = null;
  selectCustomerForDeletion(t) {
    this.selectedCustomerForDeletion = t;
  }
  deleteCustomerId() {
    console.log(
      "this is the select user",
      this.selectCustomerForDeletion,
      this.selectedCustomerForDeletion
    ),
      this.selectedCustomerForDeletion &&
      this.selectedCustomerForDeletion.account_id
        ? this.masterSrv
            .deleteCustomer(this.selectedCustomerForDeletion.account_id)
            .subscribe(
              (t) => {
                this.toastr.success("Accounts deleted successfully", "Success"),
                  this.getAllCustomer(),
                  $("#deleteModal").modal("hide"),
                  $(".modal-backdrop").remove(),
                  $("body").removeClass("modal-open");
              },
              (t) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No accounts selected for deletion");
  }
  onUpdate() {
    console.log("onupdate called "),
      this.useForm.valid
        ? ((this.customerObj = Q(Q({}, this.customerObj), this.useForm.value)),
          console.log(
            "\u{1F680} Updated Payload before API call:",
            this.customerObj
          ),
          this.masterSrv.updateCustomer(this.customerObj).subscribe(
            (t) => {
              console.log("\u2705 API Response:", t),
                t.status === 200
                  ? (this.toastr.success(t.message, "Success"),
                    setTimeout(() => {
                      this.getAllCustomer();
                    }, 500))
                  : this.toastr.error(
                      "Update failed, no data received",
                      "Error"
                    );
            },
            (t) => {
              console.error("\u274C API Error:", t),
                this.toastr.error("Failed to update customer", "Error");
            }
          ))
        : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  getAllCustomer() {
    this.masterSrv.getAllCustomer().subscribe(
      (t) => {
        console.log("Fetched Customers:", t),
          console.log("customer list updated:", t.data.rows),
          this.customerList.set(t.data.rows),
          this.totalCustomer.set(t.data.count);
      },
      (t) => {
        this.toastr.error("Error fetching dealers", "Error");
      }
    );
  }
  onEdit(t) {
    console.log("Edit button clicked. Dealer ID:", t),
      (this.isEditMode = !0),
      this.masterSrv.getCustomerById(t).subscribe(
        (e) => {
          if ((console.log("API Response:", e), e?.data)) {
            let i = e.data;
            (this.customerObj = Be(Q({}, i), {
              dealer_code: Number(i.dealer_code),
            })),
              this.useForm.patchValue({
                dealer_code: Number(i.dealer_code),
                dealer_name: i.account_name || "",
                account_type: i.account_type || "",
                fname: i.fname || "",
                lname: i.lname || "",
                email: i.email || "",
                phone: i.phone || "",
                mobile: i.mobile || "",
                account_id: i.account_id || "",
              }),
              console.log("Dealer data set, opening modal..."),
              setTimeout(() => {
                $("#exampleModalCenter").modal("show");
              }, 0);
          } else
            console.error("Dealer data is missing in response:", e),
              this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          console.error("Error fetching dealer details:", e),
            this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isCustomerNameChanged() {
    return this.useForm.value.name !== this.previousValue;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let t = this.useForm.value;
    console.log("Form Data being sent to API:", t),
      this.masterSrv.createCustomer(t).subscribe({
        next: () => {
          this.toastr.success("Accounts created successfully!", "Success"),
            this.getAllCustomer(),
            this.closeModal();
        },
        error: (e) => {
          console.error("Accounts creation error:", e),
            this.toastr.error(
              e.message || "Failed to create user",
              "Creation Error"
            );
        },
      });
  }
  createNewCustomer() {
    this.masterSrv.createCustomer(this.customerObj).subscribe(
      (t) => {
        this.toastr.success("customer created successfully!", "Success"),
          this.getAllCustomer();
      },
      (t) => {
        this.toastr.error("Error creating dealer", "Error");
      }
    );
  }
  static ɵfac = function (e) {
    return new (e || n)(H(cr), H(et));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-customer"]],
    standalone: !0,
    features: [ue],
    decls: 109,
    vars: 36,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-md-4", "col-sm-4", "mb-4", "mb-xl-0"],
      [
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "col-sm-4", "col-md-4", "mb-4", "mb-xl-0"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [1, "row"],
      [1, "col-lg-12"],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-lg",
        "custom-modal",
      ],
      [1, "modal-dialog", "modal-lg"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", 2, "align-items", "center", "margin-inline", "auto"],
      ["type", "button", "data-dismiss", "modal", 1, "close"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "form-group", "col-md-6"],
      ["for", "account_type", 1, "form-label"],
      [
        "formControlName",
        "account_type",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "Individual"],
      ["value", "Corporate"],
      ["value", "Retailer"],
      ["class", "text-danger", 4, "ngIf"],
      ["for", "fname", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "First Name",
        "formControlName",
        "fname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "name", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Last Name",
        "formControlName",
        "lname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_code", 1, "form-label"],
      [
        "id",
        "dealer_code",
        "formControlName",
        "dealer_code",
        1,
        "form-select",
        "form-control",
        "form-control-lg",
        3,
        "change",
        "disabled",
        "ngClass",
      ],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "email", 1, "form-label"],
      [
        "type",
        "email",
        "placeholder",
        "E-mail",
        "formControlName",
        "email",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "phone", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Phone",
        "formControlName",
        "phone",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "mobile", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Mobile",
        "formControlName",
        "mobile",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      ["colspan", "6", 1, "text-center"],
      [4, "ngFor", "ngForOf"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-toggle",
        "modal",
        "data-target",
        ".bd-example-modal-sm",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-sm",
      ],
      [1, "modal-dialog", "modal-sm"],
      [1, "modal-header", "text-center", 2, "margin-inline", "auto"],
      [1, "modal-title", "text-center"],
      [1, "modal-body"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      [1, "text-danger"],
      [4, "ngIf"],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, i) {
      if (e & 1) {
        let r = ce();
        h(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
          f(6, "Utils"),
          u()(),
          h(7, "li", 7)(8, "a", 8),
          f(9, "Accounts"),
          u()()()(),
          h(10, "div", 9)(11, "div", 10)(12, "a", 11),
          U("click", function () {
            return N(r), L(i.openModal(i.customerObj));
          }),
          W(13, "i", 12),
          f(14, "Add Account"),
          u()(),
          h(15, "div", 13)(16, "div", 14)(17, "p", 15),
          f(18, "Total Account"),
          u(),
          h(19, "h3", 16),
          f(20),
          u()()()(),
          h(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "table", 20)(
            25,
            "thead"
          )(26, "tr")(27, "th"),
          f(28, "Sr No"),
          u(),
          h(29, "th"),
          f(30, "Account Name"),
          u(),
          h(31, "th"),
          f(32, "Last Name"),
          u(),
          h(33, "th"),
          f(34, "E-mail"),
          u(),
          h(35, "th"),
          f(36, "Phone"),
          u(),
          h(37, "th"),
          f(38, "Action"),
          u()()(),
          h(39, "tbody"),
          F(40, QF, 4, 0, "tr")(41, ZF, 1, 1, "tr"),
          u()()()()()()(),
          h(42, "div", 21)(43, "div", 22)(44, "div", 23)(45, "div", 24)(
            46,
            "h5",
            25
          ),
          f(47, " Add New Account "),
          u(),
          h(48, "button", 26)(49, "span", 27),
          f(50, "\xD7"),
          u()()(),
          h(51, "div", 28)(52, "div", 17)(53, "div", 29)(54, "label", 30),
          f(55, "Account Type"),
          u(),
          h(56, "select", 31)(57, "option", 32),
          f(58, "Select Account Type"),
          u(),
          h(59, "option", 33),
          f(60, "Individual"),
          u(),
          h(61, "option", 34),
          f(62, "Corporate"),
          u(),
          h(63, "option", 35),
          f(64, "Retailer"),
          u()(),
          F(65, JF, 3, 0, "div", 36),
          u(),
          h(66, "div", 29)(67, "label", 37),
          f(68, "First Name"),
          u(),
          W(69, "input", 38),
          F(70, iN, 3, 2, "div", 36),
          u()(),
          h(71, "div", 17)(72, "div", 29)(73, "label", 39),
          f(74, "Last Name"),
          u(),
          W(75, "input", 40),
          F(76, oN, 3, 2, "div", 36),
          u(),
          h(77, "div", 29)(78, "label", 41),
          f(79, "Dealer Code"),
          u(),
          h(80, "select", 42),
          U("change", function () {
            return N(r), L(i.onDealerChange());
          }),
          h(81, "option", 32),
          f(82, "Select Dealer"),
          u(),
          F(83, aN, 2, 2, "option", 43)(84, sN, 2, 2, "option", 43),
          u(),
          F(85, lN, 3, 0, "div", 36),
          u()(),
          h(86, "div", 17)(87, "div", 29)(88, "label", 44),
          f(89, "E-mail"),
          u(),
          W(90, "input", 45),
          F(91, uN, 3, 2, "div", 36),
          u(),
          h(92, "div", 29)(93, "label", 46),
          f(94, "Phone"),
          u(),
          W(95, "input", 47),
          F(96, fN, 4, 3, "div", 36),
          u()(),
          h(97, "div", 17)(98, "div", 29)(99, "label", 48),
          f(100, "Mobile"),
          u(),
          W(101, "input", 49),
          F(102, vN, 4, 3, "div", 36),
          u()()(),
          h(103, "div", 50),
          F(104, yN, 3, 1, "ng-container", 51),
          h(105, "button", 52),
          U("click", function () {
            return N(r), L(i.closeModal());
          }),
          f(106, " Close "),
          u(),
          F(107, xN, 2, 1, "ng-template", null, 0, ei),
          u()()()();
      }
      if (e & 2) {
        let r,
          o,
          a,
          s,
          l,
          d,
          m,
          v,
          x,
          C,
          S,
          T,
          k,
          P,
          j,
          K = At(108);
        g(20),
          ae(" ", i.totalCustomer(), " "),
          g(20),
          In(i.customerList().length === 0 ? 40 : 41),
          g(11),
          M("formGroup", i.useForm),
          g(5),
          M(
            "ngClass",
            xe(
              22,
              Yo,
              ((r = i.useForm.get("account_type")) == null
                ? null
                : r.touched) &&
                ((r = i.useForm.get("account_type")) == null ? null : r.invalid)
            )
          ),
          g(9),
          M(
            "ngIf",
            ((o = i.useForm.get("account_type")) == null ? null : o.touched) &&
              ((o = i.useForm.get("account_type")) == null ? null : o.invalid)
          ),
          g(4),
          M(
            "ngClass",
            xe(
              24,
              Yo,
              ((a = i.useForm.get("fname")) == null ? null : a.touched) &&
                ((a = i.useForm.get("fname")) == null ? null : a.invalid)
            )
          ),
          g(),
          M(
            "ngIf",
            ((s = i.useForm.get("fname")) == null ? null : s.touched) &&
              ((s = i.useForm.get("fname")) == null ? null : s.invalid)
          ),
          g(5),
          M(
            "ngClass",
            xe(
              26,
              Yo,
              ((l = i.useForm.get("lname")) == null ? null : l.touched) &&
                ((l = i.useForm.get("lname")) == null ? null : l.invalid)
            )
          ),
          g(),
          M(
            "ngIf",
            ((d = i.useForm.get("lname")) == null ? null : d.touched) &&
              ((d = i.useForm.get("lname")) == null ? null : d.invalid)
          ),
          g(4),
          M(
            "disabled",
            (m = i.useForm.get("account_id")) == null ? null : m.value
          )(
            "ngClass",
            xe(
              28,
              Yo,
              ((v = i.useForm.get("dealer_code")) == null ? null : v.touched) &&
                ((v = i.useForm.get("dealer_code")) == null ? null : v.invalid)
            )
          ),
          g(3),
          M("ngForOf", i.dealerList()),
          g(),
          M("ngForOf", i.staticDealerList),
          g(),
          M(
            "ngIf",
            ((x = i.useForm.get("dealer_code")) == null ? null : x.touched) &&
              ((x = i.useForm.get("dealer_code")) == null ? null : x.invalid)
          ),
          g(5),
          M(
            "ngClass",
            xe(
              30,
              Yo,
              ((C = i.useForm.get("email")) == null ? null : C.touched) &&
                ((C = i.useForm.get("email")) == null ? null : C.invalid)
            )
          ),
          g(),
          M(
            "ngIf",
            ((S = i.useForm.get("email")) == null ? null : S.touched) &&
              ((S = i.useForm.get("email")) == null ? null : S.invalid)
          ),
          g(4),
          M(
            "ngClass",
            xe(
              32,
              Yo,
              ((T = i.useForm.get("phone")) == null ? null : T.touched) &&
                ((T = i.useForm.get("phone")) == null ? null : T.invalid)
            )
          ),
          g(),
          M(
            "ngIf",
            ((k = i.useForm.get("phone")) == null ? null : k.touched) &&
              ((k = i.useForm.get("phone")) == null ? null : k.invalid)
          ),
          g(5),
          M(
            "ngClass",
            xe(
              34,
              Yo,
              ((P = i.useForm.get("mobile")) == null ? null : P.touched) &&
                ((P = i.useForm.get("mobile")) == null ? null : P.invalid)
            )
          ),
          g(),
          M(
            "ngIf",
            ((j = i.useForm.get("mobile")) == null ? null : j.touched) &&
              ((j = i.useForm.get("mobile")) == null ? null : j.invalid)
          ),
          g(2),
          M("ngIf", i.customerObj.account_id)("ngIfElse", K);
      }
    },
    dependencies: [
      Fe,
      Gt,
      ti,
      rt,
      Gi,
      $i,
      Wi,
      fi,
      ir,
      Ti,
      zi,
      ht,
      xu,
      Wo,
      bu,
      _u,
      vn,
      sn,
      ln,
      Rx,
      Nx,
      Ui,
      cr,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:350px;padding:20px;flex-grow:1}",
    ],
  });
};
var Bx = KC(Vx());
var CN = () => ["/Admin/dealer"],
  wN = (n) => ["/Admin/single-task", n];
function DN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 11)(1, "div", 19)(2, "div", 29)(3, "div", 30)(4, "p", 31),
      f(5),
      u(),
      h(6, "h4", 32),
      f(7, " Dealer Code : "),
      h(8, "span", 33),
      f(9),
      u()()()()(),
      h(10, "div", 19)(11, "div", 34),
      U("click", function () {
        N(e);
        let r = E();
        return (
          r.toggleUsersTable(),
          L(r.getAllUser(r.dealerData.data.dealer.dealer_code))
        );
      }),
      h(12, "div", 30)(13, "p", 31),
      f(14, "Total Users"),
      u(),
      h(15, "h4", 32)(16, "span", 33),
      f(17),
      u(),
      f(18, " User "),
      u()()()(),
      h(19, "div", 19)(20, "div", 35),
      U("click", function () {
        N(e);
        let r = E();
        return (
          r.toggleOpportunityTable(),
          L(r.getAllOpp(r.dealerData.data.dealer.dealer_id))
        );
      }),
      h(21, "p", 31),
      f(22, "Total Opportunities"),
      u(),
      h(23, "h4", 32)(24, "span", 33),
      f(25),
      u(),
      f(26, " Opportunities "),
      u()()(),
      h(27, "div", 19)(28, "div", 34),
      U("click", function () {
        N(e);
        let r = E();
        return (
          r.toggleLeadsTable(),
          L(r.getAllLeads(r.dealerData.data.dealer.dealer_id))
        );
      }),
      h(29, "div", 30)(30, "p", 31),
      f(31, "Total Lead"),
      u(),
      h(32, "h4", 32)(33, "span", 33),
      f(34),
      u(),
      f(35, " Lead "),
      u()()()(),
      h(36, "div", 19)(37, "div", 34),
      U("click", function () {
        N(e);
        let r = E();
        return (
          r.toggleTasksTable(),
          L(r.getAllTasks(r.dealerData.data.dealer.dealer_id))
        );
      }),
      h(38, "div", 30)(39, "p", 31),
      f(40, "Total Tasks"),
      u(),
      h(41, "h4", 32)(42, "span", 33),
      f(43),
      u(),
      f(44, " Tasks "),
      u()()()(),
      h(45, "div", 19)(46, "div", 34),
      U("click", function () {
        N(e);
        let r = E();
        return (
          r.toggleEventTable(),
          L(r.getAllEvent(r.dealerData.data.dealer.dealer_id))
        );
      }),
      h(47, "div", 30)(48, "p", 31),
      f(49, "Total Events"),
      u(),
      h(50, "h4", 32)(51, "span", 33),
      f(52),
      u(),
      f(53, " Events "),
      u()()()()();
  }
  if (n & 2) {
    let e = E();
    g(5),
      ae(" ", e.dealerData.data.dealer.dealer_name, " "),
      g(4),
      B(e.dealerData.data.dealer.dealer_code),
      g(8),
      B(e.dealerData.data.users),
      g(8),
      B(e.dealerData.data.opportunities),
      g(9),
      B(e.dealerData.data.leads),
      g(9),
      B(e.dealerData.data.tasks),
      g(9),
      ae("", e.dealerData.data.events, " ");
  }
}
function SN(n, t) {
  n & 1 &&
    (h(0, "tr")(1, "td", 51)(2, "p", 52),
    f(3, "\u26A0\uFE0F No Users Found!"),
    u()()());
}
function MN(n, t) {
  if (
    (n & 1 &&
      (h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td"),
      f(6),
      u(),
      h(7, "td"),
      f(8),
      u(),
      h(9, "td"),
      f(10),
      u(),
      h(11, "td"),
      f(12),
      u(),
      h(13, "td"),
      f(14),
      u()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      r = E(3);
    g(2),
      B((r.currentPage - 1) * r.itemsPerPage + i + 1),
      g(2),
      B(e.user_account_id || "N/A"),
      g(2),
      B(e.name || "N/A"),
      g(2),
      B(e.email || "N/A"),
      g(2),
      B(e.phone || "N/A"),
      g(2),
      B(e.user_role || "N/A"),
      g(2),
      B(e.dealer_code || "N/A");
  }
}
function TN(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 47)(1, "table", 48)(2, "thead")(3, "tr")(4, "th"),
      f(5, "Sr No"),
      u(),
      h(6, "th"),
      f(7, "Account ID"),
      u(),
      h(8, "th"),
      f(9, "Name"),
      u(),
      h(10, "th"),
      f(11, "Email"),
      u(),
      h(12, "th"),
      f(13, "Phone"),
      u(),
      h(14, "th"),
      f(15, "Role"),
      u(),
      h(16, "th"),
      f(17, "Dealer Code"),
      u()()(),
      h(18, "tbody"),
      F(19, SN, 4, 0, "tr", 49)(20, MN, 15, 7, "tr", 50),
      u()()()),
    n & 2)
  ) {
    let e = E(2);
    g(19),
      M("ngIf", !e.paginatedUsers || e.paginatedUsers.length === 0),
      g(),
      M("ngForOf", e.paginatedUsers);
  }
}
function EN(n, t) {
  if ((n & 1 && (Qe(0), f(1), Xe()), n & 2)) {
    let e = E(2);
    g(),
      Hi(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalUsers,
        " entries "
      );
  }
}
function kN(n, t) {
  n & 1 && f(0, " No entries available ");
}
function IN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "li", 44)(1, "button", 53),
      U("click", function () {
        let r = N(e).$implicit,
          o = E(2);
        return L(o.goToPage(r));
      }),
      f(2),
      u()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = E(2);
    Te("active", e === i.currentPage)("disabled", !i.hasDataForPage(e)),
      g(),
      M("disabled", !i.hasDataForPage(e)),
      g(),
      ae(" ", e, " ");
  }
}
function ON(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 36),
      F(1, TN, 21, 2, "div", 37),
      h(2, "div", 38)(3, "div", 39)(4, "p", 40),
      F(5, EN, 2, 3, "ng-container", 41)(
        6,
        kN,
        1,
        0,
        "ng-template",
        null,
        0,
        ei
      ),
      u()(),
      h(8, "div", 39)(9, "nav", 42)(10, "ul", 43)(11, "li", 44)(
        12,
        "button",
        45
      ),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.goToPreviousPage());
      }),
      f(13, "Previous"),
      u()(),
      F(14, IN, 3, 6, "li", 46),
      h(15, "li", 44)(16, "button", 45),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.goToNextPage());
      }),
      f(17, "Next"),
      u()()()()()()();
  }
  if (n & 2) {
    let e = At(7),
      i = E();
    g(),
      M("ngIf", i.selectedOption() === "users"),
      g(4),
      M(
        "ngIf",
        i.totalUsers > 0 && (i.currentPage - 1) * i.itemsPerPage < i.totalUsers
      )("ngIfElse", e),
      g(6),
      Te("disabled", i.currentPage === 1),
      g(3),
      M("ngForOf", i.visiblePageNumbers),
      g(),
      Te("disabled", i.currentPage === i.totalPages);
  }
}
function PN(n, t) {
  n & 1 &&
    (h(0, "tr")(1, "td", 57)(2, "p", 52),
    f(3, "\u26A0\uFE0F No Leads Found!"),
    u()()());
}
function AN(n, t) {
  if (
    (n & 1 &&
      (h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td"),
      f(6),
      u(),
      h(7, "td"),
      f(8),
      u(),
      h(9, "td"),
      f(10),
      u(),
      h(11, "td"),
      f(12),
      u(),
      h(13, "td"),
      f(14),
      u(),
      h(15, "td"),
      f(16),
      u(),
      h(17, "td"),
      f(18),
      u(),
      h(19, "td"),
      f(20),
      u(),
      h(21, "td"),
      f(22),
      u(),
      h(23, "td"),
      f(24),
      u()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      r = E(2);
    g(2),
      B((r.currentPage - 1) * r.itemsPerPage + i + 1),
      g(2),
      B(e.lead_code || "N/A"),
      g(2),
      B(e.dealer_name || "N/A"),
      g(2),
      B(e.status || "N/A"),
      g(2),
      B(e.purchase_type || "N/A"),
      g(2),
      B(e.type || "N/A"),
      g(2),
      B(e.sub_type || "N/A"),
      g(2),
      B(e.brand || "N/A"),
      g(2),
      B(e.PMI || "N/A"),
      g(2),
      B(e.lead_source || "N/A"),
      g(2),
      B(e.lname || "N/A"),
      g(2),
      B(e.mobile || "N/A");
  }
}
function RN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "li", 44)(1, "button", 45),
      U("click", function () {
        let r = N(e).$implicit,
          o = E(2);
        return L(o.goToLeadPage(r));
      }),
      f(2),
      u()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = E(2);
    Te("active", e === i.currentPage), g(2), ae(" ", e, " ");
  }
}
function FN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(5, "th"),
      f(6, "Sr No"),
      u(),
      h(7, "th"),
      f(8, "Lead"),
      W(9, "br"),
      f(10, " Code"),
      u(),
      h(11, "th"),
      f(12, "Dealer "),
      W(13, "br"),
      f(14, "Name"),
      u(),
      h(15, "th"),
      f(16, "Status"),
      u(),
      h(17, "th"),
      f(18, "Purchase "),
      W(19, "br"),
      f(20, " Type"),
      u(),
      h(21, "th"),
      f(22, "Type"),
      u(),
      h(23, "th"),
      f(24, "Sub "),
      W(25, "br"),
      f(26, "Type"),
      u(),
      h(27, "th"),
      f(28, "Brand"),
      u(),
      h(29, "th"),
      f(30, "PMI"),
      u(),
      h(31, "th"),
      f(32, "Lead"),
      W(33, "br"),
      f(34, " Source"),
      u(),
      h(35, "th"),
      f(36, "Last"),
      W(37, "br"),
      f(38, " Name"),
      u(),
      h(39, "th"),
      f(40, "Mobile"),
      u()()(),
      h(41, "tbody"),
      F(42, PN, 4, 0, "tr", 49)(43, AN, 25, 12, "tr", 50),
      u()()(),
      h(44, "div", 38)(45, "div", 39)(46, "p", 40),
      f(47),
      u()(),
      h(48, "div", 39)(49, "nav", 42)(50, "ul", 43)(51, "li", 44)(
        52,
        "button",
        45
      ),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.goToPreviousLeadPage());
      }),
      f(53, "Previous"),
      u()(),
      F(54, RN, 3, 3, "li", 56),
      h(55, "li", 44)(56, "button", 45),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.goToNextLeadPage());
      }),
      f(57, "Next"),
      u()()()()()()();
  }
  if (n & 2) {
    let e = E();
    g(42),
      M("ngIf", !e.paginatedLeads || e.paginatedLeads.length === 0),
      g(),
      M("ngForOf", e.paginatedLeads),
      g(4),
      Hi(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalLeads,
        " entries "
      ),
      g(4),
      Te("disabled", e.currentPage === 1),
      g(3),
      M("ngForOf", e.visiblePageNumbers),
      g(),
      Te("disabled", e.currentPage === e.totalPages);
  }
}
function NN(n, t) {
  n & 1 && (h(0, "tr")(1, "td", 59), f(2, " No Users Found "), u()());
}
function LN(n, t) {
  if (
    (n & 1 &&
      (h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td"),
      f(6),
      u(),
      h(7, "td"),
      f(8),
      u(),
      h(9, "td"),
      f(10),
      u(),
      h(11, "td"),
      f(12),
      u(),
      h(13, "td"),
      f(14),
      u(),
      h(15, "td"),
      f(16),
      u(),
      h(17, "td"),
      f(18),
      u(),
      h(19, "td"),
      f(20),
      u(),
      h(21, "td"),
      f(22),
      u(),
      h(23, "td"),
      f(24),
      u(),
      h(25, "td"),
      f(26),
      u()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      r = E(2);
    g(2),
      B((r.currentOpportunityPage - 1) * r.opportunityItemsPerPage + i + 1),
      g(2),
      ae(" ", e.opportunity_name, " "),
      g(2),
      ae(" ", e.stage, " "),
      g(2),
      ae(" ", e.opportunity_record_type, " "),
      g(2),
      ae(" ", e.account_name, " "),
      g(2),
      ae(" ", e.close_date, " "),
      g(2),
      ae(" ", e.VIN, " "),
      g(2),
      ae(" ", e.purchase_type, " "),
      g(2),
      ae(" ", e.type, " "),
      g(2),
      ae(" ", e.sub_type, " "),
      g(2),
      ae(" ", e.brand, " "),
      g(2),
      ae(" ", e.PMI, " "),
      g(2),
      ae(" ", e.description, " ");
  }
}
function VN(n, t) {
  if ((n & 1 && (h(0, "p", 40), f(1), u()), n & 2)) {
    let e = E(2);
    g(),
      Hi(
        " Showing ",
        (e.currentOpportunityPage - 1) * e.opportunityItemsPerPage + 1,
        " \u2013 ",
        e.getOpportunityRangeEnd(),
        " of ",
        e.totalOpportunities,
        " entries "
      );
  }
}
function BN(n, t) {
  n & 1 && (h(0, "p", 40), f(1, " No entries available "), u());
}
function HN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "li", 44)(1, "button", 53),
      U("click", function () {
        let r = N(e).$implicit,
          o = E(2);
        return L(o.goToOpportunityPage(r));
      }),
      f(2),
      u()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = E(2);
    Te("active", e === i.currentOpportunityPage)(
      "disabled",
      i.totalOpportunities === 0
    ),
      g(),
      M("disabled", i.totalOpportunities === 0),
      g(),
      ae(" ", e, " ");
  }
}
function jN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(5, "th"),
      f(6, "Sr No"),
      u(),
      h(7, "th"),
      f(8, "Opportunity "),
      W(9, "br"),
      f(10, "Name"),
      u(),
      h(11, "th"),
      f(12, "stage"),
      u(),
      h(13, "th"),
      f(14, "Opportunities "),
      W(15, "br"),
      f(16, "Record"),
      u(),
      h(17, "th"),
      f(18, "account"),
      W(19, "br"),
      f(20, " Name"),
      u(),
      h(21, "th"),
      f(22, "close "),
      W(23, "br"),
      f(24, "Date"),
      u(),
      h(25, "th"),
      f(26, "Opportunity "),
      W(27, "br"),
      f(28, "Currency"),
      u(),
      h(29, "th"),
      f(30, "VIN"),
      u(),
      h(31, "th"),
      f(32, "Purchase"),
      W(33, "br"),
      f(34, " Type"),
      u(),
      h(35, "th"),
      f(36, "Sub"),
      W(37, "br"),
      f(38, " Type"),
      u(),
      h(39, "th"),
      f(40, "Brand"),
      u(),
      h(41, "th"),
      f(42, "PMI"),
      u()()(),
      h(43, "tbody"),
      F(44, NN, 3, 0, "tr", 49)(45, LN, 27, 13, "tr", 50),
      u()()(),
      h(46, "div", 38)(47, "div", 39),
      F(48, VN, 2, 3, "p", 58)(49, BN, 2, 0, "p", 58),
      u(),
      h(50, "div", 39)(51, "nav", 42)(52, "ul", 43)(53, "li", 44)(
        54,
        "button",
        53
      ),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.goToPreviousOpportunityPage());
      }),
      f(55, " Previous "),
      u()(),
      F(56, HN, 3, 6, "li", 46),
      h(57, "li", 44)(58, "button", 53),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.goToNextOpportunityPage());
      }),
      f(59, " Next "),
      u()()()()()()();
  }
  if (n & 2) {
    let e = E();
    g(44),
      M("ngIf", !e.OpportunityList || e.OpportunityList.length === 0),
      g(),
      M("ngForOf", e.paginatedOpportunities),
      g(3),
      M("ngIf", e.totalOpportunities > 0),
      g(),
      M("ngIf", e.totalOpportunities === 0),
      g(4),
      Te(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      g(),
      M(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      g(2),
      M("ngForOf", e.visibleOpportunityPageNumbers),
      g(),
      Te(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      ),
      g(),
      M(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      );
  }
}
function UN(n, t) {
  n & 1 && (h(0, "tr")(1, "td", 60), f(2, " No Users Found "), u()());
}
function zN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td"),
      f(6),
      u(),
      h(7, "td"),
      f(8),
      u(),
      h(9, "td"),
      f(10),
      u(),
      h(11, "td"),
      f(12),
      u(),
      h(13, "td"),
      f(14),
      u(),
      h(15, "td"),
      f(16),
      u(),
      h(17, "td"),
      f(18),
      u(),
      h(19, "td"),
      f(20),
      u(),
      h(21, "td")(22, "a", 61),
      U("click", function () {
        let r = N(e).$implicit;
        return L(r.task_id);
      }),
      h(23, "span", 62),
      W(24, "i", 63),
      u()()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      r = E(2);
    g(2),
      B((r.currentTaskPage - 1) * r.taskItemsPerPage + i + 1),
      g(2),
      ae(" ", e.subject, " "),
      g(2),
      ae(" ", e.status, " "),
      g(2),
      ae(" ", e.priority, " "),
      g(2),
      ae(" ", e.assigned_to, " "),
      g(2),
      ae(" ", e.due_date, " "),
      g(2),
      ae(" ", e.comments, " "),
      g(2),
      ae(" ", e.lead_name, " "),
      g(2),
      ae(" ", e.lead_email, " "),
      g(2),
      ae(" ", e.lead_code, " "),
      g(2),
      M("routerLink", xe(11, wN, e.task_id));
  }
}
function $N(n, t) {
  if ((n & 1 && (h(0, "p", 40), f(1), u()), n & 2)) {
    let e = E(2);
    g(),
      Hi(
        " Showing ",
        (e.currentTaskPage - 1) * e.taskItemsPerPage + 1,
        " \u2013 ",
        e.getTaskRangeEnd(),
        " of ",
        e.totalTasks,
        " entries "
      );
  }
}
function WN(n, t) {
  n & 1 && (h(0, "p", 40), f(1, " No entries available "), u());
}
function GN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "li", 44)(1, "button", 53),
      U("click", function () {
        let r = N(e).$implicit,
          o = E(2);
        return L(o.goToTaskPage(r));
      }),
      f(2),
      u()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = E(2);
    Te("active", e === i.currentTaskPage)("disabled", i.totalTasks === 0),
      g(),
      M("disabled", i.totalTasks === 0),
      g(),
      ae(" ", e, " ");
  }
}
function YN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(5, "th"),
      f(6, "Sr No"),
      u(),
      h(7, "th"),
      f(8, "Subject"),
      u(),
      h(9, "th"),
      f(10, "Status"),
      u(),
      h(11, "th"),
      f(12, "Priority"),
      u(),
      h(13, "th"),
      f(14, "Assigned"),
      u(),
      h(15, "th"),
      f(16, "Due Date"),
      u(),
      h(17, "th"),
      f(18, "Comments"),
      u(),
      h(19, "th"),
      f(20, "Lead Name"),
      u(),
      h(21, "th"),
      f(22, "Actions"),
      u()()(),
      h(23, "tbody"),
      F(24, UN, 3, 0, "tr", 49)(25, zN, 25, 13, "tr", 50),
      u()()(),
      h(26, "div", 38)(27, "div", 39),
      F(28, $N, 2, 3, "p", 58)(29, WN, 2, 0, "p", 58),
      u(),
      h(30, "div", 39)(31, "nav", 42)(32, "ul", 43)(33, "li", 44)(
        34,
        "button",
        53
      ),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.goToPreviousTaskPage());
      }),
      f(35, " Previous "),
      u()(),
      F(36, GN, 3, 6, "li", 46),
      h(37, "li", 44)(38, "button", 53),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.goToNextTaskPage());
      }),
      f(39, " Next "),
      u()()()()()()();
  }
  if (n & 2) {
    let e = E();
    g(24),
      M("ngIf", !e.paginatedTasks || e.paginatedTasks.length === 0),
      g(),
      M("ngForOf", e.paginatedTasks),
      g(3),
      M("ngIf", e.totalTasks > 0),
      g(),
      M("ngIf", e.totalOpportunities === 0),
      g(4),
      Te("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      g(),
      M("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      g(2),
      M("ngForOf", e.visibleOpportunityPageNumbers),
      g(),
      Te(
        "disabled",
        e.currentTaskPage === e.totalTaskPages || e.totalTasks === 0
      ),
      g(),
      M(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalTasks === 0
      );
  }
}
function qN(n, t) {
  n & 1 && (h(0, "tr")(1, "td", 65), f(2, " No Events Found "), u()());
}
function KN(n, t) {
  if (
    (n & 1 &&
      (h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td"),
      f(6),
      u(),
      h(7, "td"),
      f(8),
      u(),
      h(9, "td"),
      f(10),
      u(),
      h(11, "td"),
      f(12),
      u(),
      h(13, "td"),
      f(14),
      u(),
      h(15, "td"),
      f(16),
      u(),
      h(17, "td"),
      f(18),
      u()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      r = E(2);
    g(2),
      B((r.currentEventPage - 1) * r.eventItemsPerPage + i + 1),
      g(2),
      B(e.subject),
      g(2),
      B(e.assigned_to),
      g(2),
      B(e.description),
      g(2),
      B(e.name),
      g(2),
      B(e.start_date),
      g(2),
      B(e.end_date),
      g(2),
      B(e.VIN),
      g(2),
      B(e.location);
  }
}
function QN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "li", 44)(1, "button", 45),
      U("click", function () {
        let r = N(e).$implicit,
          o = E(3);
        return L(o.goToEventPage(r));
      }),
      f(2),
      u()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = E(3);
    Te("active", e === i.currentEventPage), g(2), ae(" ", e, " ");
  }
}
function XN(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 38)(1, "div", 39)(2, "p", 40),
      f(3),
      u()(),
      h(4, "div", 39)(5, "nav", 42)(6, "ul", 43)(7, "li", 44)(8, "button", 53),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.goToPreviousEventPage());
      }),
      f(9, " Previous "),
      u()(),
      F(10, QN, 3, 3, "li", 56),
      h(11, "li", 44)(12, "button", 53),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.goToNextEventPage());
      }),
      f(13, " Next "),
      u()()()()()();
  }
  if (n & 2) {
    let e = E(2);
    g(3),
      Hi(
        " Showing ",
        (e.currentEventPage - 1) * e.eventItemsPerPage + 1,
        " \u2013 ",
        e.getEventsRangeEnd(),
        " of ",
        e.totalEvents,
        " entries "
      ),
      g(4),
      Te("disabled", e.currentEventPage === 1),
      g(),
      M("disabled", e.currentEventPage === 1),
      g(2),
      M("ngForOf", e.visibleEventPageNumbers),
      g(),
      Te("disabled", e.currentEventPage === e.totalEventPages),
      g(),
      M("disabled", e.currentEventPage === e.totalEventPages);
  }
}
function ZN(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(
        5,
        "th"
      ),
      f(6, "Sr No"),
      u(),
      h(7, "th"),
      f(8, "Subject"),
      u(),
      h(9, "th"),
      f(10, "Assigned"),
      u(),
      h(11, "th"),
      f(12, "Description"),
      u(),
      h(13, "th"),
      f(14, "Account Name"),
      u(),
      h(15, "th"),
      f(16, "Start Date"),
      u(),
      h(17, "th"),
      f(18, "End Date"),
      u(),
      h(19, "th"),
      f(20, "VIN"),
      u(),
      h(21, "th"),
      f(22, "Locations"),
      u()()(),
      h(23, "tbody"),
      F(24, qN, 3, 0, "tr", 49)(25, KN, 19, 9, "tr", 50),
      u()()(),
      F(26, XN, 14, 10, "div", 64),
      u()),
    n & 2)
  ) {
    let e = E();
    g(24),
      M("ngIf", !e.EventList || e.EventList.length === 0),
      g(),
      M("ngForOf", e.paginatedEvents),
      g(),
      M("ngIf", e.EventList && e.EventList.length > 0);
  }
}
var Gl = class n {
  constructor(t, e, i, r, o) {
    this.route = t;
    this.http = e;
    this.location = i;
    this.cdr = r;
    this.zone = o;
  }
  UserList = [];
  loading = !1;
  leadList = [];
  TaskList = [];
  EventList = [];
  currentPage = 1;
  itemsPerPage = 10;
  currentEventPage = 1;
  eventItemsPerPage = 10;
  OpportunityList = fe([]);
  paginatedUsers = [];
  dealerData;
  masterSrv = G(Ze);
  showUsersTable = !0;
  showLeadsTable = !1;
  showOpportunityTable = !1;
  showTaskTable = !1;
  showEventTable = !1;
  visiblePageNumbers = [];
  dealer_name = "";
  toastr;
  user;
  apiService;
  paginatedLeads = [];
  opportunityItemsPerPage = 10;
  currentOpportunityPage = 1;
  paginatedOpportunities = [];
  visibleOpportunityPageNumbers = [];
  taskItemsPerPage = 10;
  currentTaskPage = 1;
  paginatedTasks = [];
  visibleTaskPageNumbers = [];
  ngOnInit() {
    console.log("ngOnInit is called"),
      this.handleQueryParams(),
      this.handleRouteData(),
      this.handleDealerId((t) => {
        this.getAllUser(t),
          this.getAllLeads(t),
          this.getAllTasks(t),
          this.getAllEvent(t),
          console.log("API Data:", Bx.data),
          console.log("dealerData:", this.dealerData),
          console.log("Fetched UserList:", this.UserList);
      }),
      (this.currentPage = 1),
      this.paginateUsers(),
      this.updateVisiblePages(),
      (this.currentPage = 1),
      this.paginateLeads(),
      this.updateVisibleLeadPages();
  }
  dropdownService = G(yn);
  selectedOption = this.dropdownService.getSelectedOption();
  handleSelectionChange(t) {
    let e = t.target.value;
    switch (
      (this.dropdownService.setSelectedOption(e),
      console.log("this is option", this.selectedOption()),
      e)
    ) {
      case "leads":
        console.log("dealerData:", this.dealerData),
          this.dealerData
            ? (this.getAllLeads(this.dealerData.data.dealer.dealer_id),
              this.toggleLeadsTable())
            : console.warn("lead data is not available.");
        break;
      case "users":
        this.dealerData
          ? (this.getAllUser(this.dealerData.data.dealer.dealer_id),
            this.toggleUsersTable())
          : console.warn("Dealer data is not available.");
        break;
      case "opportunities":
        console.log(this.dealerData),
          this.toggleOpportunityTable(),
          this.dealerData &&
            this.getAllOpp(this.dealerData.data.dealer.dealer_id);
        break;
      case "events":
        this.toggleEventTable(),
          this.dealerData &&
            this.getAllEvent(this.dealerData.data.dealer.dealer_id);
        break;
      case "tasks":
        this.toggleTasksTable(),
          this.dealerData &&
            this.getAllTasks(this.dealerData.data.dealer.dealer_id);
        break;
    }
  }
  get totalUsers() {
    return this.UserList?.length || 0;
  }
  get totalPages() {
    return Math.ceil(this.totalUsers / this.itemsPerPage);
  }
  paginateUsers() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    this.paginatedUsers = this.UserList.slice(t, e);
  }
  updateVisiblePages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      i = Math.min(e + 3 - 1, this.totalPages);
    this.visiblePageNumbers = [];
    for (let r = e; r <= i; r++) this.visiblePageNumbers.push(r);
  }
  hasDataForPage(t) {
    return (t - 1) * this.itemsPerPage < this.totalUsers;
  }
  goToPreviousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateUsers(), this.updateVisiblePages());
  }
  goToNextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateUsers(), this.updateVisiblePages());
  }
  goToPage(t) {
    (t - 1) * this.itemsPerPage >= this.totalUsers ||
      ((this.currentPage = t), this.paginateUsers(), this.updateVisiblePages());
  }
  get totalLeads() {
    return this.leadList?.length || 0;
  }
  get totalLeadPages() {
    return Math.ceil(this.totalLeads / this.itemsPerPage);
  }
  paginateLeads() {
    if (!this.leadList || this.leadList.length === 0) {
      this.paginatedLeads = [];
      return;
    }
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    (this.paginatedLeads = this.leadList.slice(t, e)),
      console.log(
        `Paginating Leads | Page: ${this.currentPage}, Showing: ${
          t + 1
        } to ${Math.min(e, this.leadList.length)} of ${this.leadList.length}`
      ),
      console.table(this.paginatedLeads);
  }
  updateVisibleLeadPages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      i = Math.min(e + 3 - 1, this.totalLeadPages);
    this.visiblePageNumbers = [];
    for (let r = e; r <= i; r++) this.visiblePageNumbers.push(r);
  }
  goToLeadPage(t) {
    (this.currentPage = t), this.paginateLeads(), this.updateVisibleLeadPages();
  }
  goToPreviousLeadPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  goToNextLeadPage() {
    this.currentPage < this.totalLeadPages &&
      (this.currentPage++, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  get totalOpportunities() {
    return this.OpportunityList?.length || 0;
  }
  get totalOpportunityPages() {
    return Math.ceil(this.totalOpportunities / this.opportunityItemsPerPage);
  }
  paginateOpportunities() {
    let t = (this.currentOpportunityPage - 1) * this.opportunityItemsPerPage,
      e = t + this.opportunityItemsPerPage,
      i = this.OpportunityList();
    this.paginatedOpportunities = i.slice(t, e);
  }
  getOpportunityRangeEnd() {
    let t = this.currentOpportunityPage * this.opportunityItemsPerPage;
    return t > this.totalOpportunities ? this.totalOpportunities : t;
  }
  updateVisibleOpportunityPages() {
    let e = Math.floor((this.currentOpportunityPage - 1) / 3) * 3 + 1,
      i = Math.min(e + 3 - 1, this.totalOpportunityPages);
    this.visibleOpportunityPageNumbers = [];
    for (let r = e; r <= i; r++) this.visibleOpportunityPageNumbers.push(r);
  }
  goToOpportunityPage(t) {
    (this.currentOpportunityPage = t),
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages();
  }
  goToPreviousOpportunityPage() {
    this.currentOpportunityPage > 1 &&
      (this.currentOpportunityPage--,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  goToNextOpportunityPage() {
    this.currentOpportunityPage < this.totalOpportunityPages &&
      (this.currentOpportunityPage++,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  get totalTasks() {
    return this.TaskList?.length || 0;
  }
  get totalTaskPages() {
    return Math.ceil(this.totalTasks / this.taskItemsPerPage);
  }
  paginateTasks() {
    let t = (this.currentTaskPage - 1) * this.taskItemsPerPage,
      e = t + this.taskItemsPerPage;
    this.paginatedTasks = this.TaskList.slice(t, e);
  }
  getTaskRangeEnd() {
    let t = this.currentTaskPage * this.taskItemsPerPage;
    return t > this.totalTasks ? this.totalTasks : t;
  }
  updateVisibleTaskPages() {
    let e = Math.floor((this.currentTaskPage - 1) / 3) * 3 + 1,
      i = Math.min(e + 3 - 1, this.totalTaskPages);
    this.visibleTaskPageNumbers = [];
    for (let r = e; r <= i; r++) this.visibleTaskPageNumbers.push(r);
  }
  goToPreviousTaskPage() {
    this.currentTaskPage > 1 &&
      (this.currentTaskPage--,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToNextTaskPage() {
    this.currentTaskPage < this.totalTaskPages &&
      (this.currentTaskPage++,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToTaskPage(t) {
    (this.currentTaskPage = t),
      this.paginateTasks(),
      this.updateVisibleTaskPages();
  }
  getRangeEnd() {
    return Math.min(this.currentPage * this.itemsPerPage, this.totalUsers);
  }
  get totalEvents() {
    return this.EventList ? this.EventList.length : 0;
  }
  get paginatedEvents() {
    if (!this.EventList || this.EventList.length === 0) return [];
    let t = (this.currentEventPage - 1) * this.eventItemsPerPage,
      e = t + this.eventItemsPerPage;
    return this.EventList.slice(t, e);
  }
  get totalEventPages() {
    return Math.ceil(this.totalEvents / this.eventItemsPerPage);
  }
  getEventsRangeEnd() {
    let t = this.currentEventPage * this.eventItemsPerPage;
    return t > this.totalEvents ? this.totalEvents : t;
  }
  get visibleEventPageNumbers() {
    let t = this.totalEventPages,
      e = this.currentEventPage,
      i = 5,
      r = Math.floor(i / 2);
    if (t === 0) return [];
    let o = Math.max(1, e - r),
      a = Math.min(t, o + i - 1);
    a - o < i - 1 && (o = Math.max(1, a - i + 1));
    let s = [];
    for (let l = o; l <= a; l++) s.push(l);
    return s;
  }
  goToPreviousEventPage() {
    this.currentEventPage > 1 && this.currentEventPage--;
  }
  goToNextEventPage() {
    this.currentEventPage < this.totalEventPages && this.currentEventPage++;
  }
  goToEventPage(t) {
    t >= 1 && t <= this.totalEventPages && (this.currentEventPage = t);
  }
  toggleUsersTable() {
    (this.showLeadsTable = !1),
      (this.showUsersTable = !0),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleTasksTable() {
    (this.showTaskTable = !0),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showOpportunityTable = !1),
      (this.showEventTable = !1);
  }
  toggleLeadsTable() {
    (this.showLeadsTable = !0),
      (this.showUsersTable = !1),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleOpportunityTable() {
    (this.showOpportunityTable = !0),
      (this.showEventTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  toggleEventTable() {
    (this.showEventTable = !0),
      (this.showOpportunityTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  ngAfterViewInit() {
    console.log("ngOnInit is called"),
      console.log("hello"),
      console.log(typeof $.fn.DataTable),
      this.initializeDataTable();
  }
  initializeDataTable() {
    setTimeout(() => {
      let t = $("#example5").DataTable();
      t && t.destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 100);
  }
  handleQueryParams() {
    this.route.queryParams.subscribe((t) => {
      (this.dealer_name = t.dealer_name),
        console.log("Dealer Name : ", this.dealer_name);
    });
  }
  handleRouteData() {
    this.route.data.subscribe((t) => {
      if (((this.dealerData = t.dealerData), this.dealerData)) {
        let e = this.dealerData.data.dealer.dealer_id;
        this.getAllUser(e);
      } else console.log("Dealer Data not available from resolver");
    });
  }
  handleDealerId(t) {
    this.route.paramMap.subscribe((e) => {
      let i = e.get("dealer_id");
      i
        ? t(i)
        : this.dealerData ||
          console.error("Dealer ID not found in the URL and no resolver data.");
    });
  }
  getAllUser(t) {
    console.log("Calling API with dealerId:", t),
      this.masterSrv.getAllUser(t).subscribe({
        next: (e) => {
          console.log("\u2705 Full API Response:", e),
            console.log("Fetched Users:", e.data),
            e.data && Array.isArray(e.data) && e.data.length > 0
              ? ((this.UserList = e.data),
                (this.currentPage = 1),
                this.paginateUsers(),
                this.updateVisiblePages(),
                console.log("Users List:", this.UserList),
                (this.loading = !1))
              : (console.warn("No users found"),
                (this.UserList = []),
                this.paginateUsers(),
                this.updateVisiblePages()),
            this.zone.run(() => {
              Array.isArray(this.UserList)
                ? (console.log("\u2705 Assigned UserList:", this.UserList),
                  this.cdr.detectChanges(),
                  setTimeout(() => {
                    this.initializeDataTable();
                  }, 500))
                : (console.warn("\u26A0\uFE0F Invalid API Response Format:", e),
                  (this.UserList = []));
            });
        },
        error: (e) => {
          console.error("\u274C API Error:", e),
            (this.UserList = []),
            this.paginateUsers(),
            this.updateVisiblePages(),
            this.cdr.detectChanges();
        },
      });
  }
  reinitializeDataTable() {
    setTimeout(() => {
      $("#example5").DataTable().clear().destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 200);
  }
  getAllLeads(t) {
    if ((console.log("Calling API with dealerId for leads:", t), !t)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllLead(t).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.leadList = e.data),
              console.log("Leads List:", this.leadList),
              (this.currentPage = 1),
              this.paginateLeads(),
              this.updateVisibleLeadPages())
            : (console.warn("No leads found"),
              (this.leadList = []),
              (this.paginatedLeads = []),
              (this.visiblePageNumbers = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e),
          (this.leadList = []),
          (this.paginatedLeads = []),
          (this.visiblePageNumbers = []);
      },
    });
  }
  getAllEvent(t) {
    if ((console.log("Calling API with dealerId for leads:", t), !t)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getEventsAll(t).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.EventList = e.data),
              console.log("Event List:", this.EventList))
            : (console.warn("No events found"), (this.EventList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.EventList = []);
      },
    });
  }
  getAllTasks(t) {
    if ((console.log("Calling API with dealerId for leads:", t), !t)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllTask(t).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.TaskList = e.data),
              console.log("Task List:", this.TaskList))
            : (console.warn("No tasks found"), (this.TaskList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.TaskList = []);
      },
    });
  }
  getAllOpp(t) {
    this.masterSrv.getAllOpportunities(t).subscribe({
      next: (e) => {
        this.OpportunityList.set(e), console.log("Leads data fetched:", e);
      },
      error: (e) => {
        alert(e.message || "An error occurred while fetching leads.");
      },
    });
  }
  router = G(Bt);
  logUserId(t) {
    console.log("Navigating to user with ID:", t),
      this.dealerData?.data.dealer?.dealer_id
        ? localStorage.setItem(
            "previousRoute",
            this.dealerData.data.dealer.dealer_id
          )
        : console.warn("dealer_id is missing, previousRoute not stored.");
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Yt), H(li), H(vr), H(et), H(Re));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-dealer"]],
    standalone: !0,
    features: [ue],
    decls: 46,
    vars: 11,
    consts: [
      ["noEntries", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [2, "cursor", "auto", "color", "#222fb9", 3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [2, "font-weight", "700 !important", "color", "black"],
      [
        "class",
        "col-xl-9",
        "style",
        `
        margin-top: 2em !important;
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
      `,
        4,
        "ngIf",
      ],
      [
        1,
        "col-xl-9",
        2,
        "margin-top",
        "2em !important",
        "display",
        "flex",
        "justify-content",
        "space-between",
        "align-items",
        "center",
        "width",
        "100%",
      ],
      [1, "card"],
      [
        1,
        "card-body",
        "py-9",
        "py-md-2",
        2,
        "margin-left",
        "0.2rem !important",
      ],
      [1, "row", "align-items-start"],
      [1, "mb-md-0"],
      [1, "media", "align-items-end"],
      [1, "media-body"],
      [1, "mb-0", 2, "background-color", "none"],
      [1, "form-group", 2, "margin-inline", "1em"],
      [1, "form-control", "form-control-lg", 3, "change", "value"],
      ["selected", "", "value", "users", 1, "drop"],
      ["value", "leads", 1, "drop"],
      ["value", "opportunities", 1, "drop"],
      ["value", "tasks", 1, "drop"],
      ["value", "events", 1, "drop"],
      [1, "row"],
      [1, "col-lg-12"],
      ["class", "p-3 bg-white rounded shadow-sm", 4, "ngIf"],
      [1, "media", "align-items-center"],
      [1, "media-body", "ml-1"],
      [1, "mb-0", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-22"],
      [1, "span"],
      [1, "media", "align-items-center", 3, "click"],
      [1, "media-body", "ml-1", 3, "click"],
      [1, "p-3", "bg-white", "rounded", "shadow-sm"],
      ["class", "table-responsive", 4, "ngIf"],
      [1, "row", "align-items-center", "mt-3"],
      [1, "col-md-6"],
      [1, "mb-0", "text-muted"],
      [4, "ngIf", "ngIfElse"],
      ["aria-label", "Page navigation"],
      [1, "pagination", "justify-content-end", "mb-0"],
      [1, "page-item"],
      [1, "page-link", 3, "click"],
      ["class", "page-item", 3, "active", "disabled", 4, "ngFor", "ngForOf"],
      [1, "table-responsive"],
      [
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      ["colspan", "7"],
      [2, "color", "red", "text-align", "center"],
      [1, "page-link", 3, "click", "disabled"],
      [1, "table-responsive", 2, "overflow-x", "auto", "width", "100%"],
      [1, "table", "mb-4", "dataTablesCard", "fs-14"],
      ["class", "page-item", 3, "active", 4, "ngFor", "ngForOf"],
      ["colspan", "12"],
      ["class", "mb-0 text-muted", 4, "ngIf"],
      [
        "colspan",
        "13",
        2,
        "text-align",
        "center",
        "color",
        "grey",
        "padding",
        "1rem",
      ],
      [
        "colspan",
        "11",
        2,
        "text-align",
        "center",
        "color",
        "grey",
        "padding",
        "1rem",
      ],
      [3, "click", "routerLink"],
      [1, ""],
      [1, "fa", "fa-eye"],
      ["class", "row align-items-center mt-3", 4, "ngIf"],
      [
        "colspan",
        "12",
        2,
        "text-align",
        "center",
        "color",
        "grey",
        "padding",
        "1rem",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        f(6, "Users"),
        u()(),
        h(7, "li", 5)(8, "a", 7),
        f(9, "Dealer"),
        u()(),
        h(10, "li", 8)(11, "a", 9),
        f(12),
        u()()()(),
        F(13, DN, 54, 7, "div", 10),
        h(14, "div", 11)(15, "div", 12)(16, "div", 13)(17, "div", 14)(
          18,
          "div",
          15
        )(19, "div", 16)(20, "div", 17)(21, "h3", 18),
        f(22),
        u()()()()()()(),
        h(23, "div", 19)(24, "select", 20),
        U("change", function (o) {
          return i.handleSelectionChange(o);
        }),
        h(25, "option", 21),
        f(26, "Users"),
        u(),
        h(27, "option", 22),
        f(28, "Leads"),
        u(),
        h(29, "option", 23),
        f(30, "Opportunities"),
        u(),
        h(31, "option", 24),
        f(32, "Tasks"),
        u(),
        h(33, "option", 25),
        f(34, "Events"),
        u()()()(),
        h(35, "div", 26)(36, "div", 27),
        F(37, ON, 18, 8, "div", 28),
        u(),
        h(38, "div", 27),
        F(39, FN, 58, 10, "div", 28),
        u(),
        h(40, "div", 27),
        F(41, jN, 60, 11, "div", 28),
        h(42, "div", 27),
        F(43, YN, 40, 11, "div", 28),
        h(44, "div", 27),
        F(45, ZN, 27, 3, "div", 28),
        u()()()()()()),
        e & 2 &&
          (g(8),
          M("routerLink", Si(10, CN)),
          g(4),
          ae(
            "",
            i.dealerData == null ||
              i.dealerData.data == null ||
              i.dealerData.data.dealer == null
              ? null
              : i.dealerData.data.dealer.dealer_name,
            " "
          ),
          g(),
          M("ngIf", i.dealerData),
          g(9),
          ae(" ", i.selectedOption(), " "),
          g(2),
          M("value", i.selectedOption()),
          g(13),
          M("ngIf", i.selectedOption() === "users"),
          g(2),
          M("ngIf", i.selectedOption() === "leads"),
          g(2),
          M("ngIf", i.selectedOption() === "opportunities"),
          g(2),
          M("ngIf", i.selectedOption() === "tasks"),
          g(2),
          M("ngIf", i.selectedOption() === "events"));
    },
    dependencies: [ht, $i, Wi, Fe, ti, rt, Gi, mi],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.custom-scroll-wrapper[_ngcontent-%COMP%]{overflow-x:auto;display:block;width:100%}.table-scroll-container[_ngcontent-%COMP%]{overflow-x:auto;width:100%}.table-wrapper[_ngcontent-%COMP%]{border:1px solid #ccc;border-radius:20px;background-color:#fff}.bg-white[_ngcontent-%COMP%]{background-color:#fff!important}.shadow-sm[_ngcontent-%COMP%]{box-shadow:0 .125rem .25rem #00000013}.rounded[_ngcontent-%COMP%]{border-radius:.5rem}.table-responsive[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}",
    ],
  });
};
var JN = ["inputElement"];
function e3(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "form", null, 0),
      W(2, "img", 9),
      h(3, "h2", 10),
      f(4, "Login to Smart Assist"),
      u(),
      h(5, "div", 11)(6, "div", 12),
      W(7, "i", 13),
      u(),
      h(8, "div", 14)(9, "h5", 15),
      f(10, "Username"),
      u(),
      h(11, "input", 16, 1),
      Wt("ngModelChange", function (r) {
        N(e);
        let o = E();
        return $t(o.loginObj.email, r) || (o.loginObj.email = r), L(r);
      }),
      u()()(),
      h(13, "div", 17)(14, "div", 12),
      W(15, "i", 18),
      u(),
      h(16, "div", 14)(17, "h5"),
      f(18, "Password"),
      u(),
      h(19, "input", 19, 1),
      Wt("ngModelChange", function (r) {
        N(e);
        let o = E();
        return $t(o.loginObj.password, r) || (o.loginObj.password = r), L(r);
      }),
      u(),
      h(21, "i", 20),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.togglePassword("password"));
      }),
      u()()(),
      h(22, "a", 21),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.showVerifyEmail());
      }),
      f(23, "Forgot Password?"),
      u(),
      h(24, "input", 22),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.onLogin());
      }),
      u()();
  }
  if (n & 2) {
    let e = E();
    g(11),
      zt("ngModel", e.loginObj.email),
      g(8),
      zt("ngModel", e.loginObj.password),
      M("type", e.showPassword ? "text" : "password"),
      g(2),
      Ue(
        "icon11 absolute right-8 top-1/2 transform -translate-y-1/2 cursor-pointer " +
          (e.showPassword ? "fas fa-eye-slash eye" : "fas fa-eye eye")
      );
  }
}
function t3(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "form", null, 2)(2, "div", 23),
      W(3, "img", 9),
      u(),
      h(4, "h2", 10),
      f(5, " Verify Email "),
      u(),
      h(6, "div", 24)(7, "div", 12),
      W(8, "i", 25),
      u(),
      h(9, "div", 14)(10, "input", 26, 3),
      Wt("ngModelChange", function (r) {
        N(e);
        let o = E();
        return $t(o.verifyObj.email, r) || (o.verifyObj.email = r), L(r);
      }),
      u()()(),
      h(12, "a", 27),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.backToLogin());
      }),
      f(13, "Back to Login"),
      u(),
      h(14, "input", 28),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.onVerifyEmail());
      }),
      u()();
  }
  if (n & 2) {
    let e = E();
    g(10), zt("ngModel", e.verifyObj.email);
  }
}
function i3(n, t) {
  if ((n & 1 && (h(0, "div", 37), f(1), u()), n & 2)) {
    let e = E(2);
    g(), ae(" Time remaining: ", e.countdown, "s ");
  }
}
function n3(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "a", 38),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.onVerifyEmail());
      }),
      f(1, "Resend OTP"),
      u();
  }
}
function r3(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "form", null, 4)(2, "div", 23),
      W(3, "img", 9),
      u(),
      h(4, "h2", 10),
      f(5, " Verify OTP "),
      u(),
      F(6, i3, 2, 1, "div", 29),
      h(7, "div", 11)(8, "div", 12),
      W(9, "i", 30),
      u(),
      h(10, "div", 31)(11, "input", 32, 5),
      U("input", function (r) {
        N(e);
        let o = E();
        return L(o.onOtpInput(r));
      }),
      Wt("ngModelChange", function (r) {
        N(e);
        let o = E();
        return $t(o.loginObj.otp, r) || (o.loginObj.otp = r), L(r);
      }),
      u()()(),
      h(13, "div", 33)(14, "a", 34),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.backToLogin());
      }),
      f(15, "Back to Login"),
      u(),
      F(16, n3, 2, 0, "a", 35),
      u(),
      h(17, "input", 36),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.onVerifyOtp());
      }),
      u()();
  }
  if (n & 2) {
    let e = At(1),
      i = E();
    g(6),
      M("ngIf", i.countdown > 0),
      g(5),
      zt("ngModel", i.loginObj.otp),
      g(5),
      M("ngIf", i.countdown === 0),
      g(),
      M("disabled", e.invalid);
  }
}
function o3(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "form")(1, "h2", 39),
      f(2, "Set New Password"),
      u(),
      h(3, "div", 17)(4, "div", 12),
      W(5, "i", 18),
      u(),
      h(6, "div", 14)(7, "h5"),
      f(8, "New Password"),
      u(),
      h(9, "input", 40, 1),
      Wt("ngModelChange", function (r) {
        N(e);
        let o = E();
        return $t(o.loginObj.newPwd, r) || (o.loginObj.newPwd = r), L(r);
      }),
      u(),
      h(11, "i", 41),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.togglePassword("password"));
      }),
      u()()(),
      h(12, "div", 17)(13, "div", 42),
      W(14, "i", 18),
      u(),
      h(15, "div", 14)(16, "h5"),
      f(17, "Confirm Password"),
      u(),
      h(18, "input", 43, 1),
      Wt("ngModelChange", function (r) {
        N(e);
        let o = E();
        return (
          $t(o.loginObj.confirmPassword, r) || (o.loginObj.confirmPassword = r),
          L(r)
        );
      }),
      u(),
      h(20, "i", 41),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.togglePassword("confirmPassword"));
      }),
      u()()(),
      h(21, "div", 44)(22, "a", 34),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.backToLogin());
      }),
      f(23, "Back to Login"),
      u()(),
      h(24, "input", 45),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.onSetNewPassword());
      }),
      u()();
  }
  if (n & 2) {
    let e = E();
    g(9),
      zt("ngModel", e.loginObj.newPwd),
      M("type", e.showPassword ? "text" : "password"),
      g(2),
      Ue(e.showPassword ? "fas fa-eye-slash" : "fas fa-eye"),
      g(7),
      zt("ngModel", e.loginObj.confirmPassword),
      M("type", e.showConfirmPassword ? "text" : "password"),
      g(2),
      Ue(e.showConfirmPassword ? "fas fa-eye-slash" : "fas fa-eye");
  }
}
var Yl = class n {
  inputElements;
  loginObj = {
    email: "",
    password: "",
    otp: 0,
    confirmPassword: "",
    newPwd: "",
  };
  verifyObj = { email: "" };
  currentStep = "login";
  showPassword = !1;
  showConfirmPassword = !1;
  countdown = 0;
  countdownInterval;
  API_BASE_URL = "https://uat.smartassistapp.in/api/
";
  SESSION_TIMEOUT = 60 * 60 * 1e3;
  http = G(li);
  router = G(Bt);
  toastr = G(ki);
  renderer = G(bi);
  constructor() {}
  ngAfterViewInit() {
    this.inputElements &&
      this.inputElements.toArray().forEach((t) => {
        this.renderer.listen(
          t.nativeElement,
          "focus",
          this.addClass.bind(this)
        ),
          this.renderer.listen(
            t.nativeElement,
            "blur",
            this.removeClass.bind(this)
          );
      });
  }
  showVerifyEmail() {
    (this.currentStep = "verifyEmail"), this.resetFormExceptEmail();
  }
  showVerifyOtp() {
    this.currentStep = "verifyOtp";
  }
  showNewPassword() {
    this.currentStep = "newPassword";
  }
  backToLogin() {
    (this.currentStep = "login"),
      window.location.reload(),
      this.resetForm(),
      this.countdownInterval && clearInterval(this.countdownInterval);
  }
  resetForm() {
    this.loginObj = {
      email: "",
      newPwd: "",
      otp: null,
      confirmPassword: "",
      password: "",
    };
  }
  resetFormExceptEmail() {
    let t = this.loginObj.email;
    this.resetForm(), (this.loginObj.email = t);
  }
  togglePassword(t) {
    t === "password"
      ? (this.showPassword = !this.showPassword)
      : (this.showConfirmPassword = !this.showConfirmPassword);
  }
  validateLoginInput() {
    return !this.loginObj.email || !this.loginObj.password
      ? (this.toastr.error(
          "Please enter valid email and password",
          "Validation Error"
        ),
        !1)
      : this.isValidEmail(this.loginObj.email)
      ? !0
      : (this.toastr.error("Please enter a valid password", "Validation Error"),
        !1);
  }
  validateNewPassword() {
    return !this.loginObj.newPwd || !this.loginObj.confirmPassword
      ? (this.toastr.error("Please enter both passwords", "Validation Error"),
        !1)
      : this.loginObj.newPwd !== this.loginObj.confirmPassword
      ? (this.toastr.error("Passwords do not match", "Validation Error"), !1)
      : !0;
  }
  isValidEmail(t) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t);
  }
  onLogin() {
    this.validateLoginInput() &&
      this.http
        .post(`${this.API_BASE_URL}login/super-admin`, this.loginObj)
        .subscribe({
          next: (t) => {
            t.status === 200 && t.data?.token
              ? this.handleSuccessfulLogin(t.data.token)
              : this.toastr.error(t.message || "Invalid credentials", "Error");
          },
          error: (t) => {
            console.error("Login error:", t);
            let e = t.error?.message || "An error occurred";
            this.toastr.error(e, "Error");
          },
        });
  }
  onVerifyEmail() {
    if (!this.verifyObj.email || !this.isValidEmail(this.verifyObj.email)) {
      this.toastr.error(
        "Please enter a valid email address",
        "Validation Error"
      );
      return;
    }
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-email`, {
        email: this.verifyObj.email,
      })
      .subscribe({
        next: () => {
          this.toastr.success("OTP sent to your email", "Success"),
            this.showVerifyOtp(),
            this.startCountdown();
        },
        error: (t) => {
          console.error("Login error:", t);
          let e = t.error?.message || "An error occurred";
          this.toastr.error(e, "Error");
        },
      });
  }
  onVerifyOtp() {
    if (this.loginObj.otp === null || isNaN(Number(this.loginObj.otp))) {
      this.toastr.error("Please enter a valid OTP", "Validation Error");
      return;
    }
    let t = { otp: Number(this.loginObj.otp), email: this.verifyObj.email };
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-otp`, t)
      .subscribe({
        next: () => {
          this.toastr.success("OTP verified successfully", "Success"),
            this.showNewPassword();
        },
        error: (e) => {
          console.error("OTP verification error:", e);
          let i = e.error.error;
          this.toastr.error(i, "Error");
        },
      });
  }
  onOtpInput(t) {
    let e = t.target,
      i = e.value.replace(/[^0-9]/g, "");
    (this.loginObj.otp = i ? Number(i) : 0), (e.value = i);
  }
  onSetNewPassword() {
    if (!this.validateNewPassword()) return;
    let t = {
      email: this.verifyObj.email,
      newPwd: this.loginObj.newPwd,
      confirmPwd: this.loginObj.confirmPassword,
    };
    this.http
      .put(`${this.API_BASE_URL}login/s-admin/forgot-pwd/new-pwd`, t)
      .subscribe({
        next: (e) => {
          this.toastr.success("Password reset successfully", "Success"),
            window.location.reload(),
            this.backToLogin();
        },
        error: (e) => {
          if ((console.error("Password reset error:", e), e.status === 400))
            this.toastr.error(
              "Invalid request. Please check your inputs.",
              "Error"
            );
          else if (e.status === 404)
            this.toastr.error("User not found", "Error");
          else {
            let i = e.error.error;
            this.toastr.error(i, "Error");
          }
        },
        complete: () => {
          (this.loginObj.newPwd = ""), (this.loginObj.confirmPassword = "");
        },
      });
  }
  handleSuccessfulLogin(t) {
    sessionStorage.setItem("token", t),
      this.router
        .navigate(["/Admin/dashboard"])
        .then(() => {
          window.location.reload();
        })
        .catch((e) => {
          console.error("Navigation error:", e),
            this.toastr.error("Failed to navigate to dashboard", "Error");
        }),
      this.setupAutoLogout();
  }
  setupAutoLogout() {
    setTimeout(() => {
      sessionStorage.removeItem("token"),
        this.router
          .navigateByUrl("/login")
          .then(() => {
            this.toastr.info(
              "Session expired. Please log in again.",
              "Session Expired"
            );
          })
          .catch((t) => {
            console.error("Logout navigation error:", t);
          });
    }, this.SESSION_TIMEOUT);
  }
  startCountdown() {
    (this.countdown = 5 * 60),
      this.countdownInterval && clearInterval(this.countdownInterval),
      (this.countdownInterval = setInterval(() => {
        this.countdown--,
          this.countdown === 0 && clearInterval(this.countdownInterval);
      }, 1e3));
  }
  addClass(t) {
    let e = t.target.parentNode?.parentNode;
    e && e.classList.add("focus");
  }
  removeClass(t) {
    let e = t.target.parentNode?.parentNode;
    e && t.target.value === "" && e.classList.remove("focus");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-login-1"]],
    viewQuery: function (e, i) {
      if ((e & 1 && Xt(JN, 5), e & 2)) {
        let r;
        xt((r = Ct())) && (i.inputElements = r);
      }
    },
    standalone: !0,
    features: [ue],
    decls: 6,
    vars: 4,
    consts: [
      ["loginForm", "ngForm"],
      ["inputElement", ""],
      ["verifyForm", "ngForm"],
      ["dealerEmail", "ngModel"],
      ["otpForm", "ngForm"],
      ["otp", "ngModel"],
      [1, "custom-container"],
      [1, "login-content"],
      [4, "ngIf"],
      [
        "src",
        "../../../assets/admin-img/jlr logo.svg",
        "alt",
        "Avatar Image",
        1,
        "mx-auto",
        "inline-flex",
        "items-center",
        "justify-center",
      ],
      [
        1,
        "title",
        2,
        "color",
        "#222fb9",
        "font-size",
        "20px",
        "text-transform",
        "capitalize",
        "margin-top",
        "15px",
      ],
      [1, "input-div", "one"],
      [1, "i", "mr-3"],
      [1, "fas", "fa-user"],
      [1, "div", "relative"],
      [1, "absolute", "left-2", "top-1", "text-gray-500", "text-sm"],
      [
        "type",
        "text",
        "name",
        "username",
        "required",
        "",
        1,
        "forms-control",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "input-div", "pass"],
      [1, "fas", "fa-lock"],
      [
        "name",
        "password",
        "required",
        "",
        "autocomplete",
        "new-password",
        1,
        "inputt",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        2,
        "padding-left",
        "1px !important",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [3, "click"],
      ["href", "javascript:void(0)", 1, "forgot-password", 3, "click"],
      ["type", "submit", "value", "Login", 1, "btn", 3, "click"],
      [1, "flex", "justify-center"],
      [1, "input-div"],
      [1, "fas", "fa-envelope"],
      [
        "name",
        "dealer_email",
        "type",
        "email",
        "required",
        "",
        "email",
        "",
        "placeholder",
        "E-mail",
        3,
        "ngModelChange",
        "ngModel",
      ],
      ["href", "javascript:void(0)", 1, "back-to-login", 3, "click"],
      ["type", "submit", "value", "Send OTP", 1, "btn", 3, "click"],
      ["class", "text-center mb-4", 4, "ngIf"],
      [1, "fas", "fa-key", "color"],
      [1, "relative", "z-0", "w-full", "mb-1", "group", "flex", "flex-col"],
      [
        "type",
        "text",
        "name",
        "otp",
        "required",
        "",
        "placeholder",
        "OTP",
        1,
        "",
        3,
        "input",
        "ngModelChange",
        "ngModel",
      ],
      [1, "flex", "justify-end", "text-end", "w-full"],
      [1, "back-to-login", 2, "cursor", "pointer", 3, "click"],
      [
        "style",
        "cursor: pointer",
        "class",
        "resend-otp",
        3,
        "click",
        4,
        "ngIf",
      ],
      [
        "type",
        "submit",
        "value",
        "Verify OTP",
        1,
        "btn",
        3,
        "click",
        "disabled",
      ],
      [1, "text-center", "mb-4"],
      [1, "resend-otp", 2, "cursor", "pointer", 3, "click"],
      [1, "title"],
      [
        "name",
        "password",
        "required",
        "",
        1,
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [
        1,
        "icon11",
        "absolute",
        "right-8",
        "top-1/2",
        "transform",
        "-translate-y-1/2",
        "cursor-pointer",
        3,
        "click",
      ],
      [1, "i"],
      [
        "name",
        "confirm-password",
        "required",
        "",
        1,
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [1, "flex", "justify-between", "w-full"],
      ["type", "submit", "value", "Reset Password", 1, "btn", 3, "click"],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 6)(1, "div", 7),
        F(2, e3, 25, 5, "form", 8)(3, t3, 15, 1, "form", 8)(
          4,
          r3,
          18,
          4,
          "form",
          8
        )(5, o3, 25, 8, "form", 8),
        u()()),
        e & 2 &&
          (g(2),
          M("ngIf", i.currentStep === "login"),
          g(),
          M("ngIf", i.currentStep === "verifyEmail"),
          g(),
          M("ngIf", i.currentStep === "verifyOtp"),
          g(),
          M("ngIf", i.currentStep === "newPassword"));
    },
    dependencies: [Fe, rt, ht, Xr, fi, Ti, zi, Dr, zp, an, jp, Ic],
    styles: [
      '*[_ngcontent-%COMP%]{padding:0;margin:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;overflow:hidden}.inputt[_ngcontent-%COMP%]{width:90%!important}.fas[_ngcontent-%COMP%]{color:#3b86e9!important}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%;margin:0;padding:0}.wave[_ngcontent-%COMP%]{position:fixed;bottom:0;left:0;height:100%;z-index:-1}.container[_ngcontent-%COMP%]{width:100%;grid-gap:7rem;padding:0 2rem}.img[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center}.login-content[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;text-align:center;height:97vh}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:500px}form[_ngcontent-%COMP%]{width:360px}.login-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:15px 0;color:#333;text-transform:uppercase;font-size:2.9rem}.login-content[_ngcontent-%COMP%]   .input-div[_ngcontent-%COMP%]{position:relative;display:grid;grid-template-columns:7% 93%;margin:25px 0;padding:5px 0;border-bottom:2px solid #d9d9d9}.login-content[_ngcontent-%COMP%]   .input-div.one[_ngcontent-%COMP%]{margin-top:0}.i[_ngcontent-%COMP%]{color:#d9d9d9;display:flex;justify-content:center;align-items:center}.i[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{transition:.3s}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;height:45px}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{position:absolute;left:10px;top:50%;transform:translateY(-50%);color:#999;font-size:18px;transition:.3s}.input-div[_ngcontent-%COMP%]:before, .input-div[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-2px;width:0%;height:2px;background-color:#3b86e9;transition:.4s}.input-div[_ngcontent-%COMP%]:before{right:50%}.input-div[_ngcontent-%COMP%]:after{left:50%}.input-div.focus[_ngcontent-%COMP%]:before, .input-div.focus[_ngcontent-%COMP%]:after{width:50%}.input-div.focus[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{top:-5px;font-size:15px}input.forms-control[_ngcontent-%COMP%]{background-color:transparent!important;box-shadow:none!important;transition:background-color 5000s ease-in-out 0s}input[_ngcontent-%COMP%]:-webkit-autofill, input[_ngcontent-%COMP%]:-webkit-autofill:hover, input[_ngcontent-%COMP%]:-webkit-autofill:focus{box-shadow:none!important;color:#000!important;transition:background-color 5000s ease-in-out 0s}.fas[_ngcontent-%COMP%]{color:#222fb9!important}.input-div.focus[_ngcontent-%COMP%] > .i[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{color:#5298ee}.input-div[_ngcontent-%COMP%]   .focus[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{top:-5px;font-size:15px;color:#7e7e7e}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > input[_ngcontent-%COMP%]{position:absolute;left:0;top:0;width:100%;height:100%;outline:none;background:none;font-size:1.2rem;border:none;color:#555;font-family:poppins,sans-serif}.password-toggle[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);cursor:pointer;z-index:10}.width-input[_ngcontent-%COMP%]{width:90%!important}.icon11[_ngcontent-%COMP%]{margin-left:18em;margin-top:.7em}.password-toggle[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#999;font-size:16px}.password-toggle[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{color:#666}.input-div.pass[_ngcontent-%COMP%], .input-div.verify[_ngcontent-%COMP%]{margin-bottom:4px}a[_ngcontent-%COMP%]{display:block;text-align:right;text-decoration:none;color:#999;font-size:.9rem;transition:.3s}a[_ngcontent-%COMP%]:hover{color:#3b86e9}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#3b86e9,#5496e7,#5298ee);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}@media screen and (max-width: 1050px){.container[_ngcontent-%COMP%]{grid-gap:5rem}}@media screen and (max-width: 1000px){form[_ngcontent-%COMP%]{width:290px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2.4rem;margin:8px 0}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:400px}}@media screen and (max-width: 900px){.container[_ngcontent-%COMP%]{grid-template-columns:1fr}.img[_ngcontent-%COMP%], .wave[_ngcontent-%COMP%]{display:none}.login-content[_ngcontent-%COMP%]{justify-content:center}}.eye[_ngcontent-%COMP%]{color:#b9b8b8!important}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (min-width: 1024px) and (max-width: 1366px){.img[_ngcontent-%COMP%]{margin-top:-300px}}@media (min-width: 768px) and (max-width: 1023px){.login-content[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);margin-top:0;justify-content:center}}@media (max-width: 768px){.custom-container[_ngcontent-%COMP%]{margin-left:0!important}}input[type=password][_ngcontent-%COMP%]::-ms-reveal, input[type=password][_ngcontent-%COMP%]::-ms-clear{display:none}input[type=password][_ngcontent-%COMP%]::-webkit-password-toggle-button, input[type=password][_ngcontent-%COMP%]::-webkit-textfield-decoration-container{display:none!important}input[type=password][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-decoration, input[type=password][_ngcontent-%COMP%]::-webkit-search-cancel-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-decoration{display:none!important}input[type=password][_ngcontent-%COMP%]{-moz-appearance:textfield}.new-custom[_ngcontent-%COMP%]{display:flex;justify-content:center}.div[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{position:absolute;top:12px;left:10px;font-size:16px;color:#9ca3af;pointer-events:none;transition:all .2s ease}.div[_ngcontent-%COMP%]   h5.floating[_ngcontent-%COMP%]{top:-10px;left:5px;font-size:12px;color:#3b86e9;background:#fff;padding:0 5px;z-index:10}.icon11[_ngcontent-%COMP%]{z-index:10;position:relative;pointer-events:auto;width:24px;height:24px;display:inline-flex;align-items:center;justify-content:center}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#222fb9);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}.btn[_ngcontent-%COMP%]:hover{background-position:right}',
    ],
  });
};
function a3(n, t) {
  if ((n & 1 && (h(0, "div", 12), f(1), u()), n & 2)) {
    let e = E().ngIf,
      i = E();
    g(), ae(" ", i.getInitials(e.name), " ");
  }
}
function s3(n, t) {
  if ((n & 1 && W(0, "img", 13), n & 2)) {
    let e = E(2);
    M("src", e.profileImageUrl, Mh);
  }
}
function l3(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 6)(1, "div", 7),
      F(2, a3, 2, 1, "div", 8)(3, s3, 1, 1, "ng-template", null, 0, ei),
      u(),
      h(5, "div", 9)(6, "h5", 10),
      f(7),
      u(),
      h(8, "p", 11),
      f(9),
      u()()()),
    n & 2)
  ) {
    let e = t.ngIf,
      i = At(4),
      r = E();
    g(2),
      M("ngIf", !r.isCustomProfileImage())("ngIfElse", i),
      g(5),
      B(e.name),
      g(2),
      B(e.email);
  }
}
function c3(n, t) {
  n & 1 && (h(0, "div", 14), f(1, " Loading profile details... "), u());
}
var ku = class n {
  constructor(t, e) {
    this.http = t;
    this.context = e;
  }
  masterSrv = G(Ze);
  profileImageUrl = "/assets/public/images/profile/default.png";
  profile = fe(null);
  ngOnInit() {
    this.context.onSideBarClick$.next({
      role: "profile",
      pageTitle: "Profile Management",
    }),
      this.getProfileData(),
      this.getProfileImage();
  }
  isCustomProfileImage() {
    return this.profileImageUrl !== "/assets/public/images/profile/default.png";
  }
  getProfileData() {
    this.masterSrv.getProfileData().subscribe({
      next: (t) => {
        console.log("Fetched Profile Data:", t), this.profile.set(t.data);
      },
      error: (t) => {
        console.error("Error fetching profile data:", t),
          alert("Failed to fetch profile data.");
      },
    });
  }
  getProfileImage() {
    this.http
      .get("https://uat.smartassistapp.in/api/
superAdmin/show-profile")
      .subscribe({
        next: (t) => {
          console.log("Fetched Profile Image:", t),
            t?.status === 200 && t.data?.image_url
              ? (this.profileImageUrl = t.data.image_url)
              : (this.profileImageUrl =
                  "/assets/public/images/profile/default.png");
        },
        error: (t) => {
          console.error("Error fetching profile image:", t),
            (this.profileImageUrl =
              "/assets/public/images/profile/default.png");
        },
      });
  }
  getInitials(t) {
    let e = t.trim().split(" ");
    return e.length === 1
      ? e[0].charAt(0).toUpperCase()
      : (e[0].charAt(0) + e[e.length - 1].charAt(0)).toUpperCase();
  }
  static ɵfac = function (e) {
    return new (e || n)(H(li), H(yn));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-profile"]],
    standalone: !0,
    features: [ue],
    decls: 5,
    vars: 2,
    consts: [
      ["profilePic", ""],
      [1, "container-fluid"],
      [
        1,
        "d-flex",
        "justify-content-center",
        "align-items-center",
        2,
        "min-height",
        "80vh",
      ],
      [1, "card", "rounded-4", "p-4", 2, "width", "100%"],
      ["class", "row g-3 align-items-center", 4, "ngIf"],
      ["class", "text-muted text-center py-3", 4, "ngIf"],
      [1, "row", "g-3", "align-items-center"],
      [1, "col-auto"],
      ["class", "avatar-circle shadow-sm", 4, "ngIf", "ngIfElse"],
      [1, "col"],
      [1, "text-dark", "mb-1", 2, "font-size", "22px"],
      [1, "text-muted", "mb-2", 2, "font-size", "17px"],
      [1, "avatar-circle", "shadow-sm"],
      ["alt", "Profile Photo", 1, "avatar-img", "shadow-sm", 3, "src"],
      [1, "text-muted", "text-center", "py-3"],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 1)(1, "div", 2)(2, "div", 3),
        F(3, l3, 10, 4, "div", 4)(4, c3, 2, 0, "div", 5),
        u()()()),
        e & 2 && (g(3), M("ngIf", i.profile()), g(), M("ngIf", !i.profile()));
    },
    dependencies: [Fe, rt],
    styles: [
      ".avatar-circle[_ngcontent-%COMP%]{width:90px;height:90px;background-color:#dce3fa;color:#3b4cca;font-size:42px;font-weight:600;border-radius:50%;display:flex;align-items:center;justify-content:center;text-transform:uppercase}.avatar-img[_ngcontent-%COMP%]{width:80px;height:80px;border-radius:50%;object-fit:cover}",
    ],
  });
};
var ql = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("id");
    return i ? this.masterSrv.getDealerById(i) : be(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(Ze));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Kl = class n {
  user_id;
  account_id;
  name;
  email;
  phone;
  user_role;
  password;
  otp_validated;
  otp;
  otp_expiration;
  corporate_id;
  dealer_code;
  dealer_id;
  role_id;
  role_name;
  team_id;
  team_name;
  fname;
  lname;
  team;
  role;
  constructor() {
    (this.user_id = ""),
      (this.account_id = ""),
      (this.name = ""),
      (this.phone = void 0),
      (this.email = ""),
      (this.user_role = ""),
      (this.password = ""),
      (this.otp_validated = ""),
      (this.otp = ""),
      (this.otp_expiration = ""),
      (this.dealer_code = void 0),
      (this.corporate_id = ""),
      (this.dealer_id = ""),
      (this.role_id = ""),
      (this.role_name = ""),
      (this.team_id = ""),
      (this.team_name = ""),
      (this.fname = ""),
      (this.lname = ""),
      (this.role = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Hx = (() => {
  class n {
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵmod = we({ type: n });
    static ɵinj = Ce({ imports: [Fe, Ln, Ui, Ln] });
  }
  return n;
})();
var ZU = new Me("RowDef"),
  JU = new Me("DatatableComponentToken");
var jx = (() => {
  class n {
    static forRoot(e) {
      return {
        ngModule: n,
        providers: [{ provide: "configuration", useValue: e }],
      };
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = we({ type: n });
    }
    static {
      this.ɵinj = Ce({});
    }
  }
  return n;
})();
var ns = class n {
  confirmationSubject = new Ie();
  confirm(t) {
    let e = window.confirm(t);
    return (
      this.confirmationSubject.next(e), this.confirmationSubject.asObservable()
    );
  }
  showAlert(t, e) {
    let i = document.createElement("div");
    (i.className = `alert alert-${t} alert-dismissible fade show fixed-top m-3`),
      (i.innerHTML = `
      <span class="alert-icon">
        <svg viewBox="0 0 24 24" width="24" height="24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 11 12 14 22 4"></polyline>
        </svg>
      </span>
      <strong>${t.charAt(0).toUpperCase() + t.slice(1)}!</strong> ${e}
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span>&times;</span>
      </button>
    `),
      document.body.appendChild(i),
      setTimeout(() => {
        i.classList.remove("show"), i.remove();
      }, 1e3);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var qo = (n) => ({ "is-invalid": n });
function d3(n, t) {
  n & 1 && (h(0, "tr")(1, "td", 45), f(2, "No Users found"), u()());
}
function u3(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td"),
      f(6),
      u(),
      h(7, "td"),
      f(8),
      u(),
      h(9, "td", 46)(10, "a", 47),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.onEdit(r));
      }),
      W(11, "i", 48),
      u(),
      h(12, "a", 49),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.openDeleteModal(r));
      }),
      W(13, "i", 50),
      u()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      r = E();
    g(2),
      B((r.currentPage - 1) * r.itemsPerPage + i + 1),
      g(2),
      B(e.name),
      g(2),
      B(e.email),
      g(2),
      B(e.user_role);
  }
}
function h3(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "li", 51)(1, "a", 41),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.goToPage(r));
      }),
      f(2),
      u()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = E();
    Te("active", e === i.currentPage), g(2), B(e);
  }
}
function p3(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 52)(1, "div", 53)(2, "div", 54)(3, "div", 55)(4, "h5", 56),
      f(5, "Delete User"),
      u()(),
      h(6, "div", 57),
      f(7, "Are you sure you want to delete this user?"),
      u(),
      h(8, "div", 58)(9, "button", 59),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeDeleteModal());
      }),
      f(10, "Cancel"),
      u(),
      h(11, "button", 60),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.deleteUserId());
      }),
      f(12, "Delete"),
      u()()()()();
  }
}
function m3(n, t) {
  n & 1 && (h(0, "span"), f(1, "First name is required."), u());
}
function f3(n, t) {
  if ((n & 1 && (h(0, "div", 72), F(1, m3, 2, 0, "span", 33), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function g3(n, t) {
  n & 1 && (h(0, "span"), f(1, "Last name is required."), u());
}
function _3(n, t) {
  if ((n & 1 && (h(0, "div", 72), F(1, g3, 2, 0, "span", 33), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function b3(n, t) {
  if ((n & 1 && (h(0, "option", 86), f(1), u()), n & 2)) {
    let e = t.$implicit;
    M("value", e.dealer_id), g(), ae(" ", e.dealer_code, " ");
  }
}
function v3(n, t) {
  n & 1 && (h(0, "span"), f(1, " Dealer Code is required. "), u());
}
function y3(n, t) {
  if ((n & 1 && (h(0, "div", 72), F(1, v3, 2, 0, "span", 33), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("dealer_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function x3(n, t) {
  if ((n & 1 && (h(0, "option", 86), f(1), u()), n & 2)) {
    let e = t.$implicit;
    M("value", e.role_id), g(), ae(" ", e.role_name, " ");
  }
}
function C3(n, t) {
  n & 1 && (h(0, "span"), f(1, " Role name is required. "), u());
}
function w3(n, t) {
  if ((n & 1 && (h(0, "div", 72), F(1, C3, 2, 0, "span", 33), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("role_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function D3(n, t) {
  n & 1 && (h(0, "span"), f(1, "Email is required."), u());
}
function S3(n, t) {
  n & 1 && (h(0, "span"), f(1, "Please enter a valid email address."), u());
}
function M3(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 72),
      F(1, D3, 2, 0, "span", 33)(2, S3, 2, 0, "span", 33),
      u()),
    n & 2)
  ) {
    let e,
      i,
      r = E(2);
    g(),
      M(
        "ngIf",
        (e = r.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      M(
        "ngIf",
        (i = r.useForm.get("email")) == null || i.errors == null
          ? null
          : i.errors.email
      );
  }
}
function T3(n, t) {
  if ((n & 1 && (h(0, "option", 86), f(1), u()), n & 2)) {
    let e = t.$implicit;
    M("value", e.team_id), g(), ae(" ", e.team_name, " ");
  }
}
function E3(n, t) {
  n & 1 && (h(0, "div", 72)(1, "span"), f(2, "Team name is required."), u()());
}
function k3(n, t) {
  n & 1 && (h(0, "span"), f(1, " Phone is required. "), u());
}
function I3(n, t) {
  n & 1 && (h(0, "span"), f(1, " Must not exceed 10 characters. "), u());
}
function O3(n, t) {
  n & 1 && (h(0, "span"), f(1, " Only numbers are allowed. "), u());
}
function P3(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 72),
      F(1, k3, 2, 0, "span", 33)(2, I3, 2, 0, "span", 33)(
        3,
        O3,
        2,
        0,
        "span",
        33
      ),
      u()),
    n & 2)
  ) {
    let e,
      i,
      r,
      o = E(2);
    g(),
      M(
        "ngIf",
        (e = o.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      M(
        "ngIf",
        (i = o.useForm.get("phone")) == null || i.errors == null
          ? null
          : i.errors.maxlength
      ),
      g(),
      M(
        "ngIf",
        (r = o.useForm.get("phone")) == null || r.errors == null
          ? null
          : r.errors.pattern
      );
  }
}
function A3(n, t) {
  if (n & 1) {
    let e = ce();
    Qe(0),
      h(1, "button", 87),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.onUpdate());
      }),
      f(2, " Edit "),
      u(),
      Xe();
  }
  if (n & 2) {
    let e = E(2);
    g(), M("disabled", !e.isUserNameChanged());
  }
}
function R3(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 59),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.onSave());
      }),
      f(1, " Save "),
      u();
  }
  if (n & 2) {
    let e = E(2);
    de("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function F3(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 52)(1, "div", 61)(2, "div", 54)(3, "div", 55)(4, "h5", 62),
      f(5),
      u(),
      h(6, "button", 63),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeModal());
      }),
      h(7, "span", 64),
      f(8, "\xD7"),
      u()()(),
      h(9, "div", 65)(10, "form", 66)(11, "div", 67)(12, "div", 68)(
        13,
        "label",
        69
      ),
      f(14, "First Name"),
      u(),
      W(15, "input", 70),
      F(16, f3, 2, 1, "div", 71),
      u(),
      h(17, "div", 68)(18, "label", 69),
      f(19, " Last Name "),
      h(20, "span", 72),
      f(21, "*"),
      u()(),
      W(22, "input", 73),
      F(23, _3, 2, 1, "div", 71),
      u(),
      h(24, "div", 68)(25, "label", 74),
      f(26, " Dealer Code "),
      h(27, "span", 72),
      f(28, "*"),
      u()(),
      h(29, "select", 75)(30, "option", 76),
      f(31, "Select Dealer code"),
      u(),
      F(32, b3, 2, 2, "option", 77),
      u(),
      F(33, y3, 2, 1, "div", 71),
      u(),
      h(34, "div", 68)(35, "label", 78),
      f(36, " Role Name "),
      h(37, "span", 72),
      f(38, "*"),
      u()(),
      h(39, "select", 79)(40, "option", 76),
      f(41, "Select Role"),
      u(),
      F(42, x3, 2, 2, "option", 77),
      u(),
      F(43, w3, 2, 1, "div", 71),
      u(),
      h(44, "div", 68)(45, "label", 69),
      f(46, " Email "),
      h(47, "span", 72),
      f(48, "*"),
      u()(),
      W(49, "input", 80),
      F(50, M3, 3, 2, "div", 71),
      u(),
      h(51, "div", 68)(52, "label", 81),
      f(53, " Team name "),
      h(54, "span", 72),
      f(55, "*"),
      u()(),
      h(56, "select", 82),
      U("change", function () {
        N(e);
        let r = E();
        return L(r.onTeamChange());
      }),
      h(57, "option", 76),
      f(58, "Select team name"),
      u(),
      F(59, T3, 2, 2, "option", 77),
      u(),
      F(60, E3, 3, 0, "div", 71),
      u(),
      h(61, "div", 68)(62, "label", 69),
      f(63, " Phone "),
      h(64, "span", 72),
      f(65, "*"),
      u()(),
      h(66, "input", 83),
      U("keypress", function (r) {
        N(e);
        let o = E();
        return L(o.restrictToNumbers(r));
      }),
      u(),
      F(67, P3, 4, 3, "div", 71),
      u()()()(),
      h(68, "div", 58),
      F(69, A3, 3, 1, "ng-container", 84),
      h(70, "button", 85),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeModal());
      }),
      f(71, " Close "),
      u(),
      F(72, R3, 2, 1, "ng-template", null, 0, ei),
      u()()()();
  }
  if (n & 2) {
    let e,
      i,
      r,
      o,
      a,
      s,
      l,
      d,
      m,
      v,
      x,
      C,
      S,
      T,
      k = At(73),
      P = E();
    g(5),
      ae(" ", P.userObj.user_id ? "Edit User" : "Add New User", " "),
      g(5),
      M("formGroup", P.useForm),
      g(5),
      M(
        "ngClass",
        xe(
          24,
          qo,
          ((e = P.useForm.get("fname")) == null ? null : e.touched) &&
            ((e = P.useForm.get("fname")) == null ? null : e.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        ((i = P.useForm.get("fname")) == null ? null : i.invalid) &&
          ((i = P.useForm.get("fname")) == null ? null : i.touched)
      ),
      g(6),
      M(
        "ngClass",
        xe(
          26,
          qo,
          ((r = P.useForm.get("lname")) == null ? null : r.touched) &&
            ((r = P.useForm.get("lname")) == null ? null : r.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        ((o = P.useForm.get("lname")) == null ? null : o.invalid) &&
          ((o = P.useForm.get("lname")) == null ? null : o.touched)
      ),
      g(6),
      M(
        "ngClass",
        xe(
          28,
          qo,
          ((a = P.useForm.get("dealer_id")) == null ? null : a.touched) &&
            ((a = P.useForm.get("dealer_id")) == null ? null : a.invalid)
        )
      ),
      g(),
      M("ngValue", null),
      g(2),
      M("ngForOf", P.dealerList()),
      g(),
      M(
        "ngIf",
        ((s = P.useForm.get("dealer_id")) == null ? null : s.touched) &&
          ((s = P.useForm.get("dealer_id")) == null ? null : s.invalid)
      ),
      g(6),
      M(
        "ngClass",
        xe(
          30,
          qo,
          ((l = P.useForm.get("role_id")) == null ? null : l.touched) &&
            ((l = P.useForm.get("role_id")) == null ? null : l.invalid)
        )
      ),
      g(),
      M("ngValue", null),
      g(2),
      M("ngForOf", P.roleList()),
      g(),
      M(
        "ngIf",
        ((d = P.useForm.get("role_id")) == null ? null : d.touched) &&
          ((d = P.useForm.get("role_id")) == null ? null : d.invalid)
      ),
      g(6),
      M(
        "ngClass",
        xe(
          32,
          qo,
          ((m = P.useForm.get("email")) == null ? null : m.touched) &&
            ((m = P.useForm.get("email")) == null ? null : m.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        ((v = P.useForm.get("email")) == null ? null : v.invalid) &&
          ((v = P.useForm.get("email")) == null ? null : v.touched)
      ),
      g(6),
      M(
        "ngClass",
        xe(
          34,
          qo,
          ((x = P.useForm.get("team_id")) == null ? null : x.touched) &&
            ((x = P.useForm.get("team_id")) == null ? null : x.invalid)
        )
      ),
      g(),
      M("ngValue", null),
      g(2),
      M("ngForOf", P.teamList()),
      g(),
      M(
        "ngIf",
        ((C = P.useForm.get("team_id")) == null ? null : C.touched) &&
          ((C = P.useForm.get("team_id")) == null ? null : C.invalid)
      ),
      g(6),
      M(
        "ngClass",
        xe(
          36,
          qo,
          ((S = P.useForm.get("phone")) == null ? null : S.touched) &&
            ((S = P.useForm.get("phone")) == null ? null : S.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        ((T = P.useForm.get("phone")) == null ? null : T.touched) &&
          ((T = P.useForm.get("phone")) == null ? null : T.invalid)
      ),
      g(2),
      M("ngIf", P.userObj == null ? null : P.userObj.user_id)("ngIfElse", k);
  }
}
var Iu = class n {
  constructor(t, e) {
    this.aleartsrv = t;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = fe(0);
  userList = fe([]);
  dealerList = fe([]);
  totalDealer = fe(0);
  isModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  teamList = fe([]);
  totalteam = fe(0);
  dealerObj = new Ar();
  roleList = fe([]);
  masterSrv = G(Ze);
  toastr = G(ki);
  currentPage = 1;
  itemsPerPage = 10;
  searchTerm = "";
  filteredUsers = [];
  paginatedUsers = [];
  useForm = new Rt({});
  userObj = new Kl();
  previousEmail = "";
  isEditMode = !1;
  count;
  Role;
  totalrole;
  previousValue;
  user_id = "";
  dataTable;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  columns = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (t, e) => e + 1)),
      this.updateVisiblePages(),
      this.displayAllUser(),
      console.log("\u{1F4E6} Loaded Dealer List:", this.dealerList()),
      this.dealerList().length &&
        this.dealerList()[0] &&
        console.log("\u{1F50D} Sample dealer:", this.dealerList()[0]),
      this.displayAllUser(),
      this.getAllTeams(),
      this.loadRole(),
      (this.filteredUsers = this.userList()),
      this.paginateUsers(),
      this.getAllDealer(),
      this.useForm.get("role_id")?.valueChanges.subscribe((t) => {
        if (t) {
          let i = this.roleList().find((r) => r.role_id === t);
          i &&
            (console.log("Role ID:", t),
            console.log("Role Name:", i.role_name),
            this.useForm.patchValue({ user_role: i.role_name }));
        }
      });
  }
  initializeForm() {
    this.useForm = new Rt({
      fname: new st("", [Ne.required, Ne.minLength(2), Ne.maxLength(50)]),
      lname: new st("", [Ne.required, Ne.minLength(2), Ne.maxLength(50)]),
      email: new st("", [Ne.required, Ne.email, Ne.maxLength(100)]),
      phone: new st(Number, [
        Ne.required,
        Ne.pattern(/^\d{10}$/),
        Ne.maxLength(10),
      ]),
      dealer_id: new st(null, [Ne.required]),
      team_id: new st(null, [Ne.required]),
      user_role: new st(null, [Ne.required]),
      role_id: new st(null, [Ne.required]),
    });
  }
  restrictToNumbers(t) {
    let e = t.key;
    /^\d$/.test(e) || t.preventDefault();
  }
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe({
      next: (t) => {
        console.log("\u{1F310} Full Dealer API Response:", t),
          t && t.data?.dealer?.rows?.length > 0
            ? (this.dealerList.set(t.data.dealer.rows),
              this.totalDealer.set(t.data.dealer.count),
              console.log("\u2705 Loaded Dealers:", this.dealerList()))
            : (console.warn(
                "\u26A0\uFE0F Dealer list empty or improperly structured"
              ),
              this.toastr.warning("No dealers found", "Information"));
      },
      error: (t) => {
        console.error("\u274C Dealer fetch error:", t),
          this.toastr.error(t.message || "Failed to fetch dealers", "Error");
      },
    });
  }
  getAllTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (t) => {
        t && t.data.rows && t.data.rows
          ? (this.teamList.set(t.data.rows),
            console.log("Fetched teams:", this.teamList()),
            this.totalteam.set(t.data.count))
          : this.toastr.warning("No teams found", "Information");
      },
      error: (t) => {
        console.error("teams fetch error:", t),
          this.toastr.error(t.message || "Failed to fetch teams", "Error");
      },
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (t) => {
        t && t.data && Array.isArray(t.data)
          ? (this.roleList.set(t.data),
            console.log("Fetched roles:", this.roleList()),
            this.totalrole.set(t.data.length))
          : this.toastr.warning("No roles found", "Information");
      },
      error: (t) => {
        console.error("Error fetching roles:", t),
          this.toastr.error(t.error?.error || "Error fetching roles", "Error");
      },
    });
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateUsers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredUsers = this.userList();
    else {
      let t = this.searchTerm.toLowerCase();
      this.filteredUsers = this.userList().filter(
        (e) =>
          e.name.toLowerCase().includes(t) ||
          e.email.toLowerCase().includes(t) ||
          (e.user_role?.toLowerCase().includes(t) ?? !1)
      );
    }
    (this.currentPage = 1), this.paginateUsers();
  }
  paginateUsers() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    (this.paginatedUsers = this.filteredUsers.slice(t, e)),
      (this.totalPages = Math.ceil(
        this.filteredUsers.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (i, r) => r + 1));
  }
  updatePages() {
    (this.totalPages = Math.ceil(
      this.filteredUsers.length / this.itemsPerPage
    )),
      (this.pages = Array(this.totalPages)
        .fill(0)
        .map((t, e) => e + 1));
  }
  initializeUsers() {
    let t = this.filteredUsers.length;
    (this.totalPages = Math.ceil(t / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, i) => i + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  updateVisiblePages() {
    let t =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(t, t + this.maxVisiblePages);
  }
  goToPage(t) {
    (this.currentPage = t), this.updateVisiblePages(), this.paginateUsers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateUsers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateUsers());
  }
  expand(t) {
    t.target.size = 6;
  }
  collapse(t) {
    t.target.size = 0;
  }
  onItemsPerPageChange(t) {
    (this.itemsPerPage = parseInt(t.target.value, 10)),
      (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  min(t, e) {
    return Math.min(t, e);
  }
  openModal(t) {
    console.log("\u2705 openModal() function calledm of user"),
      console.log("User object received in openModal:", t),
      (this.isModalOpen = !0),
      t || (this.userObj = {}),
      this.useForm.reset(),
      (this.isEditMode = !!t),
      t
        ? (this.useForm.patchValue({
            user_id: t.user_id,
            name: t.name || "",
            account_id: t.account_id || "",
            email: t.email || "",
            phone: t.phone || "",
            role_id: t.role_id || "",
            user_role: t.role_name || "",
            team_id: t.team_id || null,
            team_name: t.team_name || "",
            fname: t.fname || "",
            lname: t.lname || "",
          }),
          (this.previousEmail = t.email || ""),
          console.log("User team info:", t.team),
          console.log("Form team values:", {
            team_id: this.useForm.get("team_id")?.value,
            team_name: this.useForm.get("team_name")?.value,
          }),
          (this.userObj = Q({}, t)))
        : (this.userObj = {});
  }
  onDealerChange() {
    let t = this.useForm.get("dealer_code"),
      e = this.useForm.get("dealer_id");
    if (t && e) {
      let i = this.dealerList().find((r) => r.dealer_code === t.value);
      i && e.setValue(i.dealer_id);
    }
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let t = this.useForm.get("team_name"),
      e = this.useForm.get("team_id");
    if (t && e && t.value) {
      console.log("Team name value:", t.value),
        console.log("Available teams:", this.teamList());
      let i = this.teamList().find((r) => r.team_name === t.value);
      i
        ? (console.log("Selected Team:", i), e.setValue(i.team_id))
        : console.warn("Team not found:", t.value);
    }
  }
  displayAllUser() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (t) => {
        t && t.data.rows
          ? (this.totalUser.set(t.data.count),
            this.userList.set(t.data.rows),
            (this.filteredUsers = t.data.rows),
            this.initializeUsers())
          : (this.userList.set([]),
            (this.filteredUsers = []),
            this.toastr.warning("No users found", "Information"),
            this.initializeUsers());
      },
      error: (t) => {
        console.error("Users fetch error:", t),
          this.toastr.error(t.message || "Failed to fetch users", "Error"),
          this.userList.set([]),
          (this.filteredUsers = []),
          this.initializeUsers();
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let t = this.useForm.value,
      e = this.roleList().find((i) => i.role_id === t.role_id);
    (t.user_role = e?.role_name || ""),
      this.masterSrv.createNewUser(t).subscribe({
        next: () => {
          this.toastr.success("User created successfully!", "Success"),
            this.displayAllUser(),
            this.useForm.reset(),
            (this.userObj = new Kl()),
            this.closeModal();
        },
        error: (i) => {
          let r = i.error?.message || "Failed to create user";
          this.toastr.error(r, "Creation Error");
        },
      });
  }
  onSaveAndClose() {
    this.useForm.valid && (this.onSave(), this.closeModal());
  }
  onUpdate() {
    if (
      (console.log("on update"),
      console.log("Form Values:", this.useForm.value),
      this.useForm.valid)
    ) {
      let t = this.useForm.value,
        e = `${(t.fname || "").trim()} ${(t.lname || "").trim()}`.replace(
          /\s+/g,
          " "
        );
      (t.name = e),
        (this.userObj = Q(Q({}, this.userObj), t)),
        console.log("\u{1F4E4} Payload sent to backend:", this.userObj),
        console.log("\u{1F50D} Form Status:", this.useForm.status),
        console.log("\u{1F680} Updated Payload before API call:", this.userObj),
        this.masterSrv.updateUser(this.userObj).subscribe(
          (i) => {
            i.status === 200
              ? (console.log("API Response:", i),
                console.log("\u2705 Update Success:", i),
                this.toastr.success(i.message, "Success"),
                this.userList.set(
                  this.userList().map((r) =>
                    r.user_id === this.userObj.user_id
                      ? Be(Q(Q({}, r), this.userObj), { name: e })
                      : r
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0),
                this.displayAllUser(),
                this.closeModal(),
                this.useForm.reset())
              : this.toastr.error("Update failed", "Error");
          },
          (i) => {
            console.error("\u274C API Error:", i),
              i.response
                ? this.toastr.error(i.response.data.message, "Error")
                : this.toastr.error("Failed to update user", "Error");
          }
        );
    } else
      this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(t) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", t?.user_id),
      (this.userObj = Q({}, t)),
      (this.previousValue = t.name);
    let e = `${t.fname || ""} ${t.lname || ""}`.trim().replace(/\s+/g, " ");
    console.log("Formatted name onEdit:", e),
      this.useForm.patchValue({
        user_id: t.user_id,
        name: e,
        account_id: t.account_id || "",
        email: t.email || "",
        phone: t.phone || "",
        role_id: t.role_id || "",
        team_id: t.team_id || null,
        team_name: t.team_name || "",
        fname: t.fname || "",
        lname: t.lname || "",
        user_role: t.user_role || "",
        dealer_id: t.dealer_id || null,
      }),
      console.log("userObj.user_id after setting:", this.userObj?.user_id),
      setTimeout(() => {
        $("#myModal").modal({ backdrop: !1 });
      }, 100);
  }
  isUserNameChanged() {
    return (
      this.useForm.dirty &&
      (this.useForm.value.name !== this.previousValue ||
        this.useForm.value.email !== this.userObj.email ||
        this.useForm.value.phone !== this.userObj.phone ||
        this.useForm.value.role_id !== this.userObj.role_id ||
        this.useForm.value.team_id !== this.userObj.team_id ||
        this.useForm.value.fname !== this.userObj.fname ||
        this.useForm.value.lname !== this.userObj.lname)
    );
  }
  selectedUserForDeletion = null;
  selectUserForDeletion(t) {
    (this.selectedUserForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  setUserToDelete(t) {
    this.selectedUserForDeletion = t;
  }
  openDeleteModal(t) {
    (this.selectedUserForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  deleteUserId() {
    console.log("Deleting User ID:", this.selectedUserForDeletion?.user_id),
      this.selectedUserForDeletion && this.selectedUserForDeletion.user_id
        ? this.masterSrv
            .deleteUser(this.selectedUserForDeletion.user_id)
            .subscribe(
              (t) => {
                this.toastr.success("User deleted successfully", "Success"),
                  this.displayAllUser(),
                  (this.isDeleteModalOpen = !1);
              },
              (t) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No users selected for deletion");
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  markFormGroupTouched(t) {
    Object.values(t.controls).forEach((e) => {
      e.markAsTouched(), e instanceof Rt && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  static ɵfac = function (e) {
    return new (e || n)(H(ns), H(et));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-users"]],
    standalone: !0,
    features: [ue],
    decls: 74,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      ["id", "user", 1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search users...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "colspan",
        "3",
        1,
        "text-center",
        2,
        "display",
        "flex",
        "margin-left",
        "120%",
        "white-space",
        "nowrap",
      ],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
        2,
        "top",
        "6%",
      ],
      [1, "modal-title", "text-center", "w-100", 2, "font-size", "18px"],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "fname", 1, "form-label"],
      [
        "id",
        "fname",
        "type",
        "text",
        "formControlName",
        "fname",
        "placeholder",
        "First Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "text-danger"],
      [
        "id",
        "lname",
        "type",
        "text",
        "formControlName",
        "lname",
        "placeholder",
        "Last Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_id", 1, "form-label"],
      [
        "id",
        "dealer_id",
        "formControlName",
        "dealer_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "role_id", 1, "form-label"],
      [
        "id",
        "role_id",
        "formControlName",
        "role_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [
        "id",
        "email",
        "type",
        "email",
        "formControlName",
        "email",
        "placeholder",
        "E-mail",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "team_name", 1, "form-label"],
      [
        "id",
        "team_name",
        "formControlName",
        "team_id",
        "placeholder",
        "team name",
        1,
        "form-control",
        "form-control-lg",
        3,
        "change",
        "ngClass",
      ],
      [
        "id",
        "phone",
        "formControlName",
        "phone",
        "placeholder",
        "Phone",
        "maxlength",
        "10",
        1,
        "form-control",
        "form-control-lg",
        3,
        "keypress",
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        f(6, "Users"),
        u()(),
        h(7, "li", 7)(8, "a", 8),
        f(9, "User Master"),
        u()()()(),
        h(10, "div", 9)(11, "div", 10)(12, "a", 11),
        U("click", function () {
          return i.openModal();
        }),
        W(13, "i", 12),
        f(14, "Add Users "),
        u()(),
        h(15, "div", 10)(16, "div", 13)(17, "p", 14),
        f(18, "Total User"),
        u(),
        h(19, "h3", 15),
        f(20),
        u()()()(),
        h(21, "div", 16)(22, "div", 17)(23, "div", 18)(24, "div", 19)(
          25,
          "div",
          20
        ),
        W(26, "label", 21),
        h(27, "select", 22),
        U("change", function (o) {
          return i.onItemsPerPageChange(o);
        }),
        h(28, "option", 23),
        f(29, "10"),
        u(),
        h(30, "option", 24),
        f(31, "25"),
        u(),
        h(32, "option", 25),
        f(33, "50"),
        u(),
        h(34, "option", 26),
        f(35, "100"),
        u()(),
        h(36, "label", 27),
        f(37, "records per page"),
        u()(),
        h(38, "div", 28)(39, "div", 29)(40, "input", 30),
        Wt("ngModelChange", function (o) {
          return $t(i.searchTerm, o) || (i.searchTerm = o), o;
        }),
        U("input", function () {
          return i.onSearchChange();
        }),
        u()()()(),
        h(41, "div", 31)(42, "table", 32)(43, "thead")(44, "tr")(45, "th"),
        f(46, "Sr No"),
        u(),
        h(47, "th"),
        f(48, "Name"),
        u(),
        h(49, "th"),
        f(50, "Email"),
        u(),
        h(51, "th"),
        f(52, "Role"),
        u(),
        h(53, "th"),
        f(54, "Action"),
        u()()(),
        h(55, "tbody"),
        F(56, d3, 3, 0, "tr", 33)(57, u3, 14, 4, "tr", 34),
        u()()(),
        h(58, "div", 35)(59, "div", 36)(60, "div", 37),
        f(61),
        u()(),
        h(62, "div", 36)(63, "div", 38)(64, "ul", 39)(65, "li", 40)(
          66,
          "a",
          41
        ),
        U("click", function () {
          return i.previousPage();
        }),
        f(67, "Previous"),
        u()(),
        F(68, h3, 3, 3, "li", 42),
        h(69, "li", 43)(70, "a", 41),
        U("click", function () {
          return i.nextPage();
        }),
        f(71, "Next"),
        u()()()()()()()()()()(),
        F(72, p3, 13, 0, "div", 44)(73, F3, 74, 38, "div", 44)),
        e & 2 &&
          (g(20),
          ae(" ", i.totalUser(), " "),
          g(20),
          zt("ngModel", i.searchTerm),
          g(16),
          M("ngIf", i.paginatedUsers.length === 0),
          g(),
          M("ngForOf", i.paginatedUsers),
          g(4),
          Hi(
            " Showing ",
            (i.currentPage - 1) * i.itemsPerPage + 1,
            " to ",
            i.currentPage * i.itemsPerPage < i.teamList().length
              ? i.currentPage * i.itemsPerPage
              : i.teamList().length,
            " of ",
            i.teamList().length,
            " entries "
          ),
          g(4),
          Te("disabled", i.currentPage === 1),
          g(3),
          M("ngForOf", i.visiblePages),
          g(),
          Te("disabled", i.currentPage === i.totalPages),
          g(3),
          M("ngIf", i.isDeleteModalOpen),
          g(),
          M("ngIf", i.isModalOpen));
    },
    dependencies: [
      Fe,
      Gt,
      ti,
      rt,
      Gi,
      Xr,
      $i,
      Wi,
      fi,
      ir,
      Ti,
      zi,
      Dr,
      $p,
      an,
      ht,
      Wl,
      Hx,
      vn,
      sn,
      ln,
      cr,
      jx,
    ],
    styles: [
      "body[_ngcontent-%COMP%]{display:flex;min-height:100vh;margin:0;padding:0}.custom-modal-position[_ngcontent-%COMP%]{top:18%}@media (max-width: 767px){.custom-modal-position[_ngcontent-%COMP%]{top:7%;border:2px solid red}}#user[_ngcontent-%COMP%]{margin-left:-2rem}.sidebar[_ngcontent-%COMP%]{width:250px;flex-shrink:0;background-color:#f8f9fa;z-index:1000}.content-body[_ngcontent-%COMP%]{flex-grow:1;padding:20px;box-sizing:border-box;overflow-x:hidden}@media (max-width: 768px){body[_ngcontent-%COMP%]{flex-direction:column}.sidebar[_ngcontent-%COMP%]{width:100%;height:auto;position:static}.content-body[_ngcontent-%COMP%]{margin-left:0;width:100%;padding:10px}}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (max-width: 576px){.search-input[_ngcontent-%COMP%]{margin-left:0!important;width:100%!important}}.card-box[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 0 15px #00000014;border-radius:10px}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.modal-backdrop[_ngcontent-%COMP%]{z-index:1040!important}.modal[_ngcontent-%COMP%]{z-index:1051!important;position:fixed!important;pointer-events:auto!important}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}@media (max-width: 991.98px){.search-input[_ngcontent-%COMP%]{width:100%;margin-top:10px}}@media only screen and (max-width: 1600px){.content-body[_ngcontent-%COMP%]{margin-left:0}}.searchbar[_ngcontent-%COMP%]{display:flex;float:right}input.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}@media (min-width: 760px) and (max-width: 820px){.delete-btn-ipad[_ngcontent-%COMP%]{margin-top:5px!important}}",
    ],
  });
};
var N3 = () => ["/Admin/dealer"],
  zx = (n) => ["/Admin/singleUser", n];
function L3(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      f(4, "Subject"),
      u(),
      h(5, "h5", 17),
      f(6),
      u()(),
      h(7, "div", 15)(8, "h4", 16),
      f(9, "Assigned"),
      u(),
      h(10, "h5", 17),
      f(11),
      u()(),
      h(12, "div", 15)(13, "h4", 16),
      f(14, "Description"),
      u(),
      h(15, "h5", 17),
      f(16),
      u()(),
      h(17, "div", 15)(18, "h4", 16),
      f(19, "account Name"),
      u(),
      h(20, "h5", 17),
      f(21),
      u()()(),
      h(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      f(25, "start Date"),
      u(),
      h(26, "h5", 17),
      f(27),
      u()(),
      h(28, "div", 15)(29, "h4", 16),
      f(30, "End Date"),
      u(),
      h(31, "h5", 17),
      f(32),
      u()(),
      h(33, "div", 15)(34, "h4", 16),
      f(35, "Name"),
      u(),
      h(36, "h5", 17),
      f(37),
      u()(),
      h(38, "div", 15)(39, "h4", 16),
      f(40, "Lead Code"),
      u(),
      h(41, "h5", 17),
      f(42),
      u()()(),
      W(43, "div", 18),
      h(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      f(47, "Lead Email"),
      u(),
      h(48, "h5", 17),
      f(49),
      u()(),
      h(50, "div", 15)(51, "h4", 16),
      f(52, "Flag"),
      u(),
      h(53, "h5", 17),
      f(54),
      u()()(),
      h(55, "div", 19)(56, "a", 20),
      f(57, "Go Back"),
      u()()()),
    n & 2)
  ) {
    let e,
      i,
      r,
      o,
      a,
      s,
      l,
      d,
      m,
      v,
      x = E();
    g(6),
      ae(" ", (e = x.eventList()) == null ? null : e.subject, ""),
      g(5),
      B((i = x.eventList()) == null ? null : i.assigned_to),
      g(5),
      B((r = x.eventList()) == null ? null : r.description),
      g(5),
      B((o = x.eventList()) == null ? null : o.name),
      g(6),
      ae(" ", (a = x.eventList()) == null ? null : a.start_date, ""),
      g(5),
      ae(" ", (s = x.eventList()) == null ? null : s.end_date, ""),
      g(5),
      ae(" ", (l = x.eventList()) == null ? null : l.name, ""),
      g(5),
      B((d = x.eventList()) == null ? null : d.lead_code),
      g(7),
      ae(" ", (m = x.eventList()) == null ? null : m.lead_email, ""),
      g(5),
      ae(" ", (v = x.eventList()) == null ? null : v.flag, ""),
      g(2),
      M("routerLink", xe(11, zx, x.previousRoute));
  }
}
var Ou = class n {
  constructor(t) {
    this.route = t;
  }
  eventList = fe(null);
  masterSrv = G(Ze);
  eventData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((t) => {
        (this.eventData = t.leadData),
          this.eventData
            ? this.eventById(this.eventData.event_id)
            : console.warn("event data not available from resolver.");
      }),
      this.route.paramMap.subscribe((t) => {
        let e = t.get("eventId");
        e
          ? this.eventById(e)
          : this.eventData ||
            console.error(
              "event ID not found in the URL and no resolver data."
            );
      });
  }
  eventById(t) {
    console.log("Fetching lead data for leadId:", t),
      this.masterSrv.eventById(t).subscribe({
        next: (e) => {
          this.eventList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Yt));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-event"]],
    standalone: !0,
    features: [ue],
    decls: 21,
    vars: 6,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "row", "mb-4", "text-center"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
          5,
          "a",
          5
        ),
        f(6, "Utils"),
        u()(),
        h(7, "li", 4)(8, "a", 6),
        f(9, "Dealer"),
        u()(),
        h(10, "li", 4)(11, "a", 6),
        f(12, "Single Dealer"),
        u()(),
        h(13, "li", 7)(14, "a", 8),
        f(15, "Single Event"),
        u()()()(),
        h(16, "div", 9)(17, "div", 10)(18, "h5", 11),
        f(19, "User Details"),
        u()(),
        F(20, L3, 58, 13, "div", 12),
        u()()()),
        e & 2 &&
          (g(8),
          M("routerLink", Si(3, N3)),
          g(3),
          M("routerLink", xe(4, zx, i.previousRoute)),
          g(9),
          M("ngIf", i.eventList()));
    },
    dependencies: [Fe, rt, ht, mi],
  });
};
var V3 = () => ["/Admin/dealer"],
  $x = (n) => ["/Admin/singleUser", n];
function B3(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      f(4, "Lead Code"),
      u(),
      h(5, "h5", 17),
      f(6),
      u()(),
      h(7, "div", 15)(8, "h4", 16),
      f(9, "Status"),
      u(),
      h(10, "h5", 17),
      f(11),
      u()(),
      h(12, "div", 15)(13, "h4", 16),
      f(14, "Purchase Type"),
      u(),
      h(15, "h5", 17),
      f(16),
      u()(),
      h(17, "div", 15)(18, "h4", 16),
      f(19, "Sub Type"),
      u(),
      h(20, "h5", 17),
      f(21),
      u()()(),
      h(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      f(25, "Type"),
      u(),
      h(26, "h5", 17),
      f(27),
      u()(),
      h(28, "div", 15)(29, "h4", 16),
      f(30, "Sub Type"),
      u(),
      h(31, "h5", 17),
      f(32),
      u()(),
      h(33, "div", 15)(34, "h4", 16),
      f(35, "Brand"),
      u(),
      h(36, "h5", 17),
      f(37),
      u()(),
      h(38, "div", 15)(39, "h4", 16),
      f(40, "PMI"),
      u(),
      h(41, "h5", 17),
      f(42),
      u()()(),
      h(43, "div", 14)(44, "div", 15)(45, "h4", 16),
      f(46, "Lead Source"),
      u(),
      h(47, "h5", 17),
      f(48),
      u()(),
      h(49, "div", 15)(50, "h4", 16),
      f(51, "Last Name"),
      u(),
      h(52, "h5", 17),
      f(53),
      u()(),
      h(54, "div", 15)(55, "h4", 16),
      f(56, "Mobile"),
      u(),
      h(57, "h5", 17),
      f(58),
      u()(),
      h(59, "div", 15)(60, "h4", 16),
      f(61, "Email"),
      u(),
      h(62, "h5", 17),
      f(63),
      u()()(),
      h(64, "div", 14)(65, "div", 15)(66, "h4", 16),
      f(67, "Lead Owner"),
      u(),
      h(68, "h5", 17),
      f(69),
      u()(),
      h(70, "div", 15)(71, "h4", 16),
      f(72, "Flag"),
      u(),
      h(73, "h5", 17),
      f(74),
      u()()(),
      h(75, "div", 18)(76, "a", 19),
      f(77, "Go Back"),
      u()()()),
    n & 2)
  ) {
    let e,
      i,
      r,
      o,
      a,
      s,
      l,
      d,
      m,
      v,
      x,
      C,
      S,
      T,
      k = E();
    g(6),
      B((e = k.leadList()) == null ? null : e.lead_code),
      g(5),
      B((i = k.leadList()) == null ? null : i.status),
      g(5),
      B((r = k.leadList()) == null ? null : r.status),
      g(5),
      B((o = k.leadList()) == null ? null : o.purchase_type),
      g(6),
      B((a = k.leadList()) == null ? null : a.type),
      g(5),
      B((s = k.leadList()) == null ? null : s.sub_type),
      g(5),
      B((l = k.leadList()) == null ? null : l.brand),
      g(5),
      B((d = k.leadList()) == null ? null : d.PMI),
      g(6),
      B((m = k.leadList()) == null ? null : m.lead_source),
      g(5),
      B((v = k.leadList()) == null ? null : v.lname),
      g(5),
      B((x = k.leadList()) == null ? null : x.mobile),
      g(5),
      B((C = k.leadList()) == null ? null : C.email),
      g(6),
      B((S = k.leadList()) == null ? null : S.lead_owner),
      g(5),
      B((T = k.leadList()) == null ? null : T.flag),
      g(2),
      M("routerLink", xe(15, $x, k.previousRoute));
  }
}
var Pu = class n {
  constructor(t) {
    this.route = t;
  }
  leadList = fe(null);
  masterSrv = G(Ze);
  leadData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((t) => {
        (this.leadData = t.leadData),
          this.leadData
            ? this.singleLeadData(this.leadData.lead_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((t) => {
        let e = t.get("leadId");
        e
          ? this.singleLeadData(e)
          : this.leadData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleLeadData(t) {
    console.log("Fetching lead data for leadId:", t),
      this.masterSrv.leadById(t).subscribe({
        next: (e) => {
          this.leadList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Yt));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-lead"]],
    standalone: !0,
    features: [ue],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, i) {
      if (
        (e & 1 &&
          (h(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          f(6, "Utils"),
          u()(),
          h(7, "li", 4)(8, "a", 6),
          f(9, "Dealer"),
          u()(),
          h(10, "li", 4)(11, "a", 6),
          f(12, "Single Dealer"),
          u()(),
          h(13, "li", 7)(14, "a", 8),
          f(15),
          u()()()(),
          h(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          f(19, "Leads Details"),
          u()(),
          F(20, B3, 78, 17, "div", 12),
          u()()()),
        e & 2)
      ) {
        let r;
        g(8),
          M("routerLink", Si(4, V3)),
          g(3),
          M("routerLink", xe(5, $x, i.previousRoute)),
          g(4),
          B((r = i.leadList()) == null ? null : r.lead_owner),
          g(5),
          M("ngIf", i.leadList());
      }
    },
    dependencies: [Fe, rt, ht, mi],
  });
};
var Au = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("id");
    return i ? this.masterSrv.leadById(i) : be(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(Ze));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ru = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("eventId");
    return console.log(i), i ? this.masterSrv.eventById(i) : be(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(Ze));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Fu = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("id");
    return i ? this.masterSrv.userById(i) : be(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(Ze));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var H3 = () => ["/Admin/dealer"],
  Wx = (n) => ["/Admin/singleUser", n];
function j3(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      f(4, "Name"),
      u(),
      h(5, "h5", 17),
      f(6),
      u()(),
      h(7, "div", 15)(8, "h4", 16),
      f(9, "Account ID"),
      u(),
      h(10, "h5", 17),
      f(11),
      u()()(),
      h(12, "div", 14)(13, "div", 15)(14, "h4", 16),
      f(15, "Email"),
      u(),
      h(16, "h5", 17),
      f(17),
      u()(),
      h(18, "div", 15)(19, "h4", 16),
      f(20, "Phone"),
      u(),
      h(21, "h5", 17),
      f(22),
      u()()(),
      h(23, "div", 14)(24, "div", 15)(25, "h4", 16),
      f(26, "Role"),
      u(),
      h(27, "h5", 17),
      f(28),
      u()(),
      h(29, "div", 15)(30, "h4", 16),
      f(31, "Dealer Code"),
      u(),
      h(32, "h5", 17),
      f(33),
      u()()(),
      h(34, "div", 18)(35, "a", 19),
      f(36, "Go Back"),
      u()()()),
    n & 2)
  ) {
    let e,
      i,
      r,
      o,
      a,
      s,
      l = E();
    g(6),
      B((e = l.userList()) == null ? null : e.name),
      g(5),
      B((i = l.userList()) == null ? null : i.account_id),
      g(6),
      B((r = l.userList()) == null ? null : r.email),
      g(5),
      B((o = l.userList()) == null ? null : o.phone),
      g(6),
      B((a = l.userList()) == null ? null : a.user_role),
      g(5),
      B((s = l.userList()) == null ? null : s.dealer_code),
      g(2),
      M("routerLink", xe(7, Wx, l.previousRoute));
  }
}
var Nu = class n {
  constructor(t) {
    this.route = t;
  }
  masterSrv = G(Ze);
  userData;
  previousRoute;
  userList = fe(null);
  ngOnInit() {
    this.previousRoute = localStorage.getItem("previousRoute");
    debugger;
    this.route.data.subscribe((t) => {
      console.log("Resolved userData:", t.userData),
        t.userData &&
        Array.isArray(t.userData.data) &&
        t.userData.data.length > 0
          ? (this.userData = t.userData.data[0])
          : console.warn("User data not available.");
    }),
      this.route.paramMap.subscribe((t) => {
        let e = t.get("user_id");
        e && this.fetchSingleUser(e);
      });
  }
  fetchSingleUser(t) {
    console.log("Calling fetchSingleUser with ID:", t),
      this.masterSrv.userById(t).subscribe({
        next: (e) => {
          console.log("API Response:", e);
          debugger;
          e &&
          e.status === 200 &&
          e.data &&
          Array.isArray(e.data) &&
          e.data.length > 0
            ? (console.log("User found:", e.data[0]),
              this.userList.set(e.data[0]),
              console.log("UserList signal after setting:", this.userList()))
            : console.error("Invalid or empty response:", e);
        },
        error: (e) => {
          console.error("API Error:", e),
            e.error && console.error("Error details:", e.error),
            e.message && console.error("Error message:", e.message),
            e.status && console.error("Error status:", e.status);
        },
        complete: () => {
          console.log("API call completed");
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Yt));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-user"]],
    standalone: !0,
    features: [ue],
    decls: 21,
    vars: 8,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4"],
      [1, "col-md-6", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, i) {
      if (
        (e & 1 &&
          (h(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          f(6, "Utils"),
          u()(),
          h(7, "li", 4)(8, "a", 6),
          f(9, "Dealer"),
          u()(),
          h(10, "li", 4)(11, "a", 6),
          f(12, "Single Dealer"),
          u()(),
          h(13, "li", 7)(14, "a", 8),
          f(15),
          u()()()(),
          h(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          f(19),
          u()(),
          F(20, j3, 37, 9, "div", 12),
          u()()()),
        e & 2)
      ) {
        let r, o;
        g(8),
          M("routerLink", Si(5, H3)),
          g(3),
          M("routerLink", xe(6, Wx, i.previousRoute)),
          g(4),
          B((r = i.userList()) == null ? null : r.name),
          g(4),
          ae(" ", (o = i.userList()) == null ? null : o.name, " Details "),
          g(),
          M("ngIf", i.userList());
      }
    },
    dependencies: [Ui, mi, Fe, rt],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}",
    ],
  });
};
var Lu = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("id");
    return i ? this.masterSrv.taskById(i) : be(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(Ze));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var U3 = () => ["/Admin/dealer"],
  Gx = (n) => ["/Admin/singleUser", n];
function z3(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      f(4, "Subject"),
      u(),
      h(5, "h5", 17),
      f(6),
      u()(),
      h(7, "div", 15)(8, "h4", 16),
      f(9, "Status"),
      u(),
      h(10, "h5", 17),
      f(11),
      u()(),
      h(12, "div", 15)(13, "h4", 16),
      f(14, "Assigned"),
      u(),
      h(15, "h5", 17),
      f(16),
      u()()(),
      h(17, "div", 14)(18, "div", 15)(19, "h4", 16),
      f(20, "Due Date"),
      u(),
      h(21, "h5", 17),
      f(22),
      u()(),
      h(23, "div", 15)(24, "h4", 16),
      f(25, "Comments"),
      u(),
      h(26, "h5", 17),
      f(27),
      u()(),
      h(28, "div", 15)(29, "h4", 16),
      f(30, "Lead Name"),
      u(),
      h(31, "h5", 17),
      f(32),
      u()()(),
      h(33, "div", 14)(34, "div", 15)(35, "h4", 16),
      f(36, "Lead Email"),
      u(),
      h(37, "h5", 17),
      f(38),
      u()(),
      h(39, "div", 15)(40, "h4", 16),
      f(41, "Lead Code"),
      u(),
      h(42, "h5", 17),
      f(43),
      u()()(),
      h(44, "div", 18)(45, "a", 19),
      f(46, "Go Back"),
      u()()()),
    n & 2)
  ) {
    let e,
      i,
      r,
      o,
      a,
      s,
      l,
      d,
      m = E();
    g(6),
      B((e = m.taskList()) == null ? null : e.subject),
      g(5),
      B((i = m.taskList()) == null ? null : i.status),
      g(5),
      B((r = m.taskList()) == null ? null : r.assigned_to),
      g(6),
      B((o = m.taskList()) == null ? null : o.due_date),
      g(5),
      B((a = m.taskList()) == null ? null : a.comments),
      g(5),
      B((s = m.taskList()) == null ? null : s.lead_name),
      g(6),
      B((l = m.taskList()) == null ? null : l.lead_email),
      g(5),
      B((d = m.taskList()) == null ? null : d.lead_code),
      g(2),
      M("routerLink", xe(9, Gx, m.previousRoute));
  }
}
var Vu = class n {
  constructor(t) {
    this.route = t;
  }
  taskList = fe(null);
  masterSrv = G(Ze);
  taskData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((t) => {
        (this.taskData = t.taskData),
          this.taskData
            ? this.singleTaskData(this.taskData.task_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((t) => {
        let e = t.get("taskId");
        e
          ? this.singleTaskData(e)
          : this.taskData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleTaskData(t) {
    console.log("Fetching lead data for leadId:", t),
      this.masterSrv.taskById(t).subscribe({
        next: (e) => {
          this.taskList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Yt));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-task"]],
    standalone: !0,
    features: [ue],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-4", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, i) {
      if (
        (e & 1 &&
          (h(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          f(6, "Utils"),
          u()(),
          h(7, "li", 4)(8, "a", 6),
          f(9, "Dealer"),
          u()(),
          h(10, "li", 4)(11, "a", 6),
          f(12, "Single Dealer"),
          u()(),
          h(13, "li", 7)(14, "a", 8),
          f(15),
          u()()()(),
          h(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          f(19, "Task Details"),
          u()(),
          F(20, z3, 47, 11, "div", 12),
          u()()()),
        e & 2)
      ) {
        let r;
        g(8),
          M("routerLink", Si(4, U3)),
          g(3),
          M("routerLink", xe(5, Gx, i.previousRoute)),
          g(4),
          B((r = i.taskList()) == null ? null : r.assigned_to),
          g(5),
          M("ngIf", i.taskList());
      }
    },
    dependencies: [Fe, rt, ht, mi],
  });
};
var Bu = class n {
  constructor(t) {
    this.router = t;
    this.initRouteTracking();
  }
  previousIdSubject = new Kt(null);
  previousId$ = this.previousIdSubject.asObservable();
  currentId = null;
  initRouteTracking() {
    this.router.events.pipe(Ot((t) => t instanceof Mi)).subscribe(() => {
      let i = this.router.url.split("/")[3] || null;
      this.currentId && this.setPreviousId(this.currentId),
        (this.currentId = i);
    });
  }
  setPreviousId(t) {
    localStorage.setItem("previousId", t), this.previousIdSubject.next(t);
  }
  getPreviousId() {
    return localStorage.getItem("previousId");
  }
  clearPreviousId() {
    localStorage.removeItem("previousId"), this.previousIdSubject.next(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(Bt));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var W3 = () => ["/Admin/dealer"],
  G3 = (n) => ["/Admin/singleUser", n];
function Y3(n, t) {
  if (
    (n & 1 &&
      (h(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      f(4, "Opportunity Name"),
      u(),
      h(5, "h5", 17),
      f(6),
      u()(),
      h(7, "div", 15)(8, "h4", 16),
      f(9, "stage"),
      u(),
      h(10, "h5", 17),
      f(11),
      u()(),
      h(12, "div", 15)(13, "h4", 16),
      f(14, "Opportunities Record"),
      u(),
      h(15, "h5", 17),
      f(16),
      u()(),
      h(17, "div", 15)(18, "h4", 16),
      f(19, "account Name"),
      u(),
      h(20, "h5", 17),
      f(21),
      u()()(),
      h(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      f(25, "close Date"),
      u(),
      h(26, "h5", 17),
      f(27),
      u()(),
      h(28, "div", 15)(29, "h4", 16),
      f(30, "Opportunity Currency"),
      u(),
      h(31, "h5", 17),
      f(32),
      u()(),
      h(33, "div", 15)(34, "h4", 16),
      f(35, "VIN"),
      u(),
      h(36, "h5", 17),
      f(37),
      u()(),
      h(38, "div", 15)(39, "h4", 16),
      f(40, "Purchase Type"),
      u(),
      h(41, "h5", 17),
      f(42),
      u()()(),
      W(43, "div", 14),
      h(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      f(47, "Sub Type"),
      u(),
      h(48, "h5", 17),
      f(49),
      u()(),
      h(50, "div", 15)(51, "h4", 16),
      f(52, "Brand"),
      u(),
      h(53, "h5", 17),
      f(54),
      u()(),
      h(55, "div", 15)(56, "h4", 16),
      f(57, "PMI"),
      u(),
      h(58, "h5", 17),
      f(59),
      u()(),
      h(60, "div", 15)(61, "h4", 16),
      f(62, "Description"),
      u(),
      h(63, "h5", 17),
      f(64),
      u()()(),
      h(65, "div", 14)(66, "div", 15)(67, "h4", 16),
      f(68, "Mobile"),
      u(),
      h(69, "h5", 17),
      f(70),
      u()(),
      h(71, "div", 15)(72, "h4", 16),
      f(73, "Phone"),
      u(),
      h(74, "h5", 17),
      f(75),
      u()(),
      h(76, "div", 15)(77, "h4", 16),
      f(78, "E-mail"),
      u(),
      h(79, "h5", 17),
      f(80),
      u()(),
      h(81, "div", 15)(82, "h4", 16),
      f(83, "Enquiry Type"),
      u(),
      h(84, "h5", 17),
      f(85),
      u()()(),
      h(86, "div", 18)(87, "a", 19),
      f(88, "Go Back"),
      u()()()),
    n & 2)
  ) {
    let e,
      i,
      r,
      o,
      a,
      s,
      l,
      d,
      m,
      v,
      x,
      C,
      S,
      T,
      k,
      P,
      j = E();
    g(6),
      B((e = j.oppList()) == null ? null : e.opportunity_name),
      g(5),
      B((i = j.oppList()) == null ? null : i.stage),
      g(5),
      B((r = j.oppList()) == null ? null : r.opportunity_record_type),
      g(5),
      B((o = j.oppList()) == null ? null : o.account_name),
      g(6),
      B((a = j.oppList()) == null ? null : a.close_date),
      g(5),
      B((s = j.oppList()) == null ? null : s.opportunity_currency),
      g(5),
      B((l = j.oppList()) == null ? null : l.purchase_type),
      g(5),
      B((d = j.oppList()) == null ? null : d.type),
      g(7),
      B((m = j.oppList()) == null ? null : m.sub_type),
      g(5),
      B((v = j.oppList()) == null ? null : v.brand),
      g(5),
      B((x = j.oppList()) == null ? null : x.PMI),
      g(5),
      B((C = j.oppList()) == null ? null : C.description),
      g(6),
      B((S = j.oppList()) == null ? null : S.mobile),
      g(5),
      B((T = j.oppList()) == null ? null : T.phone),
      g(5),
      B((k = j.oppList()) == null ? null : k.email),
      g(5),
      B((P = j.oppList()) == null ? null : P.enquiry_type);
  }
}
var Hu = class n {
  constructor(t, e) {
    this.route = t;
    this.routeTrackingService = e;
  }
  oppList = fe(null);
  masterSrv = G(Ze);
  oppData;
  previousRoutes;
  previousRoute = null;
  previousId = null;
  ngOnInit() {
    this.routeTrackingService.previousId$.subscribe((t) => {
      this.previousId = t;
    }),
      (this.previousId = this.routeTrackingService.getPreviousId()),
      this.route.data.subscribe((t) => {
        (this.oppData = t.oppData),
          this.oppData
            ? this.singleoppData(this.oppData.opportunity_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((t) => {
        let e = t.get("oppId");
        e
          ? this.singleoppData(e)
          : this.oppData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleoppData(t) {
    console.log("Fetching lead data for leadId:", t),
      this.masterSrv.oppById(t).subscribe({
        next: (e) => {
          this.oppList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Yt), H(Bu));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-opp"]],
    standalone: !0,
    features: [ue],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-start",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        "href",
        "/Admin/dealer",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
      ],
    ],
    template: function (e, i) {
      if (
        (e & 1 &&
          (h(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          f(6, "Utils"),
          u()(),
          h(7, "li", 4)(8, "a", 6),
          f(9, "Dealer"),
          u()(),
          h(10, "li", 4)(11, "a", 6),
          f(12, "Single Dealer"),
          u()(),
          h(13, "li", 7)(14, "a", 8),
          f(15),
          u()()()(),
          h(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          f(19, " Opportunities Details "),
          u()(),
          F(20, Y3, 89, 16, "div", 12),
          u()()()),
        e & 2)
      ) {
        let r;
        g(8),
          M("routerLink", Si(4, W3)),
          g(3),
          M("routerLink", xe(5, G3, i.previousId)),
          g(4),
          B((r = i.oppList()) == null ? null : r.opportunity_name),
          g(5),
          M("ngIf", i.oppList());
      }
    },
    dependencies: [ht, Fe, rt, mi],
  });
};
var ju = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("id");
    return i ? this.masterSrv.oppById(i) : be(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(Ze));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var ui = class n {
  constructor(t, e) {
    this.router = t;
    this.platformId = e;
  }
  canActivate(t, e) {
    if (!er(this.platformId)) return !1;
    let i = this.getToken();
    if (!i) return this.router.navigate([""]), !1;
    try {
      let r = this.decodeToken(i);
      if (r.exp * 1e3 < Date.now())
        return this.removeToken(), this.router.navigate([""]), !1;
      if (t.data.roles) {
        let a = r.roles || [],
          s = t.data.roles;
        if (!this.checkRoles(a, s)) return this.router.navigate([""]), !1;
      }
      return !0;
    } catch (r) {
      return (
        console.error("Token validation error:", r),
        this.removeToken(),
        this.router.navigate([""]),
        !1
      );
    }
  }
  getToken() {
    try {
      return typeof sessionStorage < "u"
        ? sessionStorage.getItem("token")
        : null;
    } catch (t) {
      return console.error("Error accessing token:", t), null;
    }
  }
  removeToken() {
    try {
      typeof sessionStorage < "u" && sessionStorage.removeItem("token");
    } catch (t) {
      console.error("Error removing token:", t);
    }
  }
  decodeToken(t) {
    try {
      let e = t.split(".")[1];
      return JSON.parse(atob(e));
    } catch (e) {
      throw (console.error("Token decoding error:", e), e);
    }
  }
  checkRoles(t, e) {
    return e.some((i) => t.includes(i));
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(Bt), Z(oi));
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ql = class n {
  role_id;
  role_name;
  description;
  constructor() {
    (this.role_id = ""), (this.role_name = ""), (this.description = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var q3 = (n) => ({ "is-invalid": n });
function K3(n, t) {
  n & 1 && (h(0, "tr")(1, "td", 29), f(2, "No Roles Found"), u()());
}
function Q3(n, t) {
  if (
    (n & 1 &&
      (h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td"),
      f(6),
      u(),
      h(7, "td"),
      W(8, "div", 30),
      u()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      r = E();
    g(2),
      B((r.currentPage - 1) * r.itemsPerPage + i + 1),
      g(2),
      B(e.role_name),
      g(2),
      B(e.description);
  }
}
function X3(n, t) {
  if ((n & 1 && (h(0, "option", 52), f(1), u()), n & 2)) {
    let e = t.$implicit;
    M("value", e.dealer_code), g(), ae(" ", e.dealer_code, " ");
  }
}
function Z3(n, t) {
  n & 1 && (h(0, "span"), f(1, " Role Name is required. "), u());
}
function J3(n, t) {
  if ((n & 1 && (h(0, "div", 43), F(1, Z3, 2, 0, "span", 24), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("role_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function eL(n, t) {
  if (
    (n & 1 && (Qe(0), h(1, "button", 53), f(2, " Edit "), u(), Xe()), n & 2)
  ) {
    let e = E(2);
    g(), M("disabled", !e.isRoleNameChanged());
  }
}
function tL(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 54),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.onSave());
      }),
      f(1, " Save "),
      u();
  }
}
function iL(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 31)(1, "div", 32)(2, "div", 33)(3, "div", 34)(4, "h5", 35),
      f(5),
      u(),
      h(6, "button", 36),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeModal());
      }),
      h(7, "span", 37),
      f(8, "\xD7"),
      u()()(),
      h(9, "div", 38)(10, "form", 39)(11, "div", 40)(12, "div", 41)(
        13,
        "label",
        42
      ),
      f(14, " Role Name "),
      h(15, "span", 43),
      f(16, "*"),
      u()(),
      h(17, "select", 44)(18, "option", 45),
      f(19, "Select Role"),
      u(),
      F(20, X3, 2, 2, "option", 46),
      u(),
      F(21, J3, 2, 1, "div", 47),
      u(),
      h(22, "div", 41)(23, "label", 42),
      f(24, " Description "),
      u(),
      W(25, "input", 48),
      u()(),
      h(26, "div", 49),
      F(27, eL, 3, 1, "ng-container", 50),
      h(28, "button", 51),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeModal());
      }),
      f(29, " Close "),
      u(),
      F(30, tL, 2, 0, "ng-template", null, 0, ei),
      u()()()()()();
  }
  if (n & 2) {
    let e,
      i,
      r = At(31),
      o = E();
    g(5),
      ae(
        " ",
        o.roleObj.role_name || o.roleObj.description
          ? "Edit User"
          : "Add New Role",
        " "
      ),
      g(5),
      M("formGroup", o.useForm),
      g(7),
      M(
        "ngClass",
        xe(
          8,
          q3,
          ((e = o.useForm.get("role_name")) == null ? null : e.touched) &&
            ((e = o.useForm.get("role_name")) == null ? null : e.invalid)
        )
      ),
      g(),
      M("ngValue", null),
      g(2),
      M("ngForOf", o.staticDealerList),
      g(),
      M(
        "ngIf",
        ((i = o.useForm.get("role_name")) == null ? null : i.invalid) &&
          ((i = o.useForm.get("role_name")) == null ? null : i.touched)
      ),
      g(6),
      M("ngIf", o.roleObj.role_id)("ngIfElse", r);
  }
}
var Uu = class n {
  constructor(t) {
    this.cdr = t;
    console.log("Constructor called"), this.initializeForm();
  }
  http = G(li);
  useForm = new Rt({});
  roleList = fe([]);
  count = fe(0);
  totalRoles = fe(0);
  isModalOpen = !1;
  roleObj = new Ql();
  previousValue = "";
  isEditMode = !1;
  isSubmitting = !1;
  roleListAll = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  pages = [];
  totalPages = 1;
  filteredRoles = [];
  paginatedRoles = [];
  masterSrv = G(Ze);
  toastr = G(ki);
  staticDealerList = [
    { dealer_code: "Admin" },
    { dealer_code: "SM" },
    { dealer_code: "PS" },
    { dealer_code: "GM" },
    { dealer_code: "DP" },
  ];
  ngOnInit() {
    console.log("ngOnInit triggered"), this.loadRole();
  }
  initializeForm() {
    console.log("Initializing form..."),
      (this.useForm = new Rt({
        role_name: new st("", [Ne.required]),
        description: new st(""),
      }));
  }
  openModal(t) {
    this.useForm.reset(),
      (this.isModalOpen = !0),
      (this.isSubmitting = !1),
      document.body.classList.add("modal-open"),
      (this.isEditMode = !!t),
      t
        ? (this.useForm.patchValue({
            role_name: t.role_name || "",
            description: t.description || "",
          }),
          (this.roleObj = Q({}, t)))
        : (this.roleObj = new Ql());
  }
  onSaveAndClose() {
    this.useForm.valid && this.onSave();
  }
  markFormGroupTouched(t) {
    Object.values(t.controls).forEach((e) => {
      e.markAsTouched(), e.controls && this.markFormGroupTouched(e);
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (t) => {
        this.roleList.set(t.data),
          this.count.set(t.data.length),
          (this.filteredRoles = t.data),
          this.applyFilterAndPagination();
      },
      error: (t) => {
        this.toastr.error("Failed to load role", "Error"),
          console.error("role load error:", t);
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    if (!this.isSubmitting) {
      if (
        (this.markFormGroupTouched(this.useForm),
        console.log("Save button clicked"),
        this.useForm.invalid)
      ) {
        console.warn("Form is invalid:", this.useForm.value),
          this.useForm.markAllAsTouched();
        return;
      }
      console.log("Form is valid. Submitting:", this.useForm.value),
        (this.isSubmitting = !0),
        this.masterSrv.createRole(this.useForm.value).subscribe({
          next: (t) => {
            console.log("Role created successfully", t),
              this.toastr.success("Role created successfully!", "Success"),
              this.loadRole(),
              console.log("closing from next"),
              this.closeModal();
          },
          error: (t) => {
            console.error("Create role error:", t), (this.isSubmitting = !1);
            let e =
              t.error?.error || t.error?.message || "Failed to create role.";
            this.toastr.error(e, "Error"),
              this.closeModal(),
              console.log("closing from error");
          },
          complete: () => {
            this.isSubmitting = !1;
          },
        });
    }
  }
  onSearchChange() {
    (this.currentPage = 1), this.applyFilterAndPagination();
  }
  onItemsPerPageChange(t) {
    (this.itemsPerPage = parseInt(t.target.value, 10)),
      (this.currentPage = 1),
      this.applyFilterAndPagination();
  }
  applyFilterAndPagination() {
    let t = this.roleList(),
      e = (this.searchTerm ?? "").toLowerCase();
    (this.filteredRoles = t.filter(
      (i) =>
        (i.role_name ?? "").toLowerCase().includes(e) ||
        (i.description ?? "").toLowerCase().includes(e)
    )),
      (this.totalPages = Math.ceil(
        this.filteredRoles.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (i, r) => r + 1)),
      this.paginateRoles();
  }
  closeModal() {
    (this.isModalOpen = !1),
      document.body.classList.remove("modal-open"),
      console.log("Modal closed");
  }
  paginateRoles() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    this.paginatedRoles = this.filteredRoles.slice(t, e);
  }
  goToPage(t) {
    (this.currentPage = t), this.paginateRoles();
  }
  previousPage() {
    this.currentPage > 1 && (this.currentPage--, this.paginateRoles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateRoles());
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredRoles.length
    );
  }
  min(t, e) {
    return Math.min(t, e);
  }
  updatePagination() {
    (this.totalPages = Math.ceil(
      this.filteredRoles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (t, e) => e + 1)),
      (this.paginatedRoles = this.filteredRoles.slice(
        (this.currentPage - 1) * this.itemsPerPage,
        this.currentPage * this.itemsPerPage
      ));
  }
  isRoleNameChanged() {
    return this.useForm.value.role_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || n)(H(et));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-role"]],
    standalone: !0,
    features: [ue],
    decls: 42,
    vars: 4,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3"],
      [1, "col-md-6"],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "4", 1, "text-center"],
      [1, "d-flex"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "role_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "role_name",
        "formControlName",
        "role_name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["class", "text-danger", 4, "ngIf"],
      [
        "id",
        "description",
        "type",
        "text",
        "formControlName",
        "description",
        "placeholder",
        "Description",
        1,
        "form-control",
        "form-control-lg",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "disabled",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        f(6, "Users"),
        u()(),
        h(7, "li", 7)(8, "a", 8),
        f(9, "Role Master"),
        u()()()(),
        h(10, "div", 9)(11, "div", 10)(12, "a", 11),
        U("click", function () {
          return i.openModal();
        }),
        W(13, "i", 12),
        f(14, "Add Roles "),
        u()(),
        h(15, "div", 13)(16, "div", 14)(17, "p", 15),
        f(18, "Total Roles"),
        u(),
        h(19, "h3", 16),
        f(20),
        u()()()(),
        h(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20),
        W(25, "div", 21),
        u()()(),
        h(26, "div", 22)(27, "table", 23)(28, "thead")(29, "tr")(30, "th"),
        f(31, "Sr No"),
        u(),
        h(32, "th"),
        f(33, "Role Name"),
        u(),
        h(34, "th"),
        f(35, "Description"),
        u()()(),
        h(36, "tbody"),
        F(37, K3, 3, 0, "tr", 24)(38, Q3, 9, 3, "tr", 25),
        u()()(),
        h(39, "div", 26),
        W(40, "div", 27),
        u()()(),
        F(41, iL, 32, 10, "div", 28),
        u()),
        e & 2 &&
          (g(20),
          ae(" ", i.filteredRoles.length, " "),
          g(17),
          M("ngIf", i.paginatedRoles.length === 0),
          g(),
          M("ngForOf", i.paginatedRoles),
          g(3),
          M("ngIf", i.isModalOpen));
    },
    dependencies: [
      ht,
      Xr,
      $i,
      Wi,
      fi,
      ir,
      Ti,
      zi,
      Dr,
      vn,
      sn,
      ln,
      Fe,
      Gt,
      ti,
      rt,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.table-responsive[_ngcontent-%COMP%]{width:100%;overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}body[_ngcontent-%COMP%]{overflow-x:hidden}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.toast-warning[_ngcontent-%COMP%]{background-color:#ff9800!important;color:#fff!important}.toast-info[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}",
    ],
  });
};
var zu = class n {
  dtOptions = {};
  ngOnInit() {
    this.dtOptions = { pagingType: "full_numbers" };
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-datatable"]],
    standalone: !0,
    features: [ue],
    decls: 94,
    vars: 1,
    consts: [["datatable", "", 1, "row-border", "hover", 3, "dtOptions"]],
    template: function (e, i) {
      e & 1 &&
        (h(0, "table", 0)(1, "thead")(2, "tr")(3, "th"),
        f(4, "ID"),
        u(),
        h(5, "th"),
        f(6, "First name"),
        u(),
        h(7, "th"),
        f(8, "Last name"),
        u()()(),
        h(9, "tbody")(10, "tr")(11, "td"),
        f(12, "1"),
        u(),
        h(13, "td"),
        f(14, "Foo"),
        u(),
        h(15, "td"),
        f(16, "Bar"),
        u()(),
        h(17, "tr")(18, "td"),
        f(19, "2"),
        u(),
        h(20, "td"),
        f(21, "Someone"),
        u(),
        h(22, "td"),
        f(23, "Youknow"),
        u()(),
        h(24, "tr")(25, "td"),
        f(26, "3"),
        u(),
        h(27, "td"),
        f(28, "Iamout"),
        u(),
        h(29, "td"),
        f(30, "Ofinspiration"),
        u()(),
        h(31, "tr")(32, "td"),
        f(33, "4"),
        u(),
        h(34, "td"),
        f(35, "Yoda"),
        u(),
        h(36, "td"),
        f(37, "Skywalker"),
        u()(),
        h(38, "tr")(39, "td"),
        f(40, "5"),
        u(),
        h(41, "td"),
        f(42, "Patrick"),
        u(),
        h(43, "td"),
        f(44, "Dupont"),
        u()(),
        h(45, "tr")(46, "td"),
        f(47, "6"),
        u(),
        h(48, "td"),
        f(49, "Barack"),
        u(),
        h(50, "td"),
        f(51, "Obama"),
        u()(),
        h(52, "tr")(53, "td"),
        f(54, "7"),
        u(),
        h(55, "td"),
        f(56, "Fran\xE7ois"),
        u(),
        h(57, "td"),
        f(58, "Holland"),
        u()(),
        h(59, "tr")(60, "td"),
        f(61, "8"),
        u(),
        h(62, "td"),
        f(63, "Michel"),
        u(),
        h(64, "td"),
        f(65, "Popo"),
        u()(),
        h(66, "tr")(67, "td"),
        f(68, "9"),
        u(),
        h(69, "td"),
        f(70, "Chuck"),
        u(),
        h(71, "td"),
        f(72, "Norris"),
        u()(),
        h(73, "tr")(74, "td"),
        f(75, "10"),
        u(),
        h(76, "td"),
        f(77, "Simon"),
        u(),
        h(78, "td"),
        f(79, "Robin"),
        u()(),
        h(80, "tr")(81, "td"),
        f(82, "11"),
        u(),
        h(83, "td"),
        f(84, "Louis"),
        u(),
        h(85, "td"),
        f(86, "Lin"),
        u()(),
        h(87, "tr")(88, "td"),
        f(89, "12"),
        u(),
        h(90, "td"),
        f(91, "Zelda"),
        u(),
        h(92, "td"),
        f(93, "Link"),
        u()()()()),
        e & 2 && M("dtOptions", i.dtOptions);
    },
    dependencies: [Ga, y1],
  });
};
var rs = class n {
  team_id;
  team_name;
  team_lead_id;
  team_lead_email;
  total_teams;
  constructor() {
    (this.team_id = ""),
      (this.team_name = ""),
      (this.team_lead_id = ""),
      (this.team_lead_email = ""),
      (this.total_teams = 0);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = te({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var nL = (n) => ({ "is-invalid": n });
function rL(n, t) {
  n & 1 && (h(0, "tr")(1, "td", 47), f(2, "No Teams Found"), u()());
}
function oL(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "tr")(1, "td"),
      f(2),
      u(),
      h(3, "td"),
      f(4),
      u(),
      h(5, "td", 48)(6, "a", 49),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.onEdit(r));
      }),
      W(7, "i", 50),
      u(),
      h(8, "a", 51),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.openDeleteModal(r));
      }),
      W(9, "i", 52),
      u()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      r = E();
    g(2), B((r.currentPage - 1) * r.itemsPerPage + i + 1), g(2), B(e.team_name);
  }
}
function aL(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "li", 53)(1, "a", 42),
      U("click", function () {
        let r = N(e).$implicit,
          o = E();
        return L(o.goToPage(r));
      }),
      f(2),
      u()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = E();
    Te("active", e === i.currentPage), g(2), B(e);
  }
}
function sL(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 54)(1, "div", 55)(2, "div", 56)(3, "div", 57)(4, "h5", 58),
      f(5, "Delete User"),
      u()(),
      h(6, "div", 59),
      f(7, "Are you sure you want to delete this user?"),
      u(),
      h(8, "div", 60)(9, "button", 61),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeDeleteModal());
      }),
      f(10, "Cancel"),
      u(),
      h(11, "button", 62),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.deleteTeamid());
      }),
      f(12, "Delete"),
      u()()()()();
  }
}
function lL(n, t) {
  n & 1 && (h(0, "span"), f(1, "Team Name is required."), u());
}
function cL(n, t) {
  if ((n & 1 && (h(0, "div", 73), F(1, lL, 2, 0, "span", 34), u()), n & 2)) {
    let e,
      i = E(2);
    g(),
      M(
        "ngIf",
        (e = i.useForm.get("team_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function dL(n, t) {
  if (n & 1) {
    let e = ce();
    Qe(0),
      h(1, "button", 78),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.onUpdate());
      }),
      f(2, " Edit "),
      u(),
      Xe();
  }
  if (n & 2) {
    let e = E(2);
    g(), M("disabled", !e.isTeamNameChanged());
  }
}
function uL(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "button", 61),
      U("click", function () {
        N(e);
        let r = E(2);
        return L(r.onSave());
      }),
      f(1, " save "),
      u();
  }
  if (n & 2) {
    let e = E(2);
    de("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function hL(n, t) {
  if (n & 1) {
    let e = ce();
    h(0, "div", 63)(1, "div", 64)(2, "div", 56)(3, "div", 57)(4, "h5", 65),
      f(5),
      u(),
      h(6, "button", 66),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeModal());
      }),
      h(7, "span", 67),
      f(8, "\xD7"),
      u()()(),
      h(9, "div", 68)(10, "form", 69)(11, "div", 70)(12, "div", 71)(
        13,
        "label",
        72
      ),
      f(14, " Team Name "),
      h(15, "span", 73),
      f(16, "*"),
      u()(),
      W(17, "input", 74),
      F(18, cL, 2, 1, "div", 75),
      u()()()(),
      h(19, "div", 60),
      F(20, dL, 3, 1, "ng-container", 76),
      h(21, "button", 77),
      U("click", function () {
        N(e);
        let r = E();
        return L(r.closeModal());
      }),
      f(22, " Close "),
      u(),
      F(23, uL, 2, 1, "ng-template", null, 0, ei),
      u()()()();
  }
  if (n & 2) {
    let e,
      i,
      r = At(24),
      o = E();
    g(5),
      ae(
        " ",
        o.userObj.team_name || o.userObj.team_lead_email
          ? "Edit User"
          : "Add New Team",
        " "
      ),
      g(5),
      M("formGroup", o.useForm),
      g(7),
      M(
        "ngClass",
        xe(
          6,
          nL,
          ((e = o.useForm.get("team_name")) == null ? null : e.touched) &&
            ((e = o.useForm.get("team_name")) == null ? null : e.invalid)
        )
      ),
      g(),
      M(
        "ngIf",
        ((i = o.useForm.get("team_name")) == null ? null : i.invalid) &&
          ((i = o.useForm.get("team_name")) == null ? null : i.touched)
      ),
      g(2),
      M("ngIf", o.teamObj.team_id)("ngIfElse", r);
  }
}
var $u = class n {
  constructor(t, e) {
    this.aleartsrv = t;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = fe(0);
  teamList = fe([]);
  totalteam = fe(0);
  userList = fe([]);
  teamObj = new rs();
  count = fe(0);
  userObj = new rs();
  previousValue = "";
  totalPages = 0;
  isModalOpen = !1;
  masterSrv = G(Ze);
  toastr = G(ki);
  useForm = new Rt({});
  isEditMode = !1;
  previousEmail = "";
  allUsers = [];
  pages = [];
  filteredTeams = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  filteredTeam = [];
  isDeleteModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  paginatedTeams = [];
  filteredTeamList = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (t, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllTeams(),
      this.getAllTeams(),
      this.displayAllTeams(),
      (this.filteredTeams = this.teamList()),
      this.paginateTeams(),
      this.filterTeams();
  }
  initializeForm() {
    this.useForm = new Rt({
      team_name: new st("", [Ne.required, Ne.minLength(2), Ne.maxLength(50)]),
    });
  }
  openModal(t) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!t),
      t
        ? ((this.teamObj = Q({}, t)),
          this.useForm.patchValue({
            team_name: t.team_name,
            team_lead_email: t.team_lead_email,
            team_lead_id: t.team_lead_id,
          }),
          console.log("fhgir"),
          console.log("\u{1F539} Edit Mode: team Object ->", this.teamObj),
          console.log("\u{1F539} teamobj.team_id ->", this.teamObj.team_id))
        : ((this.teamObj = new rs()),
          (this.teamObj.team_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.teamObj
          ));
  }
  onEdit(t) {
    console.log("Edit button clicked. Team ID:", t?.team_id),
      (this.isEditMode = !0),
      (this.isModalOpen = !0),
      (this.teamObj = Q({}, t)),
      this.masterSrv.getTeamById(t.team_id).subscribe(
        (e) => {
          if (e?.status === 200) {
            let i = e.data?.TeamDetails;
            i
              ? (console.log("Team Details:", i),
                this.useForm.patchValue({
                  team_name: i.team_name,
                  team_lead_email: i.team_lead_email,
                  team_lead_id: i.team_lead_id,
                }),
                console.log("Form data patched, opening modal..."),
                setTimeout(() => {
                  $("#exampleModalCenter").modal("show");
                }, 0))
              : (console.error("No team details found"),
                this.toastr.error("Team details not found", "Error"));
          }
        },
        (e) => {
          console.error("Error fetching team details:", e),
            this.toastr.error("Error fetching team details", "Error");
        }
      );
  }
  isTeamNameChanged() {
    return (
      this.useForm.dirty && this.useForm.value.team_name !== this.previousValue
    );
  }
  selectedteamForDeletion = null;
  selectteamForDeletion(t) {
    (this.selectedteamForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let t = this.useForm.get("team_name"),
      e = this.useForm.get("team_lead_email"),
      i = this.useForm.get("team_id");
    if (t && i && t.value) {
      console.log("Team name value:", t.value),
        console.log("Available teams:", this.teamList());
      let r = this.teamList().find((o) => o.team_name === t.value);
      r
        ? (console.log("Selected Team:", r),
          i.setValue(r.team_id),
          e?.setValue(r.team_lead_email))
        : console.warn("Team not found:", t.value);
    }
  }
  openDeleteModal(t) {
    (this.selectedteamForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  getAllTeams() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (t) => {
        t && t.data.rows
          ? (this.allUsers = t.data.rows)
          : this.toastr.warning("No teams found", "Information");
      },
      error: (t) => {
        console.error("teams fetch error:", t),
          this.toastr.error(t.message || "Failed to fetch users", "Error");
      },
    });
  }
  updatePagination() {
    let t = this.filteredTeams,
      e = (this.currentPage - 1) * this.itemsPerPage,
      i = e + this.itemsPerPage;
    (this.paginatedTeams = t.slice(e, i)),
      (this.totalPages = Math.ceil(t.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (r, o) => o + 1));
  }
  onSearchChange() {
    (this.currentPage = 1), this.filterTeams();
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredTeam.length
    );
  }
  onItemsPerPageChange(t) {
    (this.itemsPerPage = +t.target.value),
      (this.currentPage = 1),
      this.filterTeams();
  }
  filterTeams() {
    (this.filteredTeams = this.teamList().filter((t) =>
      t.team_name.toLowerCase().includes(this.searchTerm.toLowerCase())
    )),
      this.paginateTeams();
  }
  paginateTeams() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    this.paginatedTeams = this.filteredTeams.slice(t, e);
  }
  updateVisiblePages() {
    let t =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(t, t + this.maxVisiblePages);
  }
  goToPage(t) {
    (this.currentPage = t), this.updateVisiblePages(), this.paginateTeams();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateTeams());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateTeams());
  }
  deleteTeamid() {
    console.log(
      "this is the select user",
      this.selectteamForDeletion,
      this.selectedteamForDeletion
    ),
      this.selectedteamForDeletion && this.selectedteamForDeletion.team_id
        ? this.masterSrv
            .deleteTeam(this.selectedteamForDeletion.team_id)
            .subscribe(
              (t) => {
                this.toastr.success("Team deleted successfully", "Success"),
                  (this.isDeleteModalOpen = !1),
                  this.displayAllTeams();
              },
              (t) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No Team selected for deletion");
  }
  displayAllTeams() {
    console.log("Fetching all teams..."),
      this.masterSrv.getMultipleTeams().subscribe({
        next: (t) => {
          t && t.data.rows
            ? (this.teamList.set(t.data.rows),
              (this.filteredTeams = t.data.rows),
              this.totalteam.set(t.data.rows.length),
              this.initializeTeamPagination())
            : (this.teamList.set([]),
              (this.filteredTeams = []),
              this.toastr.warning("No team found", "Information"),
              this.totalteam.set(0),
              this.initializeTeamPagination());
        },
        error: (t) => {
          console.error("team fetch error:", t),
            this.toastr.error(t.message || "Failed to fetch team", "Error"),
            this.teamList.set([]),
            (this.filteredTeams = []),
            this.totalteam.set(0),
            this.initializeTeamPagination();
        },
      });
  }
  initializeTeamPagination() {
    let t = this.filteredTeams.length;
    (this.totalPages = Math.ceil(t / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, i) => i + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateTeams();
  }
  min(t, e) {
    return Math.min(t, e);
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.teamObj = Q(Q({}, this.teamObj), this.useForm.value)),
        console.log("\u{1F680} Updated Payload before API call:", this.teamObj),
        this.masterSrv.updateTeam(this.teamObj).subscribe(
          (t) => {
            t.status === 200
              ? (console.log("\u2705 Update Success:", t),
                this.toastr.success(t.message, "Success"),
                this.displayAllTeams(),
                this.closeModal(),
                this.userList.set(
                  this.userList().map((e) =>
                    e.team_id === this.teamObj.team_id
                      ? Q(Q({}, e), this.teamObj)
                      : e
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0))
              : this.toastr.error("Update failed", "Error");
          },
          (t) => {
            console.error("\u274C API Error:", t),
              this.toastr.error("Failed to update team", "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  closeModal() {
    this.isModalOpen = !1;
  }
  markFormGroupTouched(t) {
    Object.values(t.controls).forEach((e) => {
      e.markAsTouched(), e instanceof Rt && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let t = this.useForm.value;
    console.log("Form Data being sent to API:", t),
      this.masterSrv.createNewTeam(t).subscribe({
        next: (e) => {
          this.toastr.success("Team created successfully!", "Success"),
            this.displayAllTeams(),
            this.closeModal(),
            setTimeout(() => {
              this.cdr.detectChanges(), this.cdr.markForCheck();
            }, 0);
        },
        error: (e) => {
          console.error("Team creation error:", e);
          let i = e?.error?.message || "Failed to create team";
          this.toastr.error(i, "Creation Error");
        },
      });
  }
  loadTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (t) => {
        this.count.set(t.data.count), this.teamList.set(t.data.rows);
      },
      error: (t) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", t);
      },
    });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(ns), H(et));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-team"]],
    standalone: !0,
    features: [ue],
    decls: 71,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search teams...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "3", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "team_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "team_name",
        "type",
        "text",
        "formControlName",
        "team_name",
        "placeholder",
        "Team Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (h(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        f(6, "Utils"),
        u()(),
        h(7, "li", 7)(8, "a", 8),
        f(9, "Team Master"),
        u()()()(),
        h(10, "div", 9)(11, "div", 10)(12, "a", 11),
        U("click", function () {
          return i.openModal();
        }),
        W(13, "i", 12),
        f(14, "Add Team "),
        u()(),
        h(15, "div", 13)(16, "div", 14)(17, "p", 15),
        f(18, "Total Team"),
        u(),
        h(19, "h3", 16),
        f(20),
        u()()()(),
        h(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        W(26, "label", 22),
        h(27, "select", 23),
        U("change", function (o) {
          return i.onItemsPerPageChange(o);
        }),
        h(28, "option", 24),
        f(29, "10"),
        u(),
        h(30, "option", 25),
        f(31, "25"),
        u(),
        h(32, "option", 26),
        f(33, "50"),
        u(),
        h(34, "option", 27),
        f(35, "100"),
        u()(),
        h(36, "label", 28),
        f(37, "records per page"),
        u()(),
        h(38, "div", 29)(39, "div", 30)(40, "input", 31),
        Wt("ngModelChange", function (o) {
          return $t(i.searchTerm, o) || (i.searchTerm = o), o;
        }),
        U("input", function () {
          return i.onSearchChange();
        }),
        u()()()(),
        f(41, " \xA0\xA0 "),
        u(),
        h(42, "div", 32)(43, "table", 33)(44, "thead")(45, "tr")(46, "th"),
        f(47, "Sr No"),
        u(),
        h(48, "th"),
        f(49, "Team Name"),
        u(),
        h(50, "th"),
        f(51, "Action"),
        u()()(),
        h(52, "tbody"),
        F(53, rL, 3, 0, "tr", 34)(54, oL, 10, 2, "tr", 35),
        u()()(),
        h(55, "div", 36)(56, "div", 37)(57, "div", 38),
        f(58),
        u()(),
        h(59, "div", 37)(60, "div", 39)(61, "ul", 40)(62, "li", 41)(
          63,
          "a",
          42
        ),
        U("click", function () {
          return i.previousPage();
        }),
        f(64, "Previous"),
        u()(),
        F(65, aL, 3, 3, "li", 43),
        h(66, "li", 44)(67, "a", 42),
        U("click", function () {
          return i.nextPage();
        }),
        f(68, "Next"),
        u()()()()()()()()()(),
        F(69, sL, 13, 0, "div", 45)(70, hL, 25, 8, "div", 46)),
        e & 2 &&
          (g(20),
          ae(" ", i.totalteam(), " "),
          g(20),
          zt("ngModel", i.searchTerm),
          g(13),
          M("ngIf", i.paginatedTeams.length === 0),
          g(),
          M("ngForOf", i.paginatedTeams),
          g(4),
          Hi(
            " Showing ",
            (i.currentPage - 1) * i.itemsPerPage + 1,
            " to ",
            i.currentPage * i.itemsPerPage < i.teamList().length
              ? i.currentPage * i.itemsPerPage
              : i.teamList().length,
            " of ",
            i.teamList().length,
            " entries "
          ),
          g(4),
          Te("disabled", i.currentPage === 1),
          g(3),
          M("ngForOf", i.visiblePages),
          g(),
          Te("disabled", i.currentPage === i.totalPages),
          g(3),
          M("ngIf", i.isDeleteModalOpen),
          g(),
          M("ngIf", i.isModalOpen));
    },
    dependencies: [
      Fe,
      Gt,
      ti,
      rt,
      ht,
      Xr,
      $i,
      Wi,
      fi,
      Ti,
      zi,
      Dr,
      an,
      vn,
      sn,
      ln,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}",
    ],
  });
};
var Yx = [
  { path: "dataTable", component: zu },
  { path: "", component: Yl, pathMatch: "full" },
  { path: "login", component: Yl },
  {
    path: "Admin",
    component: fd,
    canActivate: [ui],
    children: [
      { path: "", redirectTo: "dashboard", pathMatch: "full" },
      {
        path: "dashboard",
        component: tu,
        data: { title: "Dashboard" },
        canActivate: [ui],
      },
      {
        path: "dealer",
        component: ou,
        data: { title: "Dealer" },
        canActivate: [ui],
      },
      {
        path: "team",
        component: $u,
        data: { title: "team" },
        canActivate: [ui],
      },
      {
        path: "vehicle",
        component: Cu,
        data: { title: "Vehicle" },
        canActivate: [ui],
      },
      {
        path: "role",
        component: Uu,
        data: { title: "Role" },
        canActivate: [ui],
      },
      {
        path: "user-all",
        component: Iu,
        data: { title: "Users-All" },
        canActivate: [ui],
      },
      {
        path: "customer",
        component: Tu,
        data: { title: "Customer" },
        canActivate: [ui],
      },
      {
        path: "profile",
        component: ku,
        data: { title: "Profile" },
        canActivate: [ui],
      },
      {
        path: "singleUser/:dealer_id",
        component: Gl,
        resolve: { dealerData: ql },
        data: { title: "Multiple" },
        canActivate: [ui],
      },
      {
        path: "single-events/:eventId",
        component: Ou,
        resolve: { eventData: Ru },
        data: { title: "Single events" },
        canActivate: [ui],
      },
      {
        path: "single-lead/:dealerId/:leadId",
        component: Pu,
        resolve: { leadData: Au },
        data: { title: "Single Lead Data" },
        canActivate: [ui],
      },
      {
        path: "single-user/:user_id",
        component: Nu,
        resolve: { userData: Fu },
        data: { title: "Single user Data" },
        canActivate: [ui],
      },
      {
        path: "single-task/:taskId",
        component: Vu,
        resolve: { taskData: Lu },
        data: { title: "Single Task Data" },
        canActivate: [ui],
      },
      {
        path: "single-opportunities/:oppId",
        component: Hu,
        resolve: { oppData: ju },
        data: { title: "Single Opportunities Data" },
        canActivate: [ui],
      },
      {
        path: "admin/singleDealer/:id",
        component: Gl,
        resolve: { dealerData: ql },
        data: { title: "Single dealer Data" },
        canActivate: [ui],
      },
    ],
  },
];
var pL = "@",
  mL = (() => {
    class n {
      constructor(e, i, r, o, a) {
        (this.doc = e),
          (this.delegate = i),
          (this.zone = r),
          (this.animationType = o),
          (this.moduleImpl = a),
          (this._rendererFactoryPromise = null),
          (this.scheduler = G(T_, { optional: !0 })),
          (this.loadingSchedulerFn = G(fL, { optional: !0 }));
      }
      ngOnDestroy() {
        this._engine?.flush();
      }
      loadImpl() {
        let e = () =>
            this.moduleImpl ?? import("./chunk-FQJHDL3N.js").then((r) => r),
          i;
        return (
          this.loadingSchedulerFn
            ? (i = this.loadingSchedulerFn(e))
            : (i = e()),
          i
            .catch((r) => {
              throw new mt(5300, !1);
            })
            .then(({ ɵcreateEngine: r, ɵAnimationRendererFactory: o }) => {
              this._engine = r(this.animationType, this.doc);
              let a = new o(this.delegate, this._engine, this.zone);
              return (this.delegate = a), a;
            })
        );
      }
      createRenderer(e, i) {
        let r = this.delegate.createRenderer(e, i);
        if (r.ɵtype === 0) return r;
        typeof r.throwOnSyntheticProps == "boolean" &&
          (r.throwOnSyntheticProps = !1);
        let o = new xg(r);
        return (
          i?.data?.animation &&
            !this._rendererFactoryPromise &&
            (this._rendererFactoryPromise = this.loadImpl()),
          this._rendererFactoryPromise
            ?.then((a) => {
              let s = a.createRenderer(e, i);
              o.use(s), this.scheduler?.notify(10);
            })
            .catch((a) => {
              o.use(r);
            }),
          o
        );
      }
      begin() {
        this.delegate.begin?.();
      }
      end() {
        this.delegate.end?.();
      }
      whenRenderingDone() {
        return this.delegate.whenRenderingDone?.() ?? Promise.resolve();
      }
      static {
        this.ɵfac = function (i) {
          zr();
        };
      }
      static {
        this.ɵprov = te({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  xg = class {
    constructor(t) {
      (this.delegate = t), (this.replay = []), (this.ɵtype = 1);
    }
    use(t) {
      if (((this.delegate = t), this.replay !== null)) {
        for (let e of this.replay) e(t);
        this.replay = null;
      }
    }
    get data() {
      return this.delegate.data;
    }
    destroy() {
      (this.replay = null), this.delegate.destroy();
    }
    createElement(t, e) {
      return this.delegate.createElement(t, e);
    }
    createComment(t) {
      return this.delegate.createComment(t);
    }
    createText(t) {
      return this.delegate.createText(t);
    }
    get destroyNode() {
      return this.delegate.destroyNode;
    }
    appendChild(t, e) {
      this.delegate.appendChild(t, e);
    }
    insertBefore(t, e, i, r) {
      this.delegate.insertBefore(t, e, i, r);
    }
    removeChild(t, e, i) {
      this.delegate.removeChild(t, e, i);
    }
    selectRootElement(t, e) {
      return this.delegate.selectRootElement(t, e);
    }
    parentNode(t) {
      return this.delegate.parentNode(t);
    }
    nextSibling(t) {
      return this.delegate.nextSibling(t);
    }
    setAttribute(t, e, i, r) {
      this.delegate.setAttribute(t, e, i, r);
    }
    removeAttribute(t, e, i) {
      this.delegate.removeAttribute(t, e, i);
    }
    addClass(t, e) {
      this.delegate.addClass(t, e);
    }
    removeClass(t, e) {
      this.delegate.removeClass(t, e);
    }
    setStyle(t, e, i, r) {
      this.delegate.setStyle(t, e, i, r);
    }
    removeStyle(t, e, i) {
      this.delegate.removeStyle(t, e, i);
    }
    setProperty(t, e, i) {
      this.shouldReplay(e) && this.replay.push((r) => r.setProperty(t, e, i)),
        this.delegate.setProperty(t, e, i);
    }
    setValue(t, e) {
      this.delegate.setValue(t, e);
    }
    listen(t, e, i) {
      return (
        this.shouldReplay(e) && this.replay.push((r) => r.listen(t, e, i)),
        this.delegate.listen(t, e, i)
      );
    }
    shouldReplay(t) {
      return this.replay !== null && t.startsWith(pL);
    }
  },
  fL = new Me("");
function qx(n = "animations") {
  return (
    gc("NgAsyncAnimations"),
    Qn([
      {
        provide: fc,
        useFactory: (t, e, i) => new mL(t, e, i, n),
        deps: [Oe, Pc, Re],
      },
      {
        provide: Xn,
        useValue: n === "noop" ? "NoopAnimations" : "BrowserAnimations",
      },
    ])
  );
}
var Kx = {
  providers: [
    P_({ eventCoalescing: !0 }),
    db(Yx),
    Ga,
    y0(),
    jh(),
    qx(),
    f_(
      p1.forRoot({
        timeOut: 3e3,
        positionClass: "toast-top-right",
        preventDuplicates: !0,
        progressBar: !0,
      })
    ),
  ],
};
var Wu = class n {
  title = "smartAssists";
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-root"]],
    standalone: !0,
    features: [ue],
    decls: 1,
    vars: 0,
    template: function (e, i) {
      e & 1 && W(0, "router-outlet");
    },
    dependencies: [Js],
  });
};
b0(Wu, Kx).catch((n) => console.error(n));
