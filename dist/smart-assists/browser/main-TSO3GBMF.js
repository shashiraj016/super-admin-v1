import {
  $ as Xu,
  $a as Gn,
  $b as ce,
  $c as Gi,
  A as jl,
  Aa as Tt,
  Ab as z,
  Ac as Xo,
  B as Gu,
  Ba as Fe,
  Bb as Ue,
  Bc as $g,
  C as $o,
  Ca as wg,
  Cb as ze,
  Cc as Wg,
  D as Tr,
  Da as $l,
  Db as wn,
  Dc as ke,
  E as Yu,
  Ea as Dg,
  Eb as re,
  Ec as Gg,
  F as qu,
  Fa as ai,
  Fb as Yl,
  Fc as ns,
  G as $i,
  Ga as Wn,
  Gb as N,
  Gc as Yg,
  H as fg,
  Ha as Za,
  Hb as Ng,
  Hc as qg,
  I as Ul,
  Ia as Ju,
  Ib as x,
  Ic as dr,
  J as gg,
  Ja as Go,
  Jb as Xt,
  Jc as Zl,
  K as Er,
  Ka as Yo,
  Kb as Lt,
  Kc as It,
  L as Or,
  La as Sg,
  Lb as ln,
  Lc as At,
  M as Ku,
  Ma as Mg,
  Mb as yt,
  Mc as Xe,
  N as _g,
  Na as Tg,
  Nb as ot,
  Nc as Jl,
  O as bg,
  Oa as Eg,
  Ob as at,
  Oc as ec,
  P as qa,
  Pa as Og,
  Pb as Lg,
  Pc as Pr,
  Q as Un,
  Qa as kg,
  Qb as rh,
  Qc as Zo,
  R as Ci,
  Ra as Pg,
  Rb as _t,
  Rc as Kg,
  S as Ut,
  Sa as cr,
  Sb as h,
  Sc as Ae,
  T as Kt,
  Ta as Ja,
  Tb as B,
  Tc as Qg,
  U as Qu,
  Ua as eh,
  Ub as ee,
  Uc as dn,
  V as ct,
  Va as Ig,
  Vb as Yn,
  Vc as rs,
  W as wi,
  Wa as qo,
  Wb as Fi,
  Wc as Xg,
  X as J,
  Xa as es,
  Xb as dt,
  Xc as tc,
  Y as ve,
  Ya as m,
  Yb as ut,
  Z as vg,
  Za as H,
  Zb as ht,
  _ as we,
  _a as kr,
  _b as Vt,
  _c as so,
  a as zi,
  aa as Q,
  ab as Ag,
  ac as pi,
  b as dg,
  ba as G,
  bb as oo,
  bc as de,
  bd as li,
  c as Hn,
  ca as Ka,
  cb as Wl,
  cc as Ni,
  cd as ur,
  d as Uu,
  da as zl,
  db as hi,
  dc as oh,
  dd as ch,
  e as zu,
  ea as Qa,
  eb as Wi,
  ec as Vg,
  ed as Yi,
  f as Oe,
  fa as ae,
  fb as Gl,
  fc as ts,
  g as Nt,
  ga as ye,
  gb as pe,
  gc as ah,
  h as $u,
  ha as Ie,
  hb as Rg,
  hc as Pt,
  i as jn,
  ia as zn,
  ib as Ze,
  ic as ql,
  j as ui,
  ja as yg,
  jb as kt,
  jc as Kl,
  k as fe,
  ka as xg,
  kb as Fg,
  kc as sh,
  l as Ga,
  la as an,
  lb as th,
  lc as is,
  m as Bl,
  ma as sn,
  mb as R,
  mc as Li,
  n as ug,
  na as wt,
  nb as ih,
  nc as Bg,
  o as qe,
  oa as P,
  ob as nh,
  oc as Ql,
  p as ro,
  pa as I,
  pb as xn,
  pc as Hg,
  q as Ri,
  qa as ft,
  qb as le,
  qc as lh,
  r as Ya,
  ra as $n,
  rb as y,
  rc as Ke,
  s as Hl,
  sa as gt,
  sb as si,
  sc as jg,
  t as Wu,
  ta as Wo,
  tb as ne,
  tc as Ug,
  u as hg,
  ua as Dt,
  ub as Be,
  uc as Se,
  v as yn,
  va as Xa,
  vb as Cn,
  vc as cn,
  w as pg,
  wa as xe,
  wb as Ko,
  wc as ao,
  x as zo,
  xa as Te,
  xb as Qo,
  xc as Dn,
  y as Ct,
  ya as Zu,
  yb as c,
  yc as Xl,
  z as mg,
  za as Cg,
  zb as d,
  zc as zg,
} from "./chunk-FINJYXHG.js";
import {
  a as W,
  b as Ce,
  c as cg,
  d as Ex,
  e as Ox,
  f as Uo,
} from "./chunk-EQDQRRRY.js";
var by = Ex((_y, eu) => {
  "use strict";
  (function (n, i) {
    "use strict";
    typeof eu == "object" && typeof eu.exports == "object"
      ? (eu.exports = n.document
          ? i(n, !0)
          : function (e) {
              if (!e.document)
                throw new Error("jQuery requires a window with a document");
              return i(e);
            })
      : i(n);
  })(typeof window < "u" ? window : _y, function (n, i) {
    "use strict";
    var e = [],
      t = Object.getPrototypeOf,
      r = e.slice,
      o = e.flat
        ? function (s) {
            return e.flat.call(s);
          }
        : function (s) {
            return e.concat.apply([], s);
          },
      a = e.push,
      l = e.indexOf,
      u = {},
      f = u.toString,
      v = u.hasOwnProperty,
      D = v.toString,
      T = D.call(Object),
      M = {},
      k = function (p) {
        return (
          typeof p == "function" &&
          typeof p.nodeType != "number" &&
          typeof p.item != "function"
        );
      },
      V = function (p) {
        return p != null && p === p.window;
      },
      A = n.document,
      E = { type: !0, src: !0, nonce: !0, noModule: !0 };
    function X(s, p, g) {
      g = g || A;
      var b,
        C,
        w = g.createElement("script");
      if (((w.text = s), p))
        for (b in E)
          (C = p[b] || (p.getAttribute && p.getAttribute(b))),
            C && w.setAttribute(b, C);
      g.head.appendChild(w).parentNode.removeChild(w);
    }
    function se(s) {
      return s == null
        ? s + ""
        : typeof s == "object" || typeof s == "function"
        ? u[f.call(s)] || "object"
        : typeof s;
    }
    var be = "3.7.1",
      Ee = /HTML$/i,
      _ = function (s, p) {
        return new _.fn.init(s, p);
      };
    (_.fn = _.prototype =
      {
        jquery: be,
        constructor: _,
        length: 0,
        toArray: function () {
          return r.call(this);
        },
        get: function (s) {
          return s == null
            ? r.call(this)
            : s < 0
            ? this[s + this.length]
            : this[s];
        },
        pushStack: function (s) {
          var p = _.merge(this.constructor(), s);
          return (p.prevObject = this), p;
        },
        each: function (s) {
          return _.each(this, s);
        },
        map: function (s) {
          return this.pushStack(
            _.map(this, function (p, g) {
              return s.call(p, g, p);
            })
          );
        },
        slice: function () {
          return this.pushStack(r.apply(this, arguments));
        },
        first: function () {
          return this.eq(0);
        },
        last: function () {
          return this.eq(-1);
        },
        even: function () {
          return this.pushStack(
            _.grep(this, function (s, p) {
              return (p + 1) % 2;
            })
          );
        },
        odd: function () {
          return this.pushStack(
            _.grep(this, function (s, p) {
              return p % 2;
            })
          );
        },
        eq: function (s) {
          var p = this.length,
            g = +s + (s < 0 ? p : 0);
          return this.pushStack(g >= 0 && g < p ? [this[g]] : []);
        },
        end: function () {
          return this.prevObject || this.constructor();
        },
        push: a,
        sort: e.sort,
        splice: e.splice,
      }),
      (_.extend = _.fn.extend =
        function () {
          var s,
            p,
            g,
            b,
            C,
            w,
            S = arguments[0] || {},
            L = 1,
            F = arguments.length,
            U = !1;
          for (
            typeof S == "boolean" && ((U = S), (S = arguments[L] || {}), L++),
              typeof S != "object" && !k(S) && (S = {}),
              L === F && ((S = this), L--);
            L < F;
            L++
          )
            if ((s = arguments[L]) != null)
              for (p in s)
                (b = s[p]),
                  !(p === "__proto__" || S === b) &&
                    (U && b && (_.isPlainObject(b) || (C = Array.isArray(b)))
                      ? ((g = S[p]),
                        C && !Array.isArray(g)
                          ? (w = [])
                          : !C && !_.isPlainObject(g)
                          ? (w = {})
                          : (w = g),
                        (C = !1),
                        (S[p] = _.extend(U, w, b)))
                      : b !== void 0 && (S[p] = b));
          return S;
        }),
      _.extend({
        expando: "jQuery" + (be + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function (s) {
          throw new Error(s);
        },
        noop: function () {},
        isPlainObject: function (s) {
          var p, g;
          return !s || f.call(s) !== "[object Object]"
            ? !1
            : ((p = t(s)),
              p
                ? ((g = v.call(p, "constructor") && p.constructor),
                  typeof g == "function" && D.call(g) === T)
                : !0);
        },
        isEmptyObject: function (s) {
          var p;
          for (p in s) return !1;
          return !0;
        },
        globalEval: function (s, p, g) {
          X(s, { nonce: p && p.nonce }, g);
        },
        each: function (s, p) {
          var g,
            b = 0;
          if (He(s))
            for (g = s.length; b < g && p.call(s[b], b, s[b]) !== !1; b++);
          else for (b in s) if (p.call(s[b], b, s[b]) === !1) break;
          return s;
        },
        text: function (s) {
          var p,
            g = "",
            b = 0,
            C = s.nodeType;
          if (!C) for (; (p = s[b++]); ) g += _.text(p);
          return C === 1 || C === 11
            ? s.textContent
            : C === 9
            ? s.documentElement.textContent
            : C === 3 || C === 4
            ? s.nodeValue
            : g;
        },
        makeArray: function (s, p) {
          var g = p || [];
          return (
            s != null &&
              (He(Object(s))
                ? _.merge(g, typeof s == "string" ? [s] : s)
                : a.call(g, s)),
            g
          );
        },
        inArray: function (s, p, g) {
          return p == null ? -1 : l.call(p, s, g);
        },
        isXMLDoc: function (s) {
          var p = s && s.namespaceURI,
            g = s && (s.ownerDocument || s).documentElement;
          return !Ee.test(p || (g && g.nodeName) || "HTML");
        },
        merge: function (s, p) {
          for (var g = +p.length, b = 0, C = s.length; b < g; b++)
            s[C++] = p[b];
          return (s.length = C), s;
        },
        grep: function (s, p, g) {
          for (var b, C = [], w = 0, S = s.length, L = !g; w < S; w++)
            (b = !p(s[w], w)), b !== L && C.push(s[w]);
          return C;
        },
        map: function (s, p, g) {
          var b,
            C,
            w = 0,
            S = [];
          if (He(s))
            for (b = s.length; w < b; w++)
              (C = p(s[w], w, g)), C != null && S.push(C);
          else for (w in s) (C = p(s[w], w, g)), C != null && S.push(C);
          return o(S);
        },
        guid: 1,
        support: M,
      }),
      typeof Symbol == "function" &&
        (_.fn[Symbol.iterator] = e[Symbol.iterator]),
      _.each(
        "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
          " "
        ),
        function (s, p) {
          u["[object " + p + "]"] = p.toLowerCase();
        }
      );
    function He(s) {
      var p = !!s && "length" in s && s.length,
        g = se(s);
      return k(s) || V(s)
        ? !1
        : g === "array" ||
            p === 0 ||
            (typeof p == "number" && p > 0 && p - 1 in s);
    }
    function De(s, p) {
      return s.nodeName && s.nodeName.toLowerCase() === p.toLowerCase();
    }
    var We = e.pop,
      bt = e.sort,
      qt = e.splice,
      Le = "[\\x20\\t\\r\\n\\f]",
      vi = new RegExp(
        "^" + Le + "+|((?:^|[^\\\\])(?:\\\\.)*)" + Le + "+$",
        "g"
      );
    _.contains = function (s, p) {
      var g = p && p.parentNode;
      return (
        s === g ||
        !!(
          g &&
          g.nodeType === 1 &&
          (s.contains
            ? s.contains(g)
            : s.compareDocumentPosition && s.compareDocumentPosition(g) & 16)
        )
      );
    };
    var Pn = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function Ft(s, p) {
      return p
        ? s === "\0"
          ? "\uFFFD"
          : s.slice(0, -1) +
            "\\" +
            s.charCodeAt(s.length - 1).toString(16) +
            " "
        : "\\" + s;
    }
    _.escapeSelector = function (s) {
      return (s + "").replace(Pn, Ft);
    };
    var vt = A,
      yi = a;
    (function () {
      var s,
        p,
        g,
        b,
        C,
        w = yi,
        S,
        L,
        F,
        U,
        Z,
        ie = _.expando,
        q = 0,
        oe = 0,
        je = Fl(),
        rt = Fl(),
        Ye = Fl(),
        gi = Fl(),
        oi = function (O, j) {
          return O === j && (C = !0), 0;
        },
        Fn =
          "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        Nn =
          "(?:\\\\[\\da-fA-F]{1,6}" +
          Le +
          "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
        it =
          "\\[" +
          Le +
          "*(" +
          Nn +
          ")(?:" +
          Le +
          "*([*^$|!~]?=)" +
          Le +
          `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` +
          Nn +
          "))|)" +
          Le +
          "*\\]",
        io =
          ":(" +
          Nn +
          `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` +
          it +
          ")*)|.*)\\)|)",
        st = new RegExp(Le + "+", "g"),
        jt = new RegExp("^" + Le + "*," + Le + "*"),
        za = new RegExp("^" + Le + "*([>+~]|" + Le + ")" + Le + "*"),
        Fu = new RegExp(Le + "|>"),
        Ln = new RegExp(io),
        $a = new RegExp("^" + Nn + "$"),
        Vn = {
          ID: new RegExp("^#(" + Nn + ")"),
          CLASS: new RegExp("^\\.(" + Nn + ")"),
          TAG: new RegExp("^(" + Nn + "|[*])"),
          ATTR: new RegExp("^" + it),
          PSEUDO: new RegExp("^" + io),
          CHILD: new RegExp(
            "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
              Le +
              "*(even|odd|(([+-]|)(\\d*)n|)" +
              Le +
              "*(?:([+-]|)" +
              Le +
              "*(\\d+)|))" +
              Le +
              "*\\)|)",
            "i"
          ),
          bool: new RegExp("^(?:" + Fn + ")$", "i"),
          needsContext: new RegExp(
            "^" +
              Le +
              "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
              Le +
              "*((?:-\\d)?\\d*)" +
              Le +
              "*\\)|)(?=[^-]|$)",
            "i"
          ),
        },
        Dr = /^(?:input|select|textarea|button)$/i,
        Sr = /^h\d$/i,
        rn = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        Nu = /[+~]/,
        sr = new RegExp(
          "\\\\[\\da-fA-F]{1,6}" + Le + "?|\\\\([^\\r\\n\\f])",
          "g"
        ),
        lr = function (O, j) {
          var Y = "0x" + O.slice(1) - 65536;
          return (
            j ||
            (Y < 0
              ? String.fromCharCode(Y + 65536)
              : String.fromCharCode((Y >> 10) | 55296, (Y & 1023) | 56320))
          );
        },
        xx = function () {
          Mr();
        },
        Cx = Ll(
          function (O) {
            return O.disabled === !0 && De(O, "fieldset");
          },
          { dir: "parentNode", next: "legend" }
        );
      function wx() {
        try {
          return S.activeElement;
        } catch {}
      }
      try {
        w.apply((e = r.call(vt.childNodes)), vt.childNodes),
          e[vt.childNodes.length].nodeType;
      } catch {
        w = {
          apply: function (j, Y) {
            yi.apply(j, r.call(Y));
          },
          call: function (j) {
            yi.apply(j, r.call(arguments, 1));
          },
        };
      }
      function mt(O, j, Y, K) {
        var te,
          he,
          ge,
          Me,
          _e,
          Je,
          Ve,
          $e = j && j.ownerDocument,
          et = j ? j.nodeType : 9;
        if (
          ((Y = Y || []),
          typeof O != "string" || !O || (et !== 1 && et !== 9 && et !== 11))
        )
          return Y;
        if (!K && (Mr(j), (j = j || S), F)) {
          if (et !== 11 && (_e = rn.exec(O)))
            if ((te = _e[1])) {
              if (et === 9)
                if ((ge = j.getElementById(te))) {
                  if (ge.id === te) return w.call(Y, ge), Y;
                } else return Y;
              else if (
                $e &&
                (ge = $e.getElementById(te)) &&
                mt.contains(j, ge) &&
                ge.id === te
              )
                return w.call(Y, ge), Y;
            } else {
              if (_e[2]) return w.apply(Y, j.getElementsByTagName(O)), Y;
              if ((te = _e[3]) && j.getElementsByClassName)
                return w.apply(Y, j.getElementsByClassName(te)), Y;
            }
          if (!gi[O + " "] && (!U || !U.test(O))) {
            if (((Ve = O), ($e = j), et === 1 && (Fu.test(O) || za.test(O)))) {
              for (
                $e = (Nu.test(O) && Lu(j.parentNode)) || j,
                  ($e != j || !M.scope) &&
                    ((Me = j.getAttribute("id"))
                      ? (Me = _.escapeSelector(Me))
                      : j.setAttribute("id", (Me = ie))),
                  Je = Wa(O),
                  he = Je.length;
                he--;

              )
                Je[he] = (Me ? "#" + Me : ":scope") + " " + Nl(Je[he]);
              Ve = Je.join(",");
            }
            try {
              return w.apply(Y, $e.querySelectorAll(Ve)), Y;
            } catch {
              gi(O, !0);
            } finally {
              Me === ie && j.removeAttribute("id");
            }
          }
        }
        return lg(O.replace(vi, "$1"), j, Y, K);
      }
      function Fl() {
        var O = [];
        function j(Y, K) {
          return (
            O.push(Y + " ") > p.cacheLength && delete j[O.shift()],
            (j[Y + " "] = K)
          );
        }
        return j;
      }
      function vn(O) {
        return (O[ie] = !0), O;
      }
      function Ho(O) {
        var j = S.createElement("fieldset");
        try {
          return !!O(j);
        } catch {
          return !1;
        } finally {
          j.parentNode && j.parentNode.removeChild(j), (j = null);
        }
      }
      function Dx(O) {
        return function (j) {
          return De(j, "input") && j.type === O;
        };
      }
      function Sx(O) {
        return function (j) {
          return (De(j, "input") || De(j, "button")) && j.type === O;
        };
      }
      function ag(O) {
        return function (j) {
          return "form" in j
            ? j.parentNode && j.disabled === !1
              ? "label" in j
                ? "label" in j.parentNode
                  ? j.parentNode.disabled === O
                  : j.disabled === O
                : j.isDisabled === O || (j.isDisabled !== !O && Cx(j) === O)
              : j.disabled === O
            : "label" in j
            ? j.disabled === O
            : !1;
        };
      }
      function no(O) {
        return vn(function (j) {
          return (
            (j = +j),
            vn(function (Y, K) {
              for (var te, he = O([], Y.length, j), ge = he.length; ge--; )
                Y[(te = he[ge])] && (Y[te] = !(K[te] = Y[te]));
            })
          );
        });
      }
      function Lu(O) {
        return O && typeof O.getElementsByTagName < "u" && O;
      }
      function Mr(O) {
        var j,
          Y = O ? O.ownerDocument || O : vt;
        return (
          Y == S ||
            Y.nodeType !== 9 ||
            !Y.documentElement ||
            ((S = Y),
            (L = S.documentElement),
            (F = !_.isXMLDoc(S)),
            (Z = L.matches || L.webkitMatchesSelector || L.msMatchesSelector),
            L.msMatchesSelector &&
              vt != S &&
              (j = S.defaultView) &&
              j.top !== j &&
              j.addEventListener("unload", xx),
            (M.getById = Ho(function (K) {
              return (
                (L.appendChild(K).id = _.expando),
                !S.getElementsByName || !S.getElementsByName(_.expando).length
              );
            })),
            (M.disconnectedMatch = Ho(function (K) {
              return Z.call(K, "*");
            })),
            (M.scope = Ho(function () {
              return S.querySelectorAll(":scope");
            })),
            (M.cssHas = Ho(function () {
              try {
                return S.querySelector(":has(*,:jqfake)"), !1;
              } catch {
                return !0;
              }
            })),
            M.getById
              ? ((p.filter.ID = function (K) {
                  var te = K.replace(sr, lr);
                  return function (he) {
                    return he.getAttribute("id") === te;
                  };
                }),
                (p.find.ID = function (K, te) {
                  if (typeof te.getElementById < "u" && F) {
                    var he = te.getElementById(K);
                    return he ? [he] : [];
                  }
                }))
              : ((p.filter.ID = function (K) {
                  var te = K.replace(sr, lr);
                  return function (he) {
                    var ge =
                      typeof he.getAttributeNode < "u" &&
                      he.getAttributeNode("id");
                    return ge && ge.value === te;
                  };
                }),
                (p.find.ID = function (K, te) {
                  if (typeof te.getElementById < "u" && F) {
                    var he,
                      ge,
                      Me,
                      _e = te.getElementById(K);
                    if (_e) {
                      if (
                        ((he = _e.getAttributeNode("id")), he && he.value === K)
                      )
                        return [_e];
                      for (
                        Me = te.getElementsByName(K), ge = 0;
                        (_e = Me[ge++]);

                      )
                        if (
                          ((he = _e.getAttributeNode("id")),
                          he && he.value === K)
                        )
                          return [_e];
                    }
                    return [];
                  }
                })),
            (p.find.TAG = function (K, te) {
              return typeof te.getElementsByTagName < "u"
                ? te.getElementsByTagName(K)
                : te.querySelectorAll(K);
            }),
            (p.find.CLASS = function (K, te) {
              if (typeof te.getElementsByClassName < "u" && F)
                return te.getElementsByClassName(K);
            }),
            (U = []),
            Ho(function (K) {
              var te;
              (L.appendChild(K).innerHTML =
                "<a id='" +
                ie +
                "' href='' disabled='disabled'></a><select id='" +
                ie +
                "-\r\\' disabled='disabled'><option selected=''></option></select>"),
                K.querySelectorAll("[selected]").length ||
                  U.push("\\[" + Le + "*(?:value|" + Fn + ")"),
                K.querySelectorAll("[id~=" + ie + "-]").length || U.push("~="),
                K.querySelectorAll("a#" + ie + "+*").length ||
                  U.push(".#.+[+~]"),
                K.querySelectorAll(":checked").length || U.push(":checked"),
                (te = S.createElement("input")),
                te.setAttribute("type", "hidden"),
                K.appendChild(te).setAttribute("name", "D"),
                (L.appendChild(K).disabled = !0),
                K.querySelectorAll(":disabled").length !== 2 &&
                  U.push(":enabled", ":disabled"),
                (te = S.createElement("input")),
                te.setAttribute("name", ""),
                K.appendChild(te),
                K.querySelectorAll("[name='']").length ||
                  U.push("\\[" + Le + "*name" + Le + "*=" + Le + `*(?:''|"")`);
            }),
            M.cssHas || U.push(":has"),
            (U = U.length && new RegExp(U.join("|"))),
            (oi = function (K, te) {
              if (K === te) return (C = !0), 0;
              var he = !K.compareDocumentPosition - !te.compareDocumentPosition;
              return (
                he ||
                ((he =
                  (K.ownerDocument || K) == (te.ownerDocument || te)
                    ? K.compareDocumentPosition(te)
                    : 1),
                he & 1 ||
                (!M.sortDetached && te.compareDocumentPosition(K) === he)
                  ? K === S || (K.ownerDocument == vt && mt.contains(vt, K))
                    ? -1
                    : te === S ||
                      (te.ownerDocument == vt && mt.contains(vt, te))
                    ? 1
                    : b
                    ? l.call(b, K) - l.call(b, te)
                    : 0
                  : he & 4
                  ? -1
                  : 1)
              );
            })),
          S
        );
      }
      (mt.matches = function (O, j) {
        return mt(O, null, null, j);
      }),
        (mt.matchesSelector = function (O, j) {
          if ((Mr(O), F && !gi[j + " "] && (!U || !U.test(j))))
            try {
              var Y = Z.call(O, j);
              if (
                Y ||
                M.disconnectedMatch ||
                (O.document && O.document.nodeType !== 11)
              )
                return Y;
            } catch {
              gi(j, !0);
            }
          return mt(j, S, null, [O]).length > 0;
        }),
        (mt.contains = function (O, j) {
          return (O.ownerDocument || O) != S && Mr(O), _.contains(O, j);
        }),
        (mt.attr = function (O, j) {
          (O.ownerDocument || O) != S && Mr(O);
          var Y = p.attrHandle[j.toLowerCase()],
            K =
              Y && v.call(p.attrHandle, j.toLowerCase()) ? Y(O, j, !F) : void 0;
          return K !== void 0 ? K : O.getAttribute(j);
        }),
        (mt.error = function (O) {
          throw new Error("Syntax error, unrecognized expression: " + O);
        }),
        (_.uniqueSort = function (O) {
          var j,
            Y = [],
            K = 0,
            te = 0;
          if (
            ((C = !M.sortStable),
            (b = !M.sortStable && r.call(O, 0)),
            bt.call(O, oi),
            C)
          ) {
            for (; (j = O[te++]); ) j === O[te] && (K = Y.push(te));
            for (; K--; ) qt.call(O, Y[K], 1);
          }
          return (b = null), O;
        }),
        (_.fn.uniqueSort = function () {
          return this.pushStack(_.uniqueSort(r.apply(this)));
        }),
        (p = _.expr =
          {
            cacheLength: 50,
            createPseudo: vn,
            match: Vn,
            attrHandle: {},
            find: {},
            relative: {
              ">": { dir: "parentNode", first: !0 },
              " ": { dir: "parentNode" },
              "+": { dir: "previousSibling", first: !0 },
              "~": { dir: "previousSibling" },
            },
            preFilter: {
              ATTR: function (O) {
                return (
                  (O[1] = O[1].replace(sr, lr)),
                  (O[3] = (O[3] || O[4] || O[5] || "").replace(sr, lr)),
                  O[2] === "~=" && (O[3] = " " + O[3] + " "),
                  O.slice(0, 4)
                );
              },
              CHILD: function (O) {
                return (
                  (O[1] = O[1].toLowerCase()),
                  O[1].slice(0, 3) === "nth"
                    ? (O[3] || mt.error(O[0]),
                      (O[4] = +(O[4]
                        ? O[5] + (O[6] || 1)
                        : 2 * (O[3] === "even" || O[3] === "odd"))),
                      (O[5] = +(O[7] + O[8] || O[3] === "odd")))
                    : O[3] && mt.error(O[0]),
                  O
                );
              },
              PSEUDO: function (O) {
                var j,
                  Y = !O[6] && O[2];
                return Vn.CHILD.test(O[0])
                  ? null
                  : (O[3]
                      ? (O[2] = O[4] || O[5] || "")
                      : Y &&
                        Ln.test(Y) &&
                        (j = Wa(Y, !0)) &&
                        (j = Y.indexOf(")", Y.length - j) - Y.length) &&
                        ((O[0] = O[0].slice(0, j)), (O[2] = Y.slice(0, j))),
                    O.slice(0, 3));
              },
            },
            filter: {
              TAG: function (O) {
                var j = O.replace(sr, lr).toLowerCase();
                return O === "*"
                  ? function () {
                      return !0;
                    }
                  : function (Y) {
                      return De(Y, j);
                    };
              },
              CLASS: function (O) {
                var j = je[O + " "];
                return (
                  j ||
                  ((j = new RegExp("(^|" + Le + ")" + O + "(" + Le + "|$)")) &&
                    je(O, function (Y) {
                      return j.test(
                        (typeof Y.className == "string" && Y.className) ||
                          (typeof Y.getAttribute < "u" &&
                            Y.getAttribute("class")) ||
                          ""
                      );
                    }))
                );
              },
              ATTR: function (O, j, Y) {
                return function (K) {
                  var te = mt.attr(K, O);
                  return te == null
                    ? j === "!="
                    : j
                    ? ((te += ""),
                      j === "="
                        ? te === Y
                        : j === "!="
                        ? te !== Y
                        : j === "^="
                        ? Y && te.indexOf(Y) === 0
                        : j === "*="
                        ? Y && te.indexOf(Y) > -1
                        : j === "$="
                        ? Y && te.slice(-Y.length) === Y
                        : j === "~="
                        ? (" " + te.replace(st, " ") + " ").indexOf(Y) > -1
                        : j === "|="
                        ? te === Y || te.slice(0, Y.length + 1) === Y + "-"
                        : !1)
                    : !0;
                };
              },
              CHILD: function (O, j, Y, K, te) {
                var he = O.slice(0, 3) !== "nth",
                  ge = O.slice(-4) !== "last",
                  Me = j === "of-type";
                return K === 1 && te === 0
                  ? function (_e) {
                      return !!_e.parentNode;
                    }
                  : function (_e, Je, Ve) {
                      var $e,
                        et,
                        Ne,
                        xt,
                        Ai,
                        xi = he !== ge ? "nextSibling" : "previousSibling",
                        on = _e.parentNode,
                        Bn = Me && _e.nodeName.toLowerCase(),
                        jo = !Ve && !Me,
                        Oi = !1;
                      if (on) {
                        if (he) {
                          for (; xi; ) {
                            for (Ne = _e; (Ne = Ne[xi]); )
                              if (Me ? De(Ne, Bn) : Ne.nodeType === 1)
                                return !1;
                            Ai = xi = O === "only" && !Ai && "nextSibling";
                          }
                          return !0;
                        }
                        if (
                          ((Ai = [ge ? on.firstChild : on.lastChild]), ge && jo)
                        ) {
                          for (
                            et = on[ie] || (on[ie] = {}),
                              $e = et[O] || [],
                              xt = $e[0] === q && $e[1],
                              Oi = xt && $e[2],
                              Ne = xt && on.childNodes[xt];
                            (Ne =
                              (++xt && Ne && Ne[xi]) ||
                              (Oi = xt = 0) ||
                              Ai.pop());

                          )
                            if (Ne.nodeType === 1 && ++Oi && Ne === _e) {
                              et[O] = [q, xt, Oi];
                              break;
                            }
                        } else if (
                          (jo &&
                            ((et = _e[ie] || (_e[ie] = {})),
                            ($e = et[O] || []),
                            (xt = $e[0] === q && $e[1]),
                            (Oi = xt)),
                          Oi === !1)
                        )
                          for (
                            ;
                            (Ne =
                              (++xt && Ne && Ne[xi]) ||
                              (Oi = xt = 0) ||
                              Ai.pop()) &&
                            !(
                              (Me ? De(Ne, Bn) : Ne.nodeType === 1) &&
                              ++Oi &&
                              (jo &&
                                ((et = Ne[ie] || (Ne[ie] = {})),
                                (et[O] = [q, Oi])),
                              Ne === _e)
                            );

                          );
                        return (
                          (Oi -= te), Oi === K || (Oi % K === 0 && Oi / K >= 0)
                        );
                      }
                    };
              },
              PSEUDO: function (O, j) {
                var Y,
                  K =
                    p.pseudos[O] ||
                    p.setFilters[O.toLowerCase()] ||
                    mt.error("unsupported pseudo: " + O);
                return K[ie]
                  ? K(j)
                  : K.length > 1
                  ? ((Y = [O, O, "", j]),
                    p.setFilters.hasOwnProperty(O.toLowerCase())
                      ? vn(function (te, he) {
                          for (var ge, Me = K(te, j), _e = Me.length; _e--; )
                            (ge = l.call(te, Me[_e])),
                              (te[ge] = !(he[ge] = Me[_e]));
                        })
                      : function (te) {
                          return K(te, 0, Y);
                        })
                  : K;
              },
            },
            pseudos: {
              not: vn(function (O) {
                var j = [],
                  Y = [],
                  K = ju(O.replace(vi, "$1"));
                return K[ie]
                  ? vn(function (te, he, ge, Me) {
                      for (
                        var _e, Je = K(te, null, Me, []), Ve = te.length;
                        Ve--;

                      )
                        (_e = Je[Ve]) && (te[Ve] = !(he[Ve] = _e));
                    })
                  : function (te, he, ge) {
                      return (
                        (j[0] = te), K(j, null, ge, Y), (j[0] = null), !Y.pop()
                      );
                    };
              }),
              has: vn(function (O) {
                return function (j) {
                  return mt(O, j).length > 0;
                };
              }),
              contains: vn(function (O) {
                return (
                  (O = O.replace(sr, lr)),
                  function (j) {
                    return (j.textContent || _.text(j)).indexOf(O) > -1;
                  }
                );
              }),
              lang: vn(function (O) {
                return (
                  $a.test(O || "") || mt.error("unsupported lang: " + O),
                  (O = O.replace(sr, lr).toLowerCase()),
                  function (j) {
                    var Y;
                    do
                      if (
                        (Y = F
                          ? j.lang
                          : j.getAttribute("xml:lang") ||
                            j.getAttribute("lang"))
                      )
                        return (
                          (Y = Y.toLowerCase()),
                          Y === O || Y.indexOf(O + "-") === 0
                        );
                    while ((j = j.parentNode) && j.nodeType === 1);
                    return !1;
                  }
                );
              }),
              target: function (O) {
                var j = n.location && n.location.hash;
                return j && j.slice(1) === O.id;
              },
              root: function (O) {
                return O === L;
              },
              focus: function (O) {
                return (
                  O === wx() &&
                  S.hasFocus() &&
                  !!(O.type || O.href || ~O.tabIndex)
                );
              },
              enabled: ag(!1),
              disabled: ag(!0),
              checked: function (O) {
                return (
                  (De(O, "input") && !!O.checked) ||
                  (De(O, "option") && !!O.selected)
                );
              },
              selected: function (O) {
                return (
                  O.parentNode && O.parentNode.selectedIndex, O.selected === !0
                );
              },
              empty: function (O) {
                for (O = O.firstChild; O; O = O.nextSibling)
                  if (O.nodeType < 6) return !1;
                return !0;
              },
              parent: function (O) {
                return !p.pseudos.empty(O);
              },
              header: function (O) {
                return Sr.test(O.nodeName);
              },
              input: function (O) {
                return Dr.test(O.nodeName);
              },
              button: function (O) {
                return (
                  (De(O, "input") && O.type === "button") || De(O, "button")
                );
              },
              text: function (O) {
                var j;
                return (
                  De(O, "input") &&
                  O.type === "text" &&
                  ((j = O.getAttribute("type")) == null ||
                    j.toLowerCase() === "text")
                );
              },
              first: no(function () {
                return [0];
              }),
              last: no(function (O, j) {
                return [j - 1];
              }),
              eq: no(function (O, j, Y) {
                return [Y < 0 ? Y + j : Y];
              }),
              even: no(function (O, j) {
                for (var Y = 0; Y < j; Y += 2) O.push(Y);
                return O;
              }),
              odd: no(function (O, j) {
                for (var Y = 1; Y < j; Y += 2) O.push(Y);
                return O;
              }),
              lt: no(function (O, j, Y) {
                var K;
                for (
                  Y < 0 ? (K = Y + j) : Y > j ? (K = j) : (K = Y);
                  --K >= 0;

                )
                  O.push(K);
                return O;
              }),
              gt: no(function (O, j, Y) {
                for (var K = Y < 0 ? Y + j : Y; ++K < j; ) O.push(K);
                return O;
              }),
            },
          }),
        (p.pseudos.nth = p.pseudos.eq);
      for (s in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })
        p.pseudos[s] = Dx(s);
      for (s in { submit: !0, reset: !0 }) p.pseudos[s] = Sx(s);
      function sg() {}
      (sg.prototype = p.filters = p.pseudos), (p.setFilters = new sg());
      function Wa(O, j) {
        var Y,
          K,
          te,
          he,
          ge,
          Me,
          _e,
          Je = rt[O + " "];
        if (Je) return j ? 0 : Je.slice(0);
        for (ge = O, Me = [], _e = p.preFilter; ge; ) {
          (!Y || (K = jt.exec(ge))) &&
            (K && (ge = ge.slice(K[0].length) || ge), Me.push((te = []))),
            (Y = !1),
            (K = za.exec(ge)) &&
              ((Y = K.shift()),
              te.push({ value: Y, type: K[0].replace(vi, " ") }),
              (ge = ge.slice(Y.length)));
          for (he in p.filter)
            (K = Vn[he].exec(ge)) &&
              (!_e[he] || (K = _e[he](K))) &&
              ((Y = K.shift()),
              te.push({ value: Y, type: he, matches: K }),
              (ge = ge.slice(Y.length)));
          if (!Y) break;
        }
        return j ? ge.length : ge ? mt.error(O) : rt(O, Me).slice(0);
      }
      function Nl(O) {
        for (var j = 0, Y = O.length, K = ""; j < Y; j++) K += O[j].value;
        return K;
      }
      function Ll(O, j, Y) {
        var K = j.dir,
          te = j.next,
          he = te || K,
          ge = Y && he === "parentNode",
          Me = oe++;
        return j.first
          ? function (_e, Je, Ve) {
              for (; (_e = _e[K]); )
                if (_e.nodeType === 1 || ge) return O(_e, Je, Ve);
              return !1;
            }
          : function (_e, Je, Ve) {
              var $e,
                et,
                Ne = [q, Me];
              if (Ve) {
                for (; (_e = _e[K]); )
                  if ((_e.nodeType === 1 || ge) && O(_e, Je, Ve)) return !0;
              } else
                for (; (_e = _e[K]); )
                  if (_e.nodeType === 1 || ge)
                    if (((et = _e[ie] || (_e[ie] = {})), te && De(_e, te)))
                      _e = _e[K] || _e;
                    else {
                      if (($e = et[he]) && $e[0] === q && $e[1] === Me)
                        return (Ne[2] = $e[2]);
                      if (((et[he] = Ne), (Ne[2] = O(_e, Je, Ve)))) return !0;
                    }
              return !1;
            };
      }
      function Vu(O) {
        return O.length > 1
          ? function (j, Y, K) {
              for (var te = O.length; te--; ) if (!O[te](j, Y, K)) return !1;
              return !0;
            }
          : O[0];
      }
      function Mx(O, j, Y) {
        for (var K = 0, te = j.length; K < te; K++) mt(O, j[K], Y);
        return Y;
      }
      function Vl(O, j, Y, K, te) {
        for (
          var he, ge = [], Me = 0, _e = O.length, Je = j != null;
          Me < _e;
          Me++
        )
          (he = O[Me]) &&
            (!Y || Y(he, K, te)) &&
            (ge.push(he), Je && j.push(Me));
        return ge;
      }
      function Bu(O, j, Y, K, te, he) {
        return (
          K && !K[ie] && (K = Bu(K)),
          te && !te[ie] && (te = Bu(te, he)),
          vn(function (ge, Me, _e, Je) {
            var Ve,
              $e,
              et,
              Ne,
              xt = [],
              Ai = [],
              xi = Me.length,
              on = ge || Mx(j || "*", _e.nodeType ? [_e] : _e, []),
              Bn = O && (ge || !j) ? Vl(on, xt, O, _e, Je) : on;
            if (
              (Y
                ? ((Ne = te || (ge ? O : xi || K) ? [] : Me), Y(Bn, Ne, _e, Je))
                : (Ne = Bn),
              K)
            )
              for (Ve = Vl(Ne, Ai), K(Ve, [], _e, Je), $e = Ve.length; $e--; )
                (et = Ve[$e]) && (Ne[Ai[$e]] = !(Bn[Ai[$e]] = et));
            if (ge) {
              if (te || O) {
                if (te) {
                  for (Ve = [], $e = Ne.length; $e--; )
                    (et = Ne[$e]) && Ve.push((Bn[$e] = et));
                  te(null, (Ne = []), Ve, Je);
                }
                for ($e = Ne.length; $e--; )
                  (et = Ne[$e]) &&
                    (Ve = te ? l.call(ge, et) : xt[$e]) > -1 &&
                    (ge[Ve] = !(Me[Ve] = et));
              }
            } else (Ne = Vl(Ne === Me ? Ne.splice(xi, Ne.length) : Ne)), te ? te(null, Me, Ne, Je) : w.apply(Me, Ne);
          })
        );
      }
      function Hu(O) {
        for (
          var j,
            Y,
            K,
            te = O.length,
            he = p.relative[O[0].type],
            ge = he || p.relative[" "],
            Me = he ? 1 : 0,
            _e = Ll(
              function ($e) {
                return $e === j;
              },
              ge,
              !0
            ),
            Je = Ll(
              function ($e) {
                return l.call(j, $e) > -1;
              },
              ge,
              !0
            ),
            Ve = [
              function ($e, et, Ne) {
                var xt =
                  (!he && (Ne || et != g)) ||
                  ((j = et).nodeType ? _e($e, et, Ne) : Je($e, et, Ne));
                return (j = null), xt;
              },
            ];
          Me < te;
          Me++
        )
          if ((Y = p.relative[O[Me].type])) Ve = [Ll(Vu(Ve), Y)];
          else {
            if (
              ((Y = p.filter[O[Me].type].apply(null, O[Me].matches)), Y[ie])
            ) {
              for (K = ++Me; K < te && !p.relative[O[K].type]; K++);
              return Bu(
                Me > 1 && Vu(Ve),
                Me > 1 &&
                  Nl(
                    O.slice(0, Me - 1).concat({
                      value: O[Me - 2].type === " " ? "*" : "",
                    })
                  ).replace(vi, "$1"),
                Y,
                Me < K && Hu(O.slice(Me, K)),
                K < te && Hu((O = O.slice(K))),
                K < te && Nl(O)
              );
            }
            Ve.push(Y);
          }
        return Vu(Ve);
      }
      function Tx(O, j) {
        var Y = j.length > 0,
          K = O.length > 0,
          te = function (he, ge, Me, _e, Je) {
            var Ve,
              $e,
              et,
              Ne = 0,
              xt = "0",
              Ai = he && [],
              xi = [],
              on = g,
              Bn = he || (K && p.find.TAG("*", Je)),
              jo = (q += on == null ? 1 : Math.random() || 0.1),
              Oi = Bn.length;
            for (
              Je && (g = ge == S || ge || Je);
              xt !== Oi && (Ve = Bn[xt]) != null;
              xt++
            ) {
              if (K && Ve) {
                for (
                  $e = 0, !ge && Ve.ownerDocument != S && (Mr(Ve), (Me = !F));
                  (et = O[$e++]);

                )
                  if (et(Ve, ge || S, Me)) {
                    w.call(_e, Ve);
                    break;
                  }
                Je && (q = jo);
              }
              Y && ((Ve = !et && Ve) && Ne--, he && Ai.push(Ve));
            }
            if (((Ne += xt), Y && xt !== Ne)) {
              for ($e = 0; (et = j[$e++]); ) et(Ai, xi, ge, Me);
              if (he) {
                if (Ne > 0)
                  for (; xt--; ) Ai[xt] || xi[xt] || (xi[xt] = We.call(_e));
                xi = Vl(xi);
              }
              w.apply(_e, xi),
                Je &&
                  !he &&
                  xi.length > 0 &&
                  Ne + j.length > 1 &&
                  _.uniqueSort(_e);
            }
            return Je && ((q = jo), (g = on)), Ai;
          };
        return Y ? vn(te) : te;
      }
      function ju(O, j) {
        var Y,
          K = [],
          te = [],
          he = Ye[O + " "];
        if (!he) {
          for (j || (j = Wa(O)), Y = j.length; Y--; )
            (he = Hu(j[Y])), he[ie] ? K.push(he) : te.push(he);
          (he = Ye(O, Tx(te, K))), (he.selector = O);
        }
        return he;
      }
      function lg(O, j, Y, K) {
        var te,
          he,
          ge,
          Me,
          _e,
          Je = typeof O == "function" && O,
          Ve = !K && Wa((O = Je.selector || O));
        if (((Y = Y || []), Ve.length === 1)) {
          if (
            ((he = Ve[0] = Ve[0].slice(0)),
            he.length > 2 &&
              (ge = he[0]).type === "ID" &&
              j.nodeType === 9 &&
              F &&
              p.relative[he[1].type])
          ) {
            if (
              ((j = (p.find.ID(ge.matches[0].replace(sr, lr), j) || [])[0]), j)
            )
              Je && (j = j.parentNode);
            else return Y;
            O = O.slice(he.shift().value.length);
          }
          for (
            te = Vn.needsContext.test(O) ? 0 : he.length;
            te-- && ((ge = he[te]), !p.relative[(Me = ge.type)]);

          )
            if (
              (_e = p.find[Me]) &&
              (K = _e(
                ge.matches[0].replace(sr, lr),
                (Nu.test(he[0].type) && Lu(j.parentNode)) || j
              ))
            ) {
              if ((he.splice(te, 1), (O = K.length && Nl(he)), !O))
                return w.apply(Y, K), Y;
              break;
            }
        }
        return (
          (Je || ju(O, Ve))(
            K,
            j,
            !F,
            Y,
            !j || (Nu.test(O) && Lu(j.parentNode)) || j
          ),
          Y
        );
      }
      (M.sortStable = ie.split("").sort(oi).join("") === ie),
        Mr(),
        (M.sortDetached = Ho(function (O) {
          return O.compareDocumentPosition(S.createElement("fieldset")) & 1;
        })),
        (_.find = mt),
        (_.expr[":"] = _.expr.pseudos),
        (_.unique = _.uniqueSort),
        (mt.compile = ju),
        (mt.select = lg),
        (mt.setDocument = Mr),
        (mt.tokenize = Wa),
        (mt.escape = _.escapeSelector),
        (mt.getText = _.text),
        (mt.isXML = _.isXMLDoc),
        (mt.selectors = _.expr),
        (mt.support = _.support),
        (mt.uniqueSort = _.uniqueSort);
    })();
    var _n = function (s, p, g) {
        for (var b = [], C = g !== void 0; (s = s[p]) && s.nodeType !== 9; )
          if (s.nodeType === 1) {
            if (C && _(s).is(g)) break;
            b.push(s);
          }
        return b;
      },
      Qr = function (s, p) {
        for (var g = []; s; s = s.nextSibling)
          s.nodeType === 1 && s !== p && g.push(s);
        return g;
      },
      ir = _.expr.match.needsContext,
      Xr = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function In(s, p, g) {
      return k(p)
        ? _.grep(s, function (b, C) {
            return !!p.call(b, C, b) !== g;
          })
        : p.nodeType
        ? _.grep(s, function (b) {
            return (b === p) !== g;
          })
        : typeof p != "string"
        ? _.grep(s, function (b) {
            return l.call(p, b) > -1 !== g;
          })
        : _.filter(p, s, g);
    }
    (_.filter = function (s, p, g) {
      var b = p[0];
      return (
        g && (s = ":not(" + s + ")"),
        p.length === 1 && b.nodeType === 1
          ? _.find.matchesSelector(b, s)
            ? [b]
            : []
          : _.find.matches(
              s,
              _.grep(p, function (C) {
                return C.nodeType === 1;
              })
            )
      );
    }),
      _.fn.extend({
        find: function (s) {
          var p,
            g,
            b = this.length,
            C = this;
          if (typeof s != "string")
            return this.pushStack(
              _(s).filter(function () {
                for (p = 0; p < b; p++) if (_.contains(C[p], this)) return !0;
              })
            );
          for (g = this.pushStack([]), p = 0; p < b; p++) _.find(s, C[p], g);
          return b > 1 ? _.uniqueSort(g) : g;
        },
        filter: function (s) {
          return this.pushStack(In(this, s || [], !1));
        },
        not: function (s) {
          return this.pushStack(In(this, s || [], !0));
        },
        is: function (s) {
          return !!In(
            this,
            typeof s == "string" && ir.test(s) ? _(s) : s || [],
            !1
          ).length;
        },
      });
    var wr,
      nr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
      Zr = (_.fn.init = function (s, p, g) {
        var b, C;
        if (!s) return this;
        if (((g = g || wr), typeof s == "string"))
          if (
            (s[0] === "<" && s[s.length - 1] === ">" && s.length >= 3
              ? (b = [null, s, null])
              : (b = nr.exec(s)),
            b && (b[1] || !p))
          )
            if (b[1]) {
              if (
                ((p = p instanceof _ ? p[0] : p),
                _.merge(
                  this,
                  _.parseHTML(
                    b[1],
                    p && p.nodeType ? p.ownerDocument || p : A,
                    !0
                  )
                ),
                Xr.test(b[1]) && _.isPlainObject(p))
              )
                for (b in p) k(this[b]) ? this[b](p[b]) : this.attr(b, p[b]);
              return this;
            } else
              return (
                (C = A.getElementById(b[2])),
                C && ((this[0] = C), (this.length = 1)),
                this
              );
          else
            return !p || p.jquery
              ? (p || g).find(s)
              : this.constructor(p).find(s);
        else {
          if (s.nodeType) return (this[0] = s), (this.length = 1), this;
          if (k(s)) return g.ready !== void 0 ? g.ready(s) : s(_);
        }
        return _.makeArray(s, this);
      });
    (Zr.prototype = _.fn), (wr = _(A));
    var rr = /^(?:parents|prev(?:Until|All))/,
      ky = { children: !0, contents: !0, next: !0, prev: !0 };
    _.fn.extend({
      has: function (s) {
        var p = _(s, this),
          g = p.length;
        return this.filter(function () {
          for (var b = 0; b < g; b++) if (_.contains(this, p[b])) return !0;
        });
      },
      closest: function (s, p) {
        var g,
          b = 0,
          C = this.length,
          w = [],
          S = typeof s != "string" && _(s);
        if (!ir.test(s)) {
          for (; b < C; b++)
            for (g = this[b]; g && g !== p; g = g.parentNode)
              if (
                g.nodeType < 11 &&
                (S
                  ? S.index(g) > -1
                  : g.nodeType === 1 && _.find.matchesSelector(g, s))
              ) {
                w.push(g);
                break;
              }
        }
        return this.pushStack(w.length > 1 ? _.uniqueSort(w) : w);
      },
      index: function (s) {
        return s
          ? typeof s == "string"
            ? l.call(_(s), this[0])
            : l.call(this, s.jquery ? s[0] : s)
          : this[0] && this[0].parentNode
          ? this.first().prevAll().length
          : -1;
      },
      add: function (s, p) {
        return this.pushStack(_.uniqueSort(_.merge(this.get(), _(s, p))));
      },
      addBack: function (s) {
        return this.add(
          s == null ? this.prevObject : this.prevObject.filter(s)
        );
      },
    });
    function Tf(s, p) {
      for (; (s = s[p]) && s.nodeType !== 1; );
      return s;
    }
    _.each(
      {
        parent: function (s) {
          var p = s.parentNode;
          return p && p.nodeType !== 11 ? p : null;
        },
        parents: function (s) {
          return _n(s, "parentNode");
        },
        parentsUntil: function (s, p, g) {
          return _n(s, "parentNode", g);
        },
        next: function (s) {
          return Tf(s, "nextSibling");
        },
        prev: function (s) {
          return Tf(s, "previousSibling");
        },
        nextAll: function (s) {
          return _n(s, "nextSibling");
        },
        prevAll: function (s) {
          return _n(s, "previousSibling");
        },
        nextUntil: function (s, p, g) {
          return _n(s, "nextSibling", g);
        },
        prevUntil: function (s, p, g) {
          return _n(s, "previousSibling", g);
        },
        siblings: function (s) {
          return Qr((s.parentNode || {}).firstChild, s);
        },
        children: function (s) {
          return Qr(s.firstChild);
        },
        contents: function (s) {
          return s.contentDocument != null && t(s.contentDocument)
            ? s.contentDocument
            : (De(s, "template") && (s = s.content || s),
              _.merge([], s.childNodes));
        },
      },
      function (s, p) {
        _.fn[s] = function (g, b) {
          var C = _.map(this, p, g);
          return (
            s.slice(-5) !== "Until" && (b = g),
            b && typeof b == "string" && (C = _.filter(b, C)),
            this.length > 1 &&
              (ky[s] || _.uniqueSort(C), rr.test(s) && C.reverse()),
            this.pushStack(C)
          );
        };
      }
    );
    var An = /[^\x20\t\r\n\f]+/g;
    function Py(s) {
      var p = {};
      return (
        _.each(s.match(An) || [], function (g, b) {
          p[b] = !0;
        }),
        p
      );
    }
    _.Callbacks = function (s) {
      s = typeof s == "string" ? Py(s) : _.extend({}, s);
      var p,
        g,
        b,
        C,
        w = [],
        S = [],
        L = -1,
        F = function () {
          for (C = C || s.once, b = p = !0; S.length; L = -1)
            for (g = S.shift(); ++L < w.length; )
              w[L].apply(g[0], g[1]) === !1 &&
                s.stopOnFalse &&
                ((L = w.length), (g = !1));
          s.memory || (g = !1), (p = !1), C && (g ? (w = []) : (w = ""));
        },
        U = {
          add: function () {
            return (
              w &&
                (g && !p && ((L = w.length - 1), S.push(g)),
                (function Z(ie) {
                  _.each(ie, function (q, oe) {
                    k(oe)
                      ? (!s.unique || !U.has(oe)) && w.push(oe)
                      : oe && oe.length && se(oe) !== "string" && Z(oe);
                  });
                })(arguments),
                g && !p && F()),
              this
            );
          },
          remove: function () {
            return (
              _.each(arguments, function (Z, ie) {
                for (var q; (q = _.inArray(ie, w, q)) > -1; )
                  w.splice(q, 1), q <= L && L--;
              }),
              this
            );
          },
          has: function (Z) {
            return Z ? _.inArray(Z, w) > -1 : w.length > 0;
          },
          empty: function () {
            return w && (w = []), this;
          },
          disable: function () {
            return (C = S = []), (w = g = ""), this;
          },
          disabled: function () {
            return !w;
          },
          lock: function () {
            return (C = S = []), !g && !p && (w = g = ""), this;
          },
          locked: function () {
            return !!C;
          },
          fireWith: function (Z, ie) {
            return (
              C ||
                ((ie = ie || []),
                (ie = [Z, ie.slice ? ie.slice() : ie]),
                S.push(ie),
                p || F()),
              this
            );
          },
          fire: function () {
            return U.fireWith(this, arguments), this;
          },
          fired: function () {
            return !!b;
          },
        };
      return U;
    };
    function Ao(s) {
      return s;
    }
    function El(s) {
      throw s;
    }
    function Ef(s, p, g, b) {
      var C;
      try {
        s && k((C = s.promise))
          ? C.call(s).done(p).fail(g)
          : s && k((C = s.then))
          ? C.call(s, p, g)
          : p.apply(void 0, [s].slice(b));
      } catch (w) {
        g.apply(void 0, [w]);
      }
    }
    _.extend({
      Deferred: function (s) {
        var p = [
            [
              "notify",
              "progress",
              _.Callbacks("memory"),
              _.Callbacks("memory"),
              2,
            ],
            [
              "resolve",
              "done",
              _.Callbacks("once memory"),
              _.Callbacks("once memory"),
              0,
              "resolved",
            ],
            [
              "reject",
              "fail",
              _.Callbacks("once memory"),
              _.Callbacks("once memory"),
              1,
              "rejected",
            ],
          ],
          g = "pending",
          b = {
            state: function () {
              return g;
            },
            always: function () {
              return C.done(arguments).fail(arguments), this;
            },
            catch: function (w) {
              return b.then(null, w);
            },
            pipe: function () {
              var w = arguments;
              return _.Deferred(function (S) {
                _.each(p, function (L, F) {
                  var U = k(w[F[4]]) && w[F[4]];
                  C[F[1]](function () {
                    var Z = U && U.apply(this, arguments);
                    Z && k(Z.promise)
                      ? Z.promise()
                          .progress(S.notify)
                          .done(S.resolve)
                          .fail(S.reject)
                      : S[F[0] + "With"](this, U ? [Z] : arguments);
                  });
                }),
                  (w = null);
              }).promise();
            },
            then: function (w, S, L) {
              var F = 0;
              function U(Z, ie, q, oe) {
                return function () {
                  var je = this,
                    rt = arguments,
                    Ye = function () {
                      var oi, Fn;
                      if (!(Z < F)) {
                        if (((oi = q.apply(je, rt)), oi === ie.promise()))
                          throw new TypeError("Thenable self-resolution");
                        (Fn =
                          oi &&
                          (typeof oi == "object" || typeof oi == "function") &&
                          oi.then),
                          k(Fn)
                            ? oe
                              ? Fn.call(oi, U(F, ie, Ao, oe), U(F, ie, El, oe))
                              : (F++,
                                Fn.call(
                                  oi,
                                  U(F, ie, Ao, oe),
                                  U(F, ie, El, oe),
                                  U(F, ie, Ao, ie.notifyWith)
                                ))
                            : (q !== Ao && ((je = void 0), (rt = [oi])),
                              (oe || ie.resolveWith)(je, rt));
                      }
                    },
                    gi = oe
                      ? Ye
                      : function () {
                          try {
                            Ye();
                          } catch (oi) {
                            _.Deferred.exceptionHook &&
                              _.Deferred.exceptionHook(oi, gi.error),
                              Z + 1 >= F &&
                                (q !== El && ((je = void 0), (rt = [oi])),
                                ie.rejectWith(je, rt));
                          }
                        };
                  Z
                    ? gi()
                    : (_.Deferred.getErrorHook
                        ? (gi.error = _.Deferred.getErrorHook())
                        : _.Deferred.getStackHook &&
                          (gi.error = _.Deferred.getStackHook()),
                      n.setTimeout(gi));
                };
              }
              return _.Deferred(function (Z) {
                p[0][3].add(U(0, Z, k(L) ? L : Ao, Z.notifyWith)),
                  p[1][3].add(U(0, Z, k(w) ? w : Ao)),
                  p[2][3].add(U(0, Z, k(S) ? S : El));
              }).promise();
            },
            promise: function (w) {
              return w != null ? _.extend(w, b) : b;
            },
          },
          C = {};
        return (
          _.each(p, function (w, S) {
            var L = S[2],
              F = S[5];
            (b[S[1]] = L.add),
              F &&
                L.add(
                  function () {
                    g = F;
                  },
                  p[3 - w][2].disable,
                  p[3 - w][3].disable,
                  p[0][2].lock,
                  p[0][3].lock
                ),
              L.add(S[3].fire),
              (C[S[0]] = function () {
                return (
                  C[S[0] + "With"](this === C ? void 0 : this, arguments), this
                );
              }),
              (C[S[0] + "With"] = L.fireWith);
          }),
          b.promise(C),
          s && s.call(C, C),
          C
        );
      },
      when: function (s) {
        var p = arguments.length,
          g = p,
          b = Array(g),
          C = r.call(arguments),
          w = _.Deferred(),
          S = function (L) {
            return function (F) {
              (b[L] = this),
                (C[L] = arguments.length > 1 ? r.call(arguments) : F),
                --p || w.resolveWith(b, C);
            };
          };
        if (
          p <= 1 &&
          (Ef(s, w.done(S(g)).resolve, w.reject, !p),
          w.state() === "pending" || k(C[g] && C[g].then))
        )
          return w.then();
        for (; g--; ) Ef(C[g], S(g), w.reject);
        return w.promise();
      },
    });
    var Iy = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    (_.Deferred.exceptionHook = function (s, p) {
      n.console &&
        n.console.warn &&
        s &&
        Iy.test(s.name) &&
        n.console.warn("jQuery.Deferred exception: " + s.message, s.stack, p);
    }),
      (_.readyException = function (s) {
        n.setTimeout(function () {
          throw s;
        });
      });
    var yu = _.Deferred();
    (_.fn.ready = function (s) {
      return (
        yu.then(s).catch(function (p) {
          _.readyException(p);
        }),
        this
      );
    }),
      _.extend({
        isReady: !1,
        readyWait: 1,
        ready: function (s) {
          (s === !0 ? --_.readyWait : _.isReady) ||
            ((_.isReady = !0),
            !(s !== !0 && --_.readyWait > 0) && yu.resolveWith(A, [_]));
        },
      }),
      (_.ready.then = yu.then);
    function Ol() {
      A.removeEventListener("DOMContentLoaded", Ol),
        n.removeEventListener("load", Ol),
        _.ready();
    }
    A.readyState === "complete" ||
    (A.readyState !== "loading" && !A.documentElement.doScroll)
      ? n.setTimeout(_.ready)
      : (A.addEventListener("DOMContentLoaded", Ol),
        n.addEventListener("load", Ol));
    var or = function (s, p, g, b, C, w, S) {
        var L = 0,
          F = s.length,
          U = g == null;
        if (se(g) === "object") {
          C = !0;
          for (L in g) or(s, p, L, g[L], !0, w, S);
        } else if (
          b !== void 0 &&
          ((C = !0),
          k(b) || (S = !0),
          U &&
            (S
              ? (p.call(s, b), (p = null))
              : ((U = p),
                (p = function (Z, ie, q) {
                  return U.call(_(Z), q);
                }))),
          p)
        )
          for (; L < F; L++) p(s[L], g, S ? b : b.call(s[L], L, p(s[L], g)));
        return C ? s : U ? p.call(s) : F ? p(s[0], g) : w;
      },
      Ay = /^-ms-/,
      Ry = /-([a-z])/g;
    function Fy(s, p) {
      return p.toUpperCase();
    }
    function Rn(s) {
      return s.replace(Ay, "ms-").replace(Ry, Fy);
    }
    var Fa = function (s) {
      return s.nodeType === 1 || s.nodeType === 9 || !+s.nodeType;
    };
    function Na() {
      this.expando = _.expando + Na.uid++;
    }
    (Na.uid = 1),
      (Na.prototype = {
        cache: function (s) {
          var p = s[this.expando];
          return (
            p ||
              ((p = {}),
              Fa(s) &&
                (s.nodeType
                  ? (s[this.expando] = p)
                  : Object.defineProperty(s, this.expando, {
                      value: p,
                      configurable: !0,
                    }))),
            p
          );
        },
        set: function (s, p, g) {
          var b,
            C = this.cache(s);
          if (typeof p == "string") C[Rn(p)] = g;
          else for (b in p) C[Rn(b)] = p[b];
          return C;
        },
        get: function (s, p) {
          return p === void 0
            ? this.cache(s)
            : s[this.expando] && s[this.expando][Rn(p)];
        },
        access: function (s, p, g) {
          return p === void 0 || (p && typeof p == "string" && g === void 0)
            ? this.get(s, p)
            : (this.set(s, p, g), g !== void 0 ? g : p);
        },
        remove: function (s, p) {
          var g,
            b = s[this.expando];
          if (b !== void 0) {
            if (p !== void 0)
              for (
                Array.isArray(p)
                  ? (p = p.map(Rn))
                  : ((p = Rn(p)), (p = (p in b) ? [p] : p.match(An) || [])),
                  g = p.length;
                g--;

              )
                delete b[p[g]];
            (p === void 0 || _.isEmptyObject(b)) &&
              (s.nodeType
                ? (s[this.expando] = void 0)
                : delete s[this.expando]);
          }
        },
        hasData: function (s) {
          var p = s[this.expando];
          return p !== void 0 && !_.isEmptyObject(p);
        },
      });
    var Pe = new Na(),
      ki = new Na(),
      Ny = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      Ly = /[A-Z]/g;
    function Vy(s) {
      return s === "true"
        ? !0
        : s === "false"
        ? !1
        : s === "null"
        ? null
        : s === +s + ""
        ? +s
        : Ny.test(s)
        ? JSON.parse(s)
        : s;
    }
    function Of(s, p, g) {
      var b;
      if (g === void 0 && s.nodeType === 1)
        if (
          ((b = "data-" + p.replace(Ly, "-$&").toLowerCase()),
          (g = s.getAttribute(b)),
          typeof g == "string")
        ) {
          try {
            g = Vy(g);
          } catch {}
          ki.set(s, p, g);
        } else g = void 0;
      return g;
    }
    _.extend({
      hasData: function (s) {
        return ki.hasData(s) || Pe.hasData(s);
      },
      data: function (s, p, g) {
        return ki.access(s, p, g);
      },
      removeData: function (s, p) {
        ki.remove(s, p);
      },
      _data: function (s, p, g) {
        return Pe.access(s, p, g);
      },
      _removeData: function (s, p) {
        Pe.remove(s, p);
      },
    }),
      _.fn.extend({
        data: function (s, p) {
          var g,
            b,
            C,
            w = this[0],
            S = w && w.attributes;
          if (s === void 0) {
            if (
              this.length &&
              ((C = ki.get(w)), w.nodeType === 1 && !Pe.get(w, "hasDataAttrs"))
            ) {
              for (g = S.length; g--; )
                S[g] &&
                  ((b = S[g].name),
                  b.indexOf("data-") === 0 &&
                    ((b = Rn(b.slice(5))), Of(w, b, C[b])));
              Pe.set(w, "hasDataAttrs", !0);
            }
            return C;
          }
          return typeof s == "object"
            ? this.each(function () {
                ki.set(this, s);
              })
            : or(
                this,
                function (L) {
                  var F;
                  if (w && L === void 0)
                    return (
                      (F = ki.get(w, s)),
                      F !== void 0 || ((F = Of(w, s)), F !== void 0)
                        ? F
                        : void 0
                    );
                  this.each(function () {
                    ki.set(this, s, L);
                  });
                },
                null,
                p,
                arguments.length > 1,
                null,
                !0
              );
        },
        removeData: function (s) {
          return this.each(function () {
            ki.remove(this, s);
          });
        },
      }),
      _.extend({
        queue: function (s, p, g) {
          var b;
          if (s)
            return (
              (p = (p || "fx") + "queue"),
              (b = Pe.get(s, p)),
              g &&
                (!b || Array.isArray(g)
                  ? (b = Pe.access(s, p, _.makeArray(g)))
                  : b.push(g)),
              b || []
            );
        },
        dequeue: function (s, p) {
          p = p || "fx";
          var g = _.queue(s, p),
            b = g.length,
            C = g.shift(),
            w = _._queueHooks(s, p),
            S = function () {
              _.dequeue(s, p);
            };
          C === "inprogress" && ((C = g.shift()), b--),
            C &&
              (p === "fx" && g.unshift("inprogress"),
              delete w.stop,
              C.call(s, S, w)),
            !b && w && w.empty.fire();
        },
        _queueHooks: function (s, p) {
          var g = p + "queueHooks";
          return (
            Pe.get(s, g) ||
            Pe.access(s, g, {
              empty: _.Callbacks("once memory").add(function () {
                Pe.remove(s, [p + "queue", g]);
              }),
            })
          );
        },
      }),
      _.fn.extend({
        queue: function (s, p) {
          var g = 2;
          return (
            typeof s != "string" && ((p = s), (s = "fx"), g--),
            arguments.length < g
              ? _.queue(this[0], s)
              : p === void 0
              ? this
              : this.each(function () {
                  var b = _.queue(this, s, p);
                  _._queueHooks(this, s),
                    s === "fx" && b[0] !== "inprogress" && _.dequeue(this, s);
                })
          );
        },
        dequeue: function (s) {
          return this.each(function () {
            _.dequeue(this, s);
          });
        },
        clearQueue: function (s) {
          return this.queue(s || "fx", []);
        },
        promise: function (s, p) {
          var g,
            b = 1,
            C = _.Deferred(),
            w = this,
            S = this.length,
            L = function () {
              --b || C.resolveWith(w, [w]);
            };
          for (
            typeof s != "string" && ((p = s), (s = void 0)), s = s || "fx";
            S--;

          )
            (g = Pe.get(w[S], s + "queueHooks")),
              g && g.empty && (b++, g.empty.add(L));
          return L(), C.promise(p);
        },
      });
    var kf = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
      La = new RegExp("^(?:([+-])=|)(" + kf + ")([a-z%]*)$", "i"),
      ar = ["Top", "Right", "Bottom", "Left"],
      Jr = A.documentElement,
      Ro = function (s) {
        return _.contains(s.ownerDocument, s);
      },
      By = { composed: !0 };
    Jr.getRootNode &&
      (Ro = function (s) {
        return (
          _.contains(s.ownerDocument, s) ||
          s.getRootNode(By) === s.ownerDocument
        );
      });
    var kl = function (s, p) {
      return (
        (s = p || s),
        s.style.display === "none" ||
          (s.style.display === "" && Ro(s) && _.css(s, "display") === "none")
      );
    };
    function Pf(s, p, g, b) {
      var C,
        w,
        S = 20,
        L = b
          ? function () {
              return b.cur();
            }
          : function () {
              return _.css(s, p, "");
            },
        F = L(),
        U = (g && g[3]) || (_.cssNumber[p] ? "" : "px"),
        Z =
          s.nodeType &&
          (_.cssNumber[p] || (U !== "px" && +F)) &&
          La.exec(_.css(s, p));
      if (Z && Z[3] !== U) {
        for (F = F / 2, U = U || Z[3], Z = +F || 1; S--; )
          _.style(s, p, Z + U),
            (1 - w) * (1 - (w = L() / F || 0.5)) <= 0 && (S = 0),
            (Z = Z / w);
        (Z = Z * 2), _.style(s, p, Z + U), (g = g || []);
      }
      return (
        g &&
          ((Z = +Z || +F || 0),
          (C = g[1] ? Z + (g[1] + 1) * g[2] : +g[2]),
          b && ((b.unit = U), (b.start = Z), (b.end = C))),
        C
      );
    }
    var If = {};
    function Hy(s) {
      var p,
        g = s.ownerDocument,
        b = s.nodeName,
        C = If[b];
      return (
        C ||
        ((p = g.body.appendChild(g.createElement(b))),
        (C = _.css(p, "display")),
        p.parentNode.removeChild(p),
        C === "none" && (C = "block"),
        (If[b] = C),
        C)
      );
    }
    function Fo(s, p) {
      for (var g, b, C = [], w = 0, S = s.length; w < S; w++)
        (b = s[w]),
          b.style &&
            ((g = b.style.display),
            p
              ? (g === "none" &&
                  ((C[w] = Pe.get(b, "display") || null),
                  C[w] || (b.style.display = "")),
                b.style.display === "" && kl(b) && (C[w] = Hy(b)))
              : g !== "none" && ((C[w] = "none"), Pe.set(b, "display", g)));
      for (w = 0; w < S; w++) C[w] != null && (s[w].style.display = C[w]);
      return s;
    }
    _.fn.extend({
      show: function () {
        return Fo(this, !0);
      },
      hide: function () {
        return Fo(this);
      },
      toggle: function (s) {
        return typeof s == "boolean"
          ? s
            ? this.show()
            : this.hide()
          : this.each(function () {
              kl(this) ? _(this).show() : _(this).hide();
            });
      },
    });
    var Va = /^(?:checkbox|radio)$/i,
      Af = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
      Rf = /^$|^module$|\/(?:java|ecma)script/i;
    (function () {
      var s = A.createDocumentFragment(),
        p = s.appendChild(A.createElement("div")),
        g = A.createElement("input");
      g.setAttribute("type", "radio"),
        g.setAttribute("checked", "checked"),
        g.setAttribute("name", "t"),
        p.appendChild(g),
        (M.checkClone = p.cloneNode(!0).cloneNode(!0).lastChild.checked),
        (p.innerHTML = "<textarea>x</textarea>"),
        (M.noCloneChecked = !!p.cloneNode(!0).lastChild.defaultValue),
        (p.innerHTML = "<option></option>"),
        (M.option = !!p.lastChild);
    })();
    var nn = {
      thead: [1, "<table>", "</table>"],
      col: [2, "<table><colgroup>", "</colgroup></table>"],
      tr: [2, "<table><tbody>", "</tbody></table>"],
      td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
      _default: [0, "", ""],
    };
    (nn.tbody = nn.tfoot = nn.colgroup = nn.caption = nn.thead),
      (nn.th = nn.td),
      M.option ||
        (nn.optgroup = nn.option =
          [1, "<select multiple='multiple'>", "</select>"]);
    function Pi(s, p) {
      var g;
      return (
        typeof s.getElementsByTagName < "u"
          ? (g = s.getElementsByTagName(p || "*"))
          : typeof s.querySelectorAll < "u"
          ? (g = s.querySelectorAll(p || "*"))
          : (g = []),
        p === void 0 || (p && De(s, p)) ? _.merge([s], g) : g
      );
    }
    function xu(s, p) {
      for (var g = 0, b = s.length; g < b; g++)
        Pe.set(s[g], "globalEval", !p || Pe.get(p[g], "globalEval"));
    }
    var jy = /<|&#?\w+;/;
    function Ff(s, p, g, b, C) {
      for (
        var w,
          S,
          L,
          F,
          U,
          Z,
          ie = p.createDocumentFragment(),
          q = [],
          oe = 0,
          je = s.length;
        oe < je;
        oe++
      )
        if (((w = s[oe]), w || w === 0))
          if (se(w) === "object") _.merge(q, w.nodeType ? [w] : w);
          else if (!jy.test(w)) q.push(p.createTextNode(w));
          else {
            for (
              S = S || ie.appendChild(p.createElement("div")),
                L = (Af.exec(w) || ["", ""])[1].toLowerCase(),
                F = nn[L] || nn._default,
                S.innerHTML = F[1] + _.htmlPrefilter(w) + F[2],
                Z = F[0];
              Z--;

            )
              S = S.lastChild;
            _.merge(q, S.childNodes), (S = ie.firstChild), (S.textContent = "");
          }
      for (ie.textContent = "", oe = 0; (w = q[oe++]); ) {
        if (b && _.inArray(w, b) > -1) {
          C && C.push(w);
          continue;
        }
        if (((U = Ro(w)), (S = Pi(ie.appendChild(w), "script")), U && xu(S), g))
          for (Z = 0; (w = S[Z++]); ) Rf.test(w.type || "") && g.push(w);
      }
      return ie;
    }
    var Nf = /^([^.]*)(?:\.(.+)|)/;
    function No() {
      return !0;
    }
    function Lo() {
      return !1;
    }
    function Cu(s, p, g, b, C, w) {
      var S, L;
      if (typeof p == "object") {
        typeof g != "string" && ((b = b || g), (g = void 0));
        for (L in p) Cu(s, L, g, b, p[L], w);
        return s;
      }
      if (
        (b == null && C == null
          ? ((C = g), (b = g = void 0))
          : C == null &&
            (typeof g == "string"
              ? ((C = b), (b = void 0))
              : ((C = b), (b = g), (g = void 0))),
        C === !1)
      )
        C = Lo;
      else if (!C) return s;
      return (
        w === 1 &&
          ((S = C),
          (C = function (F) {
            return _().off(F), S.apply(this, arguments);
          }),
          (C.guid = S.guid || (S.guid = _.guid++))),
        s.each(function () {
          _.event.add(this, p, C, b, g);
        })
      );
    }
    _.event = {
      global: {},
      add: function (s, p, g, b, C) {
        var w,
          S,
          L,
          F,
          U,
          Z,
          ie,
          q,
          oe,
          je,
          rt,
          Ye = Pe.get(s);
        if (Fa(s))
          for (
            g.handler && ((w = g), (g = w.handler), (C = w.selector)),
              C && _.find.matchesSelector(Jr, C),
              g.guid || (g.guid = _.guid++),
              (F = Ye.events) || (F = Ye.events = Object.create(null)),
              (S = Ye.handle) ||
                (S = Ye.handle =
                  function (gi) {
                    return typeof _ < "u" && _.event.triggered !== gi.type
                      ? _.event.dispatch.apply(s, arguments)
                      : void 0;
                  }),
              p = (p || "").match(An) || [""],
              U = p.length;
            U--;

          )
            (L = Nf.exec(p[U]) || []),
              (oe = rt = L[1]),
              (je = (L[2] || "").split(".").sort()),
              oe &&
                ((ie = _.event.special[oe] || {}),
                (oe = (C ? ie.delegateType : ie.bindType) || oe),
                (ie = _.event.special[oe] || {}),
                (Z = _.extend(
                  {
                    type: oe,
                    origType: rt,
                    data: b,
                    handler: g,
                    guid: g.guid,
                    selector: C,
                    needsContext: C && _.expr.match.needsContext.test(C),
                    namespace: je.join("."),
                  },
                  w
                )),
                (q = F[oe]) ||
                  ((q = F[oe] = []),
                  (q.delegateCount = 0),
                  (!ie.setup || ie.setup.call(s, b, je, S) === !1) &&
                    s.addEventListener &&
                    s.addEventListener(oe, S)),
                ie.add &&
                  (ie.add.call(s, Z),
                  Z.handler.guid || (Z.handler.guid = g.guid)),
                C ? q.splice(q.delegateCount++, 0, Z) : q.push(Z),
                (_.event.global[oe] = !0));
      },
      remove: function (s, p, g, b, C) {
        var w,
          S,
          L,
          F,
          U,
          Z,
          ie,
          q,
          oe,
          je,
          rt,
          Ye = Pe.hasData(s) && Pe.get(s);
        if (!(!Ye || !(F = Ye.events))) {
          for (p = (p || "").match(An) || [""], U = p.length; U--; ) {
            if (
              ((L = Nf.exec(p[U]) || []),
              (oe = rt = L[1]),
              (je = (L[2] || "").split(".").sort()),
              !oe)
            ) {
              for (oe in F) _.event.remove(s, oe + p[U], g, b, !0);
              continue;
            }
            for (
              ie = _.event.special[oe] || {},
                oe = (b ? ie.delegateType : ie.bindType) || oe,
                q = F[oe] || [],
                L =
                  L[2] &&
                  new RegExp("(^|\\.)" + je.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                S = w = q.length;
              w--;

            )
              (Z = q[w]),
                (C || rt === Z.origType) &&
                  (!g || g.guid === Z.guid) &&
                  (!L || L.test(Z.namespace)) &&
                  (!b || b === Z.selector || (b === "**" && Z.selector)) &&
                  (q.splice(w, 1),
                  Z.selector && q.delegateCount--,
                  ie.remove && ie.remove.call(s, Z));
            S &&
              !q.length &&
              ((!ie.teardown || ie.teardown.call(s, je, Ye.handle) === !1) &&
                _.removeEvent(s, oe, Ye.handle),
              delete F[oe]);
          }
          _.isEmptyObject(F) && Pe.remove(s, "handle events");
        }
      },
      dispatch: function (s) {
        var p,
          g,
          b,
          C,
          w,
          S,
          L = new Array(arguments.length),
          F = _.event.fix(s),
          U = (Pe.get(this, "events") || Object.create(null))[F.type] || [],
          Z = _.event.special[F.type] || {};
        for (L[0] = F, p = 1; p < arguments.length; p++) L[p] = arguments[p];
        if (
          ((F.delegateTarget = this),
          !(Z.preDispatch && Z.preDispatch.call(this, F) === !1))
        ) {
          for (
            S = _.event.handlers.call(this, F, U), p = 0;
            (C = S[p++]) && !F.isPropagationStopped();

          )
            for (
              F.currentTarget = C.elem, g = 0;
              (w = C.handlers[g++]) && !F.isImmediatePropagationStopped();

            )
              (!F.rnamespace ||
                w.namespace === !1 ||
                F.rnamespace.test(w.namespace)) &&
                ((F.handleObj = w),
                (F.data = w.data),
                (b = (
                  (_.event.special[w.origType] || {}).handle || w.handler
                ).apply(C.elem, L)),
                b !== void 0 &&
                  (F.result = b) === !1 &&
                  (F.preventDefault(), F.stopPropagation()));
          return Z.postDispatch && Z.postDispatch.call(this, F), F.result;
        }
      },
      handlers: function (s, p) {
        var g,
          b,
          C,
          w,
          S,
          L = [],
          F = p.delegateCount,
          U = s.target;
        if (F && U.nodeType && !(s.type === "click" && s.button >= 1)) {
          for (; U !== this; U = U.parentNode || this)
            if (
              U.nodeType === 1 &&
              !(s.type === "click" && U.disabled === !0)
            ) {
              for (w = [], S = {}, g = 0; g < F; g++)
                (b = p[g]),
                  (C = b.selector + " "),
                  S[C] === void 0 &&
                    (S[C] = b.needsContext
                      ? _(C, this).index(U) > -1
                      : _.find(C, this, null, [U]).length),
                  S[C] && w.push(b);
              w.length && L.push({ elem: U, handlers: w });
            }
        }
        return (
          (U = this),
          F < p.length && L.push({ elem: U, handlers: p.slice(F) }),
          L
        );
      },
      addProp: function (s, p) {
        Object.defineProperty(_.Event.prototype, s, {
          enumerable: !0,
          configurable: !0,
          get: k(p)
            ? function () {
                if (this.originalEvent) return p(this.originalEvent);
              }
            : function () {
                if (this.originalEvent) return this.originalEvent[s];
              },
          set: function (g) {
            Object.defineProperty(this, s, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: g,
            });
          },
        });
      },
      fix: function (s) {
        return s[_.expando] ? s : new _.Event(s);
      },
      special: {
        load: { noBubble: !0 },
        click: {
          setup: function (s) {
            var p = this || s;
            return (
              Va.test(p.type) &&
                p.click &&
                De(p, "input") &&
                Pl(p, "click", !0),
              !1
            );
          },
          trigger: function (s) {
            var p = this || s;
            return (
              Va.test(p.type) && p.click && De(p, "input") && Pl(p, "click"), !0
            );
          },
          _default: function (s) {
            var p = s.target;
            return (
              (Va.test(p.type) &&
                p.click &&
                De(p, "input") &&
                Pe.get(p, "click")) ||
              De(p, "a")
            );
          },
        },
        beforeunload: {
          postDispatch: function (s) {
            s.result !== void 0 &&
              s.originalEvent &&
              (s.originalEvent.returnValue = s.result);
          },
        },
      },
    };
    function Pl(s, p, g) {
      if (!g) {
        Pe.get(s, p) === void 0 && _.event.add(s, p, No);
        return;
      }
      Pe.set(s, p, !1),
        _.event.add(s, p, {
          namespace: !1,
          handler: function (b) {
            var C,
              w = Pe.get(this, p);
            if (b.isTrigger & 1 && this[p]) {
              if (w)
                (_.event.special[p] || {}).delegateType && b.stopPropagation();
              else if (
                ((w = r.call(arguments)),
                Pe.set(this, p, w),
                this[p](),
                (C = Pe.get(this, p)),
                Pe.set(this, p, !1),
                w !== C)
              )
                return b.stopImmediatePropagation(), b.preventDefault(), C;
            } else
              w &&
                (Pe.set(this, p, _.event.trigger(w[0], w.slice(1), this)),
                b.stopPropagation(),
                (b.isImmediatePropagationStopped = No));
          },
        });
    }
    (_.removeEvent = function (s, p, g) {
      s.removeEventListener && s.removeEventListener(p, g);
    }),
      (_.Event = function (s, p) {
        if (!(this instanceof _.Event)) return new _.Event(s, p);
        s && s.type
          ? ((this.originalEvent = s),
            (this.type = s.type),
            (this.isDefaultPrevented =
              s.defaultPrevented ||
              (s.defaultPrevented === void 0 && s.returnValue === !1)
                ? No
                : Lo),
            (this.target =
              s.target && s.target.nodeType === 3
                ? s.target.parentNode
                : s.target),
            (this.currentTarget = s.currentTarget),
            (this.relatedTarget = s.relatedTarget))
          : (this.type = s),
          p && _.extend(this, p),
          (this.timeStamp = (s && s.timeStamp) || Date.now()),
          (this[_.expando] = !0);
      }),
      (_.Event.prototype = {
        constructor: _.Event,
        isDefaultPrevented: Lo,
        isPropagationStopped: Lo,
        isImmediatePropagationStopped: Lo,
        isSimulated: !1,
        preventDefault: function () {
          var s = this.originalEvent;
          (this.isDefaultPrevented = No),
            s && !this.isSimulated && s.preventDefault();
        },
        stopPropagation: function () {
          var s = this.originalEvent;
          (this.isPropagationStopped = No),
            s && !this.isSimulated && s.stopPropagation();
        },
        stopImmediatePropagation: function () {
          var s = this.originalEvent;
          (this.isImmediatePropagationStopped = No),
            s && !this.isSimulated && s.stopImmediatePropagation(),
            this.stopPropagation();
        },
      }),
      _.each(
        {
          altKey: !0,
          bubbles: !0,
          cancelable: !0,
          changedTouches: !0,
          ctrlKey: !0,
          detail: !0,
          eventPhase: !0,
          metaKey: !0,
          pageX: !0,
          pageY: !0,
          shiftKey: !0,
          view: !0,
          char: !0,
          code: !0,
          charCode: !0,
          key: !0,
          keyCode: !0,
          button: !0,
          buttons: !0,
          clientX: !0,
          clientY: !0,
          offsetX: !0,
          offsetY: !0,
          pointerId: !0,
          pointerType: !0,
          screenX: !0,
          screenY: !0,
          targetTouches: !0,
          toElement: !0,
          touches: !0,
          which: !0,
        },
        _.event.addProp
      ),
      _.each({ focus: "focusin", blur: "focusout" }, function (s, p) {
        function g(b) {
          if (A.documentMode) {
            var C = Pe.get(this, "handle"),
              w = _.event.fix(b);
            (w.type = b.type === "focusin" ? "focus" : "blur"),
              (w.isSimulated = !0),
              C(b),
              w.target === w.currentTarget && C(w);
          } else _.event.simulate(p, b.target, _.event.fix(b));
        }
        (_.event.special[s] = {
          setup: function () {
            var b;
            if ((Pl(this, s, !0), A.documentMode))
              (b = Pe.get(this, p)),
                b || this.addEventListener(p, g),
                Pe.set(this, p, (b || 0) + 1);
            else return !1;
          },
          trigger: function () {
            return Pl(this, s), !0;
          },
          teardown: function () {
            var b;
            if (A.documentMode)
              (b = Pe.get(this, p) - 1),
                b
                  ? Pe.set(this, p, b)
                  : (this.removeEventListener(p, g), Pe.remove(this, p));
            else return !1;
          },
          _default: function (b) {
            return Pe.get(b.target, s);
          },
          delegateType: p,
        }),
          (_.event.special[p] = {
            setup: function () {
              var b = this.ownerDocument || this.document || this,
                C = A.documentMode ? this : b,
                w = Pe.get(C, p);
              w ||
                (A.documentMode
                  ? this.addEventListener(p, g)
                  : b.addEventListener(s, g, !0)),
                Pe.set(C, p, (w || 0) + 1);
            },
            teardown: function () {
              var b = this.ownerDocument || this.document || this,
                C = A.documentMode ? this : b,
                w = Pe.get(C, p) - 1;
              w
                ? Pe.set(C, p, w)
                : (A.documentMode
                    ? this.removeEventListener(p, g)
                    : b.removeEventListener(s, g, !0),
                  Pe.remove(C, p));
            },
          });
      }),
      _.each(
        {
          mouseenter: "mouseover",
          mouseleave: "mouseout",
          pointerenter: "pointerover",
          pointerleave: "pointerout",
        },
        function (s, p) {
          _.event.special[s] = {
            delegateType: p,
            bindType: p,
            handle: function (g) {
              var b,
                C = this,
                w = g.relatedTarget,
                S = g.handleObj;
              return (
                (!w || (w !== C && !_.contains(C, w))) &&
                  ((g.type = S.origType),
                  (b = S.handler.apply(this, arguments)),
                  (g.type = p)),
                b
              );
            },
          };
        }
      ),
      _.fn.extend({
        on: function (s, p, g, b) {
          return Cu(this, s, p, g, b);
        },
        one: function (s, p, g, b) {
          return Cu(this, s, p, g, b, 1);
        },
        off: function (s, p, g) {
          var b, C;
          if (s && s.preventDefault && s.handleObj)
            return (
              (b = s.handleObj),
              _(s.delegateTarget).off(
                b.namespace ? b.origType + "." + b.namespace : b.origType,
                b.selector,
                b.handler
              ),
              this
            );
          if (typeof s == "object") {
            for (C in s) this.off(C, p, s[C]);
            return this;
          }
          return (
            (p === !1 || typeof p == "function") && ((g = p), (p = void 0)),
            g === !1 && (g = Lo),
            this.each(function () {
              _.event.remove(this, s, g, p);
            })
          );
        },
      });
    var Uy = /<script|<style|<link/i,
      zy = /checked\s*(?:[^=]|=\s*.checked.)/i,
      $y = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function Lf(s, p) {
      return (
        (De(s, "table") &&
          De(p.nodeType !== 11 ? p : p.firstChild, "tr") &&
          _(s).children("tbody")[0]) ||
        s
      );
    }
    function Wy(s) {
      return (s.type = (s.getAttribute("type") !== null) + "/" + s.type), s;
    }
    function Gy(s) {
      return (
        (s.type || "").slice(0, 5) === "true/"
          ? (s.type = s.type.slice(5))
          : s.removeAttribute("type"),
        s
      );
    }
    function Vf(s, p) {
      var g, b, C, w, S, L, F;
      if (p.nodeType === 1) {
        if (Pe.hasData(s) && ((w = Pe.get(s)), (F = w.events), F)) {
          Pe.remove(p, "handle events");
          for (C in F)
            for (g = 0, b = F[C].length; g < b; g++) _.event.add(p, C, F[C][g]);
        }
        ki.hasData(s) &&
          ((S = ki.access(s)), (L = _.extend({}, S)), ki.set(p, L));
      }
    }
    function Yy(s, p) {
      var g = p.nodeName.toLowerCase();
      g === "input" && Va.test(s.type)
        ? (p.checked = s.checked)
        : (g === "input" || g === "textarea") &&
          (p.defaultValue = s.defaultValue);
    }
    function Vo(s, p, g, b) {
      p = o(p);
      var C,
        w,
        S,
        L,
        F,
        U,
        Z = 0,
        ie = s.length,
        q = ie - 1,
        oe = p[0],
        je = k(oe);
      if (
        je ||
        (ie > 1 && typeof oe == "string" && !M.checkClone && zy.test(oe))
      )
        return s.each(function (rt) {
          var Ye = s.eq(rt);
          je && (p[0] = oe.call(this, rt, Ye.html())), Vo(Ye, p, g, b);
        });
      if (
        ie &&
        ((C = Ff(p, s[0].ownerDocument, !1, s, b)),
        (w = C.firstChild),
        C.childNodes.length === 1 && (C = w),
        w || b)
      ) {
        for (S = _.map(Pi(C, "script"), Wy), L = S.length; Z < ie; Z++)
          (F = C),
            Z !== q &&
              ((F = _.clone(F, !0, !0)), L && _.merge(S, Pi(F, "script"))),
            g.call(s[Z], F, Z);
        if (L)
          for (
            U = S[S.length - 1].ownerDocument, _.map(S, Gy), Z = 0;
            Z < L;
            Z++
          )
            (F = S[Z]),
              Rf.test(F.type || "") &&
                !Pe.access(F, "globalEval") &&
                _.contains(U, F) &&
                (F.src && (F.type || "").toLowerCase() !== "module"
                  ? _._evalUrl &&
                    !F.noModule &&
                    _._evalUrl(
                      F.src,
                      { nonce: F.nonce || F.getAttribute("nonce") },
                      U
                    )
                  : X(F.textContent.replace($y, ""), F, U));
      }
      return s;
    }
    function Bf(s, p, g) {
      for (var b, C = p ? _.filter(p, s) : s, w = 0; (b = C[w]) != null; w++)
        !g && b.nodeType === 1 && _.cleanData(Pi(b)),
          b.parentNode &&
            (g && Ro(b) && xu(Pi(b, "script")), b.parentNode.removeChild(b));
      return s;
    }
    _.extend({
      htmlPrefilter: function (s) {
        return s;
      },
      clone: function (s, p, g) {
        var b,
          C,
          w,
          S,
          L = s.cloneNode(!0),
          F = Ro(s);
        if (
          !M.noCloneChecked &&
          (s.nodeType === 1 || s.nodeType === 11) &&
          !_.isXMLDoc(s)
        )
          for (S = Pi(L), w = Pi(s), b = 0, C = w.length; b < C; b++)
            Yy(w[b], S[b]);
        if (p)
          if (g)
            for (
              w = w || Pi(s), S = S || Pi(L), b = 0, C = w.length;
              b < C;
              b++
            )
              Vf(w[b], S[b]);
          else Vf(s, L);
        return (
          (S = Pi(L, "script")), S.length > 0 && xu(S, !F && Pi(s, "script")), L
        );
      },
      cleanData: function (s) {
        for (
          var p, g, b, C = _.event.special, w = 0;
          (g = s[w]) !== void 0;
          w++
        )
          if (Fa(g)) {
            if ((p = g[Pe.expando])) {
              if (p.events)
                for (b in p.events)
                  C[b] ? _.event.remove(g, b) : _.removeEvent(g, b, p.handle);
              g[Pe.expando] = void 0;
            }
            g[ki.expando] && (g[ki.expando] = void 0);
          }
      },
    }),
      _.fn.extend({
        detach: function (s) {
          return Bf(this, s, !0);
        },
        remove: function (s) {
          return Bf(this, s);
        },
        text: function (s) {
          return or(
            this,
            function (p) {
              return p === void 0
                ? _.text(this)
                : this.empty().each(function () {
                    (this.nodeType === 1 ||
                      this.nodeType === 11 ||
                      this.nodeType === 9) &&
                      (this.textContent = p);
                  });
            },
            null,
            s,
            arguments.length
          );
        },
        append: function () {
          return Vo(this, arguments, function (s) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var p = Lf(this, s);
              p.appendChild(s);
            }
          });
        },
        prepend: function () {
          return Vo(this, arguments, function (s) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var p = Lf(this, s);
              p.insertBefore(s, p.firstChild);
            }
          });
        },
        before: function () {
          return Vo(this, arguments, function (s) {
            this.parentNode && this.parentNode.insertBefore(s, this);
          });
        },
        after: function () {
          return Vo(this, arguments, function (s) {
            this.parentNode &&
              this.parentNode.insertBefore(s, this.nextSibling);
          });
        },
        empty: function () {
          for (var s, p = 0; (s = this[p]) != null; p++)
            s.nodeType === 1 && (_.cleanData(Pi(s, !1)), (s.textContent = ""));
          return this;
        },
        clone: function (s, p) {
          return (
            (s = s ?? !1),
            (p = p ?? s),
            this.map(function () {
              return _.clone(this, s, p);
            })
          );
        },
        html: function (s) {
          return or(
            this,
            function (p) {
              var g = this[0] || {},
                b = 0,
                C = this.length;
              if (p === void 0 && g.nodeType === 1) return g.innerHTML;
              if (
                typeof p == "string" &&
                !Uy.test(p) &&
                !nn[(Af.exec(p) || ["", ""])[1].toLowerCase()]
              ) {
                p = _.htmlPrefilter(p);
                try {
                  for (; b < C; b++)
                    (g = this[b] || {}),
                      g.nodeType === 1 &&
                        (_.cleanData(Pi(g, !1)), (g.innerHTML = p));
                  g = 0;
                } catch {}
              }
              g && this.empty().append(p);
            },
            null,
            s,
            arguments.length
          );
        },
        replaceWith: function () {
          var s = [];
          return Vo(
            this,
            arguments,
            function (p) {
              var g = this.parentNode;
              _.inArray(this, s) < 0 &&
                (_.cleanData(Pi(this)), g && g.replaceChild(p, this));
            },
            s
          );
        },
      }),
      _.each(
        {
          appendTo: "append",
          prependTo: "prepend",
          insertBefore: "before",
          insertAfter: "after",
          replaceAll: "replaceWith",
        },
        function (s, p) {
          _.fn[s] = function (g) {
            for (var b, C = [], w = _(g), S = w.length - 1, L = 0; L <= S; L++)
              (b = L === S ? this : this.clone(!0)),
                _(w[L])[p](b),
                a.apply(C, b.get());
            return this.pushStack(C);
          };
        }
      );
    var wu = new RegExp("^(" + kf + ")(?!px)[a-z%]+$", "i"),
      Du = /^--/,
      Il = function (s) {
        var p = s.ownerDocument.defaultView;
        return (!p || !p.opener) && (p = n), p.getComputedStyle(s);
      },
      Hf = function (s, p, g) {
        var b,
          C,
          w = {};
        for (C in p) (w[C] = s.style[C]), (s.style[C] = p[C]);
        b = g.call(s);
        for (C in p) s.style[C] = w[C];
        return b;
      },
      qy = new RegExp(ar.join("|"), "i");
    (function () {
      function s() {
        if (U) {
          (F.style.cssText =
            "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
            (U.style.cssText =
              "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
            Jr.appendChild(F).appendChild(U);
          var Z = n.getComputedStyle(U);
          (g = Z.top !== "1%"),
            (L = p(Z.marginLeft) === 12),
            (U.style.right = "60%"),
            (w = p(Z.right) === 36),
            (b = p(Z.width) === 36),
            (U.style.position = "absolute"),
            (C = p(U.offsetWidth / 3) === 12),
            Jr.removeChild(F),
            (U = null);
        }
      }
      function p(Z) {
        return Math.round(parseFloat(Z));
      }
      var g,
        b,
        C,
        w,
        S,
        L,
        F = A.createElement("div"),
        U = A.createElement("div");
      U.style &&
        ((U.style.backgroundClip = "content-box"),
        (U.cloneNode(!0).style.backgroundClip = ""),
        (M.clearCloneStyle = U.style.backgroundClip === "content-box"),
        _.extend(M, {
          boxSizingReliable: function () {
            return s(), b;
          },
          pixelBoxStyles: function () {
            return s(), w;
          },
          pixelPosition: function () {
            return s(), g;
          },
          reliableMarginLeft: function () {
            return s(), L;
          },
          scrollboxSize: function () {
            return s(), C;
          },
          reliableTrDimensions: function () {
            var Z, ie, q, oe;
            return (
              S == null &&
                ((Z = A.createElement("table")),
                (ie = A.createElement("tr")),
                (q = A.createElement("div")),
                (Z.style.cssText =
                  "position:absolute;left:-11111px;border-collapse:separate"),
                (ie.style.cssText = "box-sizing:content-box;border:1px solid"),
                (ie.style.height = "1px"),
                (q.style.height = "9px"),
                (q.style.display = "block"),
                Jr.appendChild(Z).appendChild(ie).appendChild(q),
                (oe = n.getComputedStyle(ie)),
                (S =
                  parseInt(oe.height, 10) +
                    parseInt(oe.borderTopWidth, 10) +
                    parseInt(oe.borderBottomWidth, 10) ===
                  ie.offsetHeight),
                Jr.removeChild(Z)),
              S
            );
          },
        }));
    })();
    function Ba(s, p, g) {
      var b,
        C,
        w,
        S,
        L = Du.test(p),
        F = s.style;
      return (
        (g = g || Il(s)),
        g &&
          ((S = g.getPropertyValue(p) || g[p]),
          L && S && (S = S.replace(vi, "$1") || void 0),
          S === "" && !Ro(s) && (S = _.style(s, p)),
          !M.pixelBoxStyles() &&
            wu.test(S) &&
            qy.test(p) &&
            ((b = F.width),
            (C = F.minWidth),
            (w = F.maxWidth),
            (F.minWidth = F.maxWidth = F.width = S),
            (S = g.width),
            (F.width = b),
            (F.minWidth = C),
            (F.maxWidth = w))),
        S !== void 0 ? S + "" : S
      );
    }
    function jf(s, p) {
      return {
        get: function () {
          if (s()) {
            delete this.get;
            return;
          }
          return (this.get = p).apply(this, arguments);
        },
      };
    }
    var Uf = ["Webkit", "Moz", "ms"],
      zf = A.createElement("div").style,
      $f = {};
    function Ky(s) {
      for (var p = s[0].toUpperCase() + s.slice(1), g = Uf.length; g--; )
        if (((s = Uf[g] + p), s in zf)) return s;
    }
    function Su(s) {
      var p = _.cssProps[s] || $f[s];
      return p || (s in zf ? s : ($f[s] = Ky(s) || s));
    }
    var Qy = /^(none|table(?!-c[ea]).+)/,
      Xy = { position: "absolute", visibility: "hidden", display: "block" },
      Wf = { letterSpacing: "0", fontWeight: "400" };
    function Gf(s, p, g) {
      var b = La.exec(p);
      return b ? Math.max(0, b[2] - (g || 0)) + (b[3] || "px") : p;
    }
    function Mu(s, p, g, b, C, w) {
      var S = p === "width" ? 1 : 0,
        L = 0,
        F = 0,
        U = 0;
      if (g === (b ? "border" : "content")) return 0;
      for (; S < 4; S += 2)
        g === "margin" && (U += _.css(s, g + ar[S], !0, C)),
          b
            ? (g === "content" && (F -= _.css(s, "padding" + ar[S], !0, C)),
              g !== "margin" &&
                (F -= _.css(s, "border" + ar[S] + "Width", !0, C)))
            : ((F += _.css(s, "padding" + ar[S], !0, C)),
              g !== "padding"
                ? (F += _.css(s, "border" + ar[S] + "Width", !0, C))
                : (L += _.css(s, "border" + ar[S] + "Width", !0, C)));
      return (
        !b &&
          w >= 0 &&
          (F +=
            Math.max(
              0,
              Math.ceil(
                s["offset" + p[0].toUpperCase() + p.slice(1)] - w - F - L - 0.5
              )
            ) || 0),
        F + U
      );
    }
    function Yf(s, p, g) {
      var b = Il(s),
        C = !M.boxSizingReliable() || g,
        w = C && _.css(s, "boxSizing", !1, b) === "border-box",
        S = w,
        L = Ba(s, p, b),
        F = "offset" + p[0].toUpperCase() + p.slice(1);
      if (wu.test(L)) {
        if (!g) return L;
        L = "auto";
      }
      return (
        ((!M.boxSizingReliable() && w) ||
          (!M.reliableTrDimensions() && De(s, "tr")) ||
          L === "auto" ||
          (!parseFloat(L) && _.css(s, "display", !1, b) === "inline")) &&
          s.getClientRects().length &&
          ((w = _.css(s, "boxSizing", !1, b) === "border-box"),
          (S = F in s),
          S && (L = s[F])),
        (L = parseFloat(L) || 0),
        L + Mu(s, p, g || (w ? "border" : "content"), S, b, L) + "px"
      );
    }
    _.extend({
      cssHooks: {
        opacity: {
          get: function (s, p) {
            if (p) {
              var g = Ba(s, "opacity");
              return g === "" ? "1" : g;
            }
          },
        },
      },
      cssNumber: {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageSlice: !0,
        columnCount: !0,
        flexGrow: !0,
        flexShrink: !0,
        fontWeight: !0,
        gridArea: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnStart: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowStart: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        scale: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
      },
      cssProps: {},
      style: function (s, p, g, b) {
        if (!(!s || s.nodeType === 3 || s.nodeType === 8 || !s.style)) {
          var C,
            w,
            S,
            L = Rn(p),
            F = Du.test(p),
            U = s.style;
          if (
            (F || (p = Su(L)),
            (S = _.cssHooks[p] || _.cssHooks[L]),
            g !== void 0)
          ) {
            if (
              ((w = typeof g),
              w === "string" &&
                (C = La.exec(g)) &&
                C[1] &&
                ((g = Pf(s, p, C)), (w = "number")),
              g == null || g !== g)
            )
              return;
            w === "number" &&
              !F &&
              (g += (C && C[3]) || (_.cssNumber[L] ? "" : "px")),
              !M.clearCloneStyle &&
                g === "" &&
                p.indexOf("background") === 0 &&
                (U[p] = "inherit"),
              (!S || !("set" in S) || (g = S.set(s, g, b)) !== void 0) &&
                (F ? U.setProperty(p, g) : (U[p] = g));
          } else
            return S && "get" in S && (C = S.get(s, !1, b)) !== void 0
              ? C
              : U[p];
        }
      },
      css: function (s, p, g, b) {
        var C,
          w,
          S,
          L = Rn(p),
          F = Du.test(p);
        return (
          F || (p = Su(L)),
          (S = _.cssHooks[p] || _.cssHooks[L]),
          S && "get" in S && (C = S.get(s, !0, g)),
          C === void 0 && (C = Ba(s, p, b)),
          C === "normal" && p in Wf && (C = Wf[p]),
          g === "" || g
            ? ((w = parseFloat(C)), g === !0 || isFinite(w) ? w || 0 : C)
            : C
        );
      },
    }),
      _.each(["height", "width"], function (s, p) {
        _.cssHooks[p] = {
          get: function (g, b, C) {
            if (b)
              return Qy.test(_.css(g, "display")) &&
                (!g.getClientRects().length || !g.getBoundingClientRect().width)
                ? Hf(g, Xy, function () {
                    return Yf(g, p, C);
                  })
                : Yf(g, p, C);
          },
          set: function (g, b, C) {
            var w,
              S = Il(g),
              L = !M.scrollboxSize() && S.position === "absolute",
              F = L || C,
              U = F && _.css(g, "boxSizing", !1, S) === "border-box",
              Z = C ? Mu(g, p, C, U, S) : 0;
            return (
              U &&
                L &&
                (Z -= Math.ceil(
                  g["offset" + p[0].toUpperCase() + p.slice(1)] -
                    parseFloat(S[p]) -
                    Mu(g, p, "border", !1, S) -
                    0.5
                )),
              Z &&
                (w = La.exec(b)) &&
                (w[3] || "px") !== "px" &&
                ((g.style[p] = b), (b = _.css(g, p))),
              Gf(g, b, Z)
            );
          },
        };
      }),
      (_.cssHooks.marginLeft = jf(M.reliableMarginLeft, function (s, p) {
        if (p)
          return (
            (parseFloat(Ba(s, "marginLeft")) ||
              s.getBoundingClientRect().left -
                Hf(s, { marginLeft: 0 }, function () {
                  return s.getBoundingClientRect().left;
                })) + "px"
          );
      })),
      _.each({ margin: "", padding: "", border: "Width" }, function (s, p) {
        (_.cssHooks[s + p] = {
          expand: function (g) {
            for (
              var b = 0, C = {}, w = typeof g == "string" ? g.split(" ") : [g];
              b < 4;
              b++
            )
              C[s + ar[b] + p] = w[b] || w[b - 2] || w[0];
            return C;
          },
        }),
          s !== "margin" && (_.cssHooks[s + p].set = Gf);
      }),
      _.fn.extend({
        css: function (s, p) {
          return or(
            this,
            function (g, b, C) {
              var w,
                S,
                L = {},
                F = 0;
              if (Array.isArray(b)) {
                for (w = Il(g), S = b.length; F < S; F++)
                  L[b[F]] = _.css(g, b[F], !1, w);
                return L;
              }
              return C !== void 0 ? _.style(g, b, C) : _.css(g, b);
            },
            s,
            p,
            arguments.length > 1
          );
        },
      });
    function Ii(s, p, g, b, C) {
      return new Ii.prototype.init(s, p, g, b, C);
    }
    (_.Tween = Ii),
      (Ii.prototype = {
        constructor: Ii,
        init: function (s, p, g, b, C, w) {
          (this.elem = s),
            (this.prop = g),
            (this.easing = C || _.easing._default),
            (this.options = p),
            (this.start = this.now = this.cur()),
            (this.end = b),
            (this.unit = w || (_.cssNumber[g] ? "" : "px"));
        },
        cur: function () {
          var s = Ii.propHooks[this.prop];
          return s && s.get ? s.get(this) : Ii.propHooks._default.get(this);
        },
        run: function (s) {
          var p,
            g = Ii.propHooks[this.prop];
          return (
            this.options.duration
              ? (this.pos = p =
                  _.easing[this.easing](
                    s,
                    this.options.duration * s,
                    0,
                    1,
                    this.options.duration
                  ))
              : (this.pos = p = s),
            (this.now = (this.end - this.start) * p + this.start),
            this.options.step &&
              this.options.step.call(this.elem, this.now, this),
            g && g.set ? g.set(this) : Ii.propHooks._default.set(this),
            this
          );
        },
      }),
      (Ii.prototype.init.prototype = Ii.prototype),
      (Ii.propHooks = {
        _default: {
          get: function (s) {
            var p;
            return s.elem.nodeType !== 1 ||
              (s.elem[s.prop] != null && s.elem.style[s.prop] == null)
              ? s.elem[s.prop]
              : ((p = _.css(s.elem, s.prop, "")), !p || p === "auto" ? 0 : p);
          },
          set: function (s) {
            _.fx.step[s.prop]
              ? _.fx.step[s.prop](s)
              : s.elem.nodeType === 1 &&
                (_.cssHooks[s.prop] || s.elem.style[Su(s.prop)] != null)
              ? _.style(s.elem, s.prop, s.now + s.unit)
              : (s.elem[s.prop] = s.now);
          },
        },
      }),
      (Ii.propHooks.scrollTop = Ii.propHooks.scrollLeft =
        {
          set: function (s) {
            s.elem.nodeType && s.elem.parentNode && (s.elem[s.prop] = s.now);
          },
        }),
      (_.easing = {
        linear: function (s) {
          return s;
        },
        swing: function (s) {
          return 0.5 - Math.cos(s * Math.PI) / 2;
        },
        _default: "swing",
      }),
      (_.fx = Ii.prototype.init),
      (_.fx.step = {});
    var Bo,
      Al,
      Zy = /^(?:toggle|show|hide)$/,
      Jy = /queueHooks$/;
    function Tu() {
      Al &&
        (A.hidden === !1 && n.requestAnimationFrame
          ? n.requestAnimationFrame(Tu)
          : n.setTimeout(Tu, _.fx.interval),
        _.fx.tick());
    }
    function qf() {
      return (
        n.setTimeout(function () {
          Bo = void 0;
        }),
        (Bo = Date.now())
      );
    }
    function Rl(s, p) {
      var g,
        b = 0,
        C = { height: s };
      for (p = p ? 1 : 0; b < 4; b += 2 - p)
        (g = ar[b]), (C["margin" + g] = C["padding" + g] = s);
      return p && (C.opacity = C.width = s), C;
    }
    function Kf(s, p, g) {
      for (
        var b,
          C = (bn.tweeners[p] || []).concat(bn.tweeners["*"]),
          w = 0,
          S = C.length;
        w < S;
        w++
      )
        if ((b = C[w].call(g, p, s))) return b;
    }
    function ex(s, p, g) {
      var b,
        C,
        w,
        S,
        L,
        F,
        U,
        Z,
        ie = "width" in p || "height" in p,
        q = this,
        oe = {},
        je = s.style,
        rt = s.nodeType && kl(s),
        Ye = Pe.get(s, "fxshow");
      g.queue ||
        ((S = _._queueHooks(s, "fx")),
        S.unqueued == null &&
          ((S.unqueued = 0),
          (L = S.empty.fire),
          (S.empty.fire = function () {
            S.unqueued || L();
          })),
        S.unqueued++,
        q.always(function () {
          q.always(function () {
            S.unqueued--, _.queue(s, "fx").length || S.empty.fire();
          });
        }));
      for (b in p)
        if (((C = p[b]), Zy.test(C))) {
          if (
            (delete p[b],
            (w = w || C === "toggle"),
            C === (rt ? "hide" : "show"))
          )
            if (C === "show" && Ye && Ye[b] !== void 0) rt = !0;
            else continue;
          oe[b] = (Ye && Ye[b]) || _.style(s, b);
        }
      if (((F = !_.isEmptyObject(p)), !(!F && _.isEmptyObject(oe)))) {
        ie &&
          s.nodeType === 1 &&
          ((g.overflow = [je.overflow, je.overflowX, je.overflowY]),
          (U = Ye && Ye.display),
          U == null && (U = Pe.get(s, "display")),
          (Z = _.css(s, "display")),
          Z === "none" &&
            (U
              ? (Z = U)
              : (Fo([s], !0),
                (U = s.style.display || U),
                (Z = _.css(s, "display")),
                Fo([s]))),
          (Z === "inline" || (Z === "inline-block" && U != null)) &&
            _.css(s, "float") === "none" &&
            (F ||
              (q.done(function () {
                je.display = U;
              }),
              U == null && ((Z = je.display), (U = Z === "none" ? "" : Z))),
            (je.display = "inline-block"))),
          g.overflow &&
            ((je.overflow = "hidden"),
            q.always(function () {
              (je.overflow = g.overflow[0]),
                (je.overflowX = g.overflow[1]),
                (je.overflowY = g.overflow[2]);
            })),
          (F = !1);
        for (b in oe)
          F ||
            (Ye
              ? "hidden" in Ye && (rt = Ye.hidden)
              : (Ye = Pe.access(s, "fxshow", { display: U })),
            w && (Ye.hidden = !rt),
            rt && Fo([s], !0),
            q.done(function () {
              rt || Fo([s]), Pe.remove(s, "fxshow");
              for (b in oe) _.style(s, b, oe[b]);
            })),
            (F = Kf(rt ? Ye[b] : 0, b, q)),
            b in Ye ||
              ((Ye[b] = F.start), rt && ((F.end = F.start), (F.start = 0)));
      }
    }
    function tx(s, p) {
      var g, b, C, w, S;
      for (g in s)
        if (
          ((b = Rn(g)),
          (C = p[b]),
          (w = s[g]),
          Array.isArray(w) && ((C = w[1]), (w = s[g] = w[0])),
          g !== b && ((s[b] = w), delete s[g]),
          (S = _.cssHooks[b]),
          S && "expand" in S)
        ) {
          (w = S.expand(w)), delete s[b];
          for (g in w) g in s || ((s[g] = w[g]), (p[g] = C));
        } else p[b] = C;
    }
    function bn(s, p, g) {
      var b,
        C,
        w = 0,
        S = bn.prefilters.length,
        L = _.Deferred().always(function () {
          delete F.elem;
        }),
        F = function () {
          if (C) return !1;
          for (
            var ie = Bo || qf(),
              q = Math.max(0, U.startTime + U.duration - ie),
              oe = q / U.duration || 0,
              je = 1 - oe,
              rt = 0,
              Ye = U.tweens.length;
            rt < Ye;
            rt++
          )
            U.tweens[rt].run(je);
          return (
            L.notifyWith(s, [U, je, q]),
            je < 1 && Ye
              ? q
              : (Ye || L.notifyWith(s, [U, 1, 0]), L.resolveWith(s, [U]), !1)
          );
        },
        U = L.promise({
          elem: s,
          props: _.extend({}, p),
          opts: _.extend(
            !0,
            { specialEasing: {}, easing: _.easing._default },
            g
          ),
          originalProperties: p,
          originalOptions: g,
          startTime: Bo || qf(),
          duration: g.duration,
          tweens: [],
          createTween: function (ie, q) {
            var oe = _.Tween(
              s,
              U.opts,
              ie,
              q,
              U.opts.specialEasing[ie] || U.opts.easing
            );
            return U.tweens.push(oe), oe;
          },
          stop: function (ie) {
            var q = 0,
              oe = ie ? U.tweens.length : 0;
            if (C) return this;
            for (C = !0; q < oe; q++) U.tweens[q].run(1);
            return (
              ie
                ? (L.notifyWith(s, [U, 1, 0]), L.resolveWith(s, [U, ie]))
                : L.rejectWith(s, [U, ie]),
              this
            );
          },
        }),
        Z = U.props;
      for (tx(Z, U.opts.specialEasing); w < S; w++)
        if (((b = bn.prefilters[w].call(U, s, Z, U.opts)), b))
          return (
            k(b.stop) &&
              (_._queueHooks(U.elem, U.opts.queue).stop = b.stop.bind(b)),
            b
          );
      return (
        _.map(Z, Kf, U),
        k(U.opts.start) && U.opts.start.call(s, U),
        U.progress(U.opts.progress)
          .done(U.opts.done, U.opts.complete)
          .fail(U.opts.fail)
          .always(U.opts.always),
        _.fx.timer(_.extend(F, { elem: s, anim: U, queue: U.opts.queue })),
        U
      );
    }
    (_.Animation = _.extend(bn, {
      tweeners: {
        "*": [
          function (s, p) {
            var g = this.createTween(s, p);
            return Pf(g.elem, s, La.exec(p), g), g;
          },
        ],
      },
      tweener: function (s, p) {
        k(s) ? ((p = s), (s = ["*"])) : (s = s.match(An));
        for (var g, b = 0, C = s.length; b < C; b++)
          (g = s[b]),
            (bn.tweeners[g] = bn.tweeners[g] || []),
            bn.tweeners[g].unshift(p);
      },
      prefilters: [ex],
      prefilter: function (s, p) {
        p ? bn.prefilters.unshift(s) : bn.prefilters.push(s);
      },
    })),
      (_.speed = function (s, p, g) {
        var b =
          s && typeof s == "object"
            ? _.extend({}, s)
            : {
                complete: g || (!g && p) || (k(s) && s),
                duration: s,
                easing: (g && p) || (p && !k(p) && p),
              };
        return (
          _.fx.off
            ? (b.duration = 0)
            : typeof b.duration != "number" &&
              (b.duration in _.fx.speeds
                ? (b.duration = _.fx.speeds[b.duration])
                : (b.duration = _.fx.speeds._default)),
          (b.queue == null || b.queue === !0) && (b.queue = "fx"),
          (b.old = b.complete),
          (b.complete = function () {
            k(b.old) && b.old.call(this), b.queue && _.dequeue(this, b.queue);
          }),
          b
        );
      }),
      _.fn.extend({
        fadeTo: function (s, p, g, b) {
          return this.filter(kl)
            .css("opacity", 0)
            .show()
            .end()
            .animate({ opacity: p }, s, g, b);
        },
        animate: function (s, p, g, b) {
          var C = _.isEmptyObject(s),
            w = _.speed(p, g, b),
            S = function () {
              var L = bn(this, _.extend({}, s), w);
              (C || Pe.get(this, "finish")) && L.stop(!0);
            };
          return (
            (S.finish = S),
            C || w.queue === !1 ? this.each(S) : this.queue(w.queue, S)
          );
        },
        stop: function (s, p, g) {
          var b = function (C) {
            var w = C.stop;
            delete C.stop, w(g);
          };
          return (
            typeof s != "string" && ((g = p), (p = s), (s = void 0)),
            p && this.queue(s || "fx", []),
            this.each(function () {
              var C = !0,
                w = s != null && s + "queueHooks",
                S = _.timers,
                L = Pe.get(this);
              if (w) L[w] && L[w].stop && b(L[w]);
              else for (w in L) L[w] && L[w].stop && Jy.test(w) && b(L[w]);
              for (w = S.length; w--; )
                S[w].elem === this &&
                  (s == null || S[w].queue === s) &&
                  (S[w].anim.stop(g), (C = !1), S.splice(w, 1));
              (C || !g) && _.dequeue(this, s);
            })
          );
        },
        finish: function (s) {
          return (
            s !== !1 && (s = s || "fx"),
            this.each(function () {
              var p,
                g = Pe.get(this),
                b = g[s + "queue"],
                C = g[s + "queueHooks"],
                w = _.timers,
                S = b ? b.length : 0;
              for (
                g.finish = !0,
                  _.queue(this, s, []),
                  C && C.stop && C.stop.call(this, !0),
                  p = w.length;
                p--;

              )
                w[p].elem === this &&
                  w[p].queue === s &&
                  (w[p].anim.stop(!0), w.splice(p, 1));
              for (p = 0; p < S; p++)
                b[p] && b[p].finish && b[p].finish.call(this);
              delete g.finish;
            })
          );
        },
      }),
      _.each(["toggle", "show", "hide"], function (s, p) {
        var g = _.fn[p];
        _.fn[p] = function (b, C, w) {
          return b == null || typeof b == "boolean"
            ? g.apply(this, arguments)
            : this.animate(Rl(p, !0), b, C, w);
        };
      }),
      _.each(
        {
          slideDown: Rl("show"),
          slideUp: Rl("hide"),
          slideToggle: Rl("toggle"),
          fadeIn: { opacity: "show" },
          fadeOut: { opacity: "hide" },
          fadeToggle: { opacity: "toggle" },
        },
        function (s, p) {
          _.fn[s] = function (g, b, C) {
            return this.animate(p, g, b, C);
          };
        }
      ),
      (_.timers = []),
      (_.fx.tick = function () {
        var s,
          p = 0,
          g = _.timers;
        for (Bo = Date.now(); p < g.length; p++)
          (s = g[p]), !s() && g[p] === s && g.splice(p--, 1);
        g.length || _.fx.stop(), (Bo = void 0);
      }),
      (_.fx.timer = function (s) {
        _.timers.push(s), _.fx.start();
      }),
      (_.fx.interval = 13),
      (_.fx.start = function () {
        Al || ((Al = !0), Tu());
      }),
      (_.fx.stop = function () {
        Al = null;
      }),
      (_.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
      (_.fn.delay = function (s, p) {
        return (
          (s = (_.fx && _.fx.speeds[s]) || s),
          (p = p || "fx"),
          this.queue(p, function (g, b) {
            var C = n.setTimeout(g, s);
            b.stop = function () {
              n.clearTimeout(C);
            };
          })
        );
      }),
      (function () {
        var s = A.createElement("input"),
          p = A.createElement("select"),
          g = p.appendChild(A.createElement("option"));
        (s.type = "checkbox"),
          (M.checkOn = s.value !== ""),
          (M.optSelected = g.selected),
          (s = A.createElement("input")),
          (s.value = "t"),
          (s.type = "radio"),
          (M.radioValue = s.value === "t");
      })();
    var Qf,
      Ha = _.expr.attrHandle;
    _.fn.extend({
      attr: function (s, p) {
        return or(this, _.attr, s, p, arguments.length > 1);
      },
      removeAttr: function (s) {
        return this.each(function () {
          _.removeAttr(this, s);
        });
      },
    }),
      _.extend({
        attr: function (s, p, g) {
          var b,
            C,
            w = s.nodeType;
          if (!(w === 3 || w === 8 || w === 2)) {
            if (typeof s.getAttribute > "u") return _.prop(s, p, g);
            if (
              ((w !== 1 || !_.isXMLDoc(s)) &&
                (C =
                  _.attrHooks[p.toLowerCase()] ||
                  (_.expr.match.bool.test(p) ? Qf : void 0)),
              g !== void 0)
            ) {
              if (g === null) {
                _.removeAttr(s, p);
                return;
              }
              return C && "set" in C && (b = C.set(s, g, p)) !== void 0
                ? b
                : (s.setAttribute(p, g + ""), g);
            }
            return C && "get" in C && (b = C.get(s, p)) !== null
              ? b
              : ((b = _.find.attr(s, p)), b ?? void 0);
          }
        },
        attrHooks: {
          type: {
            set: function (s, p) {
              if (!M.radioValue && p === "radio" && De(s, "input")) {
                var g = s.value;
                return s.setAttribute("type", p), g && (s.value = g), p;
              }
            },
          },
        },
        removeAttr: function (s, p) {
          var g,
            b = 0,
            C = p && p.match(An);
          if (C && s.nodeType === 1)
            for (; (g = C[b++]); ) s.removeAttribute(g);
        },
      }),
      (Qf = {
        set: function (s, p, g) {
          return p === !1 ? _.removeAttr(s, g) : s.setAttribute(g, g), g;
        },
      }),
      _.each(_.expr.match.bool.source.match(/\w+/g), function (s, p) {
        var g = Ha[p] || _.find.attr;
        Ha[p] = function (b, C, w) {
          var S,
            L,
            F = C.toLowerCase();
          return (
            w ||
              ((L = Ha[F]),
              (Ha[F] = S),
              (S = g(b, C, w) != null ? F : null),
              (Ha[F] = L)),
            S
          );
        };
      });
    var ix = /^(?:input|select|textarea|button)$/i,
      nx = /^(?:a|area)$/i;
    _.fn.extend({
      prop: function (s, p) {
        return or(this, _.prop, s, p, arguments.length > 1);
      },
      removeProp: function (s) {
        return this.each(function () {
          delete this[_.propFix[s] || s];
        });
      },
    }),
      _.extend({
        prop: function (s, p, g) {
          var b,
            C,
            w = s.nodeType;
          if (!(w === 3 || w === 8 || w === 2))
            return (
              (w !== 1 || !_.isXMLDoc(s)) &&
                ((p = _.propFix[p] || p), (C = _.propHooks[p])),
              g !== void 0
                ? C && "set" in C && (b = C.set(s, g, p)) !== void 0
                  ? b
                  : (s[p] = g)
                : C && "get" in C && (b = C.get(s, p)) !== null
                ? b
                : s[p]
            );
        },
        propHooks: {
          tabIndex: {
            get: function (s) {
              var p = _.find.attr(s, "tabindex");
              return p
                ? parseInt(p, 10)
                : ix.test(s.nodeName) || (nx.test(s.nodeName) && s.href)
                ? 0
                : -1;
            },
          },
        },
        propFix: { for: "htmlFor", class: "className" },
      }),
      M.optSelected ||
        (_.propHooks.selected = {
          get: function (s) {
            var p = s.parentNode;
            return p && p.parentNode && p.parentNode.selectedIndex, null;
          },
          set: function (s) {
            var p = s.parentNode;
            p && (p.selectedIndex, p.parentNode && p.parentNode.selectedIndex);
          },
        }),
      _.each(
        [
          "tabIndex",
          "readOnly",
          "maxLength",
          "cellSpacing",
          "cellPadding",
          "rowSpan",
          "colSpan",
          "useMap",
          "frameBorder",
          "contentEditable",
        ],
        function () {
          _.propFix[this.toLowerCase()] = this;
        }
      );
    function eo(s) {
      var p = s.match(An) || [];
      return p.join(" ");
    }
    function to(s) {
      return (s.getAttribute && s.getAttribute("class")) || "";
    }
    function Eu(s) {
      return Array.isArray(s)
        ? s
        : typeof s == "string"
        ? s.match(An) || []
        : [];
    }
    _.fn.extend({
      addClass: function (s) {
        var p, g, b, C, w, S;
        return k(s)
          ? this.each(function (L) {
              _(this).addClass(s.call(this, L, to(this)));
            })
          : ((p = Eu(s)),
            p.length
              ? this.each(function () {
                  if (
                    ((b = to(this)),
                    (g = this.nodeType === 1 && " " + eo(b) + " "),
                    g)
                  ) {
                    for (w = 0; w < p.length; w++)
                      (C = p[w]),
                        g.indexOf(" " + C + " ") < 0 && (g += C + " ");
                    (S = eo(g)), b !== S && this.setAttribute("class", S);
                  }
                })
              : this);
      },
      removeClass: function (s) {
        var p, g, b, C, w, S;
        return k(s)
          ? this.each(function (L) {
              _(this).removeClass(s.call(this, L, to(this)));
            })
          : arguments.length
          ? ((p = Eu(s)),
            p.length
              ? this.each(function () {
                  if (
                    ((b = to(this)),
                    (g = this.nodeType === 1 && " " + eo(b) + " "),
                    g)
                  ) {
                    for (w = 0; w < p.length; w++)
                      for (C = p[w]; g.indexOf(" " + C + " ") > -1; )
                        g = g.replace(" " + C + " ", " ");
                    (S = eo(g)), b !== S && this.setAttribute("class", S);
                  }
                })
              : this)
          : this.attr("class", "");
      },
      toggleClass: function (s, p) {
        var g,
          b,
          C,
          w,
          S = typeof s,
          L = S === "string" || Array.isArray(s);
        return k(s)
          ? this.each(function (F) {
              _(this).toggleClass(s.call(this, F, to(this), p), p);
            })
          : typeof p == "boolean" && L
          ? p
            ? this.addClass(s)
            : this.removeClass(s)
          : ((g = Eu(s)),
            this.each(function () {
              if (L)
                for (w = _(this), C = 0; C < g.length; C++)
                  (b = g[C]), w.hasClass(b) ? w.removeClass(b) : w.addClass(b);
              else
                (s === void 0 || S === "boolean") &&
                  ((b = to(this)),
                  b && Pe.set(this, "__className__", b),
                  this.setAttribute &&
                    this.setAttribute(
                      "class",
                      b || s === !1 ? "" : Pe.get(this, "__className__") || ""
                    ));
            }));
      },
      hasClass: function (s) {
        var p,
          g,
          b = 0;
        for (p = " " + s + " "; (g = this[b++]); )
          if (g.nodeType === 1 && (" " + eo(to(g)) + " ").indexOf(p) > -1)
            return !0;
        return !1;
      },
    });
    var rx = /\r/g;
    _.fn.extend({
      val: function (s) {
        var p,
          g,
          b,
          C = this[0];
        return arguments.length
          ? ((b = k(s)),
            this.each(function (w) {
              var S;
              this.nodeType === 1 &&
                (b ? (S = s.call(this, w, _(this).val())) : (S = s),
                S == null
                  ? (S = "")
                  : typeof S == "number"
                  ? (S += "")
                  : Array.isArray(S) &&
                    (S = _.map(S, function (L) {
                      return L == null ? "" : L + "";
                    })),
                (p =
                  _.valHooks[this.type] ||
                  _.valHooks[this.nodeName.toLowerCase()]),
                (!p || !("set" in p) || p.set(this, S, "value") === void 0) &&
                  (this.value = S));
            }))
          : C
          ? ((p = _.valHooks[C.type] || _.valHooks[C.nodeName.toLowerCase()]),
            p && "get" in p && (g = p.get(C, "value")) !== void 0
              ? g
              : ((g = C.value),
                typeof g == "string" ? g.replace(rx, "") : g ?? ""))
          : void 0;
      },
    }),
      _.extend({
        valHooks: {
          option: {
            get: function (s) {
              var p = _.find.attr(s, "value");
              return p ?? eo(_.text(s));
            },
          },
          select: {
            get: function (s) {
              var p,
                g,
                b,
                C = s.options,
                w = s.selectedIndex,
                S = s.type === "select-one",
                L = S ? null : [],
                F = S ? w + 1 : C.length;
              for (w < 0 ? (b = F) : (b = S ? w : 0); b < F; b++)
                if (
                  ((g = C[b]),
                  (g.selected || b === w) &&
                    !g.disabled &&
                    (!g.parentNode.disabled || !De(g.parentNode, "optgroup")))
                ) {
                  if (((p = _(g).val()), S)) return p;
                  L.push(p);
                }
              return L;
            },
            set: function (s, p) {
              for (
                var g, b, C = s.options, w = _.makeArray(p), S = C.length;
                S--;

              )
                (b = C[S]),
                  (b.selected = _.inArray(_.valHooks.option.get(b), w) > -1) &&
                    (g = !0);
              return g || (s.selectedIndex = -1), w;
            },
          },
        },
      }),
      _.each(["radio", "checkbox"], function () {
        (_.valHooks[this] = {
          set: function (s, p) {
            if (Array.isArray(p))
              return (s.checked = _.inArray(_(s).val(), p) > -1);
          },
        }),
          M.checkOn ||
            (_.valHooks[this].get = function (s) {
              return s.getAttribute("value") === null ? "on" : s.value;
            });
      });
    var ja = n.location,
      Xf = { guid: Date.now() },
      Ou = /\?/;
    _.parseXML = function (s) {
      var p, g;
      if (!s || typeof s != "string") return null;
      try {
        p = new n.DOMParser().parseFromString(s, "text/xml");
      } catch {}
      return (
        (g = p && p.getElementsByTagName("parsererror")[0]),
        (!p || g) &&
          _.error(
            "Invalid XML: " +
              (g
                ? _.map(g.childNodes, function (b) {
                    return b.textContent;
                  }).join(`
`)
                : s)
          ),
        p
      );
    };
    var Zf = /^(?:focusinfocus|focusoutblur)$/,
      Jf = function (s) {
        s.stopPropagation();
      };
    _.extend(_.event, {
      trigger: function (s, p, g, b) {
        var C,
          w,
          S,
          L,
          F,
          U,
          Z,
          ie,
          q = [g || A],
          oe = v.call(s, "type") ? s.type : s,
          je = v.call(s, "namespace") ? s.namespace.split(".") : [];
        if (
          ((w = ie = S = g = g || A),
          !(g.nodeType === 3 || g.nodeType === 8) &&
            !Zf.test(oe + _.event.triggered) &&
            (oe.indexOf(".") > -1 &&
              ((je = oe.split(".")), (oe = je.shift()), je.sort()),
            (F = oe.indexOf(":") < 0 && "on" + oe),
            (s = s[_.expando] ? s : new _.Event(oe, typeof s == "object" && s)),
            (s.isTrigger = b ? 2 : 3),
            (s.namespace = je.join(".")),
            (s.rnamespace = s.namespace
              ? new RegExp("(^|\\.)" + je.join("\\.(?:.*\\.|)") + "(\\.|$)")
              : null),
            (s.result = void 0),
            s.target || (s.target = g),
            (p = p == null ? [s] : _.makeArray(p, [s])),
            (Z = _.event.special[oe] || {}),
            !(!b && Z.trigger && Z.trigger.apply(g, p) === !1)))
        ) {
          if (!b && !Z.noBubble && !V(g)) {
            for (
              L = Z.delegateType || oe, Zf.test(L + oe) || (w = w.parentNode);
              w;
              w = w.parentNode
            )
              q.push(w), (S = w);
            S === (g.ownerDocument || A) &&
              q.push(S.defaultView || S.parentWindow || n);
          }
          for (C = 0; (w = q[C++]) && !s.isPropagationStopped(); )
            (ie = w),
              (s.type = C > 1 ? L : Z.bindType || oe),
              (U =
                (Pe.get(w, "events") || Object.create(null))[s.type] &&
                Pe.get(w, "handle")),
              U && U.apply(w, p),
              (U = F && w[F]),
              U &&
                U.apply &&
                Fa(w) &&
                ((s.result = U.apply(w, p)),
                s.result === !1 && s.preventDefault());
          return (
            (s.type = oe),
            !b &&
              !s.isDefaultPrevented() &&
              (!Z._default || Z._default.apply(q.pop(), p) === !1) &&
              Fa(g) &&
              F &&
              k(g[oe]) &&
              !V(g) &&
              ((S = g[F]),
              S && (g[F] = null),
              (_.event.triggered = oe),
              s.isPropagationStopped() && ie.addEventListener(oe, Jf),
              g[oe](),
              s.isPropagationStopped() && ie.removeEventListener(oe, Jf),
              (_.event.triggered = void 0),
              S && (g[F] = S)),
            s.result
          );
        }
      },
      simulate: function (s, p, g) {
        var b = _.extend(new _.Event(), g, { type: s, isSimulated: !0 });
        _.event.trigger(b, null, p);
      },
    }),
      _.fn.extend({
        trigger: function (s, p) {
          return this.each(function () {
            _.event.trigger(s, p, this);
          });
        },
        triggerHandler: function (s, p) {
          var g = this[0];
          if (g) return _.event.trigger(s, p, g, !0);
        },
      });
    var ox = /\[\]$/,
      eg = /\r?\n/g,
      ax = /^(?:submit|button|image|reset|file)$/i,
      sx = /^(?:input|select|textarea|keygen)/i;
    function ku(s, p, g, b) {
      var C;
      if (Array.isArray(p))
        _.each(p, function (w, S) {
          g || ox.test(s)
            ? b(s, S)
            : ku(
                s + "[" + (typeof S == "object" && S != null ? w : "") + "]",
                S,
                g,
                b
              );
        });
      else if (!g && se(p) === "object")
        for (C in p) ku(s + "[" + C + "]", p[C], g, b);
      else b(s, p);
    }
    (_.param = function (s, p) {
      var g,
        b = [],
        C = function (w, S) {
          var L = k(S) ? S() : S;
          b[b.length] =
            encodeURIComponent(w) + "=" + encodeURIComponent(L ?? "");
        };
      if (s == null) return "";
      if (Array.isArray(s) || (s.jquery && !_.isPlainObject(s)))
        _.each(s, function () {
          C(this.name, this.value);
        });
      else for (g in s) ku(g, s[g], p, C);
      return b.join("&");
    }),
      _.fn.extend({
        serialize: function () {
          return _.param(this.serializeArray());
        },
        serializeArray: function () {
          return this.map(function () {
            var s = _.prop(this, "elements");
            return s ? _.makeArray(s) : this;
          })
            .filter(function () {
              var s = this.type;
              return (
                this.name &&
                !_(this).is(":disabled") &&
                sx.test(this.nodeName) &&
                !ax.test(s) &&
                (this.checked || !Va.test(s))
              );
            })
            .map(function (s, p) {
              var g = _(this).val();
              return g == null
                ? null
                : Array.isArray(g)
                ? _.map(g, function (b) {
                    return {
                      name: p.name,
                      value: b.replace(
                        eg,
                        `\r
`
                      ),
                    };
                  })
                : {
                    name: p.name,
                    value: g.replace(
                      eg,
                      `\r
`
                    ),
                  };
            })
            .get();
        },
      });
    var lx = /%20/g,
      cx = /#.*$/,
      dx = /([?&])_=[^&]*/,
      ux = /^(.*?):[ \t]*([^\r\n]*)$/gm,
      hx = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      px = /^(?:GET|HEAD)$/,
      mx = /^\/\//,
      tg = {},
      Pu = {},
      ig = "*/".concat("*"),
      Iu = A.createElement("a");
    Iu.href = ja.href;
    function ng(s) {
      return function (p, g) {
        typeof p != "string" && ((g = p), (p = "*"));
        var b,
          C = 0,
          w = p.toLowerCase().match(An) || [];
        if (k(g))
          for (; (b = w[C++]); )
            b[0] === "+"
              ? ((b = b.slice(1) || "*"), (s[b] = s[b] || []).unshift(g))
              : (s[b] = s[b] || []).push(g);
      };
    }
    function rg(s, p, g, b) {
      var C = {},
        w = s === Pu;
      function S(L) {
        var F;
        return (
          (C[L] = !0),
          _.each(s[L] || [], function (U, Z) {
            var ie = Z(p, g, b);
            if (typeof ie == "string" && !w && !C[ie])
              return p.dataTypes.unshift(ie), S(ie), !1;
            if (w) return !(F = ie);
          }),
          F
        );
      }
      return S(p.dataTypes[0]) || (!C["*"] && S("*"));
    }
    function Au(s, p) {
      var g,
        b,
        C = _.ajaxSettings.flatOptions || {};
      for (g in p) p[g] !== void 0 && ((C[g] ? s : b || (b = {}))[g] = p[g]);
      return b && _.extend(!0, s, b), s;
    }
    function fx(s, p, g) {
      for (var b, C, w, S, L = s.contents, F = s.dataTypes; F[0] === "*"; )
        F.shift(),
          b === void 0 &&
            (b = s.mimeType || p.getResponseHeader("Content-Type"));
      if (b) {
        for (C in L)
          if (L[C] && L[C].test(b)) {
            F.unshift(C);
            break;
          }
      }
      if (F[0] in g) w = F[0];
      else {
        for (C in g) {
          if (!F[0] || s.converters[C + " " + F[0]]) {
            w = C;
            break;
          }
          S || (S = C);
        }
        w = w || S;
      }
      if (w) return w !== F[0] && F.unshift(w), g[w];
    }
    function gx(s, p, g, b) {
      var C,
        w,
        S,
        L,
        F,
        U = {},
        Z = s.dataTypes.slice();
      if (Z[1]) for (S in s.converters) U[S.toLowerCase()] = s.converters[S];
      for (w = Z.shift(); w; )
        if (
          (s.responseFields[w] && (g[s.responseFields[w]] = p),
          !F && b && s.dataFilter && (p = s.dataFilter(p, s.dataType)),
          (F = w),
          (w = Z.shift()),
          w)
        ) {
          if (w === "*") w = F;
          else if (F !== "*" && F !== w) {
            if (((S = U[F + " " + w] || U["* " + w]), !S)) {
              for (C in U)
                if (
                  ((L = C.split(" ")),
                  L[1] === w && ((S = U[F + " " + L[0]] || U["* " + L[0]]), S))
                ) {
                  S === !0
                    ? (S = U[C])
                    : U[C] !== !0 && ((w = L[0]), Z.unshift(L[1]));
                  break;
                }
            }
            if (S !== !0)
              if (S && s.throws) p = S(p);
              else
                try {
                  p = S(p);
                } catch (ie) {
                  return {
                    state: "parsererror",
                    error: S ? ie : "No conversion from " + F + " to " + w,
                  };
                }
          }
        }
      return { state: "success", data: p };
    }
    _.extend({
      active: 0,
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: ja.href,
        type: "GET",
        isLocal: hx.test(ja.protocol),
        global: !0,
        processData: !0,
        async: !0,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        accepts: {
          "*": ig,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript",
        },
        contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON",
        },
        converters: {
          "* text": String,
          "text html": !0,
          "text json": JSON.parse,
          "text xml": _.parseXML,
        },
        flatOptions: { url: !0, context: !0 },
      },
      ajaxSetup: function (s, p) {
        return p ? Au(Au(s, _.ajaxSettings), p) : Au(_.ajaxSettings, s);
      },
      ajaxPrefilter: ng(tg),
      ajaxTransport: ng(Pu),
      ajax: function (s, p) {
        typeof s == "object" && ((p = s), (s = void 0)), (p = p || {});
        var g,
          b,
          C,
          w,
          S,
          L,
          F,
          U,
          Z,
          ie,
          q = _.ajaxSetup({}, p),
          oe = q.context || q,
          je = q.context && (oe.nodeType || oe.jquery) ? _(oe) : _.event,
          rt = _.Deferred(),
          Ye = _.Callbacks("once memory"),
          gi = q.statusCode || {},
          oi = {},
          Fn = {},
          Nn = "canceled",
          it = {
            readyState: 0,
            getResponseHeader: function (st) {
              var jt;
              if (F) {
                if (!w)
                  for (w = {}; (jt = ux.exec(C)); )
                    w[jt[1].toLowerCase() + " "] = (
                      w[jt[1].toLowerCase() + " "] || []
                    ).concat(jt[2]);
                jt = w[st.toLowerCase() + " "];
              }
              return jt == null ? null : jt.join(", ");
            },
            getAllResponseHeaders: function () {
              return F ? C : null;
            },
            setRequestHeader: function (st, jt) {
              return (
                F == null &&
                  ((st = Fn[st.toLowerCase()] = Fn[st.toLowerCase()] || st),
                  (oi[st] = jt)),
                this
              );
            },
            overrideMimeType: function (st) {
              return F == null && (q.mimeType = st), this;
            },
            statusCode: function (st) {
              var jt;
              if (st)
                if (F) it.always(st[it.status]);
                else for (jt in st) gi[jt] = [gi[jt], st[jt]];
              return this;
            },
            abort: function (st) {
              var jt = st || Nn;
              return g && g.abort(jt), io(0, jt), this;
            },
          };
        if (
          (rt.promise(it),
          (q.url = ((s || q.url || ja.href) + "").replace(
            mx,
            ja.protocol + "//"
          )),
          (q.type = p.method || p.type || q.method || q.type),
          (q.dataTypes = (q.dataType || "*").toLowerCase().match(An) || [""]),
          q.crossDomain == null)
        ) {
          L = A.createElement("a");
          try {
            (L.href = q.url),
              (L.href = L.href),
              (q.crossDomain =
                Iu.protocol + "//" + Iu.host != L.protocol + "//" + L.host);
          } catch {
            q.crossDomain = !0;
          }
        }
        if (
          (q.data &&
            q.processData &&
            typeof q.data != "string" &&
            (q.data = _.param(q.data, q.traditional)),
          rg(tg, q, p, it),
          F)
        )
          return it;
        (U = _.event && q.global),
          U && _.active++ === 0 && _.event.trigger("ajaxStart"),
          (q.type = q.type.toUpperCase()),
          (q.hasContent = !px.test(q.type)),
          (b = q.url.replace(cx, "")),
          q.hasContent
            ? q.data &&
              q.processData &&
              (q.contentType || "").indexOf(
                "application/x-www-form-urlencoded"
              ) === 0 &&
              (q.data = q.data.replace(lx, "+"))
            : ((ie = q.url.slice(b.length)),
              q.data &&
                (q.processData || typeof q.data == "string") &&
                ((b += (Ou.test(b) ? "&" : "?") + q.data), delete q.data),
              q.cache === !1 &&
                ((b = b.replace(dx, "$1")),
                (ie = (Ou.test(b) ? "&" : "?") + "_=" + Xf.guid++ + ie)),
              (q.url = b + ie)),
          q.ifModified &&
            (_.lastModified[b] &&
              it.setRequestHeader("If-Modified-Since", _.lastModified[b]),
            _.etag[b] && it.setRequestHeader("If-None-Match", _.etag[b])),
          ((q.data && q.hasContent && q.contentType !== !1) || p.contentType) &&
            it.setRequestHeader("Content-Type", q.contentType),
          it.setRequestHeader(
            "Accept",
            q.dataTypes[0] && q.accepts[q.dataTypes[0]]
              ? q.accepts[q.dataTypes[0]] +
                  (q.dataTypes[0] !== "*" ? ", " + ig + "; q=0.01" : "")
              : q.accepts["*"]
          );
        for (Z in q.headers) it.setRequestHeader(Z, q.headers[Z]);
        if (q.beforeSend && (q.beforeSend.call(oe, it, q) === !1 || F))
          return it.abort();
        if (
          ((Nn = "abort"),
          Ye.add(q.complete),
          it.done(q.success),
          it.fail(q.error),
          (g = rg(Pu, q, p, it)),
          !g)
        )
          io(-1, "No Transport");
        else {
          if (((it.readyState = 1), U && je.trigger("ajaxSend", [it, q]), F))
            return it;
          q.async &&
            q.timeout > 0 &&
            (S = n.setTimeout(function () {
              it.abort("timeout");
            }, q.timeout));
          try {
            (F = !1), g.send(oi, io);
          } catch (st) {
            if (F) throw st;
            io(-1, st);
          }
        }
        function io(st, jt, za, Fu) {
          var Ln,
            $a,
            Vn,
            Dr,
            Sr,
            rn = jt;
          F ||
            ((F = !0),
            S && n.clearTimeout(S),
            (g = void 0),
            (C = Fu || ""),
            (it.readyState = st > 0 ? 4 : 0),
            (Ln = (st >= 200 && st < 300) || st === 304),
            za && (Dr = fx(q, it, za)),
            !Ln &&
              _.inArray("script", q.dataTypes) > -1 &&
              _.inArray("json", q.dataTypes) < 0 &&
              (q.converters["text script"] = function () {}),
            (Dr = gx(q, Dr, it, Ln)),
            Ln
              ? (q.ifModified &&
                  ((Sr = it.getResponseHeader("Last-Modified")),
                  Sr && (_.lastModified[b] = Sr),
                  (Sr = it.getResponseHeader("etag")),
                  Sr && (_.etag[b] = Sr)),
                st === 204 || q.type === "HEAD"
                  ? (rn = "nocontent")
                  : st === 304
                  ? (rn = "notmodified")
                  : ((rn = Dr.state),
                    ($a = Dr.data),
                    (Vn = Dr.error),
                    (Ln = !Vn)))
              : ((Vn = rn),
                (st || !rn) && ((rn = "error"), st < 0 && (st = 0))),
            (it.status = st),
            (it.statusText = (jt || rn) + ""),
            Ln
              ? rt.resolveWith(oe, [$a, rn, it])
              : rt.rejectWith(oe, [it, rn, Vn]),
            it.statusCode(gi),
            (gi = void 0),
            U &&
              je.trigger(Ln ? "ajaxSuccess" : "ajaxError", [
                it,
                q,
                Ln ? $a : Vn,
              ]),
            Ye.fireWith(oe, [it, rn]),
            U &&
              (je.trigger("ajaxComplete", [it, q]),
              --_.active || _.event.trigger("ajaxStop")));
        }
        return it;
      },
      getJSON: function (s, p, g) {
        return _.get(s, p, g, "json");
      },
      getScript: function (s, p) {
        return _.get(s, void 0, p, "script");
      },
    }),
      _.each(["get", "post"], function (s, p) {
        _[p] = function (g, b, C, w) {
          return (
            k(b) && ((w = w || C), (C = b), (b = void 0)),
            _.ajax(
              _.extend(
                { url: g, type: p, dataType: w, data: b, success: C },
                _.isPlainObject(g) && g
              )
            )
          );
        };
      }),
      _.ajaxPrefilter(function (s) {
        var p;
        for (p in s.headers)
          p.toLowerCase() === "content-type" &&
            (s.contentType = s.headers[p] || "");
      }),
      (_._evalUrl = function (s, p, g) {
        return _.ajax({
          url: s,
          type: "GET",
          dataType: "script",
          cache: !0,
          async: !1,
          global: !1,
          converters: { "text script": function () {} },
          dataFilter: function (b) {
            _.globalEval(b, p, g);
          },
        });
      }),
      _.fn.extend({
        wrapAll: function (s) {
          var p;
          return (
            this[0] &&
              (k(s) && (s = s.call(this[0])),
              (p = _(s, this[0].ownerDocument).eq(0).clone(!0)),
              this[0].parentNode && p.insertBefore(this[0]),
              p
                .map(function () {
                  for (var g = this; g.firstElementChild; )
                    g = g.firstElementChild;
                  return g;
                })
                .append(this)),
            this
          );
        },
        wrapInner: function (s) {
          return k(s)
            ? this.each(function (p) {
                _(this).wrapInner(s.call(this, p));
              })
            : this.each(function () {
                var p = _(this),
                  g = p.contents();
                g.length ? g.wrapAll(s) : p.append(s);
              });
        },
        wrap: function (s) {
          var p = k(s);
          return this.each(function (g) {
            _(this).wrapAll(p ? s.call(this, g) : s);
          });
        },
        unwrap: function (s) {
          return (
            this.parent(s)
              .not("body")
              .each(function () {
                _(this).replaceWith(this.childNodes);
              }),
            this
          );
        },
      }),
      (_.expr.pseudos.hidden = function (s) {
        return !_.expr.pseudos.visible(s);
      }),
      (_.expr.pseudos.visible = function (s) {
        return !!(s.offsetWidth || s.offsetHeight || s.getClientRects().length);
      }),
      (_.ajaxSettings.xhr = function () {
        try {
          return new n.XMLHttpRequest();
        } catch {}
      });
    var _x = { 0: 200, 1223: 204 },
      Ua = _.ajaxSettings.xhr();
    (M.cors = !!Ua && "withCredentials" in Ua),
      (M.ajax = Ua = !!Ua),
      _.ajaxTransport(function (s) {
        var p, g;
        if (M.cors || (Ua && !s.crossDomain))
          return {
            send: function (b, C) {
              var w,
                S = s.xhr();
              if (
                (S.open(s.type, s.url, s.async, s.username, s.password),
                s.xhrFields)
              )
                for (w in s.xhrFields) S[w] = s.xhrFields[w];
              s.mimeType &&
                S.overrideMimeType &&
                S.overrideMimeType(s.mimeType),
                !s.crossDomain &&
                  !b["X-Requested-With"] &&
                  (b["X-Requested-With"] = "XMLHttpRequest");
              for (w in b) S.setRequestHeader(w, b[w]);
              (p = function (L) {
                return function () {
                  p &&
                    ((p =
                      g =
                      S.onload =
                      S.onerror =
                      S.onabort =
                      S.ontimeout =
                      S.onreadystatechange =
                        null),
                    L === "abort"
                      ? S.abort()
                      : L === "error"
                      ? typeof S.status != "number"
                        ? C(0, "error")
                        : C(S.status, S.statusText)
                      : C(
                          _x[S.status] || S.status,
                          S.statusText,
                          (S.responseType || "text") !== "text" ||
                            typeof S.responseText != "string"
                            ? { binary: S.response }
                            : { text: S.responseText },
                          S.getAllResponseHeaders()
                        ));
                };
              }),
                (S.onload = p()),
                (g = S.onerror = S.ontimeout = p("error")),
                S.onabort !== void 0
                  ? (S.onabort = g)
                  : (S.onreadystatechange = function () {
                      S.readyState === 4 &&
                        n.setTimeout(function () {
                          p && g();
                        });
                    }),
                (p = p("abort"));
              try {
                S.send((s.hasContent && s.data) || null);
              } catch (L) {
                if (p) throw L;
              }
            },
            abort: function () {
              p && p();
            },
          };
      }),
      _.ajaxPrefilter(function (s) {
        s.crossDomain && (s.contents.script = !1);
      }),
      _.ajaxSetup({
        accepts: {
          script:
            "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
        },
        contents: { script: /\b(?:java|ecma)script\b/ },
        converters: {
          "text script": function (s) {
            return _.globalEval(s), s;
          },
        },
      }),
      _.ajaxPrefilter("script", function (s) {
        s.cache === void 0 && (s.cache = !1), s.crossDomain && (s.type = "GET");
      }),
      _.ajaxTransport("script", function (s) {
        if (s.crossDomain || s.scriptAttrs) {
          var p, g;
          return {
            send: function (b, C) {
              (p = _("<script>")
                .attr(s.scriptAttrs || {})
                .prop({ charset: s.scriptCharset, src: s.url })
                .on(
                  "load error",
                  (g = function (w) {
                    p.remove(),
                      (g = null),
                      w && C(w.type === "error" ? 404 : 200, w.type);
                  })
                )),
                A.head.appendChild(p[0]);
            },
            abort: function () {
              g && g();
            },
          };
        }
      });
    var og = [],
      Ru = /(=)\?(?=&|$)|\?\?/;
    _.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function () {
        var s = og.pop() || _.expando + "_" + Xf.guid++;
        return (this[s] = !0), s;
      },
    }),
      _.ajaxPrefilter("json jsonp", function (s, p, g) {
        var b,
          C,
          w,
          S =
            s.jsonp !== !1 &&
            (Ru.test(s.url)
              ? "url"
              : typeof s.data == "string" &&
                (s.contentType || "").indexOf(
                  "application/x-www-form-urlencoded"
                ) === 0 &&
                Ru.test(s.data) &&
                "data");
        if (S || s.dataTypes[0] === "jsonp")
          return (
            (b = s.jsonpCallback =
              k(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback),
            S
              ? (s[S] = s[S].replace(Ru, "$1" + b))
              : s.jsonp !== !1 &&
                (s.url += (Ou.test(s.url) ? "&" : "?") + s.jsonp + "=" + b),
            (s.converters["script json"] = function () {
              return w || _.error(b + " was not called"), w[0];
            }),
            (s.dataTypes[0] = "json"),
            (C = n[b]),
            (n[b] = function () {
              w = arguments;
            }),
            g.always(function () {
              C === void 0 ? _(n).removeProp(b) : (n[b] = C),
                s[b] && ((s.jsonpCallback = p.jsonpCallback), og.push(b)),
                w && k(C) && C(w[0]),
                (w = C = void 0);
            }),
            "script"
          );
      }),
      (M.createHTMLDocument = (function () {
        var s = A.implementation.createHTMLDocument("").body;
        return (
          (s.innerHTML = "<form></form><form></form>"),
          s.childNodes.length === 2
        );
      })()),
      (_.parseHTML = function (s, p, g) {
        if (typeof s != "string") return [];
        typeof p == "boolean" && ((g = p), (p = !1));
        var b, C, w;
        return (
          p ||
            (M.createHTMLDocument
              ? ((p = A.implementation.createHTMLDocument("")),
                (b = p.createElement("base")),
                (b.href = A.location.href),
                p.head.appendChild(b))
              : (p = A)),
          (C = Xr.exec(s)),
          (w = !g && []),
          C
            ? [p.createElement(C[1])]
            : ((C = Ff([s], p, w)),
              w && w.length && _(w).remove(),
              _.merge([], C.childNodes))
        );
      }),
      (_.fn.load = function (s, p, g) {
        var b,
          C,
          w,
          S = this,
          L = s.indexOf(" ");
        return (
          L > -1 && ((b = eo(s.slice(L))), (s = s.slice(0, L))),
          k(p)
            ? ((g = p), (p = void 0))
            : p && typeof p == "object" && (C = "POST"),
          S.length > 0 &&
            _.ajax({ url: s, type: C || "GET", dataType: "html", data: p })
              .done(function (F) {
                (w = arguments),
                  S.html(b ? _("<div>").append(_.parseHTML(F)).find(b) : F);
              })
              .always(
                g &&
                  function (F, U) {
                    S.each(function () {
                      g.apply(this, w || [F.responseText, U, F]);
                    });
                  }
              ),
          this
        );
      }),
      (_.expr.pseudos.animated = function (s) {
        return _.grep(_.timers, function (p) {
          return s === p.elem;
        }).length;
      }),
      (_.offset = {
        setOffset: function (s, p, g) {
          var b,
            C,
            w,
            S,
            L,
            F,
            U,
            Z = _.css(s, "position"),
            ie = _(s),
            q = {};
          Z === "static" && (s.style.position = "relative"),
            (L = ie.offset()),
            (w = _.css(s, "top")),
            (F = _.css(s, "left")),
            (U =
              (Z === "absolute" || Z === "fixed") &&
              (w + F).indexOf("auto") > -1),
            U
              ? ((b = ie.position()), (S = b.top), (C = b.left))
              : ((S = parseFloat(w) || 0), (C = parseFloat(F) || 0)),
            k(p) && (p = p.call(s, g, _.extend({}, L))),
            p.top != null && (q.top = p.top - L.top + S),
            p.left != null && (q.left = p.left - L.left + C),
            "using" in p ? p.using.call(s, q) : ie.css(q);
        },
      }),
      _.fn.extend({
        offset: function (s) {
          if (arguments.length)
            return s === void 0
              ? this
              : this.each(function (C) {
                  _.offset.setOffset(this, s, C);
                });
          var p,
            g,
            b = this[0];
          if (b)
            return b.getClientRects().length
              ? ((p = b.getBoundingClientRect()),
                (g = b.ownerDocument.defaultView),
                { top: p.top + g.pageYOffset, left: p.left + g.pageXOffset })
              : { top: 0, left: 0 };
        },
        position: function () {
          if (this[0]) {
            var s,
              p,
              g,
              b = this[0],
              C = { top: 0, left: 0 };
            if (_.css(b, "position") === "fixed") p = b.getBoundingClientRect();
            else {
              for (
                p = this.offset(),
                  g = b.ownerDocument,
                  s = b.offsetParent || g.documentElement;
                s &&
                (s === g.body || s === g.documentElement) &&
                _.css(s, "position") === "static";

              )
                s = s.parentNode;
              s &&
                s !== b &&
                s.nodeType === 1 &&
                ((C = _(s).offset()),
                (C.top += _.css(s, "borderTopWidth", !0)),
                (C.left += _.css(s, "borderLeftWidth", !0)));
            }
            return {
              top: p.top - C.top - _.css(b, "marginTop", !0),
              left: p.left - C.left - _.css(b, "marginLeft", !0),
            };
          }
        },
        offsetParent: function () {
          return this.map(function () {
            for (
              var s = this.offsetParent;
              s && _.css(s, "position") === "static";

            )
              s = s.offsetParent;
            return s || Jr;
          });
        },
      }),
      _.each(
        { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
        function (s, p) {
          var g = p === "pageYOffset";
          _.fn[s] = function (b) {
            return or(
              this,
              function (C, w, S) {
                var L;
                if (
                  (V(C) ? (L = C) : C.nodeType === 9 && (L = C.defaultView),
                  S === void 0)
                )
                  return L ? L[p] : C[w];
                L
                  ? L.scrollTo(g ? L.pageXOffset : S, g ? S : L.pageYOffset)
                  : (C[w] = S);
              },
              s,
              b,
              arguments.length
            );
          };
        }
      ),
      _.each(["top", "left"], function (s, p) {
        _.cssHooks[p] = jf(M.pixelPosition, function (g, b) {
          if (b)
            return (b = Ba(g, p)), wu.test(b) ? _(g).position()[p] + "px" : b;
        });
      }),
      _.each({ Height: "height", Width: "width" }, function (s, p) {
        _.each(
          { padding: "inner" + s, content: p, "": "outer" + s },
          function (g, b) {
            _.fn[b] = function (C, w) {
              var S = arguments.length && (g || typeof C != "boolean"),
                L = g || (C === !0 || w === !0 ? "margin" : "border");
              return or(
                this,
                function (F, U, Z) {
                  var ie;
                  return V(F)
                    ? b.indexOf("outer") === 0
                      ? F["inner" + s]
                      : F.document.documentElement["client" + s]
                    : F.nodeType === 9
                    ? ((ie = F.documentElement),
                      Math.max(
                        F.body["scroll" + s],
                        ie["scroll" + s],
                        F.body["offset" + s],
                        ie["offset" + s],
                        ie["client" + s]
                      ))
                    : Z === void 0
                    ? _.css(F, U, L)
                    : _.style(F, U, Z, L);
                },
                p,
                S ? C : void 0,
                S
              );
            };
          }
        );
      }),
      _.each(
        [
          "ajaxStart",
          "ajaxStop",
          "ajaxComplete",
          "ajaxError",
          "ajaxSuccess",
          "ajaxSend",
        ],
        function (s, p) {
          _.fn[p] = function (g) {
            return this.on(p, g);
          };
        }
      ),
      _.fn.extend({
        bind: function (s, p, g) {
          return this.on(s, null, p, g);
        },
        unbind: function (s, p) {
          return this.off(s, null, p);
        },
        delegate: function (s, p, g, b) {
          return this.on(p, s, g, b);
        },
        undelegate: function (s, p, g) {
          return arguments.length === 1
            ? this.off(s, "**")
            : this.off(p, s || "**", g);
        },
        hover: function (s, p) {
          return this.on("mouseenter", s).on("mouseleave", p || s);
        },
      }),
      _.each(
        "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(
          " "
        ),
        function (s, p) {
          _.fn[p] = function (g, b) {
            return arguments.length > 0
              ? this.on(p, null, g, b)
              : this.trigger(p);
          };
        }
      );
    var bx = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    (_.proxy = function (s, p) {
      var g, b, C;
      if ((typeof p == "string" && ((g = s[p]), (p = s), (s = g)), !!k(s)))
        return (
          (b = r.call(arguments, 2)),
          (C = function () {
            return s.apply(p || this, b.concat(r.call(arguments)));
          }),
          (C.guid = s.guid = s.guid || _.guid++),
          C
        );
    }),
      (_.holdReady = function (s) {
        s ? _.readyWait++ : _.ready(!0);
      }),
      (_.isArray = Array.isArray),
      (_.parseJSON = JSON.parse),
      (_.nodeName = De),
      (_.isFunction = k),
      (_.isWindow = V),
      (_.camelCase = Rn),
      (_.type = se),
      (_.now = Date.now),
      (_.isNumeric = function (s) {
        var p = _.type(s);
        return (p === "number" || p === "string") && !isNaN(s - parseFloat(s));
      }),
      (_.trim = function (s) {
        return s == null ? "" : (s + "").replace(bx, "$1");
      }),
      typeof define == "function" &&
        define.amd &&
        define("jquery", [], function () {
          return _;
        });
    var vx = n.jQuery,
      yx = n.$;
    return (
      (_.noConflict = function (s) {
        return (
          n.$ === _ && (n.$ = yx), s && n.jQuery === _ && (n.jQuery = vx), _
        );
      }),
      typeof i > "u" && (n.jQuery = n.$ = _),
      _
    );
  });
});
var as = class {},
  rc = class {},
  St = class n {
    constructor(i) {
      (this.normalizedNames = new Map()),
        (this.lazyUpdate = null),
        i
          ? typeof i == "string"
            ? (this.lazyInit = () => {
                (this.headers = new Map()),
                  i
                    .split(
                      `
`
                    )
                    .forEach((e) => {
                      let t = e.indexOf(":");
                      if (t > 0) {
                        let r = e.slice(0, t),
                          o = r.toLowerCase(),
                          a = e.slice(t + 1).trim();
                        this.maybeSetNormalizedName(r, o),
                          this.headers.has(o)
                            ? this.headers.get(o).push(a)
                            : this.headers.set(o, [a]);
                      }
                    });
              })
            : typeof Headers < "u" && i instanceof Headers
            ? ((this.headers = new Map()),
              i.forEach((e, t) => {
                this.setHeaderEntries(t, e);
              }))
            : (this.lazyInit = () => {
                (this.headers = new Map()),
                  Object.entries(i).forEach(([e, t]) => {
                    this.setHeaderEntries(e, t);
                  });
              })
          : (this.headers = new Map());
    }
    has(i) {
      return this.init(), this.headers.has(i.toLowerCase());
    }
    get(i) {
      this.init();
      let e = this.headers.get(i.toLowerCase());
      return e && e.length > 0 ? e[0] : null;
    }
    keys() {
      return this.init(), Array.from(this.normalizedNames.values());
    }
    getAll(i) {
      return this.init(), this.headers.get(i.toLowerCase()) || null;
    }
    append(i, e) {
      return this.clone({ name: i, value: e, op: "a" });
    }
    set(i, e) {
      return this.clone({ name: i, value: e, op: "s" });
    }
    delete(i, e) {
      return this.clone({ name: i, value: e, op: "d" });
    }
    maybeSetNormalizedName(i, e) {
      this.normalizedNames.has(e) || this.normalizedNames.set(e, i);
    }
    init() {
      this.lazyInit &&
        (this.lazyInit instanceof n
          ? this.copyFrom(this.lazyInit)
          : this.lazyInit(),
        (this.lazyInit = null),
        this.lazyUpdate &&
          (this.lazyUpdate.forEach((i) => this.applyUpdate(i)),
          (this.lazyUpdate = null)));
    }
    copyFrom(i) {
      i.init(),
        Array.from(i.headers.keys()).forEach((e) => {
          this.headers.set(e, i.headers.get(e)),
            this.normalizedNames.set(e, i.normalizedNames.get(e));
        });
    }
    clone(i) {
      let e = new n();
      return (
        (e.lazyInit =
          this.lazyInit && this.lazyInit instanceof n ? this.lazyInit : this),
        (e.lazyUpdate = (this.lazyUpdate || []).concat([i])),
        e
      );
    }
    applyUpdate(i) {
      let e = i.name.toLowerCase();
      switch (i.op) {
        case "a":
        case "s":
          let t = i.value;
          if ((typeof t == "string" && (t = [t]), t.length === 0)) return;
          this.maybeSetNormalizedName(i.name, e);
          let r = (i.op === "a" ? this.headers.get(e) : void 0) || [];
          r.push(...t), this.headers.set(e, r);
          break;
        case "d":
          let o = i.value;
          if (!o) this.headers.delete(e), this.normalizedNames.delete(e);
          else {
            let a = this.headers.get(e);
            if (!a) return;
            (a = a.filter((l) => o.indexOf(l) === -1)),
              a.length === 0
                ? (this.headers.delete(e), this.normalizedNames.delete(e))
                : this.headers.set(e, a);
          }
          break;
      }
    }
    setHeaderEntries(i, e) {
      let t = (Array.isArray(e) ? e : [e]).map((o) => o.toString()),
        r = i.toLowerCase();
      this.headers.set(r, t), this.maybeSetNormalizedName(i, r);
    }
    forEach(i) {
      this.init(),
        Array.from(this.normalizedNames.keys()).forEach((e) =>
          i(this.normalizedNames.get(e), this.headers.get(e))
        );
    }
  };
var uh = class {
  encodeKey(i) {
    return Zg(i);
  }
  encodeValue(i) {
    return Zg(i);
  }
  decodeKey(i) {
    return decodeURIComponent(i);
  }
  decodeValue(i) {
    return decodeURIComponent(i);
  }
};
function Px(n, i) {
  let e = new Map();
  return (
    n.length > 0 &&
      n
        .replace(/^\?/, "")
        .split("&")
        .forEach((r) => {
          let o = r.indexOf("="),
            [a, l] =
              o == -1
                ? [i.decodeKey(r), ""]
                : [i.decodeKey(r.slice(0, o)), i.decodeValue(r.slice(o + 1))],
            u = e.get(a) || [];
          u.push(l), e.set(a, u);
        }),
    e
  );
}
var Ix = /%(\d[a-f0-9])/gi,
  Ax = {
    40: "@",
    "3A": ":",
    24: "$",
    "2C": ",",
    "3B": ";",
    "3D": "=",
    "3F": "?",
    "2F": "/",
  };
function Zg(n) {
  return encodeURIComponent(n).replace(Ix, (i, e) => Ax[e] ?? i);
}
function ic(n) {
  return `${n}`;
}
var Sn = class n {
  constructor(i = {}) {
    if (
      ((this.updates = null),
      (this.cloneFrom = null),
      (this.encoder = i.encoder || new uh()),
      i.fromString)
    ) {
      if (i.fromObject)
        throw new Error("Cannot specify both fromString and fromObject.");
      this.map = Px(i.fromString, this.encoder);
    } else
      i.fromObject
        ? ((this.map = new Map()),
          Object.keys(i.fromObject).forEach((e) => {
            let t = i.fromObject[e],
              r = Array.isArray(t) ? t.map(ic) : [ic(t)];
            this.map.set(e, r);
          }))
        : (this.map = null);
  }
  has(i) {
    return this.init(), this.map.has(i);
  }
  get(i) {
    this.init();
    let e = this.map.get(i);
    return e ? e[0] : null;
  }
  getAll(i) {
    return this.init(), this.map.get(i) || null;
  }
  keys() {
    return this.init(), Array.from(this.map.keys());
  }
  append(i, e) {
    return this.clone({ param: i, value: e, op: "a" });
  }
  appendAll(i) {
    let e = [];
    return (
      Object.keys(i).forEach((t) => {
        let r = i[t];
        Array.isArray(r)
          ? r.forEach((o) => {
              e.push({ param: t, value: o, op: "a" });
            })
          : e.push({ param: t, value: r, op: "a" });
      }),
      this.clone(e)
    );
  }
  set(i, e) {
    return this.clone({ param: i, value: e, op: "s" });
  }
  delete(i, e) {
    return this.clone({ param: i, value: e, op: "d" });
  }
  toString() {
    return (
      this.init(),
      this.keys()
        .map((i) => {
          let e = this.encoder.encodeKey(i);
          return this.map
            .get(i)
            .map((t) => e + "=" + this.encoder.encodeValue(t))
            .join("&");
        })
        .filter((i) => i !== "")
        .join("&")
    );
  }
  clone(i) {
    let e = new n({ encoder: this.encoder });
    return (
      (e.cloneFrom = this.cloneFrom || this),
      (e.updates = (this.updates || []).concat(i)),
      e
    );
  }
  init() {
    this.map === null && (this.map = new Map()),
      this.cloneFrom !== null &&
        (this.cloneFrom.init(),
        this.cloneFrom
          .keys()
          .forEach((i) => this.map.set(i, this.cloneFrom.map.get(i))),
        this.updates.forEach((i) => {
          switch (i.op) {
            case "a":
            case "s":
              let e = (i.op === "a" ? this.map.get(i.param) : void 0) || [];
              e.push(ic(i.value)), this.map.set(i.param, e);
              break;
            case "d":
              if (i.value !== void 0) {
                let t = this.map.get(i.param) || [],
                  r = t.indexOf(ic(i.value));
                r !== -1 && t.splice(r, 1),
                  t.length > 0
                    ? this.map.set(i.param, t)
                    : this.map.delete(i.param);
              } else {
                this.map.delete(i.param);
                break;
              }
          }
        }),
        (this.cloneFrom = this.updates = null));
  }
};
var hh = class {
  constructor() {
    this.map = new Map();
  }
  set(i, e) {
    return this.map.set(i, e), this;
  }
  get(i) {
    return (
      this.map.has(i) || this.map.set(i, i.defaultValue()), this.map.get(i)
    );
  }
  delete(i) {
    return this.map.delete(i), this;
  }
  has(i) {
    return this.map.has(i);
  }
  keys() {
    return this.map.keys();
  }
};
function Rx(n) {
  switch (n) {
    case "DELETE":
    case "GET":
    case "HEAD":
    case "OPTIONS":
    case "JSONP":
      return !1;
    default:
      return !0;
  }
}
function Jg(n) {
  return typeof ArrayBuffer < "u" && n instanceof ArrayBuffer;
}
function e0(n) {
  return typeof Blob < "u" && n instanceof Blob;
}
function t0(n) {
  return typeof FormData < "u" && n instanceof FormData;
}
function Fx(n) {
  return typeof URLSearchParams < "u" && n instanceof URLSearchParams;
}
var os = class n {
    constructor(i, e, t, r) {
      (this.url = e),
        (this.body = null),
        (this.reportProgress = !1),
        (this.withCredentials = !1),
        (this.responseType = "json"),
        (this.method = i.toUpperCase());
      let o;
      if (
        (Rx(this.method) || r
          ? ((this.body = t !== void 0 ? t : null), (o = r))
          : (o = t),
        o &&
          ((this.reportProgress = !!o.reportProgress),
          (this.withCredentials = !!o.withCredentials),
          o.responseType && (this.responseType = o.responseType),
          o.headers && (this.headers = o.headers),
          o.context && (this.context = o.context),
          o.params && (this.params = o.params),
          (this.transferCache = o.transferCache)),
        (this.headers ??= new St()),
        (this.context ??= new hh()),
        !this.params)
      )
        (this.params = new Sn()), (this.urlWithParams = e);
      else {
        let a = this.params.toString();
        if (a.length === 0) this.urlWithParams = e;
        else {
          let l = e.indexOf("?"),
            u = l === -1 ? "?" : l < e.length - 1 ? "&" : "";
          this.urlWithParams = e + u + a;
        }
      }
    }
    serializeBody() {
      return this.body === null
        ? null
        : typeof this.body == "string" ||
          Jg(this.body) ||
          e0(this.body) ||
          t0(this.body) ||
          Fx(this.body)
        ? this.body
        : this.body instanceof Sn
        ? this.body.toString()
        : typeof this.body == "object" ||
          typeof this.body == "boolean" ||
          Array.isArray(this.body)
        ? JSON.stringify(this.body)
        : this.body.toString();
    }
    detectContentTypeHeader() {
      return this.body === null || t0(this.body)
        ? null
        : e0(this.body)
        ? this.body.type || null
        : Jg(this.body)
        ? null
        : typeof this.body == "string"
        ? "text/plain"
        : this.body instanceof Sn
        ? "application/x-www-form-urlencoded;charset=UTF-8"
        : typeof this.body == "object" ||
          typeof this.body == "number" ||
          typeof this.body == "boolean"
        ? "application/json"
        : null;
    }
    clone(i = {}) {
      let e = i.method || this.method,
        t = i.url || this.url,
        r = i.responseType || this.responseType,
        o = i.transferCache ?? this.transferCache,
        a = i.body !== void 0 ? i.body : this.body,
        l = i.withCredentials ?? this.withCredentials,
        u = i.reportProgress ?? this.reportProgress,
        f = i.headers || this.headers,
        v = i.params || this.params,
        D = i.context ?? this.context;
      return (
        i.setHeaders !== void 0 &&
          (f = Object.keys(i.setHeaders).reduce(
            (T, M) => T.set(M, i.setHeaders[M]),
            f
          )),
        i.setParams &&
          (v = Object.keys(i.setParams).reduce(
            (T, M) => T.set(M, i.setParams[M]),
            v
          )),
        new n(e, t, a, {
          params: v,
          headers: f,
          context: D,
          reportProgress: u,
          responseType: r,
          withCredentials: l,
          transferCache: o,
        })
      );
    }
  },
  Ar = (function (n) {
    return (
      (n[(n.Sent = 0)] = "Sent"),
      (n[(n.UploadProgress = 1)] = "UploadProgress"),
      (n[(n.ResponseHeader = 2)] = "ResponseHeader"),
      (n[(n.DownloadProgress = 3)] = "DownloadProgress"),
      (n[(n.Response = 4)] = "Response"),
      (n[(n.User = 5)] = "User"),
      n
    );
  })(Ar || {}),
  ss = class {
    constructor(i, e = 200, t = "OK") {
      (this.headers = i.headers || new St()),
        (this.status = i.status !== void 0 ? i.status : e),
        (this.statusText = i.statusText || t),
        (this.url = i.url || null),
        (this.ok = this.status >= 200 && this.status < 300);
    }
  },
  oc = class n extends ss {
    constructor(i = {}) {
      super(i), (this.type = Ar.ResponseHeader);
    }
    clone(i = {}) {
      return new n({
        headers: i.headers || this.headers,
        status: i.status !== void 0 ? i.status : this.status,
        statusText: i.statusText || this.statusText,
        url: i.url || this.url || void 0,
      });
    }
  },
  lo = class n extends ss {
    constructor(i = {}) {
      super(i),
        (this.type = Ar.Response),
        (this.body = i.body !== void 0 ? i.body : null);
    }
    clone(i = {}) {
      return new n({
        body: i.body !== void 0 ? i.body : this.body,
        headers: i.headers || this.headers,
        status: i.status !== void 0 ? i.status : this.status,
        statusText: i.statusText || this.statusText,
        url: i.url || this.url || void 0,
      });
    }
  },
  Ir = class extends ss {
    constructor(i) {
      super(i, 0, "Unknown Error"),
        (this.name = "HttpErrorResponse"),
        (this.ok = !1),
        this.status >= 200 && this.status < 300
          ? (this.message = `Http failure during parsing for ${
              i.url || "(unknown url)"
            }`)
          : (this.message = `Http failure response for ${
              i.url || "(unknown url)"
            }: ${i.status} ${i.statusText}`),
        (this.error = i.error || null);
    }
  },
  p0 = 200,
  Nx = 204;
function dh(n, i) {
  return {
    body: i,
    headers: n.headers,
    context: n.context,
    observe: n.observe,
    params: n.params,
    reportProgress: n.reportProgress,
    responseType: n.responseType,
    withCredentials: n.withCredentials,
    transferCache: n.transferCache,
  };
}
var Bt = (() => {
    class n {
      constructor(e) {
        this.handler = e;
      }
      request(e, t, r = {}) {
        let o;
        if (e instanceof os) o = e;
        else {
          let u;
          r.headers instanceof St ? (u = r.headers) : (u = new St(r.headers));
          let f;
          r.params &&
            (r.params instanceof Sn
              ? (f = r.params)
              : (f = new Sn({ fromObject: r.params }))),
            (o = new os(e, t, r.body !== void 0 ? r.body : null, {
              headers: u,
              context: r.context,
              params: f,
              reportProgress: r.reportProgress,
              responseType: r.responseType || "json",
              withCredentials: r.withCredentials,
              transferCache: r.transferCache,
            }));
        }
        let a = fe(o).pipe(Tr((u) => this.handler.handle(u)));
        if (e instanceof os || r.observe === "events") return a;
        let l = a.pipe(Ct((u) => u instanceof lo));
        switch (r.observe || "body") {
          case "body":
            switch (o.responseType) {
              case "arraybuffer":
                return l.pipe(
                  qe((u) => {
                    if (u.body !== null && !(u.body instanceof ArrayBuffer))
                      throw new Error("Response is not an ArrayBuffer.");
                    return u.body;
                  })
                );
              case "blob":
                return l.pipe(
                  qe((u) => {
                    if (u.body !== null && !(u.body instanceof Blob))
                      throw new Error("Response is not a Blob.");
                    return u.body;
                  })
                );
              case "text":
                return l.pipe(
                  qe((u) => {
                    if (u.body !== null && typeof u.body != "string")
                      throw new Error("Response is not a string.");
                    return u.body;
                  })
                );
              case "json":
              default:
                return l.pipe(qe((u) => u.body));
            }
          case "response":
            return l;
          default:
            throw new Error(
              `Unreachable: unhandled observe type ${r.observe}}`
            );
        }
      }
      delete(e, t = {}) {
        return this.request("DELETE", e, t);
      }
      get(e, t = {}) {
        return this.request("GET", e, t);
      }
      head(e, t = {}) {
        return this.request("HEAD", e, t);
      }
      jsonp(e, t) {
        return this.request("JSONP", e, {
          params: new Sn().append(t, "JSONP_CALLBACK"),
          observe: "body",
          responseType: "json",
        });
      }
      options(e, t = {}) {
        return this.request("OPTIONS", e, t);
      }
      patch(e, t, r = {}) {
        return this.request("PATCH", e, dh(r, t));
      }
      post(e, t, r = {}) {
        return this.request("POST", e, dh(r, t));
      }
      put(e, t, r = {}) {
        return this.request("PUT", e, dh(r, t));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(as));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  Lx = /^\)\]\}',?\n/,
  Vx = "X-Request-URL";
function i0(n) {
  if (n.url) return n.url;
  let i = Vx.toLocaleLowerCase();
  return n.headers.get(i);
}
var Bx = (() => {
    class n {
      constructor() {
        (this.fetchImpl =
          G(ph, { optional: !0 })?.fetch ?? ((...e) => globalThis.fetch(...e))),
          (this.ngZone = G(Te));
      }
      handle(e) {
        return new Hn((t) => {
          let r = new AbortController();
          return (
            this.doRequest(e, r.signal, t).then(mh, (o) =>
              t.error(new Ir({ error: o }))
            ),
            () => r.abort()
          );
        });
      }
      doRequest(e, t, r) {
        return Uo(this, null, function* () {
          let o = this.createRequestInit(e),
            a;
          try {
            let M = this.ngZone.runOutsideAngular(() =>
              this.fetchImpl(e.urlWithParams, W({ signal: t }, o))
            );
            Hx(M), r.next({ type: Ar.Sent }), (a = yield M);
          } catch (M) {
            r.error(
              new Ir({
                error: M,
                status: M.status ?? 0,
                statusText: M.statusText,
                url: e.urlWithParams,
                headers: M.headers,
              })
            );
            return;
          }
          let l = new St(a.headers),
            u = a.statusText,
            f = i0(a) ?? e.urlWithParams,
            v = a.status,
            D = null;
          if (
            (e.reportProgress &&
              r.next(new oc({ headers: l, status: v, statusText: u, url: f })),
            a.body)
          ) {
            let M = a.headers.get("content-length"),
              k = [],
              V = a.body.getReader(),
              A = 0,
              E,
              X,
              se = typeof Zone < "u" && Zone.current;
            yield this.ngZone.runOutsideAngular(() =>
              Uo(this, null, function* () {
                for (;;) {
                  let { done: Ee, value: _ } = yield V.read();
                  if (Ee) break;
                  if ((k.push(_), (A += _.length), e.reportProgress)) {
                    X =
                      e.responseType === "text"
                        ? (X ?? "") +
                          (E ??= new TextDecoder()).decode(_, { stream: !0 })
                        : void 0;
                    let He = () =>
                      r.next({
                        type: Ar.DownloadProgress,
                        total: M ? +M : void 0,
                        loaded: A,
                        partialText: X,
                      });
                    se ? se.run(He) : He();
                  }
                }
              })
            );
            let be = this.concatChunks(k, A);
            try {
              let Ee = a.headers.get("Content-Type") ?? "";
              D = this.parseBody(e, be, Ee);
            } catch (Ee) {
              r.error(
                new Ir({
                  error: Ee,
                  headers: new St(a.headers),
                  status: a.status,
                  statusText: a.statusText,
                  url: i0(a) ?? e.urlWithParams,
                })
              );
              return;
            }
          }
          v === 0 && (v = D ? p0 : 0),
            v >= 200 && v < 300
              ? (r.next(
                  new lo({
                    body: D,
                    headers: l,
                    status: v,
                    statusText: u,
                    url: f,
                  })
                ),
                r.complete())
              : r.error(
                  new Ir({
                    error: D,
                    headers: l,
                    status: v,
                    statusText: u,
                    url: f,
                  })
                );
        });
      }
      parseBody(e, t, r) {
        switch (e.responseType) {
          case "json":
            let o = new TextDecoder().decode(t).replace(Lx, "");
            return o === "" ? null : JSON.parse(o);
          case "text":
            return new TextDecoder().decode(t);
          case "blob":
            return new Blob([t], { type: r });
          case "arraybuffer":
            return t.buffer;
        }
      }
      createRequestInit(e) {
        let t = {},
          r = e.withCredentials ? "include" : void 0;
        if (
          (e.headers.forEach((o, a) => (t[o] = a.join(","))),
          e.headers.has("Accept") ||
            (t.Accept = "application/json, text/plain, */*"),
          !e.headers.has("Content-Type"))
        ) {
          let o = e.detectContentTypeHeader();
          o !== null && (t["Content-Type"] = o);
        }
        return {
          body: e.serializeBody(),
          method: e.method,
          headers: t,
          credentials: r,
        };
      }
      concatChunks(e, t) {
        let r = new Uint8Array(t),
          o = 0;
        for (let a of e) r.set(a, o), (o += a.length);
        return r;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  ph = class {};
function mh() {}
function Hx(n) {
  n.then(mh, mh);
}
function m0(n, i) {
  return i(n);
}
function jx(n, i) {
  return (e, t) => i.intercept(e, { handle: (r) => n(r, t) });
}
function Ux(n, i, e) {
  return (t, r) => sn(e, () => i(t, (o) => n(o, r)));
}
var zx = new we(""),
  fh = new we(""),
  f0 = new we(""),
  g0 = new we("", { providedIn: "root", factory: () => !0 });
function $x() {
  let n = null;
  return (i, e) => {
    n === null && (n = (G(zx, { optional: !0 }) ?? []).reduceRight(jx, m0));
    let t = G(Xa);
    if (G(g0)) {
      let o = t.add();
      return n(i, e).pipe(Er(() => t.remove(o)));
    } else return n(i, e);
  };
}
var n0 = (() => {
  class n extends as {
    constructor(e, t) {
      super(),
        (this.backend = e),
        (this.injector = t),
        (this.chain = null),
        (this.pendingTasks = G(Xa)),
        (this.contributeToStability = G(g0));
    }
    handle(e) {
      if (this.chain === null) {
        let t = Array.from(
          new Set([...this.injector.get(fh), ...this.injector.get(f0, [])])
        );
        this.chain = t.reduceRight((r, o) => Ux(r, o, this.injector), m0);
      }
      if (this.contributeToStability) {
        let t = this.pendingTasks.add();
        return this.chain(e, (r) => this.backend.handle(r)).pipe(
          Er(() => this.pendingTasks.remove(t))
        );
      } else return this.chain(e, (t) => this.backend.handle(t));
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(rc), Q(an));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac });
    }
  }
  return n;
})();
var Wx = /^\)\]\}',?\n/;
function Gx(n) {
  return "responseURL" in n && n.responseURL
    ? n.responseURL
    : /^X-Request-URL:/m.test(n.getAllResponseHeaders())
    ? n.getResponseHeader("X-Request-URL")
    : null;
}
var r0 = (() => {
    class n {
      constructor(e) {
        this.xhrFactory = e;
      }
      handle(e) {
        if (e.method === "JSONP") throw new ct(-2800, !1);
        let t = this.xhrFactory;
        return (t.ɵloadImpl ? ui(t.ɵloadImpl()) : fe(null)).pipe(
          Ci(
            () =>
              new Hn((o) => {
                let a = t.build();
                if (
                  (a.open(e.method, e.urlWithParams),
                  e.withCredentials && (a.withCredentials = !0),
                  e.headers.forEach((V, A) =>
                    a.setRequestHeader(V, A.join(","))
                  ),
                  e.headers.has("Accept") ||
                    a.setRequestHeader(
                      "Accept",
                      "application/json, text/plain, */*"
                    ),
                  !e.headers.has("Content-Type"))
                ) {
                  let V = e.detectContentTypeHeader();
                  V !== null && a.setRequestHeader("Content-Type", V);
                }
                if (e.responseType) {
                  let V = e.responseType.toLowerCase();
                  a.responseType = V !== "json" ? V : "text";
                }
                let l = e.serializeBody(),
                  u = null,
                  f = () => {
                    if (u !== null) return u;
                    let V = a.statusText || "OK",
                      A = new St(a.getAllResponseHeaders()),
                      E = Gx(a) || e.url;
                    return (
                      (u = new oc({
                        headers: A,
                        status: a.status,
                        statusText: V,
                        url: E,
                      })),
                      u
                    );
                  },
                  v = () => {
                    let { headers: V, status: A, statusText: E, url: X } = f(),
                      se = null;
                    A !== Nx &&
                      (se =
                        typeof a.response > "u" ? a.responseText : a.response),
                      A === 0 && (A = se ? p0 : 0);
                    let be = A >= 200 && A < 300;
                    if (e.responseType === "json" && typeof se == "string") {
                      let Ee = se;
                      se = se.replace(Wx, "");
                      try {
                        se = se !== "" ? JSON.parse(se) : null;
                      } catch (_) {
                        (se = Ee),
                          be && ((be = !1), (se = { error: _, text: se }));
                      }
                    }
                    be
                      ? (o.next(
                          new lo({
                            body: se,
                            headers: V,
                            status: A,
                            statusText: E,
                            url: X || void 0,
                          })
                        ),
                        o.complete())
                      : o.error(
                          new Ir({
                            error: se,
                            headers: V,
                            status: A,
                            statusText: E,
                            url: X || void 0,
                          })
                        );
                  },
                  D = (V) => {
                    let { url: A } = f(),
                      E = new Ir({
                        error: V,
                        status: a.status || 0,
                        statusText: a.statusText || "Unknown Error",
                        url: A || void 0,
                      });
                    o.error(E);
                  },
                  T = !1,
                  M = (V) => {
                    T || (o.next(f()), (T = !0));
                    let A = { type: Ar.DownloadProgress, loaded: V.loaded };
                    V.lengthComputable && (A.total = V.total),
                      e.responseType === "text" &&
                        a.responseText &&
                        (A.partialText = a.responseText),
                      o.next(A);
                  },
                  k = (V) => {
                    let A = { type: Ar.UploadProgress, loaded: V.loaded };
                    V.lengthComputable && (A.total = V.total), o.next(A);
                  };
                return (
                  a.addEventListener("load", v),
                  a.addEventListener("error", D),
                  a.addEventListener("timeout", D),
                  a.addEventListener("abort", D),
                  e.reportProgress &&
                    (a.addEventListener("progress", M),
                    l !== null &&
                      a.upload &&
                      a.upload.addEventListener("progress", k)),
                  a.send(l),
                  o.next({ type: Ar.Sent }),
                  () => {
                    a.removeEventListener("error", D),
                      a.removeEventListener("abort", D),
                      a.removeEventListener("load", v),
                      a.removeEventListener("timeout", D),
                      e.reportProgress &&
                        (a.removeEventListener("progress", M),
                        l !== null &&
                          a.upload &&
                          a.upload.removeEventListener("progress", k)),
                      a.readyState !== a.DONE && a.abort();
                  }
                );
              })
          )
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(tc));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  _0 = new we(""),
  Yx = "XSRF-TOKEN",
  qx = new we("", { providedIn: "root", factory: () => Yx }),
  Kx = "X-XSRF-TOKEN",
  Qx = new we("", { providedIn: "root", factory: () => Kx }),
  ac = class {},
  Xx = (() => {
    class n {
      constructor(e, t, r) {
        (this.doc = e),
          (this.platform = t),
          (this.cookieName = r),
          (this.lastCookieString = ""),
          (this.lastToken = null),
          (this.parseCount = 0);
      }
      getToken() {
        if (this.platform === "server") return null;
        let e = this.doc.cookie || "";
        return (
          e !== this.lastCookieString &&
            (this.parseCount++,
            (this.lastToken = Zl(e, this.cookieName)),
            (this.lastCookieString = e)),
          this.lastToken
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(ke), Q(ai), Q(qx));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function Zx(n, i) {
  let e = n.url.toLowerCase();
  if (
    !G(_0) ||
    n.method === "GET" ||
    n.method === "HEAD" ||
    e.startsWith("http://") ||
    e.startsWith("https://")
  )
    return i(n);
  let t = G(ac).getToken(),
    r = G(Qx);
  return (
    t != null &&
      !n.headers.has(r) &&
      (n = n.clone({ headers: n.headers.set(r, t) })),
    i(n)
  );
}
var b0 = (function (n) {
  return (
    (n[(n.Interceptors = 0)] = "Interceptors"),
    (n[(n.LegacyInterceptors = 1)] = "LegacyInterceptors"),
    (n[(n.CustomXsrfConfiguration = 2)] = "CustomXsrfConfiguration"),
    (n[(n.NoXsrfProtection = 3)] = "NoXsrfProtection"),
    (n[(n.JsonpSupport = 4)] = "JsonpSupport"),
    (n[(n.RequestsMadeViaParent = 5)] = "RequestsMadeViaParent"),
    (n[(n.Fetch = 6)] = "Fetch"),
    n
  );
})(b0 || {});
function Jx(n, i) {
  return { ɵkind: n, ɵproviders: i };
}
function gh(...n) {
  let i = [
    Bt,
    r0,
    n0,
    { provide: as, useExisting: n0 },
    { provide: rc, useFactory: () => G(Bx, { optional: !0 }) ?? G(r0) },
    { provide: fh, useValue: Zx, multi: !0 },
    { provide: _0, useValue: !0 },
    { provide: ac, useClass: Xx },
  ];
  for (let e of n) i.push(...e.ɵproviders);
  return zn(i);
}
var o0 = new we("");
function eC() {
  return Jx(b0.LegacyInterceptors, [
    { provide: o0, useFactory: $x },
    { provide: fh, useExisting: o0, multi: !0 },
  ]);
}
var sc = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ providers: [gh(eC())] });
    }
  }
  return n;
})();
var tC = new we(""),
  a0 = "b",
  s0 = "h",
  l0 = "s",
  c0 = "st",
  d0 = "u",
  u0 = "rt",
  nc = new we(""),
  iC = ["GET", "HEAD"];
function nC(n, i) {
  let M = G(nc),
    { isCacheActive: e } = M,
    t = cg(M, ["isCacheActive"]),
    { transferCache: r, method: o } = n;
  if (
    !e ||
    r === !1 ||
    (o === "POST" && !t.includePostRequests && !r) ||
    (o !== "POST" && !iC.includes(o)) ||
    (!t.includeRequestsWithAuthHeaders && rC(n)) ||
    t.filter?.(n) === !1
  )
    return i(n);
  let a = G(Ju),
    l = G(tC, { optional: !0 }),
    u = rs(G(ai));
  if (l && !u) throw new ct(2803, !1);
  let f = u && l ? lC(n.url, l) : n.url,
    v = aC(n, f),
    D = a.get(v, null),
    T = t.includeHeaders;
  if ((typeof r == "object" && r.includeHeaders && (T = r.includeHeaders), D)) {
    let { [a0]: k, [u0]: V, [s0]: A, [l0]: E, [c0]: X, [d0]: se } = D,
      be = k;
    switch (V) {
      case "arraybuffer":
        be = new TextEncoder().encode(k).buffer;
        break;
      case "blob":
        be = new Blob([k]);
        break;
    }
    let Ee = new St(A);
    return fe(
      new lo({ body: be, headers: Ee, status: E, statusText: X, url: se })
    );
  }
  return i(n).pipe(
    Kt((k) => {
      k instanceof lo &&
        u &&
        a.set(v, {
          [a0]: k.body,
          [s0]: oC(k.headers, T),
          [l0]: k.status,
          [c0]: k.statusText,
          [d0]: f,
          [u0]: n.responseType,
        });
    })
  );
}
function rC(n) {
  return n.headers.has("authorization") || n.headers.has("proxy-authorization");
}
function oC(n, i) {
  if (!i) return {};
  let e = {};
  for (let t of i) {
    let r = n.getAll(t);
    r !== null && (e[t] = r);
  }
  return e;
}
function h0(n) {
  return [...n.keys()]
    .sort()
    .map((i) => `${i}=${n.getAll(i)}`)
    .join("&");
}
function aC(n, i) {
  let { params: e, method: t, responseType: r } = n,
    o = h0(e),
    a = n.serializeBody();
  a instanceof URLSearchParams ? (a = h0(a)) : typeof a != "string" && (a = "");
  let l = [t, r, i, a, o].join("|"),
    u = sC(l);
  return u;
}
function sC(n) {
  let i = 0;
  for (let e of n) i = (Math.imul(31, i) + e.charCodeAt(0)) << 0;
  return (i += 2147483648), i.toString();
}
function v0(n) {
  return [
    {
      provide: nc,
      useFactory: () => (
        Gl("NgHttpTransferCache"), W({ isCacheActive: !0 }, n)
      ),
    },
    { provide: f0, useValue: nC, multi: !0, deps: [Ju, nc] },
    {
      provide: is,
      multi: !0,
      useFactory: () => {
        let i = G(Li),
          e = G(nc);
        return () => {
          Bg(i).then(() => {
            e.isCacheActive = !1;
          });
        };
      },
    },
  ];
}
function lC(n, i) {
  let e = new URL(n, "resolve://").origin,
    t = i[e];
  return t ? n.replace(e, t) : n;
}
var vh = class extends Wg {
    constructor() {
      super(...arguments), (this.supportsDOMEvents = !0);
    }
  },
  yh = class n extends vh {
    static makeCurrent() {
      $g(new n());
    }
    onAndCancel(i, e, t) {
      return (
        i.addEventListener(e, t),
        () => {
          i.removeEventListener(e, t);
        }
      );
    }
    dispatchEvent(i, e) {
      i.dispatchEvent(e);
    }
    remove(i) {
      i.remove();
    }
    createElement(i, e) {
      return (e = e || this.getDefaultDocument()), e.createElement(i);
    }
    createHtmlDocument() {
      return document.implementation.createHTMLDocument("fakeTitle");
    }
    getDefaultDocument() {
      return document;
    }
    isElementNode(i) {
      return i.nodeType === Node.ELEMENT_NODE;
    }
    isShadowRoot(i) {
      return i instanceof DocumentFragment;
    }
    getGlobalEventTarget(i, e) {
      return e === "window"
        ? window
        : e === "document"
        ? i
        : e === "body"
        ? i.body
        : null;
    }
    getBaseHref(i) {
      let e = dC();
      return e == null ? null : uC(e);
    }
    resetBaseElement() {
      ls = null;
    }
    getUserAgent() {
      return window.navigator.userAgent;
    }
    getCookie(i) {
      return Zl(document.cookie, i);
    }
  },
  ls = null;
function dC() {
  return (
    (ls = ls || document.querySelector("base")),
    ls ? ls.getAttribute("href") : null
  );
}
function uC(n) {
  return new URL(n, document.baseURI).pathname;
}
var hC = (() => {
    class n {
      build() {
        return new XMLHttpRequest();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  xh = new we(""),
  C0 = (() => {
    class n {
      constructor(e, t) {
        (this._zone = t),
          (this._eventNameToPlugin = new Map()),
          e.forEach((r) => {
            r.manager = this;
          }),
          (this._plugins = e.slice().reverse());
      }
      addEventListener(e, t, r) {
        return this._findPluginFor(t).addEventListener(e, t, r);
      }
      getZone() {
        return this._zone;
      }
      _findPluginFor(e) {
        let t = this._eventNameToPlugin.get(e);
        if (t) return t;
        if (((t = this._plugins.find((o) => o.supports(e))), !t))
          throw new ct(5101, !1);
        return this._eventNameToPlugin.set(e, t), t;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(xh), Q(Te));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  lc = class {
    constructor(i) {
      this._doc = i;
    }
  },
  _h = "ng-app-id",
  w0 = (() => {
    class n {
      constructor(e, t, r, o = {}) {
        (this.doc = e),
          (this.appId = t),
          (this.nonce = r),
          (this.platformId = o),
          (this.styleRef = new Map()),
          (this.hostNodes = new Set()),
          (this.styleNodesInDOM = this.collectServerRenderedStyles()),
          (this.platformIsServer = rs(o)),
          this.resetHostNodes();
      }
      addStyles(e) {
        for (let t of e)
          this.changeUsageCount(t, 1) === 1 && this.onStyleAdded(t);
      }
      removeStyles(e) {
        for (let t of e)
          this.changeUsageCount(t, -1) <= 0 && this.onStyleRemoved(t);
      }
      ngOnDestroy() {
        let e = this.styleNodesInDOM;
        e && (e.forEach((t) => t.remove()), e.clear());
        for (let t of this.getAllStyles()) this.onStyleRemoved(t);
        this.resetHostNodes();
      }
      addHost(e) {
        this.hostNodes.add(e);
        for (let t of this.getAllStyles()) this.addStyleToHost(e, t);
      }
      removeHost(e) {
        this.hostNodes.delete(e);
      }
      getAllStyles() {
        return this.styleRef.keys();
      }
      onStyleAdded(e) {
        for (let t of this.hostNodes) this.addStyleToHost(t, e);
      }
      onStyleRemoved(e) {
        let t = this.styleRef;
        t.get(e)?.elements?.forEach((r) => r.remove()), t.delete(e);
      }
      collectServerRenderedStyles() {
        let e = this.doc.head?.querySelectorAll(`style[${_h}="${this.appId}"]`);
        if (e?.length) {
          let t = new Map();
          return (
            e.forEach((r) => {
              r.textContent != null && t.set(r.textContent, r);
            }),
            t
          );
        }
        return null;
      }
      changeUsageCount(e, t) {
        let r = this.styleRef;
        if (r.has(e)) {
          let o = r.get(e);
          return (o.usage += t), o.usage;
        }
        return r.set(e, { usage: t, elements: [] }), t;
      }
      getStyleElement(e, t) {
        let r = this.styleNodesInDOM,
          o = r?.get(t);
        if (o?.parentNode === e) return r.delete(t), o.removeAttribute(_h), o;
        {
          let a = this.doc.createElement("style");
          return (
            this.nonce && a.setAttribute("nonce", this.nonce),
            (a.textContent = t),
            this.platformIsServer && a.setAttribute(_h, this.appId),
            e.appendChild(a),
            a
          );
        }
      }
      addStyleToHost(e, t) {
        let r = this.getStyleElement(e, t),
          o = this.styleRef,
          a = o.get(t)?.elements;
        a ? a.push(r) : o.set(t, { elements: [r], usage: 1 });
      }
      resetHostNodes() {
        let e = this.hostNodes;
        e.clear(), e.add(this.doc.head);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(ke), Q($l), Q(Za, 8), Q(ai));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  bh = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: "http://www.w3.org/1999/xhtml",
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/",
    math: "http://www.w3.org/1998/Math/MathML",
  },
  Sh = /%COMP%/g,
  D0 = "%COMP%",
  pC = `_nghost-${D0}`,
  mC = `_ngcontent-${D0}`,
  fC = !0,
  gC = new we("", { providedIn: "root", factory: () => fC });
function _C(n) {
  return mC.replace(Sh, n);
}
function bC(n) {
  return pC.replace(Sh, n);
}
function S0(n, i) {
  return i.map((e) => e.replace(Sh, n));
}
var cc = (() => {
    class n {
      constructor(e, t, r, o, a, l, u, f = null) {
        (this.eventManager = e),
          (this.sharedStylesHost = t),
          (this.appId = r),
          (this.removeStylesOnCompDestroy = o),
          (this.doc = a),
          (this.platformId = l),
          (this.ngZone = u),
          (this.nonce = f),
          (this.rendererByCompId = new Map()),
          (this.platformIsServer = rs(l)),
          (this.defaultRenderer = new cs(e, a, u, this.platformIsServer));
      }
      createRenderer(e, t) {
        if (!e || !t) return this.defaultRenderer;
        this.platformIsServer &&
          t.encapsulation === Qa.ShadowDom &&
          (t = Ce(W({}, t), { encapsulation: Qa.Emulated }));
        let r = this.getOrCreateRenderer(e, t);
        return (
          r instanceof dc
            ? r.applyToHost(e)
            : r instanceof ds && r.applyStyles(),
          r
        );
      }
      getOrCreateRenderer(e, t) {
        let r = this.rendererByCompId,
          o = r.get(t.id);
        if (!o) {
          let a = this.doc,
            l = this.ngZone,
            u = this.eventManager,
            f = this.sharedStylesHost,
            v = this.removeStylesOnCompDestroy,
            D = this.platformIsServer;
          switch (t.encapsulation) {
            case Qa.Emulated:
              o = new dc(u, f, t, this.appId, v, a, l, D);
              break;
            case Qa.ShadowDom:
              return new Ch(u, f, e, t, a, l, this.nonce, D);
            default:
              o = new ds(u, f, t, v, a, l, D);
              break;
          }
          r.set(t.id, o);
        }
        return o;
      }
      ngOnDestroy() {
        this.rendererByCompId.clear();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            Q(C0),
            Q(w0),
            Q($l),
            Q(gC),
            Q(ke),
            Q(ai),
            Q(Te),
            Q(Za)
          );
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  cs = class {
    constructor(i, e, t, r) {
      (this.eventManager = i),
        (this.doc = e),
        (this.ngZone = t),
        (this.platformIsServer = r),
        (this.data = Object.create(null)),
        (this.throwOnSyntheticProps = !0),
        (this.destroyNode = null);
    }
    destroy() {}
    createElement(i, e) {
      return e
        ? this.doc.createElementNS(bh[e] || e, i)
        : this.doc.createElement(i);
    }
    createComment(i) {
      return this.doc.createComment(i);
    }
    createText(i) {
      return this.doc.createTextNode(i);
    }
    appendChild(i, e) {
      (y0(i) ? i.content : i).appendChild(e);
    }
    insertBefore(i, e, t) {
      i && (y0(i) ? i.content : i).insertBefore(e, t);
    }
    removeChild(i, e) {
      e.remove();
    }
    selectRootElement(i, e) {
      let t = typeof i == "string" ? this.doc.querySelector(i) : i;
      if (!t) throw new ct(-5104, !1);
      return e || (t.textContent = ""), t;
    }
    parentNode(i) {
      return i.parentNode;
    }
    nextSibling(i) {
      return i.nextSibling;
    }
    setAttribute(i, e, t, r) {
      if (r) {
        e = r + ":" + e;
        let o = bh[r];
        o ? i.setAttributeNS(o, e, t) : i.setAttribute(e, t);
      } else i.setAttribute(e, t);
    }
    removeAttribute(i, e, t) {
      if (t) {
        let r = bh[t];
        r ? i.removeAttributeNS(r, e) : i.removeAttribute(`${t}:${e}`);
      } else i.removeAttribute(e);
    }
    addClass(i, e) {
      i.classList.add(e);
    }
    removeClass(i, e) {
      i.classList.remove(e);
    }
    setStyle(i, e, t, r) {
      r & (es.DashCase | es.Important)
        ? i.style.setProperty(e, t, r & es.Important ? "important" : "")
        : (i.style[e] = t);
    }
    removeStyle(i, e, t) {
      t & es.DashCase ? i.style.removeProperty(e) : (i.style[e] = "");
    }
    setProperty(i, e, t) {
      i != null && (i[e] = t);
    }
    setValue(i, e) {
      i.nodeValue = e;
    }
    listen(i, e, t) {
      if (
        typeof i == "string" &&
        ((i = Xo().getGlobalEventTarget(this.doc, i)), !i)
      )
        throw new Error(`Unsupported event target ${i} for event ${e}`);
      return this.eventManager.addEventListener(
        i,
        e,
        this.decoratePreventDefault(t)
      );
    }
    decoratePreventDefault(i) {
      return (e) => {
        if (e === "__ngUnwrap__") return i;
        (this.platformIsServer ? this.ngZone.runGuarded(() => i(e)) : i(e)) ===
          !1 && e.preventDefault();
      };
    }
  };
function y0(n) {
  return n.tagName === "TEMPLATE" && n.content !== void 0;
}
var Ch = class extends cs {
    constructor(i, e, t, r, o, a, l, u) {
      super(i, o, a, u),
        (this.sharedStylesHost = e),
        (this.hostEl = t),
        (this.shadowRoot = t.attachShadow({ mode: "open" })),
        this.sharedStylesHost.addHost(this.shadowRoot);
      let f = S0(r.id, r.styles);
      for (let v of f) {
        let D = document.createElement("style");
        l && D.setAttribute("nonce", l),
          (D.textContent = v),
          this.shadowRoot.appendChild(D);
      }
    }
    nodeOrShadowRoot(i) {
      return i === this.hostEl ? this.shadowRoot : i;
    }
    appendChild(i, e) {
      return super.appendChild(this.nodeOrShadowRoot(i), e);
    }
    insertBefore(i, e, t) {
      return super.insertBefore(this.nodeOrShadowRoot(i), e, t);
    }
    removeChild(i, e) {
      return super.removeChild(null, e);
    }
    parentNode(i) {
      return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(i)));
    }
    destroy() {
      this.sharedStylesHost.removeHost(this.shadowRoot);
    }
  },
  ds = class extends cs {
    constructor(i, e, t, r, o, a, l, u) {
      super(i, o, a, l),
        (this.sharedStylesHost = e),
        (this.removeStylesOnCompDestroy = r),
        (this.styles = u ? S0(u, t.styles) : t.styles);
    }
    applyStyles() {
      this.sharedStylesHost.addStyles(this.styles);
    }
    destroy() {
      this.removeStylesOnCompDestroy &&
        this.sharedStylesHost.removeStyles(this.styles);
    }
  },
  dc = class extends ds {
    constructor(i, e, t, r, o, a, l, u) {
      let f = r + "-" + t.id;
      super(i, e, t, o, a, l, u, f),
        (this.contentAttr = _C(f)),
        (this.hostAttr = bC(f));
    }
    applyToHost(i) {
      this.applyStyles(), this.setAttribute(i, this.hostAttr, "");
    }
    createElement(i, e) {
      let t = super.createElement(i, e);
      return super.setAttribute(t, this.contentAttr, ""), t;
    }
  },
  vC = (() => {
    class n extends lc {
      constructor(e) {
        super(e);
      }
      supports(e) {
        return !0;
      }
      addEventListener(e, t, r) {
        return (
          e.addEventListener(t, r, !1), () => this.removeEventListener(e, t, r)
        );
      }
      removeEventListener(e, t, r) {
        return e.removeEventListener(t, r);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(ke));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  x0 = ["alt", "control", "meta", "shift"],
  yC = {
    "\b": "Backspace",
    "	": "Tab",
    "\x7F": "Delete",
    "\x1B": "Escape",
    Del: "Delete",
    Esc: "Escape",
    Left: "ArrowLeft",
    Right: "ArrowRight",
    Up: "ArrowUp",
    Down: "ArrowDown",
    Menu: "ContextMenu",
    Scroll: "ScrollLock",
    Win: "OS",
  },
  xC = {
    alt: (n) => n.altKey,
    control: (n) => n.ctrlKey,
    meta: (n) => n.metaKey,
    shift: (n) => n.shiftKey,
  },
  CC = (() => {
    class n extends lc {
      constructor(e) {
        super(e);
      }
      supports(e) {
        return n.parseEventName(e) != null;
      }
      addEventListener(e, t, r) {
        let o = n.parseEventName(t),
          a = n.eventCallback(o.fullKey, r, this.manager.getZone());
        return this.manager
          .getZone()
          .runOutsideAngular(() => Xo().onAndCancel(e, o.domEventName, a));
      }
      static parseEventName(e) {
        let t = e.toLowerCase().split("."),
          r = t.shift();
        if (t.length === 0 || !(r === "keydown" || r === "keyup")) return null;
        let o = n._normalizeKey(t.pop()),
          a = "",
          l = t.indexOf("code");
        if (
          (l > -1 && (t.splice(l, 1), (a = "code.")),
          x0.forEach((f) => {
            let v = t.indexOf(f);
            v > -1 && (t.splice(v, 1), (a += f + "."));
          }),
          (a += o),
          t.length != 0 || o.length === 0)
        )
          return null;
        let u = {};
        return (u.domEventName = r), (u.fullKey = a), u;
      }
      static matchEventFullKeyCode(e, t) {
        let r = yC[e.key] || e.key,
          o = "";
        return (
          t.indexOf("code.") > -1 && ((r = e.code), (o = "code.")),
          r == null || !r
            ? !1
            : ((r = r.toLowerCase()),
              r === " " ? (r = "space") : r === "." && (r = "dot"),
              x0.forEach((a) => {
                if (a !== r) {
                  let l = xC[a];
                  l(e) && (o += a + ".");
                }
              }),
              (o += r),
              o === t)
        );
      }
      static eventCallback(e, t, r) {
        return (o) => {
          n.matchEventFullKeyCode(o, e) && r.runGuarded(() => t(o));
        };
      }
      static _normalizeKey(e) {
        return e === "esc" ? "escape" : e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(ke));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function M0(n, i) {
  return jg(W({ rootComponent: n }, wC(i)));
}
function wC(n) {
  return {
    appProviders: [...EC, ...(n?.providers ?? [])],
    platformProviders: TC,
  };
}
function DC() {
  yh.makeCurrent();
}
function SC() {
  return new Zu();
}
function MC() {
  return wg(document), document;
}
var TC = [
  { provide: ai, useValue: Qg },
  { provide: Dg, useValue: DC, multi: !0 },
  { provide: ke, useFactory: MC, deps: [] },
];
var EC = [
  { provide: xg, useValue: "root" },
  { provide: Zu, useFactory: SC, deps: [] },
  { provide: xh, useClass: vC, multi: !0, deps: [ke, Te, ai] },
  { provide: xh, useClass: CC, multi: !0, deps: [ke] },
  cc,
  w0,
  C0,
  { provide: Wl, useExisting: cc },
  { provide: tc, useClass: hC, deps: [] },
  [],
];
var T0 = (() => {
  class n {
    constructor(e) {
      this._doc = e;
    }
    getTitle() {
      return this._doc.title;
    }
    setTitle(e) {
      this._doc.title = e || "";
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(ke));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Mh = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({
          token: n,
          factory: function (t) {
            let r = null;
            return t ? (r = new (t || n)()) : (r = Q(OC)), r;
          },
          providedIn: "root",
        });
      }
    }
    return n;
  })(),
  OC = (() => {
    class n extends Mh {
      constructor(e) {
        super(), (this._doc = e);
      }
      sanitize(e, t) {
        if (t == null) return null;
        switch (e) {
          case cr.NONE:
            return t;
          case cr.HTML:
            return Yo(t, "HTML") ? Go(t) : Pg(this._doc, String(t)).toString();
          case cr.STYLE:
            return Yo(t, "Style") ? Go(t) : t;
          case cr.SCRIPT:
            if (Yo(t, "Script")) return Go(t);
            throw new ct(5200, !1);
          case cr.URL:
            return Yo(t, "URL") ? Go(t) : kg(String(t));
          case cr.RESOURCE_URL:
            if (Yo(t, "ResourceURL")) return Go(t);
            throw new ct(5201, !1);
          default:
            throw new ct(5202, !1);
        }
      }
      bypassSecurityTrustHtml(e) {
        return Sg(e);
      }
      bypassSecurityTrustStyle(e) {
        return Mg(e);
      }
      bypassSecurityTrustScript(e) {
        return Tg(e);
      }
      bypassSecurityTrustUrl(e) {
        return Eg(e);
      }
      bypassSecurityTrustResourceUrl(e) {
        return Og(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(ke));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  wh = (function (n) {
    return (
      (n[(n.NoHttpTransferCache = 0)] = "NoHttpTransferCache"),
      (n[(n.HttpTransferCacheOptions = 1)] = "HttpTransferCacheOptions"),
      (n[(n.I18nSupport = 2)] = "I18nSupport"),
      (n[(n.EventReplay = 3)] = "EventReplay"),
      n
    );
  })(wh || {});
function E0(...n) {
  let i = [],
    e = new Set(),
    t = e.has(wh.HttpTransferCacheOptions);
  for (let { ɵproviders: r, ɵkind: o } of n) e.add(o), r.length && i.push(r);
  return zn([[], Ug(), e.has(wh.NoHttpTransferCache) || t ? [] : v0({}), i]);
}
var Ge = "primary",
  Ss = Symbol("RouteTitle"),
  Ph = class {
    constructor(i) {
      this.params = i || {};
    }
    has(i) {
      return Object.prototype.hasOwnProperty.call(this.params, i);
    }
    get(i) {
      if (this.has(i)) {
        let e = this.params[i];
        return Array.isArray(e) ? e[0] : e;
      }
      return null;
    }
    getAll(i) {
      if (this.has(i)) {
        let e = this.params[i];
        return Array.isArray(e) ? e : [e];
      }
      return [];
    }
    get keys() {
      return Object.keys(this.params);
    }
  };
function ra(n) {
  return new Ph(n);
}
function kC(n, i, e) {
  let t = e.path.split("/");
  if (
    t.length > n.length ||
    (e.pathMatch === "full" && (i.hasChildren() || t.length < n.length))
  )
    return null;
  let r = {};
  for (let o = 0; o < t.length; o++) {
    let a = t[o],
      l = n[o];
    if (a[0] === ":") r[a.substring(1)] = l;
    else if (a !== l.path) return null;
  }
  return { consumed: n.slice(0, t.length), posParams: r };
}
function PC(n, i) {
  if (n.length !== i.length) return !1;
  for (let e = 0; e < n.length; ++e) if (!qn(n[e], i[e])) return !1;
  return !0;
}
function qn(n, i) {
  let e = n ? Ih(n) : void 0,
    t = i ? Ih(i) : void 0;
  if (!e || !t || e.length != t.length) return !1;
  let r;
  for (let o = 0; o < e.length; o++)
    if (((r = e[o]), !H0(n[r], i[r]))) return !1;
  return !0;
}
function Ih(n) {
  return [...Object.keys(n), ...Object.getOwnPropertySymbols(n)];
}
function H0(n, i) {
  if (Array.isArray(n) && Array.isArray(i)) {
    if (n.length !== i.length) return !1;
    let e = [...n].sort(),
      t = [...i].sort();
    return e.every((r, o) => t[o] === r);
  } else return n === i;
}
function j0(n) {
  return n.length > 0 ? n[n.length - 1] : null;
}
function Nr(n) {
  return Bl(n) ? n : Kl(n) ? ui(Promise.resolve(n)) : fe(n);
}
var IC = { exact: z0, subset: $0 },
  U0 = { exact: AC, subset: RC, ignored: () => !0 };
function k0(n, i, e) {
  return (
    IC[e.paths](n.root, i.root, e.matrixParams) &&
    U0[e.queryParams](n.queryParams, i.queryParams) &&
    !(e.fragment === "exact" && n.fragment !== i.fragment)
  );
}
function AC(n, i) {
  return qn(n, i);
}
function z0(n, i, e) {
  if (
    !uo(n.segments, i.segments) ||
    !pc(n.segments, i.segments, e) ||
    n.numberOfChildren !== i.numberOfChildren
  )
    return !1;
  for (let t in i.children)
    if (!n.children[t] || !z0(n.children[t], i.children[t], e)) return !1;
  return !0;
}
function RC(n, i) {
  return (
    Object.keys(i).length <= Object.keys(n).length &&
    Object.keys(i).every((e) => H0(n[e], i[e]))
  );
}
function $0(n, i, e) {
  return W0(n, i, i.segments, e);
}
function W0(n, i, e, t) {
  if (n.segments.length > e.length) {
    let r = n.segments.slice(0, e.length);
    return !(!uo(r, e) || i.hasChildren() || !pc(r, e, t));
  } else if (n.segments.length === e.length) {
    if (!uo(n.segments, e) || !pc(n.segments, e, t)) return !1;
    for (let r in i.children)
      if (!n.children[r] || !$0(n.children[r], i.children[r], t)) return !1;
    return !0;
  } else {
    let r = e.slice(0, n.segments.length),
      o = e.slice(n.segments.length);
    return !uo(n.segments, r) || !pc(n.segments, r, t) || !n.children[Ge]
      ? !1
      : W0(n.children[Ge], i, o, t);
  }
}
function pc(n, i, e) {
  return i.every((t, r) => U0[e](n[r].parameters, t.parameters));
}
var pr = class {
    constructor(i = new pt([], {}), e = {}, t = null) {
      (this.root = i), (this.queryParams = e), (this.fragment = t);
    }
    get queryParamMap() {
      return (
        (this._queryParamMap ??= ra(this.queryParams)), this._queryParamMap
      );
    }
    toString() {
      return LC.serialize(this);
    }
  },
  pt = class {
    constructor(i, e) {
      (this.segments = i),
        (this.children = e),
        (this.parent = null),
        Object.values(e).forEach((t) => (t.parent = this));
    }
    hasChildren() {
      return this.numberOfChildren > 0;
    }
    get numberOfChildren() {
      return Object.keys(this.children).length;
    }
    toString() {
      return mc(this);
    }
  },
  co = class {
    constructor(i, e) {
      (this.path = i), (this.parameters = e);
    }
    get parameterMap() {
      return (this._parameterMap ??= ra(this.parameters)), this._parameterMap;
    }
    toString() {
      return Y0(this);
    }
  };
function FC(n, i) {
  return uo(n, i) && n.every((e, t) => qn(e.parameters, i[t].parameters));
}
function uo(n, i) {
  return n.length !== i.length ? !1 : n.every((e, t) => e.path === i[t].path);
}
function NC(n, i) {
  let e = [];
  return (
    Object.entries(n.children).forEach(([t, r]) => {
      t === Ge && (e = e.concat(i(r, t)));
    }),
    Object.entries(n.children).forEach(([t, r]) => {
      t !== Ge && (e = e.concat(i(r, t)));
    }),
    e
  );
}
var Ms = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({
          token: n,
          factory: () => new oa(),
          providedIn: "root",
        });
      }
    }
    return n;
  })(),
  oa = class {
    parse(i) {
      let e = new Rh(i);
      return new pr(
        e.parseRootSegment(),
        e.parseQueryParams(),
        e.parseFragment()
      );
    }
    serialize(i) {
      let e = `/${us(i.root, !0)}`,
        t = HC(i.queryParams),
        r = typeof i.fragment == "string" ? `#${VC(i.fragment)}` : "";
      return `${e}${t}${r}`;
    }
  },
  LC = new oa();
function mc(n) {
  return n.segments.map((i) => Y0(i)).join("/");
}
function us(n, i) {
  if (!n.hasChildren()) return mc(n);
  if (i) {
    let e = n.children[Ge] ? us(n.children[Ge], !1) : "",
      t = [];
    return (
      Object.entries(n.children).forEach(([r, o]) => {
        r !== Ge && t.push(`${r}:${us(o, !1)}`);
      }),
      t.length > 0 ? `${e}(${t.join("//")})` : e
    );
  } else {
    let e = NC(n, (t, r) =>
      r === Ge ? [us(n.children[Ge], !1)] : [`${r}:${us(t, !1)}`]
    );
    return Object.keys(n.children).length === 1 && n.children[Ge] != null
      ? `${mc(n)}/${e[0]}`
      : `${mc(n)}/(${e.join("//")})`;
  }
}
function G0(n) {
  return encodeURIComponent(n)
    .replace(/%40/g, "@")
    .replace(/%3A/gi, ":")
    .replace(/%24/g, "$")
    .replace(/%2C/gi, ",");
}
function uc(n) {
  return G0(n).replace(/%3B/gi, ";");
}
function VC(n) {
  return encodeURI(n);
}
function Ah(n) {
  return G0(n)
    .replace(/\(/g, "%28")
    .replace(/\)/g, "%29")
    .replace(/%26/gi, "&");
}
function fc(n) {
  return decodeURIComponent(n);
}
function P0(n) {
  return fc(n.replace(/\+/g, "%20"));
}
function Y0(n) {
  return `${Ah(n.path)}${BC(n.parameters)}`;
}
function BC(n) {
  return Object.entries(n)
    .map(([i, e]) => `;${Ah(i)}=${Ah(e)}`)
    .join("");
}
function HC(n) {
  let i = Object.entries(n)
    .map(([e, t]) =>
      Array.isArray(t)
        ? t.map((r) => `${uc(e)}=${uc(r)}`).join("&")
        : `${uc(e)}=${uc(t)}`
    )
    .filter((e) => e);
  return i.length ? `?${i.join("&")}` : "";
}
var jC = /^[^\/()?;#]+/;
function Th(n) {
  let i = n.match(jC);
  return i ? i[0] : "";
}
var UC = /^[^\/()?;=#]+/;
function zC(n) {
  let i = n.match(UC);
  return i ? i[0] : "";
}
var $C = /^[^=?&#]+/;
function WC(n) {
  let i = n.match($C);
  return i ? i[0] : "";
}
var GC = /^[^&#]+/;
function YC(n) {
  let i = n.match(GC);
  return i ? i[0] : "";
}
var Rh = class {
  constructor(i) {
    (this.url = i), (this.remaining = i);
  }
  parseRootSegment() {
    return (
      this.consumeOptional("/"),
      this.remaining === "" ||
      this.peekStartsWith("?") ||
      this.peekStartsWith("#")
        ? new pt([], {})
        : new pt([], this.parseChildren())
    );
  }
  parseQueryParams() {
    let i = {};
    if (this.consumeOptional("?"))
      do this.parseQueryParam(i);
      while (this.consumeOptional("&"));
    return i;
  }
  parseFragment() {
    return this.consumeOptional("#")
      ? decodeURIComponent(this.remaining)
      : null;
  }
  parseChildren() {
    if (this.remaining === "") return {};
    this.consumeOptional("/");
    let i = [];
    for (
      this.peekStartsWith("(") || i.push(this.parseSegment());
      this.peekStartsWith("/") &&
      !this.peekStartsWith("//") &&
      !this.peekStartsWith("/(");

    )
      this.capture("/"), i.push(this.parseSegment());
    let e = {};
    this.peekStartsWith("/(") &&
      (this.capture("/"), (e = this.parseParens(!0)));
    let t = {};
    return (
      this.peekStartsWith("(") && (t = this.parseParens(!1)),
      (i.length > 0 || Object.keys(e).length > 0) && (t[Ge] = new pt(i, e)),
      t
    );
  }
  parseSegment() {
    let i = Th(this.remaining);
    if (i === "" && this.peekStartsWith(";")) throw new ct(4009, !1);
    return this.capture(i), new co(fc(i), this.parseMatrixParams());
  }
  parseMatrixParams() {
    let i = {};
    for (; this.consumeOptional(";"); ) this.parseParam(i);
    return i;
  }
  parseParam(i) {
    let e = zC(this.remaining);
    if (!e) return;
    this.capture(e);
    let t = "";
    if (this.consumeOptional("=")) {
      let r = Th(this.remaining);
      r && ((t = r), this.capture(t));
    }
    i[fc(e)] = fc(t);
  }
  parseQueryParam(i) {
    let e = WC(this.remaining);
    if (!e) return;
    this.capture(e);
    let t = "";
    if (this.consumeOptional("=")) {
      let a = YC(this.remaining);
      a && ((t = a), this.capture(t));
    }
    let r = P0(e),
      o = P0(t);
    if (i.hasOwnProperty(r)) {
      let a = i[r];
      Array.isArray(a) || ((a = [a]), (i[r] = a)), a.push(o);
    } else i[r] = o;
  }
  parseParens(i) {
    let e = {};
    for (
      this.capture("(");
      !this.consumeOptional(")") && this.remaining.length > 0;

    ) {
      let t = Th(this.remaining),
        r = this.remaining[t.length];
      if (r !== "/" && r !== ")" && r !== ";") throw new ct(4010, !1);
      let o;
      t.indexOf(":") > -1
        ? ((o = t.slice(0, t.indexOf(":"))), this.capture(o), this.capture(":"))
        : i && (o = Ge);
      let a = this.parseChildren();
      (e[o] = Object.keys(a).length === 1 ? a[Ge] : new pt([], a)),
        this.consumeOptional("//");
    }
    return e;
  }
  peekStartsWith(i) {
    return this.remaining.startsWith(i);
  }
  consumeOptional(i) {
    return this.peekStartsWith(i)
      ? ((this.remaining = this.remaining.substring(i.length)), !0)
      : !1;
  }
  capture(i) {
    if (!this.consumeOptional(i)) throw new ct(4011, !1);
  }
};
function q0(n) {
  return n.segments.length > 0 ? new pt([], { [Ge]: n }) : n;
}
function K0(n) {
  let i = {};
  for (let [t, r] of Object.entries(n.children)) {
    let o = K0(r);
    if (t === Ge && o.segments.length === 0 && o.hasChildren())
      for (let [a, l] of Object.entries(o.children)) i[a] = l;
    else (o.segments.length > 0 || o.hasChildren()) && (i[t] = o);
  }
  let e = new pt(n.segments, i);
  return qC(e);
}
function qC(n) {
  if (n.numberOfChildren === 1 && n.children[Ge]) {
    let i = n.children[Ge];
    return new pt(n.segments.concat(i.segments), i.children);
  }
  return n;
}
function ho(n) {
  return n instanceof pr;
}
function KC(n, i, e = null, t = null) {
  let r = Q0(n);
  return X0(r, i, e, t);
}
function Q0(n) {
  let i;
  function e(o) {
    let a = {};
    for (let u of o.children) {
      let f = e(u);
      a[u.outlet] = f;
    }
    let l = new pt(o.url, a);
    return o === n && (i = l), l;
  }
  let t = e(n.root),
    r = q0(t);
  return i ?? r;
}
function X0(n, i, e, t) {
  let r = n;
  for (; r.parent; ) r = r.parent;
  if (i.length === 0) return Eh(r, r, r, e, t);
  let o = QC(i);
  if (o.toRoot()) return Eh(r, r, new pt([], {}), e, t);
  let a = XC(o, r, n),
    l = a.processChildren
      ? ms(a.segmentGroup, a.index, o.commands)
      : J0(a.segmentGroup, a.index, o.commands);
  return Eh(r, a.segmentGroup, l, e, t);
}
function gc(n) {
  return typeof n == "object" && n != null && !n.outlets && !n.segmentPath;
}
function _s(n) {
  return typeof n == "object" && n != null && n.outlets;
}
function Eh(n, i, e, t, r) {
  let o = {};
  t &&
    Object.entries(t).forEach(([u, f]) => {
      o[u] = Array.isArray(f) ? f.map((v) => `${v}`) : `${f}`;
    });
  let a;
  n === i ? (a = e) : (a = Z0(n, i, e));
  let l = q0(K0(a));
  return new pr(l, o, r);
}
function Z0(n, i, e) {
  let t = {};
  return (
    Object.entries(n.children).forEach(([r, o]) => {
      o === i ? (t[r] = e) : (t[r] = Z0(o, i, e));
    }),
    new pt(n.segments, t)
  );
}
var _c = class {
  constructor(i, e, t) {
    if (
      ((this.isAbsolute = i),
      (this.numberOfDoubleDots = e),
      (this.commands = t),
      i && t.length > 0 && gc(t[0]))
    )
      throw new ct(4003, !1);
    let r = t.find(_s);
    if (r && r !== j0(t)) throw new ct(4004, !1);
  }
  toRoot() {
    return (
      this.isAbsolute && this.commands.length === 1 && this.commands[0] == "/"
    );
  }
};
function QC(n) {
  if (typeof n[0] == "string" && n.length === 1 && n[0] === "/")
    return new _c(!0, 0, n);
  let i = 0,
    e = !1,
    t = n.reduce((r, o, a) => {
      if (typeof o == "object" && o != null) {
        if (o.outlets) {
          let l = {};
          return (
            Object.entries(o.outlets).forEach(([u, f]) => {
              l[u] = typeof f == "string" ? f.split("/") : f;
            }),
            [...r, { outlets: l }]
          );
        }
        if (o.segmentPath) return [...r, o.segmentPath];
      }
      return typeof o != "string"
        ? [...r, o]
        : a === 0
        ? (o.split("/").forEach((l, u) => {
            (u == 0 && l === ".") ||
              (u == 0 && l === ""
                ? (e = !0)
                : l === ".."
                ? i++
                : l != "" && r.push(l));
          }),
          r)
        : [...r, o];
    }, []);
  return new _c(e, i, t);
}
var ta = class {
  constructor(i, e, t) {
    (this.segmentGroup = i), (this.processChildren = e), (this.index = t);
  }
};
function XC(n, i, e) {
  if (n.isAbsolute) return new ta(i, !0, 0);
  if (!e) return new ta(i, !1, NaN);
  if (e.parent === null) return new ta(e, !0, 0);
  let t = gc(n.commands[0]) ? 0 : 1,
    r = e.segments.length - 1 + t;
  return ZC(e, r, n.numberOfDoubleDots);
}
function ZC(n, i, e) {
  let t = n,
    r = i,
    o = e;
  for (; o > r; ) {
    if (((o -= r), (t = t.parent), !t)) throw new ct(4005, !1);
    r = t.segments.length;
  }
  return new ta(t, !1, r - o);
}
function JC(n) {
  return _s(n[0]) ? n[0].outlets : { [Ge]: n };
}
function J0(n, i, e) {
  if (((n ??= new pt([], {})), n.segments.length === 0 && n.hasChildren()))
    return ms(n, i, e);
  let t = ew(n, i, e),
    r = e.slice(t.commandIndex);
  if (t.match && t.pathIndex < n.segments.length) {
    let o = new pt(n.segments.slice(0, t.pathIndex), {});
    return (
      (o.children[Ge] = new pt(n.segments.slice(t.pathIndex), n.children)),
      ms(o, 0, r)
    );
  } else
    return t.match && r.length === 0
      ? new pt(n.segments, {})
      : t.match && !n.hasChildren()
      ? Fh(n, i, e)
      : t.match
      ? ms(n, 0, r)
      : Fh(n, i, e);
}
function ms(n, i, e) {
  if (e.length === 0) return new pt(n.segments, {});
  {
    let t = JC(e),
      r = {};
    if (
      Object.keys(t).some((o) => o !== Ge) &&
      n.children[Ge] &&
      n.numberOfChildren === 1 &&
      n.children[Ge].segments.length === 0
    ) {
      let o = ms(n.children[Ge], i, e);
      return new pt(n.segments, o.children);
    }
    return (
      Object.entries(t).forEach(([o, a]) => {
        typeof a == "string" && (a = [a]),
          a !== null && (r[o] = J0(n.children[o], i, a));
      }),
      Object.entries(n.children).forEach(([o, a]) => {
        t[o] === void 0 && (r[o] = a);
      }),
      new pt(n.segments, r)
    );
  }
}
function ew(n, i, e) {
  let t = 0,
    r = i,
    o = { match: !1, pathIndex: 0, commandIndex: 0 };
  for (; r < n.segments.length; ) {
    if (t >= e.length) return o;
    let a = n.segments[r],
      l = e[t];
    if (_s(l)) break;
    let u = `${l}`,
      f = t < e.length - 1 ? e[t + 1] : null;
    if (r > 0 && u === void 0) break;
    if (u && f && typeof f == "object" && f.outlets === void 0) {
      if (!A0(u, f, a)) return o;
      t += 2;
    } else {
      if (!A0(u, {}, a)) return o;
      t++;
    }
    r++;
  }
  return { match: !0, pathIndex: r, commandIndex: t };
}
function Fh(n, i, e) {
  let t = n.segments.slice(0, i),
    r = 0;
  for (; r < e.length; ) {
    let o = e[r];
    if (_s(o)) {
      let u = tw(o.outlets);
      return new pt(t, u);
    }
    if (r === 0 && gc(e[0])) {
      let u = n.segments[i];
      t.push(new co(u.path, I0(e[0]))), r++;
      continue;
    }
    let a = _s(o) ? o.outlets[Ge] : `${o}`,
      l = r < e.length - 1 ? e[r + 1] : null;
    a && l && gc(l)
      ? (t.push(new co(a, I0(l))), (r += 2))
      : (t.push(new co(a, {})), r++);
  }
  return new pt(t, {});
}
function tw(n) {
  let i = {};
  return (
    Object.entries(n).forEach(([e, t]) => {
      typeof t == "string" && (t = [t]),
        t !== null && (i[e] = Fh(new pt([], {}), 0, t));
    }),
    i
  );
}
function I0(n) {
  let i = {};
  return Object.entries(n).forEach(([e, t]) => (i[e] = `${t}`)), i;
}
function A0(n, i, e) {
  return n == e.path && qn(i, e.parameters);
}
var fs = "imperative",
  mi = (function (n) {
    return (
      (n[(n.NavigationStart = 0)] = "NavigationStart"),
      (n[(n.NavigationEnd = 1)] = "NavigationEnd"),
      (n[(n.NavigationCancel = 2)] = "NavigationCancel"),
      (n[(n.NavigationError = 3)] = "NavigationError"),
      (n[(n.RoutesRecognized = 4)] = "RoutesRecognized"),
      (n[(n.ResolveStart = 5)] = "ResolveStart"),
      (n[(n.ResolveEnd = 6)] = "ResolveEnd"),
      (n[(n.GuardsCheckStart = 7)] = "GuardsCheckStart"),
      (n[(n.GuardsCheckEnd = 8)] = "GuardsCheckEnd"),
      (n[(n.RouteConfigLoadStart = 9)] = "RouteConfigLoadStart"),
      (n[(n.RouteConfigLoadEnd = 10)] = "RouteConfigLoadEnd"),
      (n[(n.ChildActivationStart = 11)] = "ChildActivationStart"),
      (n[(n.ChildActivationEnd = 12)] = "ChildActivationEnd"),
      (n[(n.ActivationStart = 13)] = "ActivationStart"),
      (n[(n.ActivationEnd = 14)] = "ActivationEnd"),
      (n[(n.Scroll = 15)] = "Scroll"),
      (n[(n.NavigationSkipped = 16)] = "NavigationSkipped"),
      n
    );
  })(mi || {}),
  un = class {
    constructor(i, e) {
      (this.id = i), (this.url = e);
    }
  },
  aa = class extends un {
    constructor(i, e, t = "imperative", r = null) {
      super(i, e),
        (this.type = mi.NavigationStart),
        (this.navigationTrigger = t),
        (this.restoredState = r);
    }
    toString() {
      return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
    }
  },
  ci = class extends un {
    constructor(i, e, t) {
      super(i, e), (this.urlAfterRedirects = t), (this.type = mi.NavigationEnd);
    }
    toString() {
      return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
    }
  },
  Ki = (function (n) {
    return (
      (n[(n.Redirect = 0)] = "Redirect"),
      (n[(n.SupersededByNewNavigation = 1)] = "SupersededByNewNavigation"),
      (n[(n.NoDataFromResolver = 2)] = "NoDataFromResolver"),
      (n[(n.GuardRejected = 3)] = "GuardRejected"),
      n
    );
  })(Ki || {}),
  bc = (function (n) {
    return (
      (n[(n.IgnoredSameUrlNavigation = 0)] = "IgnoredSameUrlNavigation"),
      (n[(n.IgnoredByUrlHandlingStrategy = 1)] =
        "IgnoredByUrlHandlingStrategy"),
      n
    );
  })(bc || {}),
  hr = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.reason = t),
        (this.code = r),
        (this.type = mi.NavigationCancel);
    }
    toString() {
      return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
    }
  },
  Fr = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.reason = t),
        (this.code = r),
        (this.type = mi.NavigationSkipped);
    }
  },
  bs = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.error = t),
        (this.target = r),
        (this.type = mi.NavigationError);
    }
    toString() {
      return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
    }
  },
  vc = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.urlAfterRedirects = t),
        (this.state = r),
        (this.type = mi.RoutesRecognized);
    }
    toString() {
      return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  Nh = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.urlAfterRedirects = t),
        (this.state = r),
        (this.type = mi.GuardsCheckStart);
    }
    toString() {
      return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  Lh = class extends un {
    constructor(i, e, t, r, o) {
      super(i, e),
        (this.urlAfterRedirects = t),
        (this.state = r),
        (this.shouldActivate = o),
        (this.type = mi.GuardsCheckEnd);
    }
    toString() {
      return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
    }
  },
  Vh = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.urlAfterRedirects = t),
        (this.state = r),
        (this.type = mi.ResolveStart);
    }
    toString() {
      return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  Bh = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.urlAfterRedirects = t),
        (this.state = r),
        (this.type = mi.ResolveEnd);
    }
    toString() {
      return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  Hh = class {
    constructor(i) {
      (this.route = i), (this.type = mi.RouteConfigLoadStart);
    }
    toString() {
      return `RouteConfigLoadStart(path: ${this.route.path})`;
    }
  },
  jh = class {
    constructor(i) {
      (this.route = i), (this.type = mi.RouteConfigLoadEnd);
    }
    toString() {
      return `RouteConfigLoadEnd(path: ${this.route.path})`;
    }
  },
  Uh = class {
    constructor(i) {
      (this.snapshot = i), (this.type = mi.ChildActivationStart);
    }
    toString() {
      return `ChildActivationStart(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  zh = class {
    constructor(i) {
      (this.snapshot = i), (this.type = mi.ChildActivationEnd);
    }
    toString() {
      return `ChildActivationEnd(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  $h = class {
    constructor(i) {
      (this.snapshot = i), (this.type = mi.ActivationStart);
    }
    toString() {
      return `ActivationStart(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  Wh = class {
    constructor(i) {
      (this.snapshot = i), (this.type = mi.ActivationEnd);
    }
    toString() {
      return `ActivationEnd(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  yc = class {
    constructor(i, e, t) {
      (this.routerEvent = i),
        (this.position = e),
        (this.anchor = t),
        (this.type = mi.Scroll);
    }
    toString() {
      let i = this.position ? `${this.position[0]}, ${this.position[1]}` : null;
      return `Scroll(anchor: '${this.anchor}', position: '${i}')`;
    }
  },
  vs = class {},
  sa = class {
    constructor(i, e) {
      (this.url = i), (this.navigationBehaviorOptions = e);
    }
  };
function iw(n, i) {
  return (
    n.providers &&
      !n._injector &&
      (n._injector = th(n.providers, i, `Route: ${n.path}`)),
    n._injector ?? i
  );
}
function Mn(n) {
  return n.outlet || Ge;
}
function nw(n, i) {
  let e = n.filter((t) => Mn(t) === i);
  return e.push(...n.filter((t) => Mn(t) !== i)), e;
}
function Ts(n) {
  if (!n) return null;
  if (n.routeConfig?._injector) return n.routeConfig._injector;
  for (let i = n.parent; i; i = i.parent) {
    let e = i.routeConfig;
    if (e?._loadedInjector) return e._loadedInjector;
    if (e?._injector) return e._injector;
  }
  return null;
}
var Gh = class {
    get injector() {
      return Ts(this.route?.snapshot) ?? this.rootInjector;
    }
    set injector(i) {}
    constructor(i) {
      (this.rootInjector = i),
        (this.outlet = null),
        (this.route = null),
        (this.children = new Es(this.rootInjector)),
        (this.attachRef = null);
    }
  },
  Es = (() => {
    class n {
      constructor(e) {
        (this.rootInjector = e), (this.contexts = new Map());
      }
      onChildOutletCreated(e, t) {
        let r = this.getOrCreateContext(e);
        (r.outlet = t), this.contexts.set(e, r);
      }
      onChildOutletDestroyed(e) {
        let t = this.getContext(e);
        t && ((t.outlet = null), (t.attachRef = null));
      }
      onOutletDeactivated() {
        let e = this.contexts;
        return (this.contexts = new Map()), e;
      }
      onOutletReAttached(e) {
        this.contexts = e;
      }
      getOrCreateContext(e) {
        let t = this.getContext(e);
        return (
          t || ((t = new Gh(this.rootInjector)), this.contexts.set(e, t)), t
        );
      }
      getContext(e) {
        return this.contexts.get(e) || null;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(an));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  xc = class {
    constructor(i) {
      this._root = i;
    }
    get root() {
      return this._root.value;
    }
    parent(i) {
      let e = this.pathFromRoot(i);
      return e.length > 1 ? e[e.length - 2] : null;
    }
    children(i) {
      let e = Yh(i, this._root);
      return e ? e.children.map((t) => t.value) : [];
    }
    firstChild(i) {
      let e = Yh(i, this._root);
      return e && e.children.length > 0 ? e.children[0].value : null;
    }
    siblings(i) {
      let e = qh(i, this._root);
      return e.length < 2
        ? []
        : e[e.length - 2].children.map((r) => r.value).filter((r) => r !== i);
    }
    pathFromRoot(i) {
      return qh(i, this._root).map((e) => e.value);
    }
  };
function Yh(n, i) {
  if (n === i.value) return i;
  for (let e of i.children) {
    let t = Yh(n, e);
    if (t) return t;
  }
  return null;
}
function qh(n, i) {
  if (n === i.value) return [i];
  for (let e of i.children) {
    let t = qh(n, e);
    if (t.length) return t.unshift(i), t;
  }
  return [];
}
var qi = class {
  constructor(i, e) {
    (this.value = i), (this.children = e);
  }
  toString() {
    return `TreeNode(${this.value})`;
  }
};
function ea(n) {
  let i = {};
  return n && n.children.forEach((e) => (i[e.value.outlet] = e)), i;
}
var Cc = class extends xc {
  constructor(i, e) {
    super(i), (this.snapshot = e), np(this, i);
  }
  toString() {
    return this.snapshot.toString();
  }
};
function e_(n) {
  let i = rw(n),
    e = new Nt([new co("", {})]),
    t = new Nt({}),
    r = new Nt({}),
    o = new Nt({}),
    a = new Nt(""),
    l = new Zt(e, t, o, a, r, Ge, n, i.root);
  return (l.snapshot = i.root), new Cc(new qi(l, []), i);
}
function rw(n) {
  let i = {},
    e = {},
    t = {},
    r = "",
    o = new ia([], i, t, r, e, Ge, n, null, {});
  return new Dc("", new qi(o, []));
}
var Zt = class {
  constructor(i, e, t, r, o, a, l, u) {
    (this.urlSubject = i),
      (this.paramsSubject = e),
      (this.queryParamsSubject = t),
      (this.fragmentSubject = r),
      (this.dataSubject = o),
      (this.outlet = a),
      (this.component = l),
      (this._futureSnapshot = u),
      (this.title = this.dataSubject?.pipe(qe((f) => f[Ss])) ?? fe(void 0)),
      (this.url = i),
      (this.params = e),
      (this.queryParams = t),
      (this.fragment = r),
      (this.data = o);
  }
  get routeConfig() {
    return this._futureSnapshot.routeConfig;
  }
  get root() {
    return this._routerState.root;
  }
  get parent() {
    return this._routerState.parent(this);
  }
  get firstChild() {
    return this._routerState.firstChild(this);
  }
  get children() {
    return this._routerState.children(this);
  }
  get pathFromRoot() {
    return this._routerState.pathFromRoot(this);
  }
  get paramMap() {
    return (
      (this._paramMap ??= this.params.pipe(qe((i) => ra(i)))), this._paramMap
    );
  }
  get queryParamMap() {
    return (
      (this._queryParamMap ??= this.queryParams.pipe(qe((i) => ra(i)))),
      this._queryParamMap
    );
  }
  toString() {
    return this.snapshot
      ? this.snapshot.toString()
      : `Future(${this._futureSnapshot})`;
  }
};
function wc(n, i, e = "emptyOnly") {
  let t,
    { routeConfig: r } = n;
  return (
    i !== null &&
    (e === "always" ||
      r?.path === "" ||
      (!i.component && !i.routeConfig?.loadComponent))
      ? (t = {
          params: W(W({}, i.params), n.params),
          data: W(W({}, i.data), n.data),
          resolve: W(W(W(W({}, n.data), i.data), r?.data), n._resolvedData),
        })
      : (t = {
          params: W({}, n.params),
          data: W({}, n.data),
          resolve: W(W({}, n.data), n._resolvedData ?? {}),
        }),
    r && i_(r) && (t.resolve[Ss] = r.title),
    t
  );
}
var ia = class {
    get title() {
      return this.data?.[Ss];
    }
    constructor(i, e, t, r, o, a, l, u, f) {
      (this.url = i),
        (this.params = e),
        (this.queryParams = t),
        (this.fragment = r),
        (this.data = o),
        (this.outlet = a),
        (this.component = l),
        (this.routeConfig = u),
        (this._resolve = f);
    }
    get root() {
      return this._routerState.root;
    }
    get parent() {
      return this._routerState.parent(this);
    }
    get firstChild() {
      return this._routerState.firstChild(this);
    }
    get children() {
      return this._routerState.children(this);
    }
    get pathFromRoot() {
      return this._routerState.pathFromRoot(this);
    }
    get paramMap() {
      return (this._paramMap ??= ra(this.params)), this._paramMap;
    }
    get queryParamMap() {
      return (
        (this._queryParamMap ??= ra(this.queryParams)), this._queryParamMap
      );
    }
    toString() {
      let i = this.url.map((t) => t.toString()).join("/"),
        e = this.routeConfig ? this.routeConfig.path : "";
      return `Route(url:'${i}', path:'${e}')`;
    }
  },
  Dc = class extends xc {
    constructor(i, e) {
      super(e), (this.url = i), np(this, e);
    }
    toString() {
      return t_(this._root);
    }
  };
function np(n, i) {
  (i.value._routerState = n), i.children.forEach((e) => np(n, e));
}
function t_(n) {
  let i = n.children.length > 0 ? ` { ${n.children.map(t_).join(", ")} } ` : "";
  return `${n.value}${i}`;
}
function Oh(n) {
  if (n.snapshot) {
    let i = n.snapshot,
      e = n._futureSnapshot;
    (n.snapshot = e),
      qn(i.queryParams, e.queryParams) ||
        n.queryParamsSubject.next(e.queryParams),
      i.fragment !== e.fragment && n.fragmentSubject.next(e.fragment),
      qn(i.params, e.params) || n.paramsSubject.next(e.params),
      PC(i.url, e.url) || n.urlSubject.next(e.url),
      qn(i.data, e.data) || n.dataSubject.next(e.data);
  } else
    (n.snapshot = n._futureSnapshot),
      n.dataSubject.next(n._futureSnapshot.data);
}
function Kh(n, i) {
  let e = qn(n.params, i.params) && FC(n.url, i.url),
    t = !n.parent != !i.parent;
  return e && !t && (!n.parent || Kh(n.parent, i.parent));
}
function i_(n) {
  return typeof n.title == "string" || n.title === null;
}
var po = (() => {
    class n {
      constructor() {
        (this.activated = null),
          (this._activatedRoute = null),
          (this.name = Ge),
          (this.activateEvents = new xe()),
          (this.deactivateEvents = new xe()),
          (this.attachEvents = new xe()),
          (this.detachEvents = new xe()),
          (this.parentContexts = G(Es)),
          (this.location = G(Wi)),
          (this.changeDetector = G(Ke)),
          (this.inputBinder = G(Ec, { optional: !0 })),
          (this.supportsBindingToComponentInputs = !0);
      }
      get activatedComponentRef() {
        return this.activated;
      }
      ngOnChanges(e) {
        if (e.name) {
          let { firstChange: t, previousValue: r } = e.name;
          if (t) return;
          this.isTrackedInParentContexts(r) &&
            (this.deactivate(), this.parentContexts.onChildOutletDestroyed(r)),
            this.initializeOutletWithName();
        }
      }
      ngOnDestroy() {
        this.isTrackedInParentContexts(this.name) &&
          this.parentContexts.onChildOutletDestroyed(this.name),
          this.inputBinder?.unsubscribeFromRouteData(this);
      }
      isTrackedInParentContexts(e) {
        return this.parentContexts.getContext(e)?.outlet === this;
      }
      ngOnInit() {
        this.initializeOutletWithName();
      }
      initializeOutletWithName() {
        if (
          (this.parentContexts.onChildOutletCreated(this.name, this),
          this.activated)
        )
          return;
        let e = this.parentContexts.getContext(this.name);
        e?.route &&
          (e.attachRef
            ? this.attach(e.attachRef, e.route)
            : this.activateWith(e.route, e.injector));
      }
      get isActivated() {
        return !!this.activated;
      }
      get component() {
        if (!this.activated) throw new ct(4012, !1);
        return this.activated.instance;
      }
      get activatedRoute() {
        if (!this.activated) throw new ct(4012, !1);
        return this._activatedRoute;
      }
      get activatedRouteData() {
        return this._activatedRoute ? this._activatedRoute.snapshot.data : {};
      }
      detach() {
        if (!this.activated) throw new ct(4012, !1);
        this.location.detach();
        let e = this.activated;
        return (
          (this.activated = null),
          (this._activatedRoute = null),
          this.detachEvents.emit(e.instance),
          e
        );
      }
      attach(e, t) {
        (this.activated = e),
          (this._activatedRoute = t),
          this.location.insert(e.hostView),
          this.inputBinder?.bindActivatedRouteToOutletComponent(this),
          this.attachEvents.emit(e.instance);
      }
      deactivate() {
        if (this.activated) {
          let e = this.component;
          this.activated.destroy(),
            (this.activated = null),
            (this._activatedRoute = null),
            this.deactivateEvents.emit(e);
        }
      }
      activateWith(e, t) {
        if (this.isActivated) throw new ct(4013, !1);
        this._activatedRoute = e;
        let r = this.location,
          a = e.snapshot.component,
          l = this.parentContexts.getOrCreateContext(this.name).children,
          u = new Qh(e, l, r.injector);
        (this.activated = r.createComponent(a, {
          index: r.length,
          injector: u,
          environmentInjector: t,
        })),
          this.changeDetector.markForCheck(),
          this.inputBinder?.bindActivatedRouteToOutletComponent(this),
          this.activateEvents.emit(this.activated.instance);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["router-outlet"]],
          inputs: { name: "name" },
          outputs: {
            activateEvents: "activate",
            deactivateEvents: "deactivate",
            attachEvents: "attach",
            detachEvents: "detach",
          },
          exportAs: ["outlet"],
          standalone: !0,
          features: [wt],
        });
      }
    }
    return n;
  })(),
  Qh = class n {
    __ngOutletInjector(i) {
      return new n(this.route, this.childContexts, i);
    }
    constructor(i, e, t) {
      (this.route = i), (this.childContexts = e), (this.parent = t);
    }
    get(i, e) {
      return i === Zt
        ? this.route
        : i === Es
        ? this.childContexts
        : this.parent.get(i, e);
    }
  },
  Ec = new we(""),
  R0 = (() => {
    class n {
      constructor() {
        this.outletDataSubscriptions = new Map();
      }
      bindActivatedRouteToOutletComponent(e) {
        this.unsubscribeFromRouteData(e), this.subscribeToRouteData(e);
      }
      unsubscribeFromRouteData(e) {
        this.outletDataSubscriptions.get(e)?.unsubscribe(),
          this.outletDataSubscriptions.delete(e);
      }
      subscribeToRouteData(e) {
        let { activatedRoute: t } = e,
          r = ro([t.queryParams, t.params, t.data])
            .pipe(
              Ci(
                ([o, a, l], u) => (
                  (l = W(W(W({}, o), a), l)),
                  u === 0 ? fe(l) : Promise.resolve(l)
                )
              )
            )
            .subscribe((o) => {
              if (
                !e.isActivated ||
                !e.activatedComponentRef ||
                e.activatedRoute !== t ||
                t.component === null
              ) {
                this.unsubscribeFromRouteData(e);
                return;
              }
              let a = zg(t.component);
              if (!a) {
                this.unsubscribeFromRouteData(e);
                return;
              }
              for (let { templateName: l } of a.inputs)
                e.activatedComponentRef.setInput(l, o[l]);
            });
        this.outletDataSubscriptions.set(e, r);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function ow(n, i, e) {
  let t = ys(n, i._root, e ? e._root : void 0);
  return new Cc(t, i);
}
function ys(n, i, e) {
  if (e && n.shouldReuseRoute(i.value, e.value.snapshot)) {
    let t = e.value;
    t._futureSnapshot = i.value;
    let r = aw(n, i, e);
    return new qi(t, r);
  } else {
    if (n.shouldAttach(i.value)) {
      let o = n.retrieve(i.value);
      if (o !== null) {
        let a = o.route;
        return (
          (a.value._futureSnapshot = i.value),
          (a.children = i.children.map((l) => ys(n, l))),
          a
        );
      }
    }
    let t = sw(i.value),
      r = i.children.map((o) => ys(n, o));
    return new qi(t, r);
  }
}
function aw(n, i, e) {
  return i.children.map((t) => {
    for (let r of e.children)
      if (n.shouldReuseRoute(t.value, r.value.snapshot)) return ys(n, t, r);
    return ys(n, t);
  });
}
function sw(n) {
  return new Zt(
    new Nt(n.url),
    new Nt(n.params),
    new Nt(n.queryParams),
    new Nt(n.fragment),
    new Nt(n.data),
    n.outlet,
    n.component,
    n
  );
}
var xs = class {
    constructor(i, e) {
      (this.redirectTo = i), (this.navigationBehaviorOptions = e);
    }
  },
  n_ = "ngNavigationCancelingError";
function Sc(n, i) {
  let { redirectTo: e, navigationBehaviorOptions: t } = ho(i)
      ? { redirectTo: i, navigationBehaviorOptions: void 0 }
      : i,
    r = r_(!1, Ki.Redirect);
  return (r.url = e), (r.navigationBehaviorOptions = t), r;
}
function r_(n, i) {
  let e = new Error(`NavigationCancelingError: ${n || ""}`);
  return (e[n_] = !0), (e.cancellationCode = i), e;
}
function lw(n) {
  return o_(n) && ho(n.url);
}
function o_(n) {
  return !!n && n[n_];
}
var cw = (n, i, e, t) =>
    qe(
      (r) => (
        new Xh(i, r.targetRouterState, r.currentRouterState, e, t).activate(n),
        r
      )
    ),
  Xh = class {
    constructor(i, e, t, r, o) {
      (this.routeReuseStrategy = i),
        (this.futureState = e),
        (this.currState = t),
        (this.forwardEvent = r),
        (this.inputBindingEnabled = o);
    }
    activate(i) {
      let e = this.futureState._root,
        t = this.currState ? this.currState._root : null;
      this.deactivateChildRoutes(e, t, i),
        Oh(this.futureState.root),
        this.activateChildRoutes(e, t, i);
    }
    deactivateChildRoutes(i, e, t) {
      let r = ea(e);
      i.children.forEach((o) => {
        let a = o.value.outlet;
        this.deactivateRoutes(o, r[a], t), delete r[a];
      }),
        Object.values(r).forEach((o) => {
          this.deactivateRouteAndItsChildren(o, t);
        });
    }
    deactivateRoutes(i, e, t) {
      let r = i.value,
        o = e ? e.value : null;
      if (r === o)
        if (r.component) {
          let a = t.getContext(r.outlet);
          a && this.deactivateChildRoutes(i, e, a.children);
        } else this.deactivateChildRoutes(i, e, t);
      else o && this.deactivateRouteAndItsChildren(e, t);
    }
    deactivateRouteAndItsChildren(i, e) {
      i.value.component &&
      this.routeReuseStrategy.shouldDetach(i.value.snapshot)
        ? this.detachAndStoreRouteSubtree(i, e)
        : this.deactivateRouteAndOutlet(i, e);
    }
    detachAndStoreRouteSubtree(i, e) {
      let t = e.getContext(i.value.outlet),
        r = t && i.value.component ? t.children : e,
        o = ea(i);
      for (let a of Object.values(o)) this.deactivateRouteAndItsChildren(a, r);
      if (t && t.outlet) {
        let a = t.outlet.detach(),
          l = t.children.onOutletDeactivated();
        this.routeReuseStrategy.store(i.value.snapshot, {
          componentRef: a,
          route: i,
          contexts: l,
        });
      }
    }
    deactivateRouteAndOutlet(i, e) {
      let t = e.getContext(i.value.outlet),
        r = t && i.value.component ? t.children : e,
        o = ea(i);
      for (let a of Object.values(o)) this.deactivateRouteAndItsChildren(a, r);
      t &&
        (t.outlet && (t.outlet.deactivate(), t.children.onOutletDeactivated()),
        (t.attachRef = null),
        (t.route = null));
    }
    activateChildRoutes(i, e, t) {
      let r = ea(e);
      i.children.forEach((o) => {
        this.activateRoutes(o, r[o.value.outlet], t),
          this.forwardEvent(new Wh(o.value.snapshot));
      }),
        i.children.length && this.forwardEvent(new zh(i.value.snapshot));
    }
    activateRoutes(i, e, t) {
      let r = i.value,
        o = e ? e.value : null;
      if ((Oh(r), r === o))
        if (r.component) {
          let a = t.getOrCreateContext(r.outlet);
          this.activateChildRoutes(i, e, a.children);
        } else this.activateChildRoutes(i, e, t);
      else if (r.component) {
        let a = t.getOrCreateContext(r.outlet);
        if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
          let l = this.routeReuseStrategy.retrieve(r.snapshot);
          this.routeReuseStrategy.store(r.snapshot, null),
            a.children.onOutletReAttached(l.contexts),
            (a.attachRef = l.componentRef),
            (a.route = l.route.value),
            a.outlet && a.outlet.attach(l.componentRef, l.route.value),
            Oh(l.route.value),
            this.activateChildRoutes(i, null, a.children);
        } else
          (a.attachRef = null),
            (a.route = r),
            a.outlet && a.outlet.activateWith(r, a.injector),
            this.activateChildRoutes(i, null, a.children);
      } else this.activateChildRoutes(i, null, t);
    }
  },
  Mc = class {
    constructor(i) {
      (this.path = i), (this.route = this.path[this.path.length - 1]);
    }
  },
  na = class {
    constructor(i, e) {
      (this.component = i), (this.route = e);
    }
  };
function dw(n, i, e) {
  let t = n._root,
    r = i ? i._root : null;
  return hs(t, r, e, [t.value]);
}
function uw(n) {
  let i = n.routeConfig ? n.routeConfig.canActivateChild : null;
  return !i || i.length === 0 ? null : { node: n, guards: i };
}
function ca(n, i) {
  let e = Symbol(),
    t = i.get(n, e);
  return t === e ? (typeof n == "function" && !vg(n) ? n : i.get(n)) : t;
}
function hs(
  n,
  i,
  e,
  t,
  r = { canDeactivateChecks: [], canActivateChecks: [] }
) {
  let o = ea(i);
  return (
    n.children.forEach((a) => {
      hw(a, o[a.value.outlet], e, t.concat([a.value]), r),
        delete o[a.value.outlet];
    }),
    Object.entries(o).forEach(([a, l]) => gs(l, e.getContext(a), r)),
    r
  );
}
function hw(
  n,
  i,
  e,
  t,
  r = { canDeactivateChecks: [], canActivateChecks: [] }
) {
  let o = n.value,
    a = i ? i.value : null,
    l = e ? e.getContext(n.value.outlet) : null;
  if (a && o.routeConfig === a.routeConfig) {
    let u = pw(a, o, o.routeConfig.runGuardsAndResolvers);
    u
      ? r.canActivateChecks.push(new Mc(t))
      : ((o.data = a.data), (o._resolvedData = a._resolvedData)),
      o.component ? hs(n, i, l ? l.children : null, t, r) : hs(n, i, e, t, r),
      u &&
        l &&
        l.outlet &&
        l.outlet.isActivated &&
        r.canDeactivateChecks.push(new na(l.outlet.component, a));
  } else
    a && gs(i, l, r),
      r.canActivateChecks.push(new Mc(t)),
      o.component
        ? hs(n, null, l ? l.children : null, t, r)
        : hs(n, null, e, t, r);
  return r;
}
function pw(n, i, e) {
  if (typeof e == "function") return e(n, i);
  switch (e) {
    case "pathParamsChange":
      return !uo(n.url, i.url);
    case "pathParamsOrQueryParamsChange":
      return !uo(n.url, i.url) || !qn(n.queryParams, i.queryParams);
    case "always":
      return !0;
    case "paramsOrQueryParamsChange":
      return !Kh(n, i) || !qn(n.queryParams, i.queryParams);
    case "paramsChange":
    default:
      return !Kh(n, i);
  }
}
function gs(n, i, e) {
  let t = ea(n),
    r = n.value;
  Object.entries(t).forEach(([o, a]) => {
    r.component
      ? i
        ? gs(a, i.children.getContext(o), e)
        : gs(a, null, e)
      : gs(a, i, e);
  }),
    r.component
      ? i && i.outlet && i.outlet.isActivated
        ? e.canDeactivateChecks.push(new na(i.outlet.component, r))
        : e.canDeactivateChecks.push(new na(null, r))
      : e.canDeactivateChecks.push(new na(null, r));
}
function Os(n) {
  return typeof n == "function";
}
function mw(n) {
  return typeof n == "boolean";
}
function fw(n) {
  return n && Os(n.canLoad);
}
function gw(n) {
  return n && Os(n.canActivate);
}
function _w(n) {
  return n && Os(n.canActivateChild);
}
function bw(n) {
  return n && Os(n.canDeactivate);
}
function vw(n) {
  return n && Os(n.canMatch);
}
function a_(n) {
  return n instanceof ug || n?.name === "EmptyError";
}
var hc = Symbol("INITIAL_VALUE");
function la() {
  return Ci((n) =>
    ro(n.map((i) => i.pipe($i(1), Un(hc)))).pipe(
      qe((i) => {
        for (let e of i)
          if (e !== !0) {
            if (e === hc) return hc;
            if (e === !1 || yw(e)) return e;
          }
        return !0;
      }),
      Ct((i) => i !== hc),
      $i(1)
    )
  );
}
function yw(n) {
  return ho(n) || n instanceof xs;
}
function xw(n, i) {
  return Ri((e) => {
    let {
      targetSnapshot: t,
      currentSnapshot: r,
      guards: { canActivateChecks: o, canDeactivateChecks: a },
    } = e;
    return a.length === 0 && o.length === 0
      ? fe(Ce(W({}, e), { guardsResult: !0 }))
      : Cw(a, t, r, n).pipe(
          Ri((l) => (l && mw(l) ? ww(t, o, n, i) : fe(l))),
          qe((l) => Ce(W({}, e), { guardsResult: l }))
        );
  });
}
function Cw(n, i, e, t) {
  return ui(n).pipe(
    Ri((r) => Ew(r.component, r.route, e, i, t)),
    Or((r) => r !== !0, !0)
  );
}
function ww(n, i, e, t) {
  return ui(i).pipe(
    Tr((r) =>
      Hl(
        Sw(r.route.parent, t),
        Dw(r.route, t),
        Tw(n, r.path, e),
        Mw(n, r.route, e)
      )
    ),
    Or((r) => r !== !0, !0)
  );
}
function Dw(n, i) {
  return n !== null && i && i(new $h(n)), fe(!0);
}
function Sw(n, i) {
  return n !== null && i && i(new Uh(n)), fe(!0);
}
function Mw(n, i, e) {
  let t = i.routeConfig ? i.routeConfig.canActivate : null;
  if (!t || t.length === 0) return fe(!0);
  let r = t.map((o) =>
    Wu(() => {
      let a = Ts(i) ?? e,
        l = ca(o, a),
        u = gw(l) ? l.canActivate(i, n) : sn(a, () => l(i, n));
      return Nr(u).pipe(Or());
    })
  );
  return fe(r).pipe(la());
}
function Tw(n, i, e) {
  let t = i[i.length - 1],
    o = i
      .slice(0, i.length - 1)
      .reverse()
      .map((a) => uw(a))
      .filter((a) => a !== null)
      .map((a) =>
        Wu(() => {
          let l = a.guards.map((u) => {
            let f = Ts(a.node) ?? e,
              v = ca(u, f),
              D = _w(v) ? v.canActivateChild(t, n) : sn(f, () => v(t, n));
            return Nr(D).pipe(Or());
          });
          return fe(l).pipe(la());
        })
      );
  return fe(o).pipe(la());
}
function Ew(n, i, e, t, r) {
  let o = i && i.routeConfig ? i.routeConfig.canDeactivate : null;
  if (!o || o.length === 0) return fe(!0);
  let a = o.map((l) => {
    let u = Ts(i) ?? r,
      f = ca(l, u),
      v = bw(f) ? f.canDeactivate(n, i, e, t) : sn(u, () => f(n, i, e, t));
    return Nr(v).pipe(Or());
  });
  return fe(a).pipe(la());
}
function Ow(n, i, e, t) {
  let r = i.canLoad;
  if (r === void 0 || r.length === 0) return fe(!0);
  let o = r.map((a) => {
    let l = ca(a, n),
      u = fw(l) ? l.canLoad(i, e) : sn(n, () => l(i, e));
    return Nr(u);
  });
  return fe(o).pipe(la(), s_(t));
}
function s_(n) {
  return dg(
    Kt((i) => {
      if (typeof i != "boolean") throw Sc(n, i);
    }),
    qe((i) => i === !0)
  );
}
function kw(n, i, e, t) {
  let r = i.canMatch;
  if (!r || r.length === 0) return fe(!0);
  let o = r.map((a) => {
    let l = ca(a, n),
      u = vw(l) ? l.canMatch(i, e) : sn(n, () => l(i, e));
    return Nr(u);
  });
  return fe(o).pipe(la(), s_(t));
}
var Cs = class {
    constructor(i) {
      this.segmentGroup = i || null;
    }
  },
  ws = class extends Error {
    constructor(i) {
      super(), (this.urlTree = i);
    }
  };
function Jo(n) {
  return Ga(new Cs(n));
}
function Pw(n) {
  return Ga(new ct(4e3, !1));
}
function Iw(n) {
  return Ga(r_(!1, Ki.GuardRejected));
}
var Zh = class {
    constructor(i, e) {
      (this.urlSerializer = i), (this.urlTree = e);
    }
    lineralizeSegments(i, e) {
      let t = [],
        r = e.root;
      for (;;) {
        if (((t = t.concat(r.segments)), r.numberOfChildren === 0))
          return fe(t);
        if (r.numberOfChildren > 1 || !r.children[Ge])
          return Pw(`${i.redirectTo}`);
        r = r.children[Ge];
      }
    }
    applyRedirectCommands(i, e, t, r, o) {
      if (typeof e != "string") {
        let l = e,
          {
            queryParams: u,
            fragment: f,
            routeConfig: v,
            url: D,
            outlet: T,
            params: M,
            data: k,
            title: V,
          } = r,
          A = sn(o, () =>
            l({
              params: M,
              data: k,
              queryParams: u,
              fragment: f,
              routeConfig: v,
              url: D,
              outlet: T,
              title: V,
            })
          );
        if (A instanceof pr) throw new ws(A);
        e = A;
      }
      let a = this.applyRedirectCreateUrlTree(
        e,
        this.urlSerializer.parse(e),
        i,
        t
      );
      if (e[0] === "/") throw new ws(a);
      return a;
    }
    applyRedirectCreateUrlTree(i, e, t, r) {
      let o = this.createSegmentGroup(i, e.root, t, r);
      return new pr(
        o,
        this.createQueryParams(e.queryParams, this.urlTree.queryParams),
        e.fragment
      );
    }
    createQueryParams(i, e) {
      let t = {};
      return (
        Object.entries(i).forEach(([r, o]) => {
          if (typeof o == "string" && o[0] === ":") {
            let l = o.substring(1);
            t[r] = e[l];
          } else t[r] = o;
        }),
        t
      );
    }
    createSegmentGroup(i, e, t, r) {
      let o = this.createSegments(i, e.segments, t, r),
        a = {};
      return (
        Object.entries(e.children).forEach(([l, u]) => {
          a[l] = this.createSegmentGroup(i, u, t, r);
        }),
        new pt(o, a)
      );
    }
    createSegments(i, e, t, r) {
      return e.map((o) =>
        o.path[0] === ":" ? this.findPosParam(i, o, r) : this.findOrReturn(o, t)
      );
    }
    findPosParam(i, e, t) {
      let r = t[e.path.substring(1)];
      if (!r) throw new ct(4001, !1);
      return r;
    }
    findOrReturn(i, e) {
      let t = 0;
      for (let r of e) {
        if (r.path === i.path) return e.splice(t), r;
        t++;
      }
      return i;
    }
  },
  Jh = {
    matched: !1,
    consumedSegments: [],
    remainingSegments: [],
    parameters: {},
    positionalParamSegments: {},
  };
function Aw(n, i, e, t, r) {
  let o = l_(n, i, e);
  return o.matched
    ? ((t = iw(i, t)),
      kw(t, i, e, r).pipe(qe((a) => (a === !0 ? o : W({}, Jh)))))
    : fe(o);
}
function l_(n, i, e) {
  if (i.path === "**") return Rw(e);
  if (i.path === "")
    return i.pathMatch === "full" && (n.hasChildren() || e.length > 0)
      ? W({}, Jh)
      : {
          matched: !0,
          consumedSegments: [],
          remainingSegments: e,
          parameters: {},
          positionalParamSegments: {},
        };
  let r = (i.matcher || kC)(e, n, i);
  if (!r) return W({}, Jh);
  let o = {};
  Object.entries(r.posParams ?? {}).forEach(([l, u]) => {
    o[l] = u.path;
  });
  let a =
    r.consumed.length > 0
      ? W(W({}, o), r.consumed[r.consumed.length - 1].parameters)
      : o;
  return {
    matched: !0,
    consumedSegments: r.consumed,
    remainingSegments: e.slice(r.consumed.length),
    parameters: a,
    positionalParamSegments: r.posParams ?? {},
  };
}
function Rw(n) {
  return {
    matched: !0,
    parameters: n.length > 0 ? j0(n).parameters : {},
    consumedSegments: n,
    remainingSegments: [],
    positionalParamSegments: {},
  };
}
function F0(n, i, e, t) {
  return e.length > 0 && Lw(n, e, t)
    ? {
        segmentGroup: new pt(i, Nw(t, new pt(e, n.children))),
        slicedSegments: [],
      }
    : e.length === 0 && Vw(n, e, t)
    ? {
        segmentGroup: new pt(n.segments, Fw(n, e, t, n.children)),
        slicedSegments: e,
      }
    : { segmentGroup: new pt(n.segments, n.children), slicedSegments: e };
}
function Fw(n, i, e, t) {
  let r = {};
  for (let o of e)
    if (Oc(n, i, o) && !t[Mn(o)]) {
      let a = new pt([], {});
      r[Mn(o)] = a;
    }
  return W(W({}, t), r);
}
function Nw(n, i) {
  let e = {};
  e[Ge] = i;
  for (let t of n)
    if (t.path === "" && Mn(t) !== Ge) {
      let r = new pt([], {});
      e[Mn(t)] = r;
    }
  return e;
}
function Lw(n, i, e) {
  return e.some((t) => Oc(n, i, t) && Mn(t) !== Ge);
}
function Vw(n, i, e) {
  return e.some((t) => Oc(n, i, t));
}
function Oc(n, i, e) {
  return (n.hasChildren() || i.length > 0) && e.pathMatch === "full"
    ? !1
    : e.path === "";
}
function Bw(n, i, e) {
  return i.length === 0 && !n.children[e];
}
var ep = class {};
function Hw(n, i, e, t, r, o, a = "emptyOnly") {
  return new tp(n, i, e, t, r, a, o).recognize();
}
var jw = 31,
  tp = class {
    constructor(i, e, t, r, o, a, l) {
      (this.injector = i),
        (this.configLoader = e),
        (this.rootComponentType = t),
        (this.config = r),
        (this.urlTree = o),
        (this.paramsInheritanceStrategy = a),
        (this.urlSerializer = l),
        (this.applyRedirects = new Zh(this.urlSerializer, this.urlTree)),
        (this.absoluteRedirectCount = 0),
        (this.allowRedirects = !0);
    }
    noMatchError(i) {
      return new ct(4002, `'${i.segmentGroup}'`);
    }
    recognize() {
      let i = F0(this.urlTree.root, [], [], this.config).segmentGroup;
      return this.match(i).pipe(
        qe(({ children: e, rootSnapshot: t }) => {
          let r = new qi(t, e),
            o = new Dc("", r),
            a = KC(t, [], this.urlTree.queryParams, this.urlTree.fragment);
          return (
            (a.queryParams = this.urlTree.queryParams),
            (o.url = this.urlSerializer.serialize(a)),
            { state: o, tree: a }
          );
        })
      );
    }
    match(i) {
      let e = new ia(
        [],
        Object.freeze({}),
        Object.freeze(W({}, this.urlTree.queryParams)),
        this.urlTree.fragment,
        Object.freeze({}),
        Ge,
        this.rootComponentType,
        null,
        {}
      );
      return this.processSegmentGroup(
        this.injector,
        this.config,
        i,
        Ge,
        e
      ).pipe(
        qe((t) => ({ children: t, rootSnapshot: e })),
        $o((t) => {
          if (t instanceof ws)
            return (this.urlTree = t.urlTree), this.match(t.urlTree.root);
          throw t instanceof Cs ? this.noMatchError(t) : t;
        })
      );
    }
    processSegmentGroup(i, e, t, r, o) {
      return t.segments.length === 0 && t.hasChildren()
        ? this.processChildren(i, e, t, o)
        : this.processSegment(i, e, t, t.segments, r, !0, o).pipe(
            qe((a) => (a instanceof qi ? [a] : []))
          );
    }
    processChildren(i, e, t, r) {
      let o = [];
      for (let a of Object.keys(t.children))
        a === "primary" ? o.unshift(a) : o.push(a);
      return ui(o).pipe(
        Tr((a) => {
          let l = t.children[a],
            u = nw(e, a);
          return this.processSegmentGroup(i, u, l, a, r);
        }),
        bg((a, l) => (a.push(...l), a)),
        qu(null),
        _g(),
        Ri((a) => {
          if (a === null) return Jo(t);
          let l = c_(a);
          return Uw(l), fe(l);
        })
      );
    }
    processSegment(i, e, t, r, o, a, l) {
      return ui(e).pipe(
        Tr((u) =>
          this.processSegmentAgainstRoute(
            u._injector ?? i,
            e,
            u,
            t,
            r,
            o,
            a,
            l
          ).pipe(
            $o((f) => {
              if (f instanceof Cs) return fe(null);
              throw f;
            })
          )
        ),
        Or((u) => !!u),
        $o((u) => {
          if (a_(u)) return Bw(t, r, o) ? fe(new ep()) : Jo(t);
          throw u;
        })
      );
    }
    processSegmentAgainstRoute(i, e, t, r, o, a, l, u) {
      return Mn(t) !== a && (a === Ge || !Oc(r, o, t))
        ? Jo(r)
        : t.redirectTo === void 0
        ? this.matchSegmentAgainstRoute(i, r, t, o, a, u)
        : this.allowRedirects && l
        ? this.expandSegmentAgainstRouteUsingRedirect(i, r, e, t, o, a, u)
        : Jo(r);
    }
    expandSegmentAgainstRouteUsingRedirect(i, e, t, r, o, a, l) {
      let {
        matched: u,
        parameters: f,
        consumedSegments: v,
        positionalParamSegments: D,
        remainingSegments: T,
      } = l_(e, r, o);
      if (!u) return Jo(e);
      typeof r.redirectTo == "string" &&
        r.redirectTo[0] === "/" &&
        (this.absoluteRedirectCount++,
        this.absoluteRedirectCount > jw && (this.allowRedirects = !1));
      let M = new ia(
          o,
          f,
          Object.freeze(W({}, this.urlTree.queryParams)),
          this.urlTree.fragment,
          N0(r),
          Mn(r),
          r.component ?? r._loadedComponent ?? null,
          r,
          L0(r)
        ),
        k = wc(M, l, this.paramsInheritanceStrategy);
      (M.params = Object.freeze(k.params)), (M.data = Object.freeze(k.data));
      let V = this.applyRedirects.applyRedirectCommands(
        v,
        r.redirectTo,
        D,
        M,
        i
      );
      return this.applyRedirects
        .lineralizeSegments(r, V)
        .pipe(Ri((A) => this.processSegment(i, t, e, A.concat(T), a, !1, l)));
    }
    matchSegmentAgainstRoute(i, e, t, r, o, a) {
      let l = Aw(e, t, r, i, this.urlSerializer);
      return (
        t.path === "**" && (e.children = {}),
        l.pipe(
          Ci((u) =>
            u.matched
              ? ((i = t._injector ?? i),
                this.getChildConfig(i, t, r).pipe(
                  Ci(({ routes: f }) => {
                    let v = t._loadedInjector ?? i,
                      {
                        parameters: D,
                        consumedSegments: T,
                        remainingSegments: M,
                      } = u,
                      k = new ia(
                        T,
                        D,
                        Object.freeze(W({}, this.urlTree.queryParams)),
                        this.urlTree.fragment,
                        N0(t),
                        Mn(t),
                        t.component ?? t._loadedComponent ?? null,
                        t,
                        L0(t)
                      ),
                      V = wc(k, a, this.paramsInheritanceStrategy);
                    (k.params = Object.freeze(V.params)),
                      (k.data = Object.freeze(V.data));
                    let { segmentGroup: A, slicedSegments: E } = F0(e, T, M, f);
                    if (E.length === 0 && A.hasChildren())
                      return this.processChildren(v, f, A, k).pipe(
                        qe((se) => new qi(k, se))
                      );
                    if (f.length === 0 && E.length === 0)
                      return fe(new qi(k, []));
                    let X = Mn(t) === o;
                    return this.processSegment(
                      v,
                      f,
                      A,
                      E,
                      X ? Ge : o,
                      !0,
                      k
                    ).pipe(qe((se) => new qi(k, se instanceof qi ? [se] : [])));
                  })
                ))
              : Jo(e)
          )
        )
      );
    }
    getChildConfig(i, e, t) {
      return e.children
        ? fe({ routes: e.children, injector: i })
        : e.loadChildren
        ? e._loadedRoutes !== void 0
          ? fe({ routes: e._loadedRoutes, injector: e._loadedInjector })
          : Ow(i, e, t, this.urlSerializer).pipe(
              Ri((r) =>
                r
                  ? this.configLoader.loadChildren(i, e).pipe(
                      Kt((o) => {
                        (e._loadedRoutes = o.routes),
                          (e._loadedInjector = o.injector);
                      })
                    )
                  : Iw(e)
              )
            )
        : fe({ routes: [], injector: i });
    }
  };
function Uw(n) {
  n.sort((i, e) =>
    i.value.outlet === Ge
      ? -1
      : e.value.outlet === Ge
      ? 1
      : i.value.outlet.localeCompare(e.value.outlet)
  );
}
function zw(n) {
  let i = n.value.routeConfig;
  return i && i.path === "";
}
function c_(n) {
  let i = [],
    e = new Set();
  for (let t of n) {
    if (!zw(t)) {
      i.push(t);
      continue;
    }
    let r = i.find((o) => t.value.routeConfig === o.value.routeConfig);
    r !== void 0 ? (r.children.push(...t.children), e.add(r)) : i.push(t);
  }
  for (let t of e) {
    let r = c_(t.children);
    i.push(new qi(t.value, r));
  }
  return i.filter((t) => !e.has(t));
}
function N0(n) {
  return n.data || {};
}
function L0(n) {
  return n.resolve || {};
}
function $w(n, i, e, t, r, o) {
  return Ri((a) =>
    Hw(n, i, e, t, a.extractedUrl, r, o).pipe(
      qe(({ state: l, tree: u }) =>
        Ce(W({}, a), { targetSnapshot: l, urlAfterRedirects: u })
      )
    )
  );
}
function Ww(n, i) {
  return Ri((e) => {
    let {
      targetSnapshot: t,
      guards: { canActivateChecks: r },
    } = e;
    if (!r.length) return fe(e);
    let o = new Set(r.map((u) => u.route)),
      a = new Set();
    for (let u of o) if (!a.has(u)) for (let f of d_(u)) a.add(f);
    let l = 0;
    return ui(a).pipe(
      Tr((u) =>
        o.has(u)
          ? Gw(u, t, n, i)
          : ((u.data = wc(u, u.parent, n).resolve), fe(void 0))
      ),
      Kt(() => l++),
      Ku(1),
      Ri((u) => (l === a.size ? fe(e) : jn))
    );
  });
}
function d_(n) {
  let i = n.children.map((e) => d_(e)).flat();
  return [n, ...i];
}
function Gw(n, i, e, t) {
  let r = n.routeConfig,
    o = n._resolve;
  return (
    r?.title !== void 0 && !i_(r) && (o[Ss] = r.title),
    Yw(o, n, i, t).pipe(
      qe(
        (a) => (
          (n._resolvedData = a), (n.data = wc(n, n.parent, e).resolve), null
        )
      )
    )
  );
}
function Yw(n, i, e, t) {
  let r = Ih(n);
  if (r.length === 0) return fe({});
  let o = {};
  return ui(r).pipe(
    Ri((a) =>
      qw(n[a], i, e, t).pipe(
        Or(),
        Kt((l) => {
          if (l instanceof xs) throw Sc(new oa(), l);
          o[a] = l;
        })
      )
    ),
    Ku(1),
    fg(o),
    $o((a) => (a_(a) ? jn : Ga(a)))
  );
}
function qw(n, i, e, t) {
  let r = Ts(i) ?? t,
    o = ca(n, r),
    a = o.resolve ? o.resolve(i, e) : sn(r, () => o(i, e));
  return Nr(a);
}
function kh(n) {
  return Ci((i) => {
    let e = n(i);
    return e ? ui(e).pipe(qe(() => i)) : fe(i);
  });
}
var u_ = (() => {
    class n {
      buildTitle(e) {
        let t,
          r = e.root;
        for (; r !== void 0; )
          (t = this.getResolvedTitleForRoute(r) ?? t),
            (r = r.children.find((o) => o.outlet === Ge));
        return t;
      }
      getResolvedTitleForRoute(e) {
        return e.data[Ss];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: () => G(Kw), providedIn: "root" });
      }
    }
    return n;
  })(),
  Kw = (() => {
    class n extends u_ {
      constructor(e) {
        super(), (this.title = e);
      }
      updateTitle(e) {
        let t = this.buildTitle(e);
        t !== void 0 && this.title.setTitle(t);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(T0));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  ks = new we("", { providedIn: "root", factory: () => ({}) }),
  Qw = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["ng-component"]],
          standalone: !0,
          features: [ce],
          decls: 1,
          vars: 0,
          template: function (t, r) {
            t & 1 && z(0, "router-outlet");
          },
          dependencies: [po],
          encapsulation: 2,
        });
      }
    }
    return n;
  })();
function rp(n) {
  let i = n.children && n.children.map(rp),
    e = i ? Ce(W({}, n), { children: i }) : W({}, n);
  return (
    !e.component &&
      !e.loadComponent &&
      (i || e.loadChildren) &&
      e.outlet &&
      e.outlet !== Ge &&
      (e.component = Qw),
    e
  );
}
var Ds = new we(""),
  op = (() => {
    class n {
      constructor() {
        (this.componentLoaders = new WeakMap()),
          (this.childrenLoaders = new WeakMap()),
          (this.compiler = G(Ql));
      }
      loadComponent(e) {
        if (this.componentLoaders.get(e)) return this.componentLoaders.get(e);
        if (e._loadedComponent) return fe(e._loadedComponent);
        this.onLoadStartListener && this.onLoadStartListener(e);
        let t = Nr(e.loadComponent()).pipe(
            qe(h_),
            Kt((o) => {
              this.onLoadEndListener && this.onLoadEndListener(e),
                (e._loadedComponent = o);
            }),
            Er(() => {
              this.componentLoaders.delete(e);
            })
          ),
          r = new zu(t, () => new Oe()).pipe(Uu());
        return this.componentLoaders.set(e, r), r;
      }
      loadChildren(e, t) {
        if (this.childrenLoaders.get(t)) return this.childrenLoaders.get(t);
        if (t._loadedRoutes)
          return fe({ routes: t._loadedRoutes, injector: t._loadedInjector });
        this.onLoadStartListener && this.onLoadStartListener(t);
        let o = Xw(t, this.compiler, e, this.onLoadEndListener).pipe(
            Er(() => {
              this.childrenLoaders.delete(t);
            })
          ),
          a = new zu(o, () => new Oe()).pipe(Uu());
        return this.childrenLoaders.set(t, a), a;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function Xw(n, i, e, t) {
  return Nr(n.loadChildren()).pipe(
    qe(h_),
    Ri((r) =>
      r instanceof Fg || Array.isArray(r) ? fe(r) : ui(i.compileModuleAsync(r))
    ),
    qe((r) => {
      t && t(n);
      let o,
        a,
        l = !1;
      return (
        Array.isArray(r)
          ? ((a = r), (l = !0))
          : ((o = r.create(e).injector),
            (a = o.get(Ds, [], { optional: !0, self: !0 }).flat())),
        { routes: a.map(rp), injector: o }
      );
    })
  );
}
function Zw(n) {
  return n && typeof n == "object" && "default" in n;
}
function h_(n) {
  return Zw(n) ? n.default : n;
}
var ap = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: () => G(Jw), providedIn: "root" });
      }
    }
    return n;
  })(),
  Jw = (() => {
    class n {
      shouldProcessUrl(e) {
        return !0;
      }
      extract(e) {
        return e;
      }
      merge(e, t) {
        return e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  p_ = new we(""),
  m_ = new we("");
function eD(n, i, e) {
  let t = n.get(m_),
    r = n.get(ke);
  return n.get(Te).runOutsideAngular(() => {
    if (!r.startViewTransition || t.skipNextTransition)
      return (t.skipNextTransition = !1), new Promise((f) => setTimeout(f));
    let o,
      a = new Promise((f) => {
        o = f;
      }),
      l = r.startViewTransition(() => (o(), tD(n))),
      { onViewTransitionCreated: u } = t;
    return u && sn(n, () => u({ transition: l, from: i, to: e })), a;
  });
}
function tD(n) {
  return new Promise((i) => {
    xn({ read: () => setTimeout(i) }, { injector: n });
  });
}
var iD = new we(""),
  sp = (() => {
    class n {
      get hasRequestedNavigation() {
        return this.navigationId !== 0;
      }
      constructor() {
        (this.currentNavigation = null),
          (this.currentTransition = null),
          (this.lastSuccessfulNavigation = null),
          (this.events = new Oe()),
          (this.transitionAbortSubject = new Oe()),
          (this.configLoader = G(op)),
          (this.environmentInjector = G(an)),
          (this.urlSerializer = G(Ms)),
          (this.rootContexts = G(Es)),
          (this.location = G(dr)),
          (this.inputBindingEnabled = G(Ec, { optional: !0 }) !== null),
          (this.titleStrategy = G(u_)),
          (this.options = G(ks, { optional: !0 }) || {}),
          (this.paramsInheritanceStrategy =
            this.options.paramsInheritanceStrategy || "emptyOnly"),
          (this.urlHandlingStrategy = G(ap)),
          (this.createViewTransition = G(p_, { optional: !0 })),
          (this.navigationErrorHandler = G(iD, { optional: !0 })),
          (this.navigationId = 0),
          (this.afterPreactivation = () => fe(void 0)),
          (this.rootComponentType = null);
        let e = (r) => this.events.next(new Hh(r)),
          t = (r) => this.events.next(new jh(r));
        (this.configLoader.onLoadEndListener = t),
          (this.configLoader.onLoadStartListener = e);
      }
      complete() {
        this.transitions?.complete();
      }
      handleNavigationRequest(e) {
        let t = ++this.navigationId;
        this.transitions?.next(
          Ce(W(W({}, this.transitions.value), e), { id: t })
        );
      }
      setupNavigations(e, t, r) {
        return (
          (this.transitions = new Nt({
            id: 0,
            currentUrlTree: t,
            currentRawUrl: t,
            extractedUrl: this.urlHandlingStrategy.extract(t),
            urlAfterRedirects: this.urlHandlingStrategy.extract(t),
            rawUrl: t,
            extras: {},
            resolve: () => {},
            reject: () => {},
            promise: Promise.resolve(!0),
            source: fs,
            restoredState: null,
            currentSnapshot: r.snapshot,
            targetSnapshot: null,
            currentRouterState: r,
            targetRouterState: null,
            guards: { canActivateChecks: [], canDeactivateChecks: [] },
            guardsResult: null,
          })),
          this.transitions.pipe(
            Ct((o) => o.id !== 0),
            qe((o) =>
              Ce(W({}, o), {
                extractedUrl: this.urlHandlingStrategy.extract(o.rawUrl),
              })
            ),
            Ci((o) => {
              let a = !1,
                l = !1;
              return fe(o).pipe(
                Ci((u) => {
                  if (this.navigationId > o.id)
                    return (
                      this.cancelNavigationTransition(
                        o,
                        "",
                        Ki.SupersededByNewNavigation
                      ),
                      jn
                    );
                  (this.currentTransition = o),
                    (this.currentNavigation = {
                      id: u.id,
                      initialUrl: u.rawUrl,
                      extractedUrl: u.extractedUrl,
                      targetBrowserUrl:
                        typeof u.extras.browserUrl == "string"
                          ? this.urlSerializer.parse(u.extras.browserUrl)
                          : u.extras.browserUrl,
                      trigger: u.source,
                      extras: u.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? Ce(W({}, this.lastSuccessfulNavigation), {
                            previousNavigation: null,
                          })
                        : null,
                    });
                  let f =
                      !e.navigated ||
                      this.isUpdatingInternalState() ||
                      this.isUpdatedBrowserUrl(),
                    v = u.extras.onSameUrlNavigation ?? e.onSameUrlNavigation;
                  if (!f && v !== "reload") {
                    let D = "";
                    return (
                      this.events.next(
                        new Fr(
                          u.id,
                          this.urlSerializer.serialize(u.rawUrl),
                          D,
                          bc.IgnoredSameUrlNavigation
                        )
                      ),
                      u.resolve(!1),
                      jn
                    );
                  }
                  if (this.urlHandlingStrategy.shouldProcessUrl(u.rawUrl))
                    return fe(u).pipe(
                      Ci((D) => {
                        let T = this.transitions?.getValue();
                        return (
                          this.events.next(
                            new aa(
                              D.id,
                              this.urlSerializer.serialize(D.extractedUrl),
                              D.source,
                              D.restoredState
                            )
                          ),
                          T !== this.transitions?.getValue()
                            ? jn
                            : Promise.resolve(D)
                        );
                      }),
                      $w(
                        this.environmentInjector,
                        this.configLoader,
                        this.rootComponentType,
                        e.config,
                        this.urlSerializer,
                        this.paramsInheritanceStrategy
                      ),
                      Kt((D) => {
                        (o.targetSnapshot = D.targetSnapshot),
                          (o.urlAfterRedirects = D.urlAfterRedirects),
                          (this.currentNavigation = Ce(
                            W({}, this.currentNavigation),
                            { finalUrl: D.urlAfterRedirects }
                          ));
                        let T = new vc(
                          D.id,
                          this.urlSerializer.serialize(D.extractedUrl),
                          this.urlSerializer.serialize(D.urlAfterRedirects),
                          D.targetSnapshot
                        );
                        this.events.next(T);
                      })
                    );
                  if (
                    f &&
                    this.urlHandlingStrategy.shouldProcessUrl(u.currentRawUrl)
                  ) {
                    let {
                        id: D,
                        extractedUrl: T,
                        source: M,
                        restoredState: k,
                        extras: V,
                      } = u,
                      A = new aa(D, this.urlSerializer.serialize(T), M, k);
                    this.events.next(A);
                    let E = e_(this.rootComponentType).snapshot;
                    return (
                      (this.currentTransition = o =
                        Ce(W({}, u), {
                          targetSnapshot: E,
                          urlAfterRedirects: T,
                          extras: Ce(W({}, V), {
                            skipLocationChange: !1,
                            replaceUrl: !1,
                          }),
                        })),
                      (this.currentNavigation.finalUrl = T),
                      fe(o)
                    );
                  } else {
                    let D = "";
                    return (
                      this.events.next(
                        new Fr(
                          u.id,
                          this.urlSerializer.serialize(u.extractedUrl),
                          D,
                          bc.IgnoredByUrlHandlingStrategy
                        )
                      ),
                      u.resolve(!1),
                      jn
                    );
                  }
                }),
                Kt((u) => {
                  let f = new Nh(
                    u.id,
                    this.urlSerializer.serialize(u.extractedUrl),
                    this.urlSerializer.serialize(u.urlAfterRedirects),
                    u.targetSnapshot
                  );
                  this.events.next(f);
                }),
                qe(
                  (u) => (
                    (this.currentTransition = o =
                      Ce(W({}, u), {
                        guards: dw(
                          u.targetSnapshot,
                          u.currentSnapshot,
                          this.rootContexts
                        ),
                      })),
                    o
                  )
                ),
                xw(this.environmentInjector, (u) => this.events.next(u)),
                Kt((u) => {
                  if (
                    ((o.guardsResult = u.guardsResult),
                    u.guardsResult && typeof u.guardsResult != "boolean")
                  )
                    throw Sc(this.urlSerializer, u.guardsResult);
                  let f = new Lh(
                    u.id,
                    this.urlSerializer.serialize(u.extractedUrl),
                    this.urlSerializer.serialize(u.urlAfterRedirects),
                    u.targetSnapshot,
                    !!u.guardsResult
                  );
                  this.events.next(f);
                }),
                Ct((u) =>
                  u.guardsResult
                    ? !0
                    : (this.cancelNavigationTransition(u, "", Ki.GuardRejected),
                      !1)
                ),
                kh((u) => {
                  if (u.guards.canActivateChecks.length)
                    return fe(u).pipe(
                      Kt((f) => {
                        let v = new Vh(
                          f.id,
                          this.urlSerializer.serialize(f.extractedUrl),
                          this.urlSerializer.serialize(f.urlAfterRedirects),
                          f.targetSnapshot
                        );
                        this.events.next(v);
                      }),
                      Ci((f) => {
                        let v = !1;
                        return fe(f).pipe(
                          Ww(
                            this.paramsInheritanceStrategy,
                            this.environmentInjector
                          ),
                          Kt({
                            next: () => (v = !0),
                            complete: () => {
                              v ||
                                this.cancelNavigationTransition(
                                  f,
                                  "",
                                  Ki.NoDataFromResolver
                                );
                            },
                          })
                        );
                      }),
                      Kt((f) => {
                        let v = new Bh(
                          f.id,
                          this.urlSerializer.serialize(f.extractedUrl),
                          this.urlSerializer.serialize(f.urlAfterRedirects),
                          f.targetSnapshot
                        );
                        this.events.next(v);
                      })
                    );
                }),
                kh((u) => {
                  let f = (v) => {
                    let D = [];
                    v.routeConfig?.loadComponent &&
                      !v.routeConfig._loadedComponent &&
                      D.push(
                        this.configLoader.loadComponent(v.routeConfig).pipe(
                          Kt((T) => {
                            v.component = T;
                          }),
                          qe(() => {})
                        )
                      );
                    for (let T of v.children) D.push(...f(T));
                    return D;
                  };
                  return ro(f(u.targetSnapshot.root)).pipe(qu(null), $i(1));
                }),
                kh(() => this.afterPreactivation()),
                Ci(() => {
                  let { currentSnapshot: u, targetSnapshot: f } = o,
                    v = this.createViewTransition?.(
                      this.environmentInjector,
                      u.root,
                      f.root
                    );
                  return v ? ui(v).pipe(qe(() => o)) : fe(o);
                }),
                qe((u) => {
                  let f = ow(
                    e.routeReuseStrategy,
                    u.targetSnapshot,
                    u.currentRouterState
                  );
                  return (
                    (this.currentTransition = o =
                      Ce(W({}, u), { targetRouterState: f })),
                    (this.currentNavigation.targetRouterState = f),
                    o
                  );
                }),
                Kt(() => {
                  this.events.next(new vs());
                }),
                cw(
                  this.rootContexts,
                  e.routeReuseStrategy,
                  (u) => this.events.next(u),
                  this.inputBindingEnabled
                ),
                $i(1),
                Kt({
                  next: (u) => {
                    (a = !0),
                      (this.lastSuccessfulNavigation = this.currentNavigation),
                      this.events.next(
                        new ci(
                          u.id,
                          this.urlSerializer.serialize(u.extractedUrl),
                          this.urlSerializer.serialize(u.urlAfterRedirects)
                        )
                      ),
                      this.titleStrategy?.updateTitle(
                        u.targetRouterState.snapshot
                      ),
                      u.resolve(!0);
                  },
                  complete: () => {
                    a = !0;
                  },
                }),
                Ut(
                  this.transitionAbortSubject.pipe(
                    Kt((u) => {
                      throw u;
                    })
                  )
                ),
                Er(() => {
                  !a &&
                    !l &&
                    this.cancelNavigationTransition(
                      o,
                      "",
                      Ki.SupersededByNewNavigation
                    ),
                    this.currentTransition?.id === o.id &&
                      ((this.currentNavigation = null),
                      (this.currentTransition = null));
                }),
                $o((u) => {
                  if (((l = !0), o_(u)))
                    this.events.next(
                      new hr(
                        o.id,
                        this.urlSerializer.serialize(o.extractedUrl),
                        u.message,
                        u.cancellationCode
                      )
                    ),
                      lw(u)
                        ? this.events.next(
                            new sa(u.url, u.navigationBehaviorOptions)
                          )
                        : o.resolve(!1);
                  else {
                    let f = new bs(
                      o.id,
                      this.urlSerializer.serialize(o.extractedUrl),
                      u,
                      o.targetSnapshot ?? void 0
                    );
                    try {
                      let v = sn(this.environmentInjector, () =>
                        this.navigationErrorHandler?.(f)
                      );
                      if (v instanceof xs) {
                        let { message: D, cancellationCode: T } = Sc(
                          this.urlSerializer,
                          v
                        );
                        this.events.next(
                          new hr(
                            o.id,
                            this.urlSerializer.serialize(o.extractedUrl),
                            D,
                            T
                          )
                        ),
                          this.events.next(
                            new sa(v.redirectTo, v.navigationBehaviorOptions)
                          );
                      } else {
                        this.events.next(f);
                        let D = e.errorHandler(u);
                        o.resolve(!!D);
                      }
                    } catch (v) {
                      this.options.resolveNavigationPromiseOnError
                        ? o.resolve(!1)
                        : o.reject(v);
                    }
                  }
                  return jn;
                })
              );
            })
          )
        );
      }
      cancelNavigationTransition(e, t, r) {
        let o = new hr(
          e.id,
          this.urlSerializer.serialize(e.extractedUrl),
          t,
          r
        );
        this.events.next(o), e.resolve(!1);
      }
      isUpdatingInternalState() {
        return (
          this.currentTransition?.extractedUrl.toString() !==
          this.currentTransition?.currentUrlTree.toString()
        );
      }
      isUpdatedBrowserUrl() {
        let e = this.urlHandlingStrategy.extract(
            this.urlSerializer.parse(this.location.path(!0))
          ),
          t =
            this.currentNavigation?.targetBrowserUrl ??
            this.currentNavigation?.extractedUrl;
        return (
          e.toString() !== t?.toString() &&
          !this.currentNavigation?.extras.skipLocationChange
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function nD(n) {
  return n !== fs;
}
var rD = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: () => G(oD), providedIn: "root" });
      }
    }
    return n;
  })(),
  ip = class {
    shouldDetach(i) {
      return !1;
    }
    store(i, e) {}
    shouldAttach(i) {
      return !1;
    }
    retrieve(i) {
      return null;
    }
    shouldReuseRoute(i, e) {
      return i.routeConfig === e.routeConfig;
    }
  },
  oD = (() => {
    class n extends ip {
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  f_ = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: () => G(aD), providedIn: "root" });
      }
    }
    return n;
  })(),
  aD = (() => {
    class n extends f_ {
      constructor() {
        super(...arguments),
          (this.location = G(dr)),
          (this.urlSerializer = G(Ms)),
          (this.options = G(ks, { optional: !0 }) || {}),
          (this.canceledNavigationResolution =
            this.options.canceledNavigationResolution || "replace"),
          (this.urlHandlingStrategy = G(ap)),
          (this.urlUpdateStrategy =
            this.options.urlUpdateStrategy || "deferred"),
          (this.currentUrlTree = new pr()),
          (this.rawUrlTree = this.currentUrlTree),
          (this.currentPageId = 0),
          (this.lastSuccessfulId = -1),
          (this.routerState = e_(null)),
          (this.stateMemento = this.createStateMemento());
      }
      getCurrentUrlTree() {
        return this.currentUrlTree;
      }
      getRawUrlTree() {
        return this.rawUrlTree;
      }
      restoredState() {
        return this.location.getState();
      }
      get browserPageId() {
        return this.canceledNavigationResolution !== "computed"
          ? this.currentPageId
          : this.restoredState()?.ɵrouterPageId ?? this.currentPageId;
      }
      getRouterState() {
        return this.routerState;
      }
      createStateMemento() {
        return {
          rawUrlTree: this.rawUrlTree,
          currentUrlTree: this.currentUrlTree,
          routerState: this.routerState,
        };
      }
      registerNonRouterCurrentEntryChangeListener(e) {
        return this.location.subscribe((t) => {
          t.type === "popstate" && e(t.url, t.state);
        });
      }
      handleRouterEvent(e, t) {
        if (e instanceof aa) this.stateMemento = this.createStateMemento();
        else if (e instanceof Fr) this.rawUrlTree = t.initialUrl;
        else if (e instanceof vc) {
          if (
            this.urlUpdateStrategy === "eager" &&
            !t.extras.skipLocationChange
          ) {
            let r = this.urlHandlingStrategy.merge(t.finalUrl, t.initialUrl);
            this.setBrowserUrl(t.targetBrowserUrl ?? r, t);
          }
        } else
          e instanceof vs
            ? ((this.currentUrlTree = t.finalUrl),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                t.finalUrl,
                t.initialUrl
              )),
              (this.routerState = t.targetRouterState),
              this.urlUpdateStrategy === "deferred" &&
                !t.extras.skipLocationChange &&
                this.setBrowserUrl(t.targetBrowserUrl ?? this.rawUrlTree, t))
            : e instanceof hr &&
              (e.code === Ki.GuardRejected || e.code === Ki.NoDataFromResolver)
            ? this.restoreHistory(t)
            : e instanceof bs
            ? this.restoreHistory(t, !0)
            : e instanceof ci &&
              ((this.lastSuccessfulId = e.id),
              (this.currentPageId = this.browserPageId));
      }
      setBrowserUrl(e, t) {
        let r = e instanceof pr ? this.urlSerializer.serialize(e) : e;
        if (this.location.isCurrentPathEqualTo(r) || t.extras.replaceUrl) {
          let o = this.browserPageId,
            a = W(W({}, t.extras.state), this.generateNgRouterState(t.id, o));
          this.location.replaceState(r, "", a);
        } else {
          let o = W(
            W({}, t.extras.state),
            this.generateNgRouterState(t.id, this.browserPageId + 1)
          );
          this.location.go(r, "", o);
        }
      }
      restoreHistory(e, t = !1) {
        if (this.canceledNavigationResolution === "computed") {
          let r = this.browserPageId,
            o = this.currentPageId - r;
          o !== 0
            ? this.location.historyGo(o)
            : this.currentUrlTree === e.finalUrl &&
              o === 0 &&
              (this.resetState(e), this.resetUrlToCurrentUrlTree());
        } else
          this.canceledNavigationResolution === "replace" &&
            (t && this.resetState(e), this.resetUrlToCurrentUrlTree());
      }
      resetState(e) {
        (this.routerState = this.stateMemento.routerState),
          (this.currentUrlTree = this.stateMemento.currentUrlTree),
          (this.rawUrlTree = this.urlHandlingStrategy.merge(
            this.currentUrlTree,
            e.finalUrl ?? this.rawUrlTree
          ));
      }
      resetUrlToCurrentUrlTree() {
        this.location.replaceState(
          this.urlSerializer.serialize(this.rawUrlTree),
          "",
          this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId)
        );
      }
      generateNgRouterState(e, t) {
        return this.canceledNavigationResolution === "computed"
          ? { navigationId: e, ɵrouterPageId: t }
          : { navigationId: e };
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  ps = (function (n) {
    return (
      (n[(n.COMPLETE = 0)] = "COMPLETE"),
      (n[(n.FAILED = 1)] = "FAILED"),
      (n[(n.REDIRECTING = 2)] = "REDIRECTING"),
      n
    );
  })(ps || {});
function g_(n, i) {
  n.events
    .pipe(
      Ct(
        (e) =>
          e instanceof ci ||
          e instanceof hr ||
          e instanceof bs ||
          e instanceof Fr
      ),
      qe((e) =>
        e instanceof ci || e instanceof Fr
          ? ps.COMPLETE
          : (
              e instanceof hr
                ? e.code === Ki.Redirect ||
                  e.code === Ki.SupersededByNewNavigation
                : !1
            )
          ? ps.REDIRECTING
          : ps.FAILED
      ),
      Ct((e) => e !== ps.REDIRECTING),
      $i(1)
    )
    .subscribe(() => {
      i();
    });
}
function sD(n) {
  throw n;
}
var lD = {
    paths: "exact",
    fragment: "ignored",
    matrixParams: "ignored",
    queryParams: "exact",
  },
  cD = {
    paths: "subset",
    fragment: "ignored",
    matrixParams: "ignored",
    queryParams: "subset",
  },
  Mt = (() => {
    class n {
      get currentUrlTree() {
        return this.stateManager.getCurrentUrlTree();
      }
      get rawUrlTree() {
        return this.stateManager.getRawUrlTree();
      }
      get events() {
        return this._events;
      }
      get routerState() {
        return this.stateManager.getRouterState();
      }
      constructor() {
        (this.disposed = !1),
          (this.console = G(ql)),
          (this.stateManager = G(f_)),
          (this.options = G(ks, { optional: !0 }) || {}),
          (this.pendingTasks = G(Xa)),
          (this.urlUpdateStrategy =
            this.options.urlUpdateStrategy || "deferred"),
          (this.navigationTransitions = G(sp)),
          (this.urlSerializer = G(Ms)),
          (this.location = G(dr)),
          (this.urlHandlingStrategy = G(ap)),
          (this._events = new Oe()),
          (this.errorHandler = this.options.errorHandler || sD),
          (this.navigated = !1),
          (this.routeReuseStrategy = G(rD)),
          (this.onSameUrlNavigation =
            this.options.onSameUrlNavigation || "ignore"),
          (this.config = G(Ds, { optional: !0 })?.flat() ?? []),
          (this.componentInputBindingEnabled = !!G(Ec, { optional: !0 })),
          (this.eventsSubscription = new zi()),
          this.resetConfig(this.config),
          this.navigationTransitions
            .setupNavigations(this, this.currentUrlTree, this.routerState)
            .subscribe({
              error: (e) => {
                this.console.warn(e);
              },
            }),
          this.subscribeToNavigationEvents();
      }
      subscribeToNavigationEvents() {
        let e = this.navigationTransitions.events.subscribe((t) => {
          try {
            let r = this.navigationTransitions.currentTransition,
              o = this.navigationTransitions.currentNavigation;
            if (r !== null && o !== null) {
              if (
                (this.stateManager.handleRouterEvent(t, o),
                t instanceof hr &&
                  t.code !== Ki.Redirect &&
                  t.code !== Ki.SupersededByNewNavigation)
              )
                this.navigated = !0;
              else if (t instanceof ci) this.navigated = !0;
              else if (t instanceof sa) {
                let a = t.navigationBehaviorOptions,
                  l = this.urlHandlingStrategy.merge(t.url, r.currentRawUrl),
                  u = W(
                    {
                      browserUrl: r.extras.browserUrl,
                      info: r.extras.info,
                      skipLocationChange: r.extras.skipLocationChange,
                      replaceUrl:
                        r.extras.replaceUrl ||
                        this.urlUpdateStrategy === "eager" ||
                        nD(r.source),
                    },
                    a
                  );
                this.scheduleNavigation(l, fs, null, u, {
                  resolve: r.resolve,
                  reject: r.reject,
                  promise: r.promise,
                });
              }
            }
            uD(t) && this._events.next(t);
          } catch (r) {
            this.navigationTransitions.transitionAbortSubject.next(r);
          }
        });
        this.eventsSubscription.add(e);
      }
      resetRootComponentType(e) {
        (this.routerState.root.component = e),
          (this.navigationTransitions.rootComponentType = e);
      }
      initialNavigation() {
        this.setUpLocationChangeListener(),
          this.navigationTransitions.hasRequestedNavigation ||
            this.navigateToSyncWithBrowser(
              this.location.path(!0),
              fs,
              this.stateManager.restoredState()
            );
      }
      setUpLocationChangeListener() {
        this.nonRouterCurrentEntryChangeSubscription ??=
          this.stateManager.registerNonRouterCurrentEntryChangeListener(
            (e, t) => {
              setTimeout(() => {
                this.navigateToSyncWithBrowser(e, "popstate", t);
              }, 0);
            }
          );
      }
      navigateToSyncWithBrowser(e, t, r) {
        let o = { replaceUrl: !0 },
          a = r?.navigationId ? r : null;
        if (r) {
          let u = W({}, r);
          delete u.navigationId,
            delete u.ɵrouterPageId,
            Object.keys(u).length !== 0 && (o.state = u);
        }
        let l = this.parseUrl(e);
        this.scheduleNavigation(l, t, a, o);
      }
      get url() {
        return this.serializeUrl(this.currentUrlTree);
      }
      getCurrentNavigation() {
        return this.navigationTransitions.currentNavigation;
      }
      get lastSuccessfulNavigation() {
        return this.navigationTransitions.lastSuccessfulNavigation;
      }
      resetConfig(e) {
        (this.config = e.map(rp)), (this.navigated = !1);
      }
      ngOnDestroy() {
        this.dispose();
      }
      dispose() {
        this.navigationTransitions.complete(),
          this.nonRouterCurrentEntryChangeSubscription &&
            (this.nonRouterCurrentEntryChangeSubscription.unsubscribe(),
            (this.nonRouterCurrentEntryChangeSubscription = void 0)),
          (this.disposed = !0),
          this.eventsSubscription.unsubscribe();
      }
      createUrlTree(e, t = {}) {
        let {
            relativeTo: r,
            queryParams: o,
            fragment: a,
            queryParamsHandling: l,
            preserveFragment: u,
          } = t,
          f = u ? this.currentUrlTree.fragment : a,
          v = null;
        switch (l ?? this.options.defaultQueryParamsHandling) {
          case "merge":
            v = W(W({}, this.currentUrlTree.queryParams), o);
            break;
          case "preserve":
            v = this.currentUrlTree.queryParams;
            break;
          default:
            v = o || null;
        }
        v !== null && (v = this.removeEmptyProps(v));
        let D;
        try {
          let T = r ? r.snapshot : this.routerState.snapshot.root;
          D = Q0(T);
        } catch {
          (typeof e[0] != "string" || e[0][0] !== "/") && (e = []),
            (D = this.currentUrlTree.root);
        }
        return X0(D, e, v, f ?? null);
      }
      navigateByUrl(e, t = { skipLocationChange: !1 }) {
        let r = ho(e) ? e : this.parseUrl(e),
          o = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
        return this.scheduleNavigation(o, fs, null, t);
      }
      navigate(e, t = { skipLocationChange: !1 }) {
        return dD(e), this.navigateByUrl(this.createUrlTree(e, t), t);
      }
      serializeUrl(e) {
        return this.urlSerializer.serialize(e);
      }
      parseUrl(e) {
        try {
          return this.urlSerializer.parse(e);
        } catch {
          return this.urlSerializer.parse("/");
        }
      }
      isActive(e, t) {
        let r;
        if (
          (t === !0 ? (r = W({}, lD)) : t === !1 ? (r = W({}, cD)) : (r = t),
          ho(e))
        )
          return k0(this.currentUrlTree, e, r);
        let o = this.parseUrl(e);
        return k0(this.currentUrlTree, o, r);
      }
      removeEmptyProps(e) {
        return Object.entries(e).reduce(
          (t, [r, o]) => (o != null && (t[r] = o), t),
          {}
        );
      }
      scheduleNavigation(e, t, r, o, a) {
        if (this.disposed) return Promise.resolve(!1);
        let l, u, f;
        a
          ? ((l = a.resolve), (u = a.reject), (f = a.promise))
          : (f = new Promise((D, T) => {
              (l = D), (u = T);
            }));
        let v = this.pendingTasks.add();
        return (
          g_(this, () => {
            queueMicrotask(() => this.pendingTasks.remove(v));
          }),
          this.navigationTransitions.handleNavigationRequest({
            source: t,
            restoredState: r,
            currentUrlTree: this.currentUrlTree,
            currentRawUrl: this.currentUrlTree,
            rawUrl: e,
            extras: o,
            resolve: l,
            reject: u,
            promise: f,
            currentSnapshot: this.routerState.snapshot,
            currentRouterState: this.routerState,
          }),
          f.catch((D) => Promise.reject(D))
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function dD(n) {
  for (let i = 0; i < n.length; i++) if (n[i] == null) throw new ct(4008, !1);
}
function uD(n) {
  return !(n instanceof vs) && !(n instanceof sa);
}
var Jt = (() => {
    class n {
      constructor(e, t, r, o, a, l) {
        (this.router = e),
          (this.route = t),
          (this.tabIndexAttribute = r),
          (this.renderer = o),
          (this.el = a),
          (this.locationStrategy = l),
          (this.href = null),
          (this.onChanges = new Oe()),
          (this.preserveFragment = !1),
          (this.skipLocationChange = !1),
          (this.replaceUrl = !1),
          (this.routerLinkInput = null);
        let u = a.nativeElement.tagName?.toLowerCase();
        (this.isAnchorElement = u === "a" || u === "area"),
          this.isAnchorElement
            ? (this.subscription = e.events.subscribe((f) => {
                f instanceof ci && this.updateHref();
              }))
            : this.setTabIndexIfNotOnNativeEl("0");
      }
      setTabIndexIfNotOnNativeEl(e) {
        this.tabIndexAttribute != null ||
          this.isAnchorElement ||
          this.applyAttributeValue("tabindex", e);
      }
      ngOnChanges(e) {
        this.isAnchorElement && this.updateHref(), this.onChanges.next(this);
      }
      set routerLink(e) {
        e == null
          ? ((this.routerLinkInput = null),
            this.setTabIndexIfNotOnNativeEl(null))
          : (ho(e)
              ? (this.routerLinkInput = e)
              : (this.routerLinkInput = Array.isArray(e) ? e : [e]),
            this.setTabIndexIfNotOnNativeEl("0"));
      }
      onClick(e, t, r, o, a) {
        let l = this.urlTree;
        if (
          l === null ||
          (this.isAnchorElement &&
            (e !== 0 ||
              t ||
              r ||
              o ||
              a ||
              (typeof this.target == "string" && this.target != "_self")))
        )
          return !0;
        let u = {
          skipLocationChange: this.skipLocationChange,
          replaceUrl: this.replaceUrl,
          state: this.state,
          info: this.info,
        };
        return this.router.navigateByUrl(l, u), !this.isAnchorElement;
      }
      ngOnDestroy() {
        this.subscription?.unsubscribe();
      }
      updateHref() {
        let e = this.urlTree;
        this.href =
          e !== null && this.locationStrategy
            ? this.locationStrategy?.prepareExternalUrl(
                this.router.serializeUrl(e)
              )
            : null;
        let t =
          this.href === null
            ? null
            : Ig(
                this.href,
                this.el.nativeElement.tagName.toLowerCase(),
                "href"
              );
        this.applyAttributeValue("href", t);
      }
      applyAttributeValue(e, t) {
        let r = this.renderer,
          o = this.el.nativeElement;
        t !== null ? r.setAttribute(o, e, t) : r.removeAttribute(o, e);
      }
      get urlTree() {
        return this.routerLinkInput === null
          ? null
          : ho(this.routerLinkInput)
          ? this.routerLinkInput
          : this.router.createUrlTree(this.routerLinkInput, {
              relativeTo:
                this.relativeTo !== void 0 ? this.relativeTo : this.route,
              queryParams: this.queryParams,
              fragment: this.fragment,
              queryParamsHandling: this.queryParamsHandling,
              preserveFragment: this.preserveFragment,
            });
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            H(Mt),
            H(Zt),
            Wo("tabindex"),
            H(hi),
            H(Fe),
            H(ns)
          );
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "routerLink", ""]],
          hostVars: 1,
          hostBindings: function (t, r) {
            t & 1 &&
              N("click", function (a) {
                return r.onClick(
                  a.button,
                  a.ctrlKey,
                  a.shiftKey,
                  a.altKey,
                  a.metaKey
                );
              }),
              t & 2 && le("target", r.target);
          },
          inputs: {
            target: "target",
            queryParams: "queryParams",
            fragment: "fragment",
            queryParamsHandling: "queryParamsHandling",
            state: "state",
            info: "info",
            relativeTo: "relativeTo",
            preserveFragment: [2, "preserveFragment", "preserveFragment", Se],
            skipLocationChange: [
              2,
              "skipLocationChange",
              "skipLocationChange",
              Se,
            ],
            replaceUrl: [2, "replaceUrl", "replaceUrl", Se],
            routerLink: "routerLink",
          },
          standalone: !0,
          features: [kt, wt],
        });
      }
    }
    return n;
  })(),
  __ = (() => {
    class n {
      get isActive() {
        return this._isActive;
      }
      constructor(e, t, r, o, a) {
        (this.router = e),
          (this.element = t),
          (this.renderer = r),
          (this.cdr = o),
          (this.link = a),
          (this.classes = []),
          (this._isActive = !1),
          (this.routerLinkActiveOptions = { exact: !1 }),
          (this.isActiveChange = new xe()),
          (this.routerEventsSubscription = e.events.subscribe((l) => {
            l instanceof ci && this.update();
          }));
      }
      ngAfterContentInit() {
        fe(this.links.changes, fe(null))
          .pipe(Ya())
          .subscribe((e) => {
            this.update(), this.subscribeToEachLinkOnChanges();
          });
      }
      subscribeToEachLinkOnChanges() {
        this.linkInputChangesSubscription?.unsubscribe();
        let e = [...this.links.toArray(), this.link]
          .filter((t) => !!t)
          .map((t) => t.onChanges);
        this.linkInputChangesSubscription = ui(e)
          .pipe(Ya())
          .subscribe((t) => {
            this._isActive !== this.isLinkActive(this.router)(t) &&
              this.update();
          });
      }
      set routerLinkActive(e) {
        let t = Array.isArray(e) ? e : e.split(" ");
        this.classes = t.filter((r) => !!r);
      }
      ngOnChanges(e) {
        this.update();
      }
      ngOnDestroy() {
        this.routerEventsSubscription.unsubscribe(),
          this.linkInputChangesSubscription?.unsubscribe();
      }
      update() {
        !this.links ||
          !this.router.navigated ||
          queueMicrotask(() => {
            let e = this.hasActiveLinks();
            this.classes.forEach((t) => {
              e
                ? this.renderer.addClass(this.element.nativeElement, t)
                : this.renderer.removeClass(this.element.nativeElement, t);
            }),
              e && this.ariaCurrentWhenActive !== void 0
                ? this.renderer.setAttribute(
                    this.element.nativeElement,
                    "aria-current",
                    this.ariaCurrentWhenActive.toString()
                  )
                : this.renderer.removeAttribute(
                    this.element.nativeElement,
                    "aria-current"
                  ),
              this._isActive !== e &&
                ((this._isActive = e),
                this.cdr.markForCheck(),
                this.isActiveChange.emit(e));
          });
      }
      isLinkActive(e) {
        let t = hD(this.routerLinkActiveOptions)
          ? this.routerLinkActiveOptions
          : this.routerLinkActiveOptions.exact || !1;
        return (r) => {
          let o = r.urlTree;
          return o ? e.isActive(o, t) : !1;
        };
      }
      hasActiveLinks() {
        let e = this.isLinkActive(this.router);
        return (this.link && e(this.link)) || this.links.some(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Mt), H(Fe), H(hi), H(Ke), H(Jt, 8));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "routerLinkActive", ""]],
          contentQueries: function (t, r, o) {
            if ((t & 1 && ln(o, Jt, 5), t & 2)) {
              let a;
              ot((a = at())) && (r.links = a);
            }
          },
          inputs: {
            routerLinkActiveOptions: "routerLinkActiveOptions",
            ariaCurrentWhenActive: "ariaCurrentWhenActive",
            routerLinkActive: "routerLinkActive",
          },
          outputs: { isActiveChange: "isActiveChange" },
          exportAs: ["routerLinkActive"],
          standalone: !0,
          features: [wt],
        });
      }
    }
    return n;
  })();
function hD(n) {
  return !!n.paths;
}
var Tc = class {};
var pD = (() => {
    class n {
      constructor(e, t, r, o, a) {
        (this.router = e),
          (this.injector = r),
          (this.preloadingStrategy = o),
          (this.loader = a);
      }
      setUpPreloading() {
        this.subscription = this.router.events
          .pipe(
            Ct((e) => e instanceof ci),
            Tr(() => this.preload())
          )
          .subscribe(() => {});
      }
      preload() {
        return this.processRoutes(this.injector, this.router.config);
      }
      ngOnDestroy() {
        this.subscription && this.subscription.unsubscribe();
      }
      processRoutes(e, t) {
        let r = [];
        for (let o of t) {
          o.providers &&
            !o._injector &&
            (o._injector = th(o.providers, e, `Route: ${o.path}`));
          let a = o._injector ?? e,
            l = o._loadedInjector ?? a;
          ((o.loadChildren && !o._loadedRoutes && o.canLoad === void 0) ||
            (o.loadComponent && !o._loadedComponent)) &&
            r.push(this.preloadConfig(a, o)),
            (o.children || o._loadedRoutes) &&
              r.push(this.processRoutes(l, o.children ?? o._loadedRoutes));
        }
        return ui(r).pipe(Ya());
      }
      preloadConfig(e, t) {
        return this.preloadingStrategy.preload(t, () => {
          let r;
          t.loadChildren && t.canLoad === void 0
            ? (r = this.loader.loadChildren(e, t))
            : (r = fe(null));
          let o = r.pipe(
            Ri((a) =>
              a === null
                ? fe(void 0)
                : ((t._loadedRoutes = a.routes),
                  (t._loadedInjector = a.injector),
                  this.processRoutes(a.injector ?? e, a.routes))
            )
          );
          if (t.loadComponent && !t._loadedComponent) {
            let a = this.loader.loadComponent(t);
            return ui([o, a]).pipe(Ya());
          } else return o;
        });
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Mt), Q(Ql), Q(an), Q(Tc), Q(op));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  b_ = new we(""),
  mD = (() => {
    class n {
      constructor(e, t, r, o, a = {}) {
        (this.urlSerializer = e),
          (this.transitions = t),
          (this.viewportScroller = r),
          (this.zone = o),
          (this.options = a),
          (this.lastId = 0),
          (this.lastSource = "imperative"),
          (this.restoredId = 0),
          (this.store = {}),
          (a.scrollPositionRestoration ||= "disabled"),
          (a.anchorScrolling ||= "disabled");
      }
      init() {
        this.options.scrollPositionRestoration !== "disabled" &&
          this.viewportScroller.setHistoryScrollRestoration("manual"),
          (this.routerEventsSubscription = this.createScrollEvents()),
          (this.scrollEventsSubscription = this.consumeScrollEvents());
      }
      createScrollEvents() {
        return this.transitions.events.subscribe((e) => {
          e instanceof aa
            ? ((this.store[this.lastId] =
                this.viewportScroller.getScrollPosition()),
              (this.lastSource = e.navigationTrigger),
              (this.restoredId = e.restoredState
                ? e.restoredState.navigationId
                : 0))
            : e instanceof ci
            ? ((this.lastId = e.id),
              this.scheduleScrollEvent(
                e,
                this.urlSerializer.parse(e.urlAfterRedirects).fragment
              ))
            : e instanceof Fr &&
              e.code === bc.IgnoredSameUrlNavigation &&
              ((this.lastSource = void 0),
              (this.restoredId = 0),
              this.scheduleScrollEvent(
                e,
                this.urlSerializer.parse(e.url).fragment
              ));
        });
      }
      consumeScrollEvents() {
        return this.transitions.events.subscribe((e) => {
          e instanceof yc &&
            (e.position
              ? this.options.scrollPositionRestoration === "top"
                ? this.viewportScroller.scrollToPosition([0, 0])
                : this.options.scrollPositionRestoration === "enabled" &&
                  this.viewportScroller.scrollToPosition(e.position)
              : e.anchor && this.options.anchorScrolling === "enabled"
              ? this.viewportScroller.scrollToAnchor(e.anchor)
              : this.options.scrollPositionRestoration !== "disabled" &&
                this.viewportScroller.scrollToPosition([0, 0]));
        });
      }
      scheduleScrollEvent(e, t) {
        this.zone.runOutsideAngular(() => {
          setTimeout(() => {
            this.zone.run(() => {
              this.transitions.events.next(
                new yc(
                  e,
                  this.lastSource === "popstate"
                    ? this.store[this.restoredId]
                    : null,
                  t
                )
              );
            });
          }, 0);
        });
      }
      ngOnDestroy() {
        this.routerEventsSubscription?.unsubscribe(),
          this.scrollEventsSubscription?.unsubscribe();
      }
      static {
        this.ɵfac = function (t) {
          kr();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function v_(n, ...i) {
  return zn([
    { provide: Ds, multi: !0, useValue: n },
    [],
    { provide: Zt, useFactory: y_, deps: [Mt] },
    { provide: is, multi: !0, useFactory: x_ },
    i.map((e) => e.ɵproviders),
  ]);
}
function y_(n) {
  return n.routerState.root;
}
function Ps(n, i) {
  return { ɵkind: n, ɵproviders: i };
}
function x_() {
  let n = G(Dt);
  return (i) => {
    let e = n.get(Li);
    if (i !== e.components[0]) return;
    let t = n.get(Mt),
      r = n.get(C_);
    n.get(lp) === 1 && t.initialNavigation(),
      n.get(w_, null, Xu.Optional)?.setUpPreloading(),
      n.get(b_, null, Xu.Optional)?.init(),
      t.resetRootComponentType(e.componentTypes[0]),
      r.closed || (r.next(), r.complete(), r.unsubscribe());
  };
}
var C_ = new we("", { factory: () => new Oe() }),
  lp = new we("", { providedIn: "root", factory: () => 1 });
function fD() {
  return Ps(2, [
    { provide: lp, useValue: 0 },
    {
      provide: sh,
      multi: !0,
      deps: [Dt],
      useFactory: (i) => {
        let e = i.get(Gg, Promise.resolve());
        return () =>
          e.then(
            () =>
              new Promise((t) => {
                let r = i.get(Mt),
                  o = i.get(C_);
                g_(r, () => {
                  t(!0);
                }),
                  (i.get(sp).afterPreactivation = () => (
                    t(!0), o.closed ? fe(void 0) : o
                  )),
                  r.initialNavigation();
              })
          );
      },
    },
  ]);
}
function gD() {
  return Ps(3, [
    {
      provide: sh,
      multi: !0,
      useFactory: () => {
        let i = G(Mt);
        return () => {
          i.setUpLocationChangeListener();
        };
      },
    },
    { provide: lp, useValue: 2 },
  ]);
}
var w_ = new we("");
function _D(n) {
  return Ps(0, [
    { provide: w_, useExisting: pD },
    { provide: Tc, useExisting: n },
  ]);
}
function bD() {
  return Ps(8, [R0, { provide: Ec, useExisting: R0 }]);
}
function vD(n) {
  let i = [
    { provide: p_, useValue: eD },
    {
      provide: m_,
      useValue: W({ skipNextTransition: !!n?.skipInitialTransition }, n),
    },
  ];
  return Ps(9, i);
}
var V0 = new we("ROUTER_FORROOT_GUARD"),
  yD = [
    dr,
    { provide: Ms, useClass: oa },
    Mt,
    Es,
    { provide: Zt, useFactory: y_, deps: [Mt] },
    op,
    [],
  ],
  Vi = (() => {
    class n {
      constructor(e) {}
      static forRoot(e, t) {
        return {
          ngModule: n,
          providers: [
            yD,
            [],
            { provide: Ds, multi: !0, useValue: e },
            { provide: V0, useFactory: DD, deps: [[Mt, new Ka(), new zl()]] },
            { provide: ks, useValue: t || {} },
            t?.useHash ? CD() : wD(),
            xD(),
            t?.preloadingStrategy ? _D(t.preloadingStrategy).ɵproviders : [],
            t?.initialNavigation ? SD(t) : [],
            t?.bindToComponentInputs ? bD().ɵproviders : [],
            t?.enableViewTransitions ? vD().ɵproviders : [],
            MD(),
          ],
        };
      }
      static forChild(e) {
        return {
          ngModule: n,
          providers: [{ provide: Ds, multi: !0, useValue: e }],
        };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(V0, 8));
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({});
      }
    }
    return n;
  })();
function xD() {
  return {
    provide: b_,
    useFactory: () => {
      let n = G(Xg),
        i = G(Te),
        e = G(ks),
        t = G(sp),
        r = G(Ms);
      return (
        e.scrollOffset && n.setOffset(e.scrollOffset), new mD(r, t, n, i, e)
      );
    },
  };
}
function CD() {
  return { provide: ns, useClass: qg };
}
function wD() {
  return { provide: ns, useClass: Yg };
}
function DD(n) {
  return "guarded";
}
function SD(n) {
  return [
    n.initialNavigation === "disabled" ? gD().ɵproviders : [],
    n.initialNavigation === "enabledBlocking" ? fD().ɵproviders : [],
  ];
}
var B0 = new we("");
function MD() {
  return [
    { provide: B0, useFactory: x_ },
    { provide: is, multi: !0, useExisting: B0 },
  ];
}
var I_ = (() => {
    class n {
      constructor(e, t) {
        (this._renderer = e),
          (this._elementRef = t),
          (this.onChange = (r) => {}),
          (this.onTouched = () => {});
      }
      setProperty(e, t) {
        this._renderer.setProperty(this._elementRef.nativeElement, e, t);
      }
      registerOnTouched(e) {
        this.onTouched = e;
      }
      registerOnChange(e) {
        this.onChange = e;
      }
      setDisabledState(e) {
        this.setProperty("disabled", e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(hi), H(Fe));
        };
      }
      static {
        this.ɵdir = Ie({ type: n });
      }
    }
    return n;
  })(),
  hp = (() => {
    class n extends I_ {
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ie({ type: n, features: [Ze] });
      }
    }
    return n;
  })(),
  fo = new we("");
var TD = { provide: fo, useExisting: wi(() => ei), multi: !0 };
function ED() {
  let n = Xo() ? Xo().getUserAgent() : "";
  return /android (\d+)/.test(n.toLowerCase());
}
var OD = new we(""),
  ei = (() => {
    class n extends I_ {
      constructor(e, t, r) {
        super(e, t),
          (this._compositionMode = r),
          (this._composing = !1),
          this._compositionMode == null && (this._compositionMode = !ED());
      }
      writeValue(e) {
        let t = e ?? "";
        this.setProperty("value", t);
      }
      _handleInput(e) {
        (!this._compositionMode ||
          (this._compositionMode && !this._composing)) &&
          this.onChange(e);
      }
      _compositionStart() {
        this._composing = !0;
      }
      _compositionEnd(e) {
        (this._composing = !1), this._compositionMode && this.onChange(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(hi), H(Fe), H(OD, 8));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["input", "formControlName", "", 3, "type", "checkbox"],
            ["textarea", "formControlName", ""],
            ["input", "formControl", "", 3, "type", "checkbox"],
            ["textarea", "formControl", ""],
            ["input", "ngModel", "", 3, "type", "checkbox"],
            ["textarea", "ngModel", ""],
            ["", "ngDefaultControl", ""],
          ],
          hostBindings: function (t, r) {
            t & 1 &&
              N("input", function (a) {
                return r._handleInput(a.target.value);
              })("blur", function () {
                return r.onTouched();
              })("compositionstart", function () {
                return r._compositionStart();
              })("compositionend", function (a) {
                return r._compositionEnd(a.target.value);
              });
          },
          features: [Vt([TD]), Ze],
        });
      }
    }
    return n;
  })();
function Lr(n) {
  return (
    n == null || ((typeof n == "string" || Array.isArray(n)) && n.length === 0)
  );
}
function A_(n) {
  return n != null && typeof n.length == "number";
}
var go = new we(""),
  Hc = new we(""),
  kD =
    /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
  Re = class {
    static min(i) {
      return PD(i);
    }
    static max(i) {
      return ID(i);
    }
    static required(i) {
      return R_(i);
    }
    static requiredTrue(i) {
      return AD(i);
    }
    static email(i) {
      return F_(i);
    }
    static minLength(i) {
      return RD(i);
    }
    static maxLength(i) {
      return N_(i);
    }
    static pattern(i) {
      return FD(i);
    }
    static nullValidator(i) {
      return Pc(i);
    }
    static compose(i) {
      return U_(i);
    }
    static composeAsync(i) {
      return z_(i);
    }
  };
function PD(n) {
  return (i) => {
    if (Lr(i.value) || Lr(n)) return null;
    let e = parseFloat(i.value);
    return !isNaN(e) && e < n ? { min: { min: n, actual: i.value } } : null;
  };
}
function ID(n) {
  return (i) => {
    if (Lr(i.value) || Lr(n)) return null;
    let e = parseFloat(i.value);
    return !isNaN(e) && e > n ? { max: { max: n, actual: i.value } } : null;
  };
}
function R_(n) {
  return Lr(n.value) ? { required: !0 } : null;
}
function AD(n) {
  return n.value === !0 ? null : { required: !0 };
}
function F_(n) {
  return Lr(n.value) || kD.test(n.value) ? null : { email: !0 };
}
function RD(n) {
  return (i) =>
    Lr(i.value) || !A_(i.value)
      ? null
      : i.value.length < n
      ? { minlength: { requiredLength: n, actualLength: i.value.length } }
      : null;
}
function N_(n) {
  return (i) =>
    A_(i.value) && i.value.length > n
      ? { maxlength: { requiredLength: n, actualLength: i.value.length } }
      : null;
}
function FD(n) {
  if (!n) return Pc;
  let i, e;
  return (
    typeof n == "string"
      ? ((e = ""),
        n.charAt(0) !== "^" && (e += "^"),
        (e += n),
        n.charAt(n.length - 1) !== "$" && (e += "$"),
        (i = new RegExp(e)))
      : ((e = n.toString()), (i = n)),
    (t) => {
      if (Lr(t.value)) return null;
      let r = t.value;
      return i.test(r)
        ? null
        : { pattern: { requiredPattern: e, actualValue: r } };
    }
  );
}
function Pc(n) {
  return null;
}
function L_(n) {
  return n != null;
}
function V_(n) {
  return Kl(n) ? ui(n) : n;
}
function B_(n) {
  let i = {};
  return (
    n.forEach((e) => {
      i = e != null ? W(W({}, i), e) : i;
    }),
    Object.keys(i).length === 0 ? null : i
  );
}
function H_(n, i) {
  return i.map((e) => e(n));
}
function ND(n) {
  return !n.validate;
}
function j_(n) {
  return n.map((i) => (ND(i) ? i : (e) => i.validate(e)));
}
function U_(n) {
  if (!n) return null;
  let i = n.filter(L_);
  return i.length == 0
    ? null
    : function (e) {
        return B_(H_(e, i));
      };
}
function pp(n) {
  return n != null ? U_(j_(n)) : null;
}
function z_(n) {
  if (!n) return null;
  let i = n.filter(L_);
  return i.length == 0
    ? null
    : function (e) {
        let t = H_(e, i).map(V_);
        return hg(t).pipe(qe(B_));
      };
}
function mp(n) {
  return n != null ? z_(j_(n)) : null;
}
function D_(n, i) {
  return n === null ? [i] : Array.isArray(n) ? [...n, i] : [n, i];
}
function $_(n) {
  return n._rawValidators;
}
function W_(n) {
  return n._rawAsyncValidators;
}
function cp(n) {
  return n ? (Array.isArray(n) ? n : [n]) : [];
}
function Ic(n, i) {
  return Array.isArray(n) ? n.includes(i) : n === i;
}
function S_(n, i) {
  let e = cp(i);
  return (
    cp(n).forEach((r) => {
      Ic(e, r) || e.push(r);
    }),
    e
  );
}
function M_(n, i) {
  return cp(i).filter((e) => !Ic(n, e));
}
var Ac = class {
    constructor() {
      (this._rawValidators = []),
        (this._rawAsyncValidators = []),
        (this._onDestroyCallbacks = []);
    }
    get value() {
      return this.control ? this.control.value : null;
    }
    get valid() {
      return this.control ? this.control.valid : null;
    }
    get invalid() {
      return this.control ? this.control.invalid : null;
    }
    get pending() {
      return this.control ? this.control.pending : null;
    }
    get disabled() {
      return this.control ? this.control.disabled : null;
    }
    get enabled() {
      return this.control ? this.control.enabled : null;
    }
    get errors() {
      return this.control ? this.control.errors : null;
    }
    get pristine() {
      return this.control ? this.control.pristine : null;
    }
    get dirty() {
      return this.control ? this.control.dirty : null;
    }
    get touched() {
      return this.control ? this.control.touched : null;
    }
    get status() {
      return this.control ? this.control.status : null;
    }
    get untouched() {
      return this.control ? this.control.untouched : null;
    }
    get statusChanges() {
      return this.control ? this.control.statusChanges : null;
    }
    get valueChanges() {
      return this.control ? this.control.valueChanges : null;
    }
    get path() {
      return null;
    }
    _setValidators(i) {
      (this._rawValidators = i || []),
        (this._composedValidatorFn = pp(this._rawValidators));
    }
    _setAsyncValidators(i) {
      (this._rawAsyncValidators = i || []),
        (this._composedAsyncValidatorFn = mp(this._rawAsyncValidators));
    }
    get validator() {
      return this._composedValidatorFn || null;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn || null;
    }
    _registerOnDestroy(i) {
      this._onDestroyCallbacks.push(i);
    }
    _invokeOnDestroyCallbacks() {
      this._onDestroyCallbacks.forEach((i) => i()),
        (this._onDestroyCallbacks = []);
    }
    reset(i = void 0) {
      this.control && this.control.reset(i);
    }
    hasError(i, e) {
      return this.control ? this.control.hasError(i, e) : !1;
    }
    getError(i, e) {
      return this.control ? this.control.getError(i, e) : null;
    }
  },
  mr = class extends Ac {
    get formDirective() {
      return null;
    }
    get path() {
      return null;
    }
  },
  mo = class extends Ac {
    constructor() {
      super(...arguments),
        (this._parent = null),
        (this.name = null),
        (this.valueAccessor = null);
    }
  },
  Rc = class {
    constructor(i) {
      this._cd = i;
    }
    get isTouched() {
      return this._cd?.control?._touched?.(), !!this._cd?.control?.touched;
    }
    get isUntouched() {
      return !!this._cd?.control?.untouched;
    }
    get isPristine() {
      return this._cd?.control?._pristine?.(), !!this._cd?.control?.pristine;
    }
    get isDirty() {
      return !!this._cd?.control?.dirty;
    }
    get isValid() {
      return this._cd?.control?._status?.(), !!this._cd?.control?.valid;
    }
    get isInvalid() {
      return !!this._cd?.control?.invalid;
    }
    get isPending() {
      return !!this._cd?.control?.pending;
    }
    get isSubmitted() {
      return this._cd?._submitted?.(), !!this._cd?.submitted;
    }
  },
  LD = {
    "[class.ng-untouched]": "isUntouched",
    "[class.ng-touched]": "isTouched",
    "[class.ng-pristine]": "isPristine",
    "[class.ng-dirty]": "isDirty",
    "[class.ng-valid]": "isValid",
    "[class.ng-invalid]": "isInvalid",
    "[class.ng-pending]": "isPending",
  },
  Q3 = Ce(W({}, LD), { "[class.ng-submitted]": "isSubmitted" }),
  ti = (() => {
    class n extends Rc {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(mo, 2));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "formControlName", ""],
            ["", "ngModel", ""],
            ["", "formControl", ""],
          ],
          hostVars: 14,
          hostBindings: function (t, r) {
            t & 2 &&
              ne("ng-untouched", r.isUntouched)("ng-touched", r.isTouched)(
                "ng-pristine",
                r.isPristine
              )("ng-dirty", r.isDirty)("ng-valid", r.isValid)(
                "ng-invalid",
                r.isInvalid
              )("ng-pending", r.isPending);
          },
          features: [Ze],
        });
      }
    }
    return n;
  })(),
  Bi = (() => {
    class n extends Rc {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(mr, 10));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "formGroupName", ""],
            ["", "formArrayName", ""],
            ["", "ngModelGroup", ""],
            ["", "formGroup", ""],
            ["form", 3, "ngNoForm", ""],
            ["", "ngForm", ""],
          ],
          hostVars: 16,
          hostBindings: function (t, r) {
            t & 2 &&
              ne("ng-untouched", r.isUntouched)("ng-touched", r.isTouched)(
                "ng-pristine",
                r.isPristine
              )("ng-dirty", r.isDirty)("ng-valid", r.isValid)(
                "ng-invalid",
                r.isInvalid
              )("ng-pending", r.isPending)("ng-submitted", r.isSubmitted);
          },
          features: [Ze],
        });
      }
    }
    return n;
  })();
var Is = "VALID",
  kc = "INVALID",
  da = "PENDING",
  As = "DISABLED",
  Vr = class {},
  Fc = class extends Vr {
    constructor(i, e) {
      super(), (this.value = i), (this.source = e);
    }
  },
  Fs = class extends Vr {
    constructor(i, e) {
      super(), (this.pristine = i), (this.source = e);
    }
  },
  Ns = class extends Vr {
    constructor(i, e) {
      super(), (this.touched = i), (this.source = e);
    }
  },
  ua = class extends Vr {
    constructor(i, e) {
      super(), (this.status = i), (this.source = e);
    }
  },
  dp = class extends Vr {
    constructor(i) {
      super(), (this.source = i);
    }
  },
  up = class extends Vr {
    constructor(i) {
      super(), (this.source = i);
    }
  };
function G_(n) {
  return (jc(n) ? n.validators : n) || null;
}
function VD(n) {
  return Array.isArray(n) ? pp(n) : n || null;
}
function Y_(n, i) {
  return (jc(i) ? i.asyncValidators : n) || null;
}
function BD(n) {
  return Array.isArray(n) ? mp(n) : n || null;
}
function jc(n) {
  return n != null && !Array.isArray(n) && typeof n == "object";
}
function HD(n, i, e) {
  let t = n.controls;
  if (!(i ? Object.keys(t) : t).length) throw new ct(1e3, "");
  if (!t[e]) throw new ct(1001, "");
}
function jD(n, i, e) {
  n._forEachChild((t, r) => {
    if (e[r] === void 0) throw new ct(1002, "");
  });
}
var Nc = class {
    constructor(i, e) {
      (this._pendingDirty = !1),
        (this._hasOwnPendingAsyncValidator = null),
        (this._pendingTouched = !1),
        (this._onCollectionChange = () => {}),
        (this._parent = null),
        (this._status = ao(() => this.statusReactive())),
        (this.statusReactive = pe(void 0)),
        (this._pristine = ao(() => this.pristineReactive())),
        (this.pristineReactive = pe(!0)),
        (this._touched = ao(() => this.touchedReactive())),
        (this.touchedReactive = pe(!1)),
        (this._events = new Oe()),
        (this.events = this._events.asObservable()),
        (this._onDisabledChange = []),
        this._assignValidators(i),
        this._assignAsyncValidators(e);
    }
    get validator() {
      return this._composedValidatorFn;
    }
    set validator(i) {
      this._rawValidators = this._composedValidatorFn = i;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn;
    }
    set asyncValidator(i) {
      this._rawAsyncValidators = this._composedAsyncValidatorFn = i;
    }
    get parent() {
      return this._parent;
    }
    get status() {
      return Dn(this.statusReactive);
    }
    set status(i) {
      Dn(() => this.statusReactive.set(i));
    }
    get valid() {
      return this.status === Is;
    }
    get invalid() {
      return this.status === kc;
    }
    get pending() {
      return this.status == da;
    }
    get disabled() {
      return this.status === As;
    }
    get enabled() {
      return this.status !== As;
    }
    get pristine() {
      return Dn(this.pristineReactive);
    }
    set pristine(i) {
      Dn(() => this.pristineReactive.set(i));
    }
    get dirty() {
      return !this.pristine;
    }
    get touched() {
      return Dn(this.touchedReactive);
    }
    set touched(i) {
      Dn(() => this.touchedReactive.set(i));
    }
    get untouched() {
      return !this.touched;
    }
    get updateOn() {
      return this._updateOn
        ? this._updateOn
        : this.parent
        ? this.parent.updateOn
        : "change";
    }
    setValidators(i) {
      this._assignValidators(i);
    }
    setAsyncValidators(i) {
      this._assignAsyncValidators(i);
    }
    addValidators(i) {
      this.setValidators(S_(i, this._rawValidators));
    }
    addAsyncValidators(i) {
      this.setAsyncValidators(S_(i, this._rawAsyncValidators));
    }
    removeValidators(i) {
      this.setValidators(M_(i, this._rawValidators));
    }
    removeAsyncValidators(i) {
      this.setAsyncValidators(M_(i, this._rawAsyncValidators));
    }
    hasValidator(i) {
      return Ic(this._rawValidators, i);
    }
    hasAsyncValidator(i) {
      return Ic(this._rawAsyncValidators, i);
    }
    clearValidators() {
      this.validator = null;
    }
    clearAsyncValidators() {
      this.asyncValidator = null;
    }
    markAsTouched(i = {}) {
      let e = this.touched === !1;
      this.touched = !0;
      let t = i.sourceControl ?? this;
      this._parent &&
        !i.onlySelf &&
        this._parent.markAsTouched(Ce(W({}, i), { sourceControl: t })),
        e && i.emitEvent !== !1 && this._events.next(new Ns(!0, t));
    }
    markAllAsTouched(i = {}) {
      this.markAsTouched({
        onlySelf: !0,
        emitEvent: i.emitEvent,
        sourceControl: this,
      }),
        this._forEachChild((e) => e.markAllAsTouched(i));
    }
    markAsUntouched(i = {}) {
      let e = this.touched === !0;
      (this.touched = !1), (this._pendingTouched = !1);
      let t = i.sourceControl ?? this;
      this._forEachChild((r) => {
        r.markAsUntouched({
          onlySelf: !0,
          emitEvent: i.emitEvent,
          sourceControl: t,
        });
      }),
        this._parent && !i.onlySelf && this._parent._updateTouched(i, t),
        e && i.emitEvent !== !1 && this._events.next(new Ns(!1, t));
    }
    markAsDirty(i = {}) {
      let e = this.pristine === !0;
      this.pristine = !1;
      let t = i.sourceControl ?? this;
      this._parent &&
        !i.onlySelf &&
        this._parent.markAsDirty(Ce(W({}, i), { sourceControl: t })),
        e && i.emitEvent !== !1 && this._events.next(new Fs(!1, t));
    }
    markAsPristine(i = {}) {
      let e = this.pristine === !1;
      (this.pristine = !0), (this._pendingDirty = !1);
      let t = i.sourceControl ?? this;
      this._forEachChild((r) => {
        r.markAsPristine({ onlySelf: !0, emitEvent: i.emitEvent });
      }),
        this._parent && !i.onlySelf && this._parent._updatePristine(i, t),
        e && i.emitEvent !== !1 && this._events.next(new Fs(!0, t));
    }
    markAsPending(i = {}) {
      this.status = da;
      let e = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new ua(this.status, e)),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !i.onlySelf &&
          this._parent.markAsPending(Ce(W({}, i), { sourceControl: e }));
    }
    disable(i = {}) {
      let e = this._parentMarkedDirty(i.onlySelf);
      (this.status = As),
        (this.errors = null),
        this._forEachChild((r) => {
          r.disable(Ce(W({}, i), { onlySelf: !0 }));
        }),
        this._updateValue();
      let t = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new Fc(this.value, t)),
        this._events.next(new ua(this.status, t)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._updateAncestors(Ce(W({}, i), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((r) => r(!0));
    }
    enable(i = {}) {
      let e = this._parentMarkedDirty(i.onlySelf);
      (this.status = Is),
        this._forEachChild((t) => {
          t.enable(Ce(W({}, i), { onlySelf: !0 }));
        }),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: i.emitEvent }),
        this._updateAncestors(Ce(W({}, i), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((t) => t(!1));
    }
    _updateAncestors(i, e) {
      this._parent &&
        !i.onlySelf &&
        (this._parent.updateValueAndValidity(i),
        i.skipPristineCheck || this._parent._updatePristine({}, e),
        this._parent._updateTouched({}, e));
    }
    setParent(i) {
      this._parent = i;
    }
    getRawValue() {
      return this.value;
    }
    updateValueAndValidity(i = {}) {
      if ((this._setInitialStatus(), this._updateValue(), this.enabled)) {
        let t = this._cancelExistingSubscription();
        (this.errors = this._runValidator()),
          (this.status = this._calculateStatus()),
          (this.status === Is || this.status === da) &&
            this._runAsyncValidator(t, i.emitEvent);
      }
      let e = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new Fc(this.value, e)),
        this._events.next(new ua(this.status, e)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !i.onlySelf &&
          this._parent.updateValueAndValidity(
            Ce(W({}, i), { sourceControl: e })
          );
    }
    _updateTreeValidity(i = { emitEvent: !0 }) {
      this._forEachChild((e) => e._updateTreeValidity(i)),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: i.emitEvent });
    }
    _setInitialStatus() {
      this.status = this._allControlsDisabled() ? As : Is;
    }
    _runValidator() {
      return this.validator ? this.validator(this) : null;
    }
    _runAsyncValidator(i, e) {
      if (this.asyncValidator) {
        (this.status = da),
          (this._hasOwnPendingAsyncValidator = { emitEvent: e !== !1 });
        let t = V_(this.asyncValidator(this));
        this._asyncValidationSubscription = t.subscribe((r) => {
          (this._hasOwnPendingAsyncValidator = null),
            this.setErrors(r, { emitEvent: e, shouldHaveEmitted: i });
        });
      }
    }
    _cancelExistingSubscription() {
      if (this._asyncValidationSubscription) {
        this._asyncValidationSubscription.unsubscribe();
        let i = this._hasOwnPendingAsyncValidator?.emitEvent ?? !1;
        return (this._hasOwnPendingAsyncValidator = null), i;
      }
      return !1;
    }
    setErrors(i, e = {}) {
      (this.errors = i),
        this._updateControlsErrors(
          e.emitEvent !== !1,
          this,
          e.shouldHaveEmitted
        );
    }
    get(i) {
      let e = i;
      return e == null ||
        (Array.isArray(e) || (e = e.split(".")), e.length === 0)
        ? null
        : e.reduce((t, r) => t && t._find(r), this);
    }
    getError(i, e) {
      let t = e ? this.get(e) : this;
      return t && t.errors ? t.errors[i] : null;
    }
    hasError(i, e) {
      return !!this.getError(i, e);
    }
    get root() {
      let i = this;
      for (; i._parent; ) i = i._parent;
      return i;
    }
    _updateControlsErrors(i, e, t) {
      (this.status = this._calculateStatus()),
        i && this.statusChanges.emit(this.status),
        (i || t) && this._events.next(new ua(this.status, e)),
        this._parent && this._parent._updateControlsErrors(i, e, t);
    }
    _initObservables() {
      (this.valueChanges = new xe()), (this.statusChanges = new xe());
    }
    _calculateStatus() {
      return this._allControlsDisabled()
        ? As
        : this.errors
        ? kc
        : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(da)
        ? da
        : this._anyControlsHaveStatus(kc)
        ? kc
        : Is;
    }
    _anyControlsHaveStatus(i) {
      return this._anyControls((e) => e.status === i);
    }
    _anyControlsDirty() {
      return this._anyControls((i) => i.dirty);
    }
    _anyControlsTouched() {
      return this._anyControls((i) => i.touched);
    }
    _updatePristine(i, e) {
      let t = !this._anyControlsDirty(),
        r = this.pristine !== t;
      (this.pristine = t),
        this._parent && !i.onlySelf && this._parent._updatePristine(i, e),
        r && this._events.next(new Fs(this.pristine, e));
    }
    _updateTouched(i = {}, e) {
      (this.touched = this._anyControlsTouched()),
        this._events.next(new Ns(this.touched, e)),
        this._parent && !i.onlySelf && this._parent._updateTouched(i, e);
    }
    _registerOnCollectionChange(i) {
      this._onCollectionChange = i;
    }
    _setUpdateStrategy(i) {
      jc(i) && i.updateOn != null && (this._updateOn = i.updateOn);
    }
    _parentMarkedDirty(i) {
      let e = this._parent && this._parent.dirty;
      return !i && !!e && !this._parent._anyControlsDirty();
    }
    _find(i) {
      return null;
    }
    _assignValidators(i) {
      (this._rawValidators = Array.isArray(i) ? i.slice() : i),
        (this._composedValidatorFn = VD(this._rawValidators));
    }
    _assignAsyncValidators(i) {
      (this._rawAsyncValidators = Array.isArray(i) ? i.slice() : i),
        (this._composedAsyncValidatorFn = BD(this._rawAsyncValidators));
    }
  },
  Rt = class extends Nc {
    constructor(i, e, t) {
      super(G_(e), Y_(t, e)),
        (this.controls = i),
        this._initObservables(),
        this._setUpdateStrategy(e),
        this._setUpControls(),
        this.updateValueAndValidity({
          onlySelf: !0,
          emitEvent: !!this.asyncValidator,
        });
    }
    registerControl(i, e) {
      return this.controls[i]
        ? this.controls[i]
        : ((this.controls[i] = e),
          e.setParent(this),
          e._registerOnCollectionChange(this._onCollectionChange),
          e);
    }
    addControl(i, e, t = {}) {
      this.registerControl(i, e),
        this.updateValueAndValidity({ emitEvent: t.emitEvent }),
        this._onCollectionChange();
    }
    removeControl(i, e = {}) {
      this.controls[i] &&
        this.controls[i]._registerOnCollectionChange(() => {}),
        delete this.controls[i],
        this.updateValueAndValidity({ emitEvent: e.emitEvent }),
        this._onCollectionChange();
    }
    setControl(i, e, t = {}) {
      this.controls[i] &&
        this.controls[i]._registerOnCollectionChange(() => {}),
        delete this.controls[i],
        e && this.registerControl(i, e),
        this.updateValueAndValidity({ emitEvent: t.emitEvent }),
        this._onCollectionChange();
    }
    contains(i) {
      return this.controls.hasOwnProperty(i) && this.controls[i].enabled;
    }
    setValue(i, e = {}) {
      jD(this, !0, i),
        Object.keys(i).forEach((t) => {
          HD(this, !0, t),
            this.controls[t].setValue(i[t], {
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }),
        this.updateValueAndValidity(e);
    }
    patchValue(i, e = {}) {
      i != null &&
        (Object.keys(i).forEach((t) => {
          let r = this.controls[t];
          r && r.patchValue(i[t], { onlySelf: !0, emitEvent: e.emitEvent });
        }),
        this.updateValueAndValidity(e));
    }
    reset(i = {}, e = {}) {
      this._forEachChild((t, r) => {
        t.reset(i ? i[r] : null, { onlySelf: !0, emitEvent: e.emitEvent });
      }),
        this._updatePristine(e, this),
        this._updateTouched(e, this),
        this.updateValueAndValidity(e);
    }
    getRawValue() {
      return this._reduceChildren(
        {},
        (i, e, t) => ((i[t] = e.getRawValue()), i)
      );
    }
    _syncPendingControls() {
      let i = this._reduceChildren(!1, (e, t) =>
        t._syncPendingControls() ? !0 : e
      );
      return i && this.updateValueAndValidity({ onlySelf: !0 }), i;
    }
    _forEachChild(i) {
      Object.keys(this.controls).forEach((e) => {
        let t = this.controls[e];
        t && i(t, e);
      });
    }
    _setUpControls() {
      this._forEachChild((i) => {
        i.setParent(this),
          i._registerOnCollectionChange(this._onCollectionChange);
      });
    }
    _updateValue() {
      this.value = this._reduceValue();
    }
    _anyControls(i) {
      for (let [e, t] of Object.entries(this.controls))
        if (this.contains(e) && i(t)) return !0;
      return !1;
    }
    _reduceValue() {
      let i = {};
      return this._reduceChildren(
        i,
        (e, t, r) => ((t.enabled || this.disabled) && (e[r] = t.value), e)
      );
    }
    _reduceChildren(i, e) {
      let t = i;
      return (
        this._forEachChild((r, o) => {
          t = e(t, r, o);
        }),
        t
      );
    }
    _allControlsDisabled() {
      for (let i of Object.keys(this.controls))
        if (this.controls[i].enabled) return !1;
      return Object.keys(this.controls).length > 0 || this.disabled;
    }
    _find(i) {
      return this.controls.hasOwnProperty(i) ? this.controls[i] : null;
    }
  };
var Ls = new we("CallSetDisabledState", {
    providedIn: "root",
    factory: () => Uc,
  }),
  Uc = "always";
function q_(n, i) {
  return [...i.path, n];
}
function Lc(n, i, e = Uc) {
  fp(n, i),
    i.valueAccessor.writeValue(n.value),
    (n.disabled || e === "always") &&
      i.valueAccessor.setDisabledState?.(n.disabled),
    zD(n, i),
    WD(n, i),
    $D(n, i),
    UD(n, i);
}
function T_(n, i, e = !0) {
  let t = () => {};
  i.valueAccessor &&
    (i.valueAccessor.registerOnChange(t), i.valueAccessor.registerOnTouched(t)),
    Bc(n, i),
    n &&
      (i._invokeOnDestroyCallbacks(), n._registerOnCollectionChange(() => {}));
}
function Vc(n, i) {
  n.forEach((e) => {
    e.registerOnValidatorChange && e.registerOnValidatorChange(i);
  });
}
function UD(n, i) {
  if (i.valueAccessor.setDisabledState) {
    let e = (t) => {
      i.valueAccessor.setDisabledState(t);
    };
    n.registerOnDisabledChange(e),
      i._registerOnDestroy(() => {
        n._unregisterOnDisabledChange(e);
      });
  }
}
function fp(n, i) {
  let e = $_(n);
  i.validator !== null
    ? n.setValidators(D_(e, i.validator))
    : typeof e == "function" && n.setValidators([e]);
  let t = W_(n);
  i.asyncValidator !== null
    ? n.setAsyncValidators(D_(t, i.asyncValidator))
    : typeof t == "function" && n.setAsyncValidators([t]);
  let r = () => n.updateValueAndValidity();
  Vc(i._rawValidators, r), Vc(i._rawAsyncValidators, r);
}
function Bc(n, i) {
  let e = !1;
  if (n !== null) {
    if (i.validator !== null) {
      let r = $_(n);
      if (Array.isArray(r) && r.length > 0) {
        let o = r.filter((a) => a !== i.validator);
        o.length !== r.length && ((e = !0), n.setValidators(o));
      }
    }
    if (i.asyncValidator !== null) {
      let r = W_(n);
      if (Array.isArray(r) && r.length > 0) {
        let o = r.filter((a) => a !== i.asyncValidator);
        o.length !== r.length && ((e = !0), n.setAsyncValidators(o));
      }
    }
  }
  let t = () => {};
  return Vc(i._rawValidators, t), Vc(i._rawAsyncValidators, t), e;
}
function zD(n, i) {
  i.valueAccessor.registerOnChange((e) => {
    (n._pendingValue = e),
      (n._pendingChange = !0),
      (n._pendingDirty = !0),
      n.updateOn === "change" && K_(n, i);
  });
}
function $D(n, i) {
  i.valueAccessor.registerOnTouched(() => {
    (n._pendingTouched = !0),
      n.updateOn === "blur" && n._pendingChange && K_(n, i),
      n.updateOn !== "submit" && n.markAsTouched();
  });
}
function K_(n, i) {
  n._pendingDirty && n.markAsDirty(),
    n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
    i.viewToModelUpdate(n._pendingValue),
    (n._pendingChange = !1);
}
function WD(n, i) {
  let e = (t, r) => {
    i.valueAccessor.writeValue(t), r && i.viewToModelUpdate(t);
  };
  n.registerOnChange(e),
    i._registerOnDestroy(() => {
      n._unregisterOnChange(e);
    });
}
function Q_(n, i) {
  n == null, fp(n, i);
}
function GD(n, i) {
  return Bc(n, i);
}
function X_(n, i) {
  if (!n.hasOwnProperty("model")) return !1;
  let e = n.model;
  return e.isFirstChange() ? !0 : !Object.is(i, e.currentValue);
}
function YD(n) {
  return Object.getPrototypeOf(n.constructor) === hp;
}
function Z_(n, i) {
  n._syncPendingControls(),
    i.forEach((e) => {
      let t = e.control;
      t.updateOn === "submit" &&
        t._pendingChange &&
        (e.viewToModelUpdate(t._pendingValue), (t._pendingChange = !1));
    });
}
function J_(n, i) {
  if (!i) return null;
  Array.isArray(i);
  let e, t, r;
  return (
    i.forEach((o) => {
      o.constructor === ei ? (e = o) : YD(o) ? (t = o) : (r = o);
    }),
    r || t || e || null
  );
}
function qD(n, i) {
  let e = n.indexOf(i);
  e > -1 && n.splice(e, 1);
}
var KD = { provide: mr, useExisting: wi(() => gp) },
  Rs = Promise.resolve(),
  gp = (() => {
    class n extends mr {
      get submitted() {
        return Dn(this.submittedReactive);
      }
      constructor(e, t, r) {
        super(),
          (this.callSetDisabledState = r),
          (this._submitted = ao(() => this.submittedReactive())),
          (this.submittedReactive = pe(!1)),
          (this._directives = new Set()),
          (this.ngSubmit = new xe()),
          (this.form = new Rt({}, pp(e), mp(t)));
      }
      ngAfterViewInit() {
        this._setUpdateStrategy();
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      get controls() {
        return this.form.controls;
      }
      addControl(e) {
        Rs.then(() => {
          let t = this._findContainer(e.path);
          (e.control = t.registerControl(e.name, e.control)),
            Lc(e.control, e, this.callSetDisabledState),
            e.control.updateValueAndValidity({ emitEvent: !1 }),
            this._directives.add(e);
        });
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        Rs.then(() => {
          let t = this._findContainer(e.path);
          t && t.removeControl(e.name), this._directives.delete(e);
        });
      }
      addFormGroup(e) {
        Rs.then(() => {
          let t = this._findContainer(e.path),
            r = new Rt({});
          Q_(r, e),
            t.registerControl(e.name, r),
            r.updateValueAndValidity({ emitEvent: !1 });
        });
      }
      removeFormGroup(e) {
        Rs.then(() => {
          let t = this._findContainer(e.path);
          t && t.removeControl(e.name);
        });
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      updateModel(e, t) {
        Rs.then(() => {
          this.form.get(e.path).setValue(t);
        });
      }
      setValue(e) {
        this.control.setValue(e);
      }
      onSubmit(e) {
        return (
          this.submittedReactive.set(!0),
          Z_(this.form, this._directives),
          this.ngSubmit.emit(e),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e), this.submittedReactive.set(!1);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.form._updateOn = this.options.updateOn);
      }
      _findContainer(e) {
        return e.pop(), e.length ? this.form.get(e) : this.form;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(go, 10), H(Hc, 10), H(Ls, 8));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
            ["ng-form"],
            ["", "ngForm", ""],
          ],
          hostBindings: function (t, r) {
            t & 1 &&
              N("submit", function (a) {
                return r.onSubmit(a);
              })("reset", function () {
                return r.onReset();
              });
          },
          inputs: { options: [0, "ngFormOptions", "options"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [Vt([KD]), Ze],
        });
      }
    }
    return n;
  })();
function E_(n, i) {
  let e = n.indexOf(i);
  e > -1 && n.splice(e, 1);
}
function O_(n) {
  return (
    typeof n == "object" &&
    n !== null &&
    Object.keys(n).length === 2 &&
    "value" in n &&
    "disabled" in n
  );
}
var nt = class extends Nc {
  constructor(i = null, e, t) {
    super(G_(e), Y_(t, e)),
      (this.defaultValue = null),
      (this._onChange = []),
      (this._pendingChange = !1),
      this._applyFormState(i),
      this._setUpdateStrategy(e),
      this._initObservables(),
      this.updateValueAndValidity({
        onlySelf: !0,
        emitEvent: !!this.asyncValidator,
      }),
      jc(e) &&
        (e.nonNullable || e.initialValueIsDefault) &&
        (O_(i) ? (this.defaultValue = i.value) : (this.defaultValue = i));
  }
  setValue(i, e = {}) {
    (this.value = this._pendingValue = i),
      this._onChange.length &&
        e.emitModelToViewChange !== !1 &&
        this._onChange.forEach((t) =>
          t(this.value, e.emitViewToModelChange !== !1)
        ),
      this.updateValueAndValidity(e);
  }
  patchValue(i, e = {}) {
    this.setValue(i, e);
  }
  reset(i = this.defaultValue, e = {}) {
    this._applyFormState(i),
      this.markAsPristine(e),
      this.markAsUntouched(e),
      this.setValue(this.value, e),
      (this._pendingChange = !1);
  }
  _updateValue() {}
  _anyControls(i) {
    return !1;
  }
  _allControlsDisabled() {
    return this.disabled;
  }
  registerOnChange(i) {
    this._onChange.push(i);
  }
  _unregisterOnChange(i) {
    E_(this._onChange, i);
  }
  registerOnDisabledChange(i) {
    this._onDisabledChange.push(i);
  }
  _unregisterOnDisabledChange(i) {
    E_(this._onDisabledChange, i);
  }
  _forEachChild(i) {}
  _syncPendingControls() {
    return this.updateOn === "submit" &&
      (this._pendingDirty && this.markAsDirty(),
      this._pendingTouched && this.markAsTouched(),
      this._pendingChange)
      ? (this.setValue(this._pendingValue, {
          onlySelf: !0,
          emitModelToViewChange: !1,
        }),
        !0)
      : !1;
  }
  _applyFormState(i) {
    O_(i)
      ? ((this.value = this._pendingValue = i.value),
        i.disabled
          ? this.disable({ onlySelf: !0, emitEvent: !1 })
          : this.enable({ onlySelf: !0, emitEvent: !1 }))
      : (this.value = this._pendingValue = i);
  }
};
var QD = (n) => n instanceof nt;
var XD = { provide: mo, useExisting: wi(() => _i) },
  k_ = Promise.resolve(),
  _i = (() => {
    class n extends mo {
      constructor(e, t, r, o, a, l) {
        super(),
          (this._changeDetectorRef = a),
          (this.callSetDisabledState = l),
          (this.control = new nt()),
          (this._registered = !1),
          (this.name = ""),
          (this.update = new xe()),
          (this._parent = e),
          this._setValidators(t),
          this._setAsyncValidators(r),
          (this.valueAccessor = J_(this, o));
      }
      ngOnChanges(e) {
        if ((this._checkForErrors(), !this._registered || "name" in e)) {
          if (this._registered && (this._checkName(), this.formDirective)) {
            let t = e.name.previousValue;
            this.formDirective.removeControl({
              name: t,
              path: this._getPath(t),
            });
          }
          this._setUpControl();
        }
        "isDisabled" in e && this._updateDisabled(e),
          X_(e, this.viewModel) &&
            (this._updateValue(this.model), (this.viewModel = this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      get path() {
        return this._getPath(this.name);
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      _setUpControl() {
        this._setUpdateStrategy(),
          this._isStandalone()
            ? this._setUpStandalone()
            : this.formDirective.addControl(this),
          (this._registered = !0);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.control._updateOn = this.options.updateOn);
      }
      _isStandalone() {
        return !this._parent || !!(this.options && this.options.standalone);
      }
      _setUpStandalone() {
        Lc(this.control, this, this.callSetDisabledState),
          this.control.updateValueAndValidity({ emitEvent: !1 });
      }
      _checkForErrors() {
        this._isStandalone() || this._checkParentType(), this._checkName();
      }
      _checkParentType() {}
      _checkName() {
        this.options && this.options.name && (this.name = this.options.name),
          !this._isStandalone() && this.name;
      }
      _updateValue(e) {
        k_.then(() => {
          this.control.setValue(e, { emitViewToModelChange: !1 }),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _updateDisabled(e) {
        let t = e.isDisabled.currentValue,
          r = t !== 0 && Se(t);
        k_.then(() => {
          r && !this.control.disabled
            ? this.control.disable()
            : !r && this.control.disabled && this.control.enable(),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _getPath(e) {
        return this._parent ? q_(e, this._parent) : [e];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            H(mr, 9),
            H(go, 10),
            H(Hc, 10),
            H(fo, 10),
            H(Ke, 8),
            H(Ls, 8)
          );
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""],
          ],
          inputs: {
            name: "name",
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
            options: [0, "ngModelOptions", "options"],
          },
          outputs: { update: "ngModelChange" },
          exportAs: ["ngModel"],
          features: [Vt([XD]), Ze, wt],
        });
      }
    }
    return n;
  })(),
  Br = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]],
          hostAttrs: ["novalidate", ""],
        });
      }
    }
    return n;
  })();
var eb = new we("");
var ZD = { provide: mr, useExisting: wi(() => Xi) },
  Xi = (() => {
    class n extends mr {
      get submitted() {
        return Dn(this._submittedReactive);
      }
      set submitted(e) {
        this._submittedReactive.set(e);
      }
      constructor(e, t, r) {
        super(),
          (this.callSetDisabledState = r),
          (this._submitted = ao(() => this._submittedReactive())),
          (this._submittedReactive = pe(!1)),
          (this._onCollectionChange = () => this._updateDomValue()),
          (this.directives = []),
          (this.form = null),
          (this.ngSubmit = new xe()),
          this._setValidators(e),
          this._setAsyncValidators(t);
      }
      ngOnChanges(e) {
        this._checkFormPresent(),
          e.hasOwnProperty("form") &&
            (this._updateValidators(),
            this._updateDomValue(),
            this._updateRegistrations(),
            (this._oldForm = this.form));
      }
      ngOnDestroy() {
        this.form &&
          (Bc(this.form, this),
          this.form._onCollectionChange === this._onCollectionChange &&
            this.form._registerOnCollectionChange(() => {}));
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      addControl(e) {
        let t = this.form.get(e.path);
        return (
          Lc(t, e, this.callSetDisabledState),
          t.updateValueAndValidity({ emitEvent: !1 }),
          this.directives.push(e),
          t
        );
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        T_(e.control || null, e, !1), qD(this.directives, e);
      }
      addFormGroup(e) {
        this._setUpFormContainer(e);
      }
      removeFormGroup(e) {
        this._cleanUpFormContainer(e);
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      addFormArray(e) {
        this._setUpFormContainer(e);
      }
      removeFormArray(e) {
        this._cleanUpFormContainer(e);
      }
      getFormArray(e) {
        return this.form.get(e.path);
      }
      updateModel(e, t) {
        this.form.get(e.path).setValue(t);
      }
      onSubmit(e) {
        return (
          this._submittedReactive.set(!0),
          Z_(this.form, this.directives),
          this.ngSubmit.emit(e),
          this.form._events.next(new dp(this.control)),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e),
          this._submittedReactive.set(!1),
          this.form._events.next(new up(this.form));
      }
      _updateDomValue() {
        this.directives.forEach((e) => {
          let t = e.control,
            r = this.form.get(e.path);
          t !== r &&
            (T_(t || null, e),
            QD(r) && (Lc(r, e, this.callSetDisabledState), (e.control = r)));
        }),
          this.form._updateTreeValidity({ emitEvent: !1 });
      }
      _setUpFormContainer(e) {
        let t = this.form.get(e.path);
        Q_(t, e), t.updateValueAndValidity({ emitEvent: !1 });
      }
      _cleanUpFormContainer(e) {
        if (this.form) {
          let t = this.form.get(e.path);
          t && GD(t, e) && t.updateValueAndValidity({ emitEvent: !1 });
        }
      }
      _updateRegistrations() {
        this.form._registerOnCollectionChange(this._onCollectionChange),
          this._oldForm && this._oldForm._registerOnCollectionChange(() => {});
      }
      _updateValidators() {
        fp(this.form, this), this._oldForm && Bc(this._oldForm, this);
      }
      _checkFormPresent() {
        this.form;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(go, 10), H(Hc, 10), H(Ls, 8));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "formGroup", ""]],
          hostBindings: function (t, r) {
            t & 1 &&
              N("submit", function (a) {
                return r.onSubmit(a);
              })("reset", function () {
                return r.onReset();
              });
          },
          inputs: { form: [0, "formGroup", "form"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [Vt([ZD]), Ze, wt],
        });
      }
    }
    return n;
  })();
var JD = { provide: mo, useExisting: wi(() => Zi) },
  Zi = (() => {
    class n extends mo {
      set isDisabled(e) {}
      static {
        this._ngModelWarningSentOnce = !1;
      }
      constructor(e, t, r, o, a) {
        super(),
          (this._ngModelWarningConfig = a),
          (this._added = !1),
          (this.name = null),
          (this.update = new xe()),
          (this._ngModelWarningSent = !1),
          (this._parent = e),
          this._setValidators(t),
          this._setAsyncValidators(r),
          (this.valueAccessor = J_(this, o));
      }
      ngOnChanges(e) {
        this._added || this._setUpControl(),
          X_(e, this.viewModel) &&
            ((this.viewModel = this.model),
            this.formDirective.updateModel(this, this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      get path() {
        return q_(
          this.name == null ? this.name : this.name.toString(),
          this._parent
        );
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      _checkParentType() {}
      _setUpControl() {
        this._checkParentType(),
          (this.control = this.formDirective.addControl(this)),
          (this._added = !0);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            H(mr, 13),
            H(go, 10),
            H(Hc, 10),
            H(fo, 10),
            H(eb, 8)
          );
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "formControlName", ""]],
          inputs: {
            name: [0, "formControlName", "name"],
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
          },
          outputs: { update: "ngModelChange" },
          features: [Vt([JD]), Ze, wt],
        });
      }
    }
    return n;
  })(),
  eS = { provide: fo, useExisting: wi(() => Di), multi: !0 };
function tb(n, i) {
  return n == null
    ? `${i}`
    : (i && typeof i == "object" && (i = "Object"), `${n}: ${i}`.slice(0, 50));
}
function tS(n) {
  return n.split(":")[0];
}
var Di = (() => {
    class n extends hp {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let t = this._getOptionId(e),
          r = tb(t, e);
        this.setProperty("value", r);
      }
      registerOnChange(e) {
        this.onChange = (t) => {
          (this.value = this._getOptionValue(t)), e(this.value);
        };
      }
      _registerOption() {
        return (this._idCounter++).toString();
      }
      _getOptionId(e) {
        for (let t of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(t), e)) return t;
        return null;
      }
      _getOptionValue(e) {
        let t = tS(e);
        return this._optionMap.has(t) ? this._optionMap.get(t) : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["select", "formControlName", "", 3, "multiple", ""],
            ["select", "formControl", "", 3, "multiple", ""],
            ["select", "ngModel", "", 3, "multiple", ""],
          ],
          hostBindings: function (t, r) {
            t & 1 &&
              N("change", function (a) {
                return r.onChange(a.target.value);
              })("blur", function () {
                return r.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [Vt([eS]), Ze],
        });
      }
    }
    return n;
  })(),
  ii = (() => {
    class n {
      constructor(e, t, r) {
        (this._element = e),
          (this._renderer = t),
          (this._select = r),
          this._select && (this.id = this._select._registerOption());
      }
      set ngValue(e) {
        this._select != null &&
          (this._select._optionMap.set(this.id, e),
          this._setElementValue(tb(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._setElementValue(e),
          this._select && this._select.writeValue(this._select.value);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Fe), H(hi), H(Di, 9));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return n;
  })(),
  iS = { provide: fo, useExisting: wi(() => ib), multi: !0 };
function P_(n, i) {
  return n == null
    ? `${i}`
    : (typeof i == "string" && (i = `'${i}'`),
      i && typeof i == "object" && (i = "Object"),
      `${n}: ${i}`.slice(0, 50));
}
function nS(n) {
  return n.split(":")[0];
}
var ib = (() => {
    class n extends hp {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let t;
        if (Array.isArray(e)) {
          let r = e.map((o) => this._getOptionId(o));
          t = (o, a) => {
            o._setSelected(r.indexOf(a.toString()) > -1);
          };
        } else
          t = (r, o) => {
            r._setSelected(!1);
          };
        this._optionMap.forEach(t);
      }
      registerOnChange(e) {
        this.onChange = (t) => {
          let r = [],
            o = t.selectedOptions;
          if (o !== void 0) {
            let a = o;
            for (let l = 0; l < a.length; l++) {
              let u = a[l],
                f = this._getOptionValue(u.value);
              r.push(f);
            }
          } else {
            let a = t.options;
            for (let l = 0; l < a.length; l++) {
              let u = a[l];
              if (u.selected) {
                let f = this._getOptionValue(u.value);
                r.push(f);
              }
            }
          }
          (this.value = r), e(r);
        };
      }
      _registerOption(e) {
        let t = (this._idCounter++).toString();
        return this._optionMap.set(t, e), t;
      }
      _getOptionId(e) {
        for (let t of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(t)._value, e)) return t;
        return null;
      }
      _getOptionValue(e) {
        let t = nS(e);
        return this._optionMap.has(t) ? this._optionMap.get(t)._value : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["select", "multiple", "", "formControlName", ""],
            ["select", "multiple", "", "formControl", ""],
            ["select", "multiple", "", "ngModel", ""],
          ],
          hostBindings: function (t, r) {
            t & 1 &&
              N("change", function (a) {
                return r.onChange(a.target);
              })("blur", function () {
                return r.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [Vt([iS]), Ze],
        });
      }
    }
    return n;
  })(),
  ni = (() => {
    class n {
      constructor(e, t, r) {
        (this._element = e),
          (this._renderer = t),
          (this._select = r),
          this._select && (this.id = this._select._registerOption(this));
      }
      set ngValue(e) {
        this._select != null &&
          ((this._value = e),
          this._setElementValue(P_(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._select
          ? ((this._value = e),
            this._setElementValue(P_(this.id, e)),
            this._select.writeValue(this._select.value))
          : this._setElementValue(e);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      _setSelected(e) {
        this._renderer.setProperty(this._element.nativeElement, "selected", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Fe), H(hi), H(ib, 9));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return n;
  })();
function rS(n) {
  return typeof n == "number" ? n : parseInt(n, 10);
}
var _p = (() => {
  class n {
    constructor() {
      this._validator = Pc;
    }
    ngOnChanges(e) {
      if (this.inputName in e) {
        let t = this.normalizeInput(e[this.inputName].currentValue);
        (this._enabled = this.enabled(t)),
          (this._validator = this._enabled ? this.createValidator(t) : Pc),
          this._onChange && this._onChange();
      }
    }
    validate(e) {
      return this._validator(e);
    }
    registerOnValidatorChange(e) {
      this._onChange = e;
    }
    enabled(e) {
      return e != null;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵdir = Ie({ type: n, features: [wt] });
    }
  }
  return n;
})();
var oS = { provide: go, useExisting: wi(() => fr), multi: !0 };
var fr = (() => {
  class n extends _p {
    constructor() {
      super(...arguments),
        (this.inputName = "required"),
        (this.normalizeInput = Se),
        (this.createValidator = (e) => R_);
    }
    enabled(e) {
      return e;
    }
    static {
      this.ɵfac = (() => {
        let e;
        return function (r) {
          return (e || (e = gt(n)))(r || n);
        };
      })();
    }
    static {
      this.ɵdir = Ie({
        type: n,
        selectors: [
          ["", "required", "", "formControlName", "", 3, "type", "checkbox"],
          ["", "required", "", "formControl", "", 3, "type", "checkbox"],
          ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
        ],
        hostVars: 1,
        hostBindings: function (t, r) {
          t & 2 && le("required", r._enabled ? "" : null);
        },
        inputs: { required: "required" },
        features: [Vt([oS]), Ze],
      });
    }
  }
  return n;
})();
var aS = { provide: go, useExisting: wi(() => bp), multi: !0 },
  bp = (() => {
    class n extends _p {
      constructor() {
        super(...arguments),
          (this.inputName = "email"),
          (this.normalizeInput = Se),
          (this.createValidator = (e) => F_);
      }
      enabled(e) {
        return e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "email", "", "formControlName", ""],
            ["", "email", "", "formControl", ""],
            ["", "email", "", "ngModel", ""],
          ],
          inputs: { email: "email" },
          features: [Vt([aS]), Ze],
        });
      }
    }
    return n;
  })();
var sS = { provide: go, useExisting: wi(() => vp), multi: !0 },
  vp = (() => {
    class n extends _p {
      constructor() {
        super(...arguments),
          (this.inputName = "maxlength"),
          (this.normalizeInput = (e) => rS(e)),
          (this.createValidator = (e) => N_(e));
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "maxlength", "", "formControlName", ""],
            ["", "maxlength", "", "formControl", ""],
            ["", "maxlength", "", "ngModel", ""],
          ],
          hostVars: 1,
          hostBindings: function (t, r) {
            t & 2 && le("maxlength", r._enabled ? r.maxlength : null);
          },
          inputs: { maxlength: "maxlength" },
          features: [Vt([sS]), Ze],
        });
      }
    }
    return n;
  })();
var nb = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
var tt = (() => {
    class n {
      static withConfig(e) {
        return {
          ngModule: n,
          providers: [{ provide: Ls, useValue: e.callSetDisabledState ?? Uc }],
        };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [nb] });
      }
    }
    return n;
  })(),
  hn = (() => {
    class n {
      static withConfig(e) {
        return {
          ngModule: n,
          providers: [
            {
              provide: eb,
              useValue: e.warnOnNgModelWithFormControl ?? "always",
            },
            { provide: Ls, useValue: e.callSetDisabledState ?? Uc },
          ],
        };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [nb] });
      }
    }
    return n;
  })();
var Kn = class n {
  onSideBarClick$ = new Oe();
  selectedOption = pe("users");
  getSelectedOption() {
    return this.selectedOption;
  }
  setSelectedOption(i) {
    this.selectedOption.set(i);
  }
  pageTitleSubject = new Nt("Dashboard");
  pageTitle$ = this.pageTitleSubject.asObservable();
  setPageTitle(i) {
    this.pageTitleSubject.next(i);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Hr = class n {
  isOpen = new Nt(!0);
  isOpen$ = this.isOpen.asObservable();
  toggleSidebar() {
    this.isOpen.next(!this.isOpen.value);
  }
  setSidebar(i) {
    this.isOpen.next(i);
  }
  get currentState() {
    return this.isOpen.value;
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var lS = (n) => ({ "collapsed-sidebar": n }),
  cS = (n) => ({ collapsed: n });
function dS(n, i) {
  if (
    (n & 1 &&
      (c(0, "li", 4)(1, "a", 5), z(2, "i", 6), c(3, "span", 7), h(4), d()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x();
    ne("active", t.isActive(e.key)),
      m(),
      y("routerLink", e.route),
      m(),
      y("ngClass", e.icon),
      m(2),
      B(e.label);
  }
}
var zc = class n {
  constructor(i, e, t) {
    this.router = i;
    this.context = e;
    this.sidebarService = t;
  }
  activeMenu = "";
  isSidebarOpen = !0;
  sidebarSub;
  routerSub;
  menuItems = [
    {
      key: "dashboard",
      label: "Dashboard",
      route: "/Admin/dashboard",
      icon: "fas fa-tachometer-alt",
    },
  ];
  ngOnInit() {
    (this.sidebarSub = this.sidebarService.isOpen$.subscribe((i) => {
      this.isSidebarOpen = i;
    })),
      this.updateActiveFromUrl(this.router.url),
      (this.routerSub = this.router.events.subscribe((i) => {
        i instanceof ci && this.updateActiveFromUrl(i.urlAfterRedirects);
      }));
  }
  ngOnDestroy() {
    this.sidebarSub?.unsubscribe(), this.routerSub?.unsubscribe();
  }
  updateActiveFromUrl(i) {
    console.log("Updating active from URL:", i);
    let e = this.menuItems.find((t) => i.includes(t.route));
    e &&
      this.activeMenu !== e.key &&
      (console.log("Setting active menu to:", e.key),
      (this.activeMenu = e.key),
      this.context.setPageTitle(e.label),
      this.context.onSideBarClick$.next({ role: e.key, pageTitle: e.label }));
  }
  isActive(i) {
    return this.activeMenu === i;
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Mt), H(Kn), H(Hr));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-sidebar"]],
    standalone: !0,
    features: [ce],
    decls: 5,
    vars: 7,
    consts: [
      [1, "deznav", 2, "background-color", "#222fb9", 3, "ngClass"],
      ["id", "menu", 1, "metismenu", 3, "ngClass"],
      ["style", "margin-bottom:10px;", 3, "active", 4, "ngFor", "ngForOf"],
      [1, "copyright", 2, "margin-top", "280px"],
      [2, "margin-bottom", "10px"],
      [3, "routerLink"],
      [3, "ngClass"],
      [1, "nav-text", 2, "font-size", "11px", "white-space", "nowrap"],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 0)(1, "div")(2, "ul", 1),
        R(3, dS, 5, 5, "li", 2),
        d(),
        z(4, "div", 3),
        d()()),
        e & 2 &&
          (y("ngClass", de(3, lS, !t.isSidebarOpen)),
          m(2),
          y("ngClass", de(5, cS, !t.isSidebarOpen)),
          m(),
          y("ngForOf", t.menuItems));
    },
    dependencies: [tt, Jt, Vi, Ae, It, At],
    styles: [
      ".metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{background:#fff3!important;color:#fff!important;border-radius:50px;align-items:center;gap:8px;transition:none!important}.deznav[_ngcontent-%COMP%]:not(.collapsed-sidebar)   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:#fff!important;color:#222fb9!important}.collapsed-sidebar[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:transparent!important;color:#fff!important}.metismenu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{background-color:inherit!important;color:inherit!important}.deznav[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{font-size:1.5rem}.nav-text[_ngcontent-%COMP%]{font-size:15px}",
    ],
  });
};
var Si = class n {
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵmod = ye({ type: n });
  static ɵinj = ve({ imports: [Ae, tt, Vi, zc, Ae, tt, Vi] });
};
var Cp = () => ({ exact: !0 });
function uS(n, i) {
  n & 1 &&
    (c(0, "div")(1, "h1", 13),
    h(2, "Dealer Performance Dashboard"),
    d(),
    c(3, "p", 14),
    h(4, "Track users, leads, follow-ups, test drives & calls."),
    d()());
}
function hS(n, i) {
  n & 1 &&
    (c(0, "div")(1, "h1", 13),
    h(2, "SA Summary Dashboard"),
    d(),
    c(3, "p", 15),
    h(4, "Track performance metrics and KPIs across all sales channels "),
    d()());
}
function pS(n, i) {
  n & 1 && (c(0, "div")(1, "h1", 13), h(2, "Trend Chart Dashboard"), d()());
}
var $c = class n {
  constructor(i, e, t) {
    this.sidebarService = i;
    this.router = e;
    this.http = t;
  }
  selectedTab = "dashboard";
  isSidebarOpen = !0;
  selectedDealer = "all";
  selectedPS = "all";
  models = [];
  selectedFilter = "DAY";
  newInquiryKpi = null;
  aggregatedMetrics = null;
  efforts = {};
  productivity = {};
  activePS = {};
  otherKpis = {};
  overallEfforts = 0;
  overallProductivity = 0;
  selectedModel = "all";
  dealers = [];
  users = [];
  ngOnInit() {
    this.loadDealers(),
      this.sidebarService.isOpen$.subscribe((e) => {
        this.isSidebarOpen = e;
      });
    let i = this.router.url;
    i.includes("/Admin/dashboard")
      ? (this.selectedTab = "dashboard")
      : i.includes("/Admin/summary")
      ? (this.selectedTab = "summary")
      : i.includes("/Admin/trend-chart") && (this.selectedTab = "trend-chart"),
      this.router.events.pipe(Ct((e) => e instanceof ci)).subscribe((e) => {
        e.urlAfterRedirects.includes("/Admin/dashboard")
          ? (this.selectedTab = "dashboard")
          : e.urlAfterRedirects.includes("/Admin/summary")
          ? (this.selectedTab = "summary")
          : e.urlAfterRedirects.includes("/Admin/trend-chart") &&
            (this.selectedTab = "trend-chart");
      });
  }
  onFilterChange(i) {
    console.log("Filter selected:", i),
      this.loadDealers(i),
      (this.selectedFilter = i);
  }
  toggleSidebar() {
    this.sidebarService.toggleSidebar();
  }
  selectTab(i) {
    this.selectedTab = i;
  }
  isActive(i) {
    return this.router.url.includes(`/Admin/${i}`);
  }
  navigateTo(i) {
    this.router.navigate(["/Admin", i]);
  }
  navigateToSingleDealer(i) {
    this.router.navigate(["/Admin/singleDealer", i]);
  }
  resetFilters() {
    (this.selectedFilter = "all"),
      (this.selectedDealer = "all"),
      (this.selectedPS = "all"),
      (this.selectedModel = "all"),
      console.log("Filters reset ->", {
        filter: this.selectedFilter,
        dealer: this.selectedDealer,
        ps: this.selectedPS,
        model: this.selectedModel,
      });
  }
  getKpiByName(i, e, t) {
    if (!i) return null;
    let r = i[e] || i.aggregatedMetrics?.[e];
    if (!r) return console.warn(`No KPIs found for category "${e}"`, i), null;
    let o = r[t];
    return (
      o || (console.warn(`KPI "${t}" not found in category "${e}"`, r), null)
    );
  }
  loadDealers(i = "DAY") {
    let e = "https://uat.smartassistapp.in/api/superAdmin/dashboard/summary",
      t = localStorage.getItem("token");
    this.http
      .get(e, {
        headers: { Authorization: `Bearer ${t}` },
        params: { type: i },
      })
      .subscribe({
        next: (r) => {
          r.success &&
            r.data &&
            (r.data.dealers &&
              ((this.dealers = r.data.dealers.map((o) => ({
                dealer_id: o.dealer_id,
                dealer_name: o.dealer_name,
                efforts: o.efforts,
                productivity: o.productivity,
                otherKpis: o.otherKpis,
                aggregatedMetrics: o.aggregatedMetrics,
              }))),
              console.log("Dealers loaded:", this.dealers)),
            (this.users = r.data.dealers.flatMap(
              (o) =>
                o.users?.map((a) => ({
                  user_id: a.user_id,
                  name: a.name,
                  dealer_id: o.dealer_id,
                })) || []
            )),
            console.log("Users (PS) loaded:", this.users),
            r.data.models &&
              ((this.models = r.data.models
                .filter((o) => o.model_name)
                .map((o) => ({ model: o.model, model_name: o.model_name }))),
              console.log("Models loaded:", this.models)),
            r.data.aggregatedMetrics?.efforts?.["New Inquiry"]
              ? (this.newInquiryKpi =
                  r.data.aggregatedMetrics.efforts["New Inquiry"])
              : this.dealers.length > 0 &&
                (this.newInquiryKpi = this.getKpiByName(
                  this.dealers[0],
                  "efforts",
                  "New Inquiry"
                )),
            console.log("New Inquiry KPI:", this.newInquiryKpi));
        },
        error: (r) => console.error("Error fetching dealers/users/models", r),
      });
  }
  loadDashboard(i) {
    let e = "https://uat.smartassistapp.in/api/superAdmin/dashboard/summary",
      t = localStorage.getItem("token");
    this.http
      .get(e, {
        headers: { Authorization: `Bearer ${t}` },
        params: { type: i },
      })
      .subscribe({
        next: (r) => {
          if (r.success && r.data?.aggregatedMetrics) {
            let o = r.data.aggregatedMetrics;
            if (
              ((this.efforts = o.efforts || {}),
              (this.productivity = o.productivity || {}),
              (this.activePS = o.activePS || {}),
              (this.otherKpis = o.otherKpis || {}),
              this.efforts)
            ) {
              let a = Object.values(this.efforts);
              this.overallEfforts = a.length
                ? Math.round(a.reduce((l, u) => l + u.progress, 0) / a.length)
                : 0;
            }
            if (this.productivity) {
              let a = Object.values(this.productivity);
              this.overallProductivity = a.length
                ? Math.round(a.reduce((l, u) => l + u.progress, 0) / a.length)
                : 0;
            }
          }
        },
        error: (r) => console.error("Error loading dashboard", r),
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Hr), H(Mt), H(Bt));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-overview"]],
    standalone: !0,
    features: [ce],
    decls: 20,
    vars: 12,
    consts: [
      ["id", "main-wrapper"],
      [1, "content-body"],
      [1, "container-fluid"],
      [
        1,
        "sticky",
        "top-0",
        "z-20",
        "bg-white/90",
        "backdrop-blur",
        "border-b",
        "border-slate-200",
        "super-header",
      ],
      [1, "max-w-7xl", "mx-auto", "px-4", "sm:px-6", "lg:px-8", "py-1"],
      [1, "flex", "items-center", "justify-between", "gap-4", "mb-2"],
      [1, "nav-button-sa"],
      [1, "inline-flex", "bg-gray-100", "p-1", "rounded-full"],
      [
        "routerLink",
        "/Admin/dashboard",
        "routerLinkActive",
        "active-tab",
        1,
        "tab-btn",
        3,
        "routerLinkActiveOptions",
      ],
      [
        "routerLink",
        "/Admin/summary",
        "routerLinkActive",
        "active-tab",
        1,
        "tab-btn",
        3,
        "routerLinkActiveOptions",
      ],
      [
        "routerLink",
        "/Admin/trend-chart",
        "routerLinkActive",
        "active-tab",
        1,
        "tab-btn",
        3,
        "routerLinkActiveOptions",
      ],
      [3, "ngSwitch"],
      [4, "ngSwitchCase"],
      [1, "text-2xl", "font-bold", "tracking-tight"],
      [1, "text-slate-500", "text-sm"],
      ["id", "track", 1, "text-slate-500", "text-sm"],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "header", 3)(4, "div", 4)(
          5,
          "div",
          5
        )(
          6,
          "div",
          6
        )(7, "div")(8, "nav", 7)(9, "a", 8),
        h(10, " Dashboard "),
        d(),
        c(11, "a", 9),
        h(12, " Summary "),
        d(),
        c(13, "a", 10),
        h(14, " Trend chart "),
        d()()()()(),
        c(15, "div", 11),
        R(16, uS, 5, 0, "div", 12)(17, hS, 5, 0, "div", 12)(
          18,
          pS,
          3,
          0,
          "div",
          12
        ),
        d()()(),
        z(19, "router-outlet"),
        d()()()),
        e & 2 &&
          (ne("menu-toggle", !t.isSidebarOpen),
          m(9),
          y("routerLinkActiveOptions", pi(9, Cp)),
          m(2),
          y("routerLinkActiveOptions", pi(10, Cp)),
          m(2),
          y("routerLinkActiveOptions", pi(11, Cp)),
          m(2),
          y("ngSwitch", t.selectedTab),
          m(),
          y("ngSwitchCase", "dashboard"),
          m(),
          y("ngSwitchCase", "summary"),
          m(),
          y("ngSwitchCase", "trend-chart"));
    },
    dependencies: [Si, Jl, ec, po, Jt, __, tt],
    styles: [
      '.card-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:15px;margin:0;letter-spacing:.2px}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;color:#2563eb;border:1px solid #ccc;background:var(--chip);border-radius:999px;padding:6px 10px;font-size:12px}.chip[_ngcontent-%COMP%]   .dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:#2563eb}.nav-button-container[_ngcontent-%COMP%]{display:inline-flex!important;padding:6px!important;border-radius:50px!important;border:1px solid #e2e8f0!important;background-color:#f8fafc!important;box-shadow:0 1px 3px #0000001a!important}.nav-button-sa[_ngcontent-%COMP%]{border-radius:30px;object-fit:contain;width:100%;max-width:380px}.nav-tab-button[_ngcontent-%COMP%]{display:flex!important;align-items:center!important;justify-content:center!important;gap:8px!important;padding:10px 20px!important;font-size:14px!important;font-weight:500!important;border-radius:50px!important;transition:all .2s ease-in-out!important;cursor:pointer!important;border:none!important;outline:none!important;background:transparent!important;color:#64748b!important;white-space:nowrap!important}.nav-tab-button.active[_ngcontent-%COMP%]{background:#2563eb!important;color:#fff!important;box-shadow:0 2px 4px -1px #0003!important}.nav-tab-button[_ngcontent-%COMP%]:not(.active):hover{color:#475569!important;background:#3b82f614!important}.nav-tab-button[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:16px!important;height:16px!important;opacity:.8!important}.nav-tab-button.active[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{opacity:1!important}.tab-btn[_ngcontent-%COMP%]{padding:.5rem 1.5rem;border-radius:9999px;font-size:14px;font-weight:500;display:inline-flex;align-items:center;gap:.5rem;color:#475569;transition:all .2s ease-in-out}.tab-btn[_ngcontent-%COMP%]:hover{color:#1f2937}.active-tab[_ngcontent-%COMP%]{background-color:#2563eb;color:#fff!important;box-shadow:0 2px 6px #0003}.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:7rem}@media (min-width: 768px) and (max-width: 819px){.content-body[_ngcontent-%COMP%]{margin-left:42px!important}}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .deznav[_ngcontent-%COMP%]{width:80px}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .nav-text[_ngcontent-%COMP%]{display:none}@media (min-width: 2560px){.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:336px!important}}@media screen and (min-width: 1920px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:336px}}@media screen and (width: 1366px){.content-body[_ngcontent-%COMP%]{margin-left:4rem}}#main-wrapper[_ngcontent-%COMP%]{display:flex}.content-body[_ngcontent-%COMP%]{transition:margin-left .3s ease;width:100%}.content-section[_ngcontent-%COMP%]{padding:20px;margin-top:70px}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:2rem;margin-top:20px}.performance-panel[_ngcontent-%COMP%]{flex:1;background:#f9f9f9;border-radius:8px;padding:20px;height:300px}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px}.metric-box[_ngcontent-%COMP%]{background:#fff;padding:1rem;border-radius:8px;text-align:center;box-shadow:0 2px 4px #0000001a}.super-header[_ngcontent-ng-c3749377617][_ngcontent-%COMP%]{background-color:#fff;margin-top:15px}.content-body[_ngcontent-%COMP%]   .container-fluid[_ngcontent-%COMP%], .content-body[_ngcontent-%COMP%]{padding-top:0}.tracking-tight[_ngcontent-%COMP%]{letter-spacing:-.025em}.font-bold[_ngcontent-%COMP%]{font-weight:700}@media (max-width: 768px){.tracking-tight[_ngcontent-%COMP%]{font-size:1.125rem}}[_ngcontent-%COMP%]:root{--bg: #0b1020;--bg-soft: #0e1428;--card: rgba(255, 255, 255, .06);--card-border: rgba(255, 255, 255, .14);--text: #e8edf6;--muted: #a6b0c3;--brand: #7aa2ff;--brand-2: #6ae3ff;--success: #34d399;--danger: #ef4444;--warn: #f59e0b;--ring: rgba(122, 162, 255, .35);--chip: #1b223a;--select: #111832;--grid-line: rgba(255, 255, 255, .06);--shadow: 0 10px 30px rgba(0, 0, 0, .35), 0 2px 8px rgba(0, 0, 0, .25);--radius: 16px;--radius-sm: 12px;--radius-xs: 8px;--blur: 12px;--fw-600: 600;--fw-700: 700}[data-theme=light][_ngcontent-%COMP%]{--bg: #f7f9fc;--bg-soft: #eef2fb;--card: #ffffff;--card-border: #e7e9f2;--text: #1a2234;--muted: #5b657a;--brand: #2563eb;--brand-2: #60a5fa;--success: #10b981;--danger: #ef4444;--warn: #d97706;--ring: rgba(37, 99, 235, .2);--chip: #f1f5ff;--select: #ffffff;--grid-line: rgba(26, 34, 52, .06);--shadow: 0 10px 30px rgba(16, 24, 40, .08), 0 2px 8px rgba(16, 24, 40, .06)}*[_ngcontent-%COMP%]{box-sizing:border-box}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}.dashboard-header[_ngcontent-%COMP%]{background-color:#fff!important;padding:15px;box-shadow:0 4px 6px #0000001a}body[_ngcontent-%COMP%]{margin:0;font-family:Inter,ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Helvetica Neue,Arial,"Apple Color Emoji","Segoe UI Emoji";color:var(--text);background:radial-gradient(1200px 800px at 10% -10%,var(--brand-2) 0%,transparent 35%),radial-gradient(1000px 700px at 120% 10%,var(--brand) 0%,transparent 30%),linear-gradient(180deg,var(--bg-soft),var(--bg));background-attachment:fixed;line-height:1.6}.grid-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;pointer-events:none;background:linear-gradient(var(--grid-line) 1px,transparent 1px) 0 0/ 100% 48px,linear-gradient(90deg,var(--grid-line) 1px,transparent 1px) 0 0/ 48px 100%;mask-image:radial-gradient(1200px 800px at 40% 0%,rgba(0,0,0,.35),transparent 70%)}.container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:28px 20px 56px}.header[_ngcontent-%COMP%]{position:relative;margin-bottom:20px;padding:24px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);overflow:hidden}.header[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;background:radial-gradient(600px 150px at 20% 0%,rgba(255,255,255,.12),transparent 40%);pointer-events:none}.header-top[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px;justify-content:space-between;margin-bottom:10px}.brand-chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:10px;background:var(--chip);border:1px solid var(--card-border);padding:8px 12px;border-radius:999px;font-size:12px;color:var(--muted)}.brand-dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background:linear-gradient(135deg,var(--brand),var(--brand-2));box-shadow:0 0 0 6px var(--ring)}.theme-toggle[_ngcontent-%COMP%]{border:1px solid var(--card-border);background:var(--chip);color:var(--text);border-radius:999px;padding:8px 12px;cursor:pointer;transition:transform .15s ease}.theme-toggle[_ngcontent-%COMP%]:hover{transform:translateY(-1px)}.main-title[_ngcontent-%COMP%]{margin:6px 0 4px;font-weight:var(--fw-700);letter-spacing:.2px;font-size:clamp(22px,3.4vw,32px);background:linear-gradient(90deg,var(--text),var(--brand));-webkit-background-clip:text;background-clip:text;color:#000!important}.subtitle[_ngcontent-%COMP%]{color:var(--muted);font-size:14px}[_ngcontent-%COMP%]:root{--brand: #4f46e5;--brand-2: #06b6d4}.progress[_ngcontent-%COMP%]{width:100%;height:10px;background:#f0f0f0;border-radius:6px;overflow:hidden;margin-top:6px}.bar[_ngcontent-%COMP%]{height:100%;border-radius:6px;background-color:#87cefa!important;transition:width .4s ease}.filters-wrap[_ngcontent-%COMP%]{position:sticky;top:10px;z-index:5;margin:18px 0 28px;background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:14px;align-items:center}.filters[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:14px;font-weight:var(--fw-600);color:var(--muted);margin:0 6px 0 2px;display:flex;align-items:center;gap:8px}.select[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;background:var(--select);border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px;min-width:230px;transition:box-shadow .2s ease,border-color .2s ease}.select[_ngcontent-%COMP%]:focus-within{box-shadow:0 0 0 6px var(--ring);border-color:var(--brand)}.select[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:18px;height:18px;opacity:.7}.select[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{border:0;background:transparent;color:var(--text);width:100%;padding:6px 6px 6px 2px;outline:none;font-size:14px;appearance:none}.filter-actions[_ngcontent-%COMP%]{margin-left:auto;display:flex;gap:10px;flex-wrap:wrap}.filter-container[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center;width:100%;gap:10px}.filter-actions[_ngcontent-%COMP%]{display:flex;gap:10px;flex-wrap:wrap}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip, #f3f4f6);color:var(--text, #111);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:600;cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip);color:var(--text);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:var(--fw-600);cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[_ngcontent-%COMP%]:hover{transform:translateY(-1px);box-shadow:var(--shadow)}.btn.primary[_ngcontent-%COMP%]{background:linear-gradient(135deg,var(--brand),var(--brand-2));color:#fff;border-color:transparent}.kpi-grid[_ngcontent-%COMP%]{display:grid;gap:22px;grid-template-columns:repeat(12,1fr)}.kpi-card[_ngcontent-%COMP%]{background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a;grid-column:span 6;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);padding:18px 18px 16px;overflow:hidden;position:relative}.kpi-card[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;pointer-events:none;background:radial-gradient(450px 120px at 95% -10%,rgba(122,162,255,.13),transparent 45%)}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);transition:transform .2s ease}.card-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:10px;margin-bottom:12px}.card-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:15px;margin-left:-15px;letter-spacing:.2px}#chipdot[_ngcontent-%COMP%]{margin-left:80px}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;border:1px solid #ccc;background:var(--chip);border-radius:999px;padding:6px 10px;font-size:12px;color:var(--muted)}.chip[_ngcontent-%COMP%]   .dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:#add8e6}.kpi-items[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px}.kpi-item[_ngcontent-%COMP%]{border:1px solid #e2e8f0;border-radius:15px!important;background:linear-gradient(180deg,rgba(255,255,255,.04),transparent);padding:10px 12px;transition:border-color .2s ease,background .2s ease}.kpi-item[_ngcontent-%COMP%]:hover{border-color:var(--ring);background:linear-gradient(180deg,rgba(122,162,255,.08),transparent)}.kpi-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:12px;font-size:13px;margin-bottom:8px}.kpi-label[_ngcontent-%COMP%]{color:var(--muted)}.kpi-values[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;font-weight:var(--fw-600)}.kpi-actual[_ngcontent-%COMP%]{color:var(--text)}.trend-icon[_ngcontent-%COMP%]{width:16px;height:16px}.progress[_ngcontent-%COMP%]{position:relative;height:10px;border-radius:999px;overflow:hidden;background:linear-gradient(0deg,#ffffff14,#ffffff0a);border:1px solid #e2e8f0}.bar[_ngcontent-%COMP%]{height:100%;background:linear-gradient(90deg,var(--brand),var(--brand-2));border-radius:inherit;width:0%;transition:width .9s cubic-bezier(.2,.8,.2,1);position:relative;mask-image:linear-gradient(90deg,#0003 0 10px,#000 40px)}.bar.down[_ngcontent-%COMP%]{background:linear-gradient(90deg,var(--danger),#fda4af)}.growth[_ngcontent-%COMP%]{grid-column:span 12;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:18px;background-color:#fff!important;box-shadow:0 4px 6px #0000001a}.growth-head[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;margin-bottom:8px}.growth-head[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:15px}.growth-note[_ngcontent-%COMP%]{color:var(--muted);font-size:12px;margin-top:6px}.sparkline[_ngcontent-%COMP%]{width:100%;height:140px;border-radius:var(--radius);border:1px dashed var(--card-border);display:grid;place-items:center;color:var(--muted);font-size:13px}@media (max-width: 1024px){.kpi-card[_ngcontent-%COMP%]{grid-column:span 12}}@media (max-width: 640px){.filters[_ngcontent-%COMP%]{gap:10px}.select[_ngcontent-%COMP%]{min-width:100%}.filter-actions[_ngcontent-%COMP%]{width:100%;justify-content:flex-end}}@keyframes _ngcontent-%COMP%_pop{0%{transform:scale(.98);opacity:0}to{transform:scale(1);opacity:1}}.kpi-card[_ngcontent-%COMP%], .growth[_ngcontent-%COMP%], .header[_ngcontent-%COMP%], .filters[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pop .35s ease both;border-radius:10px!important}.ring[_ngcontent-%COMP%]{box-shadow:0 0 0 6px var(--ring);transition:box-shadow .3s ease}.trend-icon[_ngcontent-%COMP%]{width:18px;height:18px;stroke-width:2.25;vertical-align:middle;flex-shrink:0;display:inline-block}.kpi-values[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;line-height:1}.trend-up[_ngcontent-%COMP%]{color:var(--success)}.trend-down[_ngcontent-%COMP%]{color:var(--danger)}.kpi-item[_ngcontent-%COMP%]{flex:1}.kpi-item-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:20px;border-radius:14px;margin-bottom:16px}.kpi-item[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;justify-content:center}.growth-box[_ngcontent-%COMP%]{background:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;width:90px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:flex;flex-direction:column;align-items:center}.growth-box[_ngcontent-%COMP%]{background:linear-gradient(135deg,#10b981,#059669);color:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:inline-flex;flex-direction:column;align-items:flex-start;width:70px;height:70px}.growth-header[_ngcontent-%COMP%]{display:flex;color:#fff;justify-content:flex-start;align-items:baseline;gap:4px;margin-bottom:6px}.growth-title[_ngcontent-%COMP%]{font-size:11px;color:#fff;font-weight:500}.growth-value[_ngcontent-%COMP%]{font-size:13px;font-weight:700;color:#fff}.growth-bars[_ngcontent-%COMP%]{display:flex;align-items:flex-end;gap:2px;color:#fff;height:25px;justify-content:flex-start;width:fit-content}.bar-segment[_ngcontent-%COMP%]{width:3px;background:#fff;border-radius:2px}@media (max-width: 844px){.nav-button-sa[_ngcontent-%COMP%]{margin-left:-27px!important}#track[_ngcontent-%COMP%]{white-space:break-spaces!important}}',
    ],
  });
};
var mS = ["chart"],
  Wc = (() => {
    class n {
      constructor() {
        (this.chart = Tt()),
          (this.annotations = Tt()),
          (this.colors = Tt()),
          (this.dataLabels = Tt()),
          (this.series = Tt()),
          (this.stroke = Tt()),
          (this.labels = Tt()),
          (this.legend = Tt()),
          (this.markers = Tt()),
          (this.noData = Tt()),
          (this.parsing = Tt()),
          (this.fill = Tt()),
          (this.tooltip = Tt()),
          (this.plotOptions = Tt()),
          (this.responsive = Tt()),
          (this.xaxis = Tt()),
          (this.yaxis = Tt()),
          (this.forecastDataPoints = Tt()),
          (this.grid = Tt()),
          (this.states = Tt()),
          (this.title = Tt()),
          (this.subtitle = Tt()),
          (this.theme = Tt()),
          (this.autoUpdateSeries = Tt(!0)),
          (this.chartReady = Cg()),
          (this.chartInstance = pe(null)),
          (this.chartElement = Rg.required("chart")),
          (this.ngZone = G(Te)),
          (this.isBrowser = dn(G(ai)));
      }
      ngOnChanges(e) {
        this.isBrowser &&
          this.ngZone.runOutsideAngular(() => {
            $u.schedule(() => this.hydrate(e));
          });
      }
      ngOnDestroy() {
        this.destroy();
      }
      hydrate(e) {
        if (
          this.autoUpdateSeries() &&
          Object.keys(e).filter((r) => r !== "series").length === 0
        ) {
          this.updateSeries(this.series(), !0);
          return;
        }
        this.createElement();
      }
      createElement() {
        return Uo(this, null, function* () {
          let { default: e } = yield import("./chunk-DQLEG5UQ.js");
          window.ApexCharts ||= e;
          let t = {};
          [
            "annotations",
            "chart",
            "colors",
            "dataLabels",
            "series",
            "stroke",
            "labels",
            "legend",
            "fill",
            "tooltip",
            "plotOptions",
            "responsive",
            "markers",
            "noData",
            "parsing",
            "xaxis",
            "yaxis",
            "forecastDataPoints",
            "grid",
            "states",
            "title",
            "subtitle",
            "theme",
          ].forEach((a) => {
            let l = this[a]();
            l && (t[a] = l);
          }),
            this.destroy();
          let o = this.ngZone.runOutsideAngular(
            () => new e(this.chartElement().nativeElement, t)
          );
          this.chartInstance.set(o),
            this.render(),
            this.chartReady.emit({ chartObj: o });
        });
      }
      render() {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.render()
        );
      }
      updateOptions(e, t, r, o) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.updateOptions(e, t, r, o)
        );
      }
      updateSeries(e, t) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.updateSeries(e, t)
        );
      }
      appendSeries(e, t) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.appendSeries(e, t)
        );
      }
      appendData(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.appendData(e)
        );
      }
      highlightSeries(e) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.highlightSeries(e)
        );
      }
      toggleSeries(e) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.toggleSeries(e)
        );
      }
      showSeries(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.showSeries(e)
        );
      }
      hideSeries(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.hideSeries(e)
        );
      }
      resetSeries() {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.resetSeries()
        );
      }
      zoomX(e, t) {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.zoomX(e, t));
      }
      toggleDataPointSelection(e, t) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.toggleDataPointSelection(e, t)
        );
      }
      destroy() {
        this.chartInstance()?.destroy(), this.chartInstance.set(null);
      }
      setLocale(e) {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.setLocale(e));
      }
      paper() {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.paper());
      }
      addXaxisAnnotation(e, t, r) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addXaxisAnnotation(e, t, r)
        );
      }
      addYaxisAnnotation(e, t, r) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addYaxisAnnotation(e, t, r)
        );
      }
      addPointAnnotation(e, t, r) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addPointAnnotation(e, t, r)
        );
      }
      removeAnnotation(e, t) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.removeAnnotation(e, t)
        );
      }
      clearAnnotations(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.clearAnnotations(e)
        );
      }
      dataURI(e) {
        return this.chartInstance()?.dataURI(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["apx-chart"]],
          viewQuery: function (t, r) {
            t & 1 && Lg(r.chartElement, mS, 5), t & 2 && rh();
          },
          inputs: {
            chart: [1, "chart"],
            annotations: [1, "annotations"],
            colors: [1, "colors"],
            dataLabels: [1, "dataLabels"],
            series: [1, "series"],
            stroke: [1, "stroke"],
            labels: [1, "labels"],
            legend: [1, "legend"],
            markers: [1, "markers"],
            noData: [1, "noData"],
            parsing: [1, "parsing"],
            fill: [1, "fill"],
            tooltip: [1, "tooltip"],
            plotOptions: [1, "plotOptions"],
            responsive: [1, "responsive"],
            xaxis: [1, "xaxis"],
            yaxis: [1, "yaxis"],
            forecastDataPoints: [1, "forecastDataPoints"],
            grid: [1, "grid"],
            states: [1, "states"],
            title: [1, "title"],
            subtitle: [1, "subtitle"],
            theme: [1, "theme"],
            autoUpdateSeries: [1, "autoUpdateSeries"],
          },
          outputs: { chartReady: "chartReady" },
          standalone: !0,
          features: [wt, ce],
          decls: 2,
          vars: 0,
          consts: [["chart", ""]],
          template: function (t, r) {
            t & 1 && z(0, "div", null, 0);
          },
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var Gc = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
function Hs(n) {
  return (n + 0.5) | 0;
}
var jr = (n, i, e) => Math.max(Math.min(n, e), i);
function Vs(n) {
  return jr(Hs(n * 2.55), 0, 255);
}
function Ur(n) {
  return jr(Hs(n * 255), 0, 255);
}
function gr(n) {
  return jr(Hs(n / 2.55) / 100, 0, 1);
}
function ob(n) {
  return jr(Hs(n * 100), 0, 100);
}
var pn = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    A: 10,
    B: 11,
    C: 12,
    D: 13,
    E: 14,
    F: 15,
    a: 10,
    b: 11,
    c: 12,
    d: 13,
    e: 14,
    f: 15,
  },
  Dp = [..."0123456789ABCDEF"],
  fS = (n) => Dp[n & 15],
  gS = (n) => Dp[(n & 240) >> 4] + Dp[n & 15],
  Yc = (n) => (n & 240) >> 4 === (n & 15),
  _S = (n) => Yc(n.r) && Yc(n.g) && Yc(n.b) && Yc(n.a);
function bS(n) {
  var i = n.length,
    e;
  return (
    n[0] === "#" &&
      (i === 4 || i === 5
        ? (e = {
            r: 255 & (pn[n[1]] * 17),
            g: 255 & (pn[n[2]] * 17),
            b: 255 & (pn[n[3]] * 17),
            a: i === 5 ? pn[n[4]] * 17 : 255,
          })
        : (i === 7 || i === 9) &&
          (e = {
            r: (pn[n[1]] << 4) | pn[n[2]],
            g: (pn[n[3]] << 4) | pn[n[4]],
            b: (pn[n[5]] << 4) | pn[n[6]],
            a: i === 9 ? (pn[n[7]] << 4) | pn[n[8]] : 255,
          })),
    e
  );
}
var vS = (n, i) => (n < 255 ? i(n) : "");
function yS(n) {
  var i = _S(n) ? fS : gS;
  return n ? "#" + i(n.r) + i(n.g) + i(n.b) + vS(n.a, i) : void 0;
}
var xS =
  /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
function cb(n, i, e) {
  let t = i * Math.min(e, 1 - e),
    r = (o, a = (o + n / 30) % 12) =>
      e - t * Math.max(Math.min(a - 3, 9 - a, 1), -1);
  return [r(0), r(8), r(4)];
}
function CS(n, i, e) {
  let t = (r, o = (r + n / 60) % 6) =>
    e - e * i * Math.max(Math.min(o, 4 - o, 1), 0);
  return [t(5), t(3), t(1)];
}
function wS(n, i, e) {
  let t = cb(n, 1, 0.5),
    r;
  for (i + e > 1 && ((r = 1 / (i + e)), (i *= r), (e *= r)), r = 0; r < 3; r++)
    (t[r] *= 1 - i - e), (t[r] += i);
  return t;
}
function DS(n, i, e, t, r) {
  return n === r
    ? (i - e) / t + (i < e ? 6 : 0)
    : i === r
    ? (e - n) / t + 2
    : (n - i) / t + 4;
}
function Sp(n) {
  let e = n.r / 255,
    t = n.g / 255,
    r = n.b / 255,
    o = Math.max(e, t, r),
    a = Math.min(e, t, r),
    l = (o + a) / 2,
    u,
    f,
    v;
  return (
    o !== a &&
      ((v = o - a),
      (f = l > 0.5 ? v / (2 - o - a) : v / (o + a)),
      (u = DS(e, t, r, v, o)),
      (u = u * 60 + 0.5)),
    [u | 0, f || 0, l]
  );
}
function Mp(n, i, e, t) {
  return (Array.isArray(i) ? n(i[0], i[1], i[2]) : n(i, e, t)).map(Ur);
}
function Tp(n, i, e) {
  return Mp(cb, n, i, e);
}
function SS(n, i, e) {
  return Mp(wS, n, i, e);
}
function MS(n, i, e) {
  return Mp(CS, n, i, e);
}
function db(n) {
  return ((n % 360) + 360) % 360;
}
function TS(n) {
  let i = xS.exec(n),
    e = 255,
    t;
  if (!i) return;
  i[5] !== t && (e = i[6] ? Vs(+i[5]) : Ur(+i[5]));
  let r = db(+i[2]),
    o = +i[3] / 100,
    a = +i[4] / 100;
  return (
    i[1] === "hwb"
      ? (t = SS(r, o, a))
      : i[1] === "hsv"
      ? (t = MS(r, o, a))
      : (t = Tp(r, o, a)),
    { r: t[0], g: t[1], b: t[2], a: e }
  );
}
function ES(n, i) {
  var e = Sp(n);
  (e[0] = db(e[0] + i)), (e = Tp(e)), (n.r = e[0]), (n.g = e[1]), (n.b = e[2]);
}
function OS(n) {
  if (!n) return;
  let i = Sp(n),
    e = i[0],
    t = ob(i[1]),
    r = ob(i[2]);
  return n.a < 255
    ? `hsla(${e}, ${t}%, ${r}%, ${gr(n.a)})`
    : `hsl(${e}, ${t}%, ${r}%)`;
}
var ab = {
    x: "dark",
    Z: "light",
    Y: "re",
    X: "blu",
    W: "gr",
    V: "medium",
    U: "slate",
    A: "ee",
    T: "ol",
    S: "or",
    B: "ra",
    C: "lateg",
    D: "ights",
    R: "in",
    Q: "turquois",
    E: "hi",
    P: "ro",
    O: "al",
    N: "le",
    M: "de",
    L: "yello",
    F: "en",
    K: "ch",
    G: "arks",
    H: "ea",
    I: "ightg",
    J: "wh",
  },
  sb = {
    OiceXe: "f0f8ff",
    antiquewEte: "faebd7",
    aqua: "ffff",
    aquamarRe: "7fffd4",
    azuY: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "0",
    blanKedOmond: "ffebcd",
    Xe: "ff",
    XeviTet: "8a2be2",
    bPwn: "a52a2a",
    burlywood: "deb887",
    caMtXe: "5f9ea0",
    KartYuse: "7fff00",
    KocTate: "d2691e",
    cSO: "ff7f50",
    cSnflowerXe: "6495ed",
    cSnsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "ffff",
    xXe: "8b",
    xcyan: "8b8b",
    xgTMnPd: "b8860b",
    xWay: "a9a9a9",
    xgYF: "6400",
    xgYy: "a9a9a9",
    xkhaki: "bdb76b",
    xmagFta: "8b008b",
    xTivegYF: "556b2f",
    xSange: "ff8c00",
    xScEd: "9932cc",
    xYd: "8b0000",
    xsOmon: "e9967a",
    xsHgYF: "8fbc8f",
    xUXe: "483d8b",
    xUWay: "2f4f4f",
    xUgYy: "2f4f4f",
    xQe: "ced1",
    xviTet: "9400d3",
    dAppRk: "ff1493",
    dApskyXe: "bfff",
    dimWay: "696969",
    dimgYy: "696969",
    dodgerXe: "1e90ff",
    fiYbrick: "b22222",
    flSOwEte: "fffaf0",
    foYstWAn: "228b22",
    fuKsia: "ff00ff",
    gaRsbSo: "dcdcdc",
    ghostwEte: "f8f8ff",
    gTd: "ffd700",
    gTMnPd: "daa520",
    Way: "808080",
    gYF: "8000",
    gYFLw: "adff2f",
    gYy: "808080",
    honeyMw: "f0fff0",
    hotpRk: "ff69b4",
    RdianYd: "cd5c5c",
    Rdigo: "4b0082",
    ivSy: "fffff0",
    khaki: "f0e68c",
    lavFMr: "e6e6fa",
    lavFMrXsh: "fff0f5",
    lawngYF: "7cfc00",
    NmoncEffon: "fffacd",
    ZXe: "add8e6",
    ZcSO: "f08080",
    Zcyan: "e0ffff",
    ZgTMnPdLw: "fafad2",
    ZWay: "d3d3d3",
    ZgYF: "90ee90",
    ZgYy: "d3d3d3",
    ZpRk: "ffb6c1",
    ZsOmon: "ffa07a",
    ZsHgYF: "20b2aa",
    ZskyXe: "87cefa",
    ZUWay: "778899",
    ZUgYy: "778899",
    ZstAlXe: "b0c4de",
    ZLw: "ffffe0",
    lime: "ff00",
    limegYF: "32cd32",
    lRF: "faf0e6",
    magFta: "ff00ff",
    maPon: "800000",
    VaquamarRe: "66cdaa",
    VXe: "cd",
    VScEd: "ba55d3",
    VpurpN: "9370db",
    VsHgYF: "3cb371",
    VUXe: "7b68ee",
    VsprRggYF: "fa9a",
    VQe: "48d1cc",
    VviTetYd: "c71585",
    midnightXe: "191970",
    mRtcYam: "f5fffa",
    mistyPse: "ffe4e1",
    moccasR: "ffe4b5",
    navajowEte: "ffdead",
    navy: "80",
    Tdlace: "fdf5e6",
    Tive: "808000",
    TivedBb: "6b8e23",
    Sange: "ffa500",
    SangeYd: "ff4500",
    ScEd: "da70d6",
    pOegTMnPd: "eee8aa",
    pOegYF: "98fb98",
    pOeQe: "afeeee",
    pOeviTetYd: "db7093",
    papayawEp: "ffefd5",
    pHKpuff: "ffdab9",
    peru: "cd853f",
    pRk: "ffc0cb",
    plum: "dda0dd",
    powMrXe: "b0e0e6",
    purpN: "800080",
    YbeccapurpN: "663399",
    Yd: "ff0000",
    Psybrown: "bc8f8f",
    PyOXe: "4169e1",
    saddNbPwn: "8b4513",
    sOmon: "fa8072",
    sandybPwn: "f4a460",
    sHgYF: "2e8b57",
    sHshell: "fff5ee",
    siFna: "a0522d",
    silver: "c0c0c0",
    skyXe: "87ceeb",
    UXe: "6a5acd",
    UWay: "708090",
    UgYy: "708090",
    snow: "fffafa",
    sprRggYF: "ff7f",
    stAlXe: "4682b4",
    tan: "d2b48c",
    teO: "8080",
    tEstN: "d8bfd8",
    tomato: "ff6347",
    Qe: "40e0d0",
    viTet: "ee82ee",
    JHt: "f5deb3",
    wEte: "ffffff",
    wEtesmoke: "f5f5f5",
    Lw: "ffff00",
    LwgYF: "9acd32",
  };
function kS() {
  let n = {},
    i = Object.keys(sb),
    e = Object.keys(ab),
    t,
    r,
    o,
    a,
    l;
  for (t = 0; t < i.length; t++) {
    for (a = l = i[t], r = 0; r < e.length; r++)
      (o = e[r]), (l = l.replace(o, ab[o]));
    (o = parseInt(sb[a], 16)),
      (n[l] = [(o >> 16) & 255, (o >> 8) & 255, o & 255]);
  }
  return n;
}
var qc;
function PS(n) {
  qc || ((qc = kS()), (qc.transparent = [0, 0, 0, 0]));
  let i = qc[n.toLowerCase()];
  return i && { r: i[0], g: i[1], b: i[2], a: i.length === 4 ? i[3] : 255 };
}
var IS =
  /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
function AS(n) {
  let i = IS.exec(n),
    e = 255,
    t,
    r,
    o;
  if (i) {
    if (i[7] !== t) {
      let a = +i[7];
      e = i[8] ? Vs(a) : jr(a * 255, 0, 255);
    }
    return (
      (t = +i[1]),
      (r = +i[3]),
      (o = +i[5]),
      (t = 255 & (i[2] ? Vs(t) : jr(t, 0, 255))),
      (r = 255 & (i[4] ? Vs(r) : jr(r, 0, 255))),
      (o = 255 & (i[6] ? Vs(o) : jr(o, 0, 255))),
      { r: t, g: r, b: o, a: e }
    );
  }
}
function RS(n) {
  return (
    n &&
    (n.a < 255
      ? `rgba(${n.r}, ${n.g}, ${n.b}, ${gr(n.a)})`
      : `rgb(${n.r}, ${n.g}, ${n.b})`)
  );
}
var wp = (n) =>
    n <= 0.0031308 ? n * 12.92 : Math.pow(n, 1 / 2.4) * 1.055 - 0.055,
  ha = (n) => (n <= 0.04045 ? n / 12.92 : Math.pow((n + 0.055) / 1.055, 2.4));
function FS(n, i, e) {
  let t = ha(gr(n.r)),
    r = ha(gr(n.g)),
    o = ha(gr(n.b));
  return {
    r: Ur(wp(t + e * (ha(gr(i.r)) - t))),
    g: Ur(wp(r + e * (ha(gr(i.g)) - r))),
    b: Ur(wp(o + e * (ha(gr(i.b)) - o))),
    a: n.a + e * (i.a - n.a),
  };
}
function Kc(n, i, e) {
  if (n) {
    let t = Sp(n);
    (t[i] = Math.max(0, Math.min(t[i] + t[i] * e, i === 0 ? 360 : 1))),
      (t = Tp(t)),
      (n.r = t[0]),
      (n.g = t[1]),
      (n.b = t[2]);
  }
}
function ub(n, i) {
  return n && Object.assign(i || {}, n);
}
function lb(n) {
  var i = { r: 0, g: 0, b: 0, a: 255 };
  return (
    Array.isArray(n)
      ? n.length >= 3 &&
        ((i = { r: n[0], g: n[1], b: n[2], a: 255 }),
        n.length > 3 && (i.a = Ur(n[3])))
      : ((i = ub(n, { r: 0, g: 0, b: 0, a: 1 })), (i.a = Ur(i.a))),
    i
  );
}
function NS(n) {
  return n.charAt(0) === "r" ? AS(n) : TS(n);
}
var Bs = class n {
  constructor(i) {
    if (i instanceof n) return i;
    let e = typeof i,
      t;
    e === "object"
      ? (t = lb(i))
      : e === "string" && (t = bS(i) || PS(i) || NS(i)),
      (this._rgb = t),
      (this._valid = !!t);
  }
  get valid() {
    return this._valid;
  }
  get rgb() {
    var i = ub(this._rgb);
    return i && (i.a = gr(i.a)), i;
  }
  set rgb(i) {
    this._rgb = lb(i);
  }
  rgbString() {
    return this._valid ? RS(this._rgb) : void 0;
  }
  hexString() {
    return this._valid ? yS(this._rgb) : void 0;
  }
  hslString() {
    return this._valid ? OS(this._rgb) : void 0;
  }
  mix(i, e) {
    if (i) {
      let t = this.rgb,
        r = i.rgb,
        o,
        a = e === o ? 0.5 : e,
        l = 2 * a - 1,
        u = t.a - r.a,
        f = ((l * u === -1 ? l : (l + u) / (1 + l * u)) + 1) / 2;
      (o = 1 - f),
        (t.r = 255 & (f * t.r + o * r.r + 0.5)),
        (t.g = 255 & (f * t.g + o * r.g + 0.5)),
        (t.b = 255 & (f * t.b + o * r.b + 0.5)),
        (t.a = a * t.a + (1 - a) * r.a),
        (this.rgb = t);
    }
    return this;
  }
  interpolate(i, e) {
    return i && (this._rgb = FS(this._rgb, i._rgb, e)), this;
  }
  clone() {
    return new n(this.rgb);
  }
  alpha(i) {
    return (this._rgb.a = Ur(i)), this;
  }
  clearer(i) {
    let e = this._rgb;
    return (e.a *= 1 - i), this;
  }
  greyscale() {
    let i = this._rgb,
      e = Hs(i.r * 0.3 + i.g * 0.59 + i.b * 0.11);
    return (i.r = i.g = i.b = e), this;
  }
  opaquer(i) {
    let e = this._rgb;
    return (e.a *= 1 + i), this;
  }
  negate() {
    let i = this._rgb;
    return (i.r = 255 - i.r), (i.g = 255 - i.g), (i.b = 255 - i.b), this;
  }
  lighten(i) {
    return Kc(this._rgb, 2, i), this;
  }
  darken(i) {
    return Kc(this._rgb, 2, -i), this;
  }
  saturate(i) {
    return Kc(this._rgb, 1, i), this;
  }
  desaturate(i) {
    return Kc(this._rgb, 1, -i), this;
  }
  rotate(i) {
    return ES(this._rgb, i), this;
  }
};
var bb = (() => {
  let n = 0;
  return () => n++;
})();
function Et(n) {
  return n == null;
}
function Wt(n) {
  if (Array.isArray && Array.isArray(n)) return !0;
  let i = Object.prototype.toString.call(n);
  return i.slice(0, 7) === "[object" && i.slice(-6) === "Array]";
}
function lt(n) {
  return n !== null && Object.prototype.toString.call(n) === "[object Object]";
}
function di(n) {
  return (typeof n == "number" || n instanceof Number) && isFinite(+n);
}
function Hi(n, i) {
  return di(n) ? n : i;
}
function $t(n, i) {
  return typeof n > "u" ? i : n;
}
var vb = (n, i) =>
  typeof n == "string" && n.endsWith("%") ? (parseFloat(n) / 100) * i : +n;
function Ht(n, i, e) {
  if (n && typeof n.call == "function") return n.apply(e, i);
}
function bi(n, i, e, t) {
  let r, o, a;
  if (Wt(n))
    if (((o = n.length), t)) for (r = o - 1; r >= 0; r--) i.call(e, n[r], r);
    else for (r = 0; r < o; r++) i.call(e, n[r], r);
  else if (lt(n))
    for (a = Object.keys(n), o = a.length, r = 0; r < o; r++)
      i.call(e, n[a[r]], a[r]);
}
function Pp(n, i) {
  let e, t, r, o;
  if (!n || !i || n.length !== i.length) return !1;
  for (e = 0, t = n.length; e < t; ++e)
    if (
      ((r = n[e]),
      (o = i[e]),
      r.datasetIndex !== o.datasetIndex || r.index !== o.index)
    )
      return !1;
  return !0;
}
function Jc(n) {
  if (Wt(n)) return n.map(Jc);
  if (lt(n)) {
    let i = Object.create(null),
      e = Object.keys(n),
      t = e.length,
      r = 0;
    for (; r < t; ++r) i[e[r]] = Jc(n[e[r]]);
    return i;
  }
  return n;
}
function yb(n) {
  return ["__proto__", "prototype", "constructor"].indexOf(n) === -1;
}
function LS(n, i, e, t) {
  if (!yb(n)) return;
  let r = i[n],
    o = e[n];
  lt(r) && lt(o) ? ma(r, o, t) : (i[n] = Jc(o));
}
function ma(n, i, e) {
  let t = Wt(i) ? i : [i],
    r = t.length;
  if (!lt(n)) return n;
  e = e || {};
  let o = e.merger || LS,
    a;
  for (let l = 0; l < r; ++l) {
    if (((a = t[l]), !lt(a))) continue;
    let u = Object.keys(a);
    for (let f = 0, v = u.length; f < v; ++f) o(u[f], n, a, e);
  }
  return n;
}
function fa(n, i) {
  return ma(n, i, { merger: VS });
}
function VS(n, i, e) {
  if (!yb(n)) return;
  let t = i[n],
    r = e[n];
  lt(t) && lt(r)
    ? fa(t, r)
    : Object.prototype.hasOwnProperty.call(i, n) || (i[n] = Jc(r));
}
var hb = { "": (n) => n, x: (n) => n.x, y: (n) => n.y };
function BS(n) {
  let i = n.split("."),
    e = [],
    t = "";
  for (let r of i)
    (t += r),
      t.endsWith("\\") ? (t = t.slice(0, -1) + ".") : (e.push(t), (t = ""));
  return e;
}
function HS(n) {
  let i = BS(n);
  return (e) => {
    for (let t of i) {
      if (t === "") break;
      e = e && e[t];
    }
    return e;
  };
}
function zs(n, i) {
  return (hb[i] || (hb[i] = HS(i)))(n);
}
function id(n) {
  return n.charAt(0).toUpperCase() + n.slice(1);
}
var $s = (n) => typeof n < "u",
  _r = (n) => typeof n == "function",
  Ip = (n, i) => {
    if (n.size !== i.size) return !1;
    for (let e of n) if (!i.has(e)) return !1;
    return !0;
  };
function xb(n) {
  return n.type === "mouseup" || n.type === "click" || n.type === "contextmenu";
}
var Mi = Math.PI,
  Qn = 2 * Mi,
  TN = Qn + Mi,
  ed = Number.POSITIVE_INFINITY,
  EN = Mi / 180,
  Xn = Mi / 2,
  ON = Mi / 4,
  kN = (Mi * 2) / 3,
  br = Math.log10,
  Ws = Math.sign;
function Gs(n, i, e) {
  return Math.abs(n - i) < e;
}
function Ap(n) {
  let i = Math.round(n);
  n = Gs(n, i, n / 1e3) ? i : n;
  let e = Math.pow(10, Math.floor(br(n))),
    t = n / e;
  return (t <= 1 ? 1 : t <= 2 ? 2 : t <= 5 ? 5 : 10) * e;
}
function Cb(n) {
  let i = [],
    e = Math.sqrt(n),
    t;
  for (t = 1; t < e; t++) n % t === 0 && (i.push(t), i.push(n / t));
  return e === (e | 0) && i.push(e), i.sort((r, o) => r - o).pop(), i;
}
function jS(n) {
  return (
    typeof n == "symbol" ||
    (typeof n == "object" &&
      n !== null &&
      !(Symbol.toPrimitive in n || "toString" in n || "valueOf" in n))
  );
}
function Ys(n) {
  return !jS(n) && !isNaN(parseFloat(n)) && isFinite(n);
}
function wb(n, i) {
  let e = Math.round(n);
  return e - i <= n && e + i >= n;
}
function Rp(n, i, e) {
  let t, r, o;
  for (t = 0, r = n.length; t < r; t++)
    (o = n[t][e]),
      isNaN(o) || ((i.min = Math.min(i.min, o)), (i.max = Math.max(i.max, o)));
}
function vr(n) {
  return n * (Mi / 180);
}
function nd(n) {
  return n * (180 / Mi);
}
function Fp(n) {
  if (!di(n)) return;
  let i = 1,
    e = 0;
  for (; Math.round(n * i) / i !== n; ) (i *= 10), e++;
  return e;
}
function Db(n, i) {
  let e = i.x - n.x,
    t = i.y - n.y,
    r = Math.sqrt(e * e + t * t),
    o = Math.atan2(t, e);
  return o < -0.5 * Mi && (o += Qn), { angle: o, distance: r };
}
function En(n) {
  return ((n % Qn) + Qn) % Qn;
}
function Sb(n, i, e, t) {
  let r = En(n),
    o = En(i),
    a = En(e),
    l = En(o - r),
    u = En(a - r),
    f = En(r - o),
    v = En(r - a);
  return r === o || r === a || (t && o === a) || (l > u && f < v);
}
function zr(n, i, e) {
  return Math.max(i, Math.min(e, n));
}
function Mb(n) {
  return zr(n, -32768, 32767);
}
function rd(n, i, e) {
  e = e || ((a) => n[a] < i);
  let t = n.length - 1,
    r = 0,
    o;
  for (; t - r > 1; ) (o = (r + t) >> 1), e(o) ? (r = o) : (t = o);
  return { lo: r, hi: t };
}
var od = (n, i, e, t) =>
    rd(
      n,
      e,
      t
        ? (r) => {
            let o = n[r][i];
            return o < e || (o === e && n[r + 1][i] === e);
          }
        : (r) => n[r][i] < e
    ),
  Tb = (n, i, e) => rd(n, e, (t) => n[t][i] >= e);
function Eb(n, i, e) {
  let t = 0,
    r = n.length;
  for (; t < r && n[t] < i; ) t++;
  for (; r > t && n[r - 1] > e; ) r--;
  return t > 0 || r < n.length ? n.slice(t, r) : n;
}
var Ob = ["push", "pop", "shift", "splice", "unshift"];
function kb(n, i) {
  if (n._chartjs) {
    n._chartjs.listeners.push(i);
    return;
  }
  Object.defineProperty(n, "_chartjs", {
    configurable: !0,
    enumerable: !1,
    value: { listeners: [i] },
  }),
    Ob.forEach((e) => {
      let t = "_onData" + id(e),
        r = n[e];
      Object.defineProperty(n, e, {
        configurable: !0,
        enumerable: !1,
        value(...o) {
          let a = r.apply(this, o);
          return (
            n._chartjs.listeners.forEach((l) => {
              typeof l[t] == "function" && l[t](...o);
            }),
            a
          );
        },
      });
    });
}
function Np(n, i) {
  let e = n._chartjs;
  if (!e) return;
  let t = e.listeners,
    r = t.indexOf(i);
  r !== -1 && t.splice(r, 1),
    !(t.length > 0) &&
      (Ob.forEach((o) => {
        delete n[o];
      }),
      delete n._chartjs);
}
function Pb(n) {
  let i = new Set(n);
  return i.size === n.length ? n : Array.from(i);
}
var Lp = (function () {
  return typeof window > "u"
    ? function (n) {
        return n();
      }
    : window.requestAnimationFrame;
})();
function Vp(n, i) {
  let e = [],
    t = !1;
  return function (...r) {
    (e = r),
      t ||
        ((t = !0),
        Lp.call(window, () => {
          (t = !1), n.apply(i, e);
        }));
  };
}
function Ib(n, i) {
  let e;
  return function (...t) {
    return (
      i ? (clearTimeout(e), (e = setTimeout(n, i, t))) : n.apply(this, t), i
    );
  };
}
var Ab = (n) => (n === "start" ? "left" : n === "end" ? "right" : "center"),
  Bp = (n, i, e) => (n === "start" ? i : n === "end" ? e : (i + e) / 2);
var Qc = (n) => n === 0 || n === 1,
  pb = (n, i, e) =>
    -(Math.pow(2, 10 * (n -= 1)) * Math.sin(((n - i) * Qn) / e)),
  mb = (n, i, e) => Math.pow(2, -10 * n) * Math.sin(((n - i) * Qn) / e) + 1,
  pa = {
    linear: (n) => n,
    easeInQuad: (n) => n * n,
    easeOutQuad: (n) => -n * (n - 2),
    easeInOutQuad: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n : -0.5 * (--n * (n - 2) - 1),
    easeInCubic: (n) => n * n * n,
    easeOutCubic: (n) => (n -= 1) * n * n + 1,
    easeInOutCubic: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n * n : 0.5 * ((n -= 2) * n * n + 2),
    easeInQuart: (n) => n * n * n * n,
    easeOutQuart: (n) => -((n -= 1) * n * n * n - 1),
    easeInOutQuart: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n * n * n : -0.5 * ((n -= 2) * n * n * n - 2),
    easeInQuint: (n) => n * n * n * n * n,
    easeOutQuint: (n) => (n -= 1) * n * n * n * n + 1,
    easeInOutQuint: (n) =>
      (n /= 0.5) < 1
        ? 0.5 * n * n * n * n * n
        : 0.5 * ((n -= 2) * n * n * n * n + 2),
    easeInSine: (n) => -Math.cos(n * Xn) + 1,
    easeOutSine: (n) => Math.sin(n * Xn),
    easeInOutSine: (n) => -0.5 * (Math.cos(Mi * n) - 1),
    easeInExpo: (n) => (n === 0 ? 0 : Math.pow(2, 10 * (n - 1))),
    easeOutExpo: (n) => (n === 1 ? 1 : -Math.pow(2, -10 * n) + 1),
    easeInOutExpo: (n) =>
      Qc(n)
        ? n
        : n < 0.5
        ? 0.5 * Math.pow(2, 10 * (n * 2 - 1))
        : 0.5 * (-Math.pow(2, -10 * (n * 2 - 1)) + 2),
    easeInCirc: (n) => (n >= 1 ? n : -(Math.sqrt(1 - n * n) - 1)),
    easeOutCirc: (n) => Math.sqrt(1 - (n -= 1) * n),
    easeInOutCirc: (n) =>
      (n /= 0.5) < 1
        ? -0.5 * (Math.sqrt(1 - n * n) - 1)
        : 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1),
    easeInElastic: (n) => (Qc(n) ? n : pb(n, 0.075, 0.3)),
    easeOutElastic: (n) => (Qc(n) ? n : mb(n, 0.075, 0.3)),
    easeInOutElastic(n) {
      return Qc(n)
        ? n
        : n < 0.5
        ? 0.5 * pb(n * 2, 0.1125, 0.45)
        : 0.5 + 0.5 * mb(n * 2 - 1, 0.1125, 0.45);
    },
    easeInBack(n) {
      return n * n * ((1.70158 + 1) * n - 1.70158);
    },
    easeOutBack(n) {
      return (n -= 1) * n * ((1.70158 + 1) * n + 1.70158) + 1;
    },
    easeInOutBack(n) {
      let i = 1.70158;
      return (n /= 0.5) < 1
        ? 0.5 * (n * n * (((i *= 1.525) + 1) * n - i))
        : 0.5 * ((n -= 2) * n * (((i *= 1.525) + 1) * n + i) + 2);
    },
    easeInBounce: (n) => 1 - pa.easeOutBounce(1 - n),
    easeOutBounce(n) {
      return n < 1 / 2.75
        ? 7.5625 * n * n
        : n < 2 / 2.75
        ? 7.5625 * (n -= 1.5 / 2.75) * n + 0.75
        : n < 2.5 / 2.75
        ? 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375
        : 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;
    },
    easeInOutBounce: (n) =>
      n < 0.5
        ? pa.easeInBounce(n * 2) * 0.5
        : pa.easeOutBounce(n * 2 - 1) * 0.5 + 0.5,
  };
function Rb(n) {
  if (n && typeof n == "object") {
    let i = n.toString();
    return i === "[object CanvasPattern]" || i === "[object CanvasGradient]";
  }
  return !1;
}
function Hp(n) {
  return Rb(n) ? n : new Bs(n);
}
function Ep(n) {
  return Rb(n) ? n : new Bs(n).saturate(0.5).darken(0.1).hexString();
}
var US = ["x", "y", "borderWidth", "radius", "tension"],
  zS = ["color", "borderColor", "backgroundColor"];
function $S(n) {
  n.set("animation", {
    delay: void 0,
    duration: 1e3,
    easing: "easeOutQuart",
    fn: void 0,
    from: void 0,
    loop: void 0,
    to: void 0,
    type: void 0,
  }),
    n.describe("animation", {
      _fallback: !1,
      _indexable: !1,
      _scriptable: (i) =>
        i !== "onProgress" && i !== "onComplete" && i !== "fn",
    }),
    n.set("animations", {
      colors: { type: "color", properties: zS },
      numbers: { type: "number", properties: US },
    }),
    n.describe("animations", { _fallback: "animation" }),
    n.set("transitions", {
      active: { animation: { duration: 400 } },
      resize: { animation: { duration: 0 } },
      show: {
        animations: {
          colors: { from: "transparent" },
          visible: { type: "boolean", duration: 0 },
        },
      },
      hide: {
        animations: {
          colors: { to: "transparent" },
          visible: { type: "boolean", easing: "linear", fn: (i) => i | 0 },
        },
      },
    });
}
function WS(n) {
  n.set("layout", {
    autoPadding: !0,
    padding: { top: 0, right: 0, bottom: 0, left: 0 },
  });
}
var fb = new Map();
function GS(n, i) {
  i = i || {};
  let e = n + JSON.stringify(i),
    t = fb.get(e);
  return t || ((t = new Intl.NumberFormat(n, i)), fb.set(e, t)), t;
}
function ad(n, i, e) {
  return GS(i, e).format(n);
}
var Fb = {
  values(n) {
    return Wt(n) ? n : "" + n;
  },
  numeric(n, i, e) {
    if (n === 0) return "0";
    let t = this.chart.options.locale,
      r,
      o = n;
    if (e.length > 1) {
      let f = Math.max(Math.abs(e[0].value), Math.abs(e[e.length - 1].value));
      (f < 1e-4 || f > 1e15) && (r = "scientific"), (o = YS(n, e));
    }
    let a = br(Math.abs(o)),
      l = isNaN(a) ? 1 : Math.max(Math.min(-1 * Math.floor(a), 20), 0),
      u = { notation: r, minimumFractionDigits: l, maximumFractionDigits: l };
    return Object.assign(u, this.options.ticks.format), ad(n, t, u);
  },
  logarithmic(n, i, e) {
    if (n === 0) return "0";
    let t = e[i].significand || n / Math.pow(10, Math.floor(br(n)));
    return [1, 2, 3, 5, 10, 15].includes(t) || i > 0.8 * e.length
      ? Fb.numeric.call(this, n, i, e)
      : "";
  },
};
function YS(n, i) {
  let e = i.length > 3 ? i[2].value - i[1].value : i[1].value - i[0].value;
  return Math.abs(e) >= 1 && n !== Math.floor(n) && (e = n - Math.floor(n)), e;
}
var qs = { formatters: Fb };
function qS(n) {
  n.set("scale", {
    display: !0,
    offset: !1,
    reverse: !1,
    beginAtZero: !1,
    bounds: "ticks",
    clip: !0,
    grace: 0,
    grid: {
      display: !0,
      lineWidth: 1,
      drawOnChartArea: !0,
      drawTicks: !0,
      tickLength: 8,
      tickWidth: (i, e) => e.lineWidth,
      tickColor: (i, e) => e.color,
      offset: !1,
    },
    border: { display: !0, dash: [], dashOffset: 0, width: 1 },
    title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
    ticks: {
      minRotation: 0,
      maxRotation: 50,
      mirror: !1,
      textStrokeWidth: 0,
      textStrokeColor: "",
      padding: 3,
      display: !0,
      autoSkip: !0,
      autoSkipPadding: 3,
      labelOffset: 0,
      callback: qs.formatters.values,
      minor: {},
      major: {},
      align: "center",
      crossAlign: "near",
      showLabelBackdrop: !1,
      backdropColor: "rgba(255, 255, 255, 0.75)",
      backdropPadding: 2,
    },
  }),
    n.route("scale.ticks", "color", "", "color"),
    n.route("scale.grid", "color", "", "borderColor"),
    n.route("scale.border", "color", "", "borderColor"),
    n.route("scale.title", "color", "", "color"),
    n.describe("scale", {
      _fallback: !1,
      _scriptable: (i) =>
        !i.startsWith("before") &&
        !i.startsWith("after") &&
        i !== "callback" &&
        i !== "parser",
      _indexable: (i) =>
        i !== "borderDash" && i !== "tickBorderDash" && i !== "dash",
    }),
    n.describe("scales", { _fallback: "scale" }),
    n.describe("scale.ticks", {
      _scriptable: (i) => i !== "backdropPadding" && i !== "callback",
      _indexable: (i) => i !== "backdropPadding",
    });
}
var $r = Object.create(null),
  sd = Object.create(null);
function js(n, i) {
  if (!i) return n;
  let e = i.split(".");
  for (let t = 0, r = e.length; t < r; ++t) {
    let o = e[t];
    n = n[o] || (n[o] = Object.create(null));
  }
  return n;
}
function Op(n, i, e) {
  return typeof i == "string" ? ma(js(n, i), e) : ma(js(n, ""), i);
}
var kp = class {
    constructor(i, e) {
      (this.animation = void 0),
        (this.backgroundColor = "rgba(0,0,0,0.1)"),
        (this.borderColor = "rgba(0,0,0,0.1)"),
        (this.color = "#666"),
        (this.datasets = {}),
        (this.devicePixelRatio = (t) => t.chart.platform.getDevicePixelRatio()),
        (this.elements = {}),
        (this.events = [
          "mousemove",
          "mouseout",
          "click",
          "touchstart",
          "touchmove",
        ]),
        (this.font = {
          family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
          size: 12,
          style: "normal",
          lineHeight: 1.2,
          weight: null,
        }),
        (this.hover = {}),
        (this.hoverBackgroundColor = (t, r) => Ep(r.backgroundColor)),
        (this.hoverBorderColor = (t, r) => Ep(r.borderColor)),
        (this.hoverColor = (t, r) => Ep(r.color)),
        (this.indexAxis = "x"),
        (this.interaction = {
          mode: "nearest",
          intersect: !0,
          includeInvisible: !1,
        }),
        (this.maintainAspectRatio = !0),
        (this.onHover = null),
        (this.onClick = null),
        (this.parsing = !0),
        (this.plugins = {}),
        (this.responsive = !0),
        (this.scale = void 0),
        (this.scales = {}),
        (this.showLine = !0),
        (this.drawActiveElementsOnTop = !0),
        this.describe(i),
        this.apply(e);
    }
    set(i, e) {
      return Op(this, i, e);
    }
    get(i) {
      return js(this, i);
    }
    describe(i, e) {
      return Op(sd, i, e);
    }
    override(i, e) {
      return Op($r, i, e);
    }
    route(i, e, t, r) {
      let o = js(this, i),
        a = js(this, t),
        l = "_" + e;
      Object.defineProperties(o, {
        [l]: { value: o[e], writable: !0 },
        [e]: {
          enumerable: !0,
          get() {
            let u = this[l],
              f = a[r];
            return lt(u) ? Object.assign({}, f, u) : $t(u, f);
          },
          set(u) {
            this[l] = u;
          },
        },
      });
    }
    apply(i) {
      i.forEach((e) => e(this));
    }
  },
  Gt = new kp(
    {
      _scriptable: (n) => !n.startsWith("on"),
      _indexable: (n) => n !== "events",
      hover: { _fallback: "interaction" },
      interaction: { _scriptable: !1, _indexable: !1 },
    },
    [$S, WS, qS]
  );
function KS(n) {
  return !n || Et(n.size) || Et(n.family)
    ? null
    : (n.style ? n.style + " " : "") +
        (n.weight ? n.weight + " " : "") +
        n.size +
        "px " +
        n.family;
}
function Us(n, i, e, t, r) {
  let o = i[r];
  return (
    o || ((o = i[r] = n.measureText(r).width), e.push(r)), o > t && (t = o), t
  );
}
function Nb(n, i, e, t) {
  t = t || {};
  let r = (t.data = t.data || {}),
    o = (t.garbageCollect = t.garbageCollect || []);
  t.font !== i &&
    ((r = t.data = {}), (o = t.garbageCollect = []), (t.font = i)),
    n.save(),
    (n.font = i);
  let a = 0,
    l = e.length,
    u,
    f,
    v,
    D,
    T;
  for (u = 0; u < l; u++)
    if (((D = e[u]), D != null && !Wt(D))) a = Us(n, r, o, a, D);
    else if (Wt(D))
      for (f = 0, v = D.length; f < v; f++)
        (T = D[f]), T != null && !Wt(T) && (a = Us(n, r, o, a, T));
  n.restore();
  let M = o.length / 2;
  if (M > e.length) {
    for (u = 0; u < M; u++) delete r[o[u]];
    o.splice(0, M);
  }
  return a;
}
function Wr(n, i, e) {
  let t = n.currentDevicePixelRatio,
    r = e !== 0 ? Math.max(e / 2, 0.5) : 0;
  return Math.round((i - r) * t) / t + r;
}
function jp(n, i) {
  (!i && !n) ||
    ((i = i || n.getContext("2d")),
    i.save(),
    i.resetTransform(),
    i.clearRect(0, 0, n.width, n.height),
    i.restore());
}
function vo(n, i, e) {
  return (
    (e = e || 0.5),
    !i ||
      (n &&
        n.x > i.left - e &&
        n.x < i.right + e &&
        n.y > i.top - e &&
        n.y < i.bottom + e)
  );
}
function Up(n, i) {
  n.save(),
    n.beginPath(),
    n.rect(i.left, i.top, i.right - i.left, i.bottom - i.top),
    n.clip();
}
function zp(n) {
  n.restore();
}
function QS(n, i) {
  i.translation && n.translate(i.translation[0], i.translation[1]),
    Et(i.rotation) || n.rotate(i.rotation),
    i.color && (n.fillStyle = i.color),
    i.textAlign && (n.textAlign = i.textAlign),
    i.textBaseline && (n.textBaseline = i.textBaseline);
}
function XS(n, i, e, t, r) {
  if (r.strikethrough || r.underline) {
    let o = n.measureText(t),
      a = i - o.actualBoundingBoxLeft,
      l = i + o.actualBoundingBoxRight,
      u = e - o.actualBoundingBoxAscent,
      f = e + o.actualBoundingBoxDescent,
      v = r.strikethrough ? (u + f) / 2 : f;
    (n.strokeStyle = n.fillStyle),
      n.beginPath(),
      (n.lineWidth = r.decorationWidth || 2),
      n.moveTo(a, v),
      n.lineTo(l, v),
      n.stroke();
  }
}
function ZS(n, i) {
  let e = n.fillStyle;
  (n.fillStyle = i.color),
    n.fillRect(i.left, i.top, i.width, i.height),
    (n.fillStyle = e);
}
function Ks(n, i, e, t, r, o = {}) {
  let a = Wt(i) ? i : [i],
    l = o.strokeWidth > 0 && o.strokeColor !== "",
    u,
    f;
  for (n.save(), n.font = r.string, QS(n, o), u = 0; u < a.length; ++u)
    (f = a[u]),
      o.backdrop && ZS(n, o.backdrop),
      l &&
        (o.strokeColor && (n.strokeStyle = o.strokeColor),
        Et(o.strokeWidth) || (n.lineWidth = o.strokeWidth),
        n.strokeText(f, e, t, o.maxWidth)),
      n.fillText(f, e, t, o.maxWidth),
      XS(n, e, t, f, o),
      (t += Number(r.lineHeight));
  n.restore();
}
function Lb(n, i) {
  let { x: e, y: t, w: r, h: o, radius: a } = i;
  n.arc(e + a.topLeft, t + a.topLeft, a.topLeft, 1.5 * Mi, Mi, !0),
    n.lineTo(e, t + o - a.bottomLeft),
    n.arc(e + a.bottomLeft, t + o - a.bottomLeft, a.bottomLeft, Mi, Xn, !0),
    n.lineTo(e + r - a.bottomRight, t + o),
    n.arc(
      e + r - a.bottomRight,
      t + o - a.bottomRight,
      a.bottomRight,
      Xn,
      0,
      !0
    ),
    n.lineTo(e + r, t + a.topRight),
    n.arc(e + r - a.topRight, t + a.topRight, a.topRight, 0, -Xn, !0),
    n.lineTo(e + a.topLeft, t);
}
var JS = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,
  eM = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
function tM(n, i) {
  let e = ("" + n).match(JS);
  if (!e || e[1] === "normal") return i * 1.2;
  switch (((n = +e[2]), e[3])) {
    case "px":
      return n;
    case "%":
      n /= 100;
      break;
  }
  return i * n;
}
var iM = (n) => +n || 0;
function $p(n, i) {
  let e = {},
    t = lt(i),
    r = t ? Object.keys(i) : i,
    o = lt(n) ? (t ? (a) => $t(n[a], n[i[a]]) : (a) => n[a]) : () => n;
  for (let a of r) e[a] = iM(o(a));
  return e;
}
function Vb(n) {
  return $p(n, { top: "y", right: "x", bottom: "y", left: "x" });
}
function Bb(n) {
  return $p(n, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
}
function Zn(n) {
  let i = Vb(n);
  return (i.width = i.left + i.right), (i.height = i.top + i.bottom), i;
}
function yo(n, i) {
  (n = n || {}), (i = i || Gt.font);
  let e = $t(n.size, i.size);
  typeof e == "string" && (e = parseInt(e, 10));
  let t = $t(n.style, i.style);
  t &&
    !("" + t).match(eM) &&
    (console.warn('Invalid font style specified: "' + t + '"'), (t = void 0));
  let r = {
    family: $t(n.family, i.family),
    lineHeight: tM($t(n.lineHeight, i.lineHeight), e),
    size: e,
    style: t,
    weight: $t(n.weight, i.weight),
    string: "",
  };
  return (r.string = KS(r)), r;
}
function Qs(n, i, e, t) {
  let r = !0,
    o,
    a,
    l;
  for (o = 0, a = n.length; o < a; ++o)
    if (
      ((l = n[o]),
      l !== void 0 &&
        (i !== void 0 && typeof l == "function" && ((l = l(i)), (r = !1)),
        e !== void 0 && Wt(l) && ((l = l[e % l.length]), (r = !1)),
        l !== void 0))
    )
      return t && !r && (t.cacheable = !1), l;
}
function Hb(n, i, e) {
  let { min: t, max: r } = n,
    o = vb(i, (r - t) / 2),
    a = (l, u) => (e && l === 0 ? 0 : l + u);
  return { min: a(t, -Math.abs(o)), max: a(r, o) };
}
function xo(n, i) {
  return Object.assign(Object.create(n), i);
}
function ld(n, i = [""], e, t, r = () => n[0]) {
  let o = e || n;
  typeof t > "u" && (t = zb("_fallback", n));
  let a = {
    [Symbol.toStringTag]: "Object",
    _cacheable: !0,
    _scopes: n,
    _rootScopes: o,
    _fallback: t,
    _getTarget: r,
    override: (l) => ld([l, ...n], i, o, t),
  };
  return new Proxy(a, {
    deleteProperty(l, u) {
      return delete l[u], delete l._keys, delete n[0][u], !0;
    },
    get(l, u) {
      return jb(l, u, () => dM(u, i, n, l));
    },
    getOwnPropertyDescriptor(l, u) {
      return Reflect.getOwnPropertyDescriptor(l._scopes[0], u);
    },
    getPrototypeOf() {
      return Reflect.getPrototypeOf(n[0]);
    },
    has(l, u) {
      return _b(l).includes(u);
    },
    ownKeys(l) {
      return _b(l);
    },
    set(l, u, f) {
      let v = l._storage || (l._storage = r());
      return (l[u] = v[u] = f), delete l._keys, !0;
    },
  });
}
function bo(n, i, e, t) {
  let r = {
    _cacheable: !1,
    _proxy: n,
    _context: i,
    _subProxy: e,
    _stack: new Set(),
    _descriptors: Wp(n, t),
    setContext: (o) => bo(n, o, e, t),
    override: (o) => bo(n.override(o), i, e, t),
  };
  return new Proxy(r, {
    deleteProperty(o, a) {
      return delete o[a], delete n[a], !0;
    },
    get(o, a, l) {
      return jb(o, a, () => rM(o, a, l));
    },
    getOwnPropertyDescriptor(o, a) {
      return o._descriptors.allKeys
        ? Reflect.has(n, a)
          ? { enumerable: !0, configurable: !0 }
          : void 0
        : Reflect.getOwnPropertyDescriptor(n, a);
    },
    getPrototypeOf() {
      return Reflect.getPrototypeOf(n);
    },
    has(o, a) {
      return Reflect.has(n, a);
    },
    ownKeys() {
      return Reflect.ownKeys(n);
    },
    set(o, a, l) {
      return (n[a] = l), delete o[a], !0;
    },
  });
}
function Wp(n, i = { scriptable: !0, indexable: !0 }) {
  let {
    _scriptable: e = i.scriptable,
    _indexable: t = i.indexable,
    _allKeys: r = i.allKeys,
  } = n;
  return {
    allKeys: r,
    scriptable: e,
    indexable: t,
    isScriptable: _r(e) ? e : () => e,
    isIndexable: _r(t) ? t : () => t,
  };
}
var nM = (n, i) => (n ? n + id(i) : i),
  Gp = (n, i) =>
    lt(i) &&
    n !== "adapters" &&
    (Object.getPrototypeOf(i) === null || i.constructor === Object);
function jb(n, i, e) {
  if (Object.prototype.hasOwnProperty.call(n, i) || i === "constructor")
    return n[i];
  let t = e();
  return (n[i] = t), t;
}
function rM(n, i, e) {
  let { _proxy: t, _context: r, _subProxy: o, _descriptors: a } = n,
    l = t[i];
  return (
    _r(l) && a.isScriptable(i) && (l = oM(i, l, n, e)),
    Wt(l) && l.length && (l = aM(i, l, n, a.isIndexable)),
    Gp(i, l) && (l = bo(l, r, o && o[i], a)),
    l
  );
}
function oM(n, i, e, t) {
  let { _proxy: r, _context: o, _subProxy: a, _stack: l } = e;
  if (l.has(n))
    throw new Error(
      "Recursion detected: " + Array.from(l).join("->") + "->" + n
    );
  l.add(n);
  let u = i(o, a || t);
  return l.delete(n), Gp(n, u) && (u = Yp(r._scopes, r, n, u)), u;
}
function aM(n, i, e, t) {
  let { _proxy: r, _context: o, _subProxy: a, _descriptors: l } = e;
  if (typeof o.index < "u" && t(n)) return i[o.index % i.length];
  if (lt(i[0])) {
    let u = i,
      f = r._scopes.filter((v) => v !== u);
    i = [];
    for (let v of u) {
      let D = Yp(f, r, n, v);
      i.push(bo(D, o, a && a[n], l));
    }
  }
  return i;
}
function Ub(n, i, e) {
  return _r(n) ? n(i, e) : n;
}
var sM = (n, i) => (n === !0 ? i : typeof n == "string" ? zs(i, n) : void 0);
function lM(n, i, e, t, r) {
  for (let o of i) {
    let a = sM(e, o);
    if (a) {
      n.add(a);
      let l = Ub(a._fallback, e, r);
      if (typeof l < "u" && l !== e && l !== t) return l;
    } else if (a === !1 && typeof t < "u" && e !== t) return null;
  }
  return !1;
}
function Yp(n, i, e, t) {
  let r = i._rootScopes,
    o = Ub(i._fallback, e, t),
    a = [...n, ...r],
    l = new Set();
  l.add(t);
  let u = gb(l, a, e, o || e, t);
  return u === null ||
    (typeof o < "u" && o !== e && ((u = gb(l, a, o, u, t)), u === null))
    ? !1
    : ld(Array.from(l), [""], r, o, () => cM(i, e, t));
}
function gb(n, i, e, t, r) {
  for (; e; ) e = lM(n, i, e, t, r);
  return e;
}
function cM(n, i, e) {
  let t = n._getTarget();
  i in t || (t[i] = {});
  let r = t[i];
  return Wt(r) && lt(e) ? e : r || {};
}
function dM(n, i, e, t) {
  let r;
  for (let o of i)
    if (((r = zb(nM(o, n), e)), typeof r < "u"))
      return Gp(n, r) ? Yp(e, t, n, r) : r;
}
function zb(n, i) {
  for (let e of i) {
    if (!e) continue;
    let t = e[n];
    if (typeof t < "u") return t;
  }
}
function _b(n) {
  let i = n._keys;
  return i || (i = n._keys = uM(n._scopes)), i;
}
function uM(n) {
  let i = new Set();
  for (let e of n)
    for (let t of Object.keys(e).filter((r) => !r.startsWith("_"))) i.add(t);
  return Array.from(i);
}
var PN = Number.EPSILON || 1e-14;
function cd() {
  return typeof window < "u" && typeof document < "u";
}
function dd(n) {
  let i = n.parentNode;
  return i && i.toString() === "[object ShadowRoot]" && (i = i.host), i;
}
function td(n, i, e) {
  let t;
  return (
    typeof n == "string"
      ? ((t = parseInt(n, 10)),
        n.indexOf("%") !== -1 && (t = (t / 100) * i.parentNode[e]))
      : (t = n),
    t
  );
}
var ud = (n) => n.ownerDocument.defaultView.getComputedStyle(n, null);
function hM(n, i) {
  return ud(n).getPropertyValue(i);
}
var pM = ["top", "right", "bottom", "left"];
function _o(n, i, e) {
  let t = {};
  e = e ? "-" + e : "";
  for (let r = 0; r < 4; r++) {
    let o = pM[r];
    t[o] = parseFloat(n[i + "-" + o + e]) || 0;
  }
  return (t.width = t.left + t.right), (t.height = t.top + t.bottom), t;
}
var mM = (n, i, e) => (n > 0 || i > 0) && (!e || !e.shadowRoot);
function fM(n, i) {
  let e = n.touches,
    t = e && e.length ? e[0] : n,
    { offsetX: r, offsetY: o } = t,
    a = !1,
    l,
    u;
  if (mM(r, o, n.target)) (l = r), (u = o);
  else {
    let f = i.getBoundingClientRect();
    (l = t.clientX - f.left), (u = t.clientY - f.top), (a = !0);
  }
  return { x: l, y: u, box: a };
}
function Gr(n, i) {
  if ("native" in n) return n;
  let { canvas: e, currentDevicePixelRatio: t } = i,
    r = ud(e),
    o = r.boxSizing === "border-box",
    a = _o(r, "padding"),
    l = _o(r, "border", "width"),
    { x: u, y: f, box: v } = fM(n, e),
    D = a.left + (v && l.left),
    T = a.top + (v && l.top),
    { width: M, height: k } = i;
  return (
    o && ((M -= a.width + l.width), (k -= a.height + l.height)),
    {
      x: Math.round((((u - D) / M) * e.width) / t),
      y: Math.round((((f - T) / k) * e.height) / t),
    }
  );
}
function gM(n, i, e) {
  let t, r;
  if (i === void 0 || e === void 0) {
    let o = n && dd(n);
    if (!o) (i = n.clientWidth), (e = n.clientHeight);
    else {
      let a = o.getBoundingClientRect(),
        l = ud(o),
        u = _o(l, "border", "width"),
        f = _o(l, "padding");
      (i = a.width - f.width - u.width),
        (e = a.height - f.height - u.height),
        (t = td(l.maxWidth, o, "clientWidth")),
        (r = td(l.maxHeight, o, "clientHeight"));
    }
  }
  return { width: i, height: e, maxWidth: t || ed, maxHeight: r || ed };
}
var Xc = (n) => Math.round(n * 10) / 10;
function $b(n, i, e, t) {
  let r = ud(n),
    o = _o(r, "margin"),
    a = td(r.maxWidth, n, "clientWidth") || ed,
    l = td(r.maxHeight, n, "clientHeight") || ed,
    u = gM(n, i, e),
    { width: f, height: v } = u;
  if (r.boxSizing === "content-box") {
    let T = _o(r, "border", "width"),
      M = _o(r, "padding");
    (f -= M.width + T.width), (v -= M.height + T.height);
  }
  return (
    (f = Math.max(0, f - o.width)),
    (v = Math.max(0, t ? f / t : v - o.height)),
    (f = Xc(Math.min(f, a, u.maxWidth))),
    (v = Xc(Math.min(v, l, u.maxHeight))),
    f && !v && (v = Xc(f / 2)),
    (i !== void 0 || e !== void 0) &&
      t &&
      u.height &&
      v > u.height &&
      ((v = u.height), (f = Xc(Math.floor(v * t)))),
    { width: f, height: v }
  );
}
function qp(n, i, e) {
  let t = i || 1,
    r = Math.floor(n.height * t),
    o = Math.floor(n.width * t);
  (n.height = Math.floor(n.height)), (n.width = Math.floor(n.width));
  let a = n.canvas;
  return (
    a.style &&
      (e || (!a.style.height && !a.style.width)) &&
      ((a.style.height = `${n.height}px`), (a.style.width = `${n.width}px`)),
    n.currentDevicePixelRatio !== t || a.height !== r || a.width !== o
      ? ((n.currentDevicePixelRatio = t),
        (a.height = r),
        (a.width = o),
        n.ctx.setTransform(t, 0, 0, t, 0, 0),
        !0)
      : !1
  );
}
var Wb = (function () {
  let n = !1;
  try {
    let i = {
      get passive() {
        return (n = !0), !1;
      },
    };
    cd() &&
      (window.addEventListener("test", null, i),
      window.removeEventListener("test", null, i));
  } catch {}
  return n;
})();
function Kp(n, i) {
  let e = hM(n, i),
    t = e && e.match(/^(\d+)(\.\d+)?px$/);
  return t ? +t[1] : void 0;
}
function Zc(n, i, e) {
  return n.options.clip ? n[e] : i[e];
}
function _M(n, i) {
  let { xScale: e, yScale: t } = n;
  return e && t
    ? {
        left: Zc(e, i, "left"),
        right: Zc(e, i, "right"),
        top: Zc(t, i, "top"),
        bottom: Zc(t, i, "bottom"),
      }
    : i;
}
function Gb(n, i) {
  let e = i._clip;
  if (e.disabled) return !1;
  let t = _M(i, n.chartArea);
  return {
    left: e.left === !1 ? 0 : t.left - (e.left === !0 ? 0 : e.left),
    right: e.right === !1 ? n.width : t.right + (e.right === !0 ? 0 : e.right),
    top: e.top === !1 ? 0 : t.top - (e.top === !0 ? 0 : e.top),
    bottom:
      e.bottom === !1 ? n.height : t.bottom + (e.bottom === !0 ? 0 : e.bottom),
  };
}
var im = class {
    constructor() {
      (this._request = null),
        (this._charts = new Map()),
        (this._running = !1),
        (this._lastDate = void 0);
    }
    _notify(i, e, t, r) {
      let o = e.listeners[r],
        a = e.duration;
      o.forEach((l) =>
        l({
          chart: i,
          initial: e.initial,
          numSteps: a,
          currentStep: Math.min(t - e.start, a),
        })
      );
    }
    _refresh() {
      this._request ||
        ((this._running = !0),
        (this._request = Lp.call(window, () => {
          this._update(),
            (this._request = null),
            this._running && this._refresh();
        })));
    }
    _update(i = Date.now()) {
      let e = 0;
      this._charts.forEach((t, r) => {
        if (!t.running || !t.items.length) return;
        let o = t.items,
          a = o.length - 1,
          l = !1,
          u;
        for (; a >= 0; --a)
          (u = o[a]),
            u._active
              ? (u._total > t.duration && (t.duration = u._total),
                u.tick(i),
                (l = !0))
              : ((o[a] = o[o.length - 1]), o.pop());
        l && (r.draw(), this._notify(r, t, i, "progress")),
          o.length ||
            ((t.running = !1),
            this._notify(r, t, i, "complete"),
            (t.initial = !1)),
          (e += o.length);
      }),
        (this._lastDate = i),
        e === 0 && (this._running = !1);
    }
    _getAnims(i) {
      let e = this._charts,
        t = e.get(i);
      return (
        t ||
          ((t = {
            running: !1,
            initial: !0,
            items: [],
            listeners: { complete: [], progress: [] },
          }),
          e.set(i, t)),
        t
      );
    }
    listen(i, e, t) {
      this._getAnims(i).listeners[e].push(t);
    }
    add(i, e) {
      !e || !e.length || this._getAnims(i).items.push(...e);
    }
    has(i) {
      return this._getAnims(i).items.length > 0;
    }
    start(i) {
      let e = this._charts.get(i);
      e &&
        ((e.running = !0),
        (e.start = Date.now()),
        (e.duration = e.items.reduce((t, r) => Math.max(t, r._duration), 0)),
        this._refresh());
    }
    running(i) {
      if (!this._running) return !1;
      let e = this._charts.get(i);
      return !(!e || !e.running || !e.items.length);
    }
    stop(i) {
      let e = this._charts.get(i);
      if (!e || !e.items.length) return;
      let t = e.items,
        r = t.length - 1;
      for (; r >= 0; --r) t[r].cancel();
      (e.items = []), this._notify(i, e, Date.now(), "complete");
    }
    remove(i) {
      return this._charts.delete(i);
    }
  },
  yr = new im(),
  Yb = "transparent",
  bM = {
    boolean(n, i, e) {
      return e > 0.5 ? i : n;
    },
    color(n, i, e) {
      let t = Hp(n || Yb),
        r = t.valid && Hp(i || Yb);
      return r && r.valid ? r.mix(t, e).hexString() : i;
    },
    number(n, i, e) {
      return n + (i - n) * e;
    },
  },
  nm = class {
    constructor(i, e, t, r) {
      let o = e[t];
      r = Qs([i.to, r, o, i.from]);
      let a = Qs([i.from, o, r]);
      (this._active = !0),
        (this._fn = i.fn || bM[i.type || typeof a]),
        (this._easing = pa[i.easing] || pa.linear),
        (this._start = Math.floor(Date.now() + (i.delay || 0))),
        (this._duration = this._total = Math.floor(i.duration)),
        (this._loop = !!i.loop),
        (this._target = e),
        (this._prop = t),
        (this._from = a),
        (this._to = r),
        (this._promises = void 0);
    }
    active() {
      return this._active;
    }
    update(i, e, t) {
      if (this._active) {
        this._notify(!1);
        let r = this._target[this._prop],
          o = t - this._start,
          a = this._duration - o;
        (this._start = t),
          (this._duration = Math.floor(Math.max(a, i.duration))),
          (this._total += o),
          (this._loop = !!i.loop),
          (this._to = Qs([i.to, e, r, i.from])),
          (this._from = Qs([i.from, r, e]));
      }
    }
    cancel() {
      this._active &&
        (this.tick(Date.now()), (this._active = !1), this._notify(!1));
    }
    tick(i) {
      let e = i - this._start,
        t = this._duration,
        r = this._prop,
        o = this._from,
        a = this._loop,
        l = this._to,
        u;
      if (((this._active = o !== l && (a || e < t)), !this._active)) {
        (this._target[r] = l), this._notify(!0);
        return;
      }
      if (e < 0) {
        this._target[r] = o;
        return;
      }
      (u = (e / t) % 2),
        (u = a && u > 1 ? 2 - u : u),
        (u = this._easing(Math.min(1, Math.max(0, u)))),
        (this._target[r] = this._fn(o, l, u));
    }
    wait() {
      let i = this._promises || (this._promises = []);
      return new Promise((e, t) => {
        i.push({ res: e, rej: t });
      });
    }
    _notify(i) {
      let e = i ? "res" : "rej",
        t = this._promises || [];
      for (let r = 0; r < t.length; r++) t[r][e]();
    }
  },
  rm = class {
    constructor(i, e) {
      (this._chart = i), (this._properties = new Map()), this.configure(e);
    }
    configure(i) {
      if (!lt(i)) return;
      let e = Object.keys(Gt.animation),
        t = this._properties;
      Object.getOwnPropertyNames(i).forEach((r) => {
        let o = i[r];
        if (!lt(o)) return;
        let a = {};
        for (let l of e) a[l] = o[l];
        ((Wt(o.properties) && o.properties) || [r]).forEach((l) => {
          (l === r || !t.has(l)) && t.set(l, a);
        });
      });
    }
    _animateOptions(i, e) {
      let t = e.options,
        r = yM(i, t);
      if (!r) return [];
      let o = this._createAnimations(r, t);
      return (
        t.$shared &&
          vM(i.options.$animations, t).then(
            () => {
              i.options = t;
            },
            () => {}
          ),
        o
      );
    }
    _createAnimations(i, e) {
      let t = this._properties,
        r = [],
        o = i.$animations || (i.$animations = {}),
        a = Object.keys(e),
        l = Date.now(),
        u;
      for (u = a.length - 1; u >= 0; --u) {
        let f = a[u];
        if (f.charAt(0) === "$") continue;
        if (f === "options") {
          r.push(...this._animateOptions(i, e));
          continue;
        }
        let v = e[f],
          D = o[f],
          T = t.get(f);
        if (D)
          if (T && D.active()) {
            D.update(T, v, l);
            continue;
          } else D.cancel();
        if (!T || !T.duration) {
          i[f] = v;
          continue;
        }
        (o[f] = D = new nm(T, i, f, v)), r.push(D);
      }
      return r;
    }
    update(i, e) {
      if (this._properties.size === 0) {
        Object.assign(i, e);
        return;
      }
      let t = this._createAnimations(i, e);
      if (t.length) return yr.add(this._chart, t), !0;
    }
  };
function vM(n, i) {
  let e = [],
    t = Object.keys(i);
  for (let r = 0; r < t.length; r++) {
    let o = n[t[r]];
    o && o.active() && e.push(o.wait());
  }
  return Promise.all(e);
}
function yM(n, i) {
  if (!i) return;
  let e = n.options;
  if (!e) {
    n.options = i;
    return;
  }
  return (
    e.$shared &&
      (n.options = e = Object.assign({}, e, { $shared: !1, $animations: {} })),
    e
  );
}
function qb(n, i) {
  let e = (n && n.options) || {},
    t = e.reverse,
    r = e.min === void 0 ? i : 0,
    o = e.max === void 0 ? i : 0;
  return { start: t ? o : r, end: t ? r : o };
}
function xM(n, i, e) {
  if (e === !1) return !1;
  let t = qb(n, e),
    r = qb(i, e);
  return { top: r.end, right: t.end, bottom: r.start, left: t.start };
}
function CM(n) {
  let i, e, t, r;
  return (
    lt(n)
      ? ((i = n.top), (e = n.right), (t = n.bottom), (r = n.left))
      : (i = e = t = r = n),
    { top: i, right: e, bottom: t, left: r, disabled: n === !1 }
  );
}
function Iv(n, i) {
  let e = [],
    t = n._getSortedDatasetMetas(i),
    r,
    o;
  for (r = 0, o = t.length; r < o; ++r) e.push(t[r].index);
  return e;
}
function Kb(n, i, e, t = {}) {
  let r = n.keys,
    o = t.mode === "single",
    a,
    l,
    u,
    f;
  if (i === null) return;
  let v = !1;
  for (a = 0, l = r.length; a < l; ++a) {
    if (((u = +r[a]), u === e)) {
      if (((v = !0), t.all)) continue;
      break;
    }
    (f = n.values[u]), di(f) && (o || i === 0 || Ws(i) === Ws(f)) && (i += f);
  }
  return !v && !t.all ? 0 : i;
}
function wM(n, i) {
  let { iScale: e, vScale: t } = i,
    r = e.axis === "x" ? "x" : "y",
    o = t.axis === "x" ? "x" : "y",
    a = Object.keys(n),
    l = new Array(a.length),
    u,
    f,
    v;
  for (u = 0, f = a.length; u < f; ++u)
    (v = a[u]), (l[u] = { [r]: v, [o]: n[v] });
  return l;
}
function Qp(n, i) {
  let e = n && n.options.stacked;
  return e || (e === void 0 && i.stack !== void 0);
}
function DM(n, i, e) {
  return `${n.id}.${i.id}.${e.stack || e.type}`;
}
function SM(n) {
  let { min: i, max: e, minDefined: t, maxDefined: r } = n.getUserBounds();
  return {
    min: t ? i : Number.NEGATIVE_INFINITY,
    max: r ? e : Number.POSITIVE_INFINITY,
  };
}
function MM(n, i, e) {
  let t = n[i] || (n[i] = {});
  return t[e] || (t[e] = {});
}
function Qb(n, i, e, t) {
  for (let r of i.getMatchingVisibleMetas(t).reverse()) {
    let o = n[r.index];
    if ((e && o > 0) || (!e && o < 0)) return r.index;
  }
  return null;
}
function Xb(n, i) {
  let { chart: e, _cachedMeta: t } = n,
    r = e._stacks || (e._stacks = {}),
    { iScale: o, vScale: a, index: l } = t,
    u = o.axis,
    f = a.axis,
    v = DM(o, a, t),
    D = i.length,
    T;
  for (let M = 0; M < D; ++M) {
    let k = i[M],
      { [u]: V, [f]: A } = k,
      E = k._stacks || (k._stacks = {});
    (T = E[f] = MM(r, v, V)),
      (T[l] = A),
      (T._top = Qb(T, a, !0, t.type)),
      (T._bottom = Qb(T, a, !1, t.type));
    let X = T._visualValues || (T._visualValues = {});
    X[l] = A;
  }
}
function Xp(n, i) {
  let e = n.scales;
  return Object.keys(e)
    .filter((t) => e[t].axis === i)
    .shift();
}
function TM(n, i) {
  return xo(n, {
    active: !1,
    dataset: void 0,
    datasetIndex: i,
    index: i,
    mode: "default",
    type: "dataset",
  });
}
function EM(n, i, e) {
  return xo(n, {
    active: !1,
    dataIndex: i,
    parsed: void 0,
    raw: void 0,
    element: e,
    index: i,
    mode: "default",
    type: "data",
  });
}
function Xs(n, i) {
  let e = n.controller.index,
    t = n.vScale && n.vScale.axis;
  if (t) {
    i = i || n._parsed;
    for (let r of i) {
      let o = r._stacks;
      if (!o || o[t] === void 0 || o[t][e] === void 0) return;
      delete o[t][e],
        o[t]._visualValues !== void 0 &&
          o[t]._visualValues[e] !== void 0 &&
          delete o[t]._visualValues[e];
    }
  }
}
var Zp = (n) => n === "reset" || n === "none",
  Zb = (n, i) => (i ? n : Object.assign({}, n)),
  OM = (n, i, e) =>
    n && !i.hidden && i._stacked && { keys: Iv(e, !0), values: null },
  kM = (() => {
    class n {
      static defaults = {};
      static datasetElementType = null;
      static dataElementType = null;
      constructor(e, t) {
        (this.chart = e),
          (this._ctx = e.ctx),
          (this.index = t),
          (this._cachedDataOpts = {}),
          (this._cachedMeta = this.getMeta()),
          (this._type = this._cachedMeta.type),
          (this.options = void 0),
          (this._parsing = !1),
          (this._data = void 0),
          (this._objectData = void 0),
          (this._sharedOptions = void 0),
          (this._drawStart = void 0),
          (this._drawCount = void 0),
          (this.enableOptionSharing = !1),
          (this.supportsDecimation = !1),
          (this.$context = void 0),
          (this._syncList = []),
          (this.datasetElementType = new.target.datasetElementType),
          (this.dataElementType = new.target.dataElementType),
          this.initialize();
      }
      initialize() {
        let e = this._cachedMeta;
        this.configure(),
          this.linkScales(),
          (e._stacked = Qp(e.vScale, e)),
          this.addElements(),
          this.options.fill &&
            !this.chart.isPluginEnabled("filler") &&
            console.warn(
              "Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options"
            );
      }
      updateIndex(e) {
        this.index !== e && Xs(this._cachedMeta), (this.index = e);
      }
      linkScales() {
        let e = this.chart,
          t = this._cachedMeta,
          r = this.getDataset(),
          o = (T, M, k, V) => (T === "x" ? M : T === "r" ? V : k),
          a = (t.xAxisID = $t(r.xAxisID, Xp(e, "x"))),
          l = (t.yAxisID = $t(r.yAxisID, Xp(e, "y"))),
          u = (t.rAxisID = $t(r.rAxisID, Xp(e, "r"))),
          f = t.indexAxis,
          v = (t.iAxisID = o(f, a, l, u)),
          D = (t.vAxisID = o(f, l, a, u));
        (t.xScale = this.getScaleForId(a)),
          (t.yScale = this.getScaleForId(l)),
          (t.rScale = this.getScaleForId(u)),
          (t.iScale = this.getScaleForId(v)),
          (t.vScale = this.getScaleForId(D));
      }
      getDataset() {
        return this.chart.data.datasets[this.index];
      }
      getMeta() {
        return this.chart.getDatasetMeta(this.index);
      }
      getScaleForId(e) {
        return this.chart.scales[e];
      }
      _getOtherScale(e) {
        let t = this._cachedMeta;
        return e === t.iScale ? t.vScale : t.iScale;
      }
      reset() {
        this._update("reset");
      }
      _destroy() {
        let e = this._cachedMeta;
        this._data && Np(this._data, this), e._stacked && Xs(e);
      }
      _dataCheck() {
        let e = this.getDataset(),
          t = e.data || (e.data = []),
          r = this._data;
        if (lt(t)) {
          let o = this._cachedMeta;
          this._data = wM(t, o);
        } else if (r !== t) {
          if (r) {
            Np(r, this);
            let o = this._cachedMeta;
            Xs(o), (o._parsed = []);
          }
          t && Object.isExtensible(t) && kb(t, this),
            (this._syncList = []),
            (this._data = t);
        }
      }
      addElements() {
        let e = this._cachedMeta;
        this._dataCheck(),
          this.datasetElementType &&
            (e.dataset = new this.datasetElementType());
      }
      buildOrUpdateElements(e) {
        let t = this._cachedMeta,
          r = this.getDataset(),
          o = !1;
        this._dataCheck();
        let a = t._stacked;
        (t._stacked = Qp(t.vScale, t)),
          t.stack !== r.stack && ((o = !0), Xs(t), (t.stack = r.stack)),
          this._resyncElements(e),
          (o || a !== t._stacked) &&
            (Xb(this, t._parsed), (t._stacked = Qp(t.vScale, t)));
      }
      configure() {
        let e = this.chart.config,
          t = e.datasetScopeKeys(this._type),
          r = e.getOptionScopes(this.getDataset(), t, !0);
        (this.options = e.createResolver(r, this.getContext())),
          (this._parsing = this.options.parsing),
          (this._cachedDataOpts = {});
      }
      parse(e, t) {
        let { _cachedMeta: r, _data: o } = this,
          { iScale: a, _stacked: l } = r,
          u = a.axis,
          f = e === 0 && t === o.length ? !0 : r._sorted,
          v = e > 0 && r._parsed[e - 1],
          D,
          T,
          M;
        if (this._parsing === !1) (r._parsed = o), (r._sorted = !0), (M = o);
        else {
          Wt(o[e])
            ? (M = this.parseArrayData(r, o, e, t))
            : lt(o[e])
            ? (M = this.parseObjectData(r, o, e, t))
            : (M = this.parsePrimitiveData(r, o, e, t));
          let k = () => T[u] === null || (v && T[u] < v[u]);
          for (D = 0; D < t; ++D)
            (r._parsed[D + e] = T = M[D]), f && (k() && (f = !1), (v = T));
          r._sorted = f;
        }
        l && Xb(this, M);
      }
      parsePrimitiveData(e, t, r, o) {
        let { iScale: a, vScale: l } = e,
          u = a.axis,
          f = l.axis,
          v = a.getLabels(),
          D = a === l,
          T = new Array(o),
          M,
          k,
          V;
        for (M = 0, k = o; M < k; ++M)
          (V = M + r),
            (T[M] = { [u]: D || a.parse(v[V], V), [f]: l.parse(t[V], V) });
        return T;
      }
      parseArrayData(e, t, r, o) {
        let { xScale: a, yScale: l } = e,
          u = new Array(o),
          f,
          v,
          D,
          T;
        for (f = 0, v = o; f < v; ++f)
          (D = f + r),
            (T = t[D]),
            (u[f] = { x: a.parse(T[0], D), y: l.parse(T[1], D) });
        return u;
      }
      parseObjectData(e, t, r, o) {
        let { xScale: a, yScale: l } = e,
          { xAxisKey: u = "x", yAxisKey: f = "y" } = this._parsing,
          v = new Array(o),
          D,
          T,
          M,
          k;
        for (D = 0, T = o; D < T; ++D)
          (M = D + r),
            (k = t[M]),
            (v[D] = { x: a.parse(zs(k, u), M), y: l.parse(zs(k, f), M) });
        return v;
      }
      getParsed(e) {
        return this._cachedMeta._parsed[e];
      }
      getDataElement(e) {
        return this._cachedMeta.data[e];
      }
      applyStack(e, t, r) {
        let o = this.chart,
          a = this._cachedMeta,
          l = t[e.axis],
          u = { keys: Iv(o, !0), values: t._stacks[e.axis]._visualValues };
        return Kb(u, l, a.index, { mode: r });
      }
      updateRangeFromParsed(e, t, r, o) {
        let a = r[t.axis],
          l = a === null ? NaN : a,
          u = o && r._stacks[t.axis];
        o && u && ((o.values = u), (l = Kb(o, a, this._cachedMeta.index))),
          (e.min = Math.min(e.min, l)),
          (e.max = Math.max(e.max, l));
      }
      getMinMax(e, t) {
        let r = this._cachedMeta,
          o = r._parsed,
          a = r._sorted && e === r.iScale,
          l = o.length,
          u = this._getOtherScale(e),
          f = OM(t, r, this.chart),
          v = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY },
          { min: D, max: T } = SM(u),
          M,
          k;
        function V() {
          k = o[M];
          let A = k[u.axis];
          return !di(k[e.axis]) || D > A || T < A;
        }
        for (
          M = 0;
          M < l && !(!V() && (this.updateRangeFromParsed(v, e, k, f), a));
          ++M
        );
        if (a) {
          for (M = l - 1; M >= 0; --M)
            if (!V()) {
              this.updateRangeFromParsed(v, e, k, f);
              break;
            }
        }
        return v;
      }
      getAllParsedValues(e) {
        let t = this._cachedMeta._parsed,
          r = [],
          o,
          a,
          l;
        for (o = 0, a = t.length; o < a; ++o)
          (l = t[o][e.axis]), di(l) && r.push(l);
        return r;
      }
      getMaxOverflow() {
        return !1;
      }
      getLabelAndValue(e) {
        let t = this._cachedMeta,
          r = t.iScale,
          o = t.vScale,
          a = this.getParsed(e);
        return {
          label: r ? "" + r.getLabelForValue(a[r.axis]) : "",
          value: o ? "" + o.getLabelForValue(a[o.axis]) : "",
        };
      }
      _update(e) {
        let t = this._cachedMeta;
        this.update(e || "default"),
          (t._clip = CM(
            $t(this.options.clip, xM(t.xScale, t.yScale, this.getMaxOverflow()))
          ));
      }
      update(e) {}
      draw() {
        let e = this._ctx,
          t = this.chart,
          r = this._cachedMeta,
          o = r.data || [],
          a = t.chartArea,
          l = [],
          u = this._drawStart || 0,
          f = this._drawCount || o.length - u,
          v = this.options.drawActiveElementsOnTop,
          D;
        for (r.dataset && r.dataset.draw(e, a, u, f), D = u; D < u + f; ++D) {
          let T = o[D];
          T.hidden || (T.active && v ? l.push(T) : T.draw(e, a));
        }
        for (D = 0; D < l.length; ++D) l[D].draw(e, a);
      }
      getStyle(e, t) {
        let r = t ? "active" : "default";
        return e === void 0 && this._cachedMeta.dataset
          ? this.resolveDatasetElementOptions(r)
          : this.resolveDataElementOptions(e || 0, r);
      }
      getContext(e, t, r) {
        let o = this.getDataset(),
          a;
        if (e >= 0 && e < this._cachedMeta.data.length) {
          let l = this._cachedMeta.data[e];
          (a = l.$context || (l.$context = EM(this.getContext(), e, l))),
            (a.parsed = this.getParsed(e)),
            (a.raw = o.data[e]),
            (a.index = a.dataIndex = e);
        } else
          (a =
            this.$context ||
            (this.$context = TM(this.chart.getContext(), this.index))),
            (a.dataset = o),
            (a.index = a.datasetIndex = this.index);
        return (a.active = !!t), (a.mode = r), a;
      }
      resolveDatasetElementOptions(e) {
        return this._resolveElementOptions(this.datasetElementType.id, e);
      }
      resolveDataElementOptions(e, t) {
        return this._resolveElementOptions(this.dataElementType.id, t, e);
      }
      _resolveElementOptions(e, t = "default", r) {
        let o = t === "active",
          a = this._cachedDataOpts,
          l = e + "-" + t,
          u = a[l],
          f = this.enableOptionSharing && $s(r);
        if (u) return Zb(u, f);
        let v = this.chart.config,
          D = v.datasetElementScopeKeys(this._type, e),
          T = o ? [`${e}Hover`, "hover", e, ""] : [e, ""],
          M = v.getOptionScopes(this.getDataset(), D),
          k = Object.keys(Gt.elements[e]),
          V = () => this.getContext(r, o, t),
          A = v.resolveNamedOptions(M, k, V, T);
        return (
          A.$shared && ((A.$shared = f), (a[l] = Object.freeze(Zb(A, f)))), A
        );
      }
      _resolveAnimations(e, t, r) {
        let o = this.chart,
          a = this._cachedDataOpts,
          l = `animation-${t}`,
          u = a[l];
        if (u) return u;
        let f;
        if (o.options.animation !== !1) {
          let D = this.chart.config,
            T = D.datasetAnimationScopeKeys(this._type, t),
            M = D.getOptionScopes(this.getDataset(), T);
          f = D.createResolver(M, this.getContext(e, r, t));
        }
        let v = new rm(o, f && f.animations);
        return f && f._cacheable && (a[l] = Object.freeze(v)), v;
      }
      getSharedOptions(e) {
        if (e.$shared)
          return (
            this._sharedOptions || (this._sharedOptions = Object.assign({}, e))
          );
      }
      includeOptions(e, t) {
        return !t || Zp(e) || this.chart._animationsDisabled;
      }
      _getSharedOptions(e, t) {
        let r = this.resolveDataElementOptions(e, t),
          o = this._sharedOptions,
          a = this.getSharedOptions(r),
          l = this.includeOptions(t, a) || a !== o;
        return (
          this.updateSharedOptions(a, t, r),
          { sharedOptions: a, includeOptions: l }
        );
      }
      updateElement(e, t, r, o) {
        Zp(o)
          ? Object.assign(e, r)
          : this._resolveAnimations(t, o).update(e, r);
      }
      updateSharedOptions(e, t, r) {
        e && !Zp(t) && this._resolveAnimations(void 0, t).update(e, r);
      }
      _setStyle(e, t, r, o) {
        e.active = o;
        let a = this.getStyle(t, o);
        this._resolveAnimations(t, r, o).update(e, {
          options: (!o && this.getSharedOptions(a)) || a,
        });
      }
      removeHoverStyle(e, t, r) {
        this._setStyle(e, r, "active", !1);
      }
      setHoverStyle(e, t, r) {
        this._setStyle(e, r, "active", !0);
      }
      _removeDatasetHoverStyle() {
        let e = this._cachedMeta.dataset;
        e && this._setStyle(e, void 0, "active", !1);
      }
      _setDatasetHoverStyle() {
        let e = this._cachedMeta.dataset;
        e && this._setStyle(e, void 0, "active", !0);
      }
      _resyncElements(e) {
        let t = this._data,
          r = this._cachedMeta.data;
        for (let [u, f, v] of this._syncList) this[u](f, v);
        this._syncList = [];
        let o = r.length,
          a = t.length,
          l = Math.min(a, o);
        l && this.parse(0, l),
          a > o
            ? this._insertElements(o, a - o, e)
            : a < o && this._removeElements(a, o - a);
      }
      _insertElements(e, t, r = !0) {
        let o = this._cachedMeta,
          a = o.data,
          l = e + t,
          u,
          f = (v) => {
            for (v.length += t, u = v.length - 1; u >= l; u--) v[u] = v[u - t];
          };
        for (f(a), u = e; u < l; ++u) a[u] = new this.dataElementType();
        this._parsing && f(o._parsed),
          this.parse(e, t),
          r && this.updateElements(a, e, t, "reset");
      }
      updateElements(e, t, r, o) {}
      _removeElements(e, t) {
        let r = this._cachedMeta;
        if (this._parsing) {
          let o = r._parsed.splice(e, t);
          r._stacked && Xs(r, o);
        }
        r.data.splice(e, t);
      }
      _sync(e) {
        if (this._parsing) this._syncList.push(e);
        else {
          let [t, r, o] = e;
          this[t](r, o);
        }
        this.chart._dataChanges.push([this.index, ...e]);
      }
      _onDataPush() {
        let e = arguments.length;
        this._sync(["_insertElements", this.getDataset().data.length - e, e]);
      }
      _onDataPop() {
        this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1]);
      }
      _onDataShift() {
        this._sync(["_removeElements", 0, 1]);
      }
      _onDataSplice(e, t) {
        t && this._sync(["_removeElements", e, t]);
        let r = arguments.length - 2;
        r && this._sync(["_insertElements", e, r]);
      }
      _onDataUnshift() {
        this._sync(["_insertElements", 0, arguments.length]);
      }
    }
    return n;
  })();
function Co() {
  throw new Error(
    "This method is not implemented: Check that a complete date adapter is provided."
  );
}
var om = class n {
    static override(i) {
      Object.assign(n.prototype, i);
    }
    options;
    constructor(i) {
      this.options = i || {};
    }
    init() {}
    formats() {
      return Co();
    }
    parse() {
      return Co();
    }
    format() {
      return Co();
    }
    add() {
      return Co();
    }
    diff() {
      return Co();
    }
    startOf() {
      return Co();
    }
    endOf() {
      return Co();
    }
  },
  PM = { _date: om };
function IM(n, i, e, t) {
  let { controller: r, data: o, _sorted: a } = n,
    l = r._cachedMeta.iScale,
    u = n.dataset && n.dataset.options ? n.dataset.options.spanGaps : null;
  if (l && i === l.axis && i !== "r" && a && o.length) {
    let f = l._reversePixels ? Tb : od;
    if (t) {
      if (r._sharedOptions) {
        let v = o[0],
          D = typeof v.getRange == "function" && v.getRange(i);
        if (D) {
          let T = f(o, i, e - D),
            M = f(o, i, e + D);
          return { lo: T.lo, hi: M.hi };
        }
      }
    } else {
      let v = f(o, i, e);
      if (u) {
        let { vScale: D } = r._cachedMeta,
          { _parsed: T } = n,
          M = T.slice(0, v.lo + 1)
            .reverse()
            .findIndex((V) => !Et(V[D.axis]));
        v.lo -= Math.max(0, M);
        let k = T.slice(v.hi).findIndex((V) => !Et(V[D.axis]));
        v.hi += Math.max(0, k);
      }
      return v;
    }
  }
  return { lo: 0, hi: o.length - 1 };
}
function ol(n, i, e, t, r) {
  let o = n.getSortedVisibleDatasetMetas(),
    a = e[i];
  for (let l = 0, u = o.length; l < u; ++l) {
    let { index: f, data: v } = o[l],
      { lo: D, hi: T } = IM(o[l], i, a, r);
    for (let M = D; M <= T; ++M) {
      let k = v[M];
      k.skip || t(k, f, M);
    }
  }
}
function AM(n) {
  let i = n.indexOf("x") !== -1,
    e = n.indexOf("y") !== -1;
  return function (t, r) {
    let o = i ? Math.abs(t.x - r.x) : 0,
      a = e ? Math.abs(t.y - r.y) : 0;
    return Math.sqrt(Math.pow(o, 2) + Math.pow(a, 2));
  };
}
function Jp(n, i, e, t, r) {
  let o = [];
  return (
    (!r && !n.isPointInArea(i)) ||
      ol(
        n,
        e,
        i,
        function (l, u, f) {
          (!r && !vo(l, n.chartArea, 0)) ||
            (l.inRange(i.x, i.y, t) &&
              o.push({ element: l, datasetIndex: u, index: f }));
        },
        !0
      ),
    o
  );
}
function RM(n, i, e, t) {
  let r = [];
  function o(a, l, u) {
    let { startAngle: f, endAngle: v } = a.getProps(
        ["startAngle", "endAngle"],
        t
      ),
      { angle: D } = Db(a, { x: i.x, y: i.y });
    Sb(D, f, v) && r.push({ element: a, datasetIndex: l, index: u });
  }
  return ol(n, e, i, o), r;
}
function FM(n, i, e, t, r, o) {
  let a = [],
    l = AM(e),
    u = Number.POSITIVE_INFINITY;
  function f(v, D, T) {
    let M = v.inRange(i.x, i.y, r);
    if (t && !M) return;
    let k = v.getCenterPoint(r);
    if (!(!!o || n.isPointInArea(k)) && !M) return;
    let A = l(i, k);
    A < u
      ? ((a = [{ element: v, datasetIndex: D, index: T }]), (u = A))
      : A === u && a.push({ element: v, datasetIndex: D, index: T });
  }
  return ol(n, e, i, f), a;
}
function em(n, i, e, t, r, o) {
  return !o && !n.isPointInArea(i)
    ? []
    : e === "r" && !t
    ? RM(n, i, e, r)
    : FM(n, i, e, t, r, o);
}
function Jb(n, i, e, t, r) {
  let o = [],
    a = e === "x" ? "inXRange" : "inYRange",
    l = !1;
  return (
    ol(n, e, i, (u, f, v) => {
      u[a] &&
        u[a](i[e], r) &&
        (o.push({ element: u, datasetIndex: f, index: v }),
        (l = l || u.inRange(i.x, i.y, r)));
    }),
    t && !l ? [] : o
  );
}
var NM = {
    evaluateInteractionItems: ol,
    modes: {
      index(n, i, e, t) {
        let r = Gr(i, n),
          o = e.axis || "x",
          a = e.includeInvisible || !1,
          l = e.intersect ? Jp(n, r, o, t, a) : em(n, r, o, !1, t, a),
          u = [];
        return l.length
          ? (n.getSortedVisibleDatasetMetas().forEach((f) => {
              let v = l[0].index,
                D = f.data[v];
              D &&
                !D.skip &&
                u.push({ element: D, datasetIndex: f.index, index: v });
            }),
            u)
          : [];
      },
      dataset(n, i, e, t) {
        let r = Gr(i, n),
          o = e.axis || "xy",
          a = e.includeInvisible || !1,
          l = e.intersect ? Jp(n, r, o, t, a) : em(n, r, o, !1, t, a);
        if (l.length > 0) {
          let u = l[0].datasetIndex,
            f = n.getDatasetMeta(u).data;
          l = [];
          for (let v = 0; v < f.length; ++v)
            l.push({ element: f[v], datasetIndex: u, index: v });
        }
        return l;
      },
      point(n, i, e, t) {
        let r = Gr(i, n),
          o = e.axis || "xy",
          a = e.includeInvisible || !1;
        return Jp(n, r, o, t, a);
      },
      nearest(n, i, e, t) {
        let r = Gr(i, n),
          o = e.axis || "xy",
          a = e.includeInvisible || !1;
        return em(n, r, o, e.intersect, t, a);
      },
      x(n, i, e, t) {
        let r = Gr(i, n);
        return Jb(n, r, "x", e.intersect, t);
      },
      y(n, i, e, t) {
        let r = Gr(i, n);
        return Jb(n, r, "y", e.intersect, t);
      },
    },
  },
  Av = ["left", "top", "right", "bottom"];
function Zs(n, i) {
  return n.filter((e) => e.pos === i);
}
function ev(n, i) {
  return n.filter((e) => Av.indexOf(e.pos) === -1 && e.box.axis === i);
}
function Js(n, i) {
  return n.sort((e, t) => {
    let r = i ? t : e,
      o = i ? e : t;
    return r.weight === o.weight ? r.index - o.index : r.weight - o.weight;
  });
}
function LM(n) {
  let i = [],
    e,
    t,
    r,
    o,
    a,
    l;
  for (e = 0, t = (n || []).length; e < t; ++e)
    (r = n[e]),
      ({
        position: o,
        options: { stack: a, stackWeight: l = 1 },
      } = r),
      i.push({
        index: e,
        box: r,
        pos: o,
        horizontal: r.isHorizontal(),
        weight: r.weight,
        stack: a && o + a,
        stackWeight: l,
      });
  return i;
}
function VM(n) {
  let i = {};
  for (let e of n) {
    let { stack: t, pos: r, stackWeight: o } = e;
    if (!t || !Av.includes(r)) continue;
    let a = i[t] || (i[t] = { count: 0, placed: 0, weight: 0, size: 0 });
    a.count++, (a.weight += o);
  }
  return i;
}
function BM(n, i) {
  let e = VM(n),
    { vBoxMaxWidth: t, hBoxMaxHeight: r } = i,
    o,
    a,
    l;
  for (o = 0, a = n.length; o < a; ++o) {
    l = n[o];
    let { fullSize: u } = l.box,
      f = e[l.stack],
      v = f && l.stackWeight / f.weight;
    l.horizontal
      ? ((l.width = v ? v * t : u && i.availableWidth), (l.height = r))
      : ((l.width = t), (l.height = v ? v * r : u && i.availableHeight));
  }
  return e;
}
function HM(n) {
  let i = LM(n),
    e = Js(
      i.filter((f) => f.box.fullSize),
      !0
    ),
    t = Js(Zs(i, "left"), !0),
    r = Js(Zs(i, "right")),
    o = Js(Zs(i, "top"), !0),
    a = Js(Zs(i, "bottom")),
    l = ev(i, "x"),
    u = ev(i, "y");
  return {
    fullSize: e,
    leftAndTop: t.concat(o),
    rightAndBottom: r.concat(u).concat(a).concat(l),
    chartArea: Zs(i, "chartArea"),
    vertical: t.concat(r).concat(u),
    horizontal: o.concat(a).concat(l),
  };
}
function tv(n, i, e, t) {
  return Math.max(n[e], i[e]) + Math.max(n[t], i[t]);
}
function Rv(n, i) {
  (n.top = Math.max(n.top, i.top)),
    (n.left = Math.max(n.left, i.left)),
    (n.bottom = Math.max(n.bottom, i.bottom)),
    (n.right = Math.max(n.right, i.right));
}
function jM(n, i, e, t) {
  let { pos: r, box: o } = e,
    a = n.maxPadding;
  if (!lt(r)) {
    e.size && (n[r] -= e.size);
    let D = t[e.stack] || { size: 0, count: 1 };
    (D.size = Math.max(D.size, e.horizontal ? o.height : o.width)),
      (e.size = D.size / D.count),
      (n[r] += e.size);
  }
  o.getPadding && Rv(a, o.getPadding());
  let l = Math.max(0, i.outerWidth - tv(a, n, "left", "right")),
    u = Math.max(0, i.outerHeight - tv(a, n, "top", "bottom")),
    f = l !== n.w,
    v = u !== n.h;
  return (
    (n.w = l),
    (n.h = u),
    e.horizontal ? { same: f, other: v } : { same: v, other: f }
  );
}
function UM(n) {
  let i = n.maxPadding;
  function e(t) {
    let r = Math.max(i[t] - n[t], 0);
    return (n[t] += r), r;
  }
  (n.y += e("top")), (n.x += e("left")), e("right"), e("bottom");
}
function zM(n, i) {
  let e = i.maxPadding;
  function t(r) {
    let o = { left: 0, top: 0, right: 0, bottom: 0 };
    return (
      r.forEach((a) => {
        o[a] = Math.max(i[a], e[a]);
      }),
      o
    );
  }
  return t(n ? ["left", "right"] : ["top", "bottom"]);
}
function il(n, i, e, t) {
  let r = [],
    o,
    a,
    l,
    u,
    f,
    v;
  for (o = 0, a = n.length, f = 0; o < a; ++o) {
    (l = n[o]),
      (u = l.box),
      u.update(l.width || i.w, l.height || i.h, zM(l.horizontal, i));
    let { same: D, other: T } = jM(i, e, l, t);
    (f |= D && r.length), (v = v || T), u.fullSize || r.push(l);
  }
  return (f && il(r, i, e, t)) || v;
}
function hd(n, i, e, t, r) {
  (n.top = e),
    (n.left = i),
    (n.right = i + t),
    (n.bottom = e + r),
    (n.width = t),
    (n.height = r);
}
function iv(n, i, e, t) {
  let r = e.padding,
    { x: o, y: a } = i;
  for (let l of n) {
    let u = l.box,
      f = t[l.stack] || { count: 1, placed: 0, weight: 1 },
      v = l.stackWeight / f.weight || 1;
    if (l.horizontal) {
      let D = i.w * v,
        T = f.size || u.height;
      $s(f.start) && (a = f.start),
        u.fullSize
          ? hd(u, r.left, a, e.outerWidth - r.right - r.left, T)
          : hd(u, i.left + f.placed, a, D, T),
        (f.start = a),
        (f.placed += D),
        (a = u.bottom);
    } else {
      let D = i.h * v,
        T = f.size || u.width;
      $s(f.start) && (o = f.start),
        u.fullSize
          ? hd(u, o, r.top, T, e.outerHeight - r.bottom - r.top)
          : hd(u, o, i.top + f.placed, T, D),
        (f.start = o),
        (f.placed += D),
        (o = u.right);
    }
  }
  (i.x = o), (i.y = a);
}
var pd = {
    addBox(n, i) {
      n.boxes || (n.boxes = []),
        (i.fullSize = i.fullSize || !1),
        (i.position = i.position || "top"),
        (i.weight = i.weight || 0),
        (i._layers =
          i._layers ||
          function () {
            return [
              {
                z: 0,
                draw(e) {
                  i.draw(e);
                },
              },
            ];
          }),
        n.boxes.push(i);
    },
    removeBox(n, i) {
      let e = n.boxes ? n.boxes.indexOf(i) : -1;
      e !== -1 && n.boxes.splice(e, 1);
    },
    configure(n, i, e) {
      (i.fullSize = e.fullSize),
        (i.position = e.position),
        (i.weight = e.weight);
    },
    update(n, i, e, t) {
      if (!n) return;
      let r = Zn(n.options.layout.padding),
        o = Math.max(i - r.width, 0),
        a = Math.max(e - r.height, 0),
        l = HM(n.boxes),
        u = l.vertical,
        f = l.horizontal;
      bi(n.boxes, (V) => {
        typeof V.beforeLayout == "function" && V.beforeLayout();
      });
      let v =
          u.reduce(
            (V, A) =>
              A.box.options && A.box.options.display === !1 ? V : V + 1,
            0
          ) || 1,
        D = Object.freeze({
          outerWidth: i,
          outerHeight: e,
          padding: r,
          availableWidth: o,
          availableHeight: a,
          vBoxMaxWidth: o / 2 / v,
          hBoxMaxHeight: a / 2,
        }),
        T = Object.assign({}, r);
      Rv(T, Zn(t));
      let M = Object.assign(
          { maxPadding: T, w: o, h: a, x: r.left, y: r.top },
          r
        ),
        k = BM(u.concat(f), D);
      il(l.fullSize, M, D, k),
        il(u, M, D, k),
        il(f, M, D, k) && il(u, M, D, k),
        UM(M),
        iv(l.leftAndTop, M, D, k),
        (M.x += M.w),
        (M.y += M.h),
        iv(l.rightAndBottom, M, D, k),
        (n.chartArea = {
          left: M.left,
          top: M.top,
          right: M.left + M.w,
          bottom: M.top + M.h,
          height: M.h,
          width: M.w,
        }),
        bi(l.chartArea, (V) => {
          let A = V.box;
          Object.assign(A, n.chartArea),
            A.update(M.w, M.h, { left: 0, top: 0, right: 0, bottom: 0 });
        });
    },
  },
  vd = class {
    acquireContext(i, e) {}
    releaseContext(i) {
      return !1;
    }
    addEventListener(i, e, t) {}
    removeEventListener(i, e, t) {}
    getDevicePixelRatio() {
      return 1;
    }
    getMaximumSize(i, e, t, r) {
      return (
        (e = Math.max(0, e || i.width)),
        (t = t || i.height),
        { width: e, height: Math.max(0, r ? Math.floor(e / r) : t) }
      );
    }
    isAttached(i) {
      return !0;
    }
    updateConfig(i) {}
  },
  am = class extends vd {
    acquireContext(i) {
      return (i && i.getContext && i.getContext("2d")) || null;
    }
    updateConfig(i) {
      i.options.animation = !1;
    }
  },
  _d = "$chartjs",
  $M = {
    touchstart: "mousedown",
    touchmove: "mousemove",
    touchend: "mouseup",
    pointerenter: "mouseenter",
    pointerdown: "mousedown",
    pointermove: "mousemove",
    pointerup: "mouseup",
    pointerleave: "mouseout",
    pointerout: "mouseout",
  },
  nv = (n) => n === null || n === "";
function WM(n, i) {
  let e = n.style,
    t = n.getAttribute("height"),
    r = n.getAttribute("width");
  if (
    ((n[_d] = {
      initial: {
        height: t,
        width: r,
        style: { display: e.display, height: e.height, width: e.width },
      },
    }),
    (e.display = e.display || "block"),
    (e.boxSizing = e.boxSizing || "border-box"),
    nv(r))
  ) {
    let o = Kp(n, "width");
    o !== void 0 && (n.width = o);
  }
  if (nv(t))
    if (n.style.height === "") n.height = n.width / (i || 2);
    else {
      let o = Kp(n, "height");
      o !== void 0 && (n.height = o);
    }
  return n;
}
var Fv = Wb ? { passive: !0 } : !1;
function GM(n, i, e) {
  n && n.addEventListener(i, e, Fv);
}
function YM(n, i, e) {
  n && n.canvas && n.canvas.removeEventListener(i, e, Fv);
}
function qM(n, i) {
  let e = $M[n.type] || n.type,
    { x: t, y: r } = Gr(n, i);
  return {
    type: e,
    chart: i,
    native: n,
    x: t !== void 0 ? t : null,
    y: r !== void 0 ? r : null,
  };
}
function yd(n, i) {
  for (let e of n) if (e === i || e.contains(i)) return !0;
}
function KM(n, i, e) {
  let t = n.canvas,
    r = new MutationObserver((o) => {
      let a = !1;
      for (let l of o)
        (a = a || yd(l.addedNodes, t)), (a = a && !yd(l.removedNodes, t));
      a && e();
    });
  return r.observe(document, { childList: !0, subtree: !0 }), r;
}
function QM(n, i, e) {
  let t = n.canvas,
    r = new MutationObserver((o) => {
      let a = !1;
      for (let l of o)
        (a = a || yd(l.removedNodes, t)), (a = a && !yd(l.addedNodes, t));
      a && e();
    });
  return r.observe(document, { childList: !0, subtree: !0 }), r;
}
var nl = new Map(),
  rv = 0;
function Nv() {
  let n = window.devicePixelRatio;
  n !== rv &&
    ((rv = n),
    nl.forEach((i, e) => {
      e.currentDevicePixelRatio !== n && i();
    }));
}
function XM(n, i) {
  nl.size || window.addEventListener("resize", Nv), nl.set(n, i);
}
function ZM(n) {
  nl.delete(n), nl.size || window.removeEventListener("resize", Nv);
}
function JM(n, i, e) {
  let t = n.canvas,
    r = t && dd(t);
  if (!r) return;
  let o = Vp((l, u) => {
      let f = r.clientWidth;
      e(l, u), f < r.clientWidth && e();
    }, window),
    a = new ResizeObserver((l) => {
      let u = l[0],
        f = u.contentRect.width,
        v = u.contentRect.height;
      (f === 0 && v === 0) || o(f, v);
    });
  return a.observe(r), XM(n, o), a;
}
function tm(n, i, e) {
  e && e.disconnect(), i === "resize" && ZM(n);
}
function e2(n, i, e) {
  let t = n.canvas,
    r = Vp((o) => {
      n.ctx !== null && e(qM(o, n));
    }, n);
  return GM(t, i, r), r;
}
var sm = class extends vd {
  acquireContext(i, e) {
    let t = i && i.getContext && i.getContext("2d");
    return t && t.canvas === i ? (WM(i, e), t) : null;
  }
  releaseContext(i) {
    let e = i.canvas;
    if (!e[_d]) return !1;
    let t = e[_d].initial;
    ["height", "width"].forEach((o) => {
      let a = t[o];
      Et(a) ? e.removeAttribute(o) : e.setAttribute(o, a);
    });
    let r = t.style || {};
    return (
      Object.keys(r).forEach((o) => {
        e.style[o] = r[o];
      }),
      (e.width = e.width),
      delete e[_d],
      !0
    );
  }
  addEventListener(i, e, t) {
    this.removeEventListener(i, e);
    let r = i.$proxies || (i.$proxies = {}),
      a = { attach: KM, detach: QM, resize: JM }[e] || e2;
    r[e] = a(i, e, t);
  }
  removeEventListener(i, e) {
    let t = i.$proxies || (i.$proxies = {}),
      r = t[e];
    if (!r) return;
    (({ attach: tm, detach: tm, resize: tm })[e] || YM)(i, e, r),
      (t[e] = void 0);
  }
  getDevicePixelRatio() {
    return window.devicePixelRatio;
  }
  getMaximumSize(i, e, t, r) {
    return $b(i, e, t, r);
  }
  isAttached(i) {
    let e = i && dd(i);
    return !!(e && e.isConnected);
  }
};
function t2(n) {
  return !cd() || (typeof OffscreenCanvas < "u" && n instanceof OffscreenCanvas)
    ? am
    : sm;
}
var xd = class {
  static defaults = {};
  static defaultRoutes = void 0;
  x;
  y;
  active = !1;
  options;
  $animations;
  tooltipPosition(i) {
    let { x: e, y: t } = this.getProps(["x", "y"], i);
    return { x: e, y: t };
  }
  hasValue() {
    return Ys(this.x) && Ys(this.y);
  }
  getProps(i, e) {
    let t = this.$animations;
    if (!e || !t) return this;
    let r = {};
    return (
      i.forEach((o) => {
        r[o] = t[o] && t[o].active() ? t[o]._to : this[o];
      }),
      r
    );
  }
};
function i2(n, i) {
  let e = n.options.ticks,
    t = n2(n),
    r = Math.min(e.maxTicksLimit || t, t),
    o = e.major.enabled ? o2(i) : [],
    a = o.length,
    l = o[0],
    u = o[a - 1],
    f = [];
  if (a > r) return a2(i, f, o, a / r), f;
  let v = r2(o, i, r);
  if (a > 0) {
    let D,
      T,
      M = a > 1 ? Math.round((u - l) / (a - 1)) : null;
    for (md(i, f, v, Et(M) ? 0 : l - M, l), D = 0, T = a - 1; D < T; D++)
      md(i, f, v, o[D], o[D + 1]);
    return md(i, f, v, u, Et(M) ? i.length : u + M), f;
  }
  return md(i, f, v), f;
}
function n2(n) {
  let i = n.options.offset,
    e = n._tickSize(),
    t = n._length / e + (i ? 0 : 1),
    r = n._maxLength / e;
  return Math.floor(Math.min(t, r));
}
function r2(n, i, e) {
  let t = s2(n),
    r = i.length / e;
  if (!t) return Math.max(r, 1);
  let o = Cb(t);
  for (let a = 0, l = o.length - 1; a < l; a++) {
    let u = o[a];
    if (u > r) return u;
  }
  return Math.max(r, 1);
}
function o2(n) {
  let i = [],
    e,
    t;
  for (e = 0, t = n.length; e < t; e++) n[e].major && i.push(e);
  return i;
}
function a2(n, i, e, t) {
  let r = 0,
    o = e[0],
    a;
  for (t = Math.ceil(t), a = 0; a < n.length; a++)
    a === o && (i.push(n[a]), r++, (o = e[r * t]));
}
function md(n, i, e, t, r) {
  let o = $t(t, 0),
    a = Math.min($t(r, n.length), n.length),
    l = 0,
    u,
    f,
    v;
  for (
    e = Math.ceil(e), r && ((u = r - t), (e = u / Math.floor(u / e))), v = o;
    v < 0;

  )
    l++, (v = Math.round(o + l * e));
  for (f = Math.max(o, 0); f < a; f++)
    f === v && (i.push(n[f]), l++, (v = Math.round(o + l * e)));
}
function s2(n) {
  let i = n.length,
    e,
    t;
  if (i < 2) return !1;
  for (t = n[0], e = 1; e < i; ++e) if (n[e] - n[e - 1] !== t) return !1;
  return t;
}
var l2 = (n) => (n === "left" ? "right" : n === "right" ? "left" : n),
  ov = (n, i, e) => (i === "top" || i === "left" ? n[i] + e : n[i] - e),
  av = (n, i) => Math.min(i || n, n);
function sv(n, i) {
  let e = [],
    t = n.length / i,
    r = n.length,
    o = 0;
  for (; o < r; o += t) e.push(n[Math.floor(o)]);
  return e;
}
function c2(n, i, e) {
  let t = n.ticks.length,
    r = Math.min(i, t - 1),
    o = n._startPixel,
    a = n._endPixel,
    l = 1e-6,
    u = n.getPixelForTick(r),
    f;
  if (
    !(
      e &&
      (t === 1
        ? (f = Math.max(u - o, a - u))
        : i === 0
        ? (f = (n.getPixelForTick(1) - u) / 2)
        : (f = (u - n.getPixelForTick(r - 1)) / 2),
      (u += r < i ? f : -f),
      u < o - l || u > a + l)
    )
  )
    return u;
}
function d2(n, i) {
  bi(n, (e) => {
    let t = e.gc,
      r = t.length / 2,
      o;
    if (r > i) {
      for (o = 0; o < r; ++o) delete e.data[t[o]];
      t.splice(0, r);
    }
  });
}
function el(n) {
  return n.drawTicks ? n.tickLength : 0;
}
function lv(n, i) {
  if (!n.display) return 0;
  let e = yo(n.font, i),
    t = Zn(n.padding);
  return (Wt(n.text) ? n.text.length : 1) * e.lineHeight + t.height;
}
function u2(n, i) {
  return xo(n, { scale: i, type: "scale" });
}
function h2(n, i, e) {
  return xo(n, { tick: e, index: i, type: "tick" });
}
function p2(n, i, e) {
  let t = Ab(n);
  return ((e && i !== "right") || (!e && i === "right")) && (t = l2(t)), t;
}
function m2(n, i, e, t) {
  let { top: r, left: o, bottom: a, right: l, chart: u } = n,
    { chartArea: f, scales: v } = u,
    D = 0,
    T,
    M,
    k,
    V = a - r,
    A = l - o;
  if (n.isHorizontal()) {
    if (((M = Bp(t, o, l)), lt(e))) {
      let E = Object.keys(e)[0],
        X = e[E];
      k = v[E].getPixelForValue(X) + V - i;
    } else
      e === "center" ? (k = (f.bottom + f.top) / 2 + V - i) : (k = ov(n, e, i));
    T = l - o;
  } else {
    if (lt(e)) {
      let E = Object.keys(e)[0],
        X = e[E];
      M = v[E].getPixelForValue(X) - A + i;
    } else
      e === "center" ? (M = (f.left + f.right) / 2 - A + i) : (M = ov(n, e, i));
    (k = Bp(t, a, r)), (D = e === "left" ? -Xn : Xn);
  }
  return { titleX: M, titleY: k, maxWidth: T, rotation: D };
}
var _a = class n extends xd {
    constructor(i) {
      super(),
        (this.id = i.id),
        (this.type = i.type),
        (this.options = void 0),
        (this.ctx = i.ctx),
        (this.chart = i.chart),
        (this.top = void 0),
        (this.bottom = void 0),
        (this.left = void 0),
        (this.right = void 0),
        (this.width = void 0),
        (this.height = void 0),
        (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
        (this.maxWidth = void 0),
        (this.maxHeight = void 0),
        (this.paddingTop = void 0),
        (this.paddingBottom = void 0),
        (this.paddingLeft = void 0),
        (this.paddingRight = void 0),
        (this.axis = void 0),
        (this.labelRotation = void 0),
        (this.min = void 0),
        (this.max = void 0),
        (this._range = void 0),
        (this.ticks = []),
        (this._gridLineItems = null),
        (this._labelItems = null),
        (this._labelSizes = null),
        (this._length = 0),
        (this._maxLength = 0),
        (this._longestTextCache = {}),
        (this._startPixel = void 0),
        (this._endPixel = void 0),
        (this._reversePixels = !1),
        (this._userMax = void 0),
        (this._userMin = void 0),
        (this._suggestedMax = void 0),
        (this._suggestedMin = void 0),
        (this._ticksLength = 0),
        (this._borderValue = 0),
        (this._cache = {}),
        (this._dataLimitsCached = !1),
        (this.$context = void 0);
    }
    init(i) {
      (this.options = i.setContext(this.getContext())),
        (this.axis = i.axis),
        (this._userMin = this.parse(i.min)),
        (this._userMax = this.parse(i.max)),
        (this._suggestedMin = this.parse(i.suggestedMin)),
        (this._suggestedMax = this.parse(i.suggestedMax));
    }
    parse(i, e) {
      return i;
    }
    getUserBounds() {
      let {
        _userMin: i,
        _userMax: e,
        _suggestedMin: t,
        _suggestedMax: r,
      } = this;
      return (
        (i = Hi(i, Number.POSITIVE_INFINITY)),
        (e = Hi(e, Number.NEGATIVE_INFINITY)),
        (t = Hi(t, Number.POSITIVE_INFINITY)),
        (r = Hi(r, Number.NEGATIVE_INFINITY)),
        { min: Hi(i, t), max: Hi(e, r), minDefined: di(i), maxDefined: di(e) }
      );
    }
    getMinMax(i) {
      let {
          min: e,
          max: t,
          minDefined: r,
          maxDefined: o,
        } = this.getUserBounds(),
        a;
      if (r && o) return { min: e, max: t };
      let l = this.getMatchingVisibleMetas();
      for (let u = 0, f = l.length; u < f; ++u)
        (a = l[u].controller.getMinMax(this, i)),
          r || (e = Math.min(e, a.min)),
          o || (t = Math.max(t, a.max));
      return (
        (e = o && e > t ? t : e),
        (t = r && e > t ? e : t),
        { min: Hi(e, Hi(t, e)), max: Hi(t, Hi(e, t)) }
      );
    }
    getPadding() {
      return {
        left: this.paddingLeft || 0,
        top: this.paddingTop || 0,
        right: this.paddingRight || 0,
        bottom: this.paddingBottom || 0,
      };
    }
    getTicks() {
      return this.ticks;
    }
    getLabels() {
      let i = this.chart.data;
      return (
        this.options.labels ||
        (this.isHorizontal() ? i.xLabels : i.yLabels) ||
        i.labels ||
        []
      );
    }
    getLabelItems(i = this.chart.chartArea) {
      return (
        this._labelItems || (this._labelItems = this._computeLabelItems(i))
      );
    }
    beforeLayout() {
      (this._cache = {}), (this._dataLimitsCached = !1);
    }
    beforeUpdate() {
      Ht(this.options.beforeUpdate, [this]);
    }
    update(i, e, t) {
      let { beginAtZero: r, grace: o, ticks: a } = this.options,
        l = a.sampleSize;
      this.beforeUpdate(),
        (this.maxWidth = i),
        (this.maxHeight = e),
        (this._margins = t =
          Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, t)),
        (this.ticks = null),
        (this._labelSizes = null),
        (this._gridLineItems = null),
        (this._labelItems = null),
        this.beforeSetDimensions(),
        this.setDimensions(),
        this.afterSetDimensions(),
        (this._maxLength = this.isHorizontal()
          ? this.width + t.left + t.right
          : this.height + t.top + t.bottom),
        this._dataLimitsCached ||
          (this.beforeDataLimits(),
          this.determineDataLimits(),
          this.afterDataLimits(),
          (this._range = Hb(this, o, r)),
          (this._dataLimitsCached = !0)),
        this.beforeBuildTicks(),
        (this.ticks = this.buildTicks() || []),
        this.afterBuildTicks();
      let u = l < this.ticks.length;
      this._convertTicksToLabels(u ? sv(this.ticks, l) : this.ticks),
        this.configure(),
        this.beforeCalculateLabelRotation(),
        this.calculateLabelRotation(),
        this.afterCalculateLabelRotation(),
        a.display &&
          (a.autoSkip || a.source === "auto") &&
          ((this.ticks = i2(this, this.ticks)),
          (this._labelSizes = null),
          this.afterAutoSkip()),
        u && this._convertTicksToLabels(this.ticks),
        this.beforeFit(),
        this.fit(),
        this.afterFit(),
        this.afterUpdate();
    }
    configure() {
      let i = this.options.reverse,
        e,
        t;
      this.isHorizontal()
        ? ((e = this.left), (t = this.right))
        : ((e = this.top), (t = this.bottom), (i = !i)),
        (this._startPixel = e),
        (this._endPixel = t),
        (this._reversePixels = i),
        (this._length = t - e),
        (this._alignToPixels = this.options.alignToPixels);
    }
    afterUpdate() {
      Ht(this.options.afterUpdate, [this]);
    }
    beforeSetDimensions() {
      Ht(this.options.beforeSetDimensions, [this]);
    }
    setDimensions() {
      this.isHorizontal()
        ? ((this.width = this.maxWidth),
          (this.left = 0),
          (this.right = this.width))
        : ((this.height = this.maxHeight),
          (this.top = 0),
          (this.bottom = this.height)),
        (this.paddingLeft = 0),
        (this.paddingTop = 0),
        (this.paddingRight = 0),
        (this.paddingBottom = 0);
    }
    afterSetDimensions() {
      Ht(this.options.afterSetDimensions, [this]);
    }
    _callHooks(i) {
      this.chart.notifyPlugins(i, this.getContext()),
        Ht(this.options[i], [this]);
    }
    beforeDataLimits() {
      this._callHooks("beforeDataLimits");
    }
    determineDataLimits() {}
    afterDataLimits() {
      this._callHooks("afterDataLimits");
    }
    beforeBuildTicks() {
      this._callHooks("beforeBuildTicks");
    }
    buildTicks() {
      return [];
    }
    afterBuildTicks() {
      this._callHooks("afterBuildTicks");
    }
    beforeTickToLabelConversion() {
      Ht(this.options.beforeTickToLabelConversion, [this]);
    }
    generateTickLabels(i) {
      let e = this.options.ticks,
        t,
        r,
        o;
      for (t = 0, r = i.length; t < r; t++)
        (o = i[t]), (o.label = Ht(e.callback, [o.value, t, i], this));
    }
    afterTickToLabelConversion() {
      Ht(this.options.afterTickToLabelConversion, [this]);
    }
    beforeCalculateLabelRotation() {
      Ht(this.options.beforeCalculateLabelRotation, [this]);
    }
    calculateLabelRotation() {
      let i = this.options,
        e = i.ticks,
        t = av(this.ticks.length, i.ticks.maxTicksLimit),
        r = e.minRotation || 0,
        o = e.maxRotation,
        a = r,
        l,
        u,
        f;
      if (
        !this._isVisible() ||
        !e.display ||
        r >= o ||
        t <= 1 ||
        !this.isHorizontal()
      ) {
        this.labelRotation = r;
        return;
      }
      let v = this._getLabelSizes(),
        D = v.widest.width,
        T = v.highest.height,
        M = zr(this.chart.width - D, 0, this.maxWidth);
      (l = i.offset ? this.maxWidth / t : M / (t - 1)),
        D + 6 > l &&
          ((l = M / (t - (i.offset ? 0.5 : 1))),
          (u =
            this.maxHeight -
            el(i.grid) -
            e.padding -
            lv(i.title, this.chart.options.font)),
          (f = Math.sqrt(D * D + T * T)),
          (a = nd(
            Math.min(
              Math.asin(zr((v.highest.height + 6) / l, -1, 1)),
              Math.asin(zr(u / f, -1, 1)) - Math.asin(zr(T / f, -1, 1))
            )
          )),
          (a = Math.max(r, Math.min(o, a)))),
        (this.labelRotation = a);
    }
    afterCalculateLabelRotation() {
      Ht(this.options.afterCalculateLabelRotation, [this]);
    }
    afterAutoSkip() {}
    beforeFit() {
      Ht(this.options.beforeFit, [this]);
    }
    fit() {
      let i = { width: 0, height: 0 },
        {
          chart: e,
          options: { ticks: t, title: r, grid: o },
        } = this,
        a = this._isVisible(),
        l = this.isHorizontal();
      if (a) {
        let u = lv(r, e.options.font);
        if (
          (l
            ? ((i.width = this.maxWidth), (i.height = el(o) + u))
            : ((i.height = this.maxHeight), (i.width = el(o) + u)),
          t.display && this.ticks.length)
        ) {
          let {
              first: f,
              last: v,
              widest: D,
              highest: T,
            } = this._getLabelSizes(),
            M = t.padding * 2,
            k = vr(this.labelRotation),
            V = Math.cos(k),
            A = Math.sin(k);
          if (l) {
            let E = t.mirror ? 0 : A * D.width + V * T.height;
            i.height = Math.min(this.maxHeight, i.height + E + M);
          } else {
            let E = t.mirror ? 0 : V * D.width + A * T.height;
            i.width = Math.min(this.maxWidth, i.width + E + M);
          }
          this._calculatePadding(f, v, A, V);
        }
      }
      this._handleMargins(),
        l
          ? ((this.width = this._length =
              e.width - this._margins.left - this._margins.right),
            (this.height = i.height))
          : ((this.width = i.width),
            (this.height = this._length =
              e.height - this._margins.top - this._margins.bottom));
    }
    _calculatePadding(i, e, t, r) {
      let {
          ticks: { align: o, padding: a },
          position: l,
        } = this.options,
        u = this.labelRotation !== 0,
        f = l !== "top" && this.axis === "x";
      if (this.isHorizontal()) {
        let v = this.getPixelForTick(0) - this.left,
          D = this.right - this.getPixelForTick(this.ticks.length - 1),
          T = 0,
          M = 0;
        u
          ? f
            ? ((T = r * i.width), (M = t * e.height))
            : ((T = t * i.height), (M = r * e.width))
          : o === "start"
          ? (M = e.width)
          : o === "end"
          ? (T = i.width)
          : o !== "inner" && ((T = i.width / 2), (M = e.width / 2)),
          (this.paddingLeft = Math.max(
            ((T - v + a) * this.width) / (this.width - v),
            0
          )),
          (this.paddingRight = Math.max(
            ((M - D + a) * this.width) / (this.width - D),
            0
          ));
      } else {
        let v = e.height / 2,
          D = i.height / 2;
        o === "start"
          ? ((v = 0), (D = i.height))
          : o === "end" && ((v = e.height), (D = 0)),
          (this.paddingTop = v + a),
          (this.paddingBottom = D + a);
      }
    }
    _handleMargins() {
      this._margins &&
        ((this._margins.left = Math.max(this.paddingLeft, this._margins.left)),
        (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
        (this._margins.right = Math.max(
          this.paddingRight,
          this._margins.right
        )),
        (this._margins.bottom = Math.max(
          this.paddingBottom,
          this._margins.bottom
        )));
    }
    afterFit() {
      Ht(this.options.afterFit, [this]);
    }
    isHorizontal() {
      let { axis: i, position: e } = this.options;
      return e === "top" || e === "bottom" || i === "x";
    }
    isFullSize() {
      return this.options.fullSize;
    }
    _convertTicksToLabels(i) {
      this.beforeTickToLabelConversion(), this.generateTickLabels(i);
      let e, t;
      for (e = 0, t = i.length; e < t; e++)
        Et(i[e].label) && (i.splice(e, 1), t--, e--);
      this.afterTickToLabelConversion();
    }
    _getLabelSizes() {
      let i = this._labelSizes;
      if (!i) {
        let e = this.options.ticks.sampleSize,
          t = this.ticks;
        e < t.length && (t = sv(t, e)),
          (this._labelSizes = i =
            this._computeLabelSizes(
              t,
              t.length,
              this.options.ticks.maxTicksLimit
            ));
      }
      return i;
    }
    _computeLabelSizes(i, e, t) {
      let { ctx: r, _longestTextCache: o } = this,
        a = [],
        l = [],
        u = Math.floor(e / av(e, t)),
        f = 0,
        v = 0,
        D,
        T,
        M,
        k,
        V,
        A,
        E,
        X,
        se,
        be,
        Ee;
      for (D = 0; D < e; D += u) {
        if (
          ((k = i[D].label),
          (V = this._resolveTickFontOptions(D)),
          (r.font = A = V.string),
          (E = o[A] = o[A] || { data: {}, gc: [] }),
          (X = V.lineHeight),
          (se = be = 0),
          !Et(k) && !Wt(k))
        )
          (se = Us(r, E.data, E.gc, se, k)), (be = X);
        else if (Wt(k))
          for (T = 0, M = k.length; T < M; ++T)
            (Ee = k[T]),
              !Et(Ee) &&
                !Wt(Ee) &&
                ((se = Us(r, E.data, E.gc, se, Ee)), (be += X));
        a.push(se), l.push(be), (f = Math.max(se, f)), (v = Math.max(be, v));
      }
      d2(o, e);
      let _ = a.indexOf(f),
        He = l.indexOf(v),
        De = (We) => ({ width: a[We] || 0, height: l[We] || 0 });
      return {
        first: De(0),
        last: De(e - 1),
        widest: De(_),
        highest: De(He),
        widths: a,
        heights: l,
      };
    }
    getLabelForValue(i) {
      return i;
    }
    getPixelForValue(i, e) {
      return NaN;
    }
    getValueForPixel(i) {}
    getPixelForTick(i) {
      let e = this.ticks;
      return i < 0 || i > e.length - 1
        ? null
        : this.getPixelForValue(e[i].value);
    }
    getPixelForDecimal(i) {
      this._reversePixels && (i = 1 - i);
      let e = this._startPixel + i * this._length;
      return Mb(this._alignToPixels ? Wr(this.chart, e, 0) : e);
    }
    getDecimalForPixel(i) {
      let e = (i - this._startPixel) / this._length;
      return this._reversePixels ? 1 - e : e;
    }
    getBasePixel() {
      return this.getPixelForValue(this.getBaseValue());
    }
    getBaseValue() {
      let { min: i, max: e } = this;
      return i < 0 && e < 0 ? e : i > 0 && e > 0 ? i : 0;
    }
    getContext(i) {
      let e = this.ticks || [];
      if (i >= 0 && i < e.length) {
        let t = e[i];
        return t.$context || (t.$context = h2(this.getContext(), i, t));
      }
      return (
        this.$context || (this.$context = u2(this.chart.getContext(), this))
      );
    }
    _tickSize() {
      let i = this.options.ticks,
        e = vr(this.labelRotation),
        t = Math.abs(Math.cos(e)),
        r = Math.abs(Math.sin(e)),
        o = this._getLabelSizes(),
        a = i.autoSkipPadding || 0,
        l = o ? o.widest.width + a : 0,
        u = o ? o.highest.height + a : 0;
      return this.isHorizontal()
        ? u * t > l * r
          ? l / t
          : u / r
        : u * r < l * t
        ? u / t
        : l / r;
    }
    _isVisible() {
      let i = this.options.display;
      return i !== "auto" ? !!i : this.getMatchingVisibleMetas().length > 0;
    }
    _computeGridLineItems(i) {
      let e = this.axis,
        t = this.chart,
        r = this.options,
        { grid: o, position: a, border: l } = r,
        u = o.offset,
        f = this.isHorizontal(),
        D = this.ticks.length + (u ? 1 : 0),
        T = el(o),
        M = [],
        k = l.setContext(this.getContext()),
        V = k.display ? k.width : 0,
        A = V / 2,
        E = function (vt) {
          return Wr(t, vt, V);
        },
        X,
        se,
        be,
        Ee,
        _,
        He,
        De,
        We,
        bt,
        qt,
        Le,
        vi;
      if (a === "top")
        (X = E(this.bottom)),
          (He = this.bottom - T),
          (We = X - A),
          (qt = E(i.top) + A),
          (vi = i.bottom);
      else if (a === "bottom")
        (X = E(this.top)),
          (qt = i.top),
          (vi = E(i.bottom) - A),
          (He = X + A),
          (We = this.top + T);
      else if (a === "left")
        (X = E(this.right)),
          (_ = this.right - T),
          (De = X - A),
          (bt = E(i.left) + A),
          (Le = i.right);
      else if (a === "right")
        (X = E(this.left)),
          (bt = i.left),
          (Le = E(i.right) - A),
          (_ = X + A),
          (De = this.left + T);
      else if (e === "x") {
        if (a === "center") X = E((i.top + i.bottom) / 2 + 0.5);
        else if (lt(a)) {
          let vt = Object.keys(a)[0],
            yi = a[vt];
          X = E(this.chart.scales[vt].getPixelForValue(yi));
        }
        (qt = i.top), (vi = i.bottom), (He = X + A), (We = He + T);
      } else if (e === "y") {
        if (a === "center") X = E((i.left + i.right) / 2);
        else if (lt(a)) {
          let vt = Object.keys(a)[0],
            yi = a[vt];
          X = E(this.chart.scales[vt].getPixelForValue(yi));
        }
        (_ = X - A), (De = _ - T), (bt = i.left), (Le = i.right);
      }
      let Pn = $t(r.ticks.maxTicksLimit, D),
        Ft = Math.max(1, Math.ceil(D / Pn));
      for (se = 0; se < D; se += Ft) {
        let vt = this.getContext(se),
          yi = o.setContext(vt),
          _n = l.setContext(vt),
          Qr = yi.lineWidth,
          ir = yi.color,
          Xr = _n.dash || [],
          In = _n.dashOffset,
          wr = yi.tickWidth,
          nr = yi.tickColor,
          Zr = yi.tickBorderDash || [],
          rr = yi.tickBorderDashOffset;
        (be = c2(this, se, u)),
          be !== void 0 &&
            ((Ee = Wr(t, be, Qr)),
            f ? (_ = De = bt = Le = Ee) : (He = We = qt = vi = Ee),
            M.push({
              tx1: _,
              ty1: He,
              tx2: De,
              ty2: We,
              x1: bt,
              y1: qt,
              x2: Le,
              y2: vi,
              width: Qr,
              color: ir,
              borderDash: Xr,
              borderDashOffset: In,
              tickWidth: wr,
              tickColor: nr,
              tickBorderDash: Zr,
              tickBorderDashOffset: rr,
            }));
      }
      return (this._ticksLength = D), (this._borderValue = X), M;
    }
    _computeLabelItems(i) {
      let e = this.axis,
        t = this.options,
        { position: r, ticks: o } = t,
        a = this.isHorizontal(),
        l = this.ticks,
        { align: u, crossAlign: f, padding: v, mirror: D } = o,
        T = el(t.grid),
        M = T + v,
        k = D ? -v : M,
        V = -vr(this.labelRotation),
        A = [],
        E,
        X,
        se,
        be,
        Ee,
        _,
        He,
        De,
        We,
        bt,
        qt,
        Le,
        vi = "middle";
      if (r === "top")
        (_ = this.bottom - k), (He = this._getXAxisLabelAlignment());
      else if (r === "bottom")
        (_ = this.top + k), (He = this._getXAxisLabelAlignment());
      else if (r === "left") {
        let Ft = this._getYAxisLabelAlignment(T);
        (He = Ft.textAlign), (Ee = Ft.x);
      } else if (r === "right") {
        let Ft = this._getYAxisLabelAlignment(T);
        (He = Ft.textAlign), (Ee = Ft.x);
      } else if (e === "x") {
        if (r === "center") _ = (i.top + i.bottom) / 2 + M;
        else if (lt(r)) {
          let Ft = Object.keys(r)[0],
            vt = r[Ft];
          _ = this.chart.scales[Ft].getPixelForValue(vt) + M;
        }
        He = this._getXAxisLabelAlignment();
      } else if (e === "y") {
        if (r === "center") Ee = (i.left + i.right) / 2 - M;
        else if (lt(r)) {
          let Ft = Object.keys(r)[0],
            vt = r[Ft];
          Ee = this.chart.scales[Ft].getPixelForValue(vt);
        }
        He = this._getYAxisLabelAlignment(T).textAlign;
      }
      e === "y" &&
        (u === "start" ? (vi = "top") : u === "end" && (vi = "bottom"));
      let Pn = this._getLabelSizes();
      for (E = 0, X = l.length; E < X; ++E) {
        (se = l[E]), (be = se.label);
        let Ft = o.setContext(this.getContext(E));
        (De = this.getPixelForTick(E) + o.labelOffset),
          (We = this._resolveTickFontOptions(E)),
          (bt = We.lineHeight),
          (qt = Wt(be) ? be.length : 1);
        let vt = qt / 2,
          yi = Ft.color,
          _n = Ft.textStrokeColor,
          Qr = Ft.textStrokeWidth,
          ir = He;
        a
          ? ((Ee = De),
            He === "inner" &&
              (E === X - 1
                ? (ir = this.options.reverse ? "left" : "right")
                : E === 0
                ? (ir = this.options.reverse ? "right" : "left")
                : (ir = "center")),
            r === "top"
              ? f === "near" || V !== 0
                ? (Le = -qt * bt + bt / 2)
                : f === "center"
                ? (Le = -Pn.highest.height / 2 - vt * bt + bt)
                : (Le = -Pn.highest.height + bt / 2)
              : f === "near" || V !== 0
              ? (Le = bt / 2)
              : f === "center"
              ? (Le = Pn.highest.height / 2 - vt * bt)
              : (Le = Pn.highest.height - qt * bt),
            D && (Le *= -1),
            V !== 0 && !Ft.showLabelBackdrop && (Ee += (bt / 2) * Math.sin(V)))
          : ((_ = De), (Le = ((1 - qt) * bt) / 2));
        let Xr;
        if (Ft.showLabelBackdrop) {
          let In = Zn(Ft.backdropPadding),
            wr = Pn.heights[E],
            nr = Pn.widths[E],
            Zr = Le - In.top,
            rr = 0 - In.left;
          switch (vi) {
            case "middle":
              Zr -= wr / 2;
              break;
            case "bottom":
              Zr -= wr;
              break;
          }
          switch (He) {
            case "center":
              rr -= nr / 2;
              break;
            case "right":
              rr -= nr;
              break;
            case "inner":
              E === X - 1 ? (rr -= nr) : E > 0 && (rr -= nr / 2);
              break;
          }
          Xr = {
            left: rr,
            top: Zr,
            width: nr + In.width,
            height: wr + In.height,
            color: Ft.backdropColor,
          };
        }
        A.push({
          label: be,
          font: We,
          textOffset: Le,
          options: {
            rotation: V,
            color: yi,
            strokeColor: _n,
            strokeWidth: Qr,
            textAlign: ir,
            textBaseline: vi,
            translation: [Ee, _],
            backdrop: Xr,
          },
        });
      }
      return A;
    }
    _getXAxisLabelAlignment() {
      let { position: i, ticks: e } = this.options;
      if (-vr(this.labelRotation)) return i === "top" ? "left" : "right";
      let r = "center";
      return (
        e.align === "start"
          ? (r = "left")
          : e.align === "end"
          ? (r = "right")
          : e.align === "inner" && (r = "inner"),
        r
      );
    }
    _getYAxisLabelAlignment(i) {
      let {
          position: e,
          ticks: { crossAlign: t, mirror: r, padding: o },
        } = this.options,
        a = this._getLabelSizes(),
        l = i + o,
        u = a.widest.width,
        f,
        v;
      return (
        e === "left"
          ? r
            ? ((v = this.right + o),
              t === "near"
                ? (f = "left")
                : t === "center"
                ? ((f = "center"), (v += u / 2))
                : ((f = "right"), (v += u)))
            : ((v = this.right - l),
              t === "near"
                ? (f = "right")
                : t === "center"
                ? ((f = "center"), (v -= u / 2))
                : ((f = "left"), (v = this.left)))
          : e === "right"
          ? r
            ? ((v = this.left + o),
              t === "near"
                ? (f = "right")
                : t === "center"
                ? ((f = "center"), (v -= u / 2))
                : ((f = "left"), (v -= u)))
            : ((v = this.left + l),
              t === "near"
                ? (f = "left")
                : t === "center"
                ? ((f = "center"), (v += u / 2))
                : ((f = "right"), (v = this.right)))
          : (f = "right"),
        { textAlign: f, x: v }
      );
    }
    _computeLabelArea() {
      if (this.options.ticks.mirror) return;
      let i = this.chart,
        e = this.options.position;
      if (e === "left" || e === "right")
        return { top: 0, left: this.left, bottom: i.height, right: this.right };
      if (e === "top" || e === "bottom")
        return { top: this.top, left: 0, bottom: this.bottom, right: i.width };
    }
    drawBackground() {
      let {
        ctx: i,
        options: { backgroundColor: e },
        left: t,
        top: r,
        width: o,
        height: a,
      } = this;
      e && (i.save(), (i.fillStyle = e), i.fillRect(t, r, o, a), i.restore());
    }
    getLineWidthForValue(i) {
      let e = this.options.grid;
      if (!this._isVisible() || !e.display) return 0;
      let r = this.ticks.findIndex((o) => o.value === i);
      return r >= 0 ? e.setContext(this.getContext(r)).lineWidth : 0;
    }
    drawGrid(i) {
      let e = this.options.grid,
        t = this.ctx,
        r =
          this._gridLineItems ||
          (this._gridLineItems = this._computeGridLineItems(i)),
        o,
        a,
        l = (u, f, v) => {
          !v.width ||
            !v.color ||
            (t.save(),
            (t.lineWidth = v.width),
            (t.strokeStyle = v.color),
            t.setLineDash(v.borderDash || []),
            (t.lineDashOffset = v.borderDashOffset),
            t.beginPath(),
            t.moveTo(u.x, u.y),
            t.lineTo(f.x, f.y),
            t.stroke(),
            t.restore());
        };
      if (e.display)
        for (o = 0, a = r.length; o < a; ++o) {
          let u = r[o];
          e.drawOnChartArea && l({ x: u.x1, y: u.y1 }, { x: u.x2, y: u.y2 }, u),
            e.drawTicks &&
              l(
                { x: u.tx1, y: u.ty1 },
                { x: u.tx2, y: u.ty2 },
                {
                  color: u.tickColor,
                  width: u.tickWidth,
                  borderDash: u.tickBorderDash,
                  borderDashOffset: u.tickBorderDashOffset,
                }
              );
        }
    }
    drawBorder() {
      let {
          chart: i,
          ctx: e,
          options: { border: t, grid: r },
        } = this,
        o = t.setContext(this.getContext()),
        a = t.display ? o.width : 0;
      if (!a) return;
      let l = r.setContext(this.getContext(0)).lineWidth,
        u = this._borderValue,
        f,
        v,
        D,
        T;
      this.isHorizontal()
        ? ((f = Wr(i, this.left, a) - a / 2),
          (v = Wr(i, this.right, l) + l / 2),
          (D = T = u))
        : ((D = Wr(i, this.top, a) - a / 2),
          (T = Wr(i, this.bottom, l) + l / 2),
          (f = v = u)),
        e.save(),
        (e.lineWidth = o.width),
        (e.strokeStyle = o.color),
        e.beginPath(),
        e.moveTo(f, D),
        e.lineTo(v, T),
        e.stroke(),
        e.restore();
    }
    drawLabels(i) {
      if (!this.options.ticks.display) return;
      let t = this.ctx,
        r = this._computeLabelArea();
      r && Up(t, r);
      let o = this.getLabelItems(i);
      for (let a of o) {
        let l = a.options,
          u = a.font,
          f = a.label,
          v = a.textOffset;
        Ks(t, f, 0, v, u, l);
      }
      r && zp(t);
    }
    drawTitle() {
      let {
        ctx: i,
        options: { position: e, title: t, reverse: r },
      } = this;
      if (!t.display) return;
      let o = yo(t.font),
        a = Zn(t.padding),
        l = t.align,
        u = o.lineHeight / 2;
      e === "bottom" || e === "center" || lt(e)
        ? ((u += a.bottom),
          Wt(t.text) && (u += o.lineHeight * (t.text.length - 1)))
        : (u += a.top);
      let {
        titleX: f,
        titleY: v,
        maxWidth: D,
        rotation: T,
      } = m2(this, u, e, l);
      Ks(i, t.text, 0, 0, o, {
        color: t.color,
        maxWidth: D,
        rotation: T,
        textAlign: p2(l, e, r),
        textBaseline: "middle",
        translation: [f, v],
      });
    }
    draw(i) {
      this._isVisible() &&
        (this.drawBackground(),
        this.drawGrid(i),
        this.drawBorder(),
        this.drawTitle(),
        this.drawLabels(i));
    }
    _layers() {
      let i = this.options,
        e = (i.ticks && i.ticks.z) || 0,
        t = $t(i.grid && i.grid.z, -1),
        r = $t(i.border && i.border.z, 0);
      return !this._isVisible() || this.draw !== n.prototype.draw
        ? [
            {
              z: e,
              draw: (o) => {
                this.draw(o);
              },
            },
          ]
        : [
            {
              z: t,
              draw: (o) => {
                this.drawBackground(), this.drawGrid(o), this.drawTitle();
              },
            },
            {
              z: r,
              draw: () => {
                this.drawBorder();
              },
            },
            {
              z: e,
              draw: (o) => {
                this.drawLabels(o);
              },
            },
          ];
    }
    getMatchingVisibleMetas(i) {
      let e = this.chart.getSortedVisibleDatasetMetas(),
        t = this.axis + "AxisID",
        r = [],
        o,
        a;
      for (o = 0, a = e.length; o < a; ++o) {
        let l = e[o];
        l[t] === this.id && (!i || l.type === i) && r.push(l);
      }
      return r;
    }
    _resolveTickFontOptions(i) {
      let e = this.options.ticks.setContext(this.getContext(i));
      return yo(e.font);
    }
    _maxDigits() {
      let i = this._resolveTickFontOptions(0).lineHeight;
      return (this.isHorizontal() ? this.width : this.height) / i;
    }
  },
  ga = class {
    constructor(i, e, t) {
      (this.type = i),
        (this.scope = e),
        (this.override = t),
        (this.items = Object.create(null));
    }
    isForType(i) {
      return Object.prototype.isPrototypeOf.call(
        this.type.prototype,
        i.prototype
      );
    }
    register(i) {
      let e = Object.getPrototypeOf(i),
        t;
      _2(e) && (t = this.register(e));
      let r = this.items,
        o = i.id,
        a = this.scope + "." + o;
      if (!o) throw new Error("class does not have id: " + i);
      return (
        o in r ||
          ((r[o] = i),
          f2(i, a, t),
          this.override && Gt.override(i.id, i.overrides)),
        a
      );
    }
    get(i) {
      return this.items[i];
    }
    unregister(i) {
      let e = this.items,
        t = i.id,
        r = this.scope;
      t in e && delete e[t],
        r && t in Gt[r] && (delete Gt[r][t], this.override && delete $r[t]);
    }
  };
function f2(n, i, e) {
  let t = ma(Object.create(null), [e ? Gt.get(e) : {}, Gt.get(i), n.defaults]);
  Gt.set(i, t),
    n.defaultRoutes && g2(i, n.defaultRoutes),
    n.descriptors && Gt.describe(i, n.descriptors);
}
function g2(n, i) {
  Object.keys(i).forEach((e) => {
    let t = e.split("."),
      r = t.pop(),
      o = [n].concat(t).join("."),
      a = i[e].split("."),
      l = a.pop(),
      u = a.join(".");
    Gt.route(o, r, u, l);
  });
}
function _2(n) {
  return "id" in n && "defaults" in n;
}
var lm = class {
    constructor() {
      (this.controllers = new ga(kM, "datasets", !0)),
        (this.elements = new ga(xd, "elements")),
        (this.plugins = new ga(Object, "plugins")),
        (this.scales = new ga(_a, "scales")),
        (this._typedRegistries = [
          this.controllers,
          this.scales,
          this.elements,
        ]);
    }
    add(...i) {
      this._each("register", i);
    }
    remove(...i) {
      this._each("unregister", i);
    }
    addControllers(...i) {
      this._each("register", i, this.controllers);
    }
    addElements(...i) {
      this._each("register", i, this.elements);
    }
    addPlugins(...i) {
      this._each("register", i, this.plugins);
    }
    addScales(...i) {
      this._each("register", i, this.scales);
    }
    getController(i) {
      return this._get(i, this.controllers, "controller");
    }
    getElement(i) {
      return this._get(i, this.elements, "element");
    }
    getPlugin(i) {
      return this._get(i, this.plugins, "plugin");
    }
    getScale(i) {
      return this._get(i, this.scales, "scale");
    }
    removeControllers(...i) {
      this._each("unregister", i, this.controllers);
    }
    removeElements(...i) {
      this._each("unregister", i, this.elements);
    }
    removePlugins(...i) {
      this._each("unregister", i, this.plugins);
    }
    removeScales(...i) {
      this._each("unregister", i, this.scales);
    }
    _each(i, e, t) {
      [...e].forEach((r) => {
        let o = t || this._getRegistryForType(r);
        t || o.isForType(r) || (o === this.plugins && r.id)
          ? this._exec(i, o, r)
          : bi(r, (a) => {
              let l = t || this._getRegistryForType(a);
              this._exec(i, l, a);
            });
      });
    }
    _exec(i, e, t) {
      let r = id(i);
      Ht(t["before" + r], [], t), e[i](t), Ht(t["after" + r], [], t);
    }
    _getRegistryForType(i) {
      for (let e = 0; e < this._typedRegistries.length; e++) {
        let t = this._typedRegistries[e];
        if (t.isForType(i)) return t;
      }
      return this.plugins;
    }
    _get(i, e, t) {
      let r = e.get(i);
      if (r === void 0)
        throw new Error('"' + i + '" is not a registered ' + t + ".");
      return r;
    }
  },
  Jn = new lm(),
  cm = class {
    constructor() {
      this._init = [];
    }
    notify(i, e, t, r) {
      e === "beforeInit" &&
        ((this._init = this._createDescriptors(i, !0)),
        this._notify(this._init, i, "install"));
      let o = r ? this._descriptors(i).filter(r) : this._descriptors(i),
        a = this._notify(o, i, e, t);
      return (
        e === "afterDestroy" &&
          (this._notify(o, i, "stop"),
          this._notify(this._init, i, "uninstall")),
        a
      );
    }
    _notify(i, e, t, r) {
      r = r || {};
      for (let o of i) {
        let a = o.plugin,
          l = a[t],
          u = [e, r, o.options];
        if (Ht(l, u, a) === !1 && r.cancelable) return !1;
      }
      return !0;
    }
    invalidate() {
      Et(this._cache) ||
        ((this._oldCache = this._cache), (this._cache = void 0));
    }
    _descriptors(i) {
      if (this._cache) return this._cache;
      let e = (this._cache = this._createDescriptors(i));
      return this._notifyStateChanges(i), e;
    }
    _createDescriptors(i, e) {
      let t = i && i.config,
        r = $t(t.options && t.options.plugins, {}),
        o = b2(t);
      return r === !1 && !e ? [] : y2(i, o, r, e);
    }
    _notifyStateChanges(i) {
      let e = this._oldCache || [],
        t = this._cache,
        r = (o, a) =>
          o.filter((l) => !a.some((u) => l.plugin.id === u.plugin.id));
      this._notify(r(e, t), i, "stop"), this._notify(r(t, e), i, "start");
    }
  };
function b2(n) {
  let i = {},
    e = [],
    t = Object.keys(Jn.plugins.items);
  for (let o = 0; o < t.length; o++) e.push(Jn.getPlugin(t[o]));
  let r = n.plugins || [];
  for (let o = 0; o < r.length; o++) {
    let a = r[o];
    e.indexOf(a) === -1 && (e.push(a), (i[a.id] = !0));
  }
  return { plugins: e, localIds: i };
}
function v2(n, i) {
  return !i && n === !1 ? null : n === !0 ? {} : n;
}
function y2(n, { plugins: i, localIds: e }, t, r) {
  let o = [],
    a = n.getContext();
  for (let l of i) {
    let u = l.id,
      f = v2(t[u], r);
    f !== null &&
      o.push({
        plugin: l,
        options: x2(n.config, { plugin: l, local: e[u] }, f, a),
      });
  }
  return o;
}
function x2(n, { plugin: i, local: e }, t, r) {
  let o = n.pluginScopeKeys(i),
    a = n.getOptionScopes(t, o);
  return (
    e && i.defaults && a.push(i.defaults),
    n.createResolver(a, r, [""], { scriptable: !1, indexable: !1, allKeys: !0 })
  );
}
function dm(n, i) {
  let e = Gt.datasets[n] || {};
  return (
    ((i.datasets || {})[n] || {}).indexAxis || i.indexAxis || e.indexAxis || "x"
  );
}
function C2(n, i) {
  let e = n;
  return (
    n === "_index_" ? (e = i) : n === "_value_" && (e = i === "x" ? "y" : "x"),
    e
  );
}
function w2(n, i) {
  return n === i ? "_index_" : "_value_";
}
function cv(n) {
  if (n === "x" || n === "y" || n === "r") return n;
}
function D2(n) {
  if (n === "top" || n === "bottom") return "x";
  if (n === "left" || n === "right") return "y";
}
function um(n, ...i) {
  if (cv(n)) return n;
  for (let e of i) {
    let t =
      e.axis || D2(e.position) || (n.length > 1 && cv(n[0].toLowerCase()));
    if (t) return t;
  }
  throw new Error(
    `Cannot determine type of '${n}' axis. Please provide 'axis' or 'position' option.`
  );
}
function dv(n, i, e) {
  if (e[i + "AxisID"] === n) return { axis: i };
}
function S2(n, i) {
  if (i.data && i.data.datasets) {
    let e = i.data.datasets.filter((t) => t.xAxisID === n || t.yAxisID === n);
    if (e.length) return dv(n, "x", e[0]) || dv(n, "y", e[0]);
  }
  return {};
}
function M2(n, i) {
  let e = $r[n.type] || { scales: {} },
    t = i.scales || {},
    r = dm(n.type, i),
    o = Object.create(null);
  return (
    Object.keys(t).forEach((a) => {
      let l = t[a];
      if (!lt(l))
        return console.error(`Invalid scale configuration for scale: ${a}`);
      if (l._proxy)
        return console.warn(
          `Ignoring resolver passed as options for scale: ${a}`
        );
      let u = um(a, l, S2(a, n), Gt.scales[l.type]),
        f = w2(u, r),
        v = e.scales || {};
      o[a] = fa(Object.create(null), [{ axis: u }, l, v[u], v[f]]);
    }),
    n.data.datasets.forEach((a) => {
      let l = a.type || n.type,
        u = a.indexAxis || dm(l, i),
        v = ($r[l] || {}).scales || {};
      Object.keys(v).forEach((D) => {
        let T = C2(D, u),
          M = a[T + "AxisID"] || T;
        (o[M] = o[M] || Object.create(null)),
          fa(o[M], [{ axis: T }, t[M], v[D]]);
      });
    }),
    Object.keys(o).forEach((a) => {
      let l = o[a];
      fa(l, [Gt.scales[l.type], Gt.scale]);
    }),
    o
  );
}
function Lv(n) {
  let i = n.options || (n.options = {});
  (i.plugins = $t(i.plugins, {})), (i.scales = M2(n, i));
}
function Vv(n) {
  return (
    (n = n || {}),
    (n.datasets = n.datasets || []),
    (n.labels = n.labels || []),
    n
  );
}
function T2(n) {
  return (n = n || {}), (n.data = Vv(n.data)), Lv(n), n;
}
var uv = new Map(),
  Bv = new Set();
function fd(n, i) {
  let e = uv.get(n);
  return e || ((e = i()), uv.set(n, e), Bv.add(e)), e;
}
var tl = (n, i, e) => {
    let t = zs(i, e);
    t !== void 0 && n.add(t);
  },
  hm = class {
    constructor(i) {
      (this._config = T2(i)),
        (this._scopeCache = new Map()),
        (this._resolverCache = new Map());
    }
    get platform() {
      return this._config.platform;
    }
    get type() {
      return this._config.type;
    }
    set type(i) {
      this._config.type = i;
    }
    get data() {
      return this._config.data;
    }
    set data(i) {
      this._config.data = Vv(i);
    }
    get options() {
      return this._config.options;
    }
    set options(i) {
      this._config.options = i;
    }
    get plugins() {
      return this._config.plugins;
    }
    update() {
      let i = this._config;
      this.clearCache(), Lv(i);
    }
    clearCache() {
      this._scopeCache.clear(), this._resolverCache.clear();
    }
    datasetScopeKeys(i) {
      return fd(i, () => [[`datasets.${i}`, ""]]);
    }
    datasetAnimationScopeKeys(i, e) {
      return fd(`${i}.transition.${e}`, () => [
        [`datasets.${i}.transitions.${e}`, `transitions.${e}`],
        [`datasets.${i}`, ""],
      ]);
    }
    datasetElementScopeKeys(i, e) {
      return fd(`${i}-${e}`, () => [
        [`datasets.${i}.elements.${e}`, `datasets.${i}`, `elements.${e}`, ""],
      ]);
    }
    pluginScopeKeys(i) {
      let e = i.id,
        t = this.type;
      return fd(`${t}-plugin-${e}`, () => [
        [`plugins.${e}`, ...(i.additionalOptionScopes || [])],
      ]);
    }
    _cachedScopes(i, e) {
      let t = this._scopeCache,
        r = t.get(i);
      return (!r || e) && ((r = new Map()), t.set(i, r)), r;
    }
    getOptionScopes(i, e, t) {
      let { options: r, type: o } = this,
        a = this._cachedScopes(i, t),
        l = a.get(e);
      if (l) return l;
      let u = new Set();
      e.forEach((v) => {
        i && (u.add(i), v.forEach((D) => tl(u, i, D))),
          v.forEach((D) => tl(u, r, D)),
          v.forEach((D) => tl(u, $r[o] || {}, D)),
          v.forEach((D) => tl(u, Gt, D)),
          v.forEach((D) => tl(u, sd, D));
      });
      let f = Array.from(u);
      return (
        f.length === 0 && f.push(Object.create(null)),
        Bv.has(e) && a.set(e, f),
        f
      );
    }
    chartOptionScopes() {
      let { options: i, type: e } = this;
      return [i, $r[e] || {}, Gt.datasets[e] || {}, { type: e }, Gt, sd];
    }
    resolveNamedOptions(i, e, t, r = [""]) {
      let o = { $shared: !0 },
        { resolver: a, subPrefixes: l } = hv(this._resolverCache, i, r),
        u = a;
      if (O2(a, e)) {
        (o.$shared = !1), (t = _r(t) ? t() : t);
        let f = this.createResolver(i, t, l);
        u = bo(a, t, f);
      }
      for (let f of e) o[f] = u[f];
      return o;
    }
    createResolver(i, e, t = [""], r) {
      let { resolver: o } = hv(this._resolverCache, i, t);
      return lt(e) ? bo(o, e, void 0, r) : o;
    }
  };
function hv(n, i, e) {
  let t = n.get(i);
  t || ((t = new Map()), n.set(i, t));
  let r = e.join(),
    o = t.get(r);
  return (
    o ||
      ((o = {
        resolver: ld(i, e),
        subPrefixes: e.filter((l) => !l.toLowerCase().includes("hover")),
      }),
      t.set(r, o)),
    o
  );
}
var E2 = (n) => lt(n) && Object.getOwnPropertyNames(n).some((i) => _r(n[i]));
function O2(n, i) {
  let { isScriptable: e, isIndexable: t } = Wp(n);
  for (let r of i) {
    let o = e(r),
      a = t(r),
      l = (a || o) && n[r];
    if ((o && (_r(l) || E2(l))) || (a && Wt(l))) return !0;
  }
  return !1;
}
var k2 = "4.5.0",
  P2 = ["top", "bottom", "left", "right", "chartArea"];
function pv(n, i) {
  return n === "top" || n === "bottom" || (P2.indexOf(n) === -1 && i === "x");
}
function mv(n, i) {
  return function (e, t) {
    return e[n] === t[n] ? e[i] - t[i] : e[n] - t[n];
  };
}
function fv(n) {
  let i = n.chart,
    e = i.options.animation;
  i.notifyPlugins("afterRender"), Ht(e && e.onComplete, [n], i);
}
function I2(n) {
  let i = n.chart,
    e = i.options.animation;
  Ht(e && e.onProgress, [n], i);
}
function Hv(n) {
  return (
    cd() && typeof n == "string"
      ? (n = document.getElementById(n))
      : n && n.length && (n = n[0]),
    n && n.canvas && (n = n.canvas),
    n
  );
}
var bd = {},
  gv = (n) => {
    let i = Hv(n);
    return Object.values(bd)
      .filter((e) => e.canvas === i)
      .pop();
  };
function A2(n, i, e) {
  let t = Object.keys(n);
  for (let r of t) {
    let o = +r;
    if (o >= i) {
      let a = n[r];
      delete n[r], (e > 0 || o > i) && (n[o + e] = a);
    }
  }
}
function R2(n, i, e, t) {
  return !e || n.type === "mouseout" ? null : t ? i : n;
}
var mm = (() => {
  class n {
    static defaults = Gt;
    static instances = bd;
    static overrides = $r;
    static registry = Jn;
    static version = k2;
    static getChart = gv;
    static register(...e) {
      Jn.add(...e), _v();
    }
    static unregister(...e) {
      Jn.remove(...e), _v();
    }
    constructor(e, t) {
      let r = (this.config = new hm(t)),
        o = Hv(e),
        a = gv(o);
      if (a)
        throw new Error(
          "Canvas is already in use. Chart with ID '" +
            a.id +
            "' must be destroyed before the canvas with ID '" +
            a.canvas.id +
            "' can be reused."
        );
      let l = r.createResolver(r.chartOptionScopes(), this.getContext());
      (this.platform = new (r.platform || t2(o))()),
        this.platform.updateConfig(r);
      let u = this.platform.acquireContext(o, l.aspectRatio),
        f = u && u.canvas,
        v = f && f.height,
        D = f && f.width;
      if (
        ((this.id = bb()),
        (this.ctx = u),
        (this.canvas = f),
        (this.width = D),
        (this.height = v),
        (this._options = l),
        (this._aspectRatio = this.aspectRatio),
        (this._layers = []),
        (this._metasets = []),
        (this._stacks = void 0),
        (this.boxes = []),
        (this.currentDevicePixelRatio = void 0),
        (this.chartArea = void 0),
        (this._active = []),
        (this._lastEvent = void 0),
        (this._listeners = {}),
        (this._responsiveListeners = void 0),
        (this._sortedMetasets = []),
        (this.scales = {}),
        (this._plugins = new cm()),
        (this.$proxies = {}),
        (this._hiddenIndices = {}),
        (this.attached = !1),
        (this._animationsDisabled = void 0),
        (this.$context = void 0),
        (this._doResize = Ib((T) => this.update(T), l.resizeDelay || 0)),
        (this._dataChanges = []),
        (bd[this.id] = this),
        !u || !f)
      ) {
        console.error(
          "Failed to create chart: can't acquire context from the given item"
        );
        return;
      }
      yr.listen(this, "complete", fv),
        yr.listen(this, "progress", I2),
        this._initialize(),
        this.attached && this.update();
    }
    get aspectRatio() {
      let {
        options: { aspectRatio: e, maintainAspectRatio: t },
        width: r,
        height: o,
        _aspectRatio: a,
      } = this;
      return Et(e) ? (t && a ? a : o ? r / o : null) : e;
    }
    get data() {
      return this.config.data;
    }
    set data(e) {
      this.config.data = e;
    }
    get options() {
      return this._options;
    }
    set options(e) {
      this.config.options = e;
    }
    get registry() {
      return Jn;
    }
    _initialize() {
      return (
        this.notifyPlugins("beforeInit"),
        this.options.responsive
          ? this.resize()
          : qp(this, this.options.devicePixelRatio),
        this.bindEvents(),
        this.notifyPlugins("afterInit"),
        this
      );
    }
    clear() {
      return jp(this.canvas, this.ctx), this;
    }
    stop() {
      return yr.stop(this), this;
    }
    resize(e, t) {
      yr.running(this)
        ? (this._resizeBeforeDraw = { width: e, height: t })
        : this._resize(e, t);
    }
    _resize(e, t) {
      let r = this.options,
        o = this.canvas,
        a = r.maintainAspectRatio && this.aspectRatio,
        l = this.platform.getMaximumSize(o, e, t, a),
        u = r.devicePixelRatio || this.platform.getDevicePixelRatio(),
        f = this.width ? "resize" : "attach";
      (this.width = l.width),
        (this.height = l.height),
        (this._aspectRatio = this.aspectRatio),
        qp(this, u, !0) &&
          (this.notifyPlugins("resize", { size: l }),
          Ht(r.onResize, [this, l], this),
          this.attached && this._doResize(f) && this.render());
    }
    ensureScalesHaveIDs() {
      let t = this.options.scales || {};
      bi(t, (r, o) => {
        r.id = o;
      });
    }
    buildOrUpdateScales() {
      let e = this.options,
        t = e.scales,
        r = this.scales,
        o = Object.keys(r).reduce((l, u) => ((l[u] = !1), l), {}),
        a = [];
      t &&
        (a = a.concat(
          Object.keys(t).map((l) => {
            let u = t[l],
              f = um(l, u),
              v = f === "r",
              D = f === "x";
            return {
              options: u,
              dposition: v ? "chartArea" : D ? "bottom" : "left",
              dtype: v ? "radialLinear" : D ? "category" : "linear",
            };
          })
        )),
        bi(a, (l) => {
          let u = l.options,
            f = u.id,
            v = um(f, u),
            D = $t(u.type, l.dtype);
          (u.position === void 0 || pv(u.position, v) !== pv(l.dposition)) &&
            (u.position = l.dposition),
            (o[f] = !0);
          let T = null;
          if (f in r && r[f].type === D) T = r[f];
          else {
            let M = Jn.getScale(D);
            (T = new M({ id: f, type: D, ctx: this.ctx, chart: this })),
              (r[T.id] = T);
          }
          T.init(u, e);
        }),
        bi(o, (l, u) => {
          l || delete r[u];
        }),
        bi(r, (l) => {
          pd.configure(this, l, l.options), pd.addBox(this, l);
        });
    }
    _updateMetasets() {
      let e = this._metasets,
        t = this.data.datasets.length,
        r = e.length;
      if ((e.sort((o, a) => o.index - a.index), r > t)) {
        for (let o = t; o < r; ++o) this._destroyDatasetMeta(o);
        e.splice(t, r - t);
      }
      this._sortedMetasets = e.slice(0).sort(mv("order", "index"));
    }
    _removeUnreferencedMetasets() {
      let {
        _metasets: e,
        data: { datasets: t },
      } = this;
      e.length > t.length && delete this._stacks,
        e.forEach((r, o) => {
          t.filter((a) => a === r._dataset).length === 0 &&
            this._destroyDatasetMeta(o);
        });
    }
    buildOrUpdateControllers() {
      let e = [],
        t = this.data.datasets,
        r,
        o;
      for (
        this._removeUnreferencedMetasets(), r = 0, o = t.length;
        r < o;
        r++
      ) {
        let a = t[r],
          l = this.getDatasetMeta(r),
          u = a.type || this.config.type;
        if (
          (l.type &&
            l.type !== u &&
            (this._destroyDatasetMeta(r), (l = this.getDatasetMeta(r))),
          (l.type = u),
          (l.indexAxis = a.indexAxis || dm(u, this.options)),
          (l.order = a.order || 0),
          (l.index = r),
          (l.label = "" + a.label),
          (l.visible = this.isDatasetVisible(r)),
          l.controller)
        )
          l.controller.updateIndex(r), l.controller.linkScales();
        else {
          let f = Jn.getController(u),
            { datasetElementType: v, dataElementType: D } = Gt.datasets[u];
          Object.assign(f, {
            dataElementType: Jn.getElement(D),
            datasetElementType: v && Jn.getElement(v),
          }),
            (l.controller = new f(this, r)),
            e.push(l.controller);
        }
      }
      return this._updateMetasets(), e;
    }
    _resetElements() {
      bi(
        this.data.datasets,
        (e, t) => {
          this.getDatasetMeta(t).controller.reset();
        },
        this
      );
    }
    reset() {
      this._resetElements(), this.notifyPlugins("reset");
    }
    update(e) {
      let t = this.config;
      t.update();
      let r = (this._options = t.createResolver(
          t.chartOptionScopes(),
          this.getContext()
        )),
        o = (this._animationsDisabled = !r.animation);
      if (
        (this._updateScales(),
        this._checkEventBindings(),
        this._updateHiddenIndices(),
        this._plugins.invalidate(),
        this.notifyPlugins("beforeUpdate", { mode: e, cancelable: !0 }) === !1)
      )
        return;
      let a = this.buildOrUpdateControllers();
      this.notifyPlugins("beforeElementsUpdate");
      let l = 0;
      for (let v = 0, D = this.data.datasets.length; v < D; v++) {
        let { controller: T } = this.getDatasetMeta(v),
          M = !o && a.indexOf(T) === -1;
        T.buildOrUpdateElements(M), (l = Math.max(+T.getMaxOverflow(), l));
      }
      (l = this._minPadding = r.layout.autoPadding ? l : 0),
        this._updateLayout(l),
        o ||
          bi(a, (v) => {
            v.reset();
          }),
        this._updateDatasets(e),
        this.notifyPlugins("afterUpdate", { mode: e }),
        this._layers.sort(mv("z", "_idx"));
      let { _active: u, _lastEvent: f } = this;
      f
        ? this._eventHandler(f, !0)
        : u.length && this._updateHoverStyles(u, u, !0),
        this.render();
    }
    _updateScales() {
      bi(this.scales, (e) => {
        pd.removeBox(this, e);
      }),
        this.ensureScalesHaveIDs(),
        this.buildOrUpdateScales();
    }
    _checkEventBindings() {
      let e = this.options,
        t = new Set(Object.keys(this._listeners)),
        r = new Set(e.events);
      (!Ip(t, r) || !!this._responsiveListeners !== e.responsive) &&
        (this.unbindEvents(), this.bindEvents());
    }
    _updateHiddenIndices() {
      let { _hiddenIndices: e } = this,
        t = this._getUniformDataChanges() || [];
      for (let { method: r, start: o, count: a } of t) {
        let l = r === "_removeElements" ? -a : a;
        A2(e, o, l);
      }
    }
    _getUniformDataChanges() {
      let e = this._dataChanges;
      if (!e || !e.length) return;
      this._dataChanges = [];
      let t = this.data.datasets.length,
        r = (a) =>
          new Set(
            e
              .filter((l) => l[0] === a)
              .map((l, u) => u + "," + l.splice(1).join(","))
          ),
        o = r(0);
      for (let a = 1; a < t; a++) if (!Ip(o, r(a))) return;
      return Array.from(o)
        .map((a) => a.split(","))
        .map((a) => ({ method: a[1], start: +a[2], count: +a[3] }));
    }
    _updateLayout(e) {
      if (this.notifyPlugins("beforeLayout", { cancelable: !0 }) === !1) return;
      pd.update(this, this.width, this.height, e);
      let t = this.chartArea,
        r = t.width <= 0 || t.height <= 0;
      (this._layers = []),
        bi(
          this.boxes,
          (o) => {
            (r && o.position === "chartArea") ||
              (o.configure && o.configure(), this._layers.push(...o._layers()));
          },
          this
        ),
        this._layers.forEach((o, a) => {
          o._idx = a;
        }),
        this.notifyPlugins("afterLayout");
    }
    _updateDatasets(e) {
      if (
        this.notifyPlugins("beforeDatasetsUpdate", {
          mode: e,
          cancelable: !0,
        }) !== !1
      ) {
        for (let t = 0, r = this.data.datasets.length; t < r; ++t)
          this.getDatasetMeta(t).controller.configure();
        for (let t = 0, r = this.data.datasets.length; t < r; ++t)
          this._updateDataset(t, _r(e) ? e({ datasetIndex: t }) : e);
        this.notifyPlugins("afterDatasetsUpdate", { mode: e });
      }
    }
    _updateDataset(e, t) {
      let r = this.getDatasetMeta(e),
        o = { meta: r, index: e, mode: t, cancelable: !0 };
      this.notifyPlugins("beforeDatasetUpdate", o) !== !1 &&
        (r.controller._update(t),
        (o.cancelable = !1),
        this.notifyPlugins("afterDatasetUpdate", o));
    }
    render() {
      this.notifyPlugins("beforeRender", { cancelable: !0 }) !== !1 &&
        (yr.has(this)
          ? this.attached && !yr.running(this) && yr.start(this)
          : (this.draw(), fv({ chart: this })));
    }
    draw() {
      let e;
      if (this._resizeBeforeDraw) {
        let { width: r, height: o } = this._resizeBeforeDraw;
        (this._resizeBeforeDraw = null), this._resize(r, o);
      }
      if (
        (this.clear(),
        this.width <= 0 ||
          this.height <= 0 ||
          this.notifyPlugins("beforeDraw", { cancelable: !0 }) === !1)
      )
        return;
      let t = this._layers;
      for (e = 0; e < t.length && t[e].z <= 0; ++e) t[e].draw(this.chartArea);
      for (this._drawDatasets(); e < t.length; ++e) t[e].draw(this.chartArea);
      this.notifyPlugins("afterDraw");
    }
    _getSortedDatasetMetas(e) {
      let t = this._sortedMetasets,
        r = [],
        o,
        a;
      for (o = 0, a = t.length; o < a; ++o) {
        let l = t[o];
        (!e || l.visible) && r.push(l);
      }
      return r;
    }
    getSortedVisibleDatasetMetas() {
      return this._getSortedDatasetMetas(!0);
    }
    _drawDatasets() {
      if (this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 }) === !1)
        return;
      let e = this.getSortedVisibleDatasetMetas();
      for (let t = e.length - 1; t >= 0; --t) this._drawDataset(e[t]);
      this.notifyPlugins("afterDatasetsDraw");
    }
    _drawDataset(e) {
      let t = this.ctx,
        r = { meta: e, index: e.index, cancelable: !0 },
        o = Gb(this, e);
      this.notifyPlugins("beforeDatasetDraw", r) !== !1 &&
        (o && Up(t, o),
        e.controller.draw(),
        o && zp(t),
        (r.cancelable = !1),
        this.notifyPlugins("afterDatasetDraw", r));
    }
    isPointInArea(e) {
      return vo(e, this.chartArea, this._minPadding);
    }
    getElementsAtEventForMode(e, t, r, o) {
      let a = NM.modes[t];
      return typeof a == "function" ? a(this, e, r, o) : [];
    }
    getDatasetMeta(e) {
      let t = this.data.datasets[e],
        r = this._metasets,
        o = r.filter((a) => a && a._dataset === t).pop();
      return (
        o ||
          ((o = {
            type: null,
            data: [],
            dataset: null,
            controller: null,
            hidden: null,
            xAxisID: null,
            yAxisID: null,
            order: (t && t.order) || 0,
            index: e,
            _dataset: t,
            _parsed: [],
            _sorted: !1,
          }),
          r.push(o)),
        o
      );
    }
    getContext() {
      return (
        this.$context ||
        (this.$context = xo(null, { chart: this, type: "chart" }))
      );
    }
    getVisibleDatasetCount() {
      return this.getSortedVisibleDatasetMetas().length;
    }
    isDatasetVisible(e) {
      let t = this.data.datasets[e];
      if (!t) return !1;
      let r = this.getDatasetMeta(e);
      return typeof r.hidden == "boolean" ? !r.hidden : !t.hidden;
    }
    setDatasetVisibility(e, t) {
      let r = this.getDatasetMeta(e);
      r.hidden = !t;
    }
    toggleDataVisibility(e) {
      this._hiddenIndices[e] = !this._hiddenIndices[e];
    }
    getDataVisibility(e) {
      return !this._hiddenIndices[e];
    }
    _updateVisibility(e, t, r) {
      let o = r ? "show" : "hide",
        a = this.getDatasetMeta(e),
        l = a.controller._resolveAnimations(void 0, o);
      $s(t)
        ? ((a.data[t].hidden = !r), this.update())
        : (this.setDatasetVisibility(e, r),
          l.update(a, { visible: r }),
          this.update((u) => (u.datasetIndex === e ? o : void 0)));
    }
    hide(e, t) {
      this._updateVisibility(e, t, !1);
    }
    show(e, t) {
      this._updateVisibility(e, t, !0);
    }
    _destroyDatasetMeta(e) {
      let t = this._metasets[e];
      t && t.controller && t.controller._destroy(), delete this._metasets[e];
    }
    _stop() {
      let e, t;
      for (
        this.stop(), yr.remove(this), e = 0, t = this.data.datasets.length;
        e < t;
        ++e
      )
        this._destroyDatasetMeta(e);
    }
    destroy() {
      this.notifyPlugins("beforeDestroy");
      let { canvas: e, ctx: t } = this;
      this._stop(),
        this.config.clearCache(),
        e &&
          (this.unbindEvents(),
          jp(e, t),
          this.platform.releaseContext(t),
          (this.canvas = null),
          (this.ctx = null)),
        delete bd[this.id],
        this.notifyPlugins("afterDestroy");
    }
    toBase64Image(...e) {
      return this.canvas.toDataURL(...e);
    }
    bindEvents() {
      this.bindUserEvents(),
        this.options.responsive
          ? this.bindResponsiveEvents()
          : (this.attached = !0);
    }
    bindUserEvents() {
      let e = this._listeners,
        t = this.platform,
        r = (a, l) => {
          t.addEventListener(this, a, l), (e[a] = l);
        },
        o = (a, l, u) => {
          (a.offsetX = l), (a.offsetY = u), this._eventHandler(a);
        };
      bi(this.options.events, (a) => r(a, o));
    }
    bindResponsiveEvents() {
      this._responsiveListeners || (this._responsiveListeners = {});
      let e = this._responsiveListeners,
        t = this.platform,
        r = (f, v) => {
          t.addEventListener(this, f, v), (e[f] = v);
        },
        o = (f, v) => {
          e[f] && (t.removeEventListener(this, f, v), delete e[f]);
        },
        a = (f, v) => {
          this.canvas && this.resize(f, v);
        },
        l,
        u = () => {
          o("attach", u),
            (this.attached = !0),
            this.resize(),
            r("resize", a),
            r("detach", l);
        };
      (l = () => {
        (this.attached = !1),
          o("resize", a),
          this._stop(),
          this._resize(0, 0),
          r("attach", u);
      }),
        t.isAttached(this.canvas) ? u() : l();
    }
    unbindEvents() {
      bi(this._listeners, (e, t) => {
        this.platform.removeEventListener(this, t, e);
      }),
        (this._listeners = {}),
        bi(this._responsiveListeners, (e, t) => {
          this.platform.removeEventListener(this, t, e);
        }),
        (this._responsiveListeners = void 0);
    }
    updateHoverStyle(e, t, r) {
      let o = r ? "set" : "remove",
        a,
        l,
        u,
        f;
      for (
        t === "dataset" &&
          ((a = this.getDatasetMeta(e[0].datasetIndex)),
          a.controller["_" + o + "DatasetHoverStyle"]()),
          u = 0,
          f = e.length;
        u < f;
        ++u
      ) {
        l = e[u];
        let v = l && this.getDatasetMeta(l.datasetIndex).controller;
        v && v[o + "HoverStyle"](l.element, l.datasetIndex, l.index);
      }
    }
    getActiveElements() {
      return this._active || [];
    }
    setActiveElements(e) {
      let t = this._active || [],
        r = e.map(({ datasetIndex: a, index: l }) => {
          let u = this.getDatasetMeta(a);
          if (!u) throw new Error("No dataset found at index " + a);
          return { datasetIndex: a, element: u.data[l], index: l };
        });
      !Pp(r, t) &&
        ((this._active = r),
        (this._lastEvent = null),
        this._updateHoverStyles(r, t));
    }
    notifyPlugins(e, t, r) {
      return this._plugins.notify(this, e, t, r);
    }
    isPluginEnabled(e) {
      return this._plugins._cache.filter((t) => t.plugin.id === e).length === 1;
    }
    _updateHoverStyles(e, t, r) {
      let o = this.options.hover,
        a = (f, v) =>
          f.filter(
            (D) =>
              !v.some(
                (T) => D.datasetIndex === T.datasetIndex && D.index === T.index
              )
          ),
        l = a(t, e),
        u = r ? e : a(e, t);
      l.length && this.updateHoverStyle(l, o.mode, !1),
        u.length && o.mode && this.updateHoverStyle(u, o.mode, !0);
    }
    _eventHandler(e, t) {
      let r = {
          event: e,
          replay: t,
          cancelable: !0,
          inChartArea: this.isPointInArea(e),
        },
        o = (l) =>
          (l.options.events || this.options.events).includes(e.native.type);
      if (this.notifyPlugins("beforeEvent", r, o) === !1) return;
      let a = this._handleEvent(e, t, r.inChartArea);
      return (
        (r.cancelable = !1),
        this.notifyPlugins("afterEvent", r, o),
        (a || r.changed) && this.render(),
        this
      );
    }
    _handleEvent(e, t, r) {
      let { _active: o = [], options: a } = this,
        l = t,
        u = this._getActiveElements(e, o, r, l),
        f = xb(e),
        v = R2(e, this._lastEvent, r, f);
      r &&
        ((this._lastEvent = null),
        Ht(a.onHover, [e, u, this], this),
        f && Ht(a.onClick, [e, u, this], this));
      let D = !Pp(u, o);
      return (
        (D || t) && ((this._active = u), this._updateHoverStyles(u, o, t)),
        (this._lastEvent = v),
        D
      );
    }
    _getActiveElements(e, t, r, o) {
      if (e.type === "mouseout") return [];
      if (!r) return t;
      let a = this.options.hover;
      return this.getElementsAtEventForMode(e, a.mode, a, o);
    }
  }
  return n;
})();
function _v() {
  return bi(mm.instances, (n) => n._plugins.invalidate());
}
function F2(n, i) {
  let e = [],
    {
      bounds: r,
      step: o,
      min: a,
      max: l,
      precision: u,
      count: f,
      maxTicks: v,
      maxDigits: D,
      includeBounds: T,
    } = n,
    M = o || 1,
    k = v - 1,
    { min: V, max: A } = i,
    E = !Et(a),
    X = !Et(l),
    se = !Et(f),
    be = (A - V) / (D + 1),
    Ee = Ap((A - V) / k / M) * M,
    _,
    He,
    De,
    We;
  if (Ee < 1e-14 && !E && !X) return [{ value: V }, { value: A }];
  (We = Math.ceil(A / Ee) - Math.floor(V / Ee)),
    We > k && (Ee = Ap((We * Ee) / k / M) * M),
    Et(u) || ((_ = Math.pow(10, u)), (Ee = Math.ceil(Ee * _) / _)),
    r === "ticks"
      ? ((He = Math.floor(V / Ee) * Ee), (De = Math.ceil(A / Ee) * Ee))
      : ((He = V), (De = A)),
    E && X && o && wb((l - a) / o, Ee / 1e3)
      ? ((We = Math.round(Math.min((l - a) / Ee, v))),
        (Ee = (l - a) / We),
        (He = a),
        (De = l))
      : se
      ? ((He = E ? a : He),
        (De = X ? l : De),
        (We = f - 1),
        (Ee = (De - He) / We))
      : ((We = (De - He) / Ee),
        Gs(We, Math.round(We), Ee / 1e3)
          ? (We = Math.round(We))
          : (We = Math.ceil(We)));
  let bt = Math.max(Fp(Ee), Fp(He));
  (_ = Math.pow(10, Et(u) ? bt : u)),
    (He = Math.round(He * _) / _),
    (De = Math.round(De * _) / _);
  let qt = 0;
  for (
    E &&
    (T && He !== a
      ? (e.push({ value: a }),
        He < a && qt++,
        Gs(Math.round((He + qt * Ee) * _) / _, a, bv(a, be, n)) && qt++)
      : He < a && qt++);
    qt < We;
    ++qt
  ) {
    let Le = Math.round((He + qt * Ee) * _) / _;
    if (X && Le > l) break;
    e.push({ value: Le });
  }
  return (
    X && T && De !== l
      ? e.length && Gs(e[e.length - 1].value, l, bv(l, be, n))
        ? (e[e.length - 1].value = l)
        : e.push({ value: l })
      : (!X || De === l) && e.push({ value: De }),
    e
  );
}
function bv(n, i, { horizontal: e, minRotation: t }) {
  let r = vr(t),
    o = (e ? Math.sin(r) : Math.cos(r)) || 0.001,
    a = 0.75 * i * ("" + n).length;
  return Math.min(i / o, a);
}
var ba = class extends _a {
    constructor(i) {
      super(i),
        (this.start = void 0),
        (this.end = void 0),
        (this._startValue = void 0),
        (this._endValue = void 0),
        (this._valueRange = 0);
    }
    parse(i, e) {
      return Et(i) ||
        ((typeof i == "number" || i instanceof Number) && !isFinite(+i))
        ? null
        : +i;
    }
    handleTickRangeOptions() {
      let { beginAtZero: i } = this.options,
        { minDefined: e, maxDefined: t } = this.getUserBounds(),
        { min: r, max: o } = this,
        a = (u) => (r = e ? r : u),
        l = (u) => (o = t ? o : u);
      if (i) {
        let u = Ws(r),
          f = Ws(o);
        u < 0 && f < 0 ? l(0) : u > 0 && f > 0 && a(0);
      }
      if (r === o) {
        let u = o === 0 ? 1 : Math.abs(o * 0.05);
        l(o + u), i || a(r - u);
      }
      (this.min = r), (this.max = o);
    }
    getTickLimit() {
      let i = this.options.ticks,
        { maxTicksLimit: e, stepSize: t } = i,
        r;
      return (
        t
          ? ((r = Math.ceil(this.max / t) - Math.floor(this.min / t) + 1),
            r > 1e3 &&
              (console.warn(
                `scales.${this.id}.ticks.stepSize: ${t} would result generating up to ${r} ticks. Limiting to 1000.`
              ),
              (r = 1e3)))
          : ((r = this.computeTickLimit()), (e = e || 11)),
        e && (r = Math.min(e, r)),
        r
      );
    }
    computeTickLimit() {
      return Number.POSITIVE_INFINITY;
    }
    buildTicks() {
      let i = this.options,
        e = i.ticks,
        t = this.getTickLimit();
      t = Math.max(2, t);
      let r = {
          maxTicks: t,
          bounds: i.bounds,
          min: i.min,
          max: i.max,
          precision: e.precision,
          step: e.stepSize,
          count: e.count,
          maxDigits: this._maxDigits(),
          horizontal: this.isHorizontal(),
          minRotation: e.minRotation || 0,
          includeBounds: e.includeBounds !== !1,
        },
        o = this._range || this,
        a = F2(r, o);
      return (
        i.bounds === "ticks" && Rp(a, this, "value"),
        i.reverse
          ? (a.reverse(), (this.start = this.max), (this.end = this.min))
          : ((this.start = this.min), (this.end = this.max)),
        a
      );
    }
    configure() {
      let i = this.ticks,
        e = this.min,
        t = this.max;
      if ((super.configure(), this.options.offset && i.length)) {
        let r = (t - e) / Math.max(i.length - 1, 1) / 2;
        (e -= r), (t += r);
      }
      (this._startValue = e), (this._endValue = t), (this._valueRange = t - e);
    }
    getLabelForValue(i) {
      return ad(i, this.chart.options.locale, this.options.ticks.format);
    }
  },
  vv = class extends ba {
    static id = "linear";
    static defaults = { ticks: { callback: qs.formatters.numeric } };
    determineDataLimits() {
      let { min: i, max: e } = this.getMinMax(!0);
      (this.min = di(i) ? i : 0),
        (this.max = di(e) ? e : 1),
        this.handleTickRangeOptions();
    }
    computeTickLimit() {
      let i = this.isHorizontal(),
        e = i ? this.width : this.height,
        t = vr(this.options.ticks.minRotation),
        r = (i ? Math.sin(t) : Math.cos(t)) || 0.001,
        o = this._resolveTickFontOptions(0);
      return Math.ceil(e / Math.min(40, o.lineHeight / r));
    }
    getPixelForValue(i) {
      return i === null
        ? NaN
        : this.getPixelForDecimal((i - this._startValue) / this._valueRange);
    }
    getValueForPixel(i) {
      return this._startValue + this.getDecimalForPixel(i) * this._valueRange;
    }
  },
  rl = (n) => Math.floor(br(n)),
  wo = (n, i) => Math.pow(10, rl(n) + i);
function yv(n) {
  return n / Math.pow(10, rl(n)) === 1;
}
function xv(n, i, e) {
  let t = Math.pow(10, e),
    r = Math.floor(n / t);
  return Math.ceil(i / t) - r;
}
function N2(n, i) {
  let e = i - n,
    t = rl(e);
  for (; xv(n, i, t) > 10; ) t++;
  for (; xv(n, i, t) < 10; ) t--;
  return Math.min(t, rl(n));
}
function L2(n, { min: i, max: e }) {
  i = Hi(n.min, i);
  let t = [],
    r = rl(i),
    o = N2(i, e),
    a = o < 0 ? Math.pow(10, Math.abs(o)) : 1,
    l = Math.pow(10, o),
    u = r > o ? Math.pow(10, r) : 0,
    f = Math.round((i - u) * a) / a,
    v = Math.floor((i - u) / l / 10) * l * 10,
    D = Math.floor((f - v) / Math.pow(10, o)),
    T = Hi(n.min, Math.round((u + v + D * Math.pow(10, o)) * a) / a);
  for (; T < e; )
    t.push({ value: T, major: yv(T), significand: D }),
      D >= 10 ? (D = D < 15 ? 15 : 20) : D++,
      D >= 20 && (o++, (D = 2), (a = o >= 0 ? 1 : a)),
      (T = Math.round((u + v + D * Math.pow(10, o)) * a) / a);
  let M = Hi(n.max, T);
  return t.push({ value: M, major: yv(M), significand: D }), t;
}
var Cv = class extends _a {
  static id = "logarithmic";
  static defaults = {
    ticks: { callback: qs.formatters.logarithmic, major: { enabled: !0 } },
  };
  constructor(i) {
    super(i),
      (this.start = void 0),
      (this.end = void 0),
      (this._startValue = void 0),
      (this._valueRange = 0);
  }
  parse(i, e) {
    let t = ba.prototype.parse.apply(this, [i, e]);
    if (t === 0) {
      this._zero = !0;
      return;
    }
    return di(t) && t > 0 ? t : null;
  }
  determineDataLimits() {
    let { min: i, max: e } = this.getMinMax(!0);
    (this.min = di(i) ? Math.max(0, i) : null),
      (this.max = di(e) ? Math.max(0, e) : null),
      this.options.beginAtZero && (this._zero = !0),
      this._zero &&
        this.min !== this._suggestedMin &&
        !di(this._userMin) &&
        (this.min = i === wo(this.min, 0) ? wo(this.min, -1) : wo(this.min, 0)),
      this.handleTickRangeOptions();
  }
  handleTickRangeOptions() {
    let { minDefined: i, maxDefined: e } = this.getUserBounds(),
      t = this.min,
      r = this.max,
      o = (l) => (t = i ? t : l),
      a = (l) => (r = e ? r : l);
    t === r && (t <= 0 ? (o(1), a(10)) : (o(wo(t, -1)), a(wo(r, 1)))),
      t <= 0 && o(wo(r, -1)),
      r <= 0 && a(wo(t, 1)),
      (this.min = t),
      (this.max = r);
  }
  buildTicks() {
    let i = this.options,
      e = { min: this._userMin, max: this._userMax },
      t = L2(e, this);
    return (
      i.bounds === "ticks" && Rp(t, this, "value"),
      i.reverse
        ? (t.reverse(), (this.start = this.max), (this.end = this.min))
        : ((this.start = this.min), (this.end = this.max)),
      t
    );
  }
  getLabelForValue(i) {
    return i === void 0
      ? "0"
      : ad(i, this.chart.options.locale, this.options.ticks.format);
  }
  configure() {
    let i = this.min;
    super.configure(),
      (this._startValue = br(i)),
      (this._valueRange = br(this.max) - br(i));
  }
  getPixelForValue(i) {
    return (
      (i === void 0 || i === 0) && (i = this.min),
      i === null || isNaN(i)
        ? NaN
        : this.getPixelForDecimal(
            i === this.min ? 0 : (br(i) - this._startValue) / this._valueRange
          )
    );
  }
  getValueForPixel(i) {
    let e = this.getDecimalForPixel(i);
    return Math.pow(10, this._startValue + e * this._valueRange);
  }
};
function pm(n) {
  let i = n.ticks;
  if (i.display && n.display) {
    let e = Zn(i.backdropPadding);
    return $t(i.font && i.font.size, Gt.font.size) + e.height;
  }
  return 0;
}
function V2(n, i, e) {
  return (
    (e = Wt(e) ? e : [e]), { w: Nb(n, i.string, e), h: e.length * i.lineHeight }
  );
}
function wv(n, i, e, t, r) {
  return n === t || n === r
    ? { start: i - e / 2, end: i + e / 2 }
    : n < t || n > r
    ? { start: i - e, end: i }
    : { start: i, end: i + e };
}
function B2(n) {
  let i = {
      l: n.left + n._padding.left,
      r: n.right - n._padding.right,
      t: n.top + n._padding.top,
      b: n.bottom - n._padding.bottom,
    },
    e = Object.assign({}, i),
    t = [],
    r = [],
    o = n._pointLabels.length,
    a = n.options.pointLabels,
    l = a.centerPointLabels ? Mi / o : 0;
  for (let u = 0; u < o; u++) {
    let f = a.setContext(n.getPointLabelContext(u));
    r[u] = f.padding;
    let v = n.getPointPosition(u, n.drawingArea + r[u], l),
      D = yo(f.font),
      T = V2(n.ctx, D, n._pointLabels[u]);
    t[u] = T;
    let M = En(n.getIndexAngle(u) + l),
      k = Math.round(nd(M)),
      V = wv(k, v.x, T.w, 0, 180),
      A = wv(k, v.y, T.h, 90, 270);
    H2(e, i, M, V, A);
  }
  n.setCenterPoint(i.l - e.l, e.r - i.r, i.t - e.t, e.b - i.b),
    (n._pointLabelItems = z2(n, t, r));
}
function H2(n, i, e, t, r) {
  let o = Math.abs(Math.sin(e)),
    a = Math.abs(Math.cos(e)),
    l = 0,
    u = 0;
  t.start < i.l
    ? ((l = (i.l - t.start) / o), (n.l = Math.min(n.l, i.l - l)))
    : t.end > i.r && ((l = (t.end - i.r) / o), (n.r = Math.max(n.r, i.r + l))),
    r.start < i.t
      ? ((u = (i.t - r.start) / a), (n.t = Math.min(n.t, i.t - u)))
      : r.end > i.b &&
        ((u = (r.end - i.b) / a), (n.b = Math.max(n.b, i.b + u)));
}
function j2(n, i, e) {
  let t = n.drawingArea,
    { extra: r, additionalAngle: o, padding: a, size: l } = e,
    u = n.getPointPosition(i, t + r + a, o),
    f = Math.round(nd(En(u.angle + Xn))),
    v = G2(u.y, l.h, f),
    D = $2(f),
    T = W2(u.x, l.w, D);
  return {
    visible: !0,
    x: u.x,
    y: v,
    textAlign: D,
    left: T,
    top: v,
    right: T + l.w,
    bottom: v + l.h,
  };
}
function U2(n, i) {
  if (!i) return !0;
  let { left: e, top: t, right: r, bottom: o } = n;
  return !(
    vo({ x: e, y: t }, i) ||
    vo({ x: e, y: o }, i) ||
    vo({ x: r, y: t }, i) ||
    vo({ x: r, y: o }, i)
  );
}
function z2(n, i, e) {
  let t = [],
    r = n._pointLabels.length,
    o = n.options,
    { centerPointLabels: a, display: l } = o.pointLabels,
    u = { extra: pm(o) / 2, additionalAngle: a ? Mi / r : 0 },
    f;
  for (let v = 0; v < r; v++) {
    (u.padding = e[v]), (u.size = i[v]);
    let D = j2(n, v, u);
    t.push(D), l === "auto" && ((D.visible = U2(D, f)), D.visible && (f = D));
  }
  return t;
}
function $2(n) {
  return n === 0 || n === 180 ? "center" : n < 180 ? "left" : "right";
}
function W2(n, i, e) {
  return e === "right" ? (n -= i) : e === "center" && (n -= i / 2), n;
}
function G2(n, i, e) {
  return (
    e === 90 || e === 270 ? (n -= i / 2) : (e > 270 || e < 90) && (n -= i), n
  );
}
function Y2(n, i, e) {
  let { left: t, top: r, right: o, bottom: a } = e,
    { backdropColor: l } = i;
  if (!Et(l)) {
    let u = Bb(i.borderRadius),
      f = Zn(i.backdropPadding);
    n.fillStyle = l;
    let v = t - f.left,
      D = r - f.top,
      T = o - t + f.width,
      M = a - r + f.height;
    Object.values(u).some((k) => k !== 0)
      ? (n.beginPath(), Lb(n, { x: v, y: D, w: T, h: M, radius: u }), n.fill())
      : n.fillRect(v, D, T, M);
  }
}
function q2(n, i) {
  let {
    ctx: e,
    options: { pointLabels: t },
  } = n;
  for (let r = i - 1; r >= 0; r--) {
    let o = n._pointLabelItems[r];
    if (!o.visible) continue;
    let a = t.setContext(n.getPointLabelContext(r));
    Y2(e, a, o);
    let l = yo(a.font),
      { x: u, y: f, textAlign: v } = o;
    Ks(e, n._pointLabels[r], u, f + l.lineHeight / 2, l, {
      color: a.color,
      textAlign: v,
      textBaseline: "middle",
    });
  }
}
function jv(n, i, e, t) {
  let { ctx: r } = n;
  if (e) r.arc(n.xCenter, n.yCenter, i, 0, Qn);
  else {
    let o = n.getPointPosition(0, i);
    r.moveTo(o.x, o.y);
    for (let a = 1; a < t; a++)
      (o = n.getPointPosition(a, i)), r.lineTo(o.x, o.y);
  }
}
function K2(n, i, e, t, r) {
  let o = n.ctx,
    a = i.circular,
    { color: l, lineWidth: u } = i;
  (!a && !t) ||
    !l ||
    !u ||
    e < 0 ||
    (o.save(),
    (o.strokeStyle = l),
    (o.lineWidth = u),
    o.setLineDash(r.dash || []),
    (o.lineDashOffset = r.dashOffset),
    o.beginPath(),
    jv(n, e, a, t),
    o.closePath(),
    o.stroke(),
    o.restore());
}
function Q2(n, i, e) {
  return xo(n, { label: e, index: i, type: "pointLabel" });
}
var Dv = class extends ba {
    static id = "radialLinear";
    static defaults = {
      display: !0,
      animate: !0,
      position: "chartArea",
      angleLines: {
        display: !0,
        lineWidth: 1,
        borderDash: [],
        borderDashOffset: 0,
      },
      grid: { circular: !1 },
      startAngle: 0,
      ticks: { showLabelBackdrop: !0, callback: qs.formatters.numeric },
      pointLabels: {
        backdropColor: void 0,
        backdropPadding: 2,
        display: !0,
        font: { size: 10 },
        callback(i) {
          return i;
        },
        padding: 5,
        centerPointLabels: !1,
      },
    };
    static defaultRoutes = {
      "angleLines.color": "borderColor",
      "pointLabels.color": "color",
      "ticks.color": "color",
    };
    static descriptors = { angleLines: { _fallback: "grid" } };
    constructor(i) {
      super(i),
        (this.xCenter = void 0),
        (this.yCenter = void 0),
        (this.drawingArea = void 0),
        (this._pointLabels = []),
        (this._pointLabelItems = []);
    }
    setDimensions() {
      let i = (this._padding = Zn(pm(this.options) / 2)),
        e = (this.width = this.maxWidth - i.width),
        t = (this.height = this.maxHeight - i.height);
      (this.xCenter = Math.floor(this.left + e / 2 + i.left)),
        (this.yCenter = Math.floor(this.top + t / 2 + i.top)),
        (this.drawingArea = Math.floor(Math.min(e, t) / 2));
    }
    determineDataLimits() {
      let { min: i, max: e } = this.getMinMax(!1);
      (this.min = di(i) && !isNaN(i) ? i : 0),
        (this.max = di(e) && !isNaN(e) ? e : 0),
        this.handleTickRangeOptions();
    }
    computeTickLimit() {
      return Math.ceil(this.drawingArea / pm(this.options));
    }
    generateTickLabels(i) {
      ba.prototype.generateTickLabels.call(this, i),
        (this._pointLabels = this.getLabels()
          .map((e, t) => {
            let r = Ht(this.options.pointLabels.callback, [e, t], this);
            return r || r === 0 ? r : "";
          })
          .filter((e, t) => this.chart.getDataVisibility(t)));
    }
    fit() {
      let i = this.options;
      i.display && i.pointLabels.display
        ? B2(this)
        : this.setCenterPoint(0, 0, 0, 0);
    }
    setCenterPoint(i, e, t, r) {
      (this.xCenter += Math.floor((i - e) / 2)),
        (this.yCenter += Math.floor((t - r) / 2)),
        (this.drawingArea -= Math.min(
          this.drawingArea / 2,
          Math.max(i, e, t, r)
        ));
    }
    getIndexAngle(i) {
      let e = Qn / (this._pointLabels.length || 1),
        t = this.options.startAngle || 0;
      return En(i * e + vr(t));
    }
    getDistanceFromCenterForValue(i) {
      if (Et(i)) return NaN;
      let e = this.drawingArea / (this.max - this.min);
      return this.options.reverse ? (this.max - i) * e : (i - this.min) * e;
    }
    getValueForDistanceFromCenter(i) {
      if (Et(i)) return NaN;
      let e = i / (this.drawingArea / (this.max - this.min));
      return this.options.reverse ? this.max - e : this.min + e;
    }
    getPointLabelContext(i) {
      let e = this._pointLabels || [];
      if (i >= 0 && i < e.length) {
        let t = e[i];
        return Q2(this.getContext(), i, t);
      }
    }
    getPointPosition(i, e, t = 0) {
      let r = this.getIndexAngle(i) - Xn + t;
      return {
        x: Math.cos(r) * e + this.xCenter,
        y: Math.sin(r) * e + this.yCenter,
        angle: r,
      };
    }
    getPointPositionForValue(i, e) {
      return this.getPointPosition(i, this.getDistanceFromCenterForValue(e));
    }
    getBasePosition(i) {
      return this.getPointPositionForValue(i || 0, this.getBaseValue());
    }
    getPointLabelPosition(i) {
      let { left: e, top: t, right: r, bottom: o } = this._pointLabelItems[i];
      return { left: e, top: t, right: r, bottom: o };
    }
    drawBackground() {
      let {
        backgroundColor: i,
        grid: { circular: e },
      } = this.options;
      if (i) {
        let t = this.ctx;
        t.save(),
          t.beginPath(),
          jv(
            this,
            this.getDistanceFromCenterForValue(this._endValue),
            e,
            this._pointLabels.length
          ),
          t.closePath(),
          (t.fillStyle = i),
          t.fill(),
          t.restore();
      }
    }
    drawGrid() {
      let i = this.ctx,
        e = this.options,
        { angleLines: t, grid: r, border: o } = e,
        a = this._pointLabels.length,
        l,
        u,
        f;
      if (
        (e.pointLabels.display && q2(this, a),
        r.display &&
          this.ticks.forEach((v, D) => {
            if (D !== 0 || (D === 0 && this.min < 0)) {
              u = this.getDistanceFromCenterForValue(v.value);
              let T = this.getContext(D),
                M = r.setContext(T),
                k = o.setContext(T);
              K2(this, M, u, a, k);
            }
          }),
        t.display)
      ) {
        for (i.save(), l = a - 1; l >= 0; l--) {
          let v = t.setContext(this.getPointLabelContext(l)),
            { color: D, lineWidth: T } = v;
          !T ||
            !D ||
            ((i.lineWidth = T),
            (i.strokeStyle = D),
            i.setLineDash(v.borderDash),
            (i.lineDashOffset = v.borderDashOffset),
            (u = this.getDistanceFromCenterForValue(
              e.reverse ? this.min : this.max
            )),
            (f = this.getPointPosition(l, u)),
            i.beginPath(),
            i.moveTo(this.xCenter, this.yCenter),
            i.lineTo(f.x, f.y),
            i.stroke());
        }
        i.restore();
      }
    }
    drawBorder() {}
    drawLabels() {
      let i = this.ctx,
        e = this.options,
        t = e.ticks;
      if (!t.display) return;
      let r = this.getIndexAngle(0),
        o,
        a;
      i.save(),
        i.translate(this.xCenter, this.yCenter),
        i.rotate(r),
        (i.textAlign = "center"),
        (i.textBaseline = "middle"),
        this.ticks.forEach((l, u) => {
          if (u === 0 && this.min >= 0 && !e.reverse) return;
          let f = t.setContext(this.getContext(u)),
            v = yo(f.font);
          if (
            ((o = this.getDistanceFromCenterForValue(this.ticks[u].value)),
            f.showLabelBackdrop)
          ) {
            (i.font = v.string),
              (a = i.measureText(l.label).width),
              (i.fillStyle = f.backdropColor);
            let D = Zn(f.backdropPadding);
            i.fillRect(
              -a / 2 - D.left,
              -o - v.size / 2 - D.top,
              a + D.width,
              v.size + D.height
            );
          }
          Ks(i, l.label, 0, -o, v, {
            color: f.color,
            strokeColor: f.textStrokeColor,
            strokeWidth: f.textStrokeWidth,
          });
        }),
        i.restore();
    }
    drawTitle() {}
  },
  Cd = {
    millisecond: { common: !0, size: 1, steps: 1e3 },
    second: { common: !0, size: 1e3, steps: 60 },
    minute: { common: !0, size: 6e4, steps: 60 },
    hour: { common: !0, size: 36e5, steps: 24 },
    day: { common: !0, size: 864e5, steps: 30 },
    week: { common: !1, size: 6048e5, steps: 4 },
    month: { common: !0, size: 2628e6, steps: 12 },
    quarter: { common: !1, size: 7884e6, steps: 4 },
    year: { common: !0, size: 3154e7 },
  },
  ji = Object.keys(Cd);
function Sv(n, i) {
  return n - i;
}
function Mv(n, i) {
  if (Et(i)) return null;
  let e = n._adapter,
    { parser: t, round: r, isoWeekday: o } = n._parseOpts,
    a = i;
  return (
    typeof t == "function" && (a = t(a)),
    di(a) || (a = typeof t == "string" ? e.parse(a, t) : e.parse(a)),
    a === null
      ? null
      : (r &&
          (a =
            r === "week" && (Ys(o) || o === !0)
              ? e.startOf(a, "isoWeek", o)
              : e.startOf(a, r)),
        +a)
  );
}
function Tv(n, i, e, t) {
  let r = ji.length;
  for (let o = ji.indexOf(n); o < r - 1; ++o) {
    let a = Cd[ji[o]],
      l = a.steps ? a.steps : Number.MAX_SAFE_INTEGER;
    if (a.common && Math.ceil((e - i) / (l * a.size)) <= t) return ji[o];
  }
  return ji[r - 1];
}
function X2(n, i, e, t, r) {
  for (let o = ji.length - 1; o >= ji.indexOf(e); o--) {
    let a = ji[o];
    if (Cd[a].common && n._adapter.diff(r, t, a) >= i - 1) return a;
  }
  return ji[e ? ji.indexOf(e) : 0];
}
function Z2(n) {
  for (let i = ji.indexOf(n) + 1, e = ji.length; i < e; ++i)
    if (Cd[ji[i]].common) return ji[i];
}
function Ev(n, i, e) {
  if (!e) n[i] = !0;
  else if (e.length) {
    let { lo: t, hi: r } = rd(e, i),
      o = e[t] >= i ? e[t] : e[r];
    n[o] = !0;
  }
}
function J2(n, i, e, t) {
  let r = n._adapter,
    o = +r.startOf(i[0].value, t),
    a = i[i.length - 1].value,
    l,
    u;
  for (l = o; l <= a; l = +r.add(l, 1, t))
    (u = e[l]), u >= 0 && (i[u].major = !0);
  return i;
}
function Ov(n, i, e) {
  let t = [],
    r = {},
    o = i.length,
    a,
    l;
  for (a = 0; a < o; ++a)
    (l = i[a]), (r[l] = a), t.push({ value: l, major: !1 });
  return o === 0 || !e ? t : J2(n, t, r, e);
}
var kv = (() => {
  class n extends _a {
    static id = "time";
    static defaults = {
      bounds: "data",
      adapters: {},
      time: {
        parser: !1,
        unit: !1,
        round: !1,
        isoWeekday: !1,
        minUnit: "millisecond",
        displayFormats: {},
      },
      ticks: { source: "auto", callback: !1, major: { enabled: !1 } },
    };
    constructor(e) {
      super(e),
        (this._cache = { data: [], labels: [], all: [] }),
        (this._unit = "day"),
        (this._majorUnit = void 0),
        (this._offsets = {}),
        (this._normalized = !1),
        (this._parseOpts = void 0);
    }
    init(e, t = {}) {
      let r = e.time || (e.time = {}),
        o = (this._adapter = new PM._date(e.adapters.date));
      o.init(t),
        fa(r.displayFormats, o.formats()),
        (this._parseOpts = {
          parser: r.parser,
          round: r.round,
          isoWeekday: r.isoWeekday,
        }),
        super.init(e),
        (this._normalized = t.normalized);
    }
    parse(e, t) {
      return e === void 0 ? null : Mv(this, e);
    }
    beforeLayout() {
      super.beforeLayout(), (this._cache = { data: [], labels: [], all: [] });
    }
    determineDataLimits() {
      let e = this.options,
        t = this._adapter,
        r = e.time.unit || "day",
        { min: o, max: a, minDefined: l, maxDefined: u } = this.getUserBounds();
      function f(v) {
        !l && !isNaN(v.min) && (o = Math.min(o, v.min)),
          !u && !isNaN(v.max) && (a = Math.max(a, v.max));
      }
      (!l || !u) &&
        (f(this._getLabelBounds()),
        (e.bounds !== "ticks" || e.ticks.source !== "labels") &&
          f(this.getMinMax(!1))),
        (o = di(o) && !isNaN(o) ? o : +t.startOf(Date.now(), r)),
        (a = di(a) && !isNaN(a) ? a : +t.endOf(Date.now(), r) + 1),
        (this.min = Math.min(o, a - 1)),
        (this.max = Math.max(o + 1, a));
    }
    _getLabelBounds() {
      let e = this.getLabelTimestamps(),
        t = Number.POSITIVE_INFINITY,
        r = Number.NEGATIVE_INFINITY;
      return (
        e.length && ((t = e[0]), (r = e[e.length - 1])), { min: t, max: r }
      );
    }
    buildTicks() {
      let e = this.options,
        t = e.time,
        r = e.ticks,
        o =
          r.source === "labels" ? this.getLabelTimestamps() : this._generate();
      e.bounds === "ticks" &&
        o.length &&
        ((this.min = this._userMin || o[0]),
        (this.max = this._userMax || o[o.length - 1]));
      let a = this.min,
        l = this.max,
        u = Eb(o, a, l);
      return (
        (this._unit =
          t.unit ||
          (r.autoSkip
            ? Tv(t.minUnit, this.min, this.max, this._getLabelCapacity(a))
            : X2(this, u.length, t.minUnit, this.min, this.max))),
        (this._majorUnit =
          !r.major.enabled || this._unit === "year" ? void 0 : Z2(this._unit)),
        this.initOffsets(o),
        e.reverse && u.reverse(),
        Ov(this, u, this._majorUnit)
      );
    }
    afterAutoSkip() {
      this.options.offsetAfterAutoskip &&
        this.initOffsets(this.ticks.map((e) => +e.value));
    }
    initOffsets(e = []) {
      let t = 0,
        r = 0,
        o,
        a;
      this.options.offset &&
        e.length &&
        ((o = this.getDecimalForValue(e[0])),
        e.length === 1
          ? (t = 1 - o)
          : (t = (this.getDecimalForValue(e[1]) - o) / 2),
        (a = this.getDecimalForValue(e[e.length - 1])),
        e.length === 1
          ? (r = a)
          : (r = (a - this.getDecimalForValue(e[e.length - 2])) / 2));
      let l = e.length < 3 ? 0.5 : 0.25;
      (t = zr(t, 0, l)),
        (r = zr(r, 0, l)),
        (this._offsets = { start: t, end: r, factor: 1 / (t + 1 + r) });
    }
    _generate() {
      let e = this._adapter,
        t = this.min,
        r = this.max,
        o = this.options,
        a = o.time,
        l = a.unit || Tv(a.minUnit, t, r, this._getLabelCapacity(t)),
        u = $t(o.ticks.stepSize, 1),
        f = l === "week" ? a.isoWeekday : !1,
        v = Ys(f) || f === !0,
        D = {},
        T = t,
        M,
        k;
      if (
        (v && (T = +e.startOf(T, "isoWeek", f)),
        (T = +e.startOf(T, v ? "day" : l)),
        e.diff(r, t, l) > 1e5 * u)
      )
        throw new Error(
          t + " and " + r + " are too far apart with stepSize of " + u + " " + l
        );
      let V = o.ticks.source === "data" && this.getDataTimestamps();
      for (M = T, k = 0; M < r; M = +e.add(M, u, l), k++) Ev(D, M, V);
      return (
        (M === r || o.bounds === "ticks" || k === 1) && Ev(D, M, V),
        Object.keys(D)
          .sort(Sv)
          .map((A) => +A)
      );
    }
    getLabelForValue(e) {
      let t = this._adapter,
        r = this.options.time;
      return r.tooltipFormat
        ? t.format(e, r.tooltipFormat)
        : t.format(e, r.displayFormats.datetime);
    }
    format(e, t) {
      let o = this.options.time.displayFormats,
        a = this._unit,
        l = t || o[a];
      return this._adapter.format(e, l);
    }
    _tickFormatFunction(e, t, r, o) {
      let a = this.options,
        l = a.ticks.callback;
      if (l) return Ht(l, [e, t, r], this);
      let u = a.time.displayFormats,
        f = this._unit,
        v = this._majorUnit,
        D = f && u[f],
        T = v && u[v],
        M = r[t],
        k = v && T && M && M.major;
      return this._adapter.format(e, o || (k ? T : D));
    }
    generateTickLabels(e) {
      let t, r, o;
      for (t = 0, r = e.length; t < r; ++t)
        (o = e[t]), (o.label = this._tickFormatFunction(o.value, t, e));
    }
    getDecimalForValue(e) {
      return e === null ? NaN : (e - this.min) / (this.max - this.min);
    }
    getPixelForValue(e) {
      let t = this._offsets,
        r = this.getDecimalForValue(e);
      return this.getPixelForDecimal((t.start + r) * t.factor);
    }
    getValueForPixel(e) {
      let t = this._offsets,
        r = this.getDecimalForPixel(e) / t.factor - t.end;
      return this.min + r * (this.max - this.min);
    }
    _getLabelSize(e) {
      let t = this.options.ticks,
        r = this.ctx.measureText(e).width,
        o = vr(this.isHorizontal() ? t.maxRotation : t.minRotation),
        a = Math.cos(o),
        l = Math.sin(o),
        u = this._resolveTickFontOptions(0).size;
      return { w: r * a + u * l, h: r * l + u * a };
    }
    _getLabelCapacity(e) {
      let t = this.options.time,
        r = t.displayFormats,
        o = r[t.unit] || r.millisecond,
        a = this._tickFormatFunction(e, 0, Ov(this, [e], this._majorUnit), o),
        l = this._getLabelSize(a),
        u =
          Math.floor(
            this.isHorizontal() ? this.width / l.w : this.height / l.h
          ) - 1;
      return u > 0 ? u : 1;
    }
    getDataTimestamps() {
      let e = this._cache.data || [],
        t,
        r;
      if (e.length) return e;
      let o = this.getMatchingVisibleMetas();
      if (this._normalized && o.length)
        return (this._cache.data = o[0].controller.getAllParsedValues(this));
      for (t = 0, r = o.length; t < r; ++t)
        e = e.concat(o[t].controller.getAllParsedValues(this));
      return (this._cache.data = this.normalize(e));
    }
    getLabelTimestamps() {
      let e = this._cache.labels || [],
        t,
        r;
      if (e.length) return e;
      let o = this.getLabels();
      for (t = 0, r = o.length; t < r; ++t) e.push(Mv(this, o[t]));
      return (this._cache.labels = this._normalized ? e : this.normalize(e));
    }
    normalize(e) {
      return Pb(e.sort(Sv));
    }
  }
  return n;
})();
function gd(n, i, e) {
  let t = 0,
    r = n.length - 1,
    o,
    a,
    l,
    u;
  e
    ? (i >= n[t].pos && i <= n[r].pos && ({ lo: t, hi: r } = od(n, "pos", i)),
      ({ pos: o, time: l } = n[t]),
      ({ pos: a, time: u } = n[r]))
    : (i >= n[t].time &&
        i <= n[r].time &&
        ({ lo: t, hi: r } = od(n, "time", i)),
      ({ time: o, pos: l } = n[t]),
      ({ time: a, pos: u } = n[r]));
  let f = a - o;
  return f ? l + ((u - l) * (i - o)) / f : l;
}
var Pv = class extends kv {
  static id = "timeseries";
  static defaults = kv.defaults;
  constructor(i) {
    super(i),
      (this._table = []),
      (this._minPos = void 0),
      (this._tableRange = void 0);
  }
  initOffsets() {
    let i = this._getTimestampsForTable(),
      e = (this._table = this.buildLookupTable(i));
    (this._minPos = gd(e, this.min)),
      (this._tableRange = gd(e, this.max) - this._minPos),
      super.initOffsets(i);
  }
  buildLookupTable(i) {
    let { min: e, max: t } = this,
      r = [],
      o = [],
      a,
      l,
      u,
      f,
      v;
    for (a = 0, l = i.length; a < l; ++a)
      (f = i[a]), f >= e && f <= t && r.push(f);
    if (r.length < 2)
      return [
        { time: e, pos: 0 },
        { time: t, pos: 1 },
      ];
    for (a = 0, l = r.length; a < l; ++a)
      (v = r[a + 1]),
        (u = r[a - 1]),
        (f = r[a]),
        Math.round((v + u) / 2) !== f && o.push({ time: f, pos: a / (l - 1) });
    return o;
  }
  _generate() {
    let i = this.min,
      e = this.max,
      t = super.getDataTimestamps();
    return (
      (!t.includes(i) || !t.length) && t.splice(0, 0, i),
      (!t.includes(e) || t.length === 1) && t.push(e),
      t.sort((r, o) => r - o)
    );
  }
  _getTimestampsForTable() {
    let i = this._cache.all || [];
    if (i.length) return i;
    let e = this.getDataTimestamps(),
      t = this.getLabelTimestamps();
    return (
      e.length && t.length
        ? (i = this.normalize(e.concat(t)))
        : (i = e.length ? e : t),
      (i = this._cache.all = i),
      i
    );
  }
  getDecimalForValue(i) {
    return (gd(this._table, i) - this._minPos) / this._tableRange;
  }
  getValueForPixel(i) {
    let e = this._offsets,
      t = this.getDecimalForPixel(i) / e.factor - e.end;
    return gd(this._table, t * this._tableRange + this._minPos, !0);
  }
};
var fm = class {
  constructor() {
    (this.class = ""),
      (this.backgroundGradient = !1),
      (this.backgroundColor = "transparent"),
      (this.backgroundGradientStopColor = "transparent"),
      (this.backgroundOpacity = 1),
      (this.backgroundStroke = "transparent"),
      (this.backgroundStrokeWidth = 0),
      (this.backgroundPadding = 5),
      (this.percent = 0),
      (this.radius = 90),
      (this.space = 4),
      (this.toFixed = 0),
      (this.maxPercent = 1e3),
      (this.renderOnClick = !0),
      (this.units = "%"),
      (this.unitsFontSize = "10"),
      (this.unitsFontWeight = "normal"),
      (this.unitsColor = "#444444"),
      (this.outerStrokeGradient = !1),
      (this.outerStrokeWidth = 8),
      (this.outerStrokeColor = "#78C000"),
      (this.outerStrokeGradientStopColor = "transparent"),
      (this.outerStrokeLinecap = "round"),
      (this.innerStrokeColor = "#C7E596"),
      (this.innerStrokeWidth = 4),
      (this.titleFormat = void 0),
      (this.title = "auto"),
      (this.titleColor = "#444444"),
      (this.titleFontSize = "20"),
      (this.titleFontWeight = "normal"),
      (this.subtitleFormat = void 0),
      (this.subtitle = "progress"),
      (this.subtitleColor = "#A9A9A9"),
      (this.subtitleFontSize = "10"),
      (this.subtitleFontWeight = "normal"),
      (this.imageSrc = void 0),
      (this.imageHeight = 0),
      (this.imageWidth = 0),
      (this.animation = !0),
      (this.animateTitle = !0),
      (this.animateSubtitle = !1),
      (this.animationDuration = 500),
      (this.showTitle = !0),
      (this.showSubtitle = !0),
      (this.showUnits = !0),
      (this.showImage = !1),
      (this.showBackground = !0),
      (this.showInnerStroke = !0),
      (this.clockwise = !0),
      (this.responsive = !1),
      (this.startFromZero = !0),
      (this.showZeroOuterStroke = !0),
      (this.lazy = !1);
  }
};
var wd = (() => {
  class n {
    static forRoot(e = {}) {
      return { ngModule: n, providers: [{ provide: fm, useValue: e }] };
    }
  }
  return (
    (n.ɵfac = function (e) {
      return new (e || n)();
    }),
    (n.ɵmod = ye({ type: n })),
    (n.ɵinj = ve({ imports: [Ae] })),
    n
  );
})();
var Dd = class n {
  constructor(i) {
    this.http = i;
  }
  baseUrl = "https://uat.smartassistapp.in/api/superAdmin/dashboard";
  getDealerActivities(i) {
    let e = sessionStorage.getItem("token"),
      t = new St({ Authorization: `Bearer ${e}` }),
      r = `${this.baseUrl}/NoSM?type=${i}`;
    return this.http.get(r, { headers: t });
  }
  getDealerActivitiesCustom(i, e, t) {
    let r = sessionStorage.getItem("token"),
      o = new St({ Authorization: `Bearer ${r}` }),
      a = t || "MTD",
      l = `${this.baseUrl}/NoSM?type=${a}&start_date=${i}&end_date=${e}`;
    return this.http.get(l, { headers: o });
  }
  getNoSMUsers(i, e = "MTD", t, r) {
    let o = sessionStorage.getItem("token"),
      a = new St({ Authorization: `Bearer ${o}` }),
      l = `${this.baseUrl}/NoSM?dealer_id=${i}&type=${e}`;
    return (
      e === "CUSTOM" && t && r && (l += `&start_date=${t}&end_date=${r}`),
      this.http.get(l, { headers: a })
    );
  }
  getDealers(i, e) {
    return this.http.get(
      `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${i}`,
      { headers: { Authorization: `Bearer ${e}` } }
    );
  }
  getDealersByCustomDate(i, e, t, r) {
    let o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?start_date=${i}&end_date=${e}`;
    return (
      r &&
        (o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${r}&start_date=${i}&end_date=${e}`),
      this.http.get(o, { headers: { Authorization: `Bearer ${t}` } })
    );
  }
  getDealerUsers(i, e, t) {
    let r = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&type=${e}`;
    return this.http.get(r, { headers: { Authorization: `Bearer ${t}` } });
  }
  getCustomUsers(i, e, t, r) {
    let o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&start_date=${e}&end_date=${t}`;
    return this.http.get(o, { headers: { Authorization: `Bearer ${r}` } });
  }
  getKpiData(i, e = "MTD") {
    let t = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${e}`;
    return this.http.get(t, { headers: { Authorization: `Bearer ${i}` } });
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Bt));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Sd = class n {
  selectedDealerSource = new Nt(null);
  selectedDealer$ = this.selectedDealerSource.asObservable();
  setSelectedDealer(i) {
    this.selectedDealerSource.next(i);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Uv = ["toast-component", ""];
function iT(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 5),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.remove());
      }),
      c(1, "span", 6),
      h(2, "\xD7"),
      d()();
  }
}
function nT(n, i) {
  if ((n & 1 && (Ue(0), h(1), ze()), n & 2)) {
    let e = x(2);
    m(), ee("[", e.duplicatesCount + 1, "]");
  }
}
function rT(n, i) {
  if (
    (n & 1 && (c(0, "div"), h(1), R(2, nT, 2, 1, "ng-container", 4), d()),
    n & 2)
  ) {
    let e = x();
    Be(e.options.titleClass),
      le("aria-label", e.title),
      m(),
      ee(" ", e.title, " "),
      m(),
      y("ngIf", e.duplicatesCount);
  }
}
function oT(n, i) {
  if ((n & 1 && z(0, "div", 7), n & 2)) {
    let e = x();
    Be(e.options.messageClass), y("innerHTML", e.message, Ja);
  }
}
function aT(n, i) {
  if ((n & 1 && (c(0, "div", 8), h(1), d()), n & 2)) {
    let e = x();
    Be(e.options.messageClass),
      le("aria-label", e.message),
      m(),
      ee(" ", e.message, " ");
  }
}
function sT(n, i) {
  if ((n & 1 && (c(0, "div"), z(1, "div", 9), d()), n & 2)) {
    let e = x();
    m(), si("width", e.width() + "%");
  }
}
function lT(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 5),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.remove());
      }),
      c(1, "span", 6),
      h(2, "\xD7"),
      d()();
  }
}
function cT(n, i) {
  if ((n & 1 && (Ue(0), h(1), ze()), n & 2)) {
    let e = x(2);
    m(), ee("[", e.duplicatesCount + 1, "]");
  }
}
function dT(n, i) {
  if (
    (n & 1 && (c(0, "div"), h(1), R(2, cT, 2, 1, "ng-container", 4), d()),
    n & 2)
  ) {
    let e = x();
    Be(e.options.titleClass),
      le("aria-label", e.title),
      m(),
      ee(" ", e.title, " "),
      m(),
      y("ngIf", e.duplicatesCount);
  }
}
function uT(n, i) {
  if ((n & 1 && z(0, "div", 7), n & 2)) {
    let e = x();
    Be(e.options.messageClass), y("innerHTML", e.message, Ja);
  }
}
function hT(n, i) {
  if ((n & 1 && (c(0, "div", 8), h(1), d()), n & 2)) {
    let e = x();
    Be(e.options.messageClass),
      le("aria-label", e.message),
      m(),
      ee(" ", e.message, " ");
  }
}
function pT(n, i) {
  if ((n & 1 && (c(0, "div"), z(1, "div", 9), d()), n & 2)) {
    let e = x();
    m(), si("width", e.width() + "%");
  }
}
var gm = class {
    _attachedHost;
    component;
    viewContainerRef;
    injector;
    constructor(i, e) {
      (this.component = i), (this.injector = e);
    }
    attach(i, e) {
      return (this._attachedHost = i), i.attach(this, e);
    }
    detach() {
      let i = this._attachedHost;
      if (i) return (this._attachedHost = void 0), i.detach();
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(i) {
      this._attachedHost = i;
    }
  },
  _m = class {
    _attachedPortal;
    _disposeFn;
    attach(i, e) {
      return (this._attachedPortal = i), this.attachComponentPortal(i, e);
    }
    detach() {
      this._attachedPortal && this._attachedPortal.setAttachedHost(),
        (this._attachedPortal = void 0),
        this._disposeFn && (this._disposeFn(), (this._disposeFn = void 0));
    }
    setDisposeFn(i) {
      this._disposeFn = i;
    }
  },
  bm = class {
    _overlayRef;
    componentInstance;
    duplicatesCount = 0;
    _afterClosed = new Oe();
    _activate = new Oe();
    _manualClose = new Oe();
    _resetTimeout = new Oe();
    _countDuplicate = new Oe();
    constructor(i) {
      this._overlayRef = i;
    }
    manualClose() {
      this._manualClose.next(), this._manualClose.complete();
    }
    manualClosed() {
      return this._manualClose.asObservable();
    }
    timeoutReset() {
      return this._resetTimeout.asObservable();
    }
    countDuplicate() {
      return this._countDuplicate.asObservable();
    }
    close() {
      this._overlayRef.detach(),
        this._afterClosed.next(),
        this._manualClose.next(),
        this._afterClosed.complete(),
        this._manualClose.complete(),
        this._activate.complete(),
        this._resetTimeout.complete(),
        this._countDuplicate.complete();
    }
    afterClosed() {
      return this._afterClosed.asObservable();
    }
    isInactive() {
      return this._activate.isStopped;
    }
    activate() {
      this._activate.next(), this._activate.complete();
    }
    afterActivate() {
      return this._activate.asObservable();
    }
    onDuplicate(i, e) {
      i && this._resetTimeout.next(),
        e && this._countDuplicate.next(++this.duplicatesCount);
    }
  },
  va = class {
    toastId;
    config;
    message;
    title;
    toastType;
    toastRef;
    _onTap = new Oe();
    _onAction = new Oe();
    constructor(i, e, t, r, o, a) {
      (this.toastId = i),
        (this.config = e),
        (this.message = t),
        (this.title = r),
        (this.toastType = o),
        (this.toastRef = a),
        this.toastRef.afterClosed().subscribe(() => {
          this._onAction.complete(), this._onTap.complete();
        });
    }
    triggerTap() {
      this._onTap.next(), this.config.tapToDismiss && this._onTap.complete();
    }
    onTap() {
      return this._onTap.asObservable();
    }
    triggerAction(i) {
      this._onAction.next(i);
    }
    onAction() {
      return this._onAction.asObservable();
    }
  },
  zv = {
    maxOpened: 0,
    autoDismiss: !1,
    newestOnTop: !0,
    preventDuplicates: !1,
    countDuplicates: !1,
    resetTimeoutOnDuplicate: !1,
    includeTitleDuplicates: !1,
    iconClasses: {
      error: "toast-error",
      info: "toast-info",
      success: "toast-success",
      warning: "toast-warning",
    },
    closeButton: !1,
    disableTimeOut: !1,
    timeOut: 5e3,
    extendedTimeOut: 1e3,
    enableHtml: !1,
    progressBar: !1,
    toastClass: "ngx-toastr",
    positionClass: "toast-top-right",
    titleClass: "toast-title",
    messageClass: "toast-message",
    easing: "ease-in",
    easeTime: 300,
    tapToDismiss: !0,
    onActivateTick: !1,
    progressAnimation: "decreasing",
  },
  $v = new we("ToastConfig"),
  vm = class extends _m {
    _hostDomElement;
    _componentFactoryResolver;
    _appRef;
    constructor(i, e, t) {
      super(),
        (this._hostDomElement = i),
        (this._componentFactoryResolver = e),
        (this._appRef = t);
    }
    attachComponentPortal(i, e) {
      let t = this._componentFactoryResolver.resolveComponentFactory(
          i.component
        ),
        r;
      return (
        (r = t.create(i.injector)),
        this._appRef.attachView(r.hostView),
        this.setDisposeFn(() => {
          this._appRef.detachView(r.hostView), r.destroy();
        }),
        e
          ? this._hostDomElement.insertBefore(
              this._getComponentRootNode(r),
              this._hostDomElement.firstChild
            )
          : this._hostDomElement.appendChild(this._getComponentRootNode(r)),
        r
      );
    }
    _getComponentRootNode(i) {
      return i.hostView.rootNodes[0];
    }
  },
  mT = (() => {
    class n {
      _document = G(ke);
      _containerElement;
      ngOnDestroy() {
        this._containerElement &&
          this._containerElement.parentNode &&
          this._containerElement.parentNode.removeChild(this._containerElement);
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = this._document.createElement("div");
        e.classList.add("overlay-container"),
          e.setAttribute("aria-live", "polite"),
          this._document.body.appendChild(e),
          (this._containerElement = e);
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  ym = class {
    _portalHost;
    constructor(i) {
      this._portalHost = i;
    }
    attach(i, e = !0) {
      return this._portalHost.attach(i, e);
    }
    detach() {
      return this._portalHost.detach();
    }
  },
  fT = (() => {
    class n {
      _overlayContainer = G(mT);
      _componentFactoryResolver = G(oo);
      _appRef = G(Li);
      _document = G(ke);
      _paneElements = new Map();
      create(e, t) {
        return this._createOverlayRef(this.getPaneElement(e, t));
      }
      getPaneElement(e = "", t) {
        return (
          this._paneElements.get(t) || this._paneElements.set(t, {}),
          this._paneElements.get(t)[e] ||
            (this._paneElements.get(t)[e] = this._createPaneElement(e, t)),
          this._paneElements.get(t)[e]
        );
      }
      _createPaneElement(e, t) {
        let r = this._document.createElement("div");
        return (
          (r.id = "toast-container"),
          r.classList.add(e),
          r.classList.add("toast-container"),
          t
            ? t.getContainerElement().appendChild(r)
            : this._overlayContainer.getContainerElement().appendChild(r),
          r
        );
      }
      _createPortalHost(e) {
        return new vm(e, this._componentFactoryResolver, this._appRef);
      }
      _createOverlayRef(e) {
        return new ym(this._createPortalHost(e));
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  fi = (() => {
    class n {
      overlay;
      _injector;
      sanitizer;
      ngZone;
      toastrConfig;
      currentlyActive = 0;
      toasts = [];
      overlayContainer;
      previousToastMessage;
      index = 0;
      constructor(e, t, r, o, a) {
        (this.overlay = t),
          (this._injector = r),
          (this.sanitizer = o),
          (this.ngZone = a),
          (this.toastrConfig = W(W({}, e.default), e.config)),
          e.config.iconClasses &&
            (this.toastrConfig.iconClasses = W(
              W({}, e.default.iconClasses),
              e.config.iconClasses
            ));
      }
      show(e, t, r = {}, o = "") {
        return this._preBuildNotification(o, e, t, this.applyConfig(r));
      }
      success(e, t, r = {}) {
        let o = this.toastrConfig.iconClasses.success || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(r));
      }
      error(e, t, r = {}) {
        let o = this.toastrConfig.iconClasses.error || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(r));
      }
      info(e, t, r = {}) {
        let o = this.toastrConfig.iconClasses.info || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(r));
      }
      warning(e, t, r = {}) {
        let o = this.toastrConfig.iconClasses.warning || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(r));
      }
      clear(e) {
        for (let t of this.toasts)
          if (e !== void 0) {
            if (t.toastId === e) {
              t.toastRef.manualClose();
              return;
            }
          } else t.toastRef.manualClose();
      }
      remove(e) {
        let t = this._findToast(e);
        if (
          !t ||
          (t.activeToast.toastRef.close(),
          this.toasts.splice(t.index, 1),
          (this.currentlyActive = this.currentlyActive - 1),
          !this.toastrConfig.maxOpened || !this.toasts.length)
        )
          return !1;
        if (
          this.currentlyActive < this.toastrConfig.maxOpened &&
          this.toasts[this.currentlyActive]
        ) {
          let r = this.toasts[this.currentlyActive].toastRef;
          r.isInactive() ||
            ((this.currentlyActive = this.currentlyActive + 1), r.activate());
        }
        return !0;
      }
      findDuplicate(e = "", t = "", r, o) {
        let { includeTitleDuplicates: a } = this.toastrConfig;
        for (let l of this.toasts) {
          let u = a && l.title === e;
          if ((!a || u) && l.message === t)
            return l.toastRef.onDuplicate(r, o), l;
        }
        return null;
      }
      applyConfig(e = {}) {
        return W(W({}, this.toastrConfig), e);
      }
      _findToast(e) {
        for (let t = 0; t < this.toasts.length; t++)
          if (this.toasts[t].toastId === e)
            return { index: t, activeToast: this.toasts[t] };
        return null;
      }
      _preBuildNotification(e, t, r, o) {
        return o.onActivateTick
          ? this.ngZone.run(() => this._buildNotification(e, t, r, o))
          : this._buildNotification(e, t, r, o);
      }
      _buildNotification(e, t, r, o) {
        if (!o.toastComponent) throw new Error("toastComponent required");
        let a = this.findDuplicate(
          r,
          t,
          this.toastrConfig.resetTimeoutOnDuplicate && o.timeOut > 0,
          this.toastrConfig.countDuplicates
        );
        if (
          ((this.toastrConfig.includeTitleDuplicates && r) || t) &&
          this.toastrConfig.preventDuplicates &&
          a !== null
        )
          return a;
        this.previousToastMessage = t;
        let l = !1;
        this.toastrConfig.maxOpened &&
          this.currentlyActive >= this.toastrConfig.maxOpened &&
          ((l = !0),
          this.toastrConfig.autoDismiss && this.clear(this.toasts[0].toastId));
        let u = this.overlay.create(o.positionClass, this.overlayContainer);
        this.index = this.index + 1;
        let f = t;
        t && o.enableHtml && (f = this.sanitizer.sanitize(cr.HTML, t));
        let v = new bm(u),
          D = new va(this.index, o, f, r, e, v),
          T = [{ provide: va, useValue: D }],
          M = Dt.create({ providers: T, parent: this._injector }),
          k = new gm(o.toastComponent, M),
          V = u.attach(k, o.newestOnTop);
        v.componentInstance = V.instance;
        let A = {
          toastId: this.index,
          title: r || "",
          message: t || "",
          toastRef: v,
          onShown: v.afterActivate(),
          onHidden: v.afterClosed(),
          onTap: D.onTap(),
          onAction: D.onAction(),
          portal: V,
        };
        return (
          l ||
            ((this.currentlyActive = this.currentlyActive + 1),
            setTimeout(() => {
              A.toastRef.activate();
            })),
          this.toasts.push(A),
          A
        );
      }
      static ɵfac = function (t) {
        return new (t || n)(Q($v), Q(fT), Q(Dt), Q(Mh), Q(Te));
      };
      static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  gT = (() => {
    class n {
      toastrService;
      toastPackage;
      ngZone;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = pe(-1);
      toastClasses = "";
      state;
      get _state() {
        return this.state();
      }
      get displayStyle() {
        if (this.state().value === "inactive") return "none";
      }
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, t, r) {
        (this.toastrService = e),
          (this.toastPackage = t),
          (this.ngZone = r),
          (this.message = t.message),
          (this.title = t.title),
          (this.options = t.config),
          (this.originalTimeout = t.config.timeOut),
          (this.toastClasses = `${t.toastType} ${t.config.toastClass}`),
          (this.sub = t.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = t.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = t.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = t.toastRef.countDuplicate().subscribe((o) => {
            this.duplicatesCount = o;
          })),
          (this.state = pe({
            value: "inactive",
            params: {
              easeTime: this.toastPackage.config.easeTime,
              easing: "ease-in",
            },
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.update((e) => Ce(W({}, e), { value: "active" })),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            (this.outsideTimeout(() => this.remove(), this.options.timeOut),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              this.outsideInterval(() => this.updateProgress(), 10));
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          t = this.hideTime - e;
        this.width.set((t / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((r) => 100 - r),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.update((e) => Ce(W({}, e), { value: "active" })),
          this.outsideTimeout(() => this.remove(), this.originalTimeout),
          (this.options.timeOut = this.originalTimeout),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10);
      }
      remove() {
        this.state().value !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.update((e) => Ce(W({}, e), { value: "removed" })),
          this.outsideTimeout(
            () => this.toastrService.remove(this.toastPackage.toastId),
            +this.toastPackage.config.easeTime
          ));
      }
      tapToast() {
        this.state().value !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state().value !== "removed" &&
          this.options.disableTimeOut !== "extendedTimeOut" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state().value === "removed" ||
          (this.outsideTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          ),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10));
      }
      outsideTimeout(e, t) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.timeout = setTimeout(() => this.runInsideAngular(e), t))
            )
          : (this.timeout = setTimeout(() => e(), t));
      }
      outsideInterval(e, t) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.intervalId = setInterval(
                  () => this.runInsideAngular(e),
                  t
                ))
            )
          : (this.intervalId = setInterval(() => e(), t));
      }
      runInsideAngular(e) {
        this.ngZone ? this.ngZone.run(() => e()) : e();
      }
      static ɵfac = function (t) {
        return new (t || n)(H(fi), H(va), H(Te));
      };
      static ɵcmp = ae({
        type: n,
        selectors: [["", "toast-component", ""]],
        hostVars: 5,
        hostBindings: function (t, r) {
          t & 1 &&
            N("click", function () {
              return r.tapToast();
            })("mouseenter", function () {
              return r.stickAround();
            })("mouseleave", function () {
              return r.delayedHideToast();
            }),
            t & 2 &&
              (Yl("@flyInOut", r._state),
              Be(r.toastClasses),
              si("display", r.displayStyle));
        },
        standalone: !0,
        features: [ce],
        attrs: Uv,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (t, r) {
          t & 1 &&
            R(0, iT, 3, 0, "button", 0)(1, rT, 3, 5, "div", 1)(
              2,
              oT,
              1,
              3,
              "div",
              2
            )(3, aT, 2, 4, "div", 3)(4, sT, 2, 2, "div", 4),
            t & 2 &&
              (y("ngIf", r.options.closeButton),
              m(),
              y("ngIf", r.title),
              m(),
              y("ngIf", r.message && r.options.enableHtml),
              m(),
              y("ngIf", r.message && !r.options.enableHtml),
              m(),
              y("ngIf", r.options.progressBar));
        },
        dependencies: [Xe],
        encapsulation: 2,
        data: {
          animation: [
            so("flyInOut", [
              ur("inactive", li({ opacity: 0 })),
              ur("active", li({ opacity: 1 })),
              ur("removed", li({ opacity: 0 })),
              Yi("inactive => active", Gi("{{ easeTime }}ms {{ easing }}")),
              Yi("active => removed", Gi("{{ easeTime }}ms {{ easing }}")),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return n;
  })(),
  _T = Ce(W({}, zv), { toastComponent: gT }),
  bT = (n = {}) => zn([{ provide: $v, useValue: { default: _T, config: n } }]),
  Wv = (() => {
    class n {
      static forRoot(e = {}) {
        return { ngModule: n, providers: [bT(e)] };
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({});
    }
    return n;
  })();
var vT = (() => {
    class n {
      toastrService;
      toastPackage;
      appRef;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = pe(-1);
      toastClasses = "";
      get displayStyle() {
        return this.state() === "inactive" ? "none" : null;
      }
      state = pe("inactive");
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, t, r) {
        (this.toastrService = e),
          (this.toastPackage = t),
          (this.appRef = r),
          (this.message = t.message),
          (this.title = t.title),
          (this.options = t.config),
          (this.originalTimeout = t.config.timeOut),
          (this.toastClasses = `${t.toastType} ${t.config.toastClass}`),
          (this.sub = t.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = t.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = t.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = t.toastRef.countDuplicate().subscribe((o) => {
            this.duplicatesCount = o;
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.set("active"),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            ((this.timeout = setTimeout(() => {
              this.remove();
            }, this.options.timeOut)),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              (this.intervalId = setInterval(() => this.updateProgress(), 10))),
          this.options.onActivateTick && this.appRef.tick();
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          t = this.hideTime - e;
        this.width.set((t / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((r) => 100 - r),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.set("active"),
          (this.options.timeOut = this.originalTimeout),
          (this.timeout = setTimeout(
            () => this.remove(),
            this.originalTimeout
          )),
          (this.hideTime = new Date().getTime() + (this.originalTimeout || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10));
      }
      remove() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.set("removed"),
          (this.timeout = setTimeout(() =>
            this.toastrService.remove(this.toastPackage.toastId)
          )));
      }
      tapToast() {
        this.state() !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state() === "removed" ||
          ((this.timeout = setTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          )),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10)));
      }
      static ɵfac = function (t) {
        return new (t || n)(H(fi), H(va), H(Li));
      };
      static ɵcmp = ae({
        type: n,
        selectors: [["", "toast-component", ""]],
        hostVars: 4,
        hostBindings: function (t, r) {
          t & 1 &&
            N("click", function () {
              return r.tapToast();
            })("mouseenter", function () {
              return r.stickAround();
            })("mouseleave", function () {
              return r.delayedHideToast();
            }),
            t & 2 && (Be(r.toastClasses), si("display", r.displayStyle));
        },
        standalone: !0,
        features: [ce],
        attrs: Uv,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (t, r) {
          t & 1 &&
            R(0, lT, 3, 0, "button", 0)(1, dT, 3, 5, "div", 1)(
              2,
              uT,
              1,
              3,
              "div",
              2
            )(3, hT, 2, 4, "div", 3)(4, pT, 2, 2, "div", 4),
            t & 2 &&
              (y("ngIf", r.options.closeButton),
              m(),
              y("ngIf", r.title),
              m(),
              y("ngIf", r.message && r.options.enableHtml),
              m(),
              y("ngIf", r.message && !r.options.enableHtml),
              m(),
              y("ngIf", r.options.progressBar));
        },
        dependencies: [Xe],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })(),
  C5 = Ce(W({}, zv), { toastComponent: vT });
var xT = ["chart"],
  CT = (n, i) => ({ "sidebar-open": n, "sidebar-closed": i }),
  Gv = (n) => ({ active: n }),
  Md = (n) => ({ color: n }),
  qv = (n, i) => ({ "row-alt": n, "row-normal": i }),
  wT = (n) => ({
    display: "inline-flex",
    "justify-content": "center",
    "align-items": "center",
    width: "16px",
    height: "16px",
    "border-radius": "50%",
    "background-color": n,
    color: "white",
    "font-size": "10px",
    "margin-right": "4px",
  }),
  Yv = (n) => ({ color: n });
function DT(n, i) {
  n & 1 && (c(0, "div", 63), z(1, "div", 64), d());
}
function ST(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 65)(1, "input", 66),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x(2);
        return ut(o.customStartDate, r) || (o.customStartDate = r), I(r);
      }),
      d(),
      c(2, "input", 67),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x(2);
        return ut(o.customEndDate, r) || (o.customEndDate = r), I(r);
      }),
      d(),
      c(3, "button", 68),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.applyCustomDate());
      }),
      h(4, "Apply"),
      d(),
      c(5, "button", 69),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.resetCustomDate());
      }),
      h(6, "Reset"),
      d()();
  }
  if (n & 2) {
    let e = x(2);
    m(), dt("ngModel", e.customStartDate), m(), dt("ngModel", e.customEndDate);
  }
}
function MT(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 79)(1, "input", 80),
      N("change", function (r) {
        let o = P(e).$implicit;
        return x(4).toggleDealerSelection(o), I(r.stopPropagation());
      }),
      d(),
      c(2, "span", 81),
      N("click", function (r) {
        let o = P(e).$implicit;
        return x(4).toggleDealerSelection(o), I(r.stopPropagation());
      }),
      h(3),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(4);
    m(), y("checked", t.isDealerSelected(e)), m(2), ee(" ", e.dealerName, " ");
  }
}
function TT(n, i) {
  if ((n & 1 && (Ue(0), R(1, MT, 4, 2, "div", 78), ze()), n & 2)) {
    let e = x(3);
    m(), y("ngForOf", e.filteredDealers)("ngForTrackBy", e.trackByDealerId);
  }
}
function ET(n, i) {
  n & 1 && (c(0, "div", 82), h(1, " No dealers found "), d());
}
function OT(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 70)(1, "div", 71)(2, "input", 72),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x(2);
        return ut(o.dealerSearch, r) || (o.dealerSearch = r), I(r);
      }),
      N("input", function () {
        P(e);
        let r = x(2);
        return I(r.filterDealers());
      })("click", function (r) {
        return P(e), I(r.stopPropagation());
      }),
      d()(),
      c(3, "div", 73)(4, "label", 74),
      N("click", function (r) {
        return P(e), I(r.stopPropagation());
      }),
      c(5, "input", 75),
      N("change", function (r) {
        return P(e), x(2).toggleSelectAll(r), I(r.stopPropagation());
      }),
      d(),
      h(6, " Select All "),
      d(),
      c(7, "button", 76),
      N("click", function (r) {
        return P(e), x(2).clearSelection(), I(r.stopPropagation());
      }),
      h(8, " Clear "),
      d()(),
      R(9, TT, 2, 2, "ng-container", 77)(
        10,
        ET,
        2,
        0,
        "ng-template",
        null,
        0,
        Pt
      ),
      d();
  }
  if (n & 2) {
    let e = _t(11),
      t = x(2);
    m(2),
      dt("ngModel", t.dealerSearch),
      m(3),
      y("checked", t.areAllSelected()),
      m(4),
      y("ngIf", t.filteredDealers.length > 0)("ngIfElse", e);
  }
}
function kT(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "tr", 85)(1, "td", 86)(2, "button", 87),
      N("click", function (r) {
        P(e);
        let o = x(),
          a = o.$implicit,
          l = o.index,
          u = x(2);
        return I(u.toggleRow(r, a, "engagement-" + l));
      }),
      z(3, "i", 88),
      c(4, "span", 89),
      h(5),
      d()()(),
      c(6, "td", 90),
      h(7),
      d(),
      c(8, "td", 90),
      h(9),
      d(),
      c(10, "td", 91),
      h(11),
      d(),
      c(12, "td", 92),
      h(13),
      d(),
      c(14, "td", 90),
      h(15),
      d(),
      c(16, "td", 90),
      h(17),
      d(),
      c(18, "td", 91),
      h(19),
      d(),
      c(20, "td", 92),
      h(21),
      d(),
      c(22, "td", 90),
      h(23),
      d(),
      c(24, "td", 90),
      h(25),
      d(),
      c(26, "td", 90),
      h(27),
      d(),
      c(28, "td", 91),
      h(29),
      d(),
      c(30, "td", 92),
      h(31),
      d(),
      c(32, "td", 90),
      h(33),
      d(),
      c(34, "td", 90),
      h(35),
      d(),
      c(36, "td", 90),
      h(37),
      d(),
      c(38, "td", 90),
      h(39),
      d()();
  }
  if (n & 2) {
    let e,
      t,
      r,
      o,
      a,
      l,
      u,
      f,
      v,
      D,
      T,
      M,
      k,
      V,
      A,
      E,
      X,
      se = x(),
      be = se.$implicit,
      Ee = se.index,
      _ = x(2);
    m(3),
      y(
        "ngClass",
        _.expandedRow === "engagement-" + Ee
          ? "fa-chevron-down"
          : "fa-chevron-right"
      ),
      m(2),
      ee(" ", be.dealerName, " "),
      m(2),
      B((e = be.totalUsers) !== null && e !== void 0 ? e : 0),
      m(2),
      B((t = be.activeUsers) !== null && t !== void 0 ? t : 0),
      m(2),
      B((r = be.saLeads) !== null && r !== void 0 ? r : 0),
      m(),
      y("ngStyle", de(22, Md, be.saLeads === be.cxpLeads ? "green" : "red")),
      m(),
      ee(" ", (o = be.cxpLeads) !== null && o !== void 0 ? o : 0, " "),
      m(2),
      B((a = be.icsLeads) !== null && a !== void 0 ? a : 0),
      m(2),
      B((l = be.manuallyEnteredLeads) !== null && l !== void 0 ? l : 0),
      m(2),
      B((u = be.saFollowUps) !== null && u !== void 0 ? u : 0),
      m(),
      y(
        "ngStyle",
        de(24, Md, be.saFollowUps === be.cxpFollowUps ? "green" : "red")
      ),
      m(),
      ee(" ", (f = be.cxpFollowUps) !== null && f !== void 0 ? f : 0, " "),
      m(2),
      B((v = be.completedFollowUps) !== null && v !== void 0 ? v : 0),
      m(2),
      B((D = be.openFollowUps) !== null && D !== void 0 ? D : 0),
      m(2),
      B((T = be.closedFollowUps) !== null && T !== void 0 ? T : 0),
      m(2),
      B((M = be.saTestDrives) !== null && M !== void 0 ? M : 0),
      m(),
      y(
        "ngStyle",
        de(26, Md, be.saTestDrives === be.cxpTestDrives ? "green" : "red")
      ),
      m(),
      ee(" ", (k = be.cxpTestDrives) !== null && k !== void 0 ? k : 0, " "),
      m(2),
      B((V = be.completedTestDrives) !== null && V !== void 0 ? V : 0),
      m(2),
      B((A = be.upcomingTestDrives) !== null && A !== void 0 ? A : 0),
      m(2),
      B((E = be.closedTestDrives) !== null && E !== void 0 ? E : 0),
      m(2),
      B((X = be.opportunitiesConverted) !== null && X !== void 0 ? X : 0);
  }
}
function PT(n, i) {
  if ((n & 1 && (c(0, "span"), h(1), d()), n & 2)) {
    let e = x().$implicit;
    m(), ee("(", e.user_role, ")");
  }
}
function IT(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr", 103)(1, "td", 101),
      h(2),
      R(3, PT, 2, 1, "span", 1),
      d(),
      c(4, "td", 104)(5, "span", 105),
      h(6),
      d()(),
      c(7, "td", 90),
      h(8),
      d(),
      c(9, "td", 90),
      h(10),
      d(),
      c(11, "td", 90),
      h(12),
      d(),
      c(13, "td", 90),
      h(14),
      d(),
      c(15, "td", 90),
      h(16),
      d(),
      c(17, "td", 90),
      h(18),
      d(),
      c(19, "td", 90),
      h(20),
      d(),
      c(21, "td", 90),
      h(22),
      d(),
      c(23, "td", 90),
      h(24),
      d(),
      c(25, "td", 90),
      h(26),
      d(),
      c(27, "td", 90),
      h(28),
      d(),
      c(29, "td", 90),
      h(30),
      d(),
      c(31, "td", 90),
      h(32),
      d(),
      c(33, "td", 90),
      h(34),
      d(),
      c(35, "td", 90),
      h(36),
      d()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      l,
      u,
      f,
      v,
      D,
      T,
      M,
      k,
      V,
      A,
      E = i.$implicit,
      X = i.index;
    y("ngClass", Ni(20, qv, X % 2 === 0, X % 2 !== 0)),
      m(2),
      ee(" ", E.user, " "),
      m(),
      y("ngIf", E.user_role),
      m(2),
      y("ngClass", E.active ? "chip-success" : "chip-inactive"),
      m(),
      ee(" ", E.active ? "Active" : "Inactive", " "),
      m(2),
      B(
        (e = E.leads == null ? null : E.leads.sa) !== null && e !== void 0
          ? e
          : 0
      ),
      m(2),
      B(
        (t = E.leads == null ? null : E.leads.cxp) !== null && t !== void 0
          ? t
          : 0
      ),
      m(2),
      B(
        (r = E.leads == null ? null : E.leads.ics) !== null && r !== void 0
          ? r
          : 0
      ),
      m(2),
      B(
        (o = E.leads == null ? null : E.leads.manuallyEntered) !== null &&
          o !== void 0
          ? o
          : 0
      ),
      m(2),
      B(
        (a = E.followups == null ? null : E.followups.sa) !== null &&
          a !== void 0
          ? a
          : 0
      ),
      m(2),
      B(
        (l = E.followups == null ? null : E.followups.cxp) !== null &&
          l !== void 0
          ? l
          : 0
      ),
      m(2),
      B(
        (u = E.followups == null ? null : E.followups.completed) !== null &&
          u !== void 0
          ? u
          : 0
      ),
      m(2),
      B(
        (f = E.followups == null ? null : E.followups.open) !== null &&
          f !== void 0
          ? f
          : 0
      ),
      m(2),
      B(
        (v = E.followups == null ? null : E.followups.closed) !== null &&
          v !== void 0
          ? v
          : 0
      ),
      m(2),
      B(
        (D = E.testdrives == null ? null : E.testdrives.sa) !== null &&
          D !== void 0
          ? D
          : 0
      ),
      m(2),
      B(
        (T = E.testdrives == null ? null : E.testdrives.cxp) !== null &&
          T !== void 0
          ? T
          : 0
      ),
      m(2),
      B(
        (M = E.testdrives == null ? null : E.testdrives.completed) !== null &&
          M !== void 0
          ? M
          : 0
      ),
      m(2),
      B(
        (k = E.testdrives == null ? null : E.testdrives.upcoming) !== null &&
          k !== void 0
          ? k
          : 0
      ),
      m(2),
      B(
        (V = E.testdrives == null ? null : E.testdrives.closed) !== null &&
          V !== void 0
          ? V
          : 0
      ),
      m(2),
      B((A = E.opportunitiesConverted) !== null && A !== void 0 ? A : 0);
  }
}
function AT(n, i) {
  n & 1 && (c(0, "tr")(1, "td", 106), h(2, "No Users Found"), d()());
}
function RT(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr", 93)(1, "td", 94)(2, "div", 95)(3, "div", 96),
      h(4),
      d(),
      c(5, "div", 97)(6, "table", 98)(7, "thead", 99)(8, "tr", 100)(
        9,
        "th",
        101
      ),
      h(10, "User"),
      d(),
      c(11, "th"),
      h(12, "Active"),
      d(),
      c(13, "th"),
      h(14, "SA Leads"),
      d(),
      c(15, "th"),
      h(16, "Sync with CXP"),
      d(),
      c(17, "th"),
      h(18, "Sync with ICS"),
      d(),
      c(19, "th"),
      h(20, "Manually Entered with CXP"),
      d(),
      c(21, "th"),
      h(22, "SA Follow-ups"),
      d(),
      c(23, "th"),
      h(24, "Sync with CXP"),
      d(),
      c(25, "th"),
      h(26, "Completed"),
      d(),
      c(27, "th"),
      h(28, "Upcoming"),
      d(),
      c(29, "th"),
      h(30, "Overdue"),
      d(),
      c(31, "th"),
      h(32, "SA Test Drives"),
      d(),
      c(33, "th"),
      h(34, "Sync with CXP"),
      d(),
      c(35, "th"),
      h(36, "Upcoming "),
      d(),
      c(37, "th"),
      h(38, "Completed "),
      d(),
      c(39, "th"),
      h(40, "Overdue"),
      d(),
      c(41, "th"),
      h(42, "Opportunities Converted"),
      d()()(),
      c(43, "tbody"),
      R(44, IT, 37, 23, "tr", 102)(45, AT, 3, 0, "tr", 1),
      d()()()()()()),
    n & 2)
  ) {
    let e = x().$implicit,
      t = x(2);
    m(4),
      ee(" User-wise details \u2014 ", e.dealerName, " "),
      m(40),
      y("ngForOf", t.getSortedUsers(e.dealerId))(
        "ngForTrackBy",
        t.trackByUserId
      ),
      m(),
      y(
        "ngIf",
        !t.dealerUsers[e.dealerId] ||
          (t.dealerUsers[e.dealerId] == null
            ? null
            : t.dealerUsers[e.dealerId].length) === 0
      );
  }
}
function FT(n, i) {
  if (
    (n & 1 && (Ue(0), R(1, kT, 40, 28, "tr", 83)(2, RT, 46, 4, "tr", 84), ze()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x(2);
    m(), y("ngIf", e), m(), y("ngIf", r.expandedRow === "engagement-" + t);
  }
}
function NT(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 107),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.showMoreTable1());
      }),
      h(1, " Show More "),
      d();
  }
}
function LT(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 108),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.showLessTable1());
      }),
      h(1, " Show Less "),
      d();
  }
}
function VT(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr", 103)(1, "td", 127),
      h(2),
      d(),
      c(3, "td", 119),
      h(4),
      d(),
      c(5, "td"),
      h(6),
      d(),
      c(7, "td"),
      h(8),
      d(),
      c(9, "td", 119),
      h(10),
      d(),
      c(11, "td", 121),
      h(12),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index;
    y("ngClass", Ni(9, qv, t % 2 === 0, t % 2 !== 0)),
      m(2),
      B(e.name),
      m(),
      y("ngStyle", de(12, Yv, e.calls.total < 60 ? "red" : "black")),
      m(),
      B(e.calls.total),
      m(2),
      B(e.calls.outgoing),
      m(2),
      B(e.calls.incoming),
      m(),
      y("ngStyle", de(14, Yv, e.calls.connected < 30 ? "red" : "#007bff")),
      m(),
      B(e.calls.connected),
      m(2),
      B(e.calls.declined);
  }
}
function BT(n, i) {
  n & 1 && (c(0, "tr")(1, "td", 128), h(2, "No Users Found"), d()());
}
function HT(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr", 93)(1, "td", 122)(2, "div", 123)(3, "div", 124),
      h(4),
      d(),
      c(5, "div", 97)(6, "table", 98)(7, "thead")(8, "tr")(9, "th", 125),
      h(10, "User"),
      d(),
      c(11, "th"),
      h(12, "Total"),
      d(),
      c(13, "th"),
      h(14, "Outgoing"),
      d(),
      c(15, "th"),
      h(16, "Incoming"),
      d(),
      c(17, "th"),
      h(18, "Connected"),
      d(),
      c(19, "th"),
      h(20, "Declined"),
      d()()(),
      c(21, "tbody"),
      R(22, VT, 13, 16, "tr", 126)(23, BT, 3, 0, "tr", 1),
      d()()()()()()),
    n & 2)
  ) {
    let e = x().$implicit,
      t = x(3);
    m(4),
      ee(" User-wise Call Logs \u2014 ", e.dealerName, " "),
      m(18),
      y("ngForOf", t.userCallLogs[e.dealerId]),
      m(),
      y(
        "ngIf",
        !t.userCallLogs[e.dealerId] ||
          (t.userCallLogs[e.dealerId] == null
            ? null
            : t.userCallLogs[e.dealerId].length) === 0
      );
  }
}
function jT(n, i) {
  if (n & 1) {
    let e = re();
    Ue(0),
      c(1, "tr")(2, "td", 115)(3, "button", 87),
      N("click", function (r) {
        let o = P(e),
          a = o.$implicit,
          l = o.index,
          u = x(3);
        return I(u.toggleRow(r, a, "engagement-" + l));
      }),
      z(4, "i", 88),
      c(5, "span", 89),
      h(6),
      d()()(),
      c(7, "td", 103),
      z(8, "i", 116),
      h(9),
      d(),
      c(10, "td")(11, "span", 117),
      h(12, "\u2191"),
      d(),
      c(13, "span", 118),
      h(14),
      d()(),
      c(15, "td")(16, "span", 117),
      h(17, "\u2193"),
      d(),
      c(18, "span", 118),
      h(19),
      d()(),
      c(20, "td")(21, "span", 119),
      h(22, " \u2713 "),
      d(),
      c(23, "span", 119),
      h(24),
      d()(),
      c(25, "td")(26, "span", 120),
      h(27, " \xD7 "),
      d(),
      c(28, "span", 121),
      h(29),
      d()()(),
      R(30, HT, 24, 3, "tr", 84),
      ze();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x(3);
    m(4),
      y(
        "ngClass",
        r.expandedRow === "engagement-" + t
          ? "fa-chevron-down"
          : "fa-chevron-right"
      ),
      m(2),
      ee(" ", e.dealerName, " "),
      m(),
      y(
        "ngClass",
        (e.callLogs == null ? null : e.callLogs.totalCalls) < 60
          ? "highlight-red"
          : "normal"
      ),
      m(2),
      ee(" ", (e.callLogs == null ? null : e.callLogs.totalCalls) || 0, " "),
      m(5),
      B((e.callLogs == null ? null : e.callLogs.outgoing) || 0),
      m(5),
      B((e.callLogs == null ? null : e.callLogs.incoming) || 0),
      m(2),
      y(
        "ngStyle",
        de(
          11,
          wT,
          (e.callLogs == null ? null : e.callLogs.connected) < 30
            ? "red"
            : "#007bff"
        )
      ),
      m(2),
      y(
        "ngStyle",
        de(
          13,
          Md,
          (e.callLogs == null ? null : e.callLogs.connected) < 30
            ? "red"
            : "#007bff"
        )
      ),
      m(),
      ee(" ", (e.callLogs == null ? null : e.callLogs.connected) || 0, " "),
      m(5),
      B((e.callLogs == null ? null : e.callLogs.declined) || 0),
      m(),
      y("ngIf", r.expandedRow === "engagement-" + t);
  }
}
function UT(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 129),
      N("click", function () {
        P(e);
        let r = x(3);
        return I(r.showMoreTable2());
      }),
      h(1, " Show More "),
      d();
  }
}
function zT(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 130),
      N("click", function () {
        P(e);
        let r = x(3);
        return I(r.showLessTable2());
      }),
      h(1, " Show Less "),
      d();
  }
}
function $T(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 37)(1, "div", 38)(2, "table", 109)(3, "thead", 40)(4, "tr")(
        5,
        "th",
        110
      ),
      h(6, "Dealer"),
      d(),
      c(7, "th", 111),
      h(8, "Total Calls"),
      d(),
      c(9, "th", 111),
      h(10, "Outgoing"),
      d(),
      c(11, "th", 111),
      h(12, "Incoming"),
      d(),
      c(13, "th", 111),
      h(14, "Connected"),
      d(),
      c(15, "th", 111),
      h(16, "Declined"),
      d()()(),
      c(17, "tbody"),
      R(18, jT, 31, 15, "ng-container", 51),
      ts(19, "slice"),
      d()()(),
      c(20, "div", 112),
      R(21, UT, 2, 0, "button", 113)(22, zT, 2, 0, "button", 114),
      d()()),
    n & 2)
  ) {
    let e = x(2);
    m(18),
      y(
        "ngForOf",
        ah(
          19,
          3,
          e.selectedDealers.length > 0 ? e.selectedDealers : e.originalDealers,
          0,
          e.table2Length
        )
      ),
      m(3),
      y("ngIf", e.table2Length < e.dealers.length),
      m(),
      y("ngIf", e.table2Length > 10 && e.dealers.length > 10);
  }
}
function WT(n, i) {
  if (
    (n & 1 && (c(0, "div", 131)(1, "div", 132), z(2, "apx-chart", 133), d()()),
    n & 2)
  ) {
    let e = x(2);
    m(2),
      y("series", e.chartOptions.series)("chart", e.chartOptions.chart)(
        "xaxis",
        e.chartOptions.xaxis
      )("stroke", e.chartOptions.stroke)(
        "dataLabels",
        e.chartOptions.dataLabels
      )("title", e.chartOptions.title);
  }
}
function GT(n, i) {
  if (n & 1) {
    let e = re();
    Ue(0),
      R(1, DT, 2, 0, "div", 2),
      c(2, "div", 3)(3, "div", 4)(4, "select", 5),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x();
        return ut(o.selectedFilter, r) || (o.selectedFilter = r), I(r);
      }),
      N("change", function () {
        P(e);
        let r = x();
        return I(r.onFilterChange(r.selectedFilter));
      }),
      c(5, "option", 6),
      h(6, "Today"),
      d(),
      c(7, "option", 7),
      h(8, "Yesterday"),
      d(),
      c(9, "option", 8),
      h(10, "This Week"),
      d(),
      c(11, "option", 9),
      h(12, "Last Week"),
      d(),
      c(13, "option", 10),
      h(14, "This Month"),
      d(),
      c(15, "option", 11),
      h(16, "Last Month"),
      d(),
      c(17, "option", 12),
      h(18, "This Quarter"),
      d(),
      c(19, "option", 13),
      h(20, "Last Quarter"),
      d(),
      c(21, "option", 14),
      h(22, "Last 6 Months"),
      d(),
      c(23, "option", 15),
      h(24, "This Year"),
      d(),
      c(25, "option", 16),
      h(26, "Lifetime"),
      d(),
      c(27, "option", 17),
      h(28, "Custom"),
      d()(),
      R(29, ST, 7, 2, "div", 18),
      c(30, "div", 19)(31, "button", 20),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.toggleDropdown());
      }),
      h(32),
      d(),
      R(33, OT, 12, 4, "div", 21),
      d()()(),
      c(34, "div", 22)(35, "main", 23)(36, "section", 24)(37, "div", 25)(
        38,
        "div",
        26
      ),
      h(39, "Active Network:"),
      d(),
      c(40, "div", 27),
      h(41),
      d(),
      c(42, "div", 28),
      h(43, "Dealers: "),
      c(44, "span", 29),
      h(45),
      d()()(),
      c(46, "div", 25)(47, "div", 26),
      h(48, "Active"),
      d(),
      c(49, "div", 27),
      h(50),
      d(),
      c(51, "div", 28),
      h(52, "Users: "),
      c(53, "span", 29),
      h(54),
      d()()(),
      c(55, "div", 25)(56, "div", 26),
      h(57, "Leads"),
      d(),
      c(58, "div", 27),
      h(59),
      d(),
      c(60, "div", 28),
      h(61, "Across all dealers"),
      d()(),
      c(62, "div", 25)(63, "div", 26),
      h(64, "Calls"),
      d(),
      c(65, "div", 27),
      h(66),
      d(),
      c(67, "div", 28),
      h(68, "Total volume"),
      d()(),
      c(69, "div", 25)(70, "div", 26),
      h(71, "Total Followups"),
      d(),
      c(72, "div", 27),
      h(73),
      d()(),
      c(74, "div", 25)(75, "div", 26),
      h(76, "Unique / Completed Test Drives"),
      d(),
      c(77, "div", 27),
      h(78),
      d()()(),
      c(79, "div", 30)(80, "div", 31)(81, "div")(82, "h2", 32),
      h(83, "Dealer Summary \u2014 Engagement"),
      d(),
      c(84, "p", 33),
      h(85, "Users, Leads, Follow-ups, Test Drives (with CXP/ICS sync)"),
      d()(),
      c(86, "div", 34)(87, "button", 35),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.exportToCSV());
      }),
      z(88, "i", 36),
      h(89, " Export CSV "),
      d()()(),
      c(90, "div", 37)(91, "div", 38)(92, "table", 39)(93, "thead", 40)(
        94,
        "tr"
      )(95, "th", 41),
      h(96, "Dealer"),
      d(),
      c(97, "th", 42),
      h(98, "Users"),
      d(),
      c(99, "th", 43),
      h(100, "Leads"),
      d(),
      c(101, "th", 44),
      h(102, "Follow-ups"),
      d(),
      c(103, "th", 45),
      h(104, "Test Drives"),
      d()(),
      c(105, "tr")(106, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("totalUsers"));
      }),
      h(107, " Total "),
      c(108, "span", 47)(109, "span", 48),
      h(110, "\u25B2"),
      d(),
      c(111, "span", 49),
      h(112, "\u25BC"),
      d()()(),
      c(113, "th", 50),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("activeUsers"));
      }),
      h(114, " Registered Users "),
      c(115, "span", 47)(116, "span", 48),
      h(117, "\u25B2"),
      d(),
      c(118, "span", 49),
      h(119, "\u25BC"),
      d()()(),
      c(120, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("saLeads"));
      }),
      h(121, " SA "),
      c(122, "span", 47)(123, "span", 48),
      h(124, "\u25B2"),
      d(),
      c(125, "span", 49),
      h(126, "\u25BC"),
      d()()(),
      c(127, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("cxpLeads"));
      }),
      h(128, " Sync with CXP "),
      c(129, "span", 47)(130, "span", 48),
      h(131, "\u25B2"),
      d(),
      c(132, "span", 49),
      h(133, "\u25BC"),
      d()()(),
      c(134, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("icsLeads"));
      }),
      h(135, " Sync with ICS "),
      c(136, "span", 47)(137, "span", 48),
      h(138, "\u25B2"),
      d(),
      c(139, "span", 49),
      h(140, "\u25BC"),
      d()()(),
      c(141, "th", 50),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("manuallyEnteredLeads"));
      }),
      h(142, " Manually Entered with CXP "),
      c(143, "span", 47)(144, "span", 48),
      h(145, "\u25B2"),
      d(),
      c(146, "span", 49),
      h(147, "\u25BC"),
      d()()(),
      c(148, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("saFollowUps"));
      }),
      h(149, " SA "),
      c(150, "span", 47)(151, "span", 48),
      h(152, "\u25B2"),
      d(),
      c(153, "span", 49),
      h(154, "\u25BC"),
      d()()(),
      c(155, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("cxpFollowUps"));
      }),
      h(156, " Sync with CXP "),
      c(157, "span", 47)(158, "span", 48),
      h(159, "\u25B2"),
      d(),
      c(160, "span", 49),
      h(161, "\u25BC"),
      d()()(),
      c(162, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("completedFollowUps"));
      }),
      h(163, " Completed "),
      c(164, "span", 47)(165, "span", 48),
      h(166, "\u25B2"),
      d(),
      c(167, "span", 49),
      h(168, "\u25BC"),
      d()()(),
      c(169, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("openFollowUps"));
      }),
      h(170, " Upcoming "),
      c(171, "span", 47)(172, "span", 48),
      h(173, "\u25B2"),
      d(),
      c(174, "span", 49),
      h(175, "\u25BC"),
      d()()(),
      c(176, "th", 50),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("closedFollowUps"));
      }),
      h(177, " Overdue "),
      c(178, "span", 47)(179, "span", 48),
      h(180, "\u25B2"),
      d(),
      c(181, "span", 49),
      h(182, "\u25BC"),
      d()()(),
      c(183, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("saTestDrives"));
      }),
      h(184, " SA "),
      c(185, "span", 47)(186, "span", 48),
      h(187, "\u25B2"),
      d(),
      c(188, "span", 49),
      h(189, "\u25BC"),
      d()()(),
      c(190, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("cxpTestDrives"));
      }),
      h(191, " Sync with CXP "),
      c(192, "span", 47)(193, "span", 48),
      h(194, "\u25B2"),
      d(),
      c(195, "span", 49),
      h(196, "\u25BC"),
      d()()(),
      c(197, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("completedTestDrives"));
      }),
      h(198, " Completed "),
      c(199, "span", 47)(200, "span", 48),
      h(201, "\u25B2"),
      d(),
      c(202, "span", 49),
      h(203, "\u25BC"),
      d()()(),
      c(204, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("upcomingTestDrives"));
      }),
      h(205, " Upcoming "),
      c(206, "span", 47)(207, "span", 48),
      h(208, "\u25B2"),
      d(),
      c(209, "span", 49),
      h(210, "\u25BC"),
      d()()(),
      c(211, "th", 50),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("closedTestDrives"));
      }),
      h(212, " Overdue "),
      c(213, "span", 47)(214, "span", 48),
      h(215, "\u25B2"),
      d(),
      c(216, "span", 49),
      h(217, "\u25BC"),
      d()()(),
      c(218, "th", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.sortData("opportunitiesConverted"));
      }),
      h(219, " Opportunities Converted "),
      c(220, "span", 47)(221, "span", 48),
      h(222, "\u25B2"),
      d(),
      c(223, "span", 49),
      h(224, "\u25BC"),
      d()()()()(),
      c(225, "tbody"),
      R(226, FT, 3, 2, "ng-container", 51),
      ts(227, "slice"),
      d()()(),
      R(228, NT, 2, 0, "button", 52)(229, LT, 2, 0, "button", 53),
      d()(),
      c(230, "div", 30)(231, "div", 31)(232, "div")(233, "h2", 54),
      h(234, "Dealer Summary \u2014 Calls"),
      d(),
      c(235, "p", 33),
      h(236, "Call volumes and outcomes"),
      d()(),
      c(237, "div", 55)(238, "div", 56)(239, "button", 57),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.dealerEngagementView("table"));
      }),
      z(240, "i", 58),
      h(241, " Table "),
      d(),
      c(242, "button", 57),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.dealerEngagementView("chart"));
      }),
      z(243, "i", 59),
      h(244, " Line Chart "),
      d()(),
      c(245, "button", 60),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.exportDealerCalllogstocxp());
      }),
      z(246, "i", 36),
      h(247, " Export CSV "),
      d()()(),
      R(248, $T, 23, 7, "div", 61)(249, WT, 3, 6, "div", 62),
      d()()(),
      ze();
  }
  if (n & 2) {
    let e = x();
    m(),
      y("ngIf", e.isLoading),
      m(),
      y("ngClass", Ni(96, CT, e.isSidebarOpen, !e.isSidebarOpen)),
      m(2),
      dt("ngModel", e.selectedFilter),
      m(25),
      y("ngIf", e.selectedFilter === "CUSTOM"),
      m(),
      ne("show", e.dropdownOpen),
      m(2),
      ee(
        " ",
        e.selectedDealers.length > 0
          ? "Dealers Selected (" + e.selectedDealers.length + ")"
          : "Select Dealers",
        " "
      ),
      m(),
      y("ngIf", e.dropdownOpen),
      m(8),
      B(e.kpiData == null ? null : e.kpiData.activeNetwork),
      m(4),
      B(e.kpiData == null ? null : e.kpiData.dealers),
      m(5),
      B(e.kpiData == null ? null : e.kpiData.activeUsers),
      m(4),
      B(e.kpiData == null ? null : e.kpiData.users),
      m(5),
      B(e.kpiData == null ? null : e.kpiData.leads),
      m(7),
      B(e.kpiData == null ? null : e.kpiData.calls),
      m(7),
      B(e.kpiData == null ? null : e.kpiData.totalFollowUps),
      m(5),
      Yn(
        " ",
        e.kpiData == null ? null : e.kpiData.uniqueTestDrives,
        " / ",
        e.kpiData == null ? null : e.kpiData.completedTestDrives,
        " "
      ),
      m(31),
      ne("active", e.sortColumn === "totalUsers" && e.sortDirection === "asc"),
      m(2),
      ne("active", e.sortColumn === "totalUsers" && e.sortDirection === "desc"),
      m(5),
      ne("active", e.sortColumn === "activeUsers" && e.sortDirection === "asc"),
      m(2),
      ne(
        "active",
        e.sortColumn === "activeUsers" && e.sortDirection === "desc"
      ),
      m(5),
      ne("active", e.sortColumn === "saLeads" && e.sortDirection === "asc"),
      m(2),
      ne("active", e.sortColumn === "saLeads" && e.sortDirection === "desc"),
      m(5),
      ne("active", e.sortColumn === "cxpLeads" && e.sortDirection === "asc"),
      m(2),
      ne("active", e.sortColumn === "cxpLeads" && e.sortDirection === "desc"),
      m(5),
      ne("active", e.sortColumn === "icsLeads" && e.sortDirection === "asc"),
      m(2),
      ne("active", e.sortColumn === "icsLeads" && e.sortDirection === "desc"),
      m(5),
      ne(
        "active",
        e.sortColumn === "manuallyEnteredLeads" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "manuallyEnteredLeads" && e.sortDirection === "desc"
      ),
      m(5),
      ne("active", e.sortColumn === "saFollowUps" && e.sortDirection === "asc"),
      m(2),
      ne(
        "active",
        e.sortColumn === "saFollowUps" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "cxpFollowUps" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "cxpFollowUps" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "completedFollowUps" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "completedFollowUps" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "openFollowUps" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "openFollowUps" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "closedFollowUps" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "closedFollowUps" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "saTestDrives" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "saTestDrives" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "cxpTestDrives" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "cxpTestDrives" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "completedTestDrives" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "completedTestDrives" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "upcomingTestDrives" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "upcomingTestDrives" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "closedTestDrives" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "closedTestDrives" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "opportunitiesConverted" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "opportunitiesConverted" && e.sortDirection === "desc"
      ),
      m(3),
      y(
        "ngForOf",
        ah(
          227,
          92,
          e.selectedDealers.length > 0 ? e.selectedDealers : e.dealers,
          0,
          e.table1Length
        )
      ),
      m(2),
      y(
        "ngIf",
        e.table1Length <
          (e.selectedDealers.length > 0
            ? e.selectedDealers.length
            : e.dealers.length)
      ),
      m(),
      y(
        "ngIf",
        e.table1Length > 10 &&
          (e.selectedDealers.length > 0
            ? e.selectedDealers.length
            : e.dealers.length) > 10
      ),
      m(10),
      y("ngClass", de(99, Gv, e.dealerSummaryCallsViewType === "table")),
      m(3),
      y("ngClass", de(101, Gv, e.dealerSummaryCallsViewType === "chart")),
      m(6),
      y("ngIf", e.dealerSummaryCallsViewType === "table"),
      m(),
      y("ngIf", e.dealerSummaryCallsViewType === "chart");
  }
}
var Td = class n {
  constructor(i, e, t, r, o, a, l, u, f, v) {
    this.http = i;
    this.cdr = e;
    this.context = t;
    this.router = r;
    this.dashboardService = o;
    this.sharedService = a;
    this.ngZone = l;
    this.cd = u;
    this.eRef = f;
    this.toastr = v;
  }
  dashboardMetrics = {
    totalLeads: 0,
    totalTestDrives: 0,
    totalOrders: 0,
    lostLeads: 0,
    cancellations: 0,
    netOrders: 0,
    retail: 0,
  };
  callLogs = {
    totalCalls: 120,
    outgoing: 50,
    incoming: 40,
    connected: 20,
    declined: 10,
    durationSec: 500,
  };
  expandedDealer = null;
  chart;
  chartOptions;
  sortColumn = null;
  sortDirection = "default";
  currentPageMap = {};
  showAllSMs = {};
  showCustomDatePicker = !1;
  customStartDate = "";
  customEndDate = "";
  displayedDealers = [];
  itemsToShow = 10;
  expandedRow = null;
  filteredDealers = [];
  totalLeads = pe(0);
  totalTestDrives = pe(0);
  totalOrders = pe(0);
  prevLeads = pe(0);
  prevTestDrives = pe(0);
  prevOrders = pe(0);
  selectedOption = "leads-MTD";
  testDrives = 0;
  displayedData = [];
  filteredData = [];
  mtdTestDrives = pe(0);
  qtdTestDrives = pe(0);
  hoveredSM = null;
  callLogDealers = [];
  loading = !1;
  selectedDealer = null;
  ps1Data = [];
  ps2Data = [];
  pageSize = 20;
  ytdTestDrives = pe(0);
  loadingSM = !1;
  psData = {};
  showDetails = !1;
  paginatedDealers = [];
  dealerCallData = [];
  dropdownOpen = !1;
  selectedDealers = [];
  dealerPSL = null;
  userCallLogs = {};
  callLogsItemsToShow = 10;
  displayedCallLogs = [];
  showMoreCallLogsVisible = !0;
  mtdOrders = pe(0);
  qtdOrders = pe(0);
  ytdOrders = pe(0);
  table1Length = 10;
  table2Length = 10;
  isLoading = !1;
  overallData = {};
  dealerSummaryCallsViewType = "table";
  selectedFilter = "DAY";
  dealerColors = ["#e6f2ff", "#f9f2ec", "#eaf7ea", "#f3e8ff"];
  appliedStartDate = null;
  appliedEndDate = null;
  usersItemsToShow = 10;
  userItemsToShow = 10;
  displayedUsers = [];
  showMoreUsersVisible = !1;
  mtdLeads = pe(0);
  qtdLeads = pe(0);
  currentLeads = 0;
  previousLeads = 0;
  changeLeads = 0;
  testDriveChange = 0;
  testDriveProgressValue = 0;
  testDriveStrokeColor = "#4CAF50";
  selectedCategory = "leads";
  selectedDuration = "MTD";
  orderChange = 0;
  orderProgressValue = 0;
  loadingPS = !1;
  activeAccordion = null;
  dealerUsers = {};
  dealerCallLogs = {};
  showAll = !1;
  orderStrokeColor = "#4CAF50";
  currentTestDrives = 0;
  previousTestDrives = 0;
  selectedDealerId = null;
  dealerSMS = {};
  salesManagers = {};
  loadingSMs = {};
  Math = Math;
  itemsPerPagedeal = 10;
  currentDisplayCount = 10;
  kpiData = {
    dealers: 0,
    activeNetwork: 0,
    users: 0,
    activeUsers: 0,
    leads: 0,
    calls: 0,
    totalFollowUps: 0,
    uniqueTestDrives: 0,
    completedTestDrives: 0,
  };
  orders = 0;
  currentOrders = 0;
  previousOrders = 0;
  ytdLeads = pe(0);
  selectedPeriod = "MTD";
  dashboardData = {};
  leads = 0;
  selectedSM = null;
  isSidebarOpen = !0;
  paginatedDealerskpis = [];
  currentIndex = 0;
  displayedDealerUsers = [];
  currentDealerPage = 1;
  dealersPerPage = 5;
  expandedItems = {};
  filterOptions = ["MTD", "QTD", "YTD"];
  expandedRows = [!1, !1, !1, !1, !1, !1];
  showMoreActive = !1;
  originalDealers = [];
  rankings = {};
  sidebarTestDrives = pe(0);
  sidebarOrders = pe(0);
  sidebarLeads = pe(0);
  pieChartInstance;
  leadsData = {};
  miniChart;
  hoveredPS = null;
  activeDealer = null;
  activeSM = null;
  activePS = null;
  incrementSize = 10;
  selectedTime = "1M";
  graphPath = "";
  leadsChange = 0;
  testDrivesChange = 0;
  ordersChange = 0;
  change = 0;
  doughnutChart;
  dealerSearch = "";
  animatedValue = 0;
  currentPage = 1;
  itemsPerPage = 10;
  paginatedData = [];
  activeFilter = "MTD";
  dealers = [];
  currentdealerPage = 1;
  itemsPerdealerPage = 5;
  maxValue = 0;
  selectedFilterPS = "MTD";
  changeDisplay = 0;
  progressValue = 0;
  strokeColor = "red";
  data;
  apiUrl = "https://uat.smartassistapp.in/api/superAdmin/dashbaordNew";
  ngOnInit() {
    let i = localStorage.getItem("kpiData");
    i && (this.kpiData = W({}, JSON.parse(i))),
      this.loadKpiData("DAY"),
      (this.selectedTime = "MTD"),
      this.onTimeChange(this.selectedTime),
      (this.currentDisplayCount = this.itemsPerPage),
      (this.selectedFilter = "DAY"),
      this.fetchSuperAdminDashboard(this.selectedFilter),
      this.onDropdownChange(),
      this.context.onSideBarClick$.next({
        role: "dashboard",
        pageTitle: "Dashboard",
      }),
      (this.selectedFilter = "DAY");
  }
  initializeDisplay() {
    this.currentDisplayCount = this.itemsPerPage;
  }
  toggleShow() {
    this.currentDisplayCount >= this.dealers.length
      ? (this.currentDisplayCount = this.itemsPerPage)
      : (this.currentDisplayCount = Math.min(
          this.dealers.length,
          this.currentDisplayCount + this.incrementSize
        ));
  }
  showLess() {
    this.currentDisplayCount = this.itemsPerPage;
  }
  get canShowMore() {
    return this.currentDisplayCount < this.dealers.length;
  }
  get canShowLess() {
    return this.currentDisplayCount > this.itemsPerPage;
  }
  get isShowingAll() {
    return this.currentDisplayCount >= this.dealers.length;
  }
  get showButtonText() {
    return this.currentDisplayCount >= this.dealers.length
      ? "Show Less"
      : "Show More";
  }
  toggleExpand(i) {
    (this.expandedRows[i] = !this.expandedRows[i]),
      console.log(`Order ${i + 1} expanded:`, this.expandedRows[i]);
  }
  getStrokeColor(i) {
    let e = Number(i);
    return e > 0 ? "#4CAF50" : e < 0 ? "#F44336" : "#9E9E9E";
  }
  toggleCustomDatePicker() {
    this.showCustomDatePicker ||
      ((this.customStartDate = ""), (this.customEndDate = "")),
      (this.showCustomDatePicker = !this.showCustomDatePicker);
  }
  getDealerBackground(i) {
    let e = [
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
      "linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)",
      "linear-gradient(135deg, #fa709a 0%, #fee140 100%)",
      "linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)",
      "linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)",
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
    ];
    return e[i % e.length];
  }
  getSortedUsers(i) {
    return [...(this.dealerUsers[i] ?? [])].sort((t, r) => {
      let o =
          (t.leads?.sa ?? 0) +
          (t.leads?.cxp ?? 0) +
          (t.leads?.ics ?? 0) +
          (t.leads?.manuallyEntered ?? 0),
        a =
          (r.leads?.sa ?? 0) +
          (r.leads?.cxp ?? 0) +
          (r.leads?.ics ?? 0) +
          (r.leads?.manuallyEntered ?? 0);
      return a !== o
        ? a - o
        : t.active && !r.active
        ? -1
        : !t.active && r.active
        ? 1
        : t.user.toLowerCase().localeCompare(r.user.toLowerCase());
    });
  }
  mapTimeToApi(i) {
    switch (i) {
      case "1M":
        return "MTD";
      case "QTD":
        return "QTD";
      case "1Y":
        return "YTD";
      default:
        return "MTD";
    }
  }
  onTimeChange(i) {
    this.selectedTime = i;
    let e = localStorage.getItem("token");
    if (!e) {
      console.error("No token found in localStorage!");
      return;
    }
    let t = this.mapTimeToApi(i);
    this.dashboardService.getDealers(t, e).subscribe((r) => {
      console.log("API Response dealerssssssssssss:", r),
        r.status === 200 && r.data?.dealers
          ? ((this.dealers = r.data.dealers),
            (this.expandedDealer = null),
            (this.selectedDealerId = null))
          : (this.dealers = []);
    });
  }
  ngAfterViewInit() {
    this.totalTestDrives() &&
      this.totalOrders() &&
      this.doughnutChart(this.totalTestDrives(), this.totalOrders());
  }
  onFilterClick(i) {}
  toggleShowAllSMs(i) {
    this.showAllSMs[i] = !this.showAllSMs[i];
  }
  mapFilterToApi(i) {
    switch (i) {
      case "DAY":
        return "DAY";
      case "YESTERDAY":
        return "YESTERDAY";
      case "WEEK":
        return "WEEK";
      case "LAST_WEEK":
        return "LAST_WEEK";
      case "MTD":
        return "MTD";
      case "LAST_MONTH":
        return "LAST_MONTH";
      case "QTD":
        return "QTD";
      case "LAST_QUARTER":
        return "LAST_QUARTER";
      case "SIX_MONTH":
        return "SIX_MONTH";
      case "YTD":
        return "YTD";
      case "LIFETIME":
        return "LIFETIME";
      case "CUSTOM":
        return "CUSTOM";
    }
  }
  toggleNameSelection(i) {
    (this.isLoading = !0),
      this.isDealerSelected(i)
        ? (this.selectedDealers = this.selectedDealers.filter(
            (e) => e.dealerName !== i.dealerName
          ))
        : this.selectedDealers.push(i),
      this.fetchSuperAdminDashboard(this.selectedFilter);
  }
  onFilterChange(i) {
    let e = this.mapFilterToApi(i);
    e !== "CUSTOM" &&
      ((this.expandedRow = null),
      (this.dealerUsers = {}),
      (this.userCallLogs = {}),
      (this.dealerCallLogs = {}),
      this.fetchSuperAdminDashboard(e));
  }
  fetchDealerSMs(i, e, t) {
    let r = localStorage.getItem("token");
    if (!r) return;
    let o = new St({ Authorization: `Bearer ${r}` }),
      a = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&type=${e}`;
    this.http.get(a, { headers: o }).subscribe({
      next: (l) => {
        (this.dealerSMS[i] =
          l?.status === 200 && l.data?.dealers?.[0]?.user_list
            ? l.data.dealers[0].user_list
            : []),
          t && this.dealerSMS[i].some((u) => u.user_id === t)
            ? (this.activeSM = t)
            : (this.activeSM = null);
      },
      error: (l) => {
        console.error("Failed to fetch SM data:", l),
          (this.dealerSMS[i] = []),
          (this.activeSM = null);
      },
    });
  }
  fetchPS(i, e) {
    let t = localStorage.getItem("token");
    if (!t) return;
    let r = new St({ Authorization: `Bearer ${t}` }),
      o = `https://uat.smartassistapp.in/api/superAdmin/dashbaordNew?type=${this.selectedFilter}&dealer_id=${e}&sm_id=${i}`;
    this.http.get(o, { headers: r }).subscribe({
      next: (a) => {
        this.psData[i] = a?.data?.ps || [];
      },
      error: (a) => {
        console.error("Failed to fetch PS data:", a), (this.psData[i] = []);
      },
    });
  }
  updateProgressAndColor(i) {
    (this.changeDisplay = i),
      (this.progressValue = this.getProgressFromChange(i)),
      (this.strokeColor = this.getStrokeColor(i)),
      this.cdr.detectChanges();
  }
  getProgressFromChange(i) {
    return Math.min((Math.abs(i) / 500) * 100, 100);
  }
  isDealerDataAvailable(i) {
    return i?.dealer_id && this.dealerSMS[i.dealer_id]?.length > 0;
  }
  getDashOffset(i) {
    return 100 - i;
  }
  get totalDealerPages() {
    return Math.ceil(this.dealers.length / this.itemsPerdealerPage);
  }
  goToPage(i) {
    i >= 1 && i <= this.totalDealerPages && (this.currentdealerPage = i);
  }
  getShowingRange() {
    let i = (this.currentdealerPage - 1) * this.itemsPerdealerPage + 1,
      e = Math.min(
        this.currentdealerPage * this.itemsPerdealerPage,
        this.dealers.length
      );
    return `Showing ${i} \u2013 ${e} of ${this.dealers.length} dealers`;
  }
  goBack() {
    (this.selectedSM = null),
      (this.selectedDealer = null),
      (this.selectedDealerId = null);
  }
  getDealerColor(i) {
    return this.dealerColors[i % this.dealerColors.length];
  }
  toggleAccordion(i) {
    this.activeAccordion === i
      ? (this.activeAccordion = null)
      : (this.activeAccordion = i);
  }
  get totalPagesdealer() {
    return Math.ceil(this.dealers.length / this.dealersPerPage);
  }
  loadKpiData(i = "DAY") {
    let t = { Authorization: `Bearer ${localStorage.getItem("token")}` };
    this.http
      .get(
        `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${i}`,
        { headers: t }
      )
      .subscribe({
        next: (r) => {
          r.status === 200 &&
            r.data &&
            ((this.kpiData = W({}, r.data)),
            localStorage.setItem("kpiData", JSON.stringify(this.kpiData)),
            this.cd.detectChanges());
        },
        error: (r) => console.error("Error fetching KPI data:", r),
      });
  }
  prevPage() {
    this.currentPage > 1 && this.currentPage--;
  }
  get paginatedDealerskpi() {
    let i = (this.currentPage - 1) * this.dealersPerPage;
    return this.dealers.slice(i, i + this.dealersPerPage);
  }
  get startEntry() {
    return (this.currentPage - 1) * this.dealersPerPage + 1;
  }
  get endEntry() {
    return Math.min(
      this.currentPage * this.dealersPerPage,
      this.dealers.length
    );
  }
  nextPage() {
    this.currentPage < this.totalPagesdealer && this.currentPage++;
  }
  onPageChange(i) {
    let e = Math.ceil(this.dealers.length / this.itemsPerPage);
    i >= 1 && i <= e && (this.currentPage = i);
  }
  togglePS(i) {
    this.activePS = this.activePS === i ? null : i;
  }
  onDropdownChange() {
    console.log("Dropdown changed:"),
      console.log("selectedCategory:", this.selectedCategory),
      console.log("selectedDuration:", this.selectedDuration),
      this.selectedCategory && this.selectedDuration
        ? (console.log(
            "\u2705 Both dropdowns selected. Proceeding to fetch data..."
          ),
          (this.selectedOption = `${this.selectedCategory}-${this.selectedDuration}`))
        : console.warn(
            "\u26A0\uFE0F One or both dropdowns not selected. Skipping fetch."
          );
  }
  onSMClick(i) {
    (this.selectedSM = i),
      (this.selectedDealer = null),
      (this.currentPage = 1),
      (this.ps1Data = []);
  }
  changeDealerPage(i) {
    let e = this.currentDealerPage + i;
    e >= 1 && e <= this.totalDealerPages && this.goToDealerPage(e);
  }
  goToDealerPage(i) {
    i >= 1 &&
      i <= this.totalDealerPages &&
      ((this.currentDealerPage = i),
      this.updateDealerPagination(),
      this.loadDealersForPage(i));
  }
  updateDealerPagination() {
    let i = (this.currentDealerPage - 1) * this.dealersPerPage + 1,
      e = Math.min(this.currentDealerPage * this.dealersPerPage, 23),
      t = document.getElementById("dealer-range");
    t && (t.textContent = `${i}-${e}`),
      document.querySelectorAll(".pagination-btn").forEach((o, a) => {
        o.textContent === "Previous"
          ? (o.disabled = this.currentDealerPage === 1)
          : o.textContent === "Next"
          ? (o.disabled = this.currentDealerPage === this.totalDealerPages)
          : o.textContent &&
            !isNaN(parseInt(o.textContent)) &&
            o.classList.toggle(
              "active",
              parseInt(o.textContent) === this.currentDealerPage
            );
      });
  }
  loadDealersForPage(i) {
    console.log(`Loading dealers for page ${i}`);
    let e = document.querySelectorAll(".accordion.level-1");
    e.forEach((t) => {
      t.style.opacity = "0.5";
    }),
      setTimeout(() => {
        e.forEach((t) => {
          t.style.opacity = "1";
        });
      }, 300);
  }
  changeTablePage(i, e) {
    console.log(`Changing page for ${i} by ${e}`);
  }
  searchDealer(i) {
    console.log("Searching for:", i);
  }
  autoCollapseOthers(i) {
    document.querySelectorAll(".accordion-content.active").forEach((t) => {
      if (t.id !== `content-${i}`) {
        let r = t.id.replace("content-", "toggle-"),
          o = document.getElementById(r);
        o &&
          o.parentElement &&
          (t.classList.remove("active"),
          o.parentElement.classList.remove("active"),
          (o.textContent = "\u25BC"));
      }
    });
  }
  initializeFilters() {
    document.querySelectorAll('select, input[type="date"]').forEach((e) => {
      e.addEventListener("change", (t) => {
        let r = t.target;
        console.log("Filter changed:", r.value),
          this.handleFilterChange(r.value);
      });
    });
  }
  handleFilterChange(i) {
    console.log("Handling filter change:", i);
  }
  onSearchChange(i) {
    let e = i.target;
    this.searchDealer(e.value);
  }
  fetchSuperAdminDashboard(i) {
    (this.isLoading = !0),
      console.log("\u{1F680} fetchSuperAdminDashboard called with:", i),
      console.log(
        "\u{1F4CD} Selected dealers:",
        this.selectedDealers?.length,
        this.selectedDealers
      );
    let e = "",
      t =
        this.selectedFilter === "CUSTOM" &&
        this.customStartDate &&
        this.customEndDate;
    if (!this.selectedDealers?.length)
      t
        ? (e = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?start_date=${this.customStartDate}&end_date=${this.customEndDate}`)
        : (e = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${i}`);
    else if (this.selectedDealers.length === 1)
      t
        ? (e = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${this.selectedDealers[0].dealerId}&start_date=${this.customStartDate}&end_date=${this.customEndDate}`)
        : (e = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${this.selectedDealers[0].dealerId}&type=${i}`);
    else {
      let a = this.selectedDealers.map((l) => l.dealerId).join(",");
      t
        ? (e = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealerIds=${a}&start_date=${this.customStartDate}&end_date=${this.customEndDate}`)
        : (e = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealerIds=${a}&type=${i}`);
    }
    console.log("\u{1F310} API URL:", e);
    let r = localStorage.getItem("token");
    if (!r) {
      console.error("No token found in localStorage!"), (this.isLoading = !1);
      return;
    }
    let o = new St({ Authorization: `Bearer ${r}` });
    this.http.get(e, { headers: o }).subscribe({
      next: (a) => {
        if (
          ((this.isLoading = !1),
          console.log("\u{1F4E6} Full API Response:", a),
          console.log(
            "\u{1F4CA} DealerData length:",
            a?.data?.dealerData?.length
          ),
          a?.status === 200 && a.data)
        ) {
          let l = a.data.dealers ?? 0,
            u = a.data.activeNetwork ?? 0,
            f = {
              dealers: l,
              activeNetwork: u,
              users: a.data.users ?? 0,
              activeUsers: a.data.activeUsers ?? 0,
              leads: a.data.leads ?? 0,
              calls: a.data.calls ?? 0,
              totalFollowUps: a.data.totalFollowUps ?? 0,
              uniqueTestDrives: a.data.uniqueTestDrives ?? 0,
              completedTestDrives: a.data.completedTestDrives ?? 0,
            },
            v = a.data.dealerData ?? [];
          if (
            (console.log(
              "\u{1F3EA} Previous dealers count:",
              this.dealers?.length || 0
            ),
            console.log("\u{1F3EA} New dealers count:", v.length),
            (this.dealers = [...v]),
            (this.filteredDealers = [...v]),
            (this.originalDealers = [...v]),
            this.dealers.sort((E, X) => {
              let se =
                (E.saLeads || 0) +
                (E.cxpLeads || 0) +
                (E.icsLeads || 0) +
                (E.manuallyEnteredLeads || 0);
              return (
                (X.saLeads || 0) +
                (X.cxpLeads || 0) +
                (X.icsLeads || 0) +
                (X.manuallyEnteredLeads || 0) -
                se
              );
            }),
            (this.dealerUsers = {}),
            this.dealers.forEach((E) => {
              let X = E.users ?? [];
              this.dealerUsers[E.dealerId] = [...X].sort((se, be) => {
                let Ee =
                  (se.leads?.sa || 0) +
                  (se.leads?.cxp || 0) +
                  (se.leads?.ics || 0) +
                  (se.leads?.manuallyEntered || 0);
                return (
                  (be.leads?.sa || 0) +
                  (be.leads?.cxp || 0) +
                  (be.leads?.ics || 0) +
                  (be.leads?.manuallyEntered || 0) -
                  Ee
                );
              });
            }),
            (this.filteredDealers = [...this.dealers]),
            this.selectedDealers?.length > 0 &&
              ((this.selectedDealers = this.selectedDealers.map(
                (E) =>
                  this.dealers.find((se) => se.dealerId === E.dealerId) || E
              )),
              console.log("\u{1F504} Selected dealers synced with fresh data")),
            this.selectedDealers?.length > 0 &&
              ((this.selectedDealers = this.selectedDealers.map(
                (E) =>
                  this.dealers.find((se) => se.dealerId === E.dealerId) || E
              )),
              console.log("\u{1F504} Selected dealers synced with fresh data")),
            console.log(
              "\u{1F3EA} Updated dealers count:",
              this.dealers.length
            ),
            this.selectedDealers?.length === 1)
          ) {
            console.log("\u{1F3AF} Processing single dealer logic");
            let E = this.dealers.find(
              (X) => X.dealerId === this.selectedDealers[0].dealerId
            );
            console.log(
              "\u{1F3AF} Found selected dealer:",
              E ? "YES" : "NO",
              E?.dealerId
            ),
              E
                ? ((f = {
                    dealers: l,
                    activeNetwork: u,
                    users: E.totalUsers ?? 0,
                    activeUsers: E.activeUsers ?? 0,
                    leads: E.saLeads ?? E.totalLeads ?? 0,
                    calls: E.callLogs?.totalCalls ?? 0,
                    totalFollowUps: E.saFollowUps ?? E.totalFollowUps ?? 0,
                    uniqueTestDrives: E.uniqueTestDrives ?? 0,
                    completedTestDrives: E.completedTestDrives ?? 0,
                  }),
                  console.log("\u{1F3AF} Single dealer KPI updated:", f))
                : (console.warn(
                    `\u274C Selected dealer ${this.selectedDealers[0].dealerId} not found in API response`
                  ),
                  console.log(
                    "Available dealer IDs:",
                    this.dealers.map((X) => X.dealerId)
                  ));
          } else if (this.selectedDealers?.length > 1) {
            console.log("\u{1F3AF} Processing multi-dealer logic");
            let E = {
              users: 0,
              activeUsers: 0,
              leads: 0,
              calls: 0,
              totalFollowUps: 0,
              uniqueTestDrives: 0,
              completedTestDrives: 0,
            };
            this.selectedDealers.forEach((X) => {
              let se = this.dealers.find((be) => be.dealerId === X.dealerId);
              se &&
                ((E.users += se.totalUsers ?? 0),
                (E.activeUsers += se.activeUsers ?? 0),
                (E.leads += se.saLeads ?? se.totalLeads ?? 0),
                (E.calls += se.callLogs?.totalCalls ?? 0),
                (E.totalFollowUps += se.saFollowUps ?? se.totalFollowUps ?? 0),
                (E.uniqueTestDrives += se.uniqueTestDrives ?? 0),
                (E.completedTestDrives += se.completedTestDrives ?? 0));
            }),
              (f = W({ dealers: l, activeNetwork: u }, E)),
              console.log("\u{1F3AF} Multi-dealer KPI updated:", f);
          } else
            console.log("\u{1F3AF} No dealers selected - using global KPI");
          (this.kpiData = W({}, f)),
            console.log("\u{1F4C8} Final KPI Data:", this.kpiData),
            console.log(
              "\u{1F3EA} Final dealers array length:",
              this.dealers.length
            ),
            console.log(
              "\u{1F3EA} Final filteredDealers array length:",
              this.filteredDealers.length
            ),
            this.cdr.detectChanges();
          let D = [
              "Total Calls",
              "Outgoing Calls",
              "Incoming Calls",
              "Declined Calls",
              "Connected Calls",
            ],
            T = [];
          this.selectedDealers?.length > 0
            ? ((T = this.dealers.filter((E) =>
                this.selectedDealers.some((X) => X.dealerId === E.dealerId)
              )),
              console.log(
                "\u{1F4CA} Chart showing selected dealers:",
                T.map((E) => E.dealerName)
              ))
            : ((T = this.dealers),
              console.log("\u{1F4CA} Chart showing all dealers:", T.length));
          let M = T.map((E) => {
              let X = E.callLogs || {};
              return {
                name: E.dealerName || "Unknown Dealer",
                data: [
                  X.totalCalls ?? 0,
                  X.outgoing ?? 0,
                  X.incoming ?? 0,
                  X.declined ?? 0,
                  X.connected ?? 0,
                ],
              };
            }),
            k = "Dealer-wise Calls Analysis";
          this.selectedDealers?.length === 1
            ? (k = `Calls Analysis - ${
                this.selectedDealers[0].dealerName || "Selected Dealer"
              }`)
            : this.selectedDealers?.length > 1 &&
              (k = `Calls Analysis - ${this.selectedDealers.length} Selected Dealers`);
          let V = [
              "#008FFB",
              "#00E396",
              "#FEB019",
              "#FF4560",
              "#775DD0",
              "#546E7A",
              "#26A69A",
              "#D4526E",
            ],
            A = M.map((E, X) => Ce(W({}, E), { color: V[X % V.length] }));
          (this.chartOptions = {
            series: A,
            chart: {
              type: "line",
              height: 350,
              offsetX: 0,
              offsetY: 0,
              toolbar: {
                show: !0,
                tools: {
                  download: !0,
                  selection: !1,
                  zoom: !1,
                  zoomin: !0,
                  zoomout: !0,
                  pan: !1,
                  reset: !1,
                },
              },
            },
            dataLabels: { enabled: !1 },
            stroke: { curve: "smooth", width: 2 },
            title: { text: k, align: "left" },
            xaxis: { categories: D, labels: { rotate: -45 } },
            legend: {
              show: M.length > 0,
              position: "bottom",
              horizontalAlign: "center",
              showForSingleSeries: !0,
              markers: { width: 12, height: 12 },
            },
            responsive: [
              { breakpoint: 768, options: { title: { align: "left" } } },
            ],
          }),
            console.log("\u2705 Change detection triggered");
        } else
          console.warn("\u26A0\uFE0F Unexpected response structure:", a),
            (this.dealers = []),
            (this.filteredDealers = []),
            (this.kpiData = {
              dealers: 0,
              activeNetwork: 0,
              users: 0,
              activeUsers: 0,
              leads: 0,
              calls: 0,
              totalFollowUps: 0,
              uniqueTestDrives: 0,
              completedTestDrives: 0,
            }),
            this.cdr.detectChanges();
      },
      error: (a) => {
        (this.isLoading = !1),
          console.error("\u274C API failed:", a),
          (this.dealers = []),
          (this.filteredDealers = []),
          (this.kpiData = {
            dealers: 0,
            activeNetwork: 0,
            users: 0,
            activeUsers: 0,
            leads: 0,
            calls: 0,
            totalFollowUps: 0,
            uniqueTestDrives: 0,
            completedTestDrives: 0,
          });
      },
    });
  }
  clearSelection() {
    (this.selectedDealers = []),
      (this.dealerSearch = ""),
      this.fetchSuperAdminDashboard(this.selectedFilter);
  }
  aggregateDealerData(i) {
    let e = {
      dealers: i.length,
      activeNetwork: i.length,
      users: 0,
      activeUsers: 0,
      leads: 0,
      calls: 0,
      totalFollowUps: 0,
      uniqueTestDrives: 0,
      completedTestDrives: 0,
    };
    return (
      i.forEach((t) => {
        (e.users += t.totalUsers || 0),
          (e.activeUsers += t.activeUsers || 0),
          (e.leads += t.saLeads || 0),
          (e.calls += t.calls || 0),
          (e.totalFollowUps += t.totalFollowUps || 0),
          (e.uniqueTestDrives += t.uniqueTestDrives || 0),
          (e.completedTestDrives += t.completedTestDrives || 0);
      }),
      e
    );
  }
  fetchDealers(i) {
    let e = localStorage.getItem("token"),
      t = new St({ Authorization: `Bearer ${e}` }),
      r = `https://uat.smartassistapp.in/api/superAdmin/dashboard/view-activities?type=${i}`;
    this.http.get(r, { headers: t }).subscribe(
      (o) => {
        o?.status === 200 && o.data?.dealerData
          ? ((this.dealers = o.data.dealerData),
            this.dealers.forEach((a) => {
              this.dealerSMS[a.dealer_id] || (this.dealerSMS[a.dealer_id] = []);
            }))
          : (this.dealers = []);
      },
      (o) => {
        console.error("Error fetching dealers:", o), (this.dealers = []);
      }
    );
  }
  applyCustomDate() {
    if (!this.customStartDate || !this.customEndDate) {
      this.toastr.warning("Please select both start and end dates", "Warning", {
        timeOut: 3e3,
        progressBar: !0,
        positionClass: "toast-top-right",
      });
      return;
    }
    this.selectedFilter = "CUSTOM";
    let i = this.customStartDate,
      e = this.customEndDate;
    (this.isLoading = !0), this.fetchDealersWithCustomDate(i, e);
    let t = document.querySelector(".custom-inputs");
    t && t.classList.add("applied");
  }
  resetCustomDate() {
    (this.customStartDate = ""),
      (this.customEndDate = ""),
      (this.selectedFilter = "DAY"),
      (this.isLoading = !0),
      this.onFilterChange(this.selectedFilter);
    let i = document.querySelector(".custom-inputs");
    i && i.classList.remove("applied");
  }
  formatDuration(i) {
    let e = Math.floor(i / 3600)
        .toString()
        .padStart(2, "0"),
      t = Math.floor((i % 3600) / 60)
        .toString()
        .padStart(2, "0"),
      r = (i % 60).toString().padStart(2, "0");
    return `${e}:${t}:${r}`;
  }
  toggleRow(i, e, t) {
    let r = e.dealerId;
    if (!r) return;
    if (this.expandedRow === t) {
      this.expandedRow = null;
      return;
    }
    this.expandedRow = t;
    let o = localStorage.getItem("token");
    if (!o) return;
    let a;
    this.selectedFilter === "CUSTOM" &&
    this.customStartDate &&
    this.customEndDate
      ? (a = this.dashboardService.getDealersByCustomDate(
          this.customStartDate,
          this.customEndDate,
          o,
          r
        ))
      : (a = this.dashboardService.getDealerUsers(r, this.selectedFilter, o)),
      a.subscribe({
        next: (l) => {
          let u = Array.isArray(l?.data?.dealerData)
            ? l.data.dealerData.find((f) => f.dealerId === r)
            : l?.data?.dealerData;
          if (!u) {
            (this.dealerUsers[r] = []),
              (this.dealerCallLogs[r] = null),
              (this.userCallLogs[r] = []);
            return;
          }
          (this.dealerUsers[r] = u.users || []),
            (this.dealerCallLogs[r] = u.callLogs
              ? {
                  total: u.callLogs.totalCalls,
                  outgoing: u.callLogs.outgoing,
                  incoming: u.callLogs.incoming,
                  connected: u.callLogs.connected,
                  declined: u.callLogs.declined,
                  duration: this.formatDuration(u.callLogs.durationSec || 0),
                }
              : null),
            (this.userCallLogs[r] =
              u.users?.map((f) => ({
                userId: f.user_id,
                name: f.user,
                role: f.user_role,
                active: f.active,
                calls: f.calls
                  ? {
                      total: f.calls.totalCalls,
                      outgoing: f.calls.outgoing,
                      incoming: f.calls.incoming,
                      connected: f.calls.connected,
                      declined: f.calls.declined,
                      duration: this.formatDuration(f.calls.durationSec),
                    }
                  : {
                      total: 0,
                      outgoing: 0,
                      incoming: 0,
                      connected: 0,
                      declined: 0,
                      duration: "0s",
                    },
              })) || []),
            this.userCallLogs[r].sort((f, v) =>
              (f?.name ?? "")
                .toString()
                .trim()
                .localeCompare((v?.name ?? "").toString().trim(), void 0, {
                  sensitivity: "base",
                })
            ),
            this.cd.detectChanges(),
            console.log(
              "Mapped + Sorted User Call Logs:",
              this.userCallLogs[r]
            );
        },
        error: (l) => {
          console.error(l),
            (this.dealerUsers[r] = []),
            (this.dealerCallLogs[r] = null),
            (this.userCallLogs[r] = []);
        },
      });
  }
  fetchDealersWithCustomDate(i, e) {
    let t = localStorage.getItem("token"),
      r;
    this.selectedDealers?.length === 1 &&
      (r = this.selectedDealers[0].dealerId),
      this.dashboardService.getDealersByCustomDate(i, e, t, r).subscribe({
        next: (o) => {
          this.ngZone.run(() => {
            if (o?.status === 200 && o.data) {
              let a = o.data.dealers ?? 0,
                l = o.data.activeNetwork ?? 0,
                u = {
                  dealers: a,
                  activeNetwork: l,
                  users: o.data.users ?? 0,
                  activeUsers: o.data.activeUsers ?? 0,
                  leads: o.data.leads ?? 0,
                  calls: o.data.calls ?? 0,
                  totalFollowUps: o.data.totalFollowUps ?? 0,
                  uniqueTestDrives: o.data.uniqueTestDrives ?? 0,
                  completedTestDrives: o.data.completedTestDrives ?? 0,
                };
              if (
                ((this.dealers = o.data.dealerData ?? []),
                (this.filteredDealers = [...this.dealers]),
                this.selectedDealers?.length > 0 &&
                  (this.selectedDealers = this.selectedDealers.map(
                    (A) =>
                      this.dealers.find((X) => X.dealerId === A.dealerId) || A
                  )),
                this.selectedDealers?.length === 1)
              ) {
                let A = this.dealers.find(
                  (E) => E.dealerId === this.selectedDealers[0].dealerId
                );
                A &&
                  (u = {
                    dealers: a,
                    activeNetwork: l,
                    users: A.totalUsers ?? 0,
                    activeUsers: A.activeUsers ?? 0,
                    leads: A.saLeads ?? A.totalLeads ?? 0,
                    calls: A.callLogs?.totalCalls ?? 0,
                    totalFollowUps: A.saFollowUps ?? A.totalFollowUps ?? 0,
                    uniqueTestDrives: A.uniqueTestDrives ?? 0,
                    completedTestDrives: A.completedTestDrives ?? 0,
                  });
              } else if (this.selectedDealers?.length > 1) {
                let A = {
                  users: 0,
                  activeUsers: 0,
                  leads: 0,
                  calls: 0,
                  totalFollowUps: 0,
                  uniqueTestDrives: 0,
                  completedTestDrives: 0,
                };
                this.selectedDealers.forEach((E) => {
                  let X = this.dealers.find((se) => se.dealerId === E.dealerId);
                  X &&
                    ((A.users += X.totalUsers ?? 0),
                    (A.activeUsers += X.activeUsers ?? 0),
                    (A.leads += X.saLeads ?? X.totalLeads ?? 0),
                    (A.calls += X.callLogs?.totalCalls ?? 0),
                    (A.totalFollowUps +=
                      X.saFollowUps ?? X.totalFollowUps ?? 0),
                    (A.uniqueTestDrives += X.uniqueTestDrives ?? 0),
                    (A.completedTestDrives += X.completedTestDrives ?? 0));
                }),
                  (u = W({ dealers: a, activeNetwork: l }, A));
              }
              (this.kpiData = W({}, u)),
                this.dealers.sort((A, E) => {
                  let X =
                    (A.saLeads || 0) +
                    (A.cxpLeads || 0) +
                    (A.icsLeads || 0) +
                    (A.manuallyEnteredLeads || 0);
                  return (
                    (E.saLeads || 0) +
                    (E.cxpLeads || 0) +
                    (E.icsLeads || 0) +
                    (E.manuallyEnteredLeads || 0) -
                    X
                  );
                });
              let f = this.dealers.map((A) => A.dealerName),
                v = this.dealers.map((A) => A.callLogs?.connected ?? 0),
                D = this.dealers.map((A) => A.callLogs?.declined ?? 0),
                T = this.dealers.map((A) => A.callLogs?.durationSec ?? 0),
                M = this.dealers.map((A) => A.callLogs?.incoming ?? 0),
                k = this.dealers.map((A) => A.callLogs?.outgoing ?? 0),
                V = this.dealers.map((A) => A.callLogs?.totalCalls ?? 0);
              (this.chartOptions = Ce(W({}, this.chartOptions), {
                series: [
                  { name: "Total Calls", data: V },
                  { name: "Outgoing Calls", data: k },
                  { name: "Incoming Calls", data: M },
                  { name: "Duration Sec", data: T },
                  { name: "Declined Calls", data: D },
                  { name: "Connected Calls", data: v },
                ],
                xaxis: { categories: f },
              })),
                this.cdr.detectChanges();
            } else
              (this.dealers = []),
                (this.kpiData = {
                  dealers: 0,
                  activeNetwork: 0,
                  users: 0,
                  activeUsers: 0,
                  leads: 0,
                  calls: 0,
                  totalFollowUps: 0,
                  uniqueTestDrives: 0,
                  completedTestDrives: 0,
                });
            this.isLoading = !1;
          });
        },
        error: (o) => {
          console.error(o),
            this.ngZone.run(() => {
              (this.dealers = []),
                (this.kpiData = {
                  dealers: 0,
                  activeNetwork: 0,
                  users: 0,
                  activeUsers: 0,
                  leads: 0,
                  calls: 0,
                  totalFollowUps: 0,
                  uniqueTestDrives: 0,
                  completedTestDrives: 0,
                }),
                (this.isLoading = !1);
            });
        },
      });
  }
  updatePaginatedDealers() {
    this.paginatedDealers = this.dealers.slice(0, this.currentDisplayCount);
  }
  onDealerSelectionChange() {
    if (
      this.selectedFilter === "CUSTOM" &&
      this.customStartDate &&
      this.customEndDate
    )
      this.fetchDealersWithCustomDate(this.customStartDate, this.customEndDate);
    else {
      let i = this.mapFilterToApi(this.selectedFilter);
      this.fetchSuperAdminDashboard(i);
    }
  }
  onDealerClick(i, e) {
    let t = localStorage.getItem("token");
    if (
      this.selectedFilter === "CUSTOM" &&
      this.customStartDate &&
      this.customEndDate
    ) {
      let r = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&start_date=${this.customStartDate}&end_date=${this.customEndDate}`;
      this.http
        .get(r, { headers: { Authorization: `Bearer ${t}` } })
        .subscribe((o) => {
          console.log("Custom dealer response", o);
        });
    } else {
      let r = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&type=${e}`;
      this.http
        .get(r, { headers: { Authorization: `Bearer ${t}` } })
        .subscribe((o) => {
          console.log("Non-custom dealer response", o);
        });
    }
  }
  avatarColors = [
    { background: "#E2E0F5", color: "#4B3C9B" },
    { background: "#D1F8F2", color: "#008B7F" },
    { background: "#FFD6D6", color: "#C62828" },
    { background: "#D6FFD6", color: "#2E7D32" },
    { background: "#D6E6FF", color: "#2962FF" },
    { background: "#FFE6FF", color: "#AD1457" },
  ];
  getAvatarStyle(i) {
    let e = this.avatarColors[i % this.avatarColors.length];
    return {
      width: "60px",
      height: "60px",
      margin: "0 auto 12px auto",
      borderRadius: "50%",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      fontWeight: "600",
      fontSize: "24px",
      background: e.background,
      color: e.color,
    };
  }
  isLastRow(i) {
    let e = Math.floor(window.innerWidth / 160),
      t = Math.ceil(this.ps1Data.length / e);
    return Math.floor(i / e) + 1 === t;
  }
  getAvatarColor(i) {
    let e = [
      { background: "#E2E0F5", text: "#4B3C9B" },
      { background: "#C4FEFB", text: "#007A78" },
      { background: "#FED1CF", text: "#C9302C" },
      { background: "#E3FFDF", text: "#3E8E41" },
      { background: "#CFDFFE", text: "#2C4DB2" },
      { background: "#FFEDFE", text: "#AF4C96" },
      { background: "#EAD1DC", text: "#9C2550" },
      { background: "#FFF2CC", text: "#B58900" },
      { background: "#D9EAD3", text: "#3B7A2A" },
      { background: "#F4CCCC", text: "#990000" },
      { background: "#F3F3F3", text: "#4D4D4D" },
      { background: "#FFE6F0", text: "#C2185B" },
    ];
    return e[i % e.length];
  }
  onPSCardClick(i) {
    console.log("Clicked PS ID:", i);
  }
  fetchPS1Data() {
    if (!this.selectedSM || !this.selectedDealerId) {
      console.warn("SM or Dealer not selected");
      return;
    }
    this.loadingPS = !0;
    let i = this.selectedFilter,
      e = "https://uat.smartassistapp.in/api/superAdmin/dashbaordNew",
      t = this.selectedDealerId,
      r = this.selectedSM.sm_id,
      o = `${e}?type=${i}&dealer_id=${t}&sm_id=${r}`,
      a = localStorage.getItem("token");
    if (!a) {
      console.error("No token found in localStorage"), (this.loadingPS = !1);
      return;
    }
    let l = new St().set("Authorization", `Bearer ${a}`);
    this.http.get(o, { headers: l }).subscribe({
      next: (u) => {
        let f = u?.data?.ps;
        Array.isArray(f)
          ? (this.ps1Data = f.map((v) => ({
              ps_id: v.ps_id,
              ps_name: `${v.ps_fname} ${v.ps_lname}`,
              enquiries: v.enquiries,
              testDrives: v.testDrives,
              orders: v.orders,
              cancellations: v.cancellation,
              netOrders: v.net_orders,
              retail: v.retail,
            })))
          : (console.warn("No PS data found in API response"),
            (this.ps1Data = [])),
          (this.loadingPS = !1);
      },
      error: (u) => {
        console.error("Error fetching PS1 data:", u),
          (this.ps1Data = []),
          (this.loadingPS = !1);
      },
    });
  }
  get paginatedPs1Data() {
    let i = (this.currentPage - 1) * this.pageSize,
      e = i + this.pageSize;
    return this.ps1Data.slice(i, e);
  }
  get totalPs1Pages() {
    return Math.ceil(this.ps1Data.length / this.pageSize);
  }
  formatChangeValue(i) {
    return i === 0 || Object.is(i, -0) ? "0%" : i > 0 ? `+${i}%` : `${i}%`;
  }
  getChangeColor(i) {
    return i > 0 ? "text-success" : (i < 0, "text-danger");
  }
  showMore() {
    (this.currentDisplayCount += this.itemsPerPage),
      this.updateDisplayedDealers();
  }
  showMoreVisible = !0;
  showMoreTable1() {
    let i =
      this.selectedDealers.length > 0 ? this.selectedDealers : this.dealers;
    this.table1Length < i.length && (this.table1Length += 10);
  }
  showLessTable1() {
    this.table1Length = 10;
  }
  showMoreTable2() {
    let i = this.dealers;
    this.table2Length < i.length && (this.table2Length += 10);
  }
  showLessTable2() {
    this.table2Length = 10;
  }
  dealerEngagementView(i) {
    this.dealerSummaryCallsViewType = i;
  }
  updateDisplayedDealers() {
    (this.displayedDealers = this.dealers.slice(0, this.itemsToShow)),
      (this.showMoreVisible = this.itemsToShow < this.dealers.length);
  }
  fetchDashboardData(i = "MTD") {
    let e = localStorage.getItem("token");
    if (!e) {
      console.error("Token not found!");
      return;
    }
    let t = new St().set("Authorization", `Bearer ${e}`),
      r = `https://uat.smartassistapp.in/api/superAdmin/dashboard/view-activities?type=${i}`;
    this.http.get(r, { headers: t }).subscribe({
      next: (o) => {
        console.log(`API response for type=${i}:`, o);
        let a = o?.data || {},
          l = (u) =>
            typeof u == "string"
              ? parseFloat(u.replace("%", "").trim())
              : Number(u) || 0;
        if (
          ((this.currentLeads = Number(a.current) || 0),
          (this.previousLeads = Number(a.previous) || 0),
          (this.changeDisplay = l(a.change)),
          (this.currentTestDrives = Number(a.currentTestDrives) || 0),
          (this.previousTestDrives = Number(a.previousTestDrives) || 0),
          (this.testDriveChange = l(a.testDriveChange)),
          (this.currentOrders = Number(a.currentOrders) || 0),
          (this.previousOrders = Number(a.previousOrders) || 0),
          (this.orderChange = l(a.orderChange)),
          (this.progressValue = Math.abs(this.changeDisplay)),
          (this.strokeColor = this.getStrokeColor(this.changeDisplay)),
          (this.testDriveProgressValue = Math.abs(this.testDriveChange)),
          (this.testDriveStrokeColor = this.getStrokeColor(
            this.testDriveChange
          )),
          (this.orderProgressValue = Math.abs(this.orderChange)),
          (this.orderStrokeColor = this.getStrokeColor(this.orderChange)),
          console.log("\u2705 Final Parsed Data:", {
            leads: {
              current: this.currentLeads,
              previous: this.previousLeads,
              change: this.changeDisplay,
            },
            testDrives: {
              current: this.currentTestDrives,
              previous: this.previousTestDrives,
              change: this.testDriveChange,
            },
            orders: {
              current: this.currentOrders,
              previous: this.previousOrders,
              change: this.orderChange,
            },
          }),
          a.kpi)
        ) {
          let u = Number(a.kpi.totalTestDrives) || 0,
            f = Number(a.kpi.totalOrders) || 0;
          (u > 0 || f > 0) &&
            console.log("\u{1F4CA} Creating Doughnut Chart with:", {
              totalTestDrives: u,
              totalOrders: f,
            });
        }
      },
      error: (o) => {
        console.error("Dashboard API error:", o);
      },
    });
  }
  initLineChart() {
    let i = document.getElementById("enquiryLineChart");
    new mm(i, {
      type: "line",
      data: {
        labels: ["Jan", "Feb", "Mar", "Apr"],
        datasets: [
          {
            data: [3, 5, 7, 4],
            borderColor: "#4CAF50",
            tension: 0.4,
            pointRadius: 0,
            borderWidth: 2,
          },
        ],
      },
      options: {
        responsive: !0,
        plugins: { legend: { display: !1 }, tooltip: { enabled: !0 } },
        scales: { x: { display: !1 }, y: { display: !1 } },
      },
    });
  }
  fetchData() {
    this.http
      .get("https://uat.smartassistapp.in/api/superAdmin/dashbaordNew")
      .subscribe(
        (i) => {
          console.log("API Response:", i),
            i?.data
              ? ((this.data = i.data),
                console.log("Data after assignment:", this.data))
              : console.error("No data in response:", i);
        },
        (i) => {
          console.error("Error fetching data:", i);
        }
      );
  }
  getLeadChange() {
    return (
      console.log("Data:", this.data),
      console.log("Lead Change:", this.data?.leads?.change),
      this.data?.leads?.change ? this.data.leads.change : 0
    );
  }
  trackByDealerId(i, e) {
    return e.dealer_id;
  }
  getChangePercentage() {
    return this.data?.leads?.change || 0;
  }
  getLeadPercentageChange() {
    return (
      console.log(this.dashboardData),
      console.log(this.dashboardData?.leads?.change),
      this.dashboardData?.leads?.change || 0
    );
  }
  sortData(i) {
    let e =
      this.selectedDealers.length > 0 ? this.selectedDealers : this.dealers;
    if (
      (this.sortColumn !== i
        ? ((this.sortColumn = i), (this.sortDirection = "desc"))
        : this.sortDirection === "desc"
        ? (this.sortDirection = "asc")
        : this.sortDirection === "asc" && (this.sortDirection = "default"),
      this.sortDirection === "default")
    )
      this.selectedDealers.length > 0
        ? (this.selectedDealers = this.originalDealers
            .filter((t) =>
              this.selectedDealers.some((r) => r.dealerId === t.dealerId)
            )
            .map((t) =>
              Ce(W({}, t), {
                callLogs: W({}, t.callLogs),
                users: t.users ? [...t.users] : [],
              })
            ))
        : (this.dealers = this.originalDealers.map((t) =>
            Ce(W({}, t), {
              callLogs: W({}, t.callLogs),
              users: t.users ? [...t.users] : [],
            })
          )),
        (this.sortColumn = null);
    else {
      let t = e
        .map((r) =>
          Ce(W({}, r), {
            callLogs: W({}, r.callLogs),
            users: r.users ? [...r.users] : [],
          })
        )
        .sort((r, o) => {
          let a = r[i] ?? 0,
            l = o[i] ?? 0;
          return this.sortDirection === "asc" ? a - l : l - a;
        });
      this.selectedDealers.length > 0
        ? (this.selectedDealers = t)
        : (this.dealers = t);
    }
  }
  fetchDashboardDataForTopCards(i) {
    let e = localStorage.getItem("token") || "",
      t = "https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM";
    i === "CUSTOM" && this.customStartDate && this.customEndDate
      ? (t += `?startDate=${this.customStartDate}&endDate=${this.customEndDate}`)
      : i !== "CUSTOM" && (t += `?type=${i}`),
      this.http
        .get(t, { headers: { Authorization: `Bearer ${e}` } })
        .subscribe({
          next: (r) => {
            r.status === 200 &&
              ((this.kpiData = r.data), (this.dealers = r.data.dealerData));
          },
          error: (r) => {
            console.error("Error fetching dealer data:", r),
              (this.dealers = []);
          },
        });
  }
  filterDealers() {
    let i = this.dealerSearch.toLowerCase();
    if (!i) {
      this.filteredDealers = [...this.dealers];
      return;
    }
    this.filteredDealers = this.dealers.filter((e) =>
      e.dealerName?.toLowerCase().includes(i)
    );
  }
  toggleDropdown() {
    (this.dropdownOpen = !this.dropdownOpen),
      this.dropdownOpen && (this.filteredDealers = [...this.dealers]);
  }
  areAllSelected() {
    return (
      this.filteredDealers.length > 0 &&
      this.filteredDealers.every((i) => this.isDealerSelected(i))
    );
  }
  toggleSelectAll(i) {
    i.target.checked
      ? this.filteredDealers.forEach((t) => {
          this.isDealerSelected(t) || this.toggleDealerSelection(t);
        })
      : this.filteredDealers.forEach((t) => {
          this.isDealerSelected(t) && this.toggleDealerSelection(t);
        });
  }
  selectDealer(i) {
    (this.selectedDealer = i),
      (this.dealerSearch = ""),
      (this.dropdownOpen = !1),
      this.fetchSuperAdminDashboard("MTD");
  }
  clickOutside(i) {
    this.dropdownOpen &&
      (i.target.closest(".dropdown-toggle") || (this.dropdownOpen = !1));
  }
  isDealerSelected(i) {
    return this.selectedDealers.some((e) => e.dealerId === i.dealerId);
  }
  toggleDealerSelection(i) {
    let e = this.selectedDealers.findIndex((r) => r.dealerId === i.dealerId);
    e > -1 ? this.selectedDealers.splice(e, 1) : this.selectedDealers.push(i),
      this.selectedDealers.length === 1
        ? (this.selectedDealerId = this.selectedDealers[0].dealerId)
        : (this.selectedDealerId = null);
    let t = this.mapFilterToApi(this.selectedFilter);
    this.fetchSuperAdminDashboard(t);
  }
  exportToCSV() {
    if (
      (console.log("Export clicked", this.dealers),
      !this.dealers || this.dealers.length === 0)
    ) {
      console.warn("No dealers to export");
      return;
    }
    let i = [
        "Dealer",
        "Total Users",
        "Active Users",
        "Leads SA",
        "Leads Sync with CXP",
        "Leads Sync with ICS",
        "Leads Manually Entered with CXP",
        "Follow-ups SA",
        "Follow-ups Sync with CXP",
        "Follow-ups Completed",
        "Follow-ups Upcoming",
        "Follow-ups Overdue",
        "Test Drives SA",
        "Test Drives Sync with CXP",
        "Test Drives Completed",
        "Test Drives Upcoming",
        "Test Drives Overdue",
        "Opportunities Converted",
      ],
      e = this.dealers.map((l) => [
        `"${l.dealerName}"`,
        l.totalUsers || 0,
        l.activeUsers || 0,
        l.saLeads || 0,
        l.cxpLeads || 0,
        l.icsLeads || 0,
        l.manuallyEnteredLeads || 0,
        l.saFollowUps || 0,
        l.cxpFollowUps || 0,
        l.completedFollowUps || 0,
        l.openFollowUps || 0,
        l.closedFollowUps || 0,
        l.saTestDrives || 0,
        l.cxpTestDrives || 0,
        l.completedTestDrives || 0,
        l.upcomingTestDrives || 0,
        l.closedTestDrives || 0,
        l.opportunitiesConverted || 0,
      ]),
      t = [i.join(","), ...e.map((l) => l.join(","))].join(`
`),
      r = new Blob([t], { type: "text/csv;charset=utf-8;" }),
      o = URL.createObjectURL(r),
      a = document.createElement("a");
    (a.href = o),
      (a.download = "dealer_summary.csv"),
      (a.style.display = "none"),
      document.body.appendChild(a),
      a.click(),
      document.body.removeChild(a),
      URL.revokeObjectURL(o);
  }
  trackByUserId(i, e) {
    return e.user_id ?? e.user;
  }
  exportDealerCalllogstocxp() {
    if (!this.dealers || this.dealers.length === 0) {
      console.warn("No dealers to export");
      return;
    }
    let i = [
        "Dealer",
        "Total Calls",
        "Outgoing",
        "Incoming",
        "Connected",
        "Declined",
      ],
      e = this.dealers.map((l) => [
        `"${l.dealerName}"`,
        l.callLogs?.totalCalls || 0,
        l.callLogs?.outgoing || 0,
        l.callLogs?.incoming || 0,
        l.callLogs?.connected || 0,
        l.callLogs?.declined || 0,
      ]),
      t = [i.join(","), ...e.map((l) => l.join(","))].join(`
`),
      r = new Blob([t], { type: "text/csv;charset=utf-8;" }),
      o = URL.createObjectURL(r),
      a = document.createElement("a");
    (a.href = o),
      (a.download = "dealer_summary_calls.csv"),
      (a.style.display = "none"),
      document.body.appendChild(a),
      a.click(),
      document.body.removeChild(a),
      URL.revokeObjectURL(o),
      console.log("Dealer summary CSV exported successfully");
  }
  static ɵfac = function (e) {
    return new (e || n)(
      H(Bt),
      H(Ke),
      H(Kn),
      H(Mt),
      H(Dd),
      H(Sd),
      H(Te),
      H(Ke),
      H(Fe),
      H(fi)
    );
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-dashboard"]],
    viewQuery: function (e, t) {
      if ((e & 1 && yt(xT, 5), e & 2)) {
        let r;
        ot((r = at())) && (t.chart = r.first);
      }
    },
    hostBindings: function (e, t) {
      e & 1 &&
        N(
          "click",
          function (o) {
            return t.clickOutside(o);
          },
          !1,
          qo
        );
    },
    standalone: !0,
    features: [ce],
    decls: 1,
    vars: 1,
    consts: [
      ["noDealers", ""],
      [4, "ngIf"],
      ["class", "loader-overlay", 4, "ngIf"],
      [
        1,
        "header2",
        2,
        "border-radius",
        "7px",
        "padding",
        "10px",
        "margin-top",
        "1rem",
        3,
        "ngClass",
      ],
      [1, "fltt"],
      [
        1,
        "time-dropdown",
        "flt1",
        2,
        "margin-right",
        "5px",
        3,
        "ngModelChange",
        "change",
        "ngModel",
      ],
      ["value", "DAY"],
      ["value", "YESTERDAY"],
      ["value", "WEEK"],
      ["value", "LAST_WEEK"],
      ["value", "MTD"],
      ["value", "LAST_MONTH"],
      ["value", "QTD"],
      ["value", "LAST_QUARTER"],
      ["value", "SIX_MONTH"],
      ["value", "YTD"],
      ["value", "LIFETIME"],
      ["value", "CUSTOM"],
      ["class", "custom-inputs flt1", 4, "ngIf"],
      [1, "dropdown", "flt1", 2, "margin-right", "5px"],
      ["type", "button", 1, "time-dropdown", "dropdown-toggle", 3, "click"],
      ["class", "dropdown-menu show", 4, "ngIf"],
      [1, "content-section", "active", 2, "margin-bottom", "2rem"],
      [1, "main-content"],
      [1, "kpi-section"],
      [1, "kpi-card"],
      [1, "kpi-label"],
      [1, "kpi-value", 2, "color", "black"],
      [1, "kpi-secondary"],
      [1, "kpi-highlight"],
      [1, "table-section"],
      [1, "table-header"],
      [1, "table-title"],
      [1, "table-subtitle"],
      [1, "table-actions", "flex", "items-center", "gap-2"],
      [
        "type",
        "button",
        "id",
        "exportsummary",
        1,
        "btn",
        "btn-small",
        "btn-secondary",
        3,
        "click",
      ],
      [1, "icon-download"],
      [1, "table-container"],
      [1, "table-scroll"],
      [1, "data-table"],
      [1, "table-thead"],
      ["rowspan", "2", 1, "sticky-col-header", "th-left"],
      ["colspan", "2", 1, "th-right"],
      ["colspan", "4", 1, "th-right"],
      ["colspan", "5", 1, "th-right"],
      ["colspan", "6", 1, "th-right"],
      [1, "th-right", "sortable-header", 2, "cursor", "pointer", 3, "click"],
      [1, "sort-arrows"],
      [1, "arrow-up"],
      [1, "arrow-down"],
      [
        1,
        "th-right",
        "group-divider",
        "sortable-header",
        2,
        "cursor",
        "pointer",
        3,
        "click",
      ],
      [4, "ngFor", "ngForOf"],
      [
        "type",
        "button",
        "style",
        "margin: 0.5rem; float: right;",
        "class",
        "btn btn-primary",
        3,
        "click",
        4,
        "ngIf",
      ],
      [
        "type",
        "button",
        "style",
        "margin: 0.5rem; float: right;",
        "class",
        "btn btn-secondary",
        3,
        "click",
        4,
        "ngIf",
      ],
      ["id", "ds", 1, "table-title"],
      [1, "table-actions"],
      [1, "nav-button-group", 2, "margin-left", "10px"],
      [1, "nav-button", 3, "click", "ngClass"],
      [1, "fas", "fa-table", 2, "margin-right", "6px", "font-size", "15px"],
      [1, "fas", "fa-chart-line", 2, "margin-right", "8px"],
      [1, "btn", "btn-small", "btn-secondary", 3, "click"],
      ["class", "table-container", 4, "ngIf"],
      [
        "class",
        "chart-container",
        "style",
        "min-height:400px; padding:20px; background:white; border-radius:10px;",
        4,
        "ngIf",
      ],
      [1, "loader-overlay"],
      [1, "spinner"],
      [1, "custom-inputs", "flt1"],
      [
        "type",
        "date",
        "placeholder",
        "Start Date",
        1,
        "custom-date",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [
        "type",
        "date",
        "placeholder",
        "End Date",
        1,
        "custom-date",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "apply-btn", "flt2", 3, "click"],
      [1, "reset-btn", "flt2", 3, "click"],
      [1, "dropdown-menu", "show"],
      [1, "px-2", "py-1"],
      [
        "type",
        "text",
        "placeholder",
        "Search dealers...",
        1,
        "form-control",
        3,
        "ngModelChange",
        "input",
        "click",
        "ngModel",
      ],
      [
        1,
        "d-flex",
        "justify-content-between",
        "align-items-center",
        "px-2",
        "py-1",
        "border-bottom",
      ],
      [1, "mb-0", "d-flex", "align-items-center", 3, "click"],
      ["type", "checkbox", 1, "me-2", 3, "change", "checked"],
      [
        "type",
        "button",
        "id",
        "clearbtn",
        1,
        "btn",
        "btn-link",
        "btn-sm",
        "text-danger",
        "p-0",
        "ms-auto",
        2,
        "margin-left",
        "120px",
        3,
        "click",
      ],
      [4, "ngIf", "ngIfElse"],
      ["class", "dropdown-item", 4, "ngFor", "ngForOf", "ngForTrackBy"],
      [1, "dropdown-item"],
      [
        "type",
        "checkbox",
        1,
        "me-2",
        2,
        "border",
        "1px solid black",
        3,
        "change",
        "checked",
      ],
      [3, "click"],
      [1, "dropdown-item", "text-muted", "text-center"],
      ["class", "table-row", 4, "ngIf"],
      ["class", "sub-row", 4, "ngIf"],
      [1, "table-row"],
      [1, "sticky-col-header", "td-left"],
      [1, "expand-btn", 3, "click"],
      [
        1,
        "fa",
        2,
        "font-size",
        "10px",
        "margin-right",
        "5px",
        "color",
        "rgb(15 95 184 / var(--tw-text-opacity, 1))",
        3,
        "ngClass",
      ],
      [2, "color", "rgb(15 95 184 / var(--tw-text-opacity, 1))"],
      [1, "td-right"],
      [1, "td-right", 2, "color", "#222fb9"],
      [1, "td-right", 3, "ngStyle"],
      [1, "sub-row"],
      ["colspan", "18", 1, "sub-row-content"],
      [1, "sub-row-inner"],
      [1, "sub-row-title", 2, "text-align", "left"],
      [1, "sub-table-container"],
      [1, "sub-table"],
      [1, "sub-table-thead", 2, "border-radius", "20px !important"],
      [2, "border-radius", "20px !important"],
      [2, "text-align", "left"],
      [3, "ngClass", 4, "ngFor", "ngForOf", "ngForTrackBy"],
      [3, "ngClass"],
      [1, "td-center"],
      [1, "chip", 3, "ngClass"],
      ["colspan", "14", 1, "td-center"],
      [
        "type",
        "button",
        1,
        "btn",
        "btn-primary",
        2,
        "margin",
        "0.5rem",
        "float",
        "right",
        3,
        "click",
      ],
      [
        "type",
        "button",
        1,
        "btn",
        "btn-secondary",
        2,
        "margin",
        "0.5rem",
        "float",
        "right",
        3,
        "click",
      ],
      [1, "data-table", "calls-table"],
      [1, "sticky-col-header", "th-left", 2, "width", "18%"],
      [1, "th-right"],
      [
        2,
        "display",
        "flex",
        "justify-content",
        "flex-end",
        "gap",
        "0.5rem",
        "margin-top",
        "0.5rem",
      ],
      ["type", "button", "class", "btn btn-primary", 3, "click", 4, "ngIf"],
      ["type", "button", "class", "btn btn-secondary", 3, "click", 4, "ngIf"],
      [1, "sticky-col", "td-font-medium"],
      [1, "fa", "fa-phone", 2, "margin-right", "4px"],
      [2, "color", "green", "margin-right", "4px", "font-size", "18px"],
      [2, "color", "green"],
      [3, "ngStyle"],
      [
        2,
        "display",
        "inline-flex",
        "justify-content",
        "center",
        "align-items",
        "center",
        "width",
        "16px",
        "height",
        "16px",
        "border-radius",
        "50%",
        "background-color",
        "red",
        "color",
        "white",
        "font-size",
        "10px",
        "margin-right",
        "4px",
      ],
      [2, "color", "red"],
      ["colspan", "6", 1, "sub-row-content", 2, "padding", "0"],
      [1, "sub-row-inner", 2, "padding-left", "0"],
      [
        1,
        "sub-row-title",
        2,
        "text-align",
        "left !important",
        "font-weight",
        "600",
        "padding",
        "4px 8px",
      ],
      [2, "text-align", "left !important"],
      [3, "ngClass", 4, "ngFor", "ngForOf"],
      [2, "text-align", "left !important", "width", "90px !important"],
      ["colspan", "6", 1, "td-center"],
      ["type", "button", 1, "btn", "btn-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-secondary", 3, "click"],
      [
        1,
        "chart-container",
        2,
        "min-height",
        "400px",
        "padding",
        "20px",
        "background",
        "white",
        "border-radius",
        "10px",
      ],
      ["id", "chart"],
      [3, "series", "chart", "xaxis", "stroke", "dataLabels", "title"],
    ],
    template: function (e, t) {
      e & 1 && R(0, GT, 250, 103, "ng-container", 1),
        e & 2 && y("ngIf", !t.selectedDealer && !t.selectedSM);
    },
    dependencies: [
      Ae,
      It,
      At,
      Xe,
      Pr,
      Kg,
      sc,
      tt,
      ii,
      ni,
      ei,
      Di,
      ti,
      _i,
      wd,
      Gc,
      Wc,
    ],
    styles: [
      '.wrapper[_ngcontent-%COMP%]{display:flex}.table-responsive[_ngcontent-%COMP%]{overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}.content-body[_ngcontent-%COMP%]{overflow-x:auto;padding:20px;flex-grow:1}.card-header[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;align-items:center}.card-header[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%]{margin-left:10px}.card[_ngcontent-%COMP%]{border-radius:6px!important}.custom-btn[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;border:none;padding:8px 16px;font-size:14px;border-radius:4px;transition:background-color .3s,color .3s}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#007bff;color:#fff}#dataTable[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border:none!important}#doughnutChart[_ngcontent-%COMP%]{max-width:100%;max-height:100%}.progress-circle[_ngcontent-%COMP%]{--size: 50px;--progress: 70%;--color: #28a745;width:var(--size);height:var(--size);border-radius:50%;background:conic-gradient(var(--color) var(--progress),#e6e6e6 0);display:flex;align-items:center;justify-content:center;position:relative}.custom-btn[_ngcontent-%COMP%]{border:none;background-color:#f0f0f0;padding:8px 20px;border-radius:20px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#dcdcdc}.selected-btn[_ngcontent-%COMP%]{background-color:#1e88e5!important;color:#fff!important}.circle-text[_ngcontent-%COMP%]{font-weight:700;color:#333}.position-absolute[_ngcontent-%COMP%]{position:absolute}.circular-chart[_ngcontent-%COMP%]{transition:transform .3s ease}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.5rem;font-weight:700;color:#4caf50;opacity:1}.circular-chart[_ngcontent-%COMP%]   .circle-fill[_ngcontent-%COMP%]{transition:stroke-dasharray 1s ease-out}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.2rem;font-weight:700}.tooltip-content[_ngcontent-%COMP%]{position:absolute;bottom:110%;left:50%;transform:translate(-50%);background-color:#333;color:#fff;padding:6px 10px;border-radius:5px;white-space:nowrap;font-size:13px;z-index:10;opacity:0;pointer-events:none;transition:opacity .3s ease}.tooltip-content[_ngcontent-%COMP%]:after{content:"";position:absolute;top:100%;left:50%;transform:translate(-50%);border-width:5px;border-style:solid;border-color:#333 transparent transparent transparent}.tooltip-container[_ngcontent-%COMP%]:hover   .tooltip-content[_ngcontent-%COMP%]{opacity:1}.no-scrollbar[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch;scrollbar-width:none}.no-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}@media (min-width: 992px) and (max-width: 1250px){.tooltip-container[_ngcontent-%COMP%]{right:15px!important;width:83px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:80px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   .tooltip-content[_ngcontent-%COMP%]{font-size:.85rem}#num[_ngcontent-%COMP%]{right:-53px}.tooltip-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{font-size:1.1rem;padding:10px!important}}@media screen and (width: 1024px) and (height: 1366px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:0!important}}.tooltip-container[_ngcontent-%COMP%]{top:18%}@media screen and (min-width: 1024px) and (max-width: 1366px){#first[_ngcontent-%COMP%]{top:10px!important}#sec[_ngcontent-%COMP%], #third[_ngcontent-%COMP%]{top:49%!important}}.custom-btn[_ngcontent-%COMP%]{background:transparent;border:none;padding:6px 16px;font-weight:500;cursor:pointer;transition:all .2s ease-in-out}.custom-btn[_ngcontent-%COMP%]:hover{color:#222fb9}.selected-btn[_ngcontent-%COMP%]{background:#222fb9;color:#fff;border-radius:6px}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:6px;margin-top:20px;font-family:Poppins,sans-serif}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;background-color:#fff;border:1px solid #d4d4d8;border-radius:6px;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 3px #0000000d}.back-arrow[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:24px;cursor:pointer;color:#333;transition:transform .2s ease}.back-arrow[_ngcontent-%COMP%]:hover{transform:scale(1.1);color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:600;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{background-color:#f1f1f1;color:#ccc;border-color:#e5e5e5;cursor:not-allowed}.sm-card[_ngcontent-%COMP%]{background:#fff;border-radius:12px;box-shadow:0 2px 8px #00000014;padding:20px 16px;text-align:center;font-family:Poppins,sans-serif;transition:transform .2s ease,box-shadow .2s ease}.sm-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 4px 12px #0000001f}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:none!important;border-bottom:1px solid #ccc!important}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto;font-family:Poppins,sans-serif}.header[_ngcontent-%COMP%]{background-color:#fff;color:#000;padding:1rem;display:flex;justify-content:space-between;align-items:center;margin-top:50px!important}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:1rem}.nav-button[_ngcontent-%COMP%]{background:none;border:none;color:#fff;padding:5px 11px!important;border-radius:4px;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#fff;color:#06c;font-weight:500}.nav-button[_ngcontent-%COMP%]:hover{background-color:#fff;color:#06c}.nav-button[_ngcontent-%COMP%]{color:#000}.nav-button[_ngcontent-%COMP%]:hover{background-color:#00f;color:#fff}.metrics-container[_ngcontent-%COMP%]{background-color:#e6e6e6;padding:1.5rem;border-radius:8px;box-shadow:0 2px 4px #0000000d;margin-bottom:1.5rem;position:relative}.dashboard-section[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;width:100%;max-width:100%}@media (max-width: 768px){.apexcharts-title-text[_ngcontent-%COMP%]{text-anchor:start!important;x:0!important}}.card[_ngcontent-%COMP%]{width:100%;box-shadow:0 1px 5px #0000001a;border-radius:8px;padding:16px;background:#fff}.metrics-grid[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:20px;align-items:flex-start}.filters-container[_ngcontent-%COMP%]{width:290px;min-width:200px;flex-shrink:0;margin-left:30px}.filter-section[_ngcontent-%COMP%]{background-color:#fff}.dealer-block[_ngcontent-%COMP%]{background:transparent!important;margin-bottom:10px}.dashboard-container[_ngcontent-%COMP%]{background:transparent!important}.metric-box[_ngcontent-%COMP%]{background-color:#fff;padding:1rem;border-radius:15px;text-align:center;box-shadow:0 1px 3px #0000001a;height:130px;display:flex;width:150px;flex-direction:column;justify-content:center;align-items:center}.metric-value[_ngcontent-%COMP%]{font-size:2rem;font-weight:700;color:#06c;margin-bottom:.5rem}.metric-label[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.filters-panel[_ngcontent-%COMP%]{background-color:#e5e5e5;padding:.75rem;border-radius:8px}.filters-title[_ngcontent-%COMP%]{text-align:center;font-size:.9rem;font-weight:600}.time-filters[_ngcontent-%COMP%]{display:flex;margin-bottom:.5rem}.select-container[_ngcontent-%COMP%]{position:relative}.sm-select[_ngcontent-%COMP%]{width:100%;padding:.35rem .75rem;border:1px solid #ccc;border-radius:4px;appearance:none;font-size:.85rem}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:.6rem;color:#666}.performance-panels[_ngcontent-%COMP%]{gap:1.5rem}.person-info[_ngcontent-%COMP%]{background-color:#f9f9f9;padding:14px;border-radius:6px;box-shadow:0 2px 5px #0000001a;width:fit-content;margin-bottom:16px}.person-n[_ngcontent-%COMP%]   .panel-title[_ngcontent-%COMP%]{text-align:center;font-size:1.8rem;font-weight:500;margin-bottom:1rem;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{margin-top:-190px;display:flex;align-items:center;justify-content:center;color:#999}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:3.5rem;box-sizing:border-box}@media (max-width: 1024px) and (min-width: 768px){.performance-panels[_ngcontent-%COMP%]{display:block!important;gap:0!important}}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{pointer-events:none;display:none;position:fixed;left:-100%}.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)!important}}.performance-panel[_ngcontent-%COMP%]{flex:1;background-color:#e6e6e6}.avatar[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:50%;background-color:#e0e0e0;display:flex;align-items:center;justify-content:center;font-size:24px;color:#888}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;margin:0;padding:0}.dashboard-container[_ngcontent-%COMP%]{width:100%;margin:0 auto;position:relative}.header[_ngcontent-%COMP%]{background-color:#f5f5f5;padding:15px;top:0;width:100%;max-width:1540px;z-index:100;box-shadow:0 2px 5px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#eee;cursor:pointer;border-radius:4px}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{vertical-align:middle}.content-section[_ngcontent-%COMP%]{margin-top:20px}.nav-button[_ngcontent-%COMP%]:hover{background-color:gray}.main-content[_ngcontent-%COMP%]{background-color:#f9f9f9}[_nghost-%COMP%]     .header{position:static!important}[_nghost-%COMP%]     .header{width:100%!important;max-width:100%!important;transition:width .3s ease,margin-left .3s ease!important;z-index:auto!important}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:24px;font-weight:700;color:#fff}.header[_ngcontent-%COMP%]{transition:width .3s ease!important;transition:width .3s ease,margin-left .3s ease!important}.metric-label[_ngcontent-%COMP%]{font-size:14px;color:#666;margin-top:5px}.filters-container[_ngcontent-%COMP%]{grid-column:1 / -1;margin-top:15px}.filters-panel[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a}.filters-title[_ngcontent-%COMP%]{font-weight:700}.time-filters[_ngcontent-%COMP%]{display:flex;gap:0px;margin-bottom:10px}.filter-button[_ngcontent-%COMP%]{padding:5px 10px;border:none;background-color:#fff;border-radius:4px;cursor:pointer}.filter-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;border-color:#222fb9}.select-container[_ngcontent-%COMP%]{position:relative;width:200px}.sm-select[_ngcontent-%COMP%]{width:100%;padding:8px;border-radius:4px;border:1px solid #ddd;appearance:none}.performance-panels[_ngcontent-%COMP%]{margin-top:20px}.performance-panel[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;box-shadow:0 2px 5px #0000001a;padding:15px}.panel-title[_ngcontent-%COMP%]{font-size:30px!important;margin-top:0;margin-bottom:15px;padding-bottom:10px;font-weight:500;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{min-height:300px}table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.content-section[_ngcontent-%COMP%]{display:none}.content-section.active[_ngcontent-%COMP%]{display:block}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#f0f0f0;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-of-type(odd){--bs-table-accent-bg: transparent !important}table.table-striped[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd){background-color:red!important}.team-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;background-color:#fff;border-radius:10px;padding:15px 25px;gap:15px}.team-name[_ngcontent-%COMP%]{font-size:17px;color:#000;white-space:nowrap;font-weight:500;font-family:Poppins,sans-serif}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:8px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:4px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.metrics-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;justify-content:flex-end;flex:1}.metric-card[_ngcontent-%COMP%]{display:flex;align-items:center;padding:8px 12px;border-radius:22px;font-size:.85em;font-weight:600;color:#333;text-align:center;box-shadow:0 0 12px #0000001a;flex-shrink:0;height:50px}.metric-card[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:6px;font-size:1em}.metric-value[_ngcontent-%COMP%]{font-weight:700;margin-left:10px}@media (max-width: 768px){.team-container[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.metrics-wrapper[_ngcontent-%COMP%]{justify-content:flex-start}}.back-button[_ngcontent-%COMP%]{margin-right:15px;cursor:pointer;color:#fff;font-size:20px}.nav-button[_ngcontent-%COMP%]{background-color:#fff;color:#000;border:none;border-radius:4px;padding:5px 15px;margin-right:10px;font-weight:700;cursor:pointer}.nav-tab[_ngcontent-%COMP%]{color:#fff;margin-left:20px;font-size:16px}.container[_ngcontent-%COMP%]{margin:0;padding:20px 0}.card[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:20px;margin-bottom:20px;box-shadow:0 1px 3px #0000001a}.card-title[_ngcontent-%COMP%]{font-size:18px;font-weight:700;margin-bottom:15px}.profiles[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;gap:25px;margin-bottom:20px;flex-wrap:wrap}.profile[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:70px}.avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#e0e0e0;margin-bottom:8px}.name[_ngcontent-%COMP%]{font-size:12px;text-align:center;line-height:1.2}.actions[_ngcontent-%COMP%]{margin-top:20px}.action-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:10px}.person-info[_ngcontent-%COMP%]{display:flex;flex-direction:column}.person-name[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px}.person-role[_ngcontent-%COMP%]{color:#666;font-size:14px}.action-button[_ngcontent-%COMP%]{background-color:#1e88e5;color:#fff;border:none;border-radius:15px;padding:5px 15px;cursor:pointer}.test-drive[_ngcontent-%COMP%], .follow-up[_ngcontent-%COMP%]{background-color:#1e88e5}.show-more[_ngcontent-%COMP%]{text-align:center;margin-top:10px;color:#333;font-size:14px}.metrics-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;margin-left:-10px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:15px;min-width:120px;flex:1;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:20px;font-weight:700;color:#fff;margin-bottom:5px}.metric-label[_ngcontent-%COMP%]{color:#666;font-size:14px}.filters-row[_ngcontent-%COMP%]{display:flex;background-color:#fff;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a;align-items:center}.filters-title[_ngcontent-%COMP%]{font-weight:700;padding-top:10px}.time-filters[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-button[_ngcontent-%COMP%]{padding:6px 12px;cursor:pointer;font-size:14px}.select-container[_ngcontent-%COMP%]{position:relative;margin-left:auto}.sm-select[_ngcontent-%COMP%]{padding:6px 30px 6px 10px;border:1px solid #ddd;border-radius:4px;appearance:none;background-color:#fff;font-size:14px;cursor:pointer}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:12px}select[_ngcontent-%COMP%]{position:relative;z-index:1000}.dropdown-row[_ngcontent-%COMP%]{margin-bottom:150px}.modal[_ngcontent-%COMP%]{display:flex;position:fixed;z-index:1000;left:0;top:0;width:100%;height:100%;background-color:#00000080;justify-content:center;align-items:center}.modal-content[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:6px;max-width:400px;width:90%;box-shadow:0 5px 15px #0000004d;position:relative}.close[_ngcontent-%COMP%]{position:absolute;right:12px;top:8px;font-size:24px;font-weight:700;cursor:pointer}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0}[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}[_ngcontent-%COMP%]::-webkit-scrollbar-button:single-button{display:none;width:0;height:0}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0;width:0}.selected-user[_ngcontent-%COMP%]{background-color:#cce5ff;border:2px solid #3399ff;border-radius:8px;padding:5px;width:90px}.container-fluid[_ngcontent-%COMP%]{width:100%;padding:0 20px;margin:0 auto;box-sizing:border-box}@media only screen and (max-width: 600px){.metrics-row[_ngcontent-%COMP%]{width:100%!important;flex-direction:column!important;gap:10px!important}.metric-box[_ngcontent-%COMP%]{width:100%!important;box-sizing:border-box}.metric-box[_ngcontent-%COMP%]:last-child{width:100%!important}}@media (max-width: 600px){.performance-panels[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;margin-left:0!important;width:100%!important}.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%]{flex-direction:column!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{min-width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   h2.panel-title[_ngcontent-%COMP%]{text-align:center}}.table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{margin-top:20px!important;padding:10px!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px!important;font-size:14px}}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;padding:0 10px;margin-left:0!important;height:200px!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%!important;margin-top:20px!important;padding:0!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px 4px!important;font-size:14px}.performance-panel[_ngcontent-%COMP%]   .table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media screen and (max-width: 767px){.header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{box-sizing:border-box;max-width:100vw;overflow-x:hidden;padding-left:10px;padding-right:10px}.nav-buttons[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:10px;align-items:stretch;width:100%}.nav-button[_ngcontent-%COMP%]{width:100%;font-size:1rem;box-sizing:border-box}}  table.highlight-alt-rows tbody tr:nth-child(2n){background-color:#f3f9ff!important}  table.highlight-alt-rows tbody tr:nth-child(2n) td{background-color:#f3f9ff!important}  .highlight-alt-rows tbody tr:nth-child(1){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(1) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5) td{background-color:transparent!important}@media (max-width: 768px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important;margin-bottom:20px!important}.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;word-wrap:break-word;white-space:normal;margin-top:5px}.container[_ngcontent-%COMP%]{max-width:100%;padding-left:15px;padding-right:15px;margin-left:auto;margin-right:auto}}@media (max-width: 400px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, .profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{grid-template-columns:repeat(2,1fr)!important}}.user-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(15,1fr);gap:30px;margin-bottom:20px}@media (max-width: 768px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;margin-top:5px;word-wrap:break-word;white-space:normal}}@media (max-width: 400px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)!important}}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .dashboard-content[_ngcontent-%COMP%]{transition:margin-left .3s ease}.sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-container[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .header2[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-content[_ngcontent-%COMP%]{margin-left:7rem}.header2[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;background:#fff;padding:1rem;box-shadow:0 2px 4px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f5f5f5;padding:4px;border-radius:6px}.nav-button[_ngcontent-%COMP%]{background:#fff;border:none;font-weight:700;padding:8px 16px;cursor:pointer;border-radius:4px}@media (max-width: 768px){.nav-buttons[_ngcontent-%COMP%]{align-items:stretch}.nav-button[_ngcontent-%COMP%]{width:100%}}.filter-btn[_ngcontent-%COMP%]{padding:5px 12px;font-size:14px;border-radius:4px;border:1px solid #ccc;background-color:#fff;transition:all .3s ease;cursor:pointer;color:#333}.filter-btn[_ngcontent-%COMP%]:hover{background-color:#f2f2f2}.active-filter-today[_ngcontent-%COMP%], .active-filter-upcoming[_ngcontent-%COMP%]{background:linear-gradient(#222fb9);color:#fff}.avatar-color-1[_ngcontent-%COMP%]{background-color:#ffd3b6}.avatar-color-2[_ngcontent-%COMP%]{background-color:#caffbf}.avatar-color-3[_ngcontent-%COMP%]{background-color:#9bf6ff}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:9999!important}.header2-right[_ngcontent-%COMP%]   .header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{padding:15px 0;min-width:12.5rem;z-index:9999;position:absolute}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important}.nav-buttons[_ngcontent-%COMP%]{z-index:1000}.header2-profile[_ngcontent-%COMP%]{position:relative;z-index:9999}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:99999!important;top:100%;right:0;display:block}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important;z-index:auto!important}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.user-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin:8px;width:80px}.user-avatar[_ngcontent-%COMP%]{width:50px;height:50px;background-color:#f0f0f0;color:#126893;border-radius:50%;display:flex;align-items:center;justify-content:center;font-weight:700;font-size:18px;box-shadow:0 2px 6px #0000001a}.user-name[_ngcontent-%COMP%]{font-size:12px;text-align:center;margin-top:4px;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{background-color:#fff;border-radius:12px;padding:16px;box-shadow:0 4px 10px #00000014;text-align:center;margin-bottom:12px}.user-avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#c4fefb;color:#26eee4;font-weight:700;display:flex;align-items:center;justify-content:center;margin:0 auto 8px;font-size:25px}.user-name[_ngcontent-%COMP%]{font-size:14px;font-weight:500;color:#333}.header-box[_ngcontent-%COMP%]{background-color:#f4f6fb;padding:6px 10px;border-radius:8px;display:inline-flex;align-items:center;gap:6px;font-weight:600;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:max-content;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse;outline:none!important}.header-box1[_ngcontent-%COMP%], .header-box2[_ngcontent-%COMP%], .header-box3[_ngcontent-%COMP%], .header-box4[_ngcontent-%COMP%], .header-box5[_ngcontent-%COMP%], .header-box6[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:6px;padding:6px 8px;border-radius:12px;font-weight:400;color:#000;text-align:center;font-family:Poppins,sans-serif;white-space:normal}.pagination-container[_ngcontent-%COMP%]{margin-top:20px;display:flex;justify-content:center;align-items:center;gap:6px;flex-wrap:wrap}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ccc;background-color:#fff;color:#333;cursor:pointer;border-radius:6px;font-size:14px;transition:all .2s ease-in-out}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#222fb9;color:#fff;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.pagination-container[_ngcontent-%COMP%]   button.active-page[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:700;border-color:#222fb9}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:10px;border:none}.header-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:wrap;width:100%;margin-bottom:15px}.panel-title[_ngcontent-%COMP%]{font-size:25px;color:#313131;font-family:Poppins,sans-serif;font-weight:600;border-radius:20px;margin:0}.panel-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#000;font-weight:400;font-size:16px;margin:0}.dealer-select[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;border-radius:6px;border:1px solid #ccc;height:fit-content;margin-top:5px}.dropdown-wrapper[_ngcontent-%COMP%]{width:250px;border:1px solid #ccc;border-radius:6px;position:relative;background:#fff;cursor:pointer}.selected-value[_ngcontent-%COMP%]{padding:10px;display:flex;justify-content:space-between;align-items:center}.arrow[_ngcontent-%COMP%]{font-size:12px}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;width:100%;top:100%;left:4px;right:0;border:1px solid #ccc;z-index:1000;border-radius:10px;box-shadow:0 2px 6px #00000026;max-height:240px;overflow-y:auto;padding:0;margin:0;max-width:300px}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:none;padding:10px 12px;transition:background .2s;cursor:pointer}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#f0f0f0}.user-dropdown[_ngcontent-%COMP%]{width:100%;max-width:300px;padding:10px 16px;border:none;border-radius:20px;background-color:#ebedf0;color:#333;font-size:16px;appearance:none;outline:none;cursor:pointer;box-shadow:0 2px 6px #0000001a;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{padding:8px;font-size:14px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-height:200px}  .custom-ng-select .ng-dropdown-panel{max-height:200px!important;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]{max-height:200px;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{white-space:nowrap}.radio-circle[_ngcontent-%COMP%]{width:16px;height:16px;border-radius:50%;border:2px solid currentColor;display:flex;align-items:center;justify-content:center}.radio-circle-inner[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:currentColor}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(1)   th[_ngcontent-%COMP%]{background-color:#fff!important}.table-wrapper[_ngcontent-%COMP%]{padding:20px}table[_ngcontent-%COMP%]{width:100%;border-collapse:separate;border-spacing:0 12px}th[_ngcontent-%COMP%]{color:#000}td[_ngcontent-%COMP%]{background-color:#f9f9fb;text-align:center;font-weight:500;border:none;padding:30px;transition:all .3s ease}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child{border-top-left-radius:12px;border-bottom-left-radius:12px}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child{border-top-right-radius:12px;border-bottom-right-radius:12px}.badge[_ngcontent-%COMP%]{padding:6px 14px;border-radius:8px;font-size:14px;font-weight:500;display:inline-block}.badge-upcoming[_ngcontent-%COMP%], .badge-enquiry[_ngcontent-%COMP%]{background-color:#d9f2e7;color:#177a47}.badge-coldcalls[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.badge-completed[_ngcontent-%COMP%]{background-color:#fef3c7;color:#b45309}.badge-overdue[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.nav-button[_ngcontent-%COMP%]{font-family:Poppins,sans-serif}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#1f2937}.filter-wrapper[_ngcontent-%COMP%]{background-color:#fff;border-radius:16px;box-shadow:0 4px 12px #0000000d;padding:15px 20px;width:fit-content;margin:20px}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f2f2f2;border-radius:50px;padding:5px 10px}.filter-btn[_ngcontent-%COMP%]{border:none;background:transparent;padding:6px 14px;border-radius:50px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.filter-btn.active[_ngcontent-%COMP%]{background-color:#fff;color:#2b45c7;border:2px solid #2b45c7}.filter-wrapper[_ngcontent-%COMP%]{margin-top:20px;background:#fff;padding:10px;border-radius:8px;width:fit-content}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-btn[_ngcontent-%COMP%]{padding:6px 10px;border:none;background:#f0f0f0;border-radius:4px;cursor:pointer}.filter-btn.active[_ngcontent-%COMP%]{background-color:#126893;color:#fff}.no-bottom-border[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:none!important}.back-button[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:35px;color:#333;cursor:pointer;padding:4px 10px;transition:transform .2s ease,color .2s ease}.back-button[_ngcontent-%COMP%]:hover{transform:translate(-3px);color:#126893}.nav-button[_ngcontent-%COMP%]{background-color:transparent;color:#000;border:none;padding:10px 16px;font-weight:500;border-radius:6px;cursor:pointer;transition:background-color .2s ease-in-out}.nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb926;color:#000}.nav-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:100%;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}.active-filter[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}.pill-button[_ngcontent-%COMP%]{padding:6px 16px;border:none;border-radius:999px;font-family:Poppins,sans-serif;background-color:transparent;color:#000;font-weight:500;cursor:pointer;transition:background-color .3s ease}.pill-active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}@media (min-width: 768px) and (max-width: 1080px){.dashboard-container[_ngcontent-%COMP%]{padding:20px}}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:6px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f1f1;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#999}.user-card[_ngcontent-%COMP%]{flex:0 0 auto;min-width:80px;cursor:pointer}.user-row[_ngcontent-%COMP%]{position:relative}.user-row[_ngcontent-%COMP%]:after{content:"";position:absolute;right:0;top:0;bottom:0;width:20px;background:linear-gradient(to right,transparent,rgba(255,255,255,.8));pointer-events:none;z-index:1}.dashboard-container[_ngcontent-%COMP%]{padding:10px}@media (max-width: 991.98px){.performance-panels[_ngcontent-%COMP%]{flex-direction:column}}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{padding:10px!important;margin:0 auto}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:#fff;font-size:1.2rem;border:none!important;font-weight:700;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:#fff;box-shadow:0 4px 6px #0000001a}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;font-family:Poppins,sans-serif;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4;font-family:Poppins,sans-serif}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#cfe8fc,#a0cfff);font-family:Poppins,sans-serif;font-size:1rem;font-weight:500;padding-left:60px;color:#000;border-radius:5px;transition:background .3s ease}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:linear-gradient(135deg,#b6dcf8,#87c5f5);cursor:pointer}.accordion-header[_ngcontent-%COMP%]:hover{transform:translateY(-2px)}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;transition:max-height .4s ease;background:#fffffff2;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background:#f8f9fa}*[_ngcontent-%COMP%]{margin:0;padding:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;background:linear-gradient(135deg,#667eea,#764ba2);min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto}.dashboard-header[_ngcontent-%COMP%]{text-align:center;color:#fff;margin-bottom:30px}.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:300;text-shadow:0 2px 4px rgba(0,0,0,.3)}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;padding:15px 20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.pagination-info[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.pagination-controls[_ngcontent-%COMP%]{display:flex;gap:10px}.pagination-btn[_ngcontent-%COMP%]{padding:8px 15px;background:#fff3;border:1px solid rgba(255,255,255,.3);border-radius:5px;color:#fff;cursor:pointer;transition:all .3s ease}.pagination-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:#ffffff4d}.pagination-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.pagination-btn.active[_ngcontent-%COMP%]{background:#fff6;font-weight:700}.accordion[_ngcontent-%COMP%]{margin-bottom:15px;border-radius:12px;overflow:hidden;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);border:1px solid rgba(255,255,255,.2)}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:700;color:#036;border:1px solid #b3d4ff;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{cursor:pointer}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif;box-shadow:0 8px 32px #0000001a}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4}.accordion-header[_ngcontent-%COMP%]{padding:20px 30px;cursor:pointer;display:flex;justify-content:space-between;align-items:center;color:#fff;transition:all .3s ease;position:relative}.accordion-header.active[_ngcontent-%COMP%]{box-shadow:inset 0 2px 4px #0003}.accordion-toggle[_ngcontent-%COMP%]{background:#fff3;border:none;width:30px;height:30px;border-radius:50%;color:#fff;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .3s ease}.accordion-toggle[_ngcontent-%COMP%]:hover{background:#ffffff4d}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;box-shadow:0 8px 32px #0000001a;transition:max-height .4s ease;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px;box-shadow:0 8px 32px #0000001a}.content-wrapper[_ngcontent-%COMP%]{padding:30px}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px 8px;background:#fff3;border-radius:12px;font-size:.75rem;font-weight:500;margin-right:10px}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:15px;margin-bottom:25px;padding:20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.filter-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:5px}.filter-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.85rem;color:#666;font-weight:500}.filter-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .filter-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:8px 12px;border:1px solid #ddd;border-radius:6px;font-size:.9rem;min-width:120px}.table-container[_ngcontent-%COMP%]{overflow-x:auto;border-radius:10px;box-shadow:0 4px 15px #0000001a;margin-bottom:20px}.call-logs-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background:#fff}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .call-logs-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:left;border-bottom:1px solid #eee}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background:linear-gradient(135deg,#f8f9fa,#e9ecef);font-weight:600;color:#495057;font-size:.9rem;position:sticky;top:0}.call-logs-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.status-badge[_ngcontent-%COMP%]{padding:4px 10px;border-radius:20px;font-size:.8rem;font-weight:500}.status-connected[_ngcontent-%COMP%]{background:#d4edda;color:#155724}.status-missed[_ngcontent-%COMP%]{background:#f8d7da;color:#721c24}.status-rejected[_ngcontent-%COMP%]{background:#f1f3f4;color:#5f6368}.status-enquiry[_ngcontent-%COMP%]{background:#e7f3ff;color:#06c}.status-cold[_ngcontent-%COMP%]{background:#fff3cd;color:#856404}.duration[_ngcontent-%COMP%]{font-family:monospace;font-weight:500}.table-pagination[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:10px;padding:15px;background:#fff;border-top:1px solid #eee}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ddd;background:#fff;border-radius:4px;cursor:pointer;font-size:.85rem}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.table-pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background:#007bff;color:#fff;border-color:#007bff}@media (max-width: 768px){.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2rem}.accordion-header[_ngcontent-%COMP%]{padding:15px 20px;font-size:.95rem}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%], .accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{padding-left:30px}.content-wrapper[_ngcontent-%COMP%]{padding:20px}.kpi-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(auto-fit,minmax(140px,1fr));gap:12px}.filters[_ngcontent-%COMP%]{flex-direction:column}.pagination-container[_ngcontent-%COMP%]{flex-direction:column;gap:10px;text-align:center}}.loading[_ngcontent-%COMP%]{display:inline-block;width:20px;height:20px;border:2px solid rgba(255,255,255,.3);border-radius:50%;border-top-color:#fff;animation:_ngcontent-%COMP%_spin 1s ease-in-out infinite}@keyframes _ngcontent-%COMP%_spin{to{transform:rotate(360deg)}}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(7,1fr);gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease;min-width:0}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px;background-color:#fff;border:2px solid #222fb9;border-radius:15px;font-size:12px;font-weight:600;color:#222fb9}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-3px)}.kpi-value[_ngcontent-%COMP%]{font-size:1.8rem;font-weight:700;margin-bottom:5px}.kpi-label[_ngcontent-%COMP%]{font-size:.85rem;opacity:.9}@media (max-width: 1366px){.kpi-card[_ngcontent-%COMP%]{padding:12px 8px}.kpi-value[_ngcontent-%COMP%]{font-size:1.5rem}.kpi-label[_ngcontent-%COMP%]{font-size:.75rem}}@media (max-width: 1024px){.kpi-grid[_ngcontent-%COMP%]{gap:8px}.kpi-card[_ngcontent-%COMP%]{padding:10px 6px}.kpi-value[_ngcontent-%COMP%]{font-size:1.3rem}.kpi-label[_ngcontent-%COMP%]{font-size:.7rem}}.shadow-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;margin-top:10px;background-color:#fff;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .shadow-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f4f4f4;font-weight:700}.dealer-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden;background:linear-gradient(135deg,#f8f9fa,#e9ecef);margin-top:15px;font-family:Arial,sans-serif}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .dealer-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:center}.dealer-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{background-color:#f0f0f0}.dealer-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#333}.show-more-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:15px 0}.show-more-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;border:none;padding:8px 20px;border-radius:8px;cursor:pointer;font-size:14px;font-weight:500;transition:background-color .3s ease,transform .2s ease}.show-more-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}.pagination-center[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:8px;margin-top:15px}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #007bff;background-color:#fff;color:#007bff;cursor:pointer;border-radius:4px;transition:all .2s}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#007bff;color:#fff}.pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;font-weight:700}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.expand-row[_ngcontent-%COMP%]{background-color:#f8f9fa}.expanded-content[_ngcontent-%COMP%]{padding:20px;border-left:4px solid #007bff;margin:10px;background-color:#fff;border-radius:6px;box-shadow:0 2px 4px #0000000d}.expanded-content[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin:0}.expanded-content[_ngcontent-%COMP%]   .col-md-4[_ngcontent-%COMP%]{margin-bottom:15px}.expanded-content[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:#495057;font-size:13px}.orders-table-container[_ngcontent-%COMP%]{border-radius:8px;overflow:hidden;margin:20px 0;max-width:100%}.table[_ngcontent-%COMP%]{margin-bottom:0;font-size:14px}.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;font-weight:600;font-size:12px;text-transform:uppercase;letter-spacing:.5px;border-bottom:1px solid #dee2e6;padding:16px 12px;white-space:nowrap}.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:16px 12px;vertical-align:middle}.order-id[_ngcontent-%COMP%]{font-weight:600;color:#495057}.created-time[_ngcontent-%COMP%]{color:#6c757d}.customer-name[_ngcontent-%COMP%]{font-weight:500;color:#212529}.total-amount[_ngcontent-%COMP%], .profit-amount[_ngcontent-%COMP%]{font-weight:600;color:#212529}.status-badge[_ngcontent-%COMP%]{padding:6px 12px;border-radius:20px;font-size:12px;font-weight:500;text-transform:capitalize}.status-pending[_ngcontent-%COMP%]{background-color:#fff3cd;color:#856404}.status-confirmed[_ngcontent-%COMP%]{background-color:#cce5ff;color:#06c}.status-shipped[_ngcontent-%COMP%]{background-color:#d4edda;color:#155724}.status-rejected[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24}.btn-plus[_ngcontent-%COMP%]{background:none;border:none;color:#6c757d;font-size:16px;cursor:pointer;padding:8px;border-radius:50%;transition:all .2s ease;display:flex;align-items:center;justify-content:center;width:32px;height:32px}.btn-plus[_ngcontent-%COMP%]:hover{background-color:#e9ecef;color:#495057}.btn-plus[_ngcontent-%COMP%]:focus{outline:2px solid #007bff;outline-offset:2px}.action-cell[_ngcontent-%COMP%]{text-align:center;width:60px}.table-hover[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{transition:background-color .2s ease}.clickable-row[_ngcontent-%COMP%]:hover{transform:translateY(-1px);box-shadow:0 2px 4px #0000001a;transition:all .2s ease}.back-arrow[_ngcontent-%COMP%]{display:inline-block;transition:transform .2s ease}.back-arrow[_ngcontent-%COMP%]:hover{transform:translate(-3px)}.time-filter[_ngcontent-%COMP%]{gap:10px}.time-btn[_ngcontent-%COMP%]{border:1px solid #222fb9;background:#fff;color:#222fb9;font-weight:500;font-size:14px;padding:8px 18px;border-radius:20px;cursor:pointer;transition:all .2s ease-in-out}.time-btn[_ngcontent-%COMP%]:hover{background:#f1f5ff}.time-filter-container[_ngcontent-%COMP%]{padding:8px 12px;display:inline-block;border-radius:6px}.time-filter-container[_ngcontent-%COMP%]   .time-btn[_ngcontent-%COMP%]{border:none!important;border-radius:0!important;background:none!important;padding:0 6px;font-size:20px;cursor:pointer}.time-filter-container[_ngcontent-%COMP%]   .time-btn.active[_ngcontent-%COMP%]{font-weight:900;color:#222fb9}.time-filter-container[_ngcontent-%COMP%]   .separator[_ngcontent-%COMP%]{margin:0 6px;color:#555;-webkit-user-select:none;user-select:none}.custom-table[_ngcontent-%COMP%]{border-radius:15px;border-collapse:separate;overflow:hidden;background-color:#fff;box-shadow:0 4px 12px #0000001a}.custom-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:8px 12px;color:#555}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{cursor:pointer}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:transparent!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd){background-color:transparent!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:transparent!important}.custom-table[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f5f9!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f5ff}.custom-table[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#fff!important;border-bottom:1px solid #dee2e6}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd){background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f8f9fa!important}.time-filter-container[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;padding:8px 12px;border-radius:8px;margin-top:10px}.time-dropdown[_ngcontent-%COMP%]{min-width:250px;padding:6px 10px;font-size:14px;border-radius:6px;margin-left:8px;border:1px solid #ccc;background:#f9f9f9;cursor:pointer}.time-dropdown[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff;box-shadow:0 0 0 2px #007bff33}.custom-inputs[_ngcontent-%COMP%]{display:flex;gap:8px;align-items:center}.custom-date[_ngcontent-%COMP%]{padding:5px 10px;border-radius:6px;border:1px solid #ccc;font-size:14px}.custom-date[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff;box-shadow:0 0 0 2px #007bff33}.apply-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:5px 12px;border:none;border-radius:6px;cursor:pointer;font-size:14px}.apply-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3}.reset-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:5px 12px;border:none;border-radius:6px;cursor:pointer;font-size:14px}.reset-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3}.custom-inputs.applied[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-color:#222fb9;box-shadow:0 0 4px #222fb980}.table-primary[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-size:18px!important}.stats-container[_ngcontent-%COMP%]{margin-top:20px;gap:20px}.stats-card[_ngcontent-%COMP%]{background:#fff;padding:20px;border-radius:12px;box-shadow:0 2px 6px #00000014;text-align:left;width:220px;min-height:120px;flex:0 0 auto}.stats-card[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{font-size:14px;color:#666;margin-bottom:8px}.stats-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:28px;font-weight:700;color:#14213d;margin-bottom:6px}.stats-card[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{font-size:13px;color:#7d7d7d}.dashboard-header[_ngcontent-%COMP%]{position:sticky;top:0;z-index:20;background:#ffffffe6;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);border-bottom:1px solid #e2e8f0}.header-container[_ngcontent-%COMP%]{max-width:80rem;margin:0 auto;padding:0 1rem}@media (min-width: 640px){.header-container[_ngcontent-%COMP%]{padding:0 1.5rem}}@media (min-width: 1024px){.header-container[_ngcontent-%COMP%]{padding:0 2rem}}.header-content[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:1rem;padding:1rem 0}.main-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700;letter-spacing:-.025em;color:#0f172a;margin:0}.subtitle[_ngcontent-%COMP%]{color:#64748b;font-size:.875rem;margin:0}.header-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.main-content[_ngcontent-%COMP%]{max-width:150rem!important;margin:0 auto;display:flex;flex-direction:column;gap:1.5rem}.filter-section[_ngcontent-%COMP%]{background:#fff;border-radius:1rem;box-shadow:0 1px 3px #0000001a,0 1px 2px #0000000f;border:1px solid #e2e8f0;padding:1rem}@media (min-width: 640px){.filter-section[_ngcontent-%COMP%]{padding:1.5rem}}.filter-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem}@media (min-width: 768px){.filter-container[_ngcontent-%COMP%]{flex-direction:row;align-items:end;justify-content:space-between}}.filter-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;gap:1rem;width:100%}@media (min-width: 640px){.filter-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)}}.form-group[_ngcontent-%COMP%]{display:flex;flex-direction:column}.form-label[_ngcontent-%COMP%]{display:block;font-size:.875rem;font-weight:500;color:#475569;margin-bottom:.25rem}.form-select[_ngcontent-%COMP%], .form-input[_ngcontent-%COMP%]{width:100%;border-radius:.75rem;padding:.5rem .75rem;font-size:.875rem;background:#fff}.form-select[_ngcontent-%COMP%]:focus, .form-input[_ngcontent-%COMP%]:focus{outline:none}.filter-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:.5rem;padding:.5rem 1rem;border-radius:.75rem;font-size:.875rem;font-weight:600;border:1px solid transparent;cursor:pointer;transition:all .15s ease}.btn-primary[_ngcontent-%COMP%]{background:#2563eb;color:#fff}.btn-primary[_ngcontent-%COMP%]:hover{background:#1d4ed8}.btn-secondary[_ngcontent-%COMP%]{border-color:#e2e8f0;background:#fff;color:#374151}.btn-secondary[_ngcontent-%COMP%]:hover{background:#f8fafc}.btn-small[_ngcontent-%COMP%]{padding:.375rem .75rem;font-size:.75rem}.kpi-section[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(2,1fr);gap:1rem}@media (min-width: 768px){.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)}}.kpi-card[_ngcontent-%COMP%]{border-radius:1rem;border:1px solid #e2e8f0;background:#fff;padding:1rem}.kpi-label[_ngcontent-%COMP%]{color:#64748b;font-size:.75rem}.kpi-value-container[_ngcontent-%COMP%]{margin-top:.25rem;display:flex;align-items:baseline;gap:.5rem}.kpi-value[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700}.kpi-secondary[_ngcontent-%COMP%]{font-size:.75rem;color:#64748b}.kpi-highlight[_ngcontent-%COMP%]{font-weight:600;color:#374151}.table-section[_ngcontent-%COMP%]{background:#fff;border-radius:1rem;box-shadow:0 1px 3px #0000001a,0 1px 2px #0000000f;border:1px solid #e2e8f0}.table-header[_ngcontent-%COMP%]{padding:1rem 1.5rem;border-bottom:1px solid #e2e8f0;display:flex;align-items:center;justify-content:space-between}.table-title[_ngcontent-%COMP%]{font-size:1.125rem;font-weight:600;margin:0}.table-subtitle[_ngcontent-%COMP%]{color:#64748b;font-size:.875rem;margin:0}.table-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.table-container[_ngcontent-%COMP%]{padding:.75rem;overflow-x:auto;margin-bottom:0}.data-table[_ngcontent-%COMP%]{min-width:960px;width:100%;font-size:.875rem}.calls-table[_ngcontent-%COMP%]{min-width:800px}.table-thead[_ngcontent-%COMP%]{font-size:15px;color:#1f2937;font-weight:600;background:#f8fafc}.th-left[_ngcontent-%COMP%]{text-align:left;padding:.75rem;border-top-left-radius:.75rem;border-bottom-left-radius:.75rem}.th-right[_ngcontent-%COMP%]{text-align:right;padding:.75rem}.th-center[_ngcontent-%COMP%]{text-align:center;padding:.75rem}.th-rounded-right[_ngcontent-%COMP%]{border-top-right-radius:.75rem;border-bottom-right-radius:.75rem}.th-rounded-left[_ngcontent-%COMP%]{border-top-left-radius:.75rem;border-bottom-left-radius:.75rem}.table-row[_ngcontent-%COMP%]:nth-child(2n){background:#f9fafb}.table-row[_ngcontent-%COMP%]:hover{background:#eef7ff}.td-font-medium[_ngcontent-%COMP%]{font-weight:500;padding:.75rem}.td-right[_ngcontent-%COMP%]{text-align:right;padding:.75rem}.td-center[_ngcontent-%COMP%]{text-align:center;padding:.75rem}.sticky-col[_ngcontent-%COMP%], .sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff}.sticky-col-header[_ngcontent-%COMP%]{z-index:3;background:#f8fafc}.sticky-col[_ngcontent-%COMP%]{z-index:2}.expand-btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:.5rem;color:#1d4ed8;font-weight:600;background:none;border:none;cursor:pointer}.expand-btn[_ngcontent-%COMP%]:hover{color:#1e40af}.sub-row[_ngcontent-%COMP%]{background:#fbfdff}.sub-row-content[_ngcontent-%COMP%]{padding:0}.sub-row-inner[_ngcontent-%COMP%]{padding:1rem 1.5rem;border-top:1px solid #e2e8f0}.sub-row-title[_ngcontent-%COMP%]{font-size:.75rem;font-weight:600;color:#64748b;margin-bottom:.5rem}.sub-table-container[_ngcontent-%COMP%]{overflow-x:auto}.sub-table[_ngcontent-%COMP%]{min-width:940px;width:100%;font-size:.75rem}.calls-sub-table[_ngcontent-%COMP%]{min-width:720px}.sub-table-thead[_ngcontent-%COMP%]{background:#f8fafc;color:#475569}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;padding:.15rem .5rem;border-radius:999px;font-size:.75rem;line-height:1rem;border:1px solid rgba(0,0,0,.05);background:#f1f5f9;color:#475569}.chip-success[_ngcontent-%COMP%]{background:#ecfdf5;color:#047857;border-radius:10px}.chip-inactive[_ngcontent-%COMP%]{background:#f1f5f9;color:#64748b;border-radius:999px}.icon-refresh[_ngcontent-%COMP%]:before{content:"\\21bb"}.icon-filter[_ngcontent-%COMP%]:before{content:"\\2699"}.icon-reset[_ngcontent-%COMP%]:before{content:"\\21ba"}.icon-download[_ngcontent-%COMP%]:before{content:"\\2193"}.icon-chevron-right[_ngcontent-%COMP%]:before{content:"\\2192"}.icon-chevron-down[_ngcontent-%COMP%]:before{content:"\\2193"}.hidden[_ngcontent-%COMP%]{display:none!important}[_nghost-%COMP%]{background:#f8fafc;color:#1e293b;font-family:system-ui,-apple-system,sans-serif}.arrow[_ngcontent-%COMP%]{display:inline-block;transition:transform .2s ease;margin-right:8px}.expand-btn.expanded[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{transform:rotate(90deg)}.expand-btn[_ngcontent-%COMP%]{background:none;border:none;cursor:pointer;display:flex;align-items:center;gap:8px;font-size:14px;font-weight:500;color:#1e293b;padding:0;transition:all .2s}.expand-btn[_ngcontent-%COMP%]:hover{color:#3b82f6}.chip-success[_ngcontent-%COMP%]{@apply text-[#047857];background-color:#d1fae5;padding:2px 6px;border-radius:10px}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{color:#475569;text-align:left;font-weight:600}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .sub-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:not(.td-center   .chip)[_ngcontent-%COMP%]{color:#475569}.sub-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n)   td[_ngcontent-%COMP%]{background-color:#f0f8ff!important;padding:10px!important}.chip-inactive[_ngcontent-%COMP%]{@apply text-gray-500;background-color:#f3f4f6;padding:2px 6px;border-radius:10px}@media (min-width: 1200px) and (max-width: 1366px){.dashboard-container[_ngcontent-%COMP%]{margin-left:-20px}}@media (min-width: 1200px) and (max-width: 1300px){.main-content[_ngcontent-%COMP%]{margin-left:-15px}}[_ngcontent-%COMP%]::-webkit-scrollbar{height:12px}.table-scroll[_ngcontent-%COMP%]{overflow-y:auto;position:relative;scrollbar-width:thin}.fltt[_ngcontent-%COMP%]{display:inline-flex}@media (max-width: 844px){.header2[_ngcontent-%COMP%]{display:block!important}.fltt[_ngcontent-%COMP%]{display:ruby!important}.time-dropdown[_ngcontent-%COMP%]{width:100%!important;margin-top:8px}.dropdown-menu[_ngcontent-%COMP%]{z-index:99999!important;width:100%!important}.custom-inputs[_ngcontent-%COMP%]{display:ruby!important;width:100%!important}.custom-inputs[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%!important;margin-bottom:10px!important}.custom-inputs[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:10px!important}.content-body[_ngcontent-%COMP%]{margin-left:0!important}.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)!important}.time-dropdown[_ngcontent-%COMP%]{min-width:0px!important;margin-left:0!important}.table-actions[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-end;gap:6px}.btn-small[_ngcontent-%COMP%]{align-items:flex-end;margin-top:6px}#clearbtn[_ngcontent-%COMP%]{margin-left:160px!important}#exportsummary[_ngcontent-%COMP%]{align-items:flex-end!important;margin-top:-40%!important}.kpi-label[_ngcontent-%COMP%], .table-header[_ngcontent-%COMP%]{white-space:break-spaces!important}}.clickable[_ngcontent-%COMP%]{cursor:pointer}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:first-child   th[_ngcontent-%COMP%]{z-index:20}.sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff;z-index:50!important}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:first-child   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:30}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2)   th[_ngcontent-%COMP%]{position:sticky;top:40px;background:#fff;z-index:25}.table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:5;box-shadow:0 2px 2px -1px #0000001a}.sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff;z-index:10}.sub-table-scroll[_ngcontent-%COMP%]{max-height:300px;overflow-y:auto;position:relative;z-index:0}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:15;box-shadow:0 2px 2px -1px #0000001a}.sub-table-scroll[_ngcontent-%COMP%], .sub-user-table-scroll[_ngcontent-%COMP%]{max-height:250px;overflow-y:auto;border:1px solid #e0e0e0}.sub-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background-color:#f9f9f9;z-index:2;box-shadow:0 2px 2px -1px #0000001a}.data-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .data-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:8px;text-align:center;font-size:14px}.sticky-col-header[_ngcontent-%COMP%], .sticky-col[_ngcontent-%COMP%]{position:sticky;left:0;background:#f9f9f9;z-index:2}.sub-table-container[_ngcontent-%COMP%]{max-height:900px;overflow-y:auto;overflow-x:auto}.sub-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:2}.table-thead[_ngcontent-%COMP%]   th.th-center[_ngcontent-%COMP%]{background-color:#e6f2ff;font-weight:600;border-bottom:2px solid #000}.dropdown-item[_ngcontent-%COMP%]{cursor:pointer}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2)   th[_ngcontent-%COMP%]{font-weight:500;background-color:#fff!important}.data-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.expand-btn[_ngcontent-%COMP%]{border:none;background:none;cursor:pointer;font-weight:500}.arrow[_ngcontent-%COMP%]{display:inline-block;width:12px}.data-table[_ngcontent-%COMP%]   th.group-header[_ngcontent-%COMP%]{border:2px solid #000;text-align:center;background-color:#f0f0f0}.data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .data-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:6px 10px}.bordered-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.bordered-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .bordered-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:8px 12px;text-align:left}.bordered-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f5f5f5}.table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{top:0;z-index:3;background-color:#f5f5f5}.bordered-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.data-table[_ngcontent-%COMP%]{border-collapse:separate;border-spacing:0 10px}.table-row[_ngcontent-%COMP%]{background:#fff;border-radius:8px}.group-divider[_ngcontent-%COMP%]{border-right:2px solid #e2e8f0!important}.loader-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;background:#ffffffb3;display:flex;align-items:center;justify-content:center;z-index:1050}.spinner[_ngcontent-%COMP%]{width:40px;height:40px;border:4px solid #e8e8e8;border-top:4px solid #555;border-radius:50%;animation:_ngcontent-%COMP%_spin .8s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}input[_ngcontent-%COMP%]:focus{outline:none!important;box-shadow:none!important}.sub-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.sub-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .sub-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:none;padding:4px 8px}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:none;background:transparent}.highlight-red[_ngcontent-%COMP%]{color:red!important;font-weight:700}.normal[_ngcontent-%COMP%]{color:#000}.charts-container[_ngcontent-%COMP%]{display:flex;gap:20px}.chart-card[_ngcontent-%COMP%]{flex:1;background:#fff;border:1px solid #e0e0e0;border-radius:8px;padding:20px;box-shadow:0 2px 4px #0000001a}.chart-title[_ngcontent-%COMP%]{font-size:18px;font-weight:700;margin-bottom:20px;color:#333}.chart-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:15px}.chart-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between}.chart-label[_ngcontent-%COMP%]{font-size:14px;color:#666;min-width:80px}.chart-bar-container[_ngcontent-%COMP%]{flex:1;margin:0 15px;position:relative;height:20px;background:#036;border-radius:10px;overflow:hidden}.chart-bar[_ngcontent-%COMP%]{height:100%;background:#036;border-radius:10px;position:relative;transition:width .3s ease}.chart-value[_ngcontent-%COMP%]{font-size:14px;font-weight:700;color:#333;min-width:30px;text-align:right}.chart-target[_ngcontent-%COMP%]{position:absolute;top:0;height:100%;width:3px;background:#dc3545;border-radius:2px}.chart-target[_ngcontent-%COMP%]:after{content:attr(data-value);position:absolute;top:-25px;left:50%;transform:translate(-50%);font-size:12px;color:#dc3545;font-weight:700}@media (max-width: 768px){.charts-container[_ngcontent-%COMP%]{flex-direction:column;padding:0 10px}.chart-card[_ngcontent-%COMP%]{margin-bottom:15px}}.sortable-header[_ngcontent-%COMP%]{position:relative;-webkit-user-select:none;user-select:none}.sort-arrows[_ngcontent-%COMP%]{display:inline-flex;flex-direction:column;align-items:center;margin-left:8px;line-height:1;gap:2px;vertical-align:top}.arrow-up[_ngcontent-%COMP%], .arrow-down[_ngcontent-%COMP%]{font-size:10px;color:#ccc;transition:color .2s ease;display:block;margin:0;padding:0}.arrow-up.active[_ngcontent-%COMP%], .arrow-down.active[_ngcontent-%COMP%]{color:#333}.sort-arrows-spaced[_ngcontent-%COMP%]{display:inline-flex;flex-direction:column;align-items:center;margin-left:8px;gap:4px}.sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-up[_ngcontent-%COMP%], .sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-down[_ngcontent-%COMP%]{font-size:8px;color:#bbb}.sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-up.active[_ngcontent-%COMP%], .sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-down.active[_ngcontent-%COMP%]{color:#555}',
    ],
  });
};
var Ed = class n {
  isSessionStorageAvailable() {
    return typeof window < "u" && typeof sessionStorage < "u";
  }
  getItem(i) {
    return this.isSessionStorageAvailable() ? sessionStorage.getItem(i) : null;
  }
  setItem(i, e) {
    this.isSessionStorageAvailable() && sessionStorage.setItem(i, e);
  }
  removeItem(i) {
    this.isSessionStorageAvailable() && sessionStorage.removeItem(i);
  }
  clear() {
    this.isSessionStorageAvailable() && sessionStorage.clear();
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Qe = class n {
  constructor(i, e) {
    this.http = i;
    this.storageService = e;
  }
  apiUrl = "https://uat.smartassistapp.in/api/superadmin/";
  getAuthHeaders() {
    let i = this.storageService.getItem("token");
    return new St()
      .set("authorization", `Bearer ${i}`)
      .set("accept", "application/json");
  }
  getAllDealer() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "dealers/all", { headers: i });
  }
  getDealerById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}`, { headers: e });
  }
  getCustomerById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}accounts/${i}`, { headers: e });
  }
  getTeamById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}teams/${i}`, { headers: e });
  }
  getVehicleById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}vehicles/${i}`, { headers: e });
  }
  getUserById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}users/${i}`, { headers: e });
  }
  getAllUser(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/users/all`, {
      headers: e,
    });
  }
  getAllLead(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/leads/all`, {
      headers: e,
    });
  }
  getAllTask(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/tasks/all`, {
      headers: e,
    });
  }
  getEventsAll(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/events/t-drives/all`, {
      headers: e,
    });
  }
  getAllOpportunities(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/opportunities/all`, {
      headers: e,
    });
  }
  updateDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}dealers/${i.dealer_id}/update`, i, {
      headers: e,
    });
  }
  createDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "dealers/create", i, { headers: e });
  }
  deleteDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}dealers/${i}/delete`,
      {},
      { headers: e }
    );
  }
  getAllVehicle() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "vehicles/all", { headers: i });
  }
  getSingleVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/vehicles/${i}`, { headers: e });
  }
  createNewVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "vehicles/create", i, { headers: e });
  }
  deleteVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}vehicles/${i}/delete`,
      {},
      { headers: e }
    );
  }
  updateVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}vehicles/${i.vehicle_id}/update`, i, {
      headers: e,
    });
  }
  eventById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}events/${i}`, { headers: e });
  }
  leadById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}leads/${i}`, { headers: e });
  }
  userById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/users/all`, {
      headers: e,
    });
  }
  oppById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}opportunities/${i}`, { headers: e });
  }
  taskById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}tasks/${i}`, { headers: e });
  }
  getMultipleUser() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "users/all", { headers: i });
  }
  getMultipleTeams() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: i });
  }
  createNewUser(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "users/create", i, { headers: e });
  }
  createNewTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "teams/new", i, { headers: e });
  }
  updateUser(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${i.user_id}/update`, i, {
      headers: e,
    });
  }
  updateTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${i.team_id}/update`, i, {
      headers: e,
    });
  }
  getSingleUser(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/users/${i}`, { headers: e });
  }
  getAllTeams() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: i });
  }
  deleteUser(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${i}/delete`, {}, { headers: e });
  }
  deleteTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${i}/delete`, {}, { headers: e });
  }
  getAllCustomer() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "accounts/all", { headers: i });
  }
  getSingleAccount(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/accounts/${i}`, { headers: e });
  }
  createCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.post(`${this.apiUrl}accounts/create`, i, { headers: e });
  }
  updateCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}accounts/${i.account_id}/update`, i, {
      headers: e,
    });
  }
  deleteCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}accounts/${i}/delete`,
      {},
      { headers: e }
    );
  }
  getProfileData() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "show-profile", { headers: i });
  }
  getAllRole() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "role/all", { headers: i });
  }
  createRole(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "roles/new", i, { headers: e });
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Bt), Q(Ed));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var xr = class n {
  dealer_id;
  dealer_name;
  dealer_code;
  dealer_email;
  corporate_id;
  constructor() {
    (this.dealer_id = ""),
      (this.dealer_name = ""),
      (this.dealer_code = null),
      (this.corporate_id = ""),
      (this.dealer_email = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var QT = ["*"];
var XT = ["dialog"];
var Kv = { animation: !0, transitionTimerDelayMs: 5 },
  ZT = (() => {
    class n {
      constructor() {
        this.animation = Kv.animation;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function JT(n) {
  let { transitionDelay: i, transitionDuration: e } =
      window.getComputedStyle(n),
    t = parseFloat(i),
    r = parseFloat(e);
  return (t + r) * 1e3;
}
function Qv(n) {
  return typeof n == "string";
}
function xm(n) {
  return n != null;
}
function eE(n) {
  return n && n.then;
}
function Xv(n) {
  return (n || document.body).getBoundingClientRect();
}
function tE(n) {
  return (i) =>
    new Hn((e) => {
      let t = (a) => n.run(() => e.next(a)),
        r = (a) => n.run(() => e.error(a)),
        o = () => n.run(() => e.complete());
      return i.subscribe({ next: t, error: r, complete: o });
    });
}
var iE = () => {},
  { transitionTimerDelayMs: nE } = Kv,
  Od = new Map(),
  Do = (n, i, e, t) => {
    let r = t.context || {},
      o = Od.get(i);
    if (o)
      switch (t.runningTransition) {
        case "continue":
          return jn;
        case "stop":
          n.run(() => o.transition$.complete()),
            (r = Object.assign(o.context, r)),
            Od.delete(i);
      }
    let a = e(i, t.animation, r) || iE;
    if (
      !t.animation ||
      window.getComputedStyle(i).transitionProperty === "none"
    )
      return n.run(() => a()), fe(void 0).pipe(tE(n));
    let l = new Oe(),
      u = new Oe(),
      f = l.pipe(gg(!0));
    Od.set(i, {
      transition$: l,
      complete: () => {
        u.next(), u.complete();
      },
      context: r,
    });
    let v = JT(i);
    return (
      n.runOutsideAngular(() => {
        let D = yn(i, "transitionend").pipe(
            Ut(f),
            Ct(({ target: M }) => M === i)
          ),
          T = pg(v + nE).pipe(Ut(f));
        mg(T, D, u)
          .pipe(Ut(f))
          .subscribe(() => {
            Od.delete(i),
              n.run(() => {
                a(), l.next(), l.complete();
              });
          });
      }),
      l.asObservable()
    );
  };
var wL = (() => {
  let n = () =>
      /iPad|iPhone|iPod/.test(navigator.userAgent) ||
      (/Macintosh/.test(navigator.userAgent) &&
        navigator.maxTouchPoints &&
        navigator.maxTouchPoints > 2),
    i = () => /Android/.test(navigator.userAgent);
  return typeof navigator < "u" ? !!navigator.userAgent && (n() || i()) : !1;
})();
var rE = [
  "a[href]",
  "button:not([disabled])",
  'input:not([disabled]):not([type="hidden"])',
  "select:not([disabled])",
  "textarea:not([disabled])",
  "[contenteditable]",
  '[tabindex]:not([tabindex="-1"])',
].join(", ");
function Zv(n) {
  let i = Array.from(n.querySelectorAll(rE)).filter((e) => e.tabIndex !== -1);
  return [i[0], i[i.length - 1]];
}
var oE = (n, i, e, t = !1) => {
  n.runOutsideAngular(() => {
    let r = yn(i, "focusin").pipe(
      Ut(e),
      qe((o) => o.target)
    );
    yn(i, "keydown")
      .pipe(
        Ut(e),
        Ct((o) => o.key === "Tab"),
        Qu(r)
      )
      .subscribe(([o, a]) => {
        let [l, u] = Zv(i);
        (a === l || a === i) && o.shiftKey && (u.focus(), o.preventDefault()),
          a === u && !o.shiftKey && (l.focus(), o.preventDefault());
      }),
      t &&
        yn(i, "click")
          .pipe(
            Ut(e),
            Qu(r),
            qe((o) => o[1])
          )
          .subscribe((o) => o.focus());
  });
};
var DL = new Date(1882, 10, 12),
  SL = new Date(2174, 10, 25);
var ML = 1e3 * 60 * 60 * 24;
var Dm = 1080,
  aE = 24 * Dm,
  sE = 12 * Dm + 793,
  TL = 29 * aE + sE,
  EL = 11 * Dm + 204;
var lE = (() => {
    class n {
      constructor() {
        (this._ngbConfig = G(ZT)),
          (this.backdrop = !0),
          (this.fullscreen = !1),
          (this.keyboard = !0);
      }
      get animation() {
        return this._animation ?? this._ngbConfig.animation;
      }
      set animation(e) {
        this._animation = e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  xa = class {
    constructor(i, e, t) {
      (this.nodes = i), (this.viewRef = e), (this.componentRef = t);
    }
  };
var cE = (() => {
    class n {
      constructor() {
        this._document = G(ke);
      }
      hide() {
        let e = Math.abs(
            window.innerWidth - this._document.documentElement.clientWidth
          ),
          t = this._document.body,
          r = t.style,
          { overflow: o, paddingRight: a } = r;
        if (e > 0) {
          let l = parseFloat(window.getComputedStyle(t).paddingRight);
          r.paddingRight = `${l + e}px`;
        }
        return (
          (r.overflow = "hidden"),
          () => {
            e > 0 && (r.paddingRight = a), (r.overflow = o);
          }
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  dE = (() => {
    class n {
      constructor() {
        (this._nativeElement = G(Fe).nativeElement),
          (this._zone = G(Te)),
          (this._injector = G(Dt));
      }
      ngOnInit() {
        xn(
          () =>
            Do(
              this._zone,
              this._nativeElement,
              (e, t) => {
                t && Xv(e), e.classList.add("show");
              },
              { animation: this.animation, runningTransition: "continue" }
            ),
          { injector: this._injector, phase: ih.MixedReadWrite }
        );
      }
      hide() {
        return Do(
          this._zone,
          this._nativeElement,
          ({ classList: e }) => e.remove("show"),
          { animation: this.animation, runningTransition: "stop" }
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["ngb-modal-backdrop"]],
          hostAttrs: [2, "z-index", "1055"],
          hostVars: 6,
          hostBindings: function (t, r) {
            t & 2 &&
              (Be(
                "modal-backdrop" +
                  (r.backdropClass ? " " + r.backdropClass : "")
              ),
              ne("show", !r.animation)("fade", r.animation));
          },
          inputs: { animation: "animation", backdropClass: "backdropClass" },
          standalone: !0,
          features: [ce],
          decls: 0,
          vars: 0,
          template: function (t, r) {},
          encapsulation: 2,
        });
      }
    }
    return n;
  })(),
  kd = class {
    update(i) {}
    close(i) {}
    dismiss(i) {}
  },
  uE = [
    "animation",
    "ariaLabelledBy",
    "ariaDescribedBy",
    "backdrop",
    "centered",
    "fullscreen",
    "keyboard",
    "scrollable",
    "size",
    "windowClass",
    "modalDialogClass",
  ],
  hE = ["animation", "backdropClass"],
  Cm = class {
    _applyWindowOptions(i, e) {
      uE.forEach((t) => {
        xm(e[t]) && (i[t] = e[t]);
      });
    }
    _applyBackdropOptions(i, e) {
      hE.forEach((t) => {
        xm(e[t]) && (i[t] = e[t]);
      });
    }
    update(i) {
      this._applyWindowOptions(this._windowCmptRef.instance, i),
        this._backdropCmptRef &&
          this._backdropCmptRef.instance &&
          this._applyBackdropOptions(this._backdropCmptRef.instance, i);
    }
    get componentInstance() {
      if (this._contentRef && this._contentRef.componentRef)
        return this._contentRef.componentRef.instance;
    }
    get closed() {
      return this._closed.asObservable().pipe(Ut(this._hidden));
    }
    get dismissed() {
      return this._dismissed.asObservable().pipe(Ut(this._hidden));
    }
    get hidden() {
      return this._hidden.asObservable();
    }
    get shown() {
      return this._windowCmptRef.instance.shown.asObservable();
    }
    constructor(i, e, t, r) {
      (this._windowCmptRef = i),
        (this._contentRef = e),
        (this._backdropCmptRef = t),
        (this._beforeDismiss = r),
        (this._closed = new Oe()),
        (this._dismissed = new Oe()),
        (this._hidden = new Oe()),
        i.instance.dismissEvent.subscribe((o) => {
          this.dismiss(o);
        }),
        (this.result = new Promise((o, a) => {
          (this._resolve = o), (this._reject = a);
        })),
        this.result.then(null, () => {});
    }
    close(i) {
      this._windowCmptRef &&
        (this._closed.next(i), this._resolve(i), this._removeModalElements());
    }
    _dismiss(i) {
      this._dismissed.next(i), this._reject(i), this._removeModalElements();
    }
    dismiss(i) {
      if (this._windowCmptRef)
        if (!this._beforeDismiss) this._dismiss(i);
        else {
          let e = this._beforeDismiss();
          eE(e)
            ? e.then(
                (t) => {
                  t !== !1 && this._dismiss(i);
                },
                () => {}
              )
            : e !== !1 && this._dismiss(i);
        }
    }
    _removeModalElements() {
      let i = this._windowCmptRef.instance.hide(),
        e = this._backdropCmptRef
          ? this._backdropCmptRef.instance.hide()
          : fe(void 0);
      i.subscribe(() => {
        let { nativeElement: t } = this._windowCmptRef.location;
        t.parentNode.removeChild(t),
          this._windowCmptRef.destroy(),
          this._contentRef?.viewRef?.destroy(),
          (this._windowCmptRef = null),
          (this._contentRef = null);
      }),
        e.subscribe(() => {
          if (this._backdropCmptRef) {
            let { nativeElement: t } = this._backdropCmptRef.location;
            t.parentNode.removeChild(t),
              this._backdropCmptRef.destroy(),
              (this._backdropCmptRef = null);
          }
        }),
        jl(i, e).subscribe(() => {
          this._hidden.next(), this._hidden.complete();
        });
    }
  },
  wm = (function (n) {
    return (
      (n[(n.BACKDROP_CLICK = 0)] = "BACKDROP_CLICK"),
      (n[(n.ESC = 1)] = "ESC"),
      n
    );
  })(wm || {}),
  pE = (() => {
    class n {
      constructor() {
        (this._document = G(ke)),
          (this._elRef = G(Fe)),
          (this._zone = G(Te)),
          (this._injector = G(Dt)),
          (this._closed$ = new Oe()),
          (this._elWithFocus = null),
          (this.backdrop = !0),
          (this.keyboard = !0),
          (this.dismissEvent = new xe()),
          (this.shown = new Oe()),
          (this.hidden = new Oe());
      }
      get fullscreenClass() {
        return this.fullscreen === !0
          ? " modal-fullscreen"
          : Qv(this.fullscreen)
          ? ` modal-fullscreen-${this.fullscreen}-down`
          : "";
      }
      dismiss(e) {
        this.dismissEvent.emit(e);
      }
      ngOnInit() {
        (this._elWithFocus = this._document.activeElement),
          xn(() => this._show(), {
            injector: this._injector,
            phase: ih.MixedReadWrite,
          });
      }
      ngOnDestroy() {
        this._disableEventHandling();
      }
      hide() {
        let { nativeElement: e } = this._elRef,
          t = { animation: this.animation, runningTransition: "stop" },
          r = Do(this._zone, e, () => e.classList.remove("show"), t),
          o = Do(this._zone, this._dialogEl.nativeElement, () => {}, t),
          a = jl(r, o);
        return (
          a.subscribe(() => {
            this.hidden.next(), this.hidden.complete();
          }),
          this._disableEventHandling(),
          this._restoreFocus(),
          a
        );
      }
      _show() {
        let e = { animation: this.animation, runningTransition: "continue" },
          t = Do(
            this._zone,
            this._elRef.nativeElement,
            (o, a) => {
              a && Xv(o), o.classList.add("show");
            },
            e
          ),
          r = Do(this._zone, this._dialogEl.nativeElement, () => {}, e);
        jl(t, r).subscribe(() => {
          this.shown.next(), this.shown.complete();
        }),
          this._enableEventHandling(),
          this._setFocus();
      }
      _enableEventHandling() {
        let { nativeElement: e } = this._elRef;
        this._zone.runOutsideAngular(() => {
          yn(e, "keydown")
            .pipe(
              Ut(this._closed$),
              Ct((r) => r.key === "Escape")
            )
            .subscribe((r) => {
              this.keyboard
                ? requestAnimationFrame(() => {
                    r.defaultPrevented ||
                      this._zone.run(() => this.dismiss(wm.ESC));
                  })
                : this.backdrop === "static" && this._bumpBackdrop();
            });
          let t = !1;
          yn(this._dialogEl.nativeElement, "mousedown")
            .pipe(
              Ut(this._closed$),
              Kt(() => (t = !1)),
              Ci(() => yn(e, "mouseup").pipe(Ut(this._closed$), $i(1))),
              Ct(({ target: r }) => e === r)
            )
            .subscribe(() => {
              t = !0;
            }),
            yn(e, "click")
              .pipe(Ut(this._closed$))
              .subscribe(({ target: r }) => {
                e === r &&
                  (this.backdrop === "static"
                    ? this._bumpBackdrop()
                    : this.backdrop === !0 &&
                      !t &&
                      this._zone.run(() => this.dismiss(wm.BACKDROP_CLICK))),
                  (t = !1);
              });
        });
      }
      _disableEventHandling() {
        this._closed$.next();
      }
      _setFocus() {
        let { nativeElement: e } = this._elRef;
        if (!e.contains(document.activeElement)) {
          let t = e.querySelector("[ngbAutofocus]"),
            r = Zv(e)[0];
          (t || r || e).focus();
        }
      }
      _restoreFocus() {
        let e = this._document.body,
          t = this._elWithFocus,
          r;
        t && t.focus && e.contains(t) ? (r = t) : (r = e),
          this._zone.runOutsideAngular(() => {
            setTimeout(() => r.focus()), (this._elWithFocus = null);
          });
      }
      _bumpBackdrop() {
        this.backdrop === "static" &&
          Do(
            this._zone,
            this._elRef.nativeElement,
            ({ classList: e }) => (
              e.add("modal-static"), () => e.remove("modal-static")
            ),
            { animation: this.animation, runningTransition: "continue" }
          );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["ngb-modal-window"]],
          viewQuery: function (t, r) {
            if ((t & 1 && yt(XT, 7), t & 2)) {
              let o;
              ot((o = at())) && (r._dialogEl = o.first);
            }
          },
          hostAttrs: ["role", "dialog", "tabindex", "-1"],
          hostVars: 7,
          hostBindings: function (t, r) {
            t & 2 &&
              (le("aria-modal", !0)("aria-labelledby", r.ariaLabelledBy)(
                "aria-describedby",
                r.ariaDescribedBy
              ),
              Be("modal d-block" + (r.windowClass ? " " + r.windowClass : "")),
              ne("fade", r.animation));
          },
          inputs: {
            animation: "animation",
            ariaLabelledBy: "ariaLabelledBy",
            ariaDescribedBy: "ariaDescribedBy",
            backdrop: "backdrop",
            centered: "centered",
            fullscreen: "fullscreen",
            keyboard: "keyboard",
            scrollable: "scrollable",
            size: "size",
            windowClass: "windowClass",
            modalDialogClass: "modalDialogClass",
          },
          outputs: { dismissEvent: "dismiss" },
          standalone: !0,
          features: [ce],
          ngContentSelectors: QT,
          decls: 4,
          vars: 2,
          consts: [
            ["dialog", ""],
            ["role", "document"],
            [1, "modal-content"],
          ],
          template: function (t, r) {
            t & 1 && (Xt(), c(0, "div", 1, 0)(2, "div", 2), Lt(3), d()()),
              t & 2 &&
                Be(
                  "modal-dialog" +
                    (r.size ? " modal-" + r.size : "") +
                    (r.centered ? " modal-dialog-centered" : "") +
                    r.fullscreenClass +
                    (r.scrollable ? " modal-dialog-scrollable" : "") +
                    (r.modalDialogClass ? " " + r.modalDialogClass : "")
                );
          },
          styles: [
            `ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}
`,
          ],
          encapsulation: 2,
        });
      }
    }
    return n;
  })(),
  mE = (() => {
    class n {
      constructor() {
        (this._applicationRef = G(Li)),
          (this._injector = G(Dt)),
          (this._environmentInjector = G(an)),
          (this._document = G(ke)),
          (this._scrollBar = G(cE)),
          (this._activeWindowCmptHasChanged = new Oe()),
          (this._ariaHiddenValues = new Map()),
          (this._scrollBarRestoreFn = null),
          (this._modalRefs = []),
          (this._windowCmpts = []),
          (this._activeInstances = new xe());
        let e = G(Te);
        this._activeWindowCmptHasChanged.subscribe(() => {
          if (this._windowCmpts.length) {
            let t = this._windowCmpts[this._windowCmpts.length - 1];
            oE(e, t.location.nativeElement, this._activeWindowCmptHasChanged),
              this._revertAriaHidden(),
              this._setAriaHidden(t.location.nativeElement);
          }
        });
      }
      _restoreScrollBar() {
        let e = this._scrollBarRestoreFn;
        e && ((this._scrollBarRestoreFn = null), e());
      }
      _hideScrollBar() {
        this._scrollBarRestoreFn ||
          (this._scrollBarRestoreFn = this._scrollBar.hide());
      }
      open(e, t, r) {
        let o =
          r.container instanceof HTMLElement
            ? r.container
            : xm(r.container)
            ? this._document.querySelector(r.container)
            : this._document.body;
        if (!o)
          throw new Error(
            `The specified modal container "${
              r.container || "body"
            }" was not found in the DOM.`
          );
        this._hideScrollBar();
        let a = new kd();
        e = r.injector || e;
        let l = e.get(an, null) || this._environmentInjector,
          u = this._getContentRef(e, l, t, a, r),
          f = r.backdrop !== !1 ? this._attachBackdrop(o) : void 0,
          v = this._attachWindowComponent(o, u.nodes),
          D = new Cm(v, u, f, r.beforeDismiss);
        return (
          this._registerModalRef(D),
          this._registerWindowCmpt(v),
          D.hidden.pipe($i(1)).subscribe(() =>
            Promise.resolve(!0).then(() => {
              this._modalRefs.length ||
                (this._document.body.classList.remove("modal-open"),
                this._restoreScrollBar(),
                this._revertAriaHidden());
            })
          ),
          (a.close = (T) => {
            D.close(T);
          }),
          (a.dismiss = (T) => {
            D.dismiss(T);
          }),
          (a.update = (T) => {
            D.update(T);
          }),
          D.update(r),
          this._modalRefs.length === 1 &&
            this._document.body.classList.add("modal-open"),
          f && f.instance && f.changeDetectorRef.detectChanges(),
          v.changeDetectorRef.detectChanges(),
          D
        );
      }
      get activeInstances() {
        return this._activeInstances;
      }
      dismissAll(e) {
        this._modalRefs.forEach((t) => t.dismiss(e));
      }
      hasOpenModals() {
        return this._modalRefs.length > 0;
      }
      _attachBackdrop(e) {
        let t = Xl(dE, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
        });
        return (
          this._applicationRef.attachView(t.hostView),
          e.appendChild(t.location.nativeElement),
          t
        );
      }
      _attachWindowComponent(e, t) {
        let r = Xl(pE, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
          projectableNodes: t,
        });
        return (
          this._applicationRef.attachView(r.hostView),
          e.appendChild(r.location.nativeElement),
          r
        );
      }
      _getContentRef(e, t, r, o, a) {
        return r
          ? r instanceof Gn
            ? this._createFromTemplateRef(r, o)
            : Qv(r)
            ? this._createFromString(r)
            : this._createFromComponent(e, t, r, o, a)
          : new xa([]);
      }
      _createFromTemplateRef(e, t) {
        let r = {
            $implicit: t,
            close(a) {
              t.close(a);
            },
            dismiss(a) {
              t.dismiss(a);
            },
          },
          o = e.createEmbeddedView(r);
        return this._applicationRef.attachView(o), new xa([o.rootNodes], o);
      }
      _createFromString(e) {
        let t = this._document.createTextNode(`${e}`);
        return new xa([[t]]);
      }
      _createFromComponent(e, t, r, o, a) {
        let l = Dt.create({
            providers: [{ provide: kd, useValue: o }],
            parent: e,
          }),
          u = Xl(r, { environmentInjector: t, elementInjector: l }),
          f = u.location.nativeElement;
        return (
          a.scrollable && f.classList.add("component-host-scrollable"),
          this._applicationRef.attachView(u.hostView),
          new xa([[f]], u.hostView, u)
        );
      }
      _setAriaHidden(e) {
        let t = e.parentElement;
        t &&
          e !== this._document.body &&
          (Array.from(t.children).forEach((r) => {
            r !== e &&
              r.nodeName !== "SCRIPT" &&
              (this._ariaHiddenValues.set(r, r.getAttribute("aria-hidden")),
              r.setAttribute("aria-hidden", "true"));
          }),
          this._setAriaHidden(t));
      }
      _revertAriaHidden() {
        this._ariaHiddenValues.forEach((e, t) => {
          e
            ? t.setAttribute("aria-hidden", e)
            : t.removeAttribute("aria-hidden");
        }),
          this._ariaHiddenValues.clear();
      }
      _registerModalRef(e) {
        let t = () => {
          let r = this._modalRefs.indexOf(e);
          r > -1 &&
            (this._modalRefs.splice(r, 1),
            this._activeInstances.emit(this._modalRefs));
        };
        this._modalRefs.push(e),
          this._activeInstances.emit(this._modalRefs),
          e.result.then(t, t);
      }
      _registerWindowCmpt(e) {
        this._windowCmpts.push(e),
          this._activeWindowCmptHasChanged.next(),
          e.onDestroy(() => {
            let t = this._windowCmpts.indexOf(e);
            t > -1 &&
              (this._windowCmpts.splice(t, 1),
              this._activeWindowCmptHasChanged.next());
          });
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  sl = (() => {
    class n {
      constructor() {
        (this._injector = G(Dt)),
          (this._modalStack = G(mE)),
          (this._config = G(lE));
      }
      open(e, t = {}) {
        let r = W(
          Ce(W({}, this._config), { animation: this._config.animation }),
          t
        );
        return this._modalStack.open(this._injector, e, r);
      }
      get activeInstances() {
        return this._modalStack.activeInstances;
      }
      dismissAll(e) {
        this._modalStack.dismissAll(e);
      }
      hasOpenModals() {
        return this._modalStack.hasOpenModals();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  er = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ providers: [sl] });
      }
    }
    return n;
  })();
var OL = new we("live announcer delay", {
  providedIn: "root",
  factory: () => 100,
});
var fE = (n) => ["/Admin/singleUser", n],
  Sm = (n) => ({ "is-invalid": n });
function gE(n, i) {
  n & 1 && (c(0, "tr")(1, "td", 48)(2, "p"), h(3, "No Dealers Found"), d()()());
}
function _E(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "tr")(1, "td", 34),
      h(2),
      d(),
      c(3, "td", 34),
      h(4),
      d(),
      c(5, "td", 34),
      h(6),
      d(),
      c(7, "td", 34),
      h(8),
      d(),
      c(9, "td")(10, "div", 49)(11, "a", 50),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.onEdit(r.dealer_id));
      }),
      z(12, "i", 51),
      d(),
      c(13, "a", 52),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.openDeleteModal(r));
      }),
      z(14, "i", 53),
      d(),
      c(15, "a", 54)(16, "span", 55),
      z(17, "i", 56),
      d()()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x();
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.dealer_name),
      m(2),
      B(e.dealer_code),
      m(2),
      B(e.dealer_email),
      m(7),
      y("routerLink", de(5, fE, e.dealer_id));
  }
}
function bE(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "li", 57)(1, "a", 43),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.goToPage(r));
      }),
      h(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x();
    ne("active", e === t.currentPage), m(2), B(e);
  }
}
function vE(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 58)(1, "div", 59)(2, "div", 60)(3, "div", 61)(4, "h5", 62),
      h(5, "Delete Dealer"),
      d()(),
      c(6, "div", 63),
      h(7, "Are you sure you want to delete this dealer?"),
      d(),
      c(8, "div", 64)(9, "button", 65),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeDeleteModal());
      }),
      h(10, "Cancel"),
      d(),
      c(11, "button", 66),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.deleteDealerId());
      }),
      h(12, "Delete"),
      d()()()()();
  }
}
function yE(n, i) {
  n & 1 && (c(0, "span", 88), h(1, "*"), d());
}
function xE(n, i) {
  n & 1 &&
    (c(0, "div", 89)(1, "span"), h(2, "Dealer name is required."), d()());
}
function CE(n, i) {
  n & 1 && (c(0, "span", 89), h(1, "*"), d());
}
function wE(n, i) {
  n & 1 && (c(0, "span"), h(1, "Dealer code is required."), d());
}
function DE(n, i) {
  if ((n & 1 && (c(0, "div", 89), R(1, wE, 2, 0, "span", 35), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("dealer_code")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function SE(n, i) {
  n & 1 && (c(0, "span", 88), h(1, "*"), d());
}
function ME(n, i) {
  n & 1 &&
    (c(0, "div", 89)(1, "span"), h(2, "Dealer email is required."), d()());
}
function TE(n, i) {
  if (n & 1) {
    let e = re();
    Ue(0),
      c(1, "button", 90),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.onUpdate());
      }),
      h(2, " Edit "),
      d(),
      ze();
  }
  if (n & 2) {
    let e = x(2);
    m(), y("disabled", !e.isFormChanged());
  }
}
function EE(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 65),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.onSave());
      }),
      h(1, " save "),
      d();
  }
  if (n & 2) {
    let e = x(2);
    le("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function OE(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 67)(1, "div", 68)(2, "div", 69)(3, "div", 60)(4, "div", 61)(
      5,
      "h5",
      70
    ),
      h(6),
      d(),
      c(7, "button", 71),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeModal());
      }),
      c(8, "span", 72),
      h(9, "\xD7"),
      d()()(),
      c(10, "div", 73)(11, "div", 74)(12, "div", 75)(13, "label", 76),
      h(14, " Dealer Name "),
      R(15, yE, 2, 0, "span", 77),
      d(),
      z(16, "input", 78),
      R(17, xE, 3, 0, "div", 79),
      d(),
      c(18, "div", 80)(19, "label", 81),
      h(20, " Dealer Code "),
      R(21, CE, 2, 0, "span", 79),
      d(),
      z(22, "input", 82),
      R(23, DE, 2, 1, "div", 79),
      d()(),
      c(24, "div", 74)(25, "div", 75)(26, "label", 83),
      h(27, " Dealer Email "),
      R(28, SE, 2, 0, "span", 77),
      d(),
      z(29, "input", 84),
      R(30, ME, 3, 0, "div", 79),
      d(),
      z(31, "div", 85),
      d()(),
      c(32, "div", 64),
      R(33, TE, 3, 1, "ng-container", 86),
      c(34, "button", 87),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeModal());
      }),
      h(35, " Close "),
      d(),
      R(36, EE, 2, 1, "ng-template", null, 0, Pt),
      d()()()()();
  }
  if (n & 2) {
    let e,
      t,
      r,
      o,
      a,
      l,
      u = _t(37),
      f = x();
    m(6),
      ee(" ", f.dealerObj.dealer_id ? "Edit Vehicle" : "Add New Dealer", " "),
      m(4),
      y("formGroup", f.useForm),
      m(5),
      y("ngIf", !f.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          13,
          Sm,
          !f.isEditMode &&
            ((e = f.useForm.get("dealer_name")) == null ? null : e.touched) &&
            ((e = f.useForm.get("dealer_name")) == null ? null : e.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !f.isEditMode &&
          ((t = f.useForm.get("dealer_name")) == null ? null : t.touched) &&
          ((t = f.useForm.get("dealer_name")) == null ? null : t.invalid)
      ),
      m(4),
      y("ngIf", !f.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          15,
          Sm,
          !f.isEditMode &&
            ((r = f.useForm.get("dealer_code")) == null ? null : r.touched) &&
            ((r = f.useForm.get("dealer_code")) == null ? null : r.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !f.isEditMode &&
          ((o = f.useForm.get("dealer_code")) == null ? null : o.touched) &&
          ((o = f.useForm.get("dealer_code")) == null ? null : o.invalid)
      ),
      m(5),
      y("ngIf", !f.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          17,
          Sm,
          !f.isEditMode &&
            ((a = f.useForm.get("dealer_email")) == null ? null : a.touched) &&
            ((a = f.useForm.get("dealer_email")) == null ? null : a.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !f.isEditMode &&
          ((l = f.useForm.get("dealer_email")) == null ? null : l.touched) &&
          ((l = f.useForm.get("dealer_email")) == null ? null : l.invalid)
      ),
      m(3),
      y("ngIf", f.dealerObj == null ? null : f.dealerObj.dealer_id)(
        "ngIfElse",
        u
      );
  }
}
var Pd = class n {
  constructor(i) {
    this.modalService = i;
    this.useForm = new Rt({
      dealer_name: new nt(null, [Re.required, Re.minLength(2)]),
      dealer_code: new nt(null, [Re.required, Re.minLength(5)]),
      dealer_email: new nt(null, [Re.required, Re.email]),
    });
  }
  http = G(Bt);
  dealerList = pe([]);
  totalDealer = pe(0);
  masterSrv = G(Qe);
  dealerObj = new xr();
  selectedRowCount = 3;
  isLoading = !1;
  isModalVisible = !1;
  isModalOpen = !1;
  isEditMode = !1;
  useForm;
  previousValue = "";
  isDeleteModalOpen = !1;
  itemsPerPage = 10;
  originalDealerName = "";
  originalDealerC = "";
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  currentPage = 1;
  originalFormValue;
  searchTerm = "";
  filteredDealers = [];
  paginatedDealers = [];
  totalPages = 0;
  pages = [];
  toastr = G(fi);
  openModal(i) {
    (this.isModalOpen = !0),
      console.log("open modal called"),
      this.useForm.reset({
        dealer_name: null,
        dealer_code: null,
        dealer_email: null,
      }),
      (this.isModalVisible = !0),
      i
        ? ((this.previousValue = i.dealer_name),
          this.useForm.patchValue({
            dealer_name: i.dealer_name,
            dealer_code: i.dealer_code,
            dealer_email: i.dealer_email,
          }),
          (this.dealerObj = W({}, i)))
        : (this.dealerObj = new xr());
  }
  isDealerNameChanged() {
    return this.useForm.get("dealer_name")?.value !== this.originalDealerName;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllDealer(),
      this.getAllDealer();
  }
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe(
      (i) => {
        console.log("Dealer list updated:", i.data.dealer.rows),
          this.dealerList.set(i.data.dealer.rows),
          (this.filteredDealers = i.data.dealer.rows),
          this.totalDealer.set(i.data.dealer.count),
          this.initializeDealerPagination();
      },
      (i) => {
        this.toastr.error("Error fetching dealers", "Error"),
          console.error("Error fetching dealers:", i),
          this.dealerList.set([]),
          (this.filteredDealers = []),
          this.totalDealer.set(0),
          this.initializeDealerPagination();
      }
    );
  }
  initializeDealerPagination() {
    let i = this.filteredDealers.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateDealers();
  }
  applyFilterAndPagination() {
    let e = this.dealerList().filter(
      (o) =>
        o.dealer_name?.toLowerCase().includes(this.searchTerm.toLowerCase()) ||
        o.dealer_code
          ?.toString()
          .toLowerCase()
          .includes(this.searchTerm.toLowerCase())
    );
    (this.filteredDealers = e),
      (this.totalPages = Math.ceil(e.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (o, a) => a + 1));
    let t = (this.currentPage - 1) * this.itemsPerPage,
      r = t + this.itemsPerPage;
    this.paginatedDealers = e.slice(t, r);
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateDealers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredDealers = this.dealerList();
    else {
      let i = this.searchTerm.toLowerCase();
      this.filteredDealers = this.dealerList().filter((e) =>
        e.dealer_name.toLowerCase().includes(i)
      );
    }
    (this.currentPage = 1), this.paginateDealers();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateDealers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateDealers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateDealers());
  }
  paginateDealers() {
    let e = this.dealerList().filter(
        (o) =>
          o.dealer_name
            ?.toLowerCase()
            .includes(this.searchTerm.toLowerCase()) ||
          o.dealer_code
            ?.toString()
            .toLowerCase()
            .includes(this.searchTerm.toLowerCase())
      ),
      t = (this.currentPage - 1) * this.itemsPerPage,
      r = t + this.itemsPerPage;
    this.paginatedDealers = e.slice(t, r);
  }
  openDeleteModal(i) {
    console.log("\u{1F5D1}\uFE0F Delete button clicked", i),
      (this.selectedDealerForDeletion = i),
      (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("Form Values on Save:", this.useForm.value),
      this.isEditMode ? this.onUpdate() : this.createNewDealer(),
      this.closeModal();
  }
  createNewDealer() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let i = this.useForm.value;
    console.log("Final Payload sent to API:", i),
      this.masterSrv.createDealer(i).subscribe(
        (e) => {
          this.toastr.success("Dealer created successfully!", "Success"),
            this.getAllDealer();
        },
        (e) => {
          console.error("Error creating dealer:", e),
            this.toastr.error("Error creating dealer", "Error");
        }
      );
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      console.log("Dropdown changed to:", this.itemsPerPage),
      this.applyFilterAndPagination();
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.dealerObj = W(W({}, this.dealerObj), this.useForm.value)),
        console.log(
          "\u{1F680} Updated Payload before API call:",
          this.dealerObj
        ),
        this.masterSrv.updateDealer(this.dealerObj).subscribe(
          (i) => {
            console.log("\u2705 API Response:", i),
              i.status === 200
                ? (this.toastr.success(
                    i.message || "Dealer updated successfully",
                    "Success"
                  ),
                  (this.isModalOpen = !1),
                  (this.originalDealerName = ""),
                  (this.originalDealerC = ""),
                  setTimeout(() => {
                    this.getAllDealer();
                  }, 500))
                : this.toastr.error(i.message || "Update failed", "Error");
          },
          (i) => {
            console.error("\u274C API Error:", i);
            let e = i?.error?.message || "Failed to update dealer";
            this.toastr.error(e, "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(i) {
    console.log("Edit button clicked. Dealer ID:", i),
      (this.isEditMode = !0),
      this.masterSrv.getDealerById(i).subscribe(
        (e) => {
          let t = e?.data?.dealer;
          t
            ? ((this.dealerObj = Ce(W({}, t), {
                dealer_code: Number(t.dealer_code),
              })),
              this.useForm.patchValue({
                dealer_name: t.dealer_name,
                dealer_code: Number(t.dealer_code),
              }),
              (this.originalFormValue = W({}, this.useForm.value)),
              (this.isModalOpen = !0))
            : this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isFormChanged() {
    return (
      this.useForm.get("dealer_name")?.value !== this.originalDealerName ||
      this.useForm.get("dealer_code")?.value !== this.originalDealerC
    );
  }
  selectedDealerForDeletion = null;
  selectDealerForDeletion(i) {
    this.selectedDealerForDeletion = i;
  }
  deleteDealerId() {
    this.selectedDealerForDeletion && this.selectedDealerForDeletion.dealer_id
      ? this.masterSrv
          .deleteDealer(this.selectedDealerForDeletion.dealer_id)
          .subscribe(
            (i) => {
              this.getAllDealer(),
                this.closeModal(),
                this.toastr.success("Dealer Deleted", "Successful");
            },
            (i) => {
              alert(i.message || "Failed to delete vehicle");
            }
          )
      : alert("No vehicle selected for deletion");
  }
  static ɵfac = function (e) {
    return new (e || n)(H(sl));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-dealer"]],
    standalone: !0,
    features: [ce],
    decls: 74,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", "mt-10"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search users...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "5", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        "border",
        "2px solid #222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-success",
        "shadow",
        "btn-xs",
        "sharp",
        2,
        "margin-left",
        "5px",
        3,
        "routerLink",
      ],
      [1, "", 2, "margin-left", "0 !important"],
      [1, "fa", "fa-eye"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
      ],
      [1, "modal-dialog", "modal-lg"],
      [
        1,
        "modal-title",
        2,
        "align-items",
        "center",
        "margin-inline",
        "auto",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      [
        "for",
        "dealer_name",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      ["style", "color: red;", 4, "ngIf"],
      [
        "id",
        "dealer_name",
        "type",
        "text",
        "placeholder",
        "Dealer Name",
        "formControlName",
        "dealer_name",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "form-group", "col-md-6"],
      [
        "for",
        "dealer_code",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "YOM",
        "type",
        "text",
        "formControlName",
        "dealer_code",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [
        "for",
        "dealer_email",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "dealer_email",
        "type",
        "text",
        "placeholder",
        "Dealer email",
        "formControlName",
        "dealer_email",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [1, "row", 2, "margin-left", "-3px !important"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [2, "color", "red"],
      [1, "text-danger"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        2,
        "border-color",
        "#222fb9",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Utils"),
        d()(),
        c(7, "li", 7)(8, "a", 8),
        h(9, "Users "),
        d()()()(),
        c(10, "div", 9)(11, "div", 10)(12, "a", 11),
        N("click", function () {
          return t.openModal();
        }),
        z(13, "i", 12),
        h(14, "Add Dealer "),
        d()(),
        c(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Dealer"),
        d(),
        c(19, "h3", 16),
        h(20),
        d()()()(),
        c(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        z(26, "label", 22),
        c(27, "select", 23),
        N("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        c(28, "option", 24),
        h(29, "10"),
        d(),
        c(30, "option", 25),
        h(31, "25"),
        d(),
        c(32, "option", 26),
        h(33, "50"),
        d(),
        c(34, "option", 27),
        h(35, "100"),
        d()(),
        c(36, "label", 28),
        h(37, "records per page"),
        d()(),
        c(38, "div", 29)(39, "div", 30)(40, "input", 31),
        ht("ngModelChange", function (o) {
          return ut(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        N("input", function () {
          return t.onSearchChange();
        }),
        d()()()(),
        c(41, "div", 32)(42, "table", 33)(43, "thead")(44, "tr")(45, "th", 34),
        h(46, "Sr No"),
        d(),
        c(47, "th", 34),
        h(48, "Dealer Name"),
        d(),
        c(49, "th", 34),
        h(50, "Dealer Code"),
        d(),
        c(51, "th", 34),
        h(52, "Dealer email"),
        d(),
        c(53, "th"),
        h(54, "Action"),
        d()()(),
        c(55, "tbody"),
        R(56, gE, 4, 0, "tr", 35)(57, _E, 18, 7, "tr", 36),
        d()()(),
        c(58, "div", 37)(59, "div", 38)(60, "div", 39),
        h(61),
        d()(),
        c(62, "div", 38)(63, "div", 40)(64, "ul", 41)(65, "li", 42)(
          66,
          "a",
          43
        ),
        N("click", function () {
          return t.previousPage();
        }),
        h(67, "Previous"),
        d()(),
        R(68, bE, 3, 3, "li", 44),
        c(69, "li", 45)(70, "a", 43),
        N("click", function () {
          return t.nextPage();
        }),
        h(71, "Next"),
        d()()()()()()()()()()(),
        R(72, vE, 13, 0, "div", 46)(73, OE, 38, 19, "div", 47)),
        e & 2 &&
          (m(20),
          ee(" ", t.filteredDealers.length, " "),
          m(20),
          dt("ngModel", t.searchTerm),
          m(16),
          y("ngIf", t.paginatedDealers.length === 0),
          m(),
          y("ngForOf", t.paginatedDealers),
          m(4),
          Fi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.min(t.currentPage * t.itemsPerPage, t.dealerList().length),
            " of ",
            t.dealerList().length,
            " entries "
          ),
          m(4),
          ne("disabled", t.currentPage === 1),
          m(3),
          y("ngForOf", t.visiblePages),
          m(),
          ne("disabled", t.currentPage === t.totalPages),
          m(3),
          y("ngIf", t.isDeleteModalOpen),
          m(),
          y("ngIf", t.isModalOpen));
    },
    dependencies: [
      Ae,
      It,
      At,
      Xe,
      Si,
      ii,
      ni,
      ei,
      ti,
      Bi,
      _i,
      Jt,
      tt,
      er,
      hn,
      Xi,
      Zi,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}input[_ngcontent-%COMP%]::-webkit-clear-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button, input[_ngcontent-%COMP%]::-webkit-calendar-picker-indicator{display:none!important;-webkit-appearance:none!important}input[_ngcontent-%COMP%]:invalid{box-shadow:none!important}input[_ngcontent-%COMP%]:-moz-ui-invalid{box-shadow:none!important}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border:none}.modal-backdrop[_ngcontent-%COMP%]{display:none!important}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.edit-btn[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:#fff;transition:all .3s ease}.edit-btn[_ngcontent-%COMP%]:hover:enabled{background-color:#222fb9;color:#fff}.edit-btn[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:not-allowed}#editButton[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}",
    ],
  });
};
var e1 = (() => {
  class n {
    constructor(e, t, r) {
      (this.el = e), (this.vcr = t), (this.renderer = r), (this.dtOptions = {});
    }
    ngOnInit() {
      this.dtTrigger
        ? this.dtTrigger.subscribe((e) => {
            this.displayTable(e);
          })
        : this.displayTable(null);
    }
    ngOnDestroy() {
      this.dtTrigger && this.dtTrigger.unsubscribe(),
        this.dt && this.dt.destroy(!0);
    }
    displayTable(e) {
      e && (this.dtOptions = e),
        (this.dtInstance = new Promise((t, r) => {
          Promise.resolve(this.dtOptions).then((o) => {
            if (
              Object.keys(o).length === 0 &&
              $("tbody tr", this.el.nativeElement).length === 0
            ) {
              r("Both the table and dtOptions cannot be empty");
              return;
            }
            o.columns &&
              o.columns.forEach((l) => {
                (l.id ?? "").trim() === "" && (l.id = this.getColumnUniqueId());
              }),
              setTimeout(() => {
                let l = {
                  rowCallback: (u, f, v) => {
                    if (o.columns) {
                      let D = o.columns;
                      this.applyNgPipeTransform(u, D),
                        this.applyNgRefTemplate(u, D, f);
                    }
                    o.rowCallback && o.rowCallback(u, f, v);
                  },
                };
                (l = Object.assign({}, o, l)),
                  (this.dt = $(this.el.nativeElement).DataTable(l)),
                  t(this.dt);
              });
          });
        }));
    }
    applyNgPipeTransform(e, t) {
      t.filter((o) => o.ngPipeInstance && !o.ngTemplateRef).forEach((o) => {
        let a = o.ngPipeInstance,
          l = o.ngPipeArgs || [],
          u = t.filter((T) => T.visible !== !1).findIndex((T) => T.id === o.id),
          f = e.childNodes.item(u),
          v = $(f).text(),
          D = a.transform(v, ...l);
        $(f).text(D);
      });
    }
    applyNgRefTemplate(e, t, r) {
      t.filter((a) => a.ngTemplateRef && !a.ngPipeInstance).forEach((a) => {
        let { ref: l, context: u } = a.ngTemplateRef,
          f = t.filter((M) => M.visible !== !1).findIndex((M) => M.id === a.id),
          v = e.childNodes.item(f);
        $(v).html("");
        let D = Object.assign({}, u, u?.userData, { adtData: r }),
          T = this.vcr.createEmbeddedView(l, D);
        this.renderer.appendChild(v, T.rootNodes[0]);
      });
    }
    getColumnUniqueId() {
      let e = "",
        t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
      for (let r = 0; r < 6; r++) {
        let o = Math.floor(Math.random() * t.length);
        e += t.charAt(o);
      }
      return e.trim();
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(H(Fe), H(Wi), H(hi));
      };
    }
    static {
      this.ɵdir = Ie({
        type: n,
        selectors: [["", "datatable", ""]],
        inputs: { dtOptions: "dtOptions", dtTrigger: "dtTrigger" },
      });
    }
  }
  return n;
})();
var Ca = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ imports: [Ae] });
    }
  }
  return n;
})();
var ll = class n {
  vehicle_id;
  YOM;
  vehicle_name;
  type;
  VIN;
  created_at;
  updated_at;
  corporate_id;
  deleted;
  chasis_number;
  demo_start_date;
  demo_end_date;
  constructor() {
    (this.deleted = !1),
      (this.vehicle_id = " "),
      (this.YOM = ""),
      (this.vehicle_name = ""),
      (this.type = ""),
      (this.VIN = ""),
      (this.created_at = ""),
      (this.updated_at = ""),
      (this.corporate_id = ""),
      (this.chasis_number = ""),
      (this.demo_start_date = " "),
      (this.demo_end_date = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Tm;
try {
  Tm = typeof Intl < "u" && Intl.v8BreakIterator;
} catch {
  Tm = !1;
}
var Ot = (() => {
  class n {
    constructor(e) {
      (this._platformId = e),
        (this.isBrowser = this._platformId
          ? dn(this._platformId)
          : typeof document == "object" && !!document),
        (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
        (this.TRIDENT =
          this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
        (this.BLINK =
          this.isBrowser &&
          !!(window.chrome || Tm) &&
          typeof CSS < "u" &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.WEBKIT =
          this.isBrowser &&
          /AppleWebKit/i.test(navigator.userAgent) &&
          !this.BLINK &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.IOS =
          this.isBrowser &&
          /iPad|iPhone|iPod/.test(navigator.userAgent) &&
          !("MSStream" in window)),
        (this.FIREFOX =
          this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent)),
        (this.ANDROID =
          this.isBrowser &&
          /android/i.test(navigator.userAgent) &&
          !this.TRIDENT),
        (this.SAFARI =
          this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(ai));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var cl;
function PE() {
  if (cl == null && typeof window < "u")
    try {
      window.addEventListener(
        "test",
        null,
        Object.defineProperty({}, "passive", { get: () => (cl = !0) })
      );
    } finally {
      cl = cl || !1;
    }
  return cl;
}
function tr(n) {
  return PE() ? n : !!n.capture;
}
var So;
function t1() {
  if (So == null) {
    if (
      typeof document != "object" ||
      !document ||
      typeof Element != "function" ||
      !Element
    )
      return (So = !1), So;
    if ("scrollBehavior" in document.documentElement.style) So = !0;
    else {
      let n = Element.prototype.scrollTo;
      n ? (So = !/\{\s*\[native code\]\s*\}/.test(n.toString())) : (So = !1);
    }
  }
  return So;
}
var Mm;
function IE() {
  if (Mm == null) {
    let n = typeof document < "u" ? document.head : null;
    Mm = !!(n && (n.createShadowRoot || n.attachShadow));
  }
  return Mm;
}
function i1(n) {
  if (IE()) {
    let i = n.getRootNode ? n.getRootNode() : null;
    if (typeof ShadowRoot < "u" && ShadowRoot && i instanceof ShadowRoot)
      return i;
  }
  return null;
}
function Em() {
  let n = typeof document < "u" && document ? document.activeElement : null;
  for (; n && n.shadowRoot; ) {
    let i = n.shadowRoot.activeElement;
    if (i === n) break;
    n = i;
  }
  return n;
}
function mn(n) {
  return n.composedPath ? n.composedPath()[0] : n.target;
}
function dl() {
  return (
    (typeof __karma__ < "u" && !!__karma__) ||
    (typeof jasmine < "u" && !!jasmine) ||
    (typeof jest < "u" && !!jest) ||
    (typeof Mocha < "u" && !!Mocha)
  );
}
function n1(n, ...i) {
  return i.length
    ? i.some((e) => n[e])
    : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
}
function Da(n) {
  return Array.isArray(n) ? n : [n];
}
function Qt(n) {
  return n == null ? "" : typeof n == "string" ? n : `${n}px`;
}
function Cr(n) {
  return n instanceof Fe ? n.nativeElement : n;
}
var AE = (() => {
  class n {
    create(e) {
      return typeof MutationObserver > "u" ? null : new MutationObserver(e);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Id = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ providers: [AE] });
    }
  }
  return n;
})();
var r1 = new Set(),
  Mo,
  RE = (() => {
    class n {
      constructor(e, t) {
        (this._platform = e),
          (this._nonce = t),
          (this._matchMedia =
            this._platform.isBrowser && window.matchMedia
              ? window.matchMedia.bind(window)
              : NE);
      }
      matchMedia(e) {
        return (
          (this._platform.WEBKIT || this._platform.BLINK) && FE(e, this._nonce),
          this._matchMedia(e)
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Ot), Q(Za, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function FE(n, i) {
  if (!r1.has(n))
    try {
      Mo ||
        ((Mo = document.createElement("style")),
        i && Mo.setAttribute("nonce", i),
        Mo.setAttribute("type", "text/css"),
        document.head.appendChild(Mo)),
        Mo.sheet &&
          (Mo.sheet.insertRule(`@media ${n} {body{ }}`, 0), r1.add(n));
    } catch (e) {
      console.error(e);
    }
}
function NE(n) {
  return {
    matches: n === "all" || n === "",
    media: n,
    addListener: () => {},
    removeListener: () => {},
  };
}
var a1 = (() => {
  class n {
    constructor(e, t) {
      (this._mediaMatcher = e),
        (this._zone = t),
        (this._queries = new Map()),
        (this._destroySubject = new Oe());
    }
    ngOnDestroy() {
      this._destroySubject.next(), this._destroySubject.complete();
    }
    isMatched(e) {
      return o1(Da(e)).some((r) => this._registerQuery(r).mql.matches);
    }
    observe(e) {
      let r = o1(Da(e)).map((a) => this._registerQuery(a).observable),
        o = ro(r);
      return (
        (o = Hl(o.pipe($i(1)), o.pipe(qa(1), Yu(0)))),
        o.pipe(
          qe((a) => {
            let l = { matches: !1, breakpoints: {} };
            return (
              a.forEach(({ matches: u, query: f }) => {
                (l.matches = l.matches || u), (l.breakpoints[f] = u);
              }),
              l
            );
          })
        )
      );
    }
    _registerQuery(e) {
      if (this._queries.has(e)) return this._queries.get(e);
      let t = this._mediaMatcher.matchMedia(e),
        o = {
          observable: new Hn((a) => {
            let l = (u) => this._zone.run(() => a.next(u));
            return (
              t.addListener(l),
              () => {
                t.removeListener(l);
              }
            );
          }).pipe(
            Un(t),
            qe(({ matches: a }) => ({ query: e, matches: a })),
            Ut(this._destroySubject)
          ),
          mql: t,
        };
      return this._queries.set(e, o), o;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(RE), Q(Te));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
function o1(n) {
  return n
    .map((i) => i.split(","))
    .reduce((i, e) => i.concat(e))
    .map((i) => i.trim());
}
var LE = (() => {
  class n {
    constructor(e) {
      this._platform = e;
    }
    isDisabled(e) {
      return e.hasAttribute("disabled");
    }
    isVisible(e) {
      return BE(e) && getComputedStyle(e).visibility === "visible";
    }
    isTabbable(e) {
      if (!this._platform.isBrowser) return !1;
      let t = VE(YE(e));
      if (t && (s1(t) === -1 || !this.isVisible(t))) return !1;
      let r = e.nodeName.toLowerCase(),
        o = s1(e);
      return e.hasAttribute("contenteditable")
        ? o !== -1
        : r === "iframe" ||
          r === "object" ||
          (this._platform.WEBKIT && this._platform.IOS && !WE(e))
        ? !1
        : r === "audio"
        ? e.hasAttribute("controls")
          ? o !== -1
          : !1
        : r === "video"
        ? o === -1
          ? !1
          : o !== null
          ? !0
          : this._platform.FIREFOX || e.hasAttribute("controls")
        : e.tabIndex >= 0;
    }
    isFocusable(e, t) {
      return (
        GE(e) &&
        !this.isDisabled(e) &&
        (t?.ignoreVisibility || this.isVisible(e))
      );
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(Ot));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
function VE(n) {
  try {
    return n.frameElement;
  } catch {
    return null;
  }
}
function BE(n) {
  return !!(
    n.offsetWidth ||
    n.offsetHeight ||
    (typeof n.getClientRects == "function" && n.getClientRects().length)
  );
}
function HE(n) {
  let i = n.nodeName.toLowerCase();
  return i === "input" || i === "select" || i === "button" || i === "textarea";
}
function jE(n) {
  return zE(n) && n.type == "hidden";
}
function UE(n) {
  return $E(n) && n.hasAttribute("href");
}
function zE(n) {
  return n.nodeName.toLowerCase() == "input";
}
function $E(n) {
  return n.nodeName.toLowerCase() == "a";
}
function d1(n) {
  if (!n.hasAttribute("tabindex") || n.tabIndex === void 0) return !1;
  let i = n.getAttribute("tabindex");
  return !!(i && !isNaN(parseInt(i, 10)));
}
function s1(n) {
  if (!d1(n)) return null;
  let i = parseInt(n.getAttribute("tabindex") || "", 10);
  return isNaN(i) ? -1 : i;
}
function WE(n) {
  let i = n.nodeName.toLowerCase(),
    e = i === "input" && n.type;
  return e === "text" || e === "password" || i === "select" || i === "textarea";
}
function GE(n) {
  return jE(n)
    ? !1
    : HE(n) || UE(n) || n.hasAttribute("contenteditable") || d1(n);
}
function YE(n) {
  return (n.ownerDocument && n.ownerDocument.defaultView) || window;
}
var km = class {
    get enabled() {
      return this._enabled;
    }
    set enabled(i) {
      (this._enabled = i),
        this._startAnchor &&
          this._endAnchor &&
          (this._toggleAnchorTabIndex(i, this._startAnchor),
          this._toggleAnchorTabIndex(i, this._endAnchor));
    }
    constructor(i, e, t, r, o = !1, a) {
      (this._element = i),
        (this._checker = e),
        (this._ngZone = t),
        (this._document = r),
        (this._injector = a),
        (this._hasAttached = !1),
        (this.startAnchorListener = () => this.focusLastTabbableElement()),
        (this.endAnchorListener = () => this.focusFirstTabbableElement()),
        (this._enabled = !0),
        o || this.attachAnchors();
    }
    destroy() {
      let i = this._startAnchor,
        e = this._endAnchor;
      i &&
        (i.removeEventListener("focus", this.startAnchorListener), i.remove()),
        e &&
          (e.removeEventListener("focus", this.endAnchorListener), e.remove()),
        (this._startAnchor = this._endAnchor = null),
        (this._hasAttached = !1);
    }
    attachAnchors() {
      return this._hasAttached
        ? !0
        : (this._ngZone.runOutsideAngular(() => {
            this._startAnchor ||
              ((this._startAnchor = this._createAnchor()),
              this._startAnchor.addEventListener(
                "focus",
                this.startAnchorListener
              )),
              this._endAnchor ||
                ((this._endAnchor = this._createAnchor()),
                this._endAnchor.addEventListener(
                  "focus",
                  this.endAnchorListener
                ));
          }),
          this._element.parentNode &&
            (this._element.parentNode.insertBefore(
              this._startAnchor,
              this._element
            ),
            this._element.parentNode.insertBefore(
              this._endAnchor,
              this._element.nextSibling
            ),
            (this._hasAttached = !0)),
          this._hasAttached);
    }
    focusInitialElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusInitialElement(i)));
      });
    }
    focusFirstTabbableElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusFirstTabbableElement(i)));
      });
    }
    focusLastTabbableElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusLastTabbableElement(i)));
      });
    }
    _getRegionBoundary(i) {
      let e = this._element.querySelectorAll(
        `[cdk-focus-region-${i}], [cdkFocusRegion${i}], [cdk-focus-${i}]`
      );
      return i == "start"
        ? e.length
          ? e[0]
          : this._getFirstTabbableElement(this._element)
        : e.length
        ? e[e.length - 1]
        : this._getLastTabbableElement(this._element);
    }
    focusInitialElement(i) {
      let e = this._element.querySelector(
        "[cdk-focus-initial], [cdkFocusInitial]"
      );
      if (e) {
        if (!this._checker.isFocusable(e)) {
          let t = this._getFirstTabbableElement(e);
          return t?.focus(i), !!t;
        }
        return e.focus(i), !0;
      }
      return this.focusFirstTabbableElement(i);
    }
    focusFirstTabbableElement(i) {
      let e = this._getRegionBoundary("start");
      return e && e.focus(i), !!e;
    }
    focusLastTabbableElement(i) {
      let e = this._getRegionBoundary("end");
      return e && e.focus(i), !!e;
    }
    hasAttached() {
      return this._hasAttached;
    }
    _getFirstTabbableElement(i) {
      if (this._checker.isFocusable(i) && this._checker.isTabbable(i)) return i;
      let e = i.children;
      for (let t = 0; t < e.length; t++) {
        let r =
          e[t].nodeType === this._document.ELEMENT_NODE
            ? this._getFirstTabbableElement(e[t])
            : null;
        if (r) return r;
      }
      return null;
    }
    _getLastTabbableElement(i) {
      if (this._checker.isFocusable(i) && this._checker.isTabbable(i)) return i;
      let e = i.children;
      for (let t = e.length - 1; t >= 0; t--) {
        let r =
          e[t].nodeType === this._document.ELEMENT_NODE
            ? this._getLastTabbableElement(e[t])
            : null;
        if (r) return r;
      }
      return null;
    }
    _createAnchor() {
      let i = this._document.createElement("div");
      return (
        this._toggleAnchorTabIndex(this._enabled, i),
        i.classList.add("cdk-visually-hidden"),
        i.classList.add("cdk-focus-trap-anchor"),
        i.setAttribute("aria-hidden", "true"),
        i
      );
    }
    _toggleAnchorTabIndex(i, e) {
      i ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
    }
    toggleAnchors(i) {
      this._startAnchor &&
        this._endAnchor &&
        (this._toggleAnchorTabIndex(i, this._startAnchor),
        this._toggleAnchorTabIndex(i, this._endAnchor));
    }
    _executeOnStable(i) {
      this._injector ? xn(i, { injector: this._injector }) : setTimeout(i);
    }
  },
  qE = (() => {
    class n {
      constructor(e, t, r) {
        (this._checker = e),
          (this._ngZone = t),
          (this._injector = G(Dt)),
          (this._document = r);
      }
      create(e, t = !1) {
        return new km(
          e,
          this._checker,
          this._ngZone,
          this._document,
          t,
          this._injector
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(LE), Q(Te), Q(ke));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  u1 = (() => {
    class n {
      get enabled() {
        return this.focusTrap?.enabled || !1;
      }
      set enabled(e) {
        this.focusTrap && (this.focusTrap.enabled = e);
      }
      constructor(e, t, r) {
        (this._elementRef = e),
          (this._focusTrapFactory = t),
          (this._previouslyFocusedElement = null),
          G(Ot).isBrowser &&
            (this.focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
              !0
            ));
      }
      ngOnDestroy() {
        this.focusTrap?.destroy(),
          this._previouslyFocusedElement &&
            (this._previouslyFocusedElement.focus(),
            (this._previouslyFocusedElement = null));
      }
      ngAfterContentInit() {
        this.focusTrap?.attachAnchors(),
          this.autoCapture && this._captureFocus();
      }
      ngDoCheck() {
        this.focusTrap &&
          !this.focusTrap.hasAttached() &&
          this.focusTrap.attachAnchors();
      }
      ngOnChanges(e) {
        let t = e.autoCapture;
        t &&
          !t.firstChange &&
          this.autoCapture &&
          this.focusTrap?.hasAttached() &&
          this._captureFocus();
      }
      _captureFocus() {
        (this._previouslyFocusedElement = Em()),
          this.focusTrap?.focusInitialElementWhenReady();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Fe), H(qE), H(ke));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "cdkTrapFocus", ""]],
          inputs: {
            enabled: [2, "cdkTrapFocus", "enabled", Se],
            autoCapture: [2, "cdkTrapFocusAutoCapture", "autoCapture", Se],
          },
          exportAs: ["cdkTrapFocus"],
          standalone: !0,
          features: [kt, wt],
        });
      }
    }
    return n;
  })();
function Pm(n) {
  return n.buttons === 0 || n.detail === 0;
}
function Im(n) {
  let i =
    (n.touches && n.touches[0]) || (n.changedTouches && n.changedTouches[0]);
  return (
    !!i &&
    i.identifier === -1 &&
    (i.radiusX == null || i.radiusX === 1) &&
    (i.radiusY == null || i.radiusY === 1)
  );
}
var KE = new we("cdk-input-modality-detector-options"),
  QE = { ignoreKeys: [18, 17, 224, 91, 16] },
  h1 = 650,
  Sa = tr({ passive: !0, capture: !0 }),
  XE = (() => {
    class n {
      get mostRecentModality() {
        return this._modality.value;
      }
      constructor(e, t, r, o) {
        (this._platform = e),
          (this._mostRecentTarget = null),
          (this._modality = new Nt(null)),
          (this._lastTouchMs = 0),
          (this._onKeydown = (a) => {
            this._options?.ignoreKeys?.some((l) => l === a.keyCode) ||
              (this._modality.next("keyboard"),
              (this._mostRecentTarget = mn(a)));
          }),
          (this._onMousedown = (a) => {
            Date.now() - this._lastTouchMs < h1 ||
              (this._modality.next(Pm(a) ? "keyboard" : "mouse"),
              (this._mostRecentTarget = mn(a)));
          }),
          (this._onTouchstart = (a) => {
            if (Im(a)) {
              this._modality.next("keyboard");
              return;
            }
            (this._lastTouchMs = Date.now()),
              this._modality.next("touch"),
              (this._mostRecentTarget = mn(a));
          }),
          (this._options = W(W({}, QE), o)),
          (this.modalityDetected = this._modality.pipe(qa(1))),
          (this.modalityChanged = this.modalityDetected.pipe(Ul())),
          e.isBrowser &&
            t.runOutsideAngular(() => {
              r.addEventListener("keydown", this._onKeydown, Sa),
                r.addEventListener("mousedown", this._onMousedown, Sa),
                r.addEventListener("touchstart", this._onTouchstart, Sa);
            });
      }
      ngOnDestroy() {
        this._modality.complete(),
          this._platform.isBrowser &&
            (document.removeEventListener("keydown", this._onKeydown, Sa),
            document.removeEventListener("mousedown", this._onMousedown, Sa),
            document.removeEventListener("touchstart", this._onTouchstart, Sa));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Ot), Q(Te), Q(ke), Q(KE, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var Rd = (function (n) {
    return (
      (n[(n.IMMEDIATE = 0)] = "IMMEDIATE"),
      (n[(n.EVENTUAL = 1)] = "EVENTUAL"),
      n
    );
  })(Rd || {}),
  ZE = new we("cdk-focus-monitor-default-options"),
  Ad = tr({ passive: !0, capture: !0 }),
  Am = (() => {
    class n {
      constructor(e, t, r, o, a) {
        (this._ngZone = e),
          (this._platform = t),
          (this._inputModalityDetector = r),
          (this._origin = null),
          (this._windowFocused = !1),
          (this._originFromTouchInteraction = !1),
          (this._elementInfo = new Map()),
          (this._monitoredElementCount = 0),
          (this._rootNodeFocusListenerCount = new Map()),
          (this._windowFocusListener = () => {
            (this._windowFocused = !0),
              (this._windowFocusTimeoutId = window.setTimeout(
                () => (this._windowFocused = !1)
              ));
          }),
          (this._stopInputModalityDetector = new Oe()),
          (this._rootNodeFocusAndBlurListener = (l) => {
            let u = mn(l);
            for (let f = u; f; f = f.parentElement)
              l.type === "focus" ? this._onFocus(l, f) : this._onBlur(l, f);
          }),
          (this._document = o),
          (this._detectionMode = a?.detectionMode || Rd.IMMEDIATE);
      }
      monitor(e, t = !1) {
        let r = Cr(e);
        if (!this._platform.isBrowser || r.nodeType !== 1) return fe();
        let o = i1(r) || this._getDocument(),
          a = this._elementInfo.get(r);
        if (a) return t && (a.checkChildren = !0), a.subject;
        let l = { checkChildren: t, subject: new Oe(), rootNode: o };
        return (
          this._elementInfo.set(r, l),
          this._registerGlobalListeners(l),
          l.subject
        );
      }
      stopMonitoring(e) {
        let t = Cr(e),
          r = this._elementInfo.get(t);
        r &&
          (r.subject.complete(),
          this._setClasses(t),
          this._elementInfo.delete(t),
          this._removeGlobalListeners(r));
      }
      focusVia(e, t, r) {
        let o = Cr(e),
          a = this._getDocument().activeElement;
        o === a
          ? this._getClosestElementsInfo(o).forEach(([l, u]) =>
              this._originChanged(l, t, u)
            )
          : (this._setOrigin(t), typeof o.focus == "function" && o.focus(r));
      }
      ngOnDestroy() {
        this._elementInfo.forEach((e, t) => this.stopMonitoring(t));
      }
      _getDocument() {
        return this._document || document;
      }
      _getWindow() {
        return this._getDocument().defaultView || window;
      }
      _getFocusOrigin(e) {
        return this._origin
          ? this._originFromTouchInteraction
            ? this._shouldBeAttributedToTouch(e)
              ? "touch"
              : "program"
            : this._origin
          : this._windowFocused && this._lastFocusOrigin
          ? this._lastFocusOrigin
          : e && this._isLastInteractionFromInputLabel(e)
          ? "mouse"
          : "program";
      }
      _shouldBeAttributedToTouch(e) {
        return (
          this._detectionMode === Rd.EVENTUAL ||
          !!e?.contains(this._inputModalityDetector._mostRecentTarget)
        );
      }
      _setClasses(e, t) {
        e.classList.toggle("cdk-focused", !!t),
          e.classList.toggle("cdk-touch-focused", t === "touch"),
          e.classList.toggle("cdk-keyboard-focused", t === "keyboard"),
          e.classList.toggle("cdk-mouse-focused", t === "mouse"),
          e.classList.toggle("cdk-program-focused", t === "program");
      }
      _setOrigin(e, t = !1) {
        this._ngZone.runOutsideAngular(() => {
          if (
            ((this._origin = e),
            (this._originFromTouchInteraction = e === "touch" && t),
            this._detectionMode === Rd.IMMEDIATE)
          ) {
            clearTimeout(this._originTimeoutId);
            let r = this._originFromTouchInteraction ? h1 : 1;
            this._originTimeoutId = setTimeout(() => (this._origin = null), r);
          }
        });
      }
      _onFocus(e, t) {
        let r = this._elementInfo.get(t),
          o = mn(e);
        !r ||
          (!r.checkChildren && t !== o) ||
          this._originChanged(t, this._getFocusOrigin(o), r);
      }
      _onBlur(e, t) {
        let r = this._elementInfo.get(t);
        !r ||
          (r.checkChildren &&
            e.relatedTarget instanceof Node &&
            t.contains(e.relatedTarget)) ||
          (this._setClasses(t), this._emitOrigin(r, null));
      }
      _emitOrigin(e, t) {
        e.subject.observers.length && this._ngZone.run(() => e.subject.next(t));
      }
      _registerGlobalListeners(e) {
        if (!this._platform.isBrowser) return;
        let t = e.rootNode,
          r = this._rootNodeFocusListenerCount.get(t) || 0;
        r ||
          this._ngZone.runOutsideAngular(() => {
            t.addEventListener("focus", this._rootNodeFocusAndBlurListener, Ad),
              t.addEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                Ad
              );
          }),
          this._rootNodeFocusListenerCount.set(t, r + 1),
          ++this._monitoredElementCount === 1 &&
            (this._ngZone.runOutsideAngular(() => {
              this._getWindow().addEventListener(
                "focus",
                this._windowFocusListener
              );
            }),
            this._inputModalityDetector.modalityDetected
              .pipe(Ut(this._stopInputModalityDetector))
              .subscribe((o) => {
                this._setOrigin(o, !0);
              }));
      }
      _removeGlobalListeners(e) {
        let t = e.rootNode;
        if (this._rootNodeFocusListenerCount.has(t)) {
          let r = this._rootNodeFocusListenerCount.get(t);
          r > 1
            ? this._rootNodeFocusListenerCount.set(t, r - 1)
            : (t.removeEventListener(
                "focus",
                this._rootNodeFocusAndBlurListener,
                Ad
              ),
              t.removeEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                Ad
              ),
              this._rootNodeFocusListenerCount.delete(t));
        }
        --this._monitoredElementCount ||
          (this._getWindow().removeEventListener(
            "focus",
            this._windowFocusListener
          ),
          this._stopInputModalityDetector.next(),
          clearTimeout(this._windowFocusTimeoutId),
          clearTimeout(this._originTimeoutId));
      }
      _originChanged(e, t, r) {
        this._setClasses(e, t),
          this._emitOrigin(r, t),
          (this._lastFocusOrigin = t);
      }
      _getClosestElementsInfo(e) {
        let t = [];
        return (
          this._elementInfo.forEach((r, o) => {
            (o === e || (r.checkChildren && o.contains(e))) && t.push([o, r]);
          }),
          t
        );
      }
      _isLastInteractionFromInputLabel(e) {
        let { _mostRecentTarget: t, mostRecentModality: r } =
          this._inputModalityDetector;
        if (
          r !== "mouse" ||
          !t ||
          t === e ||
          (e.nodeName !== "INPUT" && e.nodeName !== "TEXTAREA") ||
          e.disabled
        )
          return !1;
        let o = e.labels;
        if (o) {
          for (let a = 0; a < o.length; a++) if (o[a].contains(t)) return !0;
        }
        return !1;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Te), Q(Ot), Q(XE), Q(ke, 8), Q(ZE, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  p1 = (() => {
    class n {
      constructor(e, t) {
        (this._elementRef = e),
          (this._focusMonitor = t),
          (this._focusOrigin = null),
          (this.cdkFocusChange = new xe());
      }
      get focusOrigin() {
        return this._focusOrigin;
      }
      ngAfterViewInit() {
        let e = this._elementRef.nativeElement;
        this._monitorSubscription = this._focusMonitor
          .monitor(
            e,
            e.nodeType === 1 && e.hasAttribute("cdkMonitorSubtreeFocus")
          )
          .subscribe((t) => {
            (this._focusOrigin = t), this.cdkFocusChange.emit(t);
          });
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._monitorSubscription && this._monitorSubscription.unsubscribe();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Fe), H(Am));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "cdkMonitorElementFocus", ""],
            ["", "cdkMonitorSubtreeFocus", ""],
          ],
          outputs: { cdkFocusChange: "cdkFocusChange" },
          exportAs: ["cdkMonitorFocus"],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  To = (function (n) {
    return (
      (n[(n.NONE = 0)] = "NONE"),
      (n[(n.BLACK_ON_WHITE = 1)] = "BLACK_ON_WHITE"),
      (n[(n.WHITE_ON_BLACK = 2)] = "WHITE_ON_BLACK"),
      n
    );
  })(To || {}),
  l1 = "cdk-high-contrast-black-on-white",
  c1 = "cdk-high-contrast-white-on-black",
  Om = "cdk-high-contrast-active",
  Rm = (() => {
    class n {
      constructor(e, t) {
        (this._platform = e),
          (this._document = t),
          (this._breakpointSubscription = G(a1)
            .observe("(forced-colors: active)")
            .subscribe(() => {
              this._hasCheckedHighContrastMode &&
                ((this._hasCheckedHighContrastMode = !1),
                this._applyBodyHighContrastModeCssClasses());
            }));
      }
      getHighContrastMode() {
        if (!this._platform.isBrowser) return To.NONE;
        let e = this._document.createElement("div");
        (e.style.backgroundColor = "rgb(1,2,3)"),
          (e.style.position = "absolute"),
          this._document.body.appendChild(e);
        let t = this._document.defaultView || window,
          r = t && t.getComputedStyle ? t.getComputedStyle(e) : null,
          o = ((r && r.backgroundColor) || "").replace(/ /g, "");
        switch ((e.remove(), o)) {
          case "rgb(0,0,0)":
          case "rgb(45,50,54)":
          case "rgb(32,32,32)":
            return To.WHITE_ON_BLACK;
          case "rgb(255,255,255)":
          case "rgb(255,250,239)":
            return To.BLACK_ON_WHITE;
        }
        return To.NONE;
      }
      ngOnDestroy() {
        this._breakpointSubscription.unsubscribe();
      }
      _applyBodyHighContrastModeCssClasses() {
        if (
          !this._hasCheckedHighContrastMode &&
          this._platform.isBrowser &&
          this._document.body
        ) {
          let e = this._document.body.classList;
          e.remove(Om, l1, c1), (this._hasCheckedHighContrastMode = !0);
          let t = this.getHighContrastMode();
          t === To.BLACK_ON_WHITE
            ? e.add(Om, l1)
            : t === To.WHITE_ON_BLACK && e.add(Om, c1);
        }
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Ot), Q(ke));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  m1 = (() => {
    class n {
      constructor(e) {
        e._applyBodyHighContrastModeCssClasses();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Rm));
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [Id] });
      }
    }
    return n;
  })();
var eO = new we("cdk-dir-doc", { providedIn: "root", factory: tO });
function tO() {
  return G(ke);
}
var iO =
  /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
function nO(n) {
  let i = n?.toLowerCase() || "";
  return i === "auto" && typeof navigator < "u" && navigator?.language
    ? iO.test(navigator.language)
      ? "rtl"
      : "ltr"
    : i === "rtl"
    ? "rtl"
    : "ltr";
}
var Ma = (() => {
  class n {
    constructor(e) {
      if (((this.value = "ltr"), (this.change = new xe()), e)) {
        let t = e.body ? e.body.dir : null,
          r = e.documentElement ? e.documentElement.dir : null;
        this.value = nO(t || r || "ltr");
      }
    }
    ngOnDestroy() {
      this.change.complete();
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(eO, 8));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Yr = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
var aO = 20,
  g1 = (() => {
    class n {
      constructor(e, t, r) {
        (this._ngZone = e),
          (this._platform = t),
          (this._scrolled = new Oe()),
          (this._globalSubscription = null),
          (this._scrolledCount = 0),
          (this.scrollContainers = new Map()),
          (this._document = r);
      }
      register(e) {
        this.scrollContainers.has(e) ||
          this.scrollContainers.set(
            e,
            e.elementScrolled().subscribe(() => this._scrolled.next(e))
          );
      }
      deregister(e) {
        let t = this.scrollContainers.get(e);
        t && (t.unsubscribe(), this.scrollContainers.delete(e));
      }
      scrolled(e = aO) {
        return this._platform.isBrowser
          ? new Hn((t) => {
              this._globalSubscription || this._addGlobalListener();
              let r =
                e > 0
                  ? this._scrolled.pipe(Gu(e)).subscribe(t)
                  : this._scrolled.subscribe(t);
              return (
                this._scrolledCount++,
                () => {
                  r.unsubscribe(),
                    this._scrolledCount--,
                    this._scrolledCount || this._removeGlobalListener();
                }
              );
            })
          : fe();
      }
      ngOnDestroy() {
        this._removeGlobalListener(),
          this.scrollContainers.forEach((e, t) => this.deregister(t)),
          this._scrolled.complete();
      }
      ancestorScrolled(e, t) {
        let r = this.getAncestorScrollContainers(e);
        return this.scrolled(t).pipe(Ct((o) => !o || r.indexOf(o) > -1));
      }
      getAncestorScrollContainers(e) {
        let t = [];
        return (
          this.scrollContainers.forEach((r, o) => {
            this._scrollableContainsElement(o, e) && t.push(o);
          }),
          t
        );
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _scrollableContainsElement(e, t) {
        let r = Cr(t),
          o = e.getElementRef().nativeElement;
        do if (r == o) return !0;
        while ((r = r.parentElement));
        return !1;
      }
      _addGlobalListener() {
        this._globalSubscription = this._ngZone.runOutsideAngular(() => {
          let e = this._getWindow();
          return yn(e.document, "scroll").subscribe(() =>
            this._scrolled.next()
          );
        });
      }
      _removeGlobalListener() {
        this._globalSubscription &&
          (this._globalSubscription.unsubscribe(),
          (this._globalSubscription = null));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Te), Q(Ot), Q(ke, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var sO = 20,
  Fm = (() => {
    class n {
      constructor(e, t, r) {
        (this._platform = e),
          (this._change = new Oe()),
          (this._changeListener = (o) => {
            this._change.next(o);
          }),
          (this._document = r),
          t.runOutsideAngular(() => {
            if (e.isBrowser) {
              let o = this._getWindow();
              o.addEventListener("resize", this._changeListener),
                o.addEventListener("orientationchange", this._changeListener);
            }
            this.change().subscribe(() => (this._viewportSize = null));
          });
      }
      ngOnDestroy() {
        if (this._platform.isBrowser) {
          let e = this._getWindow();
          e.removeEventListener("resize", this._changeListener),
            e.removeEventListener("orientationchange", this._changeListener);
        }
        this._change.complete();
      }
      getViewportSize() {
        this._viewportSize || this._updateViewportSize();
        let e = {
          width: this._viewportSize.width,
          height: this._viewportSize.height,
        };
        return this._platform.isBrowser || (this._viewportSize = null), e;
      }
      getViewportRect() {
        let e = this.getViewportScrollPosition(),
          { width: t, height: r } = this.getViewportSize();
        return {
          top: e.top,
          left: e.left,
          bottom: e.top + r,
          right: e.left + t,
          height: r,
          width: t,
        };
      }
      getViewportScrollPosition() {
        if (!this._platform.isBrowser) return { top: 0, left: 0 };
        let e = this._document,
          t = this._getWindow(),
          r = e.documentElement,
          o = r.getBoundingClientRect(),
          a = -o.top || e.body.scrollTop || t.scrollY || r.scrollTop || 0,
          l = -o.left || e.body.scrollLeft || t.scrollX || r.scrollLeft || 0;
        return { top: a, left: l };
      }
      change(e = sO) {
        return e > 0 ? this._change.pipe(Gu(e)) : this._change;
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _updateViewportSize() {
        let e = this._getWindow();
        this._viewportSize = this._platform.isBrowser
          ? { width: e.innerWidth, height: e.innerHeight }
          : { width: 0, height: 0 };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Ot), Q(Te), Q(ke, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var Fd = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({});
      }
    }
    return n;
  })(),
  Nm = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [Yr, Fd, Yr, Fd] });
      }
    }
    return n;
  })();
var ul = class {
    attach(i) {
      return (this._attachedHost = i), i.attach(this);
    }
    detach() {
      let i = this._attachedHost;
      i != null && ((this._attachedHost = null), i.detach());
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(i) {
      this._attachedHost = i;
    }
  },
  hl = class extends ul {
    constructor(i, e, t, r, o) {
      super(),
        (this.component = i),
        (this.viewContainerRef = e),
        (this.injector = t),
        (this.componentFactoryResolver = r),
        (this.projectableNodes = o);
    }
  },
  pl = class extends ul {
    constructor(i, e, t, r) {
      super(),
        (this.templateRef = i),
        (this.viewContainerRef = e),
        (this.context = t),
        (this.injector = r);
    }
    get origin() {
      return this.templateRef.elementRef;
    }
    attach(i, e = this.context) {
      return (this.context = e), super.attach(i);
    }
    detach() {
      return (this.context = void 0), super.detach();
    }
  },
  Lm = class extends ul {
    constructor(i) {
      super(), (this.element = i instanceof Fe ? i.nativeElement : i);
    }
  },
  Nd = class {
    constructor() {
      (this._isDisposed = !1), (this.attachDomPortal = null);
    }
    hasAttached() {
      return !!this._attachedPortal;
    }
    attach(i) {
      if (i instanceof hl)
        return (this._attachedPortal = i), this.attachComponentPortal(i);
      if (i instanceof pl)
        return (this._attachedPortal = i), this.attachTemplatePortal(i);
      if (this.attachDomPortal && i instanceof Lm)
        return (this._attachedPortal = i), this.attachDomPortal(i);
    }
    detach() {
      this._attachedPortal &&
        (this._attachedPortal.setAttachedHost(null),
        (this._attachedPortal = null)),
        this._invokeDisposeFn();
    }
    dispose() {
      this.hasAttached() && this.detach(),
        this._invokeDisposeFn(),
        (this._isDisposed = !0);
    }
    setDisposeFn(i) {
      this._disposeFn = i;
    }
    _invokeDisposeFn() {
      this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
    }
  };
var Ld = class extends Nd {
  constructor(i, e, t, r, o) {
    super(),
      (this.outletElement = i),
      (this._componentFactoryResolver = e),
      (this._appRef = t),
      (this._defaultInjector = r),
      (this.attachDomPortal = (a) => {
        this._document;
        let l = a.element;
        l.parentNode;
        let u = this._document.createComment("dom-portal");
        l.parentNode.insertBefore(u, l),
          this.outletElement.appendChild(l),
          (this._attachedPortal = a),
          super.setDisposeFn(() => {
            u.parentNode && u.parentNode.replaceChild(l, u);
          });
      }),
      (this._document = o);
  }
  attachComponentPortal(i) {
    let t = (
        i.componentFactoryResolver || this._componentFactoryResolver
      ).resolveComponentFactory(i.component),
      r;
    return (
      i.viewContainerRef
        ? ((r = i.viewContainerRef.createComponent(
            t,
            i.viewContainerRef.length,
            i.injector || i.viewContainerRef.injector,
            i.projectableNodes || void 0
          )),
          this.setDisposeFn(() => r.destroy()))
        : ((r = t.create(i.injector || this._defaultInjector || Dt.NULL)),
          this._appRef.attachView(r.hostView),
          this.setDisposeFn(() => {
            this._appRef.viewCount > 0 && this._appRef.detachView(r.hostView),
              r.destroy();
          })),
      this.outletElement.appendChild(this._getComponentRootNode(r)),
      (this._attachedPortal = i),
      r
    );
  }
  attachTemplatePortal(i) {
    let e = i.viewContainerRef,
      t = e.createEmbeddedView(i.templateRef, i.context, {
        injector: i.injector,
      });
    return (
      t.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
      t.detectChanges(),
      this.setDisposeFn(() => {
        let r = e.indexOf(t);
        r !== -1 && e.remove(r);
      }),
      (this._attachedPortal = i),
      t
    );
  }
  dispose() {
    super.dispose(), this.outletElement.remove();
  }
  _getComponentRootNode(i) {
    return i.hostView.rootNodes[0];
  }
};
var Vm = (() => {
  class n extends Nd {
    constructor(e, t, r) {
      super(),
        (this._componentFactoryResolver = e),
        (this._viewContainerRef = t),
        (this._isInitialized = !1),
        (this.attached = new xe()),
        (this.attachDomPortal = (o) => {
          this._document;
          let a = o.element;
          a.parentNode;
          let l = this._document.createComment("dom-portal");
          o.setAttachedHost(this),
            a.parentNode.insertBefore(l, a),
            this._getRootNode().appendChild(a),
            (this._attachedPortal = o),
            super.setDisposeFn(() => {
              l.parentNode && l.parentNode.replaceChild(a, l);
            });
        }),
        (this._document = r);
    }
    get portal() {
      return this._attachedPortal;
    }
    set portal(e) {
      (this.hasAttached() && !e && !this._isInitialized) ||
        (this.hasAttached() && super.detach(),
        e && super.attach(e),
        (this._attachedPortal = e || null));
    }
    get attachedRef() {
      return this._attachedRef;
    }
    ngOnInit() {
      this._isInitialized = !0;
    }
    ngOnDestroy() {
      super.dispose(), (this._attachedRef = this._attachedPortal = null);
    }
    attachComponentPortal(e) {
      e.setAttachedHost(this);
      let t =
          e.viewContainerRef != null
            ? e.viewContainerRef
            : this._viewContainerRef,
        o = (
          e.componentFactoryResolver || this._componentFactoryResolver
        ).resolveComponentFactory(e.component),
        a = t.createComponent(
          o,
          t.length,
          e.injector || t.injector,
          e.projectableNodes || void 0
        );
      return (
        t !== this._viewContainerRef &&
          this._getRootNode().appendChild(a.hostView.rootNodes[0]),
        super.setDisposeFn(() => a.destroy()),
        (this._attachedPortal = e),
        (this._attachedRef = a),
        this.attached.emit(a),
        a
      );
    }
    attachTemplatePortal(e) {
      e.setAttachedHost(this);
      let t = this._viewContainerRef.createEmbeddedView(
        e.templateRef,
        e.context,
        { injector: e.injector }
      );
      return (
        super.setDisposeFn(() => this._viewContainerRef.clear()),
        (this._attachedPortal = e),
        (this._attachedRef = t),
        this.attached.emit(t),
        t
      );
    }
    _getRootNode() {
      let e = this._viewContainerRef.element.nativeElement;
      return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(H(oo), H(Wi), H(ke));
      };
    }
    static {
      this.ɵdir = Ie({
        type: n,
        selectors: [["", "cdkPortalOutlet", ""]],
        inputs: { portal: [0, "cdkPortalOutlet", "portal"] },
        outputs: { attached: "attached" },
        exportAs: ["cdkPortalOutlet"],
        standalone: !0,
        features: [Ze],
      });
    }
  }
  return n;
})();
var Vd = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
var _1 = t1(),
  Bm = class {
    constructor(i, e) {
      (this._viewportRuler = i),
        (this._previousHTMLStyles = { top: "", left: "" }),
        (this._isEnabled = !1),
        (this._document = e);
    }
    attach() {}
    enable() {
      if (this._canBeEnabled()) {
        let i = this._document.documentElement;
        (this._previousScrollPosition =
          this._viewportRuler.getViewportScrollPosition()),
          (this._previousHTMLStyles.left = i.style.left || ""),
          (this._previousHTMLStyles.top = i.style.top || ""),
          (i.style.left = Qt(-this._previousScrollPosition.left)),
          (i.style.top = Qt(-this._previousScrollPosition.top)),
          i.classList.add("cdk-global-scrollblock"),
          (this._isEnabled = !0);
      }
    }
    disable() {
      if (this._isEnabled) {
        let i = this._document.documentElement,
          e = this._document.body,
          t = i.style,
          r = e.style,
          o = t.scrollBehavior || "",
          a = r.scrollBehavior || "";
        (this._isEnabled = !1),
          (t.left = this._previousHTMLStyles.left),
          (t.top = this._previousHTMLStyles.top),
          i.classList.remove("cdk-global-scrollblock"),
          _1 && (t.scrollBehavior = r.scrollBehavior = "auto"),
          window.scroll(
            this._previousScrollPosition.left,
            this._previousScrollPosition.top
          ),
          _1 && ((t.scrollBehavior = o), (r.scrollBehavior = a));
      }
    }
    _canBeEnabled() {
      if (
        this._document.documentElement.classList.contains(
          "cdk-global-scrollblock"
        ) ||
        this._isEnabled
      )
        return !1;
      let e = this._document.body,
        t = this._viewportRuler.getViewportSize();
      return e.scrollHeight > t.height || e.scrollWidth > t.width;
    }
  };
var Hm = class {
    constructor(i, e, t, r) {
      (this._scrollDispatcher = i),
        (this._ngZone = e),
        (this._viewportRuler = t),
        (this._config = r),
        (this._scrollSubscription = null),
        (this._detach = () => {
          this.disable(),
            this._overlayRef.hasAttached() &&
              this._ngZone.run(() => this._overlayRef.detach());
        });
    }
    attach(i) {
      this._overlayRef, (this._overlayRef = i);
    }
    enable() {
      if (this._scrollSubscription) return;
      let i = this._scrollDispatcher
        .scrolled(0)
        .pipe(
          Ct(
            (e) =>
              !e ||
              !this._overlayRef.overlayElement.contains(
                e.getElementRef().nativeElement
              )
          )
        );
      this._config && this._config.threshold && this._config.threshold > 1
        ? ((this._initialScrollPosition =
            this._viewportRuler.getViewportScrollPosition().top),
          (this._scrollSubscription = i.subscribe(() => {
            let e = this._viewportRuler.getViewportScrollPosition().top;
            Math.abs(e - this._initialScrollPosition) > this._config.threshold
              ? this._detach()
              : this._overlayRef.updatePosition();
          })))
        : (this._scrollSubscription = i.subscribe(this._detach));
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  Bd = class {
    enable() {}
    disable() {}
    attach() {}
  };
function jm(n, i) {
  return i.some((e) => {
    let t = n.bottom < e.top,
      r = n.top > e.bottom,
      o = n.right < e.left,
      a = n.left > e.right;
    return t || r || o || a;
  });
}
function b1(n, i) {
  return i.some((e) => {
    let t = n.top < e.top,
      r = n.bottom > e.bottom,
      o = n.left < e.left,
      a = n.right > e.right;
    return t || r || o || a;
  });
}
var Um = class {
    constructor(i, e, t, r) {
      (this._scrollDispatcher = i),
        (this._viewportRuler = e),
        (this._ngZone = t),
        (this._config = r),
        (this._scrollSubscription = null);
    }
    attach(i) {
      this._overlayRef, (this._overlayRef = i);
    }
    enable() {
      if (!this._scrollSubscription) {
        let i = this._config ? this._config.scrollThrottle : 0;
        this._scrollSubscription = this._scrollDispatcher
          .scrolled(i)
          .subscribe(() => {
            if (
              (this._overlayRef.updatePosition(),
              this._config && this._config.autoClose)
            ) {
              let e = this._overlayRef.overlayElement.getBoundingClientRect(),
                { width: t, height: r } = this._viewportRuler.getViewportSize();
              jm(e, [
                { width: t, height: r, bottom: r, right: t, top: 0, left: 0 },
              ]) &&
                (this.disable(),
                this._ngZone.run(() => this._overlayRef.detach()));
            }
          });
      }
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  cO = (() => {
    class n {
      constructor(e, t, r, o) {
        (this._scrollDispatcher = e),
          (this._viewportRuler = t),
          (this._ngZone = r),
          (this.noop = () => new Bd()),
          (this.close = (a) =>
            new Hm(
              this._scrollDispatcher,
              this._ngZone,
              this._viewportRuler,
              a
            )),
          (this.block = () => new Bm(this._viewportRuler, this._document)),
          (this.reposition = (a) =>
            new Um(
              this._scrollDispatcher,
              this._viewportRuler,
              this._ngZone,
              a
            )),
          (this._document = o);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(g1), Q(Fm), Q(Te), Q(ke));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Hd = class {
    constructor(i) {
      if (
        ((this.scrollStrategy = new Bd()),
        (this.panelClass = ""),
        (this.hasBackdrop = !1),
        (this.backdropClass = "cdk-overlay-dark-backdrop"),
        (this.disposeOnNavigation = !1),
        i)
      ) {
        let e = Object.keys(i);
        for (let t of e) i[t] !== void 0 && (this[t] = i[t]);
      }
    }
  };
var zm = class {
  constructor(i, e) {
    (this.connectionPair = i), (this.scrollableViewProperties = e);
  }
};
var D1 = (() => {
    class n {
      constructor(e) {
        (this._attachedOverlays = []), (this._document = e);
      }
      ngOnDestroy() {
        this.detach();
      }
      add(e) {
        this.remove(e), this._attachedOverlays.push(e);
      }
      remove(e) {
        let t = this._attachedOverlays.indexOf(e);
        t > -1 && this._attachedOverlays.splice(t, 1),
          this._attachedOverlays.length === 0 && this.detach();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(ke));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  dO = (() => {
    class n extends D1 {
      constructor(e, t) {
        super(e),
          (this._ngZone = t),
          (this._keydownListener = (r) => {
            let o = this._attachedOverlays;
            for (let a = o.length - 1; a > -1; a--)
              if (o[a]._keydownEvents.observers.length > 0) {
                let l = o[a]._keydownEvents;
                this._ngZone ? this._ngZone.run(() => l.next(r)) : l.next(r);
                break;
              }
          });
      }
      add(e) {
        super.add(e),
          this._isAttached ||
            (this._ngZone
              ? this._ngZone.runOutsideAngular(() =>
                  this._document.body.addEventListener(
                    "keydown",
                    this._keydownListener
                  )
                )
              : this._document.body.addEventListener(
                  "keydown",
                  this._keydownListener
                ),
            (this._isAttached = !0));
      }
      detach() {
        this._isAttached &&
          (this._document.body.removeEventListener(
            "keydown",
            this._keydownListener
          ),
          (this._isAttached = !1));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(ke), Q(Te, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  uO = (() => {
    class n extends D1 {
      constructor(e, t, r) {
        super(e),
          (this._platform = t),
          (this._ngZone = r),
          (this._cursorStyleIsSet = !1),
          (this._pointerDownListener = (o) => {
            this._pointerDownEventTarget = mn(o);
          }),
          (this._clickListener = (o) => {
            let a = mn(o),
              l =
                o.type === "click" && this._pointerDownEventTarget
                  ? this._pointerDownEventTarget
                  : a;
            this._pointerDownEventTarget = null;
            let u = this._attachedOverlays.slice();
            for (let f = u.length - 1; f > -1; f--) {
              let v = u[f];
              if (
                v._outsidePointerEvents.observers.length < 1 ||
                !v.hasAttached()
              )
                continue;
              if (v1(v.overlayElement, a) || v1(v.overlayElement, l)) break;
              let D = v._outsidePointerEvents;
              this._ngZone ? this._ngZone.run(() => D.next(o)) : D.next(o);
            }
          });
      }
      add(e) {
        if ((super.add(e), !this._isAttached)) {
          let t = this._document.body;
          this._ngZone
            ? this._ngZone.runOutsideAngular(() => this._addEventListeners(t))
            : this._addEventListeners(t),
            this._platform.IOS &&
              !this._cursorStyleIsSet &&
              ((this._cursorOriginalValue = t.style.cursor),
              (t.style.cursor = "pointer"),
              (this._cursorStyleIsSet = !0)),
            (this._isAttached = !0);
        }
      }
      detach() {
        if (this._isAttached) {
          let e = this._document.body;
          e.removeEventListener("pointerdown", this._pointerDownListener, !0),
            e.removeEventListener("click", this._clickListener, !0),
            e.removeEventListener("auxclick", this._clickListener, !0),
            e.removeEventListener("contextmenu", this._clickListener, !0),
            this._platform.IOS &&
              this._cursorStyleIsSet &&
              ((e.style.cursor = this._cursorOriginalValue),
              (this._cursorStyleIsSet = !1)),
            (this._isAttached = !1);
        }
      }
      _addEventListeners(e) {
        e.addEventListener("pointerdown", this._pointerDownListener, !0),
          e.addEventListener("click", this._clickListener, !0),
          e.addEventListener("auxclick", this._clickListener, !0),
          e.addEventListener("contextmenu", this._clickListener, !0);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(ke), Q(Ot), Q(Te, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function v1(n, i) {
  let e = typeof ShadowRoot < "u" && ShadowRoot,
    t = i;
  for (; t; ) {
    if (t === n) return !0;
    t = e && t instanceof ShadowRoot ? t.host : t.parentNode;
  }
  return !1;
}
var S1 = (() => {
    class n {
      constructor(e, t) {
        (this._platform = t), (this._document = e);
      }
      ngOnDestroy() {
        this._containerElement?.remove();
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = "cdk-overlay-container";
        if (this._platform.isBrowser || dl()) {
          let r = this._document.querySelectorAll(
            `.${e}[platform="server"], .${e}[platform="test"]`
          );
          for (let o = 0; o < r.length; o++) r[o].remove();
        }
        let t = this._document.createElement("div");
        t.classList.add(e),
          dl()
            ? t.setAttribute("platform", "test")
            : this._platform.isBrowser || t.setAttribute("platform", "server"),
          this._document.body.appendChild(t),
          (this._containerElement = t);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(ke), Q(Ot));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  $m = class {
    constructor(i, e, t, r, o, a, l, u, f, v = !1, D) {
      (this._portalOutlet = i),
        (this._host = e),
        (this._pane = t),
        (this._config = r),
        (this._ngZone = o),
        (this._keyboardDispatcher = a),
        (this._document = l),
        (this._location = u),
        (this._outsideClickDispatcher = f),
        (this._animationsDisabled = v),
        (this._injector = D),
        (this._backdropElement = null),
        (this._backdropClick = new Oe()),
        (this._attachments = new Oe()),
        (this._detachments = new Oe()),
        (this._locationChanges = zi.EMPTY),
        (this._backdropClickHandler = (T) => this._backdropClick.next(T)),
        (this._backdropTransitionendHandler = (T) => {
          this._disposeBackdrop(T.target);
        }),
        (this._keydownEvents = new Oe()),
        (this._outsidePointerEvents = new Oe()),
        (this._renders = new Oe()),
        r.scrollStrategy &&
          ((this._scrollStrategy = r.scrollStrategy),
          this._scrollStrategy.attach(this)),
        (this._positionStrategy = r.positionStrategy),
        (this._afterRenderRef = Dn(() =>
          nh(
            () => {
              this._renders.next();
            },
            { injector: this._injector }
          )
        ));
    }
    get overlayElement() {
      return this._pane;
    }
    get backdropElement() {
      return this._backdropElement;
    }
    get hostElement() {
      return this._host;
    }
    attach(i) {
      !this._host.parentElement &&
        this._previousHostParent &&
        this._previousHostParent.appendChild(this._host);
      let e = this._portalOutlet.attach(i);
      return (
        this._positionStrategy && this._positionStrategy.attach(this),
        this._updateStackingOrder(),
        this._updateElementSize(),
        this._updateElementDirection(),
        this._scrollStrategy && this._scrollStrategy.enable(),
        this._afterNextRenderRef?.destroy(),
        (this._afterNextRenderRef = xn(
          () => {
            this.hasAttached() && this.updatePosition();
          },
          { injector: this._injector }
        )),
        this._togglePointerEvents(!0),
        this._config.hasBackdrop && this._attachBackdrop(),
        this._config.panelClass &&
          this._toggleClasses(this._pane, this._config.panelClass, !0),
        this._attachments.next(),
        this._keyboardDispatcher.add(this),
        this._config.disposeOnNavigation &&
          (this._locationChanges = this._location.subscribe(() =>
            this.dispose()
          )),
        this._outsideClickDispatcher.add(this),
        typeof e?.onDestroy == "function" &&
          e.onDestroy(() => {
            this.hasAttached() &&
              this._ngZone.runOutsideAngular(() =>
                Promise.resolve().then(() => this.detach())
              );
          }),
        e
      );
    }
    detach() {
      if (!this.hasAttached()) return;
      this.detachBackdrop(),
        this._togglePointerEvents(!1),
        this._positionStrategy &&
          this._positionStrategy.detach &&
          this._positionStrategy.detach(),
        this._scrollStrategy && this._scrollStrategy.disable();
      let i = this._portalOutlet.detach();
      return (
        this._detachments.next(),
        this._keyboardDispatcher.remove(this),
        this._detachContentWhenEmpty(),
        this._locationChanges.unsubscribe(),
        this._outsideClickDispatcher.remove(this),
        i
      );
    }
    dispose() {
      let i = this.hasAttached();
      this._positionStrategy && this._positionStrategy.dispose(),
        this._disposeScrollStrategy(),
        this._disposeBackdrop(this._backdropElement),
        this._locationChanges.unsubscribe(),
        this._keyboardDispatcher.remove(this),
        this._portalOutlet.dispose(),
        this._attachments.complete(),
        this._backdropClick.complete(),
        this._keydownEvents.complete(),
        this._outsidePointerEvents.complete(),
        this._outsideClickDispatcher.remove(this),
        this._host?.remove(),
        this._afterNextRenderRef?.destroy(),
        (this._previousHostParent = this._pane = this._host = null),
        i && this._detachments.next(),
        this._detachments.complete(),
        this._afterRenderRef.destroy(),
        this._renders.complete();
    }
    hasAttached() {
      return this._portalOutlet.hasAttached();
    }
    backdropClick() {
      return this._backdropClick;
    }
    attachments() {
      return this._attachments;
    }
    detachments() {
      return this._detachments;
    }
    keydownEvents() {
      return this._keydownEvents;
    }
    outsidePointerEvents() {
      return this._outsidePointerEvents;
    }
    getConfig() {
      return this._config;
    }
    updatePosition() {
      this._positionStrategy && this._positionStrategy.apply();
    }
    updatePositionStrategy(i) {
      i !== this._positionStrategy &&
        (this._positionStrategy && this._positionStrategy.dispose(),
        (this._positionStrategy = i),
        this.hasAttached() && (i.attach(this), this.updatePosition()));
    }
    updateSize(i) {
      (this._config = W(W({}, this._config), i)), this._updateElementSize();
    }
    setDirection(i) {
      (this._config = Ce(W({}, this._config), { direction: i })),
        this._updateElementDirection();
    }
    addPanelClass(i) {
      this._pane && this._toggleClasses(this._pane, i, !0);
    }
    removePanelClass(i) {
      this._pane && this._toggleClasses(this._pane, i, !1);
    }
    getDirection() {
      let i = this._config.direction;
      return i ? (typeof i == "string" ? i : i.value) : "ltr";
    }
    updateScrollStrategy(i) {
      i !== this._scrollStrategy &&
        (this._disposeScrollStrategy(),
        (this._scrollStrategy = i),
        this.hasAttached() && (i.attach(this), i.enable()));
    }
    _updateElementDirection() {
      this._host.setAttribute("dir", this.getDirection());
    }
    _updateElementSize() {
      if (!this._pane) return;
      let i = this._pane.style;
      (i.width = Qt(this._config.width)),
        (i.height = Qt(this._config.height)),
        (i.minWidth = Qt(this._config.minWidth)),
        (i.minHeight = Qt(this._config.minHeight)),
        (i.maxWidth = Qt(this._config.maxWidth)),
        (i.maxHeight = Qt(this._config.maxHeight));
    }
    _togglePointerEvents(i) {
      this._pane.style.pointerEvents = i ? "" : "none";
    }
    _attachBackdrop() {
      let i = "cdk-overlay-backdrop-showing";
      (this._backdropElement = this._document.createElement("div")),
        this._backdropElement.classList.add("cdk-overlay-backdrop"),
        this._animationsDisabled &&
          this._backdropElement.classList.add(
            "cdk-overlay-backdrop-noop-animation"
          ),
        this._config.backdropClass &&
          this._toggleClasses(
            this._backdropElement,
            this._config.backdropClass,
            !0
          ),
        this._host.parentElement.insertBefore(
          this._backdropElement,
          this._host
        ),
        this._backdropElement.addEventListener(
          "click",
          this._backdropClickHandler
        ),
        !this._animationsDisabled && typeof requestAnimationFrame < "u"
          ? this._ngZone.runOutsideAngular(() => {
              requestAnimationFrame(() => {
                this._backdropElement && this._backdropElement.classList.add(i);
              });
            })
          : this._backdropElement.classList.add(i);
    }
    _updateStackingOrder() {
      this._host.nextSibling && this._host.parentNode.appendChild(this._host);
    }
    detachBackdrop() {
      let i = this._backdropElement;
      if (i) {
        if (this._animationsDisabled) {
          this._disposeBackdrop(i);
          return;
        }
        i.classList.remove("cdk-overlay-backdrop-showing"),
          this._ngZone.runOutsideAngular(() => {
            i.addEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            );
          }),
          (i.style.pointerEvents = "none"),
          (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
            setTimeout(() => {
              this._disposeBackdrop(i);
            }, 500)
          ));
      }
    }
    _toggleClasses(i, e, t) {
      let r = Da(e || []).filter((o) => !!o);
      r.length && (t ? i.classList.add(...r) : i.classList.remove(...r));
    }
    _detachContentWhenEmpty() {
      this._ngZone.runOutsideAngular(() => {
        let i = this._renders
          .pipe(Ut(zo(this._attachments, this._detachments)))
          .subscribe(() => {
            (!this._pane || !this._host || this._pane.children.length === 0) &&
              (this._pane &&
                this._config.panelClass &&
                this._toggleClasses(this._pane, this._config.panelClass, !1),
              this._host &&
                this._host.parentElement &&
                ((this._previousHostParent = this._host.parentElement),
                this._host.remove()),
              i.unsubscribe());
          });
      });
    }
    _disposeScrollStrategy() {
      let i = this._scrollStrategy;
      i && (i.disable(), i.detach && i.detach());
    }
    _disposeBackdrop(i) {
      i &&
        (i.removeEventListener("click", this._backdropClickHandler),
        i.removeEventListener(
          "transitionend",
          this._backdropTransitionendHandler
        ),
        i.remove(),
        this._backdropElement === i && (this._backdropElement = null)),
        this._backdropTimeout &&
          (clearTimeout(this._backdropTimeout),
          (this._backdropTimeout = void 0));
    }
  },
  y1 = "cdk-overlay-connected-position-bounding-box",
  hO = /([A-Za-z%]+)$/,
  jd = class {
    get positions() {
      return this._preferredPositions;
    }
    constructor(i, e, t, r, o) {
      (this._viewportRuler = e),
        (this._document = t),
        (this._platform = r),
        (this._overlayContainer = o),
        (this._lastBoundingBoxSize = { width: 0, height: 0 }),
        (this._isPushed = !1),
        (this._canPush = !0),
        (this._growAfterOpen = !1),
        (this._hasFlexibleDimensions = !0),
        (this._positionLocked = !1),
        (this._viewportMargin = 0),
        (this._scrollables = []),
        (this._preferredPositions = []),
        (this._positionChanges = new Oe()),
        (this._resizeSubscription = zi.EMPTY),
        (this._offsetX = 0),
        (this._offsetY = 0),
        (this._appliedPanelClasses = []),
        (this.positionChanges = this._positionChanges),
        this.setOrigin(i);
    }
    attach(i) {
      this._overlayRef && this._overlayRef,
        this._validatePositions(),
        i.hostElement.classList.add(y1),
        (this._overlayRef = i),
        (this._boundingBox = i.hostElement),
        (this._pane = i.overlayElement),
        (this._isDisposed = !1),
        (this._isInitialRender = !0),
        (this._lastPosition = null),
        this._resizeSubscription.unsubscribe(),
        (this._resizeSubscription = this._viewportRuler
          .change()
          .subscribe(() => {
            (this._isInitialRender = !0), this.apply();
          }));
    }
    apply() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      if (
        !this._isInitialRender &&
        this._positionLocked &&
        this._lastPosition
      ) {
        this.reapplyLastPosition();
        return;
      }
      this._clearPanelClasses(),
        this._resetOverlayElementStyles(),
        this._resetBoundingBoxStyles(),
        (this._viewportRect = this._getNarrowedViewportRect()),
        (this._originRect = this._getOriginRect()),
        (this._overlayRect = this._pane.getBoundingClientRect()),
        (this._containerRect = this._overlayContainer
          .getContainerElement()
          .getBoundingClientRect());
      let i = this._originRect,
        e = this._overlayRect,
        t = this._viewportRect,
        r = this._containerRect,
        o = [],
        a;
      for (let l of this._preferredPositions) {
        let u = this._getOriginPoint(i, r, l),
          f = this._getOverlayPoint(u, e, l),
          v = this._getOverlayFit(f, e, t, l);
        if (v.isCompletelyWithinViewport) {
          (this._isPushed = !1), this._applyPosition(l, u);
          return;
        }
        if (this._canFitWithFlexibleDimensions(v, f, t)) {
          o.push({
            position: l,
            origin: u,
            overlayRect: e,
            boundingBoxRect: this._calculateBoundingBoxRect(u, l),
          });
          continue;
        }
        (!a || a.overlayFit.visibleArea < v.visibleArea) &&
          (a = {
            overlayFit: v,
            overlayPoint: f,
            originPoint: u,
            position: l,
            overlayRect: e,
          });
      }
      if (o.length) {
        let l = null,
          u = -1;
        for (let f of o) {
          let v =
            f.boundingBoxRect.width *
            f.boundingBoxRect.height *
            (f.position.weight || 1);
          v > u && ((u = v), (l = f));
        }
        (this._isPushed = !1), this._applyPosition(l.position, l.origin);
        return;
      }
      if (this._canPush) {
        (this._isPushed = !0), this._applyPosition(a.position, a.originPoint);
        return;
      }
      this._applyPosition(a.position, a.originPoint);
    }
    detach() {
      this._clearPanelClasses(),
        (this._lastPosition = null),
        (this._previousPushAmount = null),
        this._resizeSubscription.unsubscribe();
    }
    dispose() {
      this._isDisposed ||
        (this._boundingBox &&
          Eo(this._boundingBox.style, {
            top: "",
            left: "",
            right: "",
            bottom: "",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          }),
        this._pane && this._resetOverlayElementStyles(),
        this._overlayRef && this._overlayRef.hostElement.classList.remove(y1),
        this.detach(),
        this._positionChanges.complete(),
        (this._overlayRef = this._boundingBox = null),
        (this._isDisposed = !0));
    }
    reapplyLastPosition() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      let i = this._lastPosition;
      if (i) {
        (this._originRect = this._getOriginRect()),
          (this._overlayRect = this._pane.getBoundingClientRect()),
          (this._viewportRect = this._getNarrowedViewportRect()),
          (this._containerRect = this._overlayContainer
            .getContainerElement()
            .getBoundingClientRect());
        let e = this._getOriginPoint(this._originRect, this._containerRect, i);
        this._applyPosition(i, e);
      } else this.apply();
    }
    withScrollableContainers(i) {
      return (this._scrollables = i), this;
    }
    withPositions(i) {
      return (
        (this._preferredPositions = i),
        i.indexOf(this._lastPosition) === -1 && (this._lastPosition = null),
        this._validatePositions(),
        this
      );
    }
    withViewportMargin(i) {
      return (this._viewportMargin = i), this;
    }
    withFlexibleDimensions(i = !0) {
      return (this._hasFlexibleDimensions = i), this;
    }
    withGrowAfterOpen(i = !0) {
      return (this._growAfterOpen = i), this;
    }
    withPush(i = !0) {
      return (this._canPush = i), this;
    }
    withLockedPosition(i = !0) {
      return (this._positionLocked = i), this;
    }
    setOrigin(i) {
      return (this._origin = i), this;
    }
    withDefaultOffsetX(i) {
      return (this._offsetX = i), this;
    }
    withDefaultOffsetY(i) {
      return (this._offsetY = i), this;
    }
    withTransformOriginOn(i) {
      return (this._transformOriginSelector = i), this;
    }
    _getOriginPoint(i, e, t) {
      let r;
      if (t.originX == "center") r = i.left + i.width / 2;
      else {
        let a = this._isRtl() ? i.right : i.left,
          l = this._isRtl() ? i.left : i.right;
        r = t.originX == "start" ? a : l;
      }
      e.left < 0 && (r -= e.left);
      let o;
      return (
        t.originY == "center"
          ? (o = i.top + i.height / 2)
          : (o = t.originY == "top" ? i.top : i.bottom),
        e.top < 0 && (o -= e.top),
        { x: r, y: o }
      );
    }
    _getOverlayPoint(i, e, t) {
      let r;
      t.overlayX == "center"
        ? (r = -e.width / 2)
        : t.overlayX === "start"
        ? (r = this._isRtl() ? -e.width : 0)
        : (r = this._isRtl() ? 0 : -e.width);
      let o;
      return (
        t.overlayY == "center"
          ? (o = -e.height / 2)
          : (o = t.overlayY == "top" ? 0 : -e.height),
        { x: i.x + r, y: i.y + o }
      );
    }
    _getOverlayFit(i, e, t, r) {
      let o = C1(e),
        { x: a, y: l } = i,
        u = this._getOffset(r, "x"),
        f = this._getOffset(r, "y");
      u && (a += u), f && (l += f);
      let v = 0 - a,
        D = a + o.width - t.width,
        T = 0 - l,
        M = l + o.height - t.height,
        k = this._subtractOverflows(o.width, v, D),
        V = this._subtractOverflows(o.height, T, M),
        A = k * V;
      return {
        visibleArea: A,
        isCompletelyWithinViewport: o.width * o.height === A,
        fitsInViewportVertically: V === o.height,
        fitsInViewportHorizontally: k == o.width,
      };
    }
    _canFitWithFlexibleDimensions(i, e, t) {
      if (this._hasFlexibleDimensions) {
        let r = t.bottom - e.y,
          o = t.right - e.x,
          a = x1(this._overlayRef.getConfig().minHeight),
          l = x1(this._overlayRef.getConfig().minWidth),
          u = i.fitsInViewportVertically || (a != null && a <= r),
          f = i.fitsInViewportHorizontally || (l != null && l <= o);
        return u && f;
      }
      return !1;
    }
    _pushOverlayOnScreen(i, e, t) {
      if (this._previousPushAmount && this._positionLocked)
        return {
          x: i.x + this._previousPushAmount.x,
          y: i.y + this._previousPushAmount.y,
        };
      let r = C1(e),
        o = this._viewportRect,
        a = Math.max(i.x + r.width - o.width, 0),
        l = Math.max(i.y + r.height - o.height, 0),
        u = Math.max(o.top - t.top - i.y, 0),
        f = Math.max(o.left - t.left - i.x, 0),
        v = 0,
        D = 0;
      return (
        r.width <= o.width
          ? (v = f || -a)
          : (v = i.x < this._viewportMargin ? o.left - t.left - i.x : 0),
        r.height <= o.height
          ? (D = u || -l)
          : (D = i.y < this._viewportMargin ? o.top - t.top - i.y : 0),
        (this._previousPushAmount = { x: v, y: D }),
        { x: i.x + v, y: i.y + D }
      );
    }
    _applyPosition(i, e) {
      if (
        (this._setTransformOrigin(i),
        this._setOverlayElementStyles(e, i),
        this._setBoundingBoxStyles(e, i),
        i.panelClass && this._addPanelClasses(i.panelClass),
        this._positionChanges.observers.length)
      ) {
        let t = this._getScrollVisibility();
        if (
          i !== this._lastPosition ||
          !this._lastScrollVisibility ||
          !pO(this._lastScrollVisibility, t)
        ) {
          let r = new zm(i, t);
          this._positionChanges.next(r);
        }
        this._lastScrollVisibility = t;
      }
      (this._lastPosition = i), (this._isInitialRender = !1);
    }
    _setTransformOrigin(i) {
      if (!this._transformOriginSelector) return;
      let e = this._boundingBox.querySelectorAll(this._transformOriginSelector),
        t,
        r = i.overlayY;
      i.overlayX === "center"
        ? (t = "center")
        : this._isRtl()
        ? (t = i.overlayX === "start" ? "right" : "left")
        : (t = i.overlayX === "start" ? "left" : "right");
      for (let o = 0; o < e.length; o++)
        e[o].style.transformOrigin = `${t} ${r}`;
    }
    _calculateBoundingBoxRect(i, e) {
      let t = this._viewportRect,
        r = this._isRtl(),
        o,
        a,
        l;
      if (e.overlayY === "top")
        (a = i.y), (o = t.height - a + this._viewportMargin);
      else if (e.overlayY === "bottom")
        (l = t.height - i.y + this._viewportMargin * 2),
          (o = t.height - l + this._viewportMargin);
      else {
        let M = Math.min(t.bottom - i.y + t.top, i.y),
          k = this._lastBoundingBoxSize.height;
        (o = M * 2),
          (a = i.y - M),
          o > k &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (a = i.y - k / 2);
      }
      let u = (e.overlayX === "start" && !r) || (e.overlayX === "end" && r),
        f = (e.overlayX === "end" && !r) || (e.overlayX === "start" && r),
        v,
        D,
        T;
      if (f)
        (T = t.width - i.x + this._viewportMargin * 2),
          (v = i.x - this._viewportMargin);
      else if (u) (D = i.x), (v = t.right - i.x);
      else {
        let M = Math.min(t.right - i.x + t.left, i.x),
          k = this._lastBoundingBoxSize.width;
        (v = M * 2),
          (D = i.x - M),
          v > k &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (D = i.x - k / 2);
      }
      return { top: a, left: D, bottom: l, right: T, width: v, height: o };
    }
    _setBoundingBoxStyles(i, e) {
      let t = this._calculateBoundingBoxRect(i, e);
      !this._isInitialRender &&
        !this._growAfterOpen &&
        ((t.height = Math.min(t.height, this._lastBoundingBoxSize.height)),
        (t.width = Math.min(t.width, this._lastBoundingBoxSize.width)));
      let r = {};
      if (this._hasExactPosition())
        (r.top = r.left = "0"),
          (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
          (r.width = r.height = "100%");
      else {
        let o = this._overlayRef.getConfig().maxHeight,
          a = this._overlayRef.getConfig().maxWidth;
        (r.height = Qt(t.height)),
          (r.top = Qt(t.top)),
          (r.bottom = Qt(t.bottom)),
          (r.width = Qt(t.width)),
          (r.left = Qt(t.left)),
          (r.right = Qt(t.right)),
          e.overlayX === "center"
            ? (r.alignItems = "center")
            : (r.alignItems = e.overlayX === "end" ? "flex-end" : "flex-start"),
          e.overlayY === "center"
            ? (r.justifyContent = "center")
            : (r.justifyContent =
                e.overlayY === "bottom" ? "flex-end" : "flex-start"),
          o && (r.maxHeight = Qt(o)),
          a && (r.maxWidth = Qt(a));
      }
      (this._lastBoundingBoxSize = t), Eo(this._boundingBox.style, r);
    }
    _resetBoundingBoxStyles() {
      Eo(this._boundingBox.style, {
        top: "0",
        left: "0",
        right: "0",
        bottom: "0",
        height: "",
        width: "",
        alignItems: "",
        justifyContent: "",
      });
    }
    _resetOverlayElementStyles() {
      Eo(this._pane.style, {
        top: "",
        left: "",
        bottom: "",
        right: "",
        position: "",
        transform: "",
      });
    }
    _setOverlayElementStyles(i, e) {
      let t = {},
        r = this._hasExactPosition(),
        o = this._hasFlexibleDimensions,
        a = this._overlayRef.getConfig();
      if (r) {
        let v = this._viewportRuler.getViewportScrollPosition();
        Eo(t, this._getExactOverlayY(e, i, v)),
          Eo(t, this._getExactOverlayX(e, i, v));
      } else t.position = "static";
      let l = "",
        u = this._getOffset(e, "x"),
        f = this._getOffset(e, "y");
      u && (l += `translateX(${u}px) `),
        f && (l += `translateY(${f}px)`),
        (t.transform = l.trim()),
        a.maxHeight &&
          (r ? (t.maxHeight = Qt(a.maxHeight)) : o && (t.maxHeight = "")),
        a.maxWidth &&
          (r ? (t.maxWidth = Qt(a.maxWidth)) : o && (t.maxWidth = "")),
        Eo(this._pane.style, t);
    }
    _getExactOverlayY(i, e, t) {
      let r = { top: "", bottom: "" },
        o = this._getOverlayPoint(e, this._overlayRect, i);
      if (
        (this._isPushed &&
          (o = this._pushOverlayOnScreen(o, this._overlayRect, t)),
        i.overlayY === "bottom")
      ) {
        let a = this._document.documentElement.clientHeight;
        r.bottom = `${a - (o.y + this._overlayRect.height)}px`;
      } else r.top = Qt(o.y);
      return r;
    }
    _getExactOverlayX(i, e, t) {
      let r = { left: "", right: "" },
        o = this._getOverlayPoint(e, this._overlayRect, i);
      this._isPushed &&
        (o = this._pushOverlayOnScreen(o, this._overlayRect, t));
      let a;
      if (
        (this._isRtl()
          ? (a = i.overlayX === "end" ? "left" : "right")
          : (a = i.overlayX === "end" ? "right" : "left"),
        a === "right")
      ) {
        let l = this._document.documentElement.clientWidth;
        r.right = `${l - (o.x + this._overlayRect.width)}px`;
      } else r.left = Qt(o.x);
      return r;
    }
    _getScrollVisibility() {
      let i = this._getOriginRect(),
        e = this._pane.getBoundingClientRect(),
        t = this._scrollables.map((r) =>
          r.getElementRef().nativeElement.getBoundingClientRect()
        );
      return {
        isOriginClipped: b1(i, t),
        isOriginOutsideView: jm(i, t),
        isOverlayClipped: b1(e, t),
        isOverlayOutsideView: jm(e, t),
      };
    }
    _subtractOverflows(i, ...e) {
      return e.reduce((t, r) => t - Math.max(r, 0), i);
    }
    _getNarrowedViewportRect() {
      let i = this._document.documentElement.clientWidth,
        e = this._document.documentElement.clientHeight,
        t = this._viewportRuler.getViewportScrollPosition();
      return {
        top: t.top + this._viewportMargin,
        left: t.left + this._viewportMargin,
        right: t.left + i - this._viewportMargin,
        bottom: t.top + e - this._viewportMargin,
        width: i - 2 * this._viewportMargin,
        height: e - 2 * this._viewportMargin,
      };
    }
    _isRtl() {
      return this._overlayRef.getDirection() === "rtl";
    }
    _hasExactPosition() {
      return !this._hasFlexibleDimensions || this._isPushed;
    }
    _getOffset(i, e) {
      return e === "x"
        ? i.offsetX == null
          ? this._offsetX
          : i.offsetX
        : i.offsetY == null
        ? this._offsetY
        : i.offsetY;
    }
    _validatePositions() {}
    _addPanelClasses(i) {
      this._pane &&
        Da(i).forEach((e) => {
          e !== "" &&
            this._appliedPanelClasses.indexOf(e) === -1 &&
            (this._appliedPanelClasses.push(e), this._pane.classList.add(e));
        });
    }
    _clearPanelClasses() {
      this._pane &&
        (this._appliedPanelClasses.forEach((i) => {
          this._pane.classList.remove(i);
        }),
        (this._appliedPanelClasses = []));
    }
    _getOriginRect() {
      let i = this._origin;
      if (i instanceof Fe) return i.nativeElement.getBoundingClientRect();
      if (i instanceof Element) return i.getBoundingClientRect();
      let e = i.width || 0,
        t = i.height || 0;
      return {
        top: i.y,
        bottom: i.y + t,
        left: i.x,
        right: i.x + e,
        height: t,
        width: e,
      };
    }
  };
function Eo(n, i) {
  for (let e in i) i.hasOwnProperty(e) && (n[e] = i[e]);
  return n;
}
function x1(n) {
  if (typeof n != "number" && n != null) {
    let [i, e] = n.split(hO);
    return !e || e === "px" ? parseFloat(i) : null;
  }
  return n || null;
}
function C1(n) {
  return {
    top: Math.floor(n.top),
    right: Math.floor(n.right),
    bottom: Math.floor(n.bottom),
    left: Math.floor(n.left),
    width: Math.floor(n.width),
    height: Math.floor(n.height),
  };
}
function pO(n, i) {
  return n === i
    ? !0
    : n.isOriginClipped === i.isOriginClipped &&
        n.isOriginOutsideView === i.isOriginOutsideView &&
        n.isOverlayClipped === i.isOverlayClipped &&
        n.isOverlayOutsideView === i.isOverlayOutsideView;
}
var w1 = "cdk-global-overlay-wrapper",
  Wm = class {
    constructor() {
      (this._cssPosition = "static"),
        (this._topOffset = ""),
        (this._bottomOffset = ""),
        (this._alignItems = ""),
        (this._xPosition = ""),
        (this._xOffset = ""),
        (this._width = ""),
        (this._height = ""),
        (this._isDisposed = !1);
    }
    attach(i) {
      let e = i.getConfig();
      (this._overlayRef = i),
        this._width && !e.width && i.updateSize({ width: this._width }),
        this._height && !e.height && i.updateSize({ height: this._height }),
        i.hostElement.classList.add(w1),
        (this._isDisposed = !1);
    }
    top(i = "") {
      return (
        (this._bottomOffset = ""),
        (this._topOffset = i),
        (this._alignItems = "flex-start"),
        this
      );
    }
    left(i = "") {
      return (this._xOffset = i), (this._xPosition = "left"), this;
    }
    bottom(i = "") {
      return (
        (this._topOffset = ""),
        (this._bottomOffset = i),
        (this._alignItems = "flex-end"),
        this
      );
    }
    right(i = "") {
      return (this._xOffset = i), (this._xPosition = "right"), this;
    }
    start(i = "") {
      return (this._xOffset = i), (this._xPosition = "start"), this;
    }
    end(i = "") {
      return (this._xOffset = i), (this._xPosition = "end"), this;
    }
    width(i = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ width: i })
          : (this._width = i),
        this
      );
    }
    height(i = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ height: i })
          : (this._height = i),
        this
      );
    }
    centerHorizontally(i = "") {
      return this.left(i), (this._xPosition = "center"), this;
    }
    centerVertically(i = "") {
      return this.top(i), (this._alignItems = "center"), this;
    }
    apply() {
      if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
      let i = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement.style,
        t = this._overlayRef.getConfig(),
        { width: r, height: o, maxWidth: a, maxHeight: l } = t,
        u =
          (r === "100%" || r === "100vw") &&
          (!a || a === "100%" || a === "100vw"),
        f =
          (o === "100%" || o === "100vh") &&
          (!l || l === "100%" || l === "100vh"),
        v = this._xPosition,
        D = this._xOffset,
        T = this._overlayRef.getConfig().direction === "rtl",
        M = "",
        k = "",
        V = "";
      u
        ? (V = "flex-start")
        : v === "center"
        ? ((V = "center"), T ? (k = D) : (M = D))
        : T
        ? v === "left" || v === "end"
          ? ((V = "flex-end"), (M = D))
          : (v === "right" || v === "start") && ((V = "flex-start"), (k = D))
        : v === "left" || v === "start"
        ? ((V = "flex-start"), (M = D))
        : (v === "right" || v === "end") && ((V = "flex-end"), (k = D)),
        (i.position = this._cssPosition),
        (i.marginLeft = u ? "0" : M),
        (i.marginTop = f ? "0" : this._topOffset),
        (i.marginBottom = this._bottomOffset),
        (i.marginRight = u ? "0" : k),
        (e.justifyContent = V),
        (e.alignItems = f ? "flex-start" : this._alignItems);
    }
    dispose() {
      if (this._isDisposed || !this._overlayRef) return;
      let i = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement,
        t = e.style;
      e.classList.remove(w1),
        (t.justifyContent =
          t.alignItems =
          i.marginTop =
          i.marginBottom =
          i.marginLeft =
          i.marginRight =
          i.position =
            ""),
        (this._overlayRef = null),
        (this._isDisposed = !0);
    }
  },
  mO = (() => {
    class n {
      constructor(e, t, r, o) {
        (this._viewportRuler = e),
          (this._document = t),
          (this._platform = r),
          (this._overlayContainer = o);
      }
      global() {
        return new Wm();
      }
      flexibleConnectedTo(e) {
        return new jd(
          e,
          this._viewportRuler,
          this._document,
          this._platform,
          this._overlayContainer
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Fm), Q(ke), Q(Ot), Q(S1));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  fO = 0,
  Ta = (() => {
    class n {
      constructor(e, t, r, o, a, l, u, f, v, D, T, M) {
        (this.scrollStrategies = e),
          (this._overlayContainer = t),
          (this._componentFactoryResolver = r),
          (this._positionBuilder = o),
          (this._keyboardDispatcher = a),
          (this._injector = l),
          (this._ngZone = u),
          (this._document = f),
          (this._directionality = v),
          (this._location = D),
          (this._outsideClickDispatcher = T),
          (this._animationsModuleType = M);
      }
      create(e) {
        let t = this._createHostElement(),
          r = this._createPaneElement(t),
          o = this._createPortalOutlet(r),
          a = new Hd(e);
        return (
          (a.direction = a.direction || this._directionality.value),
          new $m(
            o,
            t,
            r,
            a,
            this._ngZone,
            this._keyboardDispatcher,
            this._document,
            this._location,
            this._outsideClickDispatcher,
            this._animationsModuleType === "NoopAnimations",
            this._injector.get(an)
          )
        );
      }
      position() {
        return this._positionBuilder;
      }
      _createPaneElement(e) {
        let t = this._document.createElement("div");
        return (
          (t.id = `cdk-overlay-${fO++}`),
          t.classList.add("cdk-overlay-pane"),
          e.appendChild(t),
          t
        );
      }
      _createHostElement() {
        let e = this._document.createElement("div");
        return this._overlayContainer.getContainerElement().appendChild(e), e;
      }
      _createPortalOutlet(e) {
        return (
          this._appRef || (this._appRef = this._injector.get(Li)),
          new Ld(
            e,
            this._componentFactoryResolver,
            this._appRef,
            this._injector,
            this._document
          )
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            Q(cO),
            Q(S1),
            Q(oo),
            Q(mO),
            Q(dO),
            Q(Dt),
            Q(Te),
            Q(ke),
            Q(Ma),
            Q(dr),
            Q(uO),
            Q(Wn, 8)
          );
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var gO = new we("cdk-connected-overlay-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let n = G(Ta);
    return () => n.scrollStrategies.reposition();
  },
});
function _O(n) {
  return () => n.scrollStrategies.reposition();
}
var bO = { provide: gO, deps: [Ta], useFactory: _O },
  M1 = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ providers: [Ta, bO], imports: [Yr, Vd, Nm, Nm] });
      }
    }
    return n;
  })();
function vO() {
  return !0;
}
var yO = new we("mat-sanity-checks", { providedIn: "root", factory: vO }),
  Ji = (() => {
    class n {
      constructor(e, t, r) {
        (this._sanityChecks = t),
          (this._document = r),
          (this._hasDoneGlobalChecks = !1),
          e._applyBodyHighContrastModeCssClasses(),
          this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
      }
      _checkIsEnabled(e) {
        return dl()
          ? !1
          : typeof this._sanityChecks == "boolean"
          ? this._sanityChecks
          : !!this._sanityChecks[e];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Rm), Q(yO, 8), Q(ke));
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [Yr, Yr] });
      }
    }
    return n;
  })();
var T1 = new we("MAT_DATE_LOCALE", { providedIn: "root", factory: xO });
function xO() {
  return G(lh);
}
var Ui = class {
    constructor() {
      (this._localeChanges = new Oe()),
        (this.localeChanges = this._localeChanges);
    }
    getValidDateOrNull(i) {
      return this.isDateInstance(i) && this.isValid(i) ? i : null;
    }
    deserialize(i) {
      return i == null || (this.isDateInstance(i) && this.isValid(i))
        ? i
        : this.invalid();
    }
    setLocale(i) {
      (this.locale = i), this._localeChanges.next();
    }
    compareDate(i, e) {
      return (
        this.getYear(i) - this.getYear(e) ||
        this.getMonth(i) - this.getMonth(e) ||
        this.getDate(i) - this.getDate(e)
      );
    }
    sameDate(i, e) {
      if (i && e) {
        let t = this.isValid(i),
          r = this.isValid(e);
        return t && r ? !this.compareDate(i, e) : t == r;
      }
      return i == e;
    }
    clampDate(i, e, t) {
      return e && this.compareDate(i, e) < 0
        ? e
        : t && this.compareDate(i, t) > 0
        ? t
        : i;
    }
  },
  Ea = new we("mat-date-formats"),
  CO =
    /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
function Gm(n, i) {
  let e = Array(n);
  for (let t = 0; t < n; t++) e[t] = i(t);
  return e;
}
var wO = (() => {
    class n extends Ui {
      constructor(e) {
        super(),
          (this.useUtcForDisplay = !1),
          (this._matDateLocale = G(T1, { optional: !0 })),
          e !== void 0 && (this._matDateLocale = e),
          super.setLocale(this._matDateLocale);
      }
      getYear(e) {
        return e.getFullYear();
      }
      getMonth(e) {
        return e.getMonth();
      }
      getDate(e) {
        return e.getDate();
      }
      getDayOfWeek(e) {
        return e.getDay();
      }
      getMonthNames(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          month: e,
          timeZone: "utc",
        });
        return Gm(12, (r) => this._format(t, new Date(2017, r, 1)));
      }
      getDateNames() {
        let e = new Intl.DateTimeFormat(this.locale, {
          day: "numeric",
          timeZone: "utc",
        });
        return Gm(31, (t) => this._format(e, new Date(2017, 0, t + 1)));
      }
      getDayOfWeekNames(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          weekday: e,
          timeZone: "utc",
        });
        return Gm(7, (r) => this._format(t, new Date(2017, 0, r + 1)));
      }
      getYearName(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          year: "numeric",
          timeZone: "utc",
        });
        return this._format(t, e);
      }
      getFirstDayOfWeek() {
        if (typeof Intl < "u" && Intl.Locale) {
          let e = new Intl.Locale(this.locale),
            t = (e.getWeekInfo?.() || e.weekInfo)?.firstDay ?? 0;
          return t === 7 ? 0 : t;
        }
        return 0;
      }
      getNumDaysInMonth(e) {
        return this.getDate(
          this._createDateWithOverflow(this.getYear(e), this.getMonth(e) + 1, 0)
        );
      }
      clone(e) {
        return new Date(e.getTime());
      }
      createDate(e, t, r) {
        let o = this._createDateWithOverflow(e, t, r);
        return o.getMonth() != t, o;
      }
      today() {
        return new Date();
      }
      parse(e, t) {
        return typeof e == "number"
          ? new Date(e)
          : e
          ? new Date(Date.parse(e))
          : null;
      }
      format(e, t) {
        if (!this.isValid(e))
          throw Error("NativeDateAdapter: Cannot format invalid date.");
        let r = new Intl.DateTimeFormat(
          this.locale,
          Ce(W({}, t), { timeZone: "utc" })
        );
        return this._format(r, e);
      }
      addCalendarYears(e, t) {
        return this.addCalendarMonths(e, t * 12);
      }
      addCalendarMonths(e, t) {
        let r = this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e) + t,
          this.getDate(e)
        );
        return (
          this.getMonth(r) != (((this.getMonth(e) + t) % 12) + 12) % 12 &&
            (r = this._createDateWithOverflow(
              this.getYear(r),
              this.getMonth(r),
              0
            )),
          r
        );
      }
      addCalendarDays(e, t) {
        return this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e),
          this.getDate(e) + t
        );
      }
      toIso8601(e) {
        return [
          e.getUTCFullYear(),
          this._2digit(e.getUTCMonth() + 1),
          this._2digit(e.getUTCDate()),
        ].join("-");
      }
      deserialize(e) {
        if (typeof e == "string") {
          if (!e) return null;
          if (CO.test(e)) {
            let t = new Date(e);
            if (this.isValid(t)) return t;
          }
        }
        return super.deserialize(e);
      }
      isDateInstance(e) {
        return e instanceof Date;
      }
      isValid(e) {
        return !isNaN(e.getTime());
      }
      invalid() {
        return new Date(NaN);
      }
      _createDateWithOverflow(e, t, r) {
        let o = new Date();
        return o.setFullYear(e, t, r), o.setHours(0, 0, 0, 0), o;
      }
      _2digit(e) {
        return ("00" + e).slice(-2);
      }
      _format(e, t) {
        let r = new Date();
        return (
          r.setUTCFullYear(t.getFullYear(), t.getMonth(), t.getDate()),
          r.setUTCHours(
            t.getHours(),
            t.getMinutes(),
            t.getSeconds(),
            t.getMilliseconds()
          ),
          e.format(r)
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(T1, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  DO = {
    parse: { dateInput: null },
    display: {
      dateInput: { year: "numeric", month: "numeric", day: "numeric" },
      monthYearLabel: { year: "numeric", month: "short" },
      dateA11yLabel: { year: "numeric", month: "long", day: "numeric" },
      monthYearA11yLabel: { year: "numeric", month: "long" },
    },
  };
var zd = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ providers: [SO()] });
    }
  }
  return n;
})();
function SO(n = DO) {
  return [
    { provide: Ui, useClass: wO },
    { provide: Ea, useValue: n },
  ];
}
var fn = (function (n) {
    return (
      (n[(n.FADING_IN = 0)] = "FADING_IN"),
      (n[(n.VISIBLE = 1)] = "VISIBLE"),
      (n[(n.FADING_OUT = 2)] = "FADING_OUT"),
      (n[(n.HIDDEN = 3)] = "HIDDEN"),
      n
    );
  })(fn || {}),
  Km = class {
    constructor(i, e, t, r = !1) {
      (this._renderer = i),
        (this.element = e),
        (this.config = t),
        (this._animationForciblyDisabledThroughCss = r),
        (this.state = fn.HIDDEN);
    }
    fadeOut() {
      this._renderer.fadeOutRipple(this);
    }
  },
  E1 = tr({ passive: !0, capture: !0 }),
  Qm = class {
    constructor() {
      (this._events = new Map()),
        (this._delegateEventHandler = (i) => {
          let e = mn(i);
          e &&
            this._events.get(i.type)?.forEach((t, r) => {
              (r === e || r.contains(e)) && t.forEach((o) => o.handleEvent(i));
            });
        });
    }
    addHandler(i, e, t, r) {
      let o = this._events.get(e);
      if (o) {
        let a = o.get(t);
        a ? a.add(r) : o.set(t, new Set([r]));
      } else
        this._events.set(e, new Map([[t, new Set([r])]])),
          i.runOutsideAngular(() => {
            document.addEventListener(e, this._delegateEventHandler, E1);
          });
    }
    removeHandler(i, e, t) {
      let r = this._events.get(i);
      if (!r) return;
      let o = r.get(e);
      o &&
        (o.delete(t),
        o.size === 0 && r.delete(e),
        r.size === 0 &&
          (this._events.delete(i),
          document.removeEventListener(i, this._delegateEventHandler, E1)));
    }
  },
  O1 = { enterDuration: 225, exitDuration: 150 },
  MO = 800,
  k1 = tr({ passive: !0, capture: !0 }),
  P1 = ["mousedown", "touchstart"],
  I1 = ["mouseup", "mouseleave", "touchend", "touchcancel"],
  Xm = class n {
    static {
      this._eventManager = new Qm();
    }
    constructor(i, e, t, r) {
      (this._target = i),
        (this._ngZone = e),
        (this._platform = r),
        (this._isPointerDown = !1),
        (this._activeRipples = new Map()),
        (this._pointerUpEventsRegistered = !1),
        r.isBrowser && (this._containerElement = Cr(t));
    }
    fadeInRipple(i, e, t = {}) {
      let r = (this._containerRect =
          this._containerRect ||
          this._containerElement.getBoundingClientRect()),
        o = W(W({}, O1), t.animation);
      t.centered && ((i = r.left + r.width / 2), (e = r.top + r.height / 2));
      let a = t.radius || TO(i, e, r),
        l = i - r.left,
        u = e - r.top,
        f = o.enterDuration,
        v = document.createElement("div");
      v.classList.add("mat-ripple-element"),
        (v.style.left = `${l - a}px`),
        (v.style.top = `${u - a}px`),
        (v.style.height = `${a * 2}px`),
        (v.style.width = `${a * 2}px`),
        t.color != null && (v.style.backgroundColor = t.color),
        (v.style.transitionDuration = `${f}ms`),
        this._containerElement.appendChild(v);
      let D = window.getComputedStyle(v),
        T = D.transitionProperty,
        M = D.transitionDuration,
        k =
          T === "none" ||
          M === "0s" ||
          M === "0s, 0s" ||
          (r.width === 0 && r.height === 0),
        V = new Km(this, v, t, k);
      (v.style.transform = "scale3d(1, 1, 1)"),
        (V.state = fn.FADING_IN),
        t.persistent || (this._mostRecentTransientRipple = V);
      let A = null;
      return (
        !k &&
          (f || o.exitDuration) &&
          this._ngZone.runOutsideAngular(() => {
            let E = () => {
                A && (A.fallbackTimer = null),
                  clearTimeout(se),
                  this._finishRippleTransition(V);
              },
              X = () => this._destroyRipple(V),
              se = setTimeout(X, f + 100);
            v.addEventListener("transitionend", E),
              v.addEventListener("transitioncancel", X),
              (A = {
                onTransitionEnd: E,
                onTransitionCancel: X,
                fallbackTimer: se,
              });
          }),
        this._activeRipples.set(V, A),
        (k || !f) && this._finishRippleTransition(V),
        V
      );
    }
    fadeOutRipple(i) {
      if (i.state === fn.FADING_OUT || i.state === fn.HIDDEN) return;
      let e = i.element,
        t = W(W({}, O1), i.config.animation);
      (e.style.transitionDuration = `${t.exitDuration}ms`),
        (e.style.opacity = "0"),
        (i.state = fn.FADING_OUT),
        (i._animationForciblyDisabledThroughCss || !t.exitDuration) &&
          this._finishRippleTransition(i);
    }
    fadeOutAll() {
      this._getActiveRipples().forEach((i) => i.fadeOut());
    }
    fadeOutAllNonPersistent() {
      this._getActiveRipples().forEach((i) => {
        i.config.persistent || i.fadeOut();
      });
    }
    setupTriggerEvents(i) {
      let e = Cr(i);
      !this._platform.isBrowser ||
        !e ||
        e === this._triggerElement ||
        (this._removeTriggerEvents(),
        (this._triggerElement = e),
        P1.forEach((t) => {
          n._eventManager.addHandler(this._ngZone, t, e, this);
        }));
    }
    handleEvent(i) {
      i.type === "mousedown"
        ? this._onMousedown(i)
        : i.type === "touchstart"
        ? this._onTouchStart(i)
        : this._onPointerUp(),
        this._pointerUpEventsRegistered ||
          (this._ngZone.runOutsideAngular(() => {
            I1.forEach((e) => {
              this._triggerElement.addEventListener(e, this, k1);
            });
          }),
          (this._pointerUpEventsRegistered = !0));
    }
    _finishRippleTransition(i) {
      i.state === fn.FADING_IN
        ? this._startFadeOutTransition(i)
        : i.state === fn.FADING_OUT && this._destroyRipple(i);
    }
    _startFadeOutTransition(i) {
      let e = i === this._mostRecentTransientRipple,
        { persistent: t } = i.config;
      (i.state = fn.VISIBLE), !t && (!e || !this._isPointerDown) && i.fadeOut();
    }
    _destroyRipple(i) {
      let e = this._activeRipples.get(i) ?? null;
      this._activeRipples.delete(i),
        this._activeRipples.size || (this._containerRect = null),
        i === this._mostRecentTransientRipple &&
          (this._mostRecentTransientRipple = null),
        (i.state = fn.HIDDEN),
        e !== null &&
          (i.element.removeEventListener("transitionend", e.onTransitionEnd),
          i.element.removeEventListener(
            "transitioncancel",
            e.onTransitionCancel
          ),
          e.fallbackTimer !== null && clearTimeout(e.fallbackTimer)),
        i.element.remove();
    }
    _onMousedown(i) {
      let e = Pm(i),
        t =
          this._lastTouchStartEvent &&
          Date.now() < this._lastTouchStartEvent + MO;
      !this._target.rippleDisabled &&
        !e &&
        !t &&
        ((this._isPointerDown = !0),
        this.fadeInRipple(i.clientX, i.clientY, this._target.rippleConfig));
    }
    _onTouchStart(i) {
      if (!this._target.rippleDisabled && !Im(i)) {
        (this._lastTouchStartEvent = Date.now()), (this._isPointerDown = !0);
        let e = i.changedTouches;
        if (e)
          for (let t = 0; t < e.length; t++)
            this.fadeInRipple(
              e[t].clientX,
              e[t].clientY,
              this._target.rippleConfig
            );
      }
    }
    _onPointerUp() {
      this._isPointerDown &&
        ((this._isPointerDown = !1),
        this._getActiveRipples().forEach((i) => {
          let e =
            i.state === fn.VISIBLE ||
            (i.config.terminateOnPointerUp && i.state === fn.FADING_IN);
          !i.config.persistent && e && i.fadeOut();
        }));
    }
    _getActiveRipples() {
      return Array.from(this._activeRipples.keys());
    }
    _removeTriggerEvents() {
      let i = this._triggerElement;
      i &&
        (P1.forEach((e) => n._eventManager.removeHandler(e, i, this)),
        this._pointerUpEventsRegistered &&
          (I1.forEach((e) => i.removeEventListener(e, this, k1)),
          (this._pointerUpEventsRegistered = !1)));
    }
  };
function TO(n, i, e) {
  let t = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
    r = Math.max(Math.abs(i - e.top), Math.abs(i - e.bottom));
  return Math.sqrt(t * t + r * r);
}
var N1 = new we("mat-ripple-global-options"),
  EO = (() => {
    class n {
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        e && this.fadeOutAllNonPersistent(),
          (this._disabled = e),
          this._setupTriggerEventsIfEnabled();
      }
      get trigger() {
        return this._trigger || this._elementRef.nativeElement;
      }
      set trigger(e) {
        (this._trigger = e), this._setupTriggerEventsIfEnabled();
      }
      constructor(e, t, r, o, a) {
        (this._elementRef = e),
          (this._animationMode = a),
          (this.radius = 0),
          (this._disabled = !1),
          (this._isInitialized = !1),
          (this._globalOptions = o || {}),
          (this._rippleRenderer = new Xm(this, t, e, r));
      }
      ngOnInit() {
        (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
      }
      ngOnDestroy() {
        this._rippleRenderer._removeTriggerEvents();
      }
      fadeOutAll() {
        this._rippleRenderer.fadeOutAll();
      }
      fadeOutAllNonPersistent() {
        this._rippleRenderer.fadeOutAllNonPersistent();
      }
      get rippleConfig() {
        return {
          centered: this.centered,
          radius: this.radius,
          color: this.color,
          animation: W(
            W(
              W({}, this._globalOptions.animation),
              this._animationMode === "NoopAnimations"
                ? { enterDuration: 0, exitDuration: 0 }
                : {}
            ),
            this.animation
          ),
          terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
        };
      }
      get rippleDisabled() {
        return this.disabled || !!this._globalOptions.disabled;
      }
      _setupTriggerEventsIfEnabled() {
        !this.disabled &&
          this._isInitialized &&
          this._rippleRenderer.setupTriggerEvents(this.trigger);
      }
      launch(e, t = 0, r) {
        return typeof e == "number"
          ? this._rippleRenderer.fadeInRipple(
              e,
              t,
              W(W({}, this.rippleConfig), r)
            )
          : this._rippleRenderer.fadeInRipple(
              0,
              0,
              W(W({}, this.rippleConfig), e)
            );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Fe), H(Te), H(Ot), H(N1, 8), H(Wn, 8));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "mat-ripple", ""],
            ["", "matRipple", ""],
          ],
          hostAttrs: [1, "mat-ripple"],
          hostVars: 2,
          hostBindings: function (t, r) {
            t & 2 && ne("mat-ripple-unbounded", r.unbounded);
          },
          inputs: {
            color: [0, "matRippleColor", "color"],
            unbounded: [0, "matRippleUnbounded", "unbounded"],
            centered: [0, "matRippleCentered", "centered"],
            radius: [0, "matRippleRadius", "radius"],
            animation: [0, "matRippleAnimation", "animation"],
            disabled: [0, "matRippleDisabled", "disabled"],
            trigger: [0, "matRippleTrigger", "trigger"],
          },
          exportAs: ["matRipple"],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  L1 = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [Ji, Ji] });
      }
    }
    return n;
  })();
var A1 = { capture: !0 },
  R1 = ["focus", "mousedown", "mouseenter", "touchstart"],
  Ym = "mat-ripple-loader-uninitialized",
  qm = "mat-ripple-loader-class-name",
  F1 = "mat-ripple-loader-centered",
  Ud = "mat-ripple-loader-disabled",
  V1 = (() => {
    class n {
      constructor() {
        (this._document = G(ke, { optional: !0 })),
          (this._animationMode = G(Wn, { optional: !0 })),
          (this._globalRippleOptions = G(N1, { optional: !0 })),
          (this._platform = G(Ot)),
          (this._ngZone = G(Te)),
          (this._hosts = new Map()),
          (this._onInteraction = (e) => {
            let t = mn(e);
            if (t instanceof HTMLElement) {
              let r = t.closest(
                `[${Ym}="${this._globalRippleOptions?.namespace ?? ""}"]`
              );
              r && this._createRipple(r);
            }
          }),
          this._ngZone.runOutsideAngular(() => {
            for (let e of R1)
              this._document?.addEventListener(e, this._onInteraction, A1);
          });
      }
      ngOnDestroy() {
        let e = this._hosts.keys();
        for (let t of e) this.destroyRipple(t);
        for (let t of R1)
          this._document?.removeEventListener(t, this._onInteraction, A1);
      }
      configureRipple(e, t) {
        e.setAttribute(Ym, this._globalRippleOptions?.namespace ?? ""),
          (t.className || !e.hasAttribute(qm)) &&
            e.setAttribute(qm, t.className || ""),
          t.centered && e.setAttribute(F1, ""),
          t.disabled && e.setAttribute(Ud, "");
      }
      getRipple(e) {
        return this._hosts.get(e) || this._createRipple(e);
      }
      setDisabled(e, t) {
        let r = this._hosts.get(e);
        if (r) {
          r.disabled = t;
          return;
        }
        t ? e.setAttribute(Ud, "") : e.removeAttribute(Ud);
      }
      _createRipple(e) {
        if (!this._document) return;
        let t = this._hosts.get(e);
        if (t) return t;
        e.querySelector(".mat-ripple")?.remove();
        let r = this._document.createElement("span");
        r.classList.add("mat-ripple", e.getAttribute(qm)), e.append(r);
        let o = new EO(
          new Fe(r),
          this._ngZone,
          this._platform,
          this._globalRippleOptions ? this._globalRippleOptions : void 0,
          this._animationMode ? this._animationMode : void 0
        );
        return (
          (o._isInitialized = !0),
          (o.trigger = e),
          (o.centered = e.hasAttribute(F1)),
          (o.disabled = e.hasAttribute(Ud)),
          this.attachRipple(e, o),
          o
        );
      }
      attachRipple(e, t) {
        e.removeAttribute(Ym), this._hosts.set(e, t);
      }
      destroyRipple(e) {
        let t = this._hosts.get(e);
        t && (t.ngOnDestroy(), this._hosts.delete(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var kO = ["mat-button", ""],
  PO = [
    [
      ["", 8, "material-icons", 3, "iconPositionEnd", ""],
      ["mat-icon", 3, "iconPositionEnd", ""],
      ["", "matButtonIcon", "", 3, "iconPositionEnd", ""],
    ],
    "*",
    [
      ["", "iconPositionEnd", "", 8, "material-icons"],
      ["mat-icon", "iconPositionEnd", ""],
      ["", "matButtonIcon", "", "iconPositionEnd", ""],
    ],
  ],
  IO = [
    ".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])",
    "*",
    ".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]",
  ];
var AO =
  ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}";
var RO = ["mat-icon-button", ""],
  FO = ["*"];
var NO = new we("MAT_BUTTON_CONFIG");
var LO = [
    { attribute: "mat-button", mdcClasses: ["mdc-button", "mat-mdc-button"] },
    {
      attribute: "mat-flat-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--unelevated",
        "mat-mdc-unelevated-button",
      ],
    },
    {
      attribute: "mat-raised-button",
      mdcClasses: ["mdc-button", "mdc-button--raised", "mat-mdc-raised-button"],
    },
    {
      attribute: "mat-stroked-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--outlined",
        "mat-mdc-outlined-button",
      ],
    },
    {
      attribute: "mat-fab",
      mdcClasses: ["mdc-fab", "mat-mdc-fab-base", "mat-mdc-fab"],
    },
    {
      attribute: "mat-mini-fab",
      mdcClasses: [
        "mdc-fab",
        "mat-mdc-fab-base",
        "mdc-fab--mini",
        "mat-mdc-mini-fab",
      ],
    },
    {
      attribute: "mat-icon-button",
      mdcClasses: ["mdc-icon-button", "mat-mdc-icon-button"],
    },
  ],
  B1 = (() => {
    class n {
      get ripple() {
        return this._rippleLoader?.getRipple(this._elementRef.nativeElement);
      }
      set ripple(e) {
        this._rippleLoader?.attachRipple(this._elementRef.nativeElement, e);
      }
      get disableRipple() {
        return this._disableRipple;
      }
      set disableRipple(e) {
        (this._disableRipple = e), this._updateRippleDisabled();
      }
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        (this._disabled = e), this._updateRippleDisabled();
      }
      constructor(e, t, r, o) {
        (this._elementRef = e),
          (this._platform = t),
          (this._ngZone = r),
          (this._animationMode = o),
          (this._focusMonitor = G(Am)),
          (this._rippleLoader = G(V1)),
          (this._isFab = !1),
          (this._disableRipple = !1),
          (this._disabled = !1);
        let a = G(NO, { optional: !0 }),
          l = e.nativeElement,
          u = l.classList;
        (this.disabledInteractive = a?.disabledInteractive ?? !1),
          (this.color = a?.color ?? null),
          this._rippleLoader?.configureRipple(l, {
            className: "mat-mdc-button-ripple",
          });
        for (let { attribute: f, mdcClasses: v } of LO)
          l.hasAttribute(f) && u.add(...v);
      }
      ngAfterViewInit() {
        this._focusMonitor.monitor(this._elementRef, !0);
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);
      }
      focus(e = "program", t) {
        e
          ? this._focusMonitor.focusVia(this._elementRef.nativeElement, e, t)
          : this._elementRef.nativeElement.focus(t);
      }
      _getAriaDisabled() {
        return this.ariaDisabled != null
          ? this.ariaDisabled
          : this.disabled && this.disabledInteractive
          ? !0
          : null;
      }
      _getDisabledAttribute() {
        return this.disabledInteractive || !this.disabled ? null : !0;
      }
      _updateRippleDisabled() {
        this._rippleLoader?.setDisabled(
          this._elementRef.nativeElement,
          this.disableRipple || this.disabled
        );
      }
      static {
        this.ɵfac = function (t) {
          kr();
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          inputs: {
            color: "color",
            disableRipple: [2, "disableRipple", "disableRipple", Se],
            disabled: [2, "disabled", "disabled", Se],
            ariaDisabled: [2, "aria-disabled", "ariaDisabled", Se],
            disabledInteractive: [
              2,
              "disabledInteractive",
              "disabledInteractive",
              Se,
            ],
          },
          features: [kt],
        });
      }
    }
    return n;
  })();
var Zm = (() => {
  class n extends B1 {
    constructor(e, t, r, o) {
      super(e, t, r, o);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(H(Fe), H(Ot), H(Te), H(Wn, 8));
      };
    }
    static {
      this.ɵcmp = ae({
        type: n,
        selectors: [
          ["button", "mat-button", ""],
          ["button", "mat-raised-button", ""],
          ["button", "mat-flat-button", ""],
          ["button", "mat-stroked-button", ""],
        ],
        hostVars: 14,
        hostBindings: function (t, r) {
          t & 2 &&
            (le("disabled", r._getDisabledAttribute())(
              "aria-disabled",
              r._getAriaDisabled()
            ),
            Be(r.color ? "mat-" + r.color : ""),
            ne("mat-mdc-button-disabled", r.disabled)(
              "mat-mdc-button-disabled-interactive",
              r.disabledInteractive
            )("_mat-animation-noopable", r._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !r.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [Ze, ce],
        attrs: kO,
        ngContentSelectors: IO,
        decls: 7,
        vars: 4,
        consts: [
          [1, "mat-mdc-button-persistent-ripple"],
          [1, "mdc-button__label"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (t, r) {
          t & 1 &&
            (Xt(PO),
            z(0, "span", 0),
            Lt(1),
            c(2, "span", 1),
            Lt(3, 1),
            d(),
            Lt(4, 2),
            z(5, "span", 2)(6, "span", 3)),
            t & 2 &&
              ne("mdc-button__ripple", !r._isFab)("mdc-fab__ripple", r._isFab);
        },
        styles: [
          '.mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-text-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-text-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, var(--mat-app-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-filled-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-filled-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color, var(--mat-app-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, var(--mat-app-on-primary));background-color:var(--mdc-filled-button-container-color, var(--mat-app-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow, var(--mat-app-level1));height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-protected-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-protected-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, var(--mat-app-primary));background-color:var(--mdc-protected-button-container-color, var(--mat-app-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow, var(--mat-app-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow, var(--mat-app-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-outlined-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-outlined-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight, var(--mat-app-label-large-weight));border-radius:var(--mdc-outlined-button-container-shape, var(--mat-app-corner-full));border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, var(--mat-app-primary));border-color:var(--mdc-outlined-button-outline-color, var(--mat-app-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}',
          ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}",
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return n;
})();
var Jm = (() => {
  class n extends B1 {
    constructor(e, t, r, o) {
      super(e, t, r, o),
        this._rippleLoader.configureRipple(this._elementRef.nativeElement, {
          centered: !0,
        });
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(H(Fe), H(Ot), H(Te), H(Wn, 8));
      };
    }
    static {
      this.ɵcmp = ae({
        type: n,
        selectors: [["button", "mat-icon-button", ""]],
        hostVars: 14,
        hostBindings: function (t, r) {
          t & 2 &&
            (le("disabled", r._getDisabledAttribute())(
              "aria-disabled",
              r._getAriaDisabled()
            ),
            Be(r.color ? "mat-" + r.color : ""),
            ne("mat-mdc-button-disabled", r.disabled)(
              "mat-mdc-button-disabled-interactive",
              r.disabledInteractive
            )("_mat-animation-noopable", r._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !r.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [Ze, ce],
        attrs: RO,
        ngContentSelectors: FO,
        decls: 4,
        vars: 0,
        consts: [
          [1, "mat-mdc-button-persistent-ripple", "mdc-icon-button__ripple"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (t, r) {
          t & 1 &&
            (Xt(), z(0, "span", 0), Lt(1), z(2, "span", 1)(3, "span", 2));
        },
        styles: [
          '.mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color, var(--mat-app-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
          AO,
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return n;
})();
var H1 = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ imports: [Ji, L1, Ji] });
    }
  }
  return n;
})();
var Oo = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ imports: [Ji, Ae, Id, Ji] });
    }
  }
  return n;
})();
var j1 = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
var $d = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ imports: [Ji, Oo, Oo, j1, Ji] });
    }
  }
  return n;
})();
var HO = ["mat-calendar-body", ""];
function jO(n, i) {
  return this._trackRow(i);
}
var q1 = (n, i) => i.id;
function UO(n, i) {
  if ((n & 1 && (c(0, "tr", 0)(1, "td", 3), h(2), d()()), n & 2)) {
    let e = x();
    m(),
      si("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      le("colspan", e.numCols),
      m(),
      ee(" ", e.label, " ");
  }
}
function zO(n, i) {
  if ((n & 1 && (c(0, "td", 3), h(1), d()), n & 2)) {
    let e = x(2);
    si("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      le("colspan", e._firstRowOffset),
      m(),
      ee(" ", e._firstRowOffset >= e.labelMinRequiredCells ? e.label : "", " ");
  }
}
function $O(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "td", 6)(1, "button", 7),
      N("click", function (r) {
        let o = P(e).$implicit,
          a = x(2);
        return I(a._cellClicked(o, r));
      })("focus", function (r) {
        let o = P(e).$implicit,
          a = x(2);
        return I(a._emitActiveDateChange(o, r));
      }),
      c(2, "span", 8),
      h(3),
      d(),
      z(4, "span", 9),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.$index,
      r = x().$index,
      o = x();
    si("width", o._cellWidth)("padding-top", o._cellPadding)(
      "padding-bottom",
      o._cellPadding
    ),
      le("data-mat-row", r)("data-mat-col", t),
      m(),
      ne("mat-calendar-body-disabled", !e.enabled)(
        "mat-calendar-body-active",
        o._isActiveCell(r, t)
      )("mat-calendar-body-range-start", o._isRangeStart(e.compareValue))(
        "mat-calendar-body-range-end",
        o._isRangeEnd(e.compareValue)
      )("mat-calendar-body-in-range", o._isInRange(e.compareValue))(
        "mat-calendar-body-comparison-bridge-start",
        o._isComparisonBridgeStart(e.compareValue, r, t)
      )(
        "mat-calendar-body-comparison-bridge-end",
        o._isComparisonBridgeEnd(e.compareValue, r, t)
      )(
        "mat-calendar-body-comparison-start",
        o._isComparisonStart(e.compareValue)
      )("mat-calendar-body-comparison-end", o._isComparisonEnd(e.compareValue))(
        "mat-calendar-body-in-comparison-range",
        o._isInComparisonRange(e.compareValue)
      )("mat-calendar-body-preview-start", o._isPreviewStart(e.compareValue))(
        "mat-calendar-body-preview-end",
        o._isPreviewEnd(e.compareValue)
      )("mat-calendar-body-in-preview", o._isInPreview(e.compareValue)),
      y("ngClass", e.cssClasses)("tabindex", o._isActiveCell(r, t) ? 0 : -1),
      le("aria-label", e.ariaLabel)("aria-disabled", !e.enabled || null)(
        "aria-pressed",
        o._isSelected(e.compareValue)
      )("aria-current", o.todayValue === e.compareValue ? "date" : null)(
        "aria-describedby",
        o._getDescribedby(e.compareValue)
      ),
      m(),
      ne("mat-calendar-body-selected", o._isSelected(e.compareValue))(
        "mat-calendar-body-comparison-identical",
        o._isComparisonIdentical(e.compareValue)
      )("mat-calendar-body-today", o.todayValue === e.compareValue),
      m(),
      ee(" ", e.displayValue, " ");
  }
}
function WO(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr", 1),
      R(1, zO, 2, 6, "td", 4),
      Ko(2, $O, 5, 48, "td", 5, q1),
      d()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.$index,
      r = x();
    m(), Cn(t === 0 && r._firstRowOffset ? 1 : -1), m(), Qo(e);
  }
}
function GO(n, i) {
  if (
    (n & 1 &&
      (c(0, "th", 2)(1, "span", 6), h(2), d(), c(3, "span", 3), h(4), d()()),
    n & 2)
  ) {
    let e = i.$implicit;
    m(2), B(e.long), m(2), B(e.narrow);
  }
}
var YO = ["*"];
function qO(n, i) {}
function KO(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "mat-month-view", 4),
      ht("activeDateChange", function (r) {
        P(e);
        let o = x();
        return ut(o.activeDate, r) || (o.activeDate = r), I(r);
      }),
      N("_userSelection", function (r) {
        P(e);
        let o = x();
        return I(o._dateSelected(r));
      })("dragStarted", function (r) {
        P(e);
        let o = x();
        return I(o._dragStarted(r));
      })("dragEnded", function (r) {
        P(e);
        let o = x();
        return I(o._dragEnded(r));
      }),
      d();
  }
  if (n & 2) {
    let e = x();
    dt("activeDate", e.activeDate),
      y("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass)(
        "comparisonStart",
        e.comparisonStart
      )("comparisonEnd", e.comparisonEnd)(
        "startDateAccessibleName",
        e.startDateAccessibleName
      )("endDateAccessibleName", e.endDateAccessibleName)(
        "activeDrag",
        e._activeDrag
      );
  }
}
function QO(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "mat-year-view", 5),
      ht("activeDateChange", function (r) {
        P(e);
        let o = x();
        return ut(o.activeDate, r) || (o.activeDate = r), I(r);
      }),
      N("monthSelected", function (r) {
        P(e);
        let o = x();
        return I(o._monthSelectedInYearView(r));
      })("selectedChange", function (r) {
        P(e);
        let o = x();
        return I(o._goToDateInView(r, "month"));
      }),
      d();
  }
  if (n & 2) {
    let e = x();
    dt("activeDate", e.activeDate),
      y("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function XO(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "mat-multi-year-view", 6),
      ht("activeDateChange", function (r) {
        P(e);
        let o = x();
        return ut(o.activeDate, r) || (o.activeDate = r), I(r);
      }),
      N("yearSelected", function (r) {
        P(e);
        let o = x();
        return I(o._yearSelectedInMultiYearView(r));
      })("selectedChange", function (r) {
        P(e);
        let o = x();
        return I(o._goToDateInView(r, "year"));
      }),
      d();
  }
  if (n & 2) {
    let e = x();
    dt("activeDate", e.activeDate),
      y("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function ZO(n, i) {}
var JO = ["button"],
  ek = [[["", "matDatepickerToggleIcon", ""]]],
  tk = ["[matDatepickerToggleIcon]"];
function ik(n, i) {
  n & 1 && (ft(), c(0, "svg", 2), z(1, "path", 3), d());
}
var gl = (() => {
    class n {
      constructor() {
        (this.changes = new Oe()),
          (this.calendarLabel = "Calendar"),
          (this.openCalendarLabel = "Open calendar"),
          (this.closeCalendarLabel = "Close calendar"),
          (this.prevMonthLabel = "Previous month"),
          (this.nextMonthLabel = "Next month"),
          (this.prevYearLabel = "Previous year"),
          (this.nextYearLabel = "Next year"),
          (this.prevMultiYearLabel = "Previous 24 years"),
          (this.nextMultiYearLabel = "Next 24 years"),
          (this.switchToMonthViewLabel = "Choose date"),
          (this.switchToMultiYearViewLabel = "Choose month and year"),
          (this.startDateLabel = "Start date"),
          (this.endDateLabel = "End date");
      }
      formatYearRange(e, t) {
        return `${e} \u2013 ${t}`;
      }
      formatYearRangeLabel(e, t) {
        return `${e} to ${t}`;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  nk = 0,
  fl = class {
    constructor(i, e, t, r, o = {}, a = i, l) {
      (this.value = i),
        (this.displayValue = e),
        (this.ariaLabel = t),
        (this.enabled = r),
        (this.cssClasses = o),
        (this.compareValue = a),
        (this.rawValue = l),
        (this.id = nk++);
    }
  },
  rk = 1,
  U1 = tr({ passive: !1, capture: !0 }),
  qr = tr({ passive: !0, capture: !0 }),
  Wd = tr({ passive: !0 }),
  Pa = (() => {
    class n {
      ngAfterViewChecked() {
        this._focusActiveCellAfterViewChecked &&
          (this._focusActiveCell(),
          (this._focusActiveCellAfterViewChecked = !1));
      }
      constructor(e, t) {
        (this._elementRef = e),
          (this._ngZone = t),
          (this._platform = G(Ot)),
          (this._focusActiveCellAfterViewChecked = !1),
          (this.numCols = 7),
          (this.activeCell = 0),
          (this.isRange = !1),
          (this.cellAspectRatio = 1),
          (this.previewStart = null),
          (this.previewEnd = null),
          (this.selectedValueChange = new xe()),
          (this.previewChange = new xe()),
          (this.activeDateChange = new xe()),
          (this.dragStarted = new xe()),
          (this.dragEnded = new xe()),
          (this._didDragSinceMouseDown = !1),
          (this._injector = G(Dt)),
          (this._trackRow = (r) => r),
          (this._enterHandler = (r) => {
            if (this._skipNextFocus && r.type === "focus") {
              this._skipNextFocus = !1;
              return;
            }
            if (r.target && this.isRange) {
              let o = this._getCellFromElement(r.target);
              o &&
                this._ngZone.run(() =>
                  this.previewChange.emit({
                    value: o.enabled ? o : null,
                    event: r,
                  })
                );
            }
          }),
          (this._touchmoveHandler = (r) => {
            if (!this.isRange) return;
            let o = z1(r),
              a = o ? this._getCellFromElement(o) : null;
            o !== r.target && (this._didDragSinceMouseDown = !0),
              tf(r.target) && r.preventDefault(),
              this._ngZone.run(() =>
                this.previewChange.emit({
                  value: a?.enabled ? a : null,
                  event: r,
                })
              );
          }),
          (this._leaveHandler = (r) => {
            this.previewEnd !== null &&
              this.isRange &&
              (r.type !== "blur" && (this._didDragSinceMouseDown = !0),
              r.target &&
                this._getCellFromElement(r.target) &&
                !(
                  r.relatedTarget && this._getCellFromElement(r.relatedTarget)
                ) &&
                this._ngZone.run(() =>
                  this.previewChange.emit({ value: null, event: r })
                ));
          }),
          (this._mousedownHandler = (r) => {
            if (!this.isRange) return;
            this._didDragSinceMouseDown = !1;
            let o = r.target && this._getCellFromElement(r.target);
            !o ||
              !this._isInRange(o.compareValue) ||
              this._ngZone.run(() => {
                this.dragStarted.emit({ value: o.rawValue, event: r });
              });
          }),
          (this._mouseupHandler = (r) => {
            if (!this.isRange) return;
            let o = tf(r.target);
            if (!o) {
              this._ngZone.run(() => {
                this.dragEnded.emit({ value: null, event: r });
              });
              return;
            }
            o.closest(".mat-calendar-body") ===
              this._elementRef.nativeElement &&
              this._ngZone.run(() => {
                let a = this._getCellFromElement(o);
                this.dragEnded.emit({ value: a?.rawValue ?? null, event: r });
              });
          }),
          (this._touchendHandler = (r) => {
            let o = z1(r);
            o && this._mouseupHandler({ target: o });
          }),
          (this._id = `mat-calendar-body-${rk++}`),
          (this._startDateLabelId = `${this._id}-start-date`),
          (this._endDateLabelId = `${this._id}-end-date`),
          t.runOutsideAngular(() => {
            let r = e.nativeElement;
            r.addEventListener("touchmove", this._touchmoveHandler, U1),
              r.addEventListener("mouseenter", this._enterHandler, qr),
              r.addEventListener("focus", this._enterHandler, qr),
              r.addEventListener("mouseleave", this._leaveHandler, qr),
              r.addEventListener("blur", this._leaveHandler, qr),
              r.addEventListener("mousedown", this._mousedownHandler, Wd),
              r.addEventListener("touchstart", this._mousedownHandler, Wd),
              this._platform.isBrowser &&
                (window.addEventListener("mouseup", this._mouseupHandler),
                window.addEventListener("touchend", this._touchendHandler));
          });
      }
      _cellClicked(e, t) {
        this._didDragSinceMouseDown ||
          (e.enabled &&
            this.selectedValueChange.emit({ value: e.value, event: t }));
      }
      _emitActiveDateChange(e, t) {
        e.enabled && this.activeDateChange.emit({ value: e.value, event: t });
      }
      _isSelected(e) {
        return this.startValue === e || this.endValue === e;
      }
      ngOnChanges(e) {
        let t = e.numCols,
          { rows: r, numCols: o } = this;
        (e.rows || t) &&
          (this._firstRowOffset =
            r && r.length && r[0].length ? o - r[0].length : 0),
          (e.cellAspectRatio || t || !this._cellPadding) &&
            (this._cellPadding = `${(50 * this.cellAspectRatio) / o}%`),
          (t || !this._cellWidth) && (this._cellWidth = `${100 / o}%`);
      }
      ngOnDestroy() {
        let e = this._elementRef.nativeElement;
        e.removeEventListener("touchmove", this._touchmoveHandler, U1),
          e.removeEventListener("mouseenter", this._enterHandler, qr),
          e.removeEventListener("focus", this._enterHandler, qr),
          e.removeEventListener("mouseleave", this._leaveHandler, qr),
          e.removeEventListener("blur", this._leaveHandler, qr),
          e.removeEventListener("mousedown", this._mousedownHandler, Wd),
          e.removeEventListener("touchstart", this._mousedownHandler, Wd),
          this._platform.isBrowser &&
            (window.removeEventListener("mouseup", this._mouseupHandler),
            window.removeEventListener("touchend", this._touchendHandler));
      }
      _isActiveCell(e, t) {
        let r = e * this.numCols + t;
        return e && (r -= this._firstRowOffset), r == this.activeCell;
      }
      _focusActiveCell(e = !0) {
        xn(
          () => {
            setTimeout(() => {
              let t = this._elementRef.nativeElement.querySelector(
                ".mat-calendar-body-active"
              );
              t && (e || (this._skipNextFocus = !0), t.focus());
            });
          },
          { injector: this._injector }
        );
      }
      _scheduleFocusActiveCellAfterViewChecked() {
        this._focusActiveCellAfterViewChecked = !0;
      }
      _isRangeStart(e) {
        return nf(e, this.startValue, this.endValue);
      }
      _isRangeEnd(e) {
        return rf(e, this.startValue, this.endValue);
      }
      _isInRange(e) {
        return of(e, this.startValue, this.endValue, this.isRange);
      }
      _isComparisonStart(e) {
        return nf(e, this.comparisonStart, this.comparisonEnd);
      }
      _isComparisonBridgeStart(e, t, r) {
        if (
          !this._isComparisonStart(e) ||
          this._isRangeStart(e) ||
          !this._isInRange(e)
        )
          return !1;
        let o = this.rows[t][r - 1];
        if (!o) {
          let a = this.rows[t - 1];
          o = a && a[a.length - 1];
        }
        return o && !this._isRangeEnd(o.compareValue);
      }
      _isComparisonBridgeEnd(e, t, r) {
        if (
          !this._isComparisonEnd(e) ||
          this._isRangeEnd(e) ||
          !this._isInRange(e)
        )
          return !1;
        let o = this.rows[t][r + 1];
        if (!o) {
          let a = this.rows[t + 1];
          o = a && a[0];
        }
        return o && !this._isRangeStart(o.compareValue);
      }
      _isComparisonEnd(e) {
        return rf(e, this.comparisonStart, this.comparisonEnd);
      }
      _isInComparisonRange(e) {
        return of(e, this.comparisonStart, this.comparisonEnd, this.isRange);
      }
      _isComparisonIdentical(e) {
        return (
          this.comparisonStart === this.comparisonEnd &&
          e === this.comparisonStart
        );
      }
      _isPreviewStart(e) {
        return nf(e, this.previewStart, this.previewEnd);
      }
      _isPreviewEnd(e) {
        return rf(e, this.previewStart, this.previewEnd);
      }
      _isInPreview(e) {
        return of(e, this.previewStart, this.previewEnd, this.isRange);
      }
      _getDescribedby(e) {
        return this.isRange
          ? this.startValue === e && this.endValue === e
            ? `${this._startDateLabelId} ${this._endDateLabelId}`
            : this.startValue === e
            ? this._startDateLabelId
            : this.endValue === e
            ? this._endDateLabelId
            : null
          : null;
      }
      _getCellFromElement(e) {
        let t = tf(e);
        if (t) {
          let r = t.getAttribute("data-mat-row"),
            o = t.getAttribute("data-mat-col");
          if (r && o) return this.rows[parseInt(r)][parseInt(o)];
        }
        return null;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Fe), H(Te));
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["", "mat-calendar-body", ""]],
          hostAttrs: [1, "mat-calendar-body"],
          inputs: {
            label: "label",
            rows: "rows",
            todayValue: "todayValue",
            startValue: "startValue",
            endValue: "endValue",
            labelMinRequiredCells: "labelMinRequiredCells",
            numCols: "numCols",
            activeCell: "activeCell",
            isRange: "isRange",
            cellAspectRatio: "cellAspectRatio",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            previewStart: "previewStart",
            previewEnd: "previewEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedValueChange: "selectedValueChange",
            previewChange: "previewChange",
            activeDateChange: "activeDateChange",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
          },
          exportAs: ["matCalendarBody"],
          standalone: !0,
          features: [wt, ce],
          attrs: HO,
          decls: 7,
          vars: 5,
          consts: [
            ["aria-hidden", "true"],
            ["role", "row"],
            [1, "mat-calendar-body-hidden-label", 3, "id"],
            [1, "mat-calendar-body-label"],
            [1, "mat-calendar-body-label", 3, "paddingTop", "paddingBottom"],
            [
              "role",
              "gridcell",
              1,
              "mat-calendar-body-cell-container",
              3,
              "width",
              "paddingTop",
              "paddingBottom",
            ],
            ["role", "gridcell", 1, "mat-calendar-body-cell-container"],
            [
              "type",
              "button",
              1,
              "mat-calendar-body-cell",
              3,
              "click",
              "focus",
              "ngClass",
              "tabindex",
            ],
            [1, "mat-calendar-body-cell-content", "mat-focus-indicator"],
            ["aria-hidden", "true", 1, "mat-calendar-body-cell-preview"],
          ],
          template: function (t, r) {
            t & 1 &&
              (R(0, UO, 3, 6, "tr", 0),
              Ko(1, WO, 4, 1, "tr", 1, jO, !0),
              c(3, "span", 2),
              h(4),
              d(),
              c(5, "span", 2),
              h(6),
              d()),
              t & 2 &&
                (Cn(r._firstRowOffset < r.labelMinRequiredCells ? 0 : -1),
                m(),
                Qo(r.rows),
                m(2),
                y("id", r._startDateLabelId),
                m(),
                ee(
                  " ",
                  r.startDateAccessibleName,
                  `
`
                ),
                m(),
                y("id", r._endDateLabelId),
                m(),
                ee(
                  " ",
                  r.endDateAccessibleName,
                  `
`
                ));
          },
          dependencies: [It],
          styles: [
            '.mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color)}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color)}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color)}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-app-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-app-secondary))}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
function ef(n) {
  return n?.nodeName === "TD";
}
function tf(n) {
  let i;
  return (
    ef(n)
      ? (i = n)
      : ef(n.parentNode)
      ? (i = n.parentNode)
      : ef(n.parentNode?.parentNode) && (i = n.parentNode.parentNode),
    i?.getAttribute("data-mat-row") != null ? i : null
  );
}
function nf(n, i, e) {
  return e !== null && i !== e && n < e && n === i;
}
function rf(n, i, e) {
  return i !== null && i !== e && n >= i && n === e;
}
function of(n, i, e, t) {
  return t && i !== null && e !== null && i !== e && n >= i && n <= e;
}
function z1(n) {
  let i = n.changedTouches[0];
  return document.elementFromPoint(i.clientX, i.clientY);
}
var gn = class {
    constructor(i, e) {
      (this.start = i), (this.end = e);
    }
  },
  Gd = (() => {
    class n {
      constructor(e, t) {
        (this.selection = e),
          (this._adapter = t),
          (this._selectionChanged = new Oe()),
          (this.selectionChanged = this._selectionChanged),
          (this.selection = e);
      }
      updateSelection(e, t) {
        let r = this.selection;
        (this.selection = e),
          this._selectionChanged.next({ selection: e, source: t, oldValue: r });
      }
      ngOnDestroy() {
        this._selectionChanged.complete();
      }
      _isValidDateInstance(e) {
        return this._adapter.isDateInstance(e) && this._adapter.isValid(e);
      }
      static {
        this.ɵfac = function (t) {
          kr();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  ok = (() => {
    class n extends Gd {
      constructor(e) {
        super(null, e);
      }
      add(e) {
        super.updateSelection(e, this);
      }
      isValid() {
        return (
          this.selection != null && this._isValidDateInstance(this.selection)
        );
      }
      isComplete() {
        return this.selection != null;
      }
      clone() {
        let e = new n(this._adapter);
        return e.updateSelection(this.selection, this), e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Ui));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function ak(n, i) {
  return n || new ok(i);
}
var sk = { provide: Gd, deps: [[new Ka(), new zl(), Gd], Ui], useFactory: ak };
var K1 = new we("MAT_DATE_RANGE_SELECTION_STRATEGY");
var af = 7,
  lk = 0,
  $1 = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          r =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          r,
          this.minDate,
          this.maxDate
        )),
          this._hasSameMonthAndYear(t, this._activeDate) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof gn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setRanges(this._selected);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, r, o, a) {
        (this._changeDetectorRef = e),
          (this._dateFormats = t),
          (this._dateAdapter = r),
          (this._dir = o),
          (this._rangeStrategy = a),
          (this._rerenderSubscription = zi.EMPTY),
          (this.activeDrag = null),
          (this.selectedChange = new xe()),
          (this._userSelection = new xe()),
          (this.dragStarted = new xe()),
          (this.dragEnded = new xe()),
          (this.activeDateChange = new xe()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Un(null))
          .subscribe(() => this._init());
      }
      ngOnChanges(e) {
        let t = e.comparisonStart || e.comparisonEnd;
        t && !t.firstChange && this._setRanges(this.selected),
          e.activeDrag && !this.activeDrag && this._clearPreview();
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _dateSelected(e) {
        let t = e.value,
          r = this._getDateFromDayOfMonth(t),
          o,
          a;
        this._selected instanceof gn
          ? ((o = this._getDateInCurrentMonth(this._selected.start)),
            (a = this._getDateInCurrentMonth(this._selected.end)))
          : (o = a = this._getDateInCurrentMonth(this._selected)),
          (o !== t || a !== t) && this.selectedChange.emit(r),
          this._userSelection.emit({ value: r, event: e.event }),
          this._clearPreview(),
          this._changeDetectorRef.markForCheck();
      }
      _updateActiveDate(e) {
        let t = e.value,
          r = this._activeDate;
        (this.activeDate = this._getDateFromDayOfMonth(t)),
          this._dateAdapter.compareDate(r, this.activeDate) &&
            this.activeDateChange.emit(this._activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          r = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              r ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              r ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              -7
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              7
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              1 - this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              this._dateAdapter.getNumDaysInMonth(this._activeDate) -
                this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
            break;
          case 34:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
            break;
          case 13:
          case 32:
            (this._selectionKeyPressed = !0),
              this._canSelect(this._activeDate) && e.preventDefault();
            return;
          case 27:
            this._previewEnd != null &&
              !n1(e) &&
              (this._clearPreview(),
              this.activeDrag
                ? this.dragEnded.emit({ value: null, event: e })
                : (this.selectedChange.emit(null),
                  this._userSelection.emit({ value: null, event: e })),
              e.preventDefault(),
              e.stopPropagation());
            return;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._canSelect(this._activeDate) &&
            this._dateSelected({
              value: this._dateAdapter.getDate(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setRanges(this.selected),
          (this._todayDate = this._getCellCompareValue(
            this._dateAdapter.today()
          )),
          (this._monthLabel = this._dateFormats.display.monthLabel
            ? this._dateAdapter.format(
                this.activeDate,
                this._dateFormats.display.monthLabel
              )
            : this._dateAdapter
                .getMonthNames("short")
                [
                  this._dateAdapter.getMonth(this.activeDate)
                ].toLocaleUpperCase());
        let e = this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          1
        );
        (this._firstWeekOffset =
          (af +
            this._dateAdapter.getDayOfWeek(e) -
            this._dateAdapter.getFirstDayOfWeek()) %
          af),
          this._initWeekdays(),
          this._createWeekCells(),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell(e) {
        this._matCalendarBody._focusActiveCell(e);
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _previewChanged({ event: e, value: t }) {
        if (this._rangeStrategy) {
          let r = t ? t.rawValue : null,
            o = this._rangeStrategy.createPreview(r, this.selected, e);
          if (
            ((this._previewStart = this._getCellCompareValue(o.start)),
            (this._previewEnd = this._getCellCompareValue(o.end)),
            this.activeDrag && r)
          ) {
            let a = this._rangeStrategy.createDrag?.(
              this.activeDrag.value,
              this.selected,
              r,
              e
            );
            a &&
              ((this._previewStart = this._getCellCompareValue(a.start)),
              (this._previewEnd = this._getCellCompareValue(a.end)));
          }
          this._changeDetectorRef.detectChanges();
        }
      }
      _dragEnded(e) {
        if (this.activeDrag)
          if (e.value) {
            let t = this._rangeStrategy?.createDrag?.(
              this.activeDrag.value,
              this.selected,
              e.value,
              e.event
            );
            this.dragEnded.emit({ value: t ?? null, event: e.event });
          } else this.dragEnded.emit({ value: null, event: e.event });
      }
      _getDateFromDayOfMonth(e) {
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          e
        );
      }
      _initWeekdays() {
        let e = this._dateAdapter.getFirstDayOfWeek(),
          t = this._dateAdapter.getDayOfWeekNames("narrow"),
          o = this._dateAdapter
            .getDayOfWeekNames("long")
            .map((a, l) => ({ long: a, narrow: t[l], id: lk++ }));
        this._weekdays = o.slice(e).concat(o.slice(0, e));
      }
      _createWeekCells() {
        let e = this._dateAdapter.getNumDaysInMonth(this.activeDate),
          t = this._dateAdapter.getDateNames();
        this._weeks = [[]];
        for (let r = 0, o = this._firstWeekOffset; r < e; r++, o++) {
          o == af && (this._weeks.push([]), (o = 0));
          let a = this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              r + 1
            ),
            l = this._shouldEnableDate(a),
            u = this._dateAdapter.format(
              a,
              this._dateFormats.display.dateA11yLabel
            ),
            f = this.dateClass ? this.dateClass(a, "month") : void 0;
          this._weeks[this._weeks.length - 1].push(
            new fl(r + 1, t[r], u, l, f, this._getCellCompareValue(a), a)
          );
        }
      }
      _shouldEnableDate(e) {
        return (
          !!e &&
          (!this.minDate ||
            this._dateAdapter.compareDate(e, this.minDate) >= 0) &&
          (!this.maxDate ||
            this._dateAdapter.compareDate(e, this.maxDate) <= 0) &&
          (!this.dateFilter || this.dateFilter(e))
        );
      }
      _getDateInCurrentMonth(e) {
        return e && this._hasSameMonthAndYear(e, this.activeDate)
          ? this._dateAdapter.getDate(e)
          : null;
      }
      _hasSameMonthAndYear(e, t) {
        return !!(
          e &&
          t &&
          this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(t) &&
          this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t)
        );
      }
      _getCellCompareValue(e) {
        if (e) {
          let t = this._dateAdapter.getYear(e),
            r = this._dateAdapter.getMonth(e),
            o = this._dateAdapter.getDate(e);
          return new Date(t, r, o).getTime();
        }
        return null;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setRanges(e) {
        e instanceof gn
          ? ((this._rangeStart = this._getCellCompareValue(e.start)),
            (this._rangeEnd = this._getCellCompareValue(e.end)),
            (this._isRange = !0))
          : ((this._rangeStart = this._rangeEnd = this._getCellCompareValue(e)),
            (this._isRange = !1)),
          (this._comparisonRangeStart = this._getCellCompareValue(
            this.comparisonStart
          )),
          (this._comparisonRangeEnd = this._getCellCompareValue(
            this.comparisonEnd
          ));
      }
      _canSelect(e) {
        return !this.dateFilter || this.dateFilter(e);
      }
      _clearPreview() {
        this._previewStart = this._previewEnd = null;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Ke), H(Ea, 8), H(Ui, 8), H(Ma, 8), H(K1, 8));
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["mat-month-view"]],
          viewQuery: function (t, r) {
            if ((t & 1 && yt(Pa, 5), t & 2)) {
              let o;
              ot((o = at())) && (r._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
            activeDrag: "activeDrag",
          },
          outputs: {
            selectedChange: "selectedChange",
            _userSelection: "_userSelection",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMonthView"],
          standalone: !0,
          features: [wt, ce],
          decls: 8,
          vars: 14,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            [1, "mat-calendar-table-header"],
            ["scope", "col"],
            ["aria-hidden", "true"],
            ["colspan", "7", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "previewChange",
              "dragStarted",
              "dragEnded",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "comparisonStart",
              "comparisonEnd",
              "previewStart",
              "previewEnd",
              "isRange",
              "labelMinRequiredCells",
              "activeCell",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [1, "cdk-visually-hidden"],
          ],
          template: function (t, r) {
            t & 1 &&
              (c(0, "table", 0)(1, "thead", 1)(2, "tr"),
              Ko(3, GO, 5, 2, "th", 2, q1),
              d(),
              c(5, "tr", 3),
              z(6, "th", 4),
              d()(),
              c(7, "tbody", 5),
              N("selectedValueChange", function (a) {
                return r._dateSelected(a);
              })("activeDateChange", function (a) {
                return r._updateActiveDate(a);
              })("previewChange", function (a) {
                return r._previewChanged(a);
              })("dragStarted", function (a) {
                return r.dragStarted.emit(a);
              })("dragEnded", function (a) {
                return r._dragEnded(a);
              })("keyup", function (a) {
                return r._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return r._handleCalendarBodyKeydown(a);
              }),
              d()()),
              t & 2 &&
                (m(3),
                Qo(r._weekdays),
                m(4),
                y("label", r._monthLabel)("rows", r._weeks)(
                  "todayValue",
                  r._todayDate
                )("startValue", r._rangeStart)("endValue", r._rangeEnd)(
                  "comparisonStart",
                  r._comparisonRangeStart
                )("comparisonEnd", r._comparisonRangeEnd)(
                  "previewStart",
                  r._previewStart
                )("previewEnd", r._previewEnd)("isRange", r._isRange)(
                  "labelMinRequiredCells",
                  3
                )("activeCell", r._dateAdapter.getDate(r.activeDate) - 1)(
                  "startDateAccessibleName",
                  r.startDateAccessibleName
                )("endDateAccessibleName", r.endDateAccessibleName));
          },
          dependencies: [Pa],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  en = 24,
  sf = 4,
  W1 = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          r =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          r,
          this.minDate,
          this.maxDate
        )),
          Q1(
            this._dateAdapter,
            t,
            this._activeDate,
            this.minDate,
            this.maxDate
          ) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof gn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedYear(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, r) {
        (this._changeDetectorRef = e),
          (this._dateAdapter = t),
          (this._dir = r),
          (this._rerenderSubscription = zi.EMPTY),
          (this.selectedChange = new xe()),
          (this.yearSelected = new xe()),
          (this.activeDateChange = new xe()),
          this._dateAdapter,
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Un(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _init() {
        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());
        let t =
          this._dateAdapter.getYear(this._activeDate) -
          ml(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
        this._years = [];
        for (let r = 0, o = []; r < en; r++)
          o.push(t + r),
            o.length == sf &&
              (this._years.push(o.map((a) => this._createCellForYear(a))),
              (o = []));
        this._changeDetectorRef.markForCheck();
      }
      _yearSelected(e) {
        let t = e.value,
          r = this._dateAdapter.createDate(t, 0, 1),
          o = this._getDateFromYear(t);
        this.yearSelected.emit(r), this.selectedChange.emit(o);
      }
      _updateActiveDate(e) {
        let t = e.value,
          r = this._activeDate;
        (this.activeDate = this._getDateFromYear(t)),
          this._dateAdapter.compareDate(r, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          r = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              r ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              r ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -sf
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              sf
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -ml(
                this._dateAdapter,
                this.activeDate,
                this.minDate,
                this.maxDate
              )
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              en -
                ml(
                  this._dateAdapter,
                  this.activeDate,
                  this.minDate,
                  this.maxDate
                ) -
                1
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -en * 10 : -en
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? en * 10 : en
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked(),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._yearSelected({
              value: this._dateAdapter.getYear(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _getActiveCell() {
        return ml(
          this._dateAdapter,
          this.activeDate,
          this.minDate,
          this.maxDate
        );
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getDateFromYear(e) {
        let t = this._dateAdapter.getMonth(this.activeDate),
          r = this._dateAdapter.getNumDaysInMonth(
            this._dateAdapter.createDate(e, t, 1)
          );
        return this._dateAdapter.createDate(
          e,
          t,
          Math.min(this._dateAdapter.getDate(this.activeDate), r)
        );
      }
      _createCellForYear(e) {
        let t = this._dateAdapter.createDate(e, 0, 1),
          r = this._dateAdapter.getYearName(t),
          o = this.dateClass ? this.dateClass(t, "multi-year") : void 0;
        return new fl(e, r, r, this._shouldEnableYear(e), o);
      }
      _shouldEnableYear(e) {
        if (
          e == null ||
          (this.maxDate && e > this._dateAdapter.getYear(this.maxDate)) ||
          (this.minDate && e < this._dateAdapter.getYear(this.minDate))
        )
          return !1;
        if (!this.dateFilter) return !0;
        let t = this._dateAdapter.createDate(e, 0, 1);
        for (
          let r = t;
          this._dateAdapter.getYear(r) == e;
          r = this._dateAdapter.addCalendarDays(r, 1)
        )
          if (this.dateFilter(r)) return !0;
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedYear(e) {
        if (((this._selectedYear = null), e instanceof gn)) {
          let t = e.start || e.end;
          t && (this._selectedYear = this._dateAdapter.getYear(t));
        } else e && (this._selectedYear = this._dateAdapter.getYear(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Ke), H(Ui, 8), H(Ma, 8));
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["mat-multi-year-view"]],
          viewQuery: function (t, r) {
            if ((t & 1 && yt(Pa, 5), t & 2)) {
              let o;
              ot((o = at())) && (r._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMultiYearView"],
          standalone: !0,
          features: [ce],
          decls: 5,
          vars: 7,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (t, r) {
            t & 1 &&
              (c(0, "table", 0)(1, "thead", 1)(2, "tr"),
              z(3, "th", 2),
              d()(),
              c(4, "tbody", 3),
              N("selectedValueChange", function (a) {
                return r._yearSelected(a);
              })("activeDateChange", function (a) {
                return r._updateActiveDate(a);
              })("keyup", function (a) {
                return r._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return r._handleCalendarBodyKeydown(a);
              }),
              d()()),
              t & 2 &&
                (m(4),
                y("rows", r._years)("todayValue", r._todayYear)(
                  "startValue",
                  r._selectedYear
                )("endValue", r._selectedYear)("numCols", 4)(
                  "cellAspectRatio",
                  4 / 7
                )("activeCell", r._getActiveCell()));
          },
          dependencies: [Pa],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
function Q1(n, i, e, t, r) {
  let o = n.getYear(i),
    a = n.getYear(e),
    l = X1(n, t, r);
  return Math.floor((o - l) / en) === Math.floor((a - l) / en);
}
function ml(n, i, e, t) {
  let r = n.getYear(i);
  return ck(r - X1(n, e, t), en);
}
function X1(n, i, e) {
  let t = 0;
  return e ? (t = n.getYear(e) - en + 1) : i && (t = n.getYear(i)), t;
}
function ck(n, i) {
  return ((n % i) + i) % i;
}
var G1 = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          r =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          r,
          this.minDate,
          this.maxDate
        )),
          this._dateAdapter.getYear(t) !==
            this._dateAdapter.getYear(this._activeDate) && this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof gn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedMonth(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, r, o) {
        (this._changeDetectorRef = e),
          (this._dateFormats = t),
          (this._dateAdapter = r),
          (this._dir = o),
          (this._rerenderSubscription = zi.EMPTY),
          (this.selectedChange = new xe()),
          (this.monthSelected = new xe()),
          (this.activeDateChange = new xe()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Un(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _monthSelected(e) {
        let t = e.value,
          r = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            t,
            1
          );
        this.monthSelected.emit(r);
        let o = this._getDateFromMonth(t);
        this.selectedChange.emit(o);
      }
      _updateActiveDate(e) {
        let t = e.value,
          r = this._activeDate;
        (this.activeDate = this._getDateFromMonth(t)),
          this._dateAdapter.compareDate(r, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          r = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              r ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              r ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -4
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              4
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              11 - this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -10 : -1
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? 10 : 1
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._monthSelected({
              value: this._dateAdapter.getMonth(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setSelectedMonth(this.selected),
          (this._todayMonth = this._getMonthInCurrentYear(
            this._dateAdapter.today()
          )),
          (this._yearLabel = this._dateAdapter.getYearName(this.activeDate));
        let e = this._dateAdapter.getMonthNames("short");
        (this._months = [
          [0, 1, 2, 3],
          [4, 5, 6, 7],
          [8, 9, 10, 11],
        ].map((t) => t.map((r) => this._createCellForMonth(r, e[r])))),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getMonthInCurrentYear(e) {
        return e &&
          this._dateAdapter.getYear(e) ==
            this._dateAdapter.getYear(this.activeDate)
          ? this._dateAdapter.getMonth(e)
          : null;
      }
      _getDateFromMonth(e) {
        let t = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          r = this._dateAdapter.getNumDaysInMonth(t);
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          e,
          Math.min(this._dateAdapter.getDate(this.activeDate), r)
        );
      }
      _createCellForMonth(e, t) {
        let r = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          o = this._dateAdapter.format(
            r,
            this._dateFormats.display.monthYearA11yLabel
          ),
          a = this.dateClass ? this.dateClass(r, "year") : void 0;
        return new fl(
          e,
          t.toLocaleUpperCase(),
          o,
          this._shouldEnableMonth(e),
          a
        );
      }
      _shouldEnableMonth(e) {
        let t = this._dateAdapter.getYear(this.activeDate);
        if (
          e == null ||
          this._isYearAndMonthAfterMaxDate(t, e) ||
          this._isYearAndMonthBeforeMinDate(t, e)
        )
          return !1;
        if (!this.dateFilter) return !0;
        let r = this._dateAdapter.createDate(t, e, 1);
        for (
          let o = r;
          this._dateAdapter.getMonth(o) == e;
          o = this._dateAdapter.addCalendarDays(o, 1)
        )
          if (this.dateFilter(o)) return !0;
        return !1;
      }
      _isYearAndMonthAfterMaxDate(e, t) {
        if (this.maxDate) {
          let r = this._dateAdapter.getYear(this.maxDate),
            o = this._dateAdapter.getMonth(this.maxDate);
          return e > r || (e === r && t > o);
        }
        return !1;
      }
      _isYearAndMonthBeforeMinDate(e, t) {
        if (this.minDate) {
          let r = this._dateAdapter.getYear(this.minDate),
            o = this._dateAdapter.getMonth(this.minDate);
          return e < r || (e === r && t < o);
        }
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedMonth(e) {
        e instanceof gn
          ? (this._selectedMonth =
              this._getMonthInCurrentYear(e.start) ||
              this._getMonthInCurrentYear(e.end))
          : (this._selectedMonth = this._getMonthInCurrentYear(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Ke), H(Ea, 8), H(Ui, 8), H(Ma, 8));
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["mat-year-view"]],
          viewQuery: function (t, r) {
            if ((t & 1 && yt(Pa, 5), t & 2)) {
              let o;
              ot((o = at())) && (r._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            monthSelected: "monthSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matYearView"],
          standalone: !0,
          features: [ce],
          decls: 5,
          vars: 9,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "labelMinRequiredCells",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (t, r) {
            t & 1 &&
              (c(0, "table", 0)(1, "thead", 1)(2, "tr"),
              z(3, "th", 2),
              d()(),
              c(4, "tbody", 3),
              N("selectedValueChange", function (a) {
                return r._monthSelected(a);
              })("activeDateChange", function (a) {
                return r._updateActiveDate(a);
              })("keyup", function (a) {
                return r._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return r._handleCalendarBodyKeydown(a);
              }),
              d()()),
              t & 2 &&
                (m(4),
                y("label", r._yearLabel)("rows", r._months)(
                  "todayValue",
                  r._todayMonth
                )("startValue", r._selectedMonth)("endValue", r._selectedMonth)(
                  "labelMinRequiredCells",
                  2
                )("numCols", 4)("cellAspectRatio", 4 / 7)(
                  "activeCell",
                  r._dateAdapter.getMonth(r.activeDate)
                ));
          },
          dependencies: [Pa],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  dk = 1,
  Z1 = (() => {
    class n {
      constructor(e, t, r, o, a) {
        (this._intl = e),
          (this.calendar = t),
          (this._dateAdapter = r),
          (this._dateFormats = o),
          (this._id = `mat-calendar-header-${dk++}`),
          (this._periodButtonLabelId = `${this._id}-period-label`),
          this.calendar.stateChanges.subscribe(() => a.markForCheck());
      }
      get periodButtonText() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRange(...this._formatMinAndMaxYearLabels());
      }
      get periodButtonDescription() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRangeLabel(
              ...this._formatMinAndMaxYearLabels()
            );
      }
      get periodButtonLabel() {
        return this.calendar.currentView == "month"
          ? this._intl.switchToMultiYearViewLabel
          : this._intl.switchToMonthViewLabel;
      }
      get prevButtonLabel() {
        return {
          month: this._intl.prevMonthLabel,
          year: this._intl.prevYearLabel,
          "multi-year": this._intl.prevMultiYearLabel,
        }[this.calendar.currentView];
      }
      get nextButtonLabel() {
        return {
          month: this._intl.nextMonthLabel,
          year: this._intl.nextYearLabel,
          "multi-year": this._intl.nextMultiYearLabel,
        }[this.calendar.currentView];
      }
      currentPeriodClicked() {
        this.calendar.currentView =
          this.calendar.currentView == "month" ? "multi-year" : "month";
      }
      previousClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? -1 : -en
              );
      }
      nextClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? 1 : en
              );
      }
      previousEnabled() {
        return this.calendar.minDate
          ? !this.calendar.minDate ||
              !this._isSameView(this.calendar.activeDate, this.calendar.minDate)
          : !0;
      }
      nextEnabled() {
        return (
          !this.calendar.maxDate ||
          !this._isSameView(this.calendar.activeDate, this.calendar.maxDate)
        );
      }
      _isSameView(e, t) {
        return this.calendar.currentView == "month"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t) &&
              this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(t)
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t)
          : Q1(
              this._dateAdapter,
              e,
              t,
              this.calendar.minDate,
              this.calendar.maxDate
            );
      }
      _formatMinAndMaxYearLabels() {
        let t =
            this._dateAdapter.getYear(this.calendar.activeDate) -
            ml(
              this._dateAdapter,
              this.calendar.activeDate,
              this.calendar.minDate,
              this.calendar.maxDate
            ),
          r = t + en - 1,
          o = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(t, 0, 1)
          ),
          a = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(r, 0, 1)
          );
        return [o, a];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            H(gl),
            H(wi(() => lf)),
            H(Ui, 8),
            H(Ea, 8),
            H(Ke)
          );
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["mat-calendar-header"]],
          exportAs: ["matCalendarHeader"],
          standalone: !0,
          features: [ce],
          ngContentSelectors: YO,
          decls: 17,
          vars: 11,
          consts: [
            [1, "mat-calendar-header"],
            [1, "mat-calendar-controls"],
            ["aria-live", "polite", 1, "cdk-visually-hidden", 3, "id"],
            [
              "mat-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-period-button",
              3,
              "click",
            ],
            ["aria-hidden", "true"],
            [
              "viewBox",
              "0 0 10 5",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-calendar-arrow",
            ],
            ["points", "0,0 5,5 10,0"],
            [1, "mat-calendar-spacer"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-previous-button",
              3,
              "click",
              "disabled",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "focusable",
              "false",
              "aria-hidden",
              "true",
            ],
            ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-next-button",
              3,
              "click",
              "disabled",
            ],
            ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
          ],
          template: function (t, r) {
            t & 1 &&
              (Xt(),
              c(0, "div", 0)(1, "div", 1)(2, "span", 2),
              h(3),
              d(),
              c(4, "button", 3),
              N("click", function () {
                return r.currentPeriodClicked();
              }),
              c(5, "span", 4),
              h(6),
              d(),
              ft(),
              c(7, "svg", 5),
              z(8, "polygon", 6),
              d()(),
              $n(),
              z(9, "div", 7),
              Lt(10),
              c(11, "button", 8),
              N("click", function () {
                return r.previousClicked();
              }),
              ft(),
              c(12, "svg", 9),
              z(13, "path", 10),
              d()(),
              $n(),
              c(14, "button", 11),
              N("click", function () {
                return r.nextClicked();
              }),
              ft(),
              c(15, "svg", 9),
              z(16, "path", 12),
              d()()()()),
              t & 2 &&
                (m(2),
                y("id", r._periodButtonLabelId),
                m(),
                B(r.periodButtonDescription),
                m(),
                le("aria-label", r.periodButtonLabel)(
                  "aria-describedby",
                  r._periodButtonLabelId
                ),
                m(2),
                B(r.periodButtonText),
                m(),
                ne("mat-calendar-invert", r.calendar.currentView !== "month"),
                m(4),
                y("disabled", !r.previousEnabled()),
                le("aria-label", r.prevButtonLabel),
                m(3),
                y("disabled", !r.nextEnabled()),
                le("aria-label", r.nextButtonLabel));
          },
          dependencies: [Zm, Jm],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  lf = (() => {
    class n {
      get startAt() {
        return this._startAt;
      }
      set startAt(e) {
        this._startAt = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof gn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ));
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get activeDate() {
        return this._clampedActiveDate;
      }
      set activeDate(e) {
        (this._clampedActiveDate = this._dateAdapter.clampDate(
          e,
          this.minDate,
          this.maxDate
        )),
          this.stateChanges.next(),
          this._changeDetectorRef.markForCheck();
      }
      get currentView() {
        return this._currentView;
      }
      set currentView(e) {
        let t = this._currentView !== e ? e : null;
        (this._currentView = e),
          (this._moveFocusOnNextTick = !0),
          this._changeDetectorRef.markForCheck(),
          t && this.viewChanged.emit(t);
      }
      constructor(e, t, r, o) {
        (this._dateAdapter = t),
          (this._dateFormats = r),
          (this._changeDetectorRef = o),
          (this._moveFocusOnNextTick = !1),
          (this.startView = "month"),
          (this.selectedChange = new xe()),
          (this.yearSelected = new xe()),
          (this.monthSelected = new xe()),
          (this.viewChanged = new xe(!0)),
          (this._userSelection = new xe()),
          (this._userDragDrop = new xe()),
          (this._activeDrag = null),
          (this.stateChanges = new Oe()),
          (this._intlChanges = e.changes.subscribe(() => {
            o.markForCheck(), this.stateChanges.next();
          }));
      }
      ngAfterContentInit() {
        (this._calendarHeaderPortal = new hl(this.headerComponent || Z1)),
          (this.activeDate = this.startAt || this._dateAdapter.today()),
          (this._currentView = this.startView);
      }
      ngAfterViewChecked() {
        this._moveFocusOnNextTick &&
          ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
      }
      ngOnDestroy() {
        this._intlChanges.unsubscribe(), this.stateChanges.complete();
      }
      ngOnChanges(e) {
        let t =
            e.minDate &&
            !this._dateAdapter.sameDate(
              e.minDate.previousValue,
              e.minDate.currentValue
            )
              ? e.minDate
              : void 0,
          r =
            e.maxDate &&
            !this._dateAdapter.sameDate(
              e.maxDate.previousValue,
              e.maxDate.currentValue
            )
              ? e.maxDate
              : void 0,
          o = t || r || e.dateFilter;
        if (o && !o.firstChange) {
          let a = this._getCurrentViewComponent();
          a &&
            ((this._moveFocusOnNextTick = !0),
            this._changeDetectorRef.detectChanges(),
            a._init());
        }
        this.stateChanges.next();
      }
      focusActiveCell() {
        this._getCurrentViewComponent()._focusActiveCell(!1);
      }
      updateTodaysDate() {
        this._getCurrentViewComponent()._init();
      }
      _dateSelected(e) {
        let t = e.value;
        (this.selected instanceof gn ||
          (t && !this._dateAdapter.sameDate(t, this.selected))) &&
          this.selectedChange.emit(t),
          this._userSelection.emit(e);
      }
      _yearSelectedInMultiYearView(e) {
        this.yearSelected.emit(e);
      }
      _monthSelectedInYearView(e) {
        this.monthSelected.emit(e);
      }
      _goToDateInView(e, t) {
        (this.activeDate = e), (this.currentView = t);
      }
      _dragStarted(e) {
        this._activeDrag = e;
      }
      _dragEnded(e) {
        this._activeDrag &&
          (e.value && this._userDragDrop.emit(e), (this._activeDrag = null));
      }
      _getCurrentViewComponent() {
        return this.monthView || this.yearView || this.multiYearView;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(gl), H(Ui, 8), H(Ea, 8), H(Ke));
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["mat-calendar"]],
          viewQuery: function (t, r) {
            if ((t & 1 && (yt($1, 5), yt(G1, 5), yt(W1, 5)), t & 2)) {
              let o;
              ot((o = at())) && (r.monthView = o.first),
                ot((o = at())) && (r.yearView = o.first),
                ot((o = at())) && (r.multiYearView = o.first);
            }
          },
          hostAttrs: [1, "mat-calendar"],
          inputs: {
            headerComponent: "headerComponent",
            startAt: "startAt",
            startView: "startView",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            monthSelected: "monthSelected",
            viewChanged: "viewChanged",
            _userSelection: "_userSelection",
            _userDragDrop: "_userDragDrop",
          },
          exportAs: ["matCalendar"],
          standalone: !0,
          features: [Vt([sk]), wt, ce],
          decls: 5,
          vars: 2,
          consts: [
            [3, "cdkPortalOutlet"],
            [
              "cdkMonitorSubtreeFocus",
              "",
              "tabindex",
              "-1",
              1,
              "mat-calendar-content",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "_userSelection",
              "dragStarted",
              "dragEnded",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDateChange",
              "monthSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "yearSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
          ],
          template: function (t, r) {
            if (
              (t & 1 &&
                (R(0, qO, 0, 0, "ng-template", 0),
                c(1, "div", 1),
                R(2, KO, 1, 11, "mat-month-view", 2)(
                  3,
                  QO,
                  1,
                  6,
                  "mat-year-view",
                  3
                )(4, XO, 1, 6, "mat-multi-year-view", 3),
                d()),
              t & 2)
            ) {
              let o;
              y("cdkPortalOutlet", r._calendarHeaderPortal),
                m(2),
                Cn(
                  (o = r.currentView) === "month"
                    ? 2
                    : o === "year"
                    ? 3
                    : o === "multi-year"
                    ? 4
                    : -1
                );
            }
          },
          dependencies: [Vm, p1, $1, G1, W1],
          styles: [
            '.mat-calendar{display:block;line-height:normal;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-app-on-surface-variant))}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-app-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  Y1 = {
    transformPanel: so("transformPanel", [
      Yi(
        "void => enter-dropdown",
        Gi(
          "120ms cubic-bezier(0, 0, 0.2, 1)",
          ch([
            li({ opacity: 0, transform: "scale(1, 0.8)" }),
            li({ opacity: 1, transform: "scale(1, 1)" }),
          ])
        )
      ),
      Yi(
        "void => enter-dialog",
        Gi(
          "150ms cubic-bezier(0, 0, 0.2, 1)",
          ch([
            li({ opacity: 0, transform: "scale(0.7)" }),
            li({ transform: "none", opacity: 1 }),
          ])
        )
      ),
      Yi("* => void", Gi("100ms linear", li({ opacity: 0 }))),
    ]),
    fadeInCalendar: so("fadeInCalendar", [
      ur("void", li({ opacity: 0 })),
      ur("enter", li({ opacity: 1 })),
      Yi("void => *", Gi("120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)")),
    ]),
  };
var uk = new we("mat-datepicker-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let n = G(Ta);
    return () => n.scrollStrategies.reposition();
  },
});
function hk(n) {
  return () => n.scrollStrategies.reposition();
}
var pk = { provide: uk, deps: [Ta], useFactory: hk },
  mk = (() => {
    class n {
      constructor(e, t, r, o, a, l) {
        (this._elementRef = e),
          (this._changeDetectorRef = t),
          (this._globalModel = r),
          (this._dateAdapter = o),
          (this._rangeSelectionStrategy = a),
          (this._subscriptions = new zi()),
          (this._animationDone = new Oe()),
          (this._isAnimating = !1),
          (this._actionsPortal = null),
          (this._closeButtonText = l.closeCalendarLabel);
      }
      ngOnInit() {
        this._animationState = this.datepicker.touchUi
          ? "enter-dialog"
          : "enter-dropdown";
      }
      ngAfterViewInit() {
        this._subscriptions.add(
          this.datepicker.stateChanges.subscribe(() => {
            this._changeDetectorRef.markForCheck();
          })
        ),
          this._calendar.focusActiveCell();
      }
      ngOnDestroy() {
        this._subscriptions.unsubscribe(), this._animationDone.complete();
      }
      _handleUserSelection(e) {
        let t = this._model.selection,
          r = e.value,
          o = t instanceof gn;
        if (o && this._rangeSelectionStrategy) {
          let a = this._rangeSelectionStrategy.selectionFinished(r, t, e.event);
          this._model.updateSelection(a, this);
        } else
          r && (o || !this._dateAdapter.sameDate(r, t)) && this._model.add(r);
        (!this._model || this._model.isComplete()) &&
          !this._actionsPortal &&
          this.datepicker.close();
      }
      _handleUserDragDrop(e) {
        this._model.updateSelection(e.value, this);
      }
      _startExitAnimation() {
        (this._animationState = "void"), this._changeDetectorRef.markForCheck();
      }
      _handleAnimationEvent(e) {
        (this._isAnimating = e.phaseName === "start"),
          this._isAnimating || this._animationDone.next();
      }
      _getSelected() {
        return this._model.selection;
      }
      _applyPendingSelection() {
        this._model !== this._globalModel &&
          this._globalModel.updateSelection(this._model.selection, this);
      }
      _assignActions(e, t) {
        (this._model = e ? this._globalModel.clone() : this._globalModel),
          (this._actionsPortal = e),
          t && this._changeDetectorRef.detectChanges();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(Fe), H(Ke), H(Gd), H(Ui), H(K1, 8), H(gl));
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["mat-datepicker-content"]],
          viewQuery: function (t, r) {
            if ((t & 1 && yt(lf, 5), t & 2)) {
              let o;
              ot((o = at())) && (r._calendar = o.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-content"],
          hostVars: 5,
          hostBindings: function (t, r) {
            t & 1 &&
              Ng("@transformPanel.start", function (a) {
                return r._handleAnimationEvent(a);
              })("@transformPanel.done", function (a) {
                return r._handleAnimationEvent(a);
              }),
              t & 2 &&
                (Yl("@transformPanel", r._animationState),
                Be(r.color ? "mat-" + r.color : ""),
                ne("mat-datepicker-content-touch", r.datepicker.touchUi));
          },
          inputs: { color: "color" },
          exportAs: ["matDatepickerContent"],
          standalone: !0,
          features: [ce],
          decls: 5,
          vars: 27,
          consts: [
            [
              "cdkTrapFocus",
              "",
              "role",
              "dialog",
              1,
              "mat-datepicker-content-container",
            ],
            [
              3,
              "yearSelected",
              "monthSelected",
              "viewChanged",
              "_userSelection",
              "_userDragDrop",
              "id",
              "startAt",
              "startView",
              "minDate",
              "maxDate",
              "dateFilter",
              "headerComponent",
              "selected",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [3, "cdkPortalOutlet"],
            [
              "type",
              "button",
              "mat-raised-button",
              "",
              1,
              "mat-datepicker-close-button",
              3,
              "focus",
              "blur",
              "click",
              "color",
            ],
          ],
          template: function (t, r) {
            if (
              (t & 1 &&
                (c(0, "div", 0)(1, "mat-calendar", 1),
                N("yearSelected", function (a) {
                  return r.datepicker._selectYear(a);
                })("monthSelected", function (a) {
                  return r.datepicker._selectMonth(a);
                })("viewChanged", function (a) {
                  return r.datepicker._viewChanged(a);
                })("_userSelection", function (a) {
                  return r._handleUserSelection(a);
                })("_userDragDrop", function (a) {
                  return r._handleUserDragDrop(a);
                }),
                d(),
                R(2, ZO, 0, 0, "ng-template", 2),
                c(3, "button", 3),
                N("focus", function () {
                  return (r._closeButtonFocused = !0);
                })("blur", function () {
                  return (r._closeButtonFocused = !1);
                })("click", function () {
                  return r.datepicker.close();
                }),
                h(4),
                d()()),
              t & 2)
            ) {
              let o;
              ne(
                "mat-datepicker-content-container-with-custom-header",
                r.datepicker.calendarHeaderComponent
              )(
                "mat-datepicker-content-container-with-actions",
                r._actionsPortal
              ),
                le("aria-modal", !0)(
                  "aria-labelledby",
                  (o = r._dialogLabelId) !== null && o !== void 0 ? o : void 0
                ),
                m(),
                Be(r.datepicker.panelClass),
                y("id", r.datepicker.id)("startAt", r.datepicker.startAt)(
                  "startView",
                  r.datepicker.startView
                )("minDate", r.datepicker._getMinDate())(
                  "maxDate",
                  r.datepicker._getMaxDate()
                )("dateFilter", r.datepicker._getDateFilter())(
                  "headerComponent",
                  r.datepicker.calendarHeaderComponent
                )("selected", r._getSelected())(
                  "dateClass",
                  r.datepicker.dateClass
                )("comparisonStart", r.comparisonStart)(
                  "comparisonEnd",
                  r.comparisonEnd
                )("@fadeInCalendar", "enter")(
                  "startDateAccessibleName",
                  r.startDateAccessibleName
                )("endDateAccessibleName", r.endDateAccessibleName),
                m(),
                y("cdkPortalOutlet", r._actionsPortal),
                m(),
                ne("cdk-visually-hidden", !r._closeButtonFocused),
                y("color", r.color || "primary"),
                m(),
                B(r._closeButtonText);
            }
          },
          dependencies: [u1, lf, Vm, Zm],
          styles: [
            ".mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-app-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-app-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-app-corner-large))}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}",
          ],
          encapsulation: 2,
          data: { animation: [Y1.transformPanel, Y1.fadeInCalendar] },
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var fk = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "matDatepickerToggleIcon", ""]],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  gk = (() => {
    class n {
      get disabled() {
        return this._disabled === void 0 && this.datepicker
          ? this.datepicker.disabled
          : !!this._disabled;
      }
      set disabled(e) {
        this._disabled = e;
      }
      constructor(e, t, r) {
        (this._intl = e),
          (this._changeDetectorRef = t),
          (this._stateChanges = zi.EMPTY);
        let o = Number(r);
        this.tabIndex = o || o === 0 ? o : null;
      }
      ngOnChanges(e) {
        e.datepicker && this._watchStateChanges();
      }
      ngOnDestroy() {
        this._stateChanges.unsubscribe();
      }
      ngAfterContentInit() {
        this._watchStateChanges();
      }
      _open(e) {
        this.datepicker &&
          !this.disabled &&
          (this.datepicker.open(), e.stopPropagation());
      }
      _watchStateChanges() {
        let e = this.datepicker ? this.datepicker.stateChanges : fe(),
          t =
            this.datepicker && this.datepicker.datepickerInput
              ? this.datepicker.datepickerInput.stateChanges
              : fe(),
          r = this.datepicker
            ? zo(this.datepicker.openedStream, this.datepicker.closedStream)
            : fe();
        this._stateChanges.unsubscribe(),
          (this._stateChanges = zo(this._intl.changes, e, t, r).subscribe(() =>
            this._changeDetectorRef.markForCheck()
          ));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(H(gl), H(Ke), Wo("tabindex"));
        };
      }
      static {
        this.ɵcmp = ae({
          type: n,
          selectors: [["mat-datepicker-toggle"]],
          contentQueries: function (t, r, o) {
            if ((t & 1 && ln(o, fk, 5), t & 2)) {
              let a;
              ot((a = at())) && (r._customIcon = a.first);
            }
          },
          viewQuery: function (t, r) {
            if ((t & 1 && yt(JO, 5), t & 2)) {
              let o;
              ot((o = at())) && (r._button = o.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-toggle"],
          hostVars: 8,
          hostBindings: function (t, r) {
            t & 1 &&
              N("click", function (a) {
                return r._open(a);
              }),
              t & 2 &&
                (le("tabindex", null)(
                  "data-mat-calendar",
                  r.datepicker ? r.datepicker.id : null
                ),
                ne(
                  "mat-datepicker-toggle-active",
                  r.datepicker && r.datepicker.opened
                )(
                  "mat-accent",
                  r.datepicker && r.datepicker.color === "accent"
                )("mat-warn", r.datepicker && r.datepicker.color === "warn"));
          },
          inputs: {
            datepicker: [0, "for", "datepicker"],
            tabIndex: "tabIndex",
            ariaLabel: [0, "aria-label", "ariaLabel"],
            disabled: [2, "disabled", "disabled", Se],
            disableRipple: "disableRipple",
          },
          exportAs: ["matDatepickerToggle"],
          standalone: !0,
          features: [kt, wt, ce],
          ngContentSelectors: tk,
          decls: 4,
          vars: 6,
          consts: [
            ["button", ""],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              3,
              "disabled",
              "disableRipple",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "width",
              "24px",
              "height",
              "24px",
              "fill",
              "currentColor",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-datepicker-toggle-default-icon",
            ],
            [
              "d",
              "M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z",
            ],
          ],
          template: function (t, r) {
            t & 1 &&
              (Xt(ek),
              c(0, "button", 1, 0),
              R(2, ik, 2, 0, ":svg:svg", 2),
              Lt(3),
              d()),
              t & 2 &&
                (y("disabled", r.disabled)("disableRipple", r.disableRipple),
                le("aria-haspopup", r.datepicker ? "dialog" : null)(
                  "aria-label",
                  r.ariaLabel || r._intl.openCalendarLabel
                )("tabindex", r.disabled ? -1 : r.tabIndex),
                m(2),
                Cn(r._customIcon ? -1 : 2));
          },
          dependencies: [Jm],
          styles: [
            ".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var Yd = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({
        providers: [gl, pk],
        imports: [Ae, H1, M1, m1, Vd, Ji, mk, gk, Z1, Fd],
      });
    }
  }
  return n;
})();
var _f = new we("@sweetalert2/ngx-sweetalert2#swalProvider"),
  J1 = new we("@sweetalert2/ngx-sweetalert2#fireOnInit"),
  ey = new we("@sweetalert2/ngx-sweetalert2#dismissOnDestroy"),
  ty = (() => {
    class n {
      swalProvider;
      swalPromiseCache;
      constructor(e) {
        this.swalProvider = e;
      }
      get swal() {
        return (
          this.swalPromiseCache || this.preloadSweetAlertLibrary(),
          this.swalPromiseCache
        );
      }
      preloadSweetAlertLibrary() {
        if (this.swalPromiseCache) return;
        let e = t(this.swalProvider)
          ? this.swalProvider()
          : Promise.resolve(this.swalProvider);
        this.swalPromiseCache = e.then((o) => (r(o) ? o : o.default));
        function t(o) {
          return typeof o == "function" && o.version === void 0;
        }
        function r(o) {
          return typeof o == "function";
        }
      }
      static ɵfac = function (t) {
        return new (t || n)(Q(_f));
      };
      static ɵprov = J({ token: n, factory: n.ɵfac });
    }
    return n;
  })();
function _k() {
  return import("./chunk-EI52ECUO.js");
}
var iy = (() => {
  class n {
    static forRoot(e = {}) {
      return {
        ngModule: n,
        providers: [
          ty,
          { provide: _f, useValue: e.provideSwal || _k },
          { provide: J1, useValue: e.fireOnInit || !1 },
          { provide: ey, useValue: e.dismissOnDestroy || !0 },
        ],
      };
    }
    static forChild(e = {}) {
      return {
        ngModule: n,
        providers: [
          ...(e.provideSwal
            ? [ty, { provide: _f, useValue: e.provideSwal }]
            : []),
          ...(e.fireOnInit !== void 0
            ? [{ provide: J1, useValue: e.fireOnInit }]
            : []),
          ...(e.dismissOnDestroy !== void 0
            ? [{ provide: ey, useValue: e.dismissOnDestroy }]
            : []),
        ],
      };
    }
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = ye({ type: n });
    static ɵinj = ve({ imports: [Ae] });
  }
  return n;
})();
var ko = (n) => ({ "is-invalid": n }),
  bk = (n, i) => ({ "btn-outline-primary": n, "btn-edit-enabled": i });
function vk(n, i) {
  n & 1 &&
    (c(0, "tr")(1, "td", 48)(2, "p"), h(3, "No Vehicles Found"), d()()());
}
function yk(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "tr")(1, "td", 34),
      h(2),
      d(),
      c(3, "td", 34),
      h(4),
      d(),
      c(5, "td", 34),
      h(6),
      d(),
      c(7, "td", 34),
      h(8),
      d(),
      c(9, "td", 34),
      h(10),
      d(),
      c(11, "td", 34),
      h(12),
      d(),
      c(13, "td", 34),
      h(14),
      d(),
      c(15, "td", 34),
      h(16),
      d(),
      c(17, "td")(18, "div", 49)(19, "a", 50),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.onEdit(r));
      }),
      z(20, "i", 51),
      d(),
      c(21, "a", 52),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.openDeleteModal(r));
      }),
      z(22, "i", 53),
      d()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x();
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.vehicle_name),
      m(2),
      B(e.YOM),
      m(2),
      B(e.type),
      m(2),
      B(e.VIN),
      m(2),
      B(e.chasis_number),
      m(2),
      B(e.demo_start_date),
      m(2),
      B(e.demo_end_date);
  }
}
function xk(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "li", 54)(1, "a", 43),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.goToPage(r));
      }),
      h(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x();
    ne("active", e === t.currentPage), m(2), B(e);
  }
}
function Ck(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 55)(1, "div", 56)(2, "div", 57)(3, "div", 58)(4, "h5", 59),
      h(5, "Delete User"),
      d()(),
      c(6, "div", 60),
      h(7, "Are you sure you want to delete this user?"),
      d(),
      c(8, "div", 61)(9, "button", 62),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeDeleteModal());
      }),
      h(10, "Cancel"),
      d(),
      c(11, "button", 63),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.deleteVehicleId());
      }),
      h(12, "Delete"),
      d()()()()();
  }
}
function wk(n, i) {
  n & 1 && (c(0, "span", 98), h(1, "*"), d());
}
function Dk(n, i) {
  n & 1 &&
    (c(0, "div", 99)(1, "span"), h(2, "Vehicle name is required."), d()());
}
function Sk(n, i) {
  n & 1 && (c(0, "span", 99), h(1, "*"), d());
}
function Mk(n, i) {
  n & 1 && (c(0, "span"), h(1, "YOM is required."), d());
}
function Tk(n, i) {
  if ((n & 1 && (c(0, "div", 99), R(1, Mk, 2, 0, "span", 35), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("YOM")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Ek(n, i) {
  n & 1 && (c(0, "span", 98), h(1, "*"), d());
}
function Ok(n, i) {
  n & 1 && (c(0, "div", 99)(1, "span"), h(2, "Type is required."), d()());
}
function kk(n, i) {
  n & 1 && (c(0, "span", 99), h(1, "*"), d());
}
function Pk(n, i) {
  n & 1 && (c(0, "span"), h(1, " Chasis number is required. "), d());
}
function Ik(n, i) {
  if ((n & 1 && (c(0, "div", 99), R(1, Pk, 2, 0, "span", 35), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("chasis_number")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Ak(n, i) {
  n & 1 && (c(0, "span", 99), h(1, "*"), d());
}
function Rk(n, i) {
  n & 1 && (c(0, "span", 101), h(1, " Start date is required. "), d());
}
function Fk(n, i) {
  if ((n & 1 && (c(0, "div", 99), R(1, Rk, 2, 0, "span", 100), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("demo_start_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Nk(n, i) {
  n & 1 && (c(0, "span", 99), h(1, "*"), d());
}
function Lk(n, i) {
  n & 1 && (c(0, "span"), h(1, " End date is required. "), d());
}
function Vk(n, i) {
  if ((n & 1 && (c(0, "div", 99), R(1, Lk, 2, 0, "span", 35), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("demo_end_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Bk(n, i) {
  n & 1 && (c(0, "span", 99), h(1, "*"), d());
}
function Hk(n, i) {
  n & 1 && (c(0, "span"), h(1, " VIN is required. "), d());
}
function jk(n, i) {
  if ((n & 1 && (c(0, "div", 99), R(1, Hk, 2, 0, "span", 35), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("VIN")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Uk(n, i) {
  if (n & 1) {
    let e = re();
    Ue(0),
      c(1, "button", 102),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.onUpdate());
      }),
      h(2, " Edit "),
      d(),
      ze();
  }
  if (n & 2) {
    let e = x(2);
    m(),
      y("disabled", !e.isVehicleNameChanged())(
        "ngClass",
        Ni(2, bk, !e.isVehicleNameChanged(), e.isVehicleNameChanged())
      );
  }
}
function zk(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 62),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.onSave());
      }),
      h(1, " Save "),
      d();
  }
  if (n & 2) {
    let e = x(2);
    le("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function $k(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 64)(1, "div", 65)(2, "div", 66)(3, "div", 57)(4, "div", 58)(
      5,
      "h5",
      67
    ),
      h(6),
      d(),
      c(7, "button", 68),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeModal());
      }),
      c(8, "span", 69),
      h(9, "\xD7"),
      d()()(),
      c(10, "div", 70)(11, "div", 71)(12, "div", 72)(13, "label", 73),
      h(14, " Vehicle Name "),
      R(15, wk, 2, 0, "span", 74),
      d(),
      z(16, "input", 75),
      R(17, Dk, 3, 0, "div", 76),
      d(),
      c(18, "div", 77)(19, "label", 78),
      h(20, " YOM "),
      R(21, Sk, 2, 0, "span", 76),
      d(),
      z(22, "input", 79),
      R(23, Tk, 2, 1, "div", 76),
      d()(),
      c(24, "div", 71)(25, "div", 72)(26, "label", 80),
      h(27, " Type "),
      R(28, Ek, 2, 0, "span", 74),
      d(),
      c(29, "select", 81)(30, "option", 82),
      h(31, "Select Type"),
      d(),
      c(32, "option", 83),
      h(33, "Petrol"),
      d(),
      c(34, "option", 84),
      h(35, "Diesel"),
      d(),
      c(36, "option", 85),
      h(37, "EV"),
      d()(),
      R(38, Ok, 3, 0, "div", 76),
      d(),
      c(39, "div", 72)(40, "label", 86),
      h(41, " Chasis Number "),
      R(42, kk, 2, 0, "span", 76),
      d(),
      z(43, "input", 87),
      R(44, Ik, 2, 1, "div", 76),
      d(),
      c(45, "div", 88)(46, "div", 72)(47, "label", 89),
      h(48, " Start date "),
      R(49, Ak, 2, 0, "span", 76),
      d(),
      z(50, "input", 90),
      R(51, Fk, 2, 1, "div", 76),
      d()(),
      c(52, "div", 91)(53, "label", 92),
      h(54, " End date "),
      R(55, Nk, 2, 0, "span", 76),
      d(),
      z(56, "input", 93),
      R(57, Vk, 2, 1, "div", 76),
      d(),
      c(58, "div", 94)(59, "label", 95),
      h(60, " VIN "),
      R(61, Bk, 2, 0, "span", 76),
      d(),
      z(62, "input", 96),
      R(63, jk, 2, 1, "div", 76),
      d()()(),
      c(64, "div", 61),
      R(65, Uk, 3, 5, "ng-container", 97),
      c(66, "button", 63),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeModal());
      }),
      h(67, " Close "),
      d(),
      R(68, zk, 2, 1, "ng-template", null, 0, Pt),
      d()()()()();
  }
  if (n & 2) {
    let e,
      t,
      r,
      o,
      a,
      l,
      u,
      f,
      v,
      D,
      T,
      M,
      k,
      V,
      A = _t(69),
      E = x();
    m(6),
      ee(
        " ",
        E.vehicleObj.vehicle_id ? "Edit Vehicle" : "Add New Vehicle",
        " "
      ),
      m(4),
      y("formGroup", E.useForm),
      m(5),
      y("ngIf", !E.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          25,
          ko,
          !E.isEditMode &&
            ((e = E.useForm.get("vehicle_name")) == null ? null : e.touched) &&
            ((e = E.useForm.get("vehicle_name")) == null ? null : e.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !E.isEditMode &&
          ((t = E.useForm.get("vehicle_name")) == null ? null : t.touched) &&
          ((t = E.useForm.get("vehicle_name")) == null ? null : t.invalid)
      ),
      m(4),
      y("ngIf", !E.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          27,
          ko,
          !E.isEditMode &&
            ((r = E.useForm.get("YOM")) == null ? null : r.touched) &&
            ((r = E.useForm.get("YOM")) == null ? null : r.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !E.isEditMode &&
          ((o = E.useForm.get("YOM")) == null ? null : o.touched) &&
          ((o = E.useForm.get("YOM")) == null ? null : o.invalid)
      ),
      m(5),
      y("ngIf", !E.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          29,
          ko,
          !E.isEditMode &&
            ((a = E.useForm.get("type")) == null ? null : a.touched) &&
            ((a = E.useForm.get("type")) == null ? null : a.invalid)
        )
      ),
      m(9),
      y(
        "ngIf",
        !E.isEditMode &&
          ((l = E.useForm.get("type")) == null ? null : l.touched) &&
          ((l = E.useForm.get("type")) == null ? null : l.invalid)
      ),
      m(4),
      y("ngIf", !E.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          31,
          ko,
          !E.isEditMode &&
            ((u = E.useForm.get("chasis_number")) == null ? null : u.touched) &&
            ((u = E.useForm.get("chasis_number")) == null ? null : u.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !E.isEditMode &&
          ((f = E.useForm.get("chasis_number")) == null ? null : f.touched) &&
          ((f = E.useForm.get("chasis_number")) == null ? null : f.invalid)
      ),
      m(5),
      y("ngIf", !E.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          33,
          ko,
          !E.isEditMode &&
            ((v = E.useForm.get("demo_start_date")) == null
              ? null
              : v.touched) &&
            ((v = E.useForm.get("demo_start_date")) == null ? null : v.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !E.isEditMode &&
          ((D = E.useForm.get("demo_start_date")) == null ? null : D.touched) &&
          ((D = E.useForm.get("demo_start_date")) == null ? null : D.invalid)
      ),
      m(4),
      y("ngIf", !E.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          35,
          ko,
          !E.isEditMode &&
            ((T = E.useForm.get("demo_end_date")) == null ? null : T.touched) &&
            ((T = E.useForm.get("demo_end_date")) == null ? null : T.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !E.isEditMode &&
          ((M = E.useForm.get("demo_end_date")) == null ? null : M.touched) &&
          ((M = E.useForm.get("demo_end_date")) == null ? null : M.invalid)
      ),
      m(4),
      y("ngIf", !E.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          37,
          ko,
          !E.isEditMode &&
            ((k = E.useForm.get("VIN")) == null ? null : k.touched) &&
            ((k = E.useForm.get("VIN")) == null ? null : k.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !E.isEditMode &&
          ((V = E.useForm.get("VIN")) == null ? null : V.touched) &&
          ((V = E.useForm.get("VIN")) == null ? null : V.invalid)
      ),
      m(2),
      y(
        "ngIf",
        E.vehicleObj.vehicle_id !== null && E.vehicleObj.vehicle_id !== void 0
      )("ngIfElse", A);
  }
}
var qd = class n {
  constructor(i) {
    this.changeDetectorRef = i;
    this.initializeForm();
  }
  count = pe(0);
  vehicleList = pe([]);
  totalVehicle = pe(0);
  vehicles = [];
  paginatedVehicles = [];
  masterSrv = G(Qe);
  toastr = G(fi);
  modalService = G(sl);
  vehicleObj = new ll();
  isModalVisible = !1;
  isEditMode = !1;
  previousValue = "";
  isModalOpen = !1;
  filteredVehicle = [];
  searchTerm = "";
  filteredVehicles = [];
  currentPage = 1;
  itemsPerPage = 10;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  useForm = new Rt({});
  ngOnInit() {
    this.loadVehicles(),
      (this.filteredVehicles = this.vehicleList()),
      this.paginateVehicles(),
      this.filterVehicles();
  }
  initializeForm() {
    this.useForm = new Rt({
      vehicle_name: new nt("", [
        Re.required,
        Re.minLength(2),
        Re.maxLength(50),
      ]),
      VIN: new nt("", [Re.required]),
      type: new nt("", [Re.required]),
      YOM: new nt("", [Re.required]),
      chasis_number: new nt("", [Re.required]),
      demo_start_date: new nt("", [Re.required]),
      demo_end_date: new nt("", [Re.required]),
    });
  }
  loadVehicles() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (i) => {
        this.count.set(i.data.count),
          (this.vehicles = i.data.rows),
          this.vehicleList.set(this.vehicles),
          (this.filteredVehicles = [...this.vehicles]),
          (this.currentPage = 1),
          this.paginateVehicles();
      },
      error: (i) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", i);
      },
    });
  }
  openModal(i) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      console.log("hello"),
      i
        ? ((this.vehicleObj = W({}, i)),
          this.useForm.patchValue({
            vehicle_name: i.vehicle_name || "",
            VIN: i.VIN || "",
            type: i.type || "",
            YOM: this.formatDate(i.YOM) || "",
            demo_start_date: i.demo_start_date
              ? this.formatDate(i.demo_start_date)
              : "",
            demo_end_date: i.demo_end_date
              ? this.formatDate(i.demo_end_date)
              : "",
            chasis_number: i.chasis_number || "",
          }))
        : ((this.vehicleObj = new ll()),
          (this.vehicleObj.vehicle_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.vehicleObj
          ));
  }
  onSave() {
    console.log("onsave being called"),
      console.log(this.useForm.value),
      console.log(
        "Form end_date value:",
        this.useForm.get("demo_end_date")?.value
      );
    let i = new Date(this.useForm.get("demo_start_date")?.value);
    if (new Date(this.useForm.get("demo_end_date")?.value) < i) {
      this.toastr.error(
        "End date cannot be before start date.",
        "Date Validation"
      );
      return;
    }
    if (this.useForm.invalid) {
      this.markFormGroupTouched(this.useForm),
        console.log("Form Values:", this.useForm.value),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let t = this.useForm.value;
    console.log("Form Data being sent to API:", t),
      this.masterSrv.createNewVehicle(t).subscribe({
        next: () => {
          this.toastr.success("Vehicle created successfully!", "Success"),
            this.getAllVehicle(),
            this.closeModal();
        },
        error: (r) => {
          console.error("Vehicle creation error:", r);
          let o = r.error?.message || "Failed to create vehicle";
          this.toastr.error(o, "Creation Error");
        },
      });
  }
  getAllVehicle() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.totalVehicle.set(i.data.count),
            this.vehicleList.set(i.data.rows),
            (this.paginatedVehicles = this.vehicleList().slice(
              (this.currentPage - 1) * this.itemsPerPage,
              this.currentPage * this.itemsPerPage
            )))
          : this.toastr.warning("No Vehicle found", "Information");
      },
      error: (i) => {
        console.error("Vehicle fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch vehicles", "Error");
      },
    });
  }
  getShowingFrom() {
    return this.filteredVehicles.length === 0
      ? 0
      : (this.currentPage - 1) * this.itemsPerPage + 1;
  }
  getShowingTo() {
    return this.filteredVehicles.length === 0
      ? 0
      : Math.min(
          this.currentPage * this.itemsPerPage,
          this.filteredVehicles.length
        );
  }
  onUpdate() {
    if (!this.vehicleObj || !this.vehicleObj.vehicle_id) {
      this.toastr.warning("No vehicle selected for update!", "Warning");
      return;
    }
    (this.vehicleObj = W(W({}, this.vehicleObj), this.useForm.value)),
      console.log("Updating vehicle:", this.vehicleObj),
      this.masterSrv.updateVehicle(this.vehicleObj).subscribe(
        (i) => {
          i && i.status === 200
            ? (this.toastr.success(
                i.message || "Vehicle updated successfully",
                "Success"
              ),
              this.loadVehicles(),
              this.closeModal())
            : this.toastr.warning("Update failed, check data.", "Warning");
        },
        (i) => {
          this.toastr.error("Error updating vehicle", "Error");
        }
      );
  }
  getAllVehicles() {}
  onSearchChange() {
    (this.currentPage = 1), this.filterVehicles();
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = +i.target.value),
      (this.currentPage = 1),
      this.paginateVehicles();
  }
  displayAllVehicles() {
    (this.filteredVehicles = this.vehicleList()), this.paginateVehicles();
  }
  filterVehicles() {
    let i = this.vehicleList();
    if (
      (console.log("\u{1F50D} Raw vehicle list:", i),
      console.log("\u{1F50E} Current search term:", this.searchTerm),
      !this.searchTerm || this.searchTerm.trim() === "")
    )
      console.log("\u{1F4C4} Empty search term. Showing full list."),
        (this.filteredVehicles = i);
    else {
      let e = this.searchTerm.trim().toLowerCase();
      console.log("\u{1F50D} Normalized search term:", e),
        (this.filteredVehicles = i.filter((t) => {
          let r =
            t.vehicle_name?.toLowerCase().includes(e) ||
            t.VIN?.toLowerCase().includes(e) ||
            t.chasis_number?.toLowerCase().includes(e) ||
            t.type?.toLowerCase().includes(e);
          return (
            console.log("\u{1F697} Checking vehicle:", t, "=> Match:", r), r
          );
        })),
        console.log("\u2705 Filtered vehicles:", this.filteredVehicles);
    }
    (this.currentPage = 1), this.paginateVehicles();
  }
  paginateVehicles() {
    (this.totalPages = Math.ceil(
      this.filteredVehicles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updatePaginatedVehicles();
  }
  updatePaginatedVehicles() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedVehicles = this.filteredVehicles.slice(i, e);
  }
  goToPage(i) {
    (this.currentPage = i), this.updatePaginatedVehicles();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updatePaginatedVehicles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updatePaginatedVehicles());
  }
  selectedVehicleForDeletion = null;
  selectVehicleForDeletion(i) {
    (this.selectedVehicleForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  openDeleteModal(i) {
    (this.selectedVehicleForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  deleteVehicleId() {
    let i = this.selectedVehicleForDeletion;
    if (i && i.vehicle_id) {
      let e = i.vehicle_id;
      this.masterSrv.deleteVehicle(e).subscribe(
        (t) => {
          this.toastr.success("Vehicle deleted successfully", "Success"),
            (this.isDeleteModalOpen = !1);
          let r = this.vehicleList().filter((o) => o.vehicle_id !== e);
          this.vehicleList.set(r),
            (this.filteredVehicles = [...r]),
            this.paginateVehicles();
        },
        (t) => {
          this.toastr.error("Server Error", "Error");
        }
      );
    } else alert("No Vehicle selected for deletion");
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  formatDateForInput(i) {
    if (!i) return "";
    let e = new Date(i);
    return isNaN(e.getTime()) ? "" : e.toISOString().split("T")[0];
  }
  onEdit(i) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", i?.vehicle_id),
      (this.vehicleObj = W({}, i)),
      (this.previousValue = i.vehicle_name),
      this.useForm.patchValue({
        vehicle_name: i.vehicle_name,
        VIN: i.VIN,
        type: i.type,
        YOM: this.formatDate(i.YOM),
        chasis_number: i.chasis_number,
        demo_start_date: i.demo_start_date,
        demo_end_date: i.demo_end_date,
      }),
      console.log(
        "vehicleobj.vehicle_id after setting:",
        this.vehicleObj?.vehicle_id
      );
  }
  isVehicleNameChanged() {
    return this.useForm.dirty && this.useForm.value.name !== this.previousValue;
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof Rt && this.markFormGroupTouched(e);
    });
  }
  formatDate(i) {
    return i ? new Date(i).toISOString().split("T")[0] : "";
  }
  isFieldInvalid(i) {
    let e = this.useForm.get(i);
    return !!(e && e.invalid && (e.dirty || e.touched));
  }
  isVehicleName() {
    return this.useForm.value.vehicle_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Ke));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-vehicle"]],
    standalone: !0,
    features: [ce],
    decls: 82,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", "mt-10"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search Vehicles...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "9", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
      ],
      [1, "modal-dialog", "modal-lg"],
      [
        1,
        "modal-title",
        2,
        "align-items",
        "center",
        "margin-inline",
        "auto",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      [
        "for",
        "vehicle_name",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      ["style", "color: red;", 4, "ngIf"],
      [
        "id",
        "vehicle_name",
        "type",
        "text",
        "placeholder",
        "Vehicle Name",
        "formControlName",
        "vehicle_name",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "form-group", "col-md-6"],
      [
        "for",
        "YOM",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "YOM",
        "type",
        "date",
        "formControlName",
        "YOM",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [
        "for",
        "typeSelect",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "typeSelect",
        "formControlName",
        "type",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "pointer",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "petrol"],
      ["value", "diesel"],
      ["value", "EV"],
      [
        "for",
        "chasis_number",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "chasis_number",
        "type",
        "text",
        "placeholder",
        "Enter Chassis Number",
        "formControlName",
        "chasis_number",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "row", 2, "margin-left", "-3px !important"],
      [
        "for",
        "demo_start_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "demo_start_date",
        "type",
        "date",
        "placeholder",
        "start date",
        "formControlName",
        "demo_start_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "17px"],
      [
        "for",
        "demo_end_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
        "margin-left",
        "-2px",
      ],
      [
        "id",
        "demo_end_date",
        "type",
        "date",
        "placeholder",
        "end date",
        "formControlName",
        "demo_end_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "5px"],
      [
        "for",
        "vin",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "vin",
        "type",
        "text",
        "placeholder",
        "VIN",
        "formControlName",
        "VIN",
        1,
        "form-control",
        "form-control-lg",
        2,
        "margin-left",
        "-5px",
        3,
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [2, "color", "red"],
      [1, "text-danger"],
      ["style", "white-space: nowrap;", 4, "ngIf"],
      [2, "white-space", "nowrap"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        3,
        "click",
        "disabled",
        "ngClass",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Transaction"),
        d()(),
        c(7, "li", 7)(8, "a", 8),
        h(9, "Vehicle Master"),
        d()()()(),
        c(10, "div", 9)(11, "div", 10)(12, "a", 11),
        N("click", function () {
          return t.openModal();
        }),
        z(13, "i", 12),
        h(14, "Add Vehicle "),
        d()(),
        c(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Vehicle"),
        d(),
        c(19, "h3", 16),
        h(20),
        d()()()(),
        c(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        z(26, "label", 22),
        c(27, "select", 23),
        N("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        c(28, "option", 24),
        h(29, "10"),
        d(),
        c(30, "option", 25),
        h(31, "25"),
        d(),
        c(32, "option", 26),
        h(33, "50"),
        d(),
        c(34, "option", 27),
        h(35, "100"),
        d()(),
        c(36, "label", 28),
        h(37, "records per page"),
        d()(),
        c(38, "div", 29)(39, "div", 30)(40, "input", 31),
        ht("ngModelChange", function (o) {
          return ut(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        N("input", function () {
          return t.onSearchChange();
        }),
        d()()()(),
        c(41, "div", 32)(42, "table", 33)(43, "thead")(44, "tr")(45, "th", 34),
        h(46, "Sr No"),
        d(),
        c(47, "th", 34),
        h(48, "Vehicle Name"),
        d(),
        c(49, "th", 34),
        h(50, "YOM"),
        d(),
        c(51, "th", 34),
        h(52, "Type"),
        d(),
        c(53, "th", 34),
        h(54, "VIN"),
        d(),
        c(55, "th", 34),
        h(56, "Chasis number"),
        d(),
        c(57, "th", 34),
        h(58, "Demo start date"),
        d(),
        c(59, "th", 34),
        h(60, "Demo end date"),
        d(),
        c(61, "th", 34),
        h(62, "Action"),
        d()()(),
        c(63, "tbody"),
        R(64, vk, 4, 0, "tr", 35)(65, yk, 23, 8, "tr", 36),
        d()()(),
        c(66, "div", 37)(67, "div", 38)(68, "div", 39),
        h(69),
        d()(),
        c(70, "div", 38)(71, "div", 40)(72, "ul", 41)(73, "li", 42)(
          74,
          "a",
          43
        ),
        N("click", function () {
          return t.previousPage();
        }),
        h(75, "Previous"),
        d()(),
        R(76, xk, 3, 3, "li", 44),
        c(77, "li", 45)(78, "a", 43),
        N("click", function () {
          return t.nextPage();
        }),
        h(79, "Next"),
        d()()()()()()()()()(),
        R(80, Ck, 13, 0, "div", 46)(81, $k, 70, 39, "div", 47),
        d()),
        e & 2 &&
          (m(20),
          ee(" ", t.count(), " "),
          m(20),
          dt("ngModel", t.searchTerm),
          m(24),
          y("ngIf", t.paginatedVehicles.length === 0),
          m(),
          y("ngForOf", t.paginatedVehicles),
          m(4),
          Fi(
            " Showing ",
            t.getShowingFrom(),
            " to ",
            t.getShowingTo(),
            " of ",
            t.filteredVehicles.length,
            " entries "
          ),
          m(4),
          ne("disabled", t.currentPage === 1),
          m(3),
          y("ngForOf", t.pages),
          m(),
          ne("disabled", t.currentPage === t.totalPages),
          m(3),
          y("ngIf", t.isDeleteModalOpen),
          m(),
          y("ngIf", t.isModalOpen));
    },
    dependencies: [
      Ae,
      It,
      At,
      Xe,
      Si,
      ii,
      ni,
      ei,
      Di,
      ti,
      Bi,
      _i,
      Ca,
      tt,
      Yd,
      Oo,
      $d,
      zd,
      hn,
      Xi,
      Zi,
      iy,
      er,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}input[type=text][_ngcontent-%COMP%]::-ms-clear, input[type=text][_ngcontent-%COMP%]::-ms-reveal, input[type=text][_ngcontent-%COMP%]::-webkit-clear-button, input[type=text][_ngcontent-%COMP%]::-webkit-search-cancel-button{display:none;-webkit-appearance:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}",
    ],
  });
};
var _l = class {
  account_id;
  account_type;
  salutation;
  fname;
  lname;
  language;
  employment_status;
  lead_source;
  gender;
  industry;
  occupation;
  cust_journey_stage;
  national_id;
  phone;
  mobile;
  billing_street;
  billing_city;
  billing_state;
  billing_zip_code;
  billing_country;
  account_name;
  parent_account;
  company_fleet_size;
  website;
  account_owner;
  corporate_program_code;
  type;
  annual_revenue;
  email;
  household_income;
  birthdate;
  dealer_code;
  marital_status;
  children;
  no_of_people;
  dealer_id;
  constructor() {
    (this.dealer_code = 0),
      (this.dealer_id = ""),
      (this.account_id = ""),
      (this.account_type = ""),
      (this.salutation = null),
      (this.fname = ""),
      (this.lname = ""),
      (this.language = null),
      (this.employment_status = null),
      (this.lead_source = null),
      (this.gender = null),
      (this.industry = null),
      (this.occupation = null),
      (this.cust_journey_stage = null),
      (this.national_id = null),
      (this.phone = void 0),
      (this.mobile = void 0),
      (this.billing_street = null),
      (this.billing_city = null),
      (this.billing_state = null),
      (this.billing_zip_code = null),
      (this.billing_country = null),
      (this.account_name = ""),
      (this.parent_account = null),
      (this.company_fleet_size = null),
      (this.website = null),
      (this.account_owner = null),
      (this.corporate_program_code = null),
      (this.type = null),
      (this.annual_revenue = null),
      (this.email = ""),
      (this.household_income = null),
      (this.birthdate = null),
      (this.marital_status = null),
      (this.children = null),
      (this.no_of_people = null);
  }
};
var tn = class n {
    static isArray(i, e = !0) {
      return Array.isArray(i) && (e || i.length !== 0);
    }
    static isObject(i, e = !0) {
      return (
        typeof i == "object" &&
        !Array.isArray(i) &&
        i != null &&
        (e || Object.keys(i).length !== 0)
      );
    }
    static equals(i, e, t) {
      return t
        ? this.resolveFieldData(i, t) === this.resolveFieldData(e, t)
        : this.equalsByValue(i, e);
    }
    static equalsByValue(i, e) {
      if (i === e) return !0;
      if (i && e && typeof i == "object" && typeof e == "object") {
        var t = Array.isArray(i),
          r = Array.isArray(e),
          o,
          a,
          l;
        if (t && r) {
          if (((a = i.length), a != e.length)) return !1;
          for (o = a; o-- !== 0; )
            if (!this.equalsByValue(i[o], e[o])) return !1;
          return !0;
        }
        if (t != r) return !1;
        var u = this.isDate(i),
          f = this.isDate(e);
        if (u != f) return !1;
        if (u && f) return i.getTime() == e.getTime();
        var v = i instanceof RegExp,
          D = e instanceof RegExp;
        if (v != D) return !1;
        if (v && D) return i.toString() == e.toString();
        var T = Object.keys(i);
        if (((a = T.length), a !== Object.keys(e).length)) return !1;
        for (o = a; o-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, T[o])) return !1;
        for (o = a; o-- !== 0; )
          if (((l = T[o]), !this.equalsByValue(i[l], e[l]))) return !1;
        return !0;
      }
      return i !== i && e !== e;
    }
    static resolveFieldData(i, e) {
      if (i && e) {
        if (this.isFunction(e)) return e(i);
        if (e.indexOf(".") == -1) return i[e];
        {
          let t = e.split("."),
            r = i;
          for (let o = 0, a = t.length; o < a; ++o) {
            if (r == null) return null;
            r = r[t[o]];
          }
          return r;
        }
      } else return null;
    }
    static isFunction(i) {
      return !!(i && i.constructor && i.call && i.apply);
    }
    static reorderArray(i, e, t) {
      let r;
      i &&
        e !== t &&
        (t >= i.length && ((t %= i.length), (e %= i.length)),
        i.splice(t, 0, i.splice(e, 1)[0]));
    }
    static insertIntoOrderedArray(i, e, t, r) {
      if (t.length > 0) {
        let o = !1;
        for (let a = 0; a < t.length; a++)
          if (this.findIndexInList(t[a], r) > e) {
            t.splice(a, 0, i), (o = !0);
            break;
          }
        o || t.push(i);
      } else t.push(i);
    }
    static findIndexInList(i, e) {
      let t = -1;
      if (e) {
        for (let r = 0; r < e.length; r++)
          if (e[r] == i) {
            t = r;
            break;
          }
      }
      return t;
    }
    static contains(i, e) {
      if (i != null && e && e.length) {
        for (let t of e) if (this.equals(i, t)) return !0;
      }
      return !1;
    }
    static removeAccents(i) {
      return (
        i &&
          (i = i
            .normalize("NFKD")
            .replace(new RegExp("\\p{Diacritic}", "gu"), "")),
        i
      );
    }
    static isDate(i) {
      return Object.prototype.toString.call(i) === "[object Date]";
    }
    static isEmpty(i) {
      return (
        i == null ||
        i === "" ||
        (Array.isArray(i) && i.length === 0) ||
        (!this.isDate(i) && typeof i == "object" && Object.keys(i).length === 0)
      );
    }
    static isNotEmpty(i) {
      return !this.isEmpty(i);
    }
    static compare(i, e, t, r = 1) {
      let o = -1,
        a = this.isEmpty(i),
        l = this.isEmpty(e);
      return (
        a && l
          ? (o = 0)
          : a
          ? (o = r)
          : l
          ? (o = -r)
          : typeof i == "string" && typeof e == "string"
          ? (o = i.localeCompare(e, t, { numeric: !0 }))
          : (o = i < e ? -1 : i > e ? 1 : 0),
        o
      );
    }
    static sort(i, e, t = 1, r, o = 1) {
      let a = n.compare(i, e, r, t),
        l = t;
      return (n.isEmpty(i) || n.isEmpty(e)) && (l = o === 1 ? t : o), l * a;
    }
    static merge(i, e) {
      if (!(i == null && e == null)) {
        {
          if (
            (i == null || typeof i == "object") &&
            (e == null || typeof e == "object")
          )
            return W(W({}, i || {}), e || {});
          if (
            (i == null || typeof i == "string") &&
            (e == null || typeof e == "string")
          )
            return [i || "", e || ""].join(" ");
        }
        return e || i;
      }
    }
    static isPrintableCharacter(i = "") {
      return this.isNotEmpty(i) && i.length === 1 && i.match(/\S| /);
    }
    static getItemValue(i, ...e) {
      return this.isFunction(i) ? i(...e) : i;
    }
    static findLastIndex(i, e) {
      let t = -1;
      if (this.isNotEmpty(i))
        try {
          t = i.findLastIndex(e);
        } catch {
          t = i.lastIndexOf([...i].reverse().find(e));
        }
      return t;
    }
    static findLast(i, e) {
      let t;
      if (this.isNotEmpty(i))
        try {
          t = i.findLast(e);
        } catch {
          t = [...i].reverse().find(e);
        }
      return t;
    }
    static deepEquals(i, e) {
      if (i === e) return !0;
      if (i && e && typeof i == "object" && typeof e == "object") {
        var t = Array.isArray(i),
          r = Array.isArray(e),
          o,
          a,
          l;
        if (t && r) {
          if (((a = i.length), a != e.length)) return !1;
          for (o = a; o-- !== 0; ) if (!this.deepEquals(i[o], e[o])) return !1;
          return !0;
        }
        if (t != r) return !1;
        var u = i instanceof Date,
          f = e instanceof Date;
        if (u != f) return !1;
        if (u && f) return i.getTime() == e.getTime();
        var v = i instanceof RegExp,
          D = e instanceof RegExp;
        if (v != D) return !1;
        if (v && D) return i.toString() == e.toString();
        var T = Object.keys(i);
        if (((a = T.length), a !== Object.keys(e).length)) return !1;
        for (o = a; o-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, T[o])) return !1;
        for (o = a; o-- !== 0; )
          if (((l = T[o]), !this.deepEquals(i[l], e[l]))) return !1;
        return !0;
      }
      return i !== i && e !== e;
    }
  },
  ny = 0;
function Ia(n = "pn_id_") {
  return ny++, `${n}${ny}`;
}
function Wk() {
  let n = [],
    i = (o, a) => {
      let l = n.length > 0 ? n[n.length - 1] : { key: o, value: a },
        u = l.value + (l.key === o ? 0 : a) + 2;
      return n.push({ key: o, value: u }), u;
    },
    e = (o) => {
      n = n.filter((a) => a.value !== o);
    },
    t = () => (n.length > 0 ? n[n.length - 1].value : 0),
    r = (o) => (o && parseInt(o.style.zIndex, 10)) || 0;
  return {
    get: r,
    set: (o, a, l) => {
      a && (a.style.zIndex = String(i(o, l)));
    },
    clear: (o) => {
      o && (e(r(o)), (o.style.zIndex = ""));
    },
    getCurrent: () => t(),
  };
}
var bl = Wk();
var Ti = (() => {
  class n {
    static STARTS_WITH = "startsWith";
    static CONTAINS = "contains";
    static NOT_CONTAINS = "notContains";
    static ENDS_WITH = "endsWith";
    static EQUALS = "equals";
    static NOT_EQUALS = "notEquals";
    static IN = "in";
    static LESS_THAN = "lt";
    static LESS_THAN_OR_EQUAL_TO = "lte";
    static GREATER_THAN = "gt";
    static GREATER_THAN_OR_EQUAL_TO = "gte";
    static BETWEEN = "between";
    static IS = "is";
    static IS_NOT = "isNot";
    static BEFORE = "before";
    static AFTER = "after";
    static DATE_IS = "dateIs";
    static DATE_IS_NOT = "dateIsNot";
    static DATE_BEFORE = "dateBefore";
    static DATE_AFTER = "dateAfter";
  }
  return n;
})();
var ry = (() => {
  class n {
    clickSource = new Oe();
    clickObservable = this.clickSource.asObservable();
    add(e) {
      e && this.clickSource.next(e);
    }
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
  }
  return n;
})();
var Kd = (() => {
  class n {
    ripple = !1;
    inputStyle = pe("outlined");
    overlayOptions = {};
    csp = pe({ nonce: void 0 });
    filterMatchModeOptions = {
      text: [
        Ti.STARTS_WITH,
        Ti.CONTAINS,
        Ti.NOT_CONTAINS,
        Ti.ENDS_WITH,
        Ti.EQUALS,
        Ti.NOT_EQUALS,
      ],
      numeric: [
        Ti.EQUALS,
        Ti.NOT_EQUALS,
        Ti.LESS_THAN,
        Ti.LESS_THAN_OR_EQUAL_TO,
        Ti.GREATER_THAN,
        Ti.GREATER_THAN_OR_EQUAL_TO,
      ],
      date: [Ti.DATE_IS, Ti.DATE_IS_NOT, Ti.DATE_BEFORE, Ti.DATE_AFTER],
    };
    translation = {
      startsWith: "Starts with",
      contains: "Contains",
      notContains: "Not contains",
      endsWith: "Ends with",
      equals: "Equals",
      notEquals: "Not equals",
      noFilter: "No Filter",
      lt: "Less than",
      lte: "Less than or equal to",
      gt: "Greater than",
      gte: "Greater than or equal to",
      is: "Is",
      isNot: "Is not",
      before: "Before",
      after: "After",
      dateIs: "Date is",
      dateIsNot: "Date is not",
      dateBefore: "Date is before",
      dateAfter: "Date is after",
      clear: "Clear",
      apply: "Apply",
      matchAll: "Match All",
      matchAny: "Match Any",
      addRule: "Add Rule",
      removeRule: "Remove Rule",
      accept: "Yes",
      reject: "No",
      choose: "Choose",
      upload: "Upload",
      cancel: "Cancel",
      pending: "Pending",
      fileSizeTypes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
      dayNames: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ],
      dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      monthNames: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ],
      monthNamesShort: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec",
      ],
      chooseYear: "Choose Year",
      chooseMonth: "Choose Month",
      chooseDate: "Choose Date",
      prevDecade: "Previous Decade",
      nextDecade: "Next Decade",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      prevHour: "Previous Hour",
      nextHour: "Next Hour",
      prevMinute: "Previous Minute",
      nextMinute: "Next Minute",
      prevSecond: "Previous Second",
      nextSecond: "Next Second",
      am: "am",
      pm: "pm",
      dateFormat: "mm/dd/yy",
      firstDayOfWeek: 0,
      today: "Today",
      weekHeader: "Wk",
      weak: "Weak",
      medium: "Medium",
      strong: "Strong",
      passwordPrompt: "Enter a password",
      emptyMessage: "No results found",
      searchMessage: "{0} results are available",
      selectionMessage: "{0} items selected",
      emptySelectionMessage: "No selected item",
      emptySearchMessage: "No results found",
      emptyFilterMessage: "No results found",
      aria: {
        trueLabel: "True",
        falseLabel: "False",
        nullLabel: "Not Selected",
        star: "1 star",
        stars: "{star} stars",
        selectAll: "All items selected",
        unselectAll: "All items unselected",
        close: "Close",
        previous: "Previous",
        next: "Next",
        navigation: "Navigation",
        scrollTop: "Scroll Top",
        moveTop: "Move Top",
        moveUp: "Move Up",
        moveDown: "Move Down",
        moveBottom: "Move Bottom",
        moveToTarget: "Move to Target",
        moveToSource: "Move to Source",
        moveAllToTarget: "Move All to Target",
        moveAllToSource: "Move All to Source",
        pageLabel: "{page}",
        firstPageLabel: "First Page",
        lastPageLabel: "Last Page",
        nextPageLabel: "Next Page",
        prevPageLabel: "Previous Page",
        rowsPerPageLabel: "Rows per page",
        previousPageLabel: "Previous Page",
        jumpToPageDropdownLabel: "Jump to Page Dropdown",
        jumpToPageInputLabel: "Jump to Page Input",
        selectRow: "Row Selected",
        unselectRow: "Row Unselected",
        expandRow: "Row Expanded",
        collapseRow: "Row Collapsed",
        showFilterMenu: "Show Filter Menu",
        hideFilterMenu: "Hide Filter Menu",
        filterOperator: "Filter Operator",
        filterConstraint: "Filter Constraint",
        editRow: "Row Edit",
        saveEdit: "Save Edit",
        cancelEdit: "Cancel Edit",
        listView: "List View",
        gridView: "Grid View",
        slide: "Slide",
        slideNumber: "{slideNumber}",
        zoomImage: "Zoom Image",
        zoomIn: "Zoom In",
        zoomOut: "Zoom Out",
        rotateRight: "Rotate Right",
        rotateLeft: "Rotate Left",
        listLabel: "Option List",
        selectColor: "Select a color",
        removeLabel: "Remove",
        browseFiles: "Browse Files",
        maximizeLabel: "Maximize",
      },
    };
    zIndex = { modal: 1100, overlay: 1e3, menu: 1e3, tooltip: 1100 };
    translationSource = new Oe();
    translationObserver = this.translationSource.asObservable();
    getTranslation(e) {
      return this.translation[e];
    }
    setTranslation(e) {
      (this.translation = W(W({}, this.translation), e)),
        this.translationSource.next(this.translation);
    }
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
  }
  return n;
})();
var vl = (() => {
    class n {
      template;
      type;
      name;
      constructor(e) {
        this.template = e;
      }
      getType() {
        return this.name;
      }
      static ɵfac = function (t) {
        return new (t || n)(H(Gn));
      };
      static ɵdir = Ie({
        type: n,
        selectors: [["", "pTemplate", ""]],
        inputs: { type: "type", name: [0, "pTemplate", "name"] },
        standalone: !0,
      });
    }
    return n;
  })(),
  On = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({});
    }
    return n;
  })(),
  kn = (() => {
    class n {
      static STARTS_WITH = "startsWith";
      static CONTAINS = "contains";
      static NOT_CONTAINS = "notContains";
      static ENDS_WITH = "endsWith";
      static EQUALS = "equals";
      static NOT_EQUALS = "notEquals";
      static NO_FILTER = "noFilter";
      static LT = "lt";
      static LTE = "lte";
      static GT = "gt";
      static GTE = "gte";
      static IS = "is";
      static IS_NOT = "isNot";
      static BEFORE = "before";
      static AFTER = "after";
      static CLEAR = "clear";
      static APPLY = "apply";
      static MATCH_ALL = "matchAll";
      static MATCH_ANY = "matchAny";
      static ADD_RULE = "addRule";
      static REMOVE_RULE = "removeRule";
      static ACCEPT = "accept";
      static REJECT = "reject";
      static CHOOSE = "choose";
      static UPLOAD = "upload";
      static CANCEL = "cancel";
      static PENDING = "pending";
      static FILE_SIZE_TYPES = "fileSizeTypes";
      static DAY_NAMES = "dayNames";
      static DAY_NAMES_SHORT = "dayNamesShort";
      static DAY_NAMES_MIN = "dayNamesMin";
      static MONTH_NAMES = "monthNames";
      static MONTH_NAMES_SHORT = "monthNamesShort";
      static FIRST_DAY_OF_WEEK = "firstDayOfWeek";
      static TODAY = "today";
      static WEEK_HEADER = "weekHeader";
      static WEAK = "weak";
      static MEDIUM = "medium";
      static STRONG = "strong";
      static PASSWORD_PROMPT = "passwordPrompt";
      static EMPTY_MESSAGE = "emptyMessage";
      static EMPTY_FILTER_MESSAGE = "emptyFilterMessage";
      static SHOW_FILTER_MENU = "showFilterMenu";
      static HIDE_FILTER_MENU = "hideFilterMenu";
      static SELECTION_MESSAGE = "selectionMessage";
      static ARIA = "aria";
      static SELECT_COLOR = "selectColor";
      static BROWSE_FILES = "browseFiles";
    }
    return n;
  })();
var me = (() => {
    class n {
      static zindex = 1e3;
      static calculatedScrollbarWidth = null;
      static calculatedScrollbarHeight = null;
      static browser;
      static addClass(e, t) {
        e && t && (e.classList ? e.classList.add(t) : (e.className += " " + t));
      }
      static addMultipleClasses(e, t) {
        if (e && t)
          if (e.classList) {
            let r = t.trim().split(" ");
            for (let o = 0; o < r.length; o++) e.classList.add(r[o]);
          } else {
            let r = t.split(" ");
            for (let o = 0; o < r.length; o++) e.className += " " + r[o];
          }
      }
      static removeClass(e, t) {
        e &&
          t &&
          (e.classList
            ? e.classList.remove(t)
            : (e.className = e.className.replace(
                new RegExp(
                  "(^|\\b)" + t.split(" ").join("|") + "(\\b|$)",
                  "gi"
                ),
                " "
              )));
      }
      static removeMultipleClasses(e, t) {
        e &&
          t &&
          [t]
            .flat()
            .filter(Boolean)
            .forEach((r) =>
              r.split(" ").forEach((o) => this.removeClass(e, o))
            );
      }
      static hasClass(e, t) {
        return e && t
          ? e.classList
            ? e.classList.contains(t)
            : new RegExp("(^| )" + t + "( |$)", "gi").test(e.className)
          : !1;
      }
      static siblings(e) {
        return Array.prototype.filter.call(e.parentNode.children, function (t) {
          return t !== e;
        });
      }
      static find(e, t) {
        return Array.from(e.querySelectorAll(t));
      }
      static findSingle(e, t) {
        return this.isElement(e) ? e.querySelector(t) : null;
      }
      static index(e) {
        let t = e.parentNode.childNodes,
          r = 0;
        for (var o = 0; o < t.length; o++) {
          if (t[o] == e) return r;
          t[o].nodeType == 1 && r++;
        }
        return -1;
      }
      static indexWithinGroup(e, t) {
        let r = e.parentNode ? e.parentNode.childNodes : [],
          o = 0;
        for (var a = 0; a < r.length; a++) {
          if (r[a] == e) return o;
          r[a].attributes && r[a].attributes[t] && r[a].nodeType == 1 && o++;
        }
        return -1;
      }
      static appendOverlay(e, t, r = "self") {
        r !== "self" && e && t && this.appendChild(e, t);
      }
      static alignOverlay(e, t, r = "self", o = !0) {
        e &&
          t &&
          (o && (e.style.minWidth = `${n.getOuterWidth(t)}px`),
          r === "self"
            ? this.relativePosition(e, t)
            : this.absolutePosition(e, t));
      }
      static relativePosition(e, t, r = !0) {
        let o = (X) => {
            if (X)
              return getComputedStyle(X).getPropertyValue("position") ===
                "relative"
                ? X
                : o(X.parentElement);
          },
          a = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          l = t.offsetHeight ?? t.getBoundingClientRect().height,
          u = t.getBoundingClientRect(),
          f = this.getWindowScrollTop(),
          v = this.getWindowScrollLeft(),
          D = this.getViewport(),
          M = o(e)?.getBoundingClientRect() || { top: -1 * f, left: -1 * v },
          k,
          V;
        u.top + l + a.height > D.height
          ? ((k = u.top - M.top - a.height),
            (e.style.transformOrigin = "bottom"),
            u.top + k < 0 && (k = -1 * u.top))
          : ((k = l + u.top - M.top), (e.style.transformOrigin = "top"));
        let A = u.left + a.width - D.width,
          E = u.left - M.left;
        a.width > D.width
          ? (V = (u.left - M.left) * -1)
          : A > 0
          ? (V = E - A)
          : (V = u.left - M.left),
          (e.style.top = k + "px"),
          (e.style.left = V + "px"),
          r &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static absolutePosition(e, t, r = !0) {
        let o = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          a = o.height,
          l = o.width,
          u = t.offsetHeight ?? t.getBoundingClientRect().height,
          f = t.offsetWidth ?? t.getBoundingClientRect().width,
          v = t.getBoundingClientRect(),
          D = this.getWindowScrollTop(),
          T = this.getWindowScrollLeft(),
          M = this.getViewport(),
          k,
          V;
        v.top + u + a > M.height
          ? ((k = v.top + D - a),
            (e.style.transformOrigin = "bottom"),
            k < 0 && (k = D))
          : ((k = u + v.top + D), (e.style.transformOrigin = "top")),
          v.left + l > M.width
            ? (V = Math.max(0, v.left + T + f - l))
            : (V = v.left + T),
          (e.style.top = k + "px"),
          (e.style.left = V + "px"),
          r &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static getParents(e, t = []) {
        return e.parentNode === null
          ? t
          : this.getParents(e.parentNode, t.concat([e.parentNode]));
      }
      static getScrollableParents(e) {
        let t = [];
        if (e) {
          let r = this.getParents(e),
            o = /(auto|scroll)/,
            a = (l) => {
              let u = window.getComputedStyle(l, null);
              return (
                o.test(u.getPropertyValue("overflow")) ||
                o.test(u.getPropertyValue("overflowX")) ||
                o.test(u.getPropertyValue("overflowY"))
              );
            };
          for (let l of r) {
            let u = l.nodeType === 1 && l.dataset.scrollselectors;
            if (u) {
              let f = u.split(",");
              for (let v of f) {
                let D = this.findSingle(l, v);
                D && a(D) && t.push(D);
              }
            }
            l.nodeType !== 9 && a(l) && t.push(l);
          }
        }
        return t;
      }
      static getHiddenElementOuterHeight(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let t = e.offsetHeight;
        return (e.style.display = "none"), (e.style.visibility = "visible"), t;
      }
      static getHiddenElementOuterWidth(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let t = e.offsetWidth;
        return (e.style.display = "none"), (e.style.visibility = "visible"), t;
      }
      static getHiddenElementDimensions(e) {
        let t = {};
        return (
          (e.style.visibility = "hidden"),
          (e.style.display = "block"),
          (t.width = e.offsetWidth),
          (t.height = e.offsetHeight),
          (e.style.display = "none"),
          (e.style.visibility = "visible"),
          t
        );
      }
      static scrollInView(e, t) {
        let r = getComputedStyle(e).getPropertyValue("borderTopWidth"),
          o = r ? parseFloat(r) : 0,
          a = getComputedStyle(e).getPropertyValue("paddingTop"),
          l = a ? parseFloat(a) : 0,
          u = e.getBoundingClientRect(),
          v =
            t.getBoundingClientRect().top +
            document.body.scrollTop -
            (u.top + document.body.scrollTop) -
            o -
            l,
          D = e.scrollTop,
          T = e.clientHeight,
          M = this.getOuterHeight(t);
        v < 0
          ? (e.scrollTop = D + v)
          : v + M > T && (e.scrollTop = D + v - T + M);
      }
      static fadeIn(e, t) {
        e.style.opacity = 0;
        let r = +new Date(),
          o = 0,
          a = function () {
            (o =
              +e.style.opacity.replace(",", ".") +
              (new Date().getTime() - r) / t),
              (e.style.opacity = o),
              (r = +new Date()),
              +o < 1 &&
                ((window.requestAnimationFrame && requestAnimationFrame(a)) ||
                  setTimeout(a, 16));
          };
        a();
      }
      static fadeOut(e, t) {
        var r = 1,
          o = 50,
          a = t,
          l = o / a;
        let u = setInterval(() => {
          (r = r - l),
            r <= 0 && ((r = 0), clearInterval(u)),
            (e.style.opacity = r);
        }, o);
      }
      static getWindowScrollTop() {
        let e = document.documentElement;
        return (window.pageYOffset || e.scrollTop) - (e.clientTop || 0);
      }
      static getWindowScrollLeft() {
        let e = document.documentElement;
        return (window.pageXOffset || e.scrollLeft) - (e.clientLeft || 0);
      }
      static matches(e, t) {
        var r = Element.prototype,
          o =
            r.matches ||
            r.webkitMatchesSelector ||
            r.mozMatchesSelector ||
            r.msMatchesSelector ||
            function (a) {
              return [].indexOf.call(document.querySelectorAll(a), this) !== -1;
            };
        return o.call(e, t);
      }
      static getOuterWidth(e, t) {
        let r = e.offsetWidth;
        if (t) {
          let o = getComputedStyle(e);
          r += parseFloat(o.marginLeft) + parseFloat(o.marginRight);
        }
        return r;
      }
      static getHorizontalPadding(e) {
        let t = getComputedStyle(e);
        return parseFloat(t.paddingLeft) + parseFloat(t.paddingRight);
      }
      static getHorizontalMargin(e) {
        let t = getComputedStyle(e);
        return parseFloat(t.marginLeft) + parseFloat(t.marginRight);
      }
      static innerWidth(e) {
        let t = e.offsetWidth,
          r = getComputedStyle(e);
        return (t += parseFloat(r.paddingLeft) + parseFloat(r.paddingRight)), t;
      }
      static width(e) {
        let t = e.offsetWidth,
          r = getComputedStyle(e);
        return (t -= parseFloat(r.paddingLeft) + parseFloat(r.paddingRight)), t;
      }
      static getInnerHeight(e) {
        let t = e.offsetHeight,
          r = getComputedStyle(e);
        return (t += parseFloat(r.paddingTop) + parseFloat(r.paddingBottom)), t;
      }
      static getOuterHeight(e, t) {
        let r = e.offsetHeight;
        if (t) {
          let o = getComputedStyle(e);
          r += parseFloat(o.marginTop) + parseFloat(o.marginBottom);
        }
        return r;
      }
      static getHeight(e) {
        let t = e.offsetHeight,
          r = getComputedStyle(e);
        return (
          (t -=
            parseFloat(r.paddingTop) +
            parseFloat(r.paddingBottom) +
            parseFloat(r.borderTopWidth) +
            parseFloat(r.borderBottomWidth)),
          t
        );
      }
      static getWidth(e) {
        let t = e.offsetWidth,
          r = getComputedStyle(e);
        return (
          (t -=
            parseFloat(r.paddingLeft) +
            parseFloat(r.paddingRight) +
            parseFloat(r.borderLeftWidth) +
            parseFloat(r.borderRightWidth)),
          t
        );
      }
      static getViewport() {
        let e = window,
          t = document,
          r = t.documentElement,
          o = t.getElementsByTagName("body")[0],
          a = e.innerWidth || r.clientWidth || o.clientWidth,
          l = e.innerHeight || r.clientHeight || o.clientHeight;
        return { width: a, height: l };
      }
      static getOffset(e) {
        var t = e.getBoundingClientRect();
        return {
          top:
            t.top +
            (window.pageYOffset ||
              document.documentElement.scrollTop ||
              document.body.scrollTop ||
              0),
          left:
            t.left +
            (window.pageXOffset ||
              document.documentElement.scrollLeft ||
              document.body.scrollLeft ||
              0),
        };
      }
      static replaceElementWith(e, t) {
        let r = e.parentNode;
        if (!r) throw "Can't replace element";
        return r.replaceChild(t, e);
      }
      static getUserAgent() {
        if (navigator && this.isClient()) return navigator.userAgent;
      }
      static isIE() {
        var e = window.navigator.userAgent,
          t = e.indexOf("MSIE ");
        if (t > 0) return !0;
        var r = e.indexOf("Trident/");
        if (r > 0) {
          var o = e.indexOf("rv:");
          return !0;
        }
        var a = e.indexOf("Edge/");
        return a > 0;
      }
      static isIOS() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
      }
      static isAndroid() {
        return /(android)/i.test(navigator.userAgent);
      }
      static isTouchDevice() {
        return "ontouchstart" in window || navigator.maxTouchPoints > 0;
      }
      static appendChild(e, t) {
        if (this.isElement(t)) t.appendChild(e);
        else if (t && t.el && t.el.nativeElement)
          t.el.nativeElement.appendChild(e);
        else throw "Cannot append " + t + " to " + e;
      }
      static removeChild(e, t) {
        if (this.isElement(t)) t.removeChild(e);
        else if (t.el && t.el.nativeElement) t.el.nativeElement.removeChild(e);
        else throw "Cannot remove " + e + " from " + t;
      }
      static removeElement(e) {
        "remove" in Element.prototype
          ? e.remove()
          : e.parentNode.removeChild(e);
      }
      static isElement(e) {
        return typeof HTMLElement == "object"
          ? e instanceof HTMLElement
          : e &&
              typeof e == "object" &&
              e !== null &&
              e.nodeType === 1 &&
              typeof e.nodeName == "string";
      }
      static calculateScrollbarWidth(e) {
        if (e) {
          let t = getComputedStyle(e);
          return (
            e.offsetWidth -
            e.clientWidth -
            parseFloat(t.borderLeftWidth) -
            parseFloat(t.borderRightWidth)
          );
        } else {
          if (this.calculatedScrollbarWidth !== null)
            return this.calculatedScrollbarWidth;
          let t = document.createElement("div");
          (t.className = "p-scrollbar-measure"), document.body.appendChild(t);
          let r = t.offsetWidth - t.clientWidth;
          return (
            document.body.removeChild(t), (this.calculatedScrollbarWidth = r), r
          );
        }
      }
      static calculateScrollbarHeight() {
        if (this.calculatedScrollbarHeight !== null)
          return this.calculatedScrollbarHeight;
        let e = document.createElement("div");
        (e.className = "p-scrollbar-measure"), document.body.appendChild(e);
        let t = e.offsetHeight - e.clientHeight;
        return (
          document.body.removeChild(e), (this.calculatedScrollbarWidth = t), t
        );
      }
      static invokeElementMethod(e, t, r) {
        e[t].apply(e, r);
      }
      static clearSelection() {
        if (window.getSelection)
          window.getSelection().empty
            ? window.getSelection().empty()
            : window.getSelection().removeAllRanges &&
              window.getSelection().rangeCount > 0 &&
              window.getSelection().getRangeAt(0).getClientRects().length > 0 &&
              window.getSelection().removeAllRanges();
        else if (document.selection && document.selection.empty)
          try {
            document.selection.empty();
          } catch {}
      }
      static getBrowser() {
        if (!this.browser) {
          let e = this.resolveUserAgent();
          (this.browser = {}),
            e.browser &&
              ((this.browser[e.browser] = !0),
              (this.browser.version = e.version)),
            this.browser.chrome
              ? (this.browser.webkit = !0)
              : this.browser.webkit && (this.browser.safari = !0);
        }
        return this.browser;
      }
      static resolveUserAgent() {
        let e = navigator.userAgent.toLowerCase(),
          t =
            /(chrome)[ \/]([\w.]+)/.exec(e) ||
            /(webkit)[ \/]([\w.]+)/.exec(e) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) ||
            /(msie) ([\w.]+)/.exec(e) ||
            (e.indexOf("compatible") < 0 &&
              /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)) ||
            [];
        return { browser: t[1] || "", version: t[2] || "0" };
      }
      static isInteger(e) {
        return Number.isInteger
          ? Number.isInteger(e)
          : typeof e == "number" && isFinite(e) && Math.floor(e) === e;
      }
      static isHidden(e) {
        return !e || e.offsetParent === null;
      }
      static isVisible(e) {
        return e && e.offsetParent != null;
      }
      static isExist(e) {
        return e !== null && typeof e < "u" && e.nodeName && e.parentNode;
      }
      static focus(e, t) {
        e && document.activeElement !== e && e.focus(t);
      }
      static getFocusableSelectorString(e = "") {
        return `button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-inputtext:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e}`;
      }
      static getFocusableElements(e, t = "") {
        let r = this.find(e, this.getFocusableSelectorString(t)),
          o = [];
        for (let a of r) {
          let l = getComputedStyle(a);
          this.isVisible(a) &&
            l.display != "none" &&
            l.visibility != "hidden" &&
            o.push(a);
        }
        return o;
      }
      static getFocusableElement(e, t = "") {
        let r = this.findSingle(e, this.getFocusableSelectorString(t));
        if (r) {
          let o = getComputedStyle(r);
          if (
            this.isVisible(r) &&
            o.display != "none" &&
            o.visibility != "hidden"
          )
            return r;
        }
        return null;
      }
      static getFirstFocusableElement(e, t = "") {
        let r = this.getFocusableElements(e, t);
        return r.length > 0 ? r[0] : null;
      }
      static getLastFocusableElement(e, t) {
        let r = this.getFocusableElements(e, t);
        return r.length > 0 ? r[r.length - 1] : null;
      }
      static getNextFocusableElement(e, t = !1) {
        let r = n.getFocusableElements(e),
          o = 0;
        if (r && r.length > 0) {
          let a = r.indexOf(r[0].ownerDocument.activeElement);
          t
            ? a == -1 || a === 0
              ? (o = r.length - 1)
              : (o = a - 1)
            : a != -1 && a !== r.length - 1 && (o = a + 1);
        }
        return r[o];
      }
      static generateZIndex() {
        return (this.zindex = this.zindex || 999), ++this.zindex;
      }
      static getSelection() {
        return window.getSelection
          ? window.getSelection().toString()
          : document.getSelection
          ? document.getSelection().toString()
          : document.selection
          ? document.selection.createRange().text
          : null;
      }
      static getTargetElement(e, t) {
        if (!e) return null;
        switch (e) {
          case "document":
            return document;
          case "window":
            return window;
          case "@next":
            return t?.nextElementSibling;
          case "@prev":
            return t?.previousElementSibling;
          case "@parent":
            return t?.parentElement;
          case "@grandparent":
            return t?.parentElement.parentElement;
          default:
            let r = typeof e;
            if (r === "string") return document.querySelector(e);
            if (r === "object" && e.hasOwnProperty("nativeElement"))
              return this.isExist(e.nativeElement) ? e.nativeElement : void 0;
            let a = ((l) => !!(l && l.constructor && l.call && l.apply))(e)
              ? e()
              : e;
            return (a && a.nodeType === 9) || this.isExist(a) ? a : null;
        }
      }
      static isClient() {
        return !!(
          typeof window < "u" &&
          window.document &&
          window.document.createElement
        );
      }
      static getAttribute(e, t) {
        if (e) {
          let r = e.getAttribute(t);
          return isNaN(r)
            ? r === "true" || r === "false"
              ? r === "true"
              : r
            : +r;
        }
      }
      static calculateBodyScrollbarWidth() {
        return window.innerWidth - document.documentElement.offsetWidth;
      }
      static blockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.setProperty(
          "--scrollbar-width",
          this.calculateBodyScrollbarWidth() + "px"
        ),
          this.addClass(document.body, e);
      }
      static unblockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.removeProperty("--scrollbar-width"),
          this.removeClass(document.body, e);
      }
      static createElement(e, t = {}, ...r) {
        if (e) {
          let o = document.createElement(e);
          return this.setAttributes(o, t), o.append(...r), o;
        }
      }
      static setAttribute(e, t = "", r) {
        this.isElement(e) && r !== null && r !== void 0 && e.setAttribute(t, r);
      }
      static setAttributes(e, t = {}) {
        if (this.isElement(e)) {
          let r = (o, a) => {
            let l = e?.$attrs?.[o] ? [e?.$attrs?.[o]] : [];
            return [a].flat().reduce((u, f) => {
              if (f != null) {
                let v = typeof f;
                if (v === "string" || v === "number") u.push(f);
                else if (v === "object") {
                  let D = Array.isArray(f)
                    ? r(o, f)
                    : Object.entries(f).map(([T, M]) =>
                        o === "style" && (M || M === 0)
                          ? `${T.replace(
                              /([a-z])([A-Z])/g,
                              "$1-$2"
                            ).toLowerCase()}:${M}`
                          : M
                          ? T
                          : void 0
                      );
                  u = D.length ? u.concat(D.filter((T) => !!T)) : u;
                }
              }
              return u;
            }, l);
          };
          Object.entries(t).forEach(([o, a]) => {
            if (a != null) {
              let l = o.match(/^on(.+)/);
              l
                ? e.addEventListener(l[1].toLowerCase(), a)
                : o === "pBind"
                ? this.setAttributes(e, a)
                : ((a =
                    o === "class"
                      ? [...new Set(r("class", a))].join(" ").trim()
                      : o === "style"
                      ? r("style", a).join(";").trim()
                      : a),
                  (e.$attrs = e.$attrs || {}) && (e.$attrs[o] = a),
                  e.setAttribute(o, a));
            }
          });
        }
      }
      static isFocusableElement(e, t = "") {
        return this.isElement(e)
          ? e.matches(`button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t}`)
          : !1;
      }
    }
    return n;
  })(),
  Qd = class {
    element;
    listener;
    scrollableParents;
    constructor(i, e = () => {}) {
      (this.element = i), (this.listener = e);
    }
    bindScrollListener() {
      this.scrollableParents = me.getScrollableParents(this.element);
      for (let i = 0; i < this.scrollableParents.length; i++)
        this.scrollableParents[i].addEventListener("scroll", this.listener);
    }
    unbindScrollListener() {
      if (this.scrollableParents)
        for (let i = 0; i < this.scrollableParents.length; i++)
          this.scrollableParents[i].removeEventListener(
            "scroll",
            this.listener
          );
    }
    destroy() {
      this.unbindScrollListener(),
        (this.element = null),
        (this.listener = null),
        (this.scrollableParents = null);
    }
  };
var Xd = (() => {
    class n {
      autofocus = !1;
      focused = !1;
      platformId = G(ai);
      document = G(ke);
      host = G(Fe);
      ngAfterContentChecked() {
        this.autofocus === !1
          ? this.host.nativeElement.removeAttribute("autofocus")
          : this.host.nativeElement.setAttribute("autofocus", !0),
          this.focused || this.autoFocus();
      }
      ngAfterViewChecked() {
        this.focused || this.autoFocus();
      }
      autoFocus() {
        dn(this.platformId) &&
          this.autofocus &&
          setTimeout(() => {
            let e = me.getFocusableElements(this.host?.nativeElement);
            e.length === 0 && this.host.nativeElement.focus(),
              e.length > 0 && e[0].focus(),
              (this.focused = !0);
          });
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵdir = Ie({
        type: n,
        selectors: [["", "pAutoFocus", ""]],
        hostAttrs: [1, "p-element"],
        inputs: { autofocus: [2, "autofocus", "autofocus", Se] },
        standalone: !0,
        features: [kt],
      });
    }
    return n;
  })(),
  ay = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({});
    }
    return n;
  })();
var Yk = ["*"],
  Ei = (() => {
    class n {
      label;
      spin = !1;
      styleClass;
      role;
      ariaLabel;
      ariaHidden;
      ngOnInit() {
        this.getAttributes();
      }
      getAttributes() {
        let e = tn.isEmpty(this.label);
        (this.role = e ? void 0 : "img"),
          (this.ariaLabel = e ? void 0 : this.label),
          (this.ariaHidden = e);
      }
      getClassNames() {
        return `p-icon ${this.styleClass ? this.styleClass + " " : ""}${
          this.spin ? "p-icon-spin" : ""
        }`;
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵcmp = ae({
        type: n,
        selectors: [["ng-component"]],
        hostAttrs: [1, "p-element", "p-icon-wrapper"],
        inputs: {
          label: "label",
          spin: [2, "spin", "spin", Se],
          styleClass: "styleClass",
        },
        standalone: !0,
        features: [kt, ce],
        ngContentSelectors: Yk,
        decls: 1,
        vars: 0,
        template: function (t, r) {
          t & 1 && (Xt(), Lt(0));
        },
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })();
var sy = (() => {
  class n extends Ei {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + Ia() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = ae({
      type: n,
      selectors: [["SpinnerIcon"]],
      standalone: !0,
      features: [Ze, ce],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (t, r) {
        t & 1 &&
          (ft(),
          c(0, "svg", 0)(1, "g"),
          z(2, "path", 1),
          d(),
          c(3, "defs")(4, "clipPath", 2),
          z(5, "rect", 3),
          d()()()),
          t & 2 &&
            (Be(r.getClassNames()),
            le("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ),
            m(),
            le("clip-path", r.pathId),
            m(3),
            y("id", r.pathId));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Zd = (() => {
    class n {
      document;
      platformId;
      renderer;
      el;
      zone;
      config;
      constructor(e, t, r, o, a, l) {
        (this.document = e),
          (this.platformId = t),
          (this.renderer = r),
          (this.el = o),
          (this.zone = a),
          (this.config = l);
      }
      animationListener;
      mouseDownListener;
      timeout;
      ngAfterViewInit() {
        dn(this.platformId) &&
          this.config &&
          this.config.ripple &&
          this.zone.runOutsideAngular(() => {
            this.create(),
              (this.mouseDownListener = this.renderer.listen(
                this.el.nativeElement,
                "mousedown",
                this.onMouseDown.bind(this)
              ));
          });
      }
      onMouseDown(e) {
        let t = this.getInk();
        if (
          !t ||
          this.document.defaultView?.getComputedStyle(t, null).display ===
            "none"
        )
          return;
        if (
          (me.removeClass(t, "p-ink-active"),
          !me.getHeight(t) && !me.getWidth(t))
        ) {
          let l = Math.max(
            me.getOuterWidth(this.el.nativeElement),
            me.getOuterHeight(this.el.nativeElement)
          );
          (t.style.height = l + "px"), (t.style.width = l + "px");
        }
        let r = me.getOffset(this.el.nativeElement),
          o =
            e.pageX -
            r.left +
            this.document.body.scrollTop -
            me.getWidth(t) / 2,
          a =
            e.pageY -
            r.top +
            this.document.body.scrollLeft -
            me.getHeight(t) / 2;
        this.renderer.setStyle(t, "top", a + "px"),
          this.renderer.setStyle(t, "left", o + "px"),
          me.addClass(t, "p-ink-active"),
          (this.timeout = setTimeout(() => {
            let l = this.getInk();
            l && me.removeClass(l, "p-ink-active");
          }, 401));
      }
      getInk() {
        let e = this.el.nativeElement.children;
        for (let t = 0; t < e.length; t++)
          if (
            typeof e[t].className == "string" &&
            e[t].className.indexOf("p-ink") !== -1
          )
            return e[t];
        return null;
      }
      resetInk() {
        let e = this.getInk();
        e && me.removeClass(e, "p-ink-active");
      }
      onAnimationEnd(e) {
        this.timeout && clearTimeout(this.timeout),
          me.removeClass(e.currentTarget, "p-ink-active");
      }
      create() {
        let e = this.renderer.createElement("span");
        this.renderer.addClass(e, "p-ink"),
          this.renderer.appendChild(this.el.nativeElement, e),
          this.renderer.setAttribute(e, "aria-hidden", "true"),
          this.renderer.setAttribute(e, "role", "presentation"),
          this.animationListener ||
            (this.animationListener = this.renderer.listen(
              e,
              "animationend",
              this.onAnimationEnd.bind(this)
            ));
      }
      remove() {
        let e = this.getInk();
        e &&
          (this.mouseDownListener && this.mouseDownListener(),
          this.animationListener && this.animationListener(),
          (this.mouseDownListener = null),
          (this.animationListener = null),
          me.removeElement(e));
      }
      ngOnDestroy() {
        this.config && this.config.ripple && this.remove();
      }
      static ɵfac = function (t) {
        return new (t || n)(H(ke), H(ai), H(hi), H(Fe), H(Te), H(Kd, 8));
      };
      static ɵdir = Ie({
        type: n,
        selectors: [["", "pRipple", ""]],
        hostAttrs: [1, "p-ripple", "p-element"],
        standalone: !0,
      });
    }
    return n;
  })(),
  ly = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({});
    }
    return n;
  })();
var Kk = ["*"],
  cy = (n) => ({ class: n });
function Qk(n, i) {
  n & 1 && wn(0);
}
function Xk(n, i) {
  if ((n & 1 && z(0, "span", 8), n & 2)) {
    let e = x(3);
    y("ngClass", e.iconClass()),
      le("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function Zk(n, i) {
  if ((n & 1 && z(0, "SpinnerIcon", 9), n & 2)) {
    let e = x(3);
    y("styleClass", e.spinnerIconClass())("spin", !0),
      le("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function Jk(n, i) {
  if (
    (n & 1 &&
      (Ue(0), R(1, Xk, 1, 3, "span", 6)(2, Zk, 1, 4, "SpinnerIcon", 7), ze()),
    n & 2)
  ) {
    let e = x(2);
    m(), y("ngIf", e.loadingIcon), m(), y("ngIf", !e.loadingIcon);
  }
}
function eP(n, i) {}
function tP(n, i) {
  if ((n & 1 && R(0, eP, 0, 0, "ng-template", 10), n & 2)) {
    let e = x(2);
    y("ngIf", e.loadingIconTemplate);
  }
}
function iP(n, i) {
  if (
    (n & 1 &&
      (Ue(0), R(1, Jk, 3, 2, "ng-container", 2)(2, tP, 1, 1, null, 5), ze()),
    n & 2)
  ) {
    let e = x();
    m(),
      y("ngIf", !e.loadingIconTemplate),
      m(),
      y("ngTemplateOutlet", e.loadingIconTemplate)(
        "ngTemplateOutletContext",
        de(3, cy, e.iconClass())
      );
  }
}
function nP(n, i) {
  if ((n & 1 && z(0, "span", 8), n & 2)) {
    let e = x(2);
    y("ngClass", e.iconClass()), le("data-pc-section", "icon");
  }
}
function rP(n, i) {}
function oP(n, i) {
  if ((n & 1 && R(0, rP, 0, 0, "ng-template", 10), n & 2)) {
    let e = x(2);
    y("ngIf", !e.icon && e.iconTemplate);
  }
}
function aP(n, i) {
  if (
    (n & 1 && (Ue(0), R(1, nP, 1, 2, "span", 6)(2, oP, 1, 1, null, 5), ze()),
    n & 2)
  ) {
    let e = x();
    m(),
      y("ngIf", e.icon && !e.iconTemplate),
      m(),
      y("ngTemplateOutlet", e.iconTemplate)(
        "ngTemplateOutletContext",
        de(3, cy, e.iconClass())
      );
  }
}
function sP(n, i) {
  if ((n & 1 && (c(0, "span", 11), h(1), d()), n & 2)) {
    let e = x();
    le("aria-hidden", e.icon && !e.label)("data-pc-section", "label"),
      m(),
      B(e.label);
  }
}
function lP(n, i) {
  if ((n & 1 && (c(0, "span", 8), h(1), d()), n & 2)) {
    let e = x();
    Be(e.badgeClass),
      y("ngClass", e.badgeStyleClass()),
      le("data-pc-section", "badge"),
      m(),
      B(e.badge);
  }
}
var Kr = {
    button: "p-button",
    component: "p-component",
    iconOnly: "p-button-icon-only",
    disabled: "p-disabled",
    loading: "p-button-loading",
    labelOnly: "p-button-loading-label-only",
  },
  dy = (() => {
    class n {
      el;
      document;
      iconPos = "left";
      loadingIcon;
      get label() {
        return this._label;
      }
      set label(e) {
        (this._label = e),
          this.initialized &&
            (this.updateLabel(), this.updateIcon(), this.setStyleClass());
      }
      get icon() {
        return this._icon;
      }
      set icon(e) {
        (this._icon = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      get loading() {
        return this._loading;
      }
      set loading(e) {
        (this._loading = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      severity;
      raised = !1;
      rounded = !1;
      text = !1;
      outlined = !1;
      size = null;
      plain = !1;
      _label;
      _icon;
      _loading = !1;
      initialized;
      get htmlElement() {
        return this.el.nativeElement;
      }
      _internalClasses = Object.values(Kr);
      constructor(e, t) {
        (this.el = e), (this.document = t);
      }
      ngAfterViewInit() {
        me.addMultipleClasses(this.htmlElement, this.getStyleClass().join(" ")),
          this.createIcon(),
          this.createLabel(),
          (this.initialized = !0);
      }
      getStyleClass() {
        let e = [Kr.button, Kr.component];
        return (
          this.icon &&
            !this.label &&
            tn.isEmpty(this.htmlElement.textContent) &&
            e.push(Kr.iconOnly),
          this.loading &&
            (e.push(Kr.disabled, Kr.loading),
            !this.icon && this.label && e.push(Kr.labelOnly),
            this.icon &&
              !this.label &&
              !tn.isEmpty(this.htmlElement.textContent) &&
              e.push(Kr.iconOnly)),
          this.text && e.push("p-button-text"),
          this.severity && e.push(`p-button-${this.severity}`),
          this.plain && e.push("p-button-plain"),
          this.raised && e.push("p-button-raised"),
          this.size && e.push(`p-button-${this.size}`),
          this.outlined && e.push("p-button-outlined"),
          this.rounded && e.push("p-button-rounded"),
          this.size === "small" && e.push("p-button-sm"),
          this.size === "large" && e.push("p-button-lg"),
          e
        );
      }
      setStyleClass() {
        let e = this.getStyleClass();
        this.htmlElement.classList.remove(...this._internalClasses),
          this.htmlElement.classList.add(...e);
      }
      createLabel() {
        if (!me.findSingle(this.htmlElement, ".p-button-label") && this.label) {
          let t = this.document.createElement("span");
          this.icon && !this.label && t.setAttribute("aria-hidden", "true"),
            (t.className = "p-button-label"),
            t.appendChild(this.document.createTextNode(this.label)),
            this.htmlElement.appendChild(t);
        }
      }
      createIcon() {
        if (
          !me.findSingle(this.htmlElement, ".p-button-icon") &&
          (this.icon || this.loading)
        ) {
          let t = this.document.createElement("span");
          (t.className = "p-button-icon"),
            t.setAttribute("aria-hidden", "true");
          let r = this.label ? "p-button-icon-" + this.iconPos : null;
          r && me.addClass(t, r);
          let o = this.getIconClass();
          o && me.addMultipleClasses(t, o),
            this.htmlElement.insertBefore(t, this.htmlElement.firstChild);
        }
      }
      updateLabel() {
        let e = me.findSingle(this.htmlElement, ".p-button-label");
        if (!this.label) {
          e && this.htmlElement.removeChild(e);
          return;
        }
        e ? (e.textContent = this.label) : this.createLabel();
      }
      updateIcon() {
        let e = me.findSingle(this.htmlElement, ".p-button-icon"),
          t = me.findSingle(this.htmlElement, ".p-button-label");
        e
          ? this.iconPos
            ? (e.className =
                "p-button-icon " +
                (t ? "p-button-icon-" + this.iconPos : "") +
                " " +
                this.getIconClass())
            : (e.className = "p-button-icon " + this.getIconClass())
          : this.createIcon();
      }
      getIconClass() {
        return this.loading
          ? "p-button-loading-icon pi-spin " +
              (this.loadingIcon ?? "pi pi-spinner")
          : this.icon || "p-hidden";
      }
      ngOnDestroy() {
        this.initialized = !1;
      }
      static ɵfac = function (t) {
        return new (t || n)(H(Fe), H(ke));
      };
      static ɵdir = Ie({
        type: n,
        selectors: [["", "pButton", ""]],
        hostAttrs: [1, "p-element"],
        inputs: {
          iconPos: "iconPos",
          loadingIcon: "loadingIcon",
          label: "label",
          icon: "icon",
          loading: "loading",
          severity: "severity",
          raised: [2, "raised", "raised", Se],
          rounded: [2, "rounded", "rounded", Se],
          text: [2, "text", "text", Se],
          outlined: [2, "outlined", "outlined", Se],
          size: "size",
          plain: [2, "plain", "plain", Se],
        },
        standalone: !0,
        features: [kt],
      });
    }
    return n;
  })(),
  cP = (() => {
    class n {
      el;
      type = "button";
      iconPos = "left";
      icon;
      badge;
      label;
      disabled;
      loading = !1;
      loadingIcon;
      raised = !1;
      rounded = !1;
      text = !1;
      plain = !1;
      severity;
      outlined = !1;
      link = !1;
      tabindex;
      size;
      style;
      styleClass;
      badgeClass;
      ariaLabel;
      autofocus;
      onClick = new xe();
      onFocus = new xe();
      onBlur = new xe();
      contentTemplate;
      loadingIconTemplate;
      iconTemplate;
      templates;
      constructor(e) {
        this.el = e;
      }
      spinnerIconClass() {
        return Object.entries(this.iconClass())
          .filter(([, e]) => !!e)
          .reduce((e, [t]) => e + ` ${t}`, "p-button-loading-icon");
      }
      iconClass() {
        let e = {
          "p-button-icon": !0,
          "p-button-icon-left": this.iconPos === "left" && this.label,
          "p-button-icon-right": this.iconPos === "right" && this.label,
          "p-button-icon-top": this.iconPos === "top" && this.label,
          "p-button-icon-bottom": this.iconPos === "bottom" && this.label,
        };
        return (
          this.loading
            ? (e[`p-button-loading-icon pi-spin ${this.loadingIcon ?? ""}`] =
                !0)
            : this.icon && (e[this.icon] = !0),
          e
        );
      }
      get buttonClass() {
        return {
          "p-button p-component": !0,
          "p-button-icon-only":
            (this.icon ||
              this.iconTemplate ||
              this.loadingIcon ||
              this.loadingIconTemplate) &&
            !this.label,
          "p-button-vertical":
            (this.iconPos === "top" || this.iconPos === "bottom") && this.label,
          "p-button-loading": this.loading,
          "p-button-loading-label-only":
            this.loading &&
            !this.icon &&
            this.label &&
            !this.loadingIcon &&
            this.iconPos === "left",
          "p-button-link": this.link,
          [`p-button-${this.severity}`]: this.severity,
          "p-button-raised": this.raised,
          "p-button-rounded": this.rounded,
          "p-button-text": this.text,
          "p-button-outlined": this.outlined,
          "p-button-sm": this.size === "small",
          "p-button-lg": this.size === "large",
          "p-button-plain": this.plain,
          [`${this.styleClass}`]: this.styleClass,
        };
      }
      ngAfterContentInit() {
        this.templates?.forEach((e) => {
          switch (e.getType()) {
            case "content":
              this.contentTemplate = e.template;
              break;
            case "icon":
              this.iconTemplate = e.template;
              break;
            case "loadingicon":
              this.loadingIconTemplate = e.template;
              break;
            default:
              this.contentTemplate = e.template;
              break;
          }
        });
      }
      badgeStyleClass() {
        return {
          "p-badge p-component": !0,
          "p-badge-no-gutter": this.badge && String(this.badge).length === 1,
        };
      }
      focus() {
        this.el.nativeElement.firstChild.focus();
      }
      static ɵfac = function (t) {
        return new (t || n)(H(Fe));
      };
      static ɵcmp = ae({
        type: n,
        selectors: [["p-button"]],
        contentQueries: function (t, r, o) {
          if ((t & 1 && ln(o, vl, 4), t & 2)) {
            let a;
            ot((a = at())) && (r.templates = a);
          }
        },
        hostAttrs: [1, "p-element"],
        hostVars: 2,
        hostBindings: function (t, r) {
          t & 2 && ne("p-disabled", r.disabled);
        },
        inputs: {
          type: "type",
          iconPos: "iconPos",
          icon: "icon",
          badge: "badge",
          label: "label",
          disabled: [2, "disabled", "disabled", Se],
          loading: [2, "loading", "loading", Se],
          loadingIcon: "loadingIcon",
          raised: [2, "raised", "raised", Se],
          rounded: [2, "rounded", "rounded", Se],
          text: [2, "text", "text", Se],
          plain: [2, "plain", "plain", Se],
          severity: "severity",
          outlined: [2, "outlined", "outlined", Se],
          link: [2, "link", "link", Se],
          tabindex: [2, "tabindex", "tabindex", cn],
          size: "size",
          style: "style",
          styleClass: "styleClass",
          badgeClass: "badgeClass",
          ariaLabel: "ariaLabel",
          autofocus: [2, "autofocus", "autofocus", Se],
        },
        outputs: { onClick: "onClick", onFocus: "onFocus", onBlur: "onBlur" },
        standalone: !0,
        features: [kt, ce],
        ngContentSelectors: Kk,
        decls: 7,
        vars: 14,
        consts: [
          [
            "pRipple",
            "",
            "pAutoFocus",
            "",
            3,
            "click",
            "focus",
            "blur",
            "ngStyle",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngTemplateOutlet"],
          [4, "ngIf"],
          ["class", "p-button-label", 4, "ngIf"],
          [3, "ngClass", "class", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "ngClass", 4, "ngIf"],
          [3, "styleClass", "spin", 4, "ngIf"],
          [3, "ngClass"],
          [3, "styleClass", "spin"],
          [3, "ngIf"],
          [1, "p-button-label"],
        ],
        template: function (t, r) {
          t & 1 &&
            (Xt(),
            c(0, "button", 0),
            N("click", function (a) {
              return r.onClick.emit(a);
            })("focus", function (a) {
              return r.onFocus.emit(a);
            })("blur", function (a) {
              return r.onBlur.emit(a);
            }),
            Lt(1),
            R(2, Qk, 1, 0, "ng-container", 1)(3, iP, 3, 5, "ng-container", 2)(
              4,
              aP,
              3,
              5,
              "ng-container",
              2
            )(5, sP, 2, 3, "span", 3)(6, lP, 2, 5, "span", 4),
            d()),
            t & 2 &&
              (y("ngStyle", r.style)("disabled", r.disabled || r.loading)(
                "ngClass",
                r.buttonClass
              )("autofocus", r.autofocus),
              le("type", r.type)("aria-label", r.ariaLabel)(
                "data-pc-name",
                "button"
              )("data-pc-section", "root")("tabindex", r.tabindex),
              m(2),
              y("ngTemplateOutlet", r.contentTemplate),
              m(),
              y("ngIf", r.loading),
              m(),
              y("ngIf", !r.loading),
              m(),
              y("ngIf", !r.contentTemplate && r.label),
              m(),
              y("ngIf", !r.contentTemplate && r.badge));
        },
        dependencies: [Xe, Zo, Pr, It, Zd, Xd, sy],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })(),
  bf = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({ imports: [cP, On] });
    }
    return n;
  })();
var vf = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = ae({
      type: n,
      selectors: [["ChevronLeftIcon"]],
      standalone: !0,
      features: [Ze, ce],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M9.61296 13C9.50997 13.0005 9.40792 12.9804 9.3128 12.9409C9.21767 12.9014 9.13139 12.8433 9.05902 12.7701L3.83313 7.54416C3.68634 7.39718 3.60388 7.19795 3.60388 6.99022C3.60388 6.78249 3.68634 6.58325 3.83313 6.43628L9.05902 1.21039C9.20762 1.07192 9.40416 0.996539 9.60724 1.00012C9.81032 1.00371 10.0041 1.08597 10.1477 1.22959C10.2913 1.37322 10.3736 1.56698 10.3772 1.77005C10.3808 1.97313 10.3054 2.16968 10.1669 2.31827L5.49496 6.99022L10.1669 11.6622C10.3137 11.8091 10.3962 12.0084 10.3962 12.2161C10.3962 12.4238 10.3137 12.6231 10.1669 12.7701C10.0945 12.8433 10.0083 12.9014 9.91313 12.9409C9.81801 12.9804 9.71596 13.0005 9.61296 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (ft(), c(0, "svg", 0), z(1, "path", 1), d()),
          t & 2 &&
            (Be(r.getClassNames()),
            le("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var yl = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = ae({
      type: n,
      selectors: [["ChevronRightIcon"]],
      standalone: !0,
      features: [Ze, ce],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M4.38708 13C4.28408 13.0005 4.18203 12.9804 4.08691 12.9409C3.99178 12.9014 3.9055 12.8433 3.83313 12.7701C3.68634 12.6231 3.60388 12.4238 3.60388 12.2161C3.60388 12.0084 3.68634 11.8091 3.83313 11.6622L8.50507 6.99022L3.83313 2.31827C3.69467 2.16968 3.61928 1.97313 3.62287 1.77005C3.62645 1.56698 3.70872 1.37322 3.85234 1.22959C3.99596 1.08597 4.18972 1.00371 4.3928 1.00012C4.59588 0.996539 4.79242 1.07192 4.94102 1.21039L10.1669 6.43628C10.3137 6.58325 10.3962 6.78249 10.3962 6.99022C10.3962 7.19795 10.3137 7.39718 10.1669 7.54416L4.94102 12.7701C4.86865 12.8433 4.78237 12.9014 4.68724 12.9409C4.59212 12.9804 4.49007 13.0005 4.38708 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (ft(), c(0, "svg", 0), z(1, "path", 1), d()),
          t & 2 &&
            (Be(r.getClassNames()),
            le("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var yf = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = ae({
      type: n,
      selectors: [["ChevronUpIcon"]],
      standalone: !0,
      features: [Ze, ce],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M12.2097 10.4113C12.1057 10.4118 12.0027 10.3915 11.9067 10.3516C11.8107 10.3118 11.7237 10.2532 11.6506 10.1792L6.93602 5.46461L2.22139 10.1476C2.07272 10.244 1.89599 10.2877 1.71953 10.2717C1.54307 10.2556 1.3771 10.1808 1.24822 10.0593C1.11933 9.93766 1.035 9.77633 1.00874 9.6011C0.982477 9.42587 1.0158 9.2469 1.10338 9.09287L6.37701 3.81923C6.52533 3.6711 6.72639 3.58789 6.93602 3.58789C7.14565 3.58789 7.3467 3.6711 7.49502 3.81923L12.7687 9.09287C12.9168 9.24119 13 9.44225 13 9.65187C13 9.8615 12.9168 10.0626 12.7687 10.2109C12.616 10.3487 12.4151 10.4207 12.2097 10.4113Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (ft(), c(0, "svg", 0), z(1, "path", 1), d()),
          t & 2 &&
            (Be(r.getClassNames()),
            le("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var xf = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = ae({
      type: n,
      selectors: [["ChevronDownIcon"]],
      standalone: !0,
      features: [Ze, ce],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (ft(), c(0, "svg", 0), z(1, "path", 1), d()),
          t & 2 &&
            (Be(r.getClassNames()),
            le("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Cf = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = ae({
      type: n,
      selectors: [["TimesIcon"]],
      standalone: !0,
      features: [Ze, ce],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (ft(), c(0, "svg", 0), z(1, "path", 1), d()),
          t & 2 &&
            (Be(r.getClassNames()),
            le("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var wf = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = ae({
      type: n,
      selectors: [["CalendarIcon"]],
      standalone: !0,
      features: [Ze, ce],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M10.7838 1.51351H9.83783V0.567568C9.83783 0.417039 9.77804 0.272676 9.6716 0.166237C9.56516 0.0597971 9.42079 0 9.27027 0C9.11974 0 8.97538 0.0597971 8.86894 0.166237C8.7625 0.272676 8.7027 0.417039 8.7027 0.567568V1.51351H5.29729V0.567568C5.29729 0.417039 5.2375 0.272676 5.13106 0.166237C5.02462 0.0597971 4.88025 0 4.72973 0C4.5792 0 4.43484 0.0597971 4.3284 0.166237C4.22196 0.272676 4.16216 0.417039 4.16216 0.567568V1.51351H3.21621C2.66428 1.51351 2.13494 1.73277 1.74467 2.12305C1.35439 2.51333 1.13513 3.04266 1.13513 3.59459V11.9189C1.13513 12.4709 1.35439 13.0002 1.74467 13.3905C2.13494 13.7807 2.66428 14 3.21621 14H10.7838C11.3357 14 11.865 13.7807 12.2553 13.3905C12.6456 13.0002 12.8649 12.4709 12.8649 11.9189V3.59459C12.8649 3.04266 12.6456 2.51333 12.2553 2.12305C11.865 1.73277 11.3357 1.51351 10.7838 1.51351ZM3.21621 2.64865H4.16216V3.59459C4.16216 3.74512 4.22196 3.88949 4.3284 3.99593C4.43484 4.10237 4.5792 4.16216 4.72973 4.16216C4.88025 4.16216 5.02462 4.10237 5.13106 3.99593C5.2375 3.88949 5.29729 3.74512 5.29729 3.59459V2.64865H8.7027V3.59459C8.7027 3.74512 8.7625 3.88949 8.86894 3.99593C8.97538 4.10237 9.11974 4.16216 9.27027 4.16216C9.42079 4.16216 9.56516 4.10237 9.6716 3.99593C9.77804 3.88949 9.83783 3.74512 9.83783 3.59459V2.64865H10.7838C11.0347 2.64865 11.2753 2.74831 11.4527 2.92571C11.6301 3.10311 11.7297 3.34371 11.7297 3.59459V5.67568H2.27027V3.59459C2.27027 3.34371 2.36993 3.10311 2.54733 2.92571C2.72473 2.74831 2.96533 2.64865 3.21621 2.64865ZM10.7838 12.8649H3.21621C2.96533 12.8649 2.72473 12.7652 2.54733 12.5878C2.36993 12.4104 2.27027 12.1698 2.27027 11.9189V6.81081H11.7297V11.9189C11.7297 12.1698 11.6301 12.4104 11.4527 12.5878C11.2753 12.7652 11.0347 12.8649 10.7838 12.8649Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (ft(), c(0, "svg", 0), z(1, "path", 1), d()),
          t & 2 &&
            (Be(r.getClassNames()),
            le("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var uP = ["container"],
  hP = ["inputfield"],
  pP = ["contentWrapper"],
  mP = [[["p-header"]], [["p-footer"]]],
  fP = ["p-header", "p-footer"],
  gP = (n, i, e, t, r) => ({
    "p-calendar": !0,
    "p-input-icon-right": n,
    "p-calendar-w-btn": i,
    "p-calendar-timeonly": e,
    "p-calendar-disabled": t,
    "p-focus": r,
  }),
  _P = (n) => ({ clickCallBack: n }),
  bP = (n) => ({ "p-datepicker-icon": n }),
  vP = (n, i, e, t, r, o) => ({
    "p-datepicker p-component": !0,
    "p-datepicker-inline": n,
    "p-disabled": i,
    "p-datepicker-timeonly": e,
    "p-datepicker-multiple-month": t,
    "p-datepicker-monthpicker": r,
    "p-datepicker-touch-ui": o,
  }),
  uy = (n, i) => ({ showTransitionParams: n, hideTransitionParams: i }),
  yP = (n) => ({ value: "visibleTouchUI", params: n }),
  xP = (n) => ({ value: "visible", params: n }),
  Df = (n) => ({ $implicit: n }),
  CP = (n, i) => ({ "p-datepicker-other-month": n, "p-datepicker-today": i }),
  wP = (n, i) => ({
    "p-highlight p-datepicker-current-day": n,
    "p-disabled": i,
  }),
  py = (n, i) => ({ "p-highlight": n, "p-disabled": i }),
  hy = (n) => [n];
function DP(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "TimesIcon", 11),
      N("click", function () {
        P(e);
        let r = x(3);
        return I(r.clear());
      }),
      d();
  }
  n & 2 && y("styleClass", "p-calendar-clear-icon");
}
function SP(n, i) {}
function MP(n, i) {
  n & 1 && R(0, SP, 0, 0, "ng-template");
}
function TP(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "span", 12),
      N("click", function () {
        P(e);
        let r = x(3);
        return I(r.clear());
      }),
      R(1, MP, 1, 0, null, 13),
      d();
  }
  if (n & 2) {
    let e = x(3);
    m(), y("ngTemplateOutlet", e.clearIconTemplate);
  }
}
function EP(n, i) {
  if (
    (n & 1 &&
      (Ue(0), R(1, DP, 1, 1, "TimesIcon", 9)(2, TP, 2, 1, "span", 10), ze()),
    n & 2)
  ) {
    let e = x(2);
    m(), y("ngIf", !e.clearIconTemplate), m(), y("ngIf", e.clearIconTemplate);
  }
}
function OP(n, i) {
  if ((n & 1 && z(0, "span", 16), n & 2)) {
    let e = x(3);
    y("ngClass", e.icon);
  }
}
function kP(n, i) {
  n & 1 && z(0, "CalendarIcon");
}
function PP(n, i) {}
function IP(n, i) {
  n & 1 && R(0, PP, 0, 0, "ng-template");
}
function AP(n, i) {
  if (
    (n & 1 &&
      (Ue(0), R(1, kP, 1, 0, "CalendarIcon", 7)(2, IP, 1, 0, null, 13), ze()),
    n & 2)
  ) {
    let e = x(3);
    m(),
      y("ngIf", !e.triggerIconTemplate),
      m(),
      y("ngTemplateOutlet", e.triggerIconTemplate);
  }
}
function RP(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 14),
      N("click", function (r) {
        P(e), x();
        let o = _t(1),
          a = x();
        return I(a.onButtonClick(r, o));
      }),
      R(1, OP, 1, 1, "span", 15)(2, AP, 3, 2, "ng-container", 7),
      d();
  }
  if (n & 2) {
    let e,
      t = x(2);
    y("disabled", t.disabled),
      le("aria-label", t.iconButtonAriaLabel)(
        "aria-expanded",
        (e = t.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", t.overlayVisible ? t.panelId : null),
      m(),
      y("ngIf", t.icon),
      m(),
      y("ngIf", !t.icon);
  }
}
function FP(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "CalendarIcon", 19),
      N("click", function (r) {
        P(e);
        let o = x(3);
        return I(o.onButtonClick(r));
      }),
      d();
  }
  if (n & 2) {
    let e = x(3);
    y("ngClass", de(1, bP, e.showOnFocus));
  }
}
function NP(n, i) {
  n & 1 && wn(0);
}
function LP(n, i) {
  if (
    (n & 1 &&
      (Ue(0),
      R(1, FP, 1, 3, "CalendarIcon", 17)(2, NP, 1, 0, "ng-container", 18),
      ze()),
    n & 2)
  ) {
    let e = x(2);
    m(),
      y("ngIf", !e.inputIconTemplate),
      m(),
      y("ngTemplateOutlet", e.inputIconTemplate)(
        "ngTemplateOutletContext",
        de(3, _P, e.onButtonClick.bind(e))
      );
  }
}
function VP(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "input", 6, 1),
      N("focus", function (r) {
        P(e);
        let o = x();
        return I(o.onInputFocus(r));
      })("keydown", function (r) {
        P(e);
        let o = x();
        return I(o.onInputKeydown(r));
      })("click", function () {
        P(e);
        let r = x();
        return I(r.onInputClick());
      })("blur", function (r) {
        P(e);
        let o = x();
        return I(o.onInputBlur(r));
      })("input", function (r) {
        P(e);
        let o = x();
        return I(o.onUserInput(r));
      }),
      d(),
      R(2, EP, 3, 2, "ng-container", 7)(3, RP, 3, 6, "button", 8)(
        4,
        LP,
        3,
        5,
        "ng-container",
        7
      );
  }
  if (n & 2) {
    let e,
      t = x();
    Be(t.inputStyleClass),
      y("value", t.inputFieldValue)("readonly", t.readonlyInput)(
        "ngStyle",
        t.inputStyle
      )("placeholder", t.placeholder || "")("disabled", t.disabled)(
        "ngClass",
        t.inputClass
      )("autofocus", t.autofocus),
      le("id", t.inputId)("name", t.name)("required", t.required)(
        "aria-required",
        t.required
      )(
        "aria-expanded",
        (e = t.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", t.overlayVisible ? t.panelId : null)(
        "aria-labelledby",
        t.ariaLabelledBy
      )("aria-label", t.ariaLabel)("tabindex", t.tabindex)(
        "inputmode",
        t.touchUI ? "off" : null
      ),
      m(2),
      y("ngIf", t.showClear && !t.disabled && t.value != null),
      m(),
      y("ngIf", t.showIcon && t.iconDisplay === "button"),
      m(),
      y("ngIf", t.iconDisplay === "input" && t.showIcon);
  }
}
function BP(n, i) {
  n & 1 && wn(0);
}
function HP(n, i) {
  n & 1 && z(0, "ChevronLeftIcon", 40),
    n & 2 && y("styleClass", "p-datepicker-prev-icon");
}
function jP(n, i) {}
function UP(n, i) {
  n & 1 && R(0, jP, 0, 0, "ng-template");
}
function zP(n, i) {
  if ((n & 1 && (c(0, "span", 41), R(1, UP, 1, 0, null, 13), d()), n & 2)) {
    let e = x(5);
    m(), y("ngTemplateOutlet", e.previousIconTemplate);
  }
}
function $P(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 38),
      N("keydown", function (r) {
        P(e);
        let o = x(4);
        return I(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        P(e);
        let o = x(4);
        return I(o.onPrevButtonClick(r));
      }),
      R(1, HP, 1, 1, "ChevronLeftIcon", 35)(2, zP, 2, 1, "span", 39),
      d();
  }
  if (n & 2) {
    let e = x(4);
    le("aria-label", e.prevIconAriaLabel),
      m(),
      y("ngIf", !e.previousIconTemplate),
      m(),
      y("ngIf", e.previousIconTemplate);
  }
}
function WP(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 42),
      N("click", function (r) {
        P(e);
        let o = x(4);
        return I(o.switchToMonthView(r));
      })("keydown", function (r) {
        P(e);
        let o = x(4);
        return I(o.onContainerButtonKeydown(r));
      }),
      h(1),
      d();
  }
  if (n & 2) {
    let e = x().$implicit,
      t = x(3);
    y("disabled", t.switchViewButtonDisabled()),
      le("aria-label", t.getTranslation("chooseMonth")),
      m(),
      ee(" ", t.getMonthName(e.month), " ");
  }
}
function GP(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 43),
      N("click", function (r) {
        P(e);
        let o = x(4);
        return I(o.switchToYearView(r));
      })("keydown", function (r) {
        P(e);
        let o = x(4);
        return I(o.onContainerButtonKeydown(r));
      }),
      h(1),
      d();
  }
  if (n & 2) {
    let e = x().$implicit,
      t = x(3);
    y("disabled", t.switchViewButtonDisabled()),
      le("aria-label", t.getTranslation("chooseYear")),
      m(),
      ee(" ", t.getYear(e), " ");
  }
}
function YP(n, i) {
  if ((n & 1 && (Ue(0), h(1), ze()), n & 2)) {
    let e = x(5);
    m(),
      Yn(
        "",
        e.yearPickerValues()[0],
        " - ",
        e.yearPickerValues()[e.yearPickerValues().length - 1],
        ""
      );
  }
}
function qP(n, i) {
  n & 1 && wn(0);
}
function KP(n, i) {
  if (
    (n & 1 &&
      (c(0, "span", 44),
      R(1, YP, 2, 2, "ng-container", 7)(2, qP, 1, 0, "ng-container", 18),
      d()),
    n & 2)
  ) {
    let e = x(4);
    m(),
      y("ngIf", !e.decadeTemplate),
      m(),
      y("ngTemplateOutlet", e.decadeTemplate)(
        "ngTemplateOutletContext",
        de(3, Df, e.yearPickerValues)
      );
  }
}
function QP(n, i) {
  n & 1 && z(0, "ChevronRightIcon", 40),
    n & 2 && y("styleClass", "p-datepicker-next-icon");
}
function XP(n, i) {}
function ZP(n, i) {
  n & 1 && R(0, XP, 0, 0, "ng-template");
}
function JP(n, i) {
  if ((n & 1 && (c(0, "span", 45), R(1, ZP, 1, 0, null, 13), d()), n & 2)) {
    let e = x(4);
    m(), y("ngTemplateOutlet", e.nextIconTemplate);
  }
}
function eI(n, i) {
  if ((n & 1 && (c(0, "th", 51)(1, "span"), h(2), d()()), n & 2)) {
    let e = x(5);
    m(2), B(e.getTranslation("weekHeader"));
  }
}
function tI(n, i) {
  if ((n & 1 && (c(0, "th", 52)(1, "span"), h(2), d()()), n & 2)) {
    let e = i.$implicit;
    m(2), B(e);
  }
}
function iI(n, i) {
  if ((n & 1 && (c(0, "td", 55)(1, "span", 56), h(2), d()()), n & 2)) {
    let e = x().index,
      t = x(2).$implicit;
    m(2), ee(" ", t.weekNumbers[e], " ");
  }
}
function nI(n, i) {
  if ((n & 1 && (Ue(0), h(1), ze()), n & 2)) {
    let e = x(2).$implicit;
    m(), B(e.day);
  }
}
function rI(n, i) {
  n & 1 && wn(0);
}
function oI(n, i) {
  if ((n & 1 && (Ue(0), R(1, rI, 1, 0, "ng-container", 18), ze()), n & 2)) {
    let e = x(2).$implicit,
      t = x(6);
    m(),
      y("ngTemplateOutlet", t.dateTemplate)(
        "ngTemplateOutletContext",
        de(2, Df, e)
      );
  }
}
function aI(n, i) {
  n & 1 && wn(0);
}
function sI(n, i) {
  if ((n & 1 && (Ue(0), R(1, aI, 1, 0, "ng-container", 18), ze()), n & 2)) {
    let e = x(2).$implicit,
      t = x(6);
    m(),
      y("ngTemplateOutlet", t.disabledDateTemplate)(
        "ngTemplateOutletContext",
        de(2, Df, e)
      );
  }
}
function lI(n, i) {
  if ((n & 1 && (c(0, "div", 59), h(1), d()), n & 2)) {
    let e = x(2).$implicit;
    m(), ee(" ", e.day, " ");
  }
}
function cI(n, i) {
  if (n & 1) {
    let e = re();
    Ue(0),
      c(1, "span", 57),
      N("click", function (r) {
        P(e);
        let o = x().$implicit,
          a = x(6);
        return I(a.onDateSelect(r, o));
      })("keydown", function (r) {
        P(e);
        let o = x().$implicit,
          a = x(3).index,
          l = x(3);
        return I(l.onDateCellKeydown(r, o, a));
      }),
      R(2, nI, 2, 1, "ng-container", 7)(3, oI, 2, 4, "ng-container", 7)(
        4,
        sI,
        2,
        4,
        "ng-container",
        7
      ),
      d(),
      R(5, lI, 2, 1, "div", 58),
      ze();
  }
  if (n & 2) {
    let e = x().$implicit,
      t = x(6);
    m(),
      y("ngClass", Ni(6, wP, t.isSelected(e) && e.selectable, !e.selectable)),
      le("data-date", t.formatDateKey(t.formatDateMetaToDate(e))),
      m(),
      y("ngIf", !t.dateTemplate && (e.selectable || !t.disabledDateTemplate)),
      m(),
      y("ngIf", e.selectable || !t.disabledDateTemplate),
      m(),
      y("ngIf", !e.selectable),
      m(),
      y("ngIf", t.isSelected(e));
  }
}
function dI(n, i) {
  if (
    (n & 1 && (c(0, "td", 16), R(1, cI, 6, 9, "ng-container", 7), d()), n & 2)
  ) {
    let e = i.$implicit,
      t = x(6);
    y("ngClass", Ni(3, CP, e.otherMonth, e.today)),
      le("aria-label", e.day),
      m(),
      y("ngIf", e.otherMonth ? t.showOtherMonths : !0);
  }
}
function uI(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr"), R(1, iI, 3, 1, "td", 53)(2, dI, 2, 6, "td", 54), d()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(5);
    m(), y("ngIf", t.showWeek), m(), y("ngForOf", e);
  }
}
function hI(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 46)(1, "table", 47)(2, "thead")(3, "tr"),
      R(4, eI, 3, 1, "th", 48)(5, tI, 3, 1, "th", 49),
      d()(),
      c(6, "tbody"),
      R(7, uI, 3, 2, "tr", 50),
      d()()()),
    n & 2)
  ) {
    let e = x().$implicit,
      t = x(3);
    m(4),
      y("ngIf", t.showWeek),
      m(),
      y("ngForOf", t.weekDays),
      m(2),
      y("ngForOf", e.dates);
  }
}
function pI(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 27)(1, "div", 28),
      R(2, $P, 3, 3, "button", 29),
      c(3, "div", 30),
      R(4, WP, 2, 3, "button", 31)(5, GP, 2, 3, "button", 32)(
        6,
        KP,
        3,
        5,
        "span",
        33
      ),
      d(),
      c(7, "button", 34),
      N("keydown", function (r) {
        P(e);
        let o = x(3);
        return I(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        P(e);
        let o = x(3);
        return I(o.onNextButtonClick(r));
      }),
      R(8, QP, 1, 1, "ChevronRightIcon", 35)(9, JP, 2, 1, "span", 36),
      d()(),
      R(10, hI, 8, 3, "div", 37),
      d();
  }
  if (n & 2) {
    let e = i.index,
      t = x(3);
    m(2),
      y("ngIf", e === 0),
      m(2),
      y("ngIf", t.currentView === "date"),
      m(),
      y("ngIf", t.currentView !== "year"),
      m(),
      y("ngIf", t.currentView === "year"),
      m(),
      si(
        "display",
        t.numberOfMonths === 1 || e === t.numberOfMonths - 1
          ? "inline-flex"
          : "none"
      ),
      le("aria-label", t.nextIconAriaLabel),
      m(),
      y("ngIf", !t.nextIconTemplate),
      m(),
      y("ngIf", t.nextIconTemplate),
      m(),
      y("ngIf", t.currentView === "date");
  }
}
function mI(n, i) {
  if ((n & 1 && (c(0, "div", 59), h(1), d()), n & 2)) {
    let e = x().$implicit;
    m(), ee(" ", e, " ");
  }
}
function fI(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "span", 62),
      N("click", function (r) {
        let o = P(e).index,
          a = x(4);
        return I(a.onMonthSelect(r, o));
      })("keydown", function (r) {
        let o = P(e).index,
          a = x(4);
        return I(a.onMonthCellKeydown(r, o));
      }),
      h(1),
      R(2, mI, 2, 1, "div", 58),
      d();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x(4);
    y("ngClass", Ni(3, py, r.isMonthSelected(t), r.isMonthDisabled(t))),
      m(),
      ee(" ", e, " "),
      m(),
      y("ngIf", r.isMonthSelected(t));
  }
}
function gI(n, i) {
  if ((n & 1 && (c(0, "div", 60), R(1, fI, 3, 6, "span", 61), d()), n & 2)) {
    let e = x(3);
    m(), y("ngForOf", e.monthPickerValues());
  }
}
function _I(n, i) {
  if ((n & 1 && (c(0, "div", 59), h(1), d()), n & 2)) {
    let e = x().$implicit;
    m(), ee(" ", e, " ");
  }
}
function bI(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "span", 65),
      N("click", function (r) {
        let o = P(e).$implicit,
          a = x(4);
        return I(a.onYearSelect(r, o));
      })("keydown", function (r) {
        let o = P(e).$implicit,
          a = x(4);
        return I(a.onYearCellKeydown(r, o));
      }),
      h(1),
      R(2, _I, 2, 1, "div", 58),
      d();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(4);
    y("ngClass", Ni(3, py, t.isYearSelected(e), t.isYearDisabled(e))),
      m(),
      ee(" ", e, " "),
      m(),
      y("ngIf", t.isYearSelected(e));
  }
}
function vI(n, i) {
  if ((n & 1 && (c(0, "div", 63), R(1, bI, 3, 6, "span", 64), d()), n & 2)) {
    let e = x(3);
    m(), y("ngForOf", e.yearPickerValues());
  }
}
function yI(n, i) {
  if (
    (n & 1 &&
      (Ue(0),
      c(1, "div", 23),
      R(2, pI, 11, 10, "div", 24),
      d(),
      R(3, gI, 2, 1, "div", 25)(4, vI, 2, 1, "div", 26),
      ze()),
    n & 2)
  ) {
    let e = x(2);
    m(2),
      y("ngForOf", e.months),
      m(),
      y("ngIf", e.currentView === "month"),
      m(),
      y("ngIf", e.currentView === "year");
  }
}
function xI(n, i) {
  n & 1 && z(0, "ChevronUpIcon");
}
function CI(n, i) {}
function wI(n, i) {
  n & 1 && R(0, CI, 0, 0, "ng-template");
}
function DI(n, i) {
  n & 1 && (Ue(0), h(1, "0"), ze());
}
function SI(n, i) {
  n & 1 && z(0, "ChevronDownIcon");
}
function MI(n, i) {}
function TI(n, i) {
  n & 1 && R(0, MI, 0, 0, "ng-template");
}
function EI(n, i) {
  n & 1 && z(0, "ChevronUpIcon");
}
function OI(n, i) {}
function kI(n, i) {
  n & 1 && R(0, OI, 0, 0, "ng-template");
}
function PI(n, i) {
  n & 1 && (Ue(0), h(1, "0"), ze());
}
function II(n, i) {
  n & 1 && z(0, "ChevronDownIcon");
}
function AI(n, i) {}
function RI(n, i) {
  n & 1 && R(0, AI, 0, 0, "ng-template");
}
function FI(n, i) {
  if ((n & 1 && (c(0, "div", 69)(1, "span"), h(2), d()()), n & 2)) {
    let e = x(3);
    m(2), B(e.timeSeparator);
  }
}
function NI(n, i) {
  n & 1 && z(0, "ChevronUpIcon");
}
function LI(n, i) {}
function VI(n, i) {
  n & 1 && R(0, LI, 0, 0, "ng-template");
}
function BI(n, i) {
  n & 1 && (Ue(0), h(1, "0"), ze());
}
function HI(n, i) {
  n & 1 && z(0, "ChevronDownIcon");
}
function jI(n, i) {}
function UI(n, i) {
  n & 1 && R(0, jI, 0, 0, "ng-template");
}
function zI(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 74)(1, "button", 68),
      N("keydown", function (r) {
        P(e);
        let o = x(3);
        return I(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        P(e);
        let o = x(3);
        return I(o.incrementSecond(r));
      })("keydown.space", function (r) {
        P(e);
        let o = x(3);
        return I(o.incrementSecond(r));
      })("mousedown", function (r) {
        P(e);
        let o = x(3);
        return I(o.onTimePickerElementMouseDown(r, 2, 1));
      })("mouseup", function (r) {
        P(e);
        let o = x(3);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        P(e);
        let o = x(3);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        P(e);
        let o = x(3);
        return I(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        P(e);
        let r = x(3);
        return I(r.onTimePickerElementMouseLeave());
      }),
      R(2, NI, 1, 0, "ChevronUpIcon", 7)(3, VI, 1, 0, null, 13),
      d(),
      c(4, "span"),
      R(5, BI, 2, 0, "ng-container", 7),
      h(6),
      d(),
      c(7, "button", 68),
      N("keydown", function (r) {
        P(e);
        let o = x(3);
        return I(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        P(e);
        let o = x(3);
        return I(o.decrementSecond(r));
      })("keydown.space", function (r) {
        P(e);
        let o = x(3);
        return I(o.decrementSecond(r));
      })("mousedown", function (r) {
        P(e);
        let o = x(3);
        return I(o.onTimePickerElementMouseDown(r, 2, -1));
      })("mouseup", function (r) {
        P(e);
        let o = x(3);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        P(e);
        let o = x(3);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        P(e);
        let o = x(3);
        return I(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        P(e);
        let r = x(3);
        return I(r.onTimePickerElementMouseLeave());
      }),
      R(8, HI, 1, 0, "ChevronDownIcon", 7)(9, UI, 1, 0, null, 13),
      d()();
  }
  if (n & 2) {
    let e = x(3);
    m(),
      le("aria-label", e.getTranslation("nextSecond")),
      m(),
      y("ngIf", !e.incrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      m(2),
      y("ngIf", e.currentSecond < 10),
      m(),
      B(e.currentSecond),
      m(),
      le("aria-label", e.getTranslation("prevSecond")),
      m(),
      y("ngIf", !e.decrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function $I(n, i) {
  n & 1 && z(0, "ChevronUpIcon");
}
function WI(n, i) {}
function GI(n, i) {
  n & 1 && R(0, WI, 0, 0, "ng-template");
}
function YI(n, i) {
  n & 1 && z(0, "ChevronDownIcon");
}
function qI(n, i) {}
function KI(n, i) {
  n & 1 && R(0, qI, 0, 0, "ng-template");
}
function QI(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 75)(1, "button", 76),
      N("keydown", function (r) {
        P(e);
        let o = x(3);
        return I(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        P(e);
        let o = x(3);
        return I(o.toggleAMPM(r));
      })("keydown.enter", function (r) {
        P(e);
        let o = x(3);
        return I(o.toggleAMPM(r));
      }),
      R(2, $I, 1, 0, "ChevronUpIcon", 7)(3, GI, 1, 0, null, 13),
      d(),
      c(4, "span"),
      h(5),
      d(),
      c(6, "button", 76),
      N("keydown", function (r) {
        P(e);
        let o = x(3);
        return I(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        P(e);
        let o = x(3);
        return I(o.toggleAMPM(r));
      })("keydown.enter", function (r) {
        P(e);
        let o = x(3);
        return I(o.toggleAMPM(r));
      }),
      R(7, YI, 1, 0, "ChevronDownIcon", 7)(8, KI, 1, 0, null, 13),
      d()();
  }
  if (n & 2) {
    let e = x(3);
    m(),
      le("aria-label", e.getTranslation("am")),
      m(),
      y("ngIf", !e.incrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      m(2),
      B(e.pm ? "PM" : "AM"),
      m(),
      le("aria-label", e.getTranslation("pm")),
      m(),
      y("ngIf", !e.decrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function XI(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 66)(1, "div", 67)(2, "button", 68),
      N("keydown", function (r) {
        P(e);
        let o = x(2);
        return I(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        P(e);
        let o = x(2);
        return I(o.incrementHour(r));
      })("keydown.space", function (r) {
        P(e);
        let o = x(2);
        return I(o.incrementHour(r));
      })("mousedown", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseDown(r, 0, 1));
      })("mouseup", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        P(e);
        let r = x(2);
        return I(r.onTimePickerElementMouseLeave());
      }),
      R(3, xI, 1, 0, "ChevronUpIcon", 7)(4, wI, 1, 0, null, 13),
      d(),
      c(5, "span"),
      R(6, DI, 2, 0, "ng-container", 7),
      h(7),
      d(),
      c(8, "button", 68),
      N("keydown", function (r) {
        P(e);
        let o = x(2);
        return I(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        P(e);
        let o = x(2);
        return I(o.decrementHour(r));
      })("keydown.space", function (r) {
        P(e);
        let o = x(2);
        return I(o.decrementHour(r));
      })("mousedown", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseDown(r, 0, -1));
      })("mouseup", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        P(e);
        let r = x(2);
        return I(r.onTimePickerElementMouseLeave());
      }),
      R(9, SI, 1, 0, "ChevronDownIcon", 7)(10, TI, 1, 0, null, 13),
      d()(),
      c(11, "div", 69)(12, "span"),
      h(13),
      d()(),
      c(14, "div", 70)(15, "button", 68),
      N("keydown", function (r) {
        P(e);
        let o = x(2);
        return I(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        P(e);
        let o = x(2);
        return I(o.incrementMinute(r));
      })("keydown.space", function (r) {
        P(e);
        let o = x(2);
        return I(o.incrementMinute(r));
      })("mousedown", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseDown(r, 1, 1));
      })("mouseup", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        P(e);
        let r = x(2);
        return I(r.onTimePickerElementMouseLeave());
      }),
      R(16, EI, 1, 0, "ChevronUpIcon", 7)(17, kI, 1, 0, null, 13),
      d(),
      c(18, "span"),
      R(19, PI, 2, 0, "ng-container", 7),
      h(20),
      d(),
      c(21, "button", 68),
      N("keydown", function (r) {
        P(e);
        let o = x(2);
        return I(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        P(e);
        let o = x(2);
        return I(o.decrementMinute(r));
      })("keydown.space", function (r) {
        P(e);
        let o = x(2);
        return I(o.decrementMinute(r));
      })("mousedown", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseDown(r, 1, -1));
      })("mouseup", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        P(e);
        let r = x(2);
        return I(r.onTimePickerElementMouseLeave());
      }),
      R(22, II, 1, 0, "ChevronDownIcon", 7)(23, RI, 1, 0, null, 13),
      d()(),
      R(24, FI, 3, 1, "div", 71)(25, zI, 10, 8, "div", 72)(
        26,
        QI,
        9,
        7,
        "div",
        73
      ),
      d();
  }
  if (n & 2) {
    let e = x(2);
    m(2),
      le("aria-label", e.getTranslation("nextHour")),
      m(),
      y("ngIf", !e.incrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      m(2),
      y("ngIf", e.currentHour < 10),
      m(),
      B(e.currentHour),
      m(),
      le("aria-label", e.getTranslation("prevHour")),
      m(),
      y("ngIf", !e.decrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.decrementIconTemplate),
      m(3),
      B(e.timeSeparator),
      m(2),
      le("aria-label", e.getTranslation("nextMinute")),
      m(),
      y("ngIf", !e.incrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      m(2),
      y("ngIf", e.currentMinute < 10),
      m(),
      B(e.currentMinute),
      m(),
      le("aria-label", e.getTranslation("prevMinute")),
      m(),
      y("ngIf", !e.decrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.decrementIconTemplate),
      m(),
      y("ngIf", e.showSeconds),
      m(),
      y("ngIf", e.showSeconds),
      m(),
      y("ngIf", e.hourFormat == "12");
  }
}
function ZI(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 77)(1, "button", 78),
      N("keydown", function (r) {
        P(e);
        let o = x(2);
        return I(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        P(e);
        let o = x(2);
        return I(o.onTodayButtonClick(r));
      }),
      d(),
      c(2, "button", 78),
      N("keydown", function (r) {
        P(e);
        let o = x(2);
        return I(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        P(e);
        let o = x(2);
        return I(o.onClearButtonClick(r));
      }),
      d()();
  }
  if (n & 2) {
    let e = x(2);
    m(),
      y("label", e.getTranslation("today"))(
        "ngClass",
        de(4, hy, e.todayButtonStyleClass)
      ),
      m(),
      y("label", e.getTranslation("clear"))(
        "ngClass",
        de(6, hy, e.clearButtonStyleClass)
      );
  }
}
function JI(n, i) {
  n & 1 && wn(0);
}
function eA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 20, 2),
      N("@overlayAnimation.start", function (r) {
        P(e);
        let o = x();
        return I(o.onOverlayAnimationStart(r));
      })("@overlayAnimation.done", function (r) {
        P(e);
        let o = x();
        return I(o.onOverlayAnimationDone(r));
      })("click", function (r) {
        P(e);
        let o = x();
        return I(o.onOverlayClick(r));
      }),
      Lt(2),
      R(3, BP, 1, 0, "ng-container", 13)(4, yI, 5, 3, "ng-container", 7)(
        5,
        XI,
        27,
        20,
        "div",
        21
      )(6, ZI, 3, 8, "div", 22),
      Lt(7, 1),
      R(8, JI, 1, 0, "ng-container", 13),
      d();
  }
  if (n & 2) {
    let e = x();
    Be(e.panelStyleClass),
      y("ngStyle", e.panelStyle)(
        "ngClass",
        Vg(
          15,
          vP,
          e.inline,
          e.disabled,
          e.timeOnly,
          e.numberOfMonths > 1,
          e.view === "month",
          e.touchUI
        )
      )(
        "@overlayAnimation",
        e.touchUI
          ? de(
              25,
              yP,
              Ni(22, uy, e.showTransitionOptions, e.hideTransitionOptions)
            )
          : de(
              30,
              xP,
              Ni(27, uy, e.showTransitionOptions, e.hideTransitionOptions)
            )
      )("@.disabled", e.inline === !0),
      le("id", e.panelId)("aria-label", e.getTranslation("chooseDate"))(
        "role",
        e.inline ? null : "dialog"
      )("aria-modal", e.inline ? null : "true"),
      m(3),
      y("ngTemplateOutlet", e.headerTemplate),
      m(),
      y("ngIf", !e.timeOnly),
      m(),
      y("ngIf", (e.showTime || e.timeOnly) && e.currentView === "date"),
      m(),
      y("ngIf", e.showButtonBar),
      m(2),
      y("ngTemplateOutlet", e.footerTemplate);
  }
}
var tA = { provide: fo, useExisting: wi(() => iA), multi: !0 },
  iA = (() => {
    class n {
      document;
      el;
      renderer;
      cd;
      zone;
      config;
      overlayService;
      iconDisplay = "button";
      style;
      styleClass;
      inputStyle;
      inputId;
      name;
      inputStyleClass;
      placeholder;
      ariaLabelledBy;
      ariaLabel;
      iconAriaLabel;
      disabled;
      dateFormat;
      multipleSeparator = ",";
      rangeSeparator = "-";
      inline = !1;
      showOtherMonths = !0;
      selectOtherMonths;
      showIcon;
      icon;
      appendTo;
      readonlyInput;
      shortYearCutoff = "+10";
      monthNavigator;
      yearNavigator;
      hourFormat = "24";
      timeOnly;
      stepYearPicker = 10;
      stepHour = 1;
      stepMinute = 1;
      stepSecond = 1;
      showSeconds = !1;
      required;
      showOnFocus = !0;
      showWeek = !1;
      startWeekFromFirstDayOfYear = !1;
      showClear = !1;
      dataType = "date";
      selectionMode = "single";
      maxDateCount;
      showButtonBar;
      todayButtonStyleClass = "p-button-text";
      clearButtonStyleClass = "p-button-text";
      autofocus;
      autoZIndex = !0;
      baseZIndex = 0;
      panelStyleClass;
      panelStyle;
      keepInvalid = !1;
      hideOnDateTimeSelect = !0;
      touchUI;
      timeSeparator = ":";
      focusTrap = !0;
      showTransitionOptions = ".12s cubic-bezier(0, 0, 0.2, 1)";
      hideTransitionOptions = ".1s linear";
      tabindex;
      variant = "outlined";
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        (this._minDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        (this._maxDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDates() {
        return this._disabledDates;
      }
      set disabledDates(e) {
        (this._disabledDates = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDays() {
        return this._disabledDays;
      }
      set disabledDays(e) {
        (this._disabledDays = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get yearRange() {
        return this._yearRange;
      }
      set yearRange(e) {
        if (((this._yearRange = e), e)) {
          let t = e.split(":"),
            r = parseInt(t[0]),
            o = parseInt(t[1]);
          this.populateYearOptions(r, o);
        }
      }
      get showTime() {
        return this._showTime;
      }
      set showTime(e) {
        (this._showTime = e),
          this.currentHour === void 0 &&
            this.initTime(this.value || new Date()),
          this.updateInputfield();
      }
      get responsiveOptions() {
        return this._responsiveOptions;
      }
      set responsiveOptions(e) {
        (this._responsiveOptions = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get numberOfMonths() {
        return this._numberOfMonths;
      }
      set numberOfMonths(e) {
        (this._numberOfMonths = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get firstDayOfWeek() {
        return this._firstDayOfWeek;
      }
      set firstDayOfWeek(e) {
        (this._firstDayOfWeek = e), this.createWeekDays();
      }
      set locale(e) {
        console.warn(
          "Locale property has no effect, use new i18n API instead."
        );
      }
      get view() {
        return this._view;
      }
      set view(e) {
        (this._view = e), (this.currentView = this._view);
      }
      get defaultDate() {
        return this._defaultDate;
      }
      set defaultDate(e) {
        if (((this._defaultDate = e), this.initialized)) {
          let t = e || new Date();
          (this.currentMonth = t.getMonth()),
            (this.currentYear = t.getFullYear()),
            this.initTime(t),
            this.createMonths(this.currentMonth, this.currentYear);
        }
      }
      get inputClass() {
        return {
          "p-inputtext p-component": !0,
          "p-variant-filled":
            this.variant === "filled" || this.config.inputStyle() === "filled",
        };
      }
      onFocus = new xe();
      onBlur = new xe();
      onClose = new xe();
      onSelect = new xe();
      onClear = new xe();
      onInput = new xe();
      onTodayClick = new xe();
      onClearClick = new xe();
      onMonthChange = new xe();
      onYearChange = new xe();
      onClickOutside = new xe();
      onShow = new xe();
      templates;
      containerViewChild;
      inputfieldViewChild;
      set content(e) {
        (this.contentViewChild = e),
          this.contentViewChild &&
            (this.isMonthNavigate
              ? (Promise.resolve(null).then(() => this.updateFocus()),
                (this.isMonthNavigate = !1))
              : !this.focus && !this.inline && this.initFocusableCell());
      }
      contentViewChild;
      value;
      dates;
      months;
      weekDays;
      currentMonth;
      currentYear;
      currentHour;
      currentMinute;
      currentSecond;
      pm;
      mask;
      maskClickListener;
      overlay;
      responsiveStyleElement;
      overlayVisible;
      onModelChange = () => {};
      onModelTouched = () => {};
      calendarElement;
      timePickerTimer;
      documentClickListener;
      animationEndListener;
      ticksTo1970;
      yearOptions;
      focus;
      isKeydown;
      filled;
      inputFieldValue = null;
      _minDate;
      _maxDate;
      _showTime;
      _yearRange;
      preventDocumentListener;
      dateTemplate;
      headerTemplate;
      footerTemplate;
      disabledDateTemplate;
      decadeTemplate;
      previousIconTemplate;
      nextIconTemplate;
      triggerIconTemplate;
      clearIconTemplate;
      decrementIconTemplate;
      incrementIconTemplate;
      inputIconTemplate;
      _disabledDates;
      _disabledDays;
      selectElement;
      todayElement;
      focusElement;
      scrollHandler;
      documentResizeListener;
      navigationState = null;
      isMonthNavigate;
      initialized;
      translationSubscription;
      _locale;
      _responsiveOptions;
      currentView;
      attributeSelector;
      panelId;
      _numberOfMonths = 1;
      _firstDayOfWeek;
      _view = "date";
      preventFocus;
      _defaultDate;
      _focusKey = null;
      window;
      get locale() {
        return this._locale;
      }
      get iconButtonAriaLabel() {
        return this.iconAriaLabel
          ? this.iconAriaLabel
          : this.getTranslation("chooseDate");
      }
      get prevIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("prevDecade")
          : this.currentView === "month"
          ? this.getTranslation("prevYear")
          : this.getTranslation("prevMonth");
      }
      get nextIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("nextDecade")
          : this.currentView === "month"
          ? this.getTranslation("nextYear")
          : this.getTranslation("nextMonth");
      }
      constructor(e, t, r, o, a, l, u) {
        (this.document = e),
          (this.el = t),
          (this.renderer = r),
          (this.cd = o),
          (this.zone = a),
          (this.config = l),
          (this.overlayService = u),
          (this.window = this.document.defaultView);
      }
      ngOnInit() {
        (this.attributeSelector = Ia()),
          (this.panelId = this.attributeSelector + "_panel");
        let e = this.defaultDate || new Date();
        this.createResponsiveStyle(),
          (this.currentMonth = e.getMonth()),
          (this.currentYear = e.getFullYear()),
          (this.yearOptions = []),
          (this.currentView = this.view),
          this.view === "date" &&
            (this.createWeekDays(),
            this.initTime(e),
            this.createMonths(this.currentMonth, this.currentYear),
            (this.ticksTo1970 =
              (1969 * 365 +
                Math.floor(1970 / 4) -
                Math.floor(1970 / 100) +
                Math.floor(1970 / 400)) *
              24 *
              60 *
              60 *
              1e7)),
          (this.translationSubscription =
            this.config.translationObserver.subscribe(() => {
              this.createWeekDays(), this.cd.markForCheck();
            })),
          (this.initialized = !0);
      }
      ngAfterContentInit() {
        this.templates.forEach((e) => {
          switch (e.getType()) {
            case "date":
              this.dateTemplate = e.template;
              break;
            case "decade":
              this.decadeTemplate = e.template;
              break;
            case "disabledDate":
              this.disabledDateTemplate = e.template;
              break;
            case "header":
              this.headerTemplate = e.template;
              break;
            case "inputicon":
              this.inputIconTemplate = e.template;
              break;
            case "previousicon":
              this.previousIconTemplate = e.template;
              break;
            case "nexticon":
              this.nextIconTemplate = e.template;
              break;
            case "triggericon":
              this.triggerIconTemplate = e.template;
              break;
            case "clearicon":
              this.clearIconTemplate = e.template;
              break;
            case "decrementicon":
              this.decrementIconTemplate = e.template;
              break;
            case "incrementicon":
              this.incrementIconTemplate = e.template;
              break;
            case "footer":
              this.footerTemplate = e.template;
              break;
            default:
              this.dateTemplate = e.template;
              break;
          }
        });
      }
      ngAfterViewInit() {
        this.inline &&
          (this.contentViewChild &&
            this.contentViewChild.nativeElement.setAttribute(
              this.attributeSelector,
              ""
            ),
          !this.disabled &&
            !this.inline &&
            (this.initFocusableCell(),
            this.numberOfMonths === 1 &&
              this.contentViewChild &&
              this.contentViewChild.nativeElement &&
              (this.contentViewChild.nativeElement.style.width =
                me.getOuterWidth(this.containerViewChild?.nativeElement) +
                "px")));
      }
      getTranslation(e) {
        return this.config.getTranslation(e);
      }
      populateYearOptions(e, t) {
        this.yearOptions = [];
        for (let r = e; r <= t; r++) this.yearOptions.push(r);
      }
      createWeekDays() {
        this.weekDays = [];
        let e = this.getFirstDateOfWeek(),
          t = this.getTranslation(kn.DAY_NAMES_MIN);
        for (let r = 0; r < 7; r++)
          this.weekDays.push(t[e]), (e = e == 6 ? 0 : ++e);
      }
      monthPickerValues() {
        let e = [];
        for (let t = 0; t <= 11; t++)
          e.push(this.config.getTranslation("monthNamesShort")[t]);
        return e;
      }
      yearPickerValues() {
        let e = [],
          t = this.currentYear - (this.currentYear % this.stepYearPicker);
        for (let r = 0; r < this.stepYearPicker; r++) e.push(t + r);
        return e;
      }
      createMonths(e, t) {
        this.months = this.months = [];
        for (let r = 0; r < this.numberOfMonths; r++) {
          let o = e + r,
            a = t;
          o > 11 && ((o = (o % 11) - 1), (a = t + 1)),
            this.months.push(this.createMonth(o, a));
        }
      }
      getWeekNumber(e) {
        let t = new Date(e.getTime());
        if (this.startWeekFromFirstDayOfYear) {
          let o = +this.getFirstDateOfWeek();
          t.setDate(t.getDate() + 6 + o - t.getDay());
        } else t.setDate(t.getDate() + 4 - (t.getDay() || 7));
        let r = t.getTime();
        return (
          t.setMonth(0),
          t.setDate(1),
          Math.floor(Math.round((r - t.getTime()) / 864e5) / 7) + 1
        );
      }
      createMonth(e, t) {
        let r = [],
          o = this.getFirstDayOfMonthIndex(e, t),
          a = this.getDaysCountInMonth(e, t),
          l = this.getDaysCountInPrevMonth(e, t),
          u = 1,
          f = new Date(),
          v = [],
          D = Math.ceil((a + o) / 7);
        for (let T = 0; T < D; T++) {
          let M = [];
          if (T == 0) {
            for (let V = l - o + 1; V <= l; V++) {
              let A = this.getPreviousMonthAndYear(e, t);
              M.push({
                day: V,
                month: A.month,
                year: A.year,
                otherMonth: !0,
                today: this.isToday(f, V, A.month, A.year),
                selectable: this.isSelectable(V, A.month, A.year, !0),
              });
            }
            let k = 7 - M.length;
            for (let V = 0; V < k; V++)
              M.push({
                day: u,
                month: e,
                year: t,
                today: this.isToday(f, u, e, t),
                selectable: this.isSelectable(u, e, t, !1),
              }),
                u++;
          } else
            for (let k = 0; k < 7; k++) {
              if (u > a) {
                let V = this.getNextMonthAndYear(e, t);
                M.push({
                  day: u - a,
                  month: V.month,
                  year: V.year,
                  otherMonth: !0,
                  today: this.isToday(f, u - a, V.month, V.year),
                  selectable: this.isSelectable(u - a, V.month, V.year, !0),
                });
              } else
                M.push({
                  day: u,
                  month: e,
                  year: t,
                  today: this.isToday(f, u, e, t),
                  selectable: this.isSelectable(u, e, t, !1),
                });
              u++;
            }
          this.showWeek &&
            v.push(
              this.getWeekNumber(new Date(M[0].year, M[0].month, M[0].day))
            ),
            r.push(M);
        }
        return { month: e, year: t, dates: r, weekNumbers: v };
      }
      initTime(e) {
        (this.pm = e.getHours() > 11),
          this.showTime
            ? ((this.currentMinute = e.getMinutes()),
              (this.currentSecond = e.getSeconds()),
              this.setCurrentHourPM(e.getHours()))
            : this.timeOnly &&
              ((this.currentMinute = 0),
              (this.currentHour = 0),
              (this.currentSecond = 0));
      }
      navBackward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.decrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.decrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 0
                ? ((this.currentMonth = 11), this.decrementYear())
                : this.currentMonth--,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      navForward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.incrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.incrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 11
                ? ((this.currentMonth = 0), this.incrementYear())
                : this.currentMonth++,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      decrementYear() {
        this.currentYear--;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear < e[0]) {
          let t = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] - t, e[e.length - 1] - t);
        }
      }
      decrementYearPickerStep() {
        this.currentYear = this.currentYear - this.stepYearPicker;
      }
      incrementYearPickerStep() {
        this.currentYear = this.currentYear + this.stepYearPicker;
      }
      incrementYear() {
        this.currentYear++;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear > e[e.length - 1]) {
          let t = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] + t, e[e.length - 1] + t);
        }
      }
      switchToMonthView(e) {
        this.setCurrentView("month"), e.preventDefault();
      }
      switchToYearView(e) {
        this.setCurrentView("year"), e.preventDefault();
      }
      onDateSelect(e, t) {
        if (this.disabled || !t.selectable) {
          e.preventDefault();
          return;
        }
        this.isMultipleSelection() && this.isSelected(t)
          ? ((this.value = this.value.filter(
              (r, o) => !this.isDateEquals(r, t)
            )),
            this.value.length === 0 && (this.value = null),
            this.updateModel(this.value))
          : this.shouldSelectDate(t) && this.selectDate(t),
          this.hideOnDateTimeSelect &&
            (this.isSingleSelection() ||
              (this.isRangeSelection() && this.value[1])) &&
            setTimeout(() => {
              e.preventDefault(),
                this.hideOverlay(),
                this.mask && this.disableModality(),
                this.cd.markForCheck();
            }, 150),
          this.updateInputfield(),
          e.preventDefault();
      }
      shouldSelectDate(e) {
        return this.isMultipleSelection() && this.maxDateCount != null
          ? this.maxDateCount > (this.value ? this.value.length : 0)
          : !0;
      }
      onMonthSelect(e, t) {
        this.view === "month"
          ? this.onDateSelect(e, {
              year: this.currentYear,
              month: t,
              day: 1,
              selectable: !0,
            })
          : ((this.currentMonth = t),
            this.createMonths(this.currentMonth, this.currentYear),
            this.setCurrentView("date"),
            this.onMonthChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      onYearSelect(e, t) {
        this.view === "year"
          ? this.onDateSelect(e, { year: t, month: 0, day: 1, selectable: !0 })
          : ((this.currentYear = t),
            this.setCurrentView("month"),
            this.onYearChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      updateInputfield() {
        let e = "";
        if (this.value) {
          if (this.isSingleSelection()) e = this.formatDateTime(this.value);
          else if (this.isMultipleSelection())
            for (let t = 0; t < this.value.length; t++) {
              let r = this.formatDateTime(this.value[t]);
              (e += r),
                t !== this.value.length - 1 &&
                  (e += this.multipleSeparator + " ");
            }
          else if (this.isRangeSelection() && this.value && this.value.length) {
            let t = this.value[0],
              r = this.value[1];
            (e = this.formatDateTime(t)),
              r &&
                (e += " " + this.rangeSeparator + " " + this.formatDateTime(r));
          }
        }
        (this.inputFieldValue = e),
          this.updateFilledState(),
          this.inputfieldViewChild &&
            this.inputfieldViewChild.nativeElement &&
            (this.inputfieldViewChild.nativeElement.value =
              this.inputFieldValue);
      }
      formatDateTime(e) {
        let t = this.keepInvalid ? e : null,
          r = this.isValidDateForTimeConstraints(e);
        return (
          this.isValidDate(e)
            ? this.timeOnly
              ? (t = this.formatTime(e))
              : ((t = this.formatDate(e, this.getDateFormat())),
                this.showTime && (t += " " + this.formatTime(e)))
            : this.dataType === "string" && (t = e),
          (t = r ? t : ""),
          t
        );
      }
      formatDateMetaToDate(e) {
        return new Date(e.year, e.month, e.day);
      }
      formatDateKey(e) {
        return `${e.getFullYear()}-${e.getMonth() + 1}-${e.getDate()}`;
      }
      setCurrentHourPM(e) {
        this.hourFormat == "12"
          ? ((this.pm = e > 11),
            e >= 12
              ? (this.currentHour = e == 12 ? 12 : e - 12)
              : (this.currentHour = e == 0 ? 12 : e))
          : (this.currentHour = e);
      }
      setCurrentView(e) {
        (this.currentView = e), this.cd.detectChanges(), this.alignOverlay();
      }
      selectDate(e) {
        let t = this.formatDateMetaToDate(e);
        if (
          (this.showTime &&
            (this.hourFormat == "12"
              ? this.currentHour === 12
                ? t.setHours(this.pm ? 12 : 0)
                : t.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
              : t.setHours(this.currentHour),
            t.setMinutes(this.currentMinute),
            t.setSeconds(this.currentSecond)),
          this.minDate &&
            this.minDate > t &&
            ((t = this.minDate),
            this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds())),
          this.maxDate &&
            this.maxDate < t &&
            ((t = this.maxDate),
            this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds())),
          this.isSingleSelection())
        )
          this.updateModel(t);
        else if (this.isMultipleSelection())
          this.updateModel(this.value ? [...this.value, t] : [t]);
        else if (this.isRangeSelection())
          if (this.value && this.value.length) {
            let r = this.value[0],
              o = this.value[1];
            !o && t.getTime() >= r.getTime() ? (o = t) : ((r = t), (o = null)),
              this.updateModel([r, o]);
          } else this.updateModel([t, null]);
        this.onSelect.emit(t);
      }
      updateModel(e) {
        if (((this.value = e), this.dataType == "date"))
          this.onModelChange(this.value);
        else if (this.dataType == "string")
          if (this.isSingleSelection())
            this.onModelChange(this.formatDateTime(this.value));
          else {
            let t = null;
            Array.isArray(this.value) &&
              (t = this.value.map((r) => this.formatDateTime(r))),
              this.onModelChange(t);
          }
      }
      getFirstDayOfMonthIndex(e, t) {
        let r = new Date();
        r.setDate(1), r.setMonth(e), r.setFullYear(t);
        let o = r.getDay() + this.getSundayIndex();
        return o >= 7 ? o - 7 : o;
      }
      getDaysCountInMonth(e, t) {
        return 32 - this.daylightSavingAdjust(new Date(t, e, 32)).getDate();
      }
      getDaysCountInPrevMonth(e, t) {
        let r = this.getPreviousMonthAndYear(e, t);
        return this.getDaysCountInMonth(r.month, r.year);
      }
      getPreviousMonthAndYear(e, t) {
        let r, o;
        return (
          e === 0 ? ((r = 11), (o = t - 1)) : ((r = e - 1), (o = t)),
          { month: r, year: o }
        );
      }
      getNextMonthAndYear(e, t) {
        let r, o;
        return (
          e === 11 ? ((r = 0), (o = t + 1)) : ((r = e + 1), (o = t)),
          { month: r, year: o }
        );
      }
      getSundayIndex() {
        let e = this.getFirstDateOfWeek();
        return e > 0 ? 7 - e : 0;
      }
      isSelected(e) {
        if (this.value) {
          if (this.isSingleSelection()) return this.isDateEquals(this.value, e);
          if (this.isMultipleSelection()) {
            let t = !1;
            for (let r of this.value)
              if (((t = this.isDateEquals(r, e)), t)) break;
            return t;
          } else if (this.isRangeSelection())
            return this.value[1]
              ? this.isDateEquals(this.value[0], e) ||
                  this.isDateEquals(this.value[1], e) ||
                  this.isDateBetween(this.value[0], this.value[1], e)
              : this.isDateEquals(this.value[0], e);
        } else return !1;
      }
      isComparable() {
        return this.value != null && typeof this.value != "string";
      }
      isMonthSelected(e) {
        if (this.isComparable() && !this.isMultipleSelection()) {
          let [t, r] = this.isRangeSelection()
              ? this.value
              : [this.value, this.value],
            o = new Date(this.currentYear, e, 1);
          return o >= t && o <= (r ?? t);
        }
        return !1;
      }
      isMonthDisabled(e, t) {
        let r = t ?? this.currentYear;
        for (let o = 1; o < this.getDaysCountInMonth(e, r) + 1; o++)
          if (this.isSelectable(o, e, r, !1)) return !1;
        return !0;
      }
      isYearDisabled(e) {
        return Array(12)
          .fill(0)
          .every((t, r) => this.isMonthDisabled(r, e));
      }
      isYearSelected(e) {
        if (!this.isComparable() || this.isMultipleSelection()) return !1;
        let t = this.isRangeSelection() ? this.value[0] : this.value;
        return t ? t.getFullYear() === e : !1;
      }
      isDateEquals(e, t) {
        return e && tn.isDate(e)
          ? e.getDate() === t.day &&
              e.getMonth() === t.month &&
              e.getFullYear() === t.year
          : !1;
      }
      isDateBetween(e, t, r) {
        let o = !1;
        if (tn.isDate(e) && tn.isDate(t)) {
          let a = this.formatDateMetaToDate(r);
          return e.getTime() <= a.getTime() && t.getTime() >= a.getTime();
        }
        return o;
      }
      isSingleSelection() {
        return this.selectionMode === "single";
      }
      isRangeSelection() {
        return this.selectionMode === "range";
      }
      isMultipleSelection() {
        return this.selectionMode === "multiple";
      }
      isToday(e, t, r, o) {
        return e.getDate() === t && e.getMonth() === r && e.getFullYear() === o;
      }
      isSelectable(e, t, r, o) {
        let a = !0,
          l = !0,
          u = !0,
          f = !0;
        return o && !this.selectOtherMonths
          ? !1
          : (this.minDate &&
              (this.minDate.getFullYear() > r ||
                (this.minDate.getFullYear() === r &&
                  this.currentView != "year" &&
                  (this.minDate.getMonth() > t ||
                    (this.minDate.getMonth() === t &&
                      this.minDate.getDate() > e)))) &&
              (a = !1),
            this.maxDate &&
              (this.maxDate.getFullYear() < r ||
                (this.maxDate.getFullYear() === r &&
                  (this.maxDate.getMonth() < t ||
                    (this.maxDate.getMonth() === t &&
                      this.maxDate.getDate() < e)))) &&
              (l = !1),
            this.disabledDates && (u = !this.isDateDisabled(e, t, r)),
            this.disabledDays && (f = !this.isDayDisabled(e, t, r)),
            a && l && u && f);
      }
      isDateDisabled(e, t, r) {
        if (this.disabledDates) {
          for (let o of this.disabledDates)
            if (
              o.getFullYear() === r &&
              o.getMonth() === t &&
              o.getDate() === e
            )
              return !0;
        }
        return !1;
      }
      isDayDisabled(e, t, r) {
        if (this.disabledDays) {
          let a = new Date(r, t, e).getDay();
          return this.disabledDays.indexOf(a) !== -1;
        }
        return !1;
      }
      onInputFocus(e) {
        (this.focus = !0),
          this.showOnFocus && this.showOverlay(),
          this.onFocus.emit(e);
      }
      onInputClick() {
        this.showOnFocus && !this.overlayVisible && this.showOverlay();
      }
      onInputBlur(e) {
        (this.focus = !1),
          this.onBlur.emit(e),
          this.keepInvalid || this.updateInputfield(),
          this.onModelTouched();
      }
      onButtonClick(e, t = this.inputfieldViewChild?.nativeElement) {
        this.overlayVisible
          ? this.hideOverlay()
          : (t.focus(), this.showOverlay());
      }
      clear() {
        (this.inputFieldValue = null),
          (this.value = null),
          this.onModelChange(this.value),
          this.onClear.emit();
      }
      onOverlayClick(e) {
        this.overlayService.add({
          originalEvent: e,
          target: this.el.nativeElement,
        });
      }
      getMonthName(e) {
        return this.config.getTranslation("monthNames")[e];
      }
      getYear(e) {
        return this.currentView === "month" ? this.currentYear : e.year;
      }
      switchViewButtonDisabled() {
        return this.numberOfMonths > 1 || this.disabled;
      }
      onPrevButtonClick(e) {
        (this.navigationState = { backward: !0, button: !0 }),
          this.navBackward(e);
      }
      onNextButtonClick(e) {
        (this.navigationState = { backward: !1, button: !0 }),
          this.navForward(e);
      }
      onContainerButtonKeydown(e) {
        switch (e.which) {
          case 9:
            if ((this.inline || this.trapFocus(e), this.inline)) {
              let t = me.findSingle(
                  this.containerViewChild?.nativeElement,
                  ".p-datepicker-header"
                ),
                r = e.target;
              if (this.timeOnly) return;
              r == t.children[t?.children?.length - 1] &&
                this.initFocusableCell();
            }
            break;
          case 27:
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          default:
            break;
        }
      }
      onInputKeydown(e) {
        (this.isKeydown = !0),
          e.keyCode === 40 && this.contentViewChild
            ? this.trapFocus(e)
            : e.keyCode === 27
            ? this.overlayVisible &&
              (this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault())
            : e.keyCode === 13
            ? this.overlayVisible &&
              ((this.overlayVisible = !1), e.preventDefault())
            : e.keyCode === 9 &&
              this.contentViewChild &&
              (me
                .getFocusableElements(this.contentViewChild.nativeElement)
                .forEach((t) => (t.tabIndex = "-1")),
              this.overlayVisible && (this.overlayVisible = !1));
      }
      onDateCellKeydown(e, t, r) {
        let o = e.currentTarget,
          a = o.parentElement,
          l = this.formatDateMetaToDate(t);
        switch (e.which) {
          case 40: {
            o.tabIndex = "-1";
            let k = me.index(a),
              V = a.parentElement.nextElementSibling;
            if (V) {
              let A = V.children[k].children[0];
              me.hasClass(A, "p-disabled")
                ? ((this.navigationState = { backward: !1 }),
                  this.navForward(e))
                : ((V.children[k].children[0].tabIndex = "0"),
                  V.children[k].children[0].focus());
            } else
              (this.navigationState = { backward: !1 }), this.navForward(e);
            e.preventDefault();
            break;
          }
          case 38: {
            o.tabIndex = "-1";
            let k = me.index(a),
              V = a.parentElement.previousElementSibling;
            if (V) {
              let A = V.children[k].children[0];
              me.hasClass(A, "p-disabled")
                ? ((this.navigationState = { backward: !0 }),
                  this.navBackward(e))
                : ((A.tabIndex = "0"), A.focus());
            } else
              (this.navigationState = { backward: !0 }), this.navBackward(e);
            e.preventDefault();
            break;
          }
          case 37: {
            o.tabIndex = "-1";
            let k = a.previousElementSibling;
            if (k) {
              let V = k.children[0];
              me.hasClass(V, "p-disabled") ||
              me.hasClass(V.parentElement, "p-datepicker-weeknumber")
                ? this.navigateToMonth(!0, r)
                : ((V.tabIndex = "0"), V.focus());
            } else this.navigateToMonth(!0, r);
            e.preventDefault();
            break;
          }
          case 39: {
            o.tabIndex = "-1";
            let k = a.nextElementSibling;
            if (k) {
              let V = k.children[0];
              me.hasClass(V, "p-disabled")
                ? this.navigateToMonth(!1, r)
                : ((V.tabIndex = "0"), V.focus());
            } else this.navigateToMonth(!1, r);
            e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onDateSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          case 33: {
            o.tabIndex = "-1";
            let k = new Date(l.getFullYear(), l.getMonth() - 1, l.getDate()),
              V = this.formatDateKey(k);
            this.navigateToMonth(
              !0,
              r,
              `span[data-date='${V}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 34: {
            o.tabIndex = "-1";
            let k = new Date(l.getFullYear(), l.getMonth() + 1, l.getDate()),
              V = this.formatDateKey(k);
            this.navigateToMonth(
              !1,
              r,
              `span[data-date='${V}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 36:
            o.tabIndex = "-1";
            let u = new Date(l.getFullYear(), l.getMonth(), 1),
              f = this.formatDateKey(u),
              v = me.findSingle(
                o.offsetParent,
                `span[data-date='${f}']:not(.p-disabled):not(.p-ink)`
              );
            v && ((v.tabIndex = "0"), v.focus()), e.preventDefault();
            break;
          case 35:
            o.tabIndex = "-1";
            let D = new Date(l.getFullYear(), l.getMonth() + 1, 0),
              T = this.formatDateKey(D),
              M = me.findSingle(
                o.offsetParent,
                `span[data-date='${T}']:not(.p-disabled):not(.p-ink)`
              );
            D && ((M.tabIndex = "0"), M.focus()), e.preventDefault();
            break;
          default:
            break;
        }
      }
      onMonthCellKeydown(e, t) {
        let r = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            r.tabIndex = "-1";
            var o = r.parentElement.children,
              a = me.index(r);
            let l = o[e.which === 40 ? a + 3 : a - 3];
            l && ((l.tabIndex = "0"), l.focus()), e.preventDefault();
            break;
          }
          case 37: {
            r.tabIndex = "-1";
            let l = r.previousElementSibling;
            l
              ? ((l.tabIndex = "0"), l.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            r.tabIndex = "-1";
            let l = r.nextElementSibling;
            l
              ? ((l.tabIndex = "0"), l.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onMonthSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      onYearCellKeydown(e, t) {
        let r = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            r.tabIndex = "-1";
            var o = r.parentElement.children,
              a = me.index(r);
            let l = o[e.which === 40 ? a + 2 : a - 2];
            l && ((l.tabIndex = "0"), l.focus()), e.preventDefault();
            break;
          }
          case 37: {
            r.tabIndex = "-1";
            let l = r.previousElementSibling;
            l
              ? ((l.tabIndex = "0"), l.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            r.tabIndex = "-1";
            let l = r.nextElementSibling;
            l
              ? ((l.tabIndex = "0"), l.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onYearSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      navigateToMonth(e, t, r) {
        if (e)
          if (this.numberOfMonths === 1 || t === 0)
            (this.navigationState = { backward: !0 }),
              (this._focusKey = r),
              this.navBackward(event);
          else {
            let o = this.contentViewChild.nativeElement.children[t - 1];
            if (r) {
              let a = me.findSingle(o, r);
              (a.tabIndex = "0"), a.focus();
            } else {
              let a = me.find(
                  o,
                  ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                ),
                l = a[a.length - 1];
              (l.tabIndex = "0"), l.focus();
            }
          }
        else if (this.numberOfMonths === 1 || t === this.numberOfMonths - 1)
          (this.navigationState = { backward: !1 }),
            (this._focusKey = r),
            this.navForward(event);
        else {
          let o = this.contentViewChild.nativeElement.children[t + 1];
          if (r) {
            let a = me.findSingle(o, r);
            (a.tabIndex = "0"), a.focus();
          } else {
            let a = me.findSingle(
              o,
              ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
            );
            (a.tabIndex = "0"), a.focus();
          }
        }
      }
      updateFocus() {
        let e;
        if (this.navigationState) {
          if (this.navigationState.button)
            this.initFocusableCell(),
              this.navigationState.backward
                ? me
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-prev"
                    )
                    .focus()
                : me
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-next"
                    )
                    .focus();
          else {
            if (this.navigationState.backward) {
              let t;
              this.currentView === "month"
                ? (t = me.find(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (t = me.find(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (t = me.find(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  )),
                t && t.length > 0 && (e = t[t.length - 1]);
            } else
              this.currentView === "month"
                ? (e = me.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (e = me.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (e = me.findSingle(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  ));
            e && ((e.tabIndex = "0"), e.focus());
          }
          (this.navigationState = null), (this._focusKey = null);
        } else this.initFocusableCell();
        this.alignOverlay();
      }
      initFocusableCell() {
        let e = this.contentViewChild?.nativeElement,
          t;
        if (this.currentView === "month") {
          let r = me.find(
              e,
              ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
            ),
            o = me.findSingle(
              e,
              ".p-monthpicker .p-monthpicker-month.p-highlight"
            );
          r.forEach((a) => (a.tabIndex = -1)),
            (t = o || r[0]),
            r.length === 0 &&
              me
                .find(
                  e,
                  '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = "0"]'
                )
                .forEach((l) => (l.tabIndex = -1));
        } else if (this.currentView === "year") {
          let r = me.find(
              e,
              ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
            ),
            o = me.findSingle(
              e,
              ".p-yearpicker .p-yearpicker-year.p-highlight"
            );
          r.forEach((a) => (a.tabIndex = -1)),
            (t = o || r[0]),
            r.length === 0 &&
              me
                .find(
                  e,
                  '.p-yearpicker .p-yearpicker-year.p-disabled[tabindex = "0"]'
                )
                .forEach((l) => (l.tabIndex = -1));
        } else if (((t = me.findSingle(e, "span.p-highlight")), !t)) {
          let r = me.findSingle(
            e,
            "td.p-datepicker-today span:not(.p-disabled):not(.p-ink)"
          );
          r
            ? (t = r)
            : (t = me.findSingle(
                e,
                ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
              ));
        }
        t &&
          ((t.tabIndex = "0"),
          !this.preventFocus &&
            (!this.navigationState || !this.navigationState.button) &&
            setTimeout(() => {
              this.disabled || t.focus();
            }, 1),
          (this.preventFocus = !1));
      }
      trapFocus(e) {
        let t = me.getFocusableElements(this.contentViewChild.nativeElement);
        if (t && t.length > 0)
          if (!t[0].ownerDocument.activeElement) t[0].focus();
          else {
            let r = t.indexOf(t[0].ownerDocument.activeElement);
            if (e.shiftKey)
              if (r == -1 || r === 0)
                if (this.focusTrap) t[t.length - 1].focus();
                else {
                  if (r === -1) return this.hideOverlay();
                  if (r === 0) return;
                }
              else t[r - 1].focus();
            else if (r == -1)
              if (this.timeOnly) t[0].focus();
              else {
                let o = 0;
                for (let a = 0; a < t.length; a++)
                  t[a].tagName === "SPAN" && (o = a);
                t[o].focus();
              }
            else if (r === t.length - 1) {
              if (!this.focusTrap && r != -1) return this.hideOverlay();
              t[0].focus();
            } else t[r + 1].focus();
          }
        e.preventDefault();
      }
      onMonthDropdownChange(e) {
        (this.currentMonth = parseInt(e)),
          this.onMonthChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      onYearDropdownChange(e) {
        (this.currentYear = parseInt(e)),
          this.onYearChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      convertTo24Hour(e, t) {
        return this.hourFormat == "12"
          ? e === 12
            ? t
              ? 12
              : 0
            : t
            ? e + 12
            : e
          : e;
      }
      constrainTime(e, t, r, o) {
        let a = [e, t, r],
          l,
          u = this.value,
          f = this.convertTo24Hour(e, o),
          v = this.isRangeSelection(),
          D = this.isMultipleSelection();
        (v || D) &&
          (this.value || (this.value = [new Date(), new Date()]),
          v && (u = this.value[1] || this.value[0]),
          D && (u = this.value[this.value.length - 1]));
        let M = u ? u.toDateString() : null,
          k = this.minDate && M && this.minDate.toDateString() === M,
          V = this.maxDate && M && this.maxDate.toDateString() === M;
        switch ((k && (l = this.minDate.getHours() >= 12), !0)) {
          case k &&
            l &&
            this.minDate.getHours() === 12 &&
            this.minDate.getHours() > f:
            a[0] = 11;
          case k &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case k &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case k &&
            !l &&
            this.minDate.getHours() - 1 === f &&
            this.minDate.getHours() > f:
            (a[0] = 11), (this.pm = !0);
          case k &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case k &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case k && l && this.minDate.getHours() > f && f !== 12:
            this.setCurrentHourPM(this.minDate.getHours()),
              (a[0] = this.currentHour);
          case k &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case k &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case k && this.minDate.getHours() > f:
            a[0] = this.minDate.getHours();
          case k &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case k &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case V && this.maxDate.getHours() < f:
            a[0] = this.maxDate.getHours();
          case V &&
            this.maxDate.getHours() === f &&
            this.maxDate.getMinutes() < t:
            a[1] = this.maxDate.getMinutes();
          case V &&
            this.maxDate.getHours() === f &&
            this.maxDate.getMinutes() === t &&
            this.maxDate.getSeconds() < r:
            a[2] = this.maxDate.getSeconds();
            break;
        }
        return a;
      }
      incrementHour(e) {
        let t = this.currentHour ?? 0,
          r = (this.currentHour ?? 0) + this.stepHour,
          o = this.pm;
        this.hourFormat == "24"
          ? (r = r >= 24 ? r - 24 : r)
          : this.hourFormat == "12" &&
            (t < 12 && r > 11 && (o = !this.pm), (r = r >= 13 ? r - 12 : r)),
          this.toggleAMPMIfNotMinDate(o),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(r, this.currentMinute, this.currentSecond, o)),
          e.preventDefault();
      }
      toggleAMPMIfNotMinDate(e) {
        let t = this.value;
        (this.selectionMode == "range" || this.selectionMode == "multiple") &&
          Array.isArray(t) &&
          t.length > 0 &&
          (t = t[t.length - 1]);
        let r = t ? t.toDateString() : null;
        this.minDate &&
        r &&
        this.minDate.toDateString() === r &&
        this.minDate.getHours() >= 12
          ? (this.pm = !0)
          : (this.pm = e);
      }
      onTimePickerElementMouseDown(e, t, r) {
        this.disabled || (this.repeat(e, null, t, r), e.preventDefault());
      }
      onTimePickerElementMouseUp(e) {
        this.disabled || (this.clearTimePickerTimer(), this.updateTime());
      }
      onTimePickerElementMouseLeave() {
        !this.disabled &&
          this.timePickerTimer &&
          (this.clearTimePickerTimer(), this.updateTime());
      }
      repeat(e, t, r, o) {
        let a = t || 500;
        switch (
          (this.clearTimePickerTimer(),
          (this.timePickerTimer = setTimeout(() => {
            this.repeat(e, 100, r, o), this.cd.markForCheck();
          }, a)),
          r)
        ) {
          case 0:
            o === 1 ? this.incrementHour(e) : this.decrementHour(e);
            break;
          case 1:
            o === 1 ? this.incrementMinute(e) : this.decrementMinute(e);
            break;
          case 2:
            o === 1 ? this.incrementSecond(e) : this.decrementSecond(e);
            break;
        }
        this.updateInputfield();
      }
      clearTimePickerTimer() {
        this.timePickerTimer &&
          (clearTimeout(this.timePickerTimer), (this.timePickerTimer = null));
      }
      decrementHour(e) {
        let t = (this.currentHour ?? 0) - this.stepHour,
          r = this.pm;
        this.hourFormat == "24"
          ? (t = t < 0 ? 24 + t : t)
          : this.hourFormat == "12" &&
            (this.currentHour === 12 && (r = !this.pm),
            (t = t <= 0 ? 12 + t : t)),
          this.toggleAMPMIfNotMinDate(r),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(t, this.currentMinute, this.currentSecond, r)),
          e.preventDefault();
      }
      incrementMinute(e) {
        let t = (this.currentMinute ?? 0) + this.stepMinute;
        (t = t > 59 ? t - 60 : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              t,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      decrementMinute(e) {
        let t = (this.currentMinute ?? 0) - this.stepMinute;
        (t = t < 0 ? 60 + t : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              t,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      incrementSecond(e) {
        let t = this.currentSecond + this.stepSecond;
        (t = t > 59 ? t - 60 : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              t,
              this.pm
            )),
          e.preventDefault();
      }
      decrementSecond(e) {
        let t = this.currentSecond - this.stepSecond;
        (t = t < 0 ? 60 + t : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              t,
              this.pm
            )),
          e.preventDefault();
      }
      updateTime() {
        let e = this.value;
        this.isRangeSelection() && (e = this.value[1] || this.value[0]),
          this.isMultipleSelection() && (e = this.value[this.value.length - 1]),
          (e = e ? new Date(e.getTime()) : new Date()),
          this.hourFormat == "12"
            ? this.currentHour === 12
              ? e.setHours(this.pm ? 12 : 0)
              : e.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
            : e.setHours(this.currentHour),
          e.setMinutes(this.currentMinute),
          e.setSeconds(this.currentSecond),
          this.isRangeSelection() &&
            (this.value[1] ? (e = [this.value[0], e]) : (e = [e, null])),
          this.isMultipleSelection() && (e = [...this.value.slice(0, -1), e]),
          this.updateModel(e),
          this.onSelect.emit(e),
          this.updateInputfield();
      }
      toggleAMPM(e) {
        let t = !this.pm;
        (this.pm = t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              this.currentSecond,
              t
            )),
          this.updateTime(),
          e.preventDefault();
      }
      onUserInput(e) {
        if (!this.isKeydown) return;
        this.isKeydown = !1;
        let t = e.target.value;
        try {
          let r = this.parseValueFromString(t);
          this.isValidSelection(r)
            ? (this.updateModel(r), this.updateUI())
            : this.keepInvalid && this.updateModel(r);
        } catch {
          let o = this.keepInvalid ? t : null;
          this.updateModel(o);
        }
        (this.filled = t != null && t.length), this.onInput.emit(e);
      }
      isValidSelection(e) {
        if (this.isSingleSelection())
          return this.isSelectable(
            e.getDate(),
            e.getMonth(),
            e.getFullYear(),
            !1
          );
        let t = e.every((r) =>
          this.isSelectable(r.getDate(), r.getMonth(), r.getFullYear(), !1)
        );
        return (
          t &&
            this.isRangeSelection() &&
            (t = e.length === 1 || (e.length > 1 && e[1] >= e[0])),
          t
        );
      }
      parseValueFromString(e) {
        if (!e || e.trim().length === 0) return null;
        let t;
        if (this.isSingleSelection()) t = this.parseDateTime(e);
        else if (this.isMultipleSelection()) {
          let r = e.split(this.multipleSeparator);
          t = [];
          for (let o of r) t.push(this.parseDateTime(o.trim()));
        } else if (this.isRangeSelection()) {
          let r = e.split(" " + this.rangeSeparator + " ");
          t = [];
          for (let o = 0; o < r.length; o++)
            t[o] = this.parseDateTime(r[o].trim());
        }
        return t;
      }
      parseDateTime(e) {
        let t,
          r = e.split(" ");
        if (this.timeOnly) (t = new Date()), this.populateTime(t, r[0], r[1]);
        else {
          let o = this.getDateFormat();
          if (this.showTime) {
            let a = this.hourFormat == "12" ? r.pop() : null,
              l = r.pop();
            (t = this.parseDate(r.join(" "), o)), this.populateTime(t, l, a);
          } else t = this.parseDate(e, o);
        }
        return t;
      }
      populateTime(e, t, r) {
        if (this.hourFormat == "12" && !r) throw "Invalid Time";
        this.pm = r === "PM" || r === "pm";
        let o = this.parseTime(t);
        e.setHours(o.hour), e.setMinutes(o.minute), e.setSeconds(o.second);
      }
      isValidDate(e) {
        return tn.isDate(e) && tn.isNotEmpty(e);
      }
      updateUI() {
        let e = this.value;
        Array.isArray(e) && (e = e[1] || e[0]);
        let t =
          this.defaultDate && this.isValidDate(this.defaultDate) && !this.value
            ? this.defaultDate
            : e && this.isValidDate(e)
            ? e
            : new Date();
        (this.currentMonth = t.getMonth()),
          (this.currentYear = t.getFullYear()),
          this.createMonths(this.currentMonth, this.currentYear),
          (this.showTime || this.timeOnly) &&
            (this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds()));
      }
      showOverlay() {
        this.overlayVisible ||
          (this.updateUI(),
          this.touchUI || (this.preventFocus = !0),
          (this.overlayVisible = !0));
      }
      hideOverlay() {
        this.inputfieldViewChild?.nativeElement.focus(),
          (this.overlayVisible = !1),
          this.clearTimePickerTimer(),
          this.touchUI && this.disableModality(),
          this.cd.markForCheck();
      }
      toggle() {
        this.inline ||
          (this.overlayVisible
            ? this.hideOverlay()
            : (this.showOverlay(),
              this.inputfieldViewChild?.nativeElement.focus()));
      }
      onOverlayAnimationStart(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              ((this.overlay = e.element),
              this.overlay?.setAttribute(this.attributeSelector, ""),
              this.appendOverlay(),
              this.updateFocus(),
              this.autoZIndex &&
                (this.touchUI
                  ? bl.set(
                      "modal",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.modal
                    )
                  : bl.set(
                      "overlay",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.overlay
                    )),
              this.alignOverlay(),
              this.onShow.emit(e));
            break;
          case "void":
            this.onOverlayHide(), this.onClose.emit(e);
            break;
        }
      }
      onOverlayAnimationDone(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              (this.bindDocumentClickListener(),
              this.bindDocumentResizeListener(),
              this.bindScrollListener());
            break;
          case "void":
            this.autoZIndex && bl.clear(e.element);
            break;
        }
      }
      appendOverlay() {
        this.appendTo &&
          (this.appendTo === "body"
            ? this.document.body.appendChild(this.overlay)
            : me.appendChild(this.overlay, this.appendTo));
      }
      restoreOverlayAppend() {
        this.overlay &&
          this.appendTo &&
          this.el.nativeElement.appendChild(this.overlay);
      }
      alignOverlay() {
        this.touchUI
          ? this.enableModality(this.overlay)
          : this.overlay &&
            (this.appendTo
              ? (this.view === "date"
                  ? (this.overlay.style.width ||
                      (this.overlay.style.width =
                        me.getOuterWidth(this.overlay) + "px"),
                    this.overlay.style.minWidth ||
                      (this.overlay.style.minWidth =
                        me.getOuterWidth(
                          this.inputfieldViewChild?.nativeElement
                        ) + "px"))
                  : this.overlay.style.width ||
                    (this.overlay.style.width =
                      me.getOuterWidth(
                        this.inputfieldViewChild?.nativeElement
                      ) + "px"),
                me.absolutePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ))
              : me.relativePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ));
      }
      enableModality(e) {
        !this.mask &&
          this.touchUI &&
          ((this.mask = this.renderer.createElement("div")),
          this.renderer.setStyle(
            this.mask,
            "zIndex",
            String(parseInt(e.style.zIndex) - 1)
          ),
          me.addMultipleClasses(
            this.mask,
            "p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter"
          ),
          (this.maskClickListener = this.renderer.listen(
            this.mask,
            "click",
            (r) => {
              this.disableModality(), (this.overlayVisible = !1);
            }
          )),
          this.renderer.appendChild(this.document.body, this.mask),
          me.blockBodyScroll());
      }
      disableModality() {
        this.mask &&
          (me.addClass(this.mask, "p-component-overlay-leave"),
          this.animationEndListener ||
            (this.animationEndListener = this.renderer.listen(
              this.mask,
              "animationend",
              this.destroyMask.bind(this)
            )));
      }
      destroyMask() {
        if (!this.mask) return;
        this.renderer.removeChild(this.document.body, this.mask);
        let e = this.document.body.children,
          t;
        for (let r = 0; r < e.length; r++) {
          let o = e[r];
          if (me.hasClass(o, "p-datepicker-mask-scrollblocker")) {
            t = !0;
            break;
          }
        }
        t || me.unblockBodyScroll(),
          this.unbindAnimationEndListener(),
          this.unbindMaskClickListener(),
          (this.mask = null);
      }
      unbindMaskClickListener() {
        this.maskClickListener &&
          (this.maskClickListener(), (this.maskClickListener = null));
      }
      unbindAnimationEndListener() {
        this.animationEndListener &&
          this.mask &&
          (this.animationEndListener(), (this.animationEndListener = null));
      }
      writeValue(e) {
        if (((this.value = e), this.value && typeof this.value == "string"))
          try {
            this.value = this.parseValueFromString(this.value);
          } catch {
            this.keepInvalid && (this.value = e);
          }
        this.updateInputfield(), this.updateUI(), this.cd.markForCheck();
      }
      registerOnChange(e) {
        this.onModelChange = e;
      }
      registerOnTouched(e) {
        this.onModelTouched = e;
      }
      setDisabledState(e) {
        (this.disabled = e), this.cd.markForCheck();
      }
      getDateFormat() {
        return this.dateFormat || this.getTranslation("dateFormat");
      }
      getFirstDateOfWeek() {
        return (
          this._firstDayOfWeek || this.getTranslation(kn.FIRST_DAY_OF_WEEK)
        );
      }
      formatDate(e, t) {
        if (!e) return "";
        let r,
          o = (v) => {
            let D = r + 1 < t.length && t.charAt(r + 1) === v;
            return D && r++, D;
          },
          a = (v, D, T) => {
            let M = "" + D;
            if (o(v)) for (; M.length < T; ) M = "0" + M;
            return M;
          },
          l = (v, D, T, M) => (o(v) ? M[D] : T[D]),
          u = "",
          f = !1;
        if (e)
          for (r = 0; r < t.length; r++)
            if (f)
              t.charAt(r) === "'" && !o("'") ? (f = !1) : (u += t.charAt(r));
            else
              switch (t.charAt(r)) {
                case "d":
                  u += a("d", e.getDate(), 2);
                  break;
                case "D":
                  u += l(
                    "D",
                    e.getDay(),
                    this.getTranslation(kn.DAY_NAMES_SHORT),
                    this.getTranslation(kn.DAY_NAMES)
                  );
                  break;
                case "o":
                  u += a(
                    "o",
                    Math.round(
                      (new Date(
                        e.getFullYear(),
                        e.getMonth(),
                        e.getDate()
                      ).getTime() -
                        new Date(e.getFullYear(), 0, 0).getTime()) /
                        864e5
                    ),
                    3
                  );
                  break;
                case "m":
                  u += a("m", e.getMonth() + 1, 2);
                  break;
                case "M":
                  u += l(
                    "M",
                    e.getMonth(),
                    this.getTranslation(kn.MONTH_NAMES_SHORT),
                    this.getTranslation(kn.MONTH_NAMES)
                  );
                  break;
                case "y":
                  u += o("y")
                    ? e.getFullYear()
                    : (e.getFullYear() % 100 < 10 ? "0" : "") +
                      (e.getFullYear() % 100);
                  break;
                case "@":
                  u += e.getTime();
                  break;
                case "!":
                  u += e.getTime() * 1e4 + this.ticksTo1970;
                  break;
                case "'":
                  o("'") ? (u += "'") : (f = !0);
                  break;
                default:
                  u += t.charAt(r);
              }
        return u;
      }
      formatTime(e) {
        if (!e) return "";
        let t = "",
          r = e.getHours(),
          o = e.getMinutes(),
          a = e.getSeconds();
        return (
          this.hourFormat == "12" && r > 11 && r != 12 && (r -= 12),
          this.hourFormat == "12"
            ? (t += r === 0 ? 12 : r < 10 ? "0" + r : r)
            : (t += r < 10 ? "0" + r : r),
          (t += ":"),
          (t += o < 10 ? "0" + o : o),
          this.showSeconds && ((t += ":"), (t += a < 10 ? "0" + a : a)),
          this.hourFormat == "12" && (t += e.getHours() > 11 ? " PM" : " AM"),
          t
        );
      }
      parseTime(e) {
        let t = e.split(":"),
          r = this.showSeconds ? 3 : 2;
        if (t.length !== r) throw "Invalid time";
        let o = parseInt(t[0]),
          a = parseInt(t[1]),
          l = this.showSeconds ? parseInt(t[2]) : null;
        if (
          isNaN(o) ||
          isNaN(a) ||
          o > 23 ||
          a > 59 ||
          (this.hourFormat == "12" && o > 12) ||
          (this.showSeconds && (isNaN(l) || l > 59))
        )
          throw "Invalid time";
        return (
          this.hourFormat == "12" &&
            (o !== 12 && this.pm
              ? (o += 12)
              : !this.pm && o === 12 && (o -= 12)),
          { hour: o, minute: a, second: l }
        );
      }
      parseDate(e, t) {
        if (t == null || e == null) throw "Invalid arguments";
        if (((e = typeof e == "object" ? e.toString() : e + ""), e === ""))
          return null;
        let r,
          o,
          a,
          l = 0,
          u =
            typeof this.shortYearCutoff != "string"
              ? this.shortYearCutoff
              : (new Date().getFullYear() % 100) +
                parseInt(this.shortYearCutoff, 10),
          f = -1,
          v = -1,
          D = -1,
          T = -1,
          M = !1,
          k,
          V = (se) => {
            let be = r + 1 < t.length && t.charAt(r + 1) === se;
            return be && r++, be;
          },
          A = (se) => {
            let be = V(se),
              Ee =
                se === "@"
                  ? 14
                  : se === "!"
                  ? 20
                  : se === "y" && be
                  ? 4
                  : se === "o"
                  ? 3
                  : 2,
              _ = se === "y" ? Ee : 1,
              He = new RegExp("^\\d{" + _ + "," + Ee + "}"),
              De = e.substring(l).match(He);
            if (!De) throw "Missing number at position " + l;
            return (l += De[0].length), parseInt(De[0], 10);
          },
          E = (se, be, Ee) => {
            let _ = -1,
              He = V(se) ? Ee : be,
              De = [];
            for (let We = 0; We < He.length; We++) De.push([We, He[We]]);
            De.sort((We, bt) => -(We[1].length - bt[1].length));
            for (let We = 0; We < De.length; We++) {
              let bt = De[We][1];
              if (e.substr(l, bt.length).toLowerCase() === bt.toLowerCase()) {
                (_ = De[We][0]), (l += bt.length);
                break;
              }
            }
            if (_ !== -1) return _ + 1;
            throw "Unknown name at position " + l;
          },
          X = () => {
            if (e.charAt(l) !== t.charAt(r))
              throw "Unexpected literal at position " + l;
            l++;
          };
        for (this.view === "month" && (D = 1), r = 0; r < t.length; r++)
          if (M) t.charAt(r) === "'" && !V("'") ? (M = !1) : X();
          else
            switch (t.charAt(r)) {
              case "d":
                D = A("d");
                break;
              case "D":
                E(
                  "D",
                  this.getTranslation(kn.DAY_NAMES_SHORT),
                  this.getTranslation(kn.DAY_NAMES)
                );
                break;
              case "o":
                T = A("o");
                break;
              case "m":
                v = A("m");
                break;
              case "M":
                v = E(
                  "M",
                  this.getTranslation(kn.MONTH_NAMES_SHORT),
                  this.getTranslation(kn.MONTH_NAMES)
                );
                break;
              case "y":
                f = A("y");
                break;
              case "@":
                (k = new Date(A("@"))),
                  (f = k.getFullYear()),
                  (v = k.getMonth() + 1),
                  (D = k.getDate());
                break;
              case "!":
                (k = new Date((A("!") - this.ticksTo1970) / 1e4)),
                  (f = k.getFullYear()),
                  (v = k.getMonth() + 1),
                  (D = k.getDate());
                break;
              case "'":
                V("'") ? X() : (M = !0);
                break;
              default:
                X();
            }
        if (l < e.length && ((a = e.substr(l)), !/^\s+/.test(a)))
          throw "Extra/unparsed characters found in date: " + a;
        if (
          (f === -1
            ? (f = new Date().getFullYear())
            : f < 100 &&
              (f +=
                new Date().getFullYear() -
                (new Date().getFullYear() % 100) +
                (f <= u ? 0 : -100)),
          T > -1)
        ) {
          (v = 1), (D = T);
          do {
            if (((o = this.getDaysCountInMonth(f, v - 1)), D <= o)) break;
            v++, (D -= o);
          } while (!0);
        }
        if (
          (this.view === "year" &&
            ((v = v === -1 ? 1 : v), (D = D === -1 ? 1 : D)),
          (k = this.daylightSavingAdjust(new Date(f, v - 1, D))),
          k.getFullYear() !== f || k.getMonth() + 1 !== v || k.getDate() !== D)
        )
          throw "Invalid date";
        return k;
      }
      daylightSavingAdjust(e) {
        return e
          ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
          : null;
      }
      updateFilledState() {
        this.filled = this.inputFieldValue && this.inputFieldValue != "";
      }
      isValidDateForTimeConstraints(e) {
        return this.keepInvalid
          ? !0
          : (!this.minDate || e >= this.minDate) &&
              (!this.maxDate || e <= this.maxDate);
      }
      onTodayButtonClick(e) {
        let t = new Date(),
          r = {
            day: t.getDate(),
            month: t.getMonth(),
            year: t.getFullYear(),
            otherMonth:
              t.getMonth() !== this.currentMonth ||
              t.getFullYear() !== this.currentYear,
            today: !0,
            selectable: !0,
          };
        this.createMonths(t.getMonth(), t.getFullYear()),
          this.onDateSelect(e, r),
          this.onTodayClick.emit(t);
      }
      onClearButtonClick(e) {
        this.updateModel(null),
          this.updateInputfield(),
          this.hideOverlay(),
          this.onClearClick.emit(e);
      }
      createResponsiveStyle() {
        if (this.numberOfMonths > 1 && this.responsiveOptions) {
          this.responsiveStyleElement ||
            ((this.responsiveStyleElement =
              this.renderer.createElement("style")),
            (this.responsiveStyleElement.type = "text/css"),
            me.setAttribute(
              this.responsiveStyleElement,
              "nonce",
              this.config?.csp()?.nonce
            ),
            this.renderer.appendChild(
              this.document.body,
              this.responsiveStyleElement
            ));
          let e = "";
          if (this.responsiveOptions) {
            let t = [...this.responsiveOptions]
              .filter((r) => !!(r.breakpoint && r.numMonths))
              .sort(
                (r, o) =>
                  -1 *
                  r.breakpoint.localeCompare(o.breakpoint, void 0, {
                    numeric: !0,
                  })
              );
            for (let r = 0; r < t.length; r++) {
              let { breakpoint: o, numMonths: a } = t[r],
                l = `
                        .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${a}) .p-datepicker-next {
                            display: inline-flex !important;
                        }
                    `;
              for (let u = a; u < this.numberOfMonths; u++)
                l += `
                            .p-datepicker[${
                              this.attributeSelector
                            }] .p-datepicker-group:nth-child(${u + 1}) {
                                display: none !important;
                            }
                        `;
              e += `
                        @media screen and (max-width: ${o}) {
                            ${l}
                        }
                    `;
            }
          }
          this.responsiveStyleElement.innerHTML = e;
        }
      }
      destroyResponsiveStyleElement() {
        this.responsiveStyleElement &&
          (this.responsiveStyleElement.remove(),
          (this.responsiveStyleElement = null));
      }
      bindDocumentClickListener() {
        this.documentClickListener ||
          this.zone.runOutsideAngular(() => {
            let e = this.el
              ? this.el.nativeElement.ownerDocument
              : this.document;
            this.documentClickListener = this.renderer.listen(
              e,
              "mousedown",
              (t) => {
                this.isOutsideClicked(t) &&
                  this.overlayVisible &&
                  this.zone.run(() => {
                    this.hideOverlay(),
                      this.onClickOutside.emit(t),
                      this.cd.markForCheck();
                  });
              }
            );
          });
      }
      unbindDocumentClickListener() {
        this.documentClickListener &&
          (this.documentClickListener(), (this.documentClickListener = null));
      }
      bindDocumentResizeListener() {
        !this.documentResizeListener &&
          !this.touchUI &&
          (this.documentResizeListener = this.renderer.listen(
            this.window,
            "resize",
            this.onWindowResize.bind(this)
          ));
      }
      unbindDocumentResizeListener() {
        this.documentResizeListener &&
          (this.documentResizeListener(), (this.documentResizeListener = null));
      }
      bindScrollListener() {
        this.scrollHandler ||
          (this.scrollHandler = new Qd(
            this.containerViewChild?.nativeElement,
            () => {
              this.overlayVisible && this.hideOverlay();
            }
          )),
          this.scrollHandler.bindScrollListener();
      }
      unbindScrollListener() {
        this.scrollHandler && this.scrollHandler.unbindScrollListener();
      }
      isOutsideClicked(e) {
        return !(
          this.el.nativeElement.isSameNode(e.target) ||
          this.isNavIconClicked(e) ||
          this.el.nativeElement.contains(e.target) ||
          (this.overlay && this.overlay.contains(e.target))
        );
      }
      isNavIconClicked(e) {
        return (
          me.hasClass(e.target, "p-datepicker-prev") ||
          me.hasClass(e.target, "p-datepicker-prev-icon") ||
          me.hasClass(e.target, "p-datepicker-next") ||
          me.hasClass(e.target, "p-datepicker-next-icon")
        );
      }
      onWindowResize() {
        this.overlayVisible && !me.isTouchDevice() && this.hideOverlay();
      }
      onOverlayHide() {
        (this.currentView = this.view),
          this.mask && this.destroyMask(),
          this.unbindDocumentClickListener(),
          this.unbindDocumentResizeListener(),
          this.unbindScrollListener(),
          (this.overlay = null);
      }
      ngOnDestroy() {
        this.scrollHandler &&
          (this.scrollHandler.destroy(), (this.scrollHandler = null)),
          this.translationSubscription &&
            this.translationSubscription.unsubscribe(),
          this.overlay && this.autoZIndex && bl.clear(this.overlay),
          this.destroyResponsiveStyleElement(),
          this.clearTimePickerTimer(),
          this.restoreOverlayAppend(),
          this.onOverlayHide();
      }
      static ɵfac = function (t) {
        return new (t || n)(H(ke), H(Fe), H(hi), H(Ke), H(Te), H(Kd), H(ry));
      };
      static ɵcmp = ae({
        type: n,
        selectors: [["p-calendar"]],
        contentQueries: function (t, r, o) {
          if ((t & 1 && ln(o, vl, 4), t & 2)) {
            let a;
            ot((a = at())) && (r.templates = a);
          }
        },
        viewQuery: function (t, r) {
          if ((t & 1 && (yt(uP, 5), yt(hP, 5), yt(pP, 5)), t & 2)) {
            let o;
            ot((o = at())) && (r.containerViewChild = o.first),
              ot((o = at())) && (r.inputfieldViewChild = o.first),
              ot((o = at())) && (r.content = o.first);
          }
        },
        hostAttrs: [1, "p-element", "p-inputwrapper"],
        hostVars: 6,
        hostBindings: function (t, r) {
          t & 2 &&
            ne("p-inputwrapper-filled", r.filled)(
              "p-inputwrapper-focus",
              r.focus
            )("p-calendar-clearable", r.showClear && !r.disabled);
        },
        inputs: {
          iconDisplay: "iconDisplay",
          style: "style",
          styleClass: "styleClass",
          inputStyle: "inputStyle",
          inputId: "inputId",
          name: "name",
          inputStyleClass: "inputStyleClass",
          placeholder: "placeholder",
          ariaLabelledBy: "ariaLabelledBy",
          ariaLabel: "ariaLabel",
          iconAriaLabel: "iconAriaLabel",
          disabled: [2, "disabled", "disabled", Se],
          dateFormat: "dateFormat",
          multipleSeparator: "multipleSeparator",
          rangeSeparator: "rangeSeparator",
          inline: [2, "inline", "inline", Se],
          showOtherMonths: [2, "showOtherMonths", "showOtherMonths", Se],
          selectOtherMonths: [2, "selectOtherMonths", "selectOtherMonths", Se],
          showIcon: [2, "showIcon", "showIcon", Se],
          icon: "icon",
          appendTo: "appendTo",
          readonlyInput: [2, "readonlyInput", "readonlyInput", Se],
          shortYearCutoff: "shortYearCutoff",
          monthNavigator: [2, "monthNavigator", "monthNavigator", Se],
          yearNavigator: [2, "yearNavigator", "yearNavigator", Se],
          hourFormat: "hourFormat",
          timeOnly: [2, "timeOnly", "timeOnly", Se],
          stepYearPicker: [2, "stepYearPicker", "stepYearPicker", cn],
          stepHour: [2, "stepHour", "stepHour", cn],
          stepMinute: [2, "stepMinute", "stepMinute", cn],
          stepSecond: [2, "stepSecond", "stepSecond", cn],
          showSeconds: [2, "showSeconds", "showSeconds", Se],
          required: [2, "required", "required", Se],
          showOnFocus: [2, "showOnFocus", "showOnFocus", Se],
          showWeek: [2, "showWeek", "showWeek", Se],
          startWeekFromFirstDayOfYear: "startWeekFromFirstDayOfYear",
          showClear: [2, "showClear", "showClear", Se],
          dataType: "dataType",
          selectionMode: "selectionMode",
          maxDateCount: [2, "maxDateCount", "maxDateCount", cn],
          showButtonBar: [2, "showButtonBar", "showButtonBar", Se],
          todayButtonStyleClass: "todayButtonStyleClass",
          clearButtonStyleClass: "clearButtonStyleClass",
          autofocus: [2, "autofocus", "autofocus", Se],
          autoZIndex: [2, "autoZIndex", "autoZIndex", Se],
          baseZIndex: [2, "baseZIndex", "baseZIndex", cn],
          panelStyleClass: "panelStyleClass",
          panelStyle: "panelStyle",
          keepInvalid: [2, "keepInvalid", "keepInvalid", Se],
          hideOnDateTimeSelect: [
            2,
            "hideOnDateTimeSelect",
            "hideOnDateTimeSelect",
            Se,
          ],
          touchUI: [2, "touchUI", "touchUI", Se],
          timeSeparator: "timeSeparator",
          focusTrap: [2, "focusTrap", "focusTrap", Se],
          showTransitionOptions: "showTransitionOptions",
          hideTransitionOptions: "hideTransitionOptions",
          tabindex: [2, "tabindex", "tabindex", cn],
          variant: "variant",
          minDate: "minDate",
          maxDate: "maxDate",
          disabledDates: "disabledDates",
          disabledDays: "disabledDays",
          yearRange: "yearRange",
          showTime: "showTime",
          responsiveOptions: "responsiveOptions",
          numberOfMonths: "numberOfMonths",
          firstDayOfWeek: "firstDayOfWeek",
          locale: "locale",
          view: "view",
          defaultDate: "defaultDate",
        },
        outputs: {
          onFocus: "onFocus",
          onBlur: "onBlur",
          onClose: "onClose",
          onSelect: "onSelect",
          onClear: "onClear",
          onInput: "onInput",
          onTodayClick: "onTodayClick",
          onClearClick: "onClearClick",
          onMonthChange: "onMonthChange",
          onYearChange: "onYearChange",
          onClickOutside: "onClickOutside",
          onShow: "onShow",
        },
        features: [Vt([tA]), kt],
        ngContentSelectors: fP,
        decls: 4,
        vars: 12,
        consts: [
          ["container", ""],
          ["inputfield", ""],
          ["contentWrapper", ""],
          [3, "ngClass", "ngStyle"],
          [3, "ngIf"],
          [3, "class", "ngStyle", "ngClass", "click", 4, "ngIf"],
          [
            "type",
            "text",
            "role",
            "combobox",
            "aria-autocomplete",
            "none",
            "aria-haspopup",
            "dialog",
            "autocomplete",
            "off",
            "pAutoFocus",
            "",
            3,
            "focus",
            "keydown",
            "click",
            "blur",
            "input",
            "value",
            "readonly",
            "ngStyle",
            "placeholder",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "class",
            "p-datepicker-trigger p-button-icon-only",
            "tabindex",
            "0",
            3,
            "disabled",
            "click",
            4,
            "ngIf",
          ],
          [3, "styleClass", "click", 4, "ngIf"],
          ["class", "p-calendar-clear-icon", 3, "click", 4, "ngIf"],
          [3, "click", "styleClass"],
          [1, "p-calendar-clear-icon", 3, "click"],
          [4, "ngTemplateOutlet"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "tabindex",
            "0",
            1,
            "p-datepicker-trigger",
            "p-button-icon-only",
            3,
            "click",
            "disabled",
          ],
          [3, "ngClass", 4, "ngIf"],
          [3, "ngClass"],
          [3, "ngClass", "click", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "click", "ngClass"],
          [3, "click", "ngStyle", "ngClass"],
          ["class", "p-timepicker", 4, "ngIf"],
          ["class", "p-datepicker-buttonbar", 4, "ngIf"],
          [1, "p-datepicker-group-container"],
          ["class", "p-datepicker-group", 4, "ngFor", "ngForOf"],
          ["class", "p-monthpicker", 4, "ngIf"],
          ["class", "p-yearpicker", 4, "ngIf"],
          [1, "p-datepicker-group"],
          [1, "p-datepicker-header"],
          [
            "class",
            "p-datepicker-prev p-link",
            "type",
            "button",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            4,
            "ngIf",
          ],
          [1, "p-datepicker-title"],
          [
            "type",
            "button",
            "class",
            "p-datepicker-month p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          [
            "type",
            "button",
            "class",
            "p-datepicker-year p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          ["class", "p-datepicker-decade", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-next",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          [3, "styleClass", 4, "ngIf"],
          ["class", "p-datepicker-next-icon", 4, "ngIf"],
          ["class", "p-datepicker-calendar-container", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-prev",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          ["class", "p-datepicker-prev-icon", 4, "ngIf"],
          [3, "styleClass"],
          [1, "p-datepicker-prev-icon"],
          [
            "type",
            "button",
            1,
            "p-datepicker-month",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [
            "type",
            "button",
            1,
            "p-datepicker-year",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [1, "p-datepicker-decade"],
          [1, "p-datepicker-next-icon"],
          [1, "p-datepicker-calendar-container"],
          ["role", "grid", 1, "p-datepicker-calendar"],
          ["class", "p-datepicker-weekheader p-disabled", 4, "ngIf"],
          ["scope", "col", 4, "ngFor", "ngForOf"],
          [4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weekheader", "p-disabled"],
          ["scope", "col"],
          ["class", "p-datepicker-weeknumber", 4, "ngIf"],
          [3, "ngClass", 4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weeknumber"],
          [1, "p-disabled"],
          [
            "draggable",
            "false",
            "pRipple",
            "",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          ["class", "p-hidden-accessible", "aria-live", "polite", 4, "ngIf"],
          ["aria-live", "polite", 1, "p-hidden-accessible"],
          [1, "p-monthpicker"],
          [
            "class",
            "p-monthpicker-month",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-monthpicker-month",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-yearpicker"],
          [
            "class",
            "p-yearpicker-year",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-yearpicker-year",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-timepicker"],
          [1, "p-hour-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "keydown.enter",
            "keydown.space",
            "mousedown",
            "mouseup",
            "keyup.enter",
            "keyup.space",
            "mouseleave",
          ],
          [1, "p-separator"],
          [1, "p-minute-picker"],
          ["class", "p-separator", 4, "ngIf"],
          ["class", "p-second-picker", 4, "ngIf"],
          ["class", "p-ampm-picker", 4, "ngIf"],
          [1, "p-second-picker"],
          [1, "p-ampm-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "click",
            "keydown.enter",
          ],
          [1, "p-datepicker-buttonbar"],
          [
            "type",
            "button",
            "pButton",
            "",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            "label",
            "ngClass",
          ],
        ],
        template: function (t, r) {
          t & 1 &&
            (Xt(mP),
            c(0, "span", 3, 0),
            R(2, VP, 5, 22, "ng-template", 4)(3, eA, 9, 32, "div", 5),
            d()),
            t & 2 &&
              (Be(r.styleClass),
              y(
                "ngClass",
                oh(
                  6,
                  gP,
                  r.showIcon && r.iconDisplay === "input",
                  r.showIcon && r.iconDisplay === "button",
                  r.timeOnly,
                  r.disabled,
                  r.focus || r.overlayVisible
                )
              )("ngStyle", r.style),
              m(2),
              y("ngIf", !r.inline),
              m(),
              y("ngIf", r.inline || r.overlayVisible));
        },
        dependencies: () => [
          It,
          At,
          Xe,
          Zo,
          Pr,
          dy,
          Zd,
          vf,
          yl,
          yf,
          xf,
          Cf,
          wf,
          Xd,
        ],
        styles: [
          `@layer primeng{.p-calendar{position:relative;display:inline-flex;max-width:100%}.p-calendar .p-inputtext{flex:1 1 auto;width:1%;text-overflow:ellipsis}.p-calendar-w-btn .p-inputtext{border-top-right-radius:0;border-bottom-right-radius:0}.p-calendar-w-btn .p-datepicker-trigger{border-top-left-radius:0;border-bottom-left-radius:0}.p-fluid .p-calendar{display:flex}.p-fluid .p-calendar .p-inputtext{width:1%}.p-calendar .p-datepicker{min-width:100%}.p-datepicker{width:auto;position:absolute;top:0;left:0}.p-datepicker-inline{display:inline-block;position:static;overflow-x:auto}.p-datepicker-header{display:flex;align-items:center;justify-content:space-between}.p-datepicker-header .p-datepicker-title{margin:0 auto}.p-datepicker-prev,.p-datepicker-next{cursor:pointer;display:inline-flex;justify-content:center;align-items:center;overflow:hidden;position:relative}.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group{flex:1 1 auto}.p-datepicker-multiple-month .p-datepicker-group-container{display:flex}.p-datepicker table{width:100%;border-collapse:collapse}.p-datepicker td>span{display:flex;justify-content:center;align-items:center;cursor:pointer;margin:0 auto;overflow:hidden;position:relative}.p-monthpicker-month{width:33.3%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-datepicker-buttonbar{display:flex;justify-content:space-between;align-items:center}.p-timepicker{display:flex;justify-content:center;align-items:center}.p-timepicker button{display:flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-timepicker>div{display:flex;align-items:center;flex-direction:column}.p-datepicker-touch-ui,.p-calendar .p-datepicker-touch-ui{position:fixed;top:50%;left:50%;min-width:80vw;transform:translate(-50%,-50%)}.p-yearpicker-year{width:50%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-calendar-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-datepicker-icon{pointer-events:none}.p-calendar-clearable{position:relative}}
`,
        ],
        encapsulation: 2,
        data: {
          animation: [
            so("overlayAnimation", [
              ur(
                "visibleTouchUI",
                li({ transform: "translate(-50%,-50%)", opacity: 1 })
              ),
              Yi("void => visible", [
                li({ opacity: 0, transform: "scaleY(0.8)" }),
                Gi(
                  "{{showTransitionParams}}",
                  li({ opacity: 1, transform: "*" })
                ),
              ]),
              Yi("visible => void", [
                Gi("{{hideTransitionParams}}", li({ opacity: 0 })),
              ]),
              Yi("void => visibleTouchUI", [
                li({
                  opacity: 0,
                  transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                }),
                Gi("{{showTransitionParams}}"),
              ]),
              Yi("visibleTouchUI => void", [
                Gi(
                  "{{hideTransitionParams}}",
                  li({
                    opacity: 0,
                    transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                  })
                ),
              ]),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return n;
  })(),
  my = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({
        imports: [Ae, bf, On, ly, vf, yl, yf, xf, Cf, wf, ay, bf, On],
      });
    }
    return n;
  })();
var fy = (() => {
  class n extends Ei {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + Ia() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = ae({
      type: n,
      selectors: [["HomeIcon"]],
      standalone: !0,
      features: [Ze, ce],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "fill-rule",
          "evenodd",
          "clip-rule",
          "evenodd",
          "d",
          "M13.4175 6.79971C13.2874 6.80029 13.1608 6.75807 13.057 6.67955L12.4162 6.19913V12.6073C12.4141 12.7659 12.3502 12.9176 12.2379 13.0298C12.1257 13.142 11.9741 13.206 11.8154 13.208H8.61206C8.61179 13.208 8.61151 13.208 8.61123 13.2081C8.61095 13.208 8.61068 13.208 8.6104 13.208H5.41076C5.40952 13.208 5.40829 13.2081 5.40705 13.2081C5.40581 13.2081 5.40458 13.208 5.40334 13.208H2.20287C2.04418 13.206 1.89257 13.142 1.78035 13.0298C1.66813 12.9176 1.60416 12.7659 1.60209 12.6073V6.19914L0.961256 6.67955C0.833786 6.77515 0.673559 6.8162 0.515823 6.79367C0.358086 6.77114 0.215762 6.68686 0.120159 6.55939C0.0245566 6.43192 -0.0164931 6.2717 0.00604063 6.11396C0.0285744 5.95622 0.112846 5.8139 0.240316 5.7183L1.83796 4.52007L1.84689 4.51337L6.64868 0.912027C6.75267 0.834032 6.87915 0.79187 7.00915 0.79187C7.13914 0.79187 7.26562 0.834032 7.36962 0.912027L12.1719 4.51372L12.1799 4.51971L13.778 5.7183C13.8943 5.81278 13.9711 5.94732 13.9934 6.09553C14.0156 6.24373 13.9816 6.39489 13.8981 6.51934C13.8471 6.60184 13.7766 6.67054 13.6928 6.71942C13.609 6.76831 13.5144 6.79587 13.4175 6.79971ZM6.00783 12.0065H8.01045V7.60074H6.00783V12.0065ZM9.21201 12.0065V6.99995C9.20994 6.84126 9.14598 6.68965 9.03375 6.57743C8.92153 6.46521 8.76992 6.40124 8.61123 6.39917H5.40705C5.24836 6.40124 5.09675 6.46521 4.98453 6.57743C4.8723 6.68965 4.80834 6.84126 4.80627 6.99995V12.0065H2.80366V5.29836L7.00915 2.14564L11.2146 5.29836V12.0065H9.21201Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (t, r) {
        t & 1 &&
          (ft(),
          c(0, "svg", 0)(1, "g"),
          z(2, "path", 1),
          d(),
          c(3, "defs")(4, "clipPath", 2),
          z(5, "rect", 3),
          d()()()),
          t & 2 &&
            (Be(r.getClassNames()),
            le("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ),
            m(),
            le("clip-path", r.pathId),
            m(3),
            y("id", r.pathId));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var xl = (() => {
  class n {
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = ye({ type: n });
    static ɵinj = ve({ imports: [Ae] });
  }
  return n;
})();
var gy = (() => {
  class n {
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = ye({ type: n });
    static ɵinj = ve({ imports: [Ae, Vi, xl, yl, fy, On, Vi, xl, On] });
  }
  return n;
})();
var Po = (n) => ({ "is-invalid": n });
function nA(n, i) {
  n & 1 &&
    (c(0, "tr")(1, "td", 53)(2, "p"), h(3, "No Accounts Found"), d()()());
}
function rA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "tr")(1, "td"),
      h(2),
      d(),
      c(3, "td"),
      h(4),
      d(),
      c(5, "td"),
      h(6),
      d(),
      c(7, "td"),
      h(8),
      d(),
      c(9, "td"),
      h(10),
      d(),
      c(11, "td", 55)(12, "a", 56),
      N("click", function () {
        let r = P(e).$implicit,
          o = x(2);
        return I(o.onEdit(r.account_id));
      }),
      z(13, "i", 57),
      d(),
      c(14, "a", 58),
      N("click", function () {
        let r = P(e).$implicit,
          o = x(2);
        return I(o.selectCustomerForDeletion(r));
      }),
      z(15, "i", 59),
      d(),
      c(16, "div", 60)(17, "div", 61)(18, "div", 23)(19, "div", 62)(
        20,
        "h5",
        63
      ),
      h(21, "Delete User"),
      d()(),
      c(22, "div", 64),
      h(23, "HEY ARE YOU SURE TO DELETE..!"),
      d(),
      c(24, "div", 50)(25, "button", 65),
      h(26, " Cancel "),
      d(),
      c(27, "button", 66),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.closeModal());
      })("click", function () {
        P(e);
        let r = x(2);
        return I(r.deleteCustomerId());
      }),
      h(28, " Delete "),
      d()()()()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index;
    m(2),
      B(t + 1),
      m(2),
      B(e.fname),
      m(2),
      B(e.lname),
      m(2),
      B(e.email),
      m(2),
      B(e.phone);
  }
}
function oA(n, i) {
  if ((n & 1 && R(0, rA, 29, 5, "tr", 54), n & 2)) {
    let e = x();
    y("ngForOf", e.customerList());
  }
}
function aA(n, i) {
  n & 1 &&
    (c(0, "div", 67)(1, "span"), h(2, "Account Type is required."), d()());
}
function sA(n, i) {
  n & 1 && (c(0, "span"), h(1, "First Name is required."), d());
}
function lA(n, i) {
  n & 1 &&
    (c(0, "span"), h(1, "First Name must be at least 3 characters long."), d());
}
function cA(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 67),
      R(1, sA, 2, 0, "span", 68)(2, lA, 2, 0, "span", 68),
      d()),
    n & 2)
  ) {
    let e,
      t,
      r = x();
    m(),
      y(
        "ngIf",
        (e = r.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = r.useForm.get("fname")) == null || t.errors == null
          ? null
          : t.errors.minlength
      );
  }
}
function dA(n, i) {
  n & 1 && (c(0, "span"), h(1, "Last Name is required."), d());
}
function uA(n, i) {
  n & 1 &&
    (c(0, "span"), h(1, "Last Name must be at least 3 characters long."), d());
}
function hA(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 67),
      R(1, dA, 2, 0, "span", 68)(2, uA, 2, 0, "span", 68),
      d()),
    n & 2)
  ) {
    let e,
      t,
      r = x();
    m(),
      y(
        "ngIf",
        (e = r.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = r.useForm.get("lname")) == null || t.errors == null
          ? null
          : t.errors.minlength
      );
  }
}
function pA(n, i) {
  if ((n & 1 && (c(0, "option", 69), h(1), d()), n & 2)) {
    let e = i.$implicit;
    y("value", e.dealer_code), m(), ee(" ", e.dealer_code, " ");
  }
}
function mA(n, i) {
  if ((n & 1 && (c(0, "option", 69), h(1), d()), n & 2)) {
    let e = i.$implicit;
    y("value", e.dealer_code), m(), ee(" ", e.dealer_code, " ");
  }
}
function fA(n, i) {
  n & 1 && (c(0, "div", 67)(1, "span"), h(2, "Dealer is required."), d()());
}
function gA(n, i) {
  n & 1 && (c(0, "span"), h(1, "Email is required."), d());
}
function _A(n, i) {
  n & 1 && (c(0, "span"), h(1, "Please enter a valid email."), d());
}
function bA(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 67),
      R(1, gA, 2, 0, "span", 68)(2, _A, 2, 0, "span", 68),
      d()),
    n & 2)
  ) {
    let e,
      t,
      r = x();
    m(),
      y(
        "ngIf",
        (e = r.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = r.useForm.get("email")) == null || t.errors == null
          ? null
          : t.errors.email
      );
  }
}
function vA(n, i) {
  n & 1 && (c(0, "span"), h(1, "Phone is required."), d());
}
function yA(n, i) {
  n & 1 &&
    (c(0, "span"), h(1, "Phone must be at least 3 characters long."), d());
}
function xA(n, i) {
  n & 1 && (c(0, "span"), h(1, "Phone must contain only numbers."), d());
}
function CA(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 67),
      R(1, vA, 2, 0, "span", 68)(2, yA, 2, 0, "span", 68)(
        3,
        xA,
        2,
        0,
        "span",
        68
      ),
      d()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o = x();
    m(),
      y(
        "ngIf",
        (e = o.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = o.useForm.get("phone")) == null || t.errors == null
          ? null
          : t.errors.minlength
      ),
      m(),
      y(
        "ngIf",
        (r = o.useForm.get("phone")) == null || r.errors == null
          ? null
          : r.errors.pattern
      );
  }
}
function wA(n, i) {
  n & 1 && (c(0, "span"), h(1, "Mobile is required."), d());
}
function DA(n, i) {
  n & 1 &&
    (c(0, "span"), h(1, "Mobile must be at least 3 characters long."), d());
}
function SA(n, i) {
  n & 1 && (c(0, "span"), h(1, "Mobile must contain only numbers."), d());
}
function MA(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 67),
      R(1, wA, 2, 0, "span", 68)(2, DA, 2, 0, "span", 68)(
        3,
        SA,
        2,
        0,
        "span",
        68
      ),
      d()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o = x();
    m(),
      y(
        "ngIf",
        (e = o.useForm.get("mobile")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = o.useForm.get("mobile")) == null || t.errors == null
          ? null
          : t.errors.minlength
      ),
      m(),
      y(
        "ngIf",
        (r = o.useForm.get("mobile")) == null || r.errors == null
          ? null
          : r.errors.pattern
      );
  }
}
function TA(n, i) {
  if (n & 1) {
    let e = re();
    Ue(0),
      c(1, "button", 70),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.onUpdate());
      }),
      h(2, " Edit "),
      d(),
      ze();
  }
  if (n & 2) {
    let e = x();
    m(), y("disabled", !e.isCustomerNameChanged());
  }
}
function EA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 66),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.onSave());
      }),
      h(1, " save "),
      d();
  }
  if (n & 2) {
    let e = x();
    le("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
var Jd = class n {
  constructor(i, e) {
    this.modalService = i;
    this.cdRef = e;
    this.initializeForm();
  }
  totalCustomer = pe(0);
  customerList = pe([]);
  dealerList = pe([]);
  masterSrv = G(Qe);
  toastr = G(fi);
  previousEmail = "";
  useForm = new Rt({});
  customerObj = new _l();
  dealerObj = new xr();
  isEditMode = !1;
  previousValue = "";
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  ngOnInit() {
    this.initializeForm(),
      this.loadCustomers(),
      this.loadDealers(),
      this.getAllCustomer();
  }
  isModalVisible = !1;
  initializeForm() {
    this.useForm = new Rt({
      account_type: new nt("", [Re.required]),
      fname: new nt("", [Re.required, Re.minLength(3)]),
      lname: new nt("", [Re.required, Re.minLength(3)]),
      email: new nt("", [Re.required, Re.email]),
      phone: new nt("", [Re.required, Re.pattern(/^\d+$/)]),
      mobile: new nt("", [Re.required, Re.pattern(/^\d+$/)]),
      dealer_code: new nt("", [Re.required]),
    });
  }
  openModal(i) {
    (this.isEditMode = !1),
      console.log("hello openmodal", i),
      this.useForm.reset(),
      (this.isModalVisible = !0),
      i
        ? (console.log("\u{1F680} Customer Data:", i),
          (this.customerObj = W({}, i)),
          (this.previousValue = i.account_name || ""),
          this.useForm.patchValue({
            account_type: i.account_type || "",
            fname: i.fname || "",
            lname: i.lname || "",
            email: i.email || "",
            phone: i.phone || "",
            mobile: i.mobile || "",
            dealer_code: i.dealer_code || "",
          }),
          (this.previousEmail = i.email || ""),
          console.log("Edit Mode: Customer Object ->", this.customerObj))
        : ((this.customerObj = new _l()),
          (this.customerObj.account_id = ""),
          console.log(
            "New Customer Mode: Reset customerObj",
            this.customerObj
          ));
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalVisible = !1);
  }
  isEmailChange() {
    return this.useForm.value.email !== this.previousValue;
  }
  loadCustomers() {
    this.masterSrv.getAllCustomer().subscribe(
      (i) => {
        console.log("Fetched Accounts:", i),
          this.customerList.set(i.data.rows),
          this.totalCustomer.set(i.data.count);
      },
      (i) => {
        console.error("Error fetching customers:", i),
          this.toastr.error("Failed to load customers", "Error");
      }
    );
  }
  getDealerCode(i) {
    let e = this.dealerList().find((t) => t.dealer_id === i);
    return console.log(this.dealerList), e?.dealer_code?.toString() ?? "N/A";
  }
  onDealerChange() {
    console.log("on dealer chnage func called "),
      console.log("\u{1F4DD} Dealer List:", this.dealerList());
    let i = this.dealerList().find(
      (e) => e.dealer_id === this.customerObj.dealer_id
    );
    console.log("Selected Dealer:", i),
      i &&
        ((this.customerObj.dealer_code = i.dealer_code),
        this.useForm.patchValue({ dealer_code: i.dealer_code }));
  }
  loadDealers() {
    this.masterSrv.getAllDealer().subscribe(
      (i) => {
        this.dealerList.set(i.data.dealer.rows), console.log(i);
      },
      (i) => {
        this.toastr.error("Serverside Error", "Error");
      }
    );
  }
  createCustomer() {
    console.log("create cust called "),
      console.log("\u{1F6E0} Submitting customer data:", this.customerObj),
      console.log("\u{1F6E0} createCustomer() triggered!"),
      this.masterSrv.createCustomer(this.customerObj).subscribe(
        (i) => {
          this.toastr.success("Customerrr created successfully!", "Success"),
            this.getAllCustomer();
        },
        (i) => {
          this.toastr.error("Error creating dealer", "Error");
        }
      );
  }
  selectedCustomerForDeletion = null;
  selectCustomerForDeletion(i) {
    this.selectedCustomerForDeletion = i;
  }
  deleteCustomerId() {
    console.log(
      "this is the select user",
      this.selectCustomerForDeletion,
      this.selectedCustomerForDeletion
    ),
      this.selectedCustomerForDeletion &&
      this.selectedCustomerForDeletion.account_id
        ? this.masterSrv
            .deleteCustomer(this.selectedCustomerForDeletion.account_id)
            .subscribe(
              (i) => {
                this.toastr.success("Accounts deleted successfully", "Success"),
                  this.getAllCustomer(),
                  $("#deleteModal").modal("hide"),
                  $(".modal-backdrop").remove(),
                  $("body").removeClass("modal-open");
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No accounts selected for deletion");
  }
  onUpdate() {
    console.log("onupdate called "),
      this.useForm.valid
        ? ((this.customerObj = W(W({}, this.customerObj), this.useForm.value)),
          console.log(
            "\u{1F680} Updated Payload before API call:",
            this.customerObj
          ),
          this.masterSrv.updateCustomer(this.customerObj).subscribe(
            (i) => {
              console.log("\u2705 API Response:", i),
                i.status === 200
                  ? (this.toastr.success(i.message, "Success"),
                    setTimeout(() => {
                      this.getAllCustomer();
                    }, 500))
                  : this.toastr.error(
                      "Update failed, no data received",
                      "Error"
                    );
            },
            (i) => {
              console.error("\u274C API Error:", i),
                this.toastr.error("Failed to update customer", "Error");
            }
          ))
        : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  getAllCustomer() {
    this.masterSrv.getAllCustomer().subscribe(
      (i) => {
        console.log("Fetched Customers:", i),
          console.log("customer list updated:", i.data.rows),
          this.customerList.set(i.data.rows),
          this.totalCustomer.set(i.data.count);
      },
      (i) => {
        this.toastr.error("Error fetching dealers", "Error");
      }
    );
  }
  onEdit(i) {
    console.log("Edit button clicked. Dealer ID:", i),
      (this.isEditMode = !0),
      this.masterSrv.getCustomerById(i).subscribe(
        (e) => {
          if ((console.log("API Response:", e), e?.data)) {
            let t = e.data;
            (this.customerObj = Ce(W({}, t), {
              dealer_code: Number(t.dealer_code),
            })),
              this.useForm.patchValue({
                dealer_code: Number(t.dealer_code),
                dealer_name: t.account_name || "",
                account_type: t.account_type || "",
                fname: t.fname || "",
                lname: t.lname || "",
                email: t.email || "",
                phone: t.phone || "",
                mobile: t.mobile || "",
                account_id: t.account_id || "",
              }),
              console.log("Dealer data set, opening modal..."),
              setTimeout(() => {
                $("#exampleModalCenter").modal("show");
              }, 0);
          } else
            console.error("Dealer data is missing in response:", e),
              this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          console.error("Error fetching dealer details:", e),
            this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isCustomerNameChanged() {
    return this.useForm.value.name !== this.previousValue;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let i = this.useForm.value;
    console.log("Form Data being sent to API:", i),
      this.masterSrv.createCustomer(i).subscribe({
        next: () => {
          this.toastr.success("Accounts created successfully!", "Success"),
            this.getAllCustomer(),
            this.closeModal();
        },
        error: (e) => {
          console.error("Accounts creation error:", e),
            this.toastr.error(
              e.message || "Failed to create user",
              "Creation Error"
            );
        },
      });
  }
  createNewCustomer() {
    this.masterSrv.createCustomer(this.customerObj).subscribe(
      (i) => {
        this.toastr.success("customer created successfully!", "Success"),
          this.getAllCustomer();
      },
      (i) => {
        this.toastr.error("Error creating dealer", "Error");
      }
    );
  }
  static ɵfac = function (e) {
    return new (e || n)(H(er), H(Ke));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-customer"]],
    standalone: !0,
    features: [ce],
    decls: 109,
    vars: 36,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-md-4", "col-sm-4", "mb-4", "mb-xl-0"],
      [
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "col-sm-4", "col-md-4", "mb-4", "mb-xl-0"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [1, "row"],
      [1, "col-lg-12"],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-lg",
        "custom-modal",
      ],
      [1, "modal-dialog", "modal-lg"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", 2, "align-items", "center", "margin-inline", "auto"],
      ["type", "button", "data-dismiss", "modal", 1, "close"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "form-group", "col-md-6"],
      ["for", "account_type", 1, "form-label"],
      [
        "formControlName",
        "account_type",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "Individual"],
      ["value", "Corporate"],
      ["value", "Retailer"],
      ["class", "text-danger", 4, "ngIf"],
      ["for", "fname", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "First Name",
        "formControlName",
        "fname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "name", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Last Name",
        "formControlName",
        "lname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_code", 1, "form-label"],
      [
        "id",
        "dealer_code",
        "formControlName",
        "dealer_code",
        1,
        "form-select",
        "form-control",
        "form-control-lg",
        3,
        "change",
        "disabled",
        "ngClass",
      ],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "email", 1, "form-label"],
      [
        "type",
        "email",
        "placeholder",
        "E-mail",
        "formControlName",
        "email",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "phone", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Phone",
        "formControlName",
        "phone",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "mobile", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Mobile",
        "formControlName",
        "mobile",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      ["colspan", "6", 1, "text-center"],
      [4, "ngFor", "ngForOf"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-toggle",
        "modal",
        "data-target",
        ".bd-example-modal-sm",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-sm",
      ],
      [1, "modal-dialog", "modal-sm"],
      [1, "modal-header", "text-center", 2, "margin-inline", "auto"],
      [1, "modal-title", "text-center"],
      [1, "modal-body"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      [1, "text-danger"],
      [4, "ngIf"],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      if (e & 1) {
        let r = re();
        c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
          h(6, "Utils"),
          d()(),
          c(7, "li", 7)(8, "a", 8),
          h(9, "Accounts"),
          d()()()(),
          c(10, "div", 9)(11, "div", 10)(12, "a", 11),
          N("click", function () {
            return P(r), I(t.openModal(t.customerObj));
          }),
          z(13, "i", 12),
          h(14, "Add Account"),
          d()(),
          c(15, "div", 13)(16, "div", 14)(17, "p", 15),
          h(18, "Total Account"),
          d(),
          c(19, "h3", 16),
          h(20),
          d()()()(),
          c(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "table", 20)(
            25,
            "thead"
          )(26, "tr")(27, "th"),
          h(28, "Sr No"),
          d(),
          c(29, "th"),
          h(30, "Account Name"),
          d(),
          c(31, "th"),
          h(32, "Last Name"),
          d(),
          c(33, "th"),
          h(34, "E-mail"),
          d(),
          c(35, "th"),
          h(36, "Phone"),
          d(),
          c(37, "th"),
          h(38, "Action"),
          d()()(),
          c(39, "tbody"),
          R(40, nA, 4, 0, "tr")(41, oA, 1, 1, "tr"),
          d()()()()()()(),
          c(42, "div", 21)(43, "div", 22)(44, "div", 23)(45, "div", 24)(
            46,
            "h5",
            25
          ),
          h(47, " Add New Account "),
          d(),
          c(48, "button", 26)(49, "span", 27),
          h(50, "\xD7"),
          d()()(),
          c(51, "div", 28)(52, "div", 17)(53, "div", 29)(54, "label", 30),
          h(55, "Account Type"),
          d(),
          c(56, "select", 31)(57, "option", 32),
          h(58, "Select Account Type"),
          d(),
          c(59, "option", 33),
          h(60, "Individual"),
          d(),
          c(61, "option", 34),
          h(62, "Corporate"),
          d(),
          c(63, "option", 35),
          h(64, "Retailer"),
          d()(),
          R(65, aA, 3, 0, "div", 36),
          d(),
          c(66, "div", 29)(67, "label", 37),
          h(68, "First Name"),
          d(),
          z(69, "input", 38),
          R(70, cA, 3, 2, "div", 36),
          d()(),
          c(71, "div", 17)(72, "div", 29)(73, "label", 39),
          h(74, "Last Name"),
          d(),
          z(75, "input", 40),
          R(76, hA, 3, 2, "div", 36),
          d(),
          c(77, "div", 29)(78, "label", 41),
          h(79, "Dealer Code"),
          d(),
          c(80, "select", 42),
          N("change", function () {
            return P(r), I(t.onDealerChange());
          }),
          c(81, "option", 32),
          h(82, "Select Dealer"),
          d(),
          R(83, pA, 2, 2, "option", 43)(84, mA, 2, 2, "option", 43),
          d(),
          R(85, fA, 3, 0, "div", 36),
          d()(),
          c(86, "div", 17)(87, "div", 29)(88, "label", 44),
          h(89, "E-mail"),
          d(),
          z(90, "input", 45),
          R(91, bA, 3, 2, "div", 36),
          d(),
          c(92, "div", 29)(93, "label", 46),
          h(94, "Phone"),
          d(),
          z(95, "input", 47),
          R(96, CA, 4, 3, "div", 36),
          d()(),
          c(97, "div", 17)(98, "div", 29)(99, "label", 48),
          h(100, "Mobile"),
          d(),
          z(101, "input", 49),
          R(102, MA, 4, 3, "div", 36),
          d()()(),
          c(103, "div", 50),
          R(104, TA, 3, 1, "ng-container", 51),
          c(105, "button", 52),
          N("click", function () {
            return P(r), I(t.closeModal());
          }),
          h(106, " Close "),
          d(),
          R(107, EA, 2, 1, "ng-template", null, 0, Pt),
          d()()()();
      }
      if (e & 2) {
        let r,
          o,
          a,
          l,
          u,
          f,
          v,
          D,
          T,
          M,
          k,
          V,
          A,
          E,
          X,
          se = _t(108);
        m(20),
          ee(" ", t.totalCustomer(), " "),
          m(20),
          Cn(t.customerList().length === 0 ? 40 : 41),
          m(11),
          y("formGroup", t.useForm),
          m(5),
          y(
            "ngClass",
            de(
              22,
              Po,
              ((r = t.useForm.get("account_type")) == null
                ? null
                : r.touched) &&
                ((r = t.useForm.get("account_type")) == null ? null : r.invalid)
            )
          ),
          m(9),
          y(
            "ngIf",
            ((o = t.useForm.get("account_type")) == null ? null : o.touched) &&
              ((o = t.useForm.get("account_type")) == null ? null : o.invalid)
          ),
          m(4),
          y(
            "ngClass",
            de(
              24,
              Po,
              ((a = t.useForm.get("fname")) == null ? null : a.touched) &&
                ((a = t.useForm.get("fname")) == null ? null : a.invalid)
            )
          ),
          m(),
          y(
            "ngIf",
            ((l = t.useForm.get("fname")) == null ? null : l.touched) &&
              ((l = t.useForm.get("fname")) == null ? null : l.invalid)
          ),
          m(5),
          y(
            "ngClass",
            de(
              26,
              Po,
              ((u = t.useForm.get("lname")) == null ? null : u.touched) &&
                ((u = t.useForm.get("lname")) == null ? null : u.invalid)
            )
          ),
          m(),
          y(
            "ngIf",
            ((f = t.useForm.get("lname")) == null ? null : f.touched) &&
              ((f = t.useForm.get("lname")) == null ? null : f.invalid)
          ),
          m(4),
          y(
            "disabled",
            (v = t.useForm.get("account_id")) == null ? null : v.value
          )(
            "ngClass",
            de(
              28,
              Po,
              ((D = t.useForm.get("dealer_code")) == null ? null : D.touched) &&
                ((D = t.useForm.get("dealer_code")) == null ? null : D.invalid)
            )
          ),
          m(3),
          y("ngForOf", t.dealerList()),
          m(),
          y("ngForOf", t.staticDealerList),
          m(),
          y(
            "ngIf",
            ((T = t.useForm.get("dealer_code")) == null ? null : T.touched) &&
              ((T = t.useForm.get("dealer_code")) == null ? null : T.invalid)
          ),
          m(5),
          y(
            "ngClass",
            de(
              30,
              Po,
              ((M = t.useForm.get("email")) == null ? null : M.touched) &&
                ((M = t.useForm.get("email")) == null ? null : M.invalid)
            )
          ),
          m(),
          y(
            "ngIf",
            ((k = t.useForm.get("email")) == null ? null : k.touched) &&
              ((k = t.useForm.get("email")) == null ? null : k.invalid)
          ),
          m(4),
          y(
            "ngClass",
            de(
              32,
              Po,
              ((V = t.useForm.get("phone")) == null ? null : V.touched) &&
                ((V = t.useForm.get("phone")) == null ? null : V.invalid)
            )
          ),
          m(),
          y(
            "ngIf",
            ((A = t.useForm.get("phone")) == null ? null : A.touched) &&
              ((A = t.useForm.get("phone")) == null ? null : A.invalid)
          ),
          m(5),
          y(
            "ngClass",
            de(
              34,
              Po,
              ((E = t.useForm.get("mobile")) == null ? null : E.touched) &&
                ((E = t.useForm.get("mobile")) == null ? null : E.invalid)
            )
          ),
          m(),
          y(
            "ngIf",
            ((X = t.useForm.get("mobile")) == null ? null : X.touched) &&
              ((X = t.useForm.get("mobile")) == null ? null : X.invalid)
          ),
          m(2),
          y("ngIf", t.customerObj.account_id)("ngIfElse", se);
      }
    },
    dependencies: [
      Ae,
      It,
      At,
      Xe,
      Si,
      ii,
      ni,
      ei,
      Di,
      ti,
      Bi,
      tt,
      Yd,
      Oo,
      $d,
      zd,
      hn,
      Xi,
      Zi,
      my,
      gy,
      Vi,
      er,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:350px;padding:20px;flex-grow:1}",
    ],
  });
};
var vy = Ox(by());
var OA = () => ["/Admin/dealer"],
  kA = (n) => ["/Admin/single-task", n];
function PA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 11)(1, "div", 19)(2, "div", 29)(3, "div", 30)(4, "p", 31),
      h(5),
      d(),
      c(6, "h4", 32),
      h(7, " Dealer Code : "),
      c(8, "span", 33),
      h(9),
      d()()()()(),
      c(10, "div", 19)(11, "div", 34),
      N("click", function () {
        P(e);
        let r = x();
        return (
          r.toggleUsersTable(),
          I(r.getAllUser(r.dealerData.data.dealer.dealer_code))
        );
      }),
      c(12, "div", 30)(13, "p", 31),
      h(14, "Total Users"),
      d(),
      c(15, "h4", 32)(16, "span", 33),
      h(17),
      d(),
      h(18, " User "),
      d()()()(),
      c(19, "div", 19)(20, "div", 35),
      N("click", function () {
        P(e);
        let r = x();
        return (
          r.toggleOpportunityTable(),
          I(r.getAllOpp(r.dealerData.data.dealer.dealer_id))
        );
      }),
      c(21, "p", 31),
      h(22, "Total Opportunities"),
      d(),
      c(23, "h4", 32)(24, "span", 33),
      h(25),
      d(),
      h(26, " Opportunities "),
      d()()(),
      c(27, "div", 19)(28, "div", 34),
      N("click", function () {
        P(e);
        let r = x();
        return (
          r.toggleLeadsTable(),
          I(r.getAllLeads(r.dealerData.data.dealer.dealer_id))
        );
      }),
      c(29, "div", 30)(30, "p", 31),
      h(31, "Total Lead"),
      d(),
      c(32, "h4", 32)(33, "span", 33),
      h(34),
      d(),
      h(35, " Lead "),
      d()()()(),
      c(36, "div", 19)(37, "div", 34),
      N("click", function () {
        P(e);
        let r = x();
        return (
          r.toggleTasksTable(),
          I(r.getAllTasks(r.dealerData.data.dealer.dealer_id))
        );
      }),
      c(38, "div", 30)(39, "p", 31),
      h(40, "Total Tasks"),
      d(),
      c(41, "h4", 32)(42, "span", 33),
      h(43),
      d(),
      h(44, " Tasks "),
      d()()()(),
      c(45, "div", 19)(46, "div", 34),
      N("click", function () {
        P(e);
        let r = x();
        return (
          r.toggleEventTable(),
          I(r.getAllEvent(r.dealerData.data.dealer.dealer_id))
        );
      }),
      c(47, "div", 30)(48, "p", 31),
      h(49, "Total Events"),
      d(),
      c(50, "h4", 32)(51, "span", 33),
      h(52),
      d(),
      h(53, " Events "),
      d()()()()();
  }
  if (n & 2) {
    let e = x();
    m(5),
      ee(" ", e.dealerData.data.dealer.dealer_name, " "),
      m(4),
      B(e.dealerData.data.dealer.dealer_code),
      m(8),
      B(e.dealerData.data.users),
      m(8),
      B(e.dealerData.data.opportunities),
      m(9),
      B(e.dealerData.data.leads),
      m(9),
      B(e.dealerData.data.tasks),
      m(9),
      ee("", e.dealerData.data.events, " ");
  }
}
function IA(n, i) {
  n & 1 &&
    (c(0, "tr")(1, "td", 52)(2, "p", 53), h(3, " No Users Found "), d()()());
}
function AA(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr")(1, "td", 49),
      h(2),
      d(),
      c(3, "td", 49),
      h(4),
      d(),
      c(5, "td", 49),
      h(6),
      d(),
      c(7, "td", 49),
      h(8),
      d(),
      c(9, "td", 49),
      h(10),
      d(),
      c(11, "td", 49),
      h(12),
      d(),
      c(13, "td", 49),
      h(14),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x(3);
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.user_account_id || "N/A"),
      m(2),
      B(e.name || "N/A"),
      m(2),
      B(e.email || "N/A"),
      m(2),
      B(e.phone || "N/A"),
      m(2),
      B(e.user_role || "N/A"),
      m(2),
      B(e.dealer_code || "N/A");
  }
}
function RA(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 47)(1, "table", 48)(2, "thead")(3, "tr")(4, "th", 49),
      h(5, "Sr No"),
      d(),
      c(6, "th", 49),
      h(7, "Account ID"),
      d(),
      c(8, "th", 49),
      h(9, "Name"),
      d(),
      c(10, "th", 49),
      h(11, "Email"),
      d(),
      c(12, "th", 49),
      h(13, "Phone"),
      d(),
      c(14, "th", 49),
      h(15, "Role"),
      d(),
      c(16, "th", 49),
      h(17, "Dealer Code"),
      d()()(),
      c(18, "tbody"),
      R(19, IA, 4, 0, "tr", 50)(20, AA, 15, 7, "tr", 51),
      d()()()),
    n & 2)
  ) {
    let e = x(2);
    m(19),
      y("ngIf", !e.paginatedUsers || e.paginatedUsers.length === 0),
      m(),
      y("ngForOf", e.paginatedUsers);
  }
}
function FA(n, i) {
  if ((n & 1 && (Ue(0), h(1), ze()), n & 2)) {
    let e = x(2);
    m(),
      Fi(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalUsers,
        " entries "
      );
  }
}
function NA(n, i) {
  n & 1 && h(0, " No entries available ");
}
function LA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "li", 44)(1, "button", 45),
      N("click", function () {
        let r = P(e).$implicit,
          o = x(2);
        return I(o.goToPage(r));
      }),
      h(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(2);
    ne("active", e === t.currentPage)(
      "disabled",
      !t.hasDataForPage(e) || t.totalUsers === 0
    ),
      m(),
      y("disabled", !t.hasDataForPage(e) || t.totalUsers === 0),
      m(),
      ee(" ", e, " ");
  }
}
function VA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 36),
      R(1, RA, 21, 2, "div", 37),
      c(2, "div", 38)(3, "div", 39)(4, "p", 40),
      R(5, FA, 2, 3, "ng-container", 41)(
        6,
        NA,
        1,
        0,
        "ng-template",
        null,
        0,
        Pt
      ),
      d()(),
      c(8, "div", 39)(9, "nav", 42)(10, "ul", 43)(11, "li", 44)(
        12,
        "button",
        45
      ),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.goToPreviousPage());
      }),
      h(13, " Previous "),
      d()(),
      R(14, LA, 3, 6, "li", 46),
      c(15, "li", 44)(16, "button", 45),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.goToNextPage());
      }),
      h(17, " Next "),
      d()()()()()()();
  }
  if (n & 2) {
    let e = _t(7),
      t = x();
    m(),
      y("ngIf", t.selectedOption() === "users"),
      m(4),
      y(
        "ngIf",
        t.totalUsers > 0 && (t.currentPage - 1) * t.itemsPerPage < t.totalUsers
      )("ngIfElse", e),
      m(6),
      ne("disabled", t.currentPage === 1 || t.totalUsers === 0),
      m(),
      y("disabled", t.currentPage === 1 || t.totalUsers === 0),
      m(2),
      y("ngForOf", t.visiblePageNumbers),
      m(),
      ne("disabled", t.currentPage === t.totalPages || t.totalUsers === 0),
      m(),
      y("disabled", t.currentPage === t.totalPages || t.totalUsers === 0);
  }
}
function BA(n, i) {
  n & 1 &&
    (c(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Users Found "), d()()());
}
function HA(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr", 49)(1, "td"),
      h(2),
      d(),
      c(3, "td"),
      h(4),
      d(),
      c(5, "td"),
      h(6),
      d(),
      c(7, "td"),
      h(8),
      d(),
      c(9, "td"),
      h(10),
      d(),
      c(11, "td"),
      h(12),
      d(),
      c(13, "td"),
      h(14),
      d(),
      c(15, "td"),
      h(16),
      d(),
      c(17, "td"),
      h(18),
      d(),
      c(19, "td"),
      h(20),
      d(),
      c(21, "td"),
      h(22),
      d(),
      c(23, "td"),
      h(24),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x(2);
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.lead_code || "N/A"),
      m(2),
      B(e.dealer_name || "N/A"),
      m(2),
      B(e.status || "N/A"),
      m(2),
      B(e.purchase_type || "N/A"),
      m(2),
      B(e.type || "N/A"),
      m(2),
      B(e.sub_type || "N/A"),
      m(2),
      B(e.brand || "N/A"),
      m(2),
      B(e.PMI || "N/A"),
      m(2),
      B(e.lead_source || "N/A"),
      m(2),
      B(e.lname || "N/A"),
      m(2),
      B(e.mobile || "N/A");
  }
}
function jA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "li", 44)(1, "button", 45),
      N("click", function () {
        let r = P(e).$implicit,
          o = x(2);
        return I(o.goToLeadPage(r));
      }),
      h(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(2);
    ne("active", e === t.currentPage)("disabled", t.totalLeads === 0),
      m(),
      y("disabled", t.totalLeads === 0),
      m(),
      ee(" ", e, " ");
  }
}
function UA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(
      5,
      "th",
      49
    ),
      h(6, "Sr No"),
      d(),
      c(7, "th", 49),
      h(8, "Lead"),
      z(9, "br"),
      h(10, " Code"),
      d(),
      c(11, "th", 49),
      h(12, "Dealer "),
      z(13, "br"),
      h(14, "Name"),
      d(),
      c(15, "th", 49),
      h(16, "Status"),
      d(),
      c(17, "th", 49),
      h(18, "Purchase "),
      z(19, "br"),
      h(20, " Type"),
      d(),
      c(21, "th", 49),
      h(22, "Type"),
      d(),
      c(23, "th", 49),
      h(24, "Sub "),
      z(25, "br"),
      h(26, "Type"),
      d(),
      c(27, "th", 49),
      h(28, "Brand"),
      d(),
      c(29, "th", 49),
      h(30, "PMI"),
      d(),
      c(31, "th", 49),
      h(32, "Lead"),
      z(33, "br"),
      h(34, " Source"),
      d(),
      c(35, "th", 49),
      h(36, "Last"),
      z(37, "br"),
      h(38, " Name"),
      d(),
      c(39, "th", 49),
      h(40, "Mobile"),
      d()()(),
      c(41, "tbody"),
      R(42, BA, 4, 0, "tr", 50)(43, HA, 25, 12, "tr", 56),
      d()()(),
      c(44, "div", 38)(45, "div", 39)(46, "p", 40),
      h(47),
      d()(),
      c(48, "div", 39)(49, "nav", 42)(50, "ul", 43)(51, "li", 44)(
        52,
        "button",
        45
      ),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.goToPreviousLeadPage());
      }),
      h(53, " Previous "),
      d()(),
      R(54, jA, 3, 6, "li", 46),
      c(55, "li", 44)(56, "button", 45),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.goToNextLeadPage());
      }),
      h(57, " Next "),
      d()()()()()()();
  }
  if (n & 2) {
    let e = x();
    m(42),
      y("ngIf", !e.paginatedLeads || e.paginatedLeads.length === 0),
      m(),
      y("ngForOf", e.paginatedLeads),
      m(4),
      Fi(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalLeads,
        " entries "
      ),
      m(4),
      ne("disabled", e.currentPage === 1 || e.totalLeads === 0),
      m(),
      y("disabled", e.currentPage === 1 || e.totalLeads === 0),
      m(2),
      y("ngForOf", e.visiblePageNumbers),
      m(),
      ne("disabled", e.currentPage === e.totalPages || e.totalLeads === 0),
      m(),
      y("disabled", e.currentPage === e.totalPages || e.totalLeads === 0);
  }
}
function zA(n, i) {
  n & 1 &&
    (c(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Users Found "), d()()());
}
function $A(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr", 49)(1, "td"),
      h(2),
      d(),
      c(3, "td"),
      h(4),
      d(),
      c(5, "td"),
      h(6),
      d(),
      c(7, "td"),
      h(8),
      d(),
      c(9, "td"),
      h(10),
      d(),
      c(11, "td"),
      h(12),
      d(),
      c(13, "td"),
      h(14),
      d(),
      c(15, "td"),
      h(16),
      d(),
      c(17, "td"),
      h(18),
      d(),
      c(19, "td"),
      h(20),
      d(),
      c(21, "td"),
      h(22),
      d(),
      c(23, "td"),
      h(24),
      d(),
      c(25, "td"),
      h(26),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x(2);
    m(2),
      B((r.currentOpportunityPage - 1) * r.opportunityItemsPerPage + t + 1),
      m(2),
      ee(" ", e.opportunity_name, " "),
      m(2),
      ee(" ", e.stage, " "),
      m(2),
      ee(" ", e.opportunity_record_type, " "),
      m(2),
      ee(" ", e.account_name, " "),
      m(2),
      ee(" ", e.close_date, " "),
      m(2),
      ee(" ", e.VIN, " "),
      m(2),
      ee(" ", e.purchase_type, " "),
      m(2),
      ee(" ", e.type, " "),
      m(2),
      ee(" ", e.sub_type, " "),
      m(2),
      ee(" ", e.brand, " "),
      m(2),
      ee(" ", e.PMI, " "),
      m(2),
      ee(" ", e.description, " ");
  }
}
function WA(n, i) {
  if ((n & 1 && (c(0, "p", 40), h(1), d()), n & 2)) {
    let e = x(2);
    m(),
      Fi(
        " Showing ",
        (e.currentOpportunityPage - 1) * e.opportunityItemsPerPage + 1,
        " \u2013 ",
        e.getOpportunityRangeEnd(),
        " of ",
        e.totalOpportunities,
        " entries "
      );
  }
}
function GA(n, i) {
  n & 1 && (c(0, "p", 40), h(1, " No entries available "), d());
}
function YA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "li", 44)(1, "button", 45),
      N("click", function () {
        let r = P(e).$implicit,
          o = x(2);
        return I(o.goToOpportunityPage(r));
      }),
      h(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(2);
    ne("active", e === t.currentOpportunityPage)(
      "disabled",
      t.totalOpportunities === 0
    ),
      m(),
      y("disabled", t.totalOpportunities === 0),
      m(),
      ee(" ", e, " ");
  }
}
function qA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
      5,
      "th"
    ),
      h(6, "Sr No"),
      d(),
      c(7, "th"),
      h(8, "Opportunity "),
      z(9, "br"),
      h(10, "Name"),
      d(),
      c(11, "th"),
      h(12, "stage"),
      d(),
      c(13, "th"),
      h(14, "Opportunities "),
      z(15, "br"),
      h(16, "Record"),
      d(),
      c(17, "th"),
      h(18, "account"),
      z(19, "br"),
      h(20, " Name"),
      d(),
      c(21, "th"),
      h(22, "close "),
      z(23, "br"),
      h(24, "Date"),
      d(),
      c(25, "th"),
      h(26, "Opportunity "),
      z(27, "br"),
      h(28, "Currency"),
      d(),
      c(29, "th"),
      h(30, "VIN"),
      d(),
      c(31, "th"),
      h(32, "Purchase"),
      z(33, "br"),
      h(34, " Type"),
      d(),
      c(35, "th"),
      h(36, "Sub"),
      z(37, "br"),
      h(38, " Type"),
      d(),
      c(39, "th"),
      h(40, "Brand"),
      d(),
      c(41, "th"),
      h(42, "PMI"),
      d()()(),
      c(43, "tbody"),
      R(44, zA, 4, 0, "tr", 50)(45, $A, 27, 13, "tr", 58),
      d()()(),
      c(46, "div", 38)(47, "div", 39),
      R(48, WA, 2, 3, "p", 59)(49, GA, 2, 0, "p", 59),
      d(),
      c(50, "div", 39)(51, "nav", 42)(52, "ul", 43)(53, "li", 44)(
        54,
        "button",
        45
      ),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.goToPreviousOpportunityPage());
      }),
      h(55, " Previous "),
      d()(),
      R(56, YA, 3, 6, "li", 46),
      c(57, "li", 44)(58, "button", 45),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.goToNextOpportunityPage());
      }),
      h(59, " Next "),
      d()()()()()()();
  }
  if (n & 2) {
    let e = x();
    m(44),
      y("ngIf", !e.OpportunityList || e.OpportunityList.length === 0),
      m(),
      y("ngForOf", e.paginatedOpportunities),
      m(3),
      y("ngIf", e.totalOpportunities > 0),
      m(),
      y("ngIf", e.totalOpportunities === 0),
      m(4),
      ne(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      m(),
      y(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      m(2),
      y("ngForOf", e.visibleOpportunityPageNumbers),
      m(),
      ne(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      ),
      m(),
      y(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      );
  }
}
function KA(n, i) {
  n & 1 &&
    (c(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Users Found "), d()()());
}
function QA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "tr", 49)(1, "td"),
      h(2),
      d(),
      c(3, "td"),
      h(4),
      d(),
      c(5, "td"),
      h(6),
      d(),
      c(7, "td"),
      h(8),
      d(),
      c(9, "td"),
      h(10),
      d(),
      c(11, "td"),
      h(12),
      d(),
      c(13, "td"),
      h(14),
      d(),
      c(15, "td"),
      h(16),
      d(),
      c(17, "td"),
      h(18),
      d(),
      c(19, "td"),
      h(20),
      d(),
      c(21, "td")(22, "a", 60),
      N("click", function () {
        let r = P(e).$implicit;
        return I(r.task_id);
      }),
      c(23, "span", 61),
      z(24, "i", 62),
      d()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x(2);
    m(2),
      B((r.currentTaskPage - 1) * r.taskItemsPerPage + t + 1),
      m(2),
      ee(" ", e.subject, " "),
      m(2),
      ee(" ", e.status, " "),
      m(2),
      ee(" ", e.priority, " "),
      m(2),
      ee(" ", e.assigned_to, " "),
      m(2),
      ee(" ", e.due_date, " "),
      m(2),
      ee(" ", e.comments, " "),
      m(2),
      ee(" ", e.lead_name, " "),
      m(2),
      ee(" ", e.lead_email, " "),
      m(2),
      ee(" ", e.lead_code, " "),
      m(2),
      y("routerLink", de(11, kA, e.task_id));
  }
}
function XA(n, i) {
  if ((n & 1 && (c(0, "p", 40), h(1), d()), n & 2)) {
    let e = x(2);
    m(),
      Fi(
        " Showing ",
        (e.currentTaskPage - 1) * e.taskItemsPerPage + 1,
        " \u2013 ",
        e.getTaskRangeEnd(),
        " of ",
        e.totalTasks,
        " entries "
      );
  }
}
function ZA(n, i) {
  n & 1 && (c(0, "p", 40), h(1, " No entries available "), d());
}
function JA(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "li", 44)(1, "button", 45),
      N("click", function () {
        let r = P(e).$implicit,
          o = x(2);
        return I(o.goToTaskPage(r));
      }),
      h(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(2);
    ne("active", e === t.currentTaskPage)("disabled", t.totalTasks === 0),
      m(),
      y("disabled", t.totalTasks === 0),
      m(),
      ee(" ", e, " ");
  }
}
function eR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
      5,
      "th"
    ),
      h(6, "Sr No"),
      d(),
      c(7, "th"),
      h(8, "Subject"),
      d(),
      c(9, "th"),
      h(10, "Status"),
      d(),
      c(11, "th"),
      h(12, "Priority"),
      d(),
      c(13, "th"),
      h(14, "Assigned"),
      d(),
      c(15, "th"),
      h(16, "Due Date"),
      d(),
      c(17, "th"),
      h(18, "Comments"),
      d(),
      c(19, "th"),
      h(20, "Lead Name"),
      d(),
      c(21, "th"),
      h(22, "Actions"),
      d()()(),
      c(23, "tbody"),
      R(24, KA, 4, 0, "tr", 50)(25, QA, 25, 13, "tr", 58),
      d()()(),
      c(26, "div", 38)(27, "div", 39),
      R(28, XA, 2, 3, "p", 59)(29, ZA, 2, 0, "p", 59),
      d(),
      c(30, "div", 39)(31, "nav", 42)(32, "ul", 43)(33, "li", 44)(
        34,
        "button",
        45
      ),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.goToPreviousTaskPage());
      }),
      h(35, " Previous "),
      d()(),
      R(36, JA, 3, 6, "li", 46),
      c(37, "li", 44)(38, "button", 45),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.goToNextTaskPage());
      }),
      h(39, " Next "),
      d()()()()()()();
  }
  if (n & 2) {
    let e = x();
    m(24),
      y("ngIf", !e.paginatedTasks || e.paginatedTasks.length === 0),
      m(),
      y("ngForOf", e.paginatedTasks),
      m(3),
      y("ngIf", e.totalTasks > 0),
      m(),
      y("ngIf", e.totalOpportunities === 0),
      m(4),
      ne("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      m(),
      y("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      m(2),
      y("ngForOf", e.visibleOpportunityPageNumbers),
      m(),
      ne(
        "disabled",
        e.currentTaskPage === e.totalTaskPages || e.totalTasks === 0
      ),
      m(),
      y(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalTasks === 0
      );
  }
}
function tR(n, i) {
  n & 1 &&
    (c(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Events Found "), d()()());
}
function iR(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr", 49)(1, "td"),
      h(2),
      d(),
      c(3, "td"),
      h(4),
      d(),
      c(5, "td"),
      h(6),
      d(),
      c(7, "td"),
      h(8),
      d(),
      c(9, "td"),
      h(10),
      d(),
      c(11, "td"),
      h(12),
      d(),
      c(13, "td"),
      h(14),
      d(),
      c(15, "td"),
      h(16),
      d(),
      c(17, "td"),
      h(18),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x(2);
    m(2),
      B((r.currentEventPage - 1) * r.eventItemsPerPage + t + 1),
      m(2),
      B(e.subject),
      m(2),
      B(e.assigned_to),
      m(2),
      B(e.description),
      m(2),
      B(e.name),
      m(2),
      B(e.start_date),
      m(2),
      B(e.end_date),
      m(2),
      B(e.VIN),
      m(2),
      B(e.location);
  }
}
function nR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "li", 44)(1, "button", 65),
      N("click", function () {
        let r = P(e).$implicit,
          o = x(3);
        return I(o.goToEventPage(r));
      }),
      h(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(3);
    ne("active", e === t.currentEventPage), m(2), ee(" ", e, " ");
  }
}
function rR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 38)(1, "div", 39)(2, "p", 40),
      h(3),
      d()(),
      c(4, "div", 39)(5, "nav", 42)(6, "ul", 43)(7, "li", 44)(8, "button", 45),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.goToPreviousEventPage());
      }),
      h(9, " Previous "),
      d()(),
      R(10, nR, 3, 3, "li", 64),
      c(11, "li", 44)(12, "button", 45),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.goToNextEventPage());
      }),
      h(13, " Next "),
      d()()()()()();
  }
  if (n & 2) {
    let e = x(2);
    m(3),
      Fi(
        " Showing ",
        (e.currentEventPage - 1) * e.eventItemsPerPage + 1,
        " \u2013 ",
        e.getEventsRangeEnd(),
        " of ",
        e.totalEvents,
        " entries "
      ),
      m(4),
      ne("disabled", e.currentEventPage === 1),
      m(),
      y("disabled", e.currentEventPage === 1),
      m(2),
      y("ngForOf", e.visibleEventPageNumbers),
      m(),
      ne("disabled", e.currentEventPage === e.totalEventPages),
      m(),
      y("disabled", e.currentEventPage === e.totalEventPages);
  }
}
function oR(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
        5,
        "th"
      ),
      h(6, "Sr No"),
      d(),
      c(7, "th"),
      h(8, "Subject"),
      d(),
      c(9, "th"),
      h(10, "Assigned"),
      d(),
      c(11, "th"),
      h(12, "Description"),
      d(),
      c(13, "th"),
      h(14, "Account Name"),
      d(),
      c(15, "th"),
      h(16, "Start Date"),
      d(),
      c(17, "th"),
      h(18, "End Date"),
      d(),
      c(19, "th"),
      h(20, "VIN"),
      d(),
      c(21, "th"),
      h(22, "Locations"),
      d()()(),
      c(23, "tbody"),
      R(24, tR, 4, 0, "tr", 50)(25, iR, 19, 9, "tr", 58),
      d()()(),
      R(26, rR, 14, 10, "div", 63),
      d()),
    n & 2)
  ) {
    let e = x();
    m(24),
      y("ngIf", !e.EventList || e.EventList.length === 0),
      m(),
      y("ngForOf", e.paginatedEvents),
      m(),
      y("ngIf", e.EventList && e.EventList.length > 0);
  }
}
var Cl = class n {
  constructor(i, e, t, r, o) {
    this.route = i;
    this.http = e;
    this.location = t;
    this.cdr = r;
    this.zone = o;
  }
  UserList = [];
  loading = !1;
  leadList = [];
  TaskList = [];
  EventList = [];
  currentPage = 1;
  itemsPerPage = 10;
  currentEventPage = 1;
  eventItemsPerPage = 10;
  OpportunityList = pe([]);
  paginatedUsers = [];
  dealerData;
  masterSrv = G(Qe);
  showUsersTable = !0;
  showLeadsTable = !1;
  showOpportunityTable = !1;
  showTaskTable = !1;
  showEventTable = !1;
  visiblePageNumbers = [];
  dealer_name = "";
  toastr;
  user;
  apiService;
  paginatedLeads = [];
  opportunityItemsPerPage = 10;
  currentOpportunityPage = 1;
  paginatedOpportunities = [];
  visibleOpportunityPageNumbers = [];
  taskItemsPerPage = 10;
  currentTaskPage = 1;
  paginatedTasks = [];
  visibleTaskPageNumbers = [];
  ngOnInit() {
    console.log("ngOnInit is called"),
      this.handleQueryParams(),
      this.handleRouteData(),
      this.handleDealerId((i) => {
        this.getAllUser(i),
          this.getAllLeads(i),
          this.getAllTasks(i),
          this.getAllEvent(i),
          console.log("API Data:", vy.data),
          console.log("dealerData:", this.dealerData),
          console.log("Fetched UserList:", this.UserList);
      }),
      (this.currentPage = 1),
      this.paginateUsers(),
      this.updateVisiblePages(),
      (this.currentPage = 1),
      this.paginateLeads(),
      this.updateVisibleLeadPages();
  }
  dropdownService = G(Kn);
  selectedOption = this.dropdownService.getSelectedOption();
  handleSelectionChange(i) {
    let e = i.target.value;
    switch (
      (this.dropdownService.setSelectedOption(e),
      console.log("this is option", this.selectedOption()),
      e)
    ) {
      case "leads":
        console.log("dealerData:", this.dealerData),
          this.dealerData
            ? (this.getAllLeads(this.dealerData.data.dealer.dealer_id),
              this.toggleLeadsTable())
            : console.warn("lead data is not available.");
        break;
      case "users":
        this.dealerData
          ? (this.getAllUser(this.dealerData.data.dealer.dealer_id),
            this.toggleUsersTable())
          : console.warn("Dealer data is not available.");
        break;
      case "opportunities":
        console.log(this.dealerData),
          this.toggleOpportunityTable(),
          this.dealerData &&
            this.getAllOpp(this.dealerData.data.dealer.dealer_id);
        break;
      case "events":
        this.toggleEventTable(),
          this.dealerData &&
            this.getAllEvent(this.dealerData.data.dealer.dealer_id);
        break;
      case "tasks":
        this.toggleTasksTable(),
          this.dealerData &&
            this.getAllTasks(this.dealerData.data.dealer.dealer_id);
        break;
    }
  }
  get totalUsers() {
    return this.UserList?.length || 0;
  }
  get totalPages() {
    return Math.ceil(this.totalUsers / this.itemsPerPage);
  }
  paginateUsers() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedUsers = this.UserList.slice(i, e);
  }
  updateVisiblePages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalPages);
    this.visiblePageNumbers = [];
    for (let r = e; r <= t; r++) this.visiblePageNumbers.push(r);
  }
  hasDataForPage(i) {
    return (i - 1) * this.itemsPerPage < this.totalUsers;
  }
  goToPreviousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateUsers(), this.updateVisiblePages());
  }
  goToNextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateUsers(), this.updateVisiblePages());
  }
  goToPage(i) {
    (i - 1) * this.itemsPerPage >= this.totalUsers ||
      ((this.currentPage = i), this.paginateUsers(), this.updateVisiblePages());
  }
  get totalLeads() {
    return this.leadList?.length || 0;
  }
  get totalLeadPages() {
    return Math.ceil(this.totalLeads / this.itemsPerPage);
  }
  paginateLeads() {
    if (!this.leadList || this.leadList.length === 0) {
      this.paginatedLeads = [];
      return;
    }
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    (this.paginatedLeads = this.leadList.slice(i, e)),
      console.log(
        `Paginating Leads | Page: ${this.currentPage}, Showing: ${
          i + 1
        } to ${Math.min(e, this.leadList.length)} of ${this.leadList.length}`
      ),
      console.table(this.paginatedLeads);
  }
  updateVisibleLeadPages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalLeadPages);
    this.visiblePageNumbers = [];
    for (let r = e; r <= t; r++) this.visiblePageNumbers.push(r);
  }
  goToLeadPage(i) {
    (this.currentPage = i), this.paginateLeads(), this.updateVisibleLeadPages();
  }
  goToPreviousLeadPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  goToNextLeadPage() {
    this.currentPage < this.totalLeadPages &&
      (this.currentPage++, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  get totalOpportunities() {
    return this.OpportunityList?.length || 0;
  }
  get totalOpportunityPages() {
    return Math.ceil(this.totalOpportunities / this.opportunityItemsPerPage);
  }
  paginateOpportunities() {
    let i = (this.currentOpportunityPage - 1) * this.opportunityItemsPerPage,
      e = i + this.opportunityItemsPerPage,
      t = this.OpportunityList();
    this.paginatedOpportunities = t.slice(i, e);
  }
  getOpportunityRangeEnd() {
    let i = this.currentOpportunityPage * this.opportunityItemsPerPage;
    return i > this.totalOpportunities ? this.totalOpportunities : i;
  }
  updateVisibleOpportunityPages() {
    let e = Math.floor((this.currentOpportunityPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalOpportunityPages);
    this.visibleOpportunityPageNumbers = [];
    for (let r = e; r <= t; r++) this.visibleOpportunityPageNumbers.push(r);
  }
  goToOpportunityPage(i) {
    (this.currentOpportunityPage = i),
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages();
  }
  goToPreviousOpportunityPage() {
    this.currentOpportunityPage > 1 &&
      (this.currentOpportunityPage--,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  goToNextOpportunityPage() {
    this.currentOpportunityPage < this.totalOpportunityPages &&
      (this.currentOpportunityPage++,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  get totalTasks() {
    return this.TaskList?.length || 0;
  }
  get totalTaskPages() {
    return Math.ceil(this.totalTasks / this.taskItemsPerPage);
  }
  paginateTasks() {
    let i = (this.currentTaskPage - 1) * this.taskItemsPerPage,
      e = i + this.taskItemsPerPage;
    this.paginatedTasks = this.TaskList.slice(i, e);
  }
  getTaskRangeEnd() {
    let i = this.currentTaskPage * this.taskItemsPerPage;
    return i > this.totalTasks ? this.totalTasks : i;
  }
  updateVisibleTaskPages() {
    let e = Math.floor((this.currentTaskPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalTaskPages);
    this.visibleTaskPageNumbers = [];
    for (let r = e; r <= t; r++) this.visibleTaskPageNumbers.push(r);
  }
  goToPreviousTaskPage() {
    this.currentTaskPage > 1 &&
      (this.currentTaskPage--,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToNextTaskPage() {
    this.currentTaskPage < this.totalTaskPages &&
      (this.currentTaskPage++,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToTaskPage(i) {
    (this.currentTaskPage = i),
      this.paginateTasks(),
      this.updateVisibleTaskPages();
  }
  getRangeEnd() {
    return Math.min(this.currentPage * this.itemsPerPage, this.totalUsers);
  }
  get totalEvents() {
    return this.EventList ? this.EventList.length : 0;
  }
  get paginatedEvents() {
    if (!this.EventList || this.EventList.length === 0) return [];
    let i = (this.currentEventPage - 1) * this.eventItemsPerPage,
      e = i + this.eventItemsPerPage;
    return this.EventList.slice(i, e);
  }
  get totalEventPages() {
    return Math.ceil(this.totalEvents / this.eventItemsPerPage);
  }
  getEventsRangeEnd() {
    let i = this.currentEventPage * this.eventItemsPerPage;
    return i > this.totalEvents ? this.totalEvents : i;
  }
  get visibleEventPageNumbers() {
    let i = this.totalEventPages,
      e = this.currentEventPage,
      t = 5,
      r = Math.floor(t / 2);
    if (i === 0) return [];
    let o = Math.max(1, e - r),
      a = Math.min(i, o + t - 1);
    a - o < t - 1 && (o = Math.max(1, a - t + 1));
    let l = [];
    for (let u = o; u <= a; u++) l.push(u);
    return l;
  }
  goToPreviousEventPage() {
    this.currentEventPage > 1 && this.currentEventPage--;
  }
  goToNextEventPage() {
    this.currentEventPage < this.totalEventPages && this.currentEventPage++;
  }
  goToEventPage(i) {
    i >= 1 && i <= this.totalEventPages && (this.currentEventPage = i);
  }
  toggleUsersTable() {
    (this.showLeadsTable = !1),
      (this.showUsersTable = !0),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleTasksTable() {
    (this.showTaskTable = !0),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showOpportunityTable = !1),
      (this.showEventTable = !1);
  }
  toggleLeadsTable() {
    (this.showLeadsTable = !0),
      (this.showUsersTable = !1),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleOpportunityTable() {
    (this.showOpportunityTable = !0),
      (this.showEventTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  toggleEventTable() {
    (this.showEventTable = !0),
      (this.showOpportunityTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  ngAfterViewInit() {
    console.log("ngOnInit is called"),
      console.log("hello"),
      console.log(typeof $.fn.DataTable),
      this.initializeDataTable();
  }
  initializeDataTable() {
    setTimeout(() => {
      let i = $("#example5").DataTable();
      i && i.destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 100);
  }
  handleQueryParams() {
    this.route.queryParams.subscribe((i) => {
      (this.dealer_name = i.dealer_name),
        console.log("Dealer Name : ", this.dealer_name);
    });
  }
  handleRouteData() {
    this.route.data.subscribe((i) => {
      if (((this.dealerData = i.dealerData), this.dealerData)) {
        let e = this.dealerData.data.dealer.dealer_id;
        this.getAllUser(e);
      } else console.log("Dealer Data not available from resolver");
    });
  }
  handleDealerId(i) {
    this.route.paramMap.subscribe((e) => {
      let t = e.get("dealer_id");
      t
        ? i(t)
        : this.dealerData ||
          console.error("Dealer ID not found in the URL and no resolver data.");
    });
  }
  getAllUser(i) {
    console.log("Calling API with dealerId:", i),
      this.masterSrv.getAllUser(i).subscribe({
        next: (e) => {
          console.log("\u2705 Full API Response:", e),
            console.log("Fetched Users:", e.data),
            e.data && Array.isArray(e.data) && e.data.length > 0
              ? ((this.UserList = e.data),
                (this.currentPage = 1),
                this.paginateUsers(),
                this.updateVisiblePages(),
                console.log("Users List:", this.UserList),
                (this.loading = !1))
              : (console.warn("No users found"),
                (this.UserList = []),
                this.paginateUsers(),
                this.updateVisiblePages()),
            this.zone.run(() => {
              Array.isArray(this.UserList)
                ? (console.log("\u2705 Assigned UserList:", this.UserList),
                  this.cdr.detectChanges(),
                  setTimeout(() => {
                    this.initializeDataTable();
                  }, 500))
                : (console.warn("\u26A0\uFE0F Invalid API Response Format:", e),
                  (this.UserList = []));
            });
        },
        error: (e) => {
          console.error("\u274C API Error:", e),
            (this.UserList = []),
            this.paginateUsers(),
            this.updateVisiblePages(),
            this.cdr.detectChanges();
        },
      });
  }
  reinitializeDataTable() {
    setTimeout(() => {
      $("#example5").DataTable().clear().destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 200);
  }
  getAllLeads(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllLead(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.leadList = e.data),
              console.log("Leads List:", this.leadList),
              (this.currentPage = 1),
              this.paginateLeads(),
              this.updateVisibleLeadPages())
            : (console.warn("No leads found"),
              (this.leadList = []),
              (this.paginatedLeads = []),
              (this.visiblePageNumbers = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e),
          (this.leadList = []),
          (this.paginatedLeads = []),
          (this.visiblePageNumbers = []);
      },
    });
  }
  getAllEvent(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getEventsAll(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.EventList = e.data),
              console.log("Event List:", this.EventList))
            : (console.warn("No events found"), (this.EventList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.EventList = []);
      },
    });
  }
  getAllTasks(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllTask(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.TaskList = e.data),
              console.log("Task List:", this.TaskList))
            : (console.warn("No tasks found"), (this.TaskList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.TaskList = []);
      },
    });
  }
  getAllOpp(i) {
    this.masterSrv.getAllOpportunities(i).subscribe({
      next: (e) => {
        this.OpportunityList.set(e), console.log("Leads data fetched:", e);
      },
      error: (e) => {
        alert(e.message || "An error occurred while fetching leads.");
      },
    });
  }
  router = G(Mt);
  logUserId(i) {
    console.log("Navigating to user with ID:", i),
      this.dealerData?.data.dealer?.dealer_id
        ? localStorage.setItem(
            "previousRoute",
            this.dealerData.data.dealer.dealer_id
          )
        : console.warn("dealer_id is missing, previousRoute not stored.");
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Zt), H(Bt), H(dr), H(Ke), H(Te));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-single-dealer"]],
    standalone: !0,
    features: [ce],
    decls: 46,
    vars: 11,
    consts: [
      ["noEntries", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [2, "cursor", "auto", "color", "#222fb9", 3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [2, "font-weight", "700 !important", "color", "black"],
      [
        "class",
        "col-xl-9",
        "style",
        `
        margin-top: 2em !important;
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
      `,
        4,
        "ngIf",
      ],
      [
        1,
        "col-xl-9",
        2,
        "margin-top",
        "2em !important",
        "display",
        "flex",
        "justify-content",
        "space-between",
        "align-items",
        "center",
        "width",
        "100%",
      ],
      [1, "card"],
      [
        1,
        "card-body",
        "py-9",
        "py-md-2",
        2,
        "margin-left",
        "0.2rem !important",
      ],
      [1, "row", "align-items-start"],
      [1, "mb-md-0"],
      [1, "media", "align-items-end"],
      [1, "media-body"],
      [
        1,
        "mb-0",
        2,
        "background-color",
        "none",
        "text-transform",
        "capitalize",
      ],
      [1, "form-group", 2, "margin-inline", "1em"],
      [1, "form-control", "form-control-lg", 3, "change", "value"],
      ["selected", "", "value", "users", 1, "drop"],
      ["value", "leads", 1, "drop"],
      ["value", "opportunities", 1, "drop"],
      ["value", "tasks", 1, "drop"],
      ["value", "events", 1, "drop"],
      [1, "row"],
      [1, "col-lg-12"],
      ["class", "p-3 bg-white rounded shadow-sm", 4, "ngIf"],
      [1, "media", "align-items-center"],
      [1, "media-body", "ml-1"],
      [1, "mb-0", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-22"],
      [1, "span"],
      [1, "media", "align-items-center", 3, "click"],
      [1, "media-body", "ml-1", 3, "click"],
      [1, "p-3", "bg-white", "rounded", "shadow-sm"],
      ["class", "table-responsive", 4, "ngIf"],
      [1, "row", "align-items-center", "mt-3"],
      [1, "col-md-6"],
      [1, "mb-0", "text-muted"],
      [4, "ngIf", "ngIfElse"],
      ["aria-label", "Page navigation"],
      [1, "pagination", "justify-content-end", "mb-0"],
      [1, "page-item"],
      [1, "page-link", 3, "click", "disabled"],
      ["class", "page-item", 3, "active", "disabled", 4, "ngFor", "ngForOf"],
      [1, "table-responsive"],
      [
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      ["colspan", "7"],
      [2, "color", "#555", "font-weight", "500", "text-align", "center"],
      [1, "table-responsive", 2, "overflow-x", "auto", "width", "100%"],
      [1, "table", "mb-4", "dataTablesCard", "fs-14"],
      ["style", "text-align: left;", 4, "ngFor", "ngForOf"],
      ["colspan", "12"],
      ["style", "text-align:left", 4, "ngFor", "ngForOf"],
      ["class", "mb-0 text-muted", 4, "ngIf"],
      [3, "click", "routerLink"],
      [1, ""],
      [1, "fa", "fa-eye"],
      ["class", "row align-items-center mt-3", 4, "ngIf"],
      ["class", "page-item", 3, "active", 4, "ngFor", "ngForOf"],
      [1, "page-link", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Users"),
        d()(),
        c(7, "li", 5)(8, "a", 7),
        h(9, "Dealer"),
        d()(),
        c(10, "li", 8)(11, "a", 9),
        h(12),
        d()()()(),
        R(13, PA, 54, 7, "div", 10),
        c(14, "div", 11)(15, "div", 12)(16, "div", 13)(17, "div", 14)(
          18,
          "div",
          15
        )(19, "div", 16)(20, "div", 17)(21, "h3", 18),
        h(22),
        d()()()()()()(),
        c(23, "div", 19)(24, "select", 20),
        N("change", function (o) {
          return t.handleSelectionChange(o);
        }),
        c(25, "option", 21),
        h(26, "Users"),
        d(),
        c(27, "option", 22),
        h(28, "Leads"),
        d(),
        c(29, "option", 23),
        h(30, "Opportunities"),
        d(),
        c(31, "option", 24),
        h(32, "Tasks"),
        d(),
        c(33, "option", 25),
        h(34, "Events"),
        d()()()(),
        c(35, "div", 26)(36, "div", 27),
        R(37, VA, 18, 10, "div", 28),
        c(38, "div", 27),
        R(39, UA, 58, 12, "div", 28),
        d(),
        c(40, "div", 27),
        R(41, qA, 60, 11, "div", 28),
        c(42, "div", 27),
        R(43, eR, 40, 11, "div", 28),
        c(44, "div", 27),
        R(45, oR, 27, 3, "div", 28),
        d()()()()()()()),
        e & 2 &&
          (m(8),
          y("routerLink", pi(10, OA)),
          m(4),
          ee(
            "",
            t.dealerData == null ||
              t.dealerData.data == null ||
              t.dealerData.data.dealer == null
              ? null
              : t.dealerData.data.dealer.dealer_name,
            " "
          ),
          m(),
          y("ngIf", t.dealerData),
          m(9),
          ee(" ", t.selectedOption(), " "),
          m(2),
          y("value", t.selectedOption()),
          m(13),
          y("ngIf", t.selectedOption() === "users"),
          m(2),
          y("ngIf", t.selectedOption() === "leads"),
          m(2),
          y("ngIf", t.selectedOption() === "opportunities"),
          m(2),
          y("ngIf", t.selectedOption() === "tasks"),
          m(2),
          y("ngIf", t.selectedOption() === "events"));
    },
    dependencies: [tt, ii, ni, Ae, At, Xe, Si, Jt],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{flex-grow:1}.custom-scroll-wrapper[_ngcontent-%COMP%]{overflow-x:auto;display:block;width:100%}.table-scroll-container[_ngcontent-%COMP%]{overflow-x:auto;width:100%}.table-wrapper[_ngcontent-%COMP%]{border:1px solid #ccc;border-radius:20px;background-color:#fff}.bg-white[_ngcontent-%COMP%]{background-color:#fff!important}.shadow-sm[_ngcontent-%COMP%]{box-shadow:0 .125rem .25rem #00000013}.rounded[_ngcontent-%COMP%]{border-radius:.5rem}.table-responsive[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}",
    ],
  });
};
var aR = ["inputElement"];
function sR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "form", null, 0),
      z(2, "img", 9),
      c(3, "h2", 10),
      h(4, "Login to Smart Assist"),
      d(),
      c(5, "div", 11)(6, "div", 12),
      z(7, "i", 13),
      d(),
      c(8, "div", 14)(9, "h5", 15),
      h(10, "Email"),
      d(),
      c(11, "input", 16, 1),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x();
        return ut(o.loginObj.email, r) || (o.loginObj.email = r), I(r);
      }),
      d()()(),
      c(13, "div", 17)(14, "div", 12),
      z(15, "i", 18),
      d(),
      c(16, "div", 14)(17, "h5"),
      h(18, "Password"),
      d(),
      c(19, "input", 19, 1),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x();
        return ut(o.loginObj.password, r) || (o.loginObj.password = r), I(r);
      }),
      d(),
      c(21, "i", 20),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.togglePassword("password"));
      }),
      d()()(),
      c(22, "a", 21),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.showVerifyEmail());
      }),
      h(23, "Forgot Password?"),
      d(),
      c(24, "input", 22),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.onLogin());
      }),
      d()();
  }
  if (n & 2) {
    let e = x();
    m(11),
      dt("ngModel", e.loginObj.email),
      m(8),
      dt("ngModel", e.loginObj.password),
      y("type", e.showPassword ? "text" : "password"),
      m(2),
      Be(
        "icon11 absolute right-8 top-1/2 transform -translate-y-1/2 cursor-pointer " +
          (e.showPassword ? "fas fa-eye-slash eye" : "fas fa-eye eye")
      );
  }
}
function lR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "form", null, 2)(2, "div", 23),
      z(3, "img", 9),
      d(),
      c(4, "h2", 10),
      h(5, " Verify Email "),
      d(),
      c(6, "div", 24)(7, "div", 12),
      z(8, "i", 25),
      d(),
      c(9, "div", 14)(10, "input", 26, 3),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x();
        return ut(o.verifyObj.email, r) || (o.verifyObj.email = r), I(r);
      }),
      d()()(),
      c(12, "a", 27),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.backToLogin());
      }),
      h(13, "Back to Login"),
      d(),
      c(14, "input", 28),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.onVerifyEmail());
      }),
      d()();
  }
  if (n & 2) {
    let e = x();
    m(10), dt("ngModel", e.verifyObj.email);
  }
}
function cR(n, i) {
  if ((n & 1 && (c(0, "div", 37), h(1), d()), n & 2)) {
    let e = x(2);
    m(), ee(" Time remaining: ", e.countdown, "s ");
  }
}
function dR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "a", 38),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.onVerifyEmail());
      }),
      h(1, "Resend OTP"),
      d();
  }
}
function uR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "form", null, 4)(2, "div", 23),
      z(3, "img", 9),
      d(),
      c(4, "h2", 10),
      h(5, " Verify OTP "),
      d(),
      R(6, cR, 2, 1, "div", 29),
      c(7, "div", 11)(8, "div", 12),
      z(9, "i", 30),
      d(),
      c(10, "div", 31)(11, "input", 32, 5),
      N("input", function (r) {
        P(e);
        let o = x();
        return I(o.onOtpInput(r));
      }),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x();
        return ut(o.loginObj.otp, r) || (o.loginObj.otp = r), I(r);
      }),
      d()()(),
      c(13, "div", 33)(14, "a", 34),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.backToLogin());
      }),
      h(15, "Back to Login"),
      d(),
      R(16, dR, 2, 0, "a", 35),
      d(),
      c(17, "input", 36),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.onVerifyOtp());
      }),
      d()();
  }
  if (n & 2) {
    let e = _t(1),
      t = x();
    m(6),
      y("ngIf", t.countdown > 0),
      m(5),
      dt("ngModel", t.loginObj.otp),
      m(5),
      y("ngIf", t.countdown === 0),
      m(),
      y("disabled", e.invalid);
  }
}
function hR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "form")(1, "h2", 39),
      h(2, "Set New Password"),
      d(),
      c(3, "div", 17)(4, "div", 12),
      z(5, "i", 18),
      d(),
      c(6, "div", 14)(7, "h5", 40),
      h(8, " New Password "),
      d(),
      c(9, "input", 41, 1),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x();
        return ut(o.loginObj.newPwd, r) || (o.loginObj.newPwd = r), I(r);
      }),
      d(),
      c(11, "i", 42),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.togglePassword("password"));
      }),
      d()()(),
      c(12, "div", 17)(13, "div", 43),
      z(14, "i", 18),
      d(),
      c(15, "div", 14)(16, "h5", 40),
      h(17, " Confirm Password "),
      d(),
      c(18, "input", 44, 1),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x();
        return (
          ut(o.loginObj.confirmPassword, r) || (o.loginObj.confirmPassword = r),
          I(r)
        );
      }),
      d(),
      c(20, "i", 42),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.togglePassword("confirmPassword"));
      }),
      d()()(),
      c(21, "div", 45)(22, "a", 34),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.backToLogin());
      }),
      h(23, "Back to Login"),
      d()(),
      c(24, "input", 46),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.onSetNewPassword());
      }),
      d()();
  }
  if (n & 2) {
    let e = x();
    m(9),
      dt("ngModel", e.loginObj.newPwd),
      y("type", e.showPassword ? "text" : "password"),
      m(2),
      Be(e.showPassword ? "fas fa-eye-slash" : "fas fa-eye"),
      m(7),
      dt("ngModel", e.loginObj.confirmPassword),
      y("type", e.showConfirmPassword ? "text" : "password"),
      m(2),
      Be(e.showConfirmPassword ? "fas fa-eye-slash" : "fas fa-eye");
  }
}
var wl = class n {
  inputElements;
  loginObj = {
    email: "",
    password: "",
    otp: 0,
    confirmPassword: "",
    newPwd: "",
  };
  verifyObj = { email: "" };
  currentStep = "login";
  showPassword = !1;
  showConfirmPassword = !1;
  countdown = 0;
  countdownInterval;
  API_BASE_URL = "https://uat.smartassistapp.in/api/";
  SESSION_TIMEOUT = 60 * 60 * 1e3;
  http = G(Bt);
  router = G(Mt);
  toastr = G(fi);
  renderer = G(hi);
  constructor() {}
  ngAfterViewInit() {
    this.inputElements &&
      this.inputElements.toArray().forEach((i) => {
        this.renderer.listen(
          i.nativeElement,
          "focus",
          this.addClass.bind(this)
        ),
          this.renderer.listen(
            i.nativeElement,
            "blur",
            this.removeClass.bind(this)
          );
      });
  }
  showVerifyEmail() {
    (this.currentStep = "verifyEmail"), this.resetFormExceptEmail();
  }
  showVerifyOtp() {
    this.currentStep = "verifyOtp";
  }
  showNewPassword() {
    this.currentStep = "newPassword";
  }
  backToLogin() {
    (this.currentStep = "login"),
      window.location.reload(),
      this.resetForm(),
      this.countdownInterval && clearInterval(this.countdownInterval);
  }
  resetForm() {
    this.loginObj = {
      email: "",
      newPwd: "",
      otp: null,
      confirmPassword: "",
      password: "",
    };
  }
  resetFormExceptEmail() {
    let i = this.loginObj.email;
    this.resetForm(), (this.loginObj.email = i);
  }
  togglePassword(i) {
    if (i === "password") {
      this.showPassword = !this.showPassword;
      let e = document.getElementById("passwordInput");
      if (e && /iPad|iPhone|iPod/.test(navigator.userAgent)) {
        let t = e.parentElement;
        if (t) {
          let r = e.cloneNode(!0);
          (r.type = this.showPassword ? "text" : "password"),
            (r.value = e.value),
            t.replaceChild(r, e);
        }
      }
    } else this.showConfirmPassword = !this.showConfirmPassword;
  }
  validateLoginInput() {
    return !this.loginObj.email || !this.loginObj.password
      ? (this.toastr.error(
          "Please enter valid email and password",
          "Validation Error"
        ),
        !1)
      : this.isValidEmail(this.loginObj.email)
      ? !0
      : (this.toastr.error("Please enter a valid password", "Validation Error"),
        !1);
  }
  validateNewPassword() {
    return !this.loginObj.newPwd || !this.loginObj.confirmPassword
      ? (this.toastr.error("Please enter both passwords", "Validation Error"),
        !1)
      : this.loginObj.newPwd !== this.loginObj.confirmPassword
      ? (this.toastr.error("Passwords do not match", "Validation Error"), !1)
      : !0;
  }
  isValidEmail(i) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(i);
  }
  onLogin() {
    this.validateLoginInput() &&
      this.http
        .post(`${this.API_BASE_URL}login/super-admin`, this.loginObj)
        .subscribe({
          next: (i) => {
            i.status === 200 && i.data?.token
              ? this.handleSuccessfulLogin(i.data.token)
              : this.toastr.error(i.message || "Invalid credentials", "Error");
          },
          error: (i) => {
            console.error("Login error:", i);
            let e = i.error?.message || "An error occurred";
            this.toastr.error(e, "Error");
          },
        });
  }
  onVerifyEmail() {
    if (!this.verifyObj.email || !this.isValidEmail(this.verifyObj.email)) {
      this.toastr.error(
        "Please enter a valid email address",
        "Validation Error"
      );
      return;
    }
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-email`, {
        email: this.verifyObj.email,
      })
      .subscribe({
        next: () => {
          this.toastr.success("OTP sent to your email", "Success"),
            this.showVerifyOtp(),
            this.startCountdown();
        },
        error: (i) => {
          console.error("Login error:", i);
          let e = i.error?.message || "An error occurred";
          this.toastr.error(e, "Error");
        },
      });
  }
  onVerifyOtp() {
    if (this.loginObj.otp === null || isNaN(Number(this.loginObj.otp))) {
      this.toastr.error("Please enter a valid OTP", "Validation Error");
      return;
    }
    let i = { otp: Number(this.loginObj.otp), email: this.verifyObj.email };
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-otp`, i)
      .subscribe({
        next: () => {
          this.toastr.success("OTP verified successfully", "Success"),
            this.showNewPassword();
        },
        error: (e) => {
          console.error("OTP verification error:", e);
          let t = e.error.error;
          this.toastr.error(t, "Error");
        },
      });
  }
  onOtpInput(i) {
    let e = i.target,
      t = e.value.replace(/[^0-9]/g, "");
    (this.loginObj.otp = t ? Number(t) : 0), (e.value = t);
  }
  onSetNewPassword() {
    if (!this.validateNewPassword()) return;
    let i = {
      email: this.verifyObj.email,
      newPwd: this.loginObj.newPwd,
      confirmPwd: this.loginObj.confirmPassword,
    };
    this.http
      .put(`${this.API_BASE_URL}login/s-admin/forgot-pwd/new-pwd`, i)
      .subscribe({
        next: (e) => {
          this.toastr.success("Password reset successfully", "Success"),
            window.location.reload(),
            this.backToLogin();
        },
        error: (e) => {
          if ((console.error("Password reset error:", e), e.status === 400))
            this.toastr.error(
              "Invalid request. Please check your inputs.",
              "Error"
            );
          else if (e.status === 404)
            this.toastr.error("User not found", "Error");
          else {
            let t = e.error.error;
            this.toastr.error(t, "Error");
          }
        },
        complete: () => {
          (this.loginObj.newPwd = ""), (this.loginObj.confirmPassword = "");
        },
      });
  }
  handleSuccessfulLogin(i) {
    console.log("Storing token in localStorage:", i),
      localStorage.setItem("token", i),
      console.log("Navigating to /admin/dashboard..."),
      this.router
        .navigate(["/Admin/dashboard"])
        .then(() => {
          window.location.reload(),
            console.log("Navigation successful."),
            this.toastr.success("Login Successful", "Success");
        })
        .catch((e) => {
          console.error("Navigation error:", e),
            this.toastr.error("Failed to navigate to dashboard", "Error");
        }),
      console.log("Setting up auto logout..."),
      this.setupAutoLogout();
  }
  setupAutoLogout() {
    setTimeout(() => {
      localStorage.removeItem("token"),
        this.router
          .navigateByUrl("/login")
          .then(() => {
            this.toastr.info(
              "Session expired. Please log in again.",
              "Session Expired"
            );
          })
          .catch((i) => {
            console.error("Logout navigation error:", i);
          });
    }, this.SESSION_TIMEOUT);
  }
  startCountdown() {
    (this.countdown = 5 * 60),
      this.countdownInterval && clearInterval(this.countdownInterval),
      (this.countdownInterval = setInterval(() => {
        this.countdown--,
          this.countdown === 0 && clearInterval(this.countdownInterval);
      }, 1e3));
  }
  addClass(i) {
    let e = i.target.parentNode?.parentNode;
    e && e.classList.add("focus");
  }
  removeClass(i) {
    let e = i.target.parentNode?.parentNode;
    e && i.target.value === "" && e.classList.remove("focus");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-login-1"]],
    viewQuery: function (e, t) {
      if ((e & 1 && yt(aR, 5), e & 2)) {
        let r;
        ot((r = at())) && (t.inputElements = r);
      }
    },
    standalone: !0,
    features: [ce],
    decls: 6,
    vars: 4,
    consts: [
      ["loginForm", "ngForm"],
      ["inputElement", ""],
      ["verifyForm", "ngForm"],
      ["dealerEmail", "ngModel"],
      ["otpForm", "ngForm"],
      ["otp", "ngModel"],
      [1, "custom-container"],
      [1, "login-content"],
      [4, "ngIf"],
      [
        "src",
        "../../../assets/admin-img/jlr logo.svg",
        "alt",
        "Avatar Image",
        1,
        "mx-auto",
        "inline-flex",
        "items-center",
        "justify-center",
      ],
      [
        1,
        "title",
        2,
        "color",
        "#222fb9",
        "font-size",
        "20px",
        "text-transform",
        "capitalize",
        "margin-top",
        "15px",
      ],
      [1, "input-div", "one"],
      [1, "i", "mr-3"],
      [1, "fas", "fa-user"],
      [1, "div", "relative"],
      [1, "absolute", "left-2", "top-1", "text-gray-500", "text-sm"],
      [
        "type",
        "text",
        "name",
        "username",
        "required",
        "",
        1,
        "forms-control",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "input-div", "pass"],
      [1, "fas", "fa-lock"],
      [
        "id",
        "passwordInput",
        "name",
        "password",
        "required",
        "",
        "autocomplete",
        "off",
        "autocorrect",
        "off",
        "spellcheck",
        "false",
        1,
        "inputt",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        2,
        "padding-left",
        "1px !important",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [3, "click"],
      ["href", "javascript:void(0)", 1, "forgot-password", 3, "click"],
      ["type", "submit", "value", "Login", 1, "btn", 3, "click"],
      [1, "flex", "justify-center"],
      [1, "input-div"],
      [1, "fas", "fa-envelope"],
      [
        "name",
        "dealer_email",
        "type",
        "email",
        "required",
        "",
        "email",
        "",
        "placeholder",
        "E-mail",
        3,
        "ngModelChange",
        "ngModel",
      ],
      ["href", "javascript:void(0)", 1, "back-to-login", 3, "click"],
      ["type", "submit", "value", "Send OTP", 1, "btn", 3, "click"],
      ["class", "text-center mb-4", 4, "ngIf"],
      [1, "fas", "fa-key", "color"],
      [1, "relative", "z-0", "w-full", "mb-1", "group", "flex", "flex-col"],
      [
        "type",
        "text",
        "name",
        "otp",
        "required",
        "",
        "placeholder",
        "OTP",
        1,
        "",
        3,
        "input",
        "ngModelChange",
        "ngModel",
      ],
      [1, "flex", "justify-end", "text-end", "w-full"],
      [1, "back-to-login", 2, "cursor", "pointer", 3, "click"],
      [
        "style",
        "cursor: pointer",
        "class",
        "resend-otp",
        3,
        "click",
        4,
        "ngIf",
      ],
      [
        "type",
        "submit",
        "value",
        "Verify OTP",
        1,
        "btn",
        3,
        "click",
        "disabled",
      ],
      [1, "text-center", "mb-4"],
      [1, "resend-otp", 2, "cursor", "pointer", 3, "click"],
      [1, "title"],
      [
        1,
        "absolute",
        "left-4",
        "top-2",
        "text-gray-500",
        "text-sm",
        "transition-all",
        "duration-200",
      ],
      [
        "name",
        "password",
        "required",
        "",
        1,
        "forms-control",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        "peer",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [
        1,
        "icon11",
        "absolute",
        "right-8",
        "top-1/2",
        "transform",
        "-translate-y-1/2",
        "cursor-pointer",
        3,
        "click",
      ],
      [1, "i"],
      [
        "name",
        "confirm-password",
        "required",
        "",
        1,
        "forms-control",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        "peer",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [1, "flex", "justify-between", "w-full"],
      ["type", "submit", "value", "Reset Password", 1, "btn", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 6)(1, "div", 7),
        R(2, sR, 25, 5, "form", 8)(3, lR, 15, 1, "form", 8)(
          4,
          uR,
          18,
          4,
          "form",
          8
        )(5, hR, 25, 8, "form", 8),
        d()()),
        e & 2 &&
          (m(2),
          y("ngIf", t.currentStep === "login"),
          m(),
          y("ngIf", t.currentStep === "verifyEmail"),
          m(),
          y("ngIf", t.currentStep === "verifyOtp"),
          m(),
          y("ngIf", t.currentStep === "newPassword"));
    },
    dependencies: [Ae, Xe, tt, Br, ei, ti, Bi, fr, bp, _i, gp, sc],
    styles: [
      '*[_ngcontent-%COMP%]{padding:0;margin:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;overflow:hidden}.inputt[_ngcontent-%COMP%]{width:90%!important}.fas[_ngcontent-%COMP%]{color:#3b86e9!important}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%;margin:0;padding:0}.wave[_ngcontent-%COMP%]{position:fixed;bottom:0;left:0;height:100%;z-index:-1}.container[_ngcontent-%COMP%]{width:100%;grid-gap:7rem;padding:0 2rem}.img[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center}.login-content[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;text-align:center;height:97vh}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:500px}form[_ngcontent-%COMP%]{width:360px}.login-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:15px 0;color:#333;text-transform:uppercase;font-size:2.9rem}.login-content[_ngcontent-%COMP%]   .input-div[_ngcontent-%COMP%]{position:relative;display:grid;grid-template-columns:7% 93%;margin:25px 0;padding:5px 0;border-bottom:2px solid #d9d9d9}.login-content[_ngcontent-%COMP%]   .input-div.one[_ngcontent-%COMP%]{margin-top:0}.i[_ngcontent-%COMP%]{color:#d9d9d9;display:flex;justify-content:center;align-items:center}.i[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{transition:.3s}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;height:45px}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{position:absolute;left:10px;top:50%;transform:translateY(-50%);color:#999;font-size:18px;transition:.3s}#pass[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{left:-15px!important}.input-div[_ngcontent-%COMP%]:before, .input-div[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-2px;width:0%;height:2px;background-color:#3b86e9;transition:.4s}.input-div[_ngcontent-%COMP%]:before{right:50%}.input-div[_ngcontent-%COMP%]:after{left:50%}.input-div.focus[_ngcontent-%COMP%]:before, .input-div.focus[_ngcontent-%COMP%]:after{width:50%}.input-div.focus[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{top:-5px;font-size:15px}input.forms-control[_ngcontent-%COMP%]{background-color:transparent!important;box-shadow:none!important;transition:background-color 5000s ease-in-out 0s}input[_ngcontent-%COMP%]:-webkit-autofill, input[_ngcontent-%COMP%]:-webkit-autofill:hover, input[_ngcontent-%COMP%]:-webkit-autofill:focus{box-shadow:none!important;color:#000!important;transition:background-color 5000s ease-in-out 0s}.fas[_ngcontent-%COMP%]{color:#222fb9!important}.input-div.focus[_ngcontent-%COMP%] > .i[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{color:#5298ee}.input-div[_ngcontent-%COMP%]   .focus[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{top:-5px;font-size:15px;color:#7e7e7e}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > input[_ngcontent-%COMP%]{position:absolute;left:0;top:0;width:100%;height:100%;outline:none;background:none;font-size:1.2rem;border:none;color:#555;font-family:poppins,sans-serif}.password-toggle[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);cursor:pointer;z-index:10}.width-input[_ngcontent-%COMP%]{width:90%!important}.icon11[_ngcontent-%COMP%]{margin-left:18em;margin-top:.7em}.password-toggle[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#999;font-size:16px}.password-toggle[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{color:#666}.input-div.pass[_ngcontent-%COMP%], .input-div.verify[_ngcontent-%COMP%]{margin-bottom:4px}a[_ngcontent-%COMP%]{display:block;text-align:right;text-decoration:none;color:#999;font-size:.9rem;transition:.3s}a[_ngcontent-%COMP%]:hover{color:#3b86e9}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#3b86e9,#5496e7,#5298ee);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}@media screen and (max-width: 1050px){.container[_ngcontent-%COMP%]{grid-gap:5rem}}@media screen and (max-width: 1000px){form[_ngcontent-%COMP%]{width:290px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2.4rem;margin:8px 0}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:400px}}@media screen and (max-width: 900px){.container[_ngcontent-%COMP%]{grid-template-columns:1fr}.img[_ngcontent-%COMP%], .wave[_ngcontent-%COMP%]{display:none}.login-content[_ngcontent-%COMP%]{justify-content:center}}.eye[_ngcontent-%COMP%]{color:#b9b8b8!important}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (min-width: 1024px) and (max-width: 1366px){.img[_ngcontent-%COMP%]{margin-top:-300px}}@media (min-width: 768px) and (max-width: 1023px){.login-content[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);margin-top:0;justify-content:center}}@media (max-width: 768px){.custom-container[_ngcontent-%COMP%]{margin-left:0!important}}input[type=password][_ngcontent-%COMP%]::-ms-reveal, input[type=password][_ngcontent-%COMP%]::-ms-clear{display:none}input[type=password][_ngcontent-%COMP%]::-webkit-password-toggle-button, input[type=password][_ngcontent-%COMP%]::-webkit-textfield-decoration-container{display:none!important}input[type=password][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-decoration, input[type=password][_ngcontent-%COMP%]::-webkit-search-cancel-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-decoration{display:none!important}input[type=password][_ngcontent-%COMP%]{-moz-appearance:textfield}.new-custom[_ngcontent-%COMP%]{display:flex;justify-content:center}.div[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{position:absolute;top:12px;left:10px;font-size:16px;color:#9ca3af;pointer-events:none;transition:all .2s ease}.div[_ngcontent-%COMP%]   h5.floating[_ngcontent-%COMP%]{top:-10px;left:5px;font-size:12px;color:#3b86e9;background:#fff;padding:0 5px;z-index:10}.icon11[_ngcontent-%COMP%]{z-index:10;position:relative;pointer-events:auto;width:24px;height:24px;display:inline-flex;align-items:center;justify-content:center}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#222fb9);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}.btn[_ngcontent-%COMP%]:hover{background-position:right}input[type=password][_ngcontent-%COMP%]{-webkit-text-security:disc}',
    ],
  });
};
function pR(n, i) {
  if ((n & 1 && (c(0, "div", 12), h(1), d()), n & 2)) {
    let e = x().ngIf,
      t = x();
    m(), ee(" ", t.getInitials(e.name), " ");
  }
}
function mR(n, i) {
  if ((n & 1 && z(0, "img", 13), n & 2)) {
    let e = x(2);
    y("src", e.profileImageUrl, eh);
  }
}
function fR(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 6)(1, "div", 7),
      R(2, pR, 2, 1, "div", 8)(3, mR, 1, 1, "ng-template", null, 0, Pt),
      d(),
      c(5, "div", 9)(6, "h5", 10),
      h(7),
      d(),
      c(8, "p", 11),
      h(9),
      d()()()),
    n & 2)
  ) {
    let e = i.ngIf,
      t = _t(4),
      r = x();
    m(2),
      y("ngIf", !r.isCustomProfileImage())("ngIfElse", t),
      m(5),
      B(e.name),
      m(2),
      B(e.email);
  }
}
function gR(n, i) {
  n & 1 && (c(0, "div", 14), h(1, " Loading profile details... "), d());
}
var tu = class n {
  constructor(i, e) {
    this.http = i;
    this.context = e;
  }
  masterSrv = G(Qe);
  profileImageUrl = "/assets/public/images/profile/default.png";
  profile = pe(null);
  ngOnInit() {
    this.context.onSideBarClick$.next({
      role: "profile",
      pageTitle: "Profile Management",
    }),
      this.getProfileData(),
      this.getProfileImage();
  }
  isCustomProfileImage() {
    return this.profileImageUrl !== "/assets/public/images/profile/default.png";
  }
  getProfileData() {
    this.masterSrv.getProfileData().subscribe({
      next: (i) => {
        console.log("Fetched Profile Data:", i), this.profile.set(i.data);
      },
      error: (i) => {
        console.error("Error fetching profile data:", i),
          alert("Failed to fetch profile data.");
      },
    });
  }
  getProfileImage() {
    this.http
      .get("https://uat.smartassistapp.in/api/superAdmin/show-profile")
      .subscribe({
        next: (i) => {
          console.log("Fetched Profile Image:", i),
            i?.status === 200 && i.data?.image_url
              ? (this.profileImageUrl = i.data.image_url)
              : (this.profileImageUrl =
                  "/assets/public/images/profile/default.png");
        },
        error: (i) => {
          console.error("Error fetching profile image:", i),
            (this.profileImageUrl =
              "/assets/public/images/profile/default.png");
        },
      });
  }
  getInitials(i) {
    let e = i.trim().split(" ");
    return e.length === 1
      ? e[0].charAt(0).toUpperCase()
      : (e[0].charAt(0) + e[e.length - 1].charAt(0)).toUpperCase();
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Bt), H(Kn));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-profile"]],
    standalone: !0,
    features: [ce],
    decls: 5,
    vars: 2,
    consts: [
      ["profilePic", ""],
      [1, "container-fluid"],
      [
        1,
        "d-flex",
        "justify-content-center",
        "align-items-center",
        2,
        "min-height",
        "80vh",
      ],
      [1, "card", "rounded-4", "p-4", 2, "width", "100%"],
      ["class", "row g-3 align-items-center", 4, "ngIf"],
      ["class", "text-muted text-center py-3", 4, "ngIf"],
      [1, "row", "g-3", "align-items-center"],
      [1, "col-auto"],
      ["class", "avatar-circle shadow-sm", 4, "ngIf", "ngIfElse"],
      [1, "col"],
      [1, "text-dark", "mb-1", 2, "font-size", "22px"],
      [1, "text-muted", "mb-2", 2, "font-size", "17px"],
      [1, "avatar-circle", "shadow-sm"],
      ["alt", "Profile Photo", 1, "avatar-img", "shadow-sm", 3, "src"],
      [1, "text-muted", "text-center", "py-3"],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3),
        R(3, fR, 10, 4, "div", 4)(4, gR, 2, 0, "div", 5),
        d()()()),
        e & 2 && (m(3), y("ngIf", t.profile()), m(), y("ngIf", !t.profile()));
    },
    dependencies: [Ae, Xe],
    styles: [
      ".avatar-circle[_ngcontent-%COMP%]{width:90px;height:90px;background-color:#dce3fa;color:#3b4cca;font-size:42px;font-weight:600;border-radius:50%;display:flex;align-items:center;justify-content:center;text-transform:uppercase}.avatar-img[_ngcontent-%COMP%]{width:80px;height:80px;border-radius:50%;object-fit:cover}",
    ],
  });
};
var Dl = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.getDealerById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Qe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Sl = class n {
  user_id;
  account_id;
  name;
  email;
  phone;
  user_role;
  password;
  otp_validated;
  otp;
  otp_expiration;
  corporate_id;
  dealer_code;
  dealer_id;
  role_id;
  role_name;
  team_id;
  team_name;
  fname;
  lname;
  team;
  role;
  constructor() {
    (this.user_id = ""),
      (this.account_id = ""),
      (this.name = ""),
      (this.phone = void 0),
      (this.email = ""),
      (this.user_role = ""),
      (this.password = ""),
      (this.otp_validated = ""),
      (this.otp = ""),
      (this.otp_expiration = ""),
      (this.dealer_code = void 0),
      (this.corporate_id = ""),
      (this.dealer_id = ""),
      (this.role_id = ""),
      (this.role_name = ""),
      (this.team_id = ""),
      (this.team_name = ""),
      (this.fname = ""),
      (this.lname = ""),
      (this.role = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var yy = (() => {
  class n {
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = ye({ type: n });
    static ɵinj = ve({ imports: [Ae, On, Vi, On] });
  }
  return n;
})();
var KH = new we("RowDef"),
  QH = new we("DatatableComponentToken");
var xy = (() => {
  class n {
    static forRoot(e) {
      return {
        ngModule: n,
        providers: [{ provide: "configuration", useValue: e }],
      };
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
var Aa = class n {
  confirmationSubject = new Oe();
  confirm(i) {
    let e = window.confirm(i);
    return (
      this.confirmationSubject.next(e), this.confirmationSubject.asObservable()
    );
  }
  showAlert(i, e) {
    let t = document.createElement("div");
    (t.className = `alert alert-${i} alert-dismissible fade show fixed-top m-3`),
      (t.innerHTML = `
      <span class="alert-icon">
        <svg viewBox="0 0 24 24" width="24" height="24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 11 12 14 22 4"></polyline>
        </svg>
      </span>
      <strong>${i.charAt(0).toUpperCase() + i.slice(1)}!</strong> ${e}
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span>&times;</span>
      </button>
    `),
      document.body.appendChild(t),
      setTimeout(() => {
        t.classList.remove("show"), t.remove();
      }, 1e3);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Io = (n) => ({ "is-invalid": n });
function _R(n, i) {
  n & 1 && (c(0, "tr")(1, "td", 45), h(2, "No Users found"), d()());
}
function bR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "tr")(1, "td"),
      h(2),
      d(),
      c(3, "td"),
      h(4),
      d(),
      c(5, "td"),
      h(6),
      d(),
      c(7, "td"),
      h(8),
      d(),
      c(9, "td", 46)(10, "a", 47),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.onEdit(r));
      }),
      z(11, "i", 48),
      d(),
      c(12, "a", 49),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.openDeleteModal(r));
      }),
      z(13, "i", 50),
      d()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x();
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.name),
      m(2),
      B(e.email),
      m(2),
      B(e.user_role);
  }
}
function vR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "li", 51)(1, "a", 41),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.goToPage(r));
      }),
      h(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x();
    ne("active", e === t.currentPage), m(2), B(e);
  }
}
function yR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 52)(1, "div", 53)(2, "div", 54)(3, "div", 55)(4, "h5", 56),
      h(5, "Delete User"),
      d()(),
      c(6, "div", 57),
      h(7, "Are you sure you want to delete this user?"),
      d(),
      c(8, "div", 58)(9, "button", 59),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeDeleteModal());
      }),
      h(10, "Cancel"),
      d(),
      c(11, "button", 60),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.deleteUserId());
      }),
      h(12, "Delete"),
      d()()()()();
  }
}
function xR(n, i) {
  n & 1 && (c(0, "span"), h(1, "First name is required."), d());
}
function CR(n, i) {
  if ((n & 1 && (c(0, "div", 72), R(1, xR, 2, 0, "span", 33), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function wR(n, i) {
  n & 1 && (c(0, "span"), h(1, "Last name is required."), d());
}
function DR(n, i) {
  if ((n & 1 && (c(0, "div", 72), R(1, wR, 2, 0, "span", 33), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function SR(n, i) {
  if ((n & 1 && (c(0, "option", 86), h(1), d()), n & 2)) {
    let e = i.$implicit;
    y("value", e.dealer_id), m(), ee(" ", e.dealer_code, " ");
  }
}
function MR(n, i) {
  n & 1 && (c(0, "span"), h(1, " Dealer Code is required. "), d());
}
function TR(n, i) {
  if ((n & 1 && (c(0, "div", 72), R(1, MR, 2, 0, "span", 33), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("dealer_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function ER(n, i) {
  if ((n & 1 && (c(0, "option", 86), h(1), d()), n & 2)) {
    let e = i.$implicit;
    y("value", e.role_id), m(), ee(" ", e.role_name, " ");
  }
}
function OR(n, i) {
  n & 1 && (c(0, "span"), h(1, " Role name is required. "), d());
}
function kR(n, i) {
  if ((n & 1 && (c(0, "div", 72), R(1, OR, 2, 0, "span", 33), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("role_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function PR(n, i) {
  n & 1 && (c(0, "span"), h(1, "Email is required."), d());
}
function IR(n, i) {
  n & 1 && (c(0, "span"), h(1, "Please enter a valid email address."), d());
}
function AR(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 72),
      R(1, PR, 2, 0, "span", 33)(2, IR, 2, 0, "span", 33),
      d()),
    n & 2)
  ) {
    let e,
      t,
      r = x(2);
    m(),
      y(
        "ngIf",
        (e = r.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = r.useForm.get("email")) == null || t.errors == null
          ? null
          : t.errors.email
      );
  }
}
function RR(n, i) {
  if ((n & 1 && (c(0, "option", 86), h(1), d()), n & 2)) {
    let e = i.$implicit;
    y("value", e.team_id), m(), ee(" ", e.team_name, " ");
  }
}
function FR(n, i) {
  n & 1 && (c(0, "div", 72)(1, "span"), h(2, "Team name is required."), d()());
}
function NR(n, i) {
  n & 1 && (c(0, "span"), h(1, " Phone is required. "), d());
}
function LR(n, i) {
  n & 1 && (c(0, "span"), h(1, " Must not exceed 10 characters. "), d());
}
function VR(n, i) {
  n & 1 && (c(0, "span"), h(1, " Only numbers are allowed. "), d());
}
function BR(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 72),
      R(1, NR, 2, 0, "span", 33)(2, LR, 2, 0, "span", 33)(
        3,
        VR,
        2,
        0,
        "span",
        33
      ),
      d()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o = x(2);
    m(),
      y(
        "ngIf",
        (e = o.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = o.useForm.get("phone")) == null || t.errors == null
          ? null
          : t.errors.maxlength
      ),
      m(),
      y(
        "ngIf",
        (r = o.useForm.get("phone")) == null || r.errors == null
          ? null
          : r.errors.pattern
      );
  }
}
function HR(n, i) {
  if (n & 1) {
    let e = re();
    Ue(0),
      c(1, "button", 87),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.onUpdate());
      }),
      h(2, " Edit "),
      d(),
      ze();
  }
  if (n & 2) {
    let e = x(2);
    m(), y("disabled", !e.isUserNameChanged());
  }
}
function jR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 59),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.onSave());
      }),
      h(1, " Save "),
      d();
  }
  if (n & 2) {
    let e = x(2);
    le("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function UR(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 52)(1, "div", 61)(2, "div", 54)(3, "div", 55)(4, "h5", 62),
      h(5),
      d(),
      c(6, "button", 63),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeModal());
      }),
      c(7, "span", 64),
      h(8, "\xD7"),
      d()()(),
      c(9, "div", 65)(10, "form", 66)(11, "div", 67)(12, "div", 68)(
        13,
        "label",
        69
      ),
      h(14, "First Name"),
      d(),
      z(15, "input", 70),
      R(16, CR, 2, 1, "div", 71),
      d(),
      c(17, "div", 68)(18, "label", 69),
      h(19, " Last Name "),
      c(20, "span", 72),
      h(21, "*"),
      d()(),
      z(22, "input", 73),
      R(23, DR, 2, 1, "div", 71),
      d(),
      c(24, "div", 68)(25, "label", 74),
      h(26, " Dealer Code "),
      c(27, "span", 72),
      h(28, "*"),
      d()(),
      c(29, "select", 75)(30, "option", 76),
      h(31, "Select Dealer code"),
      d(),
      R(32, SR, 2, 2, "option", 77),
      d(),
      R(33, TR, 2, 1, "div", 71),
      d(),
      c(34, "div", 68)(35, "label", 78),
      h(36, " Role Name "),
      c(37, "span", 72),
      h(38, "*"),
      d()(),
      c(39, "select", 79)(40, "option", 76),
      h(41, "Select Role"),
      d(),
      R(42, ER, 2, 2, "option", 77),
      d(),
      R(43, kR, 2, 1, "div", 71),
      d(),
      c(44, "div", 68)(45, "label", 69),
      h(46, " Email "),
      c(47, "span", 72),
      h(48, "*"),
      d()(),
      z(49, "input", 80),
      R(50, AR, 3, 2, "div", 71),
      d(),
      c(51, "div", 68)(52, "label", 81),
      h(53, " Team name "),
      c(54, "span", 72),
      h(55, "*"),
      d()(),
      c(56, "select", 82),
      N("change", function () {
        P(e);
        let r = x();
        return I(r.onTeamChange());
      }),
      c(57, "option", 76),
      h(58, "Select team name"),
      d(),
      R(59, RR, 2, 2, "option", 77),
      d(),
      R(60, FR, 3, 0, "div", 71),
      d(),
      c(61, "div", 68)(62, "label", 69),
      h(63, " Phone "),
      c(64, "span", 72),
      h(65, "*"),
      d()(),
      c(66, "input", 83),
      N("keypress", function (r) {
        P(e);
        let o = x();
        return I(o.restrictToNumbers(r));
      }),
      d(),
      R(67, BR, 4, 3, "div", 71),
      d()()()(),
      c(68, "div", 58),
      R(69, HR, 3, 1, "ng-container", 84),
      c(70, "button", 85),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeModal());
      }),
      h(71, " Close "),
      d(),
      R(72, jR, 2, 1, "ng-template", null, 0, Pt),
      d()()()();
  }
  if (n & 2) {
    let e,
      t,
      r,
      o,
      a,
      l,
      u,
      f,
      v,
      D,
      T,
      M,
      k,
      V,
      A = _t(73),
      E = x();
    m(5),
      ee(" ", E.userObj.user_id ? "Edit User" : "Add New User", " "),
      m(5),
      y("formGroup", E.useForm),
      m(5),
      y(
        "ngClass",
        de(
          24,
          Io,
          ((e = E.useForm.get("fname")) == null ? null : e.touched) &&
            ((e = E.useForm.get("fname")) == null ? null : e.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        ((t = E.useForm.get("fname")) == null ? null : t.invalid) &&
          ((t = E.useForm.get("fname")) == null ? null : t.touched)
      ),
      m(6),
      y(
        "ngClass",
        de(
          26,
          Io,
          ((r = E.useForm.get("lname")) == null ? null : r.touched) &&
            ((r = E.useForm.get("lname")) == null ? null : r.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        ((o = E.useForm.get("lname")) == null ? null : o.invalid) &&
          ((o = E.useForm.get("lname")) == null ? null : o.touched)
      ),
      m(6),
      y(
        "ngClass",
        de(
          28,
          Io,
          ((a = E.useForm.get("dealer_id")) == null ? null : a.touched) &&
            ((a = E.useForm.get("dealer_id")) == null ? null : a.invalid)
        )
      ),
      m(),
      y("ngValue", null),
      m(2),
      y("ngForOf", E.dealerList()),
      m(),
      y(
        "ngIf",
        ((l = E.useForm.get("dealer_id")) == null ? null : l.touched) &&
          ((l = E.useForm.get("dealer_id")) == null ? null : l.invalid)
      ),
      m(6),
      y(
        "ngClass",
        de(
          30,
          Io,
          ((u = E.useForm.get("role_id")) == null ? null : u.touched) &&
            ((u = E.useForm.get("role_id")) == null ? null : u.invalid)
        )
      ),
      m(),
      y("ngValue", null),
      m(2),
      y("ngForOf", E.roleList()),
      m(),
      y(
        "ngIf",
        ((f = E.useForm.get("role_id")) == null ? null : f.touched) &&
          ((f = E.useForm.get("role_id")) == null ? null : f.invalid)
      ),
      m(6),
      y(
        "ngClass",
        de(
          32,
          Io,
          ((v = E.useForm.get("email")) == null ? null : v.touched) &&
            ((v = E.useForm.get("email")) == null ? null : v.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        ((D = E.useForm.get("email")) == null ? null : D.invalid) &&
          ((D = E.useForm.get("email")) == null ? null : D.touched)
      ),
      m(6),
      y(
        "ngClass",
        de(
          34,
          Io,
          ((T = E.useForm.get("team_id")) == null ? null : T.touched) &&
            ((T = E.useForm.get("team_id")) == null ? null : T.invalid)
        )
      ),
      m(),
      y("ngValue", null),
      m(2),
      y("ngForOf", E.teamList()),
      m(),
      y(
        "ngIf",
        ((M = E.useForm.get("team_id")) == null ? null : M.touched) &&
          ((M = E.useForm.get("team_id")) == null ? null : M.invalid)
      ),
      m(6),
      y(
        "ngClass",
        de(
          36,
          Io,
          ((k = E.useForm.get("phone")) == null ? null : k.touched) &&
            ((k = E.useForm.get("phone")) == null ? null : k.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        ((V = E.useForm.get("phone")) == null ? null : V.touched) &&
          ((V = E.useForm.get("phone")) == null ? null : V.invalid)
      ),
      m(2),
      y("ngIf", E.userObj == null ? null : E.userObj.user_id)("ngIfElse", A);
  }
}
var iu = class n {
  constructor(i, e) {
    this.aleartsrv = i;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = pe(0);
  userList = pe([]);
  dealerList = pe([]);
  totalDealer = pe(0);
  isModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  teamList = pe([]);
  totalteam = pe(0);
  dealerObj = new xr();
  roleList = pe([]);
  masterSrv = G(Qe);
  toastr = G(fi);
  currentPage = 1;
  itemsPerPage = 10;
  searchTerm = "";
  filteredUsers = [];
  paginatedUsers = [];
  useForm = new Rt({});
  userObj = new Sl();
  previousEmail = "";
  isEditMode = !1;
  count;
  Role;
  totalrole;
  previousValue;
  user_id = "";
  dataTable;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  columns = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.displayAllUser(),
      console.log("\u{1F4E6} Loaded Dealer List:", this.dealerList()),
      this.dealerList().length &&
        this.dealerList()[0] &&
        console.log("\u{1F50D} Sample dealer:", this.dealerList()[0]),
      this.displayAllUser(),
      this.getAllTeams(),
      this.loadRole(),
      (this.filteredUsers = this.userList()),
      this.paginateUsers(),
      this.getAllDealer(),
      this.useForm.get("role_id")?.valueChanges.subscribe((i) => {
        if (i) {
          let t = this.roleList().find((r) => r.role_id === i);
          t &&
            (console.log("Role ID:", i),
            console.log("Role Name:", t.role_name),
            this.useForm.patchValue({ user_role: t.role_name }));
        }
      });
  }
  initializeForm() {
    this.useForm = new Rt({
      fname: new nt("", [Re.required, Re.minLength(2), Re.maxLength(50)]),
      lname: new nt("", [Re.required, Re.minLength(2), Re.maxLength(50)]),
      email: new nt("", [Re.required, Re.email, Re.maxLength(100)]),
      phone: new nt(Number, [
        Re.required,
        Re.pattern(/^\d{10}$/),
        Re.maxLength(10),
      ]),
      dealer_id: new nt(null, [Re.required]),
      team_id: new nt(null, [Re.required]),
      user_role: new nt(null, [Re.required]),
      role_id: new nt(null, [Re.required]),
    });
  }
  restrictToNumbers(i) {
    let e = i.key;
    /^\d$/.test(e) || i.preventDefault();
  }
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe({
      next: (i) => {
        console.log("\u{1F310} Full Dealer API Response:", i),
          i && i.data?.dealer?.rows?.length > 0
            ? (this.dealerList.set(i.data.dealer.rows),
              this.totalDealer.set(i.data.dealer.count),
              console.log("\u2705 Loaded Dealers:", this.dealerList()))
            : (console.warn(
                "\u26A0\uFE0F Dealer list empty or improperly structured"
              ),
              this.toastr.warning("No dealers found", "Information"));
      },
      error: (i) => {
        console.error("\u274C Dealer fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch dealers", "Error");
      },
    });
  }
  getAllTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (i) => {
        i && i.data.rows && i.data.rows
          ? (this.teamList.set(i.data.rows),
            console.log("Fetched teams:", this.teamList()),
            this.totalteam.set(i.data.count))
          : this.toastr.warning("No teams found", "Information");
      },
      error: (i) => {
        console.error("teams fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch teams", "Error");
      },
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (i) => {
        i && i.data && Array.isArray(i.data)
          ? (this.roleList.set(i.data),
            console.log("Fetched roles:", this.roleList()),
            this.totalrole.set(i.data.length))
          : this.toastr.warning("No roles found", "Information");
      },
      error: (i) => {
        console.error("Error fetching roles:", i),
          this.toastr.error(i.error?.error || "Error fetching roles", "Error");
      },
    });
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateUsers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredUsers = this.userList();
    else {
      let i = this.searchTerm.toLowerCase();
      this.filteredUsers = this.userList().filter(
        (e) =>
          e.name.toLowerCase().includes(i) ||
          e.email.toLowerCase().includes(i) ||
          (e.user_role?.toLowerCase().includes(i) ?? !1)
      );
    }
    (this.currentPage = 1), this.paginateUsers();
  }
  paginateUsers() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    (this.paginatedUsers = this.filteredUsers.slice(i, e)),
      (this.totalPages = Math.ceil(
        this.filteredUsers.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (t, r) => r + 1));
  }
  updatePages() {
    (this.totalPages = Math.ceil(
      this.filteredUsers.length / this.itemsPerPage
    )),
      (this.pages = Array(this.totalPages)
        .fill(0)
        .map((i, e) => e + 1));
  }
  initializeUsers() {
    let i = this.filteredUsers.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateUsers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateUsers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateUsers());
  }
  expand(i) {
    i.target.size = 6;
  }
  collapse(i) {
    i.target.size = 0;
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  openModal(i) {
    console.log("\u2705 openModal() function calledm of user"),
      console.log("User object received in openModal:", i),
      (this.isModalOpen = !0),
      i || (this.userObj = {}),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      i
        ? (this.useForm.patchValue({
            user_id: i.user_id,
            name: i.name || "",
            account_id: i.account_id || "",
            email: i.email || "",
            phone: i.phone || "",
            role_id: i.role_id || "",
            user_role: i.role_name || "",
            team_id: i.team_id || null,
            team_name: i.team_name || "",
            fname: i.fname || "",
            lname: i.lname || "",
          }),
          (this.previousEmail = i.email || ""),
          console.log("User team info:", i.team),
          console.log("Form team values:", {
            team_id: this.useForm.get("team_id")?.value,
            team_name: this.useForm.get("team_name")?.value,
          }),
          (this.userObj = W({}, i)))
        : (this.userObj = {});
  }
  onDealerChange() {
    let i = this.useForm.get("dealer_code"),
      e = this.useForm.get("dealer_id");
    if (i && e) {
      let t = this.dealerList().find((r) => r.dealer_code === i.value);
      t && e.setValue(t.dealer_id);
    }
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let i = this.useForm.get("team_name"),
      e = this.useForm.get("team_id");
    if (i && e && i.value) {
      console.log("Team name value:", i.value),
        console.log("Available teams:", this.teamList());
      let t = this.teamList().find((r) => r.team_name === i.value);
      t
        ? (console.log("Selected Team:", t), e.setValue(t.team_id))
        : console.warn("Team not found:", i.value);
    }
  }
  displayAllUser() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.totalUser.set(i.data.count),
            this.userList.set(i.data.rows),
            (this.filteredUsers = i.data.rows),
            this.initializeUsers())
          : (this.userList.set([]),
            (this.filteredUsers = []),
            this.toastr.warning("No users found", "Information"),
            this.initializeUsers());
      },
      error: (i) => {
        console.error("Users fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch users", "Error"),
          this.userList.set([]),
          (this.filteredUsers = []),
          this.initializeUsers();
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let i = this.useForm.value,
      e = this.roleList().find((t) => t.role_id === i.role_id);
    (i.user_role = e?.role_name || ""),
      this.masterSrv.createNewUser(i).subscribe({
        next: () => {
          this.toastr.success("User created successfully!", "Success"),
            this.displayAllUser(),
            this.useForm.reset(),
            (this.userObj = new Sl()),
            this.closeModal();
        },
        error: (t) => {
          let r = t.error?.message || "Failed to create user";
          this.toastr.error(r, "Creation Error");
        },
      });
  }
  onSaveAndClose() {
    this.useForm.valid && (this.onSave(), this.closeModal());
  }
  onUpdate() {
    if (
      (console.log("on update"),
      console.log("Form Values:", this.useForm.value),
      this.useForm.valid)
    ) {
      let i = this.useForm.value,
        e = `${(i.fname || "").trim()} ${(i.lname || "").trim()}`.replace(
          /\s+/g,
          " "
        );
      (i.name = e),
        (this.userObj = W(W({}, this.userObj), i)),
        console.log("\u{1F4E4} Payload sent to backend:", this.userObj),
        console.log("\u{1F50D} Form Status:", this.useForm.status),
        console.log("\u{1F680} Updated Payload before API call:", this.userObj),
        this.masterSrv.updateUser(this.userObj).subscribe(
          (t) => {
            t.status === 200
              ? (console.log("API Response:", t),
                console.log("\u2705 Update Success:", t),
                this.toastr.success(t.message, "Success"),
                this.userList.set(
                  this.userList().map((r) =>
                    r.user_id === this.userObj.user_id
                      ? Ce(W(W({}, r), this.userObj), { name: e })
                      : r
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0),
                this.displayAllUser(),
                this.closeModal(),
                this.useForm.reset())
              : this.toastr.error("Update failed", "Error");
          },
          (t) => {
            console.error("\u274C API Error:", t),
              t.response
                ? this.toastr.error(t.response.data.message, "Error")
                : this.toastr.error("Failed to update user", "Error");
          }
        );
    } else
      this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(i) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", i?.user_id),
      (this.userObj = W({}, i)),
      (this.previousValue = i.name);
    let e = `${i.fname || ""} ${i.lname || ""}`.trim().replace(/\s+/g, " ");
    console.log("Formatted name onEdit:", e),
      this.useForm.patchValue({
        user_id: i.user_id,
        name: e,
        account_id: i.account_id || "",
        email: i.email || "",
        phone: i.phone || "",
        role_id: i.role_id || "",
        team_id: i.team_id || null,
        team_name: i.team_name || "",
        fname: i.fname || "",
        lname: i.lname || "",
        user_role: i.user_role || "",
        dealer_id: i.dealer_id || null,
      }),
      console.log("userObj.user_id after setting:", this.userObj?.user_id),
      setTimeout(() => {
        $("#myModal").modal({ backdrop: !1 });
      }, 100);
  }
  isUserNameChanged() {
    return (
      this.useForm.dirty &&
      (this.useForm.value.name !== this.previousValue ||
        this.useForm.value.email !== this.userObj.email ||
        this.useForm.value.phone !== this.userObj.phone ||
        this.useForm.value.role_id !== this.userObj.role_id ||
        this.useForm.value.team_id !== this.userObj.team_id ||
        this.useForm.value.fname !== this.userObj.fname ||
        this.useForm.value.lname !== this.userObj.lname)
    );
  }
  selectedUserForDeletion = null;
  selectUserForDeletion(i) {
    (this.selectedUserForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  setUserToDelete(i) {
    this.selectedUserForDeletion = i;
  }
  openDeleteModal(i) {
    (this.selectedUserForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  deleteUserId() {
    console.log("Deleting User ID:", this.selectedUserForDeletion?.user_id),
      this.selectedUserForDeletion && this.selectedUserForDeletion.user_id
        ? this.masterSrv
            .deleteUser(this.selectedUserForDeletion.user_id)
            .subscribe(
              (i) => {
                this.toastr.success("User deleted successfully", "Success"),
                  this.displayAllUser(),
                  (this.isDeleteModalOpen = !1);
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No users selected for deletion");
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof Rt && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Aa), H(Ke));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-users"]],
    standalone: !0,
    features: [ce],
    decls: 74,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      ["id", "user", 1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search users...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "colspan",
        "3",
        1,
        "text-center",
        2,
        "display",
        "flex",
        "margin-left",
        "120%",
        "white-space",
        "nowrap",
      ],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
        2,
        "top",
        "6%",
      ],
      [1, "modal-title", "text-center", "w-100", 2, "font-size", "18px"],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "fname", 1, "form-label"],
      [
        "id",
        "fname",
        "type",
        "text",
        "formControlName",
        "fname",
        "placeholder",
        "First Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "text-danger"],
      [
        "id",
        "lname",
        "type",
        "text",
        "formControlName",
        "lname",
        "placeholder",
        "Last Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_id", 1, "form-label"],
      [
        "id",
        "dealer_id",
        "formControlName",
        "dealer_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "role_id", 1, "form-label"],
      [
        "id",
        "role_id",
        "formControlName",
        "role_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [
        "id",
        "email",
        "type",
        "email",
        "formControlName",
        "email",
        "placeholder",
        "E-mail",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "team_name", 1, "form-label"],
      [
        "id",
        "team_name",
        "formControlName",
        "team_id",
        "placeholder",
        "team name",
        1,
        "form-control",
        "form-control-lg",
        3,
        "change",
        "ngClass",
      ],
      [
        "id",
        "phone",
        "formControlName",
        "phone",
        "placeholder",
        "Phone",
        "maxlength",
        "10",
        1,
        "form-control",
        "form-control-lg",
        3,
        "keypress",
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Users"),
        d()(),
        c(7, "li", 7)(8, "a", 8),
        h(9, "User Master"),
        d()()()(),
        c(10, "div", 9)(11, "div", 10)(12, "a", 11),
        N("click", function () {
          return t.openModal();
        }),
        z(13, "i", 12),
        h(14, "Add Users "),
        d()(),
        c(15, "div", 10)(16, "div", 13)(17, "p", 14),
        h(18, "Total User"),
        d(),
        c(19, "h3", 15),
        h(20),
        d()()()(),
        c(21, "div", 16)(22, "div", 17)(23, "div", 18)(24, "div", 19)(
          25,
          "div",
          20
        ),
        z(26, "label", 21),
        c(27, "select", 22),
        N("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        c(28, "option", 23),
        h(29, "10"),
        d(),
        c(30, "option", 24),
        h(31, "25"),
        d(),
        c(32, "option", 25),
        h(33, "50"),
        d(),
        c(34, "option", 26),
        h(35, "100"),
        d()(),
        c(36, "label", 27),
        h(37, "records per page"),
        d()(),
        c(38, "div", 28)(39, "div", 29)(40, "input", 30),
        ht("ngModelChange", function (o) {
          return ut(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        N("input", function () {
          return t.onSearchChange();
        }),
        d()()()(),
        c(41, "div", 31)(42, "table", 32)(43, "thead")(44, "tr")(45, "th"),
        h(46, "Sr No"),
        d(),
        c(47, "th"),
        h(48, "Name"),
        d(),
        c(49, "th"),
        h(50, "Email"),
        d(),
        c(51, "th"),
        h(52, "Role"),
        d(),
        c(53, "th"),
        h(54, "Action"),
        d()()(),
        c(55, "tbody"),
        R(56, _R, 3, 0, "tr", 33)(57, bR, 14, 4, "tr", 34),
        d()()(),
        c(58, "div", 35)(59, "div", 36)(60, "div", 37),
        h(61),
        d()(),
        c(62, "div", 36)(63, "div", 38)(64, "ul", 39)(65, "li", 40)(
          66,
          "a",
          41
        ),
        N("click", function () {
          return t.previousPage();
        }),
        h(67, "Previous"),
        d()(),
        R(68, vR, 3, 3, "li", 42),
        c(69, "li", 43)(70, "a", 41),
        N("click", function () {
          return t.nextPage();
        }),
        h(71, "Next"),
        d()()()()()()()()()()(),
        R(72, yR, 13, 0, "div", 44)(73, UR, 74, 38, "div", 44)),
        e & 2 &&
          (m(20),
          ee(" ", t.totalUser(), " "),
          m(20),
          dt("ngModel", t.searchTerm),
          m(16),
          y("ngIf", t.paginatedUsers.length === 0),
          m(),
          y("ngForOf", t.paginatedUsers),
          m(4),
          Fi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.currentPage * t.itemsPerPage < t.teamList().length
              ? t.currentPage * t.itemsPerPage
              : t.teamList().length,
            " of ",
            t.teamList().length,
            " entries "
          ),
          m(4),
          ne("disabled", t.currentPage === 1),
          m(3),
          y("ngForOf", t.visiblePages),
          m(),
          ne("disabled", t.currentPage === t.totalPages),
          m(3),
          y("ngIf", t.isDeleteModalOpen),
          m(),
          y("ngIf", t.isModalOpen));
    },
    dependencies: [
      Ae,
      It,
      At,
      Xe,
      Si,
      Br,
      ii,
      ni,
      ei,
      Di,
      ti,
      Bi,
      fr,
      vp,
      _i,
      tt,
      xl,
      yy,
      hn,
      Xi,
      Zi,
      er,
      xy,
    ],
    styles: [
      "body[_ngcontent-%COMP%]{display:flex;min-height:100vh;margin:0;padding:0}.custom-modal-position[_ngcontent-%COMP%]{top:18%}@media (max-width: 767px){.custom-modal-position[_ngcontent-%COMP%]{top:7%;border:2px solid red}}#user[_ngcontent-%COMP%]{margin-left:-2rem}.sidebar[_ngcontent-%COMP%]{width:250px;flex-shrink:0;background-color:#f8f9fa;z-index:1000}.content-body[_ngcontent-%COMP%]{flex-grow:1;padding:20px;box-sizing:border-box;overflow-x:hidden}@media (max-width: 768px){body[_ngcontent-%COMP%]{flex-direction:column}.sidebar[_ngcontent-%COMP%]{width:100%;height:auto;position:static}.content-body[_ngcontent-%COMP%]{margin-left:0;width:100%;padding:10px}}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (max-width: 576px){.search-input[_ngcontent-%COMP%]{margin-left:0!important;width:100%!important}}.card-box[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 0 15px #00000014;border-radius:10px}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.modal-backdrop[_ngcontent-%COMP%]{z-index:1040!important}.modal[_ngcontent-%COMP%]{z-index:1051!important;position:fixed!important;pointer-events:auto!important}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}@media (max-width: 991.98px){.search-input[_ngcontent-%COMP%]{width:100%;margin-top:10px}}@media only screen and (max-width: 1600px){.content-body[_ngcontent-%COMP%]{margin-left:0}}.searchbar[_ngcontent-%COMP%]{display:flex;float:right}input.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}@media (min-width: 760px) and (max-width: 820px){.delete-btn-ipad[_ngcontent-%COMP%]{margin-top:5px!important}}",
    ],
  });
};
var zR = () => ["/Admin/dealer"],
  wy = (n) => ["/Admin/singleUser", n];
function $R(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Subject"),
      d(),
      c(5, "h5", 17),
      h(6),
      d()(),
      c(7, "div", 15)(8, "h4", 16),
      h(9, "Assigned"),
      d(),
      c(10, "h5", 17),
      h(11),
      d()(),
      c(12, "div", 15)(13, "h4", 16),
      h(14, "Description"),
      d(),
      c(15, "h5", 17),
      h(16),
      d()(),
      c(17, "div", 15)(18, "h4", 16),
      h(19, "account Name"),
      d(),
      c(20, "h5", 17),
      h(21),
      d()()(),
      c(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      h(25, "start Date"),
      d(),
      c(26, "h5", 17),
      h(27),
      d()(),
      c(28, "div", 15)(29, "h4", 16),
      h(30, "End Date"),
      d(),
      c(31, "h5", 17),
      h(32),
      d()(),
      c(33, "div", 15)(34, "h4", 16),
      h(35, "Name"),
      d(),
      c(36, "h5", 17),
      h(37),
      d()(),
      c(38, "div", 15)(39, "h4", 16),
      h(40, "Lead Code"),
      d(),
      c(41, "h5", 17),
      h(42),
      d()()(),
      z(43, "div", 18),
      c(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      h(47, "Lead Email"),
      d(),
      c(48, "h5", 17),
      h(49),
      d()(),
      c(50, "div", 15)(51, "h4", 16),
      h(52, "Flag"),
      d(),
      c(53, "h5", 17),
      h(54),
      d()()(),
      c(55, "div", 19)(56, "a", 20),
      h(57, "Go Back"),
      d()()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      l,
      u,
      f,
      v,
      D,
      T = x();
    m(6),
      ee(" ", (e = T.eventList()) == null ? null : e.subject, ""),
      m(5),
      B((t = T.eventList()) == null ? null : t.assigned_to),
      m(5),
      B((r = T.eventList()) == null ? null : r.description),
      m(5),
      B((o = T.eventList()) == null ? null : o.name),
      m(6),
      ee(" ", (a = T.eventList()) == null ? null : a.start_date, ""),
      m(5),
      ee(" ", (l = T.eventList()) == null ? null : l.end_date, ""),
      m(5),
      ee(" ", (u = T.eventList()) == null ? null : u.name, ""),
      m(5),
      B((f = T.eventList()) == null ? null : f.lead_code),
      m(7),
      ee(" ", (v = T.eventList()) == null ? null : v.lead_email, ""),
      m(5),
      ee(" ", (D = T.eventList()) == null ? null : D.flag, ""),
      m(2),
      y("routerLink", de(11, wy, T.previousRoute));
  }
}
var nu = class n {
  constructor(i) {
    this.route = i;
  }
  eventList = pe(null);
  masterSrv = G(Qe);
  eventData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.eventData = i.leadData),
          this.eventData
            ? this.eventById(this.eventData.event_id)
            : console.warn("event data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("eventId");
        e
          ? this.eventById(e)
          : this.eventData ||
            console.error(
              "event ID not found in the URL and no resolver data."
            );
      });
  }
  eventById(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.eventById(i).subscribe({
        next: (e) => {
          this.eventList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Zt));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-single-event"]],
    standalone: !0,
    features: [ce],
    decls: 21,
    vars: 6,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "row", "mb-4", "text-center"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
          5,
          "a",
          5
        ),
        h(6, "Utils"),
        d()(),
        c(7, "li", 4)(8, "a", 6),
        h(9, "Dealer"),
        d()(),
        c(10, "li", 4)(11, "a", 6),
        h(12, "Single Dealer"),
        d()(),
        c(13, "li", 7)(14, "a", 8),
        h(15, "Single Event"),
        d()()()(),
        c(16, "div", 9)(17, "div", 10)(18, "h5", 11),
        h(19, "User Details"),
        d()(),
        R(20, $R, 58, 13, "div", 12),
        d()()()),
        e & 2 &&
          (m(8),
          y("routerLink", pi(3, zR)),
          m(3),
          y("routerLink", de(4, wy, t.previousRoute)),
          m(9),
          y("ngIf", t.eventList()));
    },
    dependencies: [Ae, Xe, tt, Jt],
  });
};
var WR = () => ["/Admin/dealer"],
  Dy = (n) => ["/Admin/singleUser", n];
function GR(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Lead Code"),
      d(),
      c(5, "h5", 17),
      h(6),
      d()(),
      c(7, "div", 15)(8, "h4", 16),
      h(9, "Status"),
      d(),
      c(10, "h5", 17),
      h(11),
      d()(),
      c(12, "div", 15)(13, "h4", 16),
      h(14, "Purchase Type"),
      d(),
      c(15, "h5", 17),
      h(16),
      d()(),
      c(17, "div", 15)(18, "h4", 16),
      h(19, "Sub Type"),
      d(),
      c(20, "h5", 17),
      h(21),
      d()()(),
      c(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      h(25, "Type"),
      d(),
      c(26, "h5", 17),
      h(27),
      d()(),
      c(28, "div", 15)(29, "h4", 16),
      h(30, "Sub Type"),
      d(),
      c(31, "h5", 17),
      h(32),
      d()(),
      c(33, "div", 15)(34, "h4", 16),
      h(35, "Brand"),
      d(),
      c(36, "h5", 17),
      h(37),
      d()(),
      c(38, "div", 15)(39, "h4", 16),
      h(40, "PMI"),
      d(),
      c(41, "h5", 17),
      h(42),
      d()()(),
      c(43, "div", 14)(44, "div", 15)(45, "h4", 16),
      h(46, "Lead Source"),
      d(),
      c(47, "h5", 17),
      h(48),
      d()(),
      c(49, "div", 15)(50, "h4", 16),
      h(51, "Last Name"),
      d(),
      c(52, "h5", 17),
      h(53),
      d()(),
      c(54, "div", 15)(55, "h4", 16),
      h(56, "Mobile"),
      d(),
      c(57, "h5", 17),
      h(58),
      d()(),
      c(59, "div", 15)(60, "h4", 16),
      h(61, "Email"),
      d(),
      c(62, "h5", 17),
      h(63),
      d()()(),
      c(64, "div", 14)(65, "div", 15)(66, "h4", 16),
      h(67, "Lead Owner"),
      d(),
      c(68, "h5", 17),
      h(69),
      d()(),
      c(70, "div", 15)(71, "h4", 16),
      h(72, "Flag"),
      d(),
      c(73, "h5", 17),
      h(74),
      d()()(),
      c(75, "div", 18)(76, "a", 19),
      h(77, "Go Back"),
      d()()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      l,
      u,
      f,
      v,
      D,
      T,
      M,
      k,
      V,
      A = x();
    m(6),
      B((e = A.leadList()) == null ? null : e.lead_code),
      m(5),
      B((t = A.leadList()) == null ? null : t.status),
      m(5),
      B((r = A.leadList()) == null ? null : r.status),
      m(5),
      B((o = A.leadList()) == null ? null : o.purchase_type),
      m(6),
      B((a = A.leadList()) == null ? null : a.type),
      m(5),
      B((l = A.leadList()) == null ? null : l.sub_type),
      m(5),
      B((u = A.leadList()) == null ? null : u.brand),
      m(5),
      B((f = A.leadList()) == null ? null : f.PMI),
      m(6),
      B((v = A.leadList()) == null ? null : v.lead_source),
      m(5),
      B((D = A.leadList()) == null ? null : D.lname),
      m(5),
      B((T = A.leadList()) == null ? null : T.mobile),
      m(5),
      B((M = A.leadList()) == null ? null : M.email),
      m(6),
      B((k = A.leadList()) == null ? null : k.lead_owner),
      m(5),
      B((V = A.leadList()) == null ? null : V.flag),
      m(2),
      y("routerLink", de(15, Dy, A.previousRoute));
  }
}
var ru = class n {
  constructor(i) {
    this.route = i;
  }
  leadList = pe(null);
  masterSrv = G(Qe);
  leadData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.leadData = i.leadData),
          this.leadData
            ? this.singleLeadData(this.leadData.lead_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("leadId");
        e
          ? this.singleLeadData(e)
          : this.leadData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleLeadData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.leadById(i).subscribe({
        next: (e) => {
          this.leadList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Zt));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-single-lead"]],
    standalone: !0,
    features: [ce],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          d()(),
          c(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          d()(),
          c(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          d()(),
          c(13, "li", 7)(14, "a", 8),
          h(15),
          d()()()(),
          c(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19, "Leads Details"),
          d()(),
          R(20, GR, 78, 17, "div", 12),
          d()()()),
        e & 2)
      ) {
        let r;
        m(8),
          y("routerLink", pi(4, WR)),
          m(3),
          y("routerLink", de(5, Dy, t.previousRoute)),
          m(4),
          B((r = t.leadList()) == null ? null : r.lead_owner),
          m(5),
          y("ngIf", t.leadList());
      }
    },
    dependencies: [Ae, Xe, tt, Jt],
  });
};
var ou = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.leadById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Qe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var au = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("eventId");
    return console.log(t), t ? this.masterSrv.eventById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Qe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var su = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.userById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Qe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var YR = () => ["/Admin/dealer"],
  Sy = (n) => ["/Admin/singleUser", n];
function qR(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Name"),
      d(),
      c(5, "h5", 17),
      h(6),
      d()(),
      c(7, "div", 15)(8, "h4", 16),
      h(9, "Account ID"),
      d(),
      c(10, "h5", 17),
      h(11),
      d()()(),
      c(12, "div", 14)(13, "div", 15)(14, "h4", 16),
      h(15, "Email"),
      d(),
      c(16, "h5", 17),
      h(17),
      d()(),
      c(18, "div", 15)(19, "h4", 16),
      h(20, "Phone"),
      d(),
      c(21, "h5", 17),
      h(22),
      d()()(),
      c(23, "div", 14)(24, "div", 15)(25, "h4", 16),
      h(26, "Role"),
      d(),
      c(27, "h5", 17),
      h(28),
      d()(),
      c(29, "div", 15)(30, "h4", 16),
      h(31, "Dealer Code"),
      d(),
      c(32, "h5", 17),
      h(33),
      d()()(),
      c(34, "div", 18)(35, "a", 19),
      h(36, "Go Back"),
      d()()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      l,
      u = x();
    m(6),
      B((e = u.userList()) == null ? null : e.name),
      m(5),
      B((t = u.userList()) == null ? null : t.account_id),
      m(6),
      B((r = u.userList()) == null ? null : r.email),
      m(5),
      B((o = u.userList()) == null ? null : o.phone),
      m(6),
      B((a = u.userList()) == null ? null : a.user_role),
      m(5),
      B((l = u.userList()) == null ? null : l.dealer_code),
      m(2),
      y("routerLink", de(7, Sy, u.previousRoute));
  }
}
var lu = class n {
  constructor(i) {
    this.route = i;
  }
  masterSrv = G(Qe);
  userData;
  previousRoute;
  userList = pe(null);
  ngOnInit() {
    this.previousRoute = localStorage.getItem("previousRoute");
    debugger;
    this.route.data.subscribe((i) => {
      console.log("Resolved userData:", i.userData),
        i.userData &&
        Array.isArray(i.userData.data) &&
        i.userData.data.length > 0
          ? (this.userData = i.userData.data[0])
          : console.warn("User data not available.");
    }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("user_id");
        e && this.fetchSingleUser(e);
      });
  }
  fetchSingleUser(i) {
    console.log("Calling fetchSingleUser with ID:", i),
      this.masterSrv.userById(i).subscribe({
        next: (e) => {
          console.log("API Response:", e);
          debugger;
          e &&
          e.status === 200 &&
          e.data &&
          Array.isArray(e.data) &&
          e.data.length > 0
            ? (console.log("User found:", e.data[0]),
              this.userList.set(e.data[0]),
              console.log("UserList signal after setting:", this.userList()))
            : console.error("Invalid or empty response:", e);
        },
        error: (e) => {
          console.error("API Error:", e),
            e.error && console.error("Error details:", e.error),
            e.message && console.error("Error message:", e.message),
            e.status && console.error("Error status:", e.status);
        },
        complete: () => {
          console.log("API call completed");
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Zt));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-single-user"]],
    standalone: !0,
    features: [ce],
    decls: 21,
    vars: 8,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4"],
      [1, "col-md-6", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          d()(),
          c(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          d()(),
          c(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          d()(),
          c(13, "li", 7)(14, "a", 8),
          h(15),
          d()()()(),
          c(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19),
          d()(),
          R(20, qR, 37, 9, "div", 12),
          d()()()),
        e & 2)
      ) {
        let r, o;
        m(8),
          y("routerLink", pi(5, YR)),
          m(3),
          y("routerLink", de(6, Sy, t.previousRoute)),
          m(4),
          B((r = t.userList()) == null ? null : r.name),
          m(4),
          ee(" ", (o = t.userList()) == null ? null : o.name, " Details "),
          m(),
          y("ngIf", t.userList());
      }
    },
    dependencies: [Vi, Jt, Ae, Xe],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}",
    ],
  });
};
var cu = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.taskById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Qe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var KR = () => ["/Admin/dealer"],
  My = (n) => ["/Admin/singleUser", n];
function QR(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Subject"),
      d(),
      c(5, "h5", 17),
      h(6),
      d()(),
      c(7, "div", 15)(8, "h4", 16),
      h(9, "Status"),
      d(),
      c(10, "h5", 17),
      h(11),
      d()(),
      c(12, "div", 15)(13, "h4", 16),
      h(14, "Assigned"),
      d(),
      c(15, "h5", 17),
      h(16),
      d()()(),
      c(17, "div", 14)(18, "div", 15)(19, "h4", 16),
      h(20, "Due Date"),
      d(),
      c(21, "h5", 17),
      h(22),
      d()(),
      c(23, "div", 15)(24, "h4", 16),
      h(25, "Comments"),
      d(),
      c(26, "h5", 17),
      h(27),
      d()(),
      c(28, "div", 15)(29, "h4", 16),
      h(30, "Lead Name"),
      d(),
      c(31, "h5", 17),
      h(32),
      d()()(),
      c(33, "div", 14)(34, "div", 15)(35, "h4", 16),
      h(36, "Lead Email"),
      d(),
      c(37, "h5", 17),
      h(38),
      d()(),
      c(39, "div", 15)(40, "h4", 16),
      h(41, "Lead Code"),
      d(),
      c(42, "h5", 17),
      h(43),
      d()()(),
      c(44, "div", 18)(45, "a", 19),
      h(46, "Go Back"),
      d()()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      l,
      u,
      f,
      v = x();
    m(6),
      B((e = v.taskList()) == null ? null : e.subject),
      m(5),
      B((t = v.taskList()) == null ? null : t.status),
      m(5),
      B((r = v.taskList()) == null ? null : r.assigned_to),
      m(6),
      B((o = v.taskList()) == null ? null : o.due_date),
      m(5),
      B((a = v.taskList()) == null ? null : a.comments),
      m(5),
      B((l = v.taskList()) == null ? null : l.lead_name),
      m(6),
      B((u = v.taskList()) == null ? null : u.lead_email),
      m(5),
      B((f = v.taskList()) == null ? null : f.lead_code),
      m(2),
      y("routerLink", de(9, My, v.previousRoute));
  }
}
var du = class n {
  constructor(i) {
    this.route = i;
  }
  taskList = pe(null);
  masterSrv = G(Qe);
  taskData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.taskData = i.taskData),
          this.taskData
            ? this.singleTaskData(this.taskData.task_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("taskId");
        e
          ? this.singleTaskData(e)
          : this.taskData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleTaskData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.taskById(i).subscribe({
        next: (e) => {
          this.taskList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Zt));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-single-task"]],
    standalone: !0,
    features: [ce],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-4", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          d()(),
          c(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          d()(),
          c(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          d()(),
          c(13, "li", 7)(14, "a", 8),
          h(15),
          d()()()(),
          c(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19, "Task Details"),
          d()(),
          R(20, QR, 47, 11, "div", 12),
          d()()()),
        e & 2)
      ) {
        let r;
        m(8),
          y("routerLink", pi(4, KR)),
          m(3),
          y("routerLink", de(5, My, t.previousRoute)),
          m(4),
          B((r = t.taskList()) == null ? null : r.assigned_to),
          m(5),
          y("ngIf", t.taskList());
      }
    },
    dependencies: [Ae, Xe, tt, Jt],
  });
};
var uu = class n {
  constructor(i) {
    this.router = i;
    this.initRouteTracking();
  }
  previousIdSubject = new Nt(null);
  previousId$ = this.previousIdSubject.asObservable();
  currentId = null;
  initRouteTracking() {
    this.router.events.pipe(Ct((i) => i instanceof ci)).subscribe(() => {
      let t = this.router.url.split("/")[3] || null;
      this.currentId && this.setPreviousId(this.currentId),
        (this.currentId = t);
    });
  }
  setPreviousId(i) {
    localStorage.setItem("previousId", i), this.previousIdSubject.next(i);
  }
  getPreviousId() {
    return localStorage.getItem("previousId");
  }
  clearPreviousId() {
    localStorage.removeItem("previousId"), this.previousIdSubject.next(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Mt));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var ZR = () => ["/Admin/dealer"],
  JR = (n) => ["/Admin/singleUser", n];
function eF(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Opportunity Name"),
      d(),
      c(5, "h5", 17),
      h(6),
      d()(),
      c(7, "div", 15)(8, "h4", 16),
      h(9, "stage"),
      d(),
      c(10, "h5", 17),
      h(11),
      d()(),
      c(12, "div", 15)(13, "h4", 16),
      h(14, "Opportunities Record"),
      d(),
      c(15, "h5", 17),
      h(16),
      d()(),
      c(17, "div", 15)(18, "h4", 16),
      h(19, "account Name"),
      d(),
      c(20, "h5", 17),
      h(21),
      d()()(),
      c(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      h(25, "close Date"),
      d(),
      c(26, "h5", 17),
      h(27),
      d()(),
      c(28, "div", 15)(29, "h4", 16),
      h(30, "Opportunity Currency"),
      d(),
      c(31, "h5", 17),
      h(32),
      d()(),
      c(33, "div", 15)(34, "h4", 16),
      h(35, "VIN"),
      d(),
      c(36, "h5", 17),
      h(37),
      d()(),
      c(38, "div", 15)(39, "h4", 16),
      h(40, "Purchase Type"),
      d(),
      c(41, "h5", 17),
      h(42),
      d()()(),
      z(43, "div", 14),
      c(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      h(47, "Sub Type"),
      d(),
      c(48, "h5", 17),
      h(49),
      d()(),
      c(50, "div", 15)(51, "h4", 16),
      h(52, "Brand"),
      d(),
      c(53, "h5", 17),
      h(54),
      d()(),
      c(55, "div", 15)(56, "h4", 16),
      h(57, "PMI"),
      d(),
      c(58, "h5", 17),
      h(59),
      d()(),
      c(60, "div", 15)(61, "h4", 16),
      h(62, "Description"),
      d(),
      c(63, "h5", 17),
      h(64),
      d()()(),
      c(65, "div", 14)(66, "div", 15)(67, "h4", 16),
      h(68, "Mobile"),
      d(),
      c(69, "h5", 17),
      h(70),
      d()(),
      c(71, "div", 15)(72, "h4", 16),
      h(73, "Phone"),
      d(),
      c(74, "h5", 17),
      h(75),
      d()(),
      c(76, "div", 15)(77, "h4", 16),
      h(78, "E-mail"),
      d(),
      c(79, "h5", 17),
      h(80),
      d()(),
      c(81, "div", 15)(82, "h4", 16),
      h(83, "Enquiry Type"),
      d(),
      c(84, "h5", 17),
      h(85),
      d()()(),
      c(86, "div", 18)(87, "a", 19),
      h(88, "Go Back"),
      d()()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      l,
      u,
      f,
      v,
      D,
      T,
      M,
      k,
      V,
      A,
      E,
      X = x();
    m(6),
      B((e = X.oppList()) == null ? null : e.opportunity_name),
      m(5),
      B((t = X.oppList()) == null ? null : t.stage),
      m(5),
      B((r = X.oppList()) == null ? null : r.opportunity_record_type),
      m(5),
      B((o = X.oppList()) == null ? null : o.account_name),
      m(6),
      B((a = X.oppList()) == null ? null : a.close_date),
      m(5),
      B((l = X.oppList()) == null ? null : l.opportunity_currency),
      m(5),
      B((u = X.oppList()) == null ? null : u.purchase_type),
      m(5),
      B((f = X.oppList()) == null ? null : f.type),
      m(7),
      B((v = X.oppList()) == null ? null : v.sub_type),
      m(5),
      B((D = X.oppList()) == null ? null : D.brand),
      m(5),
      B((T = X.oppList()) == null ? null : T.PMI),
      m(5),
      B((M = X.oppList()) == null ? null : M.description),
      m(6),
      B((k = X.oppList()) == null ? null : k.mobile),
      m(5),
      B((V = X.oppList()) == null ? null : V.phone),
      m(5),
      B((A = X.oppList()) == null ? null : A.email),
      m(5),
      B((E = X.oppList()) == null ? null : E.enquiry_type);
  }
}
var hu = class n {
  constructor(i, e) {
    this.route = i;
    this.routeTrackingService = e;
  }
  oppList = pe(null);
  masterSrv = G(Qe);
  oppData;
  previousRoutes;
  previousRoute = null;
  previousId = null;
  ngOnInit() {
    this.routeTrackingService.previousId$.subscribe((i) => {
      this.previousId = i;
    }),
      (this.previousId = this.routeTrackingService.getPreviousId()),
      this.route.data.subscribe((i) => {
        (this.oppData = i.oppData),
          this.oppData
            ? this.singleoppData(this.oppData.opportunity_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("oppId");
        e
          ? this.singleoppData(e)
          : this.oppData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleoppData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.oppById(i).subscribe({
        next: (e) => {
          this.oppList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Zt), H(uu));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-single-opp"]],
    standalone: !0,
    features: [ce],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-start",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        "href",
        "/Admin/dealer",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          d()(),
          c(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          d()(),
          c(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          d()(),
          c(13, "li", 7)(14, "a", 8),
          h(15),
          d()()()(),
          c(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19, " Opportunities Details "),
          d()(),
          R(20, eF, 89, 16, "div", 12),
          d()()()),
        e & 2)
      ) {
        let r;
        m(8),
          y("routerLink", pi(4, ZR)),
          m(3),
          y("routerLink", de(5, JR, t.previousId)),
          m(4),
          B((r = t.oppList()) == null ? null : r.opportunity_name),
          m(5),
          y("ngIf", t.oppList());
      }
    },
    dependencies: [tt, Ae, Xe, Jt],
  });
};
var pu = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.oppById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Qe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Yt = class n {
  constructor(i, e) {
    this.router = i;
    this.platformId = e;
  }
  canActivate(i, e) {
    if (!dn(this.platformId)) return !1;
    let t = this.getToken();
    if (!t) return this.router.navigate([""]), !1;
    try {
      let r = this.decodeToken(t);
      if (r.exp * 1e3 < Date.now())
        return this.removeToken(), this.router.navigate([""]), !1;
      if (i.data.roles) {
        let a = r.roles || [],
          l = i.data.roles;
        if (!this.checkRoles(a, l)) return this.router.navigate([""]), !1;
      }
      return !0;
    } catch (r) {
      return (
        console.error("Token validation error:", r),
        this.removeToken(),
        this.router.navigate([""]),
        !1
      );
    }
  }
  getToken() {
    try {
      return typeof localStorage < "u" ? localStorage.getItem("token") : null;
    } catch (i) {
      return console.error("Error accessing token:", i), null;
    }
  }
  removeToken() {
    try {
      typeof localStorage < "u" && localStorage.removeItem("token");
    } catch (i) {
      console.error("Error removing token:", i);
    }
  }
  decodeToken(i) {
    try {
      let e = i.split(".")[1];
      return JSON.parse(atob(e));
    } catch (e) {
      throw (console.error("Token decoding error:", e), e);
    }
  }
  checkRoles(i, e) {
    return e.some((t) => i.includes(t));
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Mt), Q(ai));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ml = class n {
  role_id;
  role_name;
  description;
  constructor() {
    (this.role_id = ""), (this.role_name = ""), (this.description = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var tF = (n) => ({ "is-invalid": n });
function iF(n, i) {
  n & 1 && (c(0, "tr")(1, "td", 30), h(2, "No Roles Found"), d()());
}
function nF(n, i) {
  if (
    (n & 1 &&
      (c(0, "tr")(1, "td", 24),
      h(2),
      d(),
      c(3, "td", 24),
      h(4),
      d(),
      c(5, "td", 24),
      h(6),
      d(),
      c(7, "td"),
      z(8, "div", 31),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x();
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.role_name),
      m(2),
      B(e.description);
  }
}
function rF(n, i) {
  if ((n & 1 && (c(0, "option", 53), h(1), d()), n & 2)) {
    let e = i.$implicit;
    y("value", e.dealer_code), m(), ee(" ", e.dealer_code, " ");
  }
}
function oF(n, i) {
  n & 1 && (c(0, "span"), h(1, " Role Name is required. "), d());
}
function aF(n, i) {
  if ((n & 1 && (c(0, "div", 44), R(1, oF, 2, 0, "span", 25), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("role_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function sF(n, i) {
  if (
    (n & 1 && (Ue(0), c(1, "button", 54), h(2, " Edit "), d(), ze()), n & 2)
  ) {
    let e = x(2);
    m(), y("disabled", !e.isRoleNameChanged());
  }
}
function lF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 55),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.onSave());
      }),
      h(1, " Save "),
      d();
  }
}
function cF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 32)(1, "div", 33)(2, "div", 34)(3, "div", 35)(4, "h5", 36),
      h(5),
      d(),
      c(6, "button", 37),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeModal());
      }),
      c(7, "span", 38),
      h(8, "\xD7"),
      d()()(),
      c(9, "div", 39)(10, "form", 40)(11, "div", 41)(12, "div", 42)(
        13,
        "label",
        43
      ),
      h(14, " Role Name "),
      c(15, "span", 44),
      h(16, "*"),
      d()(),
      c(17, "select", 45)(18, "option", 46),
      h(19, "Select Role"),
      d(),
      R(20, rF, 2, 2, "option", 47),
      d(),
      R(21, aF, 2, 1, "div", 48),
      d(),
      c(22, "div", 42)(23, "label", 43),
      h(24, " Description "),
      d(),
      z(25, "input", 49),
      d()(),
      c(26, "div", 50),
      R(27, sF, 3, 1, "ng-container", 51),
      c(28, "button", 52),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeModal());
      }),
      h(29, " Close "),
      d(),
      R(30, lF, 2, 0, "ng-template", null, 0, Pt),
      d()()()()()();
  }
  if (n & 2) {
    let e,
      t,
      r = _t(31),
      o = x();
    m(5),
      ee(
        " ",
        o.roleObj.role_name || o.roleObj.description
          ? "Edit User"
          : "Add New Role",
        " "
      ),
      m(5),
      y("formGroup", o.useForm),
      m(7),
      y(
        "ngClass",
        de(
          8,
          tF,
          ((e = o.useForm.get("role_name")) == null ? null : e.touched) &&
            ((e = o.useForm.get("role_name")) == null ? null : e.invalid)
        )
      ),
      m(),
      y("ngValue", null),
      m(2),
      y("ngForOf", o.staticDealerList),
      m(),
      y(
        "ngIf",
        ((t = o.useForm.get("role_name")) == null ? null : t.invalid) &&
          ((t = o.useForm.get("role_name")) == null ? null : t.touched)
      ),
      m(6),
      y("ngIf", o.roleObj.role_id)("ngIfElse", r);
  }
}
var mu = class n {
  constructor(i) {
    this.cdr = i;
    console.log("Constructor called"), this.initializeForm();
  }
  http = G(Bt);
  useForm = new Rt({});
  roleList = pe([]);
  count = pe(0);
  totalRoles = pe(0);
  isModalOpen = !1;
  roleObj = new Ml();
  previousValue = "";
  isEditMode = !1;
  isSubmitting = !1;
  roleListAll = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  pages = [];
  totalPages = 1;
  filteredRoles = [];
  paginatedRoles = [];
  masterSrv = G(Qe);
  toastr = G(fi);
  staticDealerList = [
    { dealer_code: "Admin" },
    { dealer_code: "SM" },
    { dealer_code: "PS" },
    { dealer_code: "GM" },
    { dealer_code: "DP" },
  ];
  ngOnInit() {
    console.log("ngOnInit triggered"), this.loadRole();
  }
  initializeForm() {
    console.log("Initializing form..."),
      (this.useForm = new Rt({
        role_name: new nt("", [Re.required]),
        description: new nt(""),
      }));
  }
  openModal(i) {
    this.useForm.reset(),
      (this.isModalOpen = !0),
      (this.isSubmitting = !1),
      document.body.classList.add("modal-open"),
      (this.isEditMode = !!i),
      i
        ? (this.useForm.patchValue({
            role_name: i.role_name || "",
            description: i.description || "",
          }),
          (this.roleObj = W({}, i)))
        : (this.roleObj = new Ml());
  }
  onSaveAndClose() {
    this.useForm.valid && this.onSave();
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e.controls && this.markFormGroupTouched(e);
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (i) => {
        this.roleList.set(i.data),
          this.count.set(i.data.length),
          (this.filteredRoles = i.data),
          this.applyFilterAndPagination();
      },
      error: (i) => {
        this.toastr.error("Failed to load role", "Error"),
          console.error("role load error:", i);
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    if (!this.isSubmitting) {
      if (
        (this.markFormGroupTouched(this.useForm),
        console.log("Save button clicked"),
        this.useForm.invalid)
      ) {
        console.warn("Form is invalid:", this.useForm.value),
          this.useForm.markAllAsTouched();
        return;
      }
      console.log("Form is valid. Submitting:", this.useForm.value),
        (this.isSubmitting = !0),
        this.masterSrv.createRole(this.useForm.value).subscribe({
          next: (i) => {
            console.log("Role created successfully", i),
              this.toastr.success("Role created successfully!", "Success"),
              this.loadRole(),
              console.log("closing from next"),
              this.closeModal();
          },
          error: (i) => {
            console.error("Create role error:", i), (this.isSubmitting = !1);
            let e =
              i.error?.error || i.error?.message || "Failed to create role.";
            this.toastr.error(e, "Error"),
              this.closeModal(),
              console.log("closing from error");
          },
          complete: () => {
            this.isSubmitting = !1;
          },
        });
    }
  }
  onSearchChange() {
    (this.currentPage = 1), this.applyFilterAndPagination();
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      this.applyFilterAndPagination();
  }
  applyFilterAndPagination() {
    let i = this.roleList(),
      e = (this.searchTerm ?? "").toLowerCase();
    (this.filteredRoles = i.filter(
      (t) =>
        (t.role_name ?? "").toLowerCase().includes(e) ||
        (t.description ?? "").toLowerCase().includes(e)
    )),
      (this.totalPages = Math.ceil(
        this.filteredRoles.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (t, r) => r + 1)),
      this.paginateRoles();
  }
  closeModal() {
    (this.isModalOpen = !1),
      document.body.classList.remove("modal-open"),
      console.log("Modal closed");
  }
  paginateRoles() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedRoles = this.filteredRoles.slice(i, e);
  }
  goToPage(i) {
    (this.currentPage = i), this.paginateRoles();
  }
  previousPage() {
    this.currentPage > 1 && (this.currentPage--, this.paginateRoles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateRoles());
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredRoles.length
    );
  }
  min(i, e) {
    return Math.min(i, e);
  }
  updatePagination() {
    (this.totalPages = Math.ceil(
      this.filteredRoles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      (this.paginatedRoles = this.filteredRoles.slice(
        (this.currentPage - 1) * this.itemsPerPage,
        this.currentPage * this.itemsPerPage
      ));
  }
  isRoleNameChanged() {
    return this.useForm.value.role_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Ke));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-role"]],
    standalone: !0,
    features: [ce],
    decls: 42,
    vars: 4,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3"],
      [1, "col-md-6"],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "4", 1, "text-center"],
      [1, "d-flex"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "role_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "role_name",
        "formControlName",
        "role_name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["class", "text-danger", 4, "ngIf"],
      [
        "id",
        "description",
        "type",
        "text",
        "formControlName",
        "description",
        "placeholder",
        "Description",
        1,
        "form-control",
        "form-control-lg",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "disabled",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Users"),
        d()(),
        c(7, "li", 7)(8, "a", 8),
        h(9, "Role Master"),
        d()()()(),
        c(10, "div", 9)(11, "div", 10)(12, "a", 11),
        N("click", function () {
          return t.openModal();
        }),
        z(13, "i", 12),
        h(14, "Add Roles "),
        d()(),
        c(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Roles"),
        d(),
        c(19, "h3", 16),
        h(20),
        d()()()(),
        c(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20),
        z(25, "div", 21),
        d()()(),
        c(26, "div", 22)(27, "table", 23)(28, "thead")(29, "tr")(30, "th", 24),
        h(31, "Sr No"),
        d(),
        c(32, "th", 24),
        h(33, "Role Name"),
        d(),
        c(34, "th", 24),
        h(35, "Description"),
        d()()(),
        c(36, "tbody"),
        R(37, iF, 3, 0, "tr", 25)(38, nF, 9, 3, "tr", 26),
        d()()(),
        c(39, "div", 27),
        z(40, "div", 28),
        d()()(),
        R(41, cF, 32, 10, "div", 29),
        d()),
        e & 2 &&
          (m(20),
          ee(" ", t.filteredRoles.length, " "),
          m(17),
          y("ngIf", t.paginatedRoles.length === 0),
          m(),
          y("ngForOf", t.paginatedRoles),
          m(3),
          y("ngIf", t.isModalOpen));
    },
    dependencies: [
      tt,
      Br,
      ii,
      ni,
      ei,
      Di,
      ti,
      Bi,
      fr,
      hn,
      Xi,
      Zi,
      Ae,
      It,
      At,
      Xe,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.table-responsive[_ngcontent-%COMP%]{width:100%;overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}body[_ngcontent-%COMP%]{overflow-x:hidden}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.toast-warning[_ngcontent-%COMP%]{background-color:#ff9800!important;color:#fff!important}.toast-info[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}",
    ],
  });
};
var fu = class n {
  dtOptions = {};
  ngOnInit() {
    this.dtOptions = { pagingType: "full_numbers" };
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-datatable"]],
    standalone: !0,
    features: [ce],
    decls: 94,
    vars: 1,
    consts: [["datatable", "", 1, "row-border", "hover", 3, "dtOptions"]],
    template: function (e, t) {
      e & 1 &&
        (c(0, "table", 0)(1, "thead")(2, "tr")(3, "th"),
        h(4, "ID"),
        d(),
        c(5, "th"),
        h(6, "First name"),
        d(),
        c(7, "th"),
        h(8, "Last name"),
        d()()(),
        c(9, "tbody")(10, "tr")(11, "td"),
        h(12, "1"),
        d(),
        c(13, "td"),
        h(14, "Foo"),
        d(),
        c(15, "td"),
        h(16, "Bar"),
        d()(),
        c(17, "tr")(18, "td"),
        h(19, "2"),
        d(),
        c(20, "td"),
        h(21, "Someone"),
        d(),
        c(22, "td"),
        h(23, "Youknow"),
        d()(),
        c(24, "tr")(25, "td"),
        h(26, "3"),
        d(),
        c(27, "td"),
        h(28, "Iamout"),
        d(),
        c(29, "td"),
        h(30, "Ofinspiration"),
        d()(),
        c(31, "tr")(32, "td"),
        h(33, "4"),
        d(),
        c(34, "td"),
        h(35, "Yoda"),
        d(),
        c(36, "td"),
        h(37, "Skywalker"),
        d()(),
        c(38, "tr")(39, "td"),
        h(40, "5"),
        d(),
        c(41, "td"),
        h(42, "Patrick"),
        d(),
        c(43, "td"),
        h(44, "Dupont"),
        d()(),
        c(45, "tr")(46, "td"),
        h(47, "6"),
        d(),
        c(48, "td"),
        h(49, "Barack"),
        d(),
        c(50, "td"),
        h(51, "Obama"),
        d()(),
        c(52, "tr")(53, "td"),
        h(54, "7"),
        d(),
        c(55, "td"),
        h(56, "Fran\xE7ois"),
        d(),
        c(57, "td"),
        h(58, "Holland"),
        d()(),
        c(59, "tr")(60, "td"),
        h(61, "8"),
        d(),
        c(62, "td"),
        h(63, "Michel"),
        d(),
        c(64, "td"),
        h(65, "Popo"),
        d()(),
        c(66, "tr")(67, "td"),
        h(68, "9"),
        d(),
        c(69, "td"),
        h(70, "Chuck"),
        d(),
        c(71, "td"),
        h(72, "Norris"),
        d()(),
        c(73, "tr")(74, "td"),
        h(75, "10"),
        d(),
        c(76, "td"),
        h(77, "Simon"),
        d(),
        c(78, "td"),
        h(79, "Robin"),
        d()(),
        c(80, "tr")(81, "td"),
        h(82, "11"),
        d(),
        c(83, "td"),
        h(84, "Louis"),
        d(),
        c(85, "td"),
        h(86, "Lin"),
        d()(),
        c(87, "tr")(88, "td"),
        h(89, "12"),
        d(),
        c(90, "td"),
        h(91, "Zelda"),
        d(),
        c(92, "td"),
        h(93, "Link"),
        d()()()()),
        e & 2 && y("dtOptions", t.dtOptions);
    },
    dependencies: [Ca, e1],
  });
};
var Ra = class n {
  team_id;
  team_name;
  team_lead_id;
  team_lead_email;
  total_teams;
  constructor() {
    (this.team_id = ""),
      (this.team_name = ""),
      (this.team_lead_id = ""),
      (this.team_lead_email = ""),
      (this.total_teams = 0);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var dF = (n) => ({ "is-invalid": n });
function uF(n, i) {
  n & 1 && (c(0, "tr")(1, "td", 47), h(2, "No Teams Found"), d()());
}
function hF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "tr")(1, "td"),
      h(2),
      d(),
      c(3, "td"),
      h(4),
      d(),
      c(5, "td", 48)(6, "a", 49),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.onEdit(r));
      }),
      z(7, "i", 50),
      d(),
      c(8, "a", 51),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.openDeleteModal(r));
      }),
      z(9, "i", 52),
      d()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x();
    m(2), B((r.currentPage - 1) * r.itemsPerPage + t + 1), m(2), B(e.team_name);
  }
}
function pF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "li", 53)(1, "a", 42),
      N("click", function () {
        let r = P(e).$implicit,
          o = x();
        return I(o.goToPage(r));
      }),
      h(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x();
    ne("active", e === t.currentPage), m(2), B(e);
  }
}
function mF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 54)(1, "div", 55)(2, "div", 56)(3, "div", 57)(4, "h5", 58),
      h(5, "Delete User"),
      d()(),
      c(6, "div", 59),
      h(7, "Are you sure you want to delete this user?"),
      d(),
      c(8, "div", 60)(9, "button", 61),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeDeleteModal());
      }),
      h(10, "Cancel"),
      d(),
      c(11, "button", 62),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.deleteTeamid());
      }),
      h(12, "Delete"),
      d()()()()();
  }
}
function fF(n, i) {
  n & 1 && (c(0, "span"), h(1, "Team Name is required."), d());
}
function gF(n, i) {
  if ((n & 1 && (c(0, "div", 73), R(1, fF, 2, 0, "span", 34), d()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("team_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function _F(n, i) {
  if (n & 1) {
    let e = re();
    Ue(0),
      c(1, "button", 78),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.onUpdate());
      }),
      h(2, " Edit "),
      d(),
      ze();
  }
  if (n & 2) {
    let e = x(2);
    m(), y("disabled", !e.isTeamNameChanged());
  }
}
function bF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "button", 61),
      N("click", function () {
        P(e);
        let r = x(2);
        return I(r.onSave());
      }),
      h(1, " save "),
      d();
  }
  if (n & 2) {
    let e = x(2);
    le("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function vF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 63)(1, "div", 64)(2, "div", 56)(3, "div", 57)(4, "h5", 65),
      h(5),
      d(),
      c(6, "button", 66),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeModal());
      }),
      c(7, "span", 67),
      h(8, "\xD7"),
      d()()(),
      c(9, "div", 68)(10, "form", 69)(11, "div", 70)(12, "div", 71)(
        13,
        "label",
        72
      ),
      h(14, " Team Name "),
      c(15, "span", 73),
      h(16, "*"),
      d()(),
      z(17, "input", 74),
      R(18, gF, 2, 1, "div", 75),
      d()()()(),
      c(19, "div", 60),
      R(20, _F, 3, 1, "ng-container", 76),
      c(21, "button", 77),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.closeModal());
      }),
      h(22, " Close "),
      d(),
      R(23, bF, 2, 1, "ng-template", null, 0, Pt),
      d()()()();
  }
  if (n & 2) {
    let e,
      t,
      r = _t(24),
      o = x();
    m(5),
      ee(
        " ",
        o.userObj.team_name || o.userObj.team_lead_email
          ? "Edit User"
          : "Add New Team",
        " "
      ),
      m(5),
      y("formGroup", o.useForm),
      m(7),
      y(
        "ngClass",
        de(
          6,
          dF,
          ((e = o.useForm.get("team_name")) == null ? null : e.touched) &&
            ((e = o.useForm.get("team_name")) == null ? null : e.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        ((t = o.useForm.get("team_name")) == null ? null : t.invalid) &&
          ((t = o.useForm.get("team_name")) == null ? null : t.touched)
      ),
      m(2),
      y("ngIf", o.teamObj.team_id)("ngIfElse", r);
  }
}
var gu = class n {
  constructor(i, e) {
    this.aleartsrv = i;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = pe(0);
  teamList = pe([]);
  totalteam = pe(0);
  userList = pe([]);
  teamObj = new Ra();
  count = pe(0);
  userObj = new Ra();
  previousValue = "";
  totalPages = 0;
  isModalOpen = !1;
  masterSrv = G(Qe);
  toastr = G(fi);
  useForm = new Rt({});
  isEditMode = !1;
  previousEmail = "";
  allUsers = [];
  pages = [];
  filteredTeams = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  filteredTeam = [];
  isDeleteModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  paginatedTeams = [];
  filteredTeamList = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllTeams(),
      this.getAllTeams(),
      this.displayAllTeams(),
      (this.filteredTeams = this.teamList()),
      this.paginateTeams(),
      this.filterTeams();
  }
  initializeForm() {
    this.useForm = new Rt({
      team_name: new nt("", [Re.required, Re.minLength(2), Re.maxLength(50)]),
    });
  }
  openModal(i) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      i
        ? ((this.teamObj = W({}, i)),
          this.useForm.patchValue({
            team_name: i.team_name,
            team_lead_email: i.team_lead_email,
            team_lead_id: i.team_lead_id,
          }),
          console.log("fhgir"),
          console.log("\u{1F539} Edit Mode: team Object ->", this.teamObj),
          console.log("\u{1F539} teamobj.team_id ->", this.teamObj.team_id))
        : ((this.teamObj = new Ra()),
          (this.teamObj.team_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.teamObj
          ));
  }
  onEdit(i) {
    console.log("Edit button clicked. Team ID:", i?.team_id),
      (this.isEditMode = !0),
      (this.isModalOpen = !0),
      (this.teamObj = W({}, i)),
      this.masterSrv.getTeamById(i.team_id).subscribe(
        (e) => {
          if (e?.status === 200) {
            let t = e.data?.TeamDetails;
            t
              ? (console.log("Team Details:", t),
                this.useForm.patchValue({
                  team_name: t.team_name,
                  team_lead_email: t.team_lead_email,
                  team_lead_id: t.team_lead_id,
                }),
                console.log("Form data patched, opening modal..."),
                setTimeout(() => {
                  $("#exampleModalCenter").modal("show");
                }, 0))
              : (console.error("No team details found"),
                this.toastr.error("Team details not found", "Error"));
          }
        },
        (e) => {
          console.error("Error fetching team details:", e),
            this.toastr.error("Error fetching team details", "Error");
        }
      );
  }
  isTeamNameChanged() {
    return (
      this.useForm.dirty && this.useForm.value.team_name !== this.previousValue
    );
  }
  selectedteamForDeletion = null;
  selectteamForDeletion(i) {
    (this.selectedteamForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let i = this.useForm.get("team_name"),
      e = this.useForm.get("team_lead_email"),
      t = this.useForm.get("team_id");
    if (i && t && i.value) {
      console.log("Team name value:", i.value),
        console.log("Available teams:", this.teamList());
      let r = this.teamList().find((o) => o.team_name === i.value);
      r
        ? (console.log("Selected Team:", r),
          t.setValue(r.team_id),
          e?.setValue(r.team_lead_email))
        : console.warn("Team not found:", i.value);
    }
  }
  openDeleteModal(i) {
    (this.selectedteamForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  getAllTeams() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.allUsers = i.data.rows)
          : this.toastr.warning("No teams found", "Information");
      },
      error: (i) => {
        console.error("teams fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch users", "Error");
      },
    });
  }
  updatePagination() {
    let i = this.filteredTeams,
      e = (this.currentPage - 1) * this.itemsPerPage,
      t = e + this.itemsPerPage;
    (this.paginatedTeams = i.slice(e, t)),
      (this.totalPages = Math.ceil(i.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (r, o) => o + 1));
  }
  onSearchChange() {
    (this.currentPage = 1), this.filterTeams();
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredTeam.length
    );
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = +i.target.value),
      (this.currentPage = 1),
      this.filterTeams();
  }
  filterTeams() {
    (this.filteredTeams = this.teamList().filter((i) =>
      i.team_name.toLowerCase().includes(this.searchTerm.toLowerCase())
    )),
      this.paginateTeams();
  }
  paginateTeams() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedTeams = this.filteredTeams.slice(i, e);
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateTeams();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateTeams());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateTeams());
  }
  deleteTeamid() {
    console.log(
      "this is the select user",
      this.selectteamForDeletion,
      this.selectedteamForDeletion
    ),
      this.selectedteamForDeletion && this.selectedteamForDeletion.team_id
        ? this.masterSrv
            .deleteTeam(this.selectedteamForDeletion.team_id)
            .subscribe(
              (i) => {
                this.toastr.success("Team deleted successfully", "Success"),
                  (this.isDeleteModalOpen = !1),
                  this.displayAllTeams();
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No Team selected for deletion");
  }
  displayAllTeams() {
    console.log("Fetching all teams..."),
      this.masterSrv.getMultipleTeams().subscribe({
        next: (i) => {
          i && i.data.rows
            ? (this.teamList.set(i.data.rows),
              (this.filteredTeams = i.data.rows),
              this.totalteam.set(i.data.rows.length),
              this.initializeTeamPagination())
            : (this.teamList.set([]),
              (this.filteredTeams = []),
              this.toastr.warning("No team found", "Information"),
              this.totalteam.set(0),
              this.initializeTeamPagination());
        },
        error: (i) => {
          console.error("team fetch error:", i),
            this.toastr.error(i.message || "Failed to fetch team", "Error"),
            this.teamList.set([]),
            (this.filteredTeams = []),
            this.totalteam.set(0),
            this.initializeTeamPagination();
        },
      });
  }
  initializeTeamPagination() {
    let i = this.filteredTeams.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateTeams();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.teamObj = W(W({}, this.teamObj), this.useForm.value)),
        console.log("\u{1F680} Updated Payload before API call:", this.teamObj),
        this.masterSrv.updateTeam(this.teamObj).subscribe(
          (i) => {
            i.status === 200
              ? (console.log("\u2705 Update Success:", i),
                this.toastr.success(i.message, "Success"),
                this.displayAllTeams(),
                this.closeModal(),
                this.userList.set(
                  this.userList().map((e) =>
                    e.team_id === this.teamObj.team_id
                      ? W(W({}, e), this.teamObj)
                      : e
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0))
              : this.toastr.error("Update failed", "Error");
          },
          (i) => {
            console.error("\u274C API Error:", i),
              this.toastr.error("Failed to update team", "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  closeModal() {
    this.isModalOpen = !1;
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof Rt && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let i = this.useForm.value;
    console.log("Form Data being sent to API:", i),
      this.masterSrv.createNewTeam(i).subscribe({
        next: (e) => {
          this.toastr.success("Team created successfully!", "Success"),
            this.displayAllTeams(),
            this.closeModal(),
            setTimeout(() => {
              this.cdr.detectChanges(), this.cdr.markForCheck();
            }, 0);
        },
        error: (e) => {
          console.error("Team creation error:", e);
          let t = e?.error?.message || "Failed to create team";
          this.toastr.error(t, "Creation Error");
        },
      });
  }
  loadTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (i) => {
        this.count.set(i.data.count), this.teamList.set(i.data.rows);
      },
      error: (i) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", i);
      },
    });
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Aa), H(Ke));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-team"]],
    standalone: !0,
    features: [ce],
    decls: 71,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search teams...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "3", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "team_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "team_name",
        "type",
        "text",
        "formControlName",
        "team_name",
        "placeholder",
        "Team Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Utils"),
        d()(),
        c(7, "li", 7)(8, "a", 8),
        h(9, "Team Master"),
        d()()()(),
        c(10, "div", 9)(11, "div", 10)(12, "a", 11),
        N("click", function () {
          return t.openModal();
        }),
        z(13, "i", 12),
        h(14, "Add Team "),
        d()(),
        c(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Team"),
        d(),
        c(19, "h3", 16),
        h(20),
        d()()()(),
        c(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        z(26, "label", 22),
        c(27, "select", 23),
        N("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        c(28, "option", 24),
        h(29, "10"),
        d(),
        c(30, "option", 25),
        h(31, "25"),
        d(),
        c(32, "option", 26),
        h(33, "50"),
        d(),
        c(34, "option", 27),
        h(35, "100"),
        d()(),
        c(36, "label", 28),
        h(37, "records per page"),
        d()(),
        c(38, "div", 29)(39, "div", 30)(40, "input", 31),
        ht("ngModelChange", function (o) {
          return ut(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        N("input", function () {
          return t.onSearchChange();
        }),
        d()()()(),
        h(41, " \xA0\xA0 "),
        d(),
        c(42, "div", 32)(43, "table", 33)(44, "thead")(45, "tr")(46, "th"),
        h(47, "Sr No"),
        d(),
        c(48, "th"),
        h(49, "Team Name"),
        d(),
        c(50, "th"),
        h(51, "Action"),
        d()()(),
        c(52, "tbody"),
        R(53, uF, 3, 0, "tr", 34)(54, hF, 10, 2, "tr", 35),
        d()()(),
        c(55, "div", 36)(56, "div", 37)(57, "div", 38),
        h(58),
        d()(),
        c(59, "div", 37)(60, "div", 39)(61, "ul", 40)(62, "li", 41)(
          63,
          "a",
          42
        ),
        N("click", function () {
          return t.previousPage();
        }),
        h(64, "Previous"),
        d()(),
        R(65, pF, 3, 3, "li", 43),
        c(66, "li", 44)(67, "a", 42),
        N("click", function () {
          return t.nextPage();
        }),
        h(68, "Next"),
        d()()()()()()()()()(),
        R(69, mF, 13, 0, "div", 45)(70, vF, 25, 8, "div", 46)),
        e & 2 &&
          (m(20),
          ee(" ", t.totalteam(), " "),
          m(20),
          dt("ngModel", t.searchTerm),
          m(13),
          y("ngIf", t.paginatedTeams.length === 0),
          m(),
          y("ngForOf", t.paginatedTeams),
          m(4),
          Fi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.currentPage * t.itemsPerPage < t.teamList().length
              ? t.currentPage * t.itemsPerPage
              : t.teamList().length,
            " of ",
            t.teamList().length,
            " entries "
          ),
          m(4),
          ne("disabled", t.currentPage === 1),
          m(3),
          y("ngForOf", t.visiblePages),
          m(),
          ne("disabled", t.currentPage === t.totalPages),
          m(3),
          y("ngIf", t.isDeleteModalOpen),
          m(),
          y("ngIf", t.isModalOpen));
    },
    dependencies: [
      Ae,
      It,
      At,
      Xe,
      tt,
      Br,
      ii,
      ni,
      ei,
      ti,
      Bi,
      fr,
      _i,
      hn,
      Xi,
      Zi,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}",
    ],
  });
};
var yF = ["dropdown"],
  xF = ["modelDropdown"],
  CF = ["psDropdown"],
  Sf = (n) => ({ color: n }),
  _u = (n) => ({ "background-color": n });
function wF(n, i) {
  n & 1 && (c(0, "div"), z(1, "router-outlet"), d());
}
function DF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 43),
      N("click", function (r) {
        return P(e), I(r.stopPropagation());
      }),
      c(1, "input", 44),
      N("change", function (r) {
        let o = P(e).$implicit,
          a = x(2);
        return I(a.onDealerChange(o.dealer_id, r));
      }),
      d(),
      c(2, "label", 45),
      h(3),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(2);
    m(),
      y("id", e.dealer_id)("checked", t.selectedDealers.includes(e.dealer_id)),
      m(),
      y("for", e.dealer_id),
      m(),
      B(e.dealer_name);
  }
}
function SF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 46)(1, "input", 44),
      N("change", function (r) {
        let o = P(e).$implicit,
          a = x(2);
        return I(a.onPSChange(o.user_id, r));
      }),
      d(),
      c(2, "label", 45),
      h(3),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(2);
    m(),
      y("id", e.user_id)("checked", t.selectedPSs.includes(e.user_id)),
      m(),
      y("for", e.user_id),
      m(),
      B(e.name);
  }
}
function MF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 46)(1, "input", 44),
      N("change", function () {
        let r = P(e).$implicit,
          o = x(2);
        return I(o.onModelChange(r.model));
      }),
      d(),
      c(2, "label", 45),
      h(3),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index;
    m(),
      y("id", "model-" + t)("checked", e.selected),
      m(),
      y("for", "model-" + t),
      m(),
      B(e.model_name);
  }
}
function TF(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 47)(1, "div", 48)(2, "div", 49)(3, "span", 50),
      h(4),
      d(),
      c(5, "div", 51)(6, "span", 52),
      h(7),
      d(),
      ft(),
      c(8, "svg", 53),
      z(9, "path", 54),
      d()()(),
      $n(),
      c(10, "div", 55),
      z(11, "div", 56),
      d()(),
      c(12, "div", 57)(13, "div", 58),
      h(14, "GROWTH"),
      d(),
      c(15, "div", 59),
      h(16),
      d()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(2);
    m(4),
      B(e.name),
      m(3),
      Yn("", e.value, " | ", e.target, "%"),
      m(),
      y("ngClass", e.growth >= 0 ? "trend-up" : "trend-down"),
      m(),
      le("d", e.growth >= 0 ? "M5 12l5-5 9 9" : "M19 12l-5 5-9-9"),
      m(2),
      si("width", e.achieved, "%"),
      y("ngStyle", de(13, _u, t.getProgressColor(e.achieved))),
      m(),
      ne("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      m(4),
      ee(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function EF(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 47)(1, "div", 48)(2, "div", 49)(3, "span", 50),
      h(4),
      d(),
      c(5, "div", 51)(6, "span", 52),
      h(7),
      d(),
      ft(),
      c(8, "svg", 53),
      z(9, "path", 54),
      d()()(),
      $n(),
      c(10, "div", 55),
      z(11, "div", 56),
      d()(),
      c(12, "div", 57)(13, "div", 58),
      h(14, "GROWTH"),
      d(),
      c(15, "div", 59),
      h(16),
      d()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(2);
    m(4),
      B(e.name),
      m(3),
      Yn("", e.value, " | ", e.target, "%"),
      m(),
      y("ngClass", e.growth >= 0 ? "trend-up" : "trend-down"),
      m(),
      le("d", e.growth >= 0 ? "M5 12l5-5 9 9" : "M19 12l-5 5-9-9"),
      m(2),
      si("width", e.achieved, "%"),
      y("ngStyle", de(13, _u, t.getProgressColor(e.achieved))),
      m(),
      ne("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      m(4),
      ee(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function OF(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 47)(1, "div", 48)(2, "div", 49)(3, "span", 50),
      h(4),
      d(),
      c(5, "div", 51)(6, "span", 52),
      h(7),
      d(),
      ft(),
      c(8, "svg", 53),
      z(9, "path", 54),
      d()()(),
      $n(),
      c(10, "div", 55),
      z(11, "div", 56),
      d()(),
      c(12, "div", 57)(13, "div", 58),
      h(14, "GROWTH"),
      d(),
      c(15, "div", 59),
      h(16),
      d()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(2);
    m(4),
      B(e.name),
      m(3),
      Yn("", e.value, " | ", e.target, "%"),
      m(),
      y("ngClass", e.growth >= 0 ? "trend-up" : "trend-down"),
      m(),
      le("d", e.growth >= 0 ? "M5 12l5-5 9 9" : "M19 12l-5 5-9-9"),
      m(2),
      si("width", e.achieved, "%"),
      y("ngStyle", de(13, _u, t.getProgressColor(e.achieved))),
      m(),
      ne("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      m(4),
      ee(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function kF(n, i) {
  if (
    (n & 1 &&
      (c(0, "div", 47)(1, "div", 48)(2, "div", 49)(3, "span", 50),
      h(4),
      d(),
      c(5, "div", 51)(6, "span", 52),
      h(7),
      d(),
      ft(),
      c(8, "svg", 53),
      z(9, "path", 54),
      d()()(),
      $n(),
      c(10, "div", 55),
      z(11, "div", 56),
      d()(),
      c(12, "div", 57)(13, "div", 58),
      h(14, "GROWTH"),
      d(),
      c(15, "div", 59),
      h(16),
      d()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(2);
    m(4),
      B(e.name),
      m(3),
      Yn("", e.value, " | ", e.target, "%"),
      m(),
      y("ngClass", e.growth >= 0 ? "trend-up" : "trend-down"),
      m(),
      le("d", e.growth >= 0 ? "M5 12l5-5 9 9" : "M19 12l-5 5-9-9"),
      m(2),
      si("width", e.achieved, "%"),
      y("ngStyle", de(13, _u, t.getProgressColor(e.achieved))),
      m(),
      ne("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      m(4),
      ee(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function PF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div")(1, "div", 3)(2, "div", 6)(3, "div", 7)(4, "section", 8)(
      5,
      "h2"
    ),
      ft(),
      c(6, "svg", 9),
      z(7, "path", 10),
      d(),
      h(8, " Filters "),
      d(),
      $n(),
      c(9, "div", 11),
      ft(),
      c(10, "svg", 12),
      z(11, "path", 10),
      d(),
      $n(),
      c(12, "select", 13),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x();
        return ut(o.selectedFilter, r) || (o.selectedFilter = r), I(r);
      }),
      N("change", function () {
        P(e);
        let r = x();
        return I(r.onFilterChange(r.selectedFilter));
      }),
      c(13, "option", 14),
      h(14, "Today"),
      d(),
      c(15, "option", 15),
      h(16, "Yesterday"),
      d(),
      c(17, "option", 16),
      h(18, "This Week"),
      d(),
      c(19, "option", 17),
      h(20, "Last Week"),
      d(),
      c(21, "option", 18),
      h(22, "This Month"),
      d(),
      c(23, "option", 19),
      h(24, "Last Month"),
      d(),
      c(25, "option", 20),
      h(26, "This Quarter"),
      d(),
      c(27, "option", 21),
      h(28, "Last Quarter"),
      d(),
      c(29, "option", 22),
      h(30, "Last 6 Months"),
      d()()(),
      c(31, "div", 23, 0),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.toggleDropdown());
      }),
      c(33, "div", 24),
      h(34),
      d(),
      c(35, "div", 25),
      R(36, DF, 4, 4, "div", 26),
      d()(),
      c(37, "div", 23, 1),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.togglePSDropdown());
      }),
      c(39, "div", 24),
      h(40),
      d(),
      c(41, "div", 27),
      N("click", function (r) {
        return P(e), I(r.stopPropagation());
      }),
      R(42, SF, 4, 4, "div", 28),
      d()(),
      c(43, "div", 23, 2),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.toggleModelDropdown());
      }),
      c(45, "div", 24),
      h(46),
      d(),
      c(47, "div", 27),
      N("click", function (r) {
        return P(e), I(r.stopPropagation());
      }),
      R(48, MF, 4, 4, "div", 28),
      d()(),
      c(49, "div", 29)(50, "button", 30),
      N("click", function () {
        P(e);
        let r = x();
        return I(r.resetFilters());
      }),
      h(51, "Reset"),
      d()()()(),
      c(52, "section", 31)(53, "div", 32)(54, "div", 33)(55, "h3", 34),
      h(56, " Efforts "),
      d(),
      c(57, "span", 35),
      z(58, "span", 36),
      c(59, "span", 37),
      h(60),
      d(),
      h(61, " overall "),
      d()(),
      c(62, "div", 38),
      R(63, TF, 17, 15, "div", 39),
      d()(),
      c(64, "div", 32)(65, "div", 40)(66, "h3", 34),
      h(67, " Productivity "),
      d(),
      c(68, "span", 35),
      z(69, "span", 36),
      c(70, "span", 37),
      h(71),
      d(),
      h(72, " overall "),
      d()(),
      c(73, "div", 38),
      R(74, EF, 17, 15, "div", 39),
      d()(),
      c(75, "div", 32)(76, "div", 41)(77, "h3"),
      h(78, "Active PS"),
      d(),
      c(79, "span", 42),
      z(80, "span", 36),
      h(81, " Live"),
      d()(),
      c(82, "div", 38),
      R(83, OF, 17, 15, "div", 39),
      d()(),
      c(84, "div", 32)(85, "div", 40)(86, "h3", 34),
      h(87, " Other KPIs "),
      d(),
      c(88, "span", 35),
      z(89, "span", 36),
      c(90, "span", 37),
      h(91),
      d(),
      h(92, " target "),
      d()(),
      c(93, "div", 38),
      R(94, kF, 17, 15, "div", 39),
      d()()()()()();
  }
  if (n & 2) {
    let e = x();
    m(12),
      dt("ngModel", e.selectedFilter),
      m(19),
      ne("open", e.dropdownOpen),
      m(3),
      ee(
        " ",
        e.selectedDealers.length
          ? e.selectedDealers.length + " selected"
          : "Select Dealers",
        " "
      ),
      m(2),
      y("ngForOf", e.allDealers),
      m(),
      ne("open", e.dropdownPSOpen),
      m(3),
      ee(
        " ",
        e.selectedPSs.length ? e.selectedPSs.length + " selected" : "Select PS",
        " "
      ),
      m(2),
      y("ngForOf", e.users),
      m(),
      ne("open", e.modelDropdownOpen),
      m(3),
      ee(
        " ",
        e.selectedModels.length
          ? e.selectedModels.length + " selected"
          : "Select Models",
        " "
      ),
      m(2),
      y("ngForOf", e.models),
      m(11),
      y(
        "ngStyle",
        de(23, Sf, e.getKpiColor(e.categoryPercentages.Efforts || 0))
      ),
      m(),
      ee(" ", e.categoryPercentages.Efforts || 0, "% "),
      m(3),
      y("ngForOf", e.efforts),
      m(7),
      y(
        "ngStyle",
        de(25, Sf, e.getKpiColor(e.categoryPercentages.Productivity || 0))
      ),
      m(),
      ee(" ", e.categoryPercentages.Productivity || 0, "% "),
      m(3),
      y("ngForOf", e.productivity),
      m(9),
      y("ngForOf", e.activePSKpis),
      m(7),
      y(
        "ngStyle",
        de(27, Sf, e.getKpiColor(e.categoryPercentages["Other KPIs"] || 0))
      ),
      m(),
      ee(" ", e.categoryPercentages["Other KPIs"] || 0, "% "),
      m(3),
      y("ngForOf", e.otherKpis);
  }
}
var Tl = class n {
  constructor(i, e, t, r) {
    this.sidebarService = i;
    this.router = e;
    this.http = t;
    this.cd = r;
  }
  selectedTab = "dashboard";
  isSidebarOpen = !0;
  dropdownOpen = !1;
  modelDropdownOpen = !1;
  selectedModels = [];
  selectedDealer = "all";
  selectedPS = "all";
  models = [];
  selectedFilter = "DAY";
  selectedDealers = [];
  allDealers = [];
  dropdown;
  modelDropdown;
  psDropdown;
  aggregatedMetrics;
  efforts = [];
  productivity = [];
  otherKpis = [];
  activePSKpis = [];
  selectedPSs = [];
  dropdownPSOpen = !1;
  selectedModel = "all";
  dealers = [];
  users = [];
  categoryPercentages = { Efforts: 0, Productivity: 0, "Other KPIs": 0 };
  ngOnInit() {
    (this.efforts = []),
      this.loadDealers(),
      this.sidebarService.isOpen$.subscribe((e) => {
        this.isSidebarOpen = e;
      });
    let i = this.router.url;
    i.includes("/Admin/dashboard")
      ? (this.selectedTab = "dashboard")
      : i.includes("/Admin/summary") && (this.selectedTab = "summary"),
      this.router.events.pipe(Ct((e) => e instanceof ci)).subscribe((e) => {
        e.urlAfterRedirects.includes("/Admin/dashboard")
          ? (this.selectedTab = "dashboard")
          : e.urlAfterRedirects.includes("/Admin/summary") &&
            (this.selectedTab = "summary");
      });
  }
  getOverallProgress() {
    if (!this.efforts || this.efforts.length === 0) return 0;
    let i = this.efforts.reduce((e, t) => e + t.achieved, 0);
    return Math.round(i / this.efforts.length);
  }
  toggleSidebar() {
    this.sidebarService.toggleSidebar();
  }
  selectTab(i) {
    this.selectedTab = i;
  }
  isActive(i) {
    return this.router.url.includes(`/Admin/${i}`);
  }
  navigateTo(i) {
    this.router.navigate(["/Admin", i]);
  }
  navigateToSingleDealer(i) {
    this.router.navigate(["/Admin/singleDealer", i]);
  }
  resetFilters() {
    (this.selectedFilter = "DAY"),
      (this.selectedDealers = []),
      (this.selectedPSs = []),
      (this.selectedModels = []),
      this.loadDealers(this.selectedFilter, this.selectedDealer);
  }
  getKpis(i) {
    if (!i.aggregatedMetrics) return [];
    let { efforts: e, productivity: t, otherKpis: r } = i.aggregatedMetrics;
    return [
      ...Object.values(e || {}),
      ...Object.values(t || {}),
      ...Object.values(r || {}),
    ];
  }
  onFilterChange(i) {
    (this.selectedFilter = i),
      console.log("Filter changed:", i),
      this.loadDealers(this.selectedFilter, this.selectedDealer);
  }
  toggleDropdown() {
    this.dropdownOpen = !this.dropdownOpen;
  }
  onDealerToggle(i, e) {
    e.stopPropagation(),
      this.selectedDealers.includes(i)
        ? (this.selectedDealers = this.selectedDealers.filter((r) => r !== i))
        : this.selectedDealers.push(i);
    let t = this.selectedDealers.length
      ? this.selectedDealers.join(",")
      : "all";
    this.loadDealers(this.selectedFilter, t);
  }
  onDealerChange(i, e) {
    e.target.checked
      ? this.selectedDealers.push(i)
      : (this.selectedDealers = this.selectedDealers.filter((a) => a !== i));
    let t =
        this.selectedDealers.length > 0
          ? this.selectedDealers.join(",")
          : "all",
      r = this.selectedPSs.length > 0 ? this.selectedPSs.join(",") : "all",
      o =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(this.selectedFilter, t, r, o);
  }
  loadDealers(i = "DAY", e = "all", t = null, r = "") {
    let o = "https://uat.smartassistapp.in/api/superAdmin/dashboard/summary",
      a = localStorage.getItem("token"),
      l = "";
    e &&
      e !== "all" &&
      (Array.isArray(e)
        ? (l += `dealer_ids=${e.join(",")}&`)
        : ((l += `dealer_ids=${e}&`), (e = e.split(",")))),
      t &&
        t !== "all" &&
        (Array.isArray(t)
          ? (l += `user_id=${t.join(",")}&`)
          : ((l += `user_id=${t}&`), (t = t.split(",")))),
      (l += `type=${i}`),
      r && r !== "all" && (l += `&modal=${encodeURIComponent(r)}`),
      console.log("API call URL:", `${o}?${l}`),
      this.http
        .get(`${o}?${l}`, { headers: { Authorization: `Bearer ${a}` } })
        .subscribe({
          next: (u) => {
            console.log("Full API response:", u),
              (!this.allDealers || this.allDealers.length === 0) &&
                (this.allDealers = u.dealers || []);
            let f = u.models || [];
            this.models = f.map((E) =>
              Ce(W({}, E), { selected: this.selectedModels.includes(E.model) })
            );
            let v = Array.isArray(e) ? e : [e],
              D = !t || t === "all" ? [] : Array.isArray(t) ? t : t.split(","),
              T =
                e === "all"
                  ? [...this.allDealers]
                  : this.allDealers.filter((E) =>
                      v.includes(E.dealerId || E.dealer_id)
                    );
            (this.dealers = T),
              (this.users =
                e === "all"
                  ? this.allDealers.flatMap((E) => E.users || [])
                  : T.flatMap((E) => E.users || []));
            let M = null,
              k = v.length > 0 && v[0] !== "all",
              V = D.length > 0,
              A = r && r !== "all";
            if (
              (!k && !V && !A
                ? (M = u.dealerAggregatedMetrics)
                : k && !V
                ? (M = u.selectedDealerAggregatedMetrics)
                : V
                ? (M = u.selectedUserAggregatedMetrics)
                : !k && !V && A && (M = u.dealerAggregatedMetrics),
              !M && this.dealers[0] && (M = this.dealers[0]),
              M)
            ) {
              (this.efforts = Object.values(M.efforts || {})),
                (this.productivity = Object.values(M.productivity || {}));
              let E = Object.values(M.otherKpis || {});
              (this.activePSKpis = E.filter((X) => X.name === "By Test Drive")),
                (this.otherKpis = E.filter((X) => X.name !== "By Test Drive")),
                (this.categoryPercentages = M.categoryPercentages || {
                  Efforts: 0,
                  Productivity: 0,
                  "Other KPIs": 0,
                });
            }
          },
          error: (u) => {
            console.error("Error fetching data", u),
              (this.efforts = []),
              (this.productivity = []),
              (this.activePSKpis = []),
              (this.otherKpis = []),
              (this.categoryPercentages = {
                Efforts: 0,
                Productivity: 0,
                "Other KPIs": 0,
              });
          },
        });
  }
  onPSChange(i, e) {
    e.target.checked
      ? this.selectedPSs.includes(i) || this.selectedPSs.push(i)
      : (this.selectedPSs = this.selectedPSs.filter((a) => a !== i));
    let t =
        this.selectedDealers.length > 0
          ? this.selectedDealers.join(",")
          : "all",
      r = this.selectedPSs.length > 0 ? this.selectedPSs.join(",") : "all",
      o =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(this.selectedFilter, t, r, o);
  }
  clickOutside(i) {
    let e = i.target;
    this.modelDropdownOpen &&
      this.modelDropdown &&
      !this.modelDropdown.nativeElement.contains(e) &&
      (this.modelDropdownOpen = !1),
      this.dropdownOpen &&
        this.dropdown &&
        !this.dropdown.nativeElement.contains(e) &&
        (this.dropdownOpen = !1),
      this.dropdownPSOpen &&
        this.psDropdown &&
        !this.psDropdown.nativeElement.contains(e) &&
        (this.dropdownPSOpen = !1);
  }
  getProgressColor(i) {
    return i <= 50 ? "#fecaca" : i <= 80 ? "#fde68a" : "#bbf7d0";
  }
  getKpiColor(i) {
    return i <= 50 ? "red" : i <= 80 ? "amber" : "green";
  }
  onModelChange(i) {
    let e = this.selectedModels.indexOf(i);
    e > -1 ? this.selectedModels.splice(e, 1) : this.selectedModels.push(i),
      (this.models = this.models.map((t) =>
        Ce(W({}, t), { selected: this.selectedModels.includes(t.model) })
      )),
      this.callAPI();
  }
  getSelectedDealerNames() {
    return !this.selectedDealers || this.selectedDealers.length === 0
      ? "All Dealers"
      : this.selectedDealers.map((i) => this.getDealerName(i)).join(", ");
  }
  abs(i) {
    return Math.abs(i);
  }
  toggleModelDropdown() {
    this.modelDropdownOpen = !this.modelDropdownOpen;
  }
  toggleAllModels(i) {
    i.target.checked
      ? (this.selectedModels = this.models.map((e) => e.model))
      : (this.selectedModels = []),
      this.callAPI();
  }
  callAPI() {
    let i = this.selectedModels.length ? this.selectedModels.join(",") : "all",
      e =
        this.selectedDealers.length > 0
          ? this.selectedDealers.join(",")
          : "all",
      t = this.selectedPSs.length > 0 ? this.selectedPSs.join(",") : "all";
    this.loadDealers(this.selectedFilter, e, t, i);
  }
  onCheckboxChange(i) {
    let e = i.target.value;
    i.target.checked
      ? this.selectedDealers.push(e)
      : (this.selectedDealers = this.selectedDealers.filter((r) => r !== e));
    let t =
      this.selectedDealers.length === 0
        ? "all"
        : this.selectedDealers.join(",");
    this.loadDealers(this.selectedFilter, t);
  }
  getDealerName(i) {
    let e = this.allDealers.find((t) => t.dealer_id === i);
    return e ? e.dealer_name : "";
  }
  isDealerSelected(i) {
    return this.selectedDealers.includes(i.dealer_id);
  }
  toggleDealerSelection(i) {
    let e = i.dealer_id;
    this.selectedDealers.includes(e)
      ? (this.selectedDealers = this.selectedDealers.filter((r) => r !== e))
      : this.selectedDealers.push(e);
    let t =
      this.selectedDealers.length === 0
        ? "all"
        : this.selectedDealers.join(",");
    this.loadDealers(this.selectedFilter, t);
  }
  togglePSDropdown() {
    this.dropdownPSOpen = !this.dropdownPSOpen;
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Hr), H(Mt), H(Bt), H(Ke));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-overview"]],
    viewQuery: function (e, t) {
      if ((e & 1 && (yt(yF, 5), yt(xF, 5), yt(CF, 5)), e & 2)) {
        let r;
        ot((r = at())) && (t.dropdown = r.first),
          ot((r = at())) && (t.modelDropdown = r.first),
          ot((r = at())) && (t.psDropdown = r.first);
      }
    },
    hostBindings: function (e, t) {
      e & 1 &&
        N(
          "click",
          function (o) {
            return t.clickOutside(o);
          },
          !1,
          qo
        );
    },
    standalone: !0,
    features: [ce],
    decls: 4,
    vars: 3,
    consts: [
      ["dropdown", ""],
      ["psDropdown", ""],
      ["modelDropdown", ""],
      [1, "mt-4"],
      [3, "ngSwitch"],
      [4, "ngSwitchCase"],
      [1, "sa-dashboard-container"],
      [1, "filters-wrap"],
      [1, "filters"],
      [
        "width",
        "18",
        "height",
        "18",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "stroke",
        "currentColor",
      ],
      [
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
        "stroke-width",
        "2",
        "d",
        "M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z",
      ],
      [1, "select"],
      ["viewBox", "0 0 24 24", "fill", "none", "stroke", "currentColor"],
      [3, "ngModelChange", "change", "ngModel"],
      ["value", "DAY"],
      ["value", "YESTERDAY"],
      ["value", "WEEK"],
      ["value", "LAST_WEEK"],
      ["value", "MTD"],
      ["value", "LAST_MONTH"],
      ["value", "QTD"],
      ["value", "LAST_QUARTER"],
      ["value", "SIX_MONTH"],
      [1, "select-dropdown", 3, "click"],
      [1, "dropdown-label"],
      [1, "dropdown-menu"],
      ["class", "checkbox-item", 3, "click", 4, "ngFor", "ngForOf"],
      [1, "dropdown-menu", 3, "click"],
      ["class", "checkbox-item", 4, "ngFor", "ngForOf"],
      [1, "filter-actions"],
      ["type", "button", 1, "btn", 3, "click"],
      [1, "kpi-grid"],
      [1, "kpi-card"],
      [
        1,
        "card-header",
        2,
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "12px",
      ],
      [
        2,
        "margin",
        "0",
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "6px",
        "margin-left",
        "-10px",
      ],
      [
        "id",
        "chipdiv",
        1,
        "chip",
        2,
        "border",
        "1px solid #ccc",
        "background",
        "#f1f5ff",
        "margin-left",
        "auto",
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "4px",
      ],
      [1, "dot"],
      [1, "count", 2, "font-weight", "bold", 3, "ngStyle"],
      [1, "kpi-items"],
      ["class", "kpi-item-wrapper", 4, "ngFor", "ngForOf"],
      [
        1,
        "card-header",
        2,
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "8px",
      ],
      [1, "card-header"],
      [1, "chip"],
      [1, "checkbox-item", 3, "click"],
      ["type", "checkbox", 3, "change", "id", "checked"],
      [3, "for"],
      [1, "checkbox-item"],
      [1, "kpi-item-wrapper"],
      [1, "kpi-item"],
      [1, "kpi-row"],
      [1, "kpi-label"],
      [1, "kpi-values"],
      [1, "kpi-actual"],
      [
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "stroke",
        "currentColor",
        1,
        "trend-icon",
        3,
        "ngClass",
      ],
      [
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
        "stroke-width",
        "2",
      ],
      [1, "progress"],
      [1, "bar", 3, "ngStyle"],
      [1, "growth-box"],
      [1, "growth-title"],
      [1, "growth-value"],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "div", 3),
        Ue(1, 4),
        R(2, wF, 2, 0, "div", 5)(3, PF, 95, 29, "div", 5),
        ze(),
        d()),
        e & 2 &&
          (m(),
          y("ngSwitch", t.selectedTab),
          m(),
          y("ngSwitchCase", "dashboard"),
          m(),
          y("ngSwitchCase", "summary"));
    },
    dependencies: [Si, It, At, Pr, Jl, ec, ii, ni, Di, ti, _i, po, tt],
    styles: [
      '.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:7rem}@media (min-width: 768px) and (max-width: 819px){.content-body[_ngcontent-%COMP%]{margin-left:42px!important}}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .deznav[_ngcontent-%COMP%]{width:80px}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .nav-text[_ngcontent-%COMP%]{display:none}@media (min-width: 2560px){.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:336px!important}}@media screen and (min-width: 1920px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:336px}}@media screen and (width: 1366px){.content-body[_ngcontent-%COMP%]{margin-left:4rem}}#main-wrapper[_ngcontent-%COMP%]{display:flex}.content-body[_ngcontent-%COMP%]{transition:margin-left .3s ease;width:100%}.content-section[_ngcontent-%COMP%]{padding:20px;margin-top:70px}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:2rem;margin-top:20px}.performance-panel[_ngcontent-%COMP%]{flex:1;background:#f9f9f9;border-radius:8px;padding:20px;height:300px}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px}.metric-box[_ngcontent-%COMP%]{background:#fff;padding:1rem;border-radius:8px;text-align:center;box-shadow:0 2px 4px #0000001a}.super-header[_ngcontent-ng-c3749377617][_ngcontent-%COMP%]{background-color:#fff;margin-top:15px}.content-body[_ngcontent-%COMP%]   .container-fluid[_ngcontent-%COMP%], .content-body[_ngcontent-%COMP%]{padding-top:0}.tracking-tight[_ngcontent-%COMP%]{letter-spacing:-.025em}.font-bold[_ngcontent-%COMP%]{font-weight:700}@media (max-width: 768px){.tracking-tight[_ngcontent-%COMP%]{font-size:1.125rem}}[_ngcontent-%COMP%]:root{--bg: #0b1020;--bg-soft: #0e1428;--card: rgba(255, 255, 255, .06);--card-border: rgba(255, 255, 255, .14);--text: #e8edf6;--muted: #a6b0c3;--brand: #7aa2ff;--brand-2: #6ae3ff;--success: #34d399;--danger: #ef4444;--warn: #f59e0b;--ring: rgba(122, 162, 255, .35);--chip: #1b223a;--select: #111832;--grid-line: rgba(255, 255, 255, .06);--shadow: 0 10px 30px rgba(0, 0, 0, .35), 0 2px 8px rgba(0, 0, 0, .25);--radius: 16px;--radius-sm: 12px;--radius-xs: 8px;--blur: 12px;--fw-600: 600;--fw-700: 700}[data-theme=light][_ngcontent-%COMP%]{--bg: #f7f9fc;--bg-soft: #eef2fb;--card: #ffffff;--card-border: #e7e9f2;--text: #1a2234;--muted: #5b657a;--brand: #2563eb;--brand-2: #60a5fa;--success: #10b981;--danger: #ef4444;--warn: #d97706;--ring: rgba(37, 99, 235, .2);--chip: #f1f5ff;--select: #ffffff;--grid-line: rgba(26, 34, 52, .06);--shadow: 0 10px 30px rgba(16, 24, 40, .08), 0 2px 8px rgba(16, 24, 40, .06)}*[_ngcontent-%COMP%]{box-sizing:border-box}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}.dashboard-header[_ngcontent-%COMP%]{background-color:#fff!important;padding:15px;box-shadow:0 4px 6px #0000001a}body[_ngcontent-%COMP%]{margin:0;font-family:Inter,ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Helvetica Neue,Arial,"Apple Color Emoji","Segoe UI Emoji";color:var(--text);background:radial-gradient(1200px 800px at 10% -10%,var(--brand-2) 0%,transparent 35%),radial-gradient(1000px 700px at 120% 10%,var(--brand) 0%,transparent 30%),linear-gradient(180deg,var(--bg-soft),var(--bg));background-attachment:fixed;line-height:1.6}.grid-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;pointer-events:none;background:linear-gradient(var(--grid-line) 1px,transparent 1px) 0 0/ 100% 48px,linear-gradient(90deg,var(--grid-line) 1px,transparent 1px) 0 0/ 48px 100%;mask-image:radial-gradient(1200px 800px at 40% 0%,rgba(0,0,0,.35),transparent 70%)}.container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:28px 20px 56px}.header[_ngcontent-%COMP%]{position:relative;margin-bottom:20px;padding:24px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);overflow:hidden}.header[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;background:radial-gradient(600px 150px at 20% 0%,rgba(255,255,255,.12),transparent 40%);pointer-events:none}.header-top[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px;justify-content:space-between;margin-bottom:10px}.brand-chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:10px;background:var(--chip);border:1px solid var(--card-border);padding:8px 12px;border-radius:999px;font-size:12px;color:var(--muted)}.brand-dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background:linear-gradient(135deg,var(--brand),var(--brand-2));box-shadow:0 0 0 6px var(--ring)}.theme-toggle[_ngcontent-%COMP%]{border:1px solid var(--card-border);background:var(--chip);color:var(--text);border-radius:999px;padding:8px 12px;cursor:pointer;transition:transform .15s ease}.theme-toggle[_ngcontent-%COMP%]:hover{transform:translateY(-1px)}.main-title[_ngcontent-%COMP%]{margin:6px 0 4px;font-weight:var(--fw-700);letter-spacing:.2px;font-size:clamp(22px,3.4vw,32px);background:linear-gradient(90deg,var(--text),var(--brand));-webkit-background-clip:text;background-clip:text;color:#000!important}.subtitle[_ngcontent-%COMP%]{color:var(--muted);font-size:14px}.progress[_ngcontent-%COMP%]{width:100%;height:10px;background:#f0f0f0;border-radius:6px;overflow:hidden;margin-top:6px}.filters-wrap[_ngcontent-%COMP%]{position:sticky;top:10px;z-index:5;margin:18px 0 28px;background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a}.trend-up[_ngcontent-%COMP%]{color:green}.trend-down[_ngcontent-%COMP%]{color:red}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:14px;align-items:center}.filters[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:14px;font-weight:var(--fw-600);color:var(--muted);margin:0 6px 0 2px;display:flex;align-items:center;gap:8px}.select[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;background:var(--select);border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px;min-width:230px;transition:box-shadow .2s ease,border-color .2s ease}.select[_ngcontent-%COMP%]:focus-within{box-shadow:0 0 0 6px var(--ring);border-color:var(--brand)}.select[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:18px;height:18px;opacity:.7}.select[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{border:0;background:transparent;color:var(--text);width:100%;padding:6px 6px 6px 2px;outline:none;font-size:14px;appearance:none}.filter-actions[_ngcontent-%COMP%]{margin-left:auto;display:flex;gap:10px;flex-wrap:wrap}.filter-container[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center;width:100%;gap:10px}.filter-actions[_ngcontent-%COMP%]{display:flex;gap:10px;flex-wrap:wrap}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip, #f3f4f6);color:var(--text, #111);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:600;cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip);color:var(--text);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:var(--fw-600);cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[_ngcontent-%COMP%]:hover{transform:translateY(-1px);box-shadow:var(--shadow)}.btn.primary[_ngcontent-%COMP%]{background:linear-gradient(135deg,var(--brand),var(--brand-2));color:#fff;border-color:transparent}.kpi-grid[_ngcontent-%COMP%]{display:grid;gap:22px;grid-template-columns:repeat(12,1fr)}.kpi-card[_ngcontent-%COMP%]{background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a;grid-column:span 6;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);padding:18px 18px 16px;overflow:hidden;position:relative}.kpi-card[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;pointer-events:none;background:radial-gradient(450px 120px at 95% -10%,rgba(122,162,255,.13),transparent 45%)}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);transition:transform .2s ease}.card-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:10px;margin-bottom:12px}.card-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:15px;margin-left:-15px;letter-spacing:.2px}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;border:1px solid #ccc;background:var(--chip);border-radius:999px;padding:6px 10px;font-size:12px;color:var(--muted)}.kpi-items[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px}.kpi-item[_ngcontent-%COMP%]{border:1px solid #e2e8f0;border-radius:15px!important;background:linear-gradient(180deg,rgba(255,255,255,.04),transparent);padding:10px 12px;transition:border-color .2s ease,background .2s ease}.kpi-item[_ngcontent-%COMP%]:hover{border-color:var(--ring);background:linear-gradient(180deg,rgba(122,162,255,.08),transparent)}.kpi-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:12px;font-size:13px;margin-bottom:8px}.kpi-label[_ngcontent-%COMP%]{color:var(--muted)}.kpi-values[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;font-weight:var(--fw-600)}.kpi-actual[_ngcontent-%COMP%]{color:var(--text)}.trend-icon[_ngcontent-%COMP%]{width:16px;height:16px}.progress[_ngcontent-%COMP%]{position:relative;height:10px;border-radius:999px;overflow:hidden;background:linear-gradient(0deg,#ffffff14,#ffffff0a);border:1px solid #e2e8f0}.growth[_ngcontent-%COMP%]{grid-column:span 12;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:18px;background-color:#fff!important;box-shadow:0 4px 6px #0000001a}.growth-head[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;margin-bottom:8px}.growth-head[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:15px}.growth-note[_ngcontent-%COMP%]{color:var(--muted);font-size:12px;margin-top:6px}.sparkline[_ngcontent-%COMP%]{width:100%;height:140px;border-radius:var(--radius);border:1px dashed var(--card-border);display:grid;place-items:center;color:var(--muted);font-size:13px}@media (max-width: 1024px){.kpi-card[_ngcontent-%COMP%]{grid-column:span 12}}@media (max-width: 640px){.filters[_ngcontent-%COMP%]{gap:10px}.select[_ngcontent-%COMP%]{min-width:100%}.filter-actions[_ngcontent-%COMP%]{width:100%;justify-content:flex-end}}@keyframes _ngcontent-%COMP%_pop{0%{transform:scale(.98);opacity:0}to{transform:scale(1);opacity:1}}.kpi-card[_ngcontent-%COMP%], .growth[_ngcontent-%COMP%], .header[_ngcontent-%COMP%], .filters[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pop .35s ease both;border-radius:10px!important}.ring[_ngcontent-%COMP%]{box-shadow:0 0 0 6px var(--ring);transition:box-shadow .3s ease}.trend-icon[_ngcontent-%COMP%]{width:18px;height:18px;stroke-width:2.25;vertical-align:middle;flex-shrink:0;display:inline-block}.kpi-values[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;line-height:1}.trend-up[_ngcontent-%COMP%]{color:var(--success)}.trend-down[_ngcontent-%COMP%]{color:var(--danger)}.kpi-item[_ngcontent-%COMP%]{flex:1}.kpi-item-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:20px;border-radius:14px;margin-bottom:16px}.kpi-item[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;justify-content:center}.growth-box[_ngcontent-%COMP%]{background:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;width:90px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:flex;flex-direction:column;align-items:center}.growth-box[_ngcontent-%COMP%]{background:linear-gradient(135deg,#10b981,#059669);color:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:inline-flex;flex-direction:column;align-items:flex-start;width:70px;height:70px}.growth-header[_ngcontent-%COMP%]{display:flex;color:#fff;justify-content:flex-start;align-items:baseline;gap:4px;margin-bottom:6px}.growth-title[_ngcontent-%COMP%]{font-size:11px;color:#fff;font-weight:500}.growth-value[_ngcontent-%COMP%]{font-size:13px;font-weight:700;color:#fff}.growth-bars[_ngcontent-%COMP%]{display:flex;align-items:flex-end;gap:2px;color:#fff;height:25px;justify-content:flex-start;width:fit-content}.bar-segment[_ngcontent-%COMP%]{width:3px;background:#fff;border-radius:2px}.select-dropdown[_ngcontent-%COMP%]{position:relative;width:200px;cursor:pointer;-webkit-user-select:none;user-select:none}.dropdown-label[_ngcontent-%COMP%]{padding:10px;border:1px solid #e2e8f0;border-radius:22px;background:#fff;color:var(--text);display:flex;justify-content:space-between;align-items:center}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;right:0;background:#fff;border:1px solid #ccc;border-radius:6px;max-height:400px;overflow-y:auto;display:none;z-index:10}.select-dropdown.open[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{display:block}.checkbox-item[_ngcontent-%COMP%]{padding:6px 8px;display:flex;align-items:center;gap:6px}.bar[_ngcontent-%COMP%]{height:100%;border-radius:6px;transition:width .4s ease}.negative-box[_ngcontent-%COMP%]{background:linear-gradient(90deg,var(--danger),#fda4af)}[_ngcontent-%COMP%]:root{--brand: #10b981;--brand-2: #059669;--danger: #ef4444}.chip[_ngcontent-%COMP%]   .dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background:linear-gradient(135deg,var(--brand),var(--brand-2))}.arrow[_ngcontent-%COMP%]{display:inline-block;margin-left:5px;width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent}.arrow.up[_ngcontent-%COMP%]{border-bottom:10px solid green}.arrow.down[_ngcontent-%COMP%]{border-top:10px solid red}.growth-box[_ngcontent-%COMP%]{padding:8px;border-radius:6px;text-align:center;font-weight:700;color:#fff}.growth-box.positive-box[_ngcontent-%COMP%]{background-color:#28a745!important}.growth-box.negative-box[_ngcontent-%COMP%]{background-color:#dc3545!important}.total-bar[_ngcontent-%COMP%]{background:#f1f5ff;border:1px solid #ccc;border-radius:6px;padding:8px;margin:8px 0;font-weight:700;text-align:center}@media (max-width: 844px){.growth-box[_ngcontent-%COMP%]{margin-left:-10px!important}.select-dropdown[_ngcontent-%COMP%]{min-width:100%!important}}',
    ],
  });
};
function IF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 36),
      N("click", function (r) {
        return P(e), I(r.stopPropagation());
      }),
      c(1, "input", 37),
      N("change", function (r) {
        let o = P(e).$implicit;
        return x(3).toggleDealerSelection(o), I(r.stopPropagation());
      }),
      d(),
      c(2, "span", 38),
      N("click", function (r) {
        let o = P(e).$implicit;
        return x(3).toggleDealerSelection(o), I(r.stopPropagation());
      }),
      h(3),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(3);
    m(), y("checked", t.isDealerSelected(e)), m(2), ee(" ", e.dealer_name, " ");
  }
}
function AF(n, i) {
  if ((n & 1 && (Ue(0), R(1, IF, 4, 2, "div", 35), ze()), n & 2)) {
    let e = x(2);
    m(), y("ngForOf", e.filteredDealers);
  }
}
function RF(n, i) {
  n & 1 && (c(0, "div", 39), h(1, " No dealers found "), d());
}
function FF(n, i) {
  if (n & 1) {
    let e = re();
    c(0, "div", 27)(1, "div", 28)(2, "input", 29),
      ht("ngModelChange", function (r) {
        P(e);
        let o = x();
        return ut(o.dealerSearch, r) || (o.dealerSearch = r), I(r);
      }),
      N("input", function () {
        P(e);
        let r = x();
        return I(r.filterDealers());
      })("click", function (r) {
        return P(e), I(r.stopPropagation());
      }),
      d()(),
      c(3, "div", 30)(4, "label", 31),
      N("click", function (r) {
        return P(e), I(r.stopPropagation());
      }),
      c(5, "input", 32),
      N("change", function (r) {
        return P(e), x().toggleSelectAll(r), I(r.stopPropagation());
      }),
      d(),
      h(6, " Select All "),
      d(),
      c(7, "button", 33),
      N("click", function (r) {
        return P(e), x().clearSelection(), I(r.stopPropagation());
      }),
      h(8, " Clear "),
      d()(),
      R(9, AF, 2, 1, "ng-container", 34)(
        10,
        RF,
        2,
        0,
        "ng-template",
        null,
        0,
        Pt
      ),
      d();
  }
  if (n & 2) {
    let e = _t(11),
      t = x();
    m(2),
      dt("ngModel", t.dealerSearch),
      m(3),
      y("checked", t.areAllSelected()),
      m(4),
      y("ngIf", t.filteredDealers.length > 0)("ngIfElse", e);
  }
}
var bu = class n {
  constructor(i) {
    this.http = i;
  }
  chartOptions = {
    series: [],
    chart: {
      height: 350,
      type: "line",
      zoom: { enabled: !1 },
      toolbar: { show: !0 },
    },
    dataLabels: { enabled: !1 },
    stroke: { width: 2, curve: "smooth" },
    legend: {
      position: "top",
      horizontalAlign: "left",
      fontSize: "12px",
      itemMargin: { horizontal: 10, vertical: 4 },
      tooltipHoverFormatter: function (i, e) {
        return (
          i +
          " - <strong>" +
          e.w.globals.series[e.seriesIndex][e.dataPointIndex] +
          "</strong>"
        );
      },
    },
    markers: { size: 0, hover: { sizeOffset: 6 } },
    xaxis: {
      type: "category",
      categories: [],
      labels: {
        rotate: -45,
        hideOverlappingLabels: !0,
        showDuplicates: !1,
        formatter: (i) =>
          new Date(i).toLocaleDateString("en-GB", {
            day: "2-digit",
            month: "short",
          }),
        style: { fontSize: "10px" },
      },
      tickAmount: 10,
    },
    tooltip: {
      x: {
        formatter: (i) =>
          new Date(i).toLocaleDateString("en-GB", {
            weekday: "short",
            day: "2-digit",
            month: "short",
          }),
      },
      y: { formatter: (i) => i.toString() },
    },
    grid: {
      show: !0,
      borderColor: "#e0e0e0",
      strokeDashArray: 3,
      position: "back",
      xaxis: { lines: { show: !0 } },
      yaxis: { lines: { show: !0 } },
      row: { colors: ["transparent"], opacity: 0 },
      column: { colors: ["transparent"], opacity: 0 },
    },
  };
  BASE_URL = "https://uat.smartassistapp.in";
  TREND_CHART_URL = "/api/superAdmin/trend-chart";
  ngOnInit() {
    this.fetchTrendChart();
  }
  dealers = [];
  selectedDealers = [];
  filteredDealers = [];
  dropdownOpen = !1;
  dealerSearch = "";
  selectedDateFilter = "LAST_30_DAYS";
  selectedMetric = "calls";
  chartTypes = ["line", "area", "bar"];
  currentChartTypeIndex = 0;
  loadDealers() {
    this.filteredDealers = [...this.dealers];
  }
  switchChartType() {
    this.currentChartTypeIndex =
      (this.currentChartTypeIndex + 1) % this.chartTypes.length;
    let i = this.chartTypes[this.currentChartTypeIndex];
    this.chartOptions = Ce(W({}, this.chartOptions), {
      chart: Ce(W({}, this.chartOptions.chart), {
        type: i,
        animations: {
          enabled: !0,
          speed: 800,
          animateGradually: { enabled: !0, delay: 150 },
          dynamicAnimation: { enabled: !0, speed: 600 },
        },
      }),
    });
  }
  toggleDropdown() {
    this.dropdownOpen = !this.dropdownOpen;
  }
  filterDealers() {
    this.dealerSearch.trim()
      ? (this.filteredDealers = this.dealers.filter((i) =>
          i.dealer_name.toLowerCase().includes(this.dealerSearch.toLowerCase())
        ))
      : (this.filteredDealers = [...this.dealers]);
  }
  isDealerSelected(i) {
    return this.selectedDealers.includes(i.dealer_id);
  }
  toggleDealerSelection(i) {
    let e = i.dealer_id,
      t = this.selectedDealers.indexOf(e);
    t > -1 ? this.selectedDealers.splice(t, 1) : this.selectedDealers.push(e),
      this.fetchTrendChartWithFilters();
  }
  areAllSelected() {
    return (
      this.filteredDealers.length > 0 &&
      this.filteredDealers.every((i) => this.isDealerSelected(i))
    );
  }
  toggleSelectAll(i) {
    i.target.checked
      ? this.filteredDealers.forEach((t) => {
          this.selectedDealers.includes(t.dealer_id) ||
            this.selectedDealers.push(t.dealer_id);
        })
      : this.filteredDealers.forEach((t) => {
          let r = this.selectedDealers.indexOf(t.dealer_id);
          r > -1 && this.selectedDealers.splice(r, 1);
        }),
      this.fetchTrendChartWithFilters();
  }
  clearSelection() {
    (this.selectedDealers = []), this.fetchTrendChartWithFilters();
  }
  fetchTrendChart() {
    let i = localStorage.getItem("token");
    if (!i) {
      console.error("\u274C No token found in localStorage");
      return;
    }
    let e = new St({ authorization: `Bearer ${i}` }),
      t = new Sn().set("metric", "calls").set("dateFilter", "LAST_30_DAYS");
    this.http
      .get(`${this.BASE_URL}${this.TREND_CHART_URL}`, { headers: e, params: t })
      .subscribe({
        next: (r) => {
          console.log("\u2705 Initial API Response:", r),
            r.activeDealers &&
              ((this.dealers = r.activeDealers),
              (this.filteredDealers = [...this.dealers])),
            this.updateChart(r.data || []);
        },
        error: (r) => {
          console.error("\u274C API Error:", r);
        },
      });
  }
  fetchTrendChartWithFilters() {
    let i = localStorage.getItem("token");
    if (!i) {
      console.error("\u274C No token found in localStorage");
      return;
    }
    let e = new St({ authorization: `Bearer ${i}` }),
      t = new Sn()
        .set("metric", this.selectedMetric)
        .set("dateFilter", this.selectedDateFilter);
    this.selectedDealers.length > 0 &&
      (t = t.set("dealer_id", this.selectedDealers.join(","))),
      this.http
        .get(`${this.BASE_URL}${this.TREND_CHART_URL}`, {
          headers: e,
          params: t,
        })
        .subscribe({
          next: (r) => {
            console.log("\u2705 Filtered API Response:", r),
              this.updateChart(r.data || []);
          },
          error: (r) => {
            console.error("\u274C API Error:", r);
          },
        });
  }
  updateChart(i) {
    if (!i || i.length === 0) {
      this.chartOptions = Ce(W({}, this.chartOptions), {
        series: [],
        xaxis: Ce(W({}, this.chartOptions.xaxis), { categories: [] }),
      });
      return;
    }
    let e = this.transformDataForChart(i);
    this.chartOptions = Ce(W({}, this.chartOptions), {
      series: e.series,
      xaxis: Ce(W({}, this.chartOptions.xaxis), { categories: e.categories }),
      colors: [
        "#2a8eff",
        "#0f5fb8",
        "#1676e6",
        "#86c1ff",
        "#57a8ff",
        "#059669",
        "#0ea5e9",
        "#9333ea",
        "#d97706",
        "#e11d48",
        "#0d4c90",
        "#0c3f76",
        "#64748b",
        "#475569",
        "#14b8a6",
      ],
      chart: Ce(W({}, this.chartOptions.chart), {
        type: this.chartOptions.chart?.type || "line",
        toolbar: Ce(W({}, this.chartOptions.chart?.toolbar), {
          tools: W({}, this.chartOptions.chart?.toolbar?.tools),
          export: {
            csv: { filename: this.getExportFileName() },
            svg: { filename: this.getExportFileName() },
            png: { filename: this.getExportFileName() },
          },
        }),
      }),
    });
  }
  transformDataForChart(i) {
    if (!i || i.length === 0) return { series: [], categories: [] };
    let e = Array.from(new Set(i.map((a) => a.label))).sort(),
      t = {};
    return (
      i.forEach((a) => {
        let l = a.dealer_name;
        t[l] || (t[l] = []), t[l].push(a);
      }),
      {
        series: Object.keys(t).map((a) => {
          let l = t[a],
            u = new Map(l.map((v) => [v.label, Number(v.count) || 0])),
            f = e.map((v) => u.get(v) || 0);
          return { name: a, data: f };
        }),
        categories: e,
      }
    );
  }
  groupDataByDealer(i) {
    return i.reduce((e, t) => {
      let r = t.dealer_name || "Unknown Dealer";
      return e[r] || (e[r] = []), e[r].push(t), e;
    }, {});
  }
  formatDate(i) {
    return new Date(i).toLocaleDateString("en-US", {
      month: "short",
      day: "2-digit",
    });
  }
  getExportFileName() {
    let e =
        {
          last_login: "LastLogin",
          leads: "Leads",
          follow_up: "FollowUps",
          unique_testdrive: "UniqueTestDrives",
          calls: "TotalCalls",
        }[this.selectedMetric] || this.selectedMetric,
      t = "AllDealers";
    if (this.selectedDealers.length > 0) {
      let o = this.dealers
        .filter((a) => this.selectedDealers.includes(a.dealer_id))
        .map((a) => a.dealer_name.replace(/\s+/g, ""));
      (t = o.slice(0, 3).join("_")),
        o.length > 3 && (t += `_plus${o.length - 3}`);
    }
    let r = new Date().toISOString().split("T")[0];
    return `${e}_${t}_${r}_Report`;
  }
  onDocumentClick(i) {
    let t = i.target.closest(".dropdown");
    (!t || !t.classList.contains("flt1")) && (this.dropdownOpen = !1);
  }
  static ɵfac = function (e) {
    return new (e || n)(H(Bt));
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-trend-chart"]],
    hostBindings: function (e, t) {
      e & 1 &&
        N(
          "click",
          function (o) {
            return t.onDocumentClick(o);
          },
          !1,
          qo
        );
    },
    standalone: !0,
    features: [ce],
    decls: 41,
    vars: 17,
    consts: [
      ["noDealers", ""],
      [
        1,
        "bg-white",
        "rounded-2xl",
        "shadow-sm",
        "border",
        "border-slate-200",
        2,
        "margin-top",
        "39px",
      ],
      [
        1,
        "p-4",
        "sm:p-6",
        "border-b",
        "border-slate-200",
        "flex",
        "flex-col",
        "md:flex-row",
        "md:items-center",
        "md:justify-between",
        "gap-4",
        "delar_usage",
      ],
      [1, "text-lg", "font-semibold"],
      [1, "text-slate-500", "text-sm"],
      [
        1,
        "flex",
        "flex-col",
        "md:flex-row",
        "md:items-center",
        "gap-3",
        "Granularity_section",
      ],
      [1, "flex", "flex-wrap", "items-center", "gap-2", "wrapper-content"],
      [1, "dropdown", "flt1", 2, "margin-right", "5px"],
      ["type", "button", 1, "time-dropdown", "dropdown-toggle", 3, "click"],
      ["class", "dropdown-menu show", 4, "ngIf"],
      ["for", "usageGran", 1, "text-sm", "text-slate-600"],
      [
        "id",
        "usageGran",
        1,
        "rounded-xl",
        "border-slate-300",
        "text-sm",
        "focus:ring-2",
        "focus:ring-brand-500",
        "focus:border-brand-500",
        3,
        "ngModelChange",
        "change",
        "ngModel",
      ],
      ["value", "LAST_30_DAYS", "selected", ""],
      ["value", "LAST_4_WEEKS"],
      ["value", "LAST_6_MONTHS"],
      ["for", "usageMetric", 1, "text-sm", "text-slate-600"],
      [
        "id",
        "usageMetric",
        1,
        "rounded-xl",
        "border-slate-300",
        "text-sm",
        "focus:ring-2",
        "focus:ring-brand-500",
        "focus:border-brand-500",
        3,
        "ngModelChange",
        "change",
        "ngModel",
      ],
      ["value", "last_login"],
      ["value", "leads"],
      ["value", "follow_up"],
      ["value", "unique_testdrive"],
      ["value", "calls", "selected", ""],
      [1, "flex", "items-center", "gap-2"],
      [
        1,
        "switchChart",
        "px-3",
        "py-2",
        "rounded-lg",
        "bg-slate-200",
        "hover:bg-slate-300",
        "text-sm",
        "font-medium",
        3,
        "click",
      ],
      [1, "px-4", "sm:px-6", "pb-6"],
      [1, "relative"],
      [
        3,
        "series",
        "chart",
        "xaxis",
        "dataLabels",
        "grid",
        "stroke",
        "title",
        "markers",
        "legend",
        "tooltip",
      ],
      [1, "dropdown-menu", "show"],
      [1, "px-2", "py-1"],
      [
        "type",
        "text",
        "placeholder",
        "Search dealers...",
        1,
        "form-control",
        3,
        "ngModelChange",
        "input",
        "click",
        "ngModel",
      ],
      [
        1,
        "d-flex",
        "justify-content-between",
        "align-items-center",
        "px-2",
        "py-1",
        "border-bottom",
      ],
      [1, "mb-0", "d-flex", "align-items-center", 3, "click"],
      ["type", "checkbox", 1, "me-2", 3, "change", "checked"],
      [
        "type",
        "button",
        "id",
        "clearbtn",
        1,
        "btn",
        "btn-link",
        "btn-sm",
        "text-danger",
        "p-0",
        "ms-auto",
        2,
        "margin-left",
        "120px",
        3,
        "click",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "class",
        "dropdown-item d-flex align-items-center",
        3,
        "click",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "dropdown-item", "d-flex", "align-items-center", 3, "click"],
      [
        "type",
        "checkbox",
        1,
        "me-2",
        2,
        "border",
        "1px solid black",
        3,
        "change",
        "checked",
      ],
      [3, "click"],
      [1, "dropdown-item", "text-muted", "text-center"],
    ],
    template: function (e, t) {
      e & 1 &&
        (c(0, "section", 1)(1, "div", 2)(2, "div")(3, "h2", 3),
        h(4, "Dealer Usage \u2014 Last 30 Days"),
        d(),
        c(5, "p", 4),
        h(6, "Daily usage by metric "),
        d()(),
        c(7, "div", 5)(8, "div", 6)(9, "div", 7)(10, "button", 8),
        N("click", function () {
          return t.toggleDropdown();
        }),
        h(11),
        d(),
        R(12, FF, 12, 4, "div", 9),
        d(),
        c(13, "label", 10),
        h(14, "Granularity"),
        d(),
        c(15, "select", 11),
        ht("ngModelChange", function (o) {
          return ut(t.selectedDateFilter, o) || (t.selectedDateFilter = o), o;
        }),
        N("change", function () {
          return t.fetchTrendChartWithFilters();
        }),
        c(16, "option", 12),
        h(17, "Last 30 Days"),
        d(),
        c(18, "option", 13),
        h(19, "Last 4 Weeks"),
        d(),
        c(20, "option", 14),
        h(21, "Last 6 Months"),
        d()(),
        c(22, "label", 15),
        h(23, "Metric"),
        d(),
        c(24, "select", 16),
        ht("ngModelChange", function (o) {
          return ut(t.selectedMetric, o) || (t.selectedMetric = o), o;
        }),
        N("change", function () {
          return t.fetchTrendChartWithFilters();
        }),
        c(25, "option", 17),
        h(26, "Last login"),
        d(),
        c(27, "option", 18),
        h(28, "Leads"),
        d(),
        c(29, "option", 19),
        h(30, "Follow-ups"),
        d(),
        c(31, "option", 20),
        h(32, "Unique Test Drives"),
        d(),
        c(33, "option", 21),
        h(34, "Total Calls"),
        d()()(),
        c(35, "div", 22)(36, "button", 23),
        N("click", function () {
          return t.switchChartType();
        }),
        h(37),
        d()()()(),
        c(38, "div", 24)(39, "div", 25),
        z(40, "apx-chart", 26),
        d()()()),
        e & 2 &&
          (m(9),
          ne("show", t.dropdownOpen),
          m(2),
          ee(
            " ",
            t.selectedDealers.length > 0
              ? "Dealers Selected (" + t.selectedDealers.length + ")"
              : "Select Dealers",
            " "
          ),
          m(),
          y("ngIf", t.dropdownOpen),
          m(3),
          dt("ngModel", t.selectedDateFilter),
          m(9),
          dt("ngModel", t.selectedMetric),
          m(13),
          ee(
            " Switch Chart (",
            t.chartOptions.chart == null ? null : t.chartOptions.chart.type,
            ") "
          ),
          m(3),
          y("series", t.chartOptions.series)("chart", t.chartOptions.chart)(
            "xaxis",
            t.chartOptions.xaxis
          )("dataLabels", t.chartOptions.dataLabels)(
            "grid",
            t.chartOptions.grid
          )("stroke", t.chartOptions.stroke)("title", t.chartOptions.title)(
            "markers",
            t.chartOptions.markers
          )("legend", t.chartOptions.legend)(
            "tooltip",
            t.chartOptions.tooltip
          ));
    },
    dependencies: [Ae, At, Xe, tt, ii, ni, ei, Di, ti, _i, wd, Gc, Wc],
    styles: [
      `.delar_usage[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.Granularity_section[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.75rem}.text-lg[_ngcontent-%COMP%]{font-size:1.125rem;line-height:1.75rem}.bg-brand-600[_ngcontent-%COMP%]{--tw-bg-opacity: 1;background-color:rgb(22 118 230 / var(--tw-bg-opacity, 1))}.text-white[_ngcontent-%COMP%]{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.font-semibold[_ngcontent-%COMP%]{font-weight:600}.text-xs[_ngcontent-%COMP%]{font-size:.75rem;line-height:1rem}.rounded-xl[_ngcontent-%COMP%]{border-radius:.75rem}.gap-2[_ngcontent-%COMP%]{gap:.5rem}.items-center[_ngcontent-%COMP%]{align-items:center}.inline-flex[_ngcontent-%COMP%]{display:inline-flex}.buttons[_ngcontent-%COMP%]{padding:.5rem .75rem;border:none}.wrapper-content[_ngcontent-%COMP%]{gap:.5rem;display:flex}label[_ngcontent-%COMP%]{margin-bottom:0rem}.dropdown.flt1[_ngcontent-%COMP%]{position:relative;display:inline-block}.time-dropdown[_ngcontent-%COMP%]{background:#fff;border:1px solid #ddd;border-radius:4px;padding:8px 12px;cursor:pointer;min-width:200px;text-align:left}.time-dropdown[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;z-index:1000;display:block;min-width:250px;max-height:300px;overflow-y:auto;background:#fff;border:1px solid #ddd;border-radius:4px;box-shadow:0 2px 8px #0000001a}.dropdown-item[_ngcontent-%COMP%]{padding:8px 12px;cursor:pointer;border-bottom:1px solid #f1f1f1}.dropdown-item[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.dropdown-item[_ngcontent-%COMP%]:last-child{border-bottom:none}.form-control[_ngcontent-%COMP%]{width:100%;padding:6px 10px;border:1px solid #ddd;border-radius:4px;font-size:14px}.btn-link[_ngcontent-%COMP%]{background:none;border:none;color:#dc3545;text-decoration:none;font-size:12px}.btn-link[_ngcontent-%COMP%]:hover{text-decoration:underline}.delar_usage[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1.5rem}@media (min-width: 768px){.delar_usage[_ngcontent-%COMP%]{flex-direction:row;align-items:center;justify-content:space-between}}.Granularity_section[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem;width:100%}@media (min-width: 768px){.Granularity_section[_ngcontent-%COMP%]{flex-direction:row;align-items:center;width:auto}}.wrapper-content[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;align-items:center;gap:1rem;width:100%}@media (min-width: 768px){.wrapper-content[_ngcontent-%COMP%]{width:auto}}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%]{position:relative;display:inline-flex;align-items:center;justify-content:space-between;min-width:160px;padding:.625rem 1rem;background:#fff;border:1px solid #d1d5db;border-radius:.75rem;font-size:.875rem;font-weight:500;color:#374151;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 2px #0000000d}.time-dropdown[_ngcontent-%COMP%]:hover, .standard-dropdown[_ngcontent-%COMP%]:hover{border-color:#9ca3af;box-shadow:0 1px 3px #0000001a}.time-dropdown[_ngcontent-%COMP%]:focus, .standard-dropdown[_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;box-shadow:0 0 0 3px #3b82f61a}.time-dropdown[_ngcontent-%COMP%]:after, .standard-dropdown[_ngcontent-%COMP%]:after{content:"";width:0;height:0;border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid #6b7280;margin-left:.5rem;transition:transform .2s ease}.time-dropdown.show[_ngcontent-%COMP%]:after, .standard-dropdown.show[_ngcontent-%COMP%]:after{transform:rotate(180deg)}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;right:0;z-index:1000;margin-top:.25rem;background:#fff;border:1px solid #e5e7eb;border-radius:.75rem;box-shadow:0 10px 25px -5px #0000001a,0 10px 10px -5px #0000000a;max-height:300px;overflow-y:auto;opacity:0;transform:translateY(-10px);transition:all .2s ease;pointer-events:none}.dropdown-menu.show[_ngcontent-%COMP%]{opacity:1;transform:translateY(0);pointer-events:auto}.dropdown-menu[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{width:100%;padding:.5rem .75rem;border:1px solid #e5e7eb;border-radius:.5rem;font-size:.875rem;background:#f9fafb;transition:all .2s ease}.dropdown-menu[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;background:#fff;box-shadow:0 0 0 2px #3b82f61a}.dropdown-menu[_ngcontent-%COMP%]   .border-bottom[_ngcontent-%COMP%]{border-bottom:1px solid #e5e7eb!important;padding:.5rem .75rem;background:#f9fafb}.dropdown-item[_ngcontent-%COMP%]{display:flex;align-items:center;padding:.5rem .75rem;font-size:.875rem;color:#374151;cursor:pointer;transition:background-color .15s ease;border:none;background:none;width:100%}.dropdown-item[_ngcontent-%COMP%]:hover{background-color:#f3f4f6}.dropdown-item[_ngcontent-%COMP%]:active{background-color:#e5e7eb}.dropdown-item[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{width:1rem;height:1rem;margin-right:.5rem;border:1px solid #d1d5db;border-radius:.25rem;cursor:pointer}.dropdown-item[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked{background-color:#3b82f6;border-color:#3b82f6}#clearbtn[_ngcontent-%COMP%]{color:#dc2626!important;font-size:.75rem;padding:.25rem .5rem;border:none;background:none;border-radius:.375rem;transition:all .2s ease}#clearbtn[_ngcontent-%COMP%]:hover{background-color:#fef2f2;color:#b91c1c!important}#usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{appearance:none;-webkit-appearance:none;-moz-appearance:none;background:#fff;border:1px solid #d1d5db;border-radius:.75rem;padding:.625rem 2rem .625rem 1rem;font-size:.875rem;font-weight:500;color:#374151;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 2px #0000000d;min-width:140px;background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");background-position:right .5rem center;background-repeat:no-repeat;background-size:1.5em 1.5em}#usageGran[_ngcontent-%COMP%]:hover, #usageMetric[_ngcontent-%COMP%]:hover{border-color:#9ca3af;box-shadow:0 1px 3px #0000001a}#usageGran[_ngcontent-%COMP%]:focus, #usageMetric[_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;box-shadow:0 0 0 3px #3b82f61a}label[_ngcontent-%COMP%]{font-size:.875rem;font-weight:500;color:#4b5563;margin-bottom:.25rem;display:block}@media (max-width: 767px){.wrapper-content[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{width:100%;min-width:unset}.Granularity_section[_ngcontent-%COMP%]{gap:1.5rem}.wrapper-content[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:100%}.wrapper-content[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{margin-top:1rem;margin-bottom:.25rem}.wrapper-content[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]:first-child{margin-top:0}}@media (min-width: 768px) and (max-width: 1023px){.wrapper-content[_ngcontent-%COMP%]{gap:.75rem}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{min-width:130px}}@media (min-width: 1024px){.wrapper-content[_ngcontent-%COMP%]{gap:1rem}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%]{min-width:180px}#usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{min-width:150px}}.flex.items-center.gap-2.mb-3[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:.625rem 1rem;background:#f8fafc;border:1px solid #e2e8f0;border-radius:.75rem;font-size:.875rem;font-weight:500;color:#475569;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 2px #0000000d}.flex.items-center.gap-2.mb-3[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background:#f1f5f9;border-color:#cbd5e1;box-shadow:0 1px 3px #0000001a}#usageLocalLoader[_ngcontent-%COMP%]{justify-content:center;padding:1rem}#usageLocalLoader[_ngcontent-%COMP%]   .animate-spin[_ngcontent-%COMP%]{width:1.25rem;height:1.25rem;border-width:2px;border-color:#e5e7eb;border-top-color:#3b82f6;border-radius:50%;animation:_ngcontent-%COMP%_spin 1s linear infinite}@keyframes _ngcontent-%COMP%_spin{to{transform:rotate(360deg)}}.relative[_ngcontent-%COMP%]{background:#fff;border-radius:.5rem;padding:1rem;margin-top:1rem}@media (prefers-contrast: high){.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{border-width:2px}}@media (prefers-reduced-motion: reduce){.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], .dropdown-menu[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{transition:none}}.switchChart[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #d1d5db;font-size:.875rem;font-weight:500;color:#374151}`,
    ],
  });
};
var Ty = [
  { path: "dataTable", component: fu },
  { path: "", component: wl, pathMatch: "full" },
  { path: "login", component: wl },
  {
    path: "Admin",
    component: $c,
    canActivate: [Yt],
    children: [
      { path: "", redirectTo: "dashboard", pathMatch: "full" },
      {
        path: "dashboard",
        component: Td,
        data: { title: "Dashboard" },
        canActivate: [Yt],
      },
      {
        path: "dealer",
        component: Pd,
        data: { title: "Dealer" },
        canActivate: [Yt],
      },
      {
        path: "team",
        component: gu,
        data: { title: "team" },
        canActivate: [Yt],
      },
      {
        path: "vehicle",
        component: qd,
        data: { title: "Vehicle" },
        canActivate: [Yt],
      },
      {
        path: "role",
        component: mu,
        data: { title: "Role" },
        canActivate: [Yt],
      },
      {
        path: "user-all",
        component: iu,
        data: { title: "Users-All" },
        canActivate: [Yt],
      },
      {
        path: "customer",
        component: Jd,
        data: { title: "Customer" },
        canActivate: [Yt],
      },
      {
        path: "profile",
        component: tu,
        data: { title: "Profile" },
        canActivate: [Yt],
      },
      {
        path: "singleUser/:dealer_id",
        component: Cl,
        resolve: { dealerData: Dl },
        data: { title: "Multiple" },
        canActivate: [Yt],
      },
      {
        path: "single-events/:eventId",
        component: nu,
        resolve: { eventData: au },
        data: { title: "Single events" },
        canActivate: [Yt],
      },
      {
        path: "single-lead/:dealerId/:leadId",
        component: ru,
        resolve: { leadData: ou },
        data: { title: "Single Lead Data" },
        canActivate: [Yt],
      },
      {
        path: "single-user/:user_id",
        component: lu,
        resolve: { userData: su },
        data: { title: "Single user Data" },
        canActivate: [Yt],
      },
      {
        path: "single-task/:taskId",
        component: du,
        resolve: { taskData: cu },
        data: { title: "Single Task Data" },
        canActivate: [Yt],
      },
      {
        path: "single-opportunities/:oppId",
        component: hu,
        resolve: { oppData: pu },
        data: { title: "Single Opportunities Data" },
        canActivate: [Yt],
      },
      {
        path: "admin/singleDealer/:id",
        component: Cl,
        resolve: { dealerData: Dl },
        data: { title: "Single dealer Data" },
        canActivate: [Yt],
      },
      {
        path: "summary",
        component: Tl,
        data: { title: "Summary" },
        canActivate: [Yt],
      },
      {
        path: "summary",
        component: Tl,
        data: { title: "Summary" },
        canActivate: [Yt],
      },
      {
        path: "trend-chart",
        component: bu,
        data: { title: "Trend-chart" },
        canActivate: [Yt],
      },
    ],
  },
];
var NF = "@",
  LF = (() => {
    class n {
      constructor(e, t, r, o, a) {
        (this.doc = e),
          (this.delegate = t),
          (this.zone = r),
          (this.animationType = o),
          (this.moduleImpl = a),
          (this._rendererFactoryPromise = null),
          (this.scheduler = G(Ag, { optional: !0 })),
          (this.loadingSchedulerFn = G(VF, { optional: !0 }));
      }
      ngOnDestroy() {
        this._engine?.flush();
      }
      loadImpl() {
        let e = () =>
            this.moduleImpl ?? import("./chunk-OKEIJYFT.js").then((r) => r),
          t;
        return (
          this.loadingSchedulerFn
            ? (t = this.loadingSchedulerFn(e))
            : (t = e()),
          t
            .catch((r) => {
              throw new ct(5300, !1);
            })
            .then(({ ɵcreateEngine: r, ɵAnimationRendererFactory: o }) => {
              this._engine = r(this.animationType, this.doc);
              let a = new o(this.delegate, this._engine, this.zone);
              return (this.delegate = a), a;
            })
        );
      }
      createRenderer(e, t) {
        let r = this.delegate.createRenderer(e, t);
        if (r.ɵtype === 0) return r;
        typeof r.throwOnSyntheticProps == "boolean" &&
          (r.throwOnSyntheticProps = !1);
        let o = new Mf(r);
        return (
          t?.data?.animation &&
            !this._rendererFactoryPromise &&
            (this._rendererFactoryPromise = this.loadImpl()),
          this._rendererFactoryPromise
            ?.then((a) => {
              let l = a.createRenderer(e, t);
              o.use(l), this.scheduler?.notify(10);
            })
            .catch((a) => {
              o.use(r);
            }),
          o
        );
      }
      begin() {
        this.delegate.begin?.();
      }
      end() {
        this.delegate.end?.();
      }
      whenRenderingDone() {
        return this.delegate.whenRenderingDone?.() ?? Promise.resolve();
      }
      static {
        this.ɵfac = function (t) {
          kr();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  Mf = class {
    constructor(i) {
      (this.delegate = i), (this.replay = []), (this.ɵtype = 1);
    }
    use(i) {
      if (((this.delegate = i), this.replay !== null)) {
        for (let e of this.replay) e(i);
        this.replay = null;
      }
    }
    get data() {
      return this.delegate.data;
    }
    destroy() {
      (this.replay = null), this.delegate.destroy();
    }
    createElement(i, e) {
      return this.delegate.createElement(i, e);
    }
    createComment(i) {
      return this.delegate.createComment(i);
    }
    createText(i) {
      return this.delegate.createText(i);
    }
    get destroyNode() {
      return this.delegate.destroyNode;
    }
    appendChild(i, e) {
      this.delegate.appendChild(i, e);
    }
    insertBefore(i, e, t, r) {
      this.delegate.insertBefore(i, e, t, r);
    }
    removeChild(i, e, t) {
      this.delegate.removeChild(i, e, t);
    }
    selectRootElement(i, e) {
      return this.delegate.selectRootElement(i, e);
    }
    parentNode(i) {
      return this.delegate.parentNode(i);
    }
    nextSibling(i) {
      return this.delegate.nextSibling(i);
    }
    setAttribute(i, e, t, r) {
      this.delegate.setAttribute(i, e, t, r);
    }
    removeAttribute(i, e, t) {
      this.delegate.removeAttribute(i, e, t);
    }
    addClass(i, e) {
      this.delegate.addClass(i, e);
    }
    removeClass(i, e) {
      this.delegate.removeClass(i, e);
    }
    setStyle(i, e, t, r) {
      this.delegate.setStyle(i, e, t, r);
    }
    removeStyle(i, e, t) {
      this.delegate.removeStyle(i, e, t);
    }
    setProperty(i, e, t) {
      this.shouldReplay(e) && this.replay.push((r) => r.setProperty(i, e, t)),
        this.delegate.setProperty(i, e, t);
    }
    setValue(i, e) {
      this.delegate.setValue(i, e);
    }
    listen(i, e, t) {
      return (
        this.shouldReplay(e) && this.replay.push((r) => r.listen(i, e, t)),
        this.delegate.listen(i, e, t)
      );
    }
    shouldReplay(i) {
      return this.replay !== null && i.startsWith(NF);
    }
  },
  VF = new we("");
function Ey(n = "animations") {
  return (
    Gl("NgAsyncAnimations"),
    zn([
      {
        provide: Wl,
        useFactory: (i, e, t) => new LF(i, e, t, n),
        deps: [ke, cc, Te],
      },
      {
        provide: Wn,
        useValue: n === "noop" ? "NoopAnimations" : "BrowserAnimations",
      },
    ])
  );
}
var Oy = {
  providers: [
    Hg({ eventCoalescing: !0 }),
    v_(Ty),
    Ca,
    E0(),
    gh(),
    Ey(),
    yg(
      Wv.forRoot({
        timeOut: 3e3,
        positionClass: "toast-top-right",
        preventDuplicates: !0,
        progressBar: !0,
      })
    ),
  ],
};
var vu = class n {
  title = "smartAssists";
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = ae({
    type: n,
    selectors: [["app-root"]],
    standalone: !0,
    features: [ce],
    decls: 1,
    vars: 0,
    template: function (e, t) {
      e & 1 && z(0, "router-outlet");
    },
    dependencies: [po],
  });
};
M0(vu, Oy).catch((n) => console.error(n));
