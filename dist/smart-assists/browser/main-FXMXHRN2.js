import {
  $ as Qu,
  $a as Wn,
  $b as le,
  A as Hl,
  Aa as Et,
  Ab as U,
  Ac as $g,
  B as Wu,
  Ba as Re,
  Bb as Le,
  Bc as Zo,
  C as Wo,
  Ca as wg,
  Cb as Ve,
  Cc as Wg,
  D as Mr,
  Da as $l,
  Db as wn,
  Dc as Gg,
  E as Gu,
  Ea as Sg,
  Eb as oe,
  Ec as Oe,
  F as Yu,
  Fa as si,
  Fb as Yl,
  Fc as Yg,
  G as $i,
  Ga as $n,
  Gb as R,
  Gc as ns,
  H as fg,
  Ha as Ja,
  Hb as Ng,
  Hc as qg,
  I as Ul,
  Ia as Zu,
  Ib as x,
  Ic as Kg,
  J as gg,
  Ja as Yo,
  Jb as Jt,
  Jc as cr,
  K as Tr,
  Ka as qo,
  Kb as Vt,
  Kc as Zl,
  L as Er,
  La as Dg,
  Lb as ln,
  Lc as It,
  M as qu,
  Ma as Mg,
  Mb as _t,
  Mc as At,
  N as _g,
  Na as Tg,
  Nb as nt,
  Nc as We,
  O as bg,
  Oa as Eg,
  Ob as rt,
  Oc as Jl,
  P as Ka,
  Pa as Og,
  Pb as Lg,
  Pc as ec,
  Q as Un,
  Qa as kg,
  Qb as nh,
  Qc as Pr,
  R as Ci,
  Ra as Pg,
  Rb as ut,
  Rc as Jo,
  S as zt,
  Sa as lr,
  Sb as h,
  Sc as Qg,
  T as Xt,
  Ta as es,
  Tb as B,
  Tc as Xg,
  U as Ku,
  Ua as Ju,
  Ub as Z,
  Uc as Ae,
  V as pt,
  Va as Ig,
  Vb as Gn,
  Vc as Zg,
  W as wi,
  Wa as Or,
  Wb as Fi,
  Wc as dn,
  X as J,
  Xa as ts,
  Xb as lt,
  Xc as rs,
  Y as ve,
  Ya as m,
  Yb as ct,
  Yc as Jg,
  Z as vg,
  Za as j,
  Zb as dt,
  Zc as tc,
  _ as Ce,
  _a as kr,
  _b as Bt,
  a as zi,
  aa as Q,
  ab as Ag,
  ac as pi,
  ad as lo,
  b as dg,
  ba as W,
  bb as ao,
  bc as de,
  bd as Yi,
  c as jn,
  ca as Qa,
  cb as Wl,
  cc as Gi,
  d as Hu,
  da as zl,
  db as hi,
  dc as rh,
  dd as li,
  e as Uu,
  ea as Xa,
  eb as Wi,
  ec as Vg,
  ed as dr,
  f as Ee,
  fa as se,
  fb as Gl,
  fc as Xo,
  fd as lh,
  g as Nt,
  ga as ye,
  gb as pe,
  gc as Bg,
  gd as qi,
  h as zu,
  ha as Ie,
  hb as Rg,
  hc as oh,
  i as Hn,
  ia as zn,
  ib as Ze,
  ic as bt,
  j as ui,
  ja as yg,
  jb as Pt,
  jc as ql,
  k as fe,
  ka as xg,
  kb as Fg,
  kc as Kl,
  l as Ya,
  la as an,
  lb as eh,
  lc as ah,
  m as Bl,
  ma as sn,
  mb as A,
  mc as is,
  n as ug,
  na as Dt,
  nb as th,
  nc as Ni,
  o as Ke,
  oa as O,
  ob as ih,
  oc as jg,
  p as ro,
  pa as k,
  pb as xn,
  pc as Ql,
  q as Ri,
  qa as Ct,
  qb as ce,
  qc as Hg,
  r as qa,
  ra as oo,
  rb as y,
  rc as sh,
  s as jl,
  sa as gt,
  sb as Lt,
  sc as Qe,
  t as $u,
  ta as Go,
  tb as ne,
  tc as Ug,
  u as hg,
  ua as Mt,
  ub as He,
  uc as zg,
  v as yn,
  va as Za,
  vb as Cn,
  vc as Se,
  w as pg,
  wa as xe,
  wb as Ko,
  wc as cn,
  x as $o,
  xa as Me,
  xb as Qo,
  xc as so,
  y as St,
  ya as Xu,
  yb as l,
  yc as Sn,
  z as mg,
  za as Cg,
  zb as c,
  zc as Xl,
} from "./chunk-GDEG7K3P.js";
import {
  a as G,
  b as Te,
  c as cg,
  d as Ox,
  e as kx,
  f as zo,
} from "./chunk-EQDQRRRY.js";
var vy = Ox((by, Jd) => {
  "use strict";
  (function (n, i) {
    "use strict";
    typeof Jd == "object" && typeof Jd.exports == "object"
      ? (Jd.exports = n.document
          ? i(n, !0)
          : function (e) {
              if (!e.document)
                throw new Error("jQuery requires a window with a document");
              return i(e);
            })
      : i(n);
  })(typeof window < "u" ? window : by, function (n, i) {
    "use strict";
    var e = [],
      t = Object.getPrototypeOf,
      r = e.slice,
      o = e.flat
        ? function (s) {
            return e.flat.call(s);
          }
        : function (s) {
            return e.concat.apply([], s);
          },
      a = e.push,
      d = e.indexOf,
      u = {},
      f = u.toString,
      v = u.hasOwnProperty,
      S = v.toString,
      T = S.call(Object),
      M = {},
      I = function (p) {
        return (
          typeof p == "function" &&
          typeof p.nodeType != "number" &&
          typeof p.item != "function"
        );
      },
      L = function (p) {
        return p != null && p === p.window;
      },
      E = n.document,
      F = { type: !0, src: !0, nonce: !0, noModule: !0 };
    function ee(s, p, g) {
      g = g || E;
      var _,
        C,
        w = g.createElement("script");
      if (((w.text = s), p))
        for (_ in F)
          (C = p[_] || (p.getAttribute && p.getAttribute(_))),
            C && w.setAttribute(_, C);
      g.head.appendChild(w).parentNode.removeChild(w);
    }
    function re(s) {
      return s == null
        ? s + ""
        : typeof s == "object" || typeof s == "function"
        ? u[f.call(s)] || "object"
        : typeof s;
    }
    var ge = "3.7.1",
      Pe = /HTML$/i,
      b = function (s, p) {
        return new b.fn.init(s, p);
      };
    (b.fn = b.prototype =
      {
        jquery: ge,
        constructor: b,
        length: 0,
        toArray: function () {
          return r.call(this);
        },
        get: function (s) {
          return s == null
            ? r.call(this)
            : s < 0
            ? this[s + this.length]
            : this[s];
        },
        pushStack: function (s) {
          var p = b.merge(this.constructor(), s);
          return (p.prevObject = this), p;
        },
        each: function (s) {
          return b.each(this, s);
        },
        map: function (s) {
          return this.pushStack(
            b.map(this, function (p, g) {
              return s.call(p, g, p);
            })
          );
        },
        slice: function () {
          return this.pushStack(r.apply(this, arguments));
        },
        first: function () {
          return this.eq(0);
        },
        last: function () {
          return this.eq(-1);
        },
        even: function () {
          return this.pushStack(
            b.grep(this, function (s, p) {
              return (p + 1) % 2;
            })
          );
        },
        odd: function () {
          return this.pushStack(
            b.grep(this, function (s, p) {
              return p % 2;
            })
          );
        },
        eq: function (s) {
          var p = this.length,
            g = +s + (s < 0 ? p : 0);
          return this.pushStack(g >= 0 && g < p ? [this[g]] : []);
        },
        end: function () {
          return this.prevObject || this.constructor();
        },
        push: a,
        sort: e.sort,
        splice: e.splice,
      }),
      (b.extend = b.fn.extend =
        function () {
          var s,
            p,
            g,
            _,
            C,
            w,
            D = arguments[0] || {},
            V = 1,
            N = arguments.length,
            z = !1;
          for (
            typeof D == "boolean" && ((z = D), (D = arguments[V] || {}), V++),
              typeof D != "object" && !I(D) && (D = {}),
              V === N && ((D = this), V--);
            V < N;
            V++
          )
            if ((s = arguments[V]) != null)
              for (p in s)
                (_ = s[p]),
                  !(p === "__proto__" || D === _) &&
                    (z && _ && (b.isPlainObject(_) || (C = Array.isArray(_)))
                      ? ((g = D[p]),
                        C && !Array.isArray(g)
                          ? (w = [])
                          : !C && !b.isPlainObject(g)
                          ? (w = {})
                          : (w = g),
                        (C = !1),
                        (D[p] = b.extend(z, w, _)))
                      : _ !== void 0 && (D[p] = _));
          return D;
        }),
      b.extend({
        expando: "jQuery" + (ge + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function (s) {
          throw new Error(s);
        },
        noop: function () {},
        isPlainObject: function (s) {
          var p, g;
          return !s || f.call(s) !== "[object Object]"
            ? !1
            : ((p = t(s)),
              p
                ? ((g = v.call(p, "constructor") && p.constructor),
                  typeof g == "function" && S.call(g) === T)
                : !0);
        },
        isEmptyObject: function (s) {
          var p;
          for (p in s) return !1;
          return !0;
        },
        globalEval: function (s, p, g) {
          ee(s, { nonce: p && p.nonce }, g);
        },
        each: function (s, p) {
          var g,
            _ = 0;
          if (Ue(s))
            for (g = s.length; _ < g && p.call(s[_], _, s[_]) !== !1; _++);
          else for (_ in s) if (p.call(s[_], _, s[_]) === !1) break;
          return s;
        },
        text: function (s) {
          var p,
            g = "",
            _ = 0,
            C = s.nodeType;
          if (!C) for (; (p = s[_++]); ) g += b.text(p);
          return C === 1 || C === 11
            ? s.textContent
            : C === 9
            ? s.documentElement.textContent
            : C === 3 || C === 4
            ? s.nodeValue
            : g;
        },
        makeArray: function (s, p) {
          var g = p || [];
          return (
            s != null &&
              (Ue(Object(s))
                ? b.merge(g, typeof s == "string" ? [s] : s)
                : a.call(g, s)),
            g
          );
        },
        inArray: function (s, p, g) {
          return p == null ? -1 : d.call(p, s, g);
        },
        isXMLDoc: function (s) {
          var p = s && s.namespaceURI,
            g = s && (s.ownerDocument || s).documentElement;
          return !Pe.test(p || (g && g.nodeName) || "HTML");
        },
        merge: function (s, p) {
          for (var g = +p.length, _ = 0, C = s.length; _ < g; _++)
            s[C++] = p[_];
          return (s.length = C), s;
        },
        grep: function (s, p, g) {
          for (var _, C = [], w = 0, D = s.length, V = !g; w < D; w++)
            (_ = !p(s[w], w)), _ !== V && C.push(s[w]);
          return C;
        },
        map: function (s, p, g) {
          var _,
            C,
            w = 0,
            D = [];
          if (Ue(s))
            for (_ = s.length; w < _; w++)
              (C = p(s[w], w, g)), C != null && D.push(C);
          else for (w in s) (C = p(s[w], w, g)), C != null && D.push(C);
          return o(D);
        },
        guid: 1,
        support: M,
      }),
      typeof Symbol == "function" &&
        (b.fn[Symbol.iterator] = e[Symbol.iterator]),
      b.each(
        "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
          " "
        ),
        function (s, p) {
          u["[object " + p + "]"] = p.toLowerCase();
        }
      );
    function Ue(s) {
      var p = !!s && "length" in s && s.length,
        g = re(s);
      return I(s) || L(s)
        ? !1
        : g === "array" ||
            p === 0 ||
            (typeof p == "number" && p > 0 && p - 1 in s);
    }
    function we(s, p) {
      return s.nodeName && s.nodeName.toLowerCase() === p.toLowerCase();
    }
    var Ge = e.pop,
      yt = e.sort,
      Qt = e.splice,
      Be = "[\\x20\\t\\r\\n\\f]",
      vi = new RegExp(
        "^" + Be + "+|((?:^|[^\\\\])(?:\\\\.)*)" + Be + "+$",
        "g"
      );
    b.contains = function (s, p) {
      var g = p && p.parentNode;
      return (
        s === g ||
        !!(
          g &&
          g.nodeType === 1 &&
          (s.contains
            ? s.contains(g)
            : s.compareDocumentPosition && s.compareDocumentPosition(g) & 16)
        )
      );
    };
    var Pn = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function Ft(s, p) {
      return p
        ? s === "\0"
          ? "\uFFFD"
          : s.slice(0, -1) +
            "\\" +
            s.charCodeAt(s.length - 1).toString(16) +
            " "
        : "\\" + s;
    }
    b.escapeSelector = function (s) {
      return (s + "").replace(Pn, Ft);
    };
    var xt = E,
      yi = a;
    (function () {
      var s,
        p,
        g,
        _,
        C,
        w = yi,
        D,
        V,
        N,
        z,
        X,
        ie = b.expando,
        q = 0,
        ae = 0,
        ze = Fl(),
        at = Fl(),
        qe = Fl(),
        gi = Fl(),
        ai = function (P, H) {
          return P === H && (C = !0), 0;
        },
        Fn =
          "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        Nn =
          "(?:\\\\[\\da-fA-F]{1,6}" +
          Be +
          "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
        it =
          "\\[" +
          Be +
          "*(" +
          Nn +
          ")(?:" +
          Be +
          "*([*^$|!~]?=)" +
          Be +
          `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` +
          Nn +
          "))|)" +
          Be +
          "*\\]",
        io =
          ":(" +
          Nn +
          `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` +
          it +
          ")*)|.*)\\)|)",
        st = new RegExp(Be + "+", "g"),
        Ut = new RegExp("^" + Be + "*," + Be + "*"),
        $a = new RegExp("^" + Be + "*([>+~]|" + Be + ")" + Be + "*"),
        Ru = new RegExp(Be + "|>"),
        Ln = new RegExp(io),
        Wa = new RegExp("^" + Nn + "$"),
        Vn = {
          ID: new RegExp("^#(" + Nn + ")"),
          CLASS: new RegExp("^\\.(" + Nn + ")"),
          TAG: new RegExp("^(" + Nn + "|[*])"),
          ATTR: new RegExp("^" + it),
          PSEUDO: new RegExp("^" + io),
          CHILD: new RegExp(
            "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
              Be +
              "*(even|odd|(([+-]|)(\\d*)n|)" +
              Be +
              "*(?:([+-]|)" +
              Be +
              "*(\\d+)|))" +
              Be +
              "*\\)|)",
            "i"
          ),
          bool: new RegExp("^(?:" + Fn + ")$", "i"),
          needsContext: new RegExp(
            "^" +
              Be +
              "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
              Be +
              "*((?:-\\d)?\\d*)" +
              Be +
              "*\\)|)(?=[^-]|$)",
            "i"
          ),
        },
        wr = /^(?:input|select|textarea|button)$/i,
        Sr = /^h\d$/i,
        rn = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        Fu = /[+~]/,
        ar = new RegExp(
          "\\\\[\\da-fA-F]{1,6}" + Be + "?|\\\\([^\\r\\n\\f])",
          "g"
        ),
        sr = function (P, H) {
          var Y = "0x" + P.slice(1) - 65536;
          return (
            H ||
            (Y < 0
              ? String.fromCharCode(Y + 65536)
              : String.fromCharCode((Y >> 10) | 55296, (Y & 1023) | 56320))
          );
        },
        Cx = function () {
          Dr();
        },
        wx = Ll(
          function (P) {
            return P.disabled === !0 && we(P, "fieldset");
          },
          { dir: "parentNode", next: "legend" }
        );
      function Sx() {
        try {
          return D.activeElement;
        } catch {}
      }
      try {
        w.apply((e = r.call(xt.childNodes)), xt.childNodes),
          e[xt.childNodes.length].nodeType;
      } catch {
        w = {
          apply: function (H, Y) {
            yi.apply(H, r.call(Y));
          },
          call: function (H) {
            yi.apply(H, r.call(arguments, 1));
          },
        };
      }
      function ft(P, H, Y, K) {
        var te,
          he,
          _e,
          De,
          be,
          Je,
          je,
          $e = H && H.ownerDocument,
          et = H ? H.nodeType : 9;
        if (
          ((Y = Y || []),
          typeof P != "string" || !P || (et !== 1 && et !== 9 && et !== 11))
        )
          return Y;
        if (!K && (Dr(H), (H = H || D), N)) {
          if (et !== 11 && (be = rn.exec(P)))
            if ((te = be[1])) {
              if (et === 9)
                if ((_e = H.getElementById(te))) {
                  if (_e.id === te) return w.call(Y, _e), Y;
                } else return Y;
              else if (
                $e &&
                (_e = $e.getElementById(te)) &&
                ft.contains(H, _e) &&
                _e.id === te
              )
                return w.call(Y, _e), Y;
            } else {
              if (be[2]) return w.apply(Y, H.getElementsByTagName(P)), Y;
              if ((te = be[3]) && H.getElementsByClassName)
                return w.apply(Y, H.getElementsByClassName(te)), Y;
            }
          if (!gi[P + " "] && (!z || !z.test(P))) {
            if (((je = P), ($e = H), et === 1 && (Ru.test(P) || $a.test(P)))) {
              for (
                $e = (Fu.test(P) && Nu(H.parentNode)) || H,
                  ($e != H || !M.scope) &&
                    ((De = H.getAttribute("id"))
                      ? (De = b.escapeSelector(De))
                      : H.setAttribute("id", (De = ie))),
                  Je = Ga(P),
                  he = Je.length;
                he--;

              )
                Je[he] = (De ? "#" + De : ":scope") + " " + Nl(Je[he]);
              je = Je.join(",");
            }
            try {
              return w.apply(Y, $e.querySelectorAll(je)), Y;
            } catch {
              gi(P, !0);
            } finally {
              De === ie && H.removeAttribute("id");
            }
          }
        }
        return lg(P.replace(vi, "$1"), H, Y, K);
      }
      function Fl() {
        var P = [];
        function H(Y, K) {
          return (
            P.push(Y + " ") > p.cacheLength && delete H[P.shift()],
            (H[Y + " "] = K)
          );
        }
        return H;
      }
      function vn(P) {
        return (P[ie] = !0), P;
      }
      function Ho(P) {
        var H = D.createElement("fieldset");
        try {
          return !!P(H);
        } catch {
          return !1;
        } finally {
          H.parentNode && H.parentNode.removeChild(H), (H = null);
        }
      }
      function Dx(P) {
        return function (H) {
          return we(H, "input") && H.type === P;
        };
      }
      function Mx(P) {
        return function (H) {
          return (we(H, "input") || we(H, "button")) && H.type === P;
        };
      }
      function ag(P) {
        return function (H) {
          return "form" in H
            ? H.parentNode && H.disabled === !1
              ? "label" in H
                ? "label" in H.parentNode
                  ? H.parentNode.disabled === P
                  : H.disabled === P
                : H.isDisabled === P || (H.isDisabled !== !P && wx(H) === P)
              : H.disabled === P
            : "label" in H
            ? H.disabled === P
            : !1;
        };
      }
      function no(P) {
        return vn(function (H) {
          return (
            (H = +H),
            vn(function (Y, K) {
              for (var te, he = P([], Y.length, H), _e = he.length; _e--; )
                Y[(te = he[_e])] && (Y[te] = !(K[te] = Y[te]));
            })
          );
        });
      }
      function Nu(P) {
        return P && typeof P.getElementsByTagName < "u" && P;
      }
      function Dr(P) {
        var H,
          Y = P ? P.ownerDocument || P : xt;
        return (
          Y == D ||
            Y.nodeType !== 9 ||
            !Y.documentElement ||
            ((D = Y),
            (V = D.documentElement),
            (N = !b.isXMLDoc(D)),
            (X = V.matches || V.webkitMatchesSelector || V.msMatchesSelector),
            V.msMatchesSelector &&
              xt != D &&
              (H = D.defaultView) &&
              H.top !== H &&
              H.addEventListener("unload", Cx),
            (M.getById = Ho(function (K) {
              return (
                (V.appendChild(K).id = b.expando),
                !D.getElementsByName || !D.getElementsByName(b.expando).length
              );
            })),
            (M.disconnectedMatch = Ho(function (K) {
              return X.call(K, "*");
            })),
            (M.scope = Ho(function () {
              return D.querySelectorAll(":scope");
            })),
            (M.cssHas = Ho(function () {
              try {
                return D.querySelector(":has(*,:jqfake)"), !1;
              } catch {
                return !0;
              }
            })),
            M.getById
              ? ((p.filter.ID = function (K) {
                  var te = K.replace(ar, sr);
                  return function (he) {
                    return he.getAttribute("id") === te;
                  };
                }),
                (p.find.ID = function (K, te) {
                  if (typeof te.getElementById < "u" && N) {
                    var he = te.getElementById(K);
                    return he ? [he] : [];
                  }
                }))
              : ((p.filter.ID = function (K) {
                  var te = K.replace(ar, sr);
                  return function (he) {
                    var _e =
                      typeof he.getAttributeNode < "u" &&
                      he.getAttributeNode("id");
                    return _e && _e.value === te;
                  };
                }),
                (p.find.ID = function (K, te) {
                  if (typeof te.getElementById < "u" && N) {
                    var he,
                      _e,
                      De,
                      be = te.getElementById(K);
                    if (be) {
                      if (
                        ((he = be.getAttributeNode("id")), he && he.value === K)
                      )
                        return [be];
                      for (
                        De = te.getElementsByName(K), _e = 0;
                        (be = De[_e++]);

                      )
                        if (
                          ((he = be.getAttributeNode("id")),
                          he && he.value === K)
                        )
                          return [be];
                    }
                    return [];
                  }
                })),
            (p.find.TAG = function (K, te) {
              return typeof te.getElementsByTagName < "u"
                ? te.getElementsByTagName(K)
                : te.querySelectorAll(K);
            }),
            (p.find.CLASS = function (K, te) {
              if (typeof te.getElementsByClassName < "u" && N)
                return te.getElementsByClassName(K);
            }),
            (z = []),
            Ho(function (K) {
              var te;
              (V.appendChild(K).innerHTML =
                "<a id='" +
                ie +
                "' href='' disabled='disabled'></a><select id='" +
                ie +
                "-\r\\' disabled='disabled'><option selected=''></option></select>"),
                K.querySelectorAll("[selected]").length ||
                  z.push("\\[" + Be + "*(?:value|" + Fn + ")"),
                K.querySelectorAll("[id~=" + ie + "-]").length || z.push("~="),
                K.querySelectorAll("a#" + ie + "+*").length ||
                  z.push(".#.+[+~]"),
                K.querySelectorAll(":checked").length || z.push(":checked"),
                (te = D.createElement("input")),
                te.setAttribute("type", "hidden"),
                K.appendChild(te).setAttribute("name", "D"),
                (V.appendChild(K).disabled = !0),
                K.querySelectorAll(":disabled").length !== 2 &&
                  z.push(":enabled", ":disabled"),
                (te = D.createElement("input")),
                te.setAttribute("name", ""),
                K.appendChild(te),
                K.querySelectorAll("[name='']").length ||
                  z.push("\\[" + Be + "*name" + Be + "*=" + Be + `*(?:''|"")`);
            }),
            M.cssHas || z.push(":has"),
            (z = z.length && new RegExp(z.join("|"))),
            (ai = function (K, te) {
              if (K === te) return (C = !0), 0;
              var he = !K.compareDocumentPosition - !te.compareDocumentPosition;
              return (
                he ||
                ((he =
                  (K.ownerDocument || K) == (te.ownerDocument || te)
                    ? K.compareDocumentPosition(te)
                    : 1),
                he & 1 ||
                (!M.sortDetached && te.compareDocumentPosition(K) === he)
                  ? K === D || (K.ownerDocument == xt && ft.contains(xt, K))
                    ? -1
                    : te === D ||
                      (te.ownerDocument == xt && ft.contains(xt, te))
                    ? 1
                    : _
                    ? d.call(_, K) - d.call(_, te)
                    : 0
                  : he & 4
                  ? -1
                  : 1)
              );
            })),
          D
        );
      }
      (ft.matches = function (P, H) {
        return ft(P, null, null, H);
      }),
        (ft.matchesSelector = function (P, H) {
          if ((Dr(P), N && !gi[H + " "] && (!z || !z.test(H))))
            try {
              var Y = X.call(P, H);
              if (
                Y ||
                M.disconnectedMatch ||
                (P.document && P.document.nodeType !== 11)
              )
                return Y;
            } catch {
              gi(H, !0);
            }
          return ft(H, D, null, [P]).length > 0;
        }),
        (ft.contains = function (P, H) {
          return (P.ownerDocument || P) != D && Dr(P), b.contains(P, H);
        }),
        (ft.attr = function (P, H) {
          (P.ownerDocument || P) != D && Dr(P);
          var Y = p.attrHandle[H.toLowerCase()],
            K =
              Y && v.call(p.attrHandle, H.toLowerCase()) ? Y(P, H, !N) : void 0;
          return K !== void 0 ? K : P.getAttribute(H);
        }),
        (ft.error = function (P) {
          throw new Error("Syntax error, unrecognized expression: " + P);
        }),
        (b.uniqueSort = function (P) {
          var H,
            Y = [],
            K = 0,
            te = 0;
          if (
            ((C = !M.sortStable),
            (_ = !M.sortStable && r.call(P, 0)),
            yt.call(P, ai),
            C)
          ) {
            for (; (H = P[te++]); ) H === P[te] && (K = Y.push(te));
            for (; K--; ) Qt.call(P, Y[K], 1);
          }
          return (_ = null), P;
        }),
        (b.fn.uniqueSort = function () {
          return this.pushStack(b.uniqueSort(r.apply(this)));
        }),
        (p = b.expr =
          {
            cacheLength: 50,
            createPseudo: vn,
            match: Vn,
            attrHandle: {},
            find: {},
            relative: {
              ">": { dir: "parentNode", first: !0 },
              " ": { dir: "parentNode" },
              "+": { dir: "previousSibling", first: !0 },
              "~": { dir: "previousSibling" },
            },
            preFilter: {
              ATTR: function (P) {
                return (
                  (P[1] = P[1].replace(ar, sr)),
                  (P[3] = (P[3] || P[4] || P[5] || "").replace(ar, sr)),
                  P[2] === "~=" && (P[3] = " " + P[3] + " "),
                  P.slice(0, 4)
                );
              },
              CHILD: function (P) {
                return (
                  (P[1] = P[1].toLowerCase()),
                  P[1].slice(0, 3) === "nth"
                    ? (P[3] || ft.error(P[0]),
                      (P[4] = +(P[4]
                        ? P[5] + (P[6] || 1)
                        : 2 * (P[3] === "even" || P[3] === "odd"))),
                      (P[5] = +(P[7] + P[8] || P[3] === "odd")))
                    : P[3] && ft.error(P[0]),
                  P
                );
              },
              PSEUDO: function (P) {
                var H,
                  Y = !P[6] && P[2];
                return Vn.CHILD.test(P[0])
                  ? null
                  : (P[3]
                      ? (P[2] = P[4] || P[5] || "")
                      : Y &&
                        Ln.test(Y) &&
                        (H = Ga(Y, !0)) &&
                        (H = Y.indexOf(")", Y.length - H) - Y.length) &&
                        ((P[0] = P[0].slice(0, H)), (P[2] = Y.slice(0, H))),
                    P.slice(0, 3));
              },
            },
            filter: {
              TAG: function (P) {
                var H = P.replace(ar, sr).toLowerCase();
                return P === "*"
                  ? function () {
                      return !0;
                    }
                  : function (Y) {
                      return we(Y, H);
                    };
              },
              CLASS: function (P) {
                var H = ze[P + " "];
                return (
                  H ||
                  ((H = new RegExp("(^|" + Be + ")" + P + "(" + Be + "|$)")) &&
                    ze(P, function (Y) {
                      return H.test(
                        (typeof Y.className == "string" && Y.className) ||
                          (typeof Y.getAttribute < "u" &&
                            Y.getAttribute("class")) ||
                          ""
                      );
                    }))
                );
              },
              ATTR: function (P, H, Y) {
                return function (K) {
                  var te = ft.attr(K, P);
                  return te == null
                    ? H === "!="
                    : H
                    ? ((te += ""),
                      H === "="
                        ? te === Y
                        : H === "!="
                        ? te !== Y
                        : H === "^="
                        ? Y && te.indexOf(Y) === 0
                        : H === "*="
                        ? Y && te.indexOf(Y) > -1
                        : H === "$="
                        ? Y && te.slice(-Y.length) === Y
                        : H === "~="
                        ? (" " + te.replace(st, " ") + " ").indexOf(Y) > -1
                        : H === "|="
                        ? te === Y || te.slice(0, Y.length + 1) === Y + "-"
                        : !1)
                    : !0;
                };
              },
              CHILD: function (P, H, Y, K, te) {
                var he = P.slice(0, 3) !== "nth",
                  _e = P.slice(-4) !== "last",
                  De = H === "of-type";
                return K === 1 && te === 0
                  ? function (be) {
                      return !!be.parentNode;
                    }
                  : function (be, Je, je) {
                      var $e,
                        et,
                        Ne,
                        wt,
                        Ai,
                        xi = he !== _e ? "nextSibling" : "previousSibling",
                        on = be.parentNode,
                        Bn = De && be.nodeName.toLowerCase(),
                        Uo = !je && !De,
                        Oi = !1;
                      if (on) {
                        if (he) {
                          for (; xi; ) {
                            for (Ne = be; (Ne = Ne[xi]); )
                              if (De ? we(Ne, Bn) : Ne.nodeType === 1)
                                return !1;
                            Ai = xi = P === "only" && !Ai && "nextSibling";
                          }
                          return !0;
                        }
                        if (
                          ((Ai = [_e ? on.firstChild : on.lastChild]), _e && Uo)
                        ) {
                          for (
                            et = on[ie] || (on[ie] = {}),
                              $e = et[P] || [],
                              wt = $e[0] === q && $e[1],
                              Oi = wt && $e[2],
                              Ne = wt && on.childNodes[wt];
                            (Ne =
                              (++wt && Ne && Ne[xi]) ||
                              (Oi = wt = 0) ||
                              Ai.pop());

                          )
                            if (Ne.nodeType === 1 && ++Oi && Ne === be) {
                              et[P] = [q, wt, Oi];
                              break;
                            }
                        } else if (
                          (Uo &&
                            ((et = be[ie] || (be[ie] = {})),
                            ($e = et[P] || []),
                            (wt = $e[0] === q && $e[1]),
                            (Oi = wt)),
                          Oi === !1)
                        )
                          for (
                            ;
                            (Ne =
                              (++wt && Ne && Ne[xi]) ||
                              (Oi = wt = 0) ||
                              Ai.pop()) &&
                            !(
                              (De ? we(Ne, Bn) : Ne.nodeType === 1) &&
                              ++Oi &&
                              (Uo &&
                                ((et = Ne[ie] || (Ne[ie] = {})),
                                (et[P] = [q, Oi])),
                              Ne === be)
                            );

                          );
                        return (
                          (Oi -= te), Oi === K || (Oi % K === 0 && Oi / K >= 0)
                        );
                      }
                    };
              },
              PSEUDO: function (P, H) {
                var Y,
                  K =
                    p.pseudos[P] ||
                    p.setFilters[P.toLowerCase()] ||
                    ft.error("unsupported pseudo: " + P);
                return K[ie]
                  ? K(H)
                  : K.length > 1
                  ? ((Y = [P, P, "", H]),
                    p.setFilters.hasOwnProperty(P.toLowerCase())
                      ? vn(function (te, he) {
                          for (var _e, De = K(te, H), be = De.length; be--; )
                            (_e = d.call(te, De[be])),
                              (te[_e] = !(he[_e] = De[be]));
                        })
                      : function (te) {
                          return K(te, 0, Y);
                        })
                  : K;
              },
            },
            pseudos: {
              not: vn(function (P) {
                var H = [],
                  Y = [],
                  K = ju(P.replace(vi, "$1"));
                return K[ie]
                  ? vn(function (te, he, _e, De) {
                      for (
                        var be, Je = K(te, null, De, []), je = te.length;
                        je--;

                      )
                        (be = Je[je]) && (te[je] = !(he[je] = be));
                    })
                  : function (te, he, _e) {
                      return (
                        (H[0] = te), K(H, null, _e, Y), (H[0] = null), !Y.pop()
                      );
                    };
              }),
              has: vn(function (P) {
                return function (H) {
                  return ft(P, H).length > 0;
                };
              }),
              contains: vn(function (P) {
                return (
                  (P = P.replace(ar, sr)),
                  function (H) {
                    return (H.textContent || b.text(H)).indexOf(P) > -1;
                  }
                );
              }),
              lang: vn(function (P) {
                return (
                  Wa.test(P || "") || ft.error("unsupported lang: " + P),
                  (P = P.replace(ar, sr).toLowerCase()),
                  function (H) {
                    var Y;
                    do
                      if (
                        (Y = N
                          ? H.lang
                          : H.getAttribute("xml:lang") ||
                            H.getAttribute("lang"))
                      )
                        return (
                          (Y = Y.toLowerCase()),
                          Y === P || Y.indexOf(P + "-") === 0
                        );
                    while ((H = H.parentNode) && H.nodeType === 1);
                    return !1;
                  }
                );
              }),
              target: function (P) {
                var H = n.location && n.location.hash;
                return H && H.slice(1) === P.id;
              },
              root: function (P) {
                return P === V;
              },
              focus: function (P) {
                return (
                  P === Sx() &&
                  D.hasFocus() &&
                  !!(P.type || P.href || ~P.tabIndex)
                );
              },
              enabled: ag(!1),
              disabled: ag(!0),
              checked: function (P) {
                return (
                  (we(P, "input") && !!P.checked) ||
                  (we(P, "option") && !!P.selected)
                );
              },
              selected: function (P) {
                return (
                  P.parentNode && P.parentNode.selectedIndex, P.selected === !0
                );
              },
              empty: function (P) {
                for (P = P.firstChild; P; P = P.nextSibling)
                  if (P.nodeType < 6) return !1;
                return !0;
              },
              parent: function (P) {
                return !p.pseudos.empty(P);
              },
              header: function (P) {
                return Sr.test(P.nodeName);
              },
              input: function (P) {
                return wr.test(P.nodeName);
              },
              button: function (P) {
                return (
                  (we(P, "input") && P.type === "button") || we(P, "button")
                );
              },
              text: function (P) {
                var H;
                return (
                  we(P, "input") &&
                  P.type === "text" &&
                  ((H = P.getAttribute("type")) == null ||
                    H.toLowerCase() === "text")
                );
              },
              first: no(function () {
                return [0];
              }),
              last: no(function (P, H) {
                return [H - 1];
              }),
              eq: no(function (P, H, Y) {
                return [Y < 0 ? Y + H : Y];
              }),
              even: no(function (P, H) {
                for (var Y = 0; Y < H; Y += 2) P.push(Y);
                return P;
              }),
              odd: no(function (P, H) {
                for (var Y = 1; Y < H; Y += 2) P.push(Y);
                return P;
              }),
              lt: no(function (P, H, Y) {
                var K;
                for (
                  Y < 0 ? (K = Y + H) : Y > H ? (K = H) : (K = Y);
                  --K >= 0;

                )
                  P.push(K);
                return P;
              }),
              gt: no(function (P, H, Y) {
                for (var K = Y < 0 ? Y + H : Y; ++K < H; ) P.push(K);
                return P;
              }),
            },
          }),
        (p.pseudos.nth = p.pseudos.eq);
      for (s in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })
        p.pseudos[s] = Dx(s);
      for (s in { submit: !0, reset: !0 }) p.pseudos[s] = Mx(s);
      function sg() {}
      (sg.prototype = p.filters = p.pseudos), (p.setFilters = new sg());
      function Ga(P, H) {
        var Y,
          K,
          te,
          he,
          _e,
          De,
          be,
          Je = at[P + " "];
        if (Je) return H ? 0 : Je.slice(0);
        for (_e = P, De = [], be = p.preFilter; _e; ) {
          (!Y || (K = Ut.exec(_e))) &&
            (K && (_e = _e.slice(K[0].length) || _e), De.push((te = []))),
            (Y = !1),
            (K = $a.exec(_e)) &&
              ((Y = K.shift()),
              te.push({ value: Y, type: K[0].replace(vi, " ") }),
              (_e = _e.slice(Y.length)));
          for (he in p.filter)
            (K = Vn[he].exec(_e)) &&
              (!be[he] || (K = be[he](K))) &&
              ((Y = K.shift()),
              te.push({ value: Y, type: he, matches: K }),
              (_e = _e.slice(Y.length)));
          if (!Y) break;
        }
        return H ? _e.length : _e ? ft.error(P) : at(P, De).slice(0);
      }
      function Nl(P) {
        for (var H = 0, Y = P.length, K = ""; H < Y; H++) K += P[H].value;
        return K;
      }
      function Ll(P, H, Y) {
        var K = H.dir,
          te = H.next,
          he = te || K,
          _e = Y && he === "parentNode",
          De = ae++;
        return H.first
          ? function (be, Je, je) {
              for (; (be = be[K]); )
                if (be.nodeType === 1 || _e) return P(be, Je, je);
              return !1;
            }
          : function (be, Je, je) {
              var $e,
                et,
                Ne = [q, De];
              if (je) {
                for (; (be = be[K]); )
                  if ((be.nodeType === 1 || _e) && P(be, Je, je)) return !0;
              } else
                for (; (be = be[K]); )
                  if (be.nodeType === 1 || _e)
                    if (((et = be[ie] || (be[ie] = {})), te && we(be, te)))
                      be = be[K] || be;
                    else {
                      if (($e = et[he]) && $e[0] === q && $e[1] === De)
                        return (Ne[2] = $e[2]);
                      if (((et[he] = Ne), (Ne[2] = P(be, Je, je)))) return !0;
                    }
              return !1;
            };
      }
      function Lu(P) {
        return P.length > 1
          ? function (H, Y, K) {
              for (var te = P.length; te--; ) if (!P[te](H, Y, K)) return !1;
              return !0;
            }
          : P[0];
      }
      function Tx(P, H, Y) {
        for (var K = 0, te = H.length; K < te; K++) ft(P, H[K], Y);
        return Y;
      }
      function Vl(P, H, Y, K, te) {
        for (
          var he, _e = [], De = 0, be = P.length, Je = H != null;
          De < be;
          De++
        )
          (he = P[De]) &&
            (!Y || Y(he, K, te)) &&
            (_e.push(he), Je && H.push(De));
        return _e;
      }
      function Vu(P, H, Y, K, te, he) {
        return (
          K && !K[ie] && (K = Vu(K)),
          te && !te[ie] && (te = Vu(te, he)),
          vn(function (_e, De, be, Je) {
            var je,
              $e,
              et,
              Ne,
              wt = [],
              Ai = [],
              xi = De.length,
              on = _e || Tx(H || "*", be.nodeType ? [be] : be, []),
              Bn = P && (_e || !H) ? Vl(on, wt, P, be, Je) : on;
            if (
              (Y
                ? ((Ne = te || (_e ? P : xi || K) ? [] : De), Y(Bn, Ne, be, Je))
                : (Ne = Bn),
              K)
            )
              for (je = Vl(Ne, Ai), K(je, [], be, Je), $e = je.length; $e--; )
                (et = je[$e]) && (Ne[Ai[$e]] = !(Bn[Ai[$e]] = et));
            if (_e) {
              if (te || P) {
                if (te) {
                  for (je = [], $e = Ne.length; $e--; )
                    (et = Ne[$e]) && je.push((Bn[$e] = et));
                  te(null, (Ne = []), je, Je);
                }
                for ($e = Ne.length; $e--; )
                  (et = Ne[$e]) &&
                    (je = te ? d.call(_e, et) : wt[$e]) > -1 &&
                    (_e[je] = !(De[je] = et));
              }
            } else (Ne = Vl(Ne === De ? Ne.splice(xi, Ne.length) : Ne)), te ? te(null, De, Ne, Je) : w.apply(De, Ne);
          })
        );
      }
      function Bu(P) {
        for (
          var H,
            Y,
            K,
            te = P.length,
            he = p.relative[P[0].type],
            _e = he || p.relative[" "],
            De = he ? 1 : 0,
            be = Ll(
              function ($e) {
                return $e === H;
              },
              _e,
              !0
            ),
            Je = Ll(
              function ($e) {
                return d.call(H, $e) > -1;
              },
              _e,
              !0
            ),
            je = [
              function ($e, et, Ne) {
                var wt =
                  (!he && (Ne || et != g)) ||
                  ((H = et).nodeType ? be($e, et, Ne) : Je($e, et, Ne));
                return (H = null), wt;
              },
            ];
          De < te;
          De++
        )
          if ((Y = p.relative[P[De].type])) je = [Ll(Lu(je), Y)];
          else {
            if (
              ((Y = p.filter[P[De].type].apply(null, P[De].matches)), Y[ie])
            ) {
              for (K = ++De; K < te && !p.relative[P[K].type]; K++);
              return Vu(
                De > 1 && Lu(je),
                De > 1 &&
                  Nl(
                    P.slice(0, De - 1).concat({
                      value: P[De - 2].type === " " ? "*" : "",
                    })
                  ).replace(vi, "$1"),
                Y,
                De < K && Bu(P.slice(De, K)),
                K < te && Bu((P = P.slice(K))),
                K < te && Nl(P)
              );
            }
            je.push(Y);
          }
        return Lu(je);
      }
      function Ex(P, H) {
        var Y = H.length > 0,
          K = P.length > 0,
          te = function (he, _e, De, be, Je) {
            var je,
              $e,
              et,
              Ne = 0,
              wt = "0",
              Ai = he && [],
              xi = [],
              on = g,
              Bn = he || (K && p.find.TAG("*", Je)),
              Uo = (q += on == null ? 1 : Math.random() || 0.1),
              Oi = Bn.length;
            for (
              Je && (g = _e == D || _e || Je);
              wt !== Oi && (je = Bn[wt]) != null;
              wt++
            ) {
              if (K && je) {
                for (
                  $e = 0, !_e && je.ownerDocument != D && (Dr(je), (De = !N));
                  (et = P[$e++]);

                )
                  if (et(je, _e || D, De)) {
                    w.call(be, je);
                    break;
                  }
                Je && (q = Uo);
              }
              Y && ((je = !et && je) && Ne--, he && Ai.push(je));
            }
            if (((Ne += wt), Y && wt !== Ne)) {
              for ($e = 0; (et = H[$e++]); ) et(Ai, xi, _e, De);
              if (he) {
                if (Ne > 0)
                  for (; wt--; ) Ai[wt] || xi[wt] || (xi[wt] = Ge.call(be));
                xi = Vl(xi);
              }
              w.apply(be, xi),
                Je &&
                  !he &&
                  xi.length > 0 &&
                  Ne + H.length > 1 &&
                  b.uniqueSort(be);
            }
            return Je && ((q = Uo), (g = on)), Ai;
          };
        return Y ? vn(te) : te;
      }
      function ju(P, H) {
        var Y,
          K = [],
          te = [],
          he = qe[P + " "];
        if (!he) {
          for (H || (H = Ga(P)), Y = H.length; Y--; )
            (he = Bu(H[Y])), he[ie] ? K.push(he) : te.push(he);
          (he = qe(P, Ex(te, K))), (he.selector = P);
        }
        return he;
      }
      function lg(P, H, Y, K) {
        var te,
          he,
          _e,
          De,
          be,
          Je = typeof P == "function" && P,
          je = !K && Ga((P = Je.selector || P));
        if (((Y = Y || []), je.length === 1)) {
          if (
            ((he = je[0] = je[0].slice(0)),
            he.length > 2 &&
              (_e = he[0]).type === "ID" &&
              H.nodeType === 9 &&
              N &&
              p.relative[he[1].type])
          ) {
            if (
              ((H = (p.find.ID(_e.matches[0].replace(ar, sr), H) || [])[0]), H)
            )
              Je && (H = H.parentNode);
            else return Y;
            P = P.slice(he.shift().value.length);
          }
          for (
            te = Vn.needsContext.test(P) ? 0 : he.length;
            te-- && ((_e = he[te]), !p.relative[(De = _e.type)]);

          )
            if (
              (be = p.find[De]) &&
              (K = be(
                _e.matches[0].replace(ar, sr),
                (Fu.test(he[0].type) && Nu(H.parentNode)) || H
              ))
            ) {
              if ((he.splice(te, 1), (P = K.length && Nl(he)), !P))
                return w.apply(Y, K), Y;
              break;
            }
        }
        return (
          (Je || ju(P, je))(
            K,
            H,
            !N,
            Y,
            !H || (Fu.test(P) && Nu(H.parentNode)) || H
          ),
          Y
        );
      }
      (M.sortStable = ie.split("").sort(ai).join("") === ie),
        Dr(),
        (M.sortDetached = Ho(function (P) {
          return P.compareDocumentPosition(D.createElement("fieldset")) & 1;
        })),
        (b.find = ft),
        (b.expr[":"] = b.expr.pseudos),
        (b.unique = b.uniqueSort),
        (ft.compile = ju),
        (ft.select = lg),
        (ft.setDocument = Dr),
        (ft.tokenize = Ga),
        (ft.escape = b.escapeSelector),
        (ft.getText = b.text),
        (ft.isXML = b.isXMLDoc),
        (ft.selectors = b.expr),
        (ft.support = b.support),
        (ft.uniqueSort = b.uniqueSort);
    })();
    var _n = function (s, p, g) {
        for (var _ = [], C = g !== void 0; (s = s[p]) && s.nodeType !== 9; )
          if (s.nodeType === 1) {
            if (C && b(s).is(g)) break;
            _.push(s);
          }
        return _;
      },
      Qr = function (s, p) {
        for (var g = []; s; s = s.nextSibling)
          s.nodeType === 1 && s !== p && g.push(s);
        return g;
      },
      tr = b.expr.match.needsContext,
      Xr = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function In(s, p, g) {
      return I(p)
        ? b.grep(s, function (_, C) {
            return !!p.call(_, C, _) !== g;
          })
        : p.nodeType
        ? b.grep(s, function (_) {
            return (_ === p) !== g;
          })
        : typeof p != "string"
        ? b.grep(s, function (_) {
            return d.call(p, _) > -1 !== g;
          })
        : b.filter(p, s, g);
    }
    (b.filter = function (s, p, g) {
      var _ = p[0];
      return (
        g && (s = ":not(" + s + ")"),
        p.length === 1 && _.nodeType === 1
          ? b.find.matchesSelector(_, s)
            ? [_]
            : []
          : b.find.matches(
              s,
              b.grep(p, function (C) {
                return C.nodeType === 1;
              })
            )
      );
    }),
      b.fn.extend({
        find: function (s) {
          var p,
            g,
            _ = this.length,
            C = this;
          if (typeof s != "string")
            return this.pushStack(
              b(s).filter(function () {
                for (p = 0; p < _; p++) if (b.contains(C[p], this)) return !0;
              })
            );
          for (g = this.pushStack([]), p = 0; p < _; p++) b.find(s, C[p], g);
          return _ > 1 ? b.uniqueSort(g) : g;
        },
        filter: function (s) {
          return this.pushStack(In(this, s || [], !1));
        },
        not: function (s) {
          return this.pushStack(In(this, s || [], !0));
        },
        is: function (s) {
          return !!In(
            this,
            typeof s == "string" && tr.test(s) ? b(s) : s || [],
            !1
          ).length;
        },
      });
    var Cr,
      ir = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
      Zr = (b.fn.init = function (s, p, g) {
        var _, C;
        if (!s) return this;
        if (((g = g || Cr), typeof s == "string"))
          if (
            (s[0] === "<" && s[s.length - 1] === ">" && s.length >= 3
              ? (_ = [null, s, null])
              : (_ = ir.exec(s)),
            _ && (_[1] || !p))
          )
            if (_[1]) {
              if (
                ((p = p instanceof b ? p[0] : p),
                b.merge(
                  this,
                  b.parseHTML(
                    _[1],
                    p && p.nodeType ? p.ownerDocument || p : E,
                    !0
                  )
                ),
                Xr.test(_[1]) && b.isPlainObject(p))
              )
                for (_ in p) I(this[_]) ? this[_](p[_]) : this.attr(_, p[_]);
              return this;
            } else
              return (
                (C = E.getElementById(_[2])),
                C && ((this[0] = C), (this.length = 1)),
                this
              );
          else
            return !p || p.jquery
              ? (p || g).find(s)
              : this.constructor(p).find(s);
        else {
          if (s.nodeType) return (this[0] = s), (this.length = 1), this;
          if (I(s)) return g.ready !== void 0 ? g.ready(s) : s(b);
        }
        return b.makeArray(s, this);
      });
    (Zr.prototype = b.fn), (Cr = b(E));
    var nr = /^(?:parents|prev(?:Until|All))/,
      Py = { children: !0, contents: !0, next: !0, prev: !0 };
    b.fn.extend({
      has: function (s) {
        var p = b(s, this),
          g = p.length;
        return this.filter(function () {
          for (var _ = 0; _ < g; _++) if (b.contains(this, p[_])) return !0;
        });
      },
      closest: function (s, p) {
        var g,
          _ = 0,
          C = this.length,
          w = [],
          D = typeof s != "string" && b(s);
        if (!tr.test(s)) {
          for (; _ < C; _++)
            for (g = this[_]; g && g !== p; g = g.parentNode)
              if (
                g.nodeType < 11 &&
                (D
                  ? D.index(g) > -1
                  : g.nodeType === 1 && b.find.matchesSelector(g, s))
              ) {
                w.push(g);
                break;
              }
        }
        return this.pushStack(w.length > 1 ? b.uniqueSort(w) : w);
      },
      index: function (s) {
        return s
          ? typeof s == "string"
            ? d.call(b(s), this[0])
            : d.call(this, s.jquery ? s[0] : s)
          : this[0] && this[0].parentNode
          ? this.first().prevAll().length
          : -1;
      },
      add: function (s, p) {
        return this.pushStack(b.uniqueSort(b.merge(this.get(), b(s, p))));
      },
      addBack: function (s) {
        return this.add(
          s == null ? this.prevObject : this.prevObject.filter(s)
        );
      },
    });
    function Tf(s, p) {
      for (; (s = s[p]) && s.nodeType !== 1; );
      return s;
    }
    b.each(
      {
        parent: function (s) {
          var p = s.parentNode;
          return p && p.nodeType !== 11 ? p : null;
        },
        parents: function (s) {
          return _n(s, "parentNode");
        },
        parentsUntil: function (s, p, g) {
          return _n(s, "parentNode", g);
        },
        next: function (s) {
          return Tf(s, "nextSibling");
        },
        prev: function (s) {
          return Tf(s, "previousSibling");
        },
        nextAll: function (s) {
          return _n(s, "nextSibling");
        },
        prevAll: function (s) {
          return _n(s, "previousSibling");
        },
        nextUntil: function (s, p, g) {
          return _n(s, "nextSibling", g);
        },
        prevUntil: function (s, p, g) {
          return _n(s, "previousSibling", g);
        },
        siblings: function (s) {
          return Qr((s.parentNode || {}).firstChild, s);
        },
        children: function (s) {
          return Qr(s.firstChild);
        },
        contents: function (s) {
          return s.contentDocument != null && t(s.contentDocument)
            ? s.contentDocument
            : (we(s, "template") && (s = s.content || s),
              b.merge([], s.childNodes));
        },
      },
      function (s, p) {
        b.fn[s] = function (g, _) {
          var C = b.map(this, p, g);
          return (
            s.slice(-5) !== "Until" && (_ = g),
            _ && typeof _ == "string" && (C = b.filter(_, C)),
            this.length > 1 &&
              (Py[s] || b.uniqueSort(C), nr.test(s) && C.reverse()),
            this.pushStack(C)
          );
        };
      }
    );
    var An = /[^\x20\t\r\n\f]+/g;
    function Iy(s) {
      var p = {};
      return (
        b.each(s.match(An) || [], function (g, _) {
          p[_] = !0;
        }),
        p
      );
    }
    b.Callbacks = function (s) {
      s = typeof s == "string" ? Iy(s) : b.extend({}, s);
      var p,
        g,
        _,
        C,
        w = [],
        D = [],
        V = -1,
        N = function () {
          for (C = C || s.once, _ = p = !0; D.length; V = -1)
            for (g = D.shift(); ++V < w.length; )
              w[V].apply(g[0], g[1]) === !1 &&
                s.stopOnFalse &&
                ((V = w.length), (g = !1));
          s.memory || (g = !1), (p = !1), C && (g ? (w = []) : (w = ""));
        },
        z = {
          add: function () {
            return (
              w &&
                (g && !p && ((V = w.length - 1), D.push(g)),
                (function X(ie) {
                  b.each(ie, function (q, ae) {
                    I(ae)
                      ? (!s.unique || !z.has(ae)) && w.push(ae)
                      : ae && ae.length && re(ae) !== "string" && X(ae);
                  });
                })(arguments),
                g && !p && N()),
              this
            );
          },
          remove: function () {
            return (
              b.each(arguments, function (X, ie) {
                for (var q; (q = b.inArray(ie, w, q)) > -1; )
                  w.splice(q, 1), q <= V && V--;
              }),
              this
            );
          },
          has: function (X) {
            return X ? b.inArray(X, w) > -1 : w.length > 0;
          },
          empty: function () {
            return w && (w = []), this;
          },
          disable: function () {
            return (C = D = []), (w = g = ""), this;
          },
          disabled: function () {
            return !w;
          },
          lock: function () {
            return (C = D = []), !g && !p && (w = g = ""), this;
          },
          locked: function () {
            return !!C;
          },
          fireWith: function (X, ie) {
            return (
              C ||
                ((ie = ie || []),
                (ie = [X, ie.slice ? ie.slice() : ie]),
                D.push(ie),
                p || N()),
              this
            );
          },
          fire: function () {
            return z.fireWith(this, arguments), this;
          },
          fired: function () {
            return !!_;
          },
        };
      return z;
    };
    function Ro(s) {
      return s;
    }
    function El(s) {
      throw s;
    }
    function Ef(s, p, g, _) {
      var C;
      try {
        s && I((C = s.promise))
          ? C.call(s).done(p).fail(g)
          : s && I((C = s.then))
          ? C.call(s, p, g)
          : p.apply(void 0, [s].slice(_));
      } catch (w) {
        g.apply(void 0, [w]);
      }
    }
    b.extend({
      Deferred: function (s) {
        var p = [
            [
              "notify",
              "progress",
              b.Callbacks("memory"),
              b.Callbacks("memory"),
              2,
            ],
            [
              "resolve",
              "done",
              b.Callbacks("once memory"),
              b.Callbacks("once memory"),
              0,
              "resolved",
            ],
            [
              "reject",
              "fail",
              b.Callbacks("once memory"),
              b.Callbacks("once memory"),
              1,
              "rejected",
            ],
          ],
          g = "pending",
          _ = {
            state: function () {
              return g;
            },
            always: function () {
              return C.done(arguments).fail(arguments), this;
            },
            catch: function (w) {
              return _.then(null, w);
            },
            pipe: function () {
              var w = arguments;
              return b
                .Deferred(function (D) {
                  b.each(p, function (V, N) {
                    var z = I(w[N[4]]) && w[N[4]];
                    C[N[1]](function () {
                      var X = z && z.apply(this, arguments);
                      X && I(X.promise)
                        ? X.promise()
                            .progress(D.notify)
                            .done(D.resolve)
                            .fail(D.reject)
                        : D[N[0] + "With"](this, z ? [X] : arguments);
                    });
                  }),
                    (w = null);
                })
                .promise();
            },
            then: function (w, D, V) {
              var N = 0;
              function z(X, ie, q, ae) {
                return function () {
                  var ze = this,
                    at = arguments,
                    qe = function () {
                      var ai, Fn;
                      if (!(X < N)) {
                        if (((ai = q.apply(ze, at)), ai === ie.promise()))
                          throw new TypeError("Thenable self-resolution");
                        (Fn =
                          ai &&
                          (typeof ai == "object" || typeof ai == "function") &&
                          ai.then),
                          I(Fn)
                            ? ae
                              ? Fn.call(ai, z(N, ie, Ro, ae), z(N, ie, El, ae))
                              : (N++,
                                Fn.call(
                                  ai,
                                  z(N, ie, Ro, ae),
                                  z(N, ie, El, ae),
                                  z(N, ie, Ro, ie.notifyWith)
                                ))
                            : (q !== Ro && ((ze = void 0), (at = [ai])),
                              (ae || ie.resolveWith)(ze, at));
                      }
                    },
                    gi = ae
                      ? qe
                      : function () {
                          try {
                            qe();
                          } catch (ai) {
                            b.Deferred.exceptionHook &&
                              b.Deferred.exceptionHook(ai, gi.error),
                              X + 1 >= N &&
                                (q !== El && ((ze = void 0), (at = [ai])),
                                ie.rejectWith(ze, at));
                          }
                        };
                  X
                    ? gi()
                    : (b.Deferred.getErrorHook
                        ? (gi.error = b.Deferred.getErrorHook())
                        : b.Deferred.getStackHook &&
                          (gi.error = b.Deferred.getStackHook()),
                      n.setTimeout(gi));
                };
              }
              return b
                .Deferred(function (X) {
                  p[0][3].add(z(0, X, I(V) ? V : Ro, X.notifyWith)),
                    p[1][3].add(z(0, X, I(w) ? w : Ro)),
                    p[2][3].add(z(0, X, I(D) ? D : El));
                })
                .promise();
            },
            promise: function (w) {
              return w != null ? b.extend(w, _) : _;
            },
          },
          C = {};
        return (
          b.each(p, function (w, D) {
            var V = D[2],
              N = D[5];
            (_[D[1]] = V.add),
              N &&
                V.add(
                  function () {
                    g = N;
                  },
                  p[3 - w][2].disable,
                  p[3 - w][3].disable,
                  p[0][2].lock,
                  p[0][3].lock
                ),
              V.add(D[3].fire),
              (C[D[0]] = function () {
                return (
                  C[D[0] + "With"](this === C ? void 0 : this, arguments), this
                );
              }),
              (C[D[0] + "With"] = V.fireWith);
          }),
          _.promise(C),
          s && s.call(C, C),
          C
        );
      },
      when: function (s) {
        var p = arguments.length,
          g = p,
          _ = Array(g),
          C = r.call(arguments),
          w = b.Deferred(),
          D = function (V) {
            return function (N) {
              (_[V] = this),
                (C[V] = arguments.length > 1 ? r.call(arguments) : N),
                --p || w.resolveWith(_, C);
            };
          };
        if (
          p <= 1 &&
          (Ef(s, w.done(D(g)).resolve, w.reject, !p),
          w.state() === "pending" || I(C[g] && C[g].then))
        )
          return w.then();
        for (; g--; ) Ef(C[g], D(g), w.reject);
        return w.promise();
      },
    });
    var Ay = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    (b.Deferred.exceptionHook = function (s, p) {
      n.console &&
        n.console.warn &&
        s &&
        Ay.test(s.name) &&
        n.console.warn("jQuery.Deferred exception: " + s.message, s.stack, p);
    }),
      (b.readyException = function (s) {
        n.setTimeout(function () {
          throw s;
        });
      });
    var vu = b.Deferred();
    (b.fn.ready = function (s) {
      return (
        vu.then(s).catch(function (p) {
          b.readyException(p);
        }),
        this
      );
    }),
      b.extend({
        isReady: !1,
        readyWait: 1,
        ready: function (s) {
          (s === !0 ? --b.readyWait : b.isReady) ||
            ((b.isReady = !0),
            !(s !== !0 && --b.readyWait > 0) && vu.resolveWith(E, [b]));
        },
      }),
      (b.ready.then = vu.then);
    function Ol() {
      E.removeEventListener("DOMContentLoaded", Ol),
        n.removeEventListener("load", Ol),
        b.ready();
    }
    E.readyState === "complete" ||
    (E.readyState !== "loading" && !E.documentElement.doScroll)
      ? n.setTimeout(b.ready)
      : (E.addEventListener("DOMContentLoaded", Ol),
        n.addEventListener("load", Ol));
    var rr = function (s, p, g, _, C, w, D) {
        var V = 0,
          N = s.length,
          z = g == null;
        if (re(g) === "object") {
          C = !0;
          for (V in g) rr(s, p, V, g[V], !0, w, D);
        } else if (
          _ !== void 0 &&
          ((C = !0),
          I(_) || (D = !0),
          z &&
            (D
              ? (p.call(s, _), (p = null))
              : ((z = p),
                (p = function (X, ie, q) {
                  return z.call(b(X), q);
                }))),
          p)
        )
          for (; V < N; V++) p(s[V], g, D ? _ : _.call(s[V], V, p(s[V], g)));
        return C ? s : z ? p.call(s) : N ? p(s[0], g) : w;
      },
      Ry = /^-ms-/,
      Fy = /-([a-z])/g;
    function Ny(s, p) {
      return p.toUpperCase();
    }
    function Rn(s) {
      return s.replace(Ry, "ms-").replace(Fy, Ny);
    }
    var Na = function (s) {
      return s.nodeType === 1 || s.nodeType === 9 || !+s.nodeType;
    };
    function La() {
      this.expando = b.expando + La.uid++;
    }
    (La.uid = 1),
      (La.prototype = {
        cache: function (s) {
          var p = s[this.expando];
          return (
            p ||
              ((p = {}),
              Na(s) &&
                (s.nodeType
                  ? (s[this.expando] = p)
                  : Object.defineProperty(s, this.expando, {
                      value: p,
                      configurable: !0,
                    }))),
            p
          );
        },
        set: function (s, p, g) {
          var _,
            C = this.cache(s);
          if (typeof p == "string") C[Rn(p)] = g;
          else for (_ in p) C[Rn(_)] = p[_];
          return C;
        },
        get: function (s, p) {
          return p === void 0
            ? this.cache(s)
            : s[this.expando] && s[this.expando][Rn(p)];
        },
        access: function (s, p, g) {
          return p === void 0 || (p && typeof p == "string" && g === void 0)
            ? this.get(s, p)
            : (this.set(s, p, g), g !== void 0 ? g : p);
        },
        remove: function (s, p) {
          var g,
            _ = s[this.expando];
          if (_ !== void 0) {
            if (p !== void 0)
              for (
                Array.isArray(p)
                  ? (p = p.map(Rn))
                  : ((p = Rn(p)), (p = (p in _) ? [p] : p.match(An) || [])),
                  g = p.length;
                g--;

              )
                delete _[p[g]];
            (p === void 0 || b.isEmptyObject(_)) &&
              (s.nodeType
                ? (s[this.expando] = void 0)
                : delete s[this.expando]);
          }
        },
        hasData: function (s) {
          var p = s[this.expando];
          return p !== void 0 && !b.isEmptyObject(p);
        },
      });
    var ke = new La(),
      ki = new La(),
      Ly = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      Vy = /[A-Z]/g;
    function By(s) {
      return s === "true"
        ? !0
        : s === "false"
        ? !1
        : s === "null"
        ? null
        : s === +s + ""
        ? +s
        : Ly.test(s)
        ? JSON.parse(s)
        : s;
    }
    function Of(s, p, g) {
      var _;
      if (g === void 0 && s.nodeType === 1)
        if (
          ((_ = "data-" + p.replace(Vy, "-$&").toLowerCase()),
          (g = s.getAttribute(_)),
          typeof g == "string")
        ) {
          try {
            g = By(g);
          } catch {}
          ki.set(s, p, g);
        } else g = void 0;
      return g;
    }
    b.extend({
      hasData: function (s) {
        return ki.hasData(s) || ke.hasData(s);
      },
      data: function (s, p, g) {
        return ki.access(s, p, g);
      },
      removeData: function (s, p) {
        ki.remove(s, p);
      },
      _data: function (s, p, g) {
        return ke.access(s, p, g);
      },
      _removeData: function (s, p) {
        ke.remove(s, p);
      },
    }),
      b.fn.extend({
        data: function (s, p) {
          var g,
            _,
            C,
            w = this[0],
            D = w && w.attributes;
          if (s === void 0) {
            if (
              this.length &&
              ((C = ki.get(w)), w.nodeType === 1 && !ke.get(w, "hasDataAttrs"))
            ) {
              for (g = D.length; g--; )
                D[g] &&
                  ((_ = D[g].name),
                  _.indexOf("data-") === 0 &&
                    ((_ = Rn(_.slice(5))), Of(w, _, C[_])));
              ke.set(w, "hasDataAttrs", !0);
            }
            return C;
          }
          return typeof s == "object"
            ? this.each(function () {
                ki.set(this, s);
              })
            : rr(
                this,
                function (V) {
                  var N;
                  if (w && V === void 0)
                    return (
                      (N = ki.get(w, s)),
                      N !== void 0 || ((N = Of(w, s)), N !== void 0)
                        ? N
                        : void 0
                    );
                  this.each(function () {
                    ki.set(this, s, V);
                  });
                },
                null,
                p,
                arguments.length > 1,
                null,
                !0
              );
        },
        removeData: function (s) {
          return this.each(function () {
            ki.remove(this, s);
          });
        },
      }),
      b.extend({
        queue: function (s, p, g) {
          var _;
          if (s)
            return (
              (p = (p || "fx") + "queue"),
              (_ = ke.get(s, p)),
              g &&
                (!_ || Array.isArray(g)
                  ? (_ = ke.access(s, p, b.makeArray(g)))
                  : _.push(g)),
              _ || []
            );
        },
        dequeue: function (s, p) {
          p = p || "fx";
          var g = b.queue(s, p),
            _ = g.length,
            C = g.shift(),
            w = b._queueHooks(s, p),
            D = function () {
              b.dequeue(s, p);
            };
          C === "inprogress" && ((C = g.shift()), _--),
            C &&
              (p === "fx" && g.unshift("inprogress"),
              delete w.stop,
              C.call(s, D, w)),
            !_ && w && w.empty.fire();
        },
        _queueHooks: function (s, p) {
          var g = p + "queueHooks";
          return (
            ke.get(s, g) ||
            ke.access(s, g, {
              empty: b.Callbacks("once memory").add(function () {
                ke.remove(s, [p + "queue", g]);
              }),
            })
          );
        },
      }),
      b.fn.extend({
        queue: function (s, p) {
          var g = 2;
          return (
            typeof s != "string" && ((p = s), (s = "fx"), g--),
            arguments.length < g
              ? b.queue(this[0], s)
              : p === void 0
              ? this
              : this.each(function () {
                  var _ = b.queue(this, s, p);
                  b._queueHooks(this, s),
                    s === "fx" && _[0] !== "inprogress" && b.dequeue(this, s);
                })
          );
        },
        dequeue: function (s) {
          return this.each(function () {
            b.dequeue(this, s);
          });
        },
        clearQueue: function (s) {
          return this.queue(s || "fx", []);
        },
        promise: function (s, p) {
          var g,
            _ = 1,
            C = b.Deferred(),
            w = this,
            D = this.length,
            V = function () {
              --_ || C.resolveWith(w, [w]);
            };
          for (
            typeof s != "string" && ((p = s), (s = void 0)), s = s || "fx";
            D--;

          )
            (g = ke.get(w[D], s + "queueHooks")),
              g && g.empty && (_++, g.empty.add(V));
          return V(), C.promise(p);
        },
      });
    var kf = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
      Va = new RegExp("^(?:([+-])=|)(" + kf + ")([a-z%]*)$", "i"),
      or = ["Top", "Right", "Bottom", "Left"],
      Jr = E.documentElement,
      Fo = function (s) {
        return b.contains(s.ownerDocument, s);
      },
      jy = { composed: !0 };
    Jr.getRootNode &&
      (Fo = function (s) {
        return (
          b.contains(s.ownerDocument, s) ||
          s.getRootNode(jy) === s.ownerDocument
        );
      });
    var kl = function (s, p) {
      return (
        (s = p || s),
        s.style.display === "none" ||
          (s.style.display === "" && Fo(s) && b.css(s, "display") === "none")
      );
    };
    function Pf(s, p, g, _) {
      var C,
        w,
        D = 20,
        V = _
          ? function () {
              return _.cur();
            }
          : function () {
              return b.css(s, p, "");
            },
        N = V(),
        z = (g && g[3]) || (b.cssNumber[p] ? "" : "px"),
        X =
          s.nodeType &&
          (b.cssNumber[p] || (z !== "px" && +N)) &&
          Va.exec(b.css(s, p));
      if (X && X[3] !== z) {
        for (N = N / 2, z = z || X[3], X = +N || 1; D--; )
          b.style(s, p, X + z),
            (1 - w) * (1 - (w = V() / N || 0.5)) <= 0 && (D = 0),
            (X = X / w);
        (X = X * 2), b.style(s, p, X + z), (g = g || []);
      }
      return (
        g &&
          ((X = +X || +N || 0),
          (C = g[1] ? X + (g[1] + 1) * g[2] : +g[2]),
          _ && ((_.unit = z), (_.start = X), (_.end = C))),
        C
      );
    }
    var If = {};
    function Hy(s) {
      var p,
        g = s.ownerDocument,
        _ = s.nodeName,
        C = If[_];
      return (
        C ||
        ((p = g.body.appendChild(g.createElement(_))),
        (C = b.css(p, "display")),
        p.parentNode.removeChild(p),
        C === "none" && (C = "block"),
        (If[_] = C),
        C)
      );
    }
    function No(s, p) {
      for (var g, _, C = [], w = 0, D = s.length; w < D; w++)
        (_ = s[w]),
          _.style &&
            ((g = _.style.display),
            p
              ? (g === "none" &&
                  ((C[w] = ke.get(_, "display") || null),
                  C[w] || (_.style.display = "")),
                _.style.display === "" && kl(_) && (C[w] = Hy(_)))
              : g !== "none" && ((C[w] = "none"), ke.set(_, "display", g)));
      for (w = 0; w < D; w++) C[w] != null && (s[w].style.display = C[w]);
      return s;
    }
    b.fn.extend({
      show: function () {
        return No(this, !0);
      },
      hide: function () {
        return No(this);
      },
      toggle: function (s) {
        return typeof s == "boolean"
          ? s
            ? this.show()
            : this.hide()
          : this.each(function () {
              kl(this) ? b(this).show() : b(this).hide();
            });
      },
    });
    var Ba = /^(?:checkbox|radio)$/i,
      Af = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
      Rf = /^$|^module$|\/(?:java|ecma)script/i;
    (function () {
      var s = E.createDocumentFragment(),
        p = s.appendChild(E.createElement("div")),
        g = E.createElement("input");
      g.setAttribute("type", "radio"),
        g.setAttribute("checked", "checked"),
        g.setAttribute("name", "t"),
        p.appendChild(g),
        (M.checkClone = p.cloneNode(!0).cloneNode(!0).lastChild.checked),
        (p.innerHTML = "<textarea>x</textarea>"),
        (M.noCloneChecked = !!p.cloneNode(!0).lastChild.defaultValue),
        (p.innerHTML = "<option></option>"),
        (M.option = !!p.lastChild);
    })();
    var nn = {
      thead: [1, "<table>", "</table>"],
      col: [2, "<table><colgroup>", "</colgroup></table>"],
      tr: [2, "<table><tbody>", "</tbody></table>"],
      td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
      _default: [0, "", ""],
    };
    (nn.tbody = nn.tfoot = nn.colgroup = nn.caption = nn.thead),
      (nn.th = nn.td),
      M.option ||
        (nn.optgroup = nn.option =
          [1, "<select multiple='multiple'>", "</select>"]);
    function Pi(s, p) {
      var g;
      return (
        typeof s.getElementsByTagName < "u"
          ? (g = s.getElementsByTagName(p || "*"))
          : typeof s.querySelectorAll < "u"
          ? (g = s.querySelectorAll(p || "*"))
          : (g = []),
        p === void 0 || (p && we(s, p)) ? b.merge([s], g) : g
      );
    }
    function yu(s, p) {
      for (var g = 0, _ = s.length; g < _; g++)
        ke.set(s[g], "globalEval", !p || ke.get(p[g], "globalEval"));
    }
    var Uy = /<|&#?\w+;/;
    function Ff(s, p, g, _, C) {
      for (
        var w,
          D,
          V,
          N,
          z,
          X,
          ie = p.createDocumentFragment(),
          q = [],
          ae = 0,
          ze = s.length;
        ae < ze;
        ae++
      )
        if (((w = s[ae]), w || w === 0))
          if (re(w) === "object") b.merge(q, w.nodeType ? [w] : w);
          else if (!Uy.test(w)) q.push(p.createTextNode(w));
          else {
            for (
              D = D || ie.appendChild(p.createElement("div")),
                V = (Af.exec(w) || ["", ""])[1].toLowerCase(),
                N = nn[V] || nn._default,
                D.innerHTML = N[1] + b.htmlPrefilter(w) + N[2],
                X = N[0];
              X--;

            )
              D = D.lastChild;
            b.merge(q, D.childNodes), (D = ie.firstChild), (D.textContent = "");
          }
      for (ie.textContent = "", ae = 0; (w = q[ae++]); ) {
        if (_ && b.inArray(w, _) > -1) {
          C && C.push(w);
          continue;
        }
        if (((z = Fo(w)), (D = Pi(ie.appendChild(w), "script")), z && yu(D), g))
          for (X = 0; (w = D[X++]); ) Rf.test(w.type || "") && g.push(w);
      }
      return ie;
    }
    var Nf = /^([^.]*)(?:\.(.+)|)/;
    function Lo() {
      return !0;
    }
    function Vo() {
      return !1;
    }
    function xu(s, p, g, _, C, w) {
      var D, V;
      if (typeof p == "object") {
        typeof g != "string" && ((_ = _ || g), (g = void 0));
        for (V in p) xu(s, V, g, _, p[V], w);
        return s;
      }
      if (
        (_ == null && C == null
          ? ((C = g), (_ = g = void 0))
          : C == null &&
            (typeof g == "string"
              ? ((C = _), (_ = void 0))
              : ((C = _), (_ = g), (g = void 0))),
        C === !1)
      )
        C = Vo;
      else if (!C) return s;
      return (
        w === 1 &&
          ((D = C),
          (C = function (N) {
            return b().off(N), D.apply(this, arguments);
          }),
          (C.guid = D.guid || (D.guid = b.guid++))),
        s.each(function () {
          b.event.add(this, p, C, _, g);
        })
      );
    }
    b.event = {
      global: {},
      add: function (s, p, g, _, C) {
        var w,
          D,
          V,
          N,
          z,
          X,
          ie,
          q,
          ae,
          ze,
          at,
          qe = ke.get(s);
        if (Na(s))
          for (
            g.handler && ((w = g), (g = w.handler), (C = w.selector)),
              C && b.find.matchesSelector(Jr, C),
              g.guid || (g.guid = b.guid++),
              (N = qe.events) || (N = qe.events = Object.create(null)),
              (D = qe.handle) ||
                (D = qe.handle =
                  function (gi) {
                    return typeof b < "u" && b.event.triggered !== gi.type
                      ? b.event.dispatch.apply(s, arguments)
                      : void 0;
                  }),
              p = (p || "").match(An) || [""],
              z = p.length;
            z--;

          )
            (V = Nf.exec(p[z]) || []),
              (ae = at = V[1]),
              (ze = (V[2] || "").split(".").sort()),
              ae &&
                ((ie = b.event.special[ae] || {}),
                (ae = (C ? ie.delegateType : ie.bindType) || ae),
                (ie = b.event.special[ae] || {}),
                (X = b.extend(
                  {
                    type: ae,
                    origType: at,
                    data: _,
                    handler: g,
                    guid: g.guid,
                    selector: C,
                    needsContext: C && b.expr.match.needsContext.test(C),
                    namespace: ze.join("."),
                  },
                  w
                )),
                (q = N[ae]) ||
                  ((q = N[ae] = []),
                  (q.delegateCount = 0),
                  (!ie.setup || ie.setup.call(s, _, ze, D) === !1) &&
                    s.addEventListener &&
                    s.addEventListener(ae, D)),
                ie.add &&
                  (ie.add.call(s, X),
                  X.handler.guid || (X.handler.guid = g.guid)),
                C ? q.splice(q.delegateCount++, 0, X) : q.push(X),
                (b.event.global[ae] = !0));
      },
      remove: function (s, p, g, _, C) {
        var w,
          D,
          V,
          N,
          z,
          X,
          ie,
          q,
          ae,
          ze,
          at,
          qe = ke.hasData(s) && ke.get(s);
        if (!(!qe || !(N = qe.events))) {
          for (p = (p || "").match(An) || [""], z = p.length; z--; ) {
            if (
              ((V = Nf.exec(p[z]) || []),
              (ae = at = V[1]),
              (ze = (V[2] || "").split(".").sort()),
              !ae)
            ) {
              for (ae in N) b.event.remove(s, ae + p[z], g, _, !0);
              continue;
            }
            for (
              ie = b.event.special[ae] || {},
                ae = (_ ? ie.delegateType : ie.bindType) || ae,
                q = N[ae] || [],
                V =
                  V[2] &&
                  new RegExp("(^|\\.)" + ze.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                D = w = q.length;
              w--;

            )
              (X = q[w]),
                (C || at === X.origType) &&
                  (!g || g.guid === X.guid) &&
                  (!V || V.test(X.namespace)) &&
                  (!_ || _ === X.selector || (_ === "**" && X.selector)) &&
                  (q.splice(w, 1),
                  X.selector && q.delegateCount--,
                  ie.remove && ie.remove.call(s, X));
            D &&
              !q.length &&
              ((!ie.teardown || ie.teardown.call(s, ze, qe.handle) === !1) &&
                b.removeEvent(s, ae, qe.handle),
              delete N[ae]);
          }
          b.isEmptyObject(N) && ke.remove(s, "handle events");
        }
      },
      dispatch: function (s) {
        var p,
          g,
          _,
          C,
          w,
          D,
          V = new Array(arguments.length),
          N = b.event.fix(s),
          z = (ke.get(this, "events") || Object.create(null))[N.type] || [],
          X = b.event.special[N.type] || {};
        for (V[0] = N, p = 1; p < arguments.length; p++) V[p] = arguments[p];
        if (
          ((N.delegateTarget = this),
          !(X.preDispatch && X.preDispatch.call(this, N) === !1))
        ) {
          for (
            D = b.event.handlers.call(this, N, z), p = 0;
            (C = D[p++]) && !N.isPropagationStopped();

          )
            for (
              N.currentTarget = C.elem, g = 0;
              (w = C.handlers[g++]) && !N.isImmediatePropagationStopped();

            )
              (!N.rnamespace ||
                w.namespace === !1 ||
                N.rnamespace.test(w.namespace)) &&
                ((N.handleObj = w),
                (N.data = w.data),
                (_ = (
                  (b.event.special[w.origType] || {}).handle || w.handler
                ).apply(C.elem, V)),
                _ !== void 0 &&
                  (N.result = _) === !1 &&
                  (N.preventDefault(), N.stopPropagation()));
          return X.postDispatch && X.postDispatch.call(this, N), N.result;
        }
      },
      handlers: function (s, p) {
        var g,
          _,
          C,
          w,
          D,
          V = [],
          N = p.delegateCount,
          z = s.target;
        if (N && z.nodeType && !(s.type === "click" && s.button >= 1)) {
          for (; z !== this; z = z.parentNode || this)
            if (
              z.nodeType === 1 &&
              !(s.type === "click" && z.disabled === !0)
            ) {
              for (w = [], D = {}, g = 0; g < N; g++)
                (_ = p[g]),
                  (C = _.selector + " "),
                  D[C] === void 0 &&
                    (D[C] = _.needsContext
                      ? b(C, this).index(z) > -1
                      : b.find(C, this, null, [z]).length),
                  D[C] && w.push(_);
              w.length && V.push({ elem: z, handlers: w });
            }
        }
        return (
          (z = this),
          N < p.length && V.push({ elem: z, handlers: p.slice(N) }),
          V
        );
      },
      addProp: function (s, p) {
        Object.defineProperty(b.Event.prototype, s, {
          enumerable: !0,
          configurable: !0,
          get: I(p)
            ? function () {
                if (this.originalEvent) return p(this.originalEvent);
              }
            : function () {
                if (this.originalEvent) return this.originalEvent[s];
              },
          set: function (g) {
            Object.defineProperty(this, s, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: g,
            });
          },
        });
      },
      fix: function (s) {
        return s[b.expando] ? s : new b.Event(s);
      },
      special: {
        load: { noBubble: !0 },
        click: {
          setup: function (s) {
            var p = this || s;
            return (
              Ba.test(p.type) &&
                p.click &&
                we(p, "input") &&
                Pl(p, "click", !0),
              !1
            );
          },
          trigger: function (s) {
            var p = this || s;
            return (
              Ba.test(p.type) && p.click && we(p, "input") && Pl(p, "click"), !0
            );
          },
          _default: function (s) {
            var p = s.target;
            return (
              (Ba.test(p.type) &&
                p.click &&
                we(p, "input") &&
                ke.get(p, "click")) ||
              we(p, "a")
            );
          },
        },
        beforeunload: {
          postDispatch: function (s) {
            s.result !== void 0 &&
              s.originalEvent &&
              (s.originalEvent.returnValue = s.result);
          },
        },
      },
    };
    function Pl(s, p, g) {
      if (!g) {
        ke.get(s, p) === void 0 && b.event.add(s, p, Lo);
        return;
      }
      ke.set(s, p, !1),
        b.event.add(s, p, {
          namespace: !1,
          handler: function (_) {
            var C,
              w = ke.get(this, p);
            if (_.isTrigger & 1 && this[p]) {
              if (w)
                (b.event.special[p] || {}).delegateType && _.stopPropagation();
              else if (
                ((w = r.call(arguments)),
                ke.set(this, p, w),
                this[p](),
                (C = ke.get(this, p)),
                ke.set(this, p, !1),
                w !== C)
              )
                return _.stopImmediatePropagation(), _.preventDefault(), C;
            } else
              w &&
                (ke.set(this, p, b.event.trigger(w[0], w.slice(1), this)),
                _.stopPropagation(),
                (_.isImmediatePropagationStopped = Lo));
          },
        });
    }
    (b.removeEvent = function (s, p, g) {
      s.removeEventListener && s.removeEventListener(p, g);
    }),
      (b.Event = function (s, p) {
        if (!(this instanceof b.Event)) return new b.Event(s, p);
        s && s.type
          ? ((this.originalEvent = s),
            (this.type = s.type),
            (this.isDefaultPrevented =
              s.defaultPrevented ||
              (s.defaultPrevented === void 0 && s.returnValue === !1)
                ? Lo
                : Vo),
            (this.target =
              s.target && s.target.nodeType === 3
                ? s.target.parentNode
                : s.target),
            (this.currentTarget = s.currentTarget),
            (this.relatedTarget = s.relatedTarget))
          : (this.type = s),
          p && b.extend(this, p),
          (this.timeStamp = (s && s.timeStamp) || Date.now()),
          (this[b.expando] = !0);
      }),
      (b.Event.prototype = {
        constructor: b.Event,
        isDefaultPrevented: Vo,
        isPropagationStopped: Vo,
        isImmediatePropagationStopped: Vo,
        isSimulated: !1,
        preventDefault: function () {
          var s = this.originalEvent;
          (this.isDefaultPrevented = Lo),
            s && !this.isSimulated && s.preventDefault();
        },
        stopPropagation: function () {
          var s = this.originalEvent;
          (this.isPropagationStopped = Lo),
            s && !this.isSimulated && s.stopPropagation();
        },
        stopImmediatePropagation: function () {
          var s = this.originalEvent;
          (this.isImmediatePropagationStopped = Lo),
            s && !this.isSimulated && s.stopImmediatePropagation(),
            this.stopPropagation();
        },
      }),
      b.each(
        {
          altKey: !0,
          bubbles: !0,
          cancelable: !0,
          changedTouches: !0,
          ctrlKey: !0,
          detail: !0,
          eventPhase: !0,
          metaKey: !0,
          pageX: !0,
          pageY: !0,
          shiftKey: !0,
          view: !0,
          char: !0,
          code: !0,
          charCode: !0,
          key: !0,
          keyCode: !0,
          button: !0,
          buttons: !0,
          clientX: !0,
          clientY: !0,
          offsetX: !0,
          offsetY: !0,
          pointerId: !0,
          pointerType: !0,
          screenX: !0,
          screenY: !0,
          targetTouches: !0,
          toElement: !0,
          touches: !0,
          which: !0,
        },
        b.event.addProp
      ),
      b.each({ focus: "focusin", blur: "focusout" }, function (s, p) {
        function g(_) {
          if (E.documentMode) {
            var C = ke.get(this, "handle"),
              w = b.event.fix(_);
            (w.type = _.type === "focusin" ? "focus" : "blur"),
              (w.isSimulated = !0),
              C(_),
              w.target === w.currentTarget && C(w);
          } else b.event.simulate(p, _.target, b.event.fix(_));
        }
        (b.event.special[s] = {
          setup: function () {
            var _;
            if ((Pl(this, s, !0), E.documentMode))
              (_ = ke.get(this, p)),
                _ || this.addEventListener(p, g),
                ke.set(this, p, (_ || 0) + 1);
            else return !1;
          },
          trigger: function () {
            return Pl(this, s), !0;
          },
          teardown: function () {
            var _;
            if (E.documentMode)
              (_ = ke.get(this, p) - 1),
                _
                  ? ke.set(this, p, _)
                  : (this.removeEventListener(p, g), ke.remove(this, p));
            else return !1;
          },
          _default: function (_) {
            return ke.get(_.target, s);
          },
          delegateType: p,
        }),
          (b.event.special[p] = {
            setup: function () {
              var _ = this.ownerDocument || this.document || this,
                C = E.documentMode ? this : _,
                w = ke.get(C, p);
              w ||
                (E.documentMode
                  ? this.addEventListener(p, g)
                  : _.addEventListener(s, g, !0)),
                ke.set(C, p, (w || 0) + 1);
            },
            teardown: function () {
              var _ = this.ownerDocument || this.document || this,
                C = E.documentMode ? this : _,
                w = ke.get(C, p) - 1;
              w
                ? ke.set(C, p, w)
                : (E.documentMode
                    ? this.removeEventListener(p, g)
                    : _.removeEventListener(s, g, !0),
                  ke.remove(C, p));
            },
          });
      }),
      b.each(
        {
          mouseenter: "mouseover",
          mouseleave: "mouseout",
          pointerenter: "pointerover",
          pointerleave: "pointerout",
        },
        function (s, p) {
          b.event.special[s] = {
            delegateType: p,
            bindType: p,
            handle: function (g) {
              var _,
                C = this,
                w = g.relatedTarget,
                D = g.handleObj;
              return (
                (!w || (w !== C && !b.contains(C, w))) &&
                  ((g.type = D.origType),
                  (_ = D.handler.apply(this, arguments)),
                  (g.type = p)),
                _
              );
            },
          };
        }
      ),
      b.fn.extend({
        on: function (s, p, g, _) {
          return xu(this, s, p, g, _);
        },
        one: function (s, p, g, _) {
          return xu(this, s, p, g, _, 1);
        },
        off: function (s, p, g) {
          var _, C;
          if (s && s.preventDefault && s.handleObj)
            return (
              (_ = s.handleObj),
              b(s.delegateTarget).off(
                _.namespace ? _.origType + "." + _.namespace : _.origType,
                _.selector,
                _.handler
              ),
              this
            );
          if (typeof s == "object") {
            for (C in s) this.off(C, p, s[C]);
            return this;
          }
          return (
            (p === !1 || typeof p == "function") && ((g = p), (p = void 0)),
            g === !1 && (g = Vo),
            this.each(function () {
              b.event.remove(this, s, g, p);
            })
          );
        },
      });
    var zy = /<script|<style|<link/i,
      $y = /checked\s*(?:[^=]|=\s*.checked.)/i,
      Wy = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function Lf(s, p) {
      return (
        (we(s, "table") &&
          we(p.nodeType !== 11 ? p : p.firstChild, "tr") &&
          b(s).children("tbody")[0]) ||
        s
      );
    }
    function Gy(s) {
      return (s.type = (s.getAttribute("type") !== null) + "/" + s.type), s;
    }
    function Yy(s) {
      return (
        (s.type || "").slice(0, 5) === "true/"
          ? (s.type = s.type.slice(5))
          : s.removeAttribute("type"),
        s
      );
    }
    function Vf(s, p) {
      var g, _, C, w, D, V, N;
      if (p.nodeType === 1) {
        if (ke.hasData(s) && ((w = ke.get(s)), (N = w.events), N)) {
          ke.remove(p, "handle events");
          for (C in N)
            for (g = 0, _ = N[C].length; g < _; g++) b.event.add(p, C, N[C][g]);
        }
        ki.hasData(s) &&
          ((D = ki.access(s)), (V = b.extend({}, D)), ki.set(p, V));
      }
    }
    function qy(s, p) {
      var g = p.nodeName.toLowerCase();
      g === "input" && Ba.test(s.type)
        ? (p.checked = s.checked)
        : (g === "input" || g === "textarea") &&
          (p.defaultValue = s.defaultValue);
    }
    function Bo(s, p, g, _) {
      p = o(p);
      var C,
        w,
        D,
        V,
        N,
        z,
        X = 0,
        ie = s.length,
        q = ie - 1,
        ae = p[0],
        ze = I(ae);
      if (
        ze ||
        (ie > 1 && typeof ae == "string" && !M.checkClone && $y.test(ae))
      )
        return s.each(function (at) {
          var qe = s.eq(at);
          ze && (p[0] = ae.call(this, at, qe.html())), Bo(qe, p, g, _);
        });
      if (
        ie &&
        ((C = Ff(p, s[0].ownerDocument, !1, s, _)),
        (w = C.firstChild),
        C.childNodes.length === 1 && (C = w),
        w || _)
      ) {
        for (D = b.map(Pi(C, "script"), Gy), V = D.length; X < ie; X++)
          (N = C),
            X !== q &&
              ((N = b.clone(N, !0, !0)), V && b.merge(D, Pi(N, "script"))),
            g.call(s[X], N, X);
        if (V)
          for (
            z = D[D.length - 1].ownerDocument, b.map(D, Yy), X = 0;
            X < V;
            X++
          )
            (N = D[X]),
              Rf.test(N.type || "") &&
                !ke.access(N, "globalEval") &&
                b.contains(z, N) &&
                (N.src && (N.type || "").toLowerCase() !== "module"
                  ? b._evalUrl &&
                    !N.noModule &&
                    b._evalUrl(
                      N.src,
                      { nonce: N.nonce || N.getAttribute("nonce") },
                      z
                    )
                  : ee(N.textContent.replace(Wy, ""), N, z));
      }
      return s;
    }
    function Bf(s, p, g) {
      for (var _, C = p ? b.filter(p, s) : s, w = 0; (_ = C[w]) != null; w++)
        !g && _.nodeType === 1 && b.cleanData(Pi(_)),
          _.parentNode &&
            (g && Fo(_) && yu(Pi(_, "script")), _.parentNode.removeChild(_));
      return s;
    }
    b.extend({
      htmlPrefilter: function (s) {
        return s;
      },
      clone: function (s, p, g) {
        var _,
          C,
          w,
          D,
          V = s.cloneNode(!0),
          N = Fo(s);
        if (
          !M.noCloneChecked &&
          (s.nodeType === 1 || s.nodeType === 11) &&
          !b.isXMLDoc(s)
        )
          for (D = Pi(V), w = Pi(s), _ = 0, C = w.length; _ < C; _++)
            qy(w[_], D[_]);
        if (p)
          if (g)
            for (
              w = w || Pi(s), D = D || Pi(V), _ = 0, C = w.length;
              _ < C;
              _++
            )
              Vf(w[_], D[_]);
          else Vf(s, V);
        return (
          (D = Pi(V, "script")), D.length > 0 && yu(D, !N && Pi(s, "script")), V
        );
      },
      cleanData: function (s) {
        for (
          var p, g, _, C = b.event.special, w = 0;
          (g = s[w]) !== void 0;
          w++
        )
          if (Na(g)) {
            if ((p = g[ke.expando])) {
              if (p.events)
                for (_ in p.events)
                  C[_] ? b.event.remove(g, _) : b.removeEvent(g, _, p.handle);
              g[ke.expando] = void 0;
            }
            g[ki.expando] && (g[ki.expando] = void 0);
          }
      },
    }),
      b.fn.extend({
        detach: function (s) {
          return Bf(this, s, !0);
        },
        remove: function (s) {
          return Bf(this, s);
        },
        text: function (s) {
          return rr(
            this,
            function (p) {
              return p === void 0
                ? b.text(this)
                : this.empty().each(function () {
                    (this.nodeType === 1 ||
                      this.nodeType === 11 ||
                      this.nodeType === 9) &&
                      (this.textContent = p);
                  });
            },
            null,
            s,
            arguments.length
          );
        },
        append: function () {
          return Bo(this, arguments, function (s) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var p = Lf(this, s);
              p.appendChild(s);
            }
          });
        },
        prepend: function () {
          return Bo(this, arguments, function (s) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var p = Lf(this, s);
              p.insertBefore(s, p.firstChild);
            }
          });
        },
        before: function () {
          return Bo(this, arguments, function (s) {
            this.parentNode && this.parentNode.insertBefore(s, this);
          });
        },
        after: function () {
          return Bo(this, arguments, function (s) {
            this.parentNode &&
              this.parentNode.insertBefore(s, this.nextSibling);
          });
        },
        empty: function () {
          for (var s, p = 0; (s = this[p]) != null; p++)
            s.nodeType === 1 && (b.cleanData(Pi(s, !1)), (s.textContent = ""));
          return this;
        },
        clone: function (s, p) {
          return (
            (s = s ?? !1),
            (p = p ?? s),
            this.map(function () {
              return b.clone(this, s, p);
            })
          );
        },
        html: function (s) {
          return rr(
            this,
            function (p) {
              var g = this[0] || {},
                _ = 0,
                C = this.length;
              if (p === void 0 && g.nodeType === 1) return g.innerHTML;
              if (
                typeof p == "string" &&
                !zy.test(p) &&
                !nn[(Af.exec(p) || ["", ""])[1].toLowerCase()]
              ) {
                p = b.htmlPrefilter(p);
                try {
                  for (; _ < C; _++)
                    (g = this[_] || {}),
                      g.nodeType === 1 &&
                        (b.cleanData(Pi(g, !1)), (g.innerHTML = p));
                  g = 0;
                } catch {}
              }
              g && this.empty().append(p);
            },
            null,
            s,
            arguments.length
          );
        },
        replaceWith: function () {
          var s = [];
          return Bo(
            this,
            arguments,
            function (p) {
              var g = this.parentNode;
              b.inArray(this, s) < 0 &&
                (b.cleanData(Pi(this)), g && g.replaceChild(p, this));
            },
            s
          );
        },
      }),
      b.each(
        {
          appendTo: "append",
          prependTo: "prepend",
          insertBefore: "before",
          insertAfter: "after",
          replaceAll: "replaceWith",
        },
        function (s, p) {
          b.fn[s] = function (g) {
            for (var _, C = [], w = b(g), D = w.length - 1, V = 0; V <= D; V++)
              (_ = V === D ? this : this.clone(!0)),
                b(w[V])[p](_),
                a.apply(C, _.get());
            return this.pushStack(C);
          };
        }
      );
    var Cu = new RegExp("^(" + kf + ")(?!px)[a-z%]+$", "i"),
      wu = /^--/,
      Il = function (s) {
        var p = s.ownerDocument.defaultView;
        return (!p || !p.opener) && (p = n), p.getComputedStyle(s);
      },
      jf = function (s, p, g) {
        var _,
          C,
          w = {};
        for (C in p) (w[C] = s.style[C]), (s.style[C] = p[C]);
        _ = g.call(s);
        for (C in p) s.style[C] = w[C];
        return _;
      },
      Ky = new RegExp(or.join("|"), "i");
    (function () {
      function s() {
        if (z) {
          (N.style.cssText =
            "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
            (z.style.cssText =
              "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
            Jr.appendChild(N).appendChild(z);
          var X = n.getComputedStyle(z);
          (g = X.top !== "1%"),
            (V = p(X.marginLeft) === 12),
            (z.style.right = "60%"),
            (w = p(X.right) === 36),
            (_ = p(X.width) === 36),
            (z.style.position = "absolute"),
            (C = p(z.offsetWidth / 3) === 12),
            Jr.removeChild(N),
            (z = null);
        }
      }
      function p(X) {
        return Math.round(parseFloat(X));
      }
      var g,
        _,
        C,
        w,
        D,
        V,
        N = E.createElement("div"),
        z = E.createElement("div");
      z.style &&
        ((z.style.backgroundClip = "content-box"),
        (z.cloneNode(!0).style.backgroundClip = ""),
        (M.clearCloneStyle = z.style.backgroundClip === "content-box"),
        b.extend(M, {
          boxSizingReliable: function () {
            return s(), _;
          },
          pixelBoxStyles: function () {
            return s(), w;
          },
          pixelPosition: function () {
            return s(), g;
          },
          reliableMarginLeft: function () {
            return s(), V;
          },
          scrollboxSize: function () {
            return s(), C;
          },
          reliableTrDimensions: function () {
            var X, ie, q, ae;
            return (
              D == null &&
                ((X = E.createElement("table")),
                (ie = E.createElement("tr")),
                (q = E.createElement("div")),
                (X.style.cssText =
                  "position:absolute;left:-11111px;border-collapse:separate"),
                (ie.style.cssText = "box-sizing:content-box;border:1px solid"),
                (ie.style.height = "1px"),
                (q.style.height = "9px"),
                (q.style.display = "block"),
                Jr.appendChild(X).appendChild(ie).appendChild(q),
                (ae = n.getComputedStyle(ie)),
                (D =
                  parseInt(ae.height, 10) +
                    parseInt(ae.borderTopWidth, 10) +
                    parseInt(ae.borderBottomWidth, 10) ===
                  ie.offsetHeight),
                Jr.removeChild(X)),
              D
            );
          },
        }));
    })();
    function ja(s, p, g) {
      var _,
        C,
        w,
        D,
        V = wu.test(p),
        N = s.style;
      return (
        (g = g || Il(s)),
        g &&
          ((D = g.getPropertyValue(p) || g[p]),
          V && D && (D = D.replace(vi, "$1") || void 0),
          D === "" && !Fo(s) && (D = b.style(s, p)),
          !M.pixelBoxStyles() &&
            Cu.test(D) &&
            Ky.test(p) &&
            ((_ = N.width),
            (C = N.minWidth),
            (w = N.maxWidth),
            (N.minWidth = N.maxWidth = N.width = D),
            (D = g.width),
            (N.width = _),
            (N.minWidth = C),
            (N.maxWidth = w))),
        D !== void 0 ? D + "" : D
      );
    }
    function Hf(s, p) {
      return {
        get: function () {
          if (s()) {
            delete this.get;
            return;
          }
          return (this.get = p).apply(this, arguments);
        },
      };
    }
    var Uf = ["Webkit", "Moz", "ms"],
      zf = E.createElement("div").style,
      $f = {};
    function Qy(s) {
      for (var p = s[0].toUpperCase() + s.slice(1), g = Uf.length; g--; )
        if (((s = Uf[g] + p), s in zf)) return s;
    }
    function Su(s) {
      var p = b.cssProps[s] || $f[s];
      return p || (s in zf ? s : ($f[s] = Qy(s) || s));
    }
    var Xy = /^(none|table(?!-c[ea]).+)/,
      Zy = { position: "absolute", visibility: "hidden", display: "block" },
      Wf = { letterSpacing: "0", fontWeight: "400" };
    function Gf(s, p, g) {
      var _ = Va.exec(p);
      return _ ? Math.max(0, _[2] - (g || 0)) + (_[3] || "px") : p;
    }
    function Du(s, p, g, _, C, w) {
      var D = p === "width" ? 1 : 0,
        V = 0,
        N = 0,
        z = 0;
      if (g === (_ ? "border" : "content")) return 0;
      for (; D < 4; D += 2)
        g === "margin" && (z += b.css(s, g + or[D], !0, C)),
          _
            ? (g === "content" && (N -= b.css(s, "padding" + or[D], !0, C)),
              g !== "margin" &&
                (N -= b.css(s, "border" + or[D] + "Width", !0, C)))
            : ((N += b.css(s, "padding" + or[D], !0, C)),
              g !== "padding"
                ? (N += b.css(s, "border" + or[D] + "Width", !0, C))
                : (V += b.css(s, "border" + or[D] + "Width", !0, C)));
      return (
        !_ &&
          w >= 0 &&
          (N +=
            Math.max(
              0,
              Math.ceil(
                s["offset" + p[0].toUpperCase() + p.slice(1)] - w - N - V - 0.5
              )
            ) || 0),
        N + z
      );
    }
    function Yf(s, p, g) {
      var _ = Il(s),
        C = !M.boxSizingReliable() || g,
        w = C && b.css(s, "boxSizing", !1, _) === "border-box",
        D = w,
        V = ja(s, p, _),
        N = "offset" + p[0].toUpperCase() + p.slice(1);
      if (Cu.test(V)) {
        if (!g) return V;
        V = "auto";
      }
      return (
        ((!M.boxSizingReliable() && w) ||
          (!M.reliableTrDimensions() && we(s, "tr")) ||
          V === "auto" ||
          (!parseFloat(V) && b.css(s, "display", !1, _) === "inline")) &&
          s.getClientRects().length &&
          ((w = b.css(s, "boxSizing", !1, _) === "border-box"),
          (D = N in s),
          D && (V = s[N])),
        (V = parseFloat(V) || 0),
        V + Du(s, p, g || (w ? "border" : "content"), D, _, V) + "px"
      );
    }
    b.extend({
      cssHooks: {
        opacity: {
          get: function (s, p) {
            if (p) {
              var g = ja(s, "opacity");
              return g === "" ? "1" : g;
            }
          },
        },
      },
      cssNumber: {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageSlice: !0,
        columnCount: !0,
        flexGrow: !0,
        flexShrink: !0,
        fontWeight: !0,
        gridArea: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnStart: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowStart: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        scale: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
      },
      cssProps: {},
      style: function (s, p, g, _) {
        if (!(!s || s.nodeType === 3 || s.nodeType === 8 || !s.style)) {
          var C,
            w,
            D,
            V = Rn(p),
            N = wu.test(p),
            z = s.style;
          if (
            (N || (p = Su(V)),
            (D = b.cssHooks[p] || b.cssHooks[V]),
            g !== void 0)
          ) {
            if (
              ((w = typeof g),
              w === "string" &&
                (C = Va.exec(g)) &&
                C[1] &&
                ((g = Pf(s, p, C)), (w = "number")),
              g == null || g !== g)
            )
              return;
            w === "number" &&
              !N &&
              (g += (C && C[3]) || (b.cssNumber[V] ? "" : "px")),
              !M.clearCloneStyle &&
                g === "" &&
                p.indexOf("background") === 0 &&
                (z[p] = "inherit"),
              (!D || !("set" in D) || (g = D.set(s, g, _)) !== void 0) &&
                (N ? z.setProperty(p, g) : (z[p] = g));
          } else
            return D && "get" in D && (C = D.get(s, !1, _)) !== void 0
              ? C
              : z[p];
        }
      },
      css: function (s, p, g, _) {
        var C,
          w,
          D,
          V = Rn(p),
          N = wu.test(p);
        return (
          N || (p = Su(V)),
          (D = b.cssHooks[p] || b.cssHooks[V]),
          D && "get" in D && (C = D.get(s, !0, g)),
          C === void 0 && (C = ja(s, p, _)),
          C === "normal" && p in Wf && (C = Wf[p]),
          g === "" || g
            ? ((w = parseFloat(C)), g === !0 || isFinite(w) ? w || 0 : C)
            : C
        );
      },
    }),
      b.each(["height", "width"], function (s, p) {
        b.cssHooks[p] = {
          get: function (g, _, C) {
            if (_)
              return Xy.test(b.css(g, "display")) &&
                (!g.getClientRects().length || !g.getBoundingClientRect().width)
                ? jf(g, Zy, function () {
                    return Yf(g, p, C);
                  })
                : Yf(g, p, C);
          },
          set: function (g, _, C) {
            var w,
              D = Il(g),
              V = !M.scrollboxSize() && D.position === "absolute",
              N = V || C,
              z = N && b.css(g, "boxSizing", !1, D) === "border-box",
              X = C ? Du(g, p, C, z, D) : 0;
            return (
              z &&
                V &&
                (X -= Math.ceil(
                  g["offset" + p[0].toUpperCase() + p.slice(1)] -
                    parseFloat(D[p]) -
                    Du(g, p, "border", !1, D) -
                    0.5
                )),
              X &&
                (w = Va.exec(_)) &&
                (w[3] || "px") !== "px" &&
                ((g.style[p] = _), (_ = b.css(g, p))),
              Gf(g, _, X)
            );
          },
        };
      }),
      (b.cssHooks.marginLeft = Hf(M.reliableMarginLeft, function (s, p) {
        if (p)
          return (
            (parseFloat(ja(s, "marginLeft")) ||
              s.getBoundingClientRect().left -
                jf(s, { marginLeft: 0 }, function () {
                  return s.getBoundingClientRect().left;
                })) + "px"
          );
      })),
      b.each({ margin: "", padding: "", border: "Width" }, function (s, p) {
        (b.cssHooks[s + p] = {
          expand: function (g) {
            for (
              var _ = 0, C = {}, w = typeof g == "string" ? g.split(" ") : [g];
              _ < 4;
              _++
            )
              C[s + or[_] + p] = w[_] || w[_ - 2] || w[0];
            return C;
          },
        }),
          s !== "margin" && (b.cssHooks[s + p].set = Gf);
      }),
      b.fn.extend({
        css: function (s, p) {
          return rr(
            this,
            function (g, _, C) {
              var w,
                D,
                V = {},
                N = 0;
              if (Array.isArray(_)) {
                for (w = Il(g), D = _.length; N < D; N++)
                  V[_[N]] = b.css(g, _[N], !1, w);
                return V;
              }
              return C !== void 0 ? b.style(g, _, C) : b.css(g, _);
            },
            s,
            p,
            arguments.length > 1
          );
        },
      });
    function Ii(s, p, g, _, C) {
      return new Ii.prototype.init(s, p, g, _, C);
    }
    (b.Tween = Ii),
      (Ii.prototype = {
        constructor: Ii,
        init: function (s, p, g, _, C, w) {
          (this.elem = s),
            (this.prop = g),
            (this.easing = C || b.easing._default),
            (this.options = p),
            (this.start = this.now = this.cur()),
            (this.end = _),
            (this.unit = w || (b.cssNumber[g] ? "" : "px"));
        },
        cur: function () {
          var s = Ii.propHooks[this.prop];
          return s && s.get ? s.get(this) : Ii.propHooks._default.get(this);
        },
        run: function (s) {
          var p,
            g = Ii.propHooks[this.prop];
          return (
            this.options.duration
              ? (this.pos = p =
                  b.easing[this.easing](
                    s,
                    this.options.duration * s,
                    0,
                    1,
                    this.options.duration
                  ))
              : (this.pos = p = s),
            (this.now = (this.end - this.start) * p + this.start),
            this.options.step &&
              this.options.step.call(this.elem, this.now, this),
            g && g.set ? g.set(this) : Ii.propHooks._default.set(this),
            this
          );
        },
      }),
      (Ii.prototype.init.prototype = Ii.prototype),
      (Ii.propHooks = {
        _default: {
          get: function (s) {
            var p;
            return s.elem.nodeType !== 1 ||
              (s.elem[s.prop] != null && s.elem.style[s.prop] == null)
              ? s.elem[s.prop]
              : ((p = b.css(s.elem, s.prop, "")), !p || p === "auto" ? 0 : p);
          },
          set: function (s) {
            b.fx.step[s.prop]
              ? b.fx.step[s.prop](s)
              : s.elem.nodeType === 1 &&
                (b.cssHooks[s.prop] || s.elem.style[Su(s.prop)] != null)
              ? b.style(s.elem, s.prop, s.now + s.unit)
              : (s.elem[s.prop] = s.now);
          },
        },
      }),
      (Ii.propHooks.scrollTop = Ii.propHooks.scrollLeft =
        {
          set: function (s) {
            s.elem.nodeType && s.elem.parentNode && (s.elem[s.prop] = s.now);
          },
        }),
      (b.easing = {
        linear: function (s) {
          return s;
        },
        swing: function (s) {
          return 0.5 - Math.cos(s * Math.PI) / 2;
        },
        _default: "swing",
      }),
      (b.fx = Ii.prototype.init),
      (b.fx.step = {});
    var jo,
      Al,
      Jy = /^(?:toggle|show|hide)$/,
      ex = /queueHooks$/;
    function Mu() {
      Al &&
        (E.hidden === !1 && n.requestAnimationFrame
          ? n.requestAnimationFrame(Mu)
          : n.setTimeout(Mu, b.fx.interval),
        b.fx.tick());
    }
    function qf() {
      return (
        n.setTimeout(function () {
          jo = void 0;
        }),
        (jo = Date.now())
      );
    }
    function Rl(s, p) {
      var g,
        _ = 0,
        C = { height: s };
      for (p = p ? 1 : 0; _ < 4; _ += 2 - p)
        (g = or[_]), (C["margin" + g] = C["padding" + g] = s);
      return p && (C.opacity = C.width = s), C;
    }
    function Kf(s, p, g) {
      for (
        var _,
          C = (bn.tweeners[p] || []).concat(bn.tweeners["*"]),
          w = 0,
          D = C.length;
        w < D;
        w++
      )
        if ((_ = C[w].call(g, p, s))) return _;
    }
    function tx(s, p, g) {
      var _,
        C,
        w,
        D,
        V,
        N,
        z,
        X,
        ie = "width" in p || "height" in p,
        q = this,
        ae = {},
        ze = s.style,
        at = s.nodeType && kl(s),
        qe = ke.get(s, "fxshow");
      g.queue ||
        ((D = b._queueHooks(s, "fx")),
        D.unqueued == null &&
          ((D.unqueued = 0),
          (V = D.empty.fire),
          (D.empty.fire = function () {
            D.unqueued || V();
          })),
        D.unqueued++,
        q.always(function () {
          q.always(function () {
            D.unqueued--, b.queue(s, "fx").length || D.empty.fire();
          });
        }));
      for (_ in p)
        if (((C = p[_]), Jy.test(C))) {
          if (
            (delete p[_],
            (w = w || C === "toggle"),
            C === (at ? "hide" : "show"))
          )
            if (C === "show" && qe && qe[_] !== void 0) at = !0;
            else continue;
          ae[_] = (qe && qe[_]) || b.style(s, _);
        }
      if (((N = !b.isEmptyObject(p)), !(!N && b.isEmptyObject(ae)))) {
        ie &&
          s.nodeType === 1 &&
          ((g.overflow = [ze.overflow, ze.overflowX, ze.overflowY]),
          (z = qe && qe.display),
          z == null && (z = ke.get(s, "display")),
          (X = b.css(s, "display")),
          X === "none" &&
            (z
              ? (X = z)
              : (No([s], !0),
                (z = s.style.display || z),
                (X = b.css(s, "display")),
                No([s]))),
          (X === "inline" || (X === "inline-block" && z != null)) &&
            b.css(s, "float") === "none" &&
            (N ||
              (q.done(function () {
                ze.display = z;
              }),
              z == null && ((X = ze.display), (z = X === "none" ? "" : X))),
            (ze.display = "inline-block"))),
          g.overflow &&
            ((ze.overflow = "hidden"),
            q.always(function () {
              (ze.overflow = g.overflow[0]),
                (ze.overflowX = g.overflow[1]),
                (ze.overflowY = g.overflow[2]);
            })),
          (N = !1);
        for (_ in ae)
          N ||
            (qe
              ? "hidden" in qe && (at = qe.hidden)
              : (qe = ke.access(s, "fxshow", { display: z })),
            w && (qe.hidden = !at),
            at && No([s], !0),
            q.done(function () {
              at || No([s]), ke.remove(s, "fxshow");
              for (_ in ae) b.style(s, _, ae[_]);
            })),
            (N = Kf(at ? qe[_] : 0, _, q)),
            _ in qe ||
              ((qe[_] = N.start), at && ((N.end = N.start), (N.start = 0)));
      }
    }
    function ix(s, p) {
      var g, _, C, w, D;
      for (g in s)
        if (
          ((_ = Rn(g)),
          (C = p[_]),
          (w = s[g]),
          Array.isArray(w) && ((C = w[1]), (w = s[g] = w[0])),
          g !== _ && ((s[_] = w), delete s[g]),
          (D = b.cssHooks[_]),
          D && "expand" in D)
        ) {
          (w = D.expand(w)), delete s[_];
          for (g in w) g in s || ((s[g] = w[g]), (p[g] = C));
        } else p[_] = C;
    }
    function bn(s, p, g) {
      var _,
        C,
        w = 0,
        D = bn.prefilters.length,
        V = b.Deferred().always(function () {
          delete N.elem;
        }),
        N = function () {
          if (C) return !1;
          for (
            var ie = jo || qf(),
              q = Math.max(0, z.startTime + z.duration - ie),
              ae = q / z.duration || 0,
              ze = 1 - ae,
              at = 0,
              qe = z.tweens.length;
            at < qe;
            at++
          )
            z.tweens[at].run(ze);
          return (
            V.notifyWith(s, [z, ze, q]),
            ze < 1 && qe
              ? q
              : (qe || V.notifyWith(s, [z, 1, 0]), V.resolveWith(s, [z]), !1)
          );
        },
        z = V.promise({
          elem: s,
          props: b.extend({}, p),
          opts: b.extend(
            !0,
            { specialEasing: {}, easing: b.easing._default },
            g
          ),
          originalProperties: p,
          originalOptions: g,
          startTime: jo || qf(),
          duration: g.duration,
          tweens: [],
          createTween: function (ie, q) {
            var ae = b.Tween(
              s,
              z.opts,
              ie,
              q,
              z.opts.specialEasing[ie] || z.opts.easing
            );
            return z.tweens.push(ae), ae;
          },
          stop: function (ie) {
            var q = 0,
              ae = ie ? z.tweens.length : 0;
            if (C) return this;
            for (C = !0; q < ae; q++) z.tweens[q].run(1);
            return (
              ie
                ? (V.notifyWith(s, [z, 1, 0]), V.resolveWith(s, [z, ie]))
                : V.rejectWith(s, [z, ie]),
              this
            );
          },
        }),
        X = z.props;
      for (ix(X, z.opts.specialEasing); w < D; w++)
        if (((_ = bn.prefilters[w].call(z, s, X, z.opts)), _))
          return (
            I(_.stop) &&
              (b._queueHooks(z.elem, z.opts.queue).stop = _.stop.bind(_)),
            _
          );
      return (
        b.map(X, Kf, z),
        I(z.opts.start) && z.opts.start.call(s, z),
        z
          .progress(z.opts.progress)
          .done(z.opts.done, z.opts.complete)
          .fail(z.opts.fail)
          .always(z.opts.always),
        b.fx.timer(b.extend(N, { elem: s, anim: z, queue: z.opts.queue })),
        z
      );
    }
    (b.Animation = b.extend(bn, {
      tweeners: {
        "*": [
          function (s, p) {
            var g = this.createTween(s, p);
            return Pf(g.elem, s, Va.exec(p), g), g;
          },
        ],
      },
      tweener: function (s, p) {
        I(s) ? ((p = s), (s = ["*"])) : (s = s.match(An));
        for (var g, _ = 0, C = s.length; _ < C; _++)
          (g = s[_]),
            (bn.tweeners[g] = bn.tweeners[g] || []),
            bn.tweeners[g].unshift(p);
      },
      prefilters: [tx],
      prefilter: function (s, p) {
        p ? bn.prefilters.unshift(s) : bn.prefilters.push(s);
      },
    })),
      (b.speed = function (s, p, g) {
        var _ =
          s && typeof s == "object"
            ? b.extend({}, s)
            : {
                complete: g || (!g && p) || (I(s) && s),
                duration: s,
                easing: (g && p) || (p && !I(p) && p),
              };
        return (
          b.fx.off
            ? (_.duration = 0)
            : typeof _.duration != "number" &&
              (_.duration in b.fx.speeds
                ? (_.duration = b.fx.speeds[_.duration])
                : (_.duration = b.fx.speeds._default)),
          (_.queue == null || _.queue === !0) && (_.queue = "fx"),
          (_.old = _.complete),
          (_.complete = function () {
            I(_.old) && _.old.call(this), _.queue && b.dequeue(this, _.queue);
          }),
          _
        );
      }),
      b.fn.extend({
        fadeTo: function (s, p, g, _) {
          return this.filter(kl)
            .css("opacity", 0)
            .show()
            .end()
            .animate({ opacity: p }, s, g, _);
        },
        animate: function (s, p, g, _) {
          var C = b.isEmptyObject(s),
            w = b.speed(p, g, _),
            D = function () {
              var V = bn(this, b.extend({}, s), w);
              (C || ke.get(this, "finish")) && V.stop(!0);
            };
          return (
            (D.finish = D),
            C || w.queue === !1 ? this.each(D) : this.queue(w.queue, D)
          );
        },
        stop: function (s, p, g) {
          var _ = function (C) {
            var w = C.stop;
            delete C.stop, w(g);
          };
          return (
            typeof s != "string" && ((g = p), (p = s), (s = void 0)),
            p && this.queue(s || "fx", []),
            this.each(function () {
              var C = !0,
                w = s != null && s + "queueHooks",
                D = b.timers,
                V = ke.get(this);
              if (w) V[w] && V[w].stop && _(V[w]);
              else for (w in V) V[w] && V[w].stop && ex.test(w) && _(V[w]);
              for (w = D.length; w--; )
                D[w].elem === this &&
                  (s == null || D[w].queue === s) &&
                  (D[w].anim.stop(g), (C = !1), D.splice(w, 1));
              (C || !g) && b.dequeue(this, s);
            })
          );
        },
        finish: function (s) {
          return (
            s !== !1 && (s = s || "fx"),
            this.each(function () {
              var p,
                g = ke.get(this),
                _ = g[s + "queue"],
                C = g[s + "queueHooks"],
                w = b.timers,
                D = _ ? _.length : 0;
              for (
                g.finish = !0,
                  b.queue(this, s, []),
                  C && C.stop && C.stop.call(this, !0),
                  p = w.length;
                p--;

              )
                w[p].elem === this &&
                  w[p].queue === s &&
                  (w[p].anim.stop(!0), w.splice(p, 1));
              for (p = 0; p < D; p++)
                _[p] && _[p].finish && _[p].finish.call(this);
              delete g.finish;
            })
          );
        },
      }),
      b.each(["toggle", "show", "hide"], function (s, p) {
        var g = b.fn[p];
        b.fn[p] = function (_, C, w) {
          return _ == null || typeof _ == "boolean"
            ? g.apply(this, arguments)
            : this.animate(Rl(p, !0), _, C, w);
        };
      }),
      b.each(
        {
          slideDown: Rl("show"),
          slideUp: Rl("hide"),
          slideToggle: Rl("toggle"),
          fadeIn: { opacity: "show" },
          fadeOut: { opacity: "hide" },
          fadeToggle: { opacity: "toggle" },
        },
        function (s, p) {
          b.fn[s] = function (g, _, C) {
            return this.animate(p, g, _, C);
          };
        }
      ),
      (b.timers = []),
      (b.fx.tick = function () {
        var s,
          p = 0,
          g = b.timers;
        for (jo = Date.now(); p < g.length; p++)
          (s = g[p]), !s() && g[p] === s && g.splice(p--, 1);
        g.length || b.fx.stop(), (jo = void 0);
      }),
      (b.fx.timer = function (s) {
        b.timers.push(s), b.fx.start();
      }),
      (b.fx.interval = 13),
      (b.fx.start = function () {
        Al || ((Al = !0), Mu());
      }),
      (b.fx.stop = function () {
        Al = null;
      }),
      (b.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
      (b.fn.delay = function (s, p) {
        return (
          (s = (b.fx && b.fx.speeds[s]) || s),
          (p = p || "fx"),
          this.queue(p, function (g, _) {
            var C = n.setTimeout(g, s);
            _.stop = function () {
              n.clearTimeout(C);
            };
          })
        );
      }),
      (function () {
        var s = E.createElement("input"),
          p = E.createElement("select"),
          g = p.appendChild(E.createElement("option"));
        (s.type = "checkbox"),
          (M.checkOn = s.value !== ""),
          (M.optSelected = g.selected),
          (s = E.createElement("input")),
          (s.value = "t"),
          (s.type = "radio"),
          (M.radioValue = s.value === "t");
      })();
    var Qf,
      Ha = b.expr.attrHandle;
    b.fn.extend({
      attr: function (s, p) {
        return rr(this, b.attr, s, p, arguments.length > 1);
      },
      removeAttr: function (s) {
        return this.each(function () {
          b.removeAttr(this, s);
        });
      },
    }),
      b.extend({
        attr: function (s, p, g) {
          var _,
            C,
            w = s.nodeType;
          if (!(w === 3 || w === 8 || w === 2)) {
            if (typeof s.getAttribute > "u") return b.prop(s, p, g);
            if (
              ((w !== 1 || !b.isXMLDoc(s)) &&
                (C =
                  b.attrHooks[p.toLowerCase()] ||
                  (b.expr.match.bool.test(p) ? Qf : void 0)),
              g !== void 0)
            ) {
              if (g === null) {
                b.removeAttr(s, p);
                return;
              }
              return C && "set" in C && (_ = C.set(s, g, p)) !== void 0
                ? _
                : (s.setAttribute(p, g + ""), g);
            }
            return C && "get" in C && (_ = C.get(s, p)) !== null
              ? _
              : ((_ = b.find.attr(s, p)), _ ?? void 0);
          }
        },
        attrHooks: {
          type: {
            set: function (s, p) {
              if (!M.radioValue && p === "radio" && we(s, "input")) {
                var g = s.value;
                return s.setAttribute("type", p), g && (s.value = g), p;
              }
            },
          },
        },
        removeAttr: function (s, p) {
          var g,
            _ = 0,
            C = p && p.match(An);
          if (C && s.nodeType === 1)
            for (; (g = C[_++]); ) s.removeAttribute(g);
        },
      }),
      (Qf = {
        set: function (s, p, g) {
          return p === !1 ? b.removeAttr(s, g) : s.setAttribute(g, g), g;
        },
      }),
      b.each(b.expr.match.bool.source.match(/\w+/g), function (s, p) {
        var g = Ha[p] || b.find.attr;
        Ha[p] = function (_, C, w) {
          var D,
            V,
            N = C.toLowerCase();
          return (
            w ||
              ((V = Ha[N]),
              (Ha[N] = D),
              (D = g(_, C, w) != null ? N : null),
              (Ha[N] = V)),
            D
          );
        };
      });
    var nx = /^(?:input|select|textarea|button)$/i,
      rx = /^(?:a|area)$/i;
    b.fn.extend({
      prop: function (s, p) {
        return rr(this, b.prop, s, p, arguments.length > 1);
      },
      removeProp: function (s) {
        return this.each(function () {
          delete this[b.propFix[s] || s];
        });
      },
    }),
      b.extend({
        prop: function (s, p, g) {
          var _,
            C,
            w = s.nodeType;
          if (!(w === 3 || w === 8 || w === 2))
            return (
              (w !== 1 || !b.isXMLDoc(s)) &&
                ((p = b.propFix[p] || p), (C = b.propHooks[p])),
              g !== void 0
                ? C && "set" in C && (_ = C.set(s, g, p)) !== void 0
                  ? _
                  : (s[p] = g)
                : C && "get" in C && (_ = C.get(s, p)) !== null
                ? _
                : s[p]
            );
        },
        propHooks: {
          tabIndex: {
            get: function (s) {
              var p = b.find.attr(s, "tabindex");
              return p
                ? parseInt(p, 10)
                : nx.test(s.nodeName) || (rx.test(s.nodeName) && s.href)
                ? 0
                : -1;
            },
          },
        },
        propFix: { for: "htmlFor", class: "className" },
      }),
      M.optSelected ||
        (b.propHooks.selected = {
          get: function (s) {
            var p = s.parentNode;
            return p && p.parentNode && p.parentNode.selectedIndex, null;
          },
          set: function (s) {
            var p = s.parentNode;
            p && (p.selectedIndex, p.parentNode && p.parentNode.selectedIndex);
          },
        }),
      b.each(
        [
          "tabIndex",
          "readOnly",
          "maxLength",
          "cellSpacing",
          "cellPadding",
          "rowSpan",
          "colSpan",
          "useMap",
          "frameBorder",
          "contentEditable",
        ],
        function () {
          b.propFix[this.toLowerCase()] = this;
        }
      );
    function eo(s) {
      var p = s.match(An) || [];
      return p.join(" ");
    }
    function to(s) {
      return (s.getAttribute && s.getAttribute("class")) || "";
    }
    function Tu(s) {
      return Array.isArray(s)
        ? s
        : typeof s == "string"
        ? s.match(An) || []
        : [];
    }
    b.fn.extend({
      addClass: function (s) {
        var p, g, _, C, w, D;
        return I(s)
          ? this.each(function (V) {
              b(this).addClass(s.call(this, V, to(this)));
            })
          : ((p = Tu(s)),
            p.length
              ? this.each(function () {
                  if (
                    ((_ = to(this)),
                    (g = this.nodeType === 1 && " " + eo(_) + " "),
                    g)
                  ) {
                    for (w = 0; w < p.length; w++)
                      (C = p[w]),
                        g.indexOf(" " + C + " ") < 0 && (g += C + " ");
                    (D = eo(g)), _ !== D && this.setAttribute("class", D);
                  }
                })
              : this);
      },
      removeClass: function (s) {
        var p, g, _, C, w, D;
        return I(s)
          ? this.each(function (V) {
              b(this).removeClass(s.call(this, V, to(this)));
            })
          : arguments.length
          ? ((p = Tu(s)),
            p.length
              ? this.each(function () {
                  if (
                    ((_ = to(this)),
                    (g = this.nodeType === 1 && " " + eo(_) + " "),
                    g)
                  ) {
                    for (w = 0; w < p.length; w++)
                      for (C = p[w]; g.indexOf(" " + C + " ") > -1; )
                        g = g.replace(" " + C + " ", " ");
                    (D = eo(g)), _ !== D && this.setAttribute("class", D);
                  }
                })
              : this)
          : this.attr("class", "");
      },
      toggleClass: function (s, p) {
        var g,
          _,
          C,
          w,
          D = typeof s,
          V = D === "string" || Array.isArray(s);
        return I(s)
          ? this.each(function (N) {
              b(this).toggleClass(s.call(this, N, to(this), p), p);
            })
          : typeof p == "boolean" && V
          ? p
            ? this.addClass(s)
            : this.removeClass(s)
          : ((g = Tu(s)),
            this.each(function () {
              if (V)
                for (w = b(this), C = 0; C < g.length; C++)
                  (_ = g[C]), w.hasClass(_) ? w.removeClass(_) : w.addClass(_);
              else
                (s === void 0 || D === "boolean") &&
                  ((_ = to(this)),
                  _ && ke.set(this, "__className__", _),
                  this.setAttribute &&
                    this.setAttribute(
                      "class",
                      _ || s === !1 ? "" : ke.get(this, "__className__") || ""
                    ));
            }));
      },
      hasClass: function (s) {
        var p,
          g,
          _ = 0;
        for (p = " " + s + " "; (g = this[_++]); )
          if (g.nodeType === 1 && (" " + eo(to(g)) + " ").indexOf(p) > -1)
            return !0;
        return !1;
      },
    });
    var ox = /\r/g;
    b.fn.extend({
      val: function (s) {
        var p,
          g,
          _,
          C = this[0];
        return arguments.length
          ? ((_ = I(s)),
            this.each(function (w) {
              var D;
              this.nodeType === 1 &&
                (_ ? (D = s.call(this, w, b(this).val())) : (D = s),
                D == null
                  ? (D = "")
                  : typeof D == "number"
                  ? (D += "")
                  : Array.isArray(D) &&
                    (D = b.map(D, function (V) {
                      return V == null ? "" : V + "";
                    })),
                (p =
                  b.valHooks[this.type] ||
                  b.valHooks[this.nodeName.toLowerCase()]),
                (!p || !("set" in p) || p.set(this, D, "value") === void 0) &&
                  (this.value = D));
            }))
          : C
          ? ((p = b.valHooks[C.type] || b.valHooks[C.nodeName.toLowerCase()]),
            p && "get" in p && (g = p.get(C, "value")) !== void 0
              ? g
              : ((g = C.value),
                typeof g == "string" ? g.replace(ox, "") : g ?? ""))
          : void 0;
      },
    }),
      b.extend({
        valHooks: {
          option: {
            get: function (s) {
              var p = b.find.attr(s, "value");
              return p ?? eo(b.text(s));
            },
          },
          select: {
            get: function (s) {
              var p,
                g,
                _,
                C = s.options,
                w = s.selectedIndex,
                D = s.type === "select-one",
                V = D ? null : [],
                N = D ? w + 1 : C.length;
              for (w < 0 ? (_ = N) : (_ = D ? w : 0); _ < N; _++)
                if (
                  ((g = C[_]),
                  (g.selected || _ === w) &&
                    !g.disabled &&
                    (!g.parentNode.disabled || !we(g.parentNode, "optgroup")))
                ) {
                  if (((p = b(g).val()), D)) return p;
                  V.push(p);
                }
              return V;
            },
            set: function (s, p) {
              for (
                var g, _, C = s.options, w = b.makeArray(p), D = C.length;
                D--;

              )
                (_ = C[D]),
                  (_.selected = b.inArray(b.valHooks.option.get(_), w) > -1) &&
                    (g = !0);
              return g || (s.selectedIndex = -1), w;
            },
          },
        },
      }),
      b.each(["radio", "checkbox"], function () {
        (b.valHooks[this] = {
          set: function (s, p) {
            if (Array.isArray(p))
              return (s.checked = b.inArray(b(s).val(), p) > -1);
          },
        }),
          M.checkOn ||
            (b.valHooks[this].get = function (s) {
              return s.getAttribute("value") === null ? "on" : s.value;
            });
      });
    var Ua = n.location,
      Xf = { guid: Date.now() },
      Eu = /\?/;
    b.parseXML = function (s) {
      var p, g;
      if (!s || typeof s != "string") return null;
      try {
        p = new n.DOMParser().parseFromString(s, "text/xml");
      } catch {}
      return (
        (g = p && p.getElementsByTagName("parsererror")[0]),
        (!p || g) &&
          b.error(
            "Invalid XML: " +
              (g
                ? b.map(g.childNodes, function (_) {
                    return _.textContent;
                  }).join(`
`)
                : s)
          ),
        p
      );
    };
    var Zf = /^(?:focusinfocus|focusoutblur)$/,
      Jf = function (s) {
        s.stopPropagation();
      };
    b.extend(b.event, {
      trigger: function (s, p, g, _) {
        var C,
          w,
          D,
          V,
          N,
          z,
          X,
          ie,
          q = [g || E],
          ae = v.call(s, "type") ? s.type : s,
          ze = v.call(s, "namespace") ? s.namespace.split(".") : [];
        if (
          ((w = ie = D = g = g || E),
          !(g.nodeType === 3 || g.nodeType === 8) &&
            !Zf.test(ae + b.event.triggered) &&
            (ae.indexOf(".") > -1 &&
              ((ze = ae.split(".")), (ae = ze.shift()), ze.sort()),
            (N = ae.indexOf(":") < 0 && "on" + ae),
            (s = s[b.expando] ? s : new b.Event(ae, typeof s == "object" && s)),
            (s.isTrigger = _ ? 2 : 3),
            (s.namespace = ze.join(".")),
            (s.rnamespace = s.namespace
              ? new RegExp("(^|\\.)" + ze.join("\\.(?:.*\\.|)") + "(\\.|$)")
              : null),
            (s.result = void 0),
            s.target || (s.target = g),
            (p = p == null ? [s] : b.makeArray(p, [s])),
            (X = b.event.special[ae] || {}),
            !(!_ && X.trigger && X.trigger.apply(g, p) === !1)))
        ) {
          if (!_ && !X.noBubble && !L(g)) {
            for (
              V = X.delegateType || ae, Zf.test(V + ae) || (w = w.parentNode);
              w;
              w = w.parentNode
            )
              q.push(w), (D = w);
            D === (g.ownerDocument || E) &&
              q.push(D.defaultView || D.parentWindow || n);
          }
          for (C = 0; (w = q[C++]) && !s.isPropagationStopped(); )
            (ie = w),
              (s.type = C > 1 ? V : X.bindType || ae),
              (z =
                (ke.get(w, "events") || Object.create(null))[s.type] &&
                ke.get(w, "handle")),
              z && z.apply(w, p),
              (z = N && w[N]),
              z &&
                z.apply &&
                Na(w) &&
                ((s.result = z.apply(w, p)),
                s.result === !1 && s.preventDefault());
          return (
            (s.type = ae),
            !_ &&
              !s.isDefaultPrevented() &&
              (!X._default || X._default.apply(q.pop(), p) === !1) &&
              Na(g) &&
              N &&
              I(g[ae]) &&
              !L(g) &&
              ((D = g[N]),
              D && (g[N] = null),
              (b.event.triggered = ae),
              s.isPropagationStopped() && ie.addEventListener(ae, Jf),
              g[ae](),
              s.isPropagationStopped() && ie.removeEventListener(ae, Jf),
              (b.event.triggered = void 0),
              D && (g[N] = D)),
            s.result
          );
        }
      },
      simulate: function (s, p, g) {
        var _ = b.extend(new b.Event(), g, { type: s, isSimulated: !0 });
        b.event.trigger(_, null, p);
      },
    }),
      b.fn.extend({
        trigger: function (s, p) {
          return this.each(function () {
            b.event.trigger(s, p, this);
          });
        },
        triggerHandler: function (s, p) {
          var g = this[0];
          if (g) return b.event.trigger(s, p, g, !0);
        },
      });
    var ax = /\[\]$/,
      eg = /\r?\n/g,
      sx = /^(?:submit|button|image|reset|file)$/i,
      lx = /^(?:input|select|textarea|keygen)/i;
    function Ou(s, p, g, _) {
      var C;
      if (Array.isArray(p))
        b.each(p, function (w, D) {
          g || ax.test(s)
            ? _(s, D)
            : Ou(
                s + "[" + (typeof D == "object" && D != null ? w : "") + "]",
                D,
                g,
                _
              );
        });
      else if (!g && re(p) === "object")
        for (C in p) Ou(s + "[" + C + "]", p[C], g, _);
      else _(s, p);
    }
    (b.param = function (s, p) {
      var g,
        _ = [],
        C = function (w, D) {
          var V = I(D) ? D() : D;
          _[_.length] =
            encodeURIComponent(w) + "=" + encodeURIComponent(V ?? "");
        };
      if (s == null) return "";
      if (Array.isArray(s) || (s.jquery && !b.isPlainObject(s)))
        b.each(s, function () {
          C(this.name, this.value);
        });
      else for (g in s) Ou(g, s[g], p, C);
      return _.join("&");
    }),
      b.fn.extend({
        serialize: function () {
          return b.param(this.serializeArray());
        },
        serializeArray: function () {
          return this.map(function () {
            var s = b.prop(this, "elements");
            return s ? b.makeArray(s) : this;
          })
            .filter(function () {
              var s = this.type;
              return (
                this.name &&
                !b(this).is(":disabled") &&
                lx.test(this.nodeName) &&
                !sx.test(s) &&
                (this.checked || !Ba.test(s))
              );
            })
            .map(function (s, p) {
              var g = b(this).val();
              return g == null
                ? null
                : Array.isArray(g)
                ? b.map(g, function (_) {
                    return {
                      name: p.name,
                      value: _.replace(
                        eg,
                        `\r
`
                      ),
                    };
                  })
                : {
                    name: p.name,
                    value: g.replace(
                      eg,
                      `\r
`
                    ),
                  };
            })
            .get();
        },
      });
    var cx = /%20/g,
      dx = /#.*$/,
      ux = /([?&])_=[^&]*/,
      hx = /^(.*?):[ \t]*([^\r\n]*)$/gm,
      px = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      mx = /^(?:GET|HEAD)$/,
      fx = /^\/\//,
      tg = {},
      ku = {},
      ig = "*/".concat("*"),
      Pu = E.createElement("a");
    Pu.href = Ua.href;
    function ng(s) {
      return function (p, g) {
        typeof p != "string" && ((g = p), (p = "*"));
        var _,
          C = 0,
          w = p.toLowerCase().match(An) || [];
        if (I(g))
          for (; (_ = w[C++]); )
            _[0] === "+"
              ? ((_ = _.slice(1) || "*"), (s[_] = s[_] || []).unshift(g))
              : (s[_] = s[_] || []).push(g);
      };
    }
    function rg(s, p, g, _) {
      var C = {},
        w = s === ku;
      function D(V) {
        var N;
        return (
          (C[V] = !0),
          b.each(s[V] || [], function (z, X) {
            var ie = X(p, g, _);
            if (typeof ie == "string" && !w && !C[ie])
              return p.dataTypes.unshift(ie), D(ie), !1;
            if (w) return !(N = ie);
          }),
          N
        );
      }
      return D(p.dataTypes[0]) || (!C["*"] && D("*"));
    }
    function Iu(s, p) {
      var g,
        _,
        C = b.ajaxSettings.flatOptions || {};
      for (g in p) p[g] !== void 0 && ((C[g] ? s : _ || (_ = {}))[g] = p[g]);
      return _ && b.extend(!0, s, _), s;
    }
    function gx(s, p, g) {
      for (var _, C, w, D, V = s.contents, N = s.dataTypes; N[0] === "*"; )
        N.shift(),
          _ === void 0 &&
            (_ = s.mimeType || p.getResponseHeader("Content-Type"));
      if (_) {
        for (C in V)
          if (V[C] && V[C].test(_)) {
            N.unshift(C);
            break;
          }
      }
      if (N[0] in g) w = N[0];
      else {
        for (C in g) {
          if (!N[0] || s.converters[C + " " + N[0]]) {
            w = C;
            break;
          }
          D || (D = C);
        }
        w = w || D;
      }
      if (w) return w !== N[0] && N.unshift(w), g[w];
    }
    function _x(s, p, g, _) {
      var C,
        w,
        D,
        V,
        N,
        z = {},
        X = s.dataTypes.slice();
      if (X[1]) for (D in s.converters) z[D.toLowerCase()] = s.converters[D];
      for (w = X.shift(); w; )
        if (
          (s.responseFields[w] && (g[s.responseFields[w]] = p),
          !N && _ && s.dataFilter && (p = s.dataFilter(p, s.dataType)),
          (N = w),
          (w = X.shift()),
          w)
        ) {
          if (w === "*") w = N;
          else if (N !== "*" && N !== w) {
            if (((D = z[N + " " + w] || z["* " + w]), !D)) {
              for (C in z)
                if (
                  ((V = C.split(" ")),
                  V[1] === w && ((D = z[N + " " + V[0]] || z["* " + V[0]]), D))
                ) {
                  D === !0
                    ? (D = z[C])
                    : z[C] !== !0 && ((w = V[0]), X.unshift(V[1]));
                  break;
                }
            }
            if (D !== !0)
              if (D && s.throws) p = D(p);
              else
                try {
                  p = D(p);
                } catch (ie) {
                  return {
                    state: "parsererror",
                    error: D ? ie : "No conversion from " + N + " to " + w,
                  };
                }
          }
        }
      return { state: "success", data: p };
    }
    b.extend({
      active: 0,
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: Ua.href,
        type: "GET",
        isLocal: px.test(Ua.protocol),
        global: !0,
        processData: !0,
        async: !0,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        accepts: {
          "*": ig,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript",
        },
        contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON",
        },
        converters: {
          "* text": String,
          "text html": !0,
          "text json": JSON.parse,
          "text xml": b.parseXML,
        },
        flatOptions: { url: !0, context: !0 },
      },
      ajaxSetup: function (s, p) {
        return p ? Iu(Iu(s, b.ajaxSettings), p) : Iu(b.ajaxSettings, s);
      },
      ajaxPrefilter: ng(tg),
      ajaxTransport: ng(ku),
      ajax: function (s, p) {
        typeof s == "object" && ((p = s), (s = void 0)), (p = p || {});
        var g,
          _,
          C,
          w,
          D,
          V,
          N,
          z,
          X,
          ie,
          q = b.ajaxSetup({}, p),
          ae = q.context || q,
          ze = q.context && (ae.nodeType || ae.jquery) ? b(ae) : b.event,
          at = b.Deferred(),
          qe = b.Callbacks("once memory"),
          gi = q.statusCode || {},
          ai = {},
          Fn = {},
          Nn = "canceled",
          it = {
            readyState: 0,
            getResponseHeader: function (st) {
              var Ut;
              if (N) {
                if (!w)
                  for (w = {}; (Ut = hx.exec(C)); )
                    w[Ut[1].toLowerCase() + " "] = (
                      w[Ut[1].toLowerCase() + " "] || []
                    ).concat(Ut[2]);
                Ut = w[st.toLowerCase() + " "];
              }
              return Ut == null ? null : Ut.join(", ");
            },
            getAllResponseHeaders: function () {
              return N ? C : null;
            },
            setRequestHeader: function (st, Ut) {
              return (
                N == null &&
                  ((st = Fn[st.toLowerCase()] = Fn[st.toLowerCase()] || st),
                  (ai[st] = Ut)),
                this
              );
            },
            overrideMimeType: function (st) {
              return N == null && (q.mimeType = st), this;
            },
            statusCode: function (st) {
              var Ut;
              if (st)
                if (N) it.always(st[it.status]);
                else for (Ut in st) gi[Ut] = [gi[Ut], st[Ut]];
              return this;
            },
            abort: function (st) {
              var Ut = st || Nn;
              return g && g.abort(Ut), io(0, Ut), this;
            },
          };
        if (
          (at.promise(it),
          (q.url = ((s || q.url || Ua.href) + "").replace(
            fx,
            Ua.protocol + "//"
          )),
          (q.type = p.method || p.type || q.method || q.type),
          (q.dataTypes = (q.dataType || "*").toLowerCase().match(An) || [""]),
          q.crossDomain == null)
        ) {
          V = E.createElement("a");
          try {
            (V.href = q.url),
              (V.href = V.href),
              (q.crossDomain =
                Pu.protocol + "//" + Pu.host != V.protocol + "//" + V.host);
          } catch {
            q.crossDomain = !0;
          }
        }
        if (
          (q.data &&
            q.processData &&
            typeof q.data != "string" &&
            (q.data = b.param(q.data, q.traditional)),
          rg(tg, q, p, it),
          N)
        )
          return it;
        (z = b.event && q.global),
          z && b.active++ === 0 && b.event.trigger("ajaxStart"),
          (q.type = q.type.toUpperCase()),
          (q.hasContent = !mx.test(q.type)),
          (_ = q.url.replace(dx, "")),
          q.hasContent
            ? q.data &&
              q.processData &&
              (q.contentType || "").indexOf(
                "application/x-www-form-urlencoded"
              ) === 0 &&
              (q.data = q.data.replace(cx, "+"))
            : ((ie = q.url.slice(_.length)),
              q.data &&
                (q.processData || typeof q.data == "string") &&
                ((_ += (Eu.test(_) ? "&" : "?") + q.data), delete q.data),
              q.cache === !1 &&
                ((_ = _.replace(ux, "$1")),
                (ie = (Eu.test(_) ? "&" : "?") + "_=" + Xf.guid++ + ie)),
              (q.url = _ + ie)),
          q.ifModified &&
            (b.lastModified[_] &&
              it.setRequestHeader("If-Modified-Since", b.lastModified[_]),
            b.etag[_] && it.setRequestHeader("If-None-Match", b.etag[_])),
          ((q.data && q.hasContent && q.contentType !== !1) || p.contentType) &&
            it.setRequestHeader("Content-Type", q.contentType),
          it.setRequestHeader(
            "Accept",
            q.dataTypes[0] && q.accepts[q.dataTypes[0]]
              ? q.accepts[q.dataTypes[0]] +
                  (q.dataTypes[0] !== "*" ? ", " + ig + "; q=0.01" : "")
              : q.accepts["*"]
          );
        for (X in q.headers) it.setRequestHeader(X, q.headers[X]);
        if (q.beforeSend && (q.beforeSend.call(ae, it, q) === !1 || N))
          return it.abort();
        if (
          ((Nn = "abort"),
          qe.add(q.complete),
          it.done(q.success),
          it.fail(q.error),
          (g = rg(ku, q, p, it)),
          !g)
        )
          io(-1, "No Transport");
        else {
          if (((it.readyState = 1), z && ze.trigger("ajaxSend", [it, q]), N))
            return it;
          q.async &&
            q.timeout > 0 &&
            (D = n.setTimeout(function () {
              it.abort("timeout");
            }, q.timeout));
          try {
            (N = !1), g.send(ai, io);
          } catch (st) {
            if (N) throw st;
            io(-1, st);
          }
        }
        function io(st, Ut, $a, Ru) {
          var Ln,
            Wa,
            Vn,
            wr,
            Sr,
            rn = Ut;
          N ||
            ((N = !0),
            D && n.clearTimeout(D),
            (g = void 0),
            (C = Ru || ""),
            (it.readyState = st > 0 ? 4 : 0),
            (Ln = (st >= 200 && st < 300) || st === 304),
            $a && (wr = gx(q, it, $a)),
            !Ln &&
              b.inArray("script", q.dataTypes) > -1 &&
              b.inArray("json", q.dataTypes) < 0 &&
              (q.converters["text script"] = function () {}),
            (wr = _x(q, wr, it, Ln)),
            Ln
              ? (q.ifModified &&
                  ((Sr = it.getResponseHeader("Last-Modified")),
                  Sr && (b.lastModified[_] = Sr),
                  (Sr = it.getResponseHeader("etag")),
                  Sr && (b.etag[_] = Sr)),
                st === 204 || q.type === "HEAD"
                  ? (rn = "nocontent")
                  : st === 304
                  ? (rn = "notmodified")
                  : ((rn = wr.state),
                    (Wa = wr.data),
                    (Vn = wr.error),
                    (Ln = !Vn)))
              : ((Vn = rn),
                (st || !rn) && ((rn = "error"), st < 0 && (st = 0))),
            (it.status = st),
            (it.statusText = (Ut || rn) + ""),
            Ln
              ? at.resolveWith(ae, [Wa, rn, it])
              : at.rejectWith(ae, [it, rn, Vn]),
            it.statusCode(gi),
            (gi = void 0),
            z &&
              ze.trigger(Ln ? "ajaxSuccess" : "ajaxError", [
                it,
                q,
                Ln ? Wa : Vn,
              ]),
            qe.fireWith(ae, [it, rn]),
            z &&
              (ze.trigger("ajaxComplete", [it, q]),
              --b.active || b.event.trigger("ajaxStop")));
        }
        return it;
      },
      getJSON: function (s, p, g) {
        return b.get(s, p, g, "json");
      },
      getScript: function (s, p) {
        return b.get(s, void 0, p, "script");
      },
    }),
      b.each(["get", "post"], function (s, p) {
        b[p] = function (g, _, C, w) {
          return (
            I(_) && ((w = w || C), (C = _), (_ = void 0)),
            b.ajax(
              b.extend(
                { url: g, type: p, dataType: w, data: _, success: C },
                b.isPlainObject(g) && g
              )
            )
          );
        };
      }),
      b.ajaxPrefilter(function (s) {
        var p;
        for (p in s.headers)
          p.toLowerCase() === "content-type" &&
            (s.contentType = s.headers[p] || "");
      }),
      (b._evalUrl = function (s, p, g) {
        return b.ajax({
          url: s,
          type: "GET",
          dataType: "script",
          cache: !0,
          async: !1,
          global: !1,
          converters: { "text script": function () {} },
          dataFilter: function (_) {
            b.globalEval(_, p, g);
          },
        });
      }),
      b.fn.extend({
        wrapAll: function (s) {
          var p;
          return (
            this[0] &&
              (I(s) && (s = s.call(this[0])),
              (p = b(s, this[0].ownerDocument).eq(0).clone(!0)),
              this[0].parentNode && p.insertBefore(this[0]),
              p
                .map(function () {
                  for (var g = this; g.firstElementChild; )
                    g = g.firstElementChild;
                  return g;
                })
                .append(this)),
            this
          );
        },
        wrapInner: function (s) {
          return I(s)
            ? this.each(function (p) {
                b(this).wrapInner(s.call(this, p));
              })
            : this.each(function () {
                var p = b(this),
                  g = p.contents();
                g.length ? g.wrapAll(s) : p.append(s);
              });
        },
        wrap: function (s) {
          var p = I(s);
          return this.each(function (g) {
            b(this).wrapAll(p ? s.call(this, g) : s);
          });
        },
        unwrap: function (s) {
          return (
            this.parent(s)
              .not("body")
              .each(function () {
                b(this).replaceWith(this.childNodes);
              }),
            this
          );
        },
      }),
      (b.expr.pseudos.hidden = function (s) {
        return !b.expr.pseudos.visible(s);
      }),
      (b.expr.pseudos.visible = function (s) {
        return !!(s.offsetWidth || s.offsetHeight || s.getClientRects().length);
      }),
      (b.ajaxSettings.xhr = function () {
        try {
          return new n.XMLHttpRequest();
        } catch {}
      });
    var bx = { 0: 200, 1223: 204 },
      za = b.ajaxSettings.xhr();
    (M.cors = !!za && "withCredentials" in za),
      (M.ajax = za = !!za),
      b.ajaxTransport(function (s) {
        var p, g;
        if (M.cors || (za && !s.crossDomain))
          return {
            send: function (_, C) {
              var w,
                D = s.xhr();
              if (
                (D.open(s.type, s.url, s.async, s.username, s.password),
                s.xhrFields)
              )
                for (w in s.xhrFields) D[w] = s.xhrFields[w];
              s.mimeType &&
                D.overrideMimeType &&
                D.overrideMimeType(s.mimeType),
                !s.crossDomain &&
                  !_["X-Requested-With"] &&
                  (_["X-Requested-With"] = "XMLHttpRequest");
              for (w in _) D.setRequestHeader(w, _[w]);
              (p = function (V) {
                return function () {
                  p &&
                    ((p =
                      g =
                      D.onload =
                      D.onerror =
                      D.onabort =
                      D.ontimeout =
                      D.onreadystatechange =
                        null),
                    V === "abort"
                      ? D.abort()
                      : V === "error"
                      ? typeof D.status != "number"
                        ? C(0, "error")
                        : C(D.status, D.statusText)
                      : C(
                          bx[D.status] || D.status,
                          D.statusText,
                          (D.responseType || "text") !== "text" ||
                            typeof D.responseText != "string"
                            ? { binary: D.response }
                            : { text: D.responseText },
                          D.getAllResponseHeaders()
                        ));
                };
              }),
                (D.onload = p()),
                (g = D.onerror = D.ontimeout = p("error")),
                D.onabort !== void 0
                  ? (D.onabort = g)
                  : (D.onreadystatechange = function () {
                      D.readyState === 4 &&
                        n.setTimeout(function () {
                          p && g();
                        });
                    }),
                (p = p("abort"));
              try {
                D.send((s.hasContent && s.data) || null);
              } catch (V) {
                if (p) throw V;
              }
            },
            abort: function () {
              p && p();
            },
          };
      }),
      b.ajaxPrefilter(function (s) {
        s.crossDomain && (s.contents.script = !1);
      }),
      b.ajaxSetup({
        accepts: {
          script:
            "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
        },
        contents: { script: /\b(?:java|ecma)script\b/ },
        converters: {
          "text script": function (s) {
            return b.globalEval(s), s;
          },
        },
      }),
      b.ajaxPrefilter("script", function (s) {
        s.cache === void 0 && (s.cache = !1), s.crossDomain && (s.type = "GET");
      }),
      b.ajaxTransport("script", function (s) {
        if (s.crossDomain || s.scriptAttrs) {
          var p, g;
          return {
            send: function (_, C) {
              (p = b("<script>")
                .attr(s.scriptAttrs || {})
                .prop({ charset: s.scriptCharset, src: s.url })
                .on(
                  "load error",
                  (g = function (w) {
                    p.remove(),
                      (g = null),
                      w && C(w.type === "error" ? 404 : 200, w.type);
                  })
                )),
                E.head.appendChild(p[0]);
            },
            abort: function () {
              g && g();
            },
          };
        }
      });
    var og = [],
      Au = /(=)\?(?=&|$)|\?\?/;
    b.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function () {
        var s = og.pop() || b.expando + "_" + Xf.guid++;
        return (this[s] = !0), s;
      },
    }),
      b.ajaxPrefilter("json jsonp", function (s, p, g) {
        var _,
          C,
          w,
          D =
            s.jsonp !== !1 &&
            (Au.test(s.url)
              ? "url"
              : typeof s.data == "string" &&
                (s.contentType || "").indexOf(
                  "application/x-www-form-urlencoded"
                ) === 0 &&
                Au.test(s.data) &&
                "data");
        if (D || s.dataTypes[0] === "jsonp")
          return (
            (_ = s.jsonpCallback =
              I(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback),
            D
              ? (s[D] = s[D].replace(Au, "$1" + _))
              : s.jsonp !== !1 &&
                (s.url += (Eu.test(s.url) ? "&" : "?") + s.jsonp + "=" + _),
            (s.converters["script json"] = function () {
              return w || b.error(_ + " was not called"), w[0];
            }),
            (s.dataTypes[0] = "json"),
            (C = n[_]),
            (n[_] = function () {
              w = arguments;
            }),
            g.always(function () {
              C === void 0 ? b(n).removeProp(_) : (n[_] = C),
                s[_] && ((s.jsonpCallback = p.jsonpCallback), og.push(_)),
                w && I(C) && C(w[0]),
                (w = C = void 0);
            }),
            "script"
          );
      }),
      (M.createHTMLDocument = (function () {
        var s = E.implementation.createHTMLDocument("").body;
        return (
          (s.innerHTML = "<form></form><form></form>"),
          s.childNodes.length === 2
        );
      })()),
      (b.parseHTML = function (s, p, g) {
        if (typeof s != "string") return [];
        typeof p == "boolean" && ((g = p), (p = !1));
        var _, C, w;
        return (
          p ||
            (M.createHTMLDocument
              ? ((p = E.implementation.createHTMLDocument("")),
                (_ = p.createElement("base")),
                (_.href = E.location.href),
                p.head.appendChild(_))
              : (p = E)),
          (C = Xr.exec(s)),
          (w = !g && []),
          C
            ? [p.createElement(C[1])]
            : ((C = Ff([s], p, w)),
              w && w.length && b(w).remove(),
              b.merge([], C.childNodes))
        );
      }),
      (b.fn.load = function (s, p, g) {
        var _,
          C,
          w,
          D = this,
          V = s.indexOf(" ");
        return (
          V > -1 && ((_ = eo(s.slice(V))), (s = s.slice(0, V))),
          I(p)
            ? ((g = p), (p = void 0))
            : p && typeof p == "object" && (C = "POST"),
          D.length > 0 &&
            b
              .ajax({ url: s, type: C || "GET", dataType: "html", data: p })
              .done(function (N) {
                (w = arguments),
                  D.html(_ ? b("<div>").append(b.parseHTML(N)).find(_) : N);
              })
              .always(
                g &&
                  function (N, z) {
                    D.each(function () {
                      g.apply(this, w || [N.responseText, z, N]);
                    });
                  }
              ),
          this
        );
      }),
      (b.expr.pseudos.animated = function (s) {
        return b.grep(b.timers, function (p) {
          return s === p.elem;
        }).length;
      }),
      (b.offset = {
        setOffset: function (s, p, g) {
          var _,
            C,
            w,
            D,
            V,
            N,
            z,
            X = b.css(s, "position"),
            ie = b(s),
            q = {};
          X === "static" && (s.style.position = "relative"),
            (V = ie.offset()),
            (w = b.css(s, "top")),
            (N = b.css(s, "left")),
            (z =
              (X === "absolute" || X === "fixed") &&
              (w + N).indexOf("auto") > -1),
            z
              ? ((_ = ie.position()), (D = _.top), (C = _.left))
              : ((D = parseFloat(w) || 0), (C = parseFloat(N) || 0)),
            I(p) && (p = p.call(s, g, b.extend({}, V))),
            p.top != null && (q.top = p.top - V.top + D),
            p.left != null && (q.left = p.left - V.left + C),
            "using" in p ? p.using.call(s, q) : ie.css(q);
        },
      }),
      b.fn.extend({
        offset: function (s) {
          if (arguments.length)
            return s === void 0
              ? this
              : this.each(function (C) {
                  b.offset.setOffset(this, s, C);
                });
          var p,
            g,
            _ = this[0];
          if (_)
            return _.getClientRects().length
              ? ((p = _.getBoundingClientRect()),
                (g = _.ownerDocument.defaultView),
                { top: p.top + g.pageYOffset, left: p.left + g.pageXOffset })
              : { top: 0, left: 0 };
        },
        position: function () {
          if (this[0]) {
            var s,
              p,
              g,
              _ = this[0],
              C = { top: 0, left: 0 };
            if (b.css(_, "position") === "fixed") p = _.getBoundingClientRect();
            else {
              for (
                p = this.offset(),
                  g = _.ownerDocument,
                  s = _.offsetParent || g.documentElement;
                s &&
                (s === g.body || s === g.documentElement) &&
                b.css(s, "position") === "static";

              )
                s = s.parentNode;
              s &&
                s !== _ &&
                s.nodeType === 1 &&
                ((C = b(s).offset()),
                (C.top += b.css(s, "borderTopWidth", !0)),
                (C.left += b.css(s, "borderLeftWidth", !0)));
            }
            return {
              top: p.top - C.top - b.css(_, "marginTop", !0),
              left: p.left - C.left - b.css(_, "marginLeft", !0),
            };
          }
        },
        offsetParent: function () {
          return this.map(function () {
            for (
              var s = this.offsetParent;
              s && b.css(s, "position") === "static";

            )
              s = s.offsetParent;
            return s || Jr;
          });
        },
      }),
      b.each(
        { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
        function (s, p) {
          var g = p === "pageYOffset";
          b.fn[s] = function (_) {
            return rr(
              this,
              function (C, w, D) {
                var V;
                if (
                  (L(C) ? (V = C) : C.nodeType === 9 && (V = C.defaultView),
                  D === void 0)
                )
                  return V ? V[p] : C[w];
                V
                  ? V.scrollTo(g ? V.pageXOffset : D, g ? D : V.pageYOffset)
                  : (C[w] = D);
              },
              s,
              _,
              arguments.length
            );
          };
        }
      ),
      b.each(["top", "left"], function (s, p) {
        b.cssHooks[p] = Hf(M.pixelPosition, function (g, _) {
          if (_)
            return (_ = ja(g, p)), Cu.test(_) ? b(g).position()[p] + "px" : _;
        });
      }),
      b.each({ Height: "height", Width: "width" }, function (s, p) {
        b.each(
          { padding: "inner" + s, content: p, "": "outer" + s },
          function (g, _) {
            b.fn[_] = function (C, w) {
              var D = arguments.length && (g || typeof C != "boolean"),
                V = g || (C === !0 || w === !0 ? "margin" : "border");
              return rr(
                this,
                function (N, z, X) {
                  var ie;
                  return L(N)
                    ? _.indexOf("outer") === 0
                      ? N["inner" + s]
                      : N.document.documentElement["client" + s]
                    : N.nodeType === 9
                    ? ((ie = N.documentElement),
                      Math.max(
                        N.body["scroll" + s],
                        ie["scroll" + s],
                        N.body["offset" + s],
                        ie["offset" + s],
                        ie["client" + s]
                      ))
                    : X === void 0
                    ? b.css(N, z, V)
                    : b.style(N, z, X, V);
                },
                p,
                D ? C : void 0,
                D
              );
            };
          }
        );
      }),
      b.each(
        [
          "ajaxStart",
          "ajaxStop",
          "ajaxComplete",
          "ajaxError",
          "ajaxSuccess",
          "ajaxSend",
        ],
        function (s, p) {
          b.fn[p] = function (g) {
            return this.on(p, g);
          };
        }
      ),
      b.fn.extend({
        bind: function (s, p, g) {
          return this.on(s, null, p, g);
        },
        unbind: function (s, p) {
          return this.off(s, null, p);
        },
        delegate: function (s, p, g, _) {
          return this.on(p, s, g, _);
        },
        undelegate: function (s, p, g) {
          return arguments.length === 1
            ? this.off(s, "**")
            : this.off(p, s || "**", g);
        },
        hover: function (s, p) {
          return this.on("mouseenter", s).on("mouseleave", p || s);
        },
      }),
      b.each(
        "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(
          " "
        ),
        function (s, p) {
          b.fn[p] = function (g, _) {
            return arguments.length > 0
              ? this.on(p, null, g, _)
              : this.trigger(p);
          };
        }
      );
    var vx = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    (b.proxy = function (s, p) {
      var g, _, C;
      if ((typeof p == "string" && ((g = s[p]), (p = s), (s = g)), !!I(s)))
        return (
          (_ = r.call(arguments, 2)),
          (C = function () {
            return s.apply(p || this, _.concat(r.call(arguments)));
          }),
          (C.guid = s.guid = s.guid || b.guid++),
          C
        );
    }),
      (b.holdReady = function (s) {
        s ? b.readyWait++ : b.ready(!0);
      }),
      (b.isArray = Array.isArray),
      (b.parseJSON = JSON.parse),
      (b.nodeName = we),
      (b.isFunction = I),
      (b.isWindow = L),
      (b.camelCase = Rn),
      (b.type = re),
      (b.now = Date.now),
      (b.isNumeric = function (s) {
        var p = b.type(s);
        return (p === "number" || p === "string") && !isNaN(s - parseFloat(s));
      }),
      (b.trim = function (s) {
        return s == null ? "" : (s + "").replace(vx, "$1");
      }),
      typeof define == "function" &&
        define.amd &&
        define("jquery", [], function () {
          return b;
        });
    var yx = n.jQuery,
      xx = n.$;
    return (
      (b.noConflict = function (s) {
        return (
          n.$ === b && (n.$ = xx), s && n.jQuery === b && (n.jQuery = yx), b
        );
      }),
      typeof i > "u" && (n.jQuery = n.$ = b),
      b
    );
  });
});
var as = class {},
  rc = class {},
  Tt = class n {
    constructor(i) {
      (this.normalizedNames = new Map()),
        (this.lazyUpdate = null),
        i
          ? typeof i == "string"
            ? (this.lazyInit = () => {
                (this.headers = new Map()),
                  i
                    .split(
                      `
`
                    )
                    .forEach((e) => {
                      let t = e.indexOf(":");
                      if (t > 0) {
                        let r = e.slice(0, t),
                          o = r.toLowerCase(),
                          a = e.slice(t + 1).trim();
                        this.maybeSetNormalizedName(r, o),
                          this.headers.has(o)
                            ? this.headers.get(o).push(a)
                            : this.headers.set(o, [a]);
                      }
                    });
              })
            : typeof Headers < "u" && i instanceof Headers
            ? ((this.headers = new Map()),
              i.forEach((e, t) => {
                this.setHeaderEntries(t, e);
              }))
            : (this.lazyInit = () => {
                (this.headers = new Map()),
                  Object.entries(i).forEach(([e, t]) => {
                    this.setHeaderEntries(e, t);
                  });
              })
          : (this.headers = new Map());
    }
    has(i) {
      return this.init(), this.headers.has(i.toLowerCase());
    }
    get(i) {
      this.init();
      let e = this.headers.get(i.toLowerCase());
      return e && e.length > 0 ? e[0] : null;
    }
    keys() {
      return this.init(), Array.from(this.normalizedNames.values());
    }
    getAll(i) {
      return this.init(), this.headers.get(i.toLowerCase()) || null;
    }
    append(i, e) {
      return this.clone({ name: i, value: e, op: "a" });
    }
    set(i, e) {
      return this.clone({ name: i, value: e, op: "s" });
    }
    delete(i, e) {
      return this.clone({ name: i, value: e, op: "d" });
    }
    maybeSetNormalizedName(i, e) {
      this.normalizedNames.has(e) || this.normalizedNames.set(e, i);
    }
    init() {
      this.lazyInit &&
        (this.lazyInit instanceof n
          ? this.copyFrom(this.lazyInit)
          : this.lazyInit(),
        (this.lazyInit = null),
        this.lazyUpdate &&
          (this.lazyUpdate.forEach((i) => this.applyUpdate(i)),
          (this.lazyUpdate = null)));
    }
    copyFrom(i) {
      i.init(),
        Array.from(i.headers.keys()).forEach((e) => {
          this.headers.set(e, i.headers.get(e)),
            this.normalizedNames.set(e, i.normalizedNames.get(e));
        });
    }
    clone(i) {
      let e = new n();
      return (
        (e.lazyInit =
          this.lazyInit && this.lazyInit instanceof n ? this.lazyInit : this),
        (e.lazyUpdate = (this.lazyUpdate || []).concat([i])),
        e
      );
    }
    applyUpdate(i) {
      let e = i.name.toLowerCase();
      switch (i.op) {
        case "a":
        case "s":
          let t = i.value;
          if ((typeof t == "string" && (t = [t]), t.length === 0)) return;
          this.maybeSetNormalizedName(i.name, e);
          let r = (i.op === "a" ? this.headers.get(e) : void 0) || [];
          r.push(...t), this.headers.set(e, r);
          break;
        case "d":
          let o = i.value;
          if (!o) this.headers.delete(e), this.normalizedNames.delete(e);
          else {
            let a = this.headers.get(e);
            if (!a) return;
            (a = a.filter((d) => o.indexOf(d) === -1)),
              a.length === 0
                ? (this.headers.delete(e), this.normalizedNames.delete(e))
                : this.headers.set(e, a);
          }
          break;
      }
    }
    setHeaderEntries(i, e) {
      let t = (Array.isArray(e) ? e : [e]).map((o) => o.toString()),
        r = i.toLowerCase();
      this.headers.set(r, t), this.maybeSetNormalizedName(i, r);
    }
    forEach(i) {
      this.init(),
        Array.from(this.normalizedNames.keys()).forEach((e) =>
          i(this.normalizedNames.get(e), this.headers.get(e))
        );
    }
  };
var dh = class {
  encodeKey(i) {
    return e0(i);
  }
  encodeValue(i) {
    return e0(i);
  }
  decodeKey(i) {
    return decodeURIComponent(i);
  }
  decodeValue(i) {
    return decodeURIComponent(i);
  }
};
function Ix(n, i) {
  let e = new Map();
  return (
    n.length > 0 &&
      n
        .replace(/^\?/, "")
        .split("&")
        .forEach((r) => {
          let o = r.indexOf("="),
            [a, d] =
              o == -1
                ? [i.decodeKey(r), ""]
                : [i.decodeKey(r.slice(0, o)), i.decodeValue(r.slice(o + 1))],
            u = e.get(a) || [];
          u.push(d), e.set(a, u);
        }),
    e
  );
}
var Ax = /%(\d[a-f0-9])/gi,
  Rx = {
    40: "@",
    "3A": ":",
    24: "$",
    "2C": ",",
    "3B": ";",
    "3D": "=",
    "3F": "?",
    "2F": "/",
  };
function e0(n) {
  return encodeURIComponent(n).replace(Ax, (i, e) => Rx[e] ?? i);
}
function ic(n) {
  return `${n}`;
}
var Dn = class n {
  constructor(i = {}) {
    if (
      ((this.updates = null),
      (this.cloneFrom = null),
      (this.encoder = i.encoder || new dh()),
      i.fromString)
    ) {
      if (i.fromObject)
        throw new Error("Cannot specify both fromString and fromObject.");
      this.map = Ix(i.fromString, this.encoder);
    } else
      i.fromObject
        ? ((this.map = new Map()),
          Object.keys(i.fromObject).forEach((e) => {
            let t = i.fromObject[e],
              r = Array.isArray(t) ? t.map(ic) : [ic(t)];
            this.map.set(e, r);
          }))
        : (this.map = null);
  }
  has(i) {
    return this.init(), this.map.has(i);
  }
  get(i) {
    this.init();
    let e = this.map.get(i);
    return e ? e[0] : null;
  }
  getAll(i) {
    return this.init(), this.map.get(i) || null;
  }
  keys() {
    return this.init(), Array.from(this.map.keys());
  }
  append(i, e) {
    return this.clone({ param: i, value: e, op: "a" });
  }
  appendAll(i) {
    let e = [];
    return (
      Object.keys(i).forEach((t) => {
        let r = i[t];
        Array.isArray(r)
          ? r.forEach((o) => {
              e.push({ param: t, value: o, op: "a" });
            })
          : e.push({ param: t, value: r, op: "a" });
      }),
      this.clone(e)
    );
  }
  set(i, e) {
    return this.clone({ param: i, value: e, op: "s" });
  }
  delete(i, e) {
    return this.clone({ param: i, value: e, op: "d" });
  }
  toString() {
    return (
      this.init(),
      this.keys()
        .map((i) => {
          let e = this.encoder.encodeKey(i);
          return this.map
            .get(i)
            .map((t) => e + "=" + this.encoder.encodeValue(t))
            .join("&");
        })
        .filter((i) => i !== "")
        .join("&")
    );
  }
  clone(i) {
    let e = new n({ encoder: this.encoder });
    return (
      (e.cloneFrom = this.cloneFrom || this),
      (e.updates = (this.updates || []).concat(i)),
      e
    );
  }
  init() {
    this.map === null && (this.map = new Map()),
      this.cloneFrom !== null &&
        (this.cloneFrom.init(),
        this.cloneFrom
          .keys()
          .forEach((i) => this.map.set(i, this.cloneFrom.map.get(i))),
        this.updates.forEach((i) => {
          switch (i.op) {
            case "a":
            case "s":
              let e = (i.op === "a" ? this.map.get(i.param) : void 0) || [];
              e.push(ic(i.value)), this.map.set(i.param, e);
              break;
            case "d":
              if (i.value !== void 0) {
                let t = this.map.get(i.param) || [],
                  r = t.indexOf(ic(i.value));
                r !== -1 && t.splice(r, 1),
                  t.length > 0
                    ? this.map.set(i.param, t)
                    : this.map.delete(i.param);
              } else {
                this.map.delete(i.param);
                break;
              }
          }
        }),
        (this.cloneFrom = this.updates = null));
  }
};
var uh = class {
  constructor() {
    this.map = new Map();
  }
  set(i, e) {
    return this.map.set(i, e), this;
  }
  get(i) {
    return (
      this.map.has(i) || this.map.set(i, i.defaultValue()), this.map.get(i)
    );
  }
  delete(i) {
    return this.map.delete(i), this;
  }
  has(i) {
    return this.map.has(i);
  }
  keys() {
    return this.map.keys();
  }
};
function Fx(n) {
  switch (n) {
    case "DELETE":
    case "GET":
    case "HEAD":
    case "OPTIONS":
    case "JSONP":
      return !1;
    default:
      return !0;
  }
}
function t0(n) {
  return typeof ArrayBuffer < "u" && n instanceof ArrayBuffer;
}
function i0(n) {
  return typeof Blob < "u" && n instanceof Blob;
}
function n0(n) {
  return typeof FormData < "u" && n instanceof FormData;
}
function Nx(n) {
  return typeof URLSearchParams < "u" && n instanceof URLSearchParams;
}
var os = class n {
    constructor(i, e, t, r) {
      (this.url = e),
        (this.body = null),
        (this.reportProgress = !1),
        (this.withCredentials = !1),
        (this.responseType = "json"),
        (this.method = i.toUpperCase());
      let o;
      if (
        (Fx(this.method) || r
          ? ((this.body = t !== void 0 ? t : null), (o = r))
          : (o = t),
        o &&
          ((this.reportProgress = !!o.reportProgress),
          (this.withCredentials = !!o.withCredentials),
          o.responseType && (this.responseType = o.responseType),
          o.headers && (this.headers = o.headers),
          o.context && (this.context = o.context),
          o.params && (this.params = o.params),
          (this.transferCache = o.transferCache)),
        (this.headers ??= new Tt()),
        (this.context ??= new uh()),
        !this.params)
      )
        (this.params = new Dn()), (this.urlWithParams = e);
      else {
        let a = this.params.toString();
        if (a.length === 0) this.urlWithParams = e;
        else {
          let d = e.indexOf("?"),
            u = d === -1 ? "?" : d < e.length - 1 ? "&" : "";
          this.urlWithParams = e + u + a;
        }
      }
    }
    serializeBody() {
      return this.body === null
        ? null
        : typeof this.body == "string" ||
          t0(this.body) ||
          i0(this.body) ||
          n0(this.body) ||
          Nx(this.body)
        ? this.body
        : this.body instanceof Dn
        ? this.body.toString()
        : typeof this.body == "object" ||
          typeof this.body == "boolean" ||
          Array.isArray(this.body)
        ? JSON.stringify(this.body)
        : this.body.toString();
    }
    detectContentTypeHeader() {
      return this.body === null || n0(this.body)
        ? null
        : i0(this.body)
        ? this.body.type || null
        : t0(this.body)
        ? null
        : typeof this.body == "string"
        ? "text/plain"
        : this.body instanceof Dn
        ? "application/x-www-form-urlencoded;charset=UTF-8"
        : typeof this.body == "object" ||
          typeof this.body == "number" ||
          typeof this.body == "boolean"
        ? "application/json"
        : null;
    }
    clone(i = {}) {
      let e = i.method || this.method,
        t = i.url || this.url,
        r = i.responseType || this.responseType,
        o = i.transferCache ?? this.transferCache,
        a = i.body !== void 0 ? i.body : this.body,
        d = i.withCredentials ?? this.withCredentials,
        u = i.reportProgress ?? this.reportProgress,
        f = i.headers || this.headers,
        v = i.params || this.params,
        S = i.context ?? this.context;
      return (
        i.setHeaders !== void 0 &&
          (f = Object.keys(i.setHeaders).reduce(
            (T, M) => T.set(M, i.setHeaders[M]),
            f
          )),
        i.setParams &&
          (v = Object.keys(i.setParams).reduce(
            (T, M) => T.set(M, i.setParams[M]),
            v
          )),
        new n(e, t, a, {
          params: v,
          headers: f,
          context: S,
          reportProgress: u,
          responseType: r,
          withCredentials: d,
          transferCache: o,
        })
      );
    }
  },
  Ar = (function (n) {
    return (
      (n[(n.Sent = 0)] = "Sent"),
      (n[(n.UploadProgress = 1)] = "UploadProgress"),
      (n[(n.ResponseHeader = 2)] = "ResponseHeader"),
      (n[(n.DownloadProgress = 3)] = "DownloadProgress"),
      (n[(n.Response = 4)] = "Response"),
      (n[(n.User = 5)] = "User"),
      n
    );
  })(Ar || {}),
  ss = class {
    constructor(i, e = 200, t = "OK") {
      (this.headers = i.headers || new Tt()),
        (this.status = i.status !== void 0 ? i.status : e),
        (this.statusText = i.statusText || t),
        (this.url = i.url || null),
        (this.ok = this.status >= 200 && this.status < 300);
    }
  },
  oc = class n extends ss {
    constructor(i = {}) {
      super(i), (this.type = Ar.ResponseHeader);
    }
    clone(i = {}) {
      return new n({
        headers: i.headers || this.headers,
        status: i.status !== void 0 ? i.status : this.status,
        statusText: i.statusText || this.statusText,
        url: i.url || this.url || void 0,
      });
    }
  },
  co = class n extends ss {
    constructor(i = {}) {
      super(i),
        (this.type = Ar.Response),
        (this.body = i.body !== void 0 ? i.body : null);
    }
    clone(i = {}) {
      return new n({
        body: i.body !== void 0 ? i.body : this.body,
        headers: i.headers || this.headers,
        status: i.status !== void 0 ? i.status : this.status,
        statusText: i.statusText || this.statusText,
        url: i.url || this.url || void 0,
      });
    }
  },
  Ir = class extends ss {
    constructor(i) {
      super(i, 0, "Unknown Error"),
        (this.name = "HttpErrorResponse"),
        (this.ok = !1),
        this.status >= 200 && this.status < 300
          ? (this.message = `Http failure during parsing for ${
              i.url || "(unknown url)"
            }`)
          : (this.message = `Http failure response for ${
              i.url || "(unknown url)"
            }: ${i.status} ${i.statusText}`),
        (this.error = i.error || null);
    }
  },
  f0 = 200,
  Lx = 204;
function ch(n, i) {
  return {
    body: i,
    headers: n.headers,
    context: n.context,
    observe: n.observe,
    params: n.params,
    reportProgress: n.reportProgress,
    responseType: n.responseType,
    withCredentials: n.withCredentials,
    transferCache: n.transferCache,
  };
}
var jt = (() => {
    class n {
      constructor(e) {
        this.handler = e;
      }
      request(e, t, r = {}) {
        let o;
        if (e instanceof os) o = e;
        else {
          let u;
          r.headers instanceof Tt ? (u = r.headers) : (u = new Tt(r.headers));
          let f;
          r.params &&
            (r.params instanceof Dn
              ? (f = r.params)
              : (f = new Dn({ fromObject: r.params }))),
            (o = new os(e, t, r.body !== void 0 ? r.body : null, {
              headers: u,
              context: r.context,
              params: f,
              reportProgress: r.reportProgress,
              responseType: r.responseType || "json",
              withCredentials: r.withCredentials,
              transferCache: r.transferCache,
            }));
        }
        let a = fe(o).pipe(Mr((u) => this.handler.handle(u)));
        if (e instanceof os || r.observe === "events") return a;
        let d = a.pipe(St((u) => u instanceof co));
        switch (r.observe || "body") {
          case "body":
            switch (o.responseType) {
              case "arraybuffer":
                return d.pipe(
                  Ke((u) => {
                    if (u.body !== null && !(u.body instanceof ArrayBuffer))
                      throw new Error("Response is not an ArrayBuffer.");
                    return u.body;
                  })
                );
              case "blob":
                return d.pipe(
                  Ke((u) => {
                    if (u.body !== null && !(u.body instanceof Blob))
                      throw new Error("Response is not a Blob.");
                    return u.body;
                  })
                );
              case "text":
                return d.pipe(
                  Ke((u) => {
                    if (u.body !== null && typeof u.body != "string")
                      throw new Error("Response is not a string.");
                    return u.body;
                  })
                );
              case "json":
              default:
                return d.pipe(Ke((u) => u.body));
            }
          case "response":
            return d;
          default:
            throw new Error(
              `Unreachable: unhandled observe type ${r.observe}}`
            );
        }
      }
      delete(e, t = {}) {
        return this.request("DELETE", e, t);
      }
      get(e, t = {}) {
        return this.request("GET", e, t);
      }
      head(e, t = {}) {
        return this.request("HEAD", e, t);
      }
      jsonp(e, t) {
        return this.request("JSONP", e, {
          params: new Dn().append(t, "JSONP_CALLBACK"),
          observe: "body",
          responseType: "json",
        });
      }
      options(e, t = {}) {
        return this.request("OPTIONS", e, t);
      }
      patch(e, t, r = {}) {
        return this.request("PATCH", e, ch(r, t));
      }
      post(e, t, r = {}) {
        return this.request("POST", e, ch(r, t));
      }
      put(e, t, r = {}) {
        return this.request("PUT", e, ch(r, t));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(as));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  Vx = /^\)\]\}',?\n/,
  Bx = "X-Request-URL";
function r0(n) {
  if (n.url) return n.url;
  let i = Bx.toLocaleLowerCase();
  return n.headers.get(i);
}
var jx = (() => {
    class n {
      constructor() {
        (this.fetchImpl =
          W(hh, { optional: !0 })?.fetch ?? ((...e) => globalThis.fetch(...e))),
          (this.ngZone = W(Me));
      }
      handle(e) {
        return new jn((t) => {
          let r = new AbortController();
          return (
            this.doRequest(e, r.signal, t).then(ph, (o) =>
              t.error(new Ir({ error: o }))
            ),
            () => r.abort()
          );
        });
      }
      doRequest(e, t, r) {
        return zo(this, null, function* () {
          let o = this.createRequestInit(e),
            a;
          try {
            let M = this.ngZone.runOutsideAngular(() =>
              this.fetchImpl(e.urlWithParams, G({ signal: t }, o))
            );
            Hx(M), r.next({ type: Ar.Sent }), (a = yield M);
          } catch (M) {
            r.error(
              new Ir({
                error: M,
                status: M.status ?? 0,
                statusText: M.statusText,
                url: e.urlWithParams,
                headers: M.headers,
              })
            );
            return;
          }
          let d = new Tt(a.headers),
            u = a.statusText,
            f = r0(a) ?? e.urlWithParams,
            v = a.status,
            S = null;
          if (
            (e.reportProgress &&
              r.next(new oc({ headers: d, status: v, statusText: u, url: f })),
            a.body)
          ) {
            let M = a.headers.get("content-length"),
              I = [],
              L = a.body.getReader(),
              E = 0,
              F,
              ee,
              re = typeof Zone < "u" && Zone.current;
            yield this.ngZone.runOutsideAngular(() =>
              zo(this, null, function* () {
                for (;;) {
                  let { done: Pe, value: b } = yield L.read();
                  if (Pe) break;
                  if ((I.push(b), (E += b.length), e.reportProgress)) {
                    ee =
                      e.responseType === "text"
                        ? (ee ?? "") +
                          (F ??= new TextDecoder()).decode(b, { stream: !0 })
                        : void 0;
                    let Ue = () =>
                      r.next({
                        type: Ar.DownloadProgress,
                        total: M ? +M : void 0,
                        loaded: E,
                        partialText: ee,
                      });
                    re ? re.run(Ue) : Ue();
                  }
                }
              })
            );
            let ge = this.concatChunks(I, E);
            try {
              let Pe = a.headers.get("Content-Type") ?? "";
              S = this.parseBody(e, ge, Pe);
            } catch (Pe) {
              r.error(
                new Ir({
                  error: Pe,
                  headers: new Tt(a.headers),
                  status: a.status,
                  statusText: a.statusText,
                  url: r0(a) ?? e.urlWithParams,
                })
              );
              return;
            }
          }
          v === 0 && (v = S ? f0 : 0),
            v >= 200 && v < 300
              ? (r.next(
                  new co({
                    body: S,
                    headers: d,
                    status: v,
                    statusText: u,
                    url: f,
                  })
                ),
                r.complete())
              : r.error(
                  new Ir({
                    error: S,
                    headers: d,
                    status: v,
                    statusText: u,
                    url: f,
                  })
                );
        });
      }
      parseBody(e, t, r) {
        switch (e.responseType) {
          case "json":
            let o = new TextDecoder().decode(t).replace(Vx, "");
            return o === "" ? null : JSON.parse(o);
          case "text":
            return new TextDecoder().decode(t);
          case "blob":
            return new Blob([t], { type: r });
          case "arraybuffer":
            return t.buffer;
        }
      }
      createRequestInit(e) {
        let t = {},
          r = e.withCredentials ? "include" : void 0;
        if (
          (e.headers.forEach((o, a) => (t[o] = a.join(","))),
          e.headers.has("Accept") ||
            (t.Accept = "application/json, text/plain, */*"),
          !e.headers.has("Content-Type"))
        ) {
          let o = e.detectContentTypeHeader();
          o !== null && (t["Content-Type"] = o);
        }
        return {
          body: e.serializeBody(),
          method: e.method,
          headers: t,
          credentials: r,
        };
      }
      concatChunks(e, t) {
        let r = new Uint8Array(t),
          o = 0;
        for (let a of e) r.set(a, o), (o += a.length);
        return r;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  hh = class {};
function ph() {}
function Hx(n) {
  n.then(ph, ph);
}
function g0(n, i) {
  return i(n);
}
function Ux(n, i) {
  return (e, t) => i.intercept(e, { handle: (r) => n(r, t) });
}
function zx(n, i, e) {
  return (t, r) => sn(e, () => i(t, (o) => n(o, r)));
}
var $x = new Ce(""),
  mh = new Ce(""),
  _0 = new Ce(""),
  b0 = new Ce("", { providedIn: "root", factory: () => !0 });
function Wx() {
  let n = null;
  return (i, e) => {
    n === null && (n = (W($x, { optional: !0 }) ?? []).reduceRight(Ux, g0));
    let t = W(Za);
    if (W(b0)) {
      let o = t.add();
      return n(i, e).pipe(Tr(() => t.remove(o)));
    } else return n(i, e);
  };
}
var o0 = (() => {
  class n extends as {
    constructor(e, t) {
      super(),
        (this.backend = e),
        (this.injector = t),
        (this.chain = null),
        (this.pendingTasks = W(Za)),
        (this.contributeToStability = W(b0));
    }
    handle(e) {
      if (this.chain === null) {
        let t = Array.from(
          new Set([...this.injector.get(mh), ...this.injector.get(_0, [])])
        );
        this.chain = t.reduceRight((r, o) => zx(r, o, this.injector), g0);
      }
      if (this.contributeToStability) {
        let t = this.pendingTasks.add();
        return this.chain(e, (r) => this.backend.handle(r)).pipe(
          Tr(() => this.pendingTasks.remove(t))
        );
      } else return this.chain(e, (t) => this.backend.handle(t));
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(rc), Q(an));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac });
    }
  }
  return n;
})();
var Gx = /^\)\]\}',?\n/;
function Yx(n) {
  return "responseURL" in n && n.responseURL
    ? n.responseURL
    : /^X-Request-URL:/m.test(n.getAllResponseHeaders())
    ? n.getResponseHeader("X-Request-URL")
    : null;
}
var a0 = (() => {
    class n {
      constructor(e) {
        this.xhrFactory = e;
      }
      handle(e) {
        if (e.method === "JSONP") throw new pt(-2800, !1);
        let t = this.xhrFactory;
        return (t.ɵloadImpl ? ui(t.ɵloadImpl()) : fe(null)).pipe(
          Ci(
            () =>
              new jn((o) => {
                let a = t.build();
                if (
                  (a.open(e.method, e.urlWithParams),
                  e.withCredentials && (a.withCredentials = !0),
                  e.headers.forEach((L, E) =>
                    a.setRequestHeader(L, E.join(","))
                  ),
                  e.headers.has("Accept") ||
                    a.setRequestHeader(
                      "Accept",
                      "application/json, text/plain, */*"
                    ),
                  !e.headers.has("Content-Type"))
                ) {
                  let L = e.detectContentTypeHeader();
                  L !== null && a.setRequestHeader("Content-Type", L);
                }
                if (e.responseType) {
                  let L = e.responseType.toLowerCase();
                  a.responseType = L !== "json" ? L : "text";
                }
                let d = e.serializeBody(),
                  u = null,
                  f = () => {
                    if (u !== null) return u;
                    let L = a.statusText || "OK",
                      E = new Tt(a.getAllResponseHeaders()),
                      F = Yx(a) || e.url;
                    return (
                      (u = new oc({
                        headers: E,
                        status: a.status,
                        statusText: L,
                        url: F,
                      })),
                      u
                    );
                  },
                  v = () => {
                    let { headers: L, status: E, statusText: F, url: ee } = f(),
                      re = null;
                    E !== Lx &&
                      (re =
                        typeof a.response > "u" ? a.responseText : a.response),
                      E === 0 && (E = re ? f0 : 0);
                    let ge = E >= 200 && E < 300;
                    if (e.responseType === "json" && typeof re == "string") {
                      let Pe = re;
                      re = re.replace(Gx, "");
                      try {
                        re = re !== "" ? JSON.parse(re) : null;
                      } catch (b) {
                        (re = Pe),
                          ge && ((ge = !1), (re = { error: b, text: re }));
                      }
                    }
                    ge
                      ? (o.next(
                          new co({
                            body: re,
                            headers: L,
                            status: E,
                            statusText: F,
                            url: ee || void 0,
                          })
                        ),
                        o.complete())
                      : o.error(
                          new Ir({
                            error: re,
                            headers: L,
                            status: E,
                            statusText: F,
                            url: ee || void 0,
                          })
                        );
                  },
                  S = (L) => {
                    let { url: E } = f(),
                      F = new Ir({
                        error: L,
                        status: a.status || 0,
                        statusText: a.statusText || "Unknown Error",
                        url: E || void 0,
                      });
                    o.error(F);
                  },
                  T = !1,
                  M = (L) => {
                    T || (o.next(f()), (T = !0));
                    let E = { type: Ar.DownloadProgress, loaded: L.loaded };
                    L.lengthComputable && (E.total = L.total),
                      e.responseType === "text" &&
                        a.responseText &&
                        (E.partialText = a.responseText),
                      o.next(E);
                  },
                  I = (L) => {
                    let E = { type: Ar.UploadProgress, loaded: L.loaded };
                    L.lengthComputable && (E.total = L.total), o.next(E);
                  };
                return (
                  a.addEventListener("load", v),
                  a.addEventListener("error", S),
                  a.addEventListener("timeout", S),
                  a.addEventListener("abort", S),
                  e.reportProgress &&
                    (a.addEventListener("progress", M),
                    d !== null &&
                      a.upload &&
                      a.upload.addEventListener("progress", I)),
                  a.send(d),
                  o.next({ type: Ar.Sent }),
                  () => {
                    a.removeEventListener("error", S),
                      a.removeEventListener("abort", S),
                      a.removeEventListener("load", v),
                      a.removeEventListener("timeout", S),
                      e.reportProgress &&
                        (a.removeEventListener("progress", M),
                        d !== null &&
                          a.upload &&
                          a.upload.removeEventListener("progress", I)),
                      a.readyState !== a.DONE && a.abort();
                  }
                );
              })
          )
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(tc));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  v0 = new Ce(""),
  qx = "XSRF-TOKEN",
  Kx = new Ce("", { providedIn: "root", factory: () => qx }),
  Qx = "X-XSRF-TOKEN",
  Xx = new Ce("", { providedIn: "root", factory: () => Qx }),
  ac = class {},
  Zx = (() => {
    class n {
      constructor(e, t, r) {
        (this.doc = e),
          (this.platform = t),
          (this.cookieName = r),
          (this.lastCookieString = ""),
          (this.lastToken = null),
          (this.parseCount = 0);
      }
      getToken() {
        if (this.platform === "server") return null;
        let e = this.doc.cookie || "";
        return (
          e !== this.lastCookieString &&
            (this.parseCount++,
            (this.lastToken = Zl(e, this.cookieName)),
            (this.lastCookieString = e)),
          this.lastToken
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Oe), Q(si), Q(Kx));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function Jx(n, i) {
  let e = n.url.toLowerCase();
  if (
    !W(v0) ||
    n.method === "GET" ||
    n.method === "HEAD" ||
    e.startsWith("http://") ||
    e.startsWith("https://")
  )
    return i(n);
  let t = W(ac).getToken(),
    r = W(Xx);
  return (
    t != null &&
      !n.headers.has(r) &&
      (n = n.clone({ headers: n.headers.set(r, t) })),
    i(n)
  );
}
var y0 = (function (n) {
  return (
    (n[(n.Interceptors = 0)] = "Interceptors"),
    (n[(n.LegacyInterceptors = 1)] = "LegacyInterceptors"),
    (n[(n.CustomXsrfConfiguration = 2)] = "CustomXsrfConfiguration"),
    (n[(n.NoXsrfProtection = 3)] = "NoXsrfProtection"),
    (n[(n.JsonpSupport = 4)] = "JsonpSupport"),
    (n[(n.RequestsMadeViaParent = 5)] = "RequestsMadeViaParent"),
    (n[(n.Fetch = 6)] = "Fetch"),
    n
  );
})(y0 || {});
function eC(n, i) {
  return { ɵkind: n, ɵproviders: i };
}
function fh(...n) {
  let i = [
    jt,
    a0,
    o0,
    { provide: as, useExisting: o0 },
    { provide: rc, useFactory: () => W(jx, { optional: !0 }) ?? W(a0) },
    { provide: mh, useValue: Jx, multi: !0 },
    { provide: v0, useValue: !0 },
    { provide: ac, useClass: Zx },
  ];
  for (let e of n) i.push(...e.ɵproviders);
  return zn(i);
}
var s0 = new Ce("");
function tC() {
  return eC(y0.LegacyInterceptors, [
    { provide: s0, useFactory: Wx },
    { provide: mh, useExisting: s0, multi: !0 },
  ]);
}
var sc = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ providers: [fh(tC())] });
    }
  }
  return n;
})();
var iC = new Ce(""),
  l0 = "b",
  c0 = "h",
  d0 = "s",
  u0 = "st",
  h0 = "u",
  p0 = "rt",
  nc = new Ce(""),
  nC = ["GET", "HEAD"];
function rC(n, i) {
  let M = W(nc),
    { isCacheActive: e } = M,
    t = cg(M, ["isCacheActive"]),
    { transferCache: r, method: o } = n;
  if (
    !e ||
    r === !1 ||
    (o === "POST" && !t.includePostRequests && !r) ||
    (o !== "POST" && !nC.includes(o)) ||
    (!t.includeRequestsWithAuthHeaders && oC(n)) ||
    t.filter?.(n) === !1
  )
    return i(n);
  let a = W(Zu),
    d = W(iC, { optional: !0 }),
    u = rs(W(si));
  if (d && !u) throw new pt(2803, !1);
  let f = u && d ? cC(n.url, d) : n.url,
    v = sC(n, f),
    S = a.get(v, null),
    T = t.includeHeaders;
  if ((typeof r == "object" && r.includeHeaders && (T = r.includeHeaders), S)) {
    let { [l0]: I, [p0]: L, [c0]: E, [d0]: F, [u0]: ee, [h0]: re } = S,
      ge = I;
    switch (L) {
      case "arraybuffer":
        ge = new TextEncoder().encode(I).buffer;
        break;
      case "blob":
        ge = new Blob([I]);
        break;
    }
    let Pe = new Tt(E);
    return fe(
      new co({ body: ge, headers: Pe, status: F, statusText: ee, url: re })
    );
  }
  return i(n).pipe(
    Xt((I) => {
      I instanceof co &&
        u &&
        a.set(v, {
          [l0]: I.body,
          [c0]: aC(I.headers, T),
          [d0]: I.status,
          [u0]: I.statusText,
          [h0]: f,
          [p0]: n.responseType,
        });
    })
  );
}
function oC(n) {
  return n.headers.has("authorization") || n.headers.has("proxy-authorization");
}
function aC(n, i) {
  if (!i) return {};
  let e = {};
  for (let t of i) {
    let r = n.getAll(t);
    r !== null && (e[t] = r);
  }
  return e;
}
function m0(n) {
  return [...n.keys()]
    .sort()
    .map((i) => `${i}=${n.getAll(i)}`)
    .join("&");
}
function sC(n, i) {
  let { params: e, method: t, responseType: r } = n,
    o = m0(e),
    a = n.serializeBody();
  a instanceof URLSearchParams ? (a = m0(a)) : typeof a != "string" && (a = "");
  let d = [t, r, i, a, o].join("|"),
    u = lC(d);
  return u;
}
function lC(n) {
  let i = 0;
  for (let e of n) i = (Math.imul(31, i) + e.charCodeAt(0)) << 0;
  return (i += 2147483648), i.toString();
}
function x0(n) {
  return [
    {
      provide: nc,
      useFactory: () => (
        Gl("NgHttpTransferCache"), G({ isCacheActive: !0 }, n)
      ),
    },
    { provide: _0, useValue: rC, multi: !0, deps: [Zu, nc] },
    {
      provide: is,
      multi: !0,
      useFactory: () => {
        let i = W(Ni),
          e = W(nc);
        return () => {
          jg(i).then(() => {
            e.isCacheActive = !1;
          });
        };
      },
    },
  ];
}
function cC(n, i) {
  let e = new URL(n, "resolve://").origin,
    t = i[e];
  return t ? n.replace(e, t) : n;
}
var bh = class extends Gg {
    constructor() {
      super(...arguments), (this.supportsDOMEvents = !0);
    }
  },
  vh = class n extends bh {
    static makeCurrent() {
      Wg(new n());
    }
    onAndCancel(i, e, t) {
      return (
        i.addEventListener(e, t),
        () => {
          i.removeEventListener(e, t);
        }
      );
    }
    dispatchEvent(i, e) {
      i.dispatchEvent(e);
    }
    remove(i) {
      i.remove();
    }
    createElement(i, e) {
      return (e = e || this.getDefaultDocument()), e.createElement(i);
    }
    createHtmlDocument() {
      return document.implementation.createHTMLDocument("fakeTitle");
    }
    getDefaultDocument() {
      return document;
    }
    isElementNode(i) {
      return i.nodeType === Node.ELEMENT_NODE;
    }
    isShadowRoot(i) {
      return i instanceof DocumentFragment;
    }
    getGlobalEventTarget(i, e) {
      return e === "window"
        ? window
        : e === "document"
        ? i
        : e === "body"
        ? i.body
        : null;
    }
    getBaseHref(i) {
      let e = uC();
      return e == null ? null : hC(e);
    }
    resetBaseElement() {
      ls = null;
    }
    getUserAgent() {
      return window.navigator.userAgent;
    }
    getCookie(i) {
      return Zl(document.cookie, i);
    }
  },
  ls = null;
function uC() {
  return (
    (ls = ls || document.querySelector("base")),
    ls ? ls.getAttribute("href") : null
  );
}
function hC(n) {
  return new URL(n, document.baseURI).pathname;
}
var pC = (() => {
    class n {
      build() {
        return new XMLHttpRequest();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  yh = new Ce(""),
  S0 = (() => {
    class n {
      constructor(e, t) {
        (this._zone = t),
          (this._eventNameToPlugin = new Map()),
          e.forEach((r) => {
            r.manager = this;
          }),
          (this._plugins = e.slice().reverse());
      }
      addEventListener(e, t, r) {
        return this._findPluginFor(t).addEventListener(e, t, r);
      }
      getZone() {
        return this._zone;
      }
      _findPluginFor(e) {
        let t = this._eventNameToPlugin.get(e);
        if (t) return t;
        if (((t = this._plugins.find((o) => o.supports(e))), !t))
          throw new pt(5101, !1);
        return this._eventNameToPlugin.set(e, t), t;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(yh), Q(Me));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  lc = class {
    constructor(i) {
      this._doc = i;
    }
  },
  gh = "ng-app-id",
  D0 = (() => {
    class n {
      constructor(e, t, r, o = {}) {
        (this.doc = e),
          (this.appId = t),
          (this.nonce = r),
          (this.platformId = o),
          (this.styleRef = new Map()),
          (this.hostNodes = new Set()),
          (this.styleNodesInDOM = this.collectServerRenderedStyles()),
          (this.platformIsServer = rs(o)),
          this.resetHostNodes();
      }
      addStyles(e) {
        for (let t of e)
          this.changeUsageCount(t, 1) === 1 && this.onStyleAdded(t);
      }
      removeStyles(e) {
        for (let t of e)
          this.changeUsageCount(t, -1) <= 0 && this.onStyleRemoved(t);
      }
      ngOnDestroy() {
        let e = this.styleNodesInDOM;
        e && (e.forEach((t) => t.remove()), e.clear());
        for (let t of this.getAllStyles()) this.onStyleRemoved(t);
        this.resetHostNodes();
      }
      addHost(e) {
        this.hostNodes.add(e);
        for (let t of this.getAllStyles()) this.addStyleToHost(e, t);
      }
      removeHost(e) {
        this.hostNodes.delete(e);
      }
      getAllStyles() {
        return this.styleRef.keys();
      }
      onStyleAdded(e) {
        for (let t of this.hostNodes) this.addStyleToHost(t, e);
      }
      onStyleRemoved(e) {
        let t = this.styleRef;
        t.get(e)?.elements?.forEach((r) => r.remove()), t.delete(e);
      }
      collectServerRenderedStyles() {
        let e = this.doc.head?.querySelectorAll(`style[${gh}="${this.appId}"]`);
        if (e?.length) {
          let t = new Map();
          return (
            e.forEach((r) => {
              r.textContent != null && t.set(r.textContent, r);
            }),
            t
          );
        }
        return null;
      }
      changeUsageCount(e, t) {
        let r = this.styleRef;
        if (r.has(e)) {
          let o = r.get(e);
          return (o.usage += t), o.usage;
        }
        return r.set(e, { usage: t, elements: [] }), t;
      }
      getStyleElement(e, t) {
        let r = this.styleNodesInDOM,
          o = r?.get(t);
        if (o?.parentNode === e) return r.delete(t), o.removeAttribute(gh), o;
        {
          let a = this.doc.createElement("style");
          return (
            this.nonce && a.setAttribute("nonce", this.nonce),
            (a.textContent = t),
            this.platformIsServer && a.setAttribute(gh, this.appId),
            e.appendChild(a),
            a
          );
        }
      }
      addStyleToHost(e, t) {
        let r = this.getStyleElement(e, t),
          o = this.styleRef,
          a = o.get(t)?.elements;
        a ? a.push(r) : o.set(t, { elements: [r], usage: 1 });
      }
      resetHostNodes() {
        let e = this.hostNodes;
        e.clear(), e.add(this.doc.head);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Oe), Q($l), Q(Ja, 8), Q(si));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  _h = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: "http://www.w3.org/1999/xhtml",
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/",
    math: "http://www.w3.org/1998/Math/MathML",
  },
  Sh = /%COMP%/g,
  M0 = "%COMP%",
  mC = `_nghost-${M0}`,
  fC = `_ngcontent-${M0}`,
  gC = !0,
  _C = new Ce("", { providedIn: "root", factory: () => gC });
function bC(n) {
  return fC.replace(Sh, n);
}
function vC(n) {
  return mC.replace(Sh, n);
}
function T0(n, i) {
  return i.map((e) => e.replace(Sh, n));
}
var cc = (() => {
    class n {
      constructor(e, t, r, o, a, d, u, f = null) {
        (this.eventManager = e),
          (this.sharedStylesHost = t),
          (this.appId = r),
          (this.removeStylesOnCompDestroy = o),
          (this.doc = a),
          (this.platformId = d),
          (this.ngZone = u),
          (this.nonce = f),
          (this.rendererByCompId = new Map()),
          (this.platformIsServer = rs(d)),
          (this.defaultRenderer = new cs(e, a, u, this.platformIsServer));
      }
      createRenderer(e, t) {
        if (!e || !t) return this.defaultRenderer;
        this.platformIsServer &&
          t.encapsulation === Xa.ShadowDom &&
          (t = Te(G({}, t), { encapsulation: Xa.Emulated }));
        let r = this.getOrCreateRenderer(e, t);
        return (
          r instanceof dc
            ? r.applyToHost(e)
            : r instanceof ds && r.applyStyles(),
          r
        );
      }
      getOrCreateRenderer(e, t) {
        let r = this.rendererByCompId,
          o = r.get(t.id);
        if (!o) {
          let a = this.doc,
            d = this.ngZone,
            u = this.eventManager,
            f = this.sharedStylesHost,
            v = this.removeStylesOnCompDestroy,
            S = this.platformIsServer;
          switch (t.encapsulation) {
            case Xa.Emulated:
              o = new dc(u, f, t, this.appId, v, a, d, S);
              break;
            case Xa.ShadowDom:
              return new xh(u, f, e, t, a, d, this.nonce, S);
            default:
              o = new ds(u, f, t, v, a, d, S);
              break;
          }
          r.set(t.id, o);
        }
        return o;
      }
      ngOnDestroy() {
        this.rendererByCompId.clear();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            Q(S0),
            Q(D0),
            Q($l),
            Q(_C),
            Q(Oe),
            Q(si),
            Q(Me),
            Q(Ja)
          );
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  cs = class {
    constructor(i, e, t, r) {
      (this.eventManager = i),
        (this.doc = e),
        (this.ngZone = t),
        (this.platformIsServer = r),
        (this.data = Object.create(null)),
        (this.throwOnSyntheticProps = !0),
        (this.destroyNode = null);
    }
    destroy() {}
    createElement(i, e) {
      return e
        ? this.doc.createElementNS(_h[e] || e, i)
        : this.doc.createElement(i);
    }
    createComment(i) {
      return this.doc.createComment(i);
    }
    createText(i) {
      return this.doc.createTextNode(i);
    }
    appendChild(i, e) {
      (C0(i) ? i.content : i).appendChild(e);
    }
    insertBefore(i, e, t) {
      i && (C0(i) ? i.content : i).insertBefore(e, t);
    }
    removeChild(i, e) {
      e.remove();
    }
    selectRootElement(i, e) {
      let t = typeof i == "string" ? this.doc.querySelector(i) : i;
      if (!t) throw new pt(-5104, !1);
      return e || (t.textContent = ""), t;
    }
    parentNode(i) {
      return i.parentNode;
    }
    nextSibling(i) {
      return i.nextSibling;
    }
    setAttribute(i, e, t, r) {
      if (r) {
        e = r + ":" + e;
        let o = _h[r];
        o ? i.setAttributeNS(o, e, t) : i.setAttribute(e, t);
      } else i.setAttribute(e, t);
    }
    removeAttribute(i, e, t) {
      if (t) {
        let r = _h[t];
        r ? i.removeAttributeNS(r, e) : i.removeAttribute(`${t}:${e}`);
      } else i.removeAttribute(e);
    }
    addClass(i, e) {
      i.classList.add(e);
    }
    removeClass(i, e) {
      i.classList.remove(e);
    }
    setStyle(i, e, t, r) {
      r & (ts.DashCase | ts.Important)
        ? i.style.setProperty(e, t, r & ts.Important ? "important" : "")
        : (i.style[e] = t);
    }
    removeStyle(i, e, t) {
      t & ts.DashCase ? i.style.removeProperty(e) : (i.style[e] = "");
    }
    setProperty(i, e, t) {
      i != null && (i[e] = t);
    }
    setValue(i, e) {
      i.nodeValue = e;
    }
    listen(i, e, t) {
      if (
        typeof i == "string" &&
        ((i = Zo().getGlobalEventTarget(this.doc, i)), !i)
      )
        throw new Error(`Unsupported event target ${i} for event ${e}`);
      return this.eventManager.addEventListener(
        i,
        e,
        this.decoratePreventDefault(t)
      );
    }
    decoratePreventDefault(i) {
      return (e) => {
        if (e === "__ngUnwrap__") return i;
        (this.platformIsServer ? this.ngZone.runGuarded(() => i(e)) : i(e)) ===
          !1 && e.preventDefault();
      };
    }
  };
function C0(n) {
  return n.tagName === "TEMPLATE" && n.content !== void 0;
}
var xh = class extends cs {
    constructor(i, e, t, r, o, a, d, u) {
      super(i, o, a, u),
        (this.sharedStylesHost = e),
        (this.hostEl = t),
        (this.shadowRoot = t.attachShadow({ mode: "open" })),
        this.sharedStylesHost.addHost(this.shadowRoot);
      let f = T0(r.id, r.styles);
      for (let v of f) {
        let S = document.createElement("style");
        d && S.setAttribute("nonce", d),
          (S.textContent = v),
          this.shadowRoot.appendChild(S);
      }
    }
    nodeOrShadowRoot(i) {
      return i === this.hostEl ? this.shadowRoot : i;
    }
    appendChild(i, e) {
      return super.appendChild(this.nodeOrShadowRoot(i), e);
    }
    insertBefore(i, e, t) {
      return super.insertBefore(this.nodeOrShadowRoot(i), e, t);
    }
    removeChild(i, e) {
      return super.removeChild(null, e);
    }
    parentNode(i) {
      return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(i)));
    }
    destroy() {
      this.sharedStylesHost.removeHost(this.shadowRoot);
    }
  },
  ds = class extends cs {
    constructor(i, e, t, r, o, a, d, u) {
      super(i, o, a, d),
        (this.sharedStylesHost = e),
        (this.removeStylesOnCompDestroy = r),
        (this.styles = u ? T0(u, t.styles) : t.styles);
    }
    applyStyles() {
      this.sharedStylesHost.addStyles(this.styles);
    }
    destroy() {
      this.removeStylesOnCompDestroy &&
        this.sharedStylesHost.removeStyles(this.styles);
    }
  },
  dc = class extends ds {
    constructor(i, e, t, r, o, a, d, u) {
      let f = r + "-" + t.id;
      super(i, e, t, o, a, d, u, f),
        (this.contentAttr = bC(f)),
        (this.hostAttr = vC(f));
    }
    applyToHost(i) {
      this.applyStyles(), this.setAttribute(i, this.hostAttr, "");
    }
    createElement(i, e) {
      let t = super.createElement(i, e);
      return super.setAttribute(t, this.contentAttr, ""), t;
    }
  },
  yC = (() => {
    class n extends lc {
      constructor(e) {
        super(e);
      }
      supports(e) {
        return !0;
      }
      addEventListener(e, t, r) {
        return (
          e.addEventListener(t, r, !1), () => this.removeEventListener(e, t, r)
        );
      }
      removeEventListener(e, t, r) {
        return e.removeEventListener(t, r);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Oe));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  w0 = ["alt", "control", "meta", "shift"],
  xC = {
    "\b": "Backspace",
    "	": "Tab",
    "\x7F": "Delete",
    "\x1B": "Escape",
    Del: "Delete",
    Esc: "Escape",
    Left: "ArrowLeft",
    Right: "ArrowRight",
    Up: "ArrowUp",
    Down: "ArrowDown",
    Menu: "ContextMenu",
    Scroll: "ScrollLock",
    Win: "OS",
  },
  CC = {
    alt: (n) => n.altKey,
    control: (n) => n.ctrlKey,
    meta: (n) => n.metaKey,
    shift: (n) => n.shiftKey,
  },
  wC = (() => {
    class n extends lc {
      constructor(e) {
        super(e);
      }
      supports(e) {
        return n.parseEventName(e) != null;
      }
      addEventListener(e, t, r) {
        let o = n.parseEventName(t),
          a = n.eventCallback(o.fullKey, r, this.manager.getZone());
        return this.manager
          .getZone()
          .runOutsideAngular(() => Zo().onAndCancel(e, o.domEventName, a));
      }
      static parseEventName(e) {
        let t = e.toLowerCase().split("."),
          r = t.shift();
        if (t.length === 0 || !(r === "keydown" || r === "keyup")) return null;
        let o = n._normalizeKey(t.pop()),
          a = "",
          d = t.indexOf("code");
        if (
          (d > -1 && (t.splice(d, 1), (a = "code.")),
          w0.forEach((f) => {
            let v = t.indexOf(f);
            v > -1 && (t.splice(v, 1), (a += f + "."));
          }),
          (a += o),
          t.length != 0 || o.length === 0)
        )
          return null;
        let u = {};
        return (u.domEventName = r), (u.fullKey = a), u;
      }
      static matchEventFullKeyCode(e, t) {
        let r = xC[e.key] || e.key,
          o = "";
        return (
          t.indexOf("code.") > -1 && ((r = e.code), (o = "code.")),
          r == null || !r
            ? !1
            : ((r = r.toLowerCase()),
              r === " " ? (r = "space") : r === "." && (r = "dot"),
              w0.forEach((a) => {
                if (a !== r) {
                  let d = CC[a];
                  d(e) && (o += a + ".");
                }
              }),
              (o += r),
              o === t)
        );
      }
      static eventCallback(e, t, r) {
        return (o) => {
          n.matchEventFullKeyCode(o, e) && r.runGuarded(() => t(o));
        };
      }
      static _normalizeKey(e) {
        return e === "esc" ? "escape" : e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Oe));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function E0(n, i) {
  return Ug(G({ rootComponent: n }, SC(i)));
}
function SC(n) {
  return {
    appProviders: [...OC, ...(n?.providers ?? [])],
    platformProviders: EC,
  };
}
function DC() {
  vh.makeCurrent();
}
function MC() {
  return new Xu();
}
function TC() {
  return wg(document), document;
}
var EC = [
  { provide: si, useValue: Zg },
  { provide: Sg, useValue: DC, multi: !0 },
  { provide: Oe, useFactory: TC, deps: [] },
];
var OC = [
  { provide: xg, useValue: "root" },
  { provide: Xu, useFactory: MC, deps: [] },
  { provide: yh, useClass: yC, multi: !0, deps: [Oe, Me, si] },
  { provide: yh, useClass: wC, multi: !0, deps: [Oe] },
  cc,
  D0,
  S0,
  { provide: Wl, useExisting: cc },
  { provide: tc, useClass: pC, deps: [] },
  [],
];
var O0 = (() => {
  class n {
    constructor(e) {
      this._doc = e;
    }
    getTitle() {
      return this._doc.title;
    }
    setTitle(e) {
      this._doc.title = e || "";
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(Oe));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Dh = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({
          token: n,
          factory: function (t) {
            let r = null;
            return t ? (r = new (t || n)()) : (r = Q(kC)), r;
          },
          providedIn: "root",
        });
      }
    }
    return n;
  })(),
  kC = (() => {
    class n extends Dh {
      constructor(e) {
        super(), (this._doc = e);
      }
      sanitize(e, t) {
        if (t == null) return null;
        switch (e) {
          case lr.NONE:
            return t;
          case lr.HTML:
            return qo(t, "HTML") ? Yo(t) : Pg(this._doc, String(t)).toString();
          case lr.STYLE:
            return qo(t, "Style") ? Yo(t) : t;
          case lr.SCRIPT:
            if (qo(t, "Script")) return Yo(t);
            throw new pt(5200, !1);
          case lr.URL:
            return qo(t, "URL") ? Yo(t) : kg(String(t));
          case lr.RESOURCE_URL:
            if (qo(t, "ResourceURL")) return Yo(t);
            throw new pt(5201, !1);
          default:
            throw new pt(5202, !1);
        }
      }
      bypassSecurityTrustHtml(e) {
        return Dg(e);
      }
      bypassSecurityTrustStyle(e) {
        return Mg(e);
      }
      bypassSecurityTrustScript(e) {
        return Tg(e);
      }
      bypassSecurityTrustUrl(e) {
        return Eg(e);
      }
      bypassSecurityTrustResourceUrl(e) {
        return Og(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Oe));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Ch = (function (n) {
    return (
      (n[(n.NoHttpTransferCache = 0)] = "NoHttpTransferCache"),
      (n[(n.HttpTransferCacheOptions = 1)] = "HttpTransferCacheOptions"),
      (n[(n.I18nSupport = 2)] = "I18nSupport"),
      (n[(n.EventReplay = 3)] = "EventReplay"),
      n
    );
  })(Ch || {});
function k0(...n) {
  let i = [],
    e = new Set(),
    t = e.has(Ch.HttpTransferCacheOptions);
  for (let { ɵproviders: r, ɵkind: o } of n) e.add(o), r.length && i.push(r);
  return zn([[], zg(), e.has(Ch.NoHttpTransferCache) || t ? [] : x0({}), i]);
}
var Ye = "primary",
  Ds = Symbol("RouteTitle"),
  kh = class {
    constructor(i) {
      this.params = i || {};
    }
    has(i) {
      return Object.prototype.hasOwnProperty.call(this.params, i);
    }
    get(i) {
      if (this.has(i)) {
        let e = this.params[i];
        return Array.isArray(e) ? e[0] : e;
      }
      return null;
    }
    getAll(i) {
      if (this.has(i)) {
        let e = this.params[i];
        return Array.isArray(e) ? e : [e];
      }
      return [];
    }
    get keys() {
      return Object.keys(this.params);
    }
  };
function oa(n) {
  return new kh(n);
}
function PC(n, i, e) {
  let t = e.path.split("/");
  if (
    t.length > n.length ||
    (e.pathMatch === "full" && (i.hasChildren() || t.length < n.length))
  )
    return null;
  let r = {};
  for (let o = 0; o < t.length; o++) {
    let a = t[o],
      d = n[o];
    if (a[0] === ":") r[a.substring(1)] = d;
    else if (a !== d.path) return null;
  }
  return { consumed: n.slice(0, t.length), posParams: r };
}
function IC(n, i) {
  if (n.length !== i.length) return !1;
  for (let e = 0; e < n.length; ++e) if (!Yn(n[e], i[e])) return !1;
  return !0;
}
function Yn(n, i) {
  let e = n ? Ph(n) : void 0,
    t = i ? Ph(i) : void 0;
  if (!e || !t || e.length != t.length) return !1;
  let r;
  for (let o = 0; o < e.length; o++)
    if (((r = e[o]), !U0(n[r], i[r]))) return !1;
  return !0;
}
function Ph(n) {
  return [...Object.keys(n), ...Object.getOwnPropertySymbols(n)];
}
function U0(n, i) {
  if (Array.isArray(n) && Array.isArray(i)) {
    if (n.length !== i.length) return !1;
    let e = [...n].sort(),
      t = [...i].sort();
    return e.every((r, o) => t[o] === r);
  } else return n === i;
}
function z0(n) {
  return n.length > 0 ? n[n.length - 1] : null;
}
function Nr(n) {
  return Bl(n) ? n : Kl(n) ? ui(Promise.resolve(n)) : fe(n);
}
var AC = { exact: W0, subset: G0 },
  $0 = { exact: RC, subset: FC, ignored: () => !0 };
function I0(n, i, e) {
  return (
    AC[e.paths](n.root, i.root, e.matrixParams) &&
    $0[e.queryParams](n.queryParams, i.queryParams) &&
    !(e.fragment === "exact" && n.fragment !== i.fragment)
  );
}
function RC(n, i) {
  return Yn(n, i);
}
function W0(n, i, e) {
  if (
    !ho(n.segments, i.segments) ||
    !pc(n.segments, i.segments, e) ||
    n.numberOfChildren !== i.numberOfChildren
  )
    return !1;
  for (let t in i.children)
    if (!n.children[t] || !W0(n.children[t], i.children[t], e)) return !1;
  return !0;
}
function FC(n, i) {
  return (
    Object.keys(i).length <= Object.keys(n).length &&
    Object.keys(i).every((e) => U0(n[e], i[e]))
  );
}
function G0(n, i, e) {
  return Y0(n, i, i.segments, e);
}
function Y0(n, i, e, t) {
  if (n.segments.length > e.length) {
    let r = n.segments.slice(0, e.length);
    return !(!ho(r, e) || i.hasChildren() || !pc(r, e, t));
  } else if (n.segments.length === e.length) {
    if (!ho(n.segments, e) || !pc(n.segments, e, t)) return !1;
    for (let r in i.children)
      if (!n.children[r] || !G0(n.children[r], i.children[r], t)) return !1;
    return !0;
  } else {
    let r = e.slice(0, n.segments.length),
      o = e.slice(n.segments.length);
    return !ho(n.segments, r) || !pc(n.segments, r, t) || !n.children[Ye]
      ? !1
      : Y0(n.children[Ye], i, o, t);
  }
}
function pc(n, i, e) {
  return i.every((t, r) => $0[e](n[r].parameters, t.parameters));
}
var hr = class {
    constructor(i = new mt([], {}), e = {}, t = null) {
      (this.root = i), (this.queryParams = e), (this.fragment = t);
    }
    get queryParamMap() {
      return (
        (this._queryParamMap ??= oa(this.queryParams)), this._queryParamMap
      );
    }
    toString() {
      return VC.serialize(this);
    }
  },
  mt = class {
    constructor(i, e) {
      (this.segments = i),
        (this.children = e),
        (this.parent = null),
        Object.values(e).forEach((t) => (t.parent = this));
    }
    hasChildren() {
      return this.numberOfChildren > 0;
    }
    get numberOfChildren() {
      return Object.keys(this.children).length;
    }
    toString() {
      return mc(this);
    }
  },
  uo = class {
    constructor(i, e) {
      (this.path = i), (this.parameters = e);
    }
    get parameterMap() {
      return (this._parameterMap ??= oa(this.parameters)), this._parameterMap;
    }
    toString() {
      return K0(this);
    }
  };
function NC(n, i) {
  return ho(n, i) && n.every((e, t) => Yn(e.parameters, i[t].parameters));
}
function ho(n, i) {
  return n.length !== i.length ? !1 : n.every((e, t) => e.path === i[t].path);
}
function LC(n, i) {
  let e = [];
  return (
    Object.entries(n.children).forEach(([t, r]) => {
      t === Ye && (e = e.concat(i(r, t)));
    }),
    Object.entries(n.children).forEach(([t, r]) => {
      t !== Ye && (e = e.concat(i(r, t)));
    }),
    e
  );
}
var Ms = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({
          token: n,
          factory: () => new aa(),
          providedIn: "root",
        });
      }
    }
    return n;
  })(),
  aa = class {
    parse(i) {
      let e = new Ah(i);
      return new hr(
        e.parseRootSegment(),
        e.parseQueryParams(),
        e.parseFragment()
      );
    }
    serialize(i) {
      let e = `/${us(i.root, !0)}`,
        t = HC(i.queryParams),
        r = typeof i.fragment == "string" ? `#${BC(i.fragment)}` : "";
      return `${e}${t}${r}`;
    }
  },
  VC = new aa();
function mc(n) {
  return n.segments.map((i) => K0(i)).join("/");
}
function us(n, i) {
  if (!n.hasChildren()) return mc(n);
  if (i) {
    let e = n.children[Ye] ? us(n.children[Ye], !1) : "",
      t = [];
    return (
      Object.entries(n.children).forEach(([r, o]) => {
        r !== Ye && t.push(`${r}:${us(o, !1)}`);
      }),
      t.length > 0 ? `${e}(${t.join("//")})` : e
    );
  } else {
    let e = LC(n, (t, r) =>
      r === Ye ? [us(n.children[Ye], !1)] : [`${r}:${us(t, !1)}`]
    );
    return Object.keys(n.children).length === 1 && n.children[Ye] != null
      ? `${mc(n)}/${e[0]}`
      : `${mc(n)}/(${e.join("//")})`;
  }
}
function q0(n) {
  return encodeURIComponent(n)
    .replace(/%40/g, "@")
    .replace(/%3A/gi, ":")
    .replace(/%24/g, "$")
    .replace(/%2C/gi, ",");
}
function uc(n) {
  return q0(n).replace(/%3B/gi, ";");
}
function BC(n) {
  return encodeURI(n);
}
function Ih(n) {
  return q0(n)
    .replace(/\(/g, "%28")
    .replace(/\)/g, "%29")
    .replace(/%26/gi, "&");
}
function fc(n) {
  return decodeURIComponent(n);
}
function A0(n) {
  return fc(n.replace(/\+/g, "%20"));
}
function K0(n) {
  return `${Ih(n.path)}${jC(n.parameters)}`;
}
function jC(n) {
  return Object.entries(n)
    .map(([i, e]) => `;${Ih(i)}=${Ih(e)}`)
    .join("");
}
function HC(n) {
  let i = Object.entries(n)
    .map(([e, t]) =>
      Array.isArray(t)
        ? t.map((r) => `${uc(e)}=${uc(r)}`).join("&")
        : `${uc(e)}=${uc(t)}`
    )
    .filter((e) => e);
  return i.length ? `?${i.join("&")}` : "";
}
var UC = /^[^\/()?;#]+/;
function Mh(n) {
  let i = n.match(UC);
  return i ? i[0] : "";
}
var zC = /^[^\/()?;=#]+/;
function $C(n) {
  let i = n.match(zC);
  return i ? i[0] : "";
}
var WC = /^[^=?&#]+/;
function GC(n) {
  let i = n.match(WC);
  return i ? i[0] : "";
}
var YC = /^[^&#]+/;
function qC(n) {
  let i = n.match(YC);
  return i ? i[0] : "";
}
var Ah = class {
  constructor(i) {
    (this.url = i), (this.remaining = i);
  }
  parseRootSegment() {
    return (
      this.consumeOptional("/"),
      this.remaining === "" ||
      this.peekStartsWith("?") ||
      this.peekStartsWith("#")
        ? new mt([], {})
        : new mt([], this.parseChildren())
    );
  }
  parseQueryParams() {
    let i = {};
    if (this.consumeOptional("?"))
      do this.parseQueryParam(i);
      while (this.consumeOptional("&"));
    return i;
  }
  parseFragment() {
    return this.consumeOptional("#")
      ? decodeURIComponent(this.remaining)
      : null;
  }
  parseChildren() {
    if (this.remaining === "") return {};
    this.consumeOptional("/");
    let i = [];
    for (
      this.peekStartsWith("(") || i.push(this.parseSegment());
      this.peekStartsWith("/") &&
      !this.peekStartsWith("//") &&
      !this.peekStartsWith("/(");

    )
      this.capture("/"), i.push(this.parseSegment());
    let e = {};
    this.peekStartsWith("/(") &&
      (this.capture("/"), (e = this.parseParens(!0)));
    let t = {};
    return (
      this.peekStartsWith("(") && (t = this.parseParens(!1)),
      (i.length > 0 || Object.keys(e).length > 0) && (t[Ye] = new mt(i, e)),
      t
    );
  }
  parseSegment() {
    let i = Mh(this.remaining);
    if (i === "" && this.peekStartsWith(";")) throw new pt(4009, !1);
    return this.capture(i), new uo(fc(i), this.parseMatrixParams());
  }
  parseMatrixParams() {
    let i = {};
    for (; this.consumeOptional(";"); ) this.parseParam(i);
    return i;
  }
  parseParam(i) {
    let e = $C(this.remaining);
    if (!e) return;
    this.capture(e);
    let t = "";
    if (this.consumeOptional("=")) {
      let r = Mh(this.remaining);
      r && ((t = r), this.capture(t));
    }
    i[fc(e)] = fc(t);
  }
  parseQueryParam(i) {
    let e = GC(this.remaining);
    if (!e) return;
    this.capture(e);
    let t = "";
    if (this.consumeOptional("=")) {
      let a = qC(this.remaining);
      a && ((t = a), this.capture(t));
    }
    let r = A0(e),
      o = A0(t);
    if (i.hasOwnProperty(r)) {
      let a = i[r];
      Array.isArray(a) || ((a = [a]), (i[r] = a)), a.push(o);
    } else i[r] = o;
  }
  parseParens(i) {
    let e = {};
    for (
      this.capture("(");
      !this.consumeOptional(")") && this.remaining.length > 0;

    ) {
      let t = Mh(this.remaining),
        r = this.remaining[t.length];
      if (r !== "/" && r !== ")" && r !== ";") throw new pt(4010, !1);
      let o;
      t.indexOf(":") > -1
        ? ((o = t.slice(0, t.indexOf(":"))), this.capture(o), this.capture(":"))
        : i && (o = Ye);
      let a = this.parseChildren();
      (e[o] = Object.keys(a).length === 1 ? a[Ye] : new mt([], a)),
        this.consumeOptional("//");
    }
    return e;
  }
  peekStartsWith(i) {
    return this.remaining.startsWith(i);
  }
  consumeOptional(i) {
    return this.peekStartsWith(i)
      ? ((this.remaining = this.remaining.substring(i.length)), !0)
      : !1;
  }
  capture(i) {
    if (!this.consumeOptional(i)) throw new pt(4011, !1);
  }
};
function Q0(n) {
  return n.segments.length > 0 ? new mt([], { [Ye]: n }) : n;
}
function X0(n) {
  let i = {};
  for (let [t, r] of Object.entries(n.children)) {
    let o = X0(r);
    if (t === Ye && o.segments.length === 0 && o.hasChildren())
      for (let [a, d] of Object.entries(o.children)) i[a] = d;
    else (o.segments.length > 0 || o.hasChildren()) && (i[t] = o);
  }
  let e = new mt(n.segments, i);
  return KC(e);
}
function KC(n) {
  if (n.numberOfChildren === 1 && n.children[Ye]) {
    let i = n.children[Ye];
    return new mt(n.segments.concat(i.segments), i.children);
  }
  return n;
}
function po(n) {
  return n instanceof hr;
}
function QC(n, i, e = null, t = null) {
  let r = Z0(n);
  return J0(r, i, e, t);
}
function Z0(n) {
  let i;
  function e(o) {
    let a = {};
    for (let u of o.children) {
      let f = e(u);
      a[u.outlet] = f;
    }
    let d = new mt(o.url, a);
    return o === n && (i = d), d;
  }
  let t = e(n.root),
    r = Q0(t);
  return i ?? r;
}
function J0(n, i, e, t) {
  let r = n;
  for (; r.parent; ) r = r.parent;
  if (i.length === 0) return Th(r, r, r, e, t);
  let o = XC(i);
  if (o.toRoot()) return Th(r, r, new mt([], {}), e, t);
  let a = ZC(o, r, n),
    d = a.processChildren
      ? ms(a.segmentGroup, a.index, o.commands)
      : t_(a.segmentGroup, a.index, o.commands);
  return Th(r, a.segmentGroup, d, e, t);
}
function gc(n) {
  return typeof n == "object" && n != null && !n.outlets && !n.segmentPath;
}
function _s(n) {
  return typeof n == "object" && n != null && n.outlets;
}
function Th(n, i, e, t, r) {
  let o = {};
  t &&
    Object.entries(t).forEach(([u, f]) => {
      o[u] = Array.isArray(f) ? f.map((v) => `${v}`) : `${f}`;
    });
  let a;
  n === i ? (a = e) : (a = e_(n, i, e));
  let d = Q0(X0(a));
  return new hr(d, o, r);
}
function e_(n, i, e) {
  let t = {};
  return (
    Object.entries(n.children).forEach(([r, o]) => {
      o === i ? (t[r] = e) : (t[r] = e_(o, i, e));
    }),
    new mt(n.segments, t)
  );
}
var _c = class {
  constructor(i, e, t) {
    if (
      ((this.isAbsolute = i),
      (this.numberOfDoubleDots = e),
      (this.commands = t),
      i && t.length > 0 && gc(t[0]))
    )
      throw new pt(4003, !1);
    let r = t.find(_s);
    if (r && r !== z0(t)) throw new pt(4004, !1);
  }
  toRoot() {
    return (
      this.isAbsolute && this.commands.length === 1 && this.commands[0] == "/"
    );
  }
};
function XC(n) {
  if (typeof n[0] == "string" && n.length === 1 && n[0] === "/")
    return new _c(!0, 0, n);
  let i = 0,
    e = !1,
    t = n.reduce((r, o, a) => {
      if (typeof o == "object" && o != null) {
        if (o.outlets) {
          let d = {};
          return (
            Object.entries(o.outlets).forEach(([u, f]) => {
              d[u] = typeof f == "string" ? f.split("/") : f;
            }),
            [...r, { outlets: d }]
          );
        }
        if (o.segmentPath) return [...r, o.segmentPath];
      }
      return typeof o != "string"
        ? [...r, o]
        : a === 0
        ? (o.split("/").forEach((d, u) => {
            (u == 0 && d === ".") ||
              (u == 0 && d === ""
                ? (e = !0)
                : d === ".."
                ? i++
                : d != "" && r.push(d));
          }),
          r)
        : [...r, o];
    }, []);
  return new _c(e, i, t);
}
var ia = class {
  constructor(i, e, t) {
    (this.segmentGroup = i), (this.processChildren = e), (this.index = t);
  }
};
function ZC(n, i, e) {
  if (n.isAbsolute) return new ia(i, !0, 0);
  if (!e) return new ia(i, !1, NaN);
  if (e.parent === null) return new ia(e, !0, 0);
  let t = gc(n.commands[0]) ? 0 : 1,
    r = e.segments.length - 1 + t;
  return JC(e, r, n.numberOfDoubleDots);
}
function JC(n, i, e) {
  let t = n,
    r = i,
    o = e;
  for (; o > r; ) {
    if (((o -= r), (t = t.parent), !t)) throw new pt(4005, !1);
    r = t.segments.length;
  }
  return new ia(t, !1, r - o);
}
function ew(n) {
  return _s(n[0]) ? n[0].outlets : { [Ye]: n };
}
function t_(n, i, e) {
  if (((n ??= new mt([], {})), n.segments.length === 0 && n.hasChildren()))
    return ms(n, i, e);
  let t = tw(n, i, e),
    r = e.slice(t.commandIndex);
  if (t.match && t.pathIndex < n.segments.length) {
    let o = new mt(n.segments.slice(0, t.pathIndex), {});
    return (
      (o.children[Ye] = new mt(n.segments.slice(t.pathIndex), n.children)),
      ms(o, 0, r)
    );
  } else
    return t.match && r.length === 0
      ? new mt(n.segments, {})
      : t.match && !n.hasChildren()
      ? Rh(n, i, e)
      : t.match
      ? ms(n, 0, r)
      : Rh(n, i, e);
}
function ms(n, i, e) {
  if (e.length === 0) return new mt(n.segments, {});
  {
    let t = ew(e),
      r = {};
    if (
      Object.keys(t).some((o) => o !== Ye) &&
      n.children[Ye] &&
      n.numberOfChildren === 1 &&
      n.children[Ye].segments.length === 0
    ) {
      let o = ms(n.children[Ye], i, e);
      return new mt(n.segments, o.children);
    }
    return (
      Object.entries(t).forEach(([o, a]) => {
        typeof a == "string" && (a = [a]),
          a !== null && (r[o] = t_(n.children[o], i, a));
      }),
      Object.entries(n.children).forEach(([o, a]) => {
        t[o] === void 0 && (r[o] = a);
      }),
      new mt(n.segments, r)
    );
  }
}
function tw(n, i, e) {
  let t = 0,
    r = i,
    o = { match: !1, pathIndex: 0, commandIndex: 0 };
  for (; r < n.segments.length; ) {
    if (t >= e.length) return o;
    let a = n.segments[r],
      d = e[t];
    if (_s(d)) break;
    let u = `${d}`,
      f = t < e.length - 1 ? e[t + 1] : null;
    if (r > 0 && u === void 0) break;
    if (u && f && typeof f == "object" && f.outlets === void 0) {
      if (!F0(u, f, a)) return o;
      t += 2;
    } else {
      if (!F0(u, {}, a)) return o;
      t++;
    }
    r++;
  }
  return { match: !0, pathIndex: r, commandIndex: t };
}
function Rh(n, i, e) {
  let t = n.segments.slice(0, i),
    r = 0;
  for (; r < e.length; ) {
    let o = e[r];
    if (_s(o)) {
      let u = iw(o.outlets);
      return new mt(t, u);
    }
    if (r === 0 && gc(e[0])) {
      let u = n.segments[i];
      t.push(new uo(u.path, R0(e[0]))), r++;
      continue;
    }
    let a = _s(o) ? o.outlets[Ye] : `${o}`,
      d = r < e.length - 1 ? e[r + 1] : null;
    a && d && gc(d)
      ? (t.push(new uo(a, R0(d))), (r += 2))
      : (t.push(new uo(a, {})), r++);
  }
  return new mt(t, {});
}
function iw(n) {
  let i = {};
  return (
    Object.entries(n).forEach(([e, t]) => {
      typeof t == "string" && (t = [t]),
        t !== null && (i[e] = Rh(new mt([], {}), 0, t));
    }),
    i
  );
}
function R0(n) {
  let i = {};
  return Object.entries(n).forEach(([e, t]) => (i[e] = `${t}`)), i;
}
function F0(n, i, e) {
  return n == e.path && Yn(i, e.parameters);
}
var fs = "imperative",
  mi = (function (n) {
    return (
      (n[(n.NavigationStart = 0)] = "NavigationStart"),
      (n[(n.NavigationEnd = 1)] = "NavigationEnd"),
      (n[(n.NavigationCancel = 2)] = "NavigationCancel"),
      (n[(n.NavigationError = 3)] = "NavigationError"),
      (n[(n.RoutesRecognized = 4)] = "RoutesRecognized"),
      (n[(n.ResolveStart = 5)] = "ResolveStart"),
      (n[(n.ResolveEnd = 6)] = "ResolveEnd"),
      (n[(n.GuardsCheckStart = 7)] = "GuardsCheckStart"),
      (n[(n.GuardsCheckEnd = 8)] = "GuardsCheckEnd"),
      (n[(n.RouteConfigLoadStart = 9)] = "RouteConfigLoadStart"),
      (n[(n.RouteConfigLoadEnd = 10)] = "RouteConfigLoadEnd"),
      (n[(n.ChildActivationStart = 11)] = "ChildActivationStart"),
      (n[(n.ChildActivationEnd = 12)] = "ChildActivationEnd"),
      (n[(n.ActivationStart = 13)] = "ActivationStart"),
      (n[(n.ActivationEnd = 14)] = "ActivationEnd"),
      (n[(n.Scroll = 15)] = "Scroll"),
      (n[(n.NavigationSkipped = 16)] = "NavigationSkipped"),
      n
    );
  })(mi || {}),
  un = class {
    constructor(i, e) {
      (this.id = i), (this.url = e);
    }
  },
  sa = class extends un {
    constructor(i, e, t = "imperative", r = null) {
      super(i, e),
        (this.type = mi.NavigationStart),
        (this.navigationTrigger = t),
        (this.restoredState = r);
    }
    toString() {
      return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
    }
  },
  ci = class extends un {
    constructor(i, e, t) {
      super(i, e), (this.urlAfterRedirects = t), (this.type = mi.NavigationEnd);
    }
    toString() {
      return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
    }
  },
  Qi = (function (n) {
    return (
      (n[(n.Redirect = 0)] = "Redirect"),
      (n[(n.SupersededByNewNavigation = 1)] = "SupersededByNewNavigation"),
      (n[(n.NoDataFromResolver = 2)] = "NoDataFromResolver"),
      (n[(n.GuardRejected = 3)] = "GuardRejected"),
      n
    );
  })(Qi || {}),
  bc = (function (n) {
    return (
      (n[(n.IgnoredSameUrlNavigation = 0)] = "IgnoredSameUrlNavigation"),
      (n[(n.IgnoredByUrlHandlingStrategy = 1)] =
        "IgnoredByUrlHandlingStrategy"),
      n
    );
  })(bc || {}),
  ur = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.reason = t),
        (this.code = r),
        (this.type = mi.NavigationCancel);
    }
    toString() {
      return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
    }
  },
  Fr = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.reason = t),
        (this.code = r),
        (this.type = mi.NavigationSkipped);
    }
  },
  bs = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.error = t),
        (this.target = r),
        (this.type = mi.NavigationError);
    }
    toString() {
      return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
    }
  },
  vc = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.urlAfterRedirects = t),
        (this.state = r),
        (this.type = mi.RoutesRecognized);
    }
    toString() {
      return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  Fh = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.urlAfterRedirects = t),
        (this.state = r),
        (this.type = mi.GuardsCheckStart);
    }
    toString() {
      return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  Nh = class extends un {
    constructor(i, e, t, r, o) {
      super(i, e),
        (this.urlAfterRedirects = t),
        (this.state = r),
        (this.shouldActivate = o),
        (this.type = mi.GuardsCheckEnd);
    }
    toString() {
      return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
    }
  },
  Lh = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.urlAfterRedirects = t),
        (this.state = r),
        (this.type = mi.ResolveStart);
    }
    toString() {
      return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  Vh = class extends un {
    constructor(i, e, t, r) {
      super(i, e),
        (this.urlAfterRedirects = t),
        (this.state = r),
        (this.type = mi.ResolveEnd);
    }
    toString() {
      return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
    }
  },
  Bh = class {
    constructor(i) {
      (this.route = i), (this.type = mi.RouteConfigLoadStart);
    }
    toString() {
      return `RouteConfigLoadStart(path: ${this.route.path})`;
    }
  },
  jh = class {
    constructor(i) {
      (this.route = i), (this.type = mi.RouteConfigLoadEnd);
    }
    toString() {
      return `RouteConfigLoadEnd(path: ${this.route.path})`;
    }
  },
  Hh = class {
    constructor(i) {
      (this.snapshot = i), (this.type = mi.ChildActivationStart);
    }
    toString() {
      return `ChildActivationStart(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  Uh = class {
    constructor(i) {
      (this.snapshot = i), (this.type = mi.ChildActivationEnd);
    }
    toString() {
      return `ChildActivationEnd(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  zh = class {
    constructor(i) {
      (this.snapshot = i), (this.type = mi.ActivationStart);
    }
    toString() {
      return `ActivationStart(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  $h = class {
    constructor(i) {
      (this.snapshot = i), (this.type = mi.ActivationEnd);
    }
    toString() {
      return `ActivationEnd(path: '${
        (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
      }')`;
    }
  },
  yc = class {
    constructor(i, e, t) {
      (this.routerEvent = i),
        (this.position = e),
        (this.anchor = t),
        (this.type = mi.Scroll);
    }
    toString() {
      let i = this.position ? `${this.position[0]}, ${this.position[1]}` : null;
      return `Scroll(anchor: '${this.anchor}', position: '${i}')`;
    }
  },
  vs = class {},
  la = class {
    constructor(i, e) {
      (this.url = i), (this.navigationBehaviorOptions = e);
    }
  };
function nw(n, i) {
  return (
    n.providers &&
      !n._injector &&
      (n._injector = eh(n.providers, i, `Route: ${n.path}`)),
    n._injector ?? i
  );
}
function Mn(n) {
  return n.outlet || Ye;
}
function rw(n, i) {
  let e = n.filter((t) => Mn(t) === i);
  return e.push(...n.filter((t) => Mn(t) !== i)), e;
}
function Ts(n) {
  if (!n) return null;
  if (n.routeConfig?._injector) return n.routeConfig._injector;
  for (let i = n.parent; i; i = i.parent) {
    let e = i.routeConfig;
    if (e?._loadedInjector) return e._loadedInjector;
    if (e?._injector) return e._injector;
  }
  return null;
}
var Wh = class {
    get injector() {
      return Ts(this.route?.snapshot) ?? this.rootInjector;
    }
    set injector(i) {}
    constructor(i) {
      (this.rootInjector = i),
        (this.outlet = null),
        (this.route = null),
        (this.children = new Es(this.rootInjector)),
        (this.attachRef = null);
    }
  },
  Es = (() => {
    class n {
      constructor(e) {
        (this.rootInjector = e), (this.contexts = new Map());
      }
      onChildOutletCreated(e, t) {
        let r = this.getOrCreateContext(e);
        (r.outlet = t), this.contexts.set(e, r);
      }
      onChildOutletDestroyed(e) {
        let t = this.getContext(e);
        t && ((t.outlet = null), (t.attachRef = null));
      }
      onOutletDeactivated() {
        let e = this.contexts;
        return (this.contexts = new Map()), e;
      }
      onOutletReAttached(e) {
        this.contexts = e;
      }
      getOrCreateContext(e) {
        let t = this.getContext(e);
        return (
          t || ((t = new Wh(this.rootInjector)), this.contexts.set(e, t)), t
        );
      }
      getContext(e) {
        return this.contexts.get(e) || null;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(an));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  xc = class {
    constructor(i) {
      this._root = i;
    }
    get root() {
      return this._root.value;
    }
    parent(i) {
      let e = this.pathFromRoot(i);
      return e.length > 1 ? e[e.length - 2] : null;
    }
    children(i) {
      let e = Gh(i, this._root);
      return e ? e.children.map((t) => t.value) : [];
    }
    firstChild(i) {
      let e = Gh(i, this._root);
      return e && e.children.length > 0 ? e.children[0].value : null;
    }
    siblings(i) {
      let e = Yh(i, this._root);
      return e.length < 2
        ? []
        : e[e.length - 2].children.map((r) => r.value).filter((r) => r !== i);
    }
    pathFromRoot(i) {
      return Yh(i, this._root).map((e) => e.value);
    }
  };
function Gh(n, i) {
  if (n === i.value) return i;
  for (let e of i.children) {
    let t = Gh(n, e);
    if (t) return t;
  }
  return null;
}
function Yh(n, i) {
  if (n === i.value) return [i];
  for (let e of i.children) {
    let t = Yh(n, e);
    if (t.length) return t.unshift(i), t;
  }
  return [];
}
var Ki = class {
  constructor(i, e) {
    (this.value = i), (this.children = e);
  }
  toString() {
    return `TreeNode(${this.value})`;
  }
};
function ta(n) {
  let i = {};
  return n && n.children.forEach((e) => (i[e.value.outlet] = e)), i;
}
var Cc = class extends xc {
  constructor(i, e) {
    super(i), (this.snapshot = e), ip(this, i);
  }
  toString() {
    return this.snapshot.toString();
  }
};
function i_(n) {
  let i = ow(n),
    e = new Nt([new uo("", {})]),
    t = new Nt({}),
    r = new Nt({}),
    o = new Nt({}),
    a = new Nt(""),
    d = new ei(e, t, o, a, r, Ye, n, i.root);
  return (d.snapshot = i.root), new Cc(new Ki(d, []), i);
}
function ow(n) {
  let i = {},
    e = {},
    t = {},
    r = "",
    o = new na([], i, t, r, e, Ye, n, null, {});
  return new Sc("", new Ki(o, []));
}
var ei = class {
  constructor(i, e, t, r, o, a, d, u) {
    (this.urlSubject = i),
      (this.paramsSubject = e),
      (this.queryParamsSubject = t),
      (this.fragmentSubject = r),
      (this.dataSubject = o),
      (this.outlet = a),
      (this.component = d),
      (this._futureSnapshot = u),
      (this.title = this.dataSubject?.pipe(Ke((f) => f[Ds])) ?? fe(void 0)),
      (this.url = i),
      (this.params = e),
      (this.queryParams = t),
      (this.fragment = r),
      (this.data = o);
  }
  get routeConfig() {
    return this._futureSnapshot.routeConfig;
  }
  get root() {
    return this._routerState.root;
  }
  get parent() {
    return this._routerState.parent(this);
  }
  get firstChild() {
    return this._routerState.firstChild(this);
  }
  get children() {
    return this._routerState.children(this);
  }
  get pathFromRoot() {
    return this._routerState.pathFromRoot(this);
  }
  get paramMap() {
    return (
      (this._paramMap ??= this.params.pipe(Ke((i) => oa(i)))), this._paramMap
    );
  }
  get queryParamMap() {
    return (
      (this._queryParamMap ??= this.queryParams.pipe(Ke((i) => oa(i)))),
      this._queryParamMap
    );
  }
  toString() {
    return this.snapshot
      ? this.snapshot.toString()
      : `Future(${this._futureSnapshot})`;
  }
};
function wc(n, i, e = "emptyOnly") {
  let t,
    { routeConfig: r } = n;
  return (
    i !== null &&
    (e === "always" ||
      r?.path === "" ||
      (!i.component && !i.routeConfig?.loadComponent))
      ? (t = {
          params: G(G({}, i.params), n.params),
          data: G(G({}, i.data), n.data),
          resolve: G(G(G(G({}, n.data), i.data), r?.data), n._resolvedData),
        })
      : (t = {
          params: G({}, n.params),
          data: G({}, n.data),
          resolve: G(G({}, n.data), n._resolvedData ?? {}),
        }),
    r && r_(r) && (t.resolve[Ds] = r.title),
    t
  );
}
var na = class {
    get title() {
      return this.data?.[Ds];
    }
    constructor(i, e, t, r, o, a, d, u, f) {
      (this.url = i),
        (this.params = e),
        (this.queryParams = t),
        (this.fragment = r),
        (this.data = o),
        (this.outlet = a),
        (this.component = d),
        (this.routeConfig = u),
        (this._resolve = f);
    }
    get root() {
      return this._routerState.root;
    }
    get parent() {
      return this._routerState.parent(this);
    }
    get firstChild() {
      return this._routerState.firstChild(this);
    }
    get children() {
      return this._routerState.children(this);
    }
    get pathFromRoot() {
      return this._routerState.pathFromRoot(this);
    }
    get paramMap() {
      return (this._paramMap ??= oa(this.params)), this._paramMap;
    }
    get queryParamMap() {
      return (
        (this._queryParamMap ??= oa(this.queryParams)), this._queryParamMap
      );
    }
    toString() {
      let i = this.url.map((t) => t.toString()).join("/"),
        e = this.routeConfig ? this.routeConfig.path : "";
      return `Route(url:'${i}', path:'${e}')`;
    }
  },
  Sc = class extends xc {
    constructor(i, e) {
      super(e), (this.url = i), ip(this, e);
    }
    toString() {
      return n_(this._root);
    }
  };
function ip(n, i) {
  (i.value._routerState = n), i.children.forEach((e) => ip(n, e));
}
function n_(n) {
  let i = n.children.length > 0 ? ` { ${n.children.map(n_).join(", ")} } ` : "";
  return `${n.value}${i}`;
}
function Eh(n) {
  if (n.snapshot) {
    let i = n.snapshot,
      e = n._futureSnapshot;
    (n.snapshot = e),
      Yn(i.queryParams, e.queryParams) ||
        n.queryParamsSubject.next(e.queryParams),
      i.fragment !== e.fragment && n.fragmentSubject.next(e.fragment),
      Yn(i.params, e.params) || n.paramsSubject.next(e.params),
      IC(i.url, e.url) || n.urlSubject.next(e.url),
      Yn(i.data, e.data) || n.dataSubject.next(e.data);
  } else
    (n.snapshot = n._futureSnapshot),
      n.dataSubject.next(n._futureSnapshot.data);
}
function qh(n, i) {
  let e = Yn(n.params, i.params) && NC(n.url, i.url),
    t = !n.parent != !i.parent;
  return e && !t && (!n.parent || qh(n.parent, i.parent));
}
function r_(n) {
  return typeof n.title == "string" || n.title === null;
}
var mo = (() => {
    class n {
      constructor() {
        (this.activated = null),
          (this._activatedRoute = null),
          (this.name = Ye),
          (this.activateEvents = new xe()),
          (this.deactivateEvents = new xe()),
          (this.attachEvents = new xe()),
          (this.detachEvents = new xe()),
          (this.parentContexts = W(Es)),
          (this.location = W(Wi)),
          (this.changeDetector = W(Qe)),
          (this.inputBinder = W(Ec, { optional: !0 })),
          (this.supportsBindingToComponentInputs = !0);
      }
      get activatedComponentRef() {
        return this.activated;
      }
      ngOnChanges(e) {
        if (e.name) {
          let { firstChange: t, previousValue: r } = e.name;
          if (t) return;
          this.isTrackedInParentContexts(r) &&
            (this.deactivate(), this.parentContexts.onChildOutletDestroyed(r)),
            this.initializeOutletWithName();
        }
      }
      ngOnDestroy() {
        this.isTrackedInParentContexts(this.name) &&
          this.parentContexts.onChildOutletDestroyed(this.name),
          this.inputBinder?.unsubscribeFromRouteData(this);
      }
      isTrackedInParentContexts(e) {
        return this.parentContexts.getContext(e)?.outlet === this;
      }
      ngOnInit() {
        this.initializeOutletWithName();
      }
      initializeOutletWithName() {
        if (
          (this.parentContexts.onChildOutletCreated(this.name, this),
          this.activated)
        )
          return;
        let e = this.parentContexts.getContext(this.name);
        e?.route &&
          (e.attachRef
            ? this.attach(e.attachRef, e.route)
            : this.activateWith(e.route, e.injector));
      }
      get isActivated() {
        return !!this.activated;
      }
      get component() {
        if (!this.activated) throw new pt(4012, !1);
        return this.activated.instance;
      }
      get activatedRoute() {
        if (!this.activated) throw new pt(4012, !1);
        return this._activatedRoute;
      }
      get activatedRouteData() {
        return this._activatedRoute ? this._activatedRoute.snapshot.data : {};
      }
      detach() {
        if (!this.activated) throw new pt(4012, !1);
        this.location.detach();
        let e = this.activated;
        return (
          (this.activated = null),
          (this._activatedRoute = null),
          this.detachEvents.emit(e.instance),
          e
        );
      }
      attach(e, t) {
        (this.activated = e),
          (this._activatedRoute = t),
          this.location.insert(e.hostView),
          this.inputBinder?.bindActivatedRouteToOutletComponent(this),
          this.attachEvents.emit(e.instance);
      }
      deactivate() {
        if (this.activated) {
          let e = this.component;
          this.activated.destroy(),
            (this.activated = null),
            (this._activatedRoute = null),
            this.deactivateEvents.emit(e);
        }
      }
      activateWith(e, t) {
        if (this.isActivated) throw new pt(4013, !1);
        this._activatedRoute = e;
        let r = this.location,
          a = e.snapshot.component,
          d = this.parentContexts.getOrCreateContext(this.name).children,
          u = new Kh(e, d, r.injector);
        (this.activated = r.createComponent(a, {
          index: r.length,
          injector: u,
          environmentInjector: t,
        })),
          this.changeDetector.markForCheck(),
          this.inputBinder?.bindActivatedRouteToOutletComponent(this),
          this.activateEvents.emit(this.activated.instance);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["router-outlet"]],
          inputs: { name: "name" },
          outputs: {
            activateEvents: "activate",
            deactivateEvents: "deactivate",
            attachEvents: "attach",
            detachEvents: "detach",
          },
          exportAs: ["outlet"],
          standalone: !0,
          features: [Dt],
        });
      }
    }
    return n;
  })(),
  Kh = class n {
    __ngOutletInjector(i) {
      return new n(this.route, this.childContexts, i);
    }
    constructor(i, e, t) {
      (this.route = i), (this.childContexts = e), (this.parent = t);
    }
    get(i, e) {
      return i === ei
        ? this.route
        : i === Es
        ? this.childContexts
        : this.parent.get(i, e);
    }
  },
  Ec = new Ce(""),
  N0 = (() => {
    class n {
      constructor() {
        this.outletDataSubscriptions = new Map();
      }
      bindActivatedRouteToOutletComponent(e) {
        this.unsubscribeFromRouteData(e), this.subscribeToRouteData(e);
      }
      unsubscribeFromRouteData(e) {
        this.outletDataSubscriptions.get(e)?.unsubscribe(),
          this.outletDataSubscriptions.delete(e);
      }
      subscribeToRouteData(e) {
        let { activatedRoute: t } = e,
          r = ro([t.queryParams, t.params, t.data])
            .pipe(
              Ci(
                ([o, a, d], u) => (
                  (d = G(G(G({}, o), a), d)),
                  u === 0 ? fe(d) : Promise.resolve(d)
                )
              )
            )
            .subscribe((o) => {
              if (
                !e.isActivated ||
                !e.activatedComponentRef ||
                e.activatedRoute !== t ||
                t.component === null
              ) {
                this.unsubscribeFromRouteData(e);
                return;
              }
              let a = $g(t.component);
              if (!a) {
                this.unsubscribeFromRouteData(e);
                return;
              }
              for (let { templateName: d } of a.inputs)
                e.activatedComponentRef.setInput(d, o[d]);
            });
        this.outletDataSubscriptions.set(e, r);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function aw(n, i, e) {
  let t = ys(n, i._root, e ? e._root : void 0);
  return new Cc(t, i);
}
function ys(n, i, e) {
  if (e && n.shouldReuseRoute(i.value, e.value.snapshot)) {
    let t = e.value;
    t._futureSnapshot = i.value;
    let r = sw(n, i, e);
    return new Ki(t, r);
  } else {
    if (n.shouldAttach(i.value)) {
      let o = n.retrieve(i.value);
      if (o !== null) {
        let a = o.route;
        return (
          (a.value._futureSnapshot = i.value),
          (a.children = i.children.map((d) => ys(n, d))),
          a
        );
      }
    }
    let t = lw(i.value),
      r = i.children.map((o) => ys(n, o));
    return new Ki(t, r);
  }
}
function sw(n, i, e) {
  return i.children.map((t) => {
    for (let r of e.children)
      if (n.shouldReuseRoute(t.value, r.value.snapshot)) return ys(n, t, r);
    return ys(n, t);
  });
}
function lw(n) {
  return new ei(
    new Nt(n.url),
    new Nt(n.params),
    new Nt(n.queryParams),
    new Nt(n.fragment),
    new Nt(n.data),
    n.outlet,
    n.component,
    n
  );
}
var xs = class {
    constructor(i, e) {
      (this.redirectTo = i), (this.navigationBehaviorOptions = e);
    }
  },
  o_ = "ngNavigationCancelingError";
function Dc(n, i) {
  let { redirectTo: e, navigationBehaviorOptions: t } = po(i)
      ? { redirectTo: i, navigationBehaviorOptions: void 0 }
      : i,
    r = a_(!1, Qi.Redirect);
  return (r.url = e), (r.navigationBehaviorOptions = t), r;
}
function a_(n, i) {
  let e = new Error(`NavigationCancelingError: ${n || ""}`);
  return (e[o_] = !0), (e.cancellationCode = i), e;
}
function cw(n) {
  return s_(n) && po(n.url);
}
function s_(n) {
  return !!n && n[o_];
}
var dw = (n, i, e, t) =>
    Ke(
      (r) => (
        new Qh(i, r.targetRouterState, r.currentRouterState, e, t).activate(n),
        r
      )
    ),
  Qh = class {
    constructor(i, e, t, r, o) {
      (this.routeReuseStrategy = i),
        (this.futureState = e),
        (this.currState = t),
        (this.forwardEvent = r),
        (this.inputBindingEnabled = o);
    }
    activate(i) {
      let e = this.futureState._root,
        t = this.currState ? this.currState._root : null;
      this.deactivateChildRoutes(e, t, i),
        Eh(this.futureState.root),
        this.activateChildRoutes(e, t, i);
    }
    deactivateChildRoutes(i, e, t) {
      let r = ta(e);
      i.children.forEach((o) => {
        let a = o.value.outlet;
        this.deactivateRoutes(o, r[a], t), delete r[a];
      }),
        Object.values(r).forEach((o) => {
          this.deactivateRouteAndItsChildren(o, t);
        });
    }
    deactivateRoutes(i, e, t) {
      let r = i.value,
        o = e ? e.value : null;
      if (r === o)
        if (r.component) {
          let a = t.getContext(r.outlet);
          a && this.deactivateChildRoutes(i, e, a.children);
        } else this.deactivateChildRoutes(i, e, t);
      else o && this.deactivateRouteAndItsChildren(e, t);
    }
    deactivateRouteAndItsChildren(i, e) {
      i.value.component &&
      this.routeReuseStrategy.shouldDetach(i.value.snapshot)
        ? this.detachAndStoreRouteSubtree(i, e)
        : this.deactivateRouteAndOutlet(i, e);
    }
    detachAndStoreRouteSubtree(i, e) {
      let t = e.getContext(i.value.outlet),
        r = t && i.value.component ? t.children : e,
        o = ta(i);
      for (let a of Object.values(o)) this.deactivateRouteAndItsChildren(a, r);
      if (t && t.outlet) {
        let a = t.outlet.detach(),
          d = t.children.onOutletDeactivated();
        this.routeReuseStrategy.store(i.value.snapshot, {
          componentRef: a,
          route: i,
          contexts: d,
        });
      }
    }
    deactivateRouteAndOutlet(i, e) {
      let t = e.getContext(i.value.outlet),
        r = t && i.value.component ? t.children : e,
        o = ta(i);
      for (let a of Object.values(o)) this.deactivateRouteAndItsChildren(a, r);
      t &&
        (t.outlet && (t.outlet.deactivate(), t.children.onOutletDeactivated()),
        (t.attachRef = null),
        (t.route = null));
    }
    activateChildRoutes(i, e, t) {
      let r = ta(e);
      i.children.forEach((o) => {
        this.activateRoutes(o, r[o.value.outlet], t),
          this.forwardEvent(new $h(o.value.snapshot));
      }),
        i.children.length && this.forwardEvent(new Uh(i.value.snapshot));
    }
    activateRoutes(i, e, t) {
      let r = i.value,
        o = e ? e.value : null;
      if ((Eh(r), r === o))
        if (r.component) {
          let a = t.getOrCreateContext(r.outlet);
          this.activateChildRoutes(i, e, a.children);
        } else this.activateChildRoutes(i, e, t);
      else if (r.component) {
        let a = t.getOrCreateContext(r.outlet);
        if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
          let d = this.routeReuseStrategy.retrieve(r.snapshot);
          this.routeReuseStrategy.store(r.snapshot, null),
            a.children.onOutletReAttached(d.contexts),
            (a.attachRef = d.componentRef),
            (a.route = d.route.value),
            a.outlet && a.outlet.attach(d.componentRef, d.route.value),
            Eh(d.route.value),
            this.activateChildRoutes(i, null, a.children);
        } else
          (a.attachRef = null),
            (a.route = r),
            a.outlet && a.outlet.activateWith(r, a.injector),
            this.activateChildRoutes(i, null, a.children);
      } else this.activateChildRoutes(i, null, t);
    }
  },
  Mc = class {
    constructor(i) {
      (this.path = i), (this.route = this.path[this.path.length - 1]);
    }
  },
  ra = class {
    constructor(i, e) {
      (this.component = i), (this.route = e);
    }
  };
function uw(n, i, e) {
  let t = n._root,
    r = i ? i._root : null;
  return hs(t, r, e, [t.value]);
}
function hw(n) {
  let i = n.routeConfig ? n.routeConfig.canActivateChild : null;
  return !i || i.length === 0 ? null : { node: n, guards: i };
}
function da(n, i) {
  let e = Symbol(),
    t = i.get(n, e);
  return t === e ? (typeof n == "function" && !vg(n) ? n : i.get(n)) : t;
}
function hs(
  n,
  i,
  e,
  t,
  r = { canDeactivateChecks: [], canActivateChecks: [] }
) {
  let o = ta(i);
  return (
    n.children.forEach((a) => {
      pw(a, o[a.value.outlet], e, t.concat([a.value]), r),
        delete o[a.value.outlet];
    }),
    Object.entries(o).forEach(([a, d]) => gs(d, e.getContext(a), r)),
    r
  );
}
function pw(
  n,
  i,
  e,
  t,
  r = { canDeactivateChecks: [], canActivateChecks: [] }
) {
  let o = n.value,
    a = i ? i.value : null,
    d = e ? e.getContext(n.value.outlet) : null;
  if (a && o.routeConfig === a.routeConfig) {
    let u = mw(a, o, o.routeConfig.runGuardsAndResolvers);
    u
      ? r.canActivateChecks.push(new Mc(t))
      : ((o.data = a.data), (o._resolvedData = a._resolvedData)),
      o.component ? hs(n, i, d ? d.children : null, t, r) : hs(n, i, e, t, r),
      u &&
        d &&
        d.outlet &&
        d.outlet.isActivated &&
        r.canDeactivateChecks.push(new ra(d.outlet.component, a));
  } else
    a && gs(i, d, r),
      r.canActivateChecks.push(new Mc(t)),
      o.component
        ? hs(n, null, d ? d.children : null, t, r)
        : hs(n, null, e, t, r);
  return r;
}
function mw(n, i, e) {
  if (typeof e == "function") return e(n, i);
  switch (e) {
    case "pathParamsChange":
      return !ho(n.url, i.url);
    case "pathParamsOrQueryParamsChange":
      return !ho(n.url, i.url) || !Yn(n.queryParams, i.queryParams);
    case "always":
      return !0;
    case "paramsOrQueryParamsChange":
      return !qh(n, i) || !Yn(n.queryParams, i.queryParams);
    case "paramsChange":
    default:
      return !qh(n, i);
  }
}
function gs(n, i, e) {
  let t = ta(n),
    r = n.value;
  Object.entries(t).forEach(([o, a]) => {
    r.component
      ? i
        ? gs(a, i.children.getContext(o), e)
        : gs(a, null, e)
      : gs(a, i, e);
  }),
    r.component
      ? i && i.outlet && i.outlet.isActivated
        ? e.canDeactivateChecks.push(new ra(i.outlet.component, r))
        : e.canDeactivateChecks.push(new ra(null, r))
      : e.canDeactivateChecks.push(new ra(null, r));
}
function Os(n) {
  return typeof n == "function";
}
function fw(n) {
  return typeof n == "boolean";
}
function gw(n) {
  return n && Os(n.canLoad);
}
function _w(n) {
  return n && Os(n.canActivate);
}
function bw(n) {
  return n && Os(n.canActivateChild);
}
function vw(n) {
  return n && Os(n.canDeactivate);
}
function yw(n) {
  return n && Os(n.canMatch);
}
function l_(n) {
  return n instanceof ug || n?.name === "EmptyError";
}
var hc = Symbol("INITIAL_VALUE");
function ca() {
  return Ci((n) =>
    ro(n.map((i) => i.pipe($i(1), Un(hc)))).pipe(
      Ke((i) => {
        for (let e of i)
          if (e !== !0) {
            if (e === hc) return hc;
            if (e === !1 || xw(e)) return e;
          }
        return !0;
      }),
      St((i) => i !== hc),
      $i(1)
    )
  );
}
function xw(n) {
  return po(n) || n instanceof xs;
}
function Cw(n, i) {
  return Ri((e) => {
    let {
      targetSnapshot: t,
      currentSnapshot: r,
      guards: { canActivateChecks: o, canDeactivateChecks: a },
    } = e;
    return a.length === 0 && o.length === 0
      ? fe(Te(G({}, e), { guardsResult: !0 }))
      : ww(a, t, r, n).pipe(
          Ri((d) => (d && fw(d) ? Sw(t, o, n, i) : fe(d))),
          Ke((d) => Te(G({}, e), { guardsResult: d }))
        );
  });
}
function ww(n, i, e, t) {
  return ui(n).pipe(
    Ri((r) => Ow(r.component, r.route, e, i, t)),
    Er((r) => r !== !0, !0)
  );
}
function Sw(n, i, e, t) {
  return ui(i).pipe(
    Mr((r) =>
      jl(
        Mw(r.route.parent, t),
        Dw(r.route, t),
        Ew(n, r.path, e),
        Tw(n, r.route, e)
      )
    ),
    Er((r) => r !== !0, !0)
  );
}
function Dw(n, i) {
  return n !== null && i && i(new zh(n)), fe(!0);
}
function Mw(n, i) {
  return n !== null && i && i(new Hh(n)), fe(!0);
}
function Tw(n, i, e) {
  let t = i.routeConfig ? i.routeConfig.canActivate : null;
  if (!t || t.length === 0) return fe(!0);
  let r = t.map((o) =>
    $u(() => {
      let a = Ts(i) ?? e,
        d = da(o, a),
        u = _w(d) ? d.canActivate(i, n) : sn(a, () => d(i, n));
      return Nr(u).pipe(Er());
    })
  );
  return fe(r).pipe(ca());
}
function Ew(n, i, e) {
  let t = i[i.length - 1],
    o = i
      .slice(0, i.length - 1)
      .reverse()
      .map((a) => hw(a))
      .filter((a) => a !== null)
      .map((a) =>
        $u(() => {
          let d = a.guards.map((u) => {
            let f = Ts(a.node) ?? e,
              v = da(u, f),
              S = bw(v) ? v.canActivateChild(t, n) : sn(f, () => v(t, n));
            return Nr(S).pipe(Er());
          });
          return fe(d).pipe(ca());
        })
      );
  return fe(o).pipe(ca());
}
function Ow(n, i, e, t, r) {
  let o = i && i.routeConfig ? i.routeConfig.canDeactivate : null;
  if (!o || o.length === 0) return fe(!0);
  let a = o.map((d) => {
    let u = Ts(i) ?? r,
      f = da(d, u),
      v = vw(f) ? f.canDeactivate(n, i, e, t) : sn(u, () => f(n, i, e, t));
    return Nr(v).pipe(Er());
  });
  return fe(a).pipe(ca());
}
function kw(n, i, e, t) {
  let r = i.canLoad;
  if (r === void 0 || r.length === 0) return fe(!0);
  let o = r.map((a) => {
    let d = da(a, n),
      u = gw(d) ? d.canLoad(i, e) : sn(n, () => d(i, e));
    return Nr(u);
  });
  return fe(o).pipe(ca(), c_(t));
}
function c_(n) {
  return dg(
    Xt((i) => {
      if (typeof i != "boolean") throw Dc(n, i);
    }),
    Ke((i) => i === !0)
  );
}
function Pw(n, i, e, t) {
  let r = i.canMatch;
  if (!r || r.length === 0) return fe(!0);
  let o = r.map((a) => {
    let d = da(a, n),
      u = yw(d) ? d.canMatch(i, e) : sn(n, () => d(i, e));
    return Nr(u);
  });
  return fe(o).pipe(ca(), c_(t));
}
var Cs = class {
    constructor(i) {
      this.segmentGroup = i || null;
    }
  },
  ws = class extends Error {
    constructor(i) {
      super(), (this.urlTree = i);
    }
  };
function ea(n) {
  return Ya(new Cs(n));
}
function Iw(n) {
  return Ya(new pt(4e3, !1));
}
function Aw(n) {
  return Ya(a_(!1, Qi.GuardRejected));
}
var Xh = class {
    constructor(i, e) {
      (this.urlSerializer = i), (this.urlTree = e);
    }
    lineralizeSegments(i, e) {
      let t = [],
        r = e.root;
      for (;;) {
        if (((t = t.concat(r.segments)), r.numberOfChildren === 0))
          return fe(t);
        if (r.numberOfChildren > 1 || !r.children[Ye])
          return Iw(`${i.redirectTo}`);
        r = r.children[Ye];
      }
    }
    applyRedirectCommands(i, e, t, r, o) {
      if (typeof e != "string") {
        let d = e,
          {
            queryParams: u,
            fragment: f,
            routeConfig: v,
            url: S,
            outlet: T,
            params: M,
            data: I,
            title: L,
          } = r,
          E = sn(o, () =>
            d({
              params: M,
              data: I,
              queryParams: u,
              fragment: f,
              routeConfig: v,
              url: S,
              outlet: T,
              title: L,
            })
          );
        if (E instanceof hr) throw new ws(E);
        e = E;
      }
      let a = this.applyRedirectCreateUrlTree(
        e,
        this.urlSerializer.parse(e),
        i,
        t
      );
      if (e[0] === "/") throw new ws(a);
      return a;
    }
    applyRedirectCreateUrlTree(i, e, t, r) {
      let o = this.createSegmentGroup(i, e.root, t, r);
      return new hr(
        o,
        this.createQueryParams(e.queryParams, this.urlTree.queryParams),
        e.fragment
      );
    }
    createQueryParams(i, e) {
      let t = {};
      return (
        Object.entries(i).forEach(([r, o]) => {
          if (typeof o == "string" && o[0] === ":") {
            let d = o.substring(1);
            t[r] = e[d];
          } else t[r] = o;
        }),
        t
      );
    }
    createSegmentGroup(i, e, t, r) {
      let o = this.createSegments(i, e.segments, t, r),
        a = {};
      return (
        Object.entries(e.children).forEach(([d, u]) => {
          a[d] = this.createSegmentGroup(i, u, t, r);
        }),
        new mt(o, a)
      );
    }
    createSegments(i, e, t, r) {
      return e.map((o) =>
        o.path[0] === ":" ? this.findPosParam(i, o, r) : this.findOrReturn(o, t)
      );
    }
    findPosParam(i, e, t) {
      let r = t[e.path.substring(1)];
      if (!r) throw new pt(4001, !1);
      return r;
    }
    findOrReturn(i, e) {
      let t = 0;
      for (let r of e) {
        if (r.path === i.path) return e.splice(t), r;
        t++;
      }
      return i;
    }
  },
  Zh = {
    matched: !1,
    consumedSegments: [],
    remainingSegments: [],
    parameters: {},
    positionalParamSegments: {},
  };
function Rw(n, i, e, t, r) {
  let o = d_(n, i, e);
  return o.matched
    ? ((t = nw(i, t)),
      Pw(t, i, e, r).pipe(Ke((a) => (a === !0 ? o : G({}, Zh)))))
    : fe(o);
}
function d_(n, i, e) {
  if (i.path === "**") return Fw(e);
  if (i.path === "")
    return i.pathMatch === "full" && (n.hasChildren() || e.length > 0)
      ? G({}, Zh)
      : {
          matched: !0,
          consumedSegments: [],
          remainingSegments: e,
          parameters: {},
          positionalParamSegments: {},
        };
  let r = (i.matcher || PC)(e, n, i);
  if (!r) return G({}, Zh);
  let o = {};
  Object.entries(r.posParams ?? {}).forEach(([d, u]) => {
    o[d] = u.path;
  });
  let a =
    r.consumed.length > 0
      ? G(G({}, o), r.consumed[r.consumed.length - 1].parameters)
      : o;
  return {
    matched: !0,
    consumedSegments: r.consumed,
    remainingSegments: e.slice(r.consumed.length),
    parameters: a,
    positionalParamSegments: r.posParams ?? {},
  };
}
function Fw(n) {
  return {
    matched: !0,
    parameters: n.length > 0 ? z0(n).parameters : {},
    consumedSegments: n,
    remainingSegments: [],
    positionalParamSegments: {},
  };
}
function L0(n, i, e, t) {
  return e.length > 0 && Vw(n, e, t)
    ? {
        segmentGroup: new mt(i, Lw(t, new mt(e, n.children))),
        slicedSegments: [],
      }
    : e.length === 0 && Bw(n, e, t)
    ? {
        segmentGroup: new mt(n.segments, Nw(n, e, t, n.children)),
        slicedSegments: e,
      }
    : { segmentGroup: new mt(n.segments, n.children), slicedSegments: e };
}
function Nw(n, i, e, t) {
  let r = {};
  for (let o of e)
    if (Oc(n, i, o) && !t[Mn(o)]) {
      let a = new mt([], {});
      r[Mn(o)] = a;
    }
  return G(G({}, t), r);
}
function Lw(n, i) {
  let e = {};
  e[Ye] = i;
  for (let t of n)
    if (t.path === "" && Mn(t) !== Ye) {
      let r = new mt([], {});
      e[Mn(t)] = r;
    }
  return e;
}
function Vw(n, i, e) {
  return e.some((t) => Oc(n, i, t) && Mn(t) !== Ye);
}
function Bw(n, i, e) {
  return e.some((t) => Oc(n, i, t));
}
function Oc(n, i, e) {
  return (n.hasChildren() || i.length > 0) && e.pathMatch === "full"
    ? !1
    : e.path === "";
}
function jw(n, i, e) {
  return i.length === 0 && !n.children[e];
}
var Jh = class {};
function Hw(n, i, e, t, r, o, a = "emptyOnly") {
  return new ep(n, i, e, t, r, a, o).recognize();
}
var Uw = 31,
  ep = class {
    constructor(i, e, t, r, o, a, d) {
      (this.injector = i),
        (this.configLoader = e),
        (this.rootComponentType = t),
        (this.config = r),
        (this.urlTree = o),
        (this.paramsInheritanceStrategy = a),
        (this.urlSerializer = d),
        (this.applyRedirects = new Xh(this.urlSerializer, this.urlTree)),
        (this.absoluteRedirectCount = 0),
        (this.allowRedirects = !0);
    }
    noMatchError(i) {
      return new pt(4002, `'${i.segmentGroup}'`);
    }
    recognize() {
      let i = L0(this.urlTree.root, [], [], this.config).segmentGroup;
      return this.match(i).pipe(
        Ke(({ children: e, rootSnapshot: t }) => {
          let r = new Ki(t, e),
            o = new Sc("", r),
            a = QC(t, [], this.urlTree.queryParams, this.urlTree.fragment);
          return (
            (a.queryParams = this.urlTree.queryParams),
            (o.url = this.urlSerializer.serialize(a)),
            { state: o, tree: a }
          );
        })
      );
    }
    match(i) {
      let e = new na(
        [],
        Object.freeze({}),
        Object.freeze(G({}, this.urlTree.queryParams)),
        this.urlTree.fragment,
        Object.freeze({}),
        Ye,
        this.rootComponentType,
        null,
        {}
      );
      return this.processSegmentGroup(
        this.injector,
        this.config,
        i,
        Ye,
        e
      ).pipe(
        Ke((t) => ({ children: t, rootSnapshot: e })),
        Wo((t) => {
          if (t instanceof ws)
            return (this.urlTree = t.urlTree), this.match(t.urlTree.root);
          throw t instanceof Cs ? this.noMatchError(t) : t;
        })
      );
    }
    processSegmentGroup(i, e, t, r, o) {
      return t.segments.length === 0 && t.hasChildren()
        ? this.processChildren(i, e, t, o)
        : this.processSegment(i, e, t, t.segments, r, !0, o).pipe(
            Ke((a) => (a instanceof Ki ? [a] : []))
          );
    }
    processChildren(i, e, t, r) {
      let o = [];
      for (let a of Object.keys(t.children))
        a === "primary" ? o.unshift(a) : o.push(a);
      return ui(o).pipe(
        Mr((a) => {
          let d = t.children[a],
            u = rw(e, a);
          return this.processSegmentGroup(i, u, d, a, r);
        }),
        bg((a, d) => (a.push(...d), a)),
        Yu(null),
        _g(),
        Ri((a) => {
          if (a === null) return ea(t);
          let d = u_(a);
          return zw(d), fe(d);
        })
      );
    }
    processSegment(i, e, t, r, o, a, d) {
      return ui(e).pipe(
        Mr((u) =>
          this.processSegmentAgainstRoute(
            u._injector ?? i,
            e,
            u,
            t,
            r,
            o,
            a,
            d
          ).pipe(
            Wo((f) => {
              if (f instanceof Cs) return fe(null);
              throw f;
            })
          )
        ),
        Er((u) => !!u),
        Wo((u) => {
          if (l_(u)) return jw(t, r, o) ? fe(new Jh()) : ea(t);
          throw u;
        })
      );
    }
    processSegmentAgainstRoute(i, e, t, r, o, a, d, u) {
      return Mn(t) !== a && (a === Ye || !Oc(r, o, t))
        ? ea(r)
        : t.redirectTo === void 0
        ? this.matchSegmentAgainstRoute(i, r, t, o, a, u)
        : this.allowRedirects && d
        ? this.expandSegmentAgainstRouteUsingRedirect(i, r, e, t, o, a, u)
        : ea(r);
    }
    expandSegmentAgainstRouteUsingRedirect(i, e, t, r, o, a, d) {
      let {
        matched: u,
        parameters: f,
        consumedSegments: v,
        positionalParamSegments: S,
        remainingSegments: T,
      } = d_(e, r, o);
      if (!u) return ea(e);
      typeof r.redirectTo == "string" &&
        r.redirectTo[0] === "/" &&
        (this.absoluteRedirectCount++,
        this.absoluteRedirectCount > Uw && (this.allowRedirects = !1));
      let M = new na(
          o,
          f,
          Object.freeze(G({}, this.urlTree.queryParams)),
          this.urlTree.fragment,
          V0(r),
          Mn(r),
          r.component ?? r._loadedComponent ?? null,
          r,
          B0(r)
        ),
        I = wc(M, d, this.paramsInheritanceStrategy);
      (M.params = Object.freeze(I.params)), (M.data = Object.freeze(I.data));
      let L = this.applyRedirects.applyRedirectCommands(
        v,
        r.redirectTo,
        S,
        M,
        i
      );
      return this.applyRedirects
        .lineralizeSegments(r, L)
        .pipe(Ri((E) => this.processSegment(i, t, e, E.concat(T), a, !1, d)));
    }
    matchSegmentAgainstRoute(i, e, t, r, o, a) {
      let d = Rw(e, t, r, i, this.urlSerializer);
      return (
        t.path === "**" && (e.children = {}),
        d.pipe(
          Ci((u) =>
            u.matched
              ? ((i = t._injector ?? i),
                this.getChildConfig(i, t, r).pipe(
                  Ci(({ routes: f }) => {
                    let v = t._loadedInjector ?? i,
                      {
                        parameters: S,
                        consumedSegments: T,
                        remainingSegments: M,
                      } = u,
                      I = new na(
                        T,
                        S,
                        Object.freeze(G({}, this.urlTree.queryParams)),
                        this.urlTree.fragment,
                        V0(t),
                        Mn(t),
                        t.component ?? t._loadedComponent ?? null,
                        t,
                        B0(t)
                      ),
                      L = wc(I, a, this.paramsInheritanceStrategy);
                    (I.params = Object.freeze(L.params)),
                      (I.data = Object.freeze(L.data));
                    let { segmentGroup: E, slicedSegments: F } = L0(e, T, M, f);
                    if (F.length === 0 && E.hasChildren())
                      return this.processChildren(v, f, E, I).pipe(
                        Ke((re) => new Ki(I, re))
                      );
                    if (f.length === 0 && F.length === 0)
                      return fe(new Ki(I, []));
                    let ee = Mn(t) === o;
                    return this.processSegment(
                      v,
                      f,
                      E,
                      F,
                      ee ? Ye : o,
                      !0,
                      I
                    ).pipe(Ke((re) => new Ki(I, re instanceof Ki ? [re] : [])));
                  })
                ))
              : ea(e)
          )
        )
      );
    }
    getChildConfig(i, e, t) {
      return e.children
        ? fe({ routes: e.children, injector: i })
        : e.loadChildren
        ? e._loadedRoutes !== void 0
          ? fe({ routes: e._loadedRoutes, injector: e._loadedInjector })
          : kw(i, e, t, this.urlSerializer).pipe(
              Ri((r) =>
                r
                  ? this.configLoader.loadChildren(i, e).pipe(
                      Xt((o) => {
                        (e._loadedRoutes = o.routes),
                          (e._loadedInjector = o.injector);
                      })
                    )
                  : Aw(e)
              )
            )
        : fe({ routes: [], injector: i });
    }
  };
function zw(n) {
  n.sort((i, e) =>
    i.value.outlet === Ye
      ? -1
      : e.value.outlet === Ye
      ? 1
      : i.value.outlet.localeCompare(e.value.outlet)
  );
}
function $w(n) {
  let i = n.value.routeConfig;
  return i && i.path === "";
}
function u_(n) {
  let i = [],
    e = new Set();
  for (let t of n) {
    if (!$w(t)) {
      i.push(t);
      continue;
    }
    let r = i.find((o) => t.value.routeConfig === o.value.routeConfig);
    r !== void 0 ? (r.children.push(...t.children), e.add(r)) : i.push(t);
  }
  for (let t of e) {
    let r = u_(t.children);
    i.push(new Ki(t.value, r));
  }
  return i.filter((t) => !e.has(t));
}
function V0(n) {
  return n.data || {};
}
function B0(n) {
  return n.resolve || {};
}
function Ww(n, i, e, t, r, o) {
  return Ri((a) =>
    Hw(n, i, e, t, a.extractedUrl, r, o).pipe(
      Ke(({ state: d, tree: u }) =>
        Te(G({}, a), { targetSnapshot: d, urlAfterRedirects: u })
      )
    )
  );
}
function Gw(n, i) {
  return Ri((e) => {
    let {
      targetSnapshot: t,
      guards: { canActivateChecks: r },
    } = e;
    if (!r.length) return fe(e);
    let o = new Set(r.map((u) => u.route)),
      a = new Set();
    for (let u of o) if (!a.has(u)) for (let f of h_(u)) a.add(f);
    let d = 0;
    return ui(a).pipe(
      Mr((u) =>
        o.has(u)
          ? Yw(u, t, n, i)
          : ((u.data = wc(u, u.parent, n).resolve), fe(void 0))
      ),
      Xt(() => d++),
      qu(1),
      Ri((u) => (d === a.size ? fe(e) : Hn))
    );
  });
}
function h_(n) {
  let i = n.children.map((e) => h_(e)).flat();
  return [n, ...i];
}
function Yw(n, i, e, t) {
  let r = n.routeConfig,
    o = n._resolve;
  return (
    r?.title !== void 0 && !r_(r) && (o[Ds] = r.title),
    qw(o, n, i, t).pipe(
      Ke(
        (a) => (
          (n._resolvedData = a), (n.data = wc(n, n.parent, e).resolve), null
        )
      )
    )
  );
}
function qw(n, i, e, t) {
  let r = Ph(n);
  if (r.length === 0) return fe({});
  let o = {};
  return ui(r).pipe(
    Ri((a) =>
      Kw(n[a], i, e, t).pipe(
        Er(),
        Xt((d) => {
          if (d instanceof xs) throw Dc(new aa(), d);
          o[a] = d;
        })
      )
    ),
    qu(1),
    fg(o),
    Wo((a) => (l_(a) ? Hn : Ya(a)))
  );
}
function Kw(n, i, e, t) {
  let r = Ts(i) ?? t,
    o = da(n, r),
    a = o.resolve ? o.resolve(i, e) : sn(r, () => o(i, e));
  return Nr(a);
}
function Oh(n) {
  return Ci((i) => {
    let e = n(i);
    return e ? ui(e).pipe(Ke(() => i)) : fe(i);
  });
}
var p_ = (() => {
    class n {
      buildTitle(e) {
        let t,
          r = e.root;
        for (; r !== void 0; )
          (t = this.getResolvedTitleForRoute(r) ?? t),
            (r = r.children.find((o) => o.outlet === Ye));
        return t;
      }
      getResolvedTitleForRoute(e) {
        return e.data[Ds];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: () => W(Qw), providedIn: "root" });
      }
    }
    return n;
  })(),
  Qw = (() => {
    class n extends p_ {
      constructor(e) {
        super(), (this.title = e);
      }
      updateTitle(e) {
        let t = this.buildTitle(e);
        t !== void 0 && this.title.setTitle(t);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(O0));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  ks = new Ce("", { providedIn: "root", factory: () => ({}) }),
  Xw = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["ng-component"]],
          standalone: !0,
          features: [le],
          decls: 1,
          vars: 0,
          template: function (t, r) {
            t & 1 && U(0, "router-outlet");
          },
          dependencies: [mo],
          encapsulation: 2,
        });
      }
    }
    return n;
  })();
function np(n) {
  let i = n.children && n.children.map(np),
    e = i ? Te(G({}, n), { children: i }) : G({}, n);
  return (
    !e.component &&
      !e.loadComponent &&
      (i || e.loadChildren) &&
      e.outlet &&
      e.outlet !== Ye &&
      (e.component = Xw),
    e
  );
}
var Ss = new Ce(""),
  rp = (() => {
    class n {
      constructor() {
        (this.componentLoaders = new WeakMap()),
          (this.childrenLoaders = new WeakMap()),
          (this.compiler = W(Ql));
      }
      loadComponent(e) {
        if (this.componentLoaders.get(e)) return this.componentLoaders.get(e);
        if (e._loadedComponent) return fe(e._loadedComponent);
        this.onLoadStartListener && this.onLoadStartListener(e);
        let t = Nr(e.loadComponent()).pipe(
            Ke(m_),
            Xt((o) => {
              this.onLoadEndListener && this.onLoadEndListener(e),
                (e._loadedComponent = o);
            }),
            Tr(() => {
              this.componentLoaders.delete(e);
            })
          ),
          r = new Uu(t, () => new Ee()).pipe(Hu());
        return this.componentLoaders.set(e, r), r;
      }
      loadChildren(e, t) {
        if (this.childrenLoaders.get(t)) return this.childrenLoaders.get(t);
        if (t._loadedRoutes)
          return fe({ routes: t._loadedRoutes, injector: t._loadedInjector });
        this.onLoadStartListener && this.onLoadStartListener(t);
        let o = Zw(t, this.compiler, e, this.onLoadEndListener).pipe(
            Tr(() => {
              this.childrenLoaders.delete(t);
            })
          ),
          a = new Uu(o, () => new Ee()).pipe(Hu());
        return this.childrenLoaders.set(t, a), a;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function Zw(n, i, e, t) {
  return Nr(n.loadChildren()).pipe(
    Ke(m_),
    Ri((r) =>
      r instanceof Fg || Array.isArray(r) ? fe(r) : ui(i.compileModuleAsync(r))
    ),
    Ke((r) => {
      t && t(n);
      let o,
        a,
        d = !1;
      return (
        Array.isArray(r)
          ? ((a = r), (d = !0))
          : ((o = r.create(e).injector),
            (a = o.get(Ss, [], { optional: !0, self: !0 }).flat())),
        { routes: a.map(np), injector: o }
      );
    })
  );
}
function Jw(n) {
  return n && typeof n == "object" && "default" in n;
}
function m_(n) {
  return Jw(n) ? n.default : n;
}
var op = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: () => W(eS), providedIn: "root" });
      }
    }
    return n;
  })(),
  eS = (() => {
    class n {
      shouldProcessUrl(e) {
        return !0;
      }
      extract(e) {
        return e;
      }
      merge(e, t) {
        return e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  f_ = new Ce(""),
  g_ = new Ce("");
function tS(n, i, e) {
  let t = n.get(g_),
    r = n.get(Oe);
  return n.get(Me).runOutsideAngular(() => {
    if (!r.startViewTransition || t.skipNextTransition)
      return (t.skipNextTransition = !1), new Promise((f) => setTimeout(f));
    let o,
      a = new Promise((f) => {
        o = f;
      }),
      d = r.startViewTransition(() => (o(), iS(n))),
      { onViewTransitionCreated: u } = t;
    return u && sn(n, () => u({ transition: d, from: i, to: e })), a;
  });
}
function iS(n) {
  return new Promise((i) => {
    xn({ read: () => setTimeout(i) }, { injector: n });
  });
}
var nS = new Ce(""),
  ap = (() => {
    class n {
      get hasRequestedNavigation() {
        return this.navigationId !== 0;
      }
      constructor() {
        (this.currentNavigation = null),
          (this.currentTransition = null),
          (this.lastSuccessfulNavigation = null),
          (this.events = new Ee()),
          (this.transitionAbortSubject = new Ee()),
          (this.configLoader = W(rp)),
          (this.environmentInjector = W(an)),
          (this.urlSerializer = W(Ms)),
          (this.rootContexts = W(Es)),
          (this.location = W(cr)),
          (this.inputBindingEnabled = W(Ec, { optional: !0 }) !== null),
          (this.titleStrategy = W(p_)),
          (this.options = W(ks, { optional: !0 }) || {}),
          (this.paramsInheritanceStrategy =
            this.options.paramsInheritanceStrategy || "emptyOnly"),
          (this.urlHandlingStrategy = W(op)),
          (this.createViewTransition = W(f_, { optional: !0 })),
          (this.navigationErrorHandler = W(nS, { optional: !0 })),
          (this.navigationId = 0),
          (this.afterPreactivation = () => fe(void 0)),
          (this.rootComponentType = null);
        let e = (r) => this.events.next(new Bh(r)),
          t = (r) => this.events.next(new jh(r));
        (this.configLoader.onLoadEndListener = t),
          (this.configLoader.onLoadStartListener = e);
      }
      complete() {
        this.transitions?.complete();
      }
      handleNavigationRequest(e) {
        let t = ++this.navigationId;
        this.transitions?.next(
          Te(G(G({}, this.transitions.value), e), { id: t })
        );
      }
      setupNavigations(e, t, r) {
        return (
          (this.transitions = new Nt({
            id: 0,
            currentUrlTree: t,
            currentRawUrl: t,
            extractedUrl: this.urlHandlingStrategy.extract(t),
            urlAfterRedirects: this.urlHandlingStrategy.extract(t),
            rawUrl: t,
            extras: {},
            resolve: () => {},
            reject: () => {},
            promise: Promise.resolve(!0),
            source: fs,
            restoredState: null,
            currentSnapshot: r.snapshot,
            targetSnapshot: null,
            currentRouterState: r,
            targetRouterState: null,
            guards: { canActivateChecks: [], canDeactivateChecks: [] },
            guardsResult: null,
          })),
          this.transitions.pipe(
            St((o) => o.id !== 0),
            Ke((o) =>
              Te(G({}, o), {
                extractedUrl: this.urlHandlingStrategy.extract(o.rawUrl),
              })
            ),
            Ci((o) => {
              let a = !1,
                d = !1;
              return fe(o).pipe(
                Ci((u) => {
                  if (this.navigationId > o.id)
                    return (
                      this.cancelNavigationTransition(
                        o,
                        "",
                        Qi.SupersededByNewNavigation
                      ),
                      Hn
                    );
                  (this.currentTransition = o),
                    (this.currentNavigation = {
                      id: u.id,
                      initialUrl: u.rawUrl,
                      extractedUrl: u.extractedUrl,
                      targetBrowserUrl:
                        typeof u.extras.browserUrl == "string"
                          ? this.urlSerializer.parse(u.extras.browserUrl)
                          : u.extras.browserUrl,
                      trigger: u.source,
                      extras: u.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? Te(G({}, this.lastSuccessfulNavigation), {
                            previousNavigation: null,
                          })
                        : null,
                    });
                  let f =
                      !e.navigated ||
                      this.isUpdatingInternalState() ||
                      this.isUpdatedBrowserUrl(),
                    v = u.extras.onSameUrlNavigation ?? e.onSameUrlNavigation;
                  if (!f && v !== "reload") {
                    let S = "";
                    return (
                      this.events.next(
                        new Fr(
                          u.id,
                          this.urlSerializer.serialize(u.rawUrl),
                          S,
                          bc.IgnoredSameUrlNavigation
                        )
                      ),
                      u.resolve(!1),
                      Hn
                    );
                  }
                  if (this.urlHandlingStrategy.shouldProcessUrl(u.rawUrl))
                    return fe(u).pipe(
                      Ci((S) => {
                        let T = this.transitions?.getValue();
                        return (
                          this.events.next(
                            new sa(
                              S.id,
                              this.urlSerializer.serialize(S.extractedUrl),
                              S.source,
                              S.restoredState
                            )
                          ),
                          T !== this.transitions?.getValue()
                            ? Hn
                            : Promise.resolve(S)
                        );
                      }),
                      Ww(
                        this.environmentInjector,
                        this.configLoader,
                        this.rootComponentType,
                        e.config,
                        this.urlSerializer,
                        this.paramsInheritanceStrategy
                      ),
                      Xt((S) => {
                        (o.targetSnapshot = S.targetSnapshot),
                          (o.urlAfterRedirects = S.urlAfterRedirects),
                          (this.currentNavigation = Te(
                            G({}, this.currentNavigation),
                            { finalUrl: S.urlAfterRedirects }
                          ));
                        let T = new vc(
                          S.id,
                          this.urlSerializer.serialize(S.extractedUrl),
                          this.urlSerializer.serialize(S.urlAfterRedirects),
                          S.targetSnapshot
                        );
                        this.events.next(T);
                      })
                    );
                  if (
                    f &&
                    this.urlHandlingStrategy.shouldProcessUrl(u.currentRawUrl)
                  ) {
                    let {
                        id: S,
                        extractedUrl: T,
                        source: M,
                        restoredState: I,
                        extras: L,
                      } = u,
                      E = new sa(S, this.urlSerializer.serialize(T), M, I);
                    this.events.next(E);
                    let F = i_(this.rootComponentType).snapshot;
                    return (
                      (this.currentTransition = o =
                        Te(G({}, u), {
                          targetSnapshot: F,
                          urlAfterRedirects: T,
                          extras: Te(G({}, L), {
                            skipLocationChange: !1,
                            replaceUrl: !1,
                          }),
                        })),
                      (this.currentNavigation.finalUrl = T),
                      fe(o)
                    );
                  } else {
                    let S = "";
                    return (
                      this.events.next(
                        new Fr(
                          u.id,
                          this.urlSerializer.serialize(u.extractedUrl),
                          S,
                          bc.IgnoredByUrlHandlingStrategy
                        )
                      ),
                      u.resolve(!1),
                      Hn
                    );
                  }
                }),
                Xt((u) => {
                  let f = new Fh(
                    u.id,
                    this.urlSerializer.serialize(u.extractedUrl),
                    this.urlSerializer.serialize(u.urlAfterRedirects),
                    u.targetSnapshot
                  );
                  this.events.next(f);
                }),
                Ke(
                  (u) => (
                    (this.currentTransition = o =
                      Te(G({}, u), {
                        guards: uw(
                          u.targetSnapshot,
                          u.currentSnapshot,
                          this.rootContexts
                        ),
                      })),
                    o
                  )
                ),
                Cw(this.environmentInjector, (u) => this.events.next(u)),
                Xt((u) => {
                  if (
                    ((o.guardsResult = u.guardsResult),
                    u.guardsResult && typeof u.guardsResult != "boolean")
                  )
                    throw Dc(this.urlSerializer, u.guardsResult);
                  let f = new Nh(
                    u.id,
                    this.urlSerializer.serialize(u.extractedUrl),
                    this.urlSerializer.serialize(u.urlAfterRedirects),
                    u.targetSnapshot,
                    !!u.guardsResult
                  );
                  this.events.next(f);
                }),
                St((u) =>
                  u.guardsResult
                    ? !0
                    : (this.cancelNavigationTransition(u, "", Qi.GuardRejected),
                      !1)
                ),
                Oh((u) => {
                  if (u.guards.canActivateChecks.length)
                    return fe(u).pipe(
                      Xt((f) => {
                        let v = new Lh(
                          f.id,
                          this.urlSerializer.serialize(f.extractedUrl),
                          this.urlSerializer.serialize(f.urlAfterRedirects),
                          f.targetSnapshot
                        );
                        this.events.next(v);
                      }),
                      Ci((f) => {
                        let v = !1;
                        return fe(f).pipe(
                          Gw(
                            this.paramsInheritanceStrategy,
                            this.environmentInjector
                          ),
                          Xt({
                            next: () => (v = !0),
                            complete: () => {
                              v ||
                                this.cancelNavigationTransition(
                                  f,
                                  "",
                                  Qi.NoDataFromResolver
                                );
                            },
                          })
                        );
                      }),
                      Xt((f) => {
                        let v = new Vh(
                          f.id,
                          this.urlSerializer.serialize(f.extractedUrl),
                          this.urlSerializer.serialize(f.urlAfterRedirects),
                          f.targetSnapshot
                        );
                        this.events.next(v);
                      })
                    );
                }),
                Oh((u) => {
                  let f = (v) => {
                    let S = [];
                    v.routeConfig?.loadComponent &&
                      !v.routeConfig._loadedComponent &&
                      S.push(
                        this.configLoader.loadComponent(v.routeConfig).pipe(
                          Xt((T) => {
                            v.component = T;
                          }),
                          Ke(() => {})
                        )
                      );
                    for (let T of v.children) S.push(...f(T));
                    return S;
                  };
                  return ro(f(u.targetSnapshot.root)).pipe(Yu(null), $i(1));
                }),
                Oh(() => this.afterPreactivation()),
                Ci(() => {
                  let { currentSnapshot: u, targetSnapshot: f } = o,
                    v = this.createViewTransition?.(
                      this.environmentInjector,
                      u.root,
                      f.root
                    );
                  return v ? ui(v).pipe(Ke(() => o)) : fe(o);
                }),
                Ke((u) => {
                  let f = aw(
                    e.routeReuseStrategy,
                    u.targetSnapshot,
                    u.currentRouterState
                  );
                  return (
                    (this.currentTransition = o =
                      Te(G({}, u), { targetRouterState: f })),
                    (this.currentNavigation.targetRouterState = f),
                    o
                  );
                }),
                Xt(() => {
                  this.events.next(new vs());
                }),
                dw(
                  this.rootContexts,
                  e.routeReuseStrategy,
                  (u) => this.events.next(u),
                  this.inputBindingEnabled
                ),
                $i(1),
                Xt({
                  next: (u) => {
                    (a = !0),
                      (this.lastSuccessfulNavigation = this.currentNavigation),
                      this.events.next(
                        new ci(
                          u.id,
                          this.urlSerializer.serialize(u.extractedUrl),
                          this.urlSerializer.serialize(u.urlAfterRedirects)
                        )
                      ),
                      this.titleStrategy?.updateTitle(
                        u.targetRouterState.snapshot
                      ),
                      u.resolve(!0);
                  },
                  complete: () => {
                    a = !0;
                  },
                }),
                zt(
                  this.transitionAbortSubject.pipe(
                    Xt((u) => {
                      throw u;
                    })
                  )
                ),
                Tr(() => {
                  !a &&
                    !d &&
                    this.cancelNavigationTransition(
                      o,
                      "",
                      Qi.SupersededByNewNavigation
                    ),
                    this.currentTransition?.id === o.id &&
                      ((this.currentNavigation = null),
                      (this.currentTransition = null));
                }),
                Wo((u) => {
                  if (((d = !0), s_(u)))
                    this.events.next(
                      new ur(
                        o.id,
                        this.urlSerializer.serialize(o.extractedUrl),
                        u.message,
                        u.cancellationCode
                      )
                    ),
                      cw(u)
                        ? this.events.next(
                            new la(u.url, u.navigationBehaviorOptions)
                          )
                        : o.resolve(!1);
                  else {
                    let f = new bs(
                      o.id,
                      this.urlSerializer.serialize(o.extractedUrl),
                      u,
                      o.targetSnapshot ?? void 0
                    );
                    try {
                      let v = sn(this.environmentInjector, () =>
                        this.navigationErrorHandler?.(f)
                      );
                      if (v instanceof xs) {
                        let { message: S, cancellationCode: T } = Dc(
                          this.urlSerializer,
                          v
                        );
                        this.events.next(
                          new ur(
                            o.id,
                            this.urlSerializer.serialize(o.extractedUrl),
                            S,
                            T
                          )
                        ),
                          this.events.next(
                            new la(v.redirectTo, v.navigationBehaviorOptions)
                          );
                      } else {
                        this.events.next(f);
                        let S = e.errorHandler(u);
                        o.resolve(!!S);
                      }
                    } catch (v) {
                      this.options.resolveNavigationPromiseOnError
                        ? o.resolve(!1)
                        : o.reject(v);
                    }
                  }
                  return Hn;
                })
              );
            })
          )
        );
      }
      cancelNavigationTransition(e, t, r) {
        let o = new ur(
          e.id,
          this.urlSerializer.serialize(e.extractedUrl),
          t,
          r
        );
        this.events.next(o), e.resolve(!1);
      }
      isUpdatingInternalState() {
        return (
          this.currentTransition?.extractedUrl.toString() !==
          this.currentTransition?.currentUrlTree.toString()
        );
      }
      isUpdatedBrowserUrl() {
        let e = this.urlHandlingStrategy.extract(
            this.urlSerializer.parse(this.location.path(!0))
          ),
          t =
            this.currentNavigation?.targetBrowserUrl ??
            this.currentNavigation?.extractedUrl;
        return (
          e.toString() !== t?.toString() &&
          !this.currentNavigation?.extras.skipLocationChange
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function rS(n) {
  return n !== fs;
}
var oS = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: () => W(aS), providedIn: "root" });
      }
    }
    return n;
  })(),
  tp = class {
    shouldDetach(i) {
      return !1;
    }
    store(i, e) {}
    shouldAttach(i) {
      return !1;
    }
    retrieve(i) {
      return null;
    }
    shouldReuseRoute(i, e) {
      return i.routeConfig === e.routeConfig;
    }
  },
  aS = (() => {
    class n extends tp {
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  __ = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: () => W(sS), providedIn: "root" });
      }
    }
    return n;
  })(),
  sS = (() => {
    class n extends __ {
      constructor() {
        super(...arguments),
          (this.location = W(cr)),
          (this.urlSerializer = W(Ms)),
          (this.options = W(ks, { optional: !0 }) || {}),
          (this.canceledNavigationResolution =
            this.options.canceledNavigationResolution || "replace"),
          (this.urlHandlingStrategy = W(op)),
          (this.urlUpdateStrategy =
            this.options.urlUpdateStrategy || "deferred"),
          (this.currentUrlTree = new hr()),
          (this.rawUrlTree = this.currentUrlTree),
          (this.currentPageId = 0),
          (this.lastSuccessfulId = -1),
          (this.routerState = i_(null)),
          (this.stateMemento = this.createStateMemento());
      }
      getCurrentUrlTree() {
        return this.currentUrlTree;
      }
      getRawUrlTree() {
        return this.rawUrlTree;
      }
      restoredState() {
        return this.location.getState();
      }
      get browserPageId() {
        return this.canceledNavigationResolution !== "computed"
          ? this.currentPageId
          : this.restoredState()?.ɵrouterPageId ?? this.currentPageId;
      }
      getRouterState() {
        return this.routerState;
      }
      createStateMemento() {
        return {
          rawUrlTree: this.rawUrlTree,
          currentUrlTree: this.currentUrlTree,
          routerState: this.routerState,
        };
      }
      registerNonRouterCurrentEntryChangeListener(e) {
        return this.location.subscribe((t) => {
          t.type === "popstate" && e(t.url, t.state);
        });
      }
      handleRouterEvent(e, t) {
        if (e instanceof sa) this.stateMemento = this.createStateMemento();
        else if (e instanceof Fr) this.rawUrlTree = t.initialUrl;
        else if (e instanceof vc) {
          if (
            this.urlUpdateStrategy === "eager" &&
            !t.extras.skipLocationChange
          ) {
            let r = this.urlHandlingStrategy.merge(t.finalUrl, t.initialUrl);
            this.setBrowserUrl(t.targetBrowserUrl ?? r, t);
          }
        } else
          e instanceof vs
            ? ((this.currentUrlTree = t.finalUrl),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                t.finalUrl,
                t.initialUrl
              )),
              (this.routerState = t.targetRouterState),
              this.urlUpdateStrategy === "deferred" &&
                !t.extras.skipLocationChange &&
                this.setBrowserUrl(t.targetBrowserUrl ?? this.rawUrlTree, t))
            : e instanceof ur &&
              (e.code === Qi.GuardRejected || e.code === Qi.NoDataFromResolver)
            ? this.restoreHistory(t)
            : e instanceof bs
            ? this.restoreHistory(t, !0)
            : e instanceof ci &&
              ((this.lastSuccessfulId = e.id),
              (this.currentPageId = this.browserPageId));
      }
      setBrowserUrl(e, t) {
        let r = e instanceof hr ? this.urlSerializer.serialize(e) : e;
        if (this.location.isCurrentPathEqualTo(r) || t.extras.replaceUrl) {
          let o = this.browserPageId,
            a = G(G({}, t.extras.state), this.generateNgRouterState(t.id, o));
          this.location.replaceState(r, "", a);
        } else {
          let o = G(
            G({}, t.extras.state),
            this.generateNgRouterState(t.id, this.browserPageId + 1)
          );
          this.location.go(r, "", o);
        }
      }
      restoreHistory(e, t = !1) {
        if (this.canceledNavigationResolution === "computed") {
          let r = this.browserPageId,
            o = this.currentPageId - r;
          o !== 0
            ? this.location.historyGo(o)
            : this.currentUrlTree === e.finalUrl &&
              o === 0 &&
              (this.resetState(e), this.resetUrlToCurrentUrlTree());
        } else
          this.canceledNavigationResolution === "replace" &&
            (t && this.resetState(e), this.resetUrlToCurrentUrlTree());
      }
      resetState(e) {
        (this.routerState = this.stateMemento.routerState),
          (this.currentUrlTree = this.stateMemento.currentUrlTree),
          (this.rawUrlTree = this.urlHandlingStrategy.merge(
            this.currentUrlTree,
            e.finalUrl ?? this.rawUrlTree
          ));
      }
      resetUrlToCurrentUrlTree() {
        this.location.replaceState(
          this.urlSerializer.serialize(this.rawUrlTree),
          "",
          this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId)
        );
      }
      generateNgRouterState(e, t) {
        return this.canceledNavigationResolution === "computed"
          ? { navigationId: e, ɵrouterPageId: t }
          : { navigationId: e };
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  ps = (function (n) {
    return (
      (n[(n.COMPLETE = 0)] = "COMPLETE"),
      (n[(n.FAILED = 1)] = "FAILED"),
      (n[(n.REDIRECTING = 2)] = "REDIRECTING"),
      n
    );
  })(ps || {});
function b_(n, i) {
  n.events
    .pipe(
      St(
        (e) =>
          e instanceof ci ||
          e instanceof ur ||
          e instanceof bs ||
          e instanceof Fr
      ),
      Ke((e) =>
        e instanceof ci || e instanceof Fr
          ? ps.COMPLETE
          : (
              e instanceof ur
                ? e.code === Qi.Redirect ||
                  e.code === Qi.SupersededByNewNavigation
                : !1
            )
          ? ps.REDIRECTING
          : ps.FAILED
      ),
      St((e) => e !== ps.REDIRECTING),
      $i(1)
    )
    .subscribe(() => {
      i();
    });
}
function lS(n) {
  throw n;
}
var cS = {
    paths: "exact",
    fragment: "ignored",
    matrixParams: "ignored",
    queryParams: "exact",
  },
  dS = {
    paths: "subset",
    fragment: "ignored",
    matrixParams: "ignored",
    queryParams: "subset",
  },
  vt = (() => {
    class n {
      get currentUrlTree() {
        return this.stateManager.getCurrentUrlTree();
      }
      get rawUrlTree() {
        return this.stateManager.getRawUrlTree();
      }
      get events() {
        return this._events;
      }
      get routerState() {
        return this.stateManager.getRouterState();
      }
      constructor() {
        (this.disposed = !1),
          (this.console = W(ql)),
          (this.stateManager = W(__)),
          (this.options = W(ks, { optional: !0 }) || {}),
          (this.pendingTasks = W(Za)),
          (this.urlUpdateStrategy =
            this.options.urlUpdateStrategy || "deferred"),
          (this.navigationTransitions = W(ap)),
          (this.urlSerializer = W(Ms)),
          (this.location = W(cr)),
          (this.urlHandlingStrategy = W(op)),
          (this._events = new Ee()),
          (this.errorHandler = this.options.errorHandler || lS),
          (this.navigated = !1),
          (this.routeReuseStrategy = W(oS)),
          (this.onSameUrlNavigation =
            this.options.onSameUrlNavigation || "ignore"),
          (this.config = W(Ss, { optional: !0 })?.flat() ?? []),
          (this.componentInputBindingEnabled = !!W(Ec, { optional: !0 })),
          (this.eventsSubscription = new zi()),
          this.resetConfig(this.config),
          this.navigationTransitions
            .setupNavigations(this, this.currentUrlTree, this.routerState)
            .subscribe({
              error: (e) => {
                this.console.warn(e);
              },
            }),
          this.subscribeToNavigationEvents();
      }
      subscribeToNavigationEvents() {
        let e = this.navigationTransitions.events.subscribe((t) => {
          try {
            let r = this.navigationTransitions.currentTransition,
              o = this.navigationTransitions.currentNavigation;
            if (r !== null && o !== null) {
              if (
                (this.stateManager.handleRouterEvent(t, o),
                t instanceof ur &&
                  t.code !== Qi.Redirect &&
                  t.code !== Qi.SupersededByNewNavigation)
              )
                this.navigated = !0;
              else if (t instanceof ci) this.navigated = !0;
              else if (t instanceof la) {
                let a = t.navigationBehaviorOptions,
                  d = this.urlHandlingStrategy.merge(t.url, r.currentRawUrl),
                  u = G(
                    {
                      browserUrl: r.extras.browserUrl,
                      info: r.extras.info,
                      skipLocationChange: r.extras.skipLocationChange,
                      replaceUrl:
                        r.extras.replaceUrl ||
                        this.urlUpdateStrategy === "eager" ||
                        rS(r.source),
                    },
                    a
                  );
                this.scheduleNavigation(d, fs, null, u, {
                  resolve: r.resolve,
                  reject: r.reject,
                  promise: r.promise,
                });
              }
            }
            hS(t) && this._events.next(t);
          } catch (r) {
            this.navigationTransitions.transitionAbortSubject.next(r);
          }
        });
        this.eventsSubscription.add(e);
      }
      resetRootComponentType(e) {
        (this.routerState.root.component = e),
          (this.navigationTransitions.rootComponentType = e);
      }
      initialNavigation() {
        this.setUpLocationChangeListener(),
          this.navigationTransitions.hasRequestedNavigation ||
            this.navigateToSyncWithBrowser(
              this.location.path(!0),
              fs,
              this.stateManager.restoredState()
            );
      }
      setUpLocationChangeListener() {
        this.nonRouterCurrentEntryChangeSubscription ??=
          this.stateManager.registerNonRouterCurrentEntryChangeListener(
            (e, t) => {
              setTimeout(() => {
                this.navigateToSyncWithBrowser(e, "popstate", t);
              }, 0);
            }
          );
      }
      navigateToSyncWithBrowser(e, t, r) {
        let o = { replaceUrl: !0 },
          a = r?.navigationId ? r : null;
        if (r) {
          let u = G({}, r);
          delete u.navigationId,
            delete u.ɵrouterPageId,
            Object.keys(u).length !== 0 && (o.state = u);
        }
        let d = this.parseUrl(e);
        this.scheduleNavigation(d, t, a, o);
      }
      get url() {
        return this.serializeUrl(this.currentUrlTree);
      }
      getCurrentNavigation() {
        return this.navigationTransitions.currentNavigation;
      }
      get lastSuccessfulNavigation() {
        return this.navigationTransitions.lastSuccessfulNavigation;
      }
      resetConfig(e) {
        (this.config = e.map(np)), (this.navigated = !1);
      }
      ngOnDestroy() {
        this.dispose();
      }
      dispose() {
        this.navigationTransitions.complete(),
          this.nonRouterCurrentEntryChangeSubscription &&
            (this.nonRouterCurrentEntryChangeSubscription.unsubscribe(),
            (this.nonRouterCurrentEntryChangeSubscription = void 0)),
          (this.disposed = !0),
          this.eventsSubscription.unsubscribe();
      }
      createUrlTree(e, t = {}) {
        let {
            relativeTo: r,
            queryParams: o,
            fragment: a,
            queryParamsHandling: d,
            preserveFragment: u,
          } = t,
          f = u ? this.currentUrlTree.fragment : a,
          v = null;
        switch (d ?? this.options.defaultQueryParamsHandling) {
          case "merge":
            v = G(G({}, this.currentUrlTree.queryParams), o);
            break;
          case "preserve":
            v = this.currentUrlTree.queryParams;
            break;
          default:
            v = o || null;
        }
        v !== null && (v = this.removeEmptyProps(v));
        let S;
        try {
          let T = r ? r.snapshot : this.routerState.snapshot.root;
          S = Z0(T);
        } catch {
          (typeof e[0] != "string" || e[0][0] !== "/") && (e = []),
            (S = this.currentUrlTree.root);
        }
        return J0(S, e, v, f ?? null);
      }
      navigateByUrl(e, t = { skipLocationChange: !1 }) {
        let r = po(e) ? e : this.parseUrl(e),
          o = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
        return this.scheduleNavigation(o, fs, null, t);
      }
      navigate(e, t = { skipLocationChange: !1 }) {
        return uS(e), this.navigateByUrl(this.createUrlTree(e, t), t);
      }
      serializeUrl(e) {
        return this.urlSerializer.serialize(e);
      }
      parseUrl(e) {
        try {
          return this.urlSerializer.parse(e);
        } catch {
          return this.urlSerializer.parse("/");
        }
      }
      isActive(e, t) {
        let r;
        if (
          (t === !0 ? (r = G({}, cS)) : t === !1 ? (r = G({}, dS)) : (r = t),
          po(e))
        )
          return I0(this.currentUrlTree, e, r);
        let o = this.parseUrl(e);
        return I0(this.currentUrlTree, o, r);
      }
      removeEmptyProps(e) {
        return Object.entries(e).reduce(
          (t, [r, o]) => (o != null && (t[r] = o), t),
          {}
        );
      }
      scheduleNavigation(e, t, r, o, a) {
        if (this.disposed) return Promise.resolve(!1);
        let d, u, f;
        a
          ? ((d = a.resolve), (u = a.reject), (f = a.promise))
          : (f = new Promise((S, T) => {
              (d = S), (u = T);
            }));
        let v = this.pendingTasks.add();
        return (
          b_(this, () => {
            queueMicrotask(() => this.pendingTasks.remove(v));
          }),
          this.navigationTransitions.handleNavigationRequest({
            source: t,
            restoredState: r,
            currentUrlTree: this.currentUrlTree,
            currentRawUrl: this.currentUrlTree,
            rawUrl: e,
            extras: o,
            resolve: d,
            reject: u,
            promise: f,
            currentSnapshot: this.routerState.snapshot,
            currentRouterState: this.routerState,
          }),
          f.catch((S) => Promise.reject(S))
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function uS(n) {
  for (let i = 0; i < n.length; i++) if (n[i] == null) throw new pt(4008, !1);
}
function hS(n) {
  return !(n instanceof vs) && !(n instanceof la);
}
var ti = (() => {
    class n {
      constructor(e, t, r, o, a, d) {
        (this.router = e),
          (this.route = t),
          (this.tabIndexAttribute = r),
          (this.renderer = o),
          (this.el = a),
          (this.locationStrategy = d),
          (this.href = null),
          (this.onChanges = new Ee()),
          (this.preserveFragment = !1),
          (this.skipLocationChange = !1),
          (this.replaceUrl = !1),
          (this.routerLinkInput = null);
        let u = a.nativeElement.tagName?.toLowerCase();
        (this.isAnchorElement = u === "a" || u === "area"),
          this.isAnchorElement
            ? (this.subscription = e.events.subscribe((f) => {
                f instanceof ci && this.updateHref();
              }))
            : this.setTabIndexIfNotOnNativeEl("0");
      }
      setTabIndexIfNotOnNativeEl(e) {
        this.tabIndexAttribute != null ||
          this.isAnchorElement ||
          this.applyAttributeValue("tabindex", e);
      }
      ngOnChanges(e) {
        this.isAnchorElement && this.updateHref(), this.onChanges.next(this);
      }
      set routerLink(e) {
        e == null
          ? ((this.routerLinkInput = null),
            this.setTabIndexIfNotOnNativeEl(null))
          : (po(e)
              ? (this.routerLinkInput = e)
              : (this.routerLinkInput = Array.isArray(e) ? e : [e]),
            this.setTabIndexIfNotOnNativeEl("0"));
      }
      onClick(e, t, r, o, a) {
        let d = this.urlTree;
        if (
          d === null ||
          (this.isAnchorElement &&
            (e !== 0 ||
              t ||
              r ||
              o ||
              a ||
              (typeof this.target == "string" && this.target != "_self")))
        )
          return !0;
        let u = {
          skipLocationChange: this.skipLocationChange,
          replaceUrl: this.replaceUrl,
          state: this.state,
          info: this.info,
        };
        return this.router.navigateByUrl(d, u), !this.isAnchorElement;
      }
      ngOnDestroy() {
        this.subscription?.unsubscribe();
      }
      updateHref() {
        let e = this.urlTree;
        this.href =
          e !== null && this.locationStrategy
            ? this.locationStrategy?.prepareExternalUrl(
                this.router.serializeUrl(e)
              )
            : null;
        let t =
          this.href === null
            ? null
            : Ig(
                this.href,
                this.el.nativeElement.tagName.toLowerCase(),
                "href"
              );
        this.applyAttributeValue("href", t);
      }
      applyAttributeValue(e, t) {
        let r = this.renderer,
          o = this.el.nativeElement;
        t !== null ? r.setAttribute(o, e, t) : r.removeAttribute(o, e);
      }
      get urlTree() {
        return this.routerLinkInput === null
          ? null
          : po(this.routerLinkInput)
          ? this.routerLinkInput
          : this.router.createUrlTree(this.routerLinkInput, {
              relativeTo:
                this.relativeTo !== void 0 ? this.relativeTo : this.route,
              queryParams: this.queryParams,
              fragment: this.fragment,
              queryParamsHandling: this.queryParamsHandling,
              preserveFragment: this.preserveFragment,
            });
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            j(vt),
            j(ei),
            Go("tabindex"),
            j(hi),
            j(Re),
            j(ns)
          );
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "routerLink", ""]],
          hostVars: 1,
          hostBindings: function (t, r) {
            t & 1 &&
              R("click", function (a) {
                return r.onClick(
                  a.button,
                  a.ctrlKey,
                  a.shiftKey,
                  a.altKey,
                  a.metaKey
                );
              }),
              t & 2 && ce("target", r.target);
          },
          inputs: {
            target: "target",
            queryParams: "queryParams",
            fragment: "fragment",
            queryParamsHandling: "queryParamsHandling",
            state: "state",
            info: "info",
            relativeTo: "relativeTo",
            preserveFragment: [2, "preserveFragment", "preserveFragment", Se],
            skipLocationChange: [
              2,
              "skipLocationChange",
              "skipLocationChange",
              Se,
            ],
            replaceUrl: [2, "replaceUrl", "replaceUrl", Se],
            routerLink: "routerLink",
          },
          standalone: !0,
          features: [Pt, Dt],
        });
      }
    }
    return n;
  })(),
  v_ = (() => {
    class n {
      get isActive() {
        return this._isActive;
      }
      constructor(e, t, r, o, a) {
        (this.router = e),
          (this.element = t),
          (this.renderer = r),
          (this.cdr = o),
          (this.link = a),
          (this.classes = []),
          (this._isActive = !1),
          (this.routerLinkActiveOptions = { exact: !1 }),
          (this.isActiveChange = new xe()),
          (this.routerEventsSubscription = e.events.subscribe((d) => {
            d instanceof ci && this.update();
          }));
      }
      ngAfterContentInit() {
        fe(this.links.changes, fe(null))
          .pipe(qa())
          .subscribe((e) => {
            this.update(), this.subscribeToEachLinkOnChanges();
          });
      }
      subscribeToEachLinkOnChanges() {
        this.linkInputChangesSubscription?.unsubscribe();
        let e = [...this.links.toArray(), this.link]
          .filter((t) => !!t)
          .map((t) => t.onChanges);
        this.linkInputChangesSubscription = ui(e)
          .pipe(qa())
          .subscribe((t) => {
            this._isActive !== this.isLinkActive(this.router)(t) &&
              this.update();
          });
      }
      set routerLinkActive(e) {
        let t = Array.isArray(e) ? e : e.split(" ");
        this.classes = t.filter((r) => !!r);
      }
      ngOnChanges(e) {
        this.update();
      }
      ngOnDestroy() {
        this.routerEventsSubscription.unsubscribe(),
          this.linkInputChangesSubscription?.unsubscribe();
      }
      update() {
        !this.links ||
          !this.router.navigated ||
          queueMicrotask(() => {
            let e = this.hasActiveLinks();
            this.classes.forEach((t) => {
              e
                ? this.renderer.addClass(this.element.nativeElement, t)
                : this.renderer.removeClass(this.element.nativeElement, t);
            }),
              e && this.ariaCurrentWhenActive !== void 0
                ? this.renderer.setAttribute(
                    this.element.nativeElement,
                    "aria-current",
                    this.ariaCurrentWhenActive.toString()
                  )
                : this.renderer.removeAttribute(
                    this.element.nativeElement,
                    "aria-current"
                  ),
              this._isActive !== e &&
                ((this._isActive = e),
                this.cdr.markForCheck(),
                this.isActiveChange.emit(e));
          });
      }
      isLinkActive(e) {
        let t = pS(this.routerLinkActiveOptions)
          ? this.routerLinkActiveOptions
          : this.routerLinkActiveOptions.exact || !1;
        return (r) => {
          let o = r.urlTree;
          return o ? e.isActive(o, t) : !1;
        };
      }
      hasActiveLinks() {
        let e = this.isLinkActive(this.router);
        return (this.link && e(this.link)) || this.links.some(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(vt), j(Re), j(hi), j(Qe), j(ti, 8));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "routerLinkActive", ""]],
          contentQueries: function (t, r, o) {
            if ((t & 1 && ln(o, ti, 5), t & 2)) {
              let a;
              nt((a = rt())) && (r.links = a);
            }
          },
          inputs: {
            routerLinkActiveOptions: "routerLinkActiveOptions",
            ariaCurrentWhenActive: "ariaCurrentWhenActive",
            routerLinkActive: "routerLinkActive",
          },
          outputs: { isActiveChange: "isActiveChange" },
          exportAs: ["routerLinkActive"],
          standalone: !0,
          features: [Dt],
        });
      }
    }
    return n;
  })();
function pS(n) {
  return !!n.paths;
}
var Tc = class {};
var mS = (() => {
    class n {
      constructor(e, t, r, o, a) {
        (this.router = e),
          (this.injector = r),
          (this.preloadingStrategy = o),
          (this.loader = a);
      }
      setUpPreloading() {
        this.subscription = this.router.events
          .pipe(
            St((e) => e instanceof ci),
            Mr(() => this.preload())
          )
          .subscribe(() => {});
      }
      preload() {
        return this.processRoutes(this.injector, this.router.config);
      }
      ngOnDestroy() {
        this.subscription && this.subscription.unsubscribe();
      }
      processRoutes(e, t) {
        let r = [];
        for (let o of t) {
          o.providers &&
            !o._injector &&
            (o._injector = eh(o.providers, e, `Route: ${o.path}`));
          let a = o._injector ?? e,
            d = o._loadedInjector ?? a;
          ((o.loadChildren && !o._loadedRoutes && o.canLoad === void 0) ||
            (o.loadComponent && !o._loadedComponent)) &&
            r.push(this.preloadConfig(a, o)),
            (o.children || o._loadedRoutes) &&
              r.push(this.processRoutes(d, o.children ?? o._loadedRoutes));
        }
        return ui(r).pipe(qa());
      }
      preloadConfig(e, t) {
        return this.preloadingStrategy.preload(t, () => {
          let r;
          t.loadChildren && t.canLoad === void 0
            ? (r = this.loader.loadChildren(e, t))
            : (r = fe(null));
          let o = r.pipe(
            Ri((a) =>
              a === null
                ? fe(void 0)
                : ((t._loadedRoutes = a.routes),
                  (t._loadedInjector = a.injector),
                  this.processRoutes(a.injector ?? e, a.routes))
            )
          );
          if (t.loadComponent && !t._loadedComponent) {
            let a = this.loader.loadComponent(t);
            return ui([o, a]).pipe(qa());
          } else return o;
        });
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(vt), Q(Ql), Q(an), Q(Tc), Q(rp));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  y_ = new Ce(""),
  fS = (() => {
    class n {
      constructor(e, t, r, o, a = {}) {
        (this.urlSerializer = e),
          (this.transitions = t),
          (this.viewportScroller = r),
          (this.zone = o),
          (this.options = a),
          (this.lastId = 0),
          (this.lastSource = "imperative"),
          (this.restoredId = 0),
          (this.store = {}),
          (a.scrollPositionRestoration ||= "disabled"),
          (a.anchorScrolling ||= "disabled");
      }
      init() {
        this.options.scrollPositionRestoration !== "disabled" &&
          this.viewportScroller.setHistoryScrollRestoration("manual"),
          (this.routerEventsSubscription = this.createScrollEvents()),
          (this.scrollEventsSubscription = this.consumeScrollEvents());
      }
      createScrollEvents() {
        return this.transitions.events.subscribe((e) => {
          e instanceof sa
            ? ((this.store[this.lastId] =
                this.viewportScroller.getScrollPosition()),
              (this.lastSource = e.navigationTrigger),
              (this.restoredId = e.restoredState
                ? e.restoredState.navigationId
                : 0))
            : e instanceof ci
            ? ((this.lastId = e.id),
              this.scheduleScrollEvent(
                e,
                this.urlSerializer.parse(e.urlAfterRedirects).fragment
              ))
            : e instanceof Fr &&
              e.code === bc.IgnoredSameUrlNavigation &&
              ((this.lastSource = void 0),
              (this.restoredId = 0),
              this.scheduleScrollEvent(
                e,
                this.urlSerializer.parse(e.url).fragment
              ));
        });
      }
      consumeScrollEvents() {
        return this.transitions.events.subscribe((e) => {
          e instanceof yc &&
            (e.position
              ? this.options.scrollPositionRestoration === "top"
                ? this.viewportScroller.scrollToPosition([0, 0])
                : this.options.scrollPositionRestoration === "enabled" &&
                  this.viewportScroller.scrollToPosition(e.position)
              : e.anchor && this.options.anchorScrolling === "enabled"
              ? this.viewportScroller.scrollToAnchor(e.anchor)
              : this.options.scrollPositionRestoration !== "disabled" &&
                this.viewportScroller.scrollToPosition([0, 0]));
        });
      }
      scheduleScrollEvent(e, t) {
        this.zone.runOutsideAngular(() => {
          setTimeout(() => {
            this.zone.run(() => {
              this.transitions.events.next(
                new yc(
                  e,
                  this.lastSource === "popstate"
                    ? this.store[this.restoredId]
                    : null,
                  t
                )
              );
            });
          }, 0);
        });
      }
      ngOnDestroy() {
        this.routerEventsSubscription?.unsubscribe(),
          this.scrollEventsSubscription?.unsubscribe();
      }
      static {
        this.ɵfac = function (t) {
          kr();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function x_(n, ...i) {
  return zn([
    { provide: Ss, multi: !0, useValue: n },
    [],
    { provide: ei, useFactory: C_, deps: [vt] },
    { provide: is, multi: !0, useFactory: w_ },
    i.map((e) => e.ɵproviders),
  ]);
}
function C_(n) {
  return n.routerState.root;
}
function Ps(n, i) {
  return { ɵkind: n, ɵproviders: i };
}
function w_() {
  let n = W(Mt);
  return (i) => {
    let e = n.get(Ni);
    if (i !== e.components[0]) return;
    let t = n.get(vt),
      r = n.get(S_);
    n.get(sp) === 1 && t.initialNavigation(),
      n.get(D_, null, Qu.Optional)?.setUpPreloading(),
      n.get(y_, null, Qu.Optional)?.init(),
      t.resetRootComponentType(e.componentTypes[0]),
      r.closed || (r.next(), r.complete(), r.unsubscribe());
  };
}
var S_ = new Ce("", { factory: () => new Ee() }),
  sp = new Ce("", { providedIn: "root", factory: () => 1 });
function gS() {
  return Ps(2, [
    { provide: sp, useValue: 0 },
    {
      provide: ah,
      multi: !0,
      deps: [Mt],
      useFactory: (i) => {
        let e = i.get(Yg, Promise.resolve());
        return () =>
          e.then(
            () =>
              new Promise((t) => {
                let r = i.get(vt),
                  o = i.get(S_);
                b_(r, () => {
                  t(!0);
                }),
                  (i.get(ap).afterPreactivation = () => (
                    t(!0), o.closed ? fe(void 0) : o
                  )),
                  r.initialNavigation();
              })
          );
      },
    },
  ]);
}
function _S() {
  return Ps(3, [
    {
      provide: ah,
      multi: !0,
      useFactory: () => {
        let i = W(vt);
        return () => {
          i.setUpLocationChangeListener();
        };
      },
    },
    { provide: sp, useValue: 2 },
  ]);
}
var D_ = new Ce("");
function bS(n) {
  return Ps(0, [
    { provide: D_, useExisting: mS },
    { provide: Tc, useExisting: n },
  ]);
}
function vS() {
  return Ps(8, [N0, { provide: Ec, useExisting: N0 }]);
}
function yS(n) {
  let i = [
    { provide: f_, useValue: tS },
    {
      provide: g_,
      useValue: G({ skipNextTransition: !!n?.skipInitialTransition }, n),
    },
  ];
  return Ps(9, i);
}
var j0 = new Ce("ROUTER_FORROOT_GUARD"),
  xS = [
    cr,
    { provide: Ms, useClass: aa },
    vt,
    Es,
    { provide: ei, useFactory: C_, deps: [vt] },
    rp,
    [],
  ],
  Li = (() => {
    class n {
      constructor(e) {}
      static forRoot(e, t) {
        return {
          ngModule: n,
          providers: [
            xS,
            [],
            { provide: Ss, multi: !0, useValue: e },
            { provide: j0, useFactory: DS, deps: [[vt, new Qa(), new zl()]] },
            { provide: ks, useValue: t || {} },
            t?.useHash ? wS() : SS(),
            CS(),
            t?.preloadingStrategy ? bS(t.preloadingStrategy).ɵproviders : [],
            t?.initialNavigation ? MS(t) : [],
            t?.bindToComponentInputs ? vS().ɵproviders : [],
            t?.enableViewTransitions ? yS().ɵproviders : [],
            TS(),
          ],
        };
      }
      static forChild(e) {
        return {
          ngModule: n,
          providers: [{ provide: Ss, multi: !0, useValue: e }],
        };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(j0, 8));
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({});
      }
    }
    return n;
  })();
function CS() {
  return {
    provide: y_,
    useFactory: () => {
      let n = W(Jg),
        i = W(Me),
        e = W(ks),
        t = W(ap),
        r = W(Ms);
      return (
        e.scrollOffset && n.setOffset(e.scrollOffset), new fS(r, t, n, i, e)
      );
    },
  };
}
function wS() {
  return { provide: ns, useClass: Kg };
}
function SS() {
  return { provide: ns, useClass: qg };
}
function DS(n) {
  return "guarded";
}
function MS(n) {
  return [
    n.initialNavigation === "disabled" ? _S().ɵproviders : [],
    n.initialNavigation === "enabledBlocking" ? gS().ɵproviders : [],
  ];
}
var H0 = new Ce("");
function TS() {
  return [
    { provide: H0, useFactory: w_ },
    { provide: is, multi: !0, useExisting: H0 },
  ];
}
var R_ = (() => {
    class n {
      constructor(e, t) {
        (this._renderer = e),
          (this._elementRef = t),
          (this.onChange = (r) => {}),
          (this.onTouched = () => {});
      }
      setProperty(e, t) {
        this._renderer.setProperty(this._elementRef.nativeElement, e, t);
      }
      registerOnTouched(e) {
        this.onTouched = e;
      }
      registerOnChange(e) {
        this.onChange = e;
      }
      setDisabledState(e) {
        this.setProperty("disabled", e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(hi), j(Re));
        };
      }
      static {
        this.ɵdir = Ie({ type: n });
      }
    }
    return n;
  })(),
  up = (() => {
    class n extends R_ {
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ie({ type: n, features: [Ze] });
      }
    }
    return n;
  })(),
  go = new Ce("");
var ES = { provide: go, useExisting: wi(() => Wt), multi: !0 };
function OS() {
  let n = Zo() ? Zo().getUserAgent() : "";
  return /android (\d+)/.test(n.toLowerCase());
}
var kS = new Ce(""),
  Wt = (() => {
    class n extends R_ {
      constructor(e, t, r) {
        super(e, t),
          (this._compositionMode = r),
          (this._composing = !1),
          this._compositionMode == null && (this._compositionMode = !OS());
      }
      writeValue(e) {
        let t = e ?? "";
        this.setProperty("value", t);
      }
      _handleInput(e) {
        (!this._compositionMode ||
          (this._compositionMode && !this._composing)) &&
          this.onChange(e);
      }
      _compositionStart() {
        this._composing = !0;
      }
      _compositionEnd(e) {
        (this._composing = !1), this._compositionMode && this.onChange(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(hi), j(Re), j(kS, 8));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["input", "formControlName", "", 3, "type", "checkbox"],
            ["textarea", "formControlName", ""],
            ["input", "formControl", "", 3, "type", "checkbox"],
            ["textarea", "formControl", ""],
            ["input", "ngModel", "", 3, "type", "checkbox"],
            ["textarea", "ngModel", ""],
            ["", "ngDefaultControl", ""],
          ],
          hostBindings: function (t, r) {
            t & 1 &&
              R("input", function (a) {
                return r._handleInput(a.target.value);
              })("blur", function () {
                return r.onTouched();
              })("compositionstart", function () {
                return r._compositionStart();
              })("compositionend", function (a) {
                return r._compositionEnd(a.target.value);
              });
          },
          features: [Bt([ES]), Ze],
        });
      }
    }
    return n;
  })();
function Lr(n) {
  return (
    n == null || ((typeof n == "string" || Array.isArray(n)) && n.length === 0)
  );
}
function F_(n) {
  return n != null && typeof n.length == "number";
}
var _o = new Ce(""),
  jc = new Ce(""),
  PS =
    /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
  Fe = class {
    static min(i) {
      return IS(i);
    }
    static max(i) {
      return AS(i);
    }
    static required(i) {
      return N_(i);
    }
    static requiredTrue(i) {
      return RS(i);
    }
    static email(i) {
      return L_(i);
    }
    static minLength(i) {
      return FS(i);
    }
    static maxLength(i) {
      return V_(i);
    }
    static pattern(i) {
      return NS(i);
    }
    static nullValidator(i) {
      return Pc(i);
    }
    static compose(i) {
      return $_(i);
    }
    static composeAsync(i) {
      return W_(i);
    }
  };
function IS(n) {
  return (i) => {
    if (Lr(i.value) || Lr(n)) return null;
    let e = parseFloat(i.value);
    return !isNaN(e) && e < n ? { min: { min: n, actual: i.value } } : null;
  };
}
function AS(n) {
  return (i) => {
    if (Lr(i.value) || Lr(n)) return null;
    let e = parseFloat(i.value);
    return !isNaN(e) && e > n ? { max: { max: n, actual: i.value } } : null;
  };
}
function N_(n) {
  return Lr(n.value) ? { required: !0 } : null;
}
function RS(n) {
  return n.value === !0 ? null : { required: !0 };
}
function L_(n) {
  return Lr(n.value) || PS.test(n.value) ? null : { email: !0 };
}
function FS(n) {
  return (i) =>
    Lr(i.value) || !F_(i.value)
      ? null
      : i.value.length < n
      ? { minlength: { requiredLength: n, actualLength: i.value.length } }
      : null;
}
function V_(n) {
  return (i) =>
    F_(i.value) && i.value.length > n
      ? { maxlength: { requiredLength: n, actualLength: i.value.length } }
      : null;
}
function NS(n) {
  if (!n) return Pc;
  let i, e;
  return (
    typeof n == "string"
      ? ((e = ""),
        n.charAt(0) !== "^" && (e += "^"),
        (e += n),
        n.charAt(n.length - 1) !== "$" && (e += "$"),
        (i = new RegExp(e)))
      : ((e = n.toString()), (i = n)),
    (t) => {
      if (Lr(t.value)) return null;
      let r = t.value;
      return i.test(r)
        ? null
        : { pattern: { requiredPattern: e, actualValue: r } };
    }
  );
}
function Pc(n) {
  return null;
}
function B_(n) {
  return n != null;
}
function j_(n) {
  return Kl(n) ? ui(n) : n;
}
function H_(n) {
  let i = {};
  return (
    n.forEach((e) => {
      i = e != null ? G(G({}, i), e) : i;
    }),
    Object.keys(i).length === 0 ? null : i
  );
}
function U_(n, i) {
  return i.map((e) => e(n));
}
function LS(n) {
  return !n.validate;
}
function z_(n) {
  return n.map((i) => (LS(i) ? i : (e) => i.validate(e)));
}
function $_(n) {
  if (!n) return null;
  let i = n.filter(B_);
  return i.length == 0
    ? null
    : function (e) {
        return H_(U_(e, i));
      };
}
function hp(n) {
  return n != null ? $_(z_(n)) : null;
}
function W_(n) {
  if (!n) return null;
  let i = n.filter(B_);
  return i.length == 0
    ? null
    : function (e) {
        let t = U_(e, i).map(j_);
        return hg(t).pipe(Ke(H_));
      };
}
function pp(n) {
  return n != null ? W_(z_(n)) : null;
}
function M_(n, i) {
  return n === null ? [i] : Array.isArray(n) ? [...n, i] : [n, i];
}
function G_(n) {
  return n._rawValidators;
}
function Y_(n) {
  return n._rawAsyncValidators;
}
function lp(n) {
  return n ? (Array.isArray(n) ? n : [n]) : [];
}
function Ic(n, i) {
  return Array.isArray(n) ? n.includes(i) : n === i;
}
function T_(n, i) {
  let e = lp(i);
  return (
    lp(n).forEach((r) => {
      Ic(e, r) || e.push(r);
    }),
    e
  );
}
function E_(n, i) {
  return lp(i).filter((e) => !Ic(n, e));
}
var Ac = class {
    constructor() {
      (this._rawValidators = []),
        (this._rawAsyncValidators = []),
        (this._onDestroyCallbacks = []);
    }
    get value() {
      return this.control ? this.control.value : null;
    }
    get valid() {
      return this.control ? this.control.valid : null;
    }
    get invalid() {
      return this.control ? this.control.invalid : null;
    }
    get pending() {
      return this.control ? this.control.pending : null;
    }
    get disabled() {
      return this.control ? this.control.disabled : null;
    }
    get enabled() {
      return this.control ? this.control.enabled : null;
    }
    get errors() {
      return this.control ? this.control.errors : null;
    }
    get pristine() {
      return this.control ? this.control.pristine : null;
    }
    get dirty() {
      return this.control ? this.control.dirty : null;
    }
    get touched() {
      return this.control ? this.control.touched : null;
    }
    get status() {
      return this.control ? this.control.status : null;
    }
    get untouched() {
      return this.control ? this.control.untouched : null;
    }
    get statusChanges() {
      return this.control ? this.control.statusChanges : null;
    }
    get valueChanges() {
      return this.control ? this.control.valueChanges : null;
    }
    get path() {
      return null;
    }
    _setValidators(i) {
      (this._rawValidators = i || []),
        (this._composedValidatorFn = hp(this._rawValidators));
    }
    _setAsyncValidators(i) {
      (this._rawAsyncValidators = i || []),
        (this._composedAsyncValidatorFn = pp(this._rawAsyncValidators));
    }
    get validator() {
      return this._composedValidatorFn || null;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn || null;
    }
    _registerOnDestroy(i) {
      this._onDestroyCallbacks.push(i);
    }
    _invokeOnDestroyCallbacks() {
      this._onDestroyCallbacks.forEach((i) => i()),
        (this._onDestroyCallbacks = []);
    }
    reset(i = void 0) {
      this.control && this.control.reset(i);
    }
    hasError(i, e) {
      return this.control ? this.control.hasError(i, e) : !1;
    }
    getError(i, e) {
      return this.control ? this.control.getError(i, e) : null;
    }
  },
  pr = class extends Ac {
    get formDirective() {
      return null;
    }
    get path() {
      return null;
    }
  },
  fo = class extends Ac {
    constructor() {
      super(...arguments),
        (this._parent = null),
        (this.name = null),
        (this.valueAccessor = null);
    }
  },
  Rc = class {
    constructor(i) {
      this._cd = i;
    }
    get isTouched() {
      return this._cd?.control?._touched?.(), !!this._cd?.control?.touched;
    }
    get isUntouched() {
      return !!this._cd?.control?.untouched;
    }
    get isPristine() {
      return this._cd?.control?._pristine?.(), !!this._cd?.control?.pristine;
    }
    get isDirty() {
      return !!this._cd?.control?.dirty;
    }
    get isValid() {
      return this._cd?.control?._status?.(), !!this._cd?.control?.valid;
    }
    get isInvalid() {
      return !!this._cd?.control?.invalid;
    }
    get isPending() {
      return !!this._cd?.control?.pending;
    }
    get isSubmitted() {
      return this._cd?._submitted?.(), !!this._cd?.submitted;
    }
  },
  VS = {
    "[class.ng-untouched]": "isUntouched",
    "[class.ng-touched]": "isTouched",
    "[class.ng-pristine]": "isPristine",
    "[class.ng-dirty]": "isDirty",
    "[class.ng-valid]": "isValid",
    "[class.ng-invalid]": "isInvalid",
    "[class.ng-pending]": "isPending",
  },
  yN = Te(G({}, VS), { "[class.ng-submitted]": "isSubmitted" }),
  ii = (() => {
    class n extends Rc {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(fo, 2));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "formControlName", ""],
            ["", "ngModel", ""],
            ["", "formControl", ""],
          ],
          hostVars: 14,
          hostBindings: function (t, r) {
            t & 2 &&
              ne("ng-untouched", r.isUntouched)("ng-touched", r.isTouched)(
                "ng-pristine",
                r.isPristine
              )("ng-dirty", r.isDirty)("ng-valid", r.isValid)(
                "ng-invalid",
                r.isInvalid
              )("ng-pending", r.isPending);
          },
          features: [Ze],
        });
      }
    }
    return n;
  })(),
  Bi = (() => {
    class n extends Rc {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(pr, 10));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "formGroupName", ""],
            ["", "formArrayName", ""],
            ["", "ngModelGroup", ""],
            ["", "formGroup", ""],
            ["form", 3, "ngNoForm", ""],
            ["", "ngForm", ""],
          ],
          hostVars: 16,
          hostBindings: function (t, r) {
            t & 2 &&
              ne("ng-untouched", r.isUntouched)("ng-touched", r.isTouched)(
                "ng-pristine",
                r.isPristine
              )("ng-dirty", r.isDirty)("ng-valid", r.isValid)(
                "ng-invalid",
                r.isInvalid
              )("ng-pending", r.isPending)("ng-submitted", r.isSubmitted);
          },
          features: [Ze],
        });
      }
    }
    return n;
  })();
var Is = "VALID",
  kc = "INVALID",
  ua = "PENDING",
  As = "DISABLED",
  Vr = class {},
  Fc = class extends Vr {
    constructor(i, e) {
      super(), (this.value = i), (this.source = e);
    }
  },
  Fs = class extends Vr {
    constructor(i, e) {
      super(), (this.pristine = i), (this.source = e);
    }
  },
  Ns = class extends Vr {
    constructor(i, e) {
      super(), (this.touched = i), (this.source = e);
    }
  },
  ha = class extends Vr {
    constructor(i, e) {
      super(), (this.status = i), (this.source = e);
    }
  },
  cp = class extends Vr {
    constructor(i) {
      super(), (this.source = i);
    }
  },
  dp = class extends Vr {
    constructor(i) {
      super(), (this.source = i);
    }
  };
function q_(n) {
  return (Hc(n) ? n.validators : n) || null;
}
function BS(n) {
  return Array.isArray(n) ? hp(n) : n || null;
}
function K_(n, i) {
  return (Hc(i) ? i.asyncValidators : n) || null;
}
function jS(n) {
  return Array.isArray(n) ? pp(n) : n || null;
}
function Hc(n) {
  return n != null && !Array.isArray(n) && typeof n == "object";
}
function HS(n, i, e) {
  let t = n.controls;
  if (!(i ? Object.keys(t) : t).length) throw new pt(1e3, "");
  if (!t[e]) throw new pt(1001, "");
}
function US(n, i, e) {
  n._forEachChild((t, r) => {
    if (e[r] === void 0) throw new pt(1002, "");
  });
}
var Nc = class {
    constructor(i, e) {
      (this._pendingDirty = !1),
        (this._hasOwnPendingAsyncValidator = null),
        (this._pendingTouched = !1),
        (this._onCollectionChange = () => {}),
        (this._parent = null),
        (this._status = so(() => this.statusReactive())),
        (this.statusReactive = pe(void 0)),
        (this._pristine = so(() => this.pristineReactive())),
        (this.pristineReactive = pe(!0)),
        (this._touched = so(() => this.touchedReactive())),
        (this.touchedReactive = pe(!1)),
        (this._events = new Ee()),
        (this.events = this._events.asObservable()),
        (this._onDisabledChange = []),
        this._assignValidators(i),
        this._assignAsyncValidators(e);
    }
    get validator() {
      return this._composedValidatorFn;
    }
    set validator(i) {
      this._rawValidators = this._composedValidatorFn = i;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn;
    }
    set asyncValidator(i) {
      this._rawAsyncValidators = this._composedAsyncValidatorFn = i;
    }
    get parent() {
      return this._parent;
    }
    get status() {
      return Sn(this.statusReactive);
    }
    set status(i) {
      Sn(() => this.statusReactive.set(i));
    }
    get valid() {
      return this.status === Is;
    }
    get invalid() {
      return this.status === kc;
    }
    get pending() {
      return this.status == ua;
    }
    get disabled() {
      return this.status === As;
    }
    get enabled() {
      return this.status !== As;
    }
    get pristine() {
      return Sn(this.pristineReactive);
    }
    set pristine(i) {
      Sn(() => this.pristineReactive.set(i));
    }
    get dirty() {
      return !this.pristine;
    }
    get touched() {
      return Sn(this.touchedReactive);
    }
    set touched(i) {
      Sn(() => this.touchedReactive.set(i));
    }
    get untouched() {
      return !this.touched;
    }
    get updateOn() {
      return this._updateOn
        ? this._updateOn
        : this.parent
        ? this.parent.updateOn
        : "change";
    }
    setValidators(i) {
      this._assignValidators(i);
    }
    setAsyncValidators(i) {
      this._assignAsyncValidators(i);
    }
    addValidators(i) {
      this.setValidators(T_(i, this._rawValidators));
    }
    addAsyncValidators(i) {
      this.setAsyncValidators(T_(i, this._rawAsyncValidators));
    }
    removeValidators(i) {
      this.setValidators(E_(i, this._rawValidators));
    }
    removeAsyncValidators(i) {
      this.setAsyncValidators(E_(i, this._rawAsyncValidators));
    }
    hasValidator(i) {
      return Ic(this._rawValidators, i);
    }
    hasAsyncValidator(i) {
      return Ic(this._rawAsyncValidators, i);
    }
    clearValidators() {
      this.validator = null;
    }
    clearAsyncValidators() {
      this.asyncValidator = null;
    }
    markAsTouched(i = {}) {
      let e = this.touched === !1;
      this.touched = !0;
      let t = i.sourceControl ?? this;
      this._parent &&
        !i.onlySelf &&
        this._parent.markAsTouched(Te(G({}, i), { sourceControl: t })),
        e && i.emitEvent !== !1 && this._events.next(new Ns(!0, t));
    }
    markAllAsTouched(i = {}) {
      this.markAsTouched({
        onlySelf: !0,
        emitEvent: i.emitEvent,
        sourceControl: this,
      }),
        this._forEachChild((e) => e.markAllAsTouched(i));
    }
    markAsUntouched(i = {}) {
      let e = this.touched === !0;
      (this.touched = !1), (this._pendingTouched = !1);
      let t = i.sourceControl ?? this;
      this._forEachChild((r) => {
        r.markAsUntouched({
          onlySelf: !0,
          emitEvent: i.emitEvent,
          sourceControl: t,
        });
      }),
        this._parent && !i.onlySelf && this._parent._updateTouched(i, t),
        e && i.emitEvent !== !1 && this._events.next(new Ns(!1, t));
    }
    markAsDirty(i = {}) {
      let e = this.pristine === !0;
      this.pristine = !1;
      let t = i.sourceControl ?? this;
      this._parent &&
        !i.onlySelf &&
        this._parent.markAsDirty(Te(G({}, i), { sourceControl: t })),
        e && i.emitEvent !== !1 && this._events.next(new Fs(!1, t));
    }
    markAsPristine(i = {}) {
      let e = this.pristine === !1;
      (this.pristine = !0), (this._pendingDirty = !1);
      let t = i.sourceControl ?? this;
      this._forEachChild((r) => {
        r.markAsPristine({ onlySelf: !0, emitEvent: i.emitEvent });
      }),
        this._parent && !i.onlySelf && this._parent._updatePristine(i, t),
        e && i.emitEvent !== !1 && this._events.next(new Fs(!0, t));
    }
    markAsPending(i = {}) {
      this.status = ua;
      let e = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new ha(this.status, e)),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !i.onlySelf &&
          this._parent.markAsPending(Te(G({}, i), { sourceControl: e }));
    }
    disable(i = {}) {
      let e = this._parentMarkedDirty(i.onlySelf);
      (this.status = As),
        (this.errors = null),
        this._forEachChild((r) => {
          r.disable(Te(G({}, i), { onlySelf: !0 }));
        }),
        this._updateValue();
      let t = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new Fc(this.value, t)),
        this._events.next(new ha(this.status, t)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._updateAncestors(Te(G({}, i), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((r) => r(!0));
    }
    enable(i = {}) {
      let e = this._parentMarkedDirty(i.onlySelf);
      (this.status = Is),
        this._forEachChild((t) => {
          t.enable(Te(G({}, i), { onlySelf: !0 }));
        }),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: i.emitEvent }),
        this._updateAncestors(Te(G({}, i), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((t) => t(!1));
    }
    _updateAncestors(i, e) {
      this._parent &&
        !i.onlySelf &&
        (this._parent.updateValueAndValidity(i),
        i.skipPristineCheck || this._parent._updatePristine({}, e),
        this._parent._updateTouched({}, e));
    }
    setParent(i) {
      this._parent = i;
    }
    getRawValue() {
      return this.value;
    }
    updateValueAndValidity(i = {}) {
      if ((this._setInitialStatus(), this._updateValue(), this.enabled)) {
        let t = this._cancelExistingSubscription();
        (this.errors = this._runValidator()),
          (this.status = this._calculateStatus()),
          (this.status === Is || this.status === ua) &&
            this._runAsyncValidator(t, i.emitEvent);
      }
      let e = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new Fc(this.value, e)),
        this._events.next(new ha(this.status, e)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !i.onlySelf &&
          this._parent.updateValueAndValidity(
            Te(G({}, i), { sourceControl: e })
          );
    }
    _updateTreeValidity(i = { emitEvent: !0 }) {
      this._forEachChild((e) => e._updateTreeValidity(i)),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: i.emitEvent });
    }
    _setInitialStatus() {
      this.status = this._allControlsDisabled() ? As : Is;
    }
    _runValidator() {
      return this.validator ? this.validator(this) : null;
    }
    _runAsyncValidator(i, e) {
      if (this.asyncValidator) {
        (this.status = ua),
          (this._hasOwnPendingAsyncValidator = { emitEvent: e !== !1 });
        let t = j_(this.asyncValidator(this));
        this._asyncValidationSubscription = t.subscribe((r) => {
          (this._hasOwnPendingAsyncValidator = null),
            this.setErrors(r, { emitEvent: e, shouldHaveEmitted: i });
        });
      }
    }
    _cancelExistingSubscription() {
      if (this._asyncValidationSubscription) {
        this._asyncValidationSubscription.unsubscribe();
        let i = this._hasOwnPendingAsyncValidator?.emitEvent ?? !1;
        return (this._hasOwnPendingAsyncValidator = null), i;
      }
      return !1;
    }
    setErrors(i, e = {}) {
      (this.errors = i),
        this._updateControlsErrors(
          e.emitEvent !== !1,
          this,
          e.shouldHaveEmitted
        );
    }
    get(i) {
      let e = i;
      return e == null ||
        (Array.isArray(e) || (e = e.split(".")), e.length === 0)
        ? null
        : e.reduce((t, r) => t && t._find(r), this);
    }
    getError(i, e) {
      let t = e ? this.get(e) : this;
      return t && t.errors ? t.errors[i] : null;
    }
    hasError(i, e) {
      return !!this.getError(i, e);
    }
    get root() {
      let i = this;
      for (; i._parent; ) i = i._parent;
      return i;
    }
    _updateControlsErrors(i, e, t) {
      (this.status = this._calculateStatus()),
        i && this.statusChanges.emit(this.status),
        (i || t) && this._events.next(new ha(this.status, e)),
        this._parent && this._parent._updateControlsErrors(i, e, t);
    }
    _initObservables() {
      (this.valueChanges = new xe()), (this.statusChanges = new xe());
    }
    _calculateStatus() {
      return this._allControlsDisabled()
        ? As
        : this.errors
        ? kc
        : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(ua)
        ? ua
        : this._anyControlsHaveStatus(kc)
        ? kc
        : Is;
    }
    _anyControlsHaveStatus(i) {
      return this._anyControls((e) => e.status === i);
    }
    _anyControlsDirty() {
      return this._anyControls((i) => i.dirty);
    }
    _anyControlsTouched() {
      return this._anyControls((i) => i.touched);
    }
    _updatePristine(i, e) {
      let t = !this._anyControlsDirty(),
        r = this.pristine !== t;
      (this.pristine = t),
        this._parent && !i.onlySelf && this._parent._updatePristine(i, e),
        r && this._events.next(new Fs(this.pristine, e));
    }
    _updateTouched(i = {}, e) {
      (this.touched = this._anyControlsTouched()),
        this._events.next(new Ns(this.touched, e)),
        this._parent && !i.onlySelf && this._parent._updateTouched(i, e);
    }
    _registerOnCollectionChange(i) {
      this._onCollectionChange = i;
    }
    _setUpdateStrategy(i) {
      Hc(i) && i.updateOn != null && (this._updateOn = i.updateOn);
    }
    _parentMarkedDirty(i) {
      let e = this._parent && this._parent.dirty;
      return !i && !!e && !this._parent._anyControlsDirty();
    }
    _find(i) {
      return null;
    }
    _assignValidators(i) {
      (this._rawValidators = Array.isArray(i) ? i.slice() : i),
        (this._composedValidatorFn = BS(this._rawValidators));
    }
    _assignAsyncValidators(i) {
      (this._rawAsyncValidators = Array.isArray(i) ? i.slice() : i),
        (this._composedAsyncValidatorFn = jS(this._rawAsyncValidators));
    }
  },
  Rt = class extends Nc {
    constructor(i, e, t) {
      super(q_(e), K_(t, e)),
        (this.controls = i),
        this._initObservables(),
        this._setUpdateStrategy(e),
        this._setUpControls(),
        this.updateValueAndValidity({
          onlySelf: !0,
          emitEvent: !!this.asyncValidator,
        });
    }
    registerControl(i, e) {
      return this.controls[i]
        ? this.controls[i]
        : ((this.controls[i] = e),
          e.setParent(this),
          e._registerOnCollectionChange(this._onCollectionChange),
          e);
    }
    addControl(i, e, t = {}) {
      this.registerControl(i, e),
        this.updateValueAndValidity({ emitEvent: t.emitEvent }),
        this._onCollectionChange();
    }
    removeControl(i, e = {}) {
      this.controls[i] &&
        this.controls[i]._registerOnCollectionChange(() => {}),
        delete this.controls[i],
        this.updateValueAndValidity({ emitEvent: e.emitEvent }),
        this._onCollectionChange();
    }
    setControl(i, e, t = {}) {
      this.controls[i] &&
        this.controls[i]._registerOnCollectionChange(() => {}),
        delete this.controls[i],
        e && this.registerControl(i, e),
        this.updateValueAndValidity({ emitEvent: t.emitEvent }),
        this._onCollectionChange();
    }
    contains(i) {
      return this.controls.hasOwnProperty(i) && this.controls[i].enabled;
    }
    setValue(i, e = {}) {
      US(this, !0, i),
        Object.keys(i).forEach((t) => {
          HS(this, !0, t),
            this.controls[t].setValue(i[t], {
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }),
        this.updateValueAndValidity(e);
    }
    patchValue(i, e = {}) {
      i != null &&
        (Object.keys(i).forEach((t) => {
          let r = this.controls[t];
          r && r.patchValue(i[t], { onlySelf: !0, emitEvent: e.emitEvent });
        }),
        this.updateValueAndValidity(e));
    }
    reset(i = {}, e = {}) {
      this._forEachChild((t, r) => {
        t.reset(i ? i[r] : null, { onlySelf: !0, emitEvent: e.emitEvent });
      }),
        this._updatePristine(e, this),
        this._updateTouched(e, this),
        this.updateValueAndValidity(e);
    }
    getRawValue() {
      return this._reduceChildren(
        {},
        (i, e, t) => ((i[t] = e.getRawValue()), i)
      );
    }
    _syncPendingControls() {
      let i = this._reduceChildren(!1, (e, t) =>
        t._syncPendingControls() ? !0 : e
      );
      return i && this.updateValueAndValidity({ onlySelf: !0 }), i;
    }
    _forEachChild(i) {
      Object.keys(this.controls).forEach((e) => {
        let t = this.controls[e];
        t && i(t, e);
      });
    }
    _setUpControls() {
      this._forEachChild((i) => {
        i.setParent(this),
          i._registerOnCollectionChange(this._onCollectionChange);
      });
    }
    _updateValue() {
      this.value = this._reduceValue();
    }
    _anyControls(i) {
      for (let [e, t] of Object.entries(this.controls))
        if (this.contains(e) && i(t)) return !0;
      return !1;
    }
    _reduceValue() {
      let i = {};
      return this._reduceChildren(
        i,
        (e, t, r) => ((t.enabled || this.disabled) && (e[r] = t.value), e)
      );
    }
    _reduceChildren(i, e) {
      let t = i;
      return (
        this._forEachChild((r, o) => {
          t = e(t, r, o);
        }),
        t
      );
    }
    _allControlsDisabled() {
      for (let i of Object.keys(this.controls))
        if (this.controls[i].enabled) return !1;
      return Object.keys(this.controls).length > 0 || this.disabled;
    }
    _find(i) {
      return this.controls.hasOwnProperty(i) ? this.controls[i] : null;
    }
  };
var Ls = new Ce("CallSetDisabledState", {
    providedIn: "root",
    factory: () => Uc,
  }),
  Uc = "always";
function Q_(n, i) {
  return [...i.path, n];
}
function Lc(n, i, e = Uc) {
  mp(n, i),
    i.valueAccessor.writeValue(n.value),
    (n.disabled || e === "always") &&
      i.valueAccessor.setDisabledState?.(n.disabled),
    $S(n, i),
    GS(n, i),
    WS(n, i),
    zS(n, i);
}
function O_(n, i, e = !0) {
  let t = () => {};
  i.valueAccessor &&
    (i.valueAccessor.registerOnChange(t), i.valueAccessor.registerOnTouched(t)),
    Bc(n, i),
    n &&
      (i._invokeOnDestroyCallbacks(), n._registerOnCollectionChange(() => {}));
}
function Vc(n, i) {
  n.forEach((e) => {
    e.registerOnValidatorChange && e.registerOnValidatorChange(i);
  });
}
function zS(n, i) {
  if (i.valueAccessor.setDisabledState) {
    let e = (t) => {
      i.valueAccessor.setDisabledState(t);
    };
    n.registerOnDisabledChange(e),
      i._registerOnDestroy(() => {
        n._unregisterOnDisabledChange(e);
      });
  }
}
function mp(n, i) {
  let e = G_(n);
  i.validator !== null
    ? n.setValidators(M_(e, i.validator))
    : typeof e == "function" && n.setValidators([e]);
  let t = Y_(n);
  i.asyncValidator !== null
    ? n.setAsyncValidators(M_(t, i.asyncValidator))
    : typeof t == "function" && n.setAsyncValidators([t]);
  let r = () => n.updateValueAndValidity();
  Vc(i._rawValidators, r), Vc(i._rawAsyncValidators, r);
}
function Bc(n, i) {
  let e = !1;
  if (n !== null) {
    if (i.validator !== null) {
      let r = G_(n);
      if (Array.isArray(r) && r.length > 0) {
        let o = r.filter((a) => a !== i.validator);
        o.length !== r.length && ((e = !0), n.setValidators(o));
      }
    }
    if (i.asyncValidator !== null) {
      let r = Y_(n);
      if (Array.isArray(r) && r.length > 0) {
        let o = r.filter((a) => a !== i.asyncValidator);
        o.length !== r.length && ((e = !0), n.setAsyncValidators(o));
      }
    }
  }
  let t = () => {};
  return Vc(i._rawValidators, t), Vc(i._rawAsyncValidators, t), e;
}
function $S(n, i) {
  i.valueAccessor.registerOnChange((e) => {
    (n._pendingValue = e),
      (n._pendingChange = !0),
      (n._pendingDirty = !0),
      n.updateOn === "change" && X_(n, i);
  });
}
function WS(n, i) {
  i.valueAccessor.registerOnTouched(() => {
    (n._pendingTouched = !0),
      n.updateOn === "blur" && n._pendingChange && X_(n, i),
      n.updateOn !== "submit" && n.markAsTouched();
  });
}
function X_(n, i) {
  n._pendingDirty && n.markAsDirty(),
    n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
    i.viewToModelUpdate(n._pendingValue),
    (n._pendingChange = !1);
}
function GS(n, i) {
  let e = (t, r) => {
    i.valueAccessor.writeValue(t), r && i.viewToModelUpdate(t);
  };
  n.registerOnChange(e),
    i._registerOnDestroy(() => {
      n._unregisterOnChange(e);
    });
}
function Z_(n, i) {
  n == null, mp(n, i);
}
function YS(n, i) {
  return Bc(n, i);
}
function J_(n, i) {
  if (!n.hasOwnProperty("model")) return !1;
  let e = n.model;
  return e.isFirstChange() ? !0 : !Object.is(i, e.currentValue);
}
function qS(n) {
  return Object.getPrototypeOf(n.constructor) === up;
}
function eb(n, i) {
  n._syncPendingControls(),
    i.forEach((e) => {
      let t = e.control;
      t.updateOn === "submit" &&
        t._pendingChange &&
        (e.viewToModelUpdate(t._pendingValue), (t._pendingChange = !1));
    });
}
function tb(n, i) {
  if (!i) return null;
  Array.isArray(i);
  let e, t, r;
  return (
    i.forEach((o) => {
      o.constructor === Wt ? (e = o) : qS(o) ? (t = o) : (r = o);
    }),
    r || t || e || null
  );
}
function KS(n, i) {
  let e = n.indexOf(i);
  e > -1 && n.splice(e, 1);
}
var QS = { provide: pr, useExisting: wi(() => fp) },
  Rs = Promise.resolve(),
  fp = (() => {
    class n extends pr {
      get submitted() {
        return Sn(this.submittedReactive);
      }
      constructor(e, t, r) {
        super(),
          (this.callSetDisabledState = r),
          (this._submitted = so(() => this.submittedReactive())),
          (this.submittedReactive = pe(!1)),
          (this._directives = new Set()),
          (this.ngSubmit = new xe()),
          (this.form = new Rt({}, hp(e), pp(t)));
      }
      ngAfterViewInit() {
        this._setUpdateStrategy();
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      get controls() {
        return this.form.controls;
      }
      addControl(e) {
        Rs.then(() => {
          let t = this._findContainer(e.path);
          (e.control = t.registerControl(e.name, e.control)),
            Lc(e.control, e, this.callSetDisabledState),
            e.control.updateValueAndValidity({ emitEvent: !1 }),
            this._directives.add(e);
        });
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        Rs.then(() => {
          let t = this._findContainer(e.path);
          t && t.removeControl(e.name), this._directives.delete(e);
        });
      }
      addFormGroup(e) {
        Rs.then(() => {
          let t = this._findContainer(e.path),
            r = new Rt({});
          Z_(r, e),
            t.registerControl(e.name, r),
            r.updateValueAndValidity({ emitEvent: !1 });
        });
      }
      removeFormGroup(e) {
        Rs.then(() => {
          let t = this._findContainer(e.path);
          t && t.removeControl(e.name);
        });
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      updateModel(e, t) {
        Rs.then(() => {
          this.form.get(e.path).setValue(t);
        });
      }
      setValue(e) {
        this.control.setValue(e);
      }
      onSubmit(e) {
        return (
          this.submittedReactive.set(!0),
          eb(this.form, this._directives),
          this.ngSubmit.emit(e),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e), this.submittedReactive.set(!1);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.form._updateOn = this.options.updateOn);
      }
      _findContainer(e) {
        return e.pop(), e.length ? this.form.get(e) : this.form;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(_o, 10), j(jc, 10), j(Ls, 8));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
            ["ng-form"],
            ["", "ngForm", ""],
          ],
          hostBindings: function (t, r) {
            t & 1 &&
              R("submit", function (a) {
                return r.onSubmit(a);
              })("reset", function () {
                return r.onReset();
              });
          },
          inputs: { options: [0, "ngFormOptions", "options"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [Bt([QS]), Ze],
        });
      }
    }
    return n;
  })();
function k_(n, i) {
  let e = n.indexOf(i);
  e > -1 && n.splice(e, 1);
}
function P_(n) {
  return (
    typeof n == "object" &&
    n !== null &&
    Object.keys(n).length === 2 &&
    "value" in n &&
    "disabled" in n
  );
}
var ot = class extends Nc {
  constructor(i = null, e, t) {
    super(q_(e), K_(t, e)),
      (this.defaultValue = null),
      (this._onChange = []),
      (this._pendingChange = !1),
      this._applyFormState(i),
      this._setUpdateStrategy(e),
      this._initObservables(),
      this.updateValueAndValidity({
        onlySelf: !0,
        emitEvent: !!this.asyncValidator,
      }),
      Hc(e) &&
        (e.nonNullable || e.initialValueIsDefault) &&
        (P_(i) ? (this.defaultValue = i.value) : (this.defaultValue = i));
  }
  setValue(i, e = {}) {
    (this.value = this._pendingValue = i),
      this._onChange.length &&
        e.emitModelToViewChange !== !1 &&
        this._onChange.forEach((t) =>
          t(this.value, e.emitViewToModelChange !== !1)
        ),
      this.updateValueAndValidity(e);
  }
  patchValue(i, e = {}) {
    this.setValue(i, e);
  }
  reset(i = this.defaultValue, e = {}) {
    this._applyFormState(i),
      this.markAsPristine(e),
      this.markAsUntouched(e),
      this.setValue(this.value, e),
      (this._pendingChange = !1);
  }
  _updateValue() {}
  _anyControls(i) {
    return !1;
  }
  _allControlsDisabled() {
    return this.disabled;
  }
  registerOnChange(i) {
    this._onChange.push(i);
  }
  _unregisterOnChange(i) {
    k_(this._onChange, i);
  }
  registerOnDisabledChange(i) {
    this._onDisabledChange.push(i);
  }
  _unregisterOnDisabledChange(i) {
    k_(this._onDisabledChange, i);
  }
  _forEachChild(i) {}
  _syncPendingControls() {
    return this.updateOn === "submit" &&
      (this._pendingDirty && this.markAsDirty(),
      this._pendingTouched && this.markAsTouched(),
      this._pendingChange)
      ? (this.setValue(this._pendingValue, {
          onlySelf: !0,
          emitModelToViewChange: !1,
        }),
        !0)
      : !1;
  }
  _applyFormState(i) {
    P_(i)
      ? ((this.value = this._pendingValue = i.value),
        i.disabled
          ? this.disable({ onlySelf: !0, emitEvent: !1 })
          : this.enable({ onlySelf: !0, emitEvent: !1 }))
      : (this.value = this._pendingValue = i);
  }
};
var XS = (n) => n instanceof ot;
var ZS = { provide: fo, useExisting: wi(() => _i) },
  I_ = Promise.resolve(),
  _i = (() => {
    class n extends fo {
      constructor(e, t, r, o, a, d) {
        super(),
          (this._changeDetectorRef = a),
          (this.callSetDisabledState = d),
          (this.control = new ot()),
          (this._registered = !1),
          (this.name = ""),
          (this.update = new xe()),
          (this._parent = e),
          this._setValidators(t),
          this._setAsyncValidators(r),
          (this.valueAccessor = tb(this, o));
      }
      ngOnChanges(e) {
        if ((this._checkForErrors(), !this._registered || "name" in e)) {
          if (this._registered && (this._checkName(), this.formDirective)) {
            let t = e.name.previousValue;
            this.formDirective.removeControl({
              name: t,
              path: this._getPath(t),
            });
          }
          this._setUpControl();
        }
        "isDisabled" in e && this._updateDisabled(e),
          J_(e, this.viewModel) &&
            (this._updateValue(this.model), (this.viewModel = this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      get path() {
        return this._getPath(this.name);
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      _setUpControl() {
        this._setUpdateStrategy(),
          this._isStandalone()
            ? this._setUpStandalone()
            : this.formDirective.addControl(this),
          (this._registered = !0);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.control._updateOn = this.options.updateOn);
      }
      _isStandalone() {
        return !this._parent || !!(this.options && this.options.standalone);
      }
      _setUpStandalone() {
        Lc(this.control, this, this.callSetDisabledState),
          this.control.updateValueAndValidity({ emitEvent: !1 });
      }
      _checkForErrors() {
        this._isStandalone() || this._checkParentType(), this._checkName();
      }
      _checkParentType() {}
      _checkName() {
        this.options && this.options.name && (this.name = this.options.name),
          !this._isStandalone() && this.name;
      }
      _updateValue(e) {
        I_.then(() => {
          this.control.setValue(e, { emitViewToModelChange: !1 }),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _updateDisabled(e) {
        let t = e.isDisabled.currentValue,
          r = t !== 0 && Se(t);
        I_.then(() => {
          r && !this.control.disabled
            ? this.control.disable()
            : !r && this.control.disabled && this.control.enable(),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _getPath(e) {
        return this._parent ? Q_(e, this._parent) : [e];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            j(pr, 9),
            j(_o, 10),
            j(jc, 10),
            j(go, 10),
            j(Qe, 8),
            j(Ls, 8)
          );
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""],
          ],
          inputs: {
            name: "name",
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
            options: [0, "ngModelOptions", "options"],
          },
          outputs: { update: "ngModelChange" },
          exportAs: ["ngModel"],
          features: [Bt([ZS]), Ze, Dt],
        });
      }
    }
    return n;
  })(),
  Br = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]],
          hostAttrs: ["novalidate", ""],
        });
      }
    }
    return n;
  })();
var ib = new Ce("");
var JS = { provide: pr, useExisting: wi(() => Xi) },
  Xi = (() => {
    class n extends pr {
      get submitted() {
        return Sn(this._submittedReactive);
      }
      set submitted(e) {
        this._submittedReactive.set(e);
      }
      constructor(e, t, r) {
        super(),
          (this.callSetDisabledState = r),
          (this._submitted = so(() => this._submittedReactive())),
          (this._submittedReactive = pe(!1)),
          (this._onCollectionChange = () => this._updateDomValue()),
          (this.directives = []),
          (this.form = null),
          (this.ngSubmit = new xe()),
          this._setValidators(e),
          this._setAsyncValidators(t);
      }
      ngOnChanges(e) {
        this._checkFormPresent(),
          e.hasOwnProperty("form") &&
            (this._updateValidators(),
            this._updateDomValue(),
            this._updateRegistrations(),
            (this._oldForm = this.form));
      }
      ngOnDestroy() {
        this.form &&
          (Bc(this.form, this),
          this.form._onCollectionChange === this._onCollectionChange &&
            this.form._registerOnCollectionChange(() => {}));
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      addControl(e) {
        let t = this.form.get(e.path);
        return (
          Lc(t, e, this.callSetDisabledState),
          t.updateValueAndValidity({ emitEvent: !1 }),
          this.directives.push(e),
          t
        );
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        O_(e.control || null, e, !1), KS(this.directives, e);
      }
      addFormGroup(e) {
        this._setUpFormContainer(e);
      }
      removeFormGroup(e) {
        this._cleanUpFormContainer(e);
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      addFormArray(e) {
        this._setUpFormContainer(e);
      }
      removeFormArray(e) {
        this._cleanUpFormContainer(e);
      }
      getFormArray(e) {
        return this.form.get(e.path);
      }
      updateModel(e, t) {
        this.form.get(e.path).setValue(t);
      }
      onSubmit(e) {
        return (
          this._submittedReactive.set(!0),
          eb(this.form, this.directives),
          this.ngSubmit.emit(e),
          this.form._events.next(new cp(this.control)),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e),
          this._submittedReactive.set(!1),
          this.form._events.next(new dp(this.form));
      }
      _updateDomValue() {
        this.directives.forEach((e) => {
          let t = e.control,
            r = this.form.get(e.path);
          t !== r &&
            (O_(t || null, e),
            XS(r) && (Lc(r, e, this.callSetDisabledState), (e.control = r)));
        }),
          this.form._updateTreeValidity({ emitEvent: !1 });
      }
      _setUpFormContainer(e) {
        let t = this.form.get(e.path);
        Z_(t, e), t.updateValueAndValidity({ emitEvent: !1 });
      }
      _cleanUpFormContainer(e) {
        if (this.form) {
          let t = this.form.get(e.path);
          t && YS(t, e) && t.updateValueAndValidity({ emitEvent: !1 });
        }
      }
      _updateRegistrations() {
        this.form._registerOnCollectionChange(this._onCollectionChange),
          this._oldForm && this._oldForm._registerOnCollectionChange(() => {});
      }
      _updateValidators() {
        mp(this.form, this), this._oldForm && Bc(this._oldForm, this);
      }
      _checkFormPresent() {
        this.form;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(_o, 10), j(jc, 10), j(Ls, 8));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "formGroup", ""]],
          hostBindings: function (t, r) {
            t & 1 &&
              R("submit", function (a) {
                return r.onSubmit(a);
              })("reset", function () {
                return r.onReset();
              });
          },
          inputs: { form: [0, "formGroup", "form"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [Bt([JS]), Ze, Dt],
        });
      }
    }
    return n;
  })();
var eD = { provide: fo, useExisting: wi(() => Zi) },
  Zi = (() => {
    class n extends fo {
      set isDisabled(e) {}
      static {
        this._ngModelWarningSentOnce = !1;
      }
      constructor(e, t, r, o, a) {
        super(),
          (this._ngModelWarningConfig = a),
          (this._added = !1),
          (this.name = null),
          (this.update = new xe()),
          (this._ngModelWarningSent = !1),
          (this._parent = e),
          this._setValidators(t),
          this._setAsyncValidators(r),
          (this.valueAccessor = tb(this, o));
      }
      ngOnChanges(e) {
        this._added || this._setUpControl(),
          J_(e, this.viewModel) &&
            ((this.viewModel = this.model),
            this.formDirective.updateModel(this, this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      get path() {
        return Q_(
          this.name == null ? this.name : this.name.toString(),
          this._parent
        );
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      _checkParentType() {}
      _setUpControl() {
        this._checkParentType(),
          (this.control = this.formDirective.addControl(this)),
          (this._added = !0);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            j(pr, 13),
            j(_o, 10),
            j(jc, 10),
            j(go, 10),
            j(ib, 8)
          );
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "formControlName", ""]],
          inputs: {
            name: [0, "formControlName", "name"],
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
          },
          outputs: { update: "ngModelChange" },
          features: [Bt([eD]), Ze, Dt],
        });
      }
    }
    return n;
  })(),
  tD = { provide: go, useExisting: wi(() => Si), multi: !0 };
function nb(n, i) {
  return n == null
    ? `${i}`
    : (i && typeof i == "object" && (i = "Object"), `${n}: ${i}`.slice(0, 50));
}
function iD(n) {
  return n.split(":")[0];
}
var Si = (() => {
    class n extends up {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let t = this._getOptionId(e),
          r = nb(t, e);
        this.setProperty("value", r);
      }
      registerOnChange(e) {
        this.onChange = (t) => {
          (this.value = this._getOptionValue(t)), e(this.value);
        };
      }
      _registerOption() {
        return (this._idCounter++).toString();
      }
      _getOptionId(e) {
        for (let t of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(t), e)) return t;
        return null;
      }
      _getOptionValue(e) {
        let t = iD(e);
        return this._optionMap.has(t) ? this._optionMap.get(t) : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["select", "formControlName", "", 3, "multiple", ""],
            ["select", "formControl", "", 3, "multiple", ""],
            ["select", "ngModel", "", 3, "multiple", ""],
          ],
          hostBindings: function (t, r) {
            t & 1 &&
              R("change", function (a) {
                return r.onChange(a.target.value);
              })("blur", function () {
                return r.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [Bt([tD]), Ze],
        });
      }
    }
    return n;
  })(),
  ni = (() => {
    class n {
      constructor(e, t, r) {
        (this._element = e),
          (this._renderer = t),
          (this._select = r),
          this._select && (this.id = this._select._registerOption());
      }
      set ngValue(e) {
        this._select != null &&
          (this._select._optionMap.set(this.id, e),
          this._setElementValue(nb(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._setElementValue(e),
          this._select && this._select.writeValue(this._select.value);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Re), j(hi), j(Si, 9));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return n;
  })(),
  nD = { provide: go, useExisting: wi(() => rb), multi: !0 };
function A_(n, i) {
  return n == null
    ? `${i}`
    : (typeof i == "string" && (i = `'${i}'`),
      i && typeof i == "object" && (i = "Object"),
      `${n}: ${i}`.slice(0, 50));
}
function rD(n) {
  return n.split(":")[0];
}
var rb = (() => {
    class n extends up {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let t;
        if (Array.isArray(e)) {
          let r = e.map((o) => this._getOptionId(o));
          t = (o, a) => {
            o._setSelected(r.indexOf(a.toString()) > -1);
          };
        } else
          t = (r, o) => {
            r._setSelected(!1);
          };
        this._optionMap.forEach(t);
      }
      registerOnChange(e) {
        this.onChange = (t) => {
          let r = [],
            o = t.selectedOptions;
          if (o !== void 0) {
            let a = o;
            for (let d = 0; d < a.length; d++) {
              let u = a[d],
                f = this._getOptionValue(u.value);
              r.push(f);
            }
          } else {
            let a = t.options;
            for (let d = 0; d < a.length; d++) {
              let u = a[d];
              if (u.selected) {
                let f = this._getOptionValue(u.value);
                r.push(f);
              }
            }
          }
          (this.value = r), e(r);
        };
      }
      _registerOption(e) {
        let t = (this._idCounter++).toString();
        return this._optionMap.set(t, e), t;
      }
      _getOptionId(e) {
        for (let t of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(t)._value, e)) return t;
        return null;
      }
      _getOptionValue(e) {
        let t = rD(e);
        return this._optionMap.has(t) ? this._optionMap.get(t)._value : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["select", "multiple", "", "formControlName", ""],
            ["select", "multiple", "", "formControl", ""],
            ["select", "multiple", "", "ngModel", ""],
          ],
          hostBindings: function (t, r) {
            t & 1 &&
              R("change", function (a) {
                return r.onChange(a.target);
              })("blur", function () {
                return r.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [Bt([nD]), Ze],
        });
      }
    }
    return n;
  })(),
  ri = (() => {
    class n {
      constructor(e, t, r) {
        (this._element = e),
          (this._renderer = t),
          (this._select = r),
          this._select && (this.id = this._select._registerOption(this));
      }
      set ngValue(e) {
        this._select != null &&
          ((this._value = e),
          this._setElementValue(A_(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._select
          ? ((this._value = e),
            this._setElementValue(A_(this.id, e)),
            this._select.writeValue(this._select.value))
          : this._setElementValue(e);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      _setSelected(e) {
        this._renderer.setProperty(this._element.nativeElement, "selected", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Re), j(hi), j(rb, 9));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return n;
  })();
function oD(n) {
  return typeof n == "number" ? n : parseInt(n, 10);
}
var gp = (() => {
  class n {
    constructor() {
      this._validator = Pc;
    }
    ngOnChanges(e) {
      if (this.inputName in e) {
        let t = this.normalizeInput(e[this.inputName].currentValue);
        (this._enabled = this.enabled(t)),
          (this._validator = this._enabled ? this.createValidator(t) : Pc),
          this._onChange && this._onChange();
      }
    }
    validate(e) {
      return this._validator(e);
    }
    registerOnValidatorChange(e) {
      this._onChange = e;
    }
    enabled(e) {
      return e != null;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵdir = Ie({ type: n, features: [Dt] });
    }
  }
  return n;
})();
var aD = { provide: _o, useExisting: wi(() => mr), multi: !0 };
var mr = (() => {
  class n extends gp {
    constructor() {
      super(...arguments),
        (this.inputName = "required"),
        (this.normalizeInput = Se),
        (this.createValidator = (e) => N_);
    }
    enabled(e) {
      return e;
    }
    static {
      this.ɵfac = (() => {
        let e;
        return function (r) {
          return (e || (e = gt(n)))(r || n);
        };
      })();
    }
    static {
      this.ɵdir = Ie({
        type: n,
        selectors: [
          ["", "required", "", "formControlName", "", 3, "type", "checkbox"],
          ["", "required", "", "formControl", "", 3, "type", "checkbox"],
          ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
        ],
        hostVars: 1,
        hostBindings: function (t, r) {
          t & 2 && ce("required", r._enabled ? "" : null);
        },
        inputs: { required: "required" },
        features: [Bt([aD]), Ze],
      });
    }
  }
  return n;
})();
var sD = { provide: _o, useExisting: wi(() => _p), multi: !0 },
  _p = (() => {
    class n extends gp {
      constructor() {
        super(...arguments),
          (this.inputName = "email"),
          (this.normalizeInput = Se),
          (this.createValidator = (e) => L_);
      }
      enabled(e) {
        return e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "email", "", "formControlName", ""],
            ["", "email", "", "formControl", ""],
            ["", "email", "", "ngModel", ""],
          ],
          inputs: { email: "email" },
          features: [Bt([sD]), Ze],
        });
      }
    }
    return n;
  })();
var lD = { provide: _o, useExisting: wi(() => bp), multi: !0 },
  bp = (() => {
    class n extends gp {
      constructor() {
        super(...arguments),
          (this.inputName = "maxlength"),
          (this.normalizeInput = (e) => oD(e)),
          (this.createValidator = (e) => V_(e));
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (r) {
            return (e || (e = gt(n)))(r || n);
          };
        })();
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "maxlength", "", "formControlName", ""],
            ["", "maxlength", "", "formControl", ""],
            ["", "maxlength", "", "ngModel", ""],
          ],
          hostVars: 1,
          hostBindings: function (t, r) {
            t & 2 && ce("maxlength", r._enabled ? r.maxlength : null);
          },
          inputs: { maxlength: "maxlength" },
          features: [Bt([lD]), Ze],
        });
      }
    }
    return n;
  })();
var ob = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
var tt = (() => {
    class n {
      static withConfig(e) {
        return {
          ngModule: n,
          providers: [{ provide: Ls, useValue: e.callSetDisabledState ?? Uc }],
        };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [ob] });
      }
    }
    return n;
  })(),
  hn = (() => {
    class n {
      static withConfig(e) {
        return {
          ngModule: n,
          providers: [
            {
              provide: ib,
              useValue: e.warnOnNgModelWithFormControl ?? "always",
            },
            { provide: Ls, useValue: e.callSetDisabledState ?? Uc },
          ],
        };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [ob] });
      }
    }
    return n;
  })();
var qn = class n {
  onSideBarClick$ = new Ee();
  selectedOption = pe("users");
  getSelectedOption() {
    return this.selectedOption;
  }
  setSelectedOption(i) {
    this.selectedOption.set(i);
  }
  pageTitleSubject = new Nt("Dashboard");
  pageTitle$ = this.pageTitleSubject.asObservable();
  setPageTitle(i) {
    this.pageTitleSubject.next(i);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var jr = class n {
  isOpen = new Nt(!0);
  isOpen$ = this.isOpen.asObservable();
  toggleSidebar() {
    this.isOpen.next(!this.isOpen.value);
  }
  setSidebar(i) {
    this.isOpen.next(i);
  }
  get currentState() {
    return this.isOpen.value;
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var cD = (n) => ({ "collapsed-sidebar": n }),
  dD = (n) => ({ collapsed: n });
function uD(n, i) {
  if (
    (n & 1 &&
      (l(0, "li", 4)(1, "a", 5), U(2, "i", 6), l(3, "span", 7), h(4), c()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x();
    ne("active", t.isActive(e.key)),
      m(),
      y("routerLink", e.route),
      m(),
      y("ngClass", e.icon),
      m(2),
      B(e.label);
  }
}
var zc = class n {
  constructor(i, e, t) {
    this.router = i;
    this.context = e;
    this.sidebarService = t;
  }
  activeMenu = "";
  isSidebarOpen = !0;
  sidebarSub;
  routerSub;
  menuItems = [
    {
      key: "dashboard",
      label: "Dashboard",
      route: "/Admin/dashboard",
      icon: "fas fa-tachometer-alt",
    },
  ];
  ngOnInit() {
    (this.sidebarSub = this.sidebarService.isOpen$.subscribe((i) => {
      this.isSidebarOpen = i;
    })),
      this.updateActiveFromUrl(this.router.url),
      (this.routerSub = this.router.events.subscribe((i) => {
        i instanceof ci && this.updateActiveFromUrl(i.urlAfterRedirects);
      }));
  }
  ngOnDestroy() {
    this.sidebarSub?.unsubscribe(), this.routerSub?.unsubscribe();
  }
  updateActiveFromUrl(i) {
    console.log("Updating active from URL:", i);
    let e = this.menuItems.find((t) => i.includes(t.route));
    e &&
      this.activeMenu !== e.key &&
      (console.log("Setting active menu to:", e.key),
      (this.activeMenu = e.key),
      this.context.setPageTitle(e.label),
      this.context.onSideBarClick$.next({ role: e.key, pageTitle: e.label }));
  }
  isActive(i) {
    return this.activeMenu === i;
  }
  static ɵfac = function (e) {
    return new (e || n)(j(vt), j(qn), j(jr));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-sidebar"]],
    standalone: !0,
    features: [le],
    decls: 5,
    vars: 7,
    consts: [
      [1, "deznav", 2, "background-color", "#222fb9", 3, "ngClass"],
      ["id", "menu", 1, "metismenu", 3, "ngClass"],
      ["style", "margin-bottom:10px;", 3, "active", 4, "ngFor", "ngForOf"],
      [1, "copyright", 2, "margin-top", "280px"],
      [2, "margin-bottom", "10px"],
      [3, "routerLink"],
      [3, "ngClass"],
      [1, "nav-text", 2, "font-size", "11px", "white-space", "nowrap"],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 0)(1, "div")(2, "ul", 1),
        A(3, uD, 5, 5, "li", 2),
        c(),
        U(4, "div", 3),
        c()()),
        e & 2 &&
          (y("ngClass", de(3, cD, !t.isSidebarOpen)),
          m(2),
          y("ngClass", de(5, dD, !t.isSidebarOpen)),
          m(),
          y("ngForOf", t.menuItems));
    },
    dependencies: [tt, ti, Li, Ae, It, At],
    styles: [
      ".metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{background:#fff3!important;color:#fff!important;border-radius:50px;align-items:center;gap:8px;transition:none!important}.deznav[_ngcontent-%COMP%]:not(.collapsed-sidebar)   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:#fff!important;color:#222fb9!important}.collapsed-sidebar[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:transparent!important;color:#fff!important}.metismenu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{background-color:inherit!important;color:inherit!important}.deznav[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{font-size:1.5rem}.nav-text[_ngcontent-%COMP%]{font-size:15px}",
    ],
  });
};
var Di = class n {
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵmod = ye({ type: n });
  static ɵinj = ve({ imports: [Ae, tt, Li, zc, Ae, tt, Li] });
};
var hD = ["userDropdownWrapper"],
  xp = () => ({ exact: !0 });
function pD(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 22)(1, "ul")(2, "li", 23),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.logout());
      }),
      Ct(),
      l(3, "svg", 24),
      U(4, "path", 25),
      c(),
      h(5, " Logout "),
      c()()();
  }
}
function mD(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 26)(1, "div", 27)(2, "h3"),
      h(3, "Confirm Logout"),
      c(),
      l(4, "p"),
      h(5, "Are you sure you want to logout?"),
      c(),
      l(6, "div", 28)(7, "button", 29),
      R("click", function () {
        O(e);
        let r = x();
        return k((r.showLogoutModal = !1));
      }),
      h(8, "Cancel"),
      c(),
      l(9, "button", 30),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.confirmLogout());
      }),
      h(10, "Logout"),
      c()()()();
  }
}
function fD(n, i) {
  n & 1 &&
    (l(0, "div")(1, "h1", 31),
    h(2, "Dealer Performance Dashboard"),
    c(),
    l(3, "p", 32),
    h(4, "Track users, leads, follow-ups, test drives & calls."),
    c()());
}
function gD(n, i) {
  n & 1 && (l(0, "div")(1, "h1", 31), h(2, "SA Summary Dashboard"), c()());
}
function _D(n, i) {
  n & 1 &&
    (l(0, "div")(1, "h1", 31),
    h(2, "Trend Chart Dashboard"),
    c(),
    l(3, "p", 33),
    h(4, "Track performance metrics and KPIs across all sales channels"),
    c()());
}
var $c = class n {
  constructor(i, e, t, r) {
    this.sidebarService = i;
    this.router = e;
    this.http = t;
    this.eRef = r;
  }
  selectedTab = "dashboard";
  isSidebarOpen = !0;
  selectedDealer = "all";
  selectedPS = "all";
  models = [];
  isUserDropdownOpen = !1;
  mobileMenuOpen = !1;
  userDropdownOpen = !1;
  selectedFilter = "DAY";
  newInquiryKpi = null;
  aggregatedMetrics = null;
  efforts = {};
  productivity = {};
  activePS = {};
  otherKpis = {};
  overallEfforts = 0;
  showLogoutConfirm = !1;
  overallProductivity = 0;
  selectedModel = "all";
  showUserDropdown = !1;
  showLogoutModal = !1;
  userDropdownWrapper;
  dealers = [];
  users = [];
  menuOpen = !1;
  ngOnInit() {
    this.loadDealers(),
      this.sidebarService.isOpen$.subscribe((e) => {
        this.isSidebarOpen = e;
      });
    let i = this.router.url;
    i.includes("/Admin/dashboard")
      ? (this.selectedTab = "dashboard")
      : i.includes("/Admin/summary")
      ? (this.selectedTab = "summary")
      : i.includes("/Admin/trend-chart") && (this.selectedTab = "trend-chart"),
      this.router.events.pipe(St((e) => e instanceof ci)).subscribe((e) => {
        e.urlAfterRedirects.includes("/Admin/dashboard")
          ? (this.selectedTab = "dashboard")
          : e.urlAfterRedirects.includes("/Admin/summary")
          ? (this.selectedTab = "summary")
          : e.urlAfterRedirects.includes("/Admin/trend-chart") &&
            (this.selectedTab = "trend-chart");
      });
  }
  onFilterChange(i) {
    console.log("Filter selected:", i),
      this.loadDealers(i),
      (this.selectedFilter = i);
  }
  toggleSidebar() {
    this.sidebarService.toggleSidebar();
  }
  selectTab(i) {
    this.selectedTab = i;
  }
  isActive(i) {
    return this.router.url.includes(`/Admin/${i}`);
  }
  toggleUserDropdown() {
    this.userDropdownOpen = !this.userDropdownOpen;
  }
  navigateTo(i) {
    this.router.navigate(["/Admin", i]);
  }
  confirmLogout() {
    (this.showLogoutModal = !1),
      localStorage.removeItem("token"),
      this.router.navigate(["/login"]);
  }
  clickOutside(i) {
    this.userDropdownOpen &&
      this.userDropdownWrapper &&
      !this.userDropdownWrapper.nativeElement.contains(i.target) &&
      (this.userDropdownOpen = !1);
  }
  navigateToSingleDealer(i) {
    this.router.navigate(["/Admin/singleDealer", i]);
  }
  resetFilters() {
    (this.selectedFilter = "all"),
      (this.selectedDealer = "all"),
      (this.selectedPS = "all"),
      (this.selectedModel = "all"),
      console.log("Filters reset ->", {
        filter: this.selectedFilter,
        dealer: this.selectedDealer,
        ps: this.selectedPS,
        model: this.selectedModel,
      });
  }
  getKpiByName(i, e, t) {
    if (!i) return null;
    let r = i[e] || i.aggregatedMetrics?.[e];
    if (!r) return console.warn(`No KPIs found for category "${e}"`, i), null;
    let o = r[t];
    return (
      o || (console.warn(`KPI "${t}" not found in category "${e}"`, r), null)
    );
  }
  loadDealers(i = "DAY") {
    let e = "https://uat.smartassistapp.in/api/superAdmin/dashboard/summary",
      t = localStorage.getItem("token");
    this.http
      .get(e, {
        headers: { Authorization: `Bearer ${t}` },
        params: { type: i },
      })
      .subscribe({
        next: (r) => {
          r.success &&
            r.data &&
            (r.data.dealers &&
              ((this.dealers = r.data.dealers.map((o) => ({
                dealer_id: o.dealer_id,
                dealer_name: o.dealer_name,
                efforts: o.efforts,
                productivity: o.productivity,
                otherKpis: o.otherKpis,
                aggregatedMetrics: o.aggregatedMetrics,
              }))),
              console.log("Dealers loaded:", this.dealers)),
            (this.users = r.data.dealers.flatMap(
              (o) =>
                o.users?.map((a) => ({
                  user_id: a.user_id,
                  name: a.name,
                  dealer_id: o.dealer_id,
                })) || []
            )),
            console.log("Users (PS) loaded:", this.users),
            r.data.models &&
              ((this.models = r.data.models
                .filter((o) => o.model_name)
                .map((o) => ({ model: o.model, model_name: o.model_name }))),
              console.log("Models loaded:", this.models)),
            r.data.aggregatedMetrics?.efforts?.["New Inquiry"]
              ? (this.newInquiryKpi =
                  r.data.aggregatedMetrics.efforts["New Inquiry"])
              : this.dealers.length > 0 &&
                (this.newInquiryKpi = this.getKpiByName(
                  this.dealers[0],
                  "efforts",
                  "New Inquiry"
                )),
            console.log("New Inquiry KPI:", this.newInquiryKpi));
        },
        error: (r) => console.error("Error fetching dealers/users/models", r),
      });
  }
  loadDashboard(i) {
    let e = "https://uat.smartassistapp.in/api/superAdmin/dashboard/summary",
      t = localStorage.getItem("token");
    this.http
      .get(e, {
        headers: { Authorization: `Bearer ${t}` },
        params: { type: i },
      })
      .subscribe({
        next: (r) => {
          if (r.success && r.data?.aggregatedMetrics) {
            let o = r.data.aggregatedMetrics;
            if (
              ((this.efforts = o.efforts || {}),
              (this.productivity = o.productivity || {}),
              (this.activePS = o.activePS || {}),
              (this.otherKpis = o.otherKpis || {}),
              this.efforts)
            ) {
              let a = Object.values(this.efforts);
              this.overallEfforts = a.length
                ? Math.round(a.reduce((d, u) => d + u.progress, 0) / a.length)
                : 0;
            }
            if (this.productivity) {
              let a = Object.values(this.productivity);
              this.overallProductivity = a.length
                ? Math.round(a.reduce((d, u) => d + u.progress, 0) / a.length)
                : 0;
            }
          }
        },
        error: (r) => console.error("Error loading dashboard", r),
      });
  }
  toggleMenu() {
    this.menuOpen = !this.menuOpen;
  }
  logout() {
    this.showLogoutModal = !0;
  }
  static ɵfac = function (e) {
    return new (e || n)(j(jr), j(vt), j(jt), j(Re));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-overview"]],
    viewQuery: function (e, t) {
      if ((e & 1 && _t(hD, 5), e & 2)) {
        let r;
        nt((r = rt())) && (t.userDropdownWrapper = r.first);
      }
    },
    hostBindings: function (e, t) {
      e & 1 &&
        R(
          "click",
          function (o) {
            return t.clickOutside(o);
          },
          !1,
          Or
        );
    },
    standalone: !0,
    features: [le],
    decls: 29,
    vars: 16,
    consts: [
      ["userDropdownWrapper", ""],
      ["id", "main-wrapper"],
      [1, "content-body"],
      [1, "container-fluid"],
      [
        1,
        "sticky",
        "top-0",
        "z-20",
        "bg-white/90",
        "backdrop-blur",
        "border-b",
        "border-slate-200",
        "super-header",
      ],
      [1, "max-w-7xl", "mx-auto", "py-1"],
      [
        1,
        "flex",
        "flex-col",
        "sm:flex-row",
        "sm:items-center",
        "sm:justify-between",
        "gap-4",
        "mb-2",
        "media",
        "w-full",
        2,
        "background-color",
        "white",
      ],
      [1, "nav-button-sa"],
      [
        1,
        "inline-flex",
        "bg-gray-100",
        "p-1",
        "rounded-full",
        "overflow-x-auto",
      ],
      [
        "routerLink",
        "/Admin/dashboard",
        "routerLinkActive",
        "active-tab",
        1,
        "tab-btn",
        "whitespace-nowrap",
        "flex-shrink-0",
        "text-sm",
        "px-4",
        3,
        "routerLinkActiveOptions",
      ],
      [
        "routerLink",
        "/Admin/summary",
        "routerLinkActive",
        "active-tab",
        1,
        "tab-btn",
        "whitespace-nowrap",
        "flex-shrink-0",
        "text-sm",
        "px-4",
        3,
        "routerLinkActiveOptions",
      ],
      [
        "routerLink",
        "/Admin/trend-chart",
        "routerLinkActive",
        "active-tab",
        1,
        "tab-btn",
        "whitespace-nowrap",
        "flex-shrink-0",
        "text-sm",
        "px-4",
        3,
        "routerLinkActiveOptions",
      ],
      [1, "user-icon-wrapper", 3, "click"],
      [1, "user-icon", "flex-shrink-0", "ml-auto"],
      [
        "width",
        "32",
        "height",
        "32",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "xmlns",
        "http://www.w3.org/2000/svg",
      ],
      [
        "cx",
        "12",
        "cy",
        "12",
        "r",
        "10",
        "stroke",
        "#6B7280",
        "stroke-width",
        "2",
      ],
      [
        "cx",
        "12",
        "cy",
        "8",
        "r",
        "3",
        "stroke",
        "#6B7280",
        "stroke-width",
        "2",
      ],
      [
        "d",
        "M6 20c0-4 2.5-6 6-6s6 2 6 6",
        "stroke",
        "#6B7280",
        "stroke-width",
        "2",
      ],
      ["class", "user-dropdown", 4, "ngIf"],
      ["class", "logout-modal-backdrop", 4, "ngIf"],
      [3, "ngSwitch"],
      [4, "ngSwitchCase"],
      [1, "user-dropdown"],
      [3, "click"],
      [
        "width",
        "16",
        "height",
        "16",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "xmlns",
        "http://www.w3.org/2000/svg",
        2,
        "margin-right",
        "6px",
      ],
      [
        "d",
        "M16 17l5-5-5-5M21 12H9M13 5v-2H5v18h8v-2",
        "stroke",
        "#374151",
        "stroke-width",
        "2",
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
      ],
      [1, "logout-modal-backdrop"],
      [1, "logout-modal"],
      [1, "modal-actions"],
      [1, "btn", "btn-cancel", 3, "click"],
      [1, "btn", "btn-logout", 3, "click"],
      [1, "text-2xl", "font-bold", "tracking-tight"],
      [1, "text-slate-500", "text-sm"],
      [1, "text-slate-500", "text-sm", "text1"],
    ],
    template: function (e, t) {
      if (e & 1) {
        let r = oe();
        l(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "header", 4)(4, "div", 5)(
          5,
          "div",
          6
        )(
          6,
          "div",
          7
        )(7, "div")(8, "nav", 8)(9, "a", 9),
          h(10, " Dashboard "),
          c(),
          l(11, "a", 10),
          h(12, " Summary "),
          c(),
          l(13, "a", 11),
          h(14, " Trend chart "),
          c()()()(),
          l(15, "div", 12, 0),
          R("click", function () {
            return O(r), k(t.toggleUserDropdown());
          }),
          l(17, "div", 13),
          Ct(),
          l(18, "svg", 14),
          U(19, "circle", 15)(20, "circle", 16)(21, "path", 17),
          c()(),
          A(22, pD, 6, 0, "div", 18),
          c()(),
          A(23, mD, 11, 0, "div", 19),
          oo(),
          l(24, "div", 20),
          A(25, fD, 5, 0, "div", 21)(26, gD, 3, 0, "div", 21)(
            27,
            _D,
            5,
            0,
            "div",
            21
          ),
          c()()(),
          U(28, "router-outlet"),
          c()()();
      }
      e & 2 &&
        (ne("menu-toggle", !t.isSidebarOpen),
        m(9),
        y("routerLinkActiveOptions", pi(13, xp)),
        m(2),
        y("routerLinkActiveOptions", pi(14, xp)),
        m(2),
        y("routerLinkActiveOptions", pi(15, xp)),
        m(2),
        ne("open", t.userDropdownOpen),
        m(7),
        y("ngIf", t.userDropdownOpen),
        m(),
        y("ngIf", t.showLogoutModal),
        m(),
        y("ngSwitch", t.selectedTab),
        m(),
        y("ngSwitchCase", "dashboard"),
        m(),
        y("ngSwitchCase", "summary"),
        m(),
        y("ngSwitchCase", "trend-chart"));
    },
    dependencies: [Di, We, Jl, ec, mo, ti, v_, tt],
    styles: [
      '.card-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:15px;margin:0;letter-spacing:.2px}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;color:#2563eb;border:1px solid #ccc;background:var(--chip);border-radius:999px;padding:6px 10px;font-size:12px}.chip[_ngcontent-%COMP%]   .dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:#2563eb}.nav-button-container[_ngcontent-%COMP%]{display:inline-flex!important;padding:6px!important;border-radius:50px!important;border:1px solid #e2e8f0!important;background-color:#f8fafc!important;box-shadow:0 1px 3px #0000001a!important}.nav-button-sa[_ngcontent-%COMP%]{border-radius:30px;object-fit:contain;width:100%;max-width:380px}.nav-tab-button[_ngcontent-%COMP%]{display:flex!important;align-items:center!important;justify-content:center!important;gap:8px!important;padding:10px 20px!important;font-size:14px!important;font-weight:500!important;border-radius:50px!important;transition:all .2s ease-in-out!important;cursor:pointer!important;border:none!important;outline:none!important;background:transparent!important;color:#64748b!important;white-space:nowrap!important}.nav-tab-button.active[_ngcontent-%COMP%]{background:#2563eb!important;color:#fff!important;box-shadow:0 2px 4px -1px #0003!important}.nav-tab-button[_ngcontent-%COMP%]:not(.active):hover{color:#475569!important;background:#3b82f614!important}.nav-tab-button[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:16px!important;height:16px!important;opacity:.8!important}.nav-tab-button.active[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{opacity:1!important}.tab-btn[_ngcontent-%COMP%]{padding:.5rem 1.5rem;border-radius:9999px;font-size:14px;font-weight:500;display:inline-flex;align-items:center;gap:.5rem;color:#475569;transition:all .2s ease-in-out}.tab-btn[_ngcontent-%COMP%]:hover{color:#1f2937}.active-tab[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff!important;box-shadow:0 2px 6px #0003}.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:7rem}@media (min-width: 768px) and (max-width: 819px){.content-body[_ngcontent-%COMP%]{margin-left:42px!important}}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .deznav[_ngcontent-%COMP%]{width:80px}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .nav-text[_ngcontent-%COMP%]{display:none}@media (min-width: 2560px){.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:336px!important}}@media screen and (min-width: 1920px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:336px}}#main-wrapper[_ngcontent-%COMP%]{display:flex}.content-body[_ngcontent-%COMP%]{transition:margin-left .3s ease;width:100%}.media[_ngcontent-%COMP%]{padding:.75rem}@media (max-width: 768px){.media[_ngcontent-%COMP%]{padding:0}.text1[_ngcontent-%COMP%]{font-size:11px}}.content-section[_ngcontent-%COMP%]{padding:20px;margin-top:70px}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:2rem;margin-top:20px}.performance-panel[_ngcontent-%COMP%]{flex:1;background:#f9f9f9;border-radius:8px;padding:20px;height:300px}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px}.metric-box[_ngcontent-%COMP%]{background:#fff;padding:1rem;border-radius:8px;text-align:center;box-shadow:0 2px 4px #0000001a}.super-header[_ngcontent-ng-c3749377617][_ngcontent-%COMP%]{background-color:#fff;margin-top:15px}.content-body[_ngcontent-%COMP%]   .container-fluid[_ngcontent-%COMP%], .content-body[_ngcontent-%COMP%]{padding-top:0}.tracking-tight[_ngcontent-%COMP%]{letter-spacing:-.025em}.font-bold[_ngcontent-%COMP%]{font-weight:700}@media (max-width: 768px){.tracking-tight[_ngcontent-%COMP%]{font-size:1.125rem}}[_ngcontent-%COMP%]:root{--bg: #0b1020;--bg-soft: #0e1428;--card: rgba(255, 255, 255, .06);--card-border: rgba(255, 255, 255, .14);--text: #e8edf6;--muted: #a6b0c3;--brand: #7aa2ff;--brand-2: #6ae3ff;--success: #34d399;--danger: #ef4444;--warn: #f59e0b;--ring: rgba(122, 162, 255, .35);--chip: #1b223a;--select: #111832;--grid-line: rgba(255, 255, 255, .06);--shadow: 0 10px 30px rgba(0, 0, 0, .35), 0 2px 8px rgba(0, 0, 0, .25);--radius: 16px;--radius-sm: 12px;--radius-xs: 8px;--blur: 12px;--fw-600: 600;--fw-700: 700}[data-theme=light][_ngcontent-%COMP%]{--bg: #f7f9fc;--bg-soft: #eef2fb;--card: #ffffff;--card-border: #e7e9f2;--text: #1a2234;--muted: #5b657a;--brand: #2563eb;--brand-2: #60a5fa;--success: #10b981;--danger: #ef4444;--warn: #d97706;--ring: rgba(37, 99, 235, .2);--chip: #f1f5ff;--select: #ffffff;--grid-line: rgba(26, 34, 52, .06);--shadow: 0 10px 30px rgba(16, 24, 40, .08), 0 2px 8px rgba(16, 24, 40, .06)}*[_ngcontent-%COMP%]{box-sizing:border-box}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}.dashboard-header[_ngcontent-%COMP%]{background-color:#fff!important;padding:15px;box-shadow:0 4px 6px #0000001a}body[_ngcontent-%COMP%]{margin:0;font-family:Inter,ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Helvetica Neue,Arial,"Apple Color Emoji","Segoe UI Emoji";color:var(--text);background:radial-gradient(1200px 800px at 10% -10%,var(--brand-2) 0%,transparent 35%),radial-gradient(1000px 700px at 120% 10%,var(--brand) 0%,transparent 30%),linear-gradient(180deg,var(--bg-soft),var(--bg));background-attachment:fixed;line-height:1.6}.grid-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;pointer-events:none;background:linear-gradient(var(--grid-line) 1px,transparent 1px) 0 0/ 100% 48px,linear-gradient(90deg,var(--grid-line) 1px,transparent 1px) 0 0/ 48px 100%;mask-image:radial-gradient(1200px 800px at 40% 0%,rgba(0,0,0,.35),transparent 70%)}.container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:28px 20px 56px}.header[_ngcontent-%COMP%]{position:relative;margin-bottom:20px;padding:24px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);overflow:hidden}.header[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;background:radial-gradient(600px 150px at 20% 0%,rgba(255,255,255,.12),transparent 40%);pointer-events:none}.header-top[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px;justify-content:space-between;margin-bottom:10px}.brand-chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:10px;background:var(--chip);border:1px solid var(--card-border);padding:8px 12px;border-radius:999px;font-size:12px;color:var(--muted)}.brand-dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background:linear-gradient(135deg,var(--brand),var(--brand-2));box-shadow:0 0 0 6px var(--ring)}.theme-toggle[_ngcontent-%COMP%]{border:1px solid var(--card-border);background:var(--chip);color:var(--text);border-radius:999px;padding:8px 12px;cursor:pointer;transition:transform .15s ease}.theme-toggle[_ngcontent-%COMP%]:hover{transform:translateY(-1px)}.main-title[_ngcontent-%COMP%]{margin:6px 0 4px;font-weight:var(--fw-700);letter-spacing:.2px;font-size:clamp(22px,3.4vw,32px);background:linear-gradient(90deg,var(--text),var(--brand));-webkit-background-clip:text;background-clip:text;color:#000!important}.subtitle[_ngcontent-%COMP%]{color:var(--muted);font-size:14px}[_ngcontent-%COMP%]:root{--brand: #4f46e5;--brand-2: #06b6d4}.progress[_ngcontent-%COMP%]{width:100%;height:10px;background:#f0f0f0;border-radius:6px;overflow:hidden;margin-top:6px}.bar[_ngcontent-%COMP%]{height:100%;border-radius:6px;background-color:#87cefa!important;transition:width .4s ease}.filters-wrap[_ngcontent-%COMP%]{position:sticky;top:10px;z-index:5;margin:18px 0 28px;background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:14px;align-items:center}.filters[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:14px;font-weight:var(--fw-600);color:var(--muted);margin:0 6px 0 2px;display:flex;align-items:center;gap:8px}.select[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;background:var(--select);border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px;min-width:230px;transition:box-shadow .2s ease,border-color .2s ease}.select[_ngcontent-%COMP%]:focus-within{box-shadow:0 0 0 6px var(--ring);border-color:var(--brand)}.select[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:18px;height:18px;opacity:.7}.select[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{border:0;background:transparent;color:var(--text);width:100%;padding:6px 6px 6px 2px;outline:none;font-size:14px;appearance:none}.filter-actions[_ngcontent-%COMP%]{margin-left:auto;display:flex;gap:10px;flex-wrap:wrap}.filter-container[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center;width:100%;gap:10px}.filter-actions[_ngcontent-%COMP%]{display:flex;gap:10px;flex-wrap:wrap}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip, #f3f4f6);color:var(--text, #111);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:600;cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip);color:var(--text);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:var(--fw-600);cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[_ngcontent-%COMP%]:hover{transform:translateY(-1px);box-shadow:var(--shadow)}.btn.primary[_ngcontent-%COMP%]{background:linear-gradient(135deg,var(--brand),var(--brand-2));color:#fff;border-color:transparent}.kpi-grid[_ngcontent-%COMP%]{display:grid;gap:22px;grid-template-columns:repeat(12,1fr)}.kpi-card[_ngcontent-%COMP%]{background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a;grid-column:span 6;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);padding:18px 18px 16px;overflow:hidden;position:relative}.kpi-card[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;pointer-events:none;background:radial-gradient(450px 120px at 95% -10%,rgba(122,162,255,.13),transparent 45%)}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);transition:transform .2s ease}.card-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:10px;margin-bottom:12px}.card-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:15px;margin-left:-15px;letter-spacing:.2px}#chipdot[_ngcontent-%COMP%]{margin-left:80px}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;border:1px solid #ccc;background:var(--chip);border-radius:999px;padding:6px 10px;font-size:12px;color:var(--muted)}.chip[_ngcontent-%COMP%]   .dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:#add8e6}.kpi-items[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px}.kpi-item[_ngcontent-%COMP%]{border:1px solid #e2e8f0;border-radius:15px!important;background:linear-gradient(180deg,rgba(255,255,255,.04),transparent);padding:10px 12px;transition:border-color .2s ease,background .2s ease}.kpi-item[_ngcontent-%COMP%]:hover{border-color:var(--ring);background:linear-gradient(180deg,rgba(122,162,255,.08),transparent)}.kpi-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:12px;font-size:13px;margin-bottom:8px}.kpi-label[_ngcontent-%COMP%]{color:var(--muted)}.kpi-values[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;font-weight:var(--fw-600)}.kpi-actual[_ngcontent-%COMP%]{color:var(--text)}.trend-icon[_ngcontent-%COMP%]{width:16px;height:16px}.progress[_ngcontent-%COMP%]{position:relative;height:10px;border-radius:999px;overflow:hidden;background:linear-gradient(0deg,#ffffff14,#ffffff0a);border:1px solid #e2e8f0}.bar[_ngcontent-%COMP%]{height:100%;background:linear-gradient(90deg,var(--brand),var(--brand-2));border-radius:inherit;width:0%;transition:width .9s cubic-bezier(.2,.8,.2,1);position:relative;mask-image:linear-gradient(90deg,#0003 0 10px,#000 40px)}.bar.down[_ngcontent-%COMP%]{background:linear-gradient(90deg,var(--danger),#fda4af)}.growth[_ngcontent-%COMP%]{grid-column:span 12;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:18px;background-color:#fff!important;box-shadow:0 4px 6px #0000001a}.growth-head[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;margin-bottom:8px}.growth-head[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:15px}.growth-note[_ngcontent-%COMP%]{color:var(--muted);font-size:12px;margin-top:6px}.sparkline[_ngcontent-%COMP%]{width:100%;height:140px;border-radius:var(--radius);border:1px dashed var(--card-border);display:grid;place-items:center;color:var(--muted);font-size:13px}@media (max-width: 1024px){.kpi-card[_ngcontent-%COMP%]{grid-column:span 12}}@media (max-width: 640px){.filters[_ngcontent-%COMP%]{gap:10px}.select[_ngcontent-%COMP%]{min-width:100%}.filter-actions[_ngcontent-%COMP%]{width:100%;justify-content:flex-end}}@keyframes _ngcontent-%COMP%_pop{0%{transform:scale(.98);opacity:0}to{transform:scale(1);opacity:1}}.kpi-card[_ngcontent-%COMP%], .growth[_ngcontent-%COMP%], .header[_ngcontent-%COMP%], .filters[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pop .35s ease both;border-radius:10px!important}.ring[_ngcontent-%COMP%]{box-shadow:0 0 0 6px var(--ring);transition:box-shadow .3s ease}.trend-icon[_ngcontent-%COMP%]{width:18px;height:18px;stroke-width:2.25;vertical-align:middle;flex-shrink:0;display:inline-block}.kpi-values[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;line-height:1}.trend-up[_ngcontent-%COMP%]{color:var(--success)}.trend-down[_ngcontent-%COMP%]{color:var(--danger)}.kpi-item[_ngcontent-%COMP%]{flex:1}.kpi-item-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:20px;border-radius:14px;margin-bottom:16px}.kpi-item[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;justify-content:center}.growth-box[_ngcontent-%COMP%]{background:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;width:90px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:flex;flex-direction:column;align-items:center}.growth-box[_ngcontent-%COMP%]{background:linear-gradient(135deg,#10b981,#059669);color:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:inline-flex;flex-direction:column;align-items:flex-start;width:70px;height:70px}.growth-header[_ngcontent-%COMP%]{display:flex;color:#fff;justify-content:flex-start;align-items:baseline;gap:4px;margin-bottom:6px}.growth-title[_ngcontent-%COMP%]{font-size:11px;color:#fff;font-weight:500}.growth-value[_ngcontent-%COMP%]{font-size:13px;font-weight:700;color:#fff}.growth-bars[_ngcontent-%COMP%]{display:flex;align-items:flex-end;gap:2px;color:#fff;height:25px;justify-content:flex-start;width:fit-content}.bar-segment[_ngcontent-%COMP%]{width:3px;background:#fff;border-radius:2px}@media (max-width: 844px){.user-icon-wrapper[_ngcontent-%COMP%]{margin-top:-10px!important}#track[_ngcontent-%COMP%]{white-space:break-spaces!important}}.user-dropdown-container[_ngcontent-%COMP%]{position:relative;margin-left:auto}.user-icon-btn[_ngcontent-%COMP%]{width:40px;height:40px;background:#fff;border:1px solid #e2e8f0;border-radius:50%;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:all .2s ease;box-shadow:0 2px 4px #0000001a}.user-icon-btn[_ngcontent-%COMP%]:hover{box-shadow:0 4px 12px #00000026;transform:translateY(-1px)}.user-icon[_ngcontent-%COMP%]{width:20px;height:20px;color:#6b7280;margin-top:7px;margin-right:10px}.logout-btn[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;gap:8px;padding:8px 12px;background:none;border:none;text-align:left;cursor:pointer;font-size:14px;color:#374151;transition:background-color .2s ease}.logout-btn[_ngcontent-%COMP%]:hover{background-color:#f3f4f6}.user-dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;right:0;z-index:999}.logout-confirm-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background:#00000080;display:flex;justify-content:center;align-items:center;z-index:999}.logout-confirm-card[_ngcontent-%COMP%]{background:#fff;border:1px solid #ccc;padding:20px 25px;border-radius:8px;box-shadow:0 4px 12px #0000004d;text-align:center;min-width:250px}.logout-confirm-card[_ngcontent-%COMP%]   .buttons[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin-top:15px}.confirm-btn[_ngcontent-%COMP%]{background-color:#d9534f;color:#fff;border:none;padding:7px 15px;border-radius:4px;cursor:pointer}.cancel-btn[_ngcontent-%COMP%]{background-color:#ccc;color:#000;border:none;padding:7px 15px;border-radius:4px;cursor:pointer}.confirm-btn[_ngcontent-%COMP%]:hover{background-color:#c9302c}.cancel-btn[_ngcontent-%COMP%]:hover{background-color:#b3b3b3}@media (max-width: 640px){.tab-btn[_ngcontent-%COMP%]{font-size:12px!important;padding:8px 12px!important}.nav-button-sa[_ngcontent-%COMP%]   nav[_ngcontent-%COMP%]{min-width:100%}}.overflow-x-auto[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}.overflow-x-auto[_ngcontent-%COMP%]{-ms-overflow-style:none;scrollbar-width:none}.user-icon-wrapper[_ngcontent-%COMP%]{position:relative;display:flex;width:100%;align-items:center;cursor:pointer}.user-icon[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:48px;height:48px}.user-dropdown[_ngcontent-%COMP%]{position:absolute;top:100%;right:0;margin-top:5px;background:#fff;border:1px solid #e5e7eb;border-radius:6px;box-shadow:0 2px 10px #0000001a;width:120px;z-index:10}.user-dropdown[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;margin:0;padding:0}.user-dropdown[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:8px 12px;cursor:pointer;font-size:14px;color:#374151}.user-dropdown[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#f3f4f6}.logout-modal-backdrop[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#0006;display:flex;justify-content:center;align-items:center;z-index:9999}.logout-modal[_ngcontent-%COMP%]{background:#fff;padding:24px;border-radius:8px;max-width:320px;width:90%;text-align:center;box-shadow:0 4px 20px #0003}.logout-modal[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-bottom:12px;font-size:18px}.logout-modal[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:20px;font-size:14px}.modal-actions[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:10px}.btn-cancel[_ngcontent-%COMP%]{background-color:#e5e7eb;color:#374151;padding:6px 12px;border-radius:4px;cursor:pointer;border:none}.btn-logout[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;padding:6px 12px;border-radius:4px;cursor:pointer;border:none}',
    ],
  });
};
var bD = ["chart"],
  Wc = (() => {
    class n {
      constructor() {
        (this.chart = Et()),
          (this.annotations = Et()),
          (this.colors = Et()),
          (this.dataLabels = Et()),
          (this.series = Et()),
          (this.stroke = Et()),
          (this.labels = Et()),
          (this.legend = Et()),
          (this.markers = Et()),
          (this.noData = Et()),
          (this.parsing = Et()),
          (this.fill = Et()),
          (this.tooltip = Et()),
          (this.plotOptions = Et()),
          (this.responsive = Et()),
          (this.xaxis = Et()),
          (this.yaxis = Et()),
          (this.forecastDataPoints = Et()),
          (this.grid = Et()),
          (this.states = Et()),
          (this.title = Et()),
          (this.subtitle = Et()),
          (this.theme = Et()),
          (this.autoUpdateSeries = Et(!0)),
          (this.chartReady = Cg()),
          (this.chartInstance = pe(null)),
          (this.chartElement = Rg.required("chart")),
          (this.ngZone = W(Me)),
          (this.isBrowser = dn(W(si)));
      }
      ngOnChanges(e) {
        this.isBrowser &&
          this.ngZone.runOutsideAngular(() => {
            zu.schedule(() => this.hydrate(e));
          });
      }
      ngOnDestroy() {
        this.destroy();
      }
      hydrate(e) {
        if (
          this.autoUpdateSeries() &&
          Object.keys(e).filter((r) => r !== "series").length === 0
        ) {
          this.updateSeries(this.series(), !0);
          return;
        }
        this.createElement();
      }
      createElement() {
        return zo(this, null, function* () {
          let { default: e } = yield import("./chunk-DQLEG5UQ.js");
          window.ApexCharts ||= e;
          let t = {};
          [
            "annotations",
            "chart",
            "colors",
            "dataLabels",
            "series",
            "stroke",
            "labels",
            "legend",
            "fill",
            "tooltip",
            "plotOptions",
            "responsive",
            "markers",
            "noData",
            "parsing",
            "xaxis",
            "yaxis",
            "forecastDataPoints",
            "grid",
            "states",
            "title",
            "subtitle",
            "theme",
          ].forEach((a) => {
            let d = this[a]();
            d && (t[a] = d);
          }),
            this.destroy();
          let o = this.ngZone.runOutsideAngular(
            () => new e(this.chartElement().nativeElement, t)
          );
          this.chartInstance.set(o),
            this.render(),
            this.chartReady.emit({ chartObj: o });
        });
      }
      render() {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.render()
        );
      }
      updateOptions(e, t, r, o) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.updateOptions(e, t, r, o)
        );
      }
      updateSeries(e, t) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.updateSeries(e, t)
        );
      }
      appendSeries(e, t) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.appendSeries(e, t)
        );
      }
      appendData(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.appendData(e)
        );
      }
      highlightSeries(e) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.highlightSeries(e)
        );
      }
      toggleSeries(e) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.toggleSeries(e)
        );
      }
      showSeries(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.showSeries(e)
        );
      }
      hideSeries(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.hideSeries(e)
        );
      }
      resetSeries() {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.resetSeries()
        );
      }
      zoomX(e, t) {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.zoomX(e, t));
      }
      toggleDataPointSelection(e, t) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.toggleDataPointSelection(e, t)
        );
      }
      destroy() {
        this.chartInstance()?.destroy(), this.chartInstance.set(null);
      }
      setLocale(e) {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.setLocale(e));
      }
      paper() {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.paper());
      }
      addXaxisAnnotation(e, t, r) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addXaxisAnnotation(e, t, r)
        );
      }
      addYaxisAnnotation(e, t, r) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addYaxisAnnotation(e, t, r)
        );
      }
      addPointAnnotation(e, t, r) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addPointAnnotation(e, t, r)
        );
      }
      removeAnnotation(e, t) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.removeAnnotation(e, t)
        );
      }
      clearAnnotations(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.clearAnnotations(e)
        );
      }
      dataURI(e) {
        return this.chartInstance()?.dataURI(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["apx-chart"]],
          viewQuery: function (t, r) {
            t & 1 && Lg(r.chartElement, bD, 5), t & 2 && nh();
          },
          inputs: {
            chart: [1, "chart"],
            annotations: [1, "annotations"],
            colors: [1, "colors"],
            dataLabels: [1, "dataLabels"],
            series: [1, "series"],
            stroke: [1, "stroke"],
            labels: [1, "labels"],
            legend: [1, "legend"],
            markers: [1, "markers"],
            noData: [1, "noData"],
            parsing: [1, "parsing"],
            fill: [1, "fill"],
            tooltip: [1, "tooltip"],
            plotOptions: [1, "plotOptions"],
            responsive: [1, "responsive"],
            xaxis: [1, "xaxis"],
            yaxis: [1, "yaxis"],
            forecastDataPoints: [1, "forecastDataPoints"],
            grid: [1, "grid"],
            states: [1, "states"],
            title: [1, "title"],
            subtitle: [1, "subtitle"],
            theme: [1, "theme"],
            autoUpdateSeries: [1, "autoUpdateSeries"],
          },
          outputs: { chartReady: "chartReady" },
          standalone: !0,
          features: [Dt, le],
          decls: 2,
          vars: 0,
          consts: [["chart", ""]],
          template: function (t, r) {
            t & 1 && U(0, "div", null, 0);
          },
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var Gc = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
function js(n) {
  return (n + 0.5) | 0;
}
var Hr = (n, i, e) => Math.max(Math.min(n, e), i);
function Vs(n) {
  return Hr(js(n * 2.55), 0, 255);
}
function Ur(n) {
  return Hr(js(n * 255), 0, 255);
}
function fr(n) {
  return Hr(js(n / 2.55) / 100, 0, 1);
}
function sb(n) {
  return Hr(js(n * 100), 0, 100);
}
var pn = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    A: 10,
    B: 11,
    C: 12,
    D: 13,
    E: 14,
    F: 15,
    a: 10,
    b: 11,
    c: 12,
    d: 13,
    e: 14,
    f: 15,
  },
  wp = [..."0123456789ABCDEF"],
  vD = (n) => wp[n & 15],
  yD = (n) => wp[(n & 240) >> 4] + wp[n & 15],
  Yc = (n) => (n & 240) >> 4 === (n & 15),
  xD = (n) => Yc(n.r) && Yc(n.g) && Yc(n.b) && Yc(n.a);
function CD(n) {
  var i = n.length,
    e;
  return (
    n[0] === "#" &&
      (i === 4 || i === 5
        ? (e = {
            r: 255 & (pn[n[1]] * 17),
            g: 255 & (pn[n[2]] * 17),
            b: 255 & (pn[n[3]] * 17),
            a: i === 5 ? pn[n[4]] * 17 : 255,
          })
        : (i === 7 || i === 9) &&
          (e = {
            r: (pn[n[1]] << 4) | pn[n[2]],
            g: (pn[n[3]] << 4) | pn[n[4]],
            b: (pn[n[5]] << 4) | pn[n[6]],
            a: i === 9 ? (pn[n[7]] << 4) | pn[n[8]] : 255,
          })),
    e
  );
}
var wD = (n, i) => (n < 255 ? i(n) : "");
function SD(n) {
  var i = xD(n) ? vD : yD;
  return n ? "#" + i(n.r) + i(n.g) + i(n.b) + wD(n.a, i) : void 0;
}
var DD =
  /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
function ub(n, i, e) {
  let t = i * Math.min(e, 1 - e),
    r = (o, a = (o + n / 30) % 12) =>
      e - t * Math.max(Math.min(a - 3, 9 - a, 1), -1);
  return [r(0), r(8), r(4)];
}
function MD(n, i, e) {
  let t = (r, o = (r + n / 60) % 6) =>
    e - e * i * Math.max(Math.min(o, 4 - o, 1), 0);
  return [t(5), t(3), t(1)];
}
function TD(n, i, e) {
  let t = ub(n, 1, 0.5),
    r;
  for (i + e > 1 && ((r = 1 / (i + e)), (i *= r), (e *= r)), r = 0; r < 3; r++)
    (t[r] *= 1 - i - e), (t[r] += i);
  return t;
}
function ED(n, i, e, t, r) {
  return n === r
    ? (i - e) / t + (i < e ? 6 : 0)
    : i === r
    ? (e - n) / t + 2
    : (n - i) / t + 4;
}
function Sp(n) {
  let e = n.r / 255,
    t = n.g / 255,
    r = n.b / 255,
    o = Math.max(e, t, r),
    a = Math.min(e, t, r),
    d = (o + a) / 2,
    u,
    f,
    v;
  return (
    o !== a &&
      ((v = o - a),
      (f = d > 0.5 ? v / (2 - o - a) : v / (o + a)),
      (u = ED(e, t, r, v, o)),
      (u = u * 60 + 0.5)),
    [u | 0, f || 0, d]
  );
}
function Dp(n, i, e, t) {
  return (Array.isArray(i) ? n(i[0], i[1], i[2]) : n(i, e, t)).map(Ur);
}
function Mp(n, i, e) {
  return Dp(ub, n, i, e);
}
function OD(n, i, e) {
  return Dp(TD, n, i, e);
}
function kD(n, i, e) {
  return Dp(MD, n, i, e);
}
function hb(n) {
  return ((n % 360) + 360) % 360;
}
function PD(n) {
  let i = DD.exec(n),
    e = 255,
    t;
  if (!i) return;
  i[5] !== t && (e = i[6] ? Vs(+i[5]) : Ur(+i[5]));
  let r = hb(+i[2]),
    o = +i[3] / 100,
    a = +i[4] / 100;
  return (
    i[1] === "hwb"
      ? (t = OD(r, o, a))
      : i[1] === "hsv"
      ? (t = kD(r, o, a))
      : (t = Mp(r, o, a)),
    { r: t[0], g: t[1], b: t[2], a: e }
  );
}
function ID(n, i) {
  var e = Sp(n);
  (e[0] = hb(e[0] + i)), (e = Mp(e)), (n.r = e[0]), (n.g = e[1]), (n.b = e[2]);
}
function AD(n) {
  if (!n) return;
  let i = Sp(n),
    e = i[0],
    t = sb(i[1]),
    r = sb(i[2]);
  return n.a < 255
    ? `hsla(${e}, ${t}%, ${r}%, ${fr(n.a)})`
    : `hsl(${e}, ${t}%, ${r}%)`;
}
var lb = {
    x: "dark",
    Z: "light",
    Y: "re",
    X: "blu",
    W: "gr",
    V: "medium",
    U: "slate",
    A: "ee",
    T: "ol",
    S: "or",
    B: "ra",
    C: "lateg",
    D: "ights",
    R: "in",
    Q: "turquois",
    E: "hi",
    P: "ro",
    O: "al",
    N: "le",
    M: "de",
    L: "yello",
    F: "en",
    K: "ch",
    G: "arks",
    H: "ea",
    I: "ightg",
    J: "wh",
  },
  cb = {
    OiceXe: "f0f8ff",
    antiquewEte: "faebd7",
    aqua: "ffff",
    aquamarRe: "7fffd4",
    azuY: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "0",
    blanKedOmond: "ffebcd",
    Xe: "ff",
    XeviTet: "8a2be2",
    bPwn: "a52a2a",
    burlywood: "deb887",
    caMtXe: "5f9ea0",
    KartYuse: "7fff00",
    KocTate: "d2691e",
    cSO: "ff7f50",
    cSnflowerXe: "6495ed",
    cSnsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "ffff",
    xXe: "8b",
    xcyan: "8b8b",
    xgTMnPd: "b8860b",
    xWay: "a9a9a9",
    xgYF: "6400",
    xgYy: "a9a9a9",
    xkhaki: "bdb76b",
    xmagFta: "8b008b",
    xTivegYF: "556b2f",
    xSange: "ff8c00",
    xScEd: "9932cc",
    xYd: "8b0000",
    xsOmon: "e9967a",
    xsHgYF: "8fbc8f",
    xUXe: "483d8b",
    xUWay: "2f4f4f",
    xUgYy: "2f4f4f",
    xQe: "ced1",
    xviTet: "9400d3",
    dAppRk: "ff1493",
    dApskyXe: "bfff",
    dimWay: "696969",
    dimgYy: "696969",
    dodgerXe: "1e90ff",
    fiYbrick: "b22222",
    flSOwEte: "fffaf0",
    foYstWAn: "228b22",
    fuKsia: "ff00ff",
    gaRsbSo: "dcdcdc",
    ghostwEte: "f8f8ff",
    gTd: "ffd700",
    gTMnPd: "daa520",
    Way: "808080",
    gYF: "8000",
    gYFLw: "adff2f",
    gYy: "808080",
    honeyMw: "f0fff0",
    hotpRk: "ff69b4",
    RdianYd: "cd5c5c",
    Rdigo: "4b0082",
    ivSy: "fffff0",
    khaki: "f0e68c",
    lavFMr: "e6e6fa",
    lavFMrXsh: "fff0f5",
    lawngYF: "7cfc00",
    NmoncEffon: "fffacd",
    ZXe: "add8e6",
    ZcSO: "f08080",
    Zcyan: "e0ffff",
    ZgTMnPdLw: "fafad2",
    ZWay: "d3d3d3",
    ZgYF: "90ee90",
    ZgYy: "d3d3d3",
    ZpRk: "ffb6c1",
    ZsOmon: "ffa07a",
    ZsHgYF: "20b2aa",
    ZskyXe: "87cefa",
    ZUWay: "778899",
    ZUgYy: "778899",
    ZstAlXe: "b0c4de",
    ZLw: "ffffe0",
    lime: "ff00",
    limegYF: "32cd32",
    lRF: "faf0e6",
    magFta: "ff00ff",
    maPon: "800000",
    VaquamarRe: "66cdaa",
    VXe: "cd",
    VScEd: "ba55d3",
    VpurpN: "9370db",
    VsHgYF: "3cb371",
    VUXe: "7b68ee",
    VsprRggYF: "fa9a",
    VQe: "48d1cc",
    VviTetYd: "c71585",
    midnightXe: "191970",
    mRtcYam: "f5fffa",
    mistyPse: "ffe4e1",
    moccasR: "ffe4b5",
    navajowEte: "ffdead",
    navy: "80",
    Tdlace: "fdf5e6",
    Tive: "808000",
    TivedBb: "6b8e23",
    Sange: "ffa500",
    SangeYd: "ff4500",
    ScEd: "da70d6",
    pOegTMnPd: "eee8aa",
    pOegYF: "98fb98",
    pOeQe: "afeeee",
    pOeviTetYd: "db7093",
    papayawEp: "ffefd5",
    pHKpuff: "ffdab9",
    peru: "cd853f",
    pRk: "ffc0cb",
    plum: "dda0dd",
    powMrXe: "b0e0e6",
    purpN: "800080",
    YbeccapurpN: "663399",
    Yd: "ff0000",
    Psybrown: "bc8f8f",
    PyOXe: "4169e1",
    saddNbPwn: "8b4513",
    sOmon: "fa8072",
    sandybPwn: "f4a460",
    sHgYF: "2e8b57",
    sHshell: "fff5ee",
    siFna: "a0522d",
    silver: "c0c0c0",
    skyXe: "87ceeb",
    UXe: "6a5acd",
    UWay: "708090",
    UgYy: "708090",
    snow: "fffafa",
    sprRggYF: "ff7f",
    stAlXe: "4682b4",
    tan: "d2b48c",
    teO: "8080",
    tEstN: "d8bfd8",
    tomato: "ff6347",
    Qe: "40e0d0",
    viTet: "ee82ee",
    JHt: "f5deb3",
    wEte: "ffffff",
    wEtesmoke: "f5f5f5",
    Lw: "ffff00",
    LwgYF: "9acd32",
  };
function RD() {
  let n = {},
    i = Object.keys(cb),
    e = Object.keys(lb),
    t,
    r,
    o,
    a,
    d;
  for (t = 0; t < i.length; t++) {
    for (a = d = i[t], r = 0; r < e.length; r++)
      (o = e[r]), (d = d.replace(o, lb[o]));
    (o = parseInt(cb[a], 16)),
      (n[d] = [(o >> 16) & 255, (o >> 8) & 255, o & 255]);
  }
  return n;
}
var qc;
function FD(n) {
  qc || ((qc = RD()), (qc.transparent = [0, 0, 0, 0]));
  let i = qc[n.toLowerCase()];
  return i && { r: i[0], g: i[1], b: i[2], a: i.length === 4 ? i[3] : 255 };
}
var ND =
  /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
function LD(n) {
  let i = ND.exec(n),
    e = 255,
    t,
    r,
    o;
  if (i) {
    if (i[7] !== t) {
      let a = +i[7];
      e = i[8] ? Vs(a) : Hr(a * 255, 0, 255);
    }
    return (
      (t = +i[1]),
      (r = +i[3]),
      (o = +i[5]),
      (t = 255 & (i[2] ? Vs(t) : Hr(t, 0, 255))),
      (r = 255 & (i[4] ? Vs(r) : Hr(r, 0, 255))),
      (o = 255 & (i[6] ? Vs(o) : Hr(o, 0, 255))),
      { r: t, g: r, b: o, a: e }
    );
  }
}
function VD(n) {
  return (
    n &&
    (n.a < 255
      ? `rgba(${n.r}, ${n.g}, ${n.b}, ${fr(n.a)})`
      : `rgb(${n.r}, ${n.g}, ${n.b})`)
  );
}
var Cp = (n) =>
    n <= 0.0031308 ? n * 12.92 : Math.pow(n, 1 / 2.4) * 1.055 - 0.055,
  pa = (n) => (n <= 0.04045 ? n / 12.92 : Math.pow((n + 0.055) / 1.055, 2.4));
function BD(n, i, e) {
  let t = pa(fr(n.r)),
    r = pa(fr(n.g)),
    o = pa(fr(n.b));
  return {
    r: Ur(Cp(t + e * (pa(fr(i.r)) - t))),
    g: Ur(Cp(r + e * (pa(fr(i.g)) - r))),
    b: Ur(Cp(o + e * (pa(fr(i.b)) - o))),
    a: n.a + e * (i.a - n.a),
  };
}
function Kc(n, i, e) {
  if (n) {
    let t = Sp(n);
    (t[i] = Math.max(0, Math.min(t[i] + t[i] * e, i === 0 ? 360 : 1))),
      (t = Mp(t)),
      (n.r = t[0]),
      (n.g = t[1]),
      (n.b = t[2]);
  }
}
function pb(n, i) {
  return n && Object.assign(i || {}, n);
}
function db(n) {
  var i = { r: 0, g: 0, b: 0, a: 255 };
  return (
    Array.isArray(n)
      ? n.length >= 3 &&
        ((i = { r: n[0], g: n[1], b: n[2], a: 255 }),
        n.length > 3 && (i.a = Ur(n[3])))
      : ((i = pb(n, { r: 0, g: 0, b: 0, a: 1 })), (i.a = Ur(i.a))),
    i
  );
}
function jD(n) {
  return n.charAt(0) === "r" ? LD(n) : PD(n);
}
var Bs = class n {
  constructor(i) {
    if (i instanceof n) return i;
    let e = typeof i,
      t;
    e === "object"
      ? (t = db(i))
      : e === "string" && (t = CD(i) || FD(i) || jD(i)),
      (this._rgb = t),
      (this._valid = !!t);
  }
  get valid() {
    return this._valid;
  }
  get rgb() {
    var i = pb(this._rgb);
    return i && (i.a = fr(i.a)), i;
  }
  set rgb(i) {
    this._rgb = db(i);
  }
  rgbString() {
    return this._valid ? VD(this._rgb) : void 0;
  }
  hexString() {
    return this._valid ? SD(this._rgb) : void 0;
  }
  hslString() {
    return this._valid ? AD(this._rgb) : void 0;
  }
  mix(i, e) {
    if (i) {
      let t = this.rgb,
        r = i.rgb,
        o,
        a = e === o ? 0.5 : e,
        d = 2 * a - 1,
        u = t.a - r.a,
        f = ((d * u === -1 ? d : (d + u) / (1 + d * u)) + 1) / 2;
      (o = 1 - f),
        (t.r = 255 & (f * t.r + o * r.r + 0.5)),
        (t.g = 255 & (f * t.g + o * r.g + 0.5)),
        (t.b = 255 & (f * t.b + o * r.b + 0.5)),
        (t.a = a * t.a + (1 - a) * r.a),
        (this.rgb = t);
    }
    return this;
  }
  interpolate(i, e) {
    return i && (this._rgb = BD(this._rgb, i._rgb, e)), this;
  }
  clone() {
    return new n(this.rgb);
  }
  alpha(i) {
    return (this._rgb.a = Ur(i)), this;
  }
  clearer(i) {
    let e = this._rgb;
    return (e.a *= 1 - i), this;
  }
  greyscale() {
    let i = this._rgb,
      e = js(i.r * 0.3 + i.g * 0.59 + i.b * 0.11);
    return (i.r = i.g = i.b = e), this;
  }
  opaquer(i) {
    let e = this._rgb;
    return (e.a *= 1 + i), this;
  }
  negate() {
    let i = this._rgb;
    return (i.r = 255 - i.r), (i.g = 255 - i.g), (i.b = 255 - i.b), this;
  }
  lighten(i) {
    return Kc(this._rgb, 2, i), this;
  }
  darken(i) {
    return Kc(this._rgb, 2, -i), this;
  }
  saturate(i) {
    return Kc(this._rgb, 1, i), this;
  }
  desaturate(i) {
    return Kc(this._rgb, 1, -i), this;
  }
  rotate(i) {
    return ID(this._rgb, i), this;
  }
};
var yb = (() => {
  let n = 0;
  return () => n++;
})();
function Ot(n) {
  return n == null;
}
function Yt(n) {
  if (Array.isArray && Array.isArray(n)) return !0;
  let i = Object.prototype.toString.call(n);
  return i.slice(0, 7) === "[object" && i.slice(-6) === "Array]";
}
function ht(n) {
  return n !== null && Object.prototype.toString.call(n) === "[object Object]";
}
function di(n) {
  return (typeof n == "number" || n instanceof Number) && isFinite(+n);
}
function ji(n, i) {
  return di(n) ? n : i;
}
function Gt(n, i) {
  return typeof n > "u" ? i : n;
}
var xb = (n, i) =>
  typeof n == "string" && n.endsWith("%") ? (parseFloat(n) / 100) * i : +n;
function Ht(n, i, e) {
  if (n && typeof n.call == "function") return n.apply(e, i);
}
function bi(n, i, e, t) {
  let r, o, a;
  if (Yt(n))
    if (((o = n.length), t)) for (r = o - 1; r >= 0; r--) i.call(e, n[r], r);
    else for (r = 0; r < o; r++) i.call(e, n[r], r);
  else if (ht(n))
    for (a = Object.keys(n), o = a.length, r = 0; r < o; r++)
      i.call(e, n[a[r]], a[r]);
}
function kp(n, i) {
  let e, t, r, o;
  if (!n || !i || n.length !== i.length) return !1;
  for (e = 0, t = n.length; e < t; ++e)
    if (
      ((r = n[e]),
      (o = i[e]),
      r.datasetIndex !== o.datasetIndex || r.index !== o.index)
    )
      return !1;
  return !0;
}
function Jc(n) {
  if (Yt(n)) return n.map(Jc);
  if (ht(n)) {
    let i = Object.create(null),
      e = Object.keys(n),
      t = e.length,
      r = 0;
    for (; r < t; ++r) i[e[r]] = Jc(n[e[r]]);
    return i;
  }
  return n;
}
function Cb(n) {
  return ["__proto__", "prototype", "constructor"].indexOf(n) === -1;
}
function HD(n, i, e, t) {
  if (!Cb(n)) return;
  let r = i[n],
    o = e[n];
  ht(r) && ht(o) ? fa(r, o, t) : (i[n] = Jc(o));
}
function fa(n, i, e) {
  let t = Yt(i) ? i : [i],
    r = t.length;
  if (!ht(n)) return n;
  e = e || {};
  let o = e.merger || HD,
    a;
  for (let d = 0; d < r; ++d) {
    if (((a = t[d]), !ht(a))) continue;
    let u = Object.keys(a);
    for (let f = 0, v = u.length; f < v; ++f) o(u[f], n, a, e);
  }
  return n;
}
function ga(n, i) {
  return fa(n, i, { merger: UD });
}
function UD(n, i, e) {
  if (!Cb(n)) return;
  let t = i[n],
    r = e[n];
  ht(t) && ht(r)
    ? ga(t, r)
    : Object.prototype.hasOwnProperty.call(i, n) || (i[n] = Jc(r));
}
var mb = { "": (n) => n, x: (n) => n.x, y: (n) => n.y };
function zD(n) {
  let i = n.split("."),
    e = [],
    t = "";
  for (let r of i)
    (t += r),
      t.endsWith("\\") ? (t = t.slice(0, -1) + ".") : (e.push(t), (t = ""));
  return e;
}
function $D(n) {
  let i = zD(n);
  return (e) => {
    for (let t of i) {
      if (t === "") break;
      e = e && e[t];
    }
    return e;
  };
}
function zs(n, i) {
  return (mb[i] || (mb[i] = $D(i)))(n);
}
function id(n) {
  return n.charAt(0).toUpperCase() + n.slice(1);
}
var $s = (n) => typeof n < "u",
  gr = (n) => typeof n == "function",
  Pp = (n, i) => {
    if (n.size !== i.size) return !1;
    for (let e of n) if (!i.has(e)) return !1;
    return !0;
  };
function wb(n) {
  return n.type === "mouseup" || n.type === "click" || n.type === "contextmenu";
}
var Mi = Math.PI,
  Kn = 2 * Mi,
  XN = Kn + Mi,
  ed = Number.POSITIVE_INFINITY,
  ZN = Mi / 180,
  Qn = Mi / 2,
  JN = Mi / 4,
  e5 = (Mi * 2) / 3,
  _r = Math.log10,
  Ws = Math.sign;
function Gs(n, i, e) {
  return Math.abs(n - i) < e;
}
function Ip(n) {
  let i = Math.round(n);
  n = Gs(n, i, n / 1e3) ? i : n;
  let e = Math.pow(10, Math.floor(_r(n))),
    t = n / e;
  return (t <= 1 ? 1 : t <= 2 ? 2 : t <= 5 ? 5 : 10) * e;
}
function Sb(n) {
  let i = [],
    e = Math.sqrt(n),
    t;
  for (t = 1; t < e; t++) n % t === 0 && (i.push(t), i.push(n / t));
  return e === (e | 0) && i.push(e), i.sort((r, o) => r - o).pop(), i;
}
function WD(n) {
  return (
    typeof n == "symbol" ||
    (typeof n == "object" &&
      n !== null &&
      !(Symbol.toPrimitive in n || "toString" in n || "valueOf" in n))
  );
}
function Ys(n) {
  return !WD(n) && !isNaN(parseFloat(n)) && isFinite(n);
}
function Db(n, i) {
  let e = Math.round(n);
  return e - i <= n && e + i >= n;
}
function Ap(n, i, e) {
  let t, r, o;
  for (t = 0, r = n.length; t < r; t++)
    (o = n[t][e]),
      isNaN(o) || ((i.min = Math.min(i.min, o)), (i.max = Math.max(i.max, o)));
}
function br(n) {
  return n * (Mi / 180);
}
function nd(n) {
  return n * (180 / Mi);
}
function Rp(n) {
  if (!di(n)) return;
  let i = 1,
    e = 0;
  for (; Math.round(n * i) / i !== n; ) (i *= 10), e++;
  return e;
}
function Mb(n, i) {
  let e = i.x - n.x,
    t = i.y - n.y,
    r = Math.sqrt(e * e + t * t),
    o = Math.atan2(t, e);
  return o < -0.5 * Mi && (o += Kn), { angle: o, distance: r };
}
function En(n) {
  return ((n % Kn) + Kn) % Kn;
}
function Tb(n, i, e, t) {
  let r = En(n),
    o = En(i),
    a = En(e),
    d = En(o - r),
    u = En(a - r),
    f = En(r - o),
    v = En(r - a);
  return r === o || r === a || (t && o === a) || (d > u && f < v);
}
function zr(n, i, e) {
  return Math.max(i, Math.min(e, n));
}
function Eb(n) {
  return zr(n, -32768, 32767);
}
function rd(n, i, e) {
  e = e || ((a) => n[a] < i);
  let t = n.length - 1,
    r = 0,
    o;
  for (; t - r > 1; ) (o = (r + t) >> 1), e(o) ? (r = o) : (t = o);
  return { lo: r, hi: t };
}
var od = (n, i, e, t) =>
    rd(
      n,
      e,
      t
        ? (r) => {
            let o = n[r][i];
            return o < e || (o === e && n[r + 1][i] === e);
          }
        : (r) => n[r][i] < e
    ),
  Ob = (n, i, e) => rd(n, e, (t) => n[t][i] >= e);
function kb(n, i, e) {
  let t = 0,
    r = n.length;
  for (; t < r && n[t] < i; ) t++;
  for (; r > t && n[r - 1] > e; ) r--;
  return t > 0 || r < n.length ? n.slice(t, r) : n;
}
var Pb = ["push", "pop", "shift", "splice", "unshift"];
function Ib(n, i) {
  if (n._chartjs) {
    n._chartjs.listeners.push(i);
    return;
  }
  Object.defineProperty(n, "_chartjs", {
    configurable: !0,
    enumerable: !1,
    value: { listeners: [i] },
  }),
    Pb.forEach((e) => {
      let t = "_onData" + id(e),
        r = n[e];
      Object.defineProperty(n, e, {
        configurable: !0,
        enumerable: !1,
        value(...o) {
          let a = r.apply(this, o);
          return (
            n._chartjs.listeners.forEach((d) => {
              typeof d[t] == "function" && d[t](...o);
            }),
            a
          );
        },
      });
    });
}
function Fp(n, i) {
  let e = n._chartjs;
  if (!e) return;
  let t = e.listeners,
    r = t.indexOf(i);
  r !== -1 && t.splice(r, 1),
    !(t.length > 0) &&
      (Pb.forEach((o) => {
        delete n[o];
      }),
      delete n._chartjs);
}
function Ab(n) {
  let i = new Set(n);
  return i.size === n.length ? n : Array.from(i);
}
var Np = (function () {
  return typeof window > "u"
    ? function (n) {
        return n();
      }
    : window.requestAnimationFrame;
})();
function Lp(n, i) {
  let e = [],
    t = !1;
  return function (...r) {
    (e = r),
      t ||
        ((t = !0),
        Np.call(window, () => {
          (t = !1), n.apply(i, e);
        }));
  };
}
function Rb(n, i) {
  let e;
  return function (...t) {
    return (
      i ? (clearTimeout(e), (e = setTimeout(n, i, t))) : n.apply(this, t), i
    );
  };
}
var Fb = (n) => (n === "start" ? "left" : n === "end" ? "right" : "center"),
  Vp = (n, i, e) => (n === "start" ? i : n === "end" ? e : (i + e) / 2);
var Qc = (n) => n === 0 || n === 1,
  fb = (n, i, e) =>
    -(Math.pow(2, 10 * (n -= 1)) * Math.sin(((n - i) * Kn) / e)),
  gb = (n, i, e) => Math.pow(2, -10 * n) * Math.sin(((n - i) * Kn) / e) + 1,
  ma = {
    linear: (n) => n,
    easeInQuad: (n) => n * n,
    easeOutQuad: (n) => -n * (n - 2),
    easeInOutQuad: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n : -0.5 * (--n * (n - 2) - 1),
    easeInCubic: (n) => n * n * n,
    easeOutCubic: (n) => (n -= 1) * n * n + 1,
    easeInOutCubic: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n * n : 0.5 * ((n -= 2) * n * n + 2),
    easeInQuart: (n) => n * n * n * n,
    easeOutQuart: (n) => -((n -= 1) * n * n * n - 1),
    easeInOutQuart: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n * n * n : -0.5 * ((n -= 2) * n * n * n - 2),
    easeInQuint: (n) => n * n * n * n * n,
    easeOutQuint: (n) => (n -= 1) * n * n * n * n + 1,
    easeInOutQuint: (n) =>
      (n /= 0.5) < 1
        ? 0.5 * n * n * n * n * n
        : 0.5 * ((n -= 2) * n * n * n * n + 2),
    easeInSine: (n) => -Math.cos(n * Qn) + 1,
    easeOutSine: (n) => Math.sin(n * Qn),
    easeInOutSine: (n) => -0.5 * (Math.cos(Mi * n) - 1),
    easeInExpo: (n) => (n === 0 ? 0 : Math.pow(2, 10 * (n - 1))),
    easeOutExpo: (n) => (n === 1 ? 1 : -Math.pow(2, -10 * n) + 1),
    easeInOutExpo: (n) =>
      Qc(n)
        ? n
        : n < 0.5
        ? 0.5 * Math.pow(2, 10 * (n * 2 - 1))
        : 0.5 * (-Math.pow(2, -10 * (n * 2 - 1)) + 2),
    easeInCirc: (n) => (n >= 1 ? n : -(Math.sqrt(1 - n * n) - 1)),
    easeOutCirc: (n) => Math.sqrt(1 - (n -= 1) * n),
    easeInOutCirc: (n) =>
      (n /= 0.5) < 1
        ? -0.5 * (Math.sqrt(1 - n * n) - 1)
        : 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1),
    easeInElastic: (n) => (Qc(n) ? n : fb(n, 0.075, 0.3)),
    easeOutElastic: (n) => (Qc(n) ? n : gb(n, 0.075, 0.3)),
    easeInOutElastic(n) {
      return Qc(n)
        ? n
        : n < 0.5
        ? 0.5 * fb(n * 2, 0.1125, 0.45)
        : 0.5 + 0.5 * gb(n * 2 - 1, 0.1125, 0.45);
    },
    easeInBack(n) {
      return n * n * ((1.70158 + 1) * n - 1.70158);
    },
    easeOutBack(n) {
      return (n -= 1) * n * ((1.70158 + 1) * n + 1.70158) + 1;
    },
    easeInOutBack(n) {
      let i = 1.70158;
      return (n /= 0.5) < 1
        ? 0.5 * (n * n * (((i *= 1.525) + 1) * n - i))
        : 0.5 * ((n -= 2) * n * (((i *= 1.525) + 1) * n + i) + 2);
    },
    easeInBounce: (n) => 1 - ma.easeOutBounce(1 - n),
    easeOutBounce(n) {
      return n < 1 / 2.75
        ? 7.5625 * n * n
        : n < 2 / 2.75
        ? 7.5625 * (n -= 1.5 / 2.75) * n + 0.75
        : n < 2.5 / 2.75
        ? 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375
        : 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;
    },
    easeInOutBounce: (n) =>
      n < 0.5
        ? ma.easeInBounce(n * 2) * 0.5
        : ma.easeOutBounce(n * 2 - 1) * 0.5 + 0.5,
  };
function Nb(n) {
  if (n && typeof n == "object") {
    let i = n.toString();
    return i === "[object CanvasPattern]" || i === "[object CanvasGradient]";
  }
  return !1;
}
function Bp(n) {
  return Nb(n) ? n : new Bs(n);
}
function Tp(n) {
  return Nb(n) ? n : new Bs(n).saturate(0.5).darken(0.1).hexString();
}
var GD = ["x", "y", "borderWidth", "radius", "tension"],
  YD = ["color", "borderColor", "backgroundColor"];
function qD(n) {
  n.set("animation", {
    delay: void 0,
    duration: 1e3,
    easing: "easeOutQuart",
    fn: void 0,
    from: void 0,
    loop: void 0,
    to: void 0,
    type: void 0,
  }),
    n.describe("animation", {
      _fallback: !1,
      _indexable: !1,
      _scriptable: (i) =>
        i !== "onProgress" && i !== "onComplete" && i !== "fn",
    }),
    n.set("animations", {
      colors: { type: "color", properties: YD },
      numbers: { type: "number", properties: GD },
    }),
    n.describe("animations", { _fallback: "animation" }),
    n.set("transitions", {
      active: { animation: { duration: 400 } },
      resize: { animation: { duration: 0 } },
      show: {
        animations: {
          colors: { from: "transparent" },
          visible: { type: "boolean", duration: 0 },
        },
      },
      hide: {
        animations: {
          colors: { to: "transparent" },
          visible: { type: "boolean", easing: "linear", fn: (i) => i | 0 },
        },
      },
    });
}
function KD(n) {
  n.set("layout", {
    autoPadding: !0,
    padding: { top: 0, right: 0, bottom: 0, left: 0 },
  });
}
var _b = new Map();
function QD(n, i) {
  i = i || {};
  let e = n + JSON.stringify(i),
    t = _b.get(e);
  return t || ((t = new Intl.NumberFormat(n, i)), _b.set(e, t)), t;
}
function ad(n, i, e) {
  return QD(i, e).format(n);
}
var Lb = {
  values(n) {
    return Yt(n) ? n : "" + n;
  },
  numeric(n, i, e) {
    if (n === 0) return "0";
    let t = this.chart.options.locale,
      r,
      o = n;
    if (e.length > 1) {
      let f = Math.max(Math.abs(e[0].value), Math.abs(e[e.length - 1].value));
      (f < 1e-4 || f > 1e15) && (r = "scientific"), (o = XD(n, e));
    }
    let a = _r(Math.abs(o)),
      d = isNaN(a) ? 1 : Math.max(Math.min(-1 * Math.floor(a), 20), 0),
      u = { notation: r, minimumFractionDigits: d, maximumFractionDigits: d };
    return Object.assign(u, this.options.ticks.format), ad(n, t, u);
  },
  logarithmic(n, i, e) {
    if (n === 0) return "0";
    let t = e[i].significand || n / Math.pow(10, Math.floor(_r(n)));
    return [1, 2, 3, 5, 10, 15].includes(t) || i > 0.8 * e.length
      ? Lb.numeric.call(this, n, i, e)
      : "";
  },
};
function XD(n, i) {
  let e = i.length > 3 ? i[2].value - i[1].value : i[1].value - i[0].value;
  return Math.abs(e) >= 1 && n !== Math.floor(n) && (e = n - Math.floor(n)), e;
}
var qs = { formatters: Lb };
function ZD(n) {
  n.set("scale", {
    display: !0,
    offset: !1,
    reverse: !1,
    beginAtZero: !1,
    bounds: "ticks",
    clip: !0,
    grace: 0,
    grid: {
      display: !0,
      lineWidth: 1,
      drawOnChartArea: !0,
      drawTicks: !0,
      tickLength: 8,
      tickWidth: (i, e) => e.lineWidth,
      tickColor: (i, e) => e.color,
      offset: !1,
    },
    border: { display: !0, dash: [], dashOffset: 0, width: 1 },
    title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
    ticks: {
      minRotation: 0,
      maxRotation: 50,
      mirror: !1,
      textStrokeWidth: 0,
      textStrokeColor: "",
      padding: 3,
      display: !0,
      autoSkip: !0,
      autoSkipPadding: 3,
      labelOffset: 0,
      callback: qs.formatters.values,
      minor: {},
      major: {},
      align: "center",
      crossAlign: "near",
      showLabelBackdrop: !1,
      backdropColor: "rgba(255, 255, 255, 0.75)",
      backdropPadding: 2,
    },
  }),
    n.route("scale.ticks", "color", "", "color"),
    n.route("scale.grid", "color", "", "borderColor"),
    n.route("scale.border", "color", "", "borderColor"),
    n.route("scale.title", "color", "", "color"),
    n.describe("scale", {
      _fallback: !1,
      _scriptable: (i) =>
        !i.startsWith("before") &&
        !i.startsWith("after") &&
        i !== "callback" &&
        i !== "parser",
      _indexable: (i) =>
        i !== "borderDash" && i !== "tickBorderDash" && i !== "dash",
    }),
    n.describe("scales", { _fallback: "scale" }),
    n.describe("scale.ticks", {
      _scriptable: (i) => i !== "backdropPadding" && i !== "callback",
      _indexable: (i) => i !== "backdropPadding",
    });
}
var $r = Object.create(null),
  sd = Object.create(null);
function Hs(n, i) {
  if (!i) return n;
  let e = i.split(".");
  for (let t = 0, r = e.length; t < r; ++t) {
    let o = e[t];
    n = n[o] || (n[o] = Object.create(null));
  }
  return n;
}
function Ep(n, i, e) {
  return typeof i == "string" ? fa(Hs(n, i), e) : fa(Hs(n, ""), i);
}
var Op = class {
    constructor(i, e) {
      (this.animation = void 0),
        (this.backgroundColor = "rgba(0,0,0,0.1)"),
        (this.borderColor = "rgba(0,0,0,0.1)"),
        (this.color = "#666"),
        (this.datasets = {}),
        (this.devicePixelRatio = (t) => t.chart.platform.getDevicePixelRatio()),
        (this.elements = {}),
        (this.events = [
          "mousemove",
          "mouseout",
          "click",
          "touchstart",
          "touchmove",
        ]),
        (this.font = {
          family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
          size: 12,
          style: "normal",
          lineHeight: 1.2,
          weight: null,
        }),
        (this.hover = {}),
        (this.hoverBackgroundColor = (t, r) => Tp(r.backgroundColor)),
        (this.hoverBorderColor = (t, r) => Tp(r.borderColor)),
        (this.hoverColor = (t, r) => Tp(r.color)),
        (this.indexAxis = "x"),
        (this.interaction = {
          mode: "nearest",
          intersect: !0,
          includeInvisible: !1,
        }),
        (this.maintainAspectRatio = !0),
        (this.onHover = null),
        (this.onClick = null),
        (this.parsing = !0),
        (this.plugins = {}),
        (this.responsive = !0),
        (this.scale = void 0),
        (this.scales = {}),
        (this.showLine = !0),
        (this.drawActiveElementsOnTop = !0),
        this.describe(i),
        this.apply(e);
    }
    set(i, e) {
      return Ep(this, i, e);
    }
    get(i) {
      return Hs(this, i);
    }
    describe(i, e) {
      return Ep(sd, i, e);
    }
    override(i, e) {
      return Ep($r, i, e);
    }
    route(i, e, t, r) {
      let o = Hs(this, i),
        a = Hs(this, t),
        d = "_" + e;
      Object.defineProperties(o, {
        [d]: { value: o[e], writable: !0 },
        [e]: {
          enumerable: !0,
          get() {
            let u = this[d],
              f = a[r];
            return ht(u) ? Object.assign({}, f, u) : Gt(u, f);
          },
          set(u) {
            this[d] = u;
          },
        },
      });
    }
    apply(i) {
      i.forEach((e) => e(this));
    }
  },
  qt = new Op(
    {
      _scriptable: (n) => !n.startsWith("on"),
      _indexable: (n) => n !== "events",
      hover: { _fallback: "interaction" },
      interaction: { _scriptable: !1, _indexable: !1 },
    },
    [qD, KD, ZD]
  );
function JD(n) {
  return !n || Ot(n.size) || Ot(n.family)
    ? null
    : (n.style ? n.style + " " : "") +
        (n.weight ? n.weight + " " : "") +
        n.size +
        "px " +
        n.family;
}
function Us(n, i, e, t, r) {
  let o = i[r];
  return (
    o || ((o = i[r] = n.measureText(r).width), e.push(r)), o > t && (t = o), t
  );
}
function Vb(n, i, e, t) {
  t = t || {};
  let r = (t.data = t.data || {}),
    o = (t.garbageCollect = t.garbageCollect || []);
  t.font !== i &&
    ((r = t.data = {}), (o = t.garbageCollect = []), (t.font = i)),
    n.save(),
    (n.font = i);
  let a = 0,
    d = e.length,
    u,
    f,
    v,
    S,
    T;
  for (u = 0; u < d; u++)
    if (((S = e[u]), S != null && !Yt(S))) a = Us(n, r, o, a, S);
    else if (Yt(S))
      for (f = 0, v = S.length; f < v; f++)
        (T = S[f]), T != null && !Yt(T) && (a = Us(n, r, o, a, T));
  n.restore();
  let M = o.length / 2;
  if (M > e.length) {
    for (u = 0; u < M; u++) delete r[o[u]];
    o.splice(0, M);
  }
  return a;
}
function Wr(n, i, e) {
  let t = n.currentDevicePixelRatio,
    r = e !== 0 ? Math.max(e / 2, 0.5) : 0;
  return Math.round((i - r) * t) / t + r;
}
function jp(n, i) {
  (!i && !n) ||
    ((i = i || n.getContext("2d")),
    i.save(),
    i.resetTransform(),
    i.clearRect(0, 0, n.width, n.height),
    i.restore());
}
function yo(n, i, e) {
  return (
    (e = e || 0.5),
    !i ||
      (n &&
        n.x > i.left - e &&
        n.x < i.right + e &&
        n.y > i.top - e &&
        n.y < i.bottom + e)
  );
}
function Hp(n, i) {
  n.save(),
    n.beginPath(),
    n.rect(i.left, i.top, i.right - i.left, i.bottom - i.top),
    n.clip();
}
function Up(n) {
  n.restore();
}
function eM(n, i) {
  i.translation && n.translate(i.translation[0], i.translation[1]),
    Ot(i.rotation) || n.rotate(i.rotation),
    i.color && (n.fillStyle = i.color),
    i.textAlign && (n.textAlign = i.textAlign),
    i.textBaseline && (n.textBaseline = i.textBaseline);
}
function tM(n, i, e, t, r) {
  if (r.strikethrough || r.underline) {
    let o = n.measureText(t),
      a = i - o.actualBoundingBoxLeft,
      d = i + o.actualBoundingBoxRight,
      u = e - o.actualBoundingBoxAscent,
      f = e + o.actualBoundingBoxDescent,
      v = r.strikethrough ? (u + f) / 2 : f;
    (n.strokeStyle = n.fillStyle),
      n.beginPath(),
      (n.lineWidth = r.decorationWidth || 2),
      n.moveTo(a, v),
      n.lineTo(d, v),
      n.stroke();
  }
}
function iM(n, i) {
  let e = n.fillStyle;
  (n.fillStyle = i.color),
    n.fillRect(i.left, i.top, i.width, i.height),
    (n.fillStyle = e);
}
function Ks(n, i, e, t, r, o = {}) {
  let a = Yt(i) ? i : [i],
    d = o.strokeWidth > 0 && o.strokeColor !== "",
    u,
    f;
  for (n.save(), n.font = r.string, eM(n, o), u = 0; u < a.length; ++u)
    (f = a[u]),
      o.backdrop && iM(n, o.backdrop),
      d &&
        (o.strokeColor && (n.strokeStyle = o.strokeColor),
        Ot(o.strokeWidth) || (n.lineWidth = o.strokeWidth),
        n.strokeText(f, e, t, o.maxWidth)),
      n.fillText(f, e, t, o.maxWidth),
      tM(n, e, t, f, o),
      (t += Number(r.lineHeight));
  n.restore();
}
function Bb(n, i) {
  let { x: e, y: t, w: r, h: o, radius: a } = i;
  n.arc(e + a.topLeft, t + a.topLeft, a.topLeft, 1.5 * Mi, Mi, !0),
    n.lineTo(e, t + o - a.bottomLeft),
    n.arc(e + a.bottomLeft, t + o - a.bottomLeft, a.bottomLeft, Mi, Qn, !0),
    n.lineTo(e + r - a.bottomRight, t + o),
    n.arc(
      e + r - a.bottomRight,
      t + o - a.bottomRight,
      a.bottomRight,
      Qn,
      0,
      !0
    ),
    n.lineTo(e + r, t + a.topRight),
    n.arc(e + r - a.topRight, t + a.topRight, a.topRight, 0, -Qn, !0),
    n.lineTo(e + a.topLeft, t);
}
var nM = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,
  rM = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
function oM(n, i) {
  let e = ("" + n).match(nM);
  if (!e || e[1] === "normal") return i * 1.2;
  switch (((n = +e[2]), e[3])) {
    case "px":
      return n;
    case "%":
      n /= 100;
      break;
  }
  return i * n;
}
var aM = (n) => +n || 0;
function zp(n, i) {
  let e = {},
    t = ht(i),
    r = t ? Object.keys(i) : i,
    o = ht(n) ? (t ? (a) => Gt(n[a], n[i[a]]) : (a) => n[a]) : () => n;
  for (let a of r) e[a] = aM(o(a));
  return e;
}
function jb(n) {
  return zp(n, { top: "y", right: "x", bottom: "y", left: "x" });
}
function Hb(n) {
  return zp(n, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
}
function Xn(n) {
  let i = jb(n);
  return (i.width = i.left + i.right), (i.height = i.top + i.bottom), i;
}
function xo(n, i) {
  (n = n || {}), (i = i || qt.font);
  let e = Gt(n.size, i.size);
  typeof e == "string" && (e = parseInt(e, 10));
  let t = Gt(n.style, i.style);
  t &&
    !("" + t).match(rM) &&
    (console.warn('Invalid font style specified: "' + t + '"'), (t = void 0));
  let r = {
    family: Gt(n.family, i.family),
    lineHeight: oM(Gt(n.lineHeight, i.lineHeight), e),
    size: e,
    style: t,
    weight: Gt(n.weight, i.weight),
    string: "",
  };
  return (r.string = JD(r)), r;
}
function Qs(n, i, e, t) {
  let r = !0,
    o,
    a,
    d;
  for (o = 0, a = n.length; o < a; ++o)
    if (
      ((d = n[o]),
      d !== void 0 &&
        (i !== void 0 && typeof d == "function" && ((d = d(i)), (r = !1)),
        e !== void 0 && Yt(d) && ((d = d[e % d.length]), (r = !1)),
        d !== void 0))
    )
      return t && !r && (t.cacheable = !1), d;
}
function Ub(n, i, e) {
  let { min: t, max: r } = n,
    o = xb(i, (r - t) / 2),
    a = (d, u) => (e && d === 0 ? 0 : d + u);
  return { min: a(t, -Math.abs(o)), max: a(r, o) };
}
function Co(n, i) {
  return Object.assign(Object.create(n), i);
}
function ld(n, i = [""], e, t, r = () => n[0]) {
  let o = e || n;
  typeof t > "u" && (t = Wb("_fallback", n));
  let a = {
    [Symbol.toStringTag]: "Object",
    _cacheable: !0,
    _scopes: n,
    _rootScopes: o,
    _fallback: t,
    _getTarget: r,
    override: (d) => ld([d, ...n], i, o, t),
  };
  return new Proxy(a, {
    deleteProperty(d, u) {
      return delete d[u], delete d._keys, delete n[0][u], !0;
    },
    get(d, u) {
      return zb(d, u, () => mM(u, i, n, d));
    },
    getOwnPropertyDescriptor(d, u) {
      return Reflect.getOwnPropertyDescriptor(d._scopes[0], u);
    },
    getPrototypeOf() {
      return Reflect.getPrototypeOf(n[0]);
    },
    has(d, u) {
      return vb(d).includes(u);
    },
    ownKeys(d) {
      return vb(d);
    },
    set(d, u, f) {
      let v = d._storage || (d._storage = r());
      return (d[u] = v[u] = f), delete d._keys, !0;
    },
  });
}
function vo(n, i, e, t) {
  let r = {
    _cacheable: !1,
    _proxy: n,
    _context: i,
    _subProxy: e,
    _stack: new Set(),
    _descriptors: $p(n, t),
    setContext: (o) => vo(n, o, e, t),
    override: (o) => vo(n.override(o), i, e, t),
  };
  return new Proxy(r, {
    deleteProperty(o, a) {
      return delete o[a], delete n[a], !0;
    },
    get(o, a, d) {
      return zb(o, a, () => lM(o, a, d));
    },
    getOwnPropertyDescriptor(o, a) {
      return o._descriptors.allKeys
        ? Reflect.has(n, a)
          ? { enumerable: !0, configurable: !0 }
          : void 0
        : Reflect.getOwnPropertyDescriptor(n, a);
    },
    getPrototypeOf() {
      return Reflect.getPrototypeOf(n);
    },
    has(o, a) {
      return Reflect.has(n, a);
    },
    ownKeys() {
      return Reflect.ownKeys(n);
    },
    set(o, a, d) {
      return (n[a] = d), delete o[a], !0;
    },
  });
}
function $p(n, i = { scriptable: !0, indexable: !0 }) {
  let {
    _scriptable: e = i.scriptable,
    _indexable: t = i.indexable,
    _allKeys: r = i.allKeys,
  } = n;
  return {
    allKeys: r,
    scriptable: e,
    indexable: t,
    isScriptable: gr(e) ? e : () => e,
    isIndexable: gr(t) ? t : () => t,
  };
}
var sM = (n, i) => (n ? n + id(i) : i),
  Wp = (n, i) =>
    ht(i) &&
    n !== "adapters" &&
    (Object.getPrototypeOf(i) === null || i.constructor === Object);
function zb(n, i, e) {
  if (Object.prototype.hasOwnProperty.call(n, i) || i === "constructor")
    return n[i];
  let t = e();
  return (n[i] = t), t;
}
function lM(n, i, e) {
  let { _proxy: t, _context: r, _subProxy: o, _descriptors: a } = n,
    d = t[i];
  return (
    gr(d) && a.isScriptable(i) && (d = cM(i, d, n, e)),
    Yt(d) && d.length && (d = dM(i, d, n, a.isIndexable)),
    Wp(i, d) && (d = vo(d, r, o && o[i], a)),
    d
  );
}
function cM(n, i, e, t) {
  let { _proxy: r, _context: o, _subProxy: a, _stack: d } = e;
  if (d.has(n))
    throw new Error(
      "Recursion detected: " + Array.from(d).join("->") + "->" + n
    );
  d.add(n);
  let u = i(o, a || t);
  return d.delete(n), Wp(n, u) && (u = Gp(r._scopes, r, n, u)), u;
}
function dM(n, i, e, t) {
  let { _proxy: r, _context: o, _subProxy: a, _descriptors: d } = e;
  if (typeof o.index < "u" && t(n)) return i[o.index % i.length];
  if (ht(i[0])) {
    let u = i,
      f = r._scopes.filter((v) => v !== u);
    i = [];
    for (let v of u) {
      let S = Gp(f, r, n, v);
      i.push(vo(S, o, a && a[n], d));
    }
  }
  return i;
}
function $b(n, i, e) {
  return gr(n) ? n(i, e) : n;
}
var uM = (n, i) => (n === !0 ? i : typeof n == "string" ? zs(i, n) : void 0);
function hM(n, i, e, t, r) {
  for (let o of i) {
    let a = uM(e, o);
    if (a) {
      n.add(a);
      let d = $b(a._fallback, e, r);
      if (typeof d < "u" && d !== e && d !== t) return d;
    } else if (a === !1 && typeof t < "u" && e !== t) return null;
  }
  return !1;
}
function Gp(n, i, e, t) {
  let r = i._rootScopes,
    o = $b(i._fallback, e, t),
    a = [...n, ...r],
    d = new Set();
  d.add(t);
  let u = bb(d, a, e, o || e, t);
  return u === null ||
    (typeof o < "u" && o !== e && ((u = bb(d, a, o, u, t)), u === null))
    ? !1
    : ld(Array.from(d), [""], r, o, () => pM(i, e, t));
}
function bb(n, i, e, t, r) {
  for (; e; ) e = hM(n, i, e, t, r);
  return e;
}
function pM(n, i, e) {
  let t = n._getTarget();
  i in t || (t[i] = {});
  let r = t[i];
  return Yt(r) && ht(e) ? e : r || {};
}
function mM(n, i, e, t) {
  let r;
  for (let o of i)
    if (((r = Wb(sM(o, n), e)), typeof r < "u"))
      return Wp(n, r) ? Gp(e, t, n, r) : r;
}
function Wb(n, i) {
  for (let e of i) {
    if (!e) continue;
    let t = e[n];
    if (typeof t < "u") return t;
  }
}
function vb(n) {
  let i = n._keys;
  return i || (i = n._keys = fM(n._scopes)), i;
}
function fM(n) {
  let i = new Set();
  for (let e of n)
    for (let t of Object.keys(e).filter((r) => !r.startsWith("_"))) i.add(t);
  return Array.from(i);
}
var t5 = Number.EPSILON || 1e-14;
function cd() {
  return typeof window < "u" && typeof document < "u";
}
function dd(n) {
  let i = n.parentNode;
  return i && i.toString() === "[object ShadowRoot]" && (i = i.host), i;
}
function td(n, i, e) {
  let t;
  return (
    typeof n == "string"
      ? ((t = parseInt(n, 10)),
        n.indexOf("%") !== -1 && (t = (t / 100) * i.parentNode[e]))
      : (t = n),
    t
  );
}
var ud = (n) => n.ownerDocument.defaultView.getComputedStyle(n, null);
function gM(n, i) {
  return ud(n).getPropertyValue(i);
}
var _M = ["top", "right", "bottom", "left"];
function bo(n, i, e) {
  let t = {};
  e = e ? "-" + e : "";
  for (let r = 0; r < 4; r++) {
    let o = _M[r];
    t[o] = parseFloat(n[i + "-" + o + e]) || 0;
  }
  return (t.width = t.left + t.right), (t.height = t.top + t.bottom), t;
}
var bM = (n, i, e) => (n > 0 || i > 0) && (!e || !e.shadowRoot);
function vM(n, i) {
  let e = n.touches,
    t = e && e.length ? e[0] : n,
    { offsetX: r, offsetY: o } = t,
    a = !1,
    d,
    u;
  if (bM(r, o, n.target)) (d = r), (u = o);
  else {
    let f = i.getBoundingClientRect();
    (d = t.clientX - f.left), (u = t.clientY - f.top), (a = !0);
  }
  return { x: d, y: u, box: a };
}
function Gr(n, i) {
  if ("native" in n) return n;
  let { canvas: e, currentDevicePixelRatio: t } = i,
    r = ud(e),
    o = r.boxSizing === "border-box",
    a = bo(r, "padding"),
    d = bo(r, "border", "width"),
    { x: u, y: f, box: v } = vM(n, e),
    S = a.left + (v && d.left),
    T = a.top + (v && d.top),
    { width: M, height: I } = i;
  return (
    o && ((M -= a.width + d.width), (I -= a.height + d.height)),
    {
      x: Math.round((((u - S) / M) * e.width) / t),
      y: Math.round((((f - T) / I) * e.height) / t),
    }
  );
}
function yM(n, i, e) {
  let t, r;
  if (i === void 0 || e === void 0) {
    let o = n && dd(n);
    if (!o) (i = n.clientWidth), (e = n.clientHeight);
    else {
      let a = o.getBoundingClientRect(),
        d = ud(o),
        u = bo(d, "border", "width"),
        f = bo(d, "padding");
      (i = a.width - f.width - u.width),
        (e = a.height - f.height - u.height),
        (t = td(d.maxWidth, o, "clientWidth")),
        (r = td(d.maxHeight, o, "clientHeight"));
    }
  }
  return { width: i, height: e, maxWidth: t || ed, maxHeight: r || ed };
}
var Xc = (n) => Math.round(n * 10) / 10;
function Gb(n, i, e, t) {
  let r = ud(n),
    o = bo(r, "margin"),
    a = td(r.maxWidth, n, "clientWidth") || ed,
    d = td(r.maxHeight, n, "clientHeight") || ed,
    u = yM(n, i, e),
    { width: f, height: v } = u;
  if (r.boxSizing === "content-box") {
    let T = bo(r, "border", "width"),
      M = bo(r, "padding");
    (f -= M.width + T.width), (v -= M.height + T.height);
  }
  return (
    (f = Math.max(0, f - o.width)),
    (v = Math.max(0, t ? f / t : v - o.height)),
    (f = Xc(Math.min(f, a, u.maxWidth))),
    (v = Xc(Math.min(v, d, u.maxHeight))),
    f && !v && (v = Xc(f / 2)),
    (i !== void 0 || e !== void 0) &&
      t &&
      u.height &&
      v > u.height &&
      ((v = u.height), (f = Xc(Math.floor(v * t)))),
    { width: f, height: v }
  );
}
function Yp(n, i, e) {
  let t = i || 1,
    r = Math.floor(n.height * t),
    o = Math.floor(n.width * t);
  (n.height = Math.floor(n.height)), (n.width = Math.floor(n.width));
  let a = n.canvas;
  return (
    a.style &&
      (e || (!a.style.height && !a.style.width)) &&
      ((a.style.height = `${n.height}px`), (a.style.width = `${n.width}px`)),
    n.currentDevicePixelRatio !== t || a.height !== r || a.width !== o
      ? ((n.currentDevicePixelRatio = t),
        (a.height = r),
        (a.width = o),
        n.ctx.setTransform(t, 0, 0, t, 0, 0),
        !0)
      : !1
  );
}
var Yb = (function () {
  let n = !1;
  try {
    let i = {
      get passive() {
        return (n = !0), !1;
      },
    };
    cd() &&
      (window.addEventListener("test", null, i),
      window.removeEventListener("test", null, i));
  } catch {}
  return n;
})();
function qp(n, i) {
  let e = gM(n, i),
    t = e && e.match(/^(\d+)(\.\d+)?px$/);
  return t ? +t[1] : void 0;
}
function Zc(n, i, e) {
  return n.options.clip ? n[e] : i[e];
}
function xM(n, i) {
  let { xScale: e, yScale: t } = n;
  return e && t
    ? {
        left: Zc(e, i, "left"),
        right: Zc(e, i, "right"),
        top: Zc(t, i, "top"),
        bottom: Zc(t, i, "bottom"),
      }
    : i;
}
function qb(n, i) {
  let e = i._clip;
  if (e.disabled) return !1;
  let t = xM(i, n.chartArea);
  return {
    left: e.left === !1 ? 0 : t.left - (e.left === !0 ? 0 : e.left),
    right: e.right === !1 ? n.width : t.right + (e.right === !0 ? 0 : e.right),
    top: e.top === !1 ? 0 : t.top - (e.top === !0 ? 0 : e.top),
    bottom:
      e.bottom === !1 ? n.height : t.bottom + (e.bottom === !0 ? 0 : e.bottom),
  };
}
var tm = class {
    constructor() {
      (this._request = null),
        (this._charts = new Map()),
        (this._running = !1),
        (this._lastDate = void 0);
    }
    _notify(i, e, t, r) {
      let o = e.listeners[r],
        a = e.duration;
      o.forEach((d) =>
        d({
          chart: i,
          initial: e.initial,
          numSteps: a,
          currentStep: Math.min(t - e.start, a),
        })
      );
    }
    _refresh() {
      this._request ||
        ((this._running = !0),
        (this._request = Np.call(window, () => {
          this._update(),
            (this._request = null),
            this._running && this._refresh();
        })));
    }
    _update(i = Date.now()) {
      let e = 0;
      this._charts.forEach((t, r) => {
        if (!t.running || !t.items.length) return;
        let o = t.items,
          a = o.length - 1,
          d = !1,
          u;
        for (; a >= 0; --a)
          (u = o[a]),
            u._active
              ? (u._total > t.duration && (t.duration = u._total),
                u.tick(i),
                (d = !0))
              : ((o[a] = o[o.length - 1]), o.pop());
        d && (r.draw(), this._notify(r, t, i, "progress")),
          o.length ||
            ((t.running = !1),
            this._notify(r, t, i, "complete"),
            (t.initial = !1)),
          (e += o.length);
      }),
        (this._lastDate = i),
        e === 0 && (this._running = !1);
    }
    _getAnims(i) {
      let e = this._charts,
        t = e.get(i);
      return (
        t ||
          ((t = {
            running: !1,
            initial: !0,
            items: [],
            listeners: { complete: [], progress: [] },
          }),
          e.set(i, t)),
        t
      );
    }
    listen(i, e, t) {
      this._getAnims(i).listeners[e].push(t);
    }
    add(i, e) {
      !e || !e.length || this._getAnims(i).items.push(...e);
    }
    has(i) {
      return this._getAnims(i).items.length > 0;
    }
    start(i) {
      let e = this._charts.get(i);
      e &&
        ((e.running = !0),
        (e.start = Date.now()),
        (e.duration = e.items.reduce((t, r) => Math.max(t, r._duration), 0)),
        this._refresh());
    }
    running(i) {
      if (!this._running) return !1;
      let e = this._charts.get(i);
      return !(!e || !e.running || !e.items.length);
    }
    stop(i) {
      let e = this._charts.get(i);
      if (!e || !e.items.length) return;
      let t = e.items,
        r = t.length - 1;
      for (; r >= 0; --r) t[r].cancel();
      (e.items = []), this._notify(i, e, Date.now(), "complete");
    }
    remove(i) {
      return this._charts.delete(i);
    }
  },
  vr = new tm(),
  Kb = "transparent",
  CM = {
    boolean(n, i, e) {
      return e > 0.5 ? i : n;
    },
    color(n, i, e) {
      let t = Bp(n || Kb),
        r = t.valid && Bp(i || Kb);
      return r && r.valid ? r.mix(t, e).hexString() : i;
    },
    number(n, i, e) {
      return n + (i - n) * e;
    },
  },
  im = class {
    constructor(i, e, t, r) {
      let o = e[t];
      r = Qs([i.to, r, o, i.from]);
      let a = Qs([i.from, o, r]);
      (this._active = !0),
        (this._fn = i.fn || CM[i.type || typeof a]),
        (this._easing = ma[i.easing] || ma.linear),
        (this._start = Math.floor(Date.now() + (i.delay || 0))),
        (this._duration = this._total = Math.floor(i.duration)),
        (this._loop = !!i.loop),
        (this._target = e),
        (this._prop = t),
        (this._from = a),
        (this._to = r),
        (this._promises = void 0);
    }
    active() {
      return this._active;
    }
    update(i, e, t) {
      if (this._active) {
        this._notify(!1);
        let r = this._target[this._prop],
          o = t - this._start,
          a = this._duration - o;
        (this._start = t),
          (this._duration = Math.floor(Math.max(a, i.duration))),
          (this._total += o),
          (this._loop = !!i.loop),
          (this._to = Qs([i.to, e, r, i.from])),
          (this._from = Qs([i.from, r, e]));
      }
    }
    cancel() {
      this._active &&
        (this.tick(Date.now()), (this._active = !1), this._notify(!1));
    }
    tick(i) {
      let e = i - this._start,
        t = this._duration,
        r = this._prop,
        o = this._from,
        a = this._loop,
        d = this._to,
        u;
      if (((this._active = o !== d && (a || e < t)), !this._active)) {
        (this._target[r] = d), this._notify(!0);
        return;
      }
      if (e < 0) {
        this._target[r] = o;
        return;
      }
      (u = (e / t) % 2),
        (u = a && u > 1 ? 2 - u : u),
        (u = this._easing(Math.min(1, Math.max(0, u)))),
        (this._target[r] = this._fn(o, d, u));
    }
    wait() {
      let i = this._promises || (this._promises = []);
      return new Promise((e, t) => {
        i.push({ res: e, rej: t });
      });
    }
    _notify(i) {
      let e = i ? "res" : "rej",
        t = this._promises || [];
      for (let r = 0; r < t.length; r++) t[r][e]();
    }
  },
  nm = class {
    constructor(i, e) {
      (this._chart = i), (this._properties = new Map()), this.configure(e);
    }
    configure(i) {
      if (!ht(i)) return;
      let e = Object.keys(qt.animation),
        t = this._properties;
      Object.getOwnPropertyNames(i).forEach((r) => {
        let o = i[r];
        if (!ht(o)) return;
        let a = {};
        for (let d of e) a[d] = o[d];
        ((Yt(o.properties) && o.properties) || [r]).forEach((d) => {
          (d === r || !t.has(d)) && t.set(d, a);
        });
      });
    }
    _animateOptions(i, e) {
      let t = e.options,
        r = SM(i, t);
      if (!r) return [];
      let o = this._createAnimations(r, t);
      return (
        t.$shared &&
          wM(i.options.$animations, t).then(
            () => {
              i.options = t;
            },
            () => {}
          ),
        o
      );
    }
    _createAnimations(i, e) {
      let t = this._properties,
        r = [],
        o = i.$animations || (i.$animations = {}),
        a = Object.keys(e),
        d = Date.now(),
        u;
      for (u = a.length - 1; u >= 0; --u) {
        let f = a[u];
        if (f.charAt(0) === "$") continue;
        if (f === "options") {
          r.push(...this._animateOptions(i, e));
          continue;
        }
        let v = e[f],
          S = o[f],
          T = t.get(f);
        if (S)
          if (T && S.active()) {
            S.update(T, v, d);
            continue;
          } else S.cancel();
        if (!T || !T.duration) {
          i[f] = v;
          continue;
        }
        (o[f] = S = new im(T, i, f, v)), r.push(S);
      }
      return r;
    }
    update(i, e) {
      if (this._properties.size === 0) {
        Object.assign(i, e);
        return;
      }
      let t = this._createAnimations(i, e);
      if (t.length) return vr.add(this._chart, t), !0;
    }
  };
function wM(n, i) {
  let e = [],
    t = Object.keys(i);
  for (let r = 0; r < t.length; r++) {
    let o = n[t[r]];
    o && o.active() && e.push(o.wait());
  }
  return Promise.all(e);
}
function SM(n, i) {
  if (!i) return;
  let e = n.options;
  if (!e) {
    n.options = i;
    return;
  }
  return (
    e.$shared &&
      (n.options = e = Object.assign({}, e, { $shared: !1, $animations: {} })),
    e
  );
}
function Qb(n, i) {
  let e = (n && n.options) || {},
    t = e.reverse,
    r = e.min === void 0 ? i : 0,
    o = e.max === void 0 ? i : 0;
  return { start: t ? o : r, end: t ? r : o };
}
function DM(n, i, e) {
  if (e === !1) return !1;
  let t = Qb(n, e),
    r = Qb(i, e);
  return { top: r.end, right: t.end, bottom: r.start, left: t.start };
}
function MM(n) {
  let i, e, t, r;
  return (
    ht(n)
      ? ((i = n.top), (e = n.right), (t = n.bottom), (r = n.left))
      : (i = e = t = r = n),
    { top: i, right: e, bottom: t, left: r, disabled: n === !1 }
  );
}
function Rv(n, i) {
  let e = [],
    t = n._getSortedDatasetMetas(i),
    r,
    o;
  for (r = 0, o = t.length; r < o; ++r) e.push(t[r].index);
  return e;
}
function Xb(n, i, e, t = {}) {
  let r = n.keys,
    o = t.mode === "single",
    a,
    d,
    u,
    f;
  if (i === null) return;
  let v = !1;
  for (a = 0, d = r.length; a < d; ++a) {
    if (((u = +r[a]), u === e)) {
      if (((v = !0), t.all)) continue;
      break;
    }
    (f = n.values[u]), di(f) && (o || i === 0 || Ws(i) === Ws(f)) && (i += f);
  }
  return !v && !t.all ? 0 : i;
}
function TM(n, i) {
  let { iScale: e, vScale: t } = i,
    r = e.axis === "x" ? "x" : "y",
    o = t.axis === "x" ? "x" : "y",
    a = Object.keys(n),
    d = new Array(a.length),
    u,
    f,
    v;
  for (u = 0, f = a.length; u < f; ++u)
    (v = a[u]), (d[u] = { [r]: v, [o]: n[v] });
  return d;
}
function Kp(n, i) {
  let e = n && n.options.stacked;
  return e || (e === void 0 && i.stack !== void 0);
}
function EM(n, i, e) {
  return `${n.id}.${i.id}.${e.stack || e.type}`;
}
function OM(n) {
  let { min: i, max: e, minDefined: t, maxDefined: r } = n.getUserBounds();
  return {
    min: t ? i : Number.NEGATIVE_INFINITY,
    max: r ? e : Number.POSITIVE_INFINITY,
  };
}
function kM(n, i, e) {
  let t = n[i] || (n[i] = {});
  return t[e] || (t[e] = {});
}
function Zb(n, i, e, t) {
  for (let r of i.getMatchingVisibleMetas(t).reverse()) {
    let o = n[r.index];
    if ((e && o > 0) || (!e && o < 0)) return r.index;
  }
  return null;
}
function Jb(n, i) {
  let { chart: e, _cachedMeta: t } = n,
    r = e._stacks || (e._stacks = {}),
    { iScale: o, vScale: a, index: d } = t,
    u = o.axis,
    f = a.axis,
    v = EM(o, a, t),
    S = i.length,
    T;
  for (let M = 0; M < S; ++M) {
    let I = i[M],
      { [u]: L, [f]: E } = I,
      F = I._stacks || (I._stacks = {});
    (T = F[f] = kM(r, v, L)),
      (T[d] = E),
      (T._top = Zb(T, a, !0, t.type)),
      (T._bottom = Zb(T, a, !1, t.type));
    let ee = T._visualValues || (T._visualValues = {});
    ee[d] = E;
  }
}
function Qp(n, i) {
  let e = n.scales;
  return Object.keys(e)
    .filter((t) => e[t].axis === i)
    .shift();
}
function PM(n, i) {
  return Co(n, {
    active: !1,
    dataset: void 0,
    datasetIndex: i,
    index: i,
    mode: "default",
    type: "dataset",
  });
}
function IM(n, i, e) {
  return Co(n, {
    active: !1,
    dataIndex: i,
    parsed: void 0,
    raw: void 0,
    element: e,
    index: i,
    mode: "default",
    type: "data",
  });
}
function Xs(n, i) {
  let e = n.controller.index,
    t = n.vScale && n.vScale.axis;
  if (t) {
    i = i || n._parsed;
    for (let r of i) {
      let o = r._stacks;
      if (!o || o[t] === void 0 || o[t][e] === void 0) return;
      delete o[t][e],
        o[t]._visualValues !== void 0 &&
          o[t]._visualValues[e] !== void 0 &&
          delete o[t]._visualValues[e];
    }
  }
}
var Xp = (n) => n === "reset" || n === "none",
  ev = (n, i) => (i ? n : Object.assign({}, n)),
  AM = (n, i, e) =>
    n && !i.hidden && i._stacked && { keys: Rv(e, !0), values: null },
  RM = (() => {
    class n {
      static defaults = {};
      static datasetElementType = null;
      static dataElementType = null;
      constructor(e, t) {
        (this.chart = e),
          (this._ctx = e.ctx),
          (this.index = t),
          (this._cachedDataOpts = {}),
          (this._cachedMeta = this.getMeta()),
          (this._type = this._cachedMeta.type),
          (this.options = void 0),
          (this._parsing = !1),
          (this._data = void 0),
          (this._objectData = void 0),
          (this._sharedOptions = void 0),
          (this._drawStart = void 0),
          (this._drawCount = void 0),
          (this.enableOptionSharing = !1),
          (this.supportsDecimation = !1),
          (this.$context = void 0),
          (this._syncList = []),
          (this.datasetElementType = new.target.datasetElementType),
          (this.dataElementType = new.target.dataElementType),
          this.initialize();
      }
      initialize() {
        let e = this._cachedMeta;
        this.configure(),
          this.linkScales(),
          (e._stacked = Kp(e.vScale, e)),
          this.addElements(),
          this.options.fill &&
            !this.chart.isPluginEnabled("filler") &&
            console.warn(
              "Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options"
            );
      }
      updateIndex(e) {
        this.index !== e && Xs(this._cachedMeta), (this.index = e);
      }
      linkScales() {
        let e = this.chart,
          t = this._cachedMeta,
          r = this.getDataset(),
          o = (T, M, I, L) => (T === "x" ? M : T === "r" ? L : I),
          a = (t.xAxisID = Gt(r.xAxisID, Qp(e, "x"))),
          d = (t.yAxisID = Gt(r.yAxisID, Qp(e, "y"))),
          u = (t.rAxisID = Gt(r.rAxisID, Qp(e, "r"))),
          f = t.indexAxis,
          v = (t.iAxisID = o(f, a, d, u)),
          S = (t.vAxisID = o(f, d, a, u));
        (t.xScale = this.getScaleForId(a)),
          (t.yScale = this.getScaleForId(d)),
          (t.rScale = this.getScaleForId(u)),
          (t.iScale = this.getScaleForId(v)),
          (t.vScale = this.getScaleForId(S));
      }
      getDataset() {
        return this.chart.data.datasets[this.index];
      }
      getMeta() {
        return this.chart.getDatasetMeta(this.index);
      }
      getScaleForId(e) {
        return this.chart.scales[e];
      }
      _getOtherScale(e) {
        let t = this._cachedMeta;
        return e === t.iScale ? t.vScale : t.iScale;
      }
      reset() {
        this._update("reset");
      }
      _destroy() {
        let e = this._cachedMeta;
        this._data && Fp(this._data, this), e._stacked && Xs(e);
      }
      _dataCheck() {
        let e = this.getDataset(),
          t = e.data || (e.data = []),
          r = this._data;
        if (ht(t)) {
          let o = this._cachedMeta;
          this._data = TM(t, o);
        } else if (r !== t) {
          if (r) {
            Fp(r, this);
            let o = this._cachedMeta;
            Xs(o), (o._parsed = []);
          }
          t && Object.isExtensible(t) && Ib(t, this),
            (this._syncList = []),
            (this._data = t);
        }
      }
      addElements() {
        let e = this._cachedMeta;
        this._dataCheck(),
          this.datasetElementType &&
            (e.dataset = new this.datasetElementType());
      }
      buildOrUpdateElements(e) {
        let t = this._cachedMeta,
          r = this.getDataset(),
          o = !1;
        this._dataCheck();
        let a = t._stacked;
        (t._stacked = Kp(t.vScale, t)),
          t.stack !== r.stack && ((o = !0), Xs(t), (t.stack = r.stack)),
          this._resyncElements(e),
          (o || a !== t._stacked) &&
            (Jb(this, t._parsed), (t._stacked = Kp(t.vScale, t)));
      }
      configure() {
        let e = this.chart.config,
          t = e.datasetScopeKeys(this._type),
          r = e.getOptionScopes(this.getDataset(), t, !0);
        (this.options = e.createResolver(r, this.getContext())),
          (this._parsing = this.options.parsing),
          (this._cachedDataOpts = {});
      }
      parse(e, t) {
        let { _cachedMeta: r, _data: o } = this,
          { iScale: a, _stacked: d } = r,
          u = a.axis,
          f = e === 0 && t === o.length ? !0 : r._sorted,
          v = e > 0 && r._parsed[e - 1],
          S,
          T,
          M;
        if (this._parsing === !1) (r._parsed = o), (r._sorted = !0), (M = o);
        else {
          Yt(o[e])
            ? (M = this.parseArrayData(r, o, e, t))
            : ht(o[e])
            ? (M = this.parseObjectData(r, o, e, t))
            : (M = this.parsePrimitiveData(r, o, e, t));
          let I = () => T[u] === null || (v && T[u] < v[u]);
          for (S = 0; S < t; ++S)
            (r._parsed[S + e] = T = M[S]), f && (I() && (f = !1), (v = T));
          r._sorted = f;
        }
        d && Jb(this, M);
      }
      parsePrimitiveData(e, t, r, o) {
        let { iScale: a, vScale: d } = e,
          u = a.axis,
          f = d.axis,
          v = a.getLabels(),
          S = a === d,
          T = new Array(o),
          M,
          I,
          L;
        for (M = 0, I = o; M < I; ++M)
          (L = M + r),
            (T[M] = { [u]: S || a.parse(v[L], L), [f]: d.parse(t[L], L) });
        return T;
      }
      parseArrayData(e, t, r, o) {
        let { xScale: a, yScale: d } = e,
          u = new Array(o),
          f,
          v,
          S,
          T;
        for (f = 0, v = o; f < v; ++f)
          (S = f + r),
            (T = t[S]),
            (u[f] = { x: a.parse(T[0], S), y: d.parse(T[1], S) });
        return u;
      }
      parseObjectData(e, t, r, o) {
        let { xScale: a, yScale: d } = e,
          { xAxisKey: u = "x", yAxisKey: f = "y" } = this._parsing,
          v = new Array(o),
          S,
          T,
          M,
          I;
        for (S = 0, T = o; S < T; ++S)
          (M = S + r),
            (I = t[M]),
            (v[S] = { x: a.parse(zs(I, u), M), y: d.parse(zs(I, f), M) });
        return v;
      }
      getParsed(e) {
        return this._cachedMeta._parsed[e];
      }
      getDataElement(e) {
        return this._cachedMeta.data[e];
      }
      applyStack(e, t, r) {
        let o = this.chart,
          a = this._cachedMeta,
          d = t[e.axis],
          u = { keys: Rv(o, !0), values: t._stacks[e.axis]._visualValues };
        return Xb(u, d, a.index, { mode: r });
      }
      updateRangeFromParsed(e, t, r, o) {
        let a = r[t.axis],
          d = a === null ? NaN : a,
          u = o && r._stacks[t.axis];
        o && u && ((o.values = u), (d = Xb(o, a, this._cachedMeta.index))),
          (e.min = Math.min(e.min, d)),
          (e.max = Math.max(e.max, d));
      }
      getMinMax(e, t) {
        let r = this._cachedMeta,
          o = r._parsed,
          a = r._sorted && e === r.iScale,
          d = o.length,
          u = this._getOtherScale(e),
          f = AM(t, r, this.chart),
          v = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY },
          { min: S, max: T } = OM(u),
          M,
          I;
        function L() {
          I = o[M];
          let E = I[u.axis];
          return !di(I[e.axis]) || S > E || T < E;
        }
        for (
          M = 0;
          M < d && !(!L() && (this.updateRangeFromParsed(v, e, I, f), a));
          ++M
        );
        if (a) {
          for (M = d - 1; M >= 0; --M)
            if (!L()) {
              this.updateRangeFromParsed(v, e, I, f);
              break;
            }
        }
        return v;
      }
      getAllParsedValues(e) {
        let t = this._cachedMeta._parsed,
          r = [],
          o,
          a,
          d;
        for (o = 0, a = t.length; o < a; ++o)
          (d = t[o][e.axis]), di(d) && r.push(d);
        return r;
      }
      getMaxOverflow() {
        return !1;
      }
      getLabelAndValue(e) {
        let t = this._cachedMeta,
          r = t.iScale,
          o = t.vScale,
          a = this.getParsed(e);
        return {
          label: r ? "" + r.getLabelForValue(a[r.axis]) : "",
          value: o ? "" + o.getLabelForValue(a[o.axis]) : "",
        };
      }
      _update(e) {
        let t = this._cachedMeta;
        this.update(e || "default"),
          (t._clip = MM(
            Gt(this.options.clip, DM(t.xScale, t.yScale, this.getMaxOverflow()))
          ));
      }
      update(e) {}
      draw() {
        let e = this._ctx,
          t = this.chart,
          r = this._cachedMeta,
          o = r.data || [],
          a = t.chartArea,
          d = [],
          u = this._drawStart || 0,
          f = this._drawCount || o.length - u,
          v = this.options.drawActiveElementsOnTop,
          S;
        for (r.dataset && r.dataset.draw(e, a, u, f), S = u; S < u + f; ++S) {
          let T = o[S];
          T.hidden || (T.active && v ? d.push(T) : T.draw(e, a));
        }
        for (S = 0; S < d.length; ++S) d[S].draw(e, a);
      }
      getStyle(e, t) {
        let r = t ? "active" : "default";
        return e === void 0 && this._cachedMeta.dataset
          ? this.resolveDatasetElementOptions(r)
          : this.resolveDataElementOptions(e || 0, r);
      }
      getContext(e, t, r) {
        let o = this.getDataset(),
          a;
        if (e >= 0 && e < this._cachedMeta.data.length) {
          let d = this._cachedMeta.data[e];
          (a = d.$context || (d.$context = IM(this.getContext(), e, d))),
            (a.parsed = this.getParsed(e)),
            (a.raw = o.data[e]),
            (a.index = a.dataIndex = e);
        } else
          (a =
            this.$context ||
            (this.$context = PM(this.chart.getContext(), this.index))),
            (a.dataset = o),
            (a.index = a.datasetIndex = this.index);
        return (a.active = !!t), (a.mode = r), a;
      }
      resolveDatasetElementOptions(e) {
        return this._resolveElementOptions(this.datasetElementType.id, e);
      }
      resolveDataElementOptions(e, t) {
        return this._resolveElementOptions(this.dataElementType.id, t, e);
      }
      _resolveElementOptions(e, t = "default", r) {
        let o = t === "active",
          a = this._cachedDataOpts,
          d = e + "-" + t,
          u = a[d],
          f = this.enableOptionSharing && $s(r);
        if (u) return ev(u, f);
        let v = this.chart.config,
          S = v.datasetElementScopeKeys(this._type, e),
          T = o ? [`${e}Hover`, "hover", e, ""] : [e, ""],
          M = v.getOptionScopes(this.getDataset(), S),
          I = Object.keys(qt.elements[e]),
          L = () => this.getContext(r, o, t),
          E = v.resolveNamedOptions(M, I, L, T);
        return (
          E.$shared && ((E.$shared = f), (a[d] = Object.freeze(ev(E, f)))), E
        );
      }
      _resolveAnimations(e, t, r) {
        let o = this.chart,
          a = this._cachedDataOpts,
          d = `animation-${t}`,
          u = a[d];
        if (u) return u;
        let f;
        if (o.options.animation !== !1) {
          let S = this.chart.config,
            T = S.datasetAnimationScopeKeys(this._type, t),
            M = S.getOptionScopes(this.getDataset(), T);
          f = S.createResolver(M, this.getContext(e, r, t));
        }
        let v = new nm(o, f && f.animations);
        return f && f._cacheable && (a[d] = Object.freeze(v)), v;
      }
      getSharedOptions(e) {
        if (e.$shared)
          return (
            this._sharedOptions || (this._sharedOptions = Object.assign({}, e))
          );
      }
      includeOptions(e, t) {
        return !t || Xp(e) || this.chart._animationsDisabled;
      }
      _getSharedOptions(e, t) {
        let r = this.resolveDataElementOptions(e, t),
          o = this._sharedOptions,
          a = this.getSharedOptions(r),
          d = this.includeOptions(t, a) || a !== o;
        return (
          this.updateSharedOptions(a, t, r),
          { sharedOptions: a, includeOptions: d }
        );
      }
      updateElement(e, t, r, o) {
        Xp(o)
          ? Object.assign(e, r)
          : this._resolveAnimations(t, o).update(e, r);
      }
      updateSharedOptions(e, t, r) {
        e && !Xp(t) && this._resolveAnimations(void 0, t).update(e, r);
      }
      _setStyle(e, t, r, o) {
        e.active = o;
        let a = this.getStyle(t, o);
        this._resolveAnimations(t, r, o).update(e, {
          options: (!o && this.getSharedOptions(a)) || a,
        });
      }
      removeHoverStyle(e, t, r) {
        this._setStyle(e, r, "active", !1);
      }
      setHoverStyle(e, t, r) {
        this._setStyle(e, r, "active", !0);
      }
      _removeDatasetHoverStyle() {
        let e = this._cachedMeta.dataset;
        e && this._setStyle(e, void 0, "active", !1);
      }
      _setDatasetHoverStyle() {
        let e = this._cachedMeta.dataset;
        e && this._setStyle(e, void 0, "active", !0);
      }
      _resyncElements(e) {
        let t = this._data,
          r = this._cachedMeta.data;
        for (let [u, f, v] of this._syncList) this[u](f, v);
        this._syncList = [];
        let o = r.length,
          a = t.length,
          d = Math.min(a, o);
        d && this.parse(0, d),
          a > o
            ? this._insertElements(o, a - o, e)
            : a < o && this._removeElements(a, o - a);
      }
      _insertElements(e, t, r = !0) {
        let o = this._cachedMeta,
          a = o.data,
          d = e + t,
          u,
          f = (v) => {
            for (v.length += t, u = v.length - 1; u >= d; u--) v[u] = v[u - t];
          };
        for (f(a), u = e; u < d; ++u) a[u] = new this.dataElementType();
        this._parsing && f(o._parsed),
          this.parse(e, t),
          r && this.updateElements(a, e, t, "reset");
      }
      updateElements(e, t, r, o) {}
      _removeElements(e, t) {
        let r = this._cachedMeta;
        if (this._parsing) {
          let o = r._parsed.splice(e, t);
          r._stacked && Xs(r, o);
        }
        r.data.splice(e, t);
      }
      _sync(e) {
        if (this._parsing) this._syncList.push(e);
        else {
          let [t, r, o] = e;
          this[t](r, o);
        }
        this.chart._dataChanges.push([this.index, ...e]);
      }
      _onDataPush() {
        let e = arguments.length;
        this._sync(["_insertElements", this.getDataset().data.length - e, e]);
      }
      _onDataPop() {
        this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1]);
      }
      _onDataShift() {
        this._sync(["_removeElements", 0, 1]);
      }
      _onDataSplice(e, t) {
        t && this._sync(["_removeElements", e, t]);
        let r = arguments.length - 2;
        r && this._sync(["_insertElements", e, r]);
      }
      _onDataUnshift() {
        this._sync(["_insertElements", 0, arguments.length]);
      }
    }
    return n;
  })();
function wo() {
  throw new Error(
    "This method is not implemented: Check that a complete date adapter is provided."
  );
}
var rm = class n {
    static override(i) {
      Object.assign(n.prototype, i);
    }
    options;
    constructor(i) {
      this.options = i || {};
    }
    init() {}
    formats() {
      return wo();
    }
    parse() {
      return wo();
    }
    format() {
      return wo();
    }
    add() {
      return wo();
    }
    diff() {
      return wo();
    }
    startOf() {
      return wo();
    }
    endOf() {
      return wo();
    }
  },
  FM = { _date: rm };
function NM(n, i, e, t) {
  let { controller: r, data: o, _sorted: a } = n,
    d = r._cachedMeta.iScale,
    u = n.dataset && n.dataset.options ? n.dataset.options.spanGaps : null;
  if (d && i === d.axis && i !== "r" && a && o.length) {
    let f = d._reversePixels ? Ob : od;
    if (t) {
      if (r._sharedOptions) {
        let v = o[0],
          S = typeof v.getRange == "function" && v.getRange(i);
        if (S) {
          let T = f(o, i, e - S),
            M = f(o, i, e + S);
          return { lo: T.lo, hi: M.hi };
        }
      }
    } else {
      let v = f(o, i, e);
      if (u) {
        let { vScale: S } = r._cachedMeta,
          { _parsed: T } = n,
          M = T.slice(0, v.lo + 1)
            .reverse()
            .findIndex((L) => !Ot(L[S.axis]));
        v.lo -= Math.max(0, M);
        let I = T.slice(v.hi).findIndex((L) => !Ot(L[S.axis]));
        v.hi += Math.max(0, I);
      }
      return v;
    }
  }
  return { lo: 0, hi: o.length - 1 };
}
function ol(n, i, e, t, r) {
  let o = n.getSortedVisibleDatasetMetas(),
    a = e[i];
  for (let d = 0, u = o.length; d < u; ++d) {
    let { index: f, data: v } = o[d],
      { lo: S, hi: T } = NM(o[d], i, a, r);
    for (let M = S; M <= T; ++M) {
      let I = v[M];
      I.skip || t(I, f, M);
    }
  }
}
function LM(n) {
  let i = n.indexOf("x") !== -1,
    e = n.indexOf("y") !== -1;
  return function (t, r) {
    let o = i ? Math.abs(t.x - r.x) : 0,
      a = e ? Math.abs(t.y - r.y) : 0;
    return Math.sqrt(Math.pow(o, 2) + Math.pow(a, 2));
  };
}
function Zp(n, i, e, t, r) {
  let o = [];
  return (
    (!r && !n.isPointInArea(i)) ||
      ol(
        n,
        e,
        i,
        function (d, u, f) {
          (!r && !yo(d, n.chartArea, 0)) ||
            (d.inRange(i.x, i.y, t) &&
              o.push({ element: d, datasetIndex: u, index: f }));
        },
        !0
      ),
    o
  );
}
function VM(n, i, e, t) {
  let r = [];
  function o(a, d, u) {
    let { startAngle: f, endAngle: v } = a.getProps(
        ["startAngle", "endAngle"],
        t
      ),
      { angle: S } = Mb(a, { x: i.x, y: i.y });
    Tb(S, f, v) && r.push({ element: a, datasetIndex: d, index: u });
  }
  return ol(n, e, i, o), r;
}
function BM(n, i, e, t, r, o) {
  let a = [],
    d = LM(e),
    u = Number.POSITIVE_INFINITY;
  function f(v, S, T) {
    let M = v.inRange(i.x, i.y, r);
    if (t && !M) return;
    let I = v.getCenterPoint(r);
    if (!(!!o || n.isPointInArea(I)) && !M) return;
    let E = d(i, I);
    E < u
      ? ((a = [{ element: v, datasetIndex: S, index: T }]), (u = E))
      : E === u && a.push({ element: v, datasetIndex: S, index: T });
  }
  return ol(n, e, i, f), a;
}
function Jp(n, i, e, t, r, o) {
  return !o && !n.isPointInArea(i)
    ? []
    : e === "r" && !t
    ? VM(n, i, e, r)
    : BM(n, i, e, t, r, o);
}
function tv(n, i, e, t, r) {
  let o = [],
    a = e === "x" ? "inXRange" : "inYRange",
    d = !1;
  return (
    ol(n, e, i, (u, f, v) => {
      u[a] &&
        u[a](i[e], r) &&
        (o.push({ element: u, datasetIndex: f, index: v }),
        (d = d || u.inRange(i.x, i.y, r)));
    }),
    t && !d ? [] : o
  );
}
var jM = {
    evaluateInteractionItems: ol,
    modes: {
      index(n, i, e, t) {
        let r = Gr(i, n),
          o = e.axis || "x",
          a = e.includeInvisible || !1,
          d = e.intersect ? Zp(n, r, o, t, a) : Jp(n, r, o, !1, t, a),
          u = [];
        return d.length
          ? (n.getSortedVisibleDatasetMetas().forEach((f) => {
              let v = d[0].index,
                S = f.data[v];
              S &&
                !S.skip &&
                u.push({ element: S, datasetIndex: f.index, index: v });
            }),
            u)
          : [];
      },
      dataset(n, i, e, t) {
        let r = Gr(i, n),
          o = e.axis || "xy",
          a = e.includeInvisible || !1,
          d = e.intersect ? Zp(n, r, o, t, a) : Jp(n, r, o, !1, t, a);
        if (d.length > 0) {
          let u = d[0].datasetIndex,
            f = n.getDatasetMeta(u).data;
          d = [];
          for (let v = 0; v < f.length; ++v)
            d.push({ element: f[v], datasetIndex: u, index: v });
        }
        return d;
      },
      point(n, i, e, t) {
        let r = Gr(i, n),
          o = e.axis || "xy",
          a = e.includeInvisible || !1;
        return Zp(n, r, o, t, a);
      },
      nearest(n, i, e, t) {
        let r = Gr(i, n),
          o = e.axis || "xy",
          a = e.includeInvisible || !1;
        return Jp(n, r, o, e.intersect, t, a);
      },
      x(n, i, e, t) {
        let r = Gr(i, n);
        return tv(n, r, "x", e.intersect, t);
      },
      y(n, i, e, t) {
        let r = Gr(i, n);
        return tv(n, r, "y", e.intersect, t);
      },
    },
  },
  Fv = ["left", "top", "right", "bottom"];
function Zs(n, i) {
  return n.filter((e) => e.pos === i);
}
function iv(n, i) {
  return n.filter((e) => Fv.indexOf(e.pos) === -1 && e.box.axis === i);
}
function Js(n, i) {
  return n.sort((e, t) => {
    let r = i ? t : e,
      o = i ? e : t;
    return r.weight === o.weight ? r.index - o.index : r.weight - o.weight;
  });
}
function HM(n) {
  let i = [],
    e,
    t,
    r,
    o,
    a,
    d;
  for (e = 0, t = (n || []).length; e < t; ++e)
    (r = n[e]),
      ({
        position: o,
        options: { stack: a, stackWeight: d = 1 },
      } = r),
      i.push({
        index: e,
        box: r,
        pos: o,
        horizontal: r.isHorizontal(),
        weight: r.weight,
        stack: a && o + a,
        stackWeight: d,
      });
  return i;
}
function UM(n) {
  let i = {};
  for (let e of n) {
    let { stack: t, pos: r, stackWeight: o } = e;
    if (!t || !Fv.includes(r)) continue;
    let a = i[t] || (i[t] = { count: 0, placed: 0, weight: 0, size: 0 });
    a.count++, (a.weight += o);
  }
  return i;
}
function zM(n, i) {
  let e = UM(n),
    { vBoxMaxWidth: t, hBoxMaxHeight: r } = i,
    o,
    a,
    d;
  for (o = 0, a = n.length; o < a; ++o) {
    d = n[o];
    let { fullSize: u } = d.box,
      f = e[d.stack],
      v = f && d.stackWeight / f.weight;
    d.horizontal
      ? ((d.width = v ? v * t : u && i.availableWidth), (d.height = r))
      : ((d.width = t), (d.height = v ? v * r : u && i.availableHeight));
  }
  return e;
}
function $M(n) {
  let i = HM(n),
    e = Js(
      i.filter((f) => f.box.fullSize),
      !0
    ),
    t = Js(Zs(i, "left"), !0),
    r = Js(Zs(i, "right")),
    o = Js(Zs(i, "top"), !0),
    a = Js(Zs(i, "bottom")),
    d = iv(i, "x"),
    u = iv(i, "y");
  return {
    fullSize: e,
    leftAndTop: t.concat(o),
    rightAndBottom: r.concat(u).concat(a).concat(d),
    chartArea: Zs(i, "chartArea"),
    vertical: t.concat(r).concat(u),
    horizontal: o.concat(a).concat(d),
  };
}
function nv(n, i, e, t) {
  return Math.max(n[e], i[e]) + Math.max(n[t], i[t]);
}
function Nv(n, i) {
  (n.top = Math.max(n.top, i.top)),
    (n.left = Math.max(n.left, i.left)),
    (n.bottom = Math.max(n.bottom, i.bottom)),
    (n.right = Math.max(n.right, i.right));
}
function WM(n, i, e, t) {
  let { pos: r, box: o } = e,
    a = n.maxPadding;
  if (!ht(r)) {
    e.size && (n[r] -= e.size);
    let S = t[e.stack] || { size: 0, count: 1 };
    (S.size = Math.max(S.size, e.horizontal ? o.height : o.width)),
      (e.size = S.size / S.count),
      (n[r] += e.size);
  }
  o.getPadding && Nv(a, o.getPadding());
  let d = Math.max(0, i.outerWidth - nv(a, n, "left", "right")),
    u = Math.max(0, i.outerHeight - nv(a, n, "top", "bottom")),
    f = d !== n.w,
    v = u !== n.h;
  return (
    (n.w = d),
    (n.h = u),
    e.horizontal ? { same: f, other: v } : { same: v, other: f }
  );
}
function GM(n) {
  let i = n.maxPadding;
  function e(t) {
    let r = Math.max(i[t] - n[t], 0);
    return (n[t] += r), r;
  }
  (n.y += e("top")), (n.x += e("left")), e("right"), e("bottom");
}
function YM(n, i) {
  let e = i.maxPadding;
  function t(r) {
    let o = { left: 0, top: 0, right: 0, bottom: 0 };
    return (
      r.forEach((a) => {
        o[a] = Math.max(i[a], e[a]);
      }),
      o
    );
  }
  return t(n ? ["left", "right"] : ["top", "bottom"]);
}
function il(n, i, e, t) {
  let r = [],
    o,
    a,
    d,
    u,
    f,
    v;
  for (o = 0, a = n.length, f = 0; o < a; ++o) {
    (d = n[o]),
      (u = d.box),
      u.update(d.width || i.w, d.height || i.h, YM(d.horizontal, i));
    let { same: S, other: T } = WM(i, e, d, t);
    (f |= S && r.length), (v = v || T), u.fullSize || r.push(d);
  }
  return (f && il(r, i, e, t)) || v;
}
function hd(n, i, e, t, r) {
  (n.top = e),
    (n.left = i),
    (n.right = i + t),
    (n.bottom = e + r),
    (n.width = t),
    (n.height = r);
}
function rv(n, i, e, t) {
  let r = e.padding,
    { x: o, y: a } = i;
  for (let d of n) {
    let u = d.box,
      f = t[d.stack] || { count: 1, placed: 0, weight: 1 },
      v = d.stackWeight / f.weight || 1;
    if (d.horizontal) {
      let S = i.w * v,
        T = f.size || u.height;
      $s(f.start) && (a = f.start),
        u.fullSize
          ? hd(u, r.left, a, e.outerWidth - r.right - r.left, T)
          : hd(u, i.left + f.placed, a, S, T),
        (f.start = a),
        (f.placed += S),
        (a = u.bottom);
    } else {
      let S = i.h * v,
        T = f.size || u.width;
      $s(f.start) && (o = f.start),
        u.fullSize
          ? hd(u, o, r.top, T, e.outerHeight - r.bottom - r.top)
          : hd(u, o, i.top + f.placed, T, S),
        (f.start = o),
        (f.placed += S),
        (o = u.right);
    }
  }
  (i.x = o), (i.y = a);
}
var pd = {
    addBox(n, i) {
      n.boxes || (n.boxes = []),
        (i.fullSize = i.fullSize || !1),
        (i.position = i.position || "top"),
        (i.weight = i.weight || 0),
        (i._layers =
          i._layers ||
          function () {
            return [
              {
                z: 0,
                draw(e) {
                  i.draw(e);
                },
              },
            ];
          }),
        n.boxes.push(i);
    },
    removeBox(n, i) {
      let e = n.boxes ? n.boxes.indexOf(i) : -1;
      e !== -1 && n.boxes.splice(e, 1);
    },
    configure(n, i, e) {
      (i.fullSize = e.fullSize),
        (i.position = e.position),
        (i.weight = e.weight);
    },
    update(n, i, e, t) {
      if (!n) return;
      let r = Xn(n.options.layout.padding),
        o = Math.max(i - r.width, 0),
        a = Math.max(e - r.height, 0),
        d = $M(n.boxes),
        u = d.vertical,
        f = d.horizontal;
      bi(n.boxes, (L) => {
        typeof L.beforeLayout == "function" && L.beforeLayout();
      });
      let v =
          u.reduce(
            (L, E) =>
              E.box.options && E.box.options.display === !1 ? L : L + 1,
            0
          ) || 1,
        S = Object.freeze({
          outerWidth: i,
          outerHeight: e,
          padding: r,
          availableWidth: o,
          availableHeight: a,
          vBoxMaxWidth: o / 2 / v,
          hBoxMaxHeight: a / 2,
        }),
        T = Object.assign({}, r);
      Nv(T, Xn(t));
      let M = Object.assign(
          { maxPadding: T, w: o, h: a, x: r.left, y: r.top },
          r
        ),
        I = zM(u.concat(f), S);
      il(d.fullSize, M, S, I),
        il(u, M, S, I),
        il(f, M, S, I) && il(u, M, S, I),
        GM(M),
        rv(d.leftAndTop, M, S, I),
        (M.x += M.w),
        (M.y += M.h),
        rv(d.rightAndBottom, M, S, I),
        (n.chartArea = {
          left: M.left,
          top: M.top,
          right: M.left + M.w,
          bottom: M.top + M.h,
          height: M.h,
          width: M.w,
        }),
        bi(d.chartArea, (L) => {
          let E = L.box;
          Object.assign(E, n.chartArea),
            E.update(M.w, M.h, { left: 0, top: 0, right: 0, bottom: 0 });
        });
    },
  },
  vd = class {
    acquireContext(i, e) {}
    releaseContext(i) {
      return !1;
    }
    addEventListener(i, e, t) {}
    removeEventListener(i, e, t) {}
    getDevicePixelRatio() {
      return 1;
    }
    getMaximumSize(i, e, t, r) {
      return (
        (e = Math.max(0, e || i.width)),
        (t = t || i.height),
        { width: e, height: Math.max(0, r ? Math.floor(e / r) : t) }
      );
    }
    isAttached(i) {
      return !0;
    }
    updateConfig(i) {}
  },
  om = class extends vd {
    acquireContext(i) {
      return (i && i.getContext && i.getContext("2d")) || null;
    }
    updateConfig(i) {
      i.options.animation = !1;
    }
  },
  _d = "$chartjs",
  qM = {
    touchstart: "mousedown",
    touchmove: "mousemove",
    touchend: "mouseup",
    pointerenter: "mouseenter",
    pointerdown: "mousedown",
    pointermove: "mousemove",
    pointerup: "mouseup",
    pointerleave: "mouseout",
    pointerout: "mouseout",
  },
  ov = (n) => n === null || n === "";
function KM(n, i) {
  let e = n.style,
    t = n.getAttribute("height"),
    r = n.getAttribute("width");
  if (
    ((n[_d] = {
      initial: {
        height: t,
        width: r,
        style: { display: e.display, height: e.height, width: e.width },
      },
    }),
    (e.display = e.display || "block"),
    (e.boxSizing = e.boxSizing || "border-box"),
    ov(r))
  ) {
    let o = qp(n, "width");
    o !== void 0 && (n.width = o);
  }
  if (ov(t))
    if (n.style.height === "") n.height = n.width / (i || 2);
    else {
      let o = qp(n, "height");
      o !== void 0 && (n.height = o);
    }
  return n;
}
var Lv = Yb ? { passive: !0 } : !1;
function QM(n, i, e) {
  n && n.addEventListener(i, e, Lv);
}
function XM(n, i, e) {
  n && n.canvas && n.canvas.removeEventListener(i, e, Lv);
}
function ZM(n, i) {
  let e = qM[n.type] || n.type,
    { x: t, y: r } = Gr(n, i);
  return {
    type: e,
    chart: i,
    native: n,
    x: t !== void 0 ? t : null,
    y: r !== void 0 ? r : null,
  };
}
function yd(n, i) {
  for (let e of n) if (e === i || e.contains(i)) return !0;
}
function JM(n, i, e) {
  let t = n.canvas,
    r = new MutationObserver((o) => {
      let a = !1;
      for (let d of o)
        (a = a || yd(d.addedNodes, t)), (a = a && !yd(d.removedNodes, t));
      a && e();
    });
  return r.observe(document, { childList: !0, subtree: !0 }), r;
}
function e2(n, i, e) {
  let t = n.canvas,
    r = new MutationObserver((o) => {
      let a = !1;
      for (let d of o)
        (a = a || yd(d.removedNodes, t)), (a = a && !yd(d.addedNodes, t));
      a && e();
    });
  return r.observe(document, { childList: !0, subtree: !0 }), r;
}
var nl = new Map(),
  av = 0;
function Vv() {
  let n = window.devicePixelRatio;
  n !== av &&
    ((av = n),
    nl.forEach((i, e) => {
      e.currentDevicePixelRatio !== n && i();
    }));
}
function t2(n, i) {
  nl.size || window.addEventListener("resize", Vv), nl.set(n, i);
}
function i2(n) {
  nl.delete(n), nl.size || window.removeEventListener("resize", Vv);
}
function n2(n, i, e) {
  let t = n.canvas,
    r = t && dd(t);
  if (!r) return;
  let o = Lp((d, u) => {
      let f = r.clientWidth;
      e(d, u), f < r.clientWidth && e();
    }, window),
    a = new ResizeObserver((d) => {
      let u = d[0],
        f = u.contentRect.width,
        v = u.contentRect.height;
      (f === 0 && v === 0) || o(f, v);
    });
  return a.observe(r), t2(n, o), a;
}
function em(n, i, e) {
  e && e.disconnect(), i === "resize" && i2(n);
}
function r2(n, i, e) {
  let t = n.canvas,
    r = Lp((o) => {
      n.ctx !== null && e(ZM(o, n));
    }, n);
  return QM(t, i, r), r;
}
var am = class extends vd {
  acquireContext(i, e) {
    let t = i && i.getContext && i.getContext("2d");
    return t && t.canvas === i ? (KM(i, e), t) : null;
  }
  releaseContext(i) {
    let e = i.canvas;
    if (!e[_d]) return !1;
    let t = e[_d].initial;
    ["height", "width"].forEach((o) => {
      let a = t[o];
      Ot(a) ? e.removeAttribute(o) : e.setAttribute(o, a);
    });
    let r = t.style || {};
    return (
      Object.keys(r).forEach((o) => {
        e.style[o] = r[o];
      }),
      (e.width = e.width),
      delete e[_d],
      !0
    );
  }
  addEventListener(i, e, t) {
    this.removeEventListener(i, e);
    let r = i.$proxies || (i.$proxies = {}),
      a = { attach: JM, detach: e2, resize: n2 }[e] || r2;
    r[e] = a(i, e, t);
  }
  removeEventListener(i, e) {
    let t = i.$proxies || (i.$proxies = {}),
      r = t[e];
    if (!r) return;
    (({ attach: em, detach: em, resize: em })[e] || XM)(i, e, r),
      (t[e] = void 0);
  }
  getDevicePixelRatio() {
    return window.devicePixelRatio;
  }
  getMaximumSize(i, e, t, r) {
    return Gb(i, e, t, r);
  }
  isAttached(i) {
    let e = i && dd(i);
    return !!(e && e.isConnected);
  }
};
function o2(n) {
  return !cd() || (typeof OffscreenCanvas < "u" && n instanceof OffscreenCanvas)
    ? om
    : am;
}
var xd = class {
  static defaults = {};
  static defaultRoutes = void 0;
  x;
  y;
  active = !1;
  options;
  $animations;
  tooltipPosition(i) {
    let { x: e, y: t } = this.getProps(["x", "y"], i);
    return { x: e, y: t };
  }
  hasValue() {
    return Ys(this.x) && Ys(this.y);
  }
  getProps(i, e) {
    let t = this.$animations;
    if (!e || !t) return this;
    let r = {};
    return (
      i.forEach((o) => {
        r[o] = t[o] && t[o].active() ? t[o]._to : this[o];
      }),
      r
    );
  }
};
function a2(n, i) {
  let e = n.options.ticks,
    t = s2(n),
    r = Math.min(e.maxTicksLimit || t, t),
    o = e.major.enabled ? c2(i) : [],
    a = o.length,
    d = o[0],
    u = o[a - 1],
    f = [];
  if (a > r) return d2(i, f, o, a / r), f;
  let v = l2(o, i, r);
  if (a > 0) {
    let S,
      T,
      M = a > 1 ? Math.round((u - d) / (a - 1)) : null;
    for (md(i, f, v, Ot(M) ? 0 : d - M, d), S = 0, T = a - 1; S < T; S++)
      md(i, f, v, o[S], o[S + 1]);
    return md(i, f, v, u, Ot(M) ? i.length : u + M), f;
  }
  return md(i, f, v), f;
}
function s2(n) {
  let i = n.options.offset,
    e = n._tickSize(),
    t = n._length / e + (i ? 0 : 1),
    r = n._maxLength / e;
  return Math.floor(Math.min(t, r));
}
function l2(n, i, e) {
  let t = u2(n),
    r = i.length / e;
  if (!t) return Math.max(r, 1);
  let o = Sb(t);
  for (let a = 0, d = o.length - 1; a < d; a++) {
    let u = o[a];
    if (u > r) return u;
  }
  return Math.max(r, 1);
}
function c2(n) {
  let i = [],
    e,
    t;
  for (e = 0, t = n.length; e < t; e++) n[e].major && i.push(e);
  return i;
}
function d2(n, i, e, t) {
  let r = 0,
    o = e[0],
    a;
  for (t = Math.ceil(t), a = 0; a < n.length; a++)
    a === o && (i.push(n[a]), r++, (o = e[r * t]));
}
function md(n, i, e, t, r) {
  let o = Gt(t, 0),
    a = Math.min(Gt(r, n.length), n.length),
    d = 0,
    u,
    f,
    v;
  for (
    e = Math.ceil(e), r && ((u = r - t), (e = u / Math.floor(u / e))), v = o;
    v < 0;

  )
    d++, (v = Math.round(o + d * e));
  for (f = Math.max(o, 0); f < a; f++)
    f === v && (i.push(n[f]), d++, (v = Math.round(o + d * e)));
}
function u2(n) {
  let i = n.length,
    e,
    t;
  if (i < 2) return !1;
  for (t = n[0], e = 1; e < i; ++e) if (n[e] - n[e - 1] !== t) return !1;
  return t;
}
var h2 = (n) => (n === "left" ? "right" : n === "right" ? "left" : n),
  sv = (n, i, e) => (i === "top" || i === "left" ? n[i] + e : n[i] - e),
  lv = (n, i) => Math.min(i || n, n);
function cv(n, i) {
  let e = [],
    t = n.length / i,
    r = n.length,
    o = 0;
  for (; o < r; o += t) e.push(n[Math.floor(o)]);
  return e;
}
function p2(n, i, e) {
  let t = n.ticks.length,
    r = Math.min(i, t - 1),
    o = n._startPixel,
    a = n._endPixel,
    d = 1e-6,
    u = n.getPixelForTick(r),
    f;
  if (
    !(
      e &&
      (t === 1
        ? (f = Math.max(u - o, a - u))
        : i === 0
        ? (f = (n.getPixelForTick(1) - u) / 2)
        : (f = (u - n.getPixelForTick(r - 1)) / 2),
      (u += r < i ? f : -f),
      u < o - d || u > a + d)
    )
  )
    return u;
}
function m2(n, i) {
  bi(n, (e) => {
    let t = e.gc,
      r = t.length / 2,
      o;
    if (r > i) {
      for (o = 0; o < r; ++o) delete e.data[t[o]];
      t.splice(0, r);
    }
  });
}
function el(n) {
  return n.drawTicks ? n.tickLength : 0;
}
function dv(n, i) {
  if (!n.display) return 0;
  let e = xo(n.font, i),
    t = Xn(n.padding);
  return (Yt(n.text) ? n.text.length : 1) * e.lineHeight + t.height;
}
function f2(n, i) {
  return Co(n, { scale: i, type: "scale" });
}
function g2(n, i, e) {
  return Co(n, { tick: e, index: i, type: "tick" });
}
function _2(n, i, e) {
  let t = Fb(n);
  return ((e && i !== "right") || (!e && i === "right")) && (t = h2(t)), t;
}
function b2(n, i, e, t) {
  let { top: r, left: o, bottom: a, right: d, chart: u } = n,
    { chartArea: f, scales: v } = u,
    S = 0,
    T,
    M,
    I,
    L = a - r,
    E = d - o;
  if (n.isHorizontal()) {
    if (((M = Vp(t, o, d)), ht(e))) {
      let F = Object.keys(e)[0],
        ee = e[F];
      I = v[F].getPixelForValue(ee) + L - i;
    } else
      e === "center" ? (I = (f.bottom + f.top) / 2 + L - i) : (I = sv(n, e, i));
    T = d - o;
  } else {
    if (ht(e)) {
      let F = Object.keys(e)[0],
        ee = e[F];
      M = v[F].getPixelForValue(ee) - E + i;
    } else
      e === "center" ? (M = (f.left + f.right) / 2 - E + i) : (M = sv(n, e, i));
    (I = Vp(t, a, r)), (S = e === "left" ? -Qn : Qn);
  }
  return { titleX: M, titleY: I, maxWidth: T, rotation: S };
}
var ba = class n extends xd {
    constructor(i) {
      super(),
        (this.id = i.id),
        (this.type = i.type),
        (this.options = void 0),
        (this.ctx = i.ctx),
        (this.chart = i.chart),
        (this.top = void 0),
        (this.bottom = void 0),
        (this.left = void 0),
        (this.right = void 0),
        (this.width = void 0),
        (this.height = void 0),
        (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
        (this.maxWidth = void 0),
        (this.maxHeight = void 0),
        (this.paddingTop = void 0),
        (this.paddingBottom = void 0),
        (this.paddingLeft = void 0),
        (this.paddingRight = void 0),
        (this.axis = void 0),
        (this.labelRotation = void 0),
        (this.min = void 0),
        (this.max = void 0),
        (this._range = void 0),
        (this.ticks = []),
        (this._gridLineItems = null),
        (this._labelItems = null),
        (this._labelSizes = null),
        (this._length = 0),
        (this._maxLength = 0),
        (this._longestTextCache = {}),
        (this._startPixel = void 0),
        (this._endPixel = void 0),
        (this._reversePixels = !1),
        (this._userMax = void 0),
        (this._userMin = void 0),
        (this._suggestedMax = void 0),
        (this._suggestedMin = void 0),
        (this._ticksLength = 0),
        (this._borderValue = 0),
        (this._cache = {}),
        (this._dataLimitsCached = !1),
        (this.$context = void 0);
    }
    init(i) {
      (this.options = i.setContext(this.getContext())),
        (this.axis = i.axis),
        (this._userMin = this.parse(i.min)),
        (this._userMax = this.parse(i.max)),
        (this._suggestedMin = this.parse(i.suggestedMin)),
        (this._suggestedMax = this.parse(i.suggestedMax));
    }
    parse(i, e) {
      return i;
    }
    getUserBounds() {
      let {
        _userMin: i,
        _userMax: e,
        _suggestedMin: t,
        _suggestedMax: r,
      } = this;
      return (
        (i = ji(i, Number.POSITIVE_INFINITY)),
        (e = ji(e, Number.NEGATIVE_INFINITY)),
        (t = ji(t, Number.POSITIVE_INFINITY)),
        (r = ji(r, Number.NEGATIVE_INFINITY)),
        { min: ji(i, t), max: ji(e, r), minDefined: di(i), maxDefined: di(e) }
      );
    }
    getMinMax(i) {
      let {
          min: e,
          max: t,
          minDefined: r,
          maxDefined: o,
        } = this.getUserBounds(),
        a;
      if (r && o) return { min: e, max: t };
      let d = this.getMatchingVisibleMetas();
      for (let u = 0, f = d.length; u < f; ++u)
        (a = d[u].controller.getMinMax(this, i)),
          r || (e = Math.min(e, a.min)),
          o || (t = Math.max(t, a.max));
      return (
        (e = o && e > t ? t : e),
        (t = r && e > t ? e : t),
        { min: ji(e, ji(t, e)), max: ji(t, ji(e, t)) }
      );
    }
    getPadding() {
      return {
        left: this.paddingLeft || 0,
        top: this.paddingTop || 0,
        right: this.paddingRight || 0,
        bottom: this.paddingBottom || 0,
      };
    }
    getTicks() {
      return this.ticks;
    }
    getLabels() {
      let i = this.chart.data;
      return (
        this.options.labels ||
        (this.isHorizontal() ? i.xLabels : i.yLabels) ||
        i.labels ||
        []
      );
    }
    getLabelItems(i = this.chart.chartArea) {
      return (
        this._labelItems || (this._labelItems = this._computeLabelItems(i))
      );
    }
    beforeLayout() {
      (this._cache = {}), (this._dataLimitsCached = !1);
    }
    beforeUpdate() {
      Ht(this.options.beforeUpdate, [this]);
    }
    update(i, e, t) {
      let { beginAtZero: r, grace: o, ticks: a } = this.options,
        d = a.sampleSize;
      this.beforeUpdate(),
        (this.maxWidth = i),
        (this.maxHeight = e),
        (this._margins = t =
          Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, t)),
        (this.ticks = null),
        (this._labelSizes = null),
        (this._gridLineItems = null),
        (this._labelItems = null),
        this.beforeSetDimensions(),
        this.setDimensions(),
        this.afterSetDimensions(),
        (this._maxLength = this.isHorizontal()
          ? this.width + t.left + t.right
          : this.height + t.top + t.bottom),
        this._dataLimitsCached ||
          (this.beforeDataLimits(),
          this.determineDataLimits(),
          this.afterDataLimits(),
          (this._range = Ub(this, o, r)),
          (this._dataLimitsCached = !0)),
        this.beforeBuildTicks(),
        (this.ticks = this.buildTicks() || []),
        this.afterBuildTicks();
      let u = d < this.ticks.length;
      this._convertTicksToLabels(u ? cv(this.ticks, d) : this.ticks),
        this.configure(),
        this.beforeCalculateLabelRotation(),
        this.calculateLabelRotation(),
        this.afterCalculateLabelRotation(),
        a.display &&
          (a.autoSkip || a.source === "auto") &&
          ((this.ticks = a2(this, this.ticks)),
          (this._labelSizes = null),
          this.afterAutoSkip()),
        u && this._convertTicksToLabels(this.ticks),
        this.beforeFit(),
        this.fit(),
        this.afterFit(),
        this.afterUpdate();
    }
    configure() {
      let i = this.options.reverse,
        e,
        t;
      this.isHorizontal()
        ? ((e = this.left), (t = this.right))
        : ((e = this.top), (t = this.bottom), (i = !i)),
        (this._startPixel = e),
        (this._endPixel = t),
        (this._reversePixels = i),
        (this._length = t - e),
        (this._alignToPixels = this.options.alignToPixels);
    }
    afterUpdate() {
      Ht(this.options.afterUpdate, [this]);
    }
    beforeSetDimensions() {
      Ht(this.options.beforeSetDimensions, [this]);
    }
    setDimensions() {
      this.isHorizontal()
        ? ((this.width = this.maxWidth),
          (this.left = 0),
          (this.right = this.width))
        : ((this.height = this.maxHeight),
          (this.top = 0),
          (this.bottom = this.height)),
        (this.paddingLeft = 0),
        (this.paddingTop = 0),
        (this.paddingRight = 0),
        (this.paddingBottom = 0);
    }
    afterSetDimensions() {
      Ht(this.options.afterSetDimensions, [this]);
    }
    _callHooks(i) {
      this.chart.notifyPlugins(i, this.getContext()),
        Ht(this.options[i], [this]);
    }
    beforeDataLimits() {
      this._callHooks("beforeDataLimits");
    }
    determineDataLimits() {}
    afterDataLimits() {
      this._callHooks("afterDataLimits");
    }
    beforeBuildTicks() {
      this._callHooks("beforeBuildTicks");
    }
    buildTicks() {
      return [];
    }
    afterBuildTicks() {
      this._callHooks("afterBuildTicks");
    }
    beforeTickToLabelConversion() {
      Ht(this.options.beforeTickToLabelConversion, [this]);
    }
    generateTickLabels(i) {
      let e = this.options.ticks,
        t,
        r,
        o;
      for (t = 0, r = i.length; t < r; t++)
        (o = i[t]), (o.label = Ht(e.callback, [o.value, t, i], this));
    }
    afterTickToLabelConversion() {
      Ht(this.options.afterTickToLabelConversion, [this]);
    }
    beforeCalculateLabelRotation() {
      Ht(this.options.beforeCalculateLabelRotation, [this]);
    }
    calculateLabelRotation() {
      let i = this.options,
        e = i.ticks,
        t = lv(this.ticks.length, i.ticks.maxTicksLimit),
        r = e.minRotation || 0,
        o = e.maxRotation,
        a = r,
        d,
        u,
        f;
      if (
        !this._isVisible() ||
        !e.display ||
        r >= o ||
        t <= 1 ||
        !this.isHorizontal()
      ) {
        this.labelRotation = r;
        return;
      }
      let v = this._getLabelSizes(),
        S = v.widest.width,
        T = v.highest.height,
        M = zr(this.chart.width - S, 0, this.maxWidth);
      (d = i.offset ? this.maxWidth / t : M / (t - 1)),
        S + 6 > d &&
          ((d = M / (t - (i.offset ? 0.5 : 1))),
          (u =
            this.maxHeight -
            el(i.grid) -
            e.padding -
            dv(i.title, this.chart.options.font)),
          (f = Math.sqrt(S * S + T * T)),
          (a = nd(
            Math.min(
              Math.asin(zr((v.highest.height + 6) / d, -1, 1)),
              Math.asin(zr(u / f, -1, 1)) - Math.asin(zr(T / f, -1, 1))
            )
          )),
          (a = Math.max(r, Math.min(o, a)))),
        (this.labelRotation = a);
    }
    afterCalculateLabelRotation() {
      Ht(this.options.afterCalculateLabelRotation, [this]);
    }
    afterAutoSkip() {}
    beforeFit() {
      Ht(this.options.beforeFit, [this]);
    }
    fit() {
      let i = { width: 0, height: 0 },
        {
          chart: e,
          options: { ticks: t, title: r, grid: o },
        } = this,
        a = this._isVisible(),
        d = this.isHorizontal();
      if (a) {
        let u = dv(r, e.options.font);
        if (
          (d
            ? ((i.width = this.maxWidth), (i.height = el(o) + u))
            : ((i.height = this.maxHeight), (i.width = el(o) + u)),
          t.display && this.ticks.length)
        ) {
          let {
              first: f,
              last: v,
              widest: S,
              highest: T,
            } = this._getLabelSizes(),
            M = t.padding * 2,
            I = br(this.labelRotation),
            L = Math.cos(I),
            E = Math.sin(I);
          if (d) {
            let F = t.mirror ? 0 : E * S.width + L * T.height;
            i.height = Math.min(this.maxHeight, i.height + F + M);
          } else {
            let F = t.mirror ? 0 : L * S.width + E * T.height;
            i.width = Math.min(this.maxWidth, i.width + F + M);
          }
          this._calculatePadding(f, v, E, L);
        }
      }
      this._handleMargins(),
        d
          ? ((this.width = this._length =
              e.width - this._margins.left - this._margins.right),
            (this.height = i.height))
          : ((this.width = i.width),
            (this.height = this._length =
              e.height - this._margins.top - this._margins.bottom));
    }
    _calculatePadding(i, e, t, r) {
      let {
          ticks: { align: o, padding: a },
          position: d,
        } = this.options,
        u = this.labelRotation !== 0,
        f = d !== "top" && this.axis === "x";
      if (this.isHorizontal()) {
        let v = this.getPixelForTick(0) - this.left,
          S = this.right - this.getPixelForTick(this.ticks.length - 1),
          T = 0,
          M = 0;
        u
          ? f
            ? ((T = r * i.width), (M = t * e.height))
            : ((T = t * i.height), (M = r * e.width))
          : o === "start"
          ? (M = e.width)
          : o === "end"
          ? (T = i.width)
          : o !== "inner" && ((T = i.width / 2), (M = e.width / 2)),
          (this.paddingLeft = Math.max(
            ((T - v + a) * this.width) / (this.width - v),
            0
          )),
          (this.paddingRight = Math.max(
            ((M - S + a) * this.width) / (this.width - S),
            0
          ));
      } else {
        let v = e.height / 2,
          S = i.height / 2;
        o === "start"
          ? ((v = 0), (S = i.height))
          : o === "end" && ((v = e.height), (S = 0)),
          (this.paddingTop = v + a),
          (this.paddingBottom = S + a);
      }
    }
    _handleMargins() {
      this._margins &&
        ((this._margins.left = Math.max(this.paddingLeft, this._margins.left)),
        (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
        (this._margins.right = Math.max(
          this.paddingRight,
          this._margins.right
        )),
        (this._margins.bottom = Math.max(
          this.paddingBottom,
          this._margins.bottom
        )));
    }
    afterFit() {
      Ht(this.options.afterFit, [this]);
    }
    isHorizontal() {
      let { axis: i, position: e } = this.options;
      return e === "top" || e === "bottom" || i === "x";
    }
    isFullSize() {
      return this.options.fullSize;
    }
    _convertTicksToLabels(i) {
      this.beforeTickToLabelConversion(), this.generateTickLabels(i);
      let e, t;
      for (e = 0, t = i.length; e < t; e++)
        Ot(i[e].label) && (i.splice(e, 1), t--, e--);
      this.afterTickToLabelConversion();
    }
    _getLabelSizes() {
      let i = this._labelSizes;
      if (!i) {
        let e = this.options.ticks.sampleSize,
          t = this.ticks;
        e < t.length && (t = cv(t, e)),
          (this._labelSizes = i =
            this._computeLabelSizes(
              t,
              t.length,
              this.options.ticks.maxTicksLimit
            ));
      }
      return i;
    }
    _computeLabelSizes(i, e, t) {
      let { ctx: r, _longestTextCache: o } = this,
        a = [],
        d = [],
        u = Math.floor(e / lv(e, t)),
        f = 0,
        v = 0,
        S,
        T,
        M,
        I,
        L,
        E,
        F,
        ee,
        re,
        ge,
        Pe;
      for (S = 0; S < e; S += u) {
        if (
          ((I = i[S].label),
          (L = this._resolveTickFontOptions(S)),
          (r.font = E = L.string),
          (F = o[E] = o[E] || { data: {}, gc: [] }),
          (ee = L.lineHeight),
          (re = ge = 0),
          !Ot(I) && !Yt(I))
        )
          (re = Us(r, F.data, F.gc, re, I)), (ge = ee);
        else if (Yt(I))
          for (T = 0, M = I.length; T < M; ++T)
            (Pe = I[T]),
              !Ot(Pe) &&
                !Yt(Pe) &&
                ((re = Us(r, F.data, F.gc, re, Pe)), (ge += ee));
        a.push(re), d.push(ge), (f = Math.max(re, f)), (v = Math.max(ge, v));
      }
      m2(o, e);
      let b = a.indexOf(f),
        Ue = d.indexOf(v),
        we = (Ge) => ({ width: a[Ge] || 0, height: d[Ge] || 0 });
      return {
        first: we(0),
        last: we(e - 1),
        widest: we(b),
        highest: we(Ue),
        widths: a,
        heights: d,
      };
    }
    getLabelForValue(i) {
      return i;
    }
    getPixelForValue(i, e) {
      return NaN;
    }
    getValueForPixel(i) {}
    getPixelForTick(i) {
      let e = this.ticks;
      return i < 0 || i > e.length - 1
        ? null
        : this.getPixelForValue(e[i].value);
    }
    getPixelForDecimal(i) {
      this._reversePixels && (i = 1 - i);
      let e = this._startPixel + i * this._length;
      return Eb(this._alignToPixels ? Wr(this.chart, e, 0) : e);
    }
    getDecimalForPixel(i) {
      let e = (i - this._startPixel) / this._length;
      return this._reversePixels ? 1 - e : e;
    }
    getBasePixel() {
      return this.getPixelForValue(this.getBaseValue());
    }
    getBaseValue() {
      let { min: i, max: e } = this;
      return i < 0 && e < 0 ? e : i > 0 && e > 0 ? i : 0;
    }
    getContext(i) {
      let e = this.ticks || [];
      if (i >= 0 && i < e.length) {
        let t = e[i];
        return t.$context || (t.$context = g2(this.getContext(), i, t));
      }
      return (
        this.$context || (this.$context = f2(this.chart.getContext(), this))
      );
    }
    _tickSize() {
      let i = this.options.ticks,
        e = br(this.labelRotation),
        t = Math.abs(Math.cos(e)),
        r = Math.abs(Math.sin(e)),
        o = this._getLabelSizes(),
        a = i.autoSkipPadding || 0,
        d = o ? o.widest.width + a : 0,
        u = o ? o.highest.height + a : 0;
      return this.isHorizontal()
        ? u * t > d * r
          ? d / t
          : u / r
        : u * r < d * t
        ? u / t
        : d / r;
    }
    _isVisible() {
      let i = this.options.display;
      return i !== "auto" ? !!i : this.getMatchingVisibleMetas().length > 0;
    }
    _computeGridLineItems(i) {
      let e = this.axis,
        t = this.chart,
        r = this.options,
        { grid: o, position: a, border: d } = r,
        u = o.offset,
        f = this.isHorizontal(),
        S = this.ticks.length + (u ? 1 : 0),
        T = el(o),
        M = [],
        I = d.setContext(this.getContext()),
        L = I.display ? I.width : 0,
        E = L / 2,
        F = function (xt) {
          return Wr(t, xt, L);
        },
        ee,
        re,
        ge,
        Pe,
        b,
        Ue,
        we,
        Ge,
        yt,
        Qt,
        Be,
        vi;
      if (a === "top")
        (ee = F(this.bottom)),
          (Ue = this.bottom - T),
          (Ge = ee - E),
          (Qt = F(i.top) + E),
          (vi = i.bottom);
      else if (a === "bottom")
        (ee = F(this.top)),
          (Qt = i.top),
          (vi = F(i.bottom) - E),
          (Ue = ee + E),
          (Ge = this.top + T);
      else if (a === "left")
        (ee = F(this.right)),
          (b = this.right - T),
          (we = ee - E),
          (yt = F(i.left) + E),
          (Be = i.right);
      else if (a === "right")
        (ee = F(this.left)),
          (yt = i.left),
          (Be = F(i.right) - E),
          (b = ee + E),
          (we = this.left + T);
      else if (e === "x") {
        if (a === "center") ee = F((i.top + i.bottom) / 2 + 0.5);
        else if (ht(a)) {
          let xt = Object.keys(a)[0],
            yi = a[xt];
          ee = F(this.chart.scales[xt].getPixelForValue(yi));
        }
        (Qt = i.top), (vi = i.bottom), (Ue = ee + E), (Ge = Ue + T);
      } else if (e === "y") {
        if (a === "center") ee = F((i.left + i.right) / 2);
        else if (ht(a)) {
          let xt = Object.keys(a)[0],
            yi = a[xt];
          ee = F(this.chart.scales[xt].getPixelForValue(yi));
        }
        (b = ee - E), (we = b - T), (yt = i.left), (Be = i.right);
      }
      let Pn = Gt(r.ticks.maxTicksLimit, S),
        Ft = Math.max(1, Math.ceil(S / Pn));
      for (re = 0; re < S; re += Ft) {
        let xt = this.getContext(re),
          yi = o.setContext(xt),
          _n = d.setContext(xt),
          Qr = yi.lineWidth,
          tr = yi.color,
          Xr = _n.dash || [],
          In = _n.dashOffset,
          Cr = yi.tickWidth,
          ir = yi.tickColor,
          Zr = yi.tickBorderDash || [],
          nr = yi.tickBorderDashOffset;
        (ge = p2(this, re, u)),
          ge !== void 0 &&
            ((Pe = Wr(t, ge, Qr)),
            f ? (b = we = yt = Be = Pe) : (Ue = Ge = Qt = vi = Pe),
            M.push({
              tx1: b,
              ty1: Ue,
              tx2: we,
              ty2: Ge,
              x1: yt,
              y1: Qt,
              x2: Be,
              y2: vi,
              width: Qr,
              color: tr,
              borderDash: Xr,
              borderDashOffset: In,
              tickWidth: Cr,
              tickColor: ir,
              tickBorderDash: Zr,
              tickBorderDashOffset: nr,
            }));
      }
      return (this._ticksLength = S), (this._borderValue = ee), M;
    }
    _computeLabelItems(i) {
      let e = this.axis,
        t = this.options,
        { position: r, ticks: o } = t,
        a = this.isHorizontal(),
        d = this.ticks,
        { align: u, crossAlign: f, padding: v, mirror: S } = o,
        T = el(t.grid),
        M = T + v,
        I = S ? -v : M,
        L = -br(this.labelRotation),
        E = [],
        F,
        ee,
        re,
        ge,
        Pe,
        b,
        Ue,
        we,
        Ge,
        yt,
        Qt,
        Be,
        vi = "middle";
      if (r === "top")
        (b = this.bottom - I), (Ue = this._getXAxisLabelAlignment());
      else if (r === "bottom")
        (b = this.top + I), (Ue = this._getXAxisLabelAlignment());
      else if (r === "left") {
        let Ft = this._getYAxisLabelAlignment(T);
        (Ue = Ft.textAlign), (Pe = Ft.x);
      } else if (r === "right") {
        let Ft = this._getYAxisLabelAlignment(T);
        (Ue = Ft.textAlign), (Pe = Ft.x);
      } else if (e === "x") {
        if (r === "center") b = (i.top + i.bottom) / 2 + M;
        else if (ht(r)) {
          let Ft = Object.keys(r)[0],
            xt = r[Ft];
          b = this.chart.scales[Ft].getPixelForValue(xt) + M;
        }
        Ue = this._getXAxisLabelAlignment();
      } else if (e === "y") {
        if (r === "center") Pe = (i.left + i.right) / 2 - M;
        else if (ht(r)) {
          let Ft = Object.keys(r)[0],
            xt = r[Ft];
          Pe = this.chart.scales[Ft].getPixelForValue(xt);
        }
        Ue = this._getYAxisLabelAlignment(T).textAlign;
      }
      e === "y" &&
        (u === "start" ? (vi = "top") : u === "end" && (vi = "bottom"));
      let Pn = this._getLabelSizes();
      for (F = 0, ee = d.length; F < ee; ++F) {
        (re = d[F]), (ge = re.label);
        let Ft = o.setContext(this.getContext(F));
        (we = this.getPixelForTick(F) + o.labelOffset),
          (Ge = this._resolveTickFontOptions(F)),
          (yt = Ge.lineHeight),
          (Qt = Yt(ge) ? ge.length : 1);
        let xt = Qt / 2,
          yi = Ft.color,
          _n = Ft.textStrokeColor,
          Qr = Ft.textStrokeWidth,
          tr = Ue;
        a
          ? ((Pe = we),
            Ue === "inner" &&
              (F === ee - 1
                ? (tr = this.options.reverse ? "left" : "right")
                : F === 0
                ? (tr = this.options.reverse ? "right" : "left")
                : (tr = "center")),
            r === "top"
              ? f === "near" || L !== 0
                ? (Be = -Qt * yt + yt / 2)
                : f === "center"
                ? (Be = -Pn.highest.height / 2 - xt * yt + yt)
                : (Be = -Pn.highest.height + yt / 2)
              : f === "near" || L !== 0
              ? (Be = yt / 2)
              : f === "center"
              ? (Be = Pn.highest.height / 2 - xt * yt)
              : (Be = Pn.highest.height - Qt * yt),
            S && (Be *= -1),
            L !== 0 && !Ft.showLabelBackdrop && (Pe += (yt / 2) * Math.sin(L)))
          : ((b = we), (Be = ((1 - Qt) * yt) / 2));
        let Xr;
        if (Ft.showLabelBackdrop) {
          let In = Xn(Ft.backdropPadding),
            Cr = Pn.heights[F],
            ir = Pn.widths[F],
            Zr = Be - In.top,
            nr = 0 - In.left;
          switch (vi) {
            case "middle":
              Zr -= Cr / 2;
              break;
            case "bottom":
              Zr -= Cr;
              break;
          }
          switch (Ue) {
            case "center":
              nr -= ir / 2;
              break;
            case "right":
              nr -= ir;
              break;
            case "inner":
              F === ee - 1 ? (nr -= ir) : F > 0 && (nr -= ir / 2);
              break;
          }
          Xr = {
            left: nr,
            top: Zr,
            width: ir + In.width,
            height: Cr + In.height,
            color: Ft.backdropColor,
          };
        }
        E.push({
          label: ge,
          font: Ge,
          textOffset: Be,
          options: {
            rotation: L,
            color: yi,
            strokeColor: _n,
            strokeWidth: Qr,
            textAlign: tr,
            textBaseline: vi,
            translation: [Pe, b],
            backdrop: Xr,
          },
        });
      }
      return E;
    }
    _getXAxisLabelAlignment() {
      let { position: i, ticks: e } = this.options;
      if (-br(this.labelRotation)) return i === "top" ? "left" : "right";
      let r = "center";
      return (
        e.align === "start"
          ? (r = "left")
          : e.align === "end"
          ? (r = "right")
          : e.align === "inner" && (r = "inner"),
        r
      );
    }
    _getYAxisLabelAlignment(i) {
      let {
          position: e,
          ticks: { crossAlign: t, mirror: r, padding: o },
        } = this.options,
        a = this._getLabelSizes(),
        d = i + o,
        u = a.widest.width,
        f,
        v;
      return (
        e === "left"
          ? r
            ? ((v = this.right + o),
              t === "near"
                ? (f = "left")
                : t === "center"
                ? ((f = "center"), (v += u / 2))
                : ((f = "right"), (v += u)))
            : ((v = this.right - d),
              t === "near"
                ? (f = "right")
                : t === "center"
                ? ((f = "center"), (v -= u / 2))
                : ((f = "left"), (v = this.left)))
          : e === "right"
          ? r
            ? ((v = this.left + o),
              t === "near"
                ? (f = "right")
                : t === "center"
                ? ((f = "center"), (v -= u / 2))
                : ((f = "left"), (v -= u)))
            : ((v = this.left + d),
              t === "near"
                ? (f = "left")
                : t === "center"
                ? ((f = "center"), (v += u / 2))
                : ((f = "right"), (v = this.right)))
          : (f = "right"),
        { textAlign: f, x: v }
      );
    }
    _computeLabelArea() {
      if (this.options.ticks.mirror) return;
      let i = this.chart,
        e = this.options.position;
      if (e === "left" || e === "right")
        return { top: 0, left: this.left, bottom: i.height, right: this.right };
      if (e === "top" || e === "bottom")
        return { top: this.top, left: 0, bottom: this.bottom, right: i.width };
    }
    drawBackground() {
      let {
        ctx: i,
        options: { backgroundColor: e },
        left: t,
        top: r,
        width: o,
        height: a,
      } = this;
      e && (i.save(), (i.fillStyle = e), i.fillRect(t, r, o, a), i.restore());
    }
    getLineWidthForValue(i) {
      let e = this.options.grid;
      if (!this._isVisible() || !e.display) return 0;
      let r = this.ticks.findIndex((o) => o.value === i);
      return r >= 0 ? e.setContext(this.getContext(r)).lineWidth : 0;
    }
    drawGrid(i) {
      let e = this.options.grid,
        t = this.ctx,
        r =
          this._gridLineItems ||
          (this._gridLineItems = this._computeGridLineItems(i)),
        o,
        a,
        d = (u, f, v) => {
          !v.width ||
            !v.color ||
            (t.save(),
            (t.lineWidth = v.width),
            (t.strokeStyle = v.color),
            t.setLineDash(v.borderDash || []),
            (t.lineDashOffset = v.borderDashOffset),
            t.beginPath(),
            t.moveTo(u.x, u.y),
            t.lineTo(f.x, f.y),
            t.stroke(),
            t.restore());
        };
      if (e.display)
        for (o = 0, a = r.length; o < a; ++o) {
          let u = r[o];
          e.drawOnChartArea && d({ x: u.x1, y: u.y1 }, { x: u.x2, y: u.y2 }, u),
            e.drawTicks &&
              d(
                { x: u.tx1, y: u.ty1 },
                { x: u.tx2, y: u.ty2 },
                {
                  color: u.tickColor,
                  width: u.tickWidth,
                  borderDash: u.tickBorderDash,
                  borderDashOffset: u.tickBorderDashOffset,
                }
              );
        }
    }
    drawBorder() {
      let {
          chart: i,
          ctx: e,
          options: { border: t, grid: r },
        } = this,
        o = t.setContext(this.getContext()),
        a = t.display ? o.width : 0;
      if (!a) return;
      let d = r.setContext(this.getContext(0)).lineWidth,
        u = this._borderValue,
        f,
        v,
        S,
        T;
      this.isHorizontal()
        ? ((f = Wr(i, this.left, a) - a / 2),
          (v = Wr(i, this.right, d) + d / 2),
          (S = T = u))
        : ((S = Wr(i, this.top, a) - a / 2),
          (T = Wr(i, this.bottom, d) + d / 2),
          (f = v = u)),
        e.save(),
        (e.lineWidth = o.width),
        (e.strokeStyle = o.color),
        e.beginPath(),
        e.moveTo(f, S),
        e.lineTo(v, T),
        e.stroke(),
        e.restore();
    }
    drawLabels(i) {
      if (!this.options.ticks.display) return;
      let t = this.ctx,
        r = this._computeLabelArea();
      r && Hp(t, r);
      let o = this.getLabelItems(i);
      for (let a of o) {
        let d = a.options,
          u = a.font,
          f = a.label,
          v = a.textOffset;
        Ks(t, f, 0, v, u, d);
      }
      r && Up(t);
    }
    drawTitle() {
      let {
        ctx: i,
        options: { position: e, title: t, reverse: r },
      } = this;
      if (!t.display) return;
      let o = xo(t.font),
        a = Xn(t.padding),
        d = t.align,
        u = o.lineHeight / 2;
      e === "bottom" || e === "center" || ht(e)
        ? ((u += a.bottom),
          Yt(t.text) && (u += o.lineHeight * (t.text.length - 1)))
        : (u += a.top);
      let {
        titleX: f,
        titleY: v,
        maxWidth: S,
        rotation: T,
      } = b2(this, u, e, d);
      Ks(i, t.text, 0, 0, o, {
        color: t.color,
        maxWidth: S,
        rotation: T,
        textAlign: _2(d, e, r),
        textBaseline: "middle",
        translation: [f, v],
      });
    }
    draw(i) {
      this._isVisible() &&
        (this.drawBackground(),
        this.drawGrid(i),
        this.drawBorder(),
        this.drawTitle(),
        this.drawLabels(i));
    }
    _layers() {
      let i = this.options,
        e = (i.ticks && i.ticks.z) || 0,
        t = Gt(i.grid && i.grid.z, -1),
        r = Gt(i.border && i.border.z, 0);
      return !this._isVisible() || this.draw !== n.prototype.draw
        ? [
            {
              z: e,
              draw: (o) => {
                this.draw(o);
              },
            },
          ]
        : [
            {
              z: t,
              draw: (o) => {
                this.drawBackground(), this.drawGrid(o), this.drawTitle();
              },
            },
            {
              z: r,
              draw: () => {
                this.drawBorder();
              },
            },
            {
              z: e,
              draw: (o) => {
                this.drawLabels(o);
              },
            },
          ];
    }
    getMatchingVisibleMetas(i) {
      let e = this.chart.getSortedVisibleDatasetMetas(),
        t = this.axis + "AxisID",
        r = [],
        o,
        a;
      for (o = 0, a = e.length; o < a; ++o) {
        let d = e[o];
        d[t] === this.id && (!i || d.type === i) && r.push(d);
      }
      return r;
    }
    _resolveTickFontOptions(i) {
      let e = this.options.ticks.setContext(this.getContext(i));
      return xo(e.font);
    }
    _maxDigits() {
      let i = this._resolveTickFontOptions(0).lineHeight;
      return (this.isHorizontal() ? this.width : this.height) / i;
    }
  },
  _a = class {
    constructor(i, e, t) {
      (this.type = i),
        (this.scope = e),
        (this.override = t),
        (this.items = Object.create(null));
    }
    isForType(i) {
      return Object.prototype.isPrototypeOf.call(
        this.type.prototype,
        i.prototype
      );
    }
    register(i) {
      let e = Object.getPrototypeOf(i),
        t;
      x2(e) && (t = this.register(e));
      let r = this.items,
        o = i.id,
        a = this.scope + "." + o;
      if (!o) throw new Error("class does not have id: " + i);
      return (
        o in r ||
          ((r[o] = i),
          v2(i, a, t),
          this.override && qt.override(i.id, i.overrides)),
        a
      );
    }
    get(i) {
      return this.items[i];
    }
    unregister(i) {
      let e = this.items,
        t = i.id,
        r = this.scope;
      t in e && delete e[t],
        r && t in qt[r] && (delete qt[r][t], this.override && delete $r[t]);
    }
  };
function v2(n, i, e) {
  let t = fa(Object.create(null), [e ? qt.get(e) : {}, qt.get(i), n.defaults]);
  qt.set(i, t),
    n.defaultRoutes && y2(i, n.defaultRoutes),
    n.descriptors && qt.describe(i, n.descriptors);
}
function y2(n, i) {
  Object.keys(i).forEach((e) => {
    let t = e.split("."),
      r = t.pop(),
      o = [n].concat(t).join("."),
      a = i[e].split("."),
      d = a.pop(),
      u = a.join(".");
    qt.route(o, r, u, d);
  });
}
function x2(n) {
  return "id" in n && "defaults" in n;
}
var sm = class {
    constructor() {
      (this.controllers = new _a(RM, "datasets", !0)),
        (this.elements = new _a(xd, "elements")),
        (this.plugins = new _a(Object, "plugins")),
        (this.scales = new _a(ba, "scales")),
        (this._typedRegistries = [
          this.controllers,
          this.scales,
          this.elements,
        ]);
    }
    add(...i) {
      this._each("register", i);
    }
    remove(...i) {
      this._each("unregister", i);
    }
    addControllers(...i) {
      this._each("register", i, this.controllers);
    }
    addElements(...i) {
      this._each("register", i, this.elements);
    }
    addPlugins(...i) {
      this._each("register", i, this.plugins);
    }
    addScales(...i) {
      this._each("register", i, this.scales);
    }
    getController(i) {
      return this._get(i, this.controllers, "controller");
    }
    getElement(i) {
      return this._get(i, this.elements, "element");
    }
    getPlugin(i) {
      return this._get(i, this.plugins, "plugin");
    }
    getScale(i) {
      return this._get(i, this.scales, "scale");
    }
    removeControllers(...i) {
      this._each("unregister", i, this.controllers);
    }
    removeElements(...i) {
      this._each("unregister", i, this.elements);
    }
    removePlugins(...i) {
      this._each("unregister", i, this.plugins);
    }
    removeScales(...i) {
      this._each("unregister", i, this.scales);
    }
    _each(i, e, t) {
      [...e].forEach((r) => {
        let o = t || this._getRegistryForType(r);
        t || o.isForType(r) || (o === this.plugins && r.id)
          ? this._exec(i, o, r)
          : bi(r, (a) => {
              let d = t || this._getRegistryForType(a);
              this._exec(i, d, a);
            });
      });
    }
    _exec(i, e, t) {
      let r = id(i);
      Ht(t["before" + r], [], t), e[i](t), Ht(t["after" + r], [], t);
    }
    _getRegistryForType(i) {
      for (let e = 0; e < this._typedRegistries.length; e++) {
        let t = this._typedRegistries[e];
        if (t.isForType(i)) return t;
      }
      return this.plugins;
    }
    _get(i, e, t) {
      let r = e.get(i);
      if (r === void 0)
        throw new Error('"' + i + '" is not a registered ' + t + ".");
      return r;
    }
  },
  Zn = new sm(),
  lm = class {
    constructor() {
      this._init = [];
    }
    notify(i, e, t, r) {
      e === "beforeInit" &&
        ((this._init = this._createDescriptors(i, !0)),
        this._notify(this._init, i, "install"));
      let o = r ? this._descriptors(i).filter(r) : this._descriptors(i),
        a = this._notify(o, i, e, t);
      return (
        e === "afterDestroy" &&
          (this._notify(o, i, "stop"),
          this._notify(this._init, i, "uninstall")),
        a
      );
    }
    _notify(i, e, t, r) {
      r = r || {};
      for (let o of i) {
        let a = o.plugin,
          d = a[t],
          u = [e, r, o.options];
        if (Ht(d, u, a) === !1 && r.cancelable) return !1;
      }
      return !0;
    }
    invalidate() {
      Ot(this._cache) ||
        ((this._oldCache = this._cache), (this._cache = void 0));
    }
    _descriptors(i) {
      if (this._cache) return this._cache;
      let e = (this._cache = this._createDescriptors(i));
      return this._notifyStateChanges(i), e;
    }
    _createDescriptors(i, e) {
      let t = i && i.config,
        r = Gt(t.options && t.options.plugins, {}),
        o = C2(t);
      return r === !1 && !e ? [] : S2(i, o, r, e);
    }
    _notifyStateChanges(i) {
      let e = this._oldCache || [],
        t = this._cache,
        r = (o, a) =>
          o.filter((d) => !a.some((u) => d.plugin.id === u.plugin.id));
      this._notify(r(e, t), i, "stop"), this._notify(r(t, e), i, "start");
    }
  };
function C2(n) {
  let i = {},
    e = [],
    t = Object.keys(Zn.plugins.items);
  for (let o = 0; o < t.length; o++) e.push(Zn.getPlugin(t[o]));
  let r = n.plugins || [];
  for (let o = 0; o < r.length; o++) {
    let a = r[o];
    e.indexOf(a) === -1 && (e.push(a), (i[a.id] = !0));
  }
  return { plugins: e, localIds: i };
}
function w2(n, i) {
  return !i && n === !1 ? null : n === !0 ? {} : n;
}
function S2(n, { plugins: i, localIds: e }, t, r) {
  let o = [],
    a = n.getContext();
  for (let d of i) {
    let u = d.id,
      f = w2(t[u], r);
    f !== null &&
      o.push({
        plugin: d,
        options: D2(n.config, { plugin: d, local: e[u] }, f, a),
      });
  }
  return o;
}
function D2(n, { plugin: i, local: e }, t, r) {
  let o = n.pluginScopeKeys(i),
    a = n.getOptionScopes(t, o);
  return (
    e && i.defaults && a.push(i.defaults),
    n.createResolver(a, r, [""], { scriptable: !1, indexable: !1, allKeys: !0 })
  );
}
function cm(n, i) {
  let e = qt.datasets[n] || {};
  return (
    ((i.datasets || {})[n] || {}).indexAxis || i.indexAxis || e.indexAxis || "x"
  );
}
function M2(n, i) {
  let e = n;
  return (
    n === "_index_" ? (e = i) : n === "_value_" && (e = i === "x" ? "y" : "x"),
    e
  );
}
function T2(n, i) {
  return n === i ? "_index_" : "_value_";
}
function uv(n) {
  if (n === "x" || n === "y" || n === "r") return n;
}
function E2(n) {
  if (n === "top" || n === "bottom") return "x";
  if (n === "left" || n === "right") return "y";
}
function dm(n, ...i) {
  if (uv(n)) return n;
  for (let e of i) {
    let t =
      e.axis || E2(e.position) || (n.length > 1 && uv(n[0].toLowerCase()));
    if (t) return t;
  }
  throw new Error(
    `Cannot determine type of '${n}' axis. Please provide 'axis' or 'position' option.`
  );
}
function hv(n, i, e) {
  if (e[i + "AxisID"] === n) return { axis: i };
}
function O2(n, i) {
  if (i.data && i.data.datasets) {
    let e = i.data.datasets.filter((t) => t.xAxisID === n || t.yAxisID === n);
    if (e.length) return hv(n, "x", e[0]) || hv(n, "y", e[0]);
  }
  return {};
}
function k2(n, i) {
  let e = $r[n.type] || { scales: {} },
    t = i.scales || {},
    r = cm(n.type, i),
    o = Object.create(null);
  return (
    Object.keys(t).forEach((a) => {
      let d = t[a];
      if (!ht(d))
        return console.error(`Invalid scale configuration for scale: ${a}`);
      if (d._proxy)
        return console.warn(
          `Ignoring resolver passed as options for scale: ${a}`
        );
      let u = dm(a, d, O2(a, n), qt.scales[d.type]),
        f = T2(u, r),
        v = e.scales || {};
      o[a] = ga(Object.create(null), [{ axis: u }, d, v[u], v[f]]);
    }),
    n.data.datasets.forEach((a) => {
      let d = a.type || n.type,
        u = a.indexAxis || cm(d, i),
        v = ($r[d] || {}).scales || {};
      Object.keys(v).forEach((S) => {
        let T = M2(S, u),
          M = a[T + "AxisID"] || T;
        (o[M] = o[M] || Object.create(null)),
          ga(o[M], [{ axis: T }, t[M], v[S]]);
      });
    }),
    Object.keys(o).forEach((a) => {
      let d = o[a];
      ga(d, [qt.scales[d.type], qt.scale]);
    }),
    o
  );
}
function Bv(n) {
  let i = n.options || (n.options = {});
  (i.plugins = Gt(i.plugins, {})), (i.scales = k2(n, i));
}
function jv(n) {
  return (
    (n = n || {}),
    (n.datasets = n.datasets || []),
    (n.labels = n.labels || []),
    n
  );
}
function P2(n) {
  return (n = n || {}), (n.data = jv(n.data)), Bv(n), n;
}
var pv = new Map(),
  Hv = new Set();
function fd(n, i) {
  let e = pv.get(n);
  return e || ((e = i()), pv.set(n, e), Hv.add(e)), e;
}
var tl = (n, i, e) => {
    let t = zs(i, e);
    t !== void 0 && n.add(t);
  },
  um = class {
    constructor(i) {
      (this._config = P2(i)),
        (this._scopeCache = new Map()),
        (this._resolverCache = new Map());
    }
    get platform() {
      return this._config.platform;
    }
    get type() {
      return this._config.type;
    }
    set type(i) {
      this._config.type = i;
    }
    get data() {
      return this._config.data;
    }
    set data(i) {
      this._config.data = jv(i);
    }
    get options() {
      return this._config.options;
    }
    set options(i) {
      this._config.options = i;
    }
    get plugins() {
      return this._config.plugins;
    }
    update() {
      let i = this._config;
      this.clearCache(), Bv(i);
    }
    clearCache() {
      this._scopeCache.clear(), this._resolverCache.clear();
    }
    datasetScopeKeys(i) {
      return fd(i, () => [[`datasets.${i}`, ""]]);
    }
    datasetAnimationScopeKeys(i, e) {
      return fd(`${i}.transition.${e}`, () => [
        [`datasets.${i}.transitions.${e}`, `transitions.${e}`],
        [`datasets.${i}`, ""],
      ]);
    }
    datasetElementScopeKeys(i, e) {
      return fd(`${i}-${e}`, () => [
        [`datasets.${i}.elements.${e}`, `datasets.${i}`, `elements.${e}`, ""],
      ]);
    }
    pluginScopeKeys(i) {
      let e = i.id,
        t = this.type;
      return fd(`${t}-plugin-${e}`, () => [
        [`plugins.${e}`, ...(i.additionalOptionScopes || [])],
      ]);
    }
    _cachedScopes(i, e) {
      let t = this._scopeCache,
        r = t.get(i);
      return (!r || e) && ((r = new Map()), t.set(i, r)), r;
    }
    getOptionScopes(i, e, t) {
      let { options: r, type: o } = this,
        a = this._cachedScopes(i, t),
        d = a.get(e);
      if (d) return d;
      let u = new Set();
      e.forEach((v) => {
        i && (u.add(i), v.forEach((S) => tl(u, i, S))),
          v.forEach((S) => tl(u, r, S)),
          v.forEach((S) => tl(u, $r[o] || {}, S)),
          v.forEach((S) => tl(u, qt, S)),
          v.forEach((S) => tl(u, sd, S));
      });
      let f = Array.from(u);
      return (
        f.length === 0 && f.push(Object.create(null)),
        Hv.has(e) && a.set(e, f),
        f
      );
    }
    chartOptionScopes() {
      let { options: i, type: e } = this;
      return [i, $r[e] || {}, qt.datasets[e] || {}, { type: e }, qt, sd];
    }
    resolveNamedOptions(i, e, t, r = [""]) {
      let o = { $shared: !0 },
        { resolver: a, subPrefixes: d } = mv(this._resolverCache, i, r),
        u = a;
      if (A2(a, e)) {
        (o.$shared = !1), (t = gr(t) ? t() : t);
        let f = this.createResolver(i, t, d);
        u = vo(a, t, f);
      }
      for (let f of e) o[f] = u[f];
      return o;
    }
    createResolver(i, e, t = [""], r) {
      let { resolver: o } = mv(this._resolverCache, i, t);
      return ht(e) ? vo(o, e, void 0, r) : o;
    }
  };
function mv(n, i, e) {
  let t = n.get(i);
  t || ((t = new Map()), n.set(i, t));
  let r = e.join(),
    o = t.get(r);
  return (
    o ||
      ((o = {
        resolver: ld(i, e),
        subPrefixes: e.filter((d) => !d.toLowerCase().includes("hover")),
      }),
      t.set(r, o)),
    o
  );
}
var I2 = (n) => ht(n) && Object.getOwnPropertyNames(n).some((i) => gr(n[i]));
function A2(n, i) {
  let { isScriptable: e, isIndexable: t } = $p(n);
  for (let r of i) {
    let o = e(r),
      a = t(r),
      d = (a || o) && n[r];
    if ((o && (gr(d) || I2(d))) || (a && Yt(d))) return !0;
  }
  return !1;
}
var R2 = "4.5.0",
  F2 = ["top", "bottom", "left", "right", "chartArea"];
function fv(n, i) {
  return n === "top" || n === "bottom" || (F2.indexOf(n) === -1 && i === "x");
}
function gv(n, i) {
  return function (e, t) {
    return e[n] === t[n] ? e[i] - t[i] : e[n] - t[n];
  };
}
function _v(n) {
  let i = n.chart,
    e = i.options.animation;
  i.notifyPlugins("afterRender"), Ht(e && e.onComplete, [n], i);
}
function N2(n) {
  let i = n.chart,
    e = i.options.animation;
  Ht(e && e.onProgress, [n], i);
}
function Uv(n) {
  return (
    cd() && typeof n == "string"
      ? (n = document.getElementById(n))
      : n && n.length && (n = n[0]),
    n && n.canvas && (n = n.canvas),
    n
  );
}
var bd = {},
  bv = (n) => {
    let i = Uv(n);
    return Object.values(bd)
      .filter((e) => e.canvas === i)
      .pop();
  };
function L2(n, i, e) {
  let t = Object.keys(n);
  for (let r of t) {
    let o = +r;
    if (o >= i) {
      let a = n[r];
      delete n[r], (e > 0 || o > i) && (n[o + e] = a);
    }
  }
}
function V2(n, i, e, t) {
  return !e || n.type === "mouseout" ? null : t ? i : n;
}
var pm = (() => {
  class n {
    static defaults = qt;
    static instances = bd;
    static overrides = $r;
    static registry = Zn;
    static version = R2;
    static getChart = bv;
    static register(...e) {
      Zn.add(...e), vv();
    }
    static unregister(...e) {
      Zn.remove(...e), vv();
    }
    constructor(e, t) {
      let r = (this.config = new um(t)),
        o = Uv(e),
        a = bv(o);
      if (a)
        throw new Error(
          "Canvas is already in use. Chart with ID '" +
            a.id +
            "' must be destroyed before the canvas with ID '" +
            a.canvas.id +
            "' can be reused."
        );
      let d = r.createResolver(r.chartOptionScopes(), this.getContext());
      (this.platform = new (r.platform || o2(o))()),
        this.platform.updateConfig(r);
      let u = this.platform.acquireContext(o, d.aspectRatio),
        f = u && u.canvas,
        v = f && f.height,
        S = f && f.width;
      if (
        ((this.id = yb()),
        (this.ctx = u),
        (this.canvas = f),
        (this.width = S),
        (this.height = v),
        (this._options = d),
        (this._aspectRatio = this.aspectRatio),
        (this._layers = []),
        (this._metasets = []),
        (this._stacks = void 0),
        (this.boxes = []),
        (this.currentDevicePixelRatio = void 0),
        (this.chartArea = void 0),
        (this._active = []),
        (this._lastEvent = void 0),
        (this._listeners = {}),
        (this._responsiveListeners = void 0),
        (this._sortedMetasets = []),
        (this.scales = {}),
        (this._plugins = new lm()),
        (this.$proxies = {}),
        (this._hiddenIndices = {}),
        (this.attached = !1),
        (this._animationsDisabled = void 0),
        (this.$context = void 0),
        (this._doResize = Rb((T) => this.update(T), d.resizeDelay || 0)),
        (this._dataChanges = []),
        (bd[this.id] = this),
        !u || !f)
      ) {
        console.error(
          "Failed to create chart: can't acquire context from the given item"
        );
        return;
      }
      vr.listen(this, "complete", _v),
        vr.listen(this, "progress", N2),
        this._initialize(),
        this.attached && this.update();
    }
    get aspectRatio() {
      let {
        options: { aspectRatio: e, maintainAspectRatio: t },
        width: r,
        height: o,
        _aspectRatio: a,
      } = this;
      return Ot(e) ? (t && a ? a : o ? r / o : null) : e;
    }
    get data() {
      return this.config.data;
    }
    set data(e) {
      this.config.data = e;
    }
    get options() {
      return this._options;
    }
    set options(e) {
      this.config.options = e;
    }
    get registry() {
      return Zn;
    }
    _initialize() {
      return (
        this.notifyPlugins("beforeInit"),
        this.options.responsive
          ? this.resize()
          : Yp(this, this.options.devicePixelRatio),
        this.bindEvents(),
        this.notifyPlugins("afterInit"),
        this
      );
    }
    clear() {
      return jp(this.canvas, this.ctx), this;
    }
    stop() {
      return vr.stop(this), this;
    }
    resize(e, t) {
      vr.running(this)
        ? (this._resizeBeforeDraw = { width: e, height: t })
        : this._resize(e, t);
    }
    _resize(e, t) {
      let r = this.options,
        o = this.canvas,
        a = r.maintainAspectRatio && this.aspectRatio,
        d = this.platform.getMaximumSize(o, e, t, a),
        u = r.devicePixelRatio || this.platform.getDevicePixelRatio(),
        f = this.width ? "resize" : "attach";
      (this.width = d.width),
        (this.height = d.height),
        (this._aspectRatio = this.aspectRatio),
        Yp(this, u, !0) &&
          (this.notifyPlugins("resize", { size: d }),
          Ht(r.onResize, [this, d], this),
          this.attached && this._doResize(f) && this.render());
    }
    ensureScalesHaveIDs() {
      let t = this.options.scales || {};
      bi(t, (r, o) => {
        r.id = o;
      });
    }
    buildOrUpdateScales() {
      let e = this.options,
        t = e.scales,
        r = this.scales,
        o = Object.keys(r).reduce((d, u) => ((d[u] = !1), d), {}),
        a = [];
      t &&
        (a = a.concat(
          Object.keys(t).map((d) => {
            let u = t[d],
              f = dm(d, u),
              v = f === "r",
              S = f === "x";
            return {
              options: u,
              dposition: v ? "chartArea" : S ? "bottom" : "left",
              dtype: v ? "radialLinear" : S ? "category" : "linear",
            };
          })
        )),
        bi(a, (d) => {
          let u = d.options,
            f = u.id,
            v = dm(f, u),
            S = Gt(u.type, d.dtype);
          (u.position === void 0 || fv(u.position, v) !== fv(d.dposition)) &&
            (u.position = d.dposition),
            (o[f] = !0);
          let T = null;
          if (f in r && r[f].type === S) T = r[f];
          else {
            let M = Zn.getScale(S);
            (T = new M({ id: f, type: S, ctx: this.ctx, chart: this })),
              (r[T.id] = T);
          }
          T.init(u, e);
        }),
        bi(o, (d, u) => {
          d || delete r[u];
        }),
        bi(r, (d) => {
          pd.configure(this, d, d.options), pd.addBox(this, d);
        });
    }
    _updateMetasets() {
      let e = this._metasets,
        t = this.data.datasets.length,
        r = e.length;
      if ((e.sort((o, a) => o.index - a.index), r > t)) {
        for (let o = t; o < r; ++o) this._destroyDatasetMeta(o);
        e.splice(t, r - t);
      }
      this._sortedMetasets = e.slice(0).sort(gv("order", "index"));
    }
    _removeUnreferencedMetasets() {
      let {
        _metasets: e,
        data: { datasets: t },
      } = this;
      e.length > t.length && delete this._stacks,
        e.forEach((r, o) => {
          t.filter((a) => a === r._dataset).length === 0 &&
            this._destroyDatasetMeta(o);
        });
    }
    buildOrUpdateControllers() {
      let e = [],
        t = this.data.datasets,
        r,
        o;
      for (
        this._removeUnreferencedMetasets(), r = 0, o = t.length;
        r < o;
        r++
      ) {
        let a = t[r],
          d = this.getDatasetMeta(r),
          u = a.type || this.config.type;
        if (
          (d.type &&
            d.type !== u &&
            (this._destroyDatasetMeta(r), (d = this.getDatasetMeta(r))),
          (d.type = u),
          (d.indexAxis = a.indexAxis || cm(u, this.options)),
          (d.order = a.order || 0),
          (d.index = r),
          (d.label = "" + a.label),
          (d.visible = this.isDatasetVisible(r)),
          d.controller)
        )
          d.controller.updateIndex(r), d.controller.linkScales();
        else {
          let f = Zn.getController(u),
            { datasetElementType: v, dataElementType: S } = qt.datasets[u];
          Object.assign(f, {
            dataElementType: Zn.getElement(S),
            datasetElementType: v && Zn.getElement(v),
          }),
            (d.controller = new f(this, r)),
            e.push(d.controller);
        }
      }
      return this._updateMetasets(), e;
    }
    _resetElements() {
      bi(
        this.data.datasets,
        (e, t) => {
          this.getDatasetMeta(t).controller.reset();
        },
        this
      );
    }
    reset() {
      this._resetElements(), this.notifyPlugins("reset");
    }
    update(e) {
      let t = this.config;
      t.update();
      let r = (this._options = t.createResolver(
          t.chartOptionScopes(),
          this.getContext()
        )),
        o = (this._animationsDisabled = !r.animation);
      if (
        (this._updateScales(),
        this._checkEventBindings(),
        this._updateHiddenIndices(),
        this._plugins.invalidate(),
        this.notifyPlugins("beforeUpdate", { mode: e, cancelable: !0 }) === !1)
      )
        return;
      let a = this.buildOrUpdateControllers();
      this.notifyPlugins("beforeElementsUpdate");
      let d = 0;
      for (let v = 0, S = this.data.datasets.length; v < S; v++) {
        let { controller: T } = this.getDatasetMeta(v),
          M = !o && a.indexOf(T) === -1;
        T.buildOrUpdateElements(M), (d = Math.max(+T.getMaxOverflow(), d));
      }
      (d = this._minPadding = r.layout.autoPadding ? d : 0),
        this._updateLayout(d),
        o ||
          bi(a, (v) => {
            v.reset();
          }),
        this._updateDatasets(e),
        this.notifyPlugins("afterUpdate", { mode: e }),
        this._layers.sort(gv("z", "_idx"));
      let { _active: u, _lastEvent: f } = this;
      f
        ? this._eventHandler(f, !0)
        : u.length && this._updateHoverStyles(u, u, !0),
        this.render();
    }
    _updateScales() {
      bi(this.scales, (e) => {
        pd.removeBox(this, e);
      }),
        this.ensureScalesHaveIDs(),
        this.buildOrUpdateScales();
    }
    _checkEventBindings() {
      let e = this.options,
        t = new Set(Object.keys(this._listeners)),
        r = new Set(e.events);
      (!Pp(t, r) || !!this._responsiveListeners !== e.responsive) &&
        (this.unbindEvents(), this.bindEvents());
    }
    _updateHiddenIndices() {
      let { _hiddenIndices: e } = this,
        t = this._getUniformDataChanges() || [];
      for (let { method: r, start: o, count: a } of t) {
        let d = r === "_removeElements" ? -a : a;
        L2(e, o, d);
      }
    }
    _getUniformDataChanges() {
      let e = this._dataChanges;
      if (!e || !e.length) return;
      this._dataChanges = [];
      let t = this.data.datasets.length,
        r = (a) =>
          new Set(
            e
              .filter((d) => d[0] === a)
              .map((d, u) => u + "," + d.splice(1).join(","))
          ),
        o = r(0);
      for (let a = 1; a < t; a++) if (!Pp(o, r(a))) return;
      return Array.from(o)
        .map((a) => a.split(","))
        .map((a) => ({ method: a[1], start: +a[2], count: +a[3] }));
    }
    _updateLayout(e) {
      if (this.notifyPlugins("beforeLayout", { cancelable: !0 }) === !1) return;
      pd.update(this, this.width, this.height, e);
      let t = this.chartArea,
        r = t.width <= 0 || t.height <= 0;
      (this._layers = []),
        bi(
          this.boxes,
          (o) => {
            (r && o.position === "chartArea") ||
              (o.configure && o.configure(), this._layers.push(...o._layers()));
          },
          this
        ),
        this._layers.forEach((o, a) => {
          o._idx = a;
        }),
        this.notifyPlugins("afterLayout");
    }
    _updateDatasets(e) {
      if (
        this.notifyPlugins("beforeDatasetsUpdate", {
          mode: e,
          cancelable: !0,
        }) !== !1
      ) {
        for (let t = 0, r = this.data.datasets.length; t < r; ++t)
          this.getDatasetMeta(t).controller.configure();
        for (let t = 0, r = this.data.datasets.length; t < r; ++t)
          this._updateDataset(t, gr(e) ? e({ datasetIndex: t }) : e);
        this.notifyPlugins("afterDatasetsUpdate", { mode: e });
      }
    }
    _updateDataset(e, t) {
      let r = this.getDatasetMeta(e),
        o = { meta: r, index: e, mode: t, cancelable: !0 };
      this.notifyPlugins("beforeDatasetUpdate", o) !== !1 &&
        (r.controller._update(t),
        (o.cancelable = !1),
        this.notifyPlugins("afterDatasetUpdate", o));
    }
    render() {
      this.notifyPlugins("beforeRender", { cancelable: !0 }) !== !1 &&
        (vr.has(this)
          ? this.attached && !vr.running(this) && vr.start(this)
          : (this.draw(), _v({ chart: this })));
    }
    draw() {
      let e;
      if (this._resizeBeforeDraw) {
        let { width: r, height: o } = this._resizeBeforeDraw;
        (this._resizeBeforeDraw = null), this._resize(r, o);
      }
      if (
        (this.clear(),
        this.width <= 0 ||
          this.height <= 0 ||
          this.notifyPlugins("beforeDraw", { cancelable: !0 }) === !1)
      )
        return;
      let t = this._layers;
      for (e = 0; e < t.length && t[e].z <= 0; ++e) t[e].draw(this.chartArea);
      for (this._drawDatasets(); e < t.length; ++e) t[e].draw(this.chartArea);
      this.notifyPlugins("afterDraw");
    }
    _getSortedDatasetMetas(e) {
      let t = this._sortedMetasets,
        r = [],
        o,
        a;
      for (o = 0, a = t.length; o < a; ++o) {
        let d = t[o];
        (!e || d.visible) && r.push(d);
      }
      return r;
    }
    getSortedVisibleDatasetMetas() {
      return this._getSortedDatasetMetas(!0);
    }
    _drawDatasets() {
      if (this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 }) === !1)
        return;
      let e = this.getSortedVisibleDatasetMetas();
      for (let t = e.length - 1; t >= 0; --t) this._drawDataset(e[t]);
      this.notifyPlugins("afterDatasetsDraw");
    }
    _drawDataset(e) {
      let t = this.ctx,
        r = { meta: e, index: e.index, cancelable: !0 },
        o = qb(this, e);
      this.notifyPlugins("beforeDatasetDraw", r) !== !1 &&
        (o && Hp(t, o),
        e.controller.draw(),
        o && Up(t),
        (r.cancelable = !1),
        this.notifyPlugins("afterDatasetDraw", r));
    }
    isPointInArea(e) {
      return yo(e, this.chartArea, this._minPadding);
    }
    getElementsAtEventForMode(e, t, r, o) {
      let a = jM.modes[t];
      return typeof a == "function" ? a(this, e, r, o) : [];
    }
    getDatasetMeta(e) {
      let t = this.data.datasets[e],
        r = this._metasets,
        o = r.filter((a) => a && a._dataset === t).pop();
      return (
        o ||
          ((o = {
            type: null,
            data: [],
            dataset: null,
            controller: null,
            hidden: null,
            xAxisID: null,
            yAxisID: null,
            order: (t && t.order) || 0,
            index: e,
            _dataset: t,
            _parsed: [],
            _sorted: !1,
          }),
          r.push(o)),
        o
      );
    }
    getContext() {
      return (
        this.$context ||
        (this.$context = Co(null, { chart: this, type: "chart" }))
      );
    }
    getVisibleDatasetCount() {
      return this.getSortedVisibleDatasetMetas().length;
    }
    isDatasetVisible(e) {
      let t = this.data.datasets[e];
      if (!t) return !1;
      let r = this.getDatasetMeta(e);
      return typeof r.hidden == "boolean" ? !r.hidden : !t.hidden;
    }
    setDatasetVisibility(e, t) {
      let r = this.getDatasetMeta(e);
      r.hidden = !t;
    }
    toggleDataVisibility(e) {
      this._hiddenIndices[e] = !this._hiddenIndices[e];
    }
    getDataVisibility(e) {
      return !this._hiddenIndices[e];
    }
    _updateVisibility(e, t, r) {
      let o = r ? "show" : "hide",
        a = this.getDatasetMeta(e),
        d = a.controller._resolveAnimations(void 0, o);
      $s(t)
        ? ((a.data[t].hidden = !r), this.update())
        : (this.setDatasetVisibility(e, r),
          d.update(a, { visible: r }),
          this.update((u) => (u.datasetIndex === e ? o : void 0)));
    }
    hide(e, t) {
      this._updateVisibility(e, t, !1);
    }
    show(e, t) {
      this._updateVisibility(e, t, !0);
    }
    _destroyDatasetMeta(e) {
      let t = this._metasets[e];
      t && t.controller && t.controller._destroy(), delete this._metasets[e];
    }
    _stop() {
      let e, t;
      for (
        this.stop(), vr.remove(this), e = 0, t = this.data.datasets.length;
        e < t;
        ++e
      )
        this._destroyDatasetMeta(e);
    }
    destroy() {
      this.notifyPlugins("beforeDestroy");
      let { canvas: e, ctx: t } = this;
      this._stop(),
        this.config.clearCache(),
        e &&
          (this.unbindEvents(),
          jp(e, t),
          this.platform.releaseContext(t),
          (this.canvas = null),
          (this.ctx = null)),
        delete bd[this.id],
        this.notifyPlugins("afterDestroy");
    }
    toBase64Image(...e) {
      return this.canvas.toDataURL(...e);
    }
    bindEvents() {
      this.bindUserEvents(),
        this.options.responsive
          ? this.bindResponsiveEvents()
          : (this.attached = !0);
    }
    bindUserEvents() {
      let e = this._listeners,
        t = this.platform,
        r = (a, d) => {
          t.addEventListener(this, a, d), (e[a] = d);
        },
        o = (a, d, u) => {
          (a.offsetX = d), (a.offsetY = u), this._eventHandler(a);
        };
      bi(this.options.events, (a) => r(a, o));
    }
    bindResponsiveEvents() {
      this._responsiveListeners || (this._responsiveListeners = {});
      let e = this._responsiveListeners,
        t = this.platform,
        r = (f, v) => {
          t.addEventListener(this, f, v), (e[f] = v);
        },
        o = (f, v) => {
          e[f] && (t.removeEventListener(this, f, v), delete e[f]);
        },
        a = (f, v) => {
          this.canvas && this.resize(f, v);
        },
        d,
        u = () => {
          o("attach", u),
            (this.attached = !0),
            this.resize(),
            r("resize", a),
            r("detach", d);
        };
      (d = () => {
        (this.attached = !1),
          o("resize", a),
          this._stop(),
          this._resize(0, 0),
          r("attach", u);
      }),
        t.isAttached(this.canvas) ? u() : d();
    }
    unbindEvents() {
      bi(this._listeners, (e, t) => {
        this.platform.removeEventListener(this, t, e);
      }),
        (this._listeners = {}),
        bi(this._responsiveListeners, (e, t) => {
          this.platform.removeEventListener(this, t, e);
        }),
        (this._responsiveListeners = void 0);
    }
    updateHoverStyle(e, t, r) {
      let o = r ? "set" : "remove",
        a,
        d,
        u,
        f;
      for (
        t === "dataset" &&
          ((a = this.getDatasetMeta(e[0].datasetIndex)),
          a.controller["_" + o + "DatasetHoverStyle"]()),
          u = 0,
          f = e.length;
        u < f;
        ++u
      ) {
        d = e[u];
        let v = d && this.getDatasetMeta(d.datasetIndex).controller;
        v && v[o + "HoverStyle"](d.element, d.datasetIndex, d.index);
      }
    }
    getActiveElements() {
      return this._active || [];
    }
    setActiveElements(e) {
      let t = this._active || [],
        r = e.map(({ datasetIndex: a, index: d }) => {
          let u = this.getDatasetMeta(a);
          if (!u) throw new Error("No dataset found at index " + a);
          return { datasetIndex: a, element: u.data[d], index: d };
        });
      !kp(r, t) &&
        ((this._active = r),
        (this._lastEvent = null),
        this._updateHoverStyles(r, t));
    }
    notifyPlugins(e, t, r) {
      return this._plugins.notify(this, e, t, r);
    }
    isPluginEnabled(e) {
      return this._plugins._cache.filter((t) => t.plugin.id === e).length === 1;
    }
    _updateHoverStyles(e, t, r) {
      let o = this.options.hover,
        a = (f, v) =>
          f.filter(
            (S) =>
              !v.some(
                (T) => S.datasetIndex === T.datasetIndex && S.index === T.index
              )
          ),
        d = a(t, e),
        u = r ? e : a(e, t);
      d.length && this.updateHoverStyle(d, o.mode, !1),
        u.length && o.mode && this.updateHoverStyle(u, o.mode, !0);
    }
    _eventHandler(e, t) {
      let r = {
          event: e,
          replay: t,
          cancelable: !0,
          inChartArea: this.isPointInArea(e),
        },
        o = (d) =>
          (d.options.events || this.options.events).includes(e.native.type);
      if (this.notifyPlugins("beforeEvent", r, o) === !1) return;
      let a = this._handleEvent(e, t, r.inChartArea);
      return (
        (r.cancelable = !1),
        this.notifyPlugins("afterEvent", r, o),
        (a || r.changed) && this.render(),
        this
      );
    }
    _handleEvent(e, t, r) {
      let { _active: o = [], options: a } = this,
        d = t,
        u = this._getActiveElements(e, o, r, d),
        f = wb(e),
        v = V2(e, this._lastEvent, r, f);
      r &&
        ((this._lastEvent = null),
        Ht(a.onHover, [e, u, this], this),
        f && Ht(a.onClick, [e, u, this], this));
      let S = !kp(u, o);
      return (
        (S || t) && ((this._active = u), this._updateHoverStyles(u, o, t)),
        (this._lastEvent = v),
        S
      );
    }
    _getActiveElements(e, t, r, o) {
      if (e.type === "mouseout") return [];
      if (!r) return t;
      let a = this.options.hover;
      return this.getElementsAtEventForMode(e, a.mode, a, o);
    }
  }
  return n;
})();
function vv() {
  return bi(pm.instances, (n) => n._plugins.invalidate());
}
function B2(n, i) {
  let e = [],
    {
      bounds: r,
      step: o,
      min: a,
      max: d,
      precision: u,
      count: f,
      maxTicks: v,
      maxDigits: S,
      includeBounds: T,
    } = n,
    M = o || 1,
    I = v - 1,
    { min: L, max: E } = i,
    F = !Ot(a),
    ee = !Ot(d),
    re = !Ot(f),
    ge = (E - L) / (S + 1),
    Pe = Ip((E - L) / I / M) * M,
    b,
    Ue,
    we,
    Ge;
  if (Pe < 1e-14 && !F && !ee) return [{ value: L }, { value: E }];
  (Ge = Math.ceil(E / Pe) - Math.floor(L / Pe)),
    Ge > I && (Pe = Ip((Ge * Pe) / I / M) * M),
    Ot(u) || ((b = Math.pow(10, u)), (Pe = Math.ceil(Pe * b) / b)),
    r === "ticks"
      ? ((Ue = Math.floor(L / Pe) * Pe), (we = Math.ceil(E / Pe) * Pe))
      : ((Ue = L), (we = E)),
    F && ee && o && Db((d - a) / o, Pe / 1e3)
      ? ((Ge = Math.round(Math.min((d - a) / Pe, v))),
        (Pe = (d - a) / Ge),
        (Ue = a),
        (we = d))
      : re
      ? ((Ue = F ? a : Ue),
        (we = ee ? d : we),
        (Ge = f - 1),
        (Pe = (we - Ue) / Ge))
      : ((Ge = (we - Ue) / Pe),
        Gs(Ge, Math.round(Ge), Pe / 1e3)
          ? (Ge = Math.round(Ge))
          : (Ge = Math.ceil(Ge)));
  let yt = Math.max(Rp(Pe), Rp(Ue));
  (b = Math.pow(10, Ot(u) ? yt : u)),
    (Ue = Math.round(Ue * b) / b),
    (we = Math.round(we * b) / b);
  let Qt = 0;
  for (
    F &&
    (T && Ue !== a
      ? (e.push({ value: a }),
        Ue < a && Qt++,
        Gs(Math.round((Ue + Qt * Pe) * b) / b, a, yv(a, ge, n)) && Qt++)
      : Ue < a && Qt++);
    Qt < Ge;
    ++Qt
  ) {
    let Be = Math.round((Ue + Qt * Pe) * b) / b;
    if (ee && Be > d) break;
    e.push({ value: Be });
  }
  return (
    ee && T && we !== d
      ? e.length && Gs(e[e.length - 1].value, d, yv(d, ge, n))
        ? (e[e.length - 1].value = d)
        : e.push({ value: d })
      : (!ee || we === d) && e.push({ value: we }),
    e
  );
}
function yv(n, i, { horizontal: e, minRotation: t }) {
  let r = br(t),
    o = (e ? Math.sin(r) : Math.cos(r)) || 0.001,
    a = 0.75 * i * ("" + n).length;
  return Math.min(i / o, a);
}
var va = class extends ba {
    constructor(i) {
      super(i),
        (this.start = void 0),
        (this.end = void 0),
        (this._startValue = void 0),
        (this._endValue = void 0),
        (this._valueRange = 0);
    }
    parse(i, e) {
      return Ot(i) ||
        ((typeof i == "number" || i instanceof Number) && !isFinite(+i))
        ? null
        : +i;
    }
    handleTickRangeOptions() {
      let { beginAtZero: i } = this.options,
        { minDefined: e, maxDefined: t } = this.getUserBounds(),
        { min: r, max: o } = this,
        a = (u) => (r = e ? r : u),
        d = (u) => (o = t ? o : u);
      if (i) {
        let u = Ws(r),
          f = Ws(o);
        u < 0 && f < 0 ? d(0) : u > 0 && f > 0 && a(0);
      }
      if (r === o) {
        let u = o === 0 ? 1 : Math.abs(o * 0.05);
        d(o + u), i || a(r - u);
      }
      (this.min = r), (this.max = o);
    }
    getTickLimit() {
      let i = this.options.ticks,
        { maxTicksLimit: e, stepSize: t } = i,
        r;
      return (
        t
          ? ((r = Math.ceil(this.max / t) - Math.floor(this.min / t) + 1),
            r > 1e3 &&
              (console.warn(
                `scales.${this.id}.ticks.stepSize: ${t} would result generating up to ${r} ticks. Limiting to 1000.`
              ),
              (r = 1e3)))
          : ((r = this.computeTickLimit()), (e = e || 11)),
        e && (r = Math.min(e, r)),
        r
      );
    }
    computeTickLimit() {
      return Number.POSITIVE_INFINITY;
    }
    buildTicks() {
      let i = this.options,
        e = i.ticks,
        t = this.getTickLimit();
      t = Math.max(2, t);
      let r = {
          maxTicks: t,
          bounds: i.bounds,
          min: i.min,
          max: i.max,
          precision: e.precision,
          step: e.stepSize,
          count: e.count,
          maxDigits: this._maxDigits(),
          horizontal: this.isHorizontal(),
          minRotation: e.minRotation || 0,
          includeBounds: e.includeBounds !== !1,
        },
        o = this._range || this,
        a = B2(r, o);
      return (
        i.bounds === "ticks" && Ap(a, this, "value"),
        i.reverse
          ? (a.reverse(), (this.start = this.max), (this.end = this.min))
          : ((this.start = this.min), (this.end = this.max)),
        a
      );
    }
    configure() {
      let i = this.ticks,
        e = this.min,
        t = this.max;
      if ((super.configure(), this.options.offset && i.length)) {
        let r = (t - e) / Math.max(i.length - 1, 1) / 2;
        (e -= r), (t += r);
      }
      (this._startValue = e), (this._endValue = t), (this._valueRange = t - e);
    }
    getLabelForValue(i) {
      return ad(i, this.chart.options.locale, this.options.ticks.format);
    }
  },
  xv = class extends va {
    static id = "linear";
    static defaults = { ticks: { callback: qs.formatters.numeric } };
    determineDataLimits() {
      let { min: i, max: e } = this.getMinMax(!0);
      (this.min = di(i) ? i : 0),
        (this.max = di(e) ? e : 1),
        this.handleTickRangeOptions();
    }
    computeTickLimit() {
      let i = this.isHorizontal(),
        e = i ? this.width : this.height,
        t = br(this.options.ticks.minRotation),
        r = (i ? Math.sin(t) : Math.cos(t)) || 0.001,
        o = this._resolveTickFontOptions(0);
      return Math.ceil(e / Math.min(40, o.lineHeight / r));
    }
    getPixelForValue(i) {
      return i === null
        ? NaN
        : this.getPixelForDecimal((i - this._startValue) / this._valueRange);
    }
    getValueForPixel(i) {
      return this._startValue + this.getDecimalForPixel(i) * this._valueRange;
    }
  },
  rl = (n) => Math.floor(_r(n)),
  So = (n, i) => Math.pow(10, rl(n) + i);
function Cv(n) {
  return n / Math.pow(10, rl(n)) === 1;
}
function wv(n, i, e) {
  let t = Math.pow(10, e),
    r = Math.floor(n / t);
  return Math.ceil(i / t) - r;
}
function j2(n, i) {
  let e = i - n,
    t = rl(e);
  for (; wv(n, i, t) > 10; ) t++;
  for (; wv(n, i, t) < 10; ) t--;
  return Math.min(t, rl(n));
}
function H2(n, { min: i, max: e }) {
  i = ji(n.min, i);
  let t = [],
    r = rl(i),
    o = j2(i, e),
    a = o < 0 ? Math.pow(10, Math.abs(o)) : 1,
    d = Math.pow(10, o),
    u = r > o ? Math.pow(10, r) : 0,
    f = Math.round((i - u) * a) / a,
    v = Math.floor((i - u) / d / 10) * d * 10,
    S = Math.floor((f - v) / Math.pow(10, o)),
    T = ji(n.min, Math.round((u + v + S * Math.pow(10, o)) * a) / a);
  for (; T < e; )
    t.push({ value: T, major: Cv(T), significand: S }),
      S >= 10 ? (S = S < 15 ? 15 : 20) : S++,
      S >= 20 && (o++, (S = 2), (a = o >= 0 ? 1 : a)),
      (T = Math.round((u + v + S * Math.pow(10, o)) * a) / a);
  let M = ji(n.max, T);
  return t.push({ value: M, major: Cv(M), significand: S }), t;
}
var Sv = class extends ba {
  static id = "logarithmic";
  static defaults = {
    ticks: { callback: qs.formatters.logarithmic, major: { enabled: !0 } },
  };
  constructor(i) {
    super(i),
      (this.start = void 0),
      (this.end = void 0),
      (this._startValue = void 0),
      (this._valueRange = 0);
  }
  parse(i, e) {
    let t = va.prototype.parse.apply(this, [i, e]);
    if (t === 0) {
      this._zero = !0;
      return;
    }
    return di(t) && t > 0 ? t : null;
  }
  determineDataLimits() {
    let { min: i, max: e } = this.getMinMax(!0);
    (this.min = di(i) ? Math.max(0, i) : null),
      (this.max = di(e) ? Math.max(0, e) : null),
      this.options.beginAtZero && (this._zero = !0),
      this._zero &&
        this.min !== this._suggestedMin &&
        !di(this._userMin) &&
        (this.min = i === So(this.min, 0) ? So(this.min, -1) : So(this.min, 0)),
      this.handleTickRangeOptions();
  }
  handleTickRangeOptions() {
    let { minDefined: i, maxDefined: e } = this.getUserBounds(),
      t = this.min,
      r = this.max,
      o = (d) => (t = i ? t : d),
      a = (d) => (r = e ? r : d);
    t === r && (t <= 0 ? (o(1), a(10)) : (o(So(t, -1)), a(So(r, 1)))),
      t <= 0 && o(So(r, -1)),
      r <= 0 && a(So(t, 1)),
      (this.min = t),
      (this.max = r);
  }
  buildTicks() {
    let i = this.options,
      e = { min: this._userMin, max: this._userMax },
      t = H2(e, this);
    return (
      i.bounds === "ticks" && Ap(t, this, "value"),
      i.reverse
        ? (t.reverse(), (this.start = this.max), (this.end = this.min))
        : ((this.start = this.min), (this.end = this.max)),
      t
    );
  }
  getLabelForValue(i) {
    return i === void 0
      ? "0"
      : ad(i, this.chart.options.locale, this.options.ticks.format);
  }
  configure() {
    let i = this.min;
    super.configure(),
      (this._startValue = _r(i)),
      (this._valueRange = _r(this.max) - _r(i));
  }
  getPixelForValue(i) {
    return (
      (i === void 0 || i === 0) && (i = this.min),
      i === null || isNaN(i)
        ? NaN
        : this.getPixelForDecimal(
            i === this.min ? 0 : (_r(i) - this._startValue) / this._valueRange
          )
    );
  }
  getValueForPixel(i) {
    let e = this.getDecimalForPixel(i);
    return Math.pow(10, this._startValue + e * this._valueRange);
  }
};
function hm(n) {
  let i = n.ticks;
  if (i.display && n.display) {
    let e = Xn(i.backdropPadding);
    return Gt(i.font && i.font.size, qt.font.size) + e.height;
  }
  return 0;
}
function U2(n, i, e) {
  return (
    (e = Yt(e) ? e : [e]), { w: Vb(n, i.string, e), h: e.length * i.lineHeight }
  );
}
function Dv(n, i, e, t, r) {
  return n === t || n === r
    ? { start: i - e / 2, end: i + e / 2 }
    : n < t || n > r
    ? { start: i - e, end: i }
    : { start: i, end: i + e };
}
function z2(n) {
  let i = {
      l: n.left + n._padding.left,
      r: n.right - n._padding.right,
      t: n.top + n._padding.top,
      b: n.bottom - n._padding.bottom,
    },
    e = Object.assign({}, i),
    t = [],
    r = [],
    o = n._pointLabels.length,
    a = n.options.pointLabels,
    d = a.centerPointLabels ? Mi / o : 0;
  for (let u = 0; u < o; u++) {
    let f = a.setContext(n.getPointLabelContext(u));
    r[u] = f.padding;
    let v = n.getPointPosition(u, n.drawingArea + r[u], d),
      S = xo(f.font),
      T = U2(n.ctx, S, n._pointLabels[u]);
    t[u] = T;
    let M = En(n.getIndexAngle(u) + d),
      I = Math.round(nd(M)),
      L = Dv(I, v.x, T.w, 0, 180),
      E = Dv(I, v.y, T.h, 90, 270);
    $2(e, i, M, L, E);
  }
  n.setCenterPoint(i.l - e.l, e.r - i.r, i.t - e.t, e.b - i.b),
    (n._pointLabelItems = Y2(n, t, r));
}
function $2(n, i, e, t, r) {
  let o = Math.abs(Math.sin(e)),
    a = Math.abs(Math.cos(e)),
    d = 0,
    u = 0;
  t.start < i.l
    ? ((d = (i.l - t.start) / o), (n.l = Math.min(n.l, i.l - d)))
    : t.end > i.r && ((d = (t.end - i.r) / o), (n.r = Math.max(n.r, i.r + d))),
    r.start < i.t
      ? ((u = (i.t - r.start) / a), (n.t = Math.min(n.t, i.t - u)))
      : r.end > i.b &&
        ((u = (r.end - i.b) / a), (n.b = Math.max(n.b, i.b + u)));
}
function W2(n, i, e) {
  let t = n.drawingArea,
    { extra: r, additionalAngle: o, padding: a, size: d } = e,
    u = n.getPointPosition(i, t + r + a, o),
    f = Math.round(nd(En(u.angle + Qn))),
    v = Q2(u.y, d.h, f),
    S = q2(f),
    T = K2(u.x, d.w, S);
  return {
    visible: !0,
    x: u.x,
    y: v,
    textAlign: S,
    left: T,
    top: v,
    right: T + d.w,
    bottom: v + d.h,
  };
}
function G2(n, i) {
  if (!i) return !0;
  let { left: e, top: t, right: r, bottom: o } = n;
  return !(
    yo({ x: e, y: t }, i) ||
    yo({ x: e, y: o }, i) ||
    yo({ x: r, y: t }, i) ||
    yo({ x: r, y: o }, i)
  );
}
function Y2(n, i, e) {
  let t = [],
    r = n._pointLabels.length,
    o = n.options,
    { centerPointLabels: a, display: d } = o.pointLabels,
    u = { extra: hm(o) / 2, additionalAngle: a ? Mi / r : 0 },
    f;
  for (let v = 0; v < r; v++) {
    (u.padding = e[v]), (u.size = i[v]);
    let S = W2(n, v, u);
    t.push(S), d === "auto" && ((S.visible = G2(S, f)), S.visible && (f = S));
  }
  return t;
}
function q2(n) {
  return n === 0 || n === 180 ? "center" : n < 180 ? "left" : "right";
}
function K2(n, i, e) {
  return e === "right" ? (n -= i) : e === "center" && (n -= i / 2), n;
}
function Q2(n, i, e) {
  return (
    e === 90 || e === 270 ? (n -= i / 2) : (e > 270 || e < 90) && (n -= i), n
  );
}
function X2(n, i, e) {
  let { left: t, top: r, right: o, bottom: a } = e,
    { backdropColor: d } = i;
  if (!Ot(d)) {
    let u = Hb(i.borderRadius),
      f = Xn(i.backdropPadding);
    n.fillStyle = d;
    let v = t - f.left,
      S = r - f.top,
      T = o - t + f.width,
      M = a - r + f.height;
    Object.values(u).some((I) => I !== 0)
      ? (n.beginPath(), Bb(n, { x: v, y: S, w: T, h: M, radius: u }), n.fill())
      : n.fillRect(v, S, T, M);
  }
}
function Z2(n, i) {
  let {
    ctx: e,
    options: { pointLabels: t },
  } = n;
  for (let r = i - 1; r >= 0; r--) {
    let o = n._pointLabelItems[r];
    if (!o.visible) continue;
    let a = t.setContext(n.getPointLabelContext(r));
    X2(e, a, o);
    let d = xo(a.font),
      { x: u, y: f, textAlign: v } = o;
    Ks(e, n._pointLabels[r], u, f + d.lineHeight / 2, d, {
      color: a.color,
      textAlign: v,
      textBaseline: "middle",
    });
  }
}
function zv(n, i, e, t) {
  let { ctx: r } = n;
  if (e) r.arc(n.xCenter, n.yCenter, i, 0, Kn);
  else {
    let o = n.getPointPosition(0, i);
    r.moveTo(o.x, o.y);
    for (let a = 1; a < t; a++)
      (o = n.getPointPosition(a, i)), r.lineTo(o.x, o.y);
  }
}
function J2(n, i, e, t, r) {
  let o = n.ctx,
    a = i.circular,
    { color: d, lineWidth: u } = i;
  (!a && !t) ||
    !d ||
    !u ||
    e < 0 ||
    (o.save(),
    (o.strokeStyle = d),
    (o.lineWidth = u),
    o.setLineDash(r.dash || []),
    (o.lineDashOffset = r.dashOffset),
    o.beginPath(),
    zv(n, e, a, t),
    o.closePath(),
    o.stroke(),
    o.restore());
}
function eT(n, i, e) {
  return Co(n, { label: e, index: i, type: "pointLabel" });
}
var Mv = class extends va {
    static id = "radialLinear";
    static defaults = {
      display: !0,
      animate: !0,
      position: "chartArea",
      angleLines: {
        display: !0,
        lineWidth: 1,
        borderDash: [],
        borderDashOffset: 0,
      },
      grid: { circular: !1 },
      startAngle: 0,
      ticks: { showLabelBackdrop: !0, callback: qs.formatters.numeric },
      pointLabels: {
        backdropColor: void 0,
        backdropPadding: 2,
        display: !0,
        font: { size: 10 },
        callback(i) {
          return i;
        },
        padding: 5,
        centerPointLabels: !1,
      },
    };
    static defaultRoutes = {
      "angleLines.color": "borderColor",
      "pointLabels.color": "color",
      "ticks.color": "color",
    };
    static descriptors = { angleLines: { _fallback: "grid" } };
    constructor(i) {
      super(i),
        (this.xCenter = void 0),
        (this.yCenter = void 0),
        (this.drawingArea = void 0),
        (this._pointLabels = []),
        (this._pointLabelItems = []);
    }
    setDimensions() {
      let i = (this._padding = Xn(hm(this.options) / 2)),
        e = (this.width = this.maxWidth - i.width),
        t = (this.height = this.maxHeight - i.height);
      (this.xCenter = Math.floor(this.left + e / 2 + i.left)),
        (this.yCenter = Math.floor(this.top + t / 2 + i.top)),
        (this.drawingArea = Math.floor(Math.min(e, t) / 2));
    }
    determineDataLimits() {
      let { min: i, max: e } = this.getMinMax(!1);
      (this.min = di(i) && !isNaN(i) ? i : 0),
        (this.max = di(e) && !isNaN(e) ? e : 0),
        this.handleTickRangeOptions();
    }
    computeTickLimit() {
      return Math.ceil(this.drawingArea / hm(this.options));
    }
    generateTickLabels(i) {
      va.prototype.generateTickLabels.call(this, i),
        (this._pointLabels = this.getLabels()
          .map((e, t) => {
            let r = Ht(this.options.pointLabels.callback, [e, t], this);
            return r || r === 0 ? r : "";
          })
          .filter((e, t) => this.chart.getDataVisibility(t)));
    }
    fit() {
      let i = this.options;
      i.display && i.pointLabels.display
        ? z2(this)
        : this.setCenterPoint(0, 0, 0, 0);
    }
    setCenterPoint(i, e, t, r) {
      (this.xCenter += Math.floor((i - e) / 2)),
        (this.yCenter += Math.floor((t - r) / 2)),
        (this.drawingArea -= Math.min(
          this.drawingArea / 2,
          Math.max(i, e, t, r)
        ));
    }
    getIndexAngle(i) {
      let e = Kn / (this._pointLabels.length || 1),
        t = this.options.startAngle || 0;
      return En(i * e + br(t));
    }
    getDistanceFromCenterForValue(i) {
      if (Ot(i)) return NaN;
      let e = this.drawingArea / (this.max - this.min);
      return this.options.reverse ? (this.max - i) * e : (i - this.min) * e;
    }
    getValueForDistanceFromCenter(i) {
      if (Ot(i)) return NaN;
      let e = i / (this.drawingArea / (this.max - this.min));
      return this.options.reverse ? this.max - e : this.min + e;
    }
    getPointLabelContext(i) {
      let e = this._pointLabels || [];
      if (i >= 0 && i < e.length) {
        let t = e[i];
        return eT(this.getContext(), i, t);
      }
    }
    getPointPosition(i, e, t = 0) {
      let r = this.getIndexAngle(i) - Qn + t;
      return {
        x: Math.cos(r) * e + this.xCenter,
        y: Math.sin(r) * e + this.yCenter,
        angle: r,
      };
    }
    getPointPositionForValue(i, e) {
      return this.getPointPosition(i, this.getDistanceFromCenterForValue(e));
    }
    getBasePosition(i) {
      return this.getPointPositionForValue(i || 0, this.getBaseValue());
    }
    getPointLabelPosition(i) {
      let { left: e, top: t, right: r, bottom: o } = this._pointLabelItems[i];
      return { left: e, top: t, right: r, bottom: o };
    }
    drawBackground() {
      let {
        backgroundColor: i,
        grid: { circular: e },
      } = this.options;
      if (i) {
        let t = this.ctx;
        t.save(),
          t.beginPath(),
          zv(
            this,
            this.getDistanceFromCenterForValue(this._endValue),
            e,
            this._pointLabels.length
          ),
          t.closePath(),
          (t.fillStyle = i),
          t.fill(),
          t.restore();
      }
    }
    drawGrid() {
      let i = this.ctx,
        e = this.options,
        { angleLines: t, grid: r, border: o } = e,
        a = this._pointLabels.length,
        d,
        u,
        f;
      if (
        (e.pointLabels.display && Z2(this, a),
        r.display &&
          this.ticks.forEach((v, S) => {
            if (S !== 0 || (S === 0 && this.min < 0)) {
              u = this.getDistanceFromCenterForValue(v.value);
              let T = this.getContext(S),
                M = r.setContext(T),
                I = o.setContext(T);
              J2(this, M, u, a, I);
            }
          }),
        t.display)
      ) {
        for (i.save(), d = a - 1; d >= 0; d--) {
          let v = t.setContext(this.getPointLabelContext(d)),
            { color: S, lineWidth: T } = v;
          !T ||
            !S ||
            ((i.lineWidth = T),
            (i.strokeStyle = S),
            i.setLineDash(v.borderDash),
            (i.lineDashOffset = v.borderDashOffset),
            (u = this.getDistanceFromCenterForValue(
              e.reverse ? this.min : this.max
            )),
            (f = this.getPointPosition(d, u)),
            i.beginPath(),
            i.moveTo(this.xCenter, this.yCenter),
            i.lineTo(f.x, f.y),
            i.stroke());
        }
        i.restore();
      }
    }
    drawBorder() {}
    drawLabels() {
      let i = this.ctx,
        e = this.options,
        t = e.ticks;
      if (!t.display) return;
      let r = this.getIndexAngle(0),
        o,
        a;
      i.save(),
        i.translate(this.xCenter, this.yCenter),
        i.rotate(r),
        (i.textAlign = "center"),
        (i.textBaseline = "middle"),
        this.ticks.forEach((d, u) => {
          if (u === 0 && this.min >= 0 && !e.reverse) return;
          let f = t.setContext(this.getContext(u)),
            v = xo(f.font);
          if (
            ((o = this.getDistanceFromCenterForValue(this.ticks[u].value)),
            f.showLabelBackdrop)
          ) {
            (i.font = v.string),
              (a = i.measureText(d.label).width),
              (i.fillStyle = f.backdropColor);
            let S = Xn(f.backdropPadding);
            i.fillRect(
              -a / 2 - S.left,
              -o - v.size / 2 - S.top,
              a + S.width,
              v.size + S.height
            );
          }
          Ks(i, d.label, 0, -o, v, {
            color: f.color,
            strokeColor: f.textStrokeColor,
            strokeWidth: f.textStrokeWidth,
          });
        }),
        i.restore();
    }
    drawTitle() {}
  },
  Cd = {
    millisecond: { common: !0, size: 1, steps: 1e3 },
    second: { common: !0, size: 1e3, steps: 60 },
    minute: { common: !0, size: 6e4, steps: 60 },
    hour: { common: !0, size: 36e5, steps: 24 },
    day: { common: !0, size: 864e5, steps: 30 },
    week: { common: !1, size: 6048e5, steps: 4 },
    month: { common: !0, size: 2628e6, steps: 12 },
    quarter: { common: !1, size: 7884e6, steps: 4 },
    year: { common: !0, size: 3154e7 },
  },
  Hi = Object.keys(Cd);
function Tv(n, i) {
  return n - i;
}
function Ev(n, i) {
  if (Ot(i)) return null;
  let e = n._adapter,
    { parser: t, round: r, isoWeekday: o } = n._parseOpts,
    a = i;
  return (
    typeof t == "function" && (a = t(a)),
    di(a) || (a = typeof t == "string" ? e.parse(a, t) : e.parse(a)),
    a === null
      ? null
      : (r &&
          (a =
            r === "week" && (Ys(o) || o === !0)
              ? e.startOf(a, "isoWeek", o)
              : e.startOf(a, r)),
        +a)
  );
}
function Ov(n, i, e, t) {
  let r = Hi.length;
  for (let o = Hi.indexOf(n); o < r - 1; ++o) {
    let a = Cd[Hi[o]],
      d = a.steps ? a.steps : Number.MAX_SAFE_INTEGER;
    if (a.common && Math.ceil((e - i) / (d * a.size)) <= t) return Hi[o];
  }
  return Hi[r - 1];
}
function tT(n, i, e, t, r) {
  for (let o = Hi.length - 1; o >= Hi.indexOf(e); o--) {
    let a = Hi[o];
    if (Cd[a].common && n._adapter.diff(r, t, a) >= i - 1) return a;
  }
  return Hi[e ? Hi.indexOf(e) : 0];
}
function iT(n) {
  for (let i = Hi.indexOf(n) + 1, e = Hi.length; i < e; ++i)
    if (Cd[Hi[i]].common) return Hi[i];
}
function kv(n, i, e) {
  if (!e) n[i] = !0;
  else if (e.length) {
    let { lo: t, hi: r } = rd(e, i),
      o = e[t] >= i ? e[t] : e[r];
    n[o] = !0;
  }
}
function nT(n, i, e, t) {
  let r = n._adapter,
    o = +r.startOf(i[0].value, t),
    a = i[i.length - 1].value,
    d,
    u;
  for (d = o; d <= a; d = +r.add(d, 1, t))
    (u = e[d]), u >= 0 && (i[u].major = !0);
  return i;
}
function Pv(n, i, e) {
  let t = [],
    r = {},
    o = i.length,
    a,
    d;
  for (a = 0; a < o; ++a)
    (d = i[a]), (r[d] = a), t.push({ value: d, major: !1 });
  return o === 0 || !e ? t : nT(n, t, r, e);
}
var Iv = (() => {
  class n extends ba {
    static id = "time";
    static defaults = {
      bounds: "data",
      adapters: {},
      time: {
        parser: !1,
        unit: !1,
        round: !1,
        isoWeekday: !1,
        minUnit: "millisecond",
        displayFormats: {},
      },
      ticks: { source: "auto", callback: !1, major: { enabled: !1 } },
    };
    constructor(e) {
      super(e),
        (this._cache = { data: [], labels: [], all: [] }),
        (this._unit = "day"),
        (this._majorUnit = void 0),
        (this._offsets = {}),
        (this._normalized = !1),
        (this._parseOpts = void 0);
    }
    init(e, t = {}) {
      let r = e.time || (e.time = {}),
        o = (this._adapter = new FM._date(e.adapters.date));
      o.init(t),
        ga(r.displayFormats, o.formats()),
        (this._parseOpts = {
          parser: r.parser,
          round: r.round,
          isoWeekday: r.isoWeekday,
        }),
        super.init(e),
        (this._normalized = t.normalized);
    }
    parse(e, t) {
      return e === void 0 ? null : Ev(this, e);
    }
    beforeLayout() {
      super.beforeLayout(), (this._cache = { data: [], labels: [], all: [] });
    }
    determineDataLimits() {
      let e = this.options,
        t = this._adapter,
        r = e.time.unit || "day",
        { min: o, max: a, minDefined: d, maxDefined: u } = this.getUserBounds();
      function f(v) {
        !d && !isNaN(v.min) && (o = Math.min(o, v.min)),
          !u && !isNaN(v.max) && (a = Math.max(a, v.max));
      }
      (!d || !u) &&
        (f(this._getLabelBounds()),
        (e.bounds !== "ticks" || e.ticks.source !== "labels") &&
          f(this.getMinMax(!1))),
        (o = di(o) && !isNaN(o) ? o : +t.startOf(Date.now(), r)),
        (a = di(a) && !isNaN(a) ? a : +t.endOf(Date.now(), r) + 1),
        (this.min = Math.min(o, a - 1)),
        (this.max = Math.max(o + 1, a));
    }
    _getLabelBounds() {
      let e = this.getLabelTimestamps(),
        t = Number.POSITIVE_INFINITY,
        r = Number.NEGATIVE_INFINITY;
      return (
        e.length && ((t = e[0]), (r = e[e.length - 1])), { min: t, max: r }
      );
    }
    buildTicks() {
      let e = this.options,
        t = e.time,
        r = e.ticks,
        o =
          r.source === "labels" ? this.getLabelTimestamps() : this._generate();
      e.bounds === "ticks" &&
        o.length &&
        ((this.min = this._userMin || o[0]),
        (this.max = this._userMax || o[o.length - 1]));
      let a = this.min,
        d = this.max,
        u = kb(o, a, d);
      return (
        (this._unit =
          t.unit ||
          (r.autoSkip
            ? Ov(t.minUnit, this.min, this.max, this._getLabelCapacity(a))
            : tT(this, u.length, t.minUnit, this.min, this.max))),
        (this._majorUnit =
          !r.major.enabled || this._unit === "year" ? void 0 : iT(this._unit)),
        this.initOffsets(o),
        e.reverse && u.reverse(),
        Pv(this, u, this._majorUnit)
      );
    }
    afterAutoSkip() {
      this.options.offsetAfterAutoskip &&
        this.initOffsets(this.ticks.map((e) => +e.value));
    }
    initOffsets(e = []) {
      let t = 0,
        r = 0,
        o,
        a;
      this.options.offset &&
        e.length &&
        ((o = this.getDecimalForValue(e[0])),
        e.length === 1
          ? (t = 1 - o)
          : (t = (this.getDecimalForValue(e[1]) - o) / 2),
        (a = this.getDecimalForValue(e[e.length - 1])),
        e.length === 1
          ? (r = a)
          : (r = (a - this.getDecimalForValue(e[e.length - 2])) / 2));
      let d = e.length < 3 ? 0.5 : 0.25;
      (t = zr(t, 0, d)),
        (r = zr(r, 0, d)),
        (this._offsets = { start: t, end: r, factor: 1 / (t + 1 + r) });
    }
    _generate() {
      let e = this._adapter,
        t = this.min,
        r = this.max,
        o = this.options,
        a = o.time,
        d = a.unit || Ov(a.minUnit, t, r, this._getLabelCapacity(t)),
        u = Gt(o.ticks.stepSize, 1),
        f = d === "week" ? a.isoWeekday : !1,
        v = Ys(f) || f === !0,
        S = {},
        T = t,
        M,
        I;
      if (
        (v && (T = +e.startOf(T, "isoWeek", f)),
        (T = +e.startOf(T, v ? "day" : d)),
        e.diff(r, t, d) > 1e5 * u)
      )
        throw new Error(
          t + " and " + r + " are too far apart with stepSize of " + u + " " + d
        );
      let L = o.ticks.source === "data" && this.getDataTimestamps();
      for (M = T, I = 0; M < r; M = +e.add(M, u, d), I++) kv(S, M, L);
      return (
        (M === r || o.bounds === "ticks" || I === 1) && kv(S, M, L),
        Object.keys(S)
          .sort(Tv)
          .map((E) => +E)
      );
    }
    getLabelForValue(e) {
      let t = this._adapter,
        r = this.options.time;
      return r.tooltipFormat
        ? t.format(e, r.tooltipFormat)
        : t.format(e, r.displayFormats.datetime);
    }
    format(e, t) {
      let o = this.options.time.displayFormats,
        a = this._unit,
        d = t || o[a];
      return this._adapter.format(e, d);
    }
    _tickFormatFunction(e, t, r, o) {
      let a = this.options,
        d = a.ticks.callback;
      if (d) return Ht(d, [e, t, r], this);
      let u = a.time.displayFormats,
        f = this._unit,
        v = this._majorUnit,
        S = f && u[f],
        T = v && u[v],
        M = r[t],
        I = v && T && M && M.major;
      return this._adapter.format(e, o || (I ? T : S));
    }
    generateTickLabels(e) {
      let t, r, o;
      for (t = 0, r = e.length; t < r; ++t)
        (o = e[t]), (o.label = this._tickFormatFunction(o.value, t, e));
    }
    getDecimalForValue(e) {
      return e === null ? NaN : (e - this.min) / (this.max - this.min);
    }
    getPixelForValue(e) {
      let t = this._offsets,
        r = this.getDecimalForValue(e);
      return this.getPixelForDecimal((t.start + r) * t.factor);
    }
    getValueForPixel(e) {
      let t = this._offsets,
        r = this.getDecimalForPixel(e) / t.factor - t.end;
      return this.min + r * (this.max - this.min);
    }
    _getLabelSize(e) {
      let t = this.options.ticks,
        r = this.ctx.measureText(e).width,
        o = br(this.isHorizontal() ? t.maxRotation : t.minRotation),
        a = Math.cos(o),
        d = Math.sin(o),
        u = this._resolveTickFontOptions(0).size;
      return { w: r * a + u * d, h: r * d + u * a };
    }
    _getLabelCapacity(e) {
      let t = this.options.time,
        r = t.displayFormats,
        o = r[t.unit] || r.millisecond,
        a = this._tickFormatFunction(e, 0, Pv(this, [e], this._majorUnit), o),
        d = this._getLabelSize(a),
        u =
          Math.floor(
            this.isHorizontal() ? this.width / d.w : this.height / d.h
          ) - 1;
      return u > 0 ? u : 1;
    }
    getDataTimestamps() {
      let e = this._cache.data || [],
        t,
        r;
      if (e.length) return e;
      let o = this.getMatchingVisibleMetas();
      if (this._normalized && o.length)
        return (this._cache.data = o[0].controller.getAllParsedValues(this));
      for (t = 0, r = o.length; t < r; ++t)
        e = e.concat(o[t].controller.getAllParsedValues(this));
      return (this._cache.data = this.normalize(e));
    }
    getLabelTimestamps() {
      let e = this._cache.labels || [],
        t,
        r;
      if (e.length) return e;
      let o = this.getLabels();
      for (t = 0, r = o.length; t < r; ++t) e.push(Ev(this, o[t]));
      return (this._cache.labels = this._normalized ? e : this.normalize(e));
    }
    normalize(e) {
      return Ab(e.sort(Tv));
    }
  }
  return n;
})();
function gd(n, i, e) {
  let t = 0,
    r = n.length - 1,
    o,
    a,
    d,
    u;
  e
    ? (i >= n[t].pos && i <= n[r].pos && ({ lo: t, hi: r } = od(n, "pos", i)),
      ({ pos: o, time: d } = n[t]),
      ({ pos: a, time: u } = n[r]))
    : (i >= n[t].time &&
        i <= n[r].time &&
        ({ lo: t, hi: r } = od(n, "time", i)),
      ({ time: o, pos: d } = n[t]),
      ({ time: a, pos: u } = n[r]));
  let f = a - o;
  return f ? d + ((u - d) * (i - o)) / f : d;
}
var Av = class extends Iv {
  static id = "timeseries";
  static defaults = Iv.defaults;
  constructor(i) {
    super(i),
      (this._table = []),
      (this._minPos = void 0),
      (this._tableRange = void 0);
  }
  initOffsets() {
    let i = this._getTimestampsForTable(),
      e = (this._table = this.buildLookupTable(i));
    (this._minPos = gd(e, this.min)),
      (this._tableRange = gd(e, this.max) - this._minPos),
      super.initOffsets(i);
  }
  buildLookupTable(i) {
    let { min: e, max: t } = this,
      r = [],
      o = [],
      a,
      d,
      u,
      f,
      v;
    for (a = 0, d = i.length; a < d; ++a)
      (f = i[a]), f >= e && f <= t && r.push(f);
    if (r.length < 2)
      return [
        { time: e, pos: 0 },
        { time: t, pos: 1 },
      ];
    for (a = 0, d = r.length; a < d; ++a)
      (v = r[a + 1]),
        (u = r[a - 1]),
        (f = r[a]),
        Math.round((v + u) / 2) !== f && o.push({ time: f, pos: a / (d - 1) });
    return o;
  }
  _generate() {
    let i = this.min,
      e = this.max,
      t = super.getDataTimestamps();
    return (
      (!t.includes(i) || !t.length) && t.splice(0, 0, i),
      (!t.includes(e) || t.length === 1) && t.push(e),
      t.sort((r, o) => r - o)
    );
  }
  _getTimestampsForTable() {
    let i = this._cache.all || [];
    if (i.length) return i;
    let e = this.getDataTimestamps(),
      t = this.getLabelTimestamps();
    return (
      e.length && t.length
        ? (i = this.normalize(e.concat(t)))
        : (i = e.length ? e : t),
      (i = this._cache.all = i),
      i
    );
  }
  getDecimalForValue(i) {
    return (gd(this._table, i) - this._minPos) / this._tableRange;
  }
  getValueForPixel(i) {
    let e = this._offsets,
      t = this.getDecimalForPixel(i) / e.factor - e.end;
    return gd(this._table, t * this._tableRange + this._minPos, !0);
  }
};
var mm = class {
  constructor() {
    (this.class = ""),
      (this.backgroundGradient = !1),
      (this.backgroundColor = "transparent"),
      (this.backgroundGradientStopColor = "transparent"),
      (this.backgroundOpacity = 1),
      (this.backgroundStroke = "transparent"),
      (this.backgroundStrokeWidth = 0),
      (this.backgroundPadding = 5),
      (this.percent = 0),
      (this.radius = 90),
      (this.space = 4),
      (this.toFixed = 0),
      (this.maxPercent = 1e3),
      (this.renderOnClick = !0),
      (this.units = "%"),
      (this.unitsFontSize = "10"),
      (this.unitsFontWeight = "normal"),
      (this.unitsColor = "#444444"),
      (this.outerStrokeGradient = !1),
      (this.outerStrokeWidth = 8),
      (this.outerStrokeColor = "#78C000"),
      (this.outerStrokeGradientStopColor = "transparent"),
      (this.outerStrokeLinecap = "round"),
      (this.innerStrokeColor = "#C7E596"),
      (this.innerStrokeWidth = 4),
      (this.titleFormat = void 0),
      (this.title = "auto"),
      (this.titleColor = "#444444"),
      (this.titleFontSize = "20"),
      (this.titleFontWeight = "normal"),
      (this.subtitleFormat = void 0),
      (this.subtitle = "progress"),
      (this.subtitleColor = "#A9A9A9"),
      (this.subtitleFontSize = "10"),
      (this.subtitleFontWeight = "normal"),
      (this.imageSrc = void 0),
      (this.imageHeight = 0),
      (this.imageWidth = 0),
      (this.animation = !0),
      (this.animateTitle = !0),
      (this.animateSubtitle = !1),
      (this.animationDuration = 500),
      (this.showTitle = !0),
      (this.showSubtitle = !0),
      (this.showUnits = !0),
      (this.showImage = !1),
      (this.showBackground = !0),
      (this.showInnerStroke = !0),
      (this.clockwise = !0),
      (this.responsive = !1),
      (this.startFromZero = !0),
      (this.showZeroOuterStroke = !0),
      (this.lazy = !1);
  }
};
var wd = (() => {
  class n {
    static forRoot(e = {}) {
      return { ngModule: n, providers: [{ provide: mm, useValue: e }] };
    }
  }
  return (
    (n.ɵfac = function (e) {
      return new (e || n)();
    }),
    (n.ɵmod = ye({ type: n })),
    (n.ɵinj = ve({ imports: [Ae] })),
    n
  );
})();
var Sd = class n {
  constructor(i) {
    this.http = i;
  }
  baseUrl = "https://uat.smartassistapp.in/api/superAdmin/dashboard";
  getDealerActivities(i) {
    let e = sessionStorage.getItem("token"),
      t = new Tt({ Authorization: `Bearer ${e}` }),
      r = `${this.baseUrl}/NoSM?type=${i}`;
    return this.http.get(r, { headers: t });
  }
  getDealerActivitiesCustom(i, e, t) {
    let r = sessionStorage.getItem("token"),
      o = new Tt({ Authorization: `Bearer ${r}` }),
      a = t || "MTD",
      d = `${this.baseUrl}/NoSM?type=${a}&start_date=${i}&end_date=${e}`;
    return this.http.get(d, { headers: o });
  }
  getNoSMUsers(i, e = "MTD", t, r) {
    let o = sessionStorage.getItem("token"),
      a = new Tt({ Authorization: `Bearer ${o}` }),
      d = `${this.baseUrl}/NoSM?dealer_id=${i}&type=${e}`;
    return (
      e === "CUSTOM" && t && r && (d += `&start_date=${t}&end_date=${r}`),
      this.http.get(d, { headers: a })
    );
  }
  getDealers(i, e) {
    return this.http.get(
      `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${i}`,
      { headers: { Authorization: `Bearer ${e}` } }
    );
  }
  getDealersByCustomDate(i, e, t, r) {
    let o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?start_date=${i}&end_date=${e}`;
    return (
      r &&
        (o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${r}&start_date=${i}&end_date=${e}`),
      this.http.get(o, { headers: { Authorization: `Bearer ${t}` } })
    );
  }
  getDealerUsers(i, e, t) {
    let r = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&type=${e}`;
    return this.http.get(r, { headers: { Authorization: `Bearer ${t}` } });
  }
  getCustomUsers(i, e, t, r) {
    let o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&start_date=${e}&end_date=${t}`;
    return this.http.get(o, { headers: { Authorization: `Bearer ${r}` } });
  }
  getKpiData(i, e = "MTD") {
    let t = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${e}`;
    return this.http.get(t, { headers: { Authorization: `Bearer ${i}` } });
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(jt));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Dd = class n {
  selectedDealerSource = new Nt(null);
  selectedDealer$ = this.selectedDealerSource.asObservable();
  setSelectedDealer(i) {
    this.selectedDealerSource.next(i);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var $v = ["toast-component", ""];
function aT(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 5),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.remove());
      }),
      l(1, "span", 6),
      h(2, "\xD7"),
      c()();
  }
}
function sT(n, i) {
  if ((n & 1 && (Le(0), h(1), Ve()), n & 2)) {
    let e = x(2);
    m(), Z("[", e.duplicatesCount + 1, "]");
  }
}
function lT(n, i) {
  if (
    (n & 1 && (l(0, "div"), h(1), A(2, sT, 2, 1, "ng-container", 4), c()),
    n & 2)
  ) {
    let e = x();
    He(e.options.titleClass),
      ce("aria-label", e.title),
      m(),
      Z(" ", e.title, " "),
      m(),
      y("ngIf", e.duplicatesCount);
  }
}
function cT(n, i) {
  if ((n & 1 && U(0, "div", 7), n & 2)) {
    let e = x();
    He(e.options.messageClass), y("innerHTML", e.message, es);
  }
}
function dT(n, i) {
  if ((n & 1 && (l(0, "div", 8), h(1), c()), n & 2)) {
    let e = x();
    He(e.options.messageClass),
      ce("aria-label", e.message),
      m(),
      Z(" ", e.message, " ");
  }
}
function uT(n, i) {
  if ((n & 1 && (l(0, "div"), U(1, "div", 9), c()), n & 2)) {
    let e = x();
    m(), Lt("width", e.width() + "%");
  }
}
function hT(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 5),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.remove());
      }),
      l(1, "span", 6),
      h(2, "\xD7"),
      c()();
  }
}
function pT(n, i) {
  if ((n & 1 && (Le(0), h(1), Ve()), n & 2)) {
    let e = x(2);
    m(), Z("[", e.duplicatesCount + 1, "]");
  }
}
function mT(n, i) {
  if (
    (n & 1 && (l(0, "div"), h(1), A(2, pT, 2, 1, "ng-container", 4), c()),
    n & 2)
  ) {
    let e = x();
    He(e.options.titleClass),
      ce("aria-label", e.title),
      m(),
      Z(" ", e.title, " "),
      m(),
      y("ngIf", e.duplicatesCount);
  }
}
function fT(n, i) {
  if ((n & 1 && U(0, "div", 7), n & 2)) {
    let e = x();
    He(e.options.messageClass), y("innerHTML", e.message, es);
  }
}
function gT(n, i) {
  if ((n & 1 && (l(0, "div", 8), h(1), c()), n & 2)) {
    let e = x();
    He(e.options.messageClass),
      ce("aria-label", e.message),
      m(),
      Z(" ", e.message, " ");
  }
}
function _T(n, i) {
  if ((n & 1 && (l(0, "div"), U(1, "div", 9), c()), n & 2)) {
    let e = x();
    m(), Lt("width", e.width() + "%");
  }
}
var fm = class {
    _attachedHost;
    component;
    viewContainerRef;
    injector;
    constructor(i, e) {
      (this.component = i), (this.injector = e);
    }
    attach(i, e) {
      return (this._attachedHost = i), i.attach(this, e);
    }
    detach() {
      let i = this._attachedHost;
      if (i) return (this._attachedHost = void 0), i.detach();
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(i) {
      this._attachedHost = i;
    }
  },
  gm = class {
    _attachedPortal;
    _disposeFn;
    attach(i, e) {
      return (this._attachedPortal = i), this.attachComponentPortal(i, e);
    }
    detach() {
      this._attachedPortal && this._attachedPortal.setAttachedHost(),
        (this._attachedPortal = void 0),
        this._disposeFn && (this._disposeFn(), (this._disposeFn = void 0));
    }
    setDisposeFn(i) {
      this._disposeFn = i;
    }
  },
  _m = class {
    _overlayRef;
    componentInstance;
    duplicatesCount = 0;
    _afterClosed = new Ee();
    _activate = new Ee();
    _manualClose = new Ee();
    _resetTimeout = new Ee();
    _countDuplicate = new Ee();
    constructor(i) {
      this._overlayRef = i;
    }
    manualClose() {
      this._manualClose.next(), this._manualClose.complete();
    }
    manualClosed() {
      return this._manualClose.asObservable();
    }
    timeoutReset() {
      return this._resetTimeout.asObservable();
    }
    countDuplicate() {
      return this._countDuplicate.asObservable();
    }
    close() {
      this._overlayRef.detach(),
        this._afterClosed.next(),
        this._manualClose.next(),
        this._afterClosed.complete(),
        this._manualClose.complete(),
        this._activate.complete(),
        this._resetTimeout.complete(),
        this._countDuplicate.complete();
    }
    afterClosed() {
      return this._afterClosed.asObservable();
    }
    isInactive() {
      return this._activate.isStopped;
    }
    activate() {
      this._activate.next(), this._activate.complete();
    }
    afterActivate() {
      return this._activate.asObservable();
    }
    onDuplicate(i, e) {
      i && this._resetTimeout.next(),
        e && this._countDuplicate.next(++this.duplicatesCount);
    }
  },
  ya = class {
    toastId;
    config;
    message;
    title;
    toastType;
    toastRef;
    _onTap = new Ee();
    _onAction = new Ee();
    constructor(i, e, t, r, o, a) {
      (this.toastId = i),
        (this.config = e),
        (this.message = t),
        (this.title = r),
        (this.toastType = o),
        (this.toastRef = a),
        this.toastRef.afterClosed().subscribe(() => {
          this._onAction.complete(), this._onTap.complete();
        });
    }
    triggerTap() {
      this._onTap.next(), this.config.tapToDismiss && this._onTap.complete();
    }
    onTap() {
      return this._onTap.asObservable();
    }
    triggerAction(i) {
      this._onAction.next(i);
    }
    onAction() {
      return this._onAction.asObservable();
    }
  },
  Wv = {
    maxOpened: 0,
    autoDismiss: !1,
    newestOnTop: !0,
    preventDuplicates: !1,
    countDuplicates: !1,
    resetTimeoutOnDuplicate: !1,
    includeTitleDuplicates: !1,
    iconClasses: {
      error: "toast-error",
      info: "toast-info",
      success: "toast-success",
      warning: "toast-warning",
    },
    closeButton: !1,
    disableTimeOut: !1,
    timeOut: 5e3,
    extendedTimeOut: 1e3,
    enableHtml: !1,
    progressBar: !1,
    toastClass: "ngx-toastr",
    positionClass: "toast-top-right",
    titleClass: "toast-title",
    messageClass: "toast-message",
    easing: "ease-in",
    easeTime: 300,
    tapToDismiss: !0,
    onActivateTick: !1,
    progressAnimation: "decreasing",
  },
  Gv = new Ce("ToastConfig"),
  bm = class extends gm {
    _hostDomElement;
    _componentFactoryResolver;
    _appRef;
    constructor(i, e, t) {
      super(),
        (this._hostDomElement = i),
        (this._componentFactoryResolver = e),
        (this._appRef = t);
    }
    attachComponentPortal(i, e) {
      let t = this._componentFactoryResolver.resolveComponentFactory(
          i.component
        ),
        r;
      return (
        (r = t.create(i.injector)),
        this._appRef.attachView(r.hostView),
        this.setDisposeFn(() => {
          this._appRef.detachView(r.hostView), r.destroy();
        }),
        e
          ? this._hostDomElement.insertBefore(
              this._getComponentRootNode(r),
              this._hostDomElement.firstChild
            )
          : this._hostDomElement.appendChild(this._getComponentRootNode(r)),
        r
      );
    }
    _getComponentRootNode(i) {
      return i.hostView.rootNodes[0];
    }
  },
  bT = (() => {
    class n {
      _document = W(Oe);
      _containerElement;
      ngOnDestroy() {
        this._containerElement &&
          this._containerElement.parentNode &&
          this._containerElement.parentNode.removeChild(this._containerElement);
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = this._document.createElement("div");
        e.classList.add("overlay-container"),
          e.setAttribute("aria-live", "polite"),
          this._document.body.appendChild(e),
          (this._containerElement = e);
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  vm = class {
    _portalHost;
    constructor(i) {
      this._portalHost = i;
    }
    attach(i, e = !0) {
      return this._portalHost.attach(i, e);
    }
    detach() {
      return this._portalHost.detach();
    }
  },
  vT = (() => {
    class n {
      _overlayContainer = W(bT);
      _componentFactoryResolver = W(ao);
      _appRef = W(Ni);
      _document = W(Oe);
      _paneElements = new Map();
      create(e, t) {
        return this._createOverlayRef(this.getPaneElement(e, t));
      }
      getPaneElement(e = "", t) {
        return (
          this._paneElements.get(t) || this._paneElements.set(t, {}),
          this._paneElements.get(t)[e] ||
            (this._paneElements.get(t)[e] = this._createPaneElement(e, t)),
          this._paneElements.get(t)[e]
        );
      }
      _createPaneElement(e, t) {
        let r = this._document.createElement("div");
        return (
          (r.id = "toast-container"),
          r.classList.add(e),
          r.classList.add("toast-container"),
          t
            ? t.getContainerElement().appendChild(r)
            : this._overlayContainer.getContainerElement().appendChild(r),
          r
        );
      }
      _createPortalHost(e) {
        return new bm(e, this._componentFactoryResolver, this._appRef);
      }
      _createOverlayRef(e) {
        return new vm(this._createPortalHost(e));
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  fi = (() => {
    class n {
      overlay;
      _injector;
      sanitizer;
      ngZone;
      toastrConfig;
      currentlyActive = 0;
      toasts = [];
      overlayContainer;
      previousToastMessage;
      index = 0;
      constructor(e, t, r, o, a) {
        (this.overlay = t),
          (this._injector = r),
          (this.sanitizer = o),
          (this.ngZone = a),
          (this.toastrConfig = G(G({}, e.default), e.config)),
          e.config.iconClasses &&
            (this.toastrConfig.iconClasses = G(
              G({}, e.default.iconClasses),
              e.config.iconClasses
            ));
      }
      show(e, t, r = {}, o = "") {
        return this._preBuildNotification(o, e, t, this.applyConfig(r));
      }
      success(e, t, r = {}) {
        let o = this.toastrConfig.iconClasses.success || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(r));
      }
      error(e, t, r = {}) {
        let o = this.toastrConfig.iconClasses.error || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(r));
      }
      info(e, t, r = {}) {
        let o = this.toastrConfig.iconClasses.info || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(r));
      }
      warning(e, t, r = {}) {
        let o = this.toastrConfig.iconClasses.warning || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(r));
      }
      clear(e) {
        for (let t of this.toasts)
          if (e !== void 0) {
            if (t.toastId === e) {
              t.toastRef.manualClose();
              return;
            }
          } else t.toastRef.manualClose();
      }
      remove(e) {
        let t = this._findToast(e);
        if (
          !t ||
          (t.activeToast.toastRef.close(),
          this.toasts.splice(t.index, 1),
          (this.currentlyActive = this.currentlyActive - 1),
          !this.toastrConfig.maxOpened || !this.toasts.length)
        )
          return !1;
        if (
          this.currentlyActive < this.toastrConfig.maxOpened &&
          this.toasts[this.currentlyActive]
        ) {
          let r = this.toasts[this.currentlyActive].toastRef;
          r.isInactive() ||
            ((this.currentlyActive = this.currentlyActive + 1), r.activate());
        }
        return !0;
      }
      findDuplicate(e = "", t = "", r, o) {
        let { includeTitleDuplicates: a } = this.toastrConfig;
        for (let d of this.toasts) {
          let u = a && d.title === e;
          if ((!a || u) && d.message === t)
            return d.toastRef.onDuplicate(r, o), d;
        }
        return null;
      }
      applyConfig(e = {}) {
        return G(G({}, this.toastrConfig), e);
      }
      _findToast(e) {
        for (let t = 0; t < this.toasts.length; t++)
          if (this.toasts[t].toastId === e)
            return { index: t, activeToast: this.toasts[t] };
        return null;
      }
      _preBuildNotification(e, t, r, o) {
        return o.onActivateTick
          ? this.ngZone.run(() => this._buildNotification(e, t, r, o))
          : this._buildNotification(e, t, r, o);
      }
      _buildNotification(e, t, r, o) {
        if (!o.toastComponent) throw new Error("toastComponent required");
        let a = this.findDuplicate(
          r,
          t,
          this.toastrConfig.resetTimeoutOnDuplicate && o.timeOut > 0,
          this.toastrConfig.countDuplicates
        );
        if (
          ((this.toastrConfig.includeTitleDuplicates && r) || t) &&
          this.toastrConfig.preventDuplicates &&
          a !== null
        )
          return a;
        this.previousToastMessage = t;
        let d = !1;
        this.toastrConfig.maxOpened &&
          this.currentlyActive >= this.toastrConfig.maxOpened &&
          ((d = !0),
          this.toastrConfig.autoDismiss && this.clear(this.toasts[0].toastId));
        let u = this.overlay.create(o.positionClass, this.overlayContainer);
        this.index = this.index + 1;
        let f = t;
        t && o.enableHtml && (f = this.sanitizer.sanitize(lr.HTML, t));
        let v = new _m(u),
          S = new ya(this.index, o, f, r, e, v),
          T = [{ provide: ya, useValue: S }],
          M = Mt.create({ providers: T, parent: this._injector }),
          I = new fm(o.toastComponent, M),
          L = u.attach(I, o.newestOnTop);
        v.componentInstance = L.instance;
        let E = {
          toastId: this.index,
          title: r || "",
          message: t || "",
          toastRef: v,
          onShown: v.afterActivate(),
          onHidden: v.afterClosed(),
          onTap: S.onTap(),
          onAction: S.onAction(),
          portal: L,
        };
        return (
          d ||
            ((this.currentlyActive = this.currentlyActive + 1),
            setTimeout(() => {
              E.toastRef.activate();
            })),
          this.toasts.push(E),
          E
        );
      }
      static ɵfac = function (t) {
        return new (t || n)(Q(Gv), Q(vT), Q(Mt), Q(Dh), Q(Me));
      };
      static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  yT = (() => {
    class n {
      toastrService;
      toastPackage;
      ngZone;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = pe(-1);
      toastClasses = "";
      state;
      get _state() {
        return this.state();
      }
      get displayStyle() {
        if (this.state().value === "inactive") return "none";
      }
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, t, r) {
        (this.toastrService = e),
          (this.toastPackage = t),
          (this.ngZone = r),
          (this.message = t.message),
          (this.title = t.title),
          (this.options = t.config),
          (this.originalTimeout = t.config.timeOut),
          (this.toastClasses = `${t.toastType} ${t.config.toastClass}`),
          (this.sub = t.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = t.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = t.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = t.toastRef.countDuplicate().subscribe((o) => {
            this.duplicatesCount = o;
          })),
          (this.state = pe({
            value: "inactive",
            params: {
              easeTime: this.toastPackage.config.easeTime,
              easing: "ease-in",
            },
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.update((e) => Te(G({}, e), { value: "active" })),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            (this.outsideTimeout(() => this.remove(), this.options.timeOut),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              this.outsideInterval(() => this.updateProgress(), 10));
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          t = this.hideTime - e;
        this.width.set((t / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((r) => 100 - r),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.update((e) => Te(G({}, e), { value: "active" })),
          this.outsideTimeout(() => this.remove(), this.originalTimeout),
          (this.options.timeOut = this.originalTimeout),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10);
      }
      remove() {
        this.state().value !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.update((e) => Te(G({}, e), { value: "removed" })),
          this.outsideTimeout(
            () => this.toastrService.remove(this.toastPackage.toastId),
            +this.toastPackage.config.easeTime
          ));
      }
      tapToast() {
        this.state().value !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state().value !== "removed" &&
          this.options.disableTimeOut !== "extendedTimeOut" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state().value === "removed" ||
          (this.outsideTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          ),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10));
      }
      outsideTimeout(e, t) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.timeout = setTimeout(() => this.runInsideAngular(e), t))
            )
          : (this.timeout = setTimeout(() => e(), t));
      }
      outsideInterval(e, t) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.intervalId = setInterval(
                  () => this.runInsideAngular(e),
                  t
                ))
            )
          : (this.intervalId = setInterval(() => e(), t));
      }
      runInsideAngular(e) {
        this.ngZone ? this.ngZone.run(() => e()) : e();
      }
      static ɵfac = function (t) {
        return new (t || n)(j(fi), j(ya), j(Me));
      };
      static ɵcmp = se({
        type: n,
        selectors: [["", "toast-component", ""]],
        hostVars: 5,
        hostBindings: function (t, r) {
          t & 1 &&
            R("click", function () {
              return r.tapToast();
            })("mouseenter", function () {
              return r.stickAround();
            })("mouseleave", function () {
              return r.delayedHideToast();
            }),
            t & 2 &&
              (Yl("@flyInOut", r._state),
              He(r.toastClasses),
              Lt("display", r.displayStyle));
        },
        standalone: !0,
        features: [le],
        attrs: $v,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (t, r) {
          t & 1 &&
            A(0, aT, 3, 0, "button", 0)(1, lT, 3, 5, "div", 1)(
              2,
              cT,
              1,
              3,
              "div",
              2
            )(3, dT, 2, 4, "div", 3)(4, uT, 2, 2, "div", 4),
            t & 2 &&
              (y("ngIf", r.options.closeButton),
              m(),
              y("ngIf", r.title),
              m(),
              y("ngIf", r.message && r.options.enableHtml),
              m(),
              y("ngIf", r.message && !r.options.enableHtml),
              m(),
              y("ngIf", r.options.progressBar));
        },
        dependencies: [We],
        encapsulation: 2,
        data: {
          animation: [
            lo("flyInOut", [
              dr("inactive", li({ opacity: 0 })),
              dr("active", li({ opacity: 1 })),
              dr("removed", li({ opacity: 0 })),
              qi("inactive => active", Yi("{{ easeTime }}ms {{ easing }}")),
              qi("active => removed", Yi("{{ easeTime }}ms {{ easing }}")),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return n;
  })(),
  xT = Te(G({}, Wv), { toastComponent: yT }),
  CT = (n = {}) => zn([{ provide: Gv, useValue: { default: xT, config: n } }]),
  Yv = (() => {
    class n {
      static forRoot(e = {}) {
        return { ngModule: n, providers: [CT(e)] };
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({});
    }
    return n;
  })();
var wT = (() => {
    class n {
      toastrService;
      toastPackage;
      appRef;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = pe(-1);
      toastClasses = "";
      get displayStyle() {
        return this.state() === "inactive" ? "none" : null;
      }
      state = pe("inactive");
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, t, r) {
        (this.toastrService = e),
          (this.toastPackage = t),
          (this.appRef = r),
          (this.message = t.message),
          (this.title = t.title),
          (this.options = t.config),
          (this.originalTimeout = t.config.timeOut),
          (this.toastClasses = `${t.toastType} ${t.config.toastClass}`),
          (this.sub = t.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = t.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = t.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = t.toastRef.countDuplicate().subscribe((o) => {
            this.duplicatesCount = o;
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.set("active"),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            ((this.timeout = setTimeout(() => {
              this.remove();
            }, this.options.timeOut)),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              (this.intervalId = setInterval(() => this.updateProgress(), 10))),
          this.options.onActivateTick && this.appRef.tick();
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          t = this.hideTime - e;
        this.width.set((t / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((r) => 100 - r),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.set("active"),
          (this.options.timeOut = this.originalTimeout),
          (this.timeout = setTimeout(
            () => this.remove(),
            this.originalTimeout
          )),
          (this.hideTime = new Date().getTime() + (this.originalTimeout || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10));
      }
      remove() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.set("removed"),
          (this.timeout = setTimeout(() =>
            this.toastrService.remove(this.toastPackage.toastId)
          )));
      }
      tapToast() {
        this.state() !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state() === "removed" ||
          ((this.timeout = setTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          )),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10)));
      }
      static ɵfac = function (t) {
        return new (t || n)(j(fi), j(ya), j(Ni));
      };
      static ɵcmp = se({
        type: n,
        selectors: [["", "toast-component", ""]],
        hostVars: 4,
        hostBindings: function (t, r) {
          t & 1 &&
            R("click", function () {
              return r.tapToast();
            })("mouseenter", function () {
              return r.stickAround();
            })("mouseleave", function () {
              return r.delayedHideToast();
            }),
            t & 2 && (He(r.toastClasses), Lt("display", r.displayStyle));
        },
        standalone: !0,
        features: [le],
        attrs: $v,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (t, r) {
          t & 1 &&
            A(0, hT, 3, 0, "button", 0)(1, mT, 3, 5, "div", 1)(
              2,
              fT,
              1,
              3,
              "div",
              2
            )(3, gT, 2, 4, "div", 3)(4, _T, 2, 2, "div", 4),
            t & 2 &&
              (y("ngIf", r.options.closeButton),
              m(),
              y("ngIf", r.title),
              m(),
              y("ngIf", r.message && r.options.enableHtml),
              m(),
              y("ngIf", r.message && !r.options.enableHtml),
              m(),
              y("ngIf", r.options.progressBar));
        },
        dependencies: [We],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })(),
  G5 = Te(G({}, Wv), { toastComponent: wT });
var DT = ["chart"],
  MT = (n, i) => ({ "sidebar-open": n, "sidebar-closed": i }),
  qv = (n) => ({ active: n }),
  ym = (n) => ({ color: n }),
  TT = (n, i) => ({ "row-alt": n, "row-normal": i }),
  ET = (n) => ({
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    width: "16px",
    height: "16px",
    borderRadius: "50%",
    backgroundColor: n,
    color: "white",
    fontSize: "10px",
    flexShrink: 0,
    marginRight: "8px",
  }),
  OT = (n) => ({
    color: n,
    marginLeft: "4px",
    display: "inline-block",
    width: "36px",
    textAlign: "left",
    fontSize: "12px",
  }),
  Kv = (n) => ({ color: n });
function kT(n, i) {
  n & 1 && (l(0, "div", 63), U(1, "div", 64), c());
}
function PT(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 65)(1, "input", 66),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x(2);
        return ct(o.customStartDate, r) || (o.customStartDate = r), k(r);
      }),
      R("change", function () {
        O(e);
        let r = x(2);
        return k(r.validateCustomDates());
      }),
      c(),
      l(2, "input", 67),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x(2);
        return ct(o.customEndDate, r) || (o.customEndDate = r), k(r);
      }),
      R("change", function () {
        O(e);
        let r = x(2);
        return k(r.validateCustomDates());
      }),
      c(),
      l(3, "button", 68),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.applyCustomDate());
      }),
      h(4, "Apply"),
      c(),
      l(5, "button", 69),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.resetCustomDate());
      }),
      h(6, "Reset"),
      c()();
  }
  if (n & 2) {
    let e = x(2);
    m(), lt("ngModel", e.customStartDate), m(), lt("ngModel", e.customEndDate);
  }
}
function IT(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 79)(1, "input", 80),
      R("change", function (r) {
        let o = O(e).$implicit;
        return x(4).toggleDealerSelection(o), k(r.stopPropagation());
      }),
      c(),
      l(2, "span", 81),
      R("click", function (r) {
        let o = O(e).$implicit;
        return x(4).toggleDealerSelection(o), k(r.stopPropagation());
      }),
      h(3),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(4);
    m(), y("checked", t.isDealerSelected(e)), m(2), Z(" ", e.dealerName, " ");
  }
}
function AT(n, i) {
  if ((n & 1 && (Le(0), A(1, IT, 4, 2, "div", 78), Ve()), n & 2)) {
    let e = x(3);
    m(), y("ngForOf", e.filteredDealers)("ngForTrackBy", e.trackByDealerId);
  }
}
function RT(n, i) {
  n & 1 && (l(0, "div", 82), h(1, " No dealers found "), c());
}
function FT(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 70)(1, "div", 71)(2, "input", 72),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x(2);
        return ct(o.dealerSearch, r) || (o.dealerSearch = r), k(r);
      }),
      R("input", function () {
        O(e);
        let r = x(2);
        return k(r.filterDealers());
      })("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      c()(),
      l(3, "div", 73)(4, "label", 74),
      R("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      l(5, "input", 75),
      R("change", function (r) {
        return O(e), x(2).toggleSelectAll(r), k(r.stopPropagation());
      }),
      c(),
      h(6, " Select All "),
      c(),
      l(7, "button", 76),
      R("click", function (r) {
        return O(e), x(2).clearSelection(), k(r.stopPropagation());
      }),
      h(8, " Clear "),
      c()(),
      A(9, AT, 2, 2, "ng-container", 77)(
        10,
        RT,
        2,
        0,
        "ng-template",
        null,
        0,
        bt
      ),
      c();
  }
  if (n & 2) {
    let e = ut(11),
      t = x(2);
    m(2),
      lt("ngModel", t.dealerSearch),
      m(3),
      y("checked", t.areAllSelected()),
      m(4),
      y("ngIf", t.filteredDealers.length > 0)("ngIfElse", e);
  }
}
function NT(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "tr", 85)(1, "td", 86)(2, "button", 87),
      R("click", function (r) {
        O(e);
        let o = x().$implicit,
          a = x(2);
        return k(a.toggleRow(r, o));
      }),
      U(3, "i", 88),
      l(4, "span", 89),
      h(5),
      c()()(),
      l(6, "td", 90),
      h(7),
      c(),
      l(8, "td", 90),
      h(9),
      c(),
      l(10, "td", 90),
      h(11),
      c(),
      l(12, "td", 91),
      h(13),
      c(),
      l(14, "td", 92),
      h(15),
      c(),
      l(16, "td", 90),
      h(17),
      c(),
      l(18, "td", 90),
      h(19),
      c(),
      l(20, "td", 91),
      h(21),
      c(),
      l(22, "td", 92),
      h(23),
      c(),
      l(24, "td", 90),
      h(25),
      c(),
      l(26, "td", 90),
      h(27),
      c(),
      l(28, "td", 90),
      h(29),
      c(),
      l(30, "td", 91),
      h(31),
      c(),
      l(32, "td", 92),
      h(33),
      c(),
      l(34, "td", 90),
      h(35),
      c(),
      l(36, "td", 90),
      h(37),
      c(),
      l(38, "td", 90),
      h(39),
      c(),
      l(40, "td", 90),
      h(41),
      c()();
  }
  if (n & 2) {
    let e,
      t,
      r,
      o,
      a,
      d,
      u,
      f,
      v,
      S,
      T,
      M,
      I,
      L,
      E,
      F,
      ee,
      re,
      ge = x().$implicit,
      Pe = x(2);
    m(3),
      y(
        "ngClass",
        Pe.expandedRow === ge.dealerId ? "fa-chevron-down" : "fa-chevron-right"
      ),
      m(2),
      Z(" ", ge.dealerName, " "),
      m(2),
      B((e = ge.totalUsers) !== null && e !== void 0 ? e : 0),
      m(2),
      B((t = ge.registerUsers) !== null && t !== void 0 ? t : 0),
      m(2),
      B((r = ge.activeUsers) !== null && r !== void 0 ? r : 0),
      m(2),
      B((o = ge.saLeads) !== null && o !== void 0 ? o : 0),
      m(),
      y("ngStyle", de(23, ym, ge.saLeads === ge.cxpLeads ? "green" : "red")),
      m(),
      Z(" ", (a = ge.cxpLeads) !== null && a !== void 0 ? a : 0, " "),
      m(2),
      B((d = ge.icsLeads) !== null && d !== void 0 ? d : 0),
      m(2),
      B((u = ge.manuallyEnteredLeads) !== null && u !== void 0 ? u : 0),
      m(2),
      B((f = ge.saFollowUps) !== null && f !== void 0 ? f : 0),
      m(),
      y(
        "ngStyle",
        de(25, ym, ge.saFollowUps === ge.cxpFollowUps ? "green" : "red")
      ),
      m(),
      Z(" ", (v = ge.cxpFollowUps) !== null && v !== void 0 ? v : 0, " "),
      m(2),
      B((S = ge.completedFollowUps) !== null && S !== void 0 ? S : 0),
      m(2),
      B((T = ge.openFollowUps) !== null && T !== void 0 ? T : 0),
      m(2),
      B((M = ge.closedFollowUps) !== null && M !== void 0 ? M : 0),
      m(2),
      B((I = ge.saTestDrives) !== null && I !== void 0 ? I : 0),
      m(),
      y(
        "ngStyle",
        de(27, ym, ge.saTestDrives === ge.cxpTestDrives ? "green" : "red")
      ),
      m(),
      Z(" ", (L = ge.cxpTestDrives) !== null && L !== void 0 ? L : 0, " "),
      m(2),
      B((E = ge.completedTestDrives) !== null && E !== void 0 ? E : 0),
      m(2),
      B((F = ge.upcomingTestDrives) !== null && F !== void 0 ? F : 0),
      m(2),
      B((ee = ge.closedTestDrives) !== null && ee !== void 0 ? ee : 0),
      m(2),
      B((re = ge.opportunitiesConverted) !== null && re !== void 0 ? re : 0);
  }
}
function LT(n, i) {
  n & 1 && (l(0, "tr")(1, "td", 103), h(2, "Loading..."), c()());
}
function VT(n, i) {
  n & 1 && (l(0, "tr")(1, "td", 104), h(2, "No Users Found"), c()());
}
function BT(n, i) {
  if ((n & 1 && (l(0, "span"), h(1), c()), n & 2)) {
    let e = x().$implicit;
    m(), Z("(", e.user_role, ")");
  }
}
function jT(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr", 105)(1, "td", 101),
      h(2),
      A(3, BT, 2, 1, "span", 1),
      c(),
      l(4, "td", 106),
      h(5),
      c(),
      l(6, "td", 107)(7, "span", 108),
      h(8),
      c()(),
      l(9, "td", 106),
      h(10),
      Xo(11, "date"),
      c(),
      l(12, "td", 90),
      h(13),
      c(),
      l(14, "td", 90),
      h(15),
      c(),
      l(16, "td", 90),
      h(17),
      c(),
      l(18, "td", 90),
      h(19),
      c(),
      l(20, "td", 90),
      h(21),
      c(),
      l(22, "td", 90),
      h(23),
      c(),
      l(24, "td", 90),
      h(25),
      c(),
      l(26, "td", 90),
      h(27),
      c(),
      l(28, "td", 90),
      h(29),
      c(),
      l(30, "td", 90),
      h(31),
      c(),
      l(32, "td", 90),
      h(33),
      c(),
      l(34, "td", 90),
      h(35),
      c(),
      l(36, "td", 90),
      h(37),
      c(),
      l(38, "td", 90),
      h(39),
      c(),
      l(40, "td", 90),
      h(41),
      c()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      d,
      u,
      f,
      v,
      S,
      T,
      M,
      I,
      L,
      E,
      F = i.$implicit,
      ee = i.index;
    y("ngClass", Gi(25, TT, ee % 2 === 0, ee % 2 !== 0)),
      m(2),
      Z(" ", F.user, " "),
      m(),
      y("ngIf", F.user_role),
      m(2),
      B(F.registerUser ? "Yes" : "No"),
      m(2),
      y("ngClass", F.active ? "chip-success" : "chip-inactive"),
      m(),
      Z(" ", F.active ? "Active" : "Inactive", " "),
      m(2),
      B(Bg(11, 22, F.last_login, "dd-MM-yyyy HH:mm")),
      m(3),
      B(
        (e = F.leads == null ? null : F.leads.sa) !== null && e !== void 0
          ? e
          : 0
      ),
      m(2),
      B(
        (t = F.leads == null ? null : F.leads.cxp) !== null && t !== void 0
          ? t
          : 0
      ),
      m(2),
      B(
        (r = F.leads == null ? null : F.leads.ics) !== null && r !== void 0
          ? r
          : 0
      ),
      m(2),
      B(
        (o = F.leads == null ? null : F.leads.manuallyEntered) !== null &&
          o !== void 0
          ? o
          : 0
      ),
      m(2),
      B(
        (a = F.followups == null ? null : F.followups.sa) !== null &&
          a !== void 0
          ? a
          : 0
      ),
      m(2),
      B(
        (d = F.followups == null ? null : F.followups.cxp) !== null &&
          d !== void 0
          ? d
          : 0
      ),
      m(2),
      B(
        (u = F.followups == null ? null : F.followups.completed) !== null &&
          u !== void 0
          ? u
          : 0
      ),
      m(2),
      B(
        (f = F.followups == null ? null : F.followups.open) !== null &&
          f !== void 0
          ? f
          : 0
      ),
      m(2),
      B(
        (v = F.followups == null ? null : F.followups.closed) !== null &&
          v !== void 0
          ? v
          : 0
      ),
      m(2),
      B(
        (S = F.testdrives == null ? null : F.testdrives.sa) !== null &&
          S !== void 0
          ? S
          : 0
      ),
      m(2),
      B(
        (T = F.testdrives == null ? null : F.testdrives.cxp) !== null &&
          T !== void 0
          ? T
          : 0
      ),
      m(2),
      B(
        (M = F.testdrives == null ? null : F.testdrives.completed) !== null &&
          M !== void 0
          ? M
          : 0
      ),
      m(2),
      B(
        (I = F.testdrives == null ? null : F.testdrives.upcoming) !== null &&
          I !== void 0
          ? I
          : 0
      ),
      m(2),
      B(
        (L = F.testdrives == null ? null : F.testdrives.closed) !== null &&
          L !== void 0
          ? L
          : 0
      ),
      m(2),
      B((E = F.opportunitiesConverted) !== null && E !== void 0 ? E : 0);
  }
}
function HT(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr", 93)(1, "td", 94)(2, "div", 95)(3, "div", 96),
      h(4),
      c(),
      l(5, "div", 97)(6, "table", 98)(7, "thead", 99)(8, "tr", 100)(
        9,
        "th",
        101
      ),
      h(10, "User"),
      c(),
      l(11, "th"),
      h(12, "Registered"),
      c(),
      l(13, "th"),
      h(14, "Status"),
      c(),
      l(15, "th"),
      h(16, "Last login"),
      c(),
      l(17, "th"),
      h(18, "SA Leads"),
      c(),
      l(19, "th"),
      h(20, "Sync with CXP"),
      c(),
      l(21, "th"),
      h(22, "Sync with ICS"),
      c(),
      l(23, "th"),
      h(24, "Manually Entered from CXP"),
      c(),
      l(25, "th"),
      h(26, "SA Follow-ups"),
      c(),
      l(27, "th"),
      h(28, "Sync with CXP"),
      c(),
      l(29, "th"),
      h(30, "Completed"),
      c(),
      l(31, "th"),
      h(32, "Upcoming"),
      c(),
      l(33, "th"),
      h(34, "Overdue"),
      c(),
      l(35, "th"),
      h(36, "SA Test Drives"),
      c(),
      l(37, "th"),
      h(38, "Sync with CXP"),
      c(),
      l(39, "th"),
      h(40, "Upcoming "),
      c(),
      l(41, "th"),
      h(42, "Completed "),
      c(),
      l(43, "th"),
      h(44, "Overdue"),
      c(),
      l(45, "th"),
      h(46, "Opportunities Converted"),
      c()()(),
      l(47, "tbody"),
      A(48, LT, 3, 0, "tr", 1)(49, VT, 3, 0, "tr", 1)(
        50,
        jT,
        42,
        28,
        "tr",
        102
      ),
      c()()()()()()),
    n & 2)
  ) {
    let e = x().$implicit,
      t = x(2);
    m(4),
      Z(" User-wise details \u2014 ", e.dealerName, " "),
      m(44),
      y("ngIf", t.loadingUsers[e.dealerId]),
      m(),
      y(
        "ngIf",
        !t.loadingUsers[e.dealerId] &&
          (t.dealerUsers[e.dealerId] == null
            ? null
            : t.dealerUsers[e.dealerId].length) === 0
      ),
      m(),
      y("ngForOf", t.getSortedUsers(e.dealerId))(
        "ngForTrackBy",
        t.trackByUserId
      );
  }
}
function UT(n, i) {
  if (
    (n & 1 && (Le(0), A(1, NT, 42, 29, "tr", 83)(2, HT, 51, 5, "tr", 84), Ve()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(2);
    m(), y("ngIf", e), m(), y("ngIf", t.expandedRow === e.dealerId);
  }
}
function zT(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 109),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.showMoreTable1());
      }),
      h(1, " Show More "),
      c();
  }
}
function $T(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 110),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.showLessTable1());
      }),
      h(1, " Show Less "),
      c();
  }
}
function WT(n, i) {
  n & 1 && (l(0, "tr")(1, "td", 103), h(2, "Loading..."), c()());
}
function GT(n, i) {
  n & 1 && (l(0, "tr")(1, "td", 104), h(2, "No Users Found"), c()());
}
function YT(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr")(1, "td", 133),
      h(2),
      c(),
      l(3, "td", 126),
      h(4),
      c(),
      l(5, "td", 134),
      h(6),
      c(),
      l(7, "td", 134),
      h(8),
      c(),
      l(9, "td", 126),
      h(10),
      c(),
      l(11, "td", 135),
      h(12),
      c(),
      l(13, "td", 136),
      h(14),
      c()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(5);
    m(2),
      B(e.name),
      m(),
      y("ngStyle", de(9, Kv, e.calls.total < 60 ? "red" : "black")),
      m(),
      B(e.calls.total),
      m(2),
      B(e.calls.outgoing),
      m(2),
      Z(" ", e.calls.incoming, ""),
      m(),
      y("ngStyle", de(11, Kv, e.calls.connected < 30 ? "red" : "#007bff")),
      m(),
      B(e.calls.connected),
      m(2),
      B(e.calls.declined),
      m(2),
      Z(
        " ",
        e.calls != null && e.calls.duration
          ? t.formatDuration(e.calls.durationSec)
          : "00:00:00",
        " "
      );
  }
}
function qT(n, i) {
  n & 1 && (l(0, "tr")(1, "td", 137), h(2, "No Users Found"), c()());
}
function KT(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr", 93)(1, "td", 129)(2, "div", 130)(3, "div", 131),
      h(4),
      c(),
      l(5, "div", 97)(6, "table", 98)(7, "thead")(8, "tr")(9, "th", 132),
      h(10, "User"),
      c(),
      l(11, "th"),
      h(12, "Total"),
      c(),
      l(13, "th"),
      h(14, "Outgoing"),
      c(),
      l(15, "th"),
      h(16, "Incoming"),
      c(),
      l(17, "th"),
      h(18, "Connected"),
      c(),
      l(19, "th"),
      h(20, "Declined"),
      c(),
      l(21, "th"),
      h(22, "Duration"),
      c()()(),
      l(23, "tbody"),
      A(24, YT, 15, 13, "tr", 51)(25, qT, 3, 0, "tr", 1),
      c()()()()()()),
    n & 2)
  ) {
    let e = x().$implicit,
      t = x(3);
    m(4),
      Z(" User-wise Call Logs \u2014 ", e.dealerName, " "),
      m(20),
      y("ngForOf", t.getSortedCallLogs(e.dealerId))(
        "ngForTrackBy",
        t.trackByUserId
      ),
      m(),
      y(
        "ngIf",
        !t.userCallLogs[e.dealerId] ||
          (t.userCallLogs[e.dealerId] == null
            ? null
            : t.userCallLogs[e.dealerId].length) === 0
      );
  }
}
function QT(n, i) {
  if (n & 1) {
    let e = oe();
    Le(0),
      l(1, "tr")(2, "td", 118)(3, "button", 87),
      R("click", function (r) {
        let o = O(e).$implicit,
          a = x(3);
        return k(a.toggleRow(r, o));
      }),
      U(4, "i", 88),
      l(5, "span", 89),
      h(6),
      c()()(),
      l(7, "td")(8, "div", 119),
      U(9, "i", 120),
      l(10, "span", 121),
      h(11),
      c()()(),
      l(12, "td")(13, "div", 122)(14, "span", 123),
      h(15, "\u2191"),
      c(),
      l(16, "span", 124),
      h(17),
      c()()(),
      l(18, "td")(19, "div", 122)(20, "span", 123),
      h(21, " \u2193 "),
      c(),
      l(22, "span", 125),
      h(23),
      c()()(),
      l(24, "td")(25, "div", 122)(26, "span", 126),
      h(27, " \u2713 "),
      c(),
      l(28, "span", 126),
      h(29),
      c()()(),
      l(30, "td")(31, "div", 122)(32, "span", 127),
      h(33, " \xD7 "),
      c(),
      l(34, "span", 128),
      h(35),
      c()()(),
      l(36, "td"),
      h(37),
      c()(),
      A(38, WT, 3, 0, "tr", 1)(39, GT, 3, 0, "tr", 1)(40, KT, 26, 4, "tr", 84),
      Ve();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(3);
    m(4),
      y(
        "ngClass",
        t.expandedRow === e.dealerId ? "fa-chevron-down" : "fa-chevron-right"
      ),
      m(2),
      Z(" ", e.dealerName, " "),
      m(2),
      y(
        "ngClass",
        (e.callLogs == null ? null : e.callLogs.totalCalls) < 60
          ? "highlight-red"
          : "normal"
      ),
      m(),
      y(
        "ngClass",
        (e.callLogs == null ? null : e.callLogs.totalCalls) < 60
          ? "highlight-red"
          : "normal"
      ),
      m(),
      y(
        "ngClass",
        (e.callLogs == null ? null : e.callLogs.totalCalls) < 60
          ? "highlight-red"
          : "normal"
      ),
      m(),
      Z(" ", (e.callLogs == null ? null : e.callLogs.totalCalls) || 0, " "),
      m(6),
      Z(" ", (e.callLogs == null ? null : e.callLogs.outgoing) || 0, " "),
      m(6),
      Z(" ", (e.callLogs == null ? null : e.callLogs.incoming) || 0, " "),
      m(3),
      y(
        "ngStyle",
        de(
          16,
          ET,
          (e.callLogs == null ? null : e.callLogs.connected) < 30
            ? "red"
            : "#007bff"
        )
      ),
      m(2),
      y(
        "ngStyle",
        de(
          18,
          OT,
          (e.callLogs == null ? null : e.callLogs.connected) < 30
            ? "red"
            : "#007bff"
        )
      ),
      m(),
      Z(" ", (e.callLogs == null ? null : e.callLogs.connected) || 0, " "),
      m(6),
      Z(" ", (e.callLogs == null ? null : e.callLogs.declined) || 0, " "),
      m(2),
      Z(
        " ",
        e.callLogs != null && e.callLogs.durationSec
          ? t.formatDuration(e.callLogs.durationSec)
          : "00:00:00",
        " "
      ),
      m(),
      y("ngIf", t.loadingUsers[e.dealerId]),
      m(),
      y(
        "ngIf",
        !t.loadingUsers[e.dealerId] &&
          (t.dealerUsers[e.dealerId] == null
            ? null
            : t.dealerUsers[e.dealerId].length) === 0
      ),
      m(),
      y("ngIf", t.expandedRow === e.dealerId);
  }
}
function XT(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 138),
      R("click", function () {
        O(e);
        let r = x(3);
        return k(r.showMoreTable2());
      }),
      h(1, " Show More "),
      c();
  }
}
function ZT(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 139),
      R("click", function () {
        O(e);
        let r = x(3);
        return k(r.showLessTable2());
      }),
      h(1, " Show Less "),
      c();
  }
}
function JT(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 37)(1, "div", 38)(2, "table", 111)(3, "thead", 40)(4, "tr")(
        5,
        "th",
        112
      ),
      h(6, "Dealer"),
      c(),
      l(7, "th", 113),
      h(8, "Total Calls"),
      c(),
      l(9, "th", 113),
      h(10, "Outgoing"),
      c(),
      l(11, "th", 113),
      h(12, "Incoming"),
      c(),
      l(13, "th", 113),
      h(14, "Connected"),
      c(),
      l(15, "th", 113),
      h(16, "Declined"),
      c(),
      l(17, "th", 113),
      h(18, "Duration"),
      c()()(),
      l(19, "tbody"),
      A(20, QT, 41, 20, "ng-container", 114),
      Xo(21, "slice"),
      c()()(),
      l(22, "div", 115),
      A(23, XT, 2, 0, "button", 116)(24, ZT, 2, 0, "button", 117),
      c()()),
    n & 2)
  ) {
    let e = x(2);
    m(20),
      y(
        "ngForOf",
        oh(21, 3, e.getSortedDealersForCallLogs(), 0, e.table2Length)
      ),
      m(3),
      y("ngIf", e.table2Length < e.dealers.length),
      m(),
      y("ngIf", e.table2Length > 10 && e.dealers.length > 10);
  }
}
function eE(n, i) {
  if (
    (n & 1 && (l(0, "div", 140)(1, "div", 141), U(2, "apx-chart", 142), c()()),
    n & 2)
  ) {
    let e = x(2);
    m(2),
      y("series", e.chartOptions.series)("chart", e.chartOptions.chart)(
        "xaxis",
        e.chartOptions.xaxis
      )("stroke", e.chartOptions.stroke)(
        "dataLabels",
        e.chartOptions.dataLabels
      )("title", e.chartOptions.title);
  }
}
function tE(n, i) {
  if (n & 1) {
    let e = oe();
    Le(0),
      A(1, kT, 2, 0, "div", 2),
      l(2, "div", 3)(3, "div", 4)(4, "select", 5),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return ct(o.selectedFilter, r) || (o.selectedFilter = r), k(r);
      }),
      R("change", function () {
        O(e);
        let r = x();
        return k(r.onFilterChange(r.selectedFilter));
      }),
      l(5, "option", 6),
      h(6, "Today"),
      c(),
      l(7, "option", 7),
      h(8, "Yesterday"),
      c(),
      l(9, "option", 8),
      h(10, "This Week"),
      c(),
      l(11, "option", 9),
      h(12, "Last Week"),
      c(),
      l(13, "option", 10),
      h(14, "This Month"),
      c(),
      l(15, "option", 11),
      h(16, "Last Month"),
      c(),
      l(17, "option", 12),
      h(18, "This Quarter"),
      c(),
      l(19, "option", 13),
      h(20, "Last Quarter"),
      c(),
      l(21, "option", 14),
      h(22, "Last 6 Months"),
      c(),
      l(23, "option", 15),
      h(24, "This Year"),
      c(),
      l(25, "option", 16),
      h(26, "Lifetime"),
      c(),
      l(27, "option", 17),
      h(28, "Custom"),
      c()(),
      A(29, PT, 7, 2, "div", 18),
      l(30, "div", 19)(31, "button", 20),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.toggleDropdown());
      }),
      h(32),
      c(),
      A(33, FT, 12, 4, "div", 21),
      c()()(),
      l(34, "div", 22)(35, "main", 23)(36, "section", 24)(37, "div", 25)(
        38,
        "div",
        26
      ),
      h(39, "Active Network:"),
      c(),
      l(40, "div", 27),
      h(41),
      c(),
      l(42, "div", 28),
      h(43, "Dealers: "),
      l(44, "span", 29),
      h(45),
      c()()(),
      l(46, "div", 25)(47, "div", 26),
      h(48, "Active"),
      c(),
      l(49, "div", 27),
      h(50),
      c(),
      l(51, "div", 28),
      h(52, "Users: "),
      l(53, "span", 29),
      h(54),
      c()()(),
      l(55, "div", 25)(56, "div", 26),
      h(57, "Leads"),
      c(),
      l(58, "div", 27),
      h(59),
      c(),
      l(60, "div", 28),
      h(61, "Across all dealers"),
      c()(),
      l(62, "div", 25)(63, "div", 26),
      h(64, "Calls"),
      c(),
      l(65, "div", 27),
      h(66),
      c(),
      l(67, "div", 28),
      h(68, "Total volume"),
      c()(),
      l(69, "div", 25)(70, "div", 26),
      h(71, "Total Followups"),
      c(),
      l(72, "div", 27),
      h(73),
      c()(),
      l(74, "div", 25)(75, "div", 26),
      h(76, "Unique / Completed Test Drives"),
      c(),
      l(77, "div", 27),
      h(78),
      c()()(),
      l(79, "div", 30)(80, "div", 31)(81, "div")(82, "h2", 32),
      h(83, "Dealer Summary \u2014 Engagement"),
      c(),
      l(84, "p", 33),
      h(85, "Users, Leads, Follow-ups, Test Drives (with CXP/ICS sync)"),
      c()(),
      l(86, "div", 34)(87, "button", 35),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.exportToCSV());
      }),
      U(88, "i", 36),
      h(89, " Export CSV "),
      c()()(),
      l(90, "div", 37)(91, "div", 38)(92, "table", 39)(93, "thead", 40)(
        94,
        "tr"
      )(95, "th", 41),
      h(96, "Dealer"),
      c(),
      l(97, "th", 42),
      h(98, "Users"),
      c(),
      l(99, "th", 43),
      h(100, "Leads"),
      c(),
      l(101, "th", 44),
      h(102, "Follow-ups"),
      c(),
      l(103, "th", 45),
      h(104, "Test Drives"),
      c()(),
      l(105, "tr")(106, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("totalUsers"));
      }),
      h(107, " Total "),
      l(108, "span", 47)(109, "span", 48),
      h(110, "\u25B2"),
      c(),
      l(111, "span", 49),
      h(112, "\u25BC"),
      c()()(),
      l(113, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("registerUsers"));
      }),
      h(114, " Registered "),
      l(115, "span", 47)(116, "span", 48),
      h(117, "\u25B2"),
      c(),
      l(118, "span", 49),
      h(119, "\u25BC"),
      c()()(),
      l(120, "th", 50),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("activeUsers"));
      }),
      h(121, " Active "),
      l(122, "span", 47)(123, "span", 48),
      h(124, "\u25B2"),
      c(),
      l(125, "span", 49),
      h(126, "\u25BC"),
      c()()(),
      l(127, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("saLeads"));
      }),
      h(128, " SA "),
      l(129, "span", 47)(130, "span", 48),
      h(131, "\u25B2"),
      c(),
      l(132, "span", 49),
      h(133, "\u25BC"),
      c()()(),
      l(134, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("cxpLeads"));
      }),
      h(135, " Sync with CXP "),
      l(136, "span", 47)(137, "span", 48),
      h(138, "\u25B2"),
      c(),
      l(139, "span", 49),
      h(140, "\u25BC"),
      c()()(),
      l(141, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("icsLeads"));
      }),
      h(142, " Sync with ICS "),
      l(143, "span", 47)(144, "span", 48),
      h(145, "\u25B2"),
      c(),
      l(146, "span", 49),
      h(147, "\u25BC"),
      c()()(),
      l(148, "th", 50),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("manuallyEnteredLeads"));
      }),
      h(149, " Manually Entered from CXP "),
      l(150, "span", 47)(151, "span", 48),
      h(152, "\u25B2"),
      c(),
      l(153, "span", 49),
      h(154, "\u25BC"),
      c()()(),
      l(155, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("saFollowUps"));
      }),
      h(156, " SA "),
      l(157, "span", 47)(158, "span", 48),
      h(159, "\u25B2"),
      c(),
      l(160, "span", 49),
      h(161, "\u25BC"),
      c()()(),
      l(162, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("cxpFollowUps"));
      }),
      h(163, " Sync with CXP "),
      l(164, "span", 47)(165, "span", 48),
      h(166, "\u25B2"),
      c(),
      l(167, "span", 49),
      h(168, "\u25BC"),
      c()()(),
      l(169, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("completedFollowUps"));
      }),
      h(170, " Completed "),
      l(171, "span", 47)(172, "span", 48),
      h(173, "\u25B2"),
      c(),
      l(174, "span", 49),
      h(175, "\u25BC"),
      c()()(),
      l(176, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("openFollowUps"));
      }),
      h(177, " Upcoming "),
      l(178, "span", 47)(179, "span", 48),
      h(180, "\u25B2"),
      c(),
      l(181, "span", 49),
      h(182, "\u25BC"),
      c()()(),
      l(183, "th", 50),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("closedFollowUps"));
      }),
      h(184, " Overdue "),
      l(185, "span", 47)(186, "span", 48),
      h(187, "\u25B2"),
      c(),
      l(188, "span", 49),
      h(189, "\u25BC"),
      c()()(),
      l(190, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("saTestDrives"));
      }),
      h(191, " SA "),
      l(192, "span", 47)(193, "span", 48),
      h(194, "\u25B2"),
      c(),
      l(195, "span", 49),
      h(196, "\u25BC"),
      c()()(),
      l(197, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("cxpTestDrives"));
      }),
      h(198, " Sync with CXP "),
      l(199, "span", 47)(200, "span", 48),
      h(201, "\u25B2"),
      c(),
      l(202, "span", 49),
      h(203, "\u25BC"),
      c()()(),
      l(204, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("completedTestDrives"));
      }),
      h(205, " Completed "),
      l(206, "span", 47)(207, "span", 48),
      h(208, "\u25B2"),
      c(),
      l(209, "span", 49),
      h(210, "\u25BC"),
      c()()(),
      l(211, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("upcomingTestDrives"));
      }),
      h(212, " Upcoming "),
      l(213, "span", 47)(214, "span", 48),
      h(215, "\u25B2"),
      c(),
      l(216, "span", 49),
      h(217, "\u25BC"),
      c()()(),
      l(218, "th", 50),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("closedTestDrives"));
      }),
      h(219, " Overdue "),
      l(220, "span", 47)(221, "span", 48),
      h(222, "\u25B2"),
      c(),
      l(223, "span", 49),
      h(224, "\u25BC"),
      c()()(),
      l(225, "th", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.sortData("opportunitiesConverted"));
      }),
      h(226, " Opportunities Converted "),
      l(227, "span", 47)(228, "span", 48),
      h(229, "\u25B2"),
      c(),
      l(230, "span", 49),
      h(231, "\u25BC"),
      c()()()()(),
      l(232, "tbody"),
      A(233, UT, 3, 2, "ng-container", 51),
      Xo(234, "slice"),
      c()()(),
      A(235, zT, 2, 0, "button", 52)(236, $T, 2, 0, "button", 53),
      c()(),
      l(237, "div", 30)(238, "div", 31)(239, "div")(240, "h2", 54),
      h(241, "Dealer Summary \u2014 Calls"),
      c(),
      l(242, "p", 33),
      h(243, "Call volumes and outcomes"),
      c()(),
      l(244, "div", 55)(245, "div", 56)(246, "button", 57),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.dealerEngagementView("table"));
      }),
      U(247, "i", 58),
      h(248, " Table "),
      c(),
      l(249, "button", 57),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.dealerEngagementView("chart"));
      }),
      U(250, "i", 59),
      h(251, " Line Chart "),
      c()(),
      l(252, "button", 60),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.exportDealerCalllogstocxp());
      }),
      U(253, "i", 36),
      h(254, " Export CSV "),
      c()()(),
      A(255, JT, 25, 7, "div", 61)(256, eE, 3, 6, "div", 62),
      c()()(),
      Ve();
  }
  if (n & 2) {
    let e = x();
    m(),
      y("ngIf", e.isLoading),
      m(),
      y("ngClass", Gi(103, MT, e.isSidebarOpen, !e.isSidebarOpen)),
      m(2),
      lt("ngModel", e.selectedFilter),
      m(25),
      y("ngIf", e.selectedFilter === "CUSTOM"),
      m(),
      ne("show", e.dropdownOpen),
      m(),
      y("disabled", e.selectedFilter === "CUSTOM" && e.invalidDateRange),
      m(),
      Z(
        " ",
        e.selectedDealers.length > 0
          ? "Dealers Selected (" + e.selectedDealers.length + ")"
          : "Select Dealers",
        " "
      ),
      m(),
      y("ngIf", e.dropdownOpen),
      m(8),
      B(e.kpiData == null ? null : e.kpiData.activeNetwork),
      m(4),
      B(e.kpiData == null ? null : e.kpiData.dealers),
      m(5),
      B(e.kpiData == null ? null : e.kpiData.activeUsers),
      m(4),
      B(e.kpiData == null ? null : e.kpiData.users),
      m(5),
      B(e.kpiData == null ? null : e.kpiData.leads),
      m(7),
      B(e.kpiData == null ? null : e.kpiData.calls),
      m(7),
      B(e.kpiData == null ? null : e.kpiData.totalFollowUps),
      m(5),
      Gn(
        " ",
        e.kpiData == null ? null : e.kpiData.uniqueTestDrives,
        " / ",
        e.kpiData == null ? null : e.kpiData.completedTestDrives,
        " "
      ),
      m(31),
      ne("active", e.sortColumn === "totalUsers" && e.sortDirection === "asc"),
      m(2),
      ne("active", e.sortColumn === "totalUsers" && e.sortDirection === "desc"),
      m(5),
      ne(
        "active",
        e.sortColumn === "registerUsers" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "registerUsers" && e.sortDirection === "desc"
      ),
      m(5),
      ne("active", e.sortColumn === "activeUsers" && e.sortDirection === "asc"),
      m(2),
      ne(
        "active",
        e.sortColumn === "activeUsers" && e.sortDirection === "desc"
      ),
      m(5),
      ne("active", e.sortColumn === "saLeads" && e.sortDirection === "asc"),
      m(2),
      ne("active", e.sortColumn === "saLeads" && e.sortDirection === "desc"),
      m(5),
      ne("active", e.sortColumn === "cxpLeads" && e.sortDirection === "asc"),
      m(2),
      ne("active", e.sortColumn === "cxpLeads" && e.sortDirection === "desc"),
      m(5),
      ne("active", e.sortColumn === "icsLeads" && e.sortDirection === "asc"),
      m(2),
      ne("active", e.sortColumn === "icsLeads" && e.sortDirection === "desc"),
      m(5),
      ne(
        "active",
        e.sortColumn === "manuallyEnteredLeads" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "manuallyEnteredLeads" && e.sortDirection === "desc"
      ),
      m(5),
      ne("active", e.sortColumn === "saFollowUps" && e.sortDirection === "asc"),
      m(2),
      ne(
        "active",
        e.sortColumn === "saFollowUps" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "cxpFollowUps" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "cxpFollowUps" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "completedFollowUps" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "completedFollowUps" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "openFollowUps" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "openFollowUps" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "closedFollowUps" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "closedFollowUps" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "saTestDrives" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "saTestDrives" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "cxpTestDrives" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "cxpTestDrives" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "completedTestDrives" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "completedTestDrives" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "upcomingTestDrives" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "upcomingTestDrives" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "closedTestDrives" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "closedTestDrives" && e.sortDirection === "desc"
      ),
      m(5),
      ne(
        "active",
        e.sortColumn === "opportunitiesConverted" && e.sortDirection === "asc"
      ),
      m(2),
      ne(
        "active",
        e.sortColumn === "opportunitiesConverted" && e.sortDirection === "desc"
      ),
      m(3),
      y(
        "ngForOf",
        oh(234, 99, e.getSortedDealersForSummary(), 0, e.table1Length)
      )("ngForTrackBy", e.trackByDealerId),
      m(2),
      y(
        "ngIf",
        e.table1Length <
          (e.selectedDealers.length > 0
            ? e.selectedDealers.length
            : e.dealers.length)
      ),
      m(),
      y(
        "ngIf",
        e.table1Length > 10 &&
          (e.selectedDealers.length > 0
            ? e.selectedDealers.length
            : e.dealers.length) > 10
      ),
      m(10),
      y("ngClass", de(106, qv, e.dealerSummaryCallsViewType === "table")),
      m(3),
      y("ngClass", de(108, qv, e.dealerSummaryCallsViewType === "chart")),
      m(3),
      y("hidden", e.dealerSummaryCallsViewType === "chart"),
      m(3),
      y("ngIf", e.dealerSummaryCallsViewType === "table"),
      m(),
      y("ngIf", e.dealerSummaryCallsViewType === "chart");
  }
}
var Md = class n {
  constructor(i, e, t, r, o, a, d, u, f, v) {
    this.http = i;
    this.cdr = e;
    this.context = t;
    this.router = r;
    this.dashboardService = o;
    this.sharedService = a;
    this.ngZone = d;
    this.cd = u;
    this.eRef = f;
    this.toastr = v;
  }
  dashboardMetrics = {
    totalLeads: 0,
    totalTestDrives: 0,
    totalOrders: 0,
    lostLeads: 0,
    cancellations: 0,
    netOrders: 0,
    retail: 0,
  };
  callLogs = {
    totalCalls: 120,
    outgoing: 50,
    incoming: 40,
    connected: 20,
    declined: 10,
    durationSec: 500,
  };
  expandedDealer = null;
  chart;
  chartOptions;
  sortColumn = "saLeads";
  sortDirection = "desc";
  skipDefaultSelection = !1;
  loadingUsers = {};
  currentPageMap = {};
  showAllSMs = {};
  showCustomDatePicker = !1;
  customStartDate = "";
  customEndDate = "";
  isAllSelected = !1;
  displayedDealers = [];
  itemsToShow = 10;
  expandedRow = null;
  filteredDealers = [];
  totalLeads = pe(0);
  totalTestDrives = pe(0);
  totalOrders = pe(0);
  prevLeads = pe(0);
  prevTestDrives = pe(0);
  prevOrders = pe(0);
  selectedOption = "leads-MTD";
  testDrives = 0;
  displayedData = [];
  filteredData = [];
  mtdTestDrives = pe(0);
  qtdTestDrives = pe(0);
  hoveredSM = null;
  callLogDealers = [];
  isInitialLoad = !0;
  invalidDateRange = !1;
  loading = !1;
  selectedDealer = null;
  ps1Data = [];
  ps2Data = [];
  pageSize = 20;
  ytdTestDrives = pe(0);
  loadingSM = !1;
  psData = {};
  showDetails = !1;
  paginatedDealers = [];
  dealerCallData = [];
  dropdownOpen = !1;
  selectedDealers = [];
  dealerPSL = null;
  userCallLogs = {};
  callLogsItemsToShow = 10;
  displayedCallLogs = [];
  showMoreCallLogsVisible = !0;
  mtdOrders = pe(0);
  qtdOrders = pe(0);
  ytdOrders = pe(0);
  table1Length = 10;
  table2Length = 10;
  isLoading = !1;
  overallData = {};
  dealerSummaryCallsViewType = "table";
  selectedFilter;
  dealerColors = ["#e6f2ff", "#f9f2ec", "#eaf7ea", "#f3e8ff"];
  appliedStartDate = null;
  appliedEndDate = null;
  usersItemsToShow = 10;
  userItemsToShow = 10;
  displayedUsers = [];
  showMoreUsersVisible = !1;
  mtdLeads = pe(0);
  qtdLeads = pe(0);
  currentLeads = 0;
  previousLeads = 0;
  changeLeads = 0;
  testDriveChange = 0;
  testDriveProgressValue = 0;
  testDriveStrokeColor = "#4CAF50";
  selectedCategory = "leads";
  selectedDuration = "MTD";
  orderChange = 0;
  orderProgressValue = 0;
  loadingPS = !1;
  activeAccordion = null;
  dealerUsers = {};
  dealerCallLogs = {};
  showAll = !1;
  orderStrokeColor = "#4CAF50";
  currentTestDrives = 0;
  previousTestDrives = 0;
  selectedDealerId = null;
  dealerSMS = {};
  salesManagers = {};
  loadingSMs = {};
  Math = Math;
  itemsPerPagedeal = 10;
  currentDisplayCount = 10;
  kpiData = {
    dealers: 0,
    activeNetwork: 0,
    users: 0,
    activeUsers: 0,
    leads: 0,
    calls: 0,
    totalFollowUps: 0,
    uniqueTestDrives: 0,
    completedTestDrives: 0,
  };
  orders = 0;
  currentOrders = 0;
  previousOrders = 0;
  ytdLeads = pe(0);
  selectedPeriod = "MTD";
  dashboardData = {};
  leads = 0;
  selectedSM = null;
  isSidebarOpen = !0;
  paginatedDealerskpis = [];
  currentIndex = 0;
  displayedDealerUsers = [];
  currentDealerPage = 1;
  dealersPerPage = 5;
  expandedItems = {};
  filterOptions = ["MTD", "QTD", "YTD"];
  expandedRows = [!1, !1, !1, !1, !1, !1];
  showMoreActive = !1;
  originalDealers = [];
  rankings = {};
  sidebarTestDrives = pe(0);
  sidebarOrders = pe(0);
  sidebarLeads = pe(0);
  pieChartInstance;
  leadsData = {};
  miniChart;
  hoveredPS = null;
  activeDealer = null;
  activeSM = null;
  activePS = null;
  incrementSize = 10;
  selectedTime = "1M";
  graphPath = "";
  leadsChange = 0;
  testDrivesChange = 0;
  ordersChange = 0;
  change = 0;
  doughnutChart;
  dealerSearch = "";
  animatedValue = 0;
  currentPage = 1;
  itemsPerPage = 10;
  paginatedData = [];
  activeFilter = "MTD";
  dealers = [];
  currentdealerPage = 1;
  itemsPerdealerPage = 5;
  maxValue = 0;
  selectedFilterPS = "MTD";
  changeDisplay = 0;
  progressValue = 0;
  strokeColor = "red";
  data;
  apiUrl = "https://uat.smartassistapp.in/api/superAdmin/dashbaordNew";
  ngOnInit() {
    let i = localStorage.getItem("selectedFilter");
    if (
      ((this.selectedFilter = i ?? "DAY"), this.selectedFilter !== "CUSTOM")
    ) {
      let t = this.mapFilterToApi(this.selectedFilter);
      this.fetchSuperAdminDashboard(t);
    }
    let e = localStorage.getItem("kpiData");
    e && (this.kpiData = G({}, JSON.parse(e))),
      (this.currentDisplayCount = this.itemsPerPage),
      this.context.onSideBarClick$.next({
        role: "dashboard",
        pageTitle: "Dashboard",
      });
  }
  initializeDisplay() {
    this.currentDisplayCount = this.itemsPerPage;
  }
  toggleShow() {
    this.currentDisplayCount >= this.dealers.length
      ? (this.currentDisplayCount = this.itemsPerPage)
      : (this.currentDisplayCount = Math.min(
          this.dealers.length,
          this.currentDisplayCount + this.incrementSize
        ));
  }
  showLess() {
    this.currentDisplayCount = this.itemsPerPage;
  }
  get canShowMore() {
    return this.currentDisplayCount < this.dealers.length;
  }
  get canShowLess() {
    return this.currentDisplayCount > this.itemsPerPage;
  }
  get isShowingAll() {
    return this.currentDisplayCount >= this.dealers.length;
  }
  get showButtonText() {
    return this.currentDisplayCount >= this.dealers.length
      ? "Show Less"
      : "Show More";
  }
  toggleExpand(i) {
    (this.expandedRows[i] = !this.expandedRows[i]),
      console.log(`Order ${i + 1} expanded:`, this.expandedRows[i]);
  }
  getStrokeColor(i) {
    let e = Number(i);
    return e > 0 ? "#4CAF50" : e < 0 ? "#F44336" : "#9E9E9E";
  }
  toggleCustomDatePicker() {
    this.showCustomDatePicker ||
      ((this.customStartDate = ""), (this.customEndDate = "")),
      (this.showCustomDatePicker = !this.showCustomDatePicker);
  }
  getDealerBackground(i) {
    let e = [
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
      "linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)",
      "linear-gradient(135deg, #fa709a 0%, #fee140 100%)",
      "linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)",
      "linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)",
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
    ];
    return e[i % e.length];
  }
  getSortedUsers(i) {
    console.log("\u{1F525} getSortedUsers called for dealer", i);
    let e = this.dealerUsers[i] ?? [];
    return (
      console.log(
        "\u{1F4CA} Sorting dealer summary users:",
        i,
        e.map((t) => ({
          user: t.user,
          saLeads: t.leads?.sa,
          totalCalls: t.calls?.total,
        }))
      ),
      [...e].sort((t, r) => {
        let o = t.leads?.sa ?? 0,
          a = r.leads?.sa ?? 0;
        return a !== o
          ? a - o
          : t.active && !r.active
          ? -1
          : !t.active && r.active
          ? 1
          : t.user.toLowerCase().localeCompare(r.user.toLowerCase());
      })
    );
  }
  getSortedCallLogs(i) {
    console.log("\u{1F525} getSortedCallLogs called for dealer", i);
    let e = this.userCallLogs[i] ?? [];
    return (
      console.log(
        "\u{1F4DE} Sorting call log users:",
        i,
        e.map((t) => ({
          user: t.name,
          totalCalls: t.calls?.total,
          saLeads: t.leads?.sa,
        }))
      ),
      [...e].sort((t, r) => {
        let o = t.calls?.total ?? 0;
        return (r.calls?.total ?? 0) - o;
      })
    );
  }
  getSortedDealersForCallLogs() {
    return [
      ...(this.selectedDealers.length > 0
        ? this.selectedDealers
        : this.dealers),
    ].sort((e, t) => {
      let r = e.callLogs?.totalCalls ?? 0;
      return (t.callLogs?.totalCalls ?? 0) - r;
    });
  }
  getSortedDealersForSummary() {
    let i =
      this.selectedDealers.length > 0 ? this.selectedDealers : this.dealers;
    if (!this.sortColumn || this.sortDirection === "default") return i;
    let e = this.sortColumn;
    return (
      i.sort((t, r) => {
        let o = t[e] ?? 0,
          a = r[e] ?? 0;
        return this.sortDirection === "asc" ? o - a : a - o;
      }),
      i
    );
  }
  mapTimeToApi(i) {
    switch (i) {
      case "1M":
        return "MTD";
      case "QTD":
        return "QTD";
      case "1Y":
        return "YTD";
      default:
        return "MTD";
    }
  }
  onTimeChange(i) {
    this.selectedTime = i;
    let e = localStorage.getItem("token");
    if (!e) {
      console.error("No token found in localStorage!");
      return;
    }
    let t = this.mapTimeToApi(i);
    this.dashboardService.getDealers(t, e).subscribe((r) => {
      console.log("API Response dealerssssssssssss:", r),
        r.status === 200 && r.data?.dealers
          ? ((this.dealers = r.data.dealers),
            (this.expandedDealer = null),
            (this.selectedDealerId = null))
          : (this.dealers = []);
    });
  }
  ngAfterViewInit() {
    this.totalTestDrives() &&
      this.totalOrders() &&
      this.doughnutChart(this.totalTestDrives(), this.totalOrders());
  }
  onFilterClick(i) {}
  toggleShowAllSMs(i) {
    this.showAllSMs[i] = !this.showAllSMs[i];
  }
  mapFilterToApi(i) {
    switch (i) {
      case "DAY":
        return "DAY";
      case "YESTERDAY":
        return "YESTERDAY";
      case "WEEK":
        return "WEEK";
      case "LAST_WEEK":
        return "LAST_WEEK";
      case "MTD":
        return "MTD";
      case "LAST_MONTH":
        return "LAST_MONTH";
      case "QTD":
        return "QTD";
      case "LAST_QUARTER":
        return "LAST_QUARTER";
      case "SIX_MONTH":
        return "SIX_MONTH";
      case "YTD":
        return "YTD";
      case "LIFETIME":
        return "LIFETIME";
      case "CUSTOM":
        return "CUSTOM";
    }
  }
  toggleNameSelection(i) {
    (this.isLoading = !0),
      this.isDealerSelected(i)
        ? (this.selectedDealers = this.selectedDealers.filter(
            (e) => e.dealerName !== i.dealerName
          ))
        : this.selectedDealers.push(i),
      this.fetchSuperAdminDashboard(this.selectedFilter);
  }
  onFilterChange(i) {
    if (
      ((this.expandedRow = null),
      (this.dealerUsers = {}),
      (this.userCallLogs = {}),
      (this.dealerCallLogs = {}),
      (this.selectedFilter = i),
      localStorage.setItem("selectedFilter", i),
      i === "CUSTOM")
    )
      return;
    let e = this.mapFilterToApi(i);
    this.fetchSuperAdminDashboard(e);
  }
  fetchDealerSMs(i, e, t) {
    let r = localStorage.getItem("token");
    if (!r) return;
    let o = new Tt({ Authorization: `Bearer ${r}` }),
      a = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&type=${e}`;
    this.http.get(a, { headers: o }).subscribe({
      next: (d) => {
        (this.dealerSMS[i] =
          d?.status === 200 && d.data?.dealers?.[0]?.user_list
            ? d.data.dealers[0].user_list
            : []),
          t && this.dealerSMS[i].some((u) => u.user_id === t)
            ? (this.activeSM = t)
            : (this.activeSM = null);
      },
      error: (d) => {
        console.error("Failed to fetch SM data:", d),
          (this.dealerSMS[i] = []),
          (this.activeSM = null);
      },
    });
  }
  fetchPS(i, e) {
    let t = localStorage.getItem("token");
    if (!t) return;
    let r = new Tt({ Authorization: `Bearer ${t}` }),
      o = `https://uat.smartassistapp.in/api/superAdmin/dashbaordNew?type=${this.selectedFilter}&dealer_id=${e}&sm_id=${i}`;
    this.http.get(o, { headers: r }).subscribe({
      next: (a) => {
        this.psData[i] = a?.data?.ps || [];
      },
      error: (a) => {
        console.error("Failed to fetch PS data:", a), (this.psData[i] = []);
      },
    });
  }
  updateProgressAndColor(i) {
    (this.changeDisplay = i),
      (this.progressValue = this.getProgressFromChange(i)),
      (this.strokeColor = this.getStrokeColor(i)),
      this.cdr.detectChanges();
  }
  getProgressFromChange(i) {
    return Math.min((Math.abs(i) / 500) * 100, 100);
  }
  isDealerDataAvailable(i) {
    return i?.dealer_id && this.dealerSMS[i.dealer_id]?.length > 0;
  }
  getDashOffset(i) {
    return 100 - i;
  }
  get totalDealerPages() {
    return Math.ceil(this.dealers.length / this.itemsPerdealerPage);
  }
  goToPage(i) {
    i >= 1 && i <= this.totalDealerPages && (this.currentdealerPage = i);
  }
  getShowingRange() {
    let i = (this.currentdealerPage - 1) * this.itemsPerdealerPage + 1,
      e = Math.min(
        this.currentdealerPage * this.itemsPerdealerPage,
        this.dealers.length
      );
    return `Showing ${i} \u2013 ${e} of ${this.dealers.length} dealers`;
  }
  goBack() {
    (this.selectedSM = null),
      (this.selectedDealer = null),
      (this.selectedDealerId = null);
  }
  getDealerColor(i) {
    return this.dealerColors[i % this.dealerColors.length];
  }
  toggleAccordion(i) {
    this.activeAccordion === i
      ? (this.activeAccordion = null)
      : (this.activeAccordion = i);
  }
  get totalPagesdealer() {
    return Math.ceil(this.dealers.length / this.dealersPerPage);
  }
  loadKpiData(i = "DAY") {
    let t = { Authorization: `Bearer ${localStorage.getItem("token")}` };
    this.http
      .get(
        `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${i}`,
        { headers: t }
      )
      .subscribe({
        next: (r) => {
          r.status === 200 &&
            r.data &&
            ((this.kpiData = G({}, r.data)),
            localStorage.setItem("kpiData", JSON.stringify(this.kpiData)),
            this.cd.detectChanges());
        },
        error: (r) => console.error("Error fetching KPI data:", r),
      });
  }
  prevPage() {
    this.currentPage > 1 && this.currentPage--;
  }
  get paginatedDealerskpi() {
    let i = (this.currentPage - 1) * this.dealersPerPage;
    return this.dealers.slice(i, i + this.dealersPerPage);
  }
  get startEntry() {
    return (this.currentPage - 1) * this.dealersPerPage + 1;
  }
  get endEntry() {
    return Math.min(
      this.currentPage * this.dealersPerPage,
      this.dealers.length
    );
  }
  nextPage() {
    this.currentPage < this.totalPagesdealer && this.currentPage++;
  }
  onPageChange(i) {
    let e = Math.ceil(this.dealers.length / this.itemsPerPage);
    i >= 1 && i <= e && (this.currentPage = i);
  }
  togglePS(i) {
    this.activePS = this.activePS === i ? null : i;
  }
  onDropdownChange() {
    console.log("Dropdown changed:"),
      console.log("selectedCategory:", this.selectedCategory),
      console.log("selectedDuration:", this.selectedDuration),
      this.selectedCategory && this.selectedDuration
        ? (console.log(
            "\u2705 Both dropdowns selected. Proceeding to fetch data..."
          ),
          (this.selectedOption = `${this.selectedCategory}-${this.selectedDuration}`))
        : console.warn(
            "\u26A0\uFE0F One or both dropdowns not selected. Skipping fetch."
          );
  }
  onSMClick(i) {
    (this.selectedSM = i),
      (this.selectedDealer = null),
      (this.currentPage = 1),
      (this.ps1Data = []);
  }
  changeDealerPage(i) {
    let e = this.currentDealerPage + i;
    e >= 1 && e <= this.totalDealerPages && this.goToDealerPage(e);
  }
  goToDealerPage(i) {
    i >= 1 &&
      i <= this.totalDealerPages &&
      ((this.currentDealerPage = i),
      this.updateDealerPagination(),
      this.loadDealersForPage(i));
  }
  updateDealerPagination() {
    let i = (this.currentDealerPage - 1) * this.dealersPerPage + 1,
      e = Math.min(this.currentDealerPage * this.dealersPerPage, 23),
      t = document.getElementById("dealer-range");
    t && (t.textContent = `${i}-${e}`),
      document.querySelectorAll(".pagination-btn").forEach((o, a) => {
        o.textContent === "Previous"
          ? (o.disabled = this.currentDealerPage === 1)
          : o.textContent === "Next"
          ? (o.disabled = this.currentDealerPage === this.totalDealerPages)
          : o.textContent &&
            !isNaN(parseInt(o.textContent)) &&
            o.classList.toggle(
              "active",
              parseInt(o.textContent) === this.currentDealerPage
            );
      });
  }
  loadDealersForPage(i) {
    console.log(`Loading dealers for page ${i}`);
    let e = document.querySelectorAll(".accordion.level-1");
    e.forEach((t) => {
      t.style.opacity = "0.5";
    }),
      setTimeout(() => {
        e.forEach((t) => {
          t.style.opacity = "1";
        });
      }, 300);
  }
  changeTablePage(i, e) {
    console.log(`Changing page for ${i} by ${e}`);
  }
  searchDealer(i) {
    console.log("Searching for:", i);
  }
  autoCollapseOthers(i) {
    document.querySelectorAll(".accordion-content.active").forEach((t) => {
      if (t.id !== `content-${i}`) {
        let r = t.id.replace("content-", "toggle-"),
          o = document.getElementById(r);
        o &&
          o.parentElement &&
          (t.classList.remove("active"),
          o.parentElement.classList.remove("active"),
          (o.textContent = "\u25BC"));
      }
    });
  }
  initializeFilters() {
    document.querySelectorAll('select, input[type="date"]').forEach((e) => {
      e.addEventListener("change", (t) => {
        let r = t.target;
        console.log("Filter changed:", r.value),
          this.handleFilterChange(r.value);
      });
    });
  }
  handleFilterChange(i) {
    console.log("Handling filter change:", i);
  }
  onSearchChange(i) {
    let e = i.target;
    this.searchDealer(e.value);
  }
  fetchSuperAdminDashboard(i) {
    (this.isLoading = !0),
      console.log("\u{1F680} fetchSuperAdminDashboard called with:", i),
      console.log(
        "\u{1F4CD} Selected dealers:",
        this.selectedDealers?.length,
        this.selectedDealers
      );
    let e = "",
      t =
        this.selectedFilter === "CUSTOM" &&
        this.customStartDate &&
        this.customEndDate;
    if (!this.selectedDealers?.length)
      e = t
        ? `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?start_date=${this.customStartDate}&end_date=${this.customEndDate}`
        : `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${i}`;
    else if (this.selectedDealers.length === 1)
      e = t
        ? `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${this.selectedDealers[0].dealerId}&start_date=${this.customStartDate}&end_date=${this.customEndDate}`
        : `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${this.selectedDealers[0].dealerId}&type=${i}`;
    else {
      let a = this.selectedDealers.map((d) => d.dealerId).join(",");
      e = t
        ? `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealerIds=${a}&start_date=${this.customStartDate}&end_date=${this.customEndDate}`
        : `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealerIds=${a}&type=${i}`;
    }
    console.log("\u{1F310} API URL:", e);
    let r = localStorage.getItem("token");
    if (!r) {
      console.error("No token found in localStorage!"), (this.isLoading = !1);
      return;
    }
    let o = new Tt({ Authorization: `Bearer ${r}` });
    this.http.get(e, { headers: o }).subscribe({
      next: (a) => {
        if (
          ((this.isLoading = !1),
          console.log("\u{1F4E6} Full API Response:", a),
          a?.status === 200 && a.data)
        ) {
          let d = a.data.dealers ?? 0,
            u = a.data.activeNetwork ?? 0,
            f = {
              dealers: d,
              activeNetwork: u,
              users: a.data.users ?? 0,
              activeUsers: a.data.activeUsers ?? 0,
              leads: a.data.leads ?? 0,
              calls: a.data.calls ?? 0,
              totalFollowUps: a.data.totalFollowUps ?? 0,
              uniqueTestDrives: a.data.uniqueTestDrives ?? 0,
              completedTestDrives: a.data.completedTestDrives ?? 0,
            },
            v = a.data.dealerData ?? [];
          if (
            (console.log(
              "\u{1F3EA} Previous dealers count:",
              this.dealers?.length || 0
            ),
            console.log("\u{1F3EA} New dealers count:", v.length),
            (this.dealers = [...v]),
            this.dealers.forEach((E) => {
              E.callLogs
                ? E.callLogs.totalCalls || (E.callLogs.totalCalls = 0)
                : (E.callLogs = {
                    totalCalls: 0,
                    outgoing: 0,
                    incoming: 0,
                    connected: 0,
                    declined: 0,
                    durationSec: 0,
                  });
            }),
            this.dealers.sort(
              (E, F) => Number(F.saLeads ?? 0) - Number(E.saLeads ?? 0)
            ),
            (this.originalDealers = [...this.dealers]),
            (this.filteredDealers = [...this.dealers]),
            this.dealers.forEach((E) => {
              let F = E.users ?? [];
              this.userCallLogs[E.dealerId] = [...F]
                .sort(
                  (ee, re) =>
                    Number(re.calls?.totalCalls ?? 0) -
                    Number(ee.calls?.totalCalls ?? 0)
                )
                .map((ee) => ({
                  userId: ee.user_id,
                  name: ee.user,
                  calls: {
                    total: Number(ee.calls?.totalCalls ?? 0),
                    outgoing: Number(ee.calls?.outgoing ?? 0),
                    incoming: Number(ee.calls?.incoming ?? 0),
                    connected: Number(ee.calls?.connected ?? 0),
                    declined: Number(ee.calls?.declined ?? 0),
                    durationSec: Number(ee.calls?.durationSec ?? 0),
                  },
                }));
            }),
            this.isInitialLoad
              ? (this.dealers.length > 0 &&
                  ((this.selectedDealers = [...this.dealers]),
                  (this.isAllSelected = !0)),
                (this.isInitialLoad = !1))
              : this.selectedDealers?.length > 0 &&
                (this.selectedDealers = this.selectedDealers
                  .map((E) =>
                    this.dealers.find((F) => F.dealerId === E.dealerId)
                  )
                  .filter(Boolean)),
            (this.isAllSelected =
              this.selectedDealers.length === this.dealers.length),
            this.selectedDealers.sort(
              (E, F) =>
                Number(F.callLogs?.totalCalls ?? 0) -
                Number(E.callLogs?.totalCalls ?? 0)
            ),
            this.isAllSelected)
          )
            f = {
              dealers: d,
              activeNetwork: u,
              users: a.data.users ?? 0,
              activeUsers: a.data.activeUsers ?? 0,
              leads: a.data.leads ?? 0,
              calls: a.data.calls ?? 0,
              totalFollowUps: a.data.totalFollowUps ?? 0,
              uniqueTestDrives: a.data.uniqueTestDrives ?? 0,
              completedTestDrives: a.data.completedTestDrives ?? 0,
            };
          else if (this.selectedDealers?.length === 1) {
            let E = this.dealers.find(
              (F) => F.dealerId === this.selectedDealers[0].dealerId
            );
            E &&
              (f = {
                dealers: d,
                activeNetwork: u,
                users: E.totalUsers ?? 0,
                activeUsers: E.activeUsers ?? 0,
                leads: E.saLeads ?? E.totalLeads ?? 0,
                calls: E.callLogs?.totalCalls ?? 0,
                totalFollowUps: E.saFollowUps ?? E.totalFollowUps ?? 0,
                uniqueTestDrives: E.uniqueTestDrives ?? 0,
                completedTestDrives: E.completedTestDrives ?? 0,
              });
          } else if (this.selectedDealers?.length > 1) {
            let E = this.selectedDealers.reduce(
              (F, ee) => {
                let re = this.dealers.find((ge) => ge.dealerId === ee.dealerId);
                return (
                  re &&
                    ((F.users += re.totalUsers ?? 0),
                    (F.activeUsers += re.activeUsers ?? 0),
                    (F.leads += re.saLeads ?? re.totalLeads ?? 0),
                    (F.calls += re.callLogs?.totalCalls ?? 0),
                    (F.totalFollowUps +=
                      re.saFollowUps ?? re.totalFollowUps ?? 0),
                    (F.uniqueTestDrives += re.uniqueTestDrives ?? 0),
                    (F.completedTestDrives += re.completedTestDrives ?? 0)),
                  F
                );
              },
              {
                users: 0,
                activeUsers: 0,
                leads: 0,
                calls: 0,
                totalFollowUps: 0,
                uniqueTestDrives: 0,
                completedTestDrives: 0,
              }
            );
            f = G({ dealers: d, activeNetwork: u }, E);
          }
          (this.kpiData = G({}, f)), this.cdr.detectChanges();
          let S = [
              "Total Calls",
              "Outgoing Calls",
              "Incoming Calls",
              "Declined Calls",
              "Connected Calls",
            ],
            M = (
              this.selectedDealers?.length
                ? this.dealers.filter((E) =>
                    this.selectedDealers.some((F) => F.dealerId === E.dealerId)
                  )
                : this.dealers
            ).map((E) => ({
              name: E.dealerName || "Unknown Dealer",
              data: [
                E.callLogs?.totalCalls ?? 0,
                E.callLogs?.outgoing ?? 0,
                E.callLogs?.incoming ?? 0,
                E.callLogs?.declined ?? 0,
                E.callLogs?.connected ?? 0,
              ],
            })),
            I = [
              "#008FFB",
              "#00E396",
              "#FEB019",
              "#FF4560",
              "#775DD0",
              "#546E7A",
              "#26A69A",
              "#D4526E",
            ],
            L = M.map((E, F) => Te(G({}, E), { color: I[F % I.length] }));
          this.chartOptions = {
            series: L,
            chart: {
              type: "line",
              height: 350,
              offsetX: 0,
              offsetY: 0,
              toolbar: {
                show: !0,
                tools: {
                  download: !0,
                  selection: !1,
                  zoom: !1,
                  zoomin: !0,
                  zoomout: !0,
                  pan: !1,
                  reset: !1,
                },
              },
            },
            dataLabels: { enabled: !1 },
            stroke: { curve: "smooth", width: 2 },
            title: { text: "Dealer-wise Calls Analysis", align: "left" },
            xaxis: { categories: S, labels: { rotate: -45 } },
            legend: {
              show: M.length > 0,
              position: "bottom",
              horizontalAlign: "center",
              showForSingleSeries: !0,
              markers: { width: 12, height: 12 },
            },
            responsive: [
              { breakpoint: 768, options: { title: { align: "left" } } },
            ],
          };
        } else
          (this.dealers = []),
            (this.filteredDealers = []),
            (this.userCallLogs = {}),
            (this.kpiData = {
              dealers: 0,
              activeNetwork: 0,
              users: 0,
              activeUsers: 0,
              leads: 0,
              calls: 0,
              totalFollowUps: 0,
              uniqueTestDrives: 0,
              completedTestDrives: 0,
            }),
            this.cdr.detectChanges();
      },
      error: (a) => {
        (this.isLoading = !1),
          console.error("\u274C API failed:", a),
          (this.dealers = []),
          (this.filteredDealers = []),
          (this.userCallLogs = {}),
          (this.kpiData = {
            dealers: 0,
            activeNetwork: 0,
            users: 0,
            activeUsers: 0,
            leads: 0,
            calls: 0,
            totalFollowUps: 0,
            uniqueTestDrives: 0,
            completedTestDrives: 0,
          });
      },
    });
  }
  aggregateDealerData(i) {
    let e = {
      dealers: i.length,
      activeNetwork: i.length,
      users: 0,
      activeUsers: 0,
      leads: 0,
      calls: 0,
      totalFollowUps: 0,
      uniqueTestDrives: 0,
      completedTestDrives: 0,
    };
    return (
      i.forEach((t) => {
        (e.users += t.totalUsers || 0),
          (e.activeUsers += t.activeUsers || 0),
          (e.leads += t.saLeads || 0),
          (e.calls += t.calls || 0),
          (e.totalFollowUps += t.totalFollowUps || 0),
          (e.uniqueTestDrives += t.uniqueTestDrives || 0),
          (e.completedTestDrives += t.completedTestDrives || 0);
      }),
      e
    );
  }
  buildUserCallLogs() {
    this.dealers.forEach((i) => {
      let e = i.users ?? [];
      this.userCallLogs[i.dealerId] = e.map((t) => ({
        userId: t.user_id,
        name: t.user,
        calls: {
          total: t.calls?.totalCalls ?? 0,
          outgoing: t.calls?.outgoing ?? 0,
          incoming: t.calls?.incoming ?? 0,
          connected: t.calls?.connected ?? 0,
          declined: t.calls?.declined ?? 0,
          durationSec: t.calls?.durationSec ?? 0,
        },
      }));
    });
  }
  fetchDealers(i) {
    let e = localStorage.getItem("token"),
      t = new Tt({ Authorization: `Bearer ${e}` }),
      r = `https://uat.smartassistapp.in/api/superAdmin/dashboard/view-activities?type=${i}`;
    this.http.get(r, { headers: t }).subscribe(
      (o) => {
        o?.status === 200 && o.data?.dealerData
          ? ((this.dealers = o.data.dealerData),
            this.dealers.forEach((a) => {
              this.dealerSMS[a.dealer_id] || (this.dealerSMS[a.dealer_id] = []);
            }))
          : (this.dealers = []);
      },
      (o) => {
        console.error("Error fetching dealers:", o), (this.dealers = []);
      }
    );
  }
  applyCustomDate() {
    if (!this.customStartDate || !this.customEndDate) {
      this.toastr.warning("Please select both start and end dates", "Warning");
      return;
    }
    if (new Date(this.customEndDate) < new Date(this.customStartDate)) {
      this.toastr.error("End date cannot be earlier than start date", "Error");
      return;
    }
    (this.isLoading = !0),
      (this.selectedFilter = "CUSTOM"),
      this.fetchSuperAdminDashboard("CUSTOM");
  }
  resetCustomDate() {
    (this.customStartDate = ""),
      (this.customEndDate = ""),
      (this.selectedFilter = "DAY"),
      (this.invalidDateRange = !1),
      (this.isLoading = !0),
      this.onFilterChange(this.selectedFilter);
    let i = document.querySelector(".custom-inputs");
    i && i.classList.remove("applied");
  }
  validateCustomDates() {
    if (this.customStartDate && this.customEndDate) {
      let i = new Date(this.customStartDate),
        e = new Date(this.customEndDate);
      this.invalidDateRange = i > e;
    } else this.invalidDateRange = !1;
  }
  formatDuration(i) {
    let e = Math.floor(i / 3600)
        .toString()
        .padStart(2, "0"),
      t = Math.floor((i % 3600) / 60)
        .toString()
        .padStart(2, "0"),
      r = (i % 60).toString().padStart(2, "0");
    return `${e}:${t}:${r}`;
  }
  toggleRow(i, e) {
    let t = e.dealerId;
    if (!t) return;
    this.expandedRow = this.expandedRow === t ? null : t;
    let r = localStorage.getItem("token");
    if (!r) return;
    this.loadingUsers[t] = !0;
    let o;
    this.selectedFilter === "CUSTOM" &&
    this.customStartDate &&
    this.customEndDate
      ? (o = this.dashboardService.getDealersByCustomDate(
          this.customStartDate,
          this.customEndDate,
          r,
          t
        ))
      : (o = this.dashboardService.getDealerUsers(t, this.selectedFilter, r)),
      o.subscribe({
        next: (a) => {
          this.loadingUsers[t] = !1;
          let d = Array.isArray(a?.data?.dealerData)
            ? a.data.dealerData.find((u) => u.dealerId === t)
            : a?.data?.dealerData;
          if (!d) {
            (this.dealerUsers[t] = []),
              (this.dealerCallLogs[t] = null),
              (this.userCallLogs[t] = []);
            return;
          }
          (this.dealerUsers[t] = d.users || []),
            (this.dealerCallLogs[t] = d.callLogs ?? null),
            (this.userCallLogs[t] =
              d.users?.map((u) => {
                let f = Number(u.calls?.durationSec ?? 0);
                return {
                  userId: u.user_id,
                  name: u.user,
                  role: u.user_role,
                  active: u.active,
                  calls: {
                    total: Number(u.calls?.totalCalls ?? 0),
                    outgoing: Number(u.calls?.outgoing ?? 0),
                    incoming: Number(u.calls?.incoming ?? 0),
                    connected: Number(u.calls?.connected ?? 0),
                    declined: Number(u.calls?.declined ?? 0),
                    duration: this.formatDuration(f),
                    durationSec: f,
                  },
                };
              }) || []),
            this.cd.detectChanges();
        },
        error: (a) => {
          (this.loadingUsers[t] = !1),
            console.error(a),
            (this.dealerUsers[t] = []),
            (this.dealerCallLogs[t] = null),
            (this.userCallLogs[t] = []);
        },
      });
  }
  fetchDealersWithCustomDate(i, e) {
    let t = localStorage.getItem("token"),
      r;
    this.selectedDealers?.length === 1 &&
      (r = this.selectedDealers[0].dealerId),
      this.dashboardService.getDealersByCustomDate(i, e, t, r).subscribe({
        next: (o) => {
          this.ngZone.run(() => {
            if (o?.status === 200 && o.data) {
              let a = o.data.dealers ?? 0,
                d = o.data.activeNetwork ?? 0,
                u = {
                  dealers: a,
                  activeNetwork: d,
                  users: o.data.users ?? 0,
                  activeUsers: o.data.activeUsers ?? 0,
                  leads: o.data.leads ?? 0,
                  calls: o.data.calls ?? 0,
                  totalFollowUps: o.data.totalFollowUps ?? 0,
                  uniqueTestDrives: o.data.uniqueTestDrives ?? 0,
                  completedTestDrives: o.data.completedTestDrives ?? 0,
                };
              if (
                ((this.dealers = o.data.dealerData ?? []),
                (this.filteredDealers = [...this.dealers]),
                this.selectedDealers?.length > 0 &&
                  (this.selectedDealers = this.selectedDealers.map(
                    (E) =>
                      this.dealers.find((ee) => ee.dealerId === E.dealerId) || E
                  )),
                this.selectedDealers?.length === 1)
              ) {
                let E = this.dealers.find(
                  (F) => F.dealerId === this.selectedDealers[0].dealerId
                );
                E &&
                  (u = {
                    dealers: a,
                    activeNetwork: d,
                    users: E.totalUsers ?? 0,
                    activeUsers: E.activeUsers ?? 0,
                    leads: E.saLeads ?? E.totalLeads ?? 0,
                    calls: E.callLogs?.totalCalls ?? 0,
                    totalFollowUps: E.saFollowUps ?? E.totalFollowUps ?? 0,
                    uniqueTestDrives: E.uniqueTestDrives ?? 0,
                    completedTestDrives: E.completedTestDrives ?? 0,
                  });
              } else if (this.selectedDealers?.length > 1) {
                let E = {
                  users: 0,
                  activeUsers: 0,
                  leads: 0,
                  calls: 0,
                  totalFollowUps: 0,
                  uniqueTestDrives: 0,
                  completedTestDrives: 0,
                };
                this.selectedDealers.forEach((F) => {
                  let ee = this.dealers.find(
                    (re) => re.dealerId === F.dealerId
                  );
                  ee &&
                    ((E.users += ee.totalUsers ?? 0),
                    (E.activeUsers += ee.activeUsers ?? 0),
                    (E.leads += ee.saLeads ?? ee.totalLeads ?? 0),
                    (E.calls += ee.callLogs?.totalCalls ?? 0),
                    (E.totalFollowUps +=
                      ee.saFollowUps ?? ee.totalFollowUps ?? 0),
                    (E.uniqueTestDrives += ee.uniqueTestDrives ?? 0),
                    (E.completedTestDrives += ee.completedTestDrives ?? 0));
                }),
                  (u = G({ dealers: a, activeNetwork: d }, E));
              }
              (this.kpiData = G({}, u)),
                this.dealers.sort((E, F) => {
                  let ee =
                    (E.saLeads || 0) +
                    (E.cxpLeads || 0) +
                    (E.icsLeads || 0) +
                    (E.manuallyEnteredLeads || 0);
                  return (
                    (F.saLeads || 0) +
                    (F.cxpLeads || 0) +
                    (F.icsLeads || 0) +
                    (F.manuallyEnteredLeads || 0) -
                    ee
                  );
                });
              let f = this.dealers.map((E) => E.dealerName),
                v = this.dealers.map((E) => E.callLogs?.connected ?? 0),
                S = this.dealers.map((E) => E.callLogs?.declined ?? 0),
                T = this.dealers.map((E) => E.callLogs?.durationSec ?? 0),
                M = this.dealers.map((E) => E.callLogs?.incoming ?? 0),
                I = this.dealers.map((E) => E.callLogs?.outgoing ?? 0),
                L = this.dealers.map((E) => E.callLogs?.totalCalls ?? 0);
              (this.chartOptions = Te(G({}, this.chartOptions), {
                series: [
                  { name: "Total Calls", data: L },
                  { name: "Outgoing Calls", data: I },
                  { name: "Incoming Calls", data: M },
                  { name: "Duration Sec", data: T },
                  { name: "Declined Calls", data: S },
                  { name: "Connected Calls", data: v },
                ],
                xaxis: { categories: f },
              })),
                this.cdr.detectChanges();
            } else
              (this.dealers = []),
                (this.kpiData = {
                  dealers: 0,
                  activeNetwork: 0,
                  users: 0,
                  activeUsers: 0,
                  leads: 0,
                  calls: 0,
                  totalFollowUps: 0,
                  uniqueTestDrives: 0,
                  completedTestDrives: 0,
                });
            this.isLoading = !1;
          });
        },
        error: (o) => {
          console.error(o),
            this.ngZone.run(() => {
              (this.dealers = []),
                (this.kpiData = {
                  dealers: 0,
                  activeNetwork: 0,
                  users: 0,
                  activeUsers: 0,
                  leads: 0,
                  calls: 0,
                  totalFollowUps: 0,
                  uniqueTestDrives: 0,
                  completedTestDrives: 0,
                }),
                (this.isLoading = !1);
            });
        },
      });
  }
  updatePaginatedDealers() {
    this.paginatedDealers = this.dealers.slice(0, this.currentDisplayCount);
  }
  onDealerSelectionChange() {
    if (
      this.selectedFilter === "CUSTOM" &&
      this.customStartDate &&
      this.customEndDate
    )
      this.fetchDealersWithCustomDate(this.customStartDate, this.customEndDate);
    else {
      let i = this.mapFilterToApi(this.selectedFilter);
      this.fetchSuperAdminDashboard(i);
    }
  }
  onDealerClick(i, e) {
    let t = localStorage.getItem("token");
    if (
      this.selectedFilter === "CUSTOM" &&
      this.customStartDate &&
      this.customEndDate
    ) {
      let r = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&start_date=${this.customStartDate}&end_date=${this.customEndDate}`;
      this.http
        .get(r, { headers: { Authorization: `Bearer ${t}` } })
        .subscribe((o) => {
          console.log("Custom dealer response", o);
        });
    } else {
      let r = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&type=${e}`;
      this.http
        .get(r, { headers: { Authorization: `Bearer ${t}` } })
        .subscribe((o) => {
          console.log("Non-custom dealer response", o);
        });
    }
  }
  avatarColors = [
    { background: "#E2E0F5", color: "#4B3C9B" },
    { background: "#D1F8F2", color: "#008B7F" },
    { background: "#FFD6D6", color: "#C62828" },
    { background: "#D6FFD6", color: "#2E7D32" },
    { background: "#D6E6FF", color: "#2962FF" },
    { background: "#FFE6FF", color: "#AD1457" },
  ];
  getAvatarStyle(i) {
    let e = this.avatarColors[i % this.avatarColors.length];
    return {
      width: "60px",
      height: "60px",
      margin: "0 auto 12px auto",
      borderRadius: "50%",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      fontWeight: "600",
      fontSize: "24px",
      background: e.background,
      color: e.color,
    };
  }
  isLastRow(i) {
    let e = Math.floor(window.innerWidth / 160),
      t = Math.ceil(this.ps1Data.length / e);
    return Math.floor(i / e) + 1 === t;
  }
  getAvatarColor(i) {
    let e = [
      { background: "#E2E0F5", text: "#4B3C9B" },
      { background: "#C4FEFB", text: "#007A78" },
      { background: "#FED1CF", text: "#C9302C" },
      { background: "#E3FFDF", text: "#3E8E41" },
      { background: "#CFDFFE", text: "#2C4DB2" },
      { background: "#FFEDFE", text: "#AF4C96" },
      { background: "#EAD1DC", text: "#9C2550" },
      { background: "#FFF2CC", text: "#B58900" },
      { background: "#D9EAD3", text: "#3B7A2A" },
      { background: "#F4CCCC", text: "#990000" },
      { background: "#F3F3F3", text: "#4D4D4D" },
      { background: "#FFE6F0", text: "#C2185B" },
    ];
    return e[i % e.length];
  }
  onPSCardClick(i) {
    console.log("Clicked PS ID:", i);
  }
  fetchPS1Data() {
    if (!this.selectedSM || !this.selectedDealerId) {
      console.warn("SM or Dealer not selected");
      return;
    }
    this.loadingPS = !0;
    let i = this.selectedFilter,
      e = "https://uat.smartassistapp.in/api/superAdmin/dashbaordNew",
      t = this.selectedDealerId,
      r = this.selectedSM.sm_id,
      o = `${e}?type=${i}&dealer_id=${t}&sm_id=${r}`,
      a = localStorage.getItem("token");
    if (!a) {
      console.error("No token found in localStorage"), (this.loadingPS = !1);
      return;
    }
    let d = new Tt().set("Authorization", `Bearer ${a}`);
    this.http.get(o, { headers: d }).subscribe({
      next: (u) => {
        let f = u?.data?.ps;
        Array.isArray(f)
          ? (this.ps1Data = f.map((v) => ({
              ps_id: v.ps_id,
              ps_name: `${v.ps_fname} ${v.ps_lname}`,
              enquiries: v.enquiries,
              testDrives: v.testDrives,
              orders: v.orders,
              cancellations: v.cancellation,
              netOrders: v.net_orders,
              retail: v.retail,
            })))
          : (console.warn("No PS data found in API response"),
            (this.ps1Data = [])),
          (this.loadingPS = !1);
      },
      error: (u) => {
        console.error("Error fetching PS1 data:", u),
          (this.ps1Data = []),
          (this.loadingPS = !1);
      },
    });
  }
  get paginatedPs1Data() {
    let i = (this.currentPage - 1) * this.pageSize,
      e = i + this.pageSize;
    return this.ps1Data.slice(i, e);
  }
  get totalPs1Pages() {
    return Math.ceil(this.ps1Data.length / this.pageSize);
  }
  formatChangeValue(i) {
    return i === 0 || Object.is(i, -0) ? "0%" : i > 0 ? `+${i}%` : `${i}%`;
  }
  getChangeColor(i) {
    return i > 0 ? "text-success" : (i < 0, "text-danger");
  }
  showMore() {
    (this.currentDisplayCount += this.itemsPerPage),
      this.updateDisplayedDealers();
  }
  showMoreVisible = !0;
  showMoreTable1() {
    let i =
      this.selectedDealers.length > 0 ? this.selectedDealers : this.dealers;
    this.table1Length < i.length && (this.table1Length += 10);
  }
  showLessTable1() {
    this.table1Length = 10;
  }
  showMoreTable2() {
    let i = this.dealers;
    this.table2Length < i.length && (this.table2Length += 10);
  }
  showLessTable2() {
    this.table2Length = 10;
  }
  dealerEngagementView(i) {
    this.dealerSummaryCallsViewType = i;
  }
  updateDisplayedDealers() {
    (this.displayedDealers = this.dealers.slice(0, this.itemsToShow)),
      (this.showMoreVisible = this.itemsToShow < this.dealers.length);
  }
  fetchDashboardData(i = "MTD") {
    let e = localStorage.getItem("token");
    if (!e) {
      console.error("Token not found!");
      return;
    }
    let t = new Tt().set("Authorization", `Bearer ${e}`),
      r = `https://uat.smartassistapp.in/api/superAdmin/dashboard/view-activities?type=${i}`;
    this.http.get(r, { headers: t }).subscribe({
      next: (o) => {
        console.log(`API response for type=${i}:`, o);
        let a = o?.data || {},
          d = (u) =>
            typeof u == "string"
              ? parseFloat(u.replace("%", "").trim())
              : Number(u) || 0;
        if (
          ((this.currentLeads = Number(a.current) || 0),
          (this.previousLeads = Number(a.previous) || 0),
          (this.changeDisplay = d(a.change)),
          (this.currentTestDrives = Number(a.currentTestDrives) || 0),
          (this.previousTestDrives = Number(a.previousTestDrives) || 0),
          (this.testDriveChange = d(a.testDriveChange)),
          (this.currentOrders = Number(a.currentOrders) || 0),
          (this.previousOrders = Number(a.previousOrders) || 0),
          (this.orderChange = d(a.orderChange)),
          (this.progressValue = Math.abs(this.changeDisplay)),
          (this.strokeColor = this.getStrokeColor(this.changeDisplay)),
          (this.testDriveProgressValue = Math.abs(this.testDriveChange)),
          (this.testDriveStrokeColor = this.getStrokeColor(
            this.testDriveChange
          )),
          (this.orderProgressValue = Math.abs(this.orderChange)),
          (this.orderStrokeColor = this.getStrokeColor(this.orderChange)),
          console.log("\u2705 Final Parsed Data:", {
            leads: {
              current: this.currentLeads,
              previous: this.previousLeads,
              change: this.changeDisplay,
            },
            testDrives: {
              current: this.currentTestDrives,
              previous: this.previousTestDrives,
              change: this.testDriveChange,
            },
            orders: {
              current: this.currentOrders,
              previous: this.previousOrders,
              change: this.orderChange,
            },
          }),
          a.kpi)
        ) {
          let u = Number(a.kpi.totalTestDrives) || 0,
            f = Number(a.kpi.totalOrders) || 0;
          (u > 0 || f > 0) &&
            console.log("\u{1F4CA} Creating Doughnut Chart with:", {
              totalTestDrives: u,
              totalOrders: f,
            });
        }
      },
      error: (o) => {
        console.error("Dashboard API error:", o);
      },
    });
  }
  initLineChart() {
    let i = document.getElementById("enquiryLineChart");
    new pm(i, {
      type: "line",
      data: {
        labels: ["Jan", "Feb", "Mar", "Apr"],
        datasets: [
          {
            data: [3, 5, 7, 4],
            borderColor: "#4CAF50",
            tension: 0.4,
            pointRadius: 0,
            borderWidth: 2,
          },
        ],
      },
      options: {
        responsive: !0,
        plugins: { legend: { display: !1 }, tooltip: { enabled: !0 } },
        scales: { x: { display: !1 }, y: { display: !1 } },
      },
    });
  }
  fetchData() {
    this.http
      .get("https://uat.smartassistapp.in/api/superAdmin/dashbaordNew")
      .subscribe(
        (i) => {
          console.log("API Response:", i),
            i?.data
              ? ((this.data = i.data),
                console.log("Data after assignment:", this.data))
              : console.error("No data in response:", i);
        },
        (i) => {
          console.error("Error fetching data:", i);
        }
      );
  }
  getLeadChange() {
    return (
      console.log("Data:", this.data),
      console.log("Lead Change:", this.data?.leads?.change),
      this.data?.leads?.change ? this.data.leads.change : 0
    );
  }
  trackByDealerId(i, e) {
    return e.dealer_id;
  }
  getChangePercentage() {
    return this.data?.leads?.change || 0;
  }
  getLeadPercentageChange() {
    return (
      console.log(this.dashboardData),
      console.log(this.dashboardData?.leads?.change),
      this.dashboardData?.leads?.change || 0
    );
  }
  sortData(i) {
    this.sortColumn === i
      ? (this.sortDirection =
          this.sortDirection === "asc"
            ? "desc"
            : this.sortDirection === "desc"
            ? "default"
            : "asc")
      : ((this.sortColumn = i), (this.sortDirection = "asc")),
      this.sortDirection !== "default" &&
        this.selectedDealers?.length &&
        this.selectedDealers.sort((e, t) => {
          let r = e[i] ?? 0,
            o = t[i] ?? 0;
          return this.sortDirection === "asc" ? r - o : o - r;
        });
  }
  fetchDashboardDataForTopCards(i) {
    let e = localStorage.getItem("token") || "",
      t = "https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM";
    i === "CUSTOM" && this.customStartDate && this.customEndDate
      ? (t += `?startDate=${this.customStartDate}&endDate=${this.customEndDate}`)
      : i !== "CUSTOM" && (t += `?type=${i}`),
      this.http
        .get(t, { headers: { Authorization: `Bearer ${e}` } })
        .subscribe({
          next: (r) => {
            r.status === 200 &&
              ((this.kpiData = r.data), (this.dealers = r.data.dealerData));
          },
          error: (r) => {
            console.error("Error fetching dealer data:", r),
              (this.dealers = []);
          },
        });
  }
  filterDealers() {
    let i = this.dealerSearch.toLowerCase();
    if (!i) {
      this.filteredDealers = [...this.dealers];
      return;
    }
    this.filteredDealers = this.dealers.filter((e) =>
      e.dealerName?.toLowerCase().includes(i)
    );
  }
  toggleDropdown() {
    (this.dropdownOpen = !this.dropdownOpen),
      this.dropdownOpen && (this.filteredDealers = [...this.dealers]);
  }
  toggleSelectAll(i) {
    i.target.checked
      ? ((this.selectedDealers = [...this.filteredDealers]),
        (this.isAllSelected = !0))
      : ((this.selectedDealers = []), (this.isAllSelected = !1)),
      this.fetchSuperAdminDashboard(this.selectedFilter);
  }
  clearSelection() {
    (this.selectedDealers = []), this.cdr.detectChanges();
  }
  selectDealer(i) {
    (this.selectedDealer = i),
      (this.dealerSearch = ""),
      (this.dropdownOpen = !1),
      this.fetchSuperAdminDashboard("MTD");
  }
  clickOutside(i) {
    this.dropdownOpen &&
      (i.target.closest(".dropdown-toggle") || (this.dropdownOpen = !1));
  }
  isDealerSelected(i) {
    return this.selectedDealers.some((e) => e.dealerId === i.dealerId);
  }
  toggleDealerSelection(i) {
    let e = this.selectedDealers.findIndex((t) => t.dealerId === i.dealerId);
    e > -1 ? this.selectedDealers.splice(e, 1) : this.selectedDealers.push(i),
      this.fetchSuperAdminDashboard(this.selectedFilter);
  }
  areAllSelected() {
    return !this.filteredDealers ||
      this.filteredDealers.length === 0 ||
      !this.selectedDealers ||
      this.selectedDealers.length === 0
      ? !1
      : this.filteredDealers.every((i) =>
          this.selectedDealers.some((e) => e.dealerId === i.dealerId)
        );
  }
  exportToCSV() {
    let i = this.getSortedDealersForSummary();
    if (!i || i.length === 0) {
      console.warn("No dealers to export");
      return;
    }
    let e = [
        "Dealer",
        "Total Users",
        "registerUsers",
        "Active Users",
        "Leads SA",
        "Leads Sync with CXP",
        "Leads Sync with ICS",
        "Leads Manually Entered with CXP",
        "Follow-ups SA",
        "Follow-ups Sync with CXP",
        "Follow-ups Completed",
        "Follow-ups Upcoming",
        "Follow-ups Overdue",
        "Test Drives SA",
        "Test Drives Sync with CXP",
        "Test Drives Completed",
        "Test Drives Upcoming",
        "Test Drives Overdue",
        "Opportunities Converted",
      ],
      t = i.map((u) => [
        `"${u.dealerName}"`,
        u.totalUsers || 0,
        u.registerUsers || 0,
        u.activeUsers || 0,
        u.saLeads || 0,
        u.cxpLeads || 0,
        u.icsLeads || 0,
        u.manuallyEnteredLeads || 0,
        u.saFollowUps || 0,
        u.cxpFollowUps || 0,
        u.completedFollowUps || 0,
        u.openFollowUps || 0,
        u.closedFollowUps || 0,
        u.saTestDrives || 0,
        u.cxpTestDrives || 0,
        u.completedTestDrives || 0,
        u.upcomingTestDrives || 0,
        u.closedTestDrives || 0,
        u.opportunitiesConverted || 0,
      ]),
      r = [e.join(","), ...t.map((u) => u.join(","))].join(`
`),
      o = new Blob([r], { type: "text/csv;charset=utf-8;" }),
      a = URL.createObjectURL(o),
      d = document.createElement("a");
    (d.href = a),
      (d.download = "dealer_summary.csv"),
      (d.style.display = "none"),
      document.body.appendChild(d),
      d.click(),
      document.body.removeChild(d),
      URL.revokeObjectURL(a);
  }
  trackByUserId(i, e) {
    return e.user_id;
  }
  exportDealerCalllogstocxp() {
    let i =
      this.selectedDealers.length > 0 ? this.selectedDealers : this.dealers;
    if (!i || i.length === 0) {
      console.warn("No dealers to export");
      return;
    }
    let e = [
        "Dealer",
        "Total Calls",
        "Outgoing",
        "Incoming",
        "Connected",
        "Declined",
        "Duration",
      ],
      t = i.map((u) => [
        `"${u.dealerName}"`,
        u.callLogs?.totalCalls || 0,
        u.callLogs?.outgoing || 0,
        u.callLogs?.incoming || 0,
        u.callLogs?.connected || 0,
        u.callLogs?.declined || 0,
        u.callLogs?.durationSec
          ? this.formatDuration(u.callLogs.durationSec)
          : "00:00:00",
      ]),
      r = [e.join(","), ...t.map((u) => u.join(","))].join(`
`),
      o = new Blob([r], { type: "text/csv;charset=utf-8;" }),
      a = URL.createObjectURL(o),
      d = document.createElement("a");
    (d.href = a),
      (d.download = "dealer_summary_calls.csv"),
      (d.style.display = "none"),
      document.body.appendChild(d),
      d.click(),
      document.body.removeChild(d),
      URL.revokeObjectURL(a),
      console.log("Dealer call logs CSV exported successfully");
  }
  static ɵfac = function (e) {
    return new (e || n)(
      j(jt),
      j(Qe),
      j(qn),
      j(vt),
      j(Sd),
      j(Dd),
      j(Me),
      j(Qe),
      j(Re),
      j(fi)
    );
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-dashboard"]],
    viewQuery: function (e, t) {
      if ((e & 1 && _t(DT, 5), e & 2)) {
        let r;
        nt((r = rt())) && (t.chart = r.first);
      }
    },
    hostBindings: function (e, t) {
      e & 1 &&
        R(
          "click",
          function (o) {
            return t.clickOutside(o);
          },
          !1,
          Or
        );
    },
    standalone: !0,
    features: [le],
    decls: 1,
    vars: 1,
    consts: [
      ["noDealers", ""],
      [4, "ngIf"],
      ["class", "loader-overlay", 4, "ngIf"],
      [
        1,
        "header2",
        2,
        "border-radius",
        "7px",
        "padding",
        "10px",
        "margin-top",
        "1rem",
        3,
        "ngClass",
      ],
      [1, "fltt"],
      [
        1,
        "time-dropdown",
        "flt1",
        2,
        "margin-right",
        "5px",
        3,
        "ngModelChange",
        "change",
        "ngModel",
      ],
      ["value", "DAY"],
      ["value", "YESTERDAY"],
      ["value", "WEEK"],
      ["value", "LAST_WEEK"],
      ["value", "MTD"],
      ["value", "LAST_MONTH"],
      ["value", "QTD"],
      ["value", "LAST_QUARTER"],
      ["value", "SIX_MONTH"],
      ["value", "YTD"],
      ["value", "LIFETIME"],
      ["value", "CUSTOM"],
      ["class", "custom-inputs flt1", 4, "ngIf"],
      [1, "dropdown", "flt1", 2, "margin-right", "5px"],
      [
        "type",
        "button",
        1,
        "time-dropdown",
        "dropdown-toggle",
        3,
        "click",
        "disabled",
      ],
      ["class", "dropdown-menu show", 4, "ngIf"],
      [1, "content-section", "active", 2, "margin-bottom", "2rem"],
      [1, "main-content"],
      [1, "kpi-section"],
      [1, "kpi-card"],
      [1, "kpi-label"],
      [1, "kpi-value", 2, "color", "black"],
      [1, "kpi-secondary"],
      [1, "kpi-highlight"],
      [1, "table-section"],
      [1, "table-header"],
      [1, "table-title"],
      [1, "table-subtitle"],
      [1, "table-actions", "flex", "items-center", "gap-2"],
      [
        "type",
        "button",
        "id",
        "exportsummary",
        1,
        "btn",
        "btn-small",
        "btn-secondary",
        3,
        "click",
      ],
      [1, "icon-download"],
      [1, "table-container"],
      [1, "table-scroll"],
      [1, "data-table"],
      [1, "table-thead"],
      ["rowspan", "2", 1, "sticky-col-header", "th-left"],
      ["colspan", "2", 1, "th-right"],
      ["colspan", "4", 1, "th-right"],
      ["colspan", "5", 1, "th-right"],
      ["colspan", "6", 1, "th-right"],
      [1, "th-right", "sortable-header", 2, "cursor", "pointer", 3, "click"],
      [1, "sort-arrows"],
      [1, "arrow-up"],
      [1, "arrow-down"],
      [
        1,
        "th-right",
        "group-divider",
        "sortable-header",
        2,
        "cursor",
        "pointer",
        3,
        "click",
      ],
      [4, "ngFor", "ngForOf", "ngForTrackBy"],
      [
        "type",
        "button",
        "style",
        "margin: 0.5rem; float: right;",
        "class",
        "btn btn-primary",
        3,
        "click",
        4,
        "ngIf",
      ],
      [
        "type",
        "button",
        "style",
        "margin: 0.5rem; float: right;",
        "class",
        "btn btn-secondary",
        3,
        "click",
        4,
        "ngIf",
      ],
      ["id", "ds", 1, "table-title"],
      [1, "table-actions"],
      [1, "nav-button-group", 2, "margin-left", "10px"],
      [1, "nav-button", 3, "click", "ngClass"],
      [1, "fas", "fa-table", 2, "margin-right", "6px", "font-size", "15px"],
      [1, "fas", "fa-chart-line", 2, "margin-right", "8px"],
      [1, "btn", "btn-small", "btn-secondary", 3, "click", "hidden"],
      ["class", "table-container", 4, "ngIf"],
      [
        "class",
        "chart-container",
        "style",
        "min-height:400px; padding:20px; background:white; border-radius:10px;",
        4,
        "ngIf",
      ],
      [1, "loader-overlay"],
      [1, "spinner"],
      [1, "custom-inputs", "flt1"],
      [
        "type",
        "date",
        "placeholder",
        "Start Date",
        1,
        "custom-date",
        3,
        "ngModelChange",
        "change",
        "ngModel",
      ],
      [
        "type",
        "date",
        "placeholder",
        "End Date",
        1,
        "custom-date",
        3,
        "ngModelChange",
        "change",
        "ngModel",
      ],
      [1, "apply-btn", "flt2", 3, "click"],
      [1, "reset-btn", "flt2", 3, "click"],
      [1, "dropdown-menu", "show"],
      [1, "px-2", "py-1"],
      [
        "type",
        "text",
        "placeholder",
        "Search dealers...",
        1,
        "form-control",
        3,
        "ngModelChange",
        "input",
        "click",
        "ngModel",
      ],
      [
        1,
        "d-flex",
        "justify-content-between",
        "align-items-center",
        "px-2",
        "py-1",
        "border-bottom",
      ],
      [1, "mb-0", "d-flex", "align-items-center", 3, "click"],
      ["type", "checkbox", 1, "me-2", 3, "change", "checked"],
      [
        "type",
        "button",
        "id",
        "clearbtn",
        1,
        "btn",
        "btn-link",
        "btn-sm",
        "text-danger",
        "p-0",
        "ms-auto",
        2,
        "margin-left",
        "120px",
        3,
        "click",
      ],
      [4, "ngIf", "ngIfElse"],
      ["class", "dropdown-item", 4, "ngFor", "ngForOf", "ngForTrackBy"],
      [1, "dropdown-item"],
      [
        "type",
        "checkbox",
        1,
        "me-2",
        2,
        "border",
        "1px solid black",
        3,
        "change",
        "checked",
      ],
      [3, "click"],
      [1, "dropdown-item", "text-muted", "text-center"],
      ["class", "table-row", 4, "ngIf"],
      ["class", "sub-row", 4, "ngIf"],
      [1, "table-row"],
      [1, "sticky-col-header", "td-left"],
      [1, "expand-btn", 3, "click"],
      [
        1,
        "fa",
        2,
        "font-size",
        "10px",
        "margin-right",
        "5px",
        "color",
        "rgb(15 95 184 / var(--tw-text-opacity, 1))",
        3,
        "ngClass",
      ],
      [2, "color", "rgb(15 95 184 / var(--tw-text-opacity, 1))"],
      [1, "td-right"],
      [1, "td-right", 2, "color", "#222fb9"],
      [1, "td-right", 3, "ngStyle"],
      [1, "sub-row"],
      ["colspan", "20", 1, "sub-row-content"],
      [1, "sub-row-inner"],
      [1, "sub-row-title", 2, "text-align", "left"],
      [1, "sub-table-container"],
      [1, "sub-table"],
      [1, "sub-table-thead", 2, "border-radius", "20px !important"],
      [2, "border-radius", "20px !important"],
      [2, "text-align", "left"],
      [3, "ngClass", 4, "ngFor", "ngForOf", "ngForTrackBy"],
      ["colspan", "14", 1, "td-center"],
      ["colspan", "20", 1, "td-center"],
      [3, "ngClass"],
      [1, "td-rigth"],
      [1, "td-center"],
      [1, "chip", 3, "ngClass"],
      [
        "type",
        "button",
        1,
        "btn",
        "btn-primary",
        2,
        "margin",
        "0.5rem",
        "float",
        "right",
        3,
        "click",
      ],
      [
        "type",
        "button",
        1,
        "btn",
        "btn-secondary",
        2,
        "margin",
        "0.5rem",
        "float",
        "right",
        3,
        "click",
      ],
      [1, "data-table", "calls-table"],
      [1, "sticky-col-header", "th-left", 2, "width", "18%"],
      [1, "th-right"],
      [4, "ngFor", "ngForOf"],
      [
        2,
        "display",
        "flex",
        "justify-content",
        "flex-end",
        "gap",
        "0.5rem",
        "margin-top",
        "0.5rem",
      ],
      ["type", "button", "class", "btn btn-primary", 3, "click", 4, "ngIf"],
      ["type", "button", "class", "btn btn-secondary", 3, "click", 4, "ngIf"],
      [1, "sticky-col", "td-font-medium"],
      [
        2,
        "display",
        "flex",
        "align-items",
        "center",
        "justify-content",
        "center !important",
        3,
        "ngClass",
      ],
      [1, "fa", "fa-phone", 2, "margin-right", "8px", 3, "ngClass"],
      [
        2,
        "margin-left",
        "4px",
        "display",
        "inline-block",
        "width",
        "36px",
        "text-align",
        "left",
        "font-size",
        "12px",
        3,
        "ngClass",
      ],
      [
        2,
        "display",
        "flex",
        "align-items",
        "center",
        "justify-content",
        "center !important",
      ],
      [2, "color", "green", "font-size", "18px", "margin-right", "8px"],
      [
        2,
        "color",
        "green",
        "margin-left",
        "4px",
        "display",
        "inline-block",
        "width",
        "36px",
        "text-align",
        "left",
        "font-size",
        "12px",
      ],
      [
        2,
        "color",
        "green",
        "margin-left",
        "4px",
        "display",
        "inline-block",
        "width",
        "36px",
        "text-align",
        "left",
        "font-size",
        "13px",
      ],
      [3, "ngStyle"],
      [
        2,
        "display",
        "inline-flex",
        "justify-content",
        "center",
        "align-items",
        "center",
        "width",
        "16px",
        "height",
        "16px",
        "border-radius",
        "50%",
        "background-color",
        "red",
        "color",
        "white",
        "font-size",
        "10px",
        "flex-shrink",
        "0",
        "margin-right",
        "8px",
      ],
      [
        2,
        "color",
        "red",
        "margin-left",
        "4px",
        "display",
        "inline-block",
        "width",
        "36px",
        "text-align",
        "left",
        "font-size",
        "12px",
      ],
      ["colspan", "10", 1, "sub-row-content", 2, "padding", "0"],
      [1, "sub-row-inner", 2, "padding-left", "13px !important"],
      [
        1,
        "sub-row-title",
        2,
        "text-align",
        "left !important",
        "font-weight",
        "600",
        "padding",
        "4px 8px",
      ],
      [2, "text-align", "left !important"],
      [2, "text-align", "left !important", "width", "90px !important"],
      [2, "color", "green"],
      [2, "color", "red"],
      [2, "color", "black"],
      ["colspan", "7", 1, "td-center"],
      ["type", "button", 1, "btn", "btn-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-secondary", 3, "click"],
      [
        1,
        "chart-container",
        2,
        "min-height",
        "400px",
        "padding",
        "20px",
        "background",
        "white",
        "border-radius",
        "10px",
      ],
      ["id", "chart"],
      [3, "series", "chart", "xaxis", "stroke", "dataLabels", "title"],
    ],
    template: function (e, t) {
      e & 1 && A(0, tE, 257, 110, "ng-container", 1),
        e & 2 && y("ngIf", !t.selectedDealer && !t.selectedSM);
    },
    dependencies: [
      Ae,
      It,
      At,
      We,
      Pr,
      Xg,
      Qg,
      sc,
      tt,
      ni,
      ri,
      Wt,
      Si,
      ii,
      _i,
      wd,
      Gc,
      Wc,
    ],
    styles: [
      '.wrapper[_ngcontent-%COMP%]{display:flex}.table-responsive[_ngcontent-%COMP%]{overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}.content-body[_ngcontent-%COMP%]{overflow-x:auto;padding:20px;flex-grow:1}.card-header[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;align-items:center}.card-header[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%]{margin-left:10px}.card[_ngcontent-%COMP%]{border-radius:6px!important}.custom-btn[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;border:none;padding:8px 16px;font-size:14px;border-radius:4px;transition:background-color .3s,color .3s}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#007bff;color:#fff}#dataTable[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border:none!important}#doughnutChart[_ngcontent-%COMP%]{max-width:100%;max-height:100%}.progress-circle[_ngcontent-%COMP%]{--size: 50px;--progress: 70%;--color: #28a745;width:var(--size);height:var(--size);border-radius:50%;background:conic-gradient(var(--color) var(--progress),#e6e6e6 0);display:flex;align-items:center;justify-content:center;position:relative}.custom-btn[_ngcontent-%COMP%]{border:none;background-color:#f0f0f0;padding:8px 20px;border-radius:20px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#dcdcdc}.selected-btn[_ngcontent-%COMP%]{background-color:#1e88e5!important;color:#fff!important}.circle-text[_ngcontent-%COMP%]{font-weight:700;color:#333}.position-absolute[_ngcontent-%COMP%]{position:absolute}.circular-chart[_ngcontent-%COMP%]{transition:transform .3s ease}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.5rem;font-weight:700;color:#4caf50;opacity:1}.circular-chart[_ngcontent-%COMP%]   .circle-fill[_ngcontent-%COMP%]{transition:stroke-dasharray 1s ease-out}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.2rem;font-weight:700}.tooltip-content[_ngcontent-%COMP%]{position:absolute;bottom:110%;left:50%;transform:translate(-50%);background-color:#333;color:#fff;padding:6px 10px;border-radius:5px;white-space:nowrap;font-size:13px;z-index:10;opacity:0;pointer-events:none;transition:opacity .3s ease}.tooltip-content[_ngcontent-%COMP%]:after{content:"";position:absolute;top:100%;left:50%;transform:translate(-50%);border-width:5px;border-style:solid;border-color:#333 transparent transparent transparent}.tooltip-container[_ngcontent-%COMP%]:hover   .tooltip-content[_ngcontent-%COMP%]{opacity:1}.no-scrollbar[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch;scrollbar-width:none}.no-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}@media (min-width: 992px) and (max-width: 1250px){.tooltip-container[_ngcontent-%COMP%]{right:15px!important;width:83px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:80px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   .tooltip-content[_ngcontent-%COMP%]{font-size:.85rem}#num[_ngcontent-%COMP%]{right:-53px}.tooltip-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{font-size:1.1rem;padding:10px!important}}@media screen and (width: 1024px) and (height: 1366px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:0!important}}.tooltip-container[_ngcontent-%COMP%]{top:18%}@media screen and (min-width: 1024px) and (max-width: 1366px){#first[_ngcontent-%COMP%]{top:10px!important}#sec[_ngcontent-%COMP%], #third[_ngcontent-%COMP%]{top:49%!important}}.custom-btn[_ngcontent-%COMP%]{background:transparent;border:none;padding:6px 16px;font-weight:500;cursor:pointer;transition:all .2s ease-in-out}.custom-btn[_ngcontent-%COMP%]:hover{color:#222fb9}.selected-btn[_ngcontent-%COMP%]{background:#222fb9;color:#fff;border-radius:6px}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:6px;margin-top:20px;font-family:Poppins,sans-serif}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;background-color:#fff;border:1px solid #d4d4d8;border-radius:6px;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 3px #0000000d}.back-arrow[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:24px;cursor:pointer;color:#333;transition:transform .2s ease}.back-arrow[_ngcontent-%COMP%]:hover{transform:scale(1.1);color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:600;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{background-color:#f1f1f1;color:#ccc;border-color:#e5e5e5;cursor:not-allowed}.sm-card[_ngcontent-%COMP%]{background:#fff;border-radius:12px;box-shadow:0 2px 8px #00000014;padding:20px 16px;text-align:center;font-family:Poppins,sans-serif;transition:transform .2s ease,box-shadow .2s ease}.sm-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 4px 12px #0000001f}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:none!important;border-bottom:1px solid #ccc!important}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto;font-family:Poppins,sans-serif}.header[_ngcontent-%COMP%]{background-color:#fff;color:#000;padding:1rem;display:flex;justify-content:space-between;align-items:center;margin-top:50px!important}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:1rem}.nav-button[_ngcontent-%COMP%]{background:none;border:none;color:#fff;padding:5px 11px!important;border-radius:4px;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#fff;color:#06c;font-weight:500}.nav-button[_ngcontent-%COMP%]:hover{background-color:#fff;color:#06c}.nav-button[_ngcontent-%COMP%]{color:#000}.nav-button[_ngcontent-%COMP%]:hover{background-color:#00f;color:#fff}.metrics-container[_ngcontent-%COMP%]{background-color:#e6e6e6;padding:1.5rem;border-radius:8px;box-shadow:0 2px 4px #0000000d;margin-bottom:1.5rem;position:relative}.dashboard-section[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;width:100%;max-width:100%}@media (max-width: 768px){.apexcharts-title-text[_ngcontent-%COMP%]{text-anchor:start!important;x:0!important}}.card[_ngcontent-%COMP%]{width:100%;box-shadow:0 1px 5px #0000001a;border-radius:8px;padding:16px;background:#fff}.metrics-grid[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:20px;align-items:flex-start}.filters-container[_ngcontent-%COMP%]{width:290px;min-width:200px;flex-shrink:0;margin-left:30px}.filter-section[_ngcontent-%COMP%]{background-color:#fff}.dealer-block[_ngcontent-%COMP%]{background:transparent!important;margin-bottom:10px}.dashboard-container[_ngcontent-%COMP%]{background:transparent!important}.metric-box[_ngcontent-%COMP%]{background-color:#fff;padding:1rem;border-radius:15px;text-align:center;box-shadow:0 1px 3px #0000001a;height:130px;display:flex;width:150px;flex-direction:column;justify-content:center;align-items:center}.metric-value[_ngcontent-%COMP%]{font-size:2rem;font-weight:700;color:#06c;margin-bottom:.5rem}.metric-label[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.filters-panel[_ngcontent-%COMP%]{background-color:#e5e5e5;padding:.75rem;border-radius:8px}.filters-title[_ngcontent-%COMP%]{text-align:center;font-size:.9rem;font-weight:600}.time-filters[_ngcontent-%COMP%]{display:flex;margin-bottom:.5rem}.select-container[_ngcontent-%COMP%]{position:relative}.sm-select[_ngcontent-%COMP%]{width:100%;padding:.35rem .75rem;border:1px solid #ccc;border-radius:4px;appearance:none;font-size:.85rem}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:.6rem;color:#666}.performance-panels[_ngcontent-%COMP%]{gap:1.5rem}.person-info[_ngcontent-%COMP%]{background-color:#f9f9f9;padding:14px;border-radius:6px;box-shadow:0 2px 5px #0000001a;width:fit-content;margin-bottom:16px}.person-n[_ngcontent-%COMP%]   .panel-title[_ngcontent-%COMP%]{text-align:center;font-size:1.8rem;font-weight:500;margin-bottom:1rem;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{margin-top:-190px;display:flex;align-items:center;justify-content:center;color:#999}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:3.5rem;box-sizing:border-box}@media (max-width: 1024px) and (min-width: 768px){.performance-panels[_ngcontent-%COMP%]{display:block!important;gap:0!important}}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{pointer-events:none;display:none;position:fixed;left:-100%}.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)!important}}.performance-panel[_ngcontent-%COMP%]{flex:1;background-color:#e6e6e6}.avatar[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:50%;background-color:#e0e0e0;display:flex;align-items:center;justify-content:center;font-size:24px;color:#888}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;margin:0;padding:0}.dashboard-container[_ngcontent-%COMP%]{width:100%;margin:0 auto;position:relative}.header[_ngcontent-%COMP%]{background-color:#f5f5f5;padding:15px;top:0;width:100%;max-width:1540px;z-index:100;box-shadow:0 2px 5px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#eee;cursor:pointer;border-radius:4px}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{vertical-align:middle}.content-section[_ngcontent-%COMP%]{margin-top:20px}.nav-button[_ngcontent-%COMP%]:hover{background-color:gray}.main-content[_ngcontent-%COMP%]{background-color:#f9f9f9}[_nghost-%COMP%]     .header{position:static!important}[_nghost-%COMP%]     .header{width:100%!important;max-width:100%!important;transition:width .3s ease,margin-left .3s ease!important;z-index:auto!important}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:24px;font-weight:700;color:#fff}.header[_ngcontent-%COMP%]{transition:width .3s ease!important;transition:width .3s ease,margin-left .3s ease!important}.metric-label[_ngcontent-%COMP%]{font-size:14px;color:#666;margin-top:5px}.filters-container[_ngcontent-%COMP%]{grid-column:1 / -1;margin-top:15px}.filters-panel[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a}.filters-title[_ngcontent-%COMP%]{font-weight:700}.time-filters[_ngcontent-%COMP%]{display:flex;gap:0px;margin-bottom:10px}.filter-button[_ngcontent-%COMP%]{padding:5px 10px;border:none;background-color:#fff;border-radius:4px;cursor:pointer}.filter-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;border-color:#222fb9}.select-container[_ngcontent-%COMP%]{position:relative;width:200px}.sm-select[_ngcontent-%COMP%]{width:100%;padding:8px;border-radius:4px;border:1px solid #ddd;appearance:none}.performance-panels[_ngcontent-%COMP%]{margin-top:20px}.performance-panel[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;box-shadow:0 2px 5px #0000001a;padding:15px}.panel-title[_ngcontent-%COMP%]{font-size:30px!important;margin-top:0;margin-bottom:15px;padding-bottom:10px;font-weight:500;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{min-height:300px}table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.content-section[_ngcontent-%COMP%]{display:none}.content-section.active[_ngcontent-%COMP%]{display:block}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#f0f0f0;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-of-type(odd){--bs-table-accent-bg: transparent !important}table.table-striped[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd){background-color:red!important}.team-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;background-color:#fff;border-radius:10px;padding:15px 25px;gap:15px}.team-name[_ngcontent-%COMP%]{font-size:17px;color:#000;white-space:nowrap;font-weight:500;font-family:Poppins,sans-serif}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:8px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:4px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.metrics-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;justify-content:flex-end;flex:1}.metric-card[_ngcontent-%COMP%]{display:flex;align-items:center;padding:8px 12px;border-radius:22px;font-size:.85em;font-weight:600;color:#333;text-align:center;box-shadow:0 0 12px #0000001a;flex-shrink:0;height:50px}.metric-card[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:6px;font-size:1em}.metric-value[_ngcontent-%COMP%]{font-weight:700;margin-left:10px}@media (max-width: 768px){.team-container[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.metrics-wrapper[_ngcontent-%COMP%]{justify-content:flex-start}}.back-button[_ngcontent-%COMP%]{margin-right:15px;cursor:pointer;color:#fff;font-size:20px}.nav-button[_ngcontent-%COMP%]{background-color:#fff;color:#000;border:none;border-radius:4px;padding:5px 15px;margin-right:10px;font-weight:700;cursor:pointer}.nav-tab[_ngcontent-%COMP%]{color:#fff;margin-left:20px;font-size:16px}.container[_ngcontent-%COMP%]{margin:0;padding:20px 0}.card[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:20px;margin-bottom:20px;box-shadow:0 1px 3px #0000001a}.card-title[_ngcontent-%COMP%]{font-size:18px;font-weight:700;margin-bottom:15px}.profiles[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;gap:25px;margin-bottom:20px;flex-wrap:wrap}.profile[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:70px}.avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#e0e0e0;margin-bottom:8px}.name[_ngcontent-%COMP%]{font-size:12px;text-align:center;line-height:1.2}.actions[_ngcontent-%COMP%]{margin-top:20px}.action-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:10px}.person-info[_ngcontent-%COMP%]{display:flex;flex-direction:column}.person-name[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px}.person-role[_ngcontent-%COMP%]{color:#666;font-size:14px}.action-button[_ngcontent-%COMP%]{background-color:#1e88e5;color:#fff;border:none;border-radius:15px;padding:5px 15px;cursor:pointer}.test-drive[_ngcontent-%COMP%], .follow-up[_ngcontent-%COMP%]{background-color:#1e88e5}.show-more[_ngcontent-%COMP%]{text-align:center;margin-top:10px;color:#333;font-size:14px}.metrics-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;margin-left:-10px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:15px;min-width:120px;flex:1;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:20px;font-weight:700;color:#fff;margin-bottom:5px}.metric-label[_ngcontent-%COMP%]{color:#666;font-size:14px}.filters-row[_ngcontent-%COMP%]{display:flex;background-color:#fff;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a;align-items:center}.filters-title[_ngcontent-%COMP%]{font-weight:700;padding-top:10px}.time-filters[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-button[_ngcontent-%COMP%]{padding:6px 12px;cursor:pointer;font-size:14px}.select-container[_ngcontent-%COMP%]{position:relative;margin-left:auto}.sm-select[_ngcontent-%COMP%]{padding:6px 30px 6px 10px;border:1px solid #ddd;border-radius:4px;appearance:none;background-color:#fff;font-size:14px;cursor:pointer}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:12px}select[_ngcontent-%COMP%]{position:relative;z-index:1000}.dropdown-row[_ngcontent-%COMP%]{margin-bottom:150px}.modal[_ngcontent-%COMP%]{display:flex;position:fixed;z-index:1000;left:0;top:0;width:100%;height:100%;background-color:#00000080;justify-content:center;align-items:center}.modal-content[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:6px;max-width:400px;width:90%;box-shadow:0 5px 15px #0000004d;position:relative}.close[_ngcontent-%COMP%]{position:absolute;right:12px;top:8px;font-size:24px;font-weight:700;cursor:pointer}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0}[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}[_ngcontent-%COMP%]::-webkit-scrollbar-button:single-button{display:none;width:0;height:0}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0;width:0}.selected-user[_ngcontent-%COMP%]{background-color:#cce5ff;border:2px solid #3399ff;border-radius:8px;padding:5px;width:90px}.container-fluid[_ngcontent-%COMP%]{width:100%;padding:0 20px;margin:0 auto;box-sizing:border-box}@media only screen and (max-width: 600px){.metrics-row[_ngcontent-%COMP%]{width:100%!important;flex-direction:column!important;gap:10px!important}.metric-box[_ngcontent-%COMP%]{width:100%!important;box-sizing:border-box}.metric-box[_ngcontent-%COMP%]:last-child{width:100%!important}}@media (max-width: 600px){.performance-panels[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;margin-left:0!important;width:100%!important}.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%]{flex-direction:column!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{min-width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   h2.panel-title[_ngcontent-%COMP%]{text-align:center}}.table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{margin-top:20px!important;padding:10px!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px!important;font-size:14px}}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;padding:0 10px;margin-left:0!important;height:200px!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%!important;margin-top:20px!important;padding:0!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px 4px!important;font-size:14px}.performance-panel[_ngcontent-%COMP%]   .table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media screen and (max-width: 767px){.header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{box-sizing:border-box;max-width:100vw;overflow-x:hidden;padding-left:10px;padding-right:10px}.nav-buttons[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:10px;align-items:stretch;width:100%}.nav-button[_ngcontent-%COMP%]{width:100%;font-size:1rem;box-sizing:border-box}}  table.highlight-alt-rows tbody tr:nth-child(2n){background-color:#f3f9ff!important}  table.highlight-alt-rows tbody tr:nth-child(2n) td{background-color:#f3f9ff!important}  .highlight-alt-rows tbody tr:nth-child(1){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(1) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5) td{background-color:transparent!important}@media (max-width: 768px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important;margin-bottom:20px!important}.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;word-wrap:break-word;white-space:normal;margin-top:5px}.container[_ngcontent-%COMP%]{max-width:100%;padding-left:15px;padding-right:15px;margin-left:auto;margin-right:auto}}@media (max-width: 400px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, .profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{grid-template-columns:repeat(2,1fr)!important}}.user-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(15,1fr);gap:30px;margin-bottom:20px}@media (max-width: 768px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;margin-top:5px;word-wrap:break-word;white-space:normal}}@media (max-width: 400px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)!important}}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .dashboard-content[_ngcontent-%COMP%]{transition:margin-left .3s ease}.sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-container[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .header2[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-content[_ngcontent-%COMP%]{margin-left:7rem}.header2[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;background:#fff;padding:1rem;box-shadow:0 2px 4px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f5f5f5;padding:4px;border-radius:6px}.nav-button[_ngcontent-%COMP%]{background:#fff;border:none;font-weight:700;padding:8px 16px;cursor:pointer;border-radius:4px}@media (max-width: 768px){.nav-buttons[_ngcontent-%COMP%]{align-items:stretch}.nav-button[_ngcontent-%COMP%]{width:100%}}.filter-btn[_ngcontent-%COMP%]{padding:5px 12px;font-size:14px;border-radius:4px;border:1px solid #ccc;background-color:#fff;transition:all .3s ease;cursor:pointer;color:#333}.filter-btn[_ngcontent-%COMP%]:hover{background-color:#f2f2f2}.active-filter-today[_ngcontent-%COMP%], .active-filter-upcoming[_ngcontent-%COMP%]{background:linear-gradient(#222fb9);color:#fff}.avatar-color-1[_ngcontent-%COMP%]{background-color:#ffd3b6}.avatar-color-2[_ngcontent-%COMP%]{background-color:#caffbf}.avatar-color-3[_ngcontent-%COMP%]{background-color:#9bf6ff}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:9999!important}.header2-right[_ngcontent-%COMP%]   .header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{padding:15px 0;min-width:12.5rem;z-index:9999;position:absolute}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important}.nav-buttons[_ngcontent-%COMP%]{z-index:1000}.header2-profile[_ngcontent-%COMP%]{position:relative;z-index:9999}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:99999!important;top:100%;right:0;display:block}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important;z-index:auto!important}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.user-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin:8px;width:80px}.user-avatar[_ngcontent-%COMP%]{width:50px;height:50px;background-color:#f0f0f0;color:#126893;border-radius:50%;display:flex;align-items:center;justify-content:center;font-weight:700;font-size:18px;box-shadow:0 2px 6px #0000001a}.user-name[_ngcontent-%COMP%]{font-size:12px;text-align:center;margin-top:4px;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{background-color:#fff;border-radius:12px;padding:16px;box-shadow:0 4px 10px #00000014;text-align:center;margin-bottom:12px}.user-avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#c4fefb;color:#26eee4;font-weight:700;display:flex;align-items:center;justify-content:center;margin:0 auto 8px;font-size:25px}.user-name[_ngcontent-%COMP%]{font-size:14px;font-weight:500;color:#333}.header-box[_ngcontent-%COMP%]{background-color:#f4f6fb;padding:6px 10px;border-radius:8px;display:inline-flex;align-items:center;gap:6px;font-weight:600;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:max-content;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse;outline:none!important}.header-box1[_ngcontent-%COMP%], .header-box2[_ngcontent-%COMP%], .header-box3[_ngcontent-%COMP%], .header-box4[_ngcontent-%COMP%], .header-box5[_ngcontent-%COMP%], .header-box6[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:6px;padding:6px 8px;border-radius:12px;font-weight:400;color:#000;text-align:center;font-family:Poppins,sans-serif;white-space:normal}.pagination-container[_ngcontent-%COMP%]{margin-top:20px;display:flex;justify-content:center;align-items:center;gap:6px;flex-wrap:wrap}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ccc;background-color:#fff;color:#333;cursor:pointer;border-radius:6px;font-size:14px;transition:all .2s ease-in-out}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#222fb9;color:#fff;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.pagination-container[_ngcontent-%COMP%]   button.active-page[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:700;border-color:#222fb9}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:10px;border:none}.header-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:wrap;width:100%;margin-bottom:15px}.panel-title[_ngcontent-%COMP%]{font-size:25px;color:#313131;font-family:Poppins,sans-serif;font-weight:600;border-radius:20px;margin:0}.panel-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#000;font-weight:400;font-size:16px;margin:0}.dealer-select[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;border-radius:6px;border:1px solid #ccc;height:fit-content;margin-top:5px}.dropdown-wrapper[_ngcontent-%COMP%]{width:250px;border:1px solid #ccc;border-radius:6px;position:relative;background:#fff;cursor:pointer}.selected-value[_ngcontent-%COMP%]{padding:10px;display:flex;justify-content:space-between;align-items:center}.arrow[_ngcontent-%COMP%]{font-size:12px}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;width:100%;top:100%;left:4px;right:0;border:1px solid #ccc;z-index:1000;border-radius:10px;box-shadow:0 2px 6px #00000026;max-height:240px;overflow-y:auto;padding:0;margin:0;max-width:300px}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:none;padding:10px 12px;transition:background .2s;cursor:pointer}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#f0f0f0}.user-dropdown[_ngcontent-%COMP%]{width:100%;max-width:300px;padding:10px 16px;border:none;border-radius:20px;background-color:#ebedf0;color:#333;font-size:16px;appearance:none;outline:none;cursor:pointer;box-shadow:0 2px 6px #0000001a;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{padding:8px;font-size:14px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-height:200px}  .custom-ng-select .ng-dropdown-panel{max-height:200px!important;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]{max-height:200px;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{white-space:nowrap}.radio-circle[_ngcontent-%COMP%]{width:16px;height:16px;border-radius:50%;border:2px solid currentColor;display:flex;align-items:center;justify-content:center}.radio-circle-inner[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:currentColor}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(1)   th[_ngcontent-%COMP%]{background-color:#fff!important}.table-wrapper[_ngcontent-%COMP%]{padding:20px}table[_ngcontent-%COMP%]{width:100%;border-collapse:separate;border-spacing:0 12px}th[_ngcontent-%COMP%]{color:#000}td[_ngcontent-%COMP%]{background-color:#f9f9fb;text-align:center;font-weight:500;border:none;padding:30px;transition:all .3s ease}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child{border-top-left-radius:12px;border-bottom-left-radius:12px}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child{border-top-right-radius:12px;border-bottom-right-radius:12px}.badge[_ngcontent-%COMP%]{padding:6px 14px;border-radius:8px;font-size:14px;font-weight:500;display:inline-block}.badge-upcoming[_ngcontent-%COMP%], .badge-enquiry[_ngcontent-%COMP%]{background-color:#d9f2e7;color:#177a47}.badge-coldcalls[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.badge-completed[_ngcontent-%COMP%]{background-color:#fef3c7;color:#b45309}.badge-overdue[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.nav-button[_ngcontent-%COMP%]{font-family:Poppins,sans-serif}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#1f2937}.filter-wrapper[_ngcontent-%COMP%]{background-color:#fff;border-radius:16px;box-shadow:0 4px 12px #0000000d;padding:15px 20px;width:fit-content;margin:20px}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f2f2f2;border-radius:50px;padding:5px 10px}.filter-btn[_ngcontent-%COMP%]{border:none;background:transparent;padding:6px 14px;border-radius:50px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.filter-btn.active[_ngcontent-%COMP%]{background-color:#fff;color:#2b45c7;border:2px solid #2b45c7}.filter-wrapper[_ngcontent-%COMP%]{margin-top:20px;background:#fff;padding:10px;border-radius:8px;width:fit-content}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-btn[_ngcontent-%COMP%]{padding:6px 10px;border:none;background:#f0f0f0;border-radius:4px;cursor:pointer}.filter-btn.active[_ngcontent-%COMP%]{background-color:#126893;color:#fff}.no-bottom-border[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:none!important}.back-button[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:35px;color:#333;cursor:pointer;padding:4px 10px;transition:transform .2s ease,color .2s ease}.back-button[_ngcontent-%COMP%]:hover{transform:translate(-3px);color:#126893}.nav-button[_ngcontent-%COMP%]{background-color:transparent;color:#000;border:none;padding:10px 16px;font-weight:500;border-radius:6px;cursor:pointer;transition:background-color .2s ease-in-out}.nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb926;color:#000}.nav-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:100%;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}.active-filter[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}.pill-button[_ngcontent-%COMP%]{padding:6px 16px;border:none;border-radius:999px;font-family:Poppins,sans-serif;background-color:transparent;color:#000;font-weight:500;cursor:pointer;transition:background-color .3s ease}.pill-active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}@media (min-width: 768px) and (max-width: 1080px){.dashboard-container[_ngcontent-%COMP%]{padding:20px}}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:6px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f1f1;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#999}.user-card[_ngcontent-%COMP%]{flex:0 0 auto;min-width:80px;cursor:pointer}.user-row[_ngcontent-%COMP%]{position:relative}.user-row[_ngcontent-%COMP%]:after{content:"";position:absolute;right:0;top:0;bottom:0;width:20px;background:linear-gradient(to right,transparent,rgba(255,255,255,.8));pointer-events:none;z-index:1}.dashboard-container[_ngcontent-%COMP%]{padding:10px}@media (max-width: 991.98px){.performance-panels[_ngcontent-%COMP%]{flex-direction:column}}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{padding:10px!important;margin:0 auto}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:#fff;font-size:1.2rem;border:none!important;font-weight:700;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:#fff;box-shadow:0 4px 6px #0000001a}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;font-family:Poppins,sans-serif;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4;font-family:Poppins,sans-serif}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#cfe8fc,#a0cfff);font-family:Poppins,sans-serif;font-size:1rem;font-weight:500;padding-left:60px;color:#000;border-radius:5px;transition:background .3s ease}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:linear-gradient(135deg,#b6dcf8,#87c5f5);cursor:pointer}.accordion-header[_ngcontent-%COMP%]:hover{transform:translateY(-2px)}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;transition:max-height .4s ease;background:#fffffff2;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background:#f8f9fa}*[_ngcontent-%COMP%]{margin:0;padding:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;background:linear-gradient(135deg,#667eea,#764ba2);min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto}.dashboard-header[_ngcontent-%COMP%]{text-align:center;color:#fff;margin-bottom:30px}.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:300;text-shadow:0 2px 4px rgba(0,0,0,.3)}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;padding:15px 20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.pagination-info[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.pagination-controls[_ngcontent-%COMP%]{display:flex;gap:10px}.pagination-btn[_ngcontent-%COMP%]{padding:8px 15px;background:#fff3;border:1px solid rgba(255,255,255,.3);border-radius:5px;color:#fff;cursor:pointer;transition:all .3s ease}.pagination-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:#ffffff4d}.pagination-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.pagination-btn.active[_ngcontent-%COMP%]{background:#fff6;font-weight:700}.accordion[_ngcontent-%COMP%]{margin-bottom:15px;border-radius:12px;overflow:hidden;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);border:1px solid rgba(255,255,255,.2)}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:700;color:#036;border:1px solid #b3d4ff;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{cursor:pointer}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif;box-shadow:0 8px 32px #0000001a}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4}.accordion-header[_ngcontent-%COMP%]{padding:20px 30px;cursor:pointer;display:flex;justify-content:space-between;align-items:center;color:#fff;transition:all .3s ease;position:relative}.accordion-header.active[_ngcontent-%COMP%]{box-shadow:inset 0 2px 4px #0003}.accordion-toggle[_ngcontent-%COMP%]{background:#fff3;border:none;width:30px;height:30px;border-radius:50%;color:#fff;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .3s ease}.accordion-toggle[_ngcontent-%COMP%]:hover{background:#ffffff4d}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;box-shadow:0 8px 32px #0000001a;transition:max-height .4s ease;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px;box-shadow:0 8px 32px #0000001a}.content-wrapper[_ngcontent-%COMP%]{padding:30px}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px 8px;background:#fff3;border-radius:12px;font-size:.75rem;font-weight:500;margin-right:10px}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:15px;margin-bottom:25px;padding:20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.filter-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:5px}.filter-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.85rem;color:#666;font-weight:500}.filter-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .filter-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:8px 12px;border:1px solid #ddd;border-radius:6px;font-size:.9rem;min-width:120px}.table-container[_ngcontent-%COMP%]{overflow-x:auto;border-radius:10px;box-shadow:0 4px 15px #0000001a;margin-bottom:20px}.call-logs-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background:#fff}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .call-logs-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:left;border-bottom:1px solid #eee}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background:linear-gradient(135deg,#f8f9fa,#e9ecef);font-weight:600;color:#495057;font-size:.9rem;position:sticky;top:0}.call-logs-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.status-badge[_ngcontent-%COMP%]{padding:4px 10px;border-radius:20px;font-size:.8rem;font-weight:500}.status-connected[_ngcontent-%COMP%]{background:#d4edda;color:#155724}.status-missed[_ngcontent-%COMP%]{background:#f8d7da;color:#721c24}.status-rejected[_ngcontent-%COMP%]{background:#f1f3f4;color:#5f6368}.status-enquiry[_ngcontent-%COMP%]{background:#e7f3ff;color:#06c}.status-cold[_ngcontent-%COMP%]{background:#fff3cd;color:#856404}.duration[_ngcontent-%COMP%]{font-family:monospace;font-weight:500}.table-pagination[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:10px;padding:15px;background:#fff;border-top:1px solid #eee}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ddd;background:#fff;border-radius:4px;cursor:pointer;font-size:.85rem}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.table-pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background:#007bff;color:#fff;border-color:#007bff}@media (max-width: 768px){.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2rem}.accordion-header[_ngcontent-%COMP%]{padding:15px 20px;font-size:.95rem}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%], .accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{padding-left:30px}.content-wrapper[_ngcontent-%COMP%]{padding:20px}.kpi-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(auto-fit,minmax(140px,1fr));gap:12px}.filters[_ngcontent-%COMP%]{flex-direction:column}.pagination-container[_ngcontent-%COMP%]{flex-direction:column;gap:10px;text-align:center}}.loading[_ngcontent-%COMP%]{display:inline-block;width:20px;height:20px;border:2px solid rgba(255,255,255,.3);border-radius:50%;border-top-color:#fff;animation:_ngcontent-%COMP%_spin 1s ease-in-out infinite}@keyframes _ngcontent-%COMP%_spin{to{transform:rotate(360deg)}}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(7,1fr);gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease;min-width:0}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px;background-color:#fff;border:2px solid #222fb9;border-radius:15px;font-size:12px;font-weight:600;color:#222fb9}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-3px)}.kpi-value[_ngcontent-%COMP%]{font-size:1.8rem;font-weight:700;margin-bottom:5px}.kpi-label[_ngcontent-%COMP%]{font-size:.85rem;opacity:.9}@media (max-width: 1366px){.kpi-card[_ngcontent-%COMP%]{padding:12px 8px}.kpi-value[_ngcontent-%COMP%]{font-size:1.5rem}.kpi-label[_ngcontent-%COMP%]{font-size:.75rem}}@media (max-width: 1024px){.kpi-grid[_ngcontent-%COMP%]{gap:8px}.kpi-card[_ngcontent-%COMP%]{padding:10px 6px}.kpi-value[_ngcontent-%COMP%]{font-size:1.3rem}.kpi-label[_ngcontent-%COMP%]{font-size:.7rem}}.shadow-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;margin-top:10px;background-color:#fff;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .shadow-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f4f4f4;font-weight:700}.dealer-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden;background:linear-gradient(135deg,#f8f9fa,#e9ecef);margin-top:15px;font-family:Arial,sans-serif}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .dealer-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:center}.dealer-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{background-color:#f0f0f0}.dealer-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#333}.show-more-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:15px 0}.show-more-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;border:none;padding:8px 20px;border-radius:8px;cursor:pointer;font-size:14px;font-weight:500;transition:background-color .3s ease,transform .2s ease}.show-more-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}.pagination-center[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:8px;margin-top:15px}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #007bff;background-color:#fff;color:#007bff;cursor:pointer;border-radius:4px;transition:all .2s}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#007bff;color:#fff}.pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;font-weight:700}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.expand-row[_ngcontent-%COMP%]{background-color:#f8f9fa}.expanded-content[_ngcontent-%COMP%]{padding:20px;border-left:4px solid #007bff;margin:10px;background-color:#fff;border-radius:6px;box-shadow:0 2px 4px #0000000d}.expanded-content[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin:0}.expanded-content[_ngcontent-%COMP%]   .col-md-4[_ngcontent-%COMP%]{margin-bottom:15px}.expanded-content[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:#495057;font-size:13px}.orders-table-container[_ngcontent-%COMP%]{border-radius:8px;overflow:hidden;margin:20px 0;max-width:100%}.table[_ngcontent-%COMP%]{margin-bottom:0;font-size:14px}.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;font-weight:600;font-size:12px;text-transform:uppercase;letter-spacing:.5px;border-bottom:1px solid #dee2e6;padding:16px 12px;white-space:nowrap}.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:16px 12px;vertical-align:middle}.order-id[_ngcontent-%COMP%]{font-weight:600;color:#495057}.created-time[_ngcontent-%COMP%]{color:#6c757d}.customer-name[_ngcontent-%COMP%]{font-weight:500;color:#212529}.total-amount[_ngcontent-%COMP%], .profit-amount[_ngcontent-%COMP%]{font-weight:600;color:#212529}.status-badge[_ngcontent-%COMP%]{padding:6px 12px;border-radius:20px;font-size:12px;font-weight:500;text-transform:capitalize}.status-pending[_ngcontent-%COMP%]{background-color:#fff3cd;color:#856404}.status-confirmed[_ngcontent-%COMP%]{background-color:#cce5ff;color:#06c}.status-shipped[_ngcontent-%COMP%]{background-color:#d4edda;color:#155724}.status-rejected[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24}.btn-plus[_ngcontent-%COMP%]{background:none;border:none;color:#6c757d;font-size:16px;cursor:pointer;padding:8px;border-radius:50%;transition:all .2s ease;display:flex;align-items:center;justify-content:center;width:32px;height:32px}.btn-plus[_ngcontent-%COMP%]:hover{background-color:#e9ecef;color:#495057}.btn-plus[_ngcontent-%COMP%]:focus{outline:2px solid #007bff;outline-offset:2px}.action-cell[_ngcontent-%COMP%]{text-align:center;width:60px}.table-hover[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{transition:background-color .2s ease}.clickable-row[_ngcontent-%COMP%]:hover{transform:translateY(-1px);box-shadow:0 2px 4px #0000001a;transition:all .2s ease}.back-arrow[_ngcontent-%COMP%]{display:inline-block;transition:transform .2s ease}.back-arrow[_ngcontent-%COMP%]:hover{transform:translate(-3px)}.time-filter[_ngcontent-%COMP%]{gap:10px}.time-btn[_ngcontent-%COMP%]{border:1px solid #222fb9;background:#fff;color:#222fb9;font-weight:500;font-size:14px;padding:8px 18px;border-radius:20px;cursor:pointer;transition:all .2s ease-in-out}.time-btn[_ngcontent-%COMP%]:hover{background:#f1f5ff}.time-filter-container[_ngcontent-%COMP%]{padding:8px 12px;display:inline-block;border-radius:6px}.time-filter-container[_ngcontent-%COMP%]   .time-btn[_ngcontent-%COMP%]{border:none!important;border-radius:0!important;background:none!important;padding:0 6px;font-size:20px;cursor:pointer}.time-filter-container[_ngcontent-%COMP%]   .time-btn.active[_ngcontent-%COMP%]{font-weight:900;color:#222fb9}.time-filter-container[_ngcontent-%COMP%]   .separator[_ngcontent-%COMP%]{margin:0 6px;color:#555;-webkit-user-select:none;user-select:none}.custom-table[_ngcontent-%COMP%]{border-radius:15px;border-collapse:separate;overflow:hidden;background-color:#fff;box-shadow:0 4px 12px #0000001a}.custom-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:8px 12px;color:#555}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{cursor:pointer}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:transparent!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd){background-color:transparent!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:transparent!important}.custom-table[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f5f9!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f5ff}.custom-table[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#fff!important;border-bottom:1px solid #dee2e6}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd){background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f8f9fa!important}.time-filter-container[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;padding:8px 12px;border-radius:8px;margin-top:10px}.time-dropdown[_ngcontent-%COMP%]{min-width:250px;padding:6px 10px;font-size:14px;border-radius:6px;margin-left:8px;border:1px solid #ccc;background:#f9f9f9;cursor:pointer}.time-dropdown[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff;box-shadow:0 0 0 2px #007bff33}.custom-inputs[_ngcontent-%COMP%]{display:flex;gap:8px;align-items:center}.custom-date[_ngcontent-%COMP%]{padding:5px 10px;border-radius:6px;border:1px solid #ccc;font-size:14px}.custom-date[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff;box-shadow:0 0 0 2px #007bff33}.apply-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:5px 12px;border:none;border-radius:6px;cursor:pointer;font-size:14px}.apply-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3}.reset-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:5px 12px;border:none;border-radius:6px;cursor:pointer;font-size:14px}.reset-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3}.custom-inputs.applied[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-color:#222fb9;box-shadow:0 0 4px #222fb980}.table-primary[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-size:18px!important}.stats-container[_ngcontent-%COMP%]{margin-top:20px;gap:20px}.stats-card[_ngcontent-%COMP%]{background:#fff;padding:20px;border-radius:12px;box-shadow:0 2px 6px #00000014;text-align:left;width:220px;min-height:120px;flex:0 0 auto}.stats-card[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{font-size:14px;color:#666;margin-bottom:8px}.stats-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:28px;font-weight:700;color:#14213d;margin-bottom:6px}.stats-card[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{font-size:13px;color:#7d7d7d}.dashboard-header[_ngcontent-%COMP%]{position:sticky;top:0;z-index:20;background:#ffffffe6;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);border-bottom:1px solid #e2e8f0}.header-container[_ngcontent-%COMP%]{max-width:80rem;margin:0 auto;padding:0 1rem}@media (min-width: 640px){.header-container[_ngcontent-%COMP%]{padding:0 1.5rem}}@media (min-width: 1024px){.header-container[_ngcontent-%COMP%]{padding:0 2rem}}.header-content[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:1rem;padding:1rem 0}.main-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700;letter-spacing:-.025em;color:#0f172a;margin:0}.subtitle[_ngcontent-%COMP%]{color:#64748b;font-size:.875rem;margin:0}.header-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.main-content[_ngcontent-%COMP%]{max-width:150rem!important;margin:0 auto;display:flex;flex-direction:column;gap:1.5rem}.filter-section[_ngcontent-%COMP%]{background:#fff;border-radius:1rem;box-shadow:0 1px 3px #0000001a,0 1px 2px #0000000f;border:1px solid #e2e8f0;padding:1rem}@media (min-width: 640px){.filter-section[_ngcontent-%COMP%]{padding:1.5rem}}.filter-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem}@media (min-width: 768px){.filter-container[_ngcontent-%COMP%]{flex-direction:row;align-items:end;justify-content:space-between}}.filter-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;gap:1rem;width:100%}@media (min-width: 640px){.filter-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)}}.form-group[_ngcontent-%COMP%]{display:flex;flex-direction:column}.form-label[_ngcontent-%COMP%]{display:block;font-size:.875rem;font-weight:500;color:#475569;margin-bottom:.25rem}.form-select[_ngcontent-%COMP%], .form-input[_ngcontent-%COMP%]{width:100%;border-radius:.75rem;padding:.5rem .75rem;font-size:.875rem;background:#fff}.form-select[_ngcontent-%COMP%]:focus, .form-input[_ngcontent-%COMP%]:focus{outline:none}.filter-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:.5rem;padding:.5rem 1rem;border-radius:.75rem;font-size:.875rem;font-weight:600;border:1px solid transparent;cursor:pointer;transition:all .15s ease}.btn-primary[_ngcontent-%COMP%]{background:#2563eb;color:#fff}.btn-primary[_ngcontent-%COMP%]:hover{background:#1d4ed8}.btn-secondary[_ngcontent-%COMP%]{border-color:#e2e8f0;background:#fff;color:#374151}.btn-secondary[_ngcontent-%COMP%]:hover{background:#f8fafc}.btn-small[_ngcontent-%COMP%]{padding:.375rem .75rem;font-size:.75rem}.kpi-section[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(2,1fr);gap:1rem}@media (min-width: 768px){.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)}}.kpi-card[_ngcontent-%COMP%]{border-radius:1rem;border:1px solid #e2e8f0;background:#fff;padding:1rem}.kpi-label[_ngcontent-%COMP%]{color:#64748b;font-size:.75rem}.kpi-value-container[_ngcontent-%COMP%]{margin-top:.25rem;display:flex;align-items:baseline;gap:.5rem}.kpi-value[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700}.kpi-secondary[_ngcontent-%COMP%]{font-size:.75rem;color:#64748b}.kpi-highlight[_ngcontent-%COMP%]{font-weight:600;color:#374151}.table-section[_ngcontent-%COMP%]{background:#fff;border-radius:1rem;box-shadow:0 1px 3px #0000001a,0 1px 2px #0000000f;border:1px solid #e2e8f0}.table-header[_ngcontent-%COMP%]{padding:1rem 1.5rem;border-bottom:1px solid #e2e8f0;display:flex;align-items:center;justify-content:space-between}.table-title[_ngcontent-%COMP%]{font-size:1.125rem;font-weight:600;margin:0}.table-subtitle[_ngcontent-%COMP%]{color:#64748b;font-size:.875rem;margin:0}.table-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.table-container[_ngcontent-%COMP%]{padding:.75rem;overflow-x:auto;margin-bottom:0}.data-table[_ngcontent-%COMP%]{min-width:960px;width:100%;font-size:.875rem}.calls-table[_ngcontent-%COMP%]{min-width:800px}.table-thead[_ngcontent-%COMP%]{font-size:15px;color:#1f2937;font-weight:600;background:#f8fafc}.th-left[_ngcontent-%COMP%]{text-align:left;padding:.75rem;border-top-left-radius:.75rem;border-bottom-left-radius:.75rem}.th-right[_ngcontent-%COMP%]{text-align:right;padding:.75rem}.th-center[_ngcontent-%COMP%]{text-align:center;padding:.75rem}.th-rounded-right[_ngcontent-%COMP%]{border-top-right-radius:.75rem;border-bottom-right-radius:.75rem}.th-rounded-left[_ngcontent-%COMP%]{border-top-left-radius:.75rem;border-bottom-left-radius:.75rem}.table-row[_ngcontent-%COMP%]:nth-child(2n){background:#f9fafb}.table-row[_ngcontent-%COMP%]:hover{background:#eef7ff}.td-font-medium[_ngcontent-%COMP%]{font-weight:500;padding:.75rem}.td-right[_ngcontent-%COMP%]{text-align:right;padding:.75rem}.td-center[_ngcontent-%COMP%]{text-align:center;padding:.75rem}.sticky-col[_ngcontent-%COMP%], .sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff}.sticky-col-header[_ngcontent-%COMP%]{z-index:3;background:#f8fafc}.sticky-col[_ngcontent-%COMP%]{z-index:2}.expand-btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:.5rem;color:#1d4ed8;font-weight:600;background:none;border:none;cursor:pointer}.expand-btn[_ngcontent-%COMP%]:hover{color:#1e40af}.sub-row[_ngcontent-%COMP%]{background:#fbfdff}.sub-row-content[_ngcontent-%COMP%]{padding:0}.sub-row-inner[_ngcontent-%COMP%]{padding:1rem 1.5rem;border-top:1px solid #e2e8f0}.sub-row-title[_ngcontent-%COMP%]{font-size:.75rem;font-weight:600;color:#64748b;margin-bottom:.5rem}.sub-table-container[_ngcontent-%COMP%]{overflow-x:auto}.sub-table[_ngcontent-%COMP%]{min-width:940px;width:100%;font-size:.75rem}.calls-sub-table[_ngcontent-%COMP%]{min-width:720px}.sub-table-thead[_ngcontent-%COMP%]{background:#f8fafc;color:#475569}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;padding:.15rem .5rem;border-radius:999px;font-size:.75rem;line-height:1rem;border:1px solid rgba(0,0,0,.05);background:#f1f5f9;color:#475569}.chip-success[_ngcontent-%COMP%]{background:#ecfdf5;color:#047857;border-radius:10px}.chip-inactive[_ngcontent-%COMP%]{background:#f1f5f9;color:#64748b;border-radius:999px}.icon-refresh[_ngcontent-%COMP%]:before{content:"\\21bb"}.icon-filter[_ngcontent-%COMP%]:before{content:"\\2699"}.icon-reset[_ngcontent-%COMP%]:before{content:"\\21ba"}.icon-download[_ngcontent-%COMP%]:before{content:"\\2193"}.icon-chevron-right[_ngcontent-%COMP%]:before{content:"\\2192"}.icon-chevron-down[_ngcontent-%COMP%]:before{content:"\\2193"}.hidden[_ngcontent-%COMP%]{display:none!important}[_nghost-%COMP%]{background:#f8fafc;color:#1e293b;font-family:system-ui,-apple-system,sans-serif}.arrow[_ngcontent-%COMP%]{display:inline-block;transition:transform .2s ease;margin-right:8px}.expand-btn.expanded[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{transform:rotate(90deg)}.expand-btn[_ngcontent-%COMP%]{background:none;border:none;cursor:pointer;display:flex;align-items:center;gap:8px;font-size:14px;font-weight:500;color:#1e293b;padding:0;transition:all .2s}.expand-btn[_ngcontent-%COMP%]:hover{color:#3b82f6}.chip-success[_ngcontent-%COMP%]{@apply text-[#047857];background-color:#d1fae5;padding:2px 6px;border-radius:10px}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{color:#475569;text-align:left;font-weight:600}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .sub-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:not(.td-center   .chip)[_ngcontent-%COMP%]{color:#475569}.sub-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n)   td[_ngcontent-%COMP%]{background-color:#f0f8ff!important;padding:10px!important}.chip-inactive[_ngcontent-%COMP%]{@apply text-gray-500;background-color:#f3f4f6;padding:2px 6px;border-radius:10px}@media (min-width: 1200px) and (max-width: 1366px){.dashboard-container[_ngcontent-%COMP%]{margin-left:-20px}}@media (min-width: 1200px) and (max-width: 1300px){.main-content[_ngcontent-%COMP%]{margin-left:-15px}}[_ngcontent-%COMP%]::-webkit-scrollbar{height:12px}.table-scroll[_ngcontent-%COMP%]{overflow-y:auto;position:relative;scrollbar-width:thin}.fltt[_ngcontent-%COMP%]{display:inline-flex}@media (max-width: 844px){.header2[_ngcontent-%COMP%]{display:block!important}.fltt[_ngcontent-%COMP%]{display:ruby!important}.time-dropdown[_ngcontent-%COMP%]{width:100%!important;margin-top:8px}.dropdown-menu[_ngcontent-%COMP%]{z-index:99999!important;width:100%!important}.custom-inputs[_ngcontent-%COMP%]{display:ruby!important;width:100%!important}.custom-inputs[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%!important;margin-bottom:10px!important}.custom-inputs[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:10px!important}.content-body[_ngcontent-%COMP%]{margin-left:0!important}.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)!important}.time-dropdown[_ngcontent-%COMP%]{min-width:0px!important;margin-left:0!important}.table-actions[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-end;gap:6px}.btn-small[_ngcontent-%COMP%]{align-items:flex-end;margin-top:6px}#clearbtn[_ngcontent-%COMP%]{margin-left:160px!important}#exportsummary[_ngcontent-%COMP%]{align-items:flex-end!important;margin-top:-40%!important}.kpi-label[_ngcontent-%COMP%], .table-header[_ngcontent-%COMP%]{white-space:break-spaces!important}}.clickable[_ngcontent-%COMP%]{cursor:pointer}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:first-child   th[_ngcontent-%COMP%]{z-index:20}.sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff;z-index:50!important}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:first-child   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:30}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2)   th[_ngcontent-%COMP%]{position:sticky;top:40px;background:#fff;z-index:25}.table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:5;box-shadow:0 2px 2px -1px #0000001a}.sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff;z-index:10}.sub-table-scroll[_ngcontent-%COMP%]{max-height:300px;overflow-y:auto;position:relative;z-index:0}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:15;box-shadow:0 2px 2px -1px #0000001a}.sub-table-scroll[_ngcontent-%COMP%], .sub-user-table-scroll[_ngcontent-%COMP%]{max-height:250px;overflow-y:auto;border:1px solid #e0e0e0}.sub-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background-color:#f9f9f9;z-index:2;box-shadow:0 2px 2px -1px #0000001a}.data-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .data-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:8px;text-align:center;font-size:14px}.sticky-col-header[_ngcontent-%COMP%], .sticky-col[_ngcontent-%COMP%]{position:sticky;left:0;background:#f9f9f9;z-index:2}.sub-table-container[_ngcontent-%COMP%]{max-height:900px;overflow-y:auto;overflow-x:auto}.sub-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:2}.table-thead[_ngcontent-%COMP%]   th.th-center[_ngcontent-%COMP%]{background-color:#e6f2ff;font-weight:600;border-bottom:2px solid #000}.dropdown-item[_ngcontent-%COMP%]{cursor:pointer}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2)   th[_ngcontent-%COMP%]{font-weight:500;background-color:#fff!important}.data-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.expand-btn[_ngcontent-%COMP%]{border:none;background:none;cursor:pointer;font-weight:500}.arrow[_ngcontent-%COMP%]{display:inline-block;width:12px}.data-table[_ngcontent-%COMP%]   th.group-header[_ngcontent-%COMP%]{border:2px solid #000;text-align:center;background-color:#f0f0f0}.data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .data-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:6px 10px}.bordered-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.bordered-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .bordered-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:8px 12px;text-align:left}.bordered-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f5f5f5}.table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{top:0;z-index:3;background-color:#f5f5f5}.bordered-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.data-table[_ngcontent-%COMP%]{border-collapse:separate;border-spacing:0 10px}.table-row[_ngcontent-%COMP%]{background:#fff;border-radius:8px}.group-divider[_ngcontent-%COMP%]{border-right:2px solid #e2e8f0!important}.loader-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;background:#ffffffb3;display:flex;align-items:center;justify-content:center;z-index:1050}.spinner[_ngcontent-%COMP%]{width:40px;height:40px;border:4px solid #e8e8e8;border-top:4px solid #555;border-radius:50%;animation:_ngcontent-%COMP%_spin .8s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}input[_ngcontent-%COMP%]:focus{outline:none!important;box-shadow:none!important}.sub-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.sub-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .sub-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:none;padding:4px 8px}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:none;background:transparent}.highlight-red[_ngcontent-%COMP%]{color:red!important;font-weight:700}.normal[_ngcontent-%COMP%]{color:#000}.charts-container[_ngcontent-%COMP%]{display:flex;gap:20px}.chart-card[_ngcontent-%COMP%]{flex:1;background:#fff;border:1px solid #e0e0e0;border-radius:8px;padding:20px;box-shadow:0 2px 4px #0000001a}.chart-title[_ngcontent-%COMP%]{font-size:18px;font-weight:700;margin-bottom:20px;color:#333}.chart-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:15px}.chart-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between}.chart-label[_ngcontent-%COMP%]{font-size:14px;color:#666;min-width:80px}.chart-bar-container[_ngcontent-%COMP%]{flex:1;margin:0 15px;position:relative;height:20px;background:#036;border-radius:10px;overflow:hidden}.chart-bar[_ngcontent-%COMP%]{height:100%;background:#036;border-radius:10px;position:relative;transition:width .3s ease}.chart-value[_ngcontent-%COMP%]{font-size:14px;font-weight:700;color:#333;min-width:30px;text-align:right}.chart-target[_ngcontent-%COMP%]{position:absolute;top:0;height:100%;width:3px;background:#dc3545;border-radius:2px}.chart-target[_ngcontent-%COMP%]:after{content:attr(data-value);position:absolute;top:-25px;left:50%;transform:translate(-50%);font-size:12px;color:#dc3545;font-weight:700}@media (max-width: 768px){.charts-container[_ngcontent-%COMP%]{flex-direction:column;padding:0 10px}.chart-card[_ngcontent-%COMP%]{margin-bottom:15px}}.sortable-header[_ngcontent-%COMP%]{position:relative;-webkit-user-select:none;user-select:none}.sort-arrows[_ngcontent-%COMP%]{display:inline-flex;flex-direction:column;align-items:center;margin-left:8px;line-height:1;gap:2px;vertical-align:top}.arrow-up[_ngcontent-%COMP%], .arrow-down[_ngcontent-%COMP%]{font-size:10px;color:#ccc;transition:color .2s ease;display:block;margin:0;padding:0}.arrow-up.active[_ngcontent-%COMP%], .arrow-down.active[_ngcontent-%COMP%]{color:#333}.sort-arrows-spaced[_ngcontent-%COMP%]{display:inline-flex;flex-direction:column;align-items:center;margin-left:8px;gap:4px}.sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-up[_ngcontent-%COMP%], .sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-down[_ngcontent-%COMP%]{font-size:8px;color:#bbb}.sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-up.active[_ngcontent-%COMP%], .sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-down.active[_ngcontent-%COMP%]{color:#555}',
    ],
  });
};
var Td = class n {
  isSessionStorageAvailable() {
    return typeof window < "u" && typeof sessionStorage < "u";
  }
  getItem(i) {
    return this.isSessionStorageAvailable() ? sessionStorage.getItem(i) : null;
  }
  setItem(i, e) {
    this.isSessionStorageAvailable() && sessionStorage.setItem(i, e);
  }
  removeItem(i) {
    this.isSessionStorageAvailable() && sessionStorage.removeItem(i);
  }
  clear() {
    this.isSessionStorageAvailable() && sessionStorage.clear();
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Xe = class n {
  constructor(i, e) {
    this.http = i;
    this.storageService = e;
  }
  apiUrl = "https://uat.smartassistapp.in/api/superadmin/";
  getAuthHeaders() {
    let i = this.storageService.getItem("token");
    return new Tt()
      .set("authorization", `Bearer ${i}`)
      .set("accept", "application/json");
  }
  getAllDealer() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "dealers/all", { headers: i });
  }
  getDealerById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}`, { headers: e });
  }
  getCustomerById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}accounts/${i}`, { headers: e });
  }
  getTeamById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}teams/${i}`, { headers: e });
  }
  getVehicleById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}vehicles/${i}`, { headers: e });
  }
  getUserById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}users/${i}`, { headers: e });
  }
  getAllUser(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/users/all`, {
      headers: e,
    });
  }
  getAllLead(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/leads/all`, {
      headers: e,
    });
  }
  getAllTask(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/tasks/all`, {
      headers: e,
    });
  }
  getEventsAll(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/events/t-drives/all`, {
      headers: e,
    });
  }
  getAllOpportunities(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/opportunities/all`, {
      headers: e,
    });
  }
  updateDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}dealers/${i.dealer_id}/update`, i, {
      headers: e,
    });
  }
  createDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "dealers/create", i, { headers: e });
  }
  deleteDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}dealers/${i}/delete`,
      {},
      { headers: e }
    );
  }
  getAllVehicle() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "vehicles/all", { headers: i });
  }
  getSingleVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/vehicles/${i}`, { headers: e });
  }
  createNewVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "vehicles/create", i, { headers: e });
  }
  deleteVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}vehicles/${i}/delete`,
      {},
      { headers: e }
    );
  }
  updateVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}vehicles/${i.vehicle_id}/update`, i, {
      headers: e,
    });
  }
  eventById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}events/${i}`, { headers: e });
  }
  leadById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}leads/${i}`, { headers: e });
  }
  userById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/users/all`, {
      headers: e,
    });
  }
  oppById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}opportunities/${i}`, { headers: e });
  }
  taskById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}tasks/${i}`, { headers: e });
  }
  getMultipleUser() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "users/all", { headers: i });
  }
  getMultipleTeams() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: i });
  }
  createNewUser(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "users/create", i, { headers: e });
  }
  createNewTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "teams/new", i, { headers: e });
  }
  updateUser(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${i.user_id}/update`, i, {
      headers: e,
    });
  }
  updateTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${i.team_id}/update`, i, {
      headers: e,
    });
  }
  getSingleUser(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/users/${i}`, { headers: e });
  }
  getAllTeams() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: i });
  }
  deleteUser(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${i}/delete`, {}, { headers: e });
  }
  deleteTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${i}/delete`, {}, { headers: e });
  }
  getAllCustomer() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "accounts/all", { headers: i });
  }
  getSingleAccount(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/accounts/${i}`, { headers: e });
  }
  createCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.post(`${this.apiUrl}accounts/create`, i, { headers: e });
  }
  updateCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}accounts/${i.account_id}/update`, i, {
      headers: e,
    });
  }
  deleteCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}accounts/${i}/delete`,
      {},
      { headers: e }
    );
  }
  getProfileData() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "show-profile", { headers: i });
  }
  getAllRole() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "role/all", { headers: i });
  }
  createRole(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "roles/new", i, { headers: e });
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(jt), Q(Td));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var yr = class n {
  dealer_id;
  dealer_name;
  dealer_code;
  dealer_email;
  corporate_id;
  constructor() {
    (this.dealer_id = ""),
      (this.dealer_name = ""),
      (this.dealer_code = null),
      (this.corporate_id = ""),
      (this.dealer_email = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var oE = ["*"];
var aE = ["dialog"];
var Qv = { animation: !0, transitionTimerDelayMs: 5 },
  sE = (() => {
    class n {
      constructor() {
        this.animation = Qv.animation;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function lE(n) {
  let { transitionDelay: i, transitionDuration: e } =
      window.getComputedStyle(n),
    t = parseFloat(i),
    r = parseFloat(e);
  return (t + r) * 1e3;
}
function Xv(n) {
  return typeof n == "string";
}
function xm(n) {
  return n != null;
}
function cE(n) {
  return n && n.then;
}
function Zv(n) {
  return (n || document.body).getBoundingClientRect();
}
function dE(n) {
  return (i) =>
    new jn((e) => {
      let t = (a) => n.run(() => e.next(a)),
        r = (a) => n.run(() => e.error(a)),
        o = () => n.run(() => e.complete());
      return i.subscribe({ next: t, error: r, complete: o });
    });
}
var uE = () => {},
  { transitionTimerDelayMs: hE } = Qv,
  Ed = new Map(),
  Do = (n, i, e, t) => {
    let r = t.context || {},
      o = Ed.get(i);
    if (o)
      switch (t.runningTransition) {
        case "continue":
          return Hn;
        case "stop":
          n.run(() => o.transition$.complete()),
            (r = Object.assign(o.context, r)),
            Ed.delete(i);
      }
    let a = e(i, t.animation, r) || uE;
    if (
      !t.animation ||
      window.getComputedStyle(i).transitionProperty === "none"
    )
      return n.run(() => a()), fe(void 0).pipe(dE(n));
    let d = new Ee(),
      u = new Ee(),
      f = d.pipe(gg(!0));
    Ed.set(i, {
      transition$: d,
      complete: () => {
        u.next(), u.complete();
      },
      context: r,
    });
    let v = lE(i);
    return (
      n.runOutsideAngular(() => {
        let S = yn(i, "transitionend").pipe(
            zt(f),
            St(({ target: M }) => M === i)
          ),
          T = pg(v + hE).pipe(zt(f));
        mg(T, S, u)
          .pipe(zt(f))
          .subscribe(() => {
            Ed.delete(i),
              n.run(() => {
                a(), d.next(), d.complete();
              });
          });
      }),
      d.asObservable()
    );
  };
var YL = (() => {
  let n = () =>
      /iPad|iPhone|iPod/.test(navigator.userAgent) ||
      (/Macintosh/.test(navigator.userAgent) &&
        navigator.maxTouchPoints &&
        navigator.maxTouchPoints > 2),
    i = () => /Android/.test(navigator.userAgent);
  return typeof navigator < "u" ? !!navigator.userAgent && (n() || i()) : !1;
})();
var pE = [
  "a[href]",
  "button:not([disabled])",
  'input:not([disabled]):not([type="hidden"])',
  "select:not([disabled])",
  "textarea:not([disabled])",
  "[contenteditable]",
  '[tabindex]:not([tabindex="-1"])',
].join(", ");
function Jv(n) {
  let i = Array.from(n.querySelectorAll(pE)).filter((e) => e.tabIndex !== -1);
  return [i[0], i[i.length - 1]];
}
var mE = (n, i, e, t = !1) => {
  n.runOutsideAngular(() => {
    let r = yn(i, "focusin").pipe(
      zt(e),
      Ke((o) => o.target)
    );
    yn(i, "keydown")
      .pipe(
        zt(e),
        St((o) => o.key === "Tab"),
        Ku(r)
      )
      .subscribe(([o, a]) => {
        let [d, u] = Jv(i);
        (a === d || a === i) && o.shiftKey && (u.focus(), o.preventDefault()),
          a === u && !o.shiftKey && (d.focus(), o.preventDefault());
      }),
      t &&
        yn(i, "click")
          .pipe(
            zt(e),
            Ku(r),
            Ke((o) => o[1])
          )
          .subscribe((o) => o.focus());
  });
};
var qL = new Date(1882, 10, 12),
  KL = new Date(2174, 10, 25);
var QL = 1e3 * 60 * 60 * 24;
var Sm = 1080,
  fE = 24 * Sm,
  gE = 12 * Sm + 793,
  XL = 29 * fE + gE,
  ZL = 11 * Sm + 204;
var _E = (() => {
    class n {
      constructor() {
        (this._ngbConfig = W(sE)),
          (this.backdrop = !0),
          (this.fullscreen = !1),
          (this.keyboard = !0);
      }
      get animation() {
        return this._animation ?? this._ngbConfig.animation;
      }
      set animation(e) {
        this._animation = e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Ca = class {
    constructor(i, e, t) {
      (this.nodes = i), (this.viewRef = e), (this.componentRef = t);
    }
  };
var bE = (() => {
    class n {
      constructor() {
        this._document = W(Oe);
      }
      hide() {
        let e = Math.abs(
            window.innerWidth - this._document.documentElement.clientWidth
          ),
          t = this._document.body,
          r = t.style,
          { overflow: o, paddingRight: a } = r;
        if (e > 0) {
          let d = parseFloat(window.getComputedStyle(t).paddingRight);
          r.paddingRight = `${d + e}px`;
        }
        return (
          (r.overflow = "hidden"),
          () => {
            e > 0 && (r.paddingRight = a), (r.overflow = o);
          }
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  vE = (() => {
    class n {
      constructor() {
        (this._nativeElement = W(Re).nativeElement),
          (this._zone = W(Me)),
          (this._injector = W(Mt));
      }
      ngOnInit() {
        xn(
          () =>
            Do(
              this._zone,
              this._nativeElement,
              (e, t) => {
                t && Zv(e), e.classList.add("show");
              },
              { animation: this.animation, runningTransition: "continue" }
            ),
          { injector: this._injector, phase: th.MixedReadWrite }
        );
      }
      hide() {
        return Do(
          this._zone,
          this._nativeElement,
          ({ classList: e }) => e.remove("show"),
          { animation: this.animation, runningTransition: "stop" }
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["ngb-modal-backdrop"]],
          hostAttrs: [2, "z-index", "1055"],
          hostVars: 6,
          hostBindings: function (t, r) {
            t & 2 &&
              (He(
                "modal-backdrop" +
                  (r.backdropClass ? " " + r.backdropClass : "")
              ),
              ne("show", !r.animation)("fade", r.animation));
          },
          inputs: { animation: "animation", backdropClass: "backdropClass" },
          standalone: !0,
          features: [le],
          decls: 0,
          vars: 0,
          template: function (t, r) {},
          encapsulation: 2,
        });
      }
    }
    return n;
  })(),
  Od = class {
    update(i) {}
    close(i) {}
    dismiss(i) {}
  },
  yE = [
    "animation",
    "ariaLabelledBy",
    "ariaDescribedBy",
    "backdrop",
    "centered",
    "fullscreen",
    "keyboard",
    "scrollable",
    "size",
    "windowClass",
    "modalDialogClass",
  ],
  xE = ["animation", "backdropClass"],
  Cm = class {
    _applyWindowOptions(i, e) {
      yE.forEach((t) => {
        xm(e[t]) && (i[t] = e[t]);
      });
    }
    _applyBackdropOptions(i, e) {
      xE.forEach((t) => {
        xm(e[t]) && (i[t] = e[t]);
      });
    }
    update(i) {
      this._applyWindowOptions(this._windowCmptRef.instance, i),
        this._backdropCmptRef &&
          this._backdropCmptRef.instance &&
          this._applyBackdropOptions(this._backdropCmptRef.instance, i);
    }
    get componentInstance() {
      if (this._contentRef && this._contentRef.componentRef)
        return this._contentRef.componentRef.instance;
    }
    get closed() {
      return this._closed.asObservable().pipe(zt(this._hidden));
    }
    get dismissed() {
      return this._dismissed.asObservable().pipe(zt(this._hidden));
    }
    get hidden() {
      return this._hidden.asObservable();
    }
    get shown() {
      return this._windowCmptRef.instance.shown.asObservable();
    }
    constructor(i, e, t, r) {
      (this._windowCmptRef = i),
        (this._contentRef = e),
        (this._backdropCmptRef = t),
        (this._beforeDismiss = r),
        (this._closed = new Ee()),
        (this._dismissed = new Ee()),
        (this._hidden = new Ee()),
        i.instance.dismissEvent.subscribe((o) => {
          this.dismiss(o);
        }),
        (this.result = new Promise((o, a) => {
          (this._resolve = o), (this._reject = a);
        })),
        this.result.then(null, () => {});
    }
    close(i) {
      this._windowCmptRef &&
        (this._closed.next(i), this._resolve(i), this._removeModalElements());
    }
    _dismiss(i) {
      this._dismissed.next(i), this._reject(i), this._removeModalElements();
    }
    dismiss(i) {
      if (this._windowCmptRef)
        if (!this._beforeDismiss) this._dismiss(i);
        else {
          let e = this._beforeDismiss();
          cE(e)
            ? e.then(
                (t) => {
                  t !== !1 && this._dismiss(i);
                },
                () => {}
              )
            : e !== !1 && this._dismiss(i);
        }
    }
    _removeModalElements() {
      let i = this._windowCmptRef.instance.hide(),
        e = this._backdropCmptRef
          ? this._backdropCmptRef.instance.hide()
          : fe(void 0);
      i.subscribe(() => {
        let { nativeElement: t } = this._windowCmptRef.location;
        t.parentNode.removeChild(t),
          this._windowCmptRef.destroy(),
          this._contentRef?.viewRef?.destroy(),
          (this._windowCmptRef = null),
          (this._contentRef = null);
      }),
        e.subscribe(() => {
          if (this._backdropCmptRef) {
            let { nativeElement: t } = this._backdropCmptRef.location;
            t.parentNode.removeChild(t),
              this._backdropCmptRef.destroy(),
              (this._backdropCmptRef = null);
          }
        }),
        Hl(i, e).subscribe(() => {
          this._hidden.next(), this._hidden.complete();
        });
    }
  },
  wm = (function (n) {
    return (
      (n[(n.BACKDROP_CLICK = 0)] = "BACKDROP_CLICK"),
      (n[(n.ESC = 1)] = "ESC"),
      n
    );
  })(wm || {}),
  CE = (() => {
    class n {
      constructor() {
        (this._document = W(Oe)),
          (this._elRef = W(Re)),
          (this._zone = W(Me)),
          (this._injector = W(Mt)),
          (this._closed$ = new Ee()),
          (this._elWithFocus = null),
          (this.backdrop = !0),
          (this.keyboard = !0),
          (this.dismissEvent = new xe()),
          (this.shown = new Ee()),
          (this.hidden = new Ee());
      }
      get fullscreenClass() {
        return this.fullscreen === !0
          ? " modal-fullscreen"
          : Xv(this.fullscreen)
          ? ` modal-fullscreen-${this.fullscreen}-down`
          : "";
      }
      dismiss(e) {
        this.dismissEvent.emit(e);
      }
      ngOnInit() {
        (this._elWithFocus = this._document.activeElement),
          xn(() => this._show(), {
            injector: this._injector,
            phase: th.MixedReadWrite,
          });
      }
      ngOnDestroy() {
        this._disableEventHandling();
      }
      hide() {
        let { nativeElement: e } = this._elRef,
          t = { animation: this.animation, runningTransition: "stop" },
          r = Do(this._zone, e, () => e.classList.remove("show"), t),
          o = Do(this._zone, this._dialogEl.nativeElement, () => {}, t),
          a = Hl(r, o);
        return (
          a.subscribe(() => {
            this.hidden.next(), this.hidden.complete();
          }),
          this._disableEventHandling(),
          this._restoreFocus(),
          a
        );
      }
      _show() {
        let e = { animation: this.animation, runningTransition: "continue" },
          t = Do(
            this._zone,
            this._elRef.nativeElement,
            (o, a) => {
              a && Zv(o), o.classList.add("show");
            },
            e
          ),
          r = Do(this._zone, this._dialogEl.nativeElement, () => {}, e);
        Hl(t, r).subscribe(() => {
          this.shown.next(), this.shown.complete();
        }),
          this._enableEventHandling(),
          this._setFocus();
      }
      _enableEventHandling() {
        let { nativeElement: e } = this._elRef;
        this._zone.runOutsideAngular(() => {
          yn(e, "keydown")
            .pipe(
              zt(this._closed$),
              St((r) => r.key === "Escape")
            )
            .subscribe((r) => {
              this.keyboard
                ? requestAnimationFrame(() => {
                    r.defaultPrevented ||
                      this._zone.run(() => this.dismiss(wm.ESC));
                  })
                : this.backdrop === "static" && this._bumpBackdrop();
            });
          let t = !1;
          yn(this._dialogEl.nativeElement, "mousedown")
            .pipe(
              zt(this._closed$),
              Xt(() => (t = !1)),
              Ci(() => yn(e, "mouseup").pipe(zt(this._closed$), $i(1))),
              St(({ target: r }) => e === r)
            )
            .subscribe(() => {
              t = !0;
            }),
            yn(e, "click")
              .pipe(zt(this._closed$))
              .subscribe(({ target: r }) => {
                e === r &&
                  (this.backdrop === "static"
                    ? this._bumpBackdrop()
                    : this.backdrop === !0 &&
                      !t &&
                      this._zone.run(() => this.dismiss(wm.BACKDROP_CLICK))),
                  (t = !1);
              });
        });
      }
      _disableEventHandling() {
        this._closed$.next();
      }
      _setFocus() {
        let { nativeElement: e } = this._elRef;
        if (!e.contains(document.activeElement)) {
          let t = e.querySelector("[ngbAutofocus]"),
            r = Jv(e)[0];
          (t || r || e).focus();
        }
      }
      _restoreFocus() {
        let e = this._document.body,
          t = this._elWithFocus,
          r;
        t && t.focus && e.contains(t) ? (r = t) : (r = e),
          this._zone.runOutsideAngular(() => {
            setTimeout(() => r.focus()), (this._elWithFocus = null);
          });
      }
      _bumpBackdrop() {
        this.backdrop === "static" &&
          Do(
            this._zone,
            this._elRef.nativeElement,
            ({ classList: e }) => (
              e.add("modal-static"), () => e.remove("modal-static")
            ),
            { animation: this.animation, runningTransition: "continue" }
          );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["ngb-modal-window"]],
          viewQuery: function (t, r) {
            if ((t & 1 && _t(aE, 7), t & 2)) {
              let o;
              nt((o = rt())) && (r._dialogEl = o.first);
            }
          },
          hostAttrs: ["role", "dialog", "tabindex", "-1"],
          hostVars: 7,
          hostBindings: function (t, r) {
            t & 2 &&
              (ce("aria-modal", !0)("aria-labelledby", r.ariaLabelledBy)(
                "aria-describedby",
                r.ariaDescribedBy
              ),
              He("modal d-block" + (r.windowClass ? " " + r.windowClass : "")),
              ne("fade", r.animation));
          },
          inputs: {
            animation: "animation",
            ariaLabelledBy: "ariaLabelledBy",
            ariaDescribedBy: "ariaDescribedBy",
            backdrop: "backdrop",
            centered: "centered",
            fullscreen: "fullscreen",
            keyboard: "keyboard",
            scrollable: "scrollable",
            size: "size",
            windowClass: "windowClass",
            modalDialogClass: "modalDialogClass",
          },
          outputs: { dismissEvent: "dismiss" },
          standalone: !0,
          features: [le],
          ngContentSelectors: oE,
          decls: 4,
          vars: 2,
          consts: [
            ["dialog", ""],
            ["role", "document"],
            [1, "modal-content"],
          ],
          template: function (t, r) {
            t & 1 && (Jt(), l(0, "div", 1, 0)(2, "div", 2), Vt(3), c()()),
              t & 2 &&
                He(
                  "modal-dialog" +
                    (r.size ? " modal-" + r.size : "") +
                    (r.centered ? " modal-dialog-centered" : "") +
                    r.fullscreenClass +
                    (r.scrollable ? " modal-dialog-scrollable" : "") +
                    (r.modalDialogClass ? " " + r.modalDialogClass : "")
                );
          },
          styles: [
            `ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}
`,
          ],
          encapsulation: 2,
        });
      }
    }
    return n;
  })(),
  wE = (() => {
    class n {
      constructor() {
        (this._applicationRef = W(Ni)),
          (this._injector = W(Mt)),
          (this._environmentInjector = W(an)),
          (this._document = W(Oe)),
          (this._scrollBar = W(bE)),
          (this._activeWindowCmptHasChanged = new Ee()),
          (this._ariaHiddenValues = new Map()),
          (this._scrollBarRestoreFn = null),
          (this._modalRefs = []),
          (this._windowCmpts = []),
          (this._activeInstances = new xe());
        let e = W(Me);
        this._activeWindowCmptHasChanged.subscribe(() => {
          if (this._windowCmpts.length) {
            let t = this._windowCmpts[this._windowCmpts.length - 1];
            mE(e, t.location.nativeElement, this._activeWindowCmptHasChanged),
              this._revertAriaHidden(),
              this._setAriaHidden(t.location.nativeElement);
          }
        });
      }
      _restoreScrollBar() {
        let e = this._scrollBarRestoreFn;
        e && ((this._scrollBarRestoreFn = null), e());
      }
      _hideScrollBar() {
        this._scrollBarRestoreFn ||
          (this._scrollBarRestoreFn = this._scrollBar.hide());
      }
      open(e, t, r) {
        let o =
          r.container instanceof HTMLElement
            ? r.container
            : xm(r.container)
            ? this._document.querySelector(r.container)
            : this._document.body;
        if (!o)
          throw new Error(
            `The specified modal container "${
              r.container || "body"
            }" was not found in the DOM.`
          );
        this._hideScrollBar();
        let a = new Od();
        e = r.injector || e;
        let d = e.get(an, null) || this._environmentInjector,
          u = this._getContentRef(e, d, t, a, r),
          f = r.backdrop !== !1 ? this._attachBackdrop(o) : void 0,
          v = this._attachWindowComponent(o, u.nodes),
          S = new Cm(v, u, f, r.beforeDismiss);
        return (
          this._registerModalRef(S),
          this._registerWindowCmpt(v),
          S.hidden.pipe($i(1)).subscribe(() =>
            Promise.resolve(!0).then(() => {
              this._modalRefs.length ||
                (this._document.body.classList.remove("modal-open"),
                this._restoreScrollBar(),
                this._revertAriaHidden());
            })
          ),
          (a.close = (T) => {
            S.close(T);
          }),
          (a.dismiss = (T) => {
            S.dismiss(T);
          }),
          (a.update = (T) => {
            S.update(T);
          }),
          S.update(r),
          this._modalRefs.length === 1 &&
            this._document.body.classList.add("modal-open"),
          f && f.instance && f.changeDetectorRef.detectChanges(),
          v.changeDetectorRef.detectChanges(),
          S
        );
      }
      get activeInstances() {
        return this._activeInstances;
      }
      dismissAll(e) {
        this._modalRefs.forEach((t) => t.dismiss(e));
      }
      hasOpenModals() {
        return this._modalRefs.length > 0;
      }
      _attachBackdrop(e) {
        let t = Xl(vE, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
        });
        return (
          this._applicationRef.attachView(t.hostView),
          e.appendChild(t.location.nativeElement),
          t
        );
      }
      _attachWindowComponent(e, t) {
        let r = Xl(CE, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
          projectableNodes: t,
        });
        return (
          this._applicationRef.attachView(r.hostView),
          e.appendChild(r.location.nativeElement),
          r
        );
      }
      _getContentRef(e, t, r, o, a) {
        return r
          ? r instanceof Wn
            ? this._createFromTemplateRef(r, o)
            : Xv(r)
            ? this._createFromString(r)
            : this._createFromComponent(e, t, r, o, a)
          : new Ca([]);
      }
      _createFromTemplateRef(e, t) {
        let r = {
            $implicit: t,
            close(a) {
              t.close(a);
            },
            dismiss(a) {
              t.dismiss(a);
            },
          },
          o = e.createEmbeddedView(r);
        return this._applicationRef.attachView(o), new Ca([o.rootNodes], o);
      }
      _createFromString(e) {
        let t = this._document.createTextNode(`${e}`);
        return new Ca([[t]]);
      }
      _createFromComponent(e, t, r, o, a) {
        let d = Mt.create({
            providers: [{ provide: Od, useValue: o }],
            parent: e,
          }),
          u = Xl(r, { environmentInjector: t, elementInjector: d }),
          f = u.location.nativeElement;
        return (
          a.scrollable && f.classList.add("component-host-scrollable"),
          this._applicationRef.attachView(u.hostView),
          new Ca([[f]], u.hostView, u)
        );
      }
      _setAriaHidden(e) {
        let t = e.parentElement;
        t &&
          e !== this._document.body &&
          (Array.from(t.children).forEach((r) => {
            r !== e &&
              r.nodeName !== "SCRIPT" &&
              (this._ariaHiddenValues.set(r, r.getAttribute("aria-hidden")),
              r.setAttribute("aria-hidden", "true"));
          }),
          this._setAriaHidden(t));
      }
      _revertAriaHidden() {
        this._ariaHiddenValues.forEach((e, t) => {
          e
            ? t.setAttribute("aria-hidden", e)
            : t.removeAttribute("aria-hidden");
        }),
          this._ariaHiddenValues.clear();
      }
      _registerModalRef(e) {
        let t = () => {
          let r = this._modalRefs.indexOf(e);
          r > -1 &&
            (this._modalRefs.splice(r, 1),
            this._activeInstances.emit(this._modalRefs));
        };
        this._modalRefs.push(e),
          this._activeInstances.emit(this._modalRefs),
          e.result.then(t, t);
      }
      _registerWindowCmpt(e) {
        this._windowCmpts.push(e),
          this._activeWindowCmptHasChanged.next(),
          e.onDestroy(() => {
            let t = this._windowCmpts.indexOf(e);
            t > -1 &&
              (this._windowCmpts.splice(t, 1),
              this._activeWindowCmptHasChanged.next());
          });
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  sl = (() => {
    class n {
      constructor() {
        (this._injector = W(Mt)),
          (this._modalStack = W(wE)),
          (this._config = W(_E));
      }
      open(e, t = {}) {
        let r = G(
          Te(G({}, this._config), { animation: this._config.animation }),
          t
        );
        return this._modalStack.open(this._injector, e, r);
      }
      get activeInstances() {
        return this._modalStack.activeInstances;
      }
      dismissAll(e) {
        this._modalStack.dismissAll(e);
      }
      hasOpenModals() {
        return this._modalStack.hasOpenModals();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Jn = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ providers: [sl] });
      }
    }
    return n;
  })();
var JL = new Ce("live announcer delay", {
  providedIn: "root",
  factory: () => 100,
});
var SE = (n) => ["/Admin/singleUser", n],
  Dm = (n) => ({ "is-invalid": n });
function DE(n, i) {
  n & 1 && (l(0, "tr")(1, "td", 48)(2, "p"), h(3, "No Dealers Found"), c()()());
}
function ME(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "tr")(1, "td", 34),
      h(2),
      c(),
      l(3, "td", 34),
      h(4),
      c(),
      l(5, "td", 34),
      h(6),
      c(),
      l(7, "td", 34),
      h(8),
      c(),
      l(9, "td")(10, "div", 49)(11, "a", 50),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.onEdit(r.dealer_id));
      }),
      U(12, "i", 51),
      c(),
      l(13, "a", 52),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.openDeleteModal(r));
      }),
      U(14, "i", 53),
      c(),
      l(15, "a", 54)(16, "span", 55),
      U(17, "i", 56),
      c()()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x();
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.dealer_name),
      m(2),
      B(e.dealer_code),
      m(2),
      B(e.dealer_email),
      m(7),
      y("routerLink", de(5, SE, e.dealer_id));
  }
}
function TE(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "li", 57)(1, "a", 43),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.goToPage(r));
      }),
      h(2),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x();
    ne("active", e === t.currentPage), m(2), B(e);
  }
}
function EE(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 58)(1, "div", 59)(2, "div", 60)(3, "div", 61)(4, "h5", 62),
      h(5, "Delete Dealer"),
      c()(),
      l(6, "div", 63),
      h(7, "Are you sure you want to delete this dealer?"),
      c(),
      l(8, "div", 64)(9, "button", 65),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeDeleteModal());
      }),
      h(10, "Cancel"),
      c(),
      l(11, "button", 66),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.deleteDealerId());
      }),
      h(12, "Delete"),
      c()()()()();
  }
}
function OE(n, i) {
  n & 1 && (l(0, "span", 88), h(1, "*"), c());
}
function kE(n, i) {
  n & 1 &&
    (l(0, "div", 89)(1, "span"), h(2, "Dealer name is required."), c()());
}
function PE(n, i) {
  n & 1 && (l(0, "span", 89), h(1, "*"), c());
}
function IE(n, i) {
  n & 1 && (l(0, "span"), h(1, "Dealer code is required."), c());
}
function AE(n, i) {
  if ((n & 1 && (l(0, "div", 89), A(1, IE, 2, 0, "span", 35), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("dealer_code")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function RE(n, i) {
  n & 1 && (l(0, "span", 88), h(1, "*"), c());
}
function FE(n, i) {
  n & 1 &&
    (l(0, "div", 89)(1, "span"), h(2, "Dealer email is required."), c()());
}
function NE(n, i) {
  if (n & 1) {
    let e = oe();
    Le(0),
      l(1, "button", 90),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.onUpdate());
      }),
      h(2, " Edit "),
      c(),
      Ve();
  }
  if (n & 2) {
    let e = x(2);
    m(), y("disabled", !e.isFormChanged());
  }
}
function LE(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 65),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.onSave());
      }),
      h(1, " save "),
      c();
  }
  if (n & 2) {
    let e = x(2);
    ce("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function VE(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 67)(1, "div", 68)(2, "div", 69)(3, "div", 60)(4, "div", 61)(
      5,
      "h5",
      70
    ),
      h(6),
      c(),
      l(7, "button", 71),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeModal());
      }),
      l(8, "span", 72),
      h(9, "\xD7"),
      c()()(),
      l(10, "div", 73)(11, "div", 74)(12, "div", 75)(13, "label", 76),
      h(14, " Dealer Name "),
      A(15, OE, 2, 0, "span", 77),
      c(),
      U(16, "input", 78),
      A(17, kE, 3, 0, "div", 79),
      c(),
      l(18, "div", 80)(19, "label", 81),
      h(20, " Dealer Code "),
      A(21, PE, 2, 0, "span", 79),
      c(),
      U(22, "input", 82),
      A(23, AE, 2, 1, "div", 79),
      c()(),
      l(24, "div", 74)(25, "div", 75)(26, "label", 83),
      h(27, " Dealer Email "),
      A(28, RE, 2, 0, "span", 77),
      c(),
      U(29, "input", 84),
      A(30, FE, 3, 0, "div", 79),
      c(),
      U(31, "div", 85),
      c()(),
      l(32, "div", 64),
      A(33, NE, 3, 1, "ng-container", 86),
      l(34, "button", 87),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeModal());
      }),
      h(35, " Close "),
      c(),
      A(36, LE, 2, 1, "ng-template", null, 0, bt),
      c()()()()();
  }
  if (n & 2) {
    let e,
      t,
      r,
      o,
      a,
      d,
      u = ut(37),
      f = x();
    m(6),
      Z(" ", f.dealerObj.dealer_id ? "Edit Vehicle" : "Add New Dealer", " "),
      m(4),
      y("formGroup", f.useForm),
      m(5),
      y("ngIf", !f.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          13,
          Dm,
          !f.isEditMode &&
            ((e = f.useForm.get("dealer_name")) == null ? null : e.touched) &&
            ((e = f.useForm.get("dealer_name")) == null ? null : e.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !f.isEditMode &&
          ((t = f.useForm.get("dealer_name")) == null ? null : t.touched) &&
          ((t = f.useForm.get("dealer_name")) == null ? null : t.invalid)
      ),
      m(4),
      y("ngIf", !f.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          15,
          Dm,
          !f.isEditMode &&
            ((r = f.useForm.get("dealer_code")) == null ? null : r.touched) &&
            ((r = f.useForm.get("dealer_code")) == null ? null : r.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !f.isEditMode &&
          ((o = f.useForm.get("dealer_code")) == null ? null : o.touched) &&
          ((o = f.useForm.get("dealer_code")) == null ? null : o.invalid)
      ),
      m(5),
      y("ngIf", !f.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          17,
          Dm,
          !f.isEditMode &&
            ((a = f.useForm.get("dealer_email")) == null ? null : a.touched) &&
            ((a = f.useForm.get("dealer_email")) == null ? null : a.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !f.isEditMode &&
          ((d = f.useForm.get("dealer_email")) == null ? null : d.touched) &&
          ((d = f.useForm.get("dealer_email")) == null ? null : d.invalid)
      ),
      m(3),
      y("ngIf", f.dealerObj == null ? null : f.dealerObj.dealer_id)(
        "ngIfElse",
        u
      );
  }
}
var kd = class n {
  constructor(i) {
    this.modalService = i;
    this.useForm = new Rt({
      dealer_name: new ot(null, [Fe.required, Fe.minLength(2)]),
      dealer_code: new ot(null, [Fe.required, Fe.minLength(5)]),
      dealer_email: new ot(null, [Fe.required, Fe.email]),
    });
  }
  http = W(jt);
  dealerList = pe([]);
  totalDealer = pe(0);
  masterSrv = W(Xe);
  dealerObj = new yr();
  selectedRowCount = 3;
  isLoading = !1;
  isModalVisible = !1;
  isModalOpen = !1;
  isEditMode = !1;
  useForm;
  previousValue = "";
  isDeleteModalOpen = !1;
  itemsPerPage = 10;
  originalDealerName = "";
  originalDealerC = "";
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  currentPage = 1;
  originalFormValue;
  searchTerm = "";
  filteredDealers = [];
  paginatedDealers = [];
  totalPages = 0;
  pages = [];
  toastr = W(fi);
  openModal(i) {
    (this.isModalOpen = !0),
      console.log("open modal called"),
      this.useForm.reset({
        dealer_name: null,
        dealer_code: null,
        dealer_email: null,
      }),
      (this.isModalVisible = !0),
      i
        ? ((this.previousValue = i.dealer_name),
          this.useForm.patchValue({
            dealer_name: i.dealer_name,
            dealer_code: i.dealer_code,
            dealer_email: i.dealer_email,
          }),
          (this.dealerObj = G({}, i)))
        : (this.dealerObj = new yr());
  }
  isDealerNameChanged() {
    return this.useForm.get("dealer_name")?.value !== this.originalDealerName;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllDealer(),
      this.getAllDealer();
  }
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe(
      (i) => {
        console.log("Dealer list updated:", i.data.dealer.rows),
          this.dealerList.set(i.data.dealer.rows),
          (this.filteredDealers = i.data.dealer.rows),
          this.totalDealer.set(i.data.dealer.count),
          this.initializeDealerPagination();
      },
      (i) => {
        this.toastr.error("Error fetching dealers", "Error"),
          console.error("Error fetching dealers:", i),
          this.dealerList.set([]),
          (this.filteredDealers = []),
          this.totalDealer.set(0),
          this.initializeDealerPagination();
      }
    );
  }
  initializeDealerPagination() {
    let i = this.filteredDealers.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateDealers();
  }
  applyFilterAndPagination() {
    let e = this.dealerList().filter(
      (o) =>
        o.dealer_name?.toLowerCase().includes(this.searchTerm.toLowerCase()) ||
        o.dealer_code
          ?.toString()
          .toLowerCase()
          .includes(this.searchTerm.toLowerCase())
    );
    (this.filteredDealers = e),
      (this.totalPages = Math.ceil(e.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (o, a) => a + 1));
    let t = (this.currentPage - 1) * this.itemsPerPage,
      r = t + this.itemsPerPage;
    this.paginatedDealers = e.slice(t, r);
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateDealers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredDealers = this.dealerList();
    else {
      let i = this.searchTerm.toLowerCase();
      this.filteredDealers = this.dealerList().filter((e) =>
        e.dealer_name.toLowerCase().includes(i)
      );
    }
    (this.currentPage = 1), this.paginateDealers();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateDealers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateDealers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateDealers());
  }
  paginateDealers() {
    let e = this.dealerList().filter(
        (o) =>
          o.dealer_name
            ?.toLowerCase()
            .includes(this.searchTerm.toLowerCase()) ||
          o.dealer_code
            ?.toString()
            .toLowerCase()
            .includes(this.searchTerm.toLowerCase())
      ),
      t = (this.currentPage - 1) * this.itemsPerPage,
      r = t + this.itemsPerPage;
    this.paginatedDealers = e.slice(t, r);
  }
  openDeleteModal(i) {
    console.log("\u{1F5D1}\uFE0F Delete button clicked", i),
      (this.selectedDealerForDeletion = i),
      (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("Form Values on Save:", this.useForm.value),
      this.isEditMode ? this.onUpdate() : this.createNewDealer(),
      this.closeModal();
  }
  createNewDealer() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let i = this.useForm.value;
    console.log("Final Payload sent to API:", i),
      this.masterSrv.createDealer(i).subscribe(
        (e) => {
          this.toastr.success("Dealer created successfully!", "Success"),
            this.getAllDealer();
        },
        (e) => {
          console.error("Error creating dealer:", e),
            this.toastr.error("Error creating dealer", "Error");
        }
      );
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      console.log("Dropdown changed to:", this.itemsPerPage),
      this.applyFilterAndPagination();
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.dealerObj = G(G({}, this.dealerObj), this.useForm.value)),
        console.log(
          "\u{1F680} Updated Payload before API call:",
          this.dealerObj
        ),
        this.masterSrv.updateDealer(this.dealerObj).subscribe(
          (i) => {
            console.log("\u2705 API Response:", i),
              i.status === 200
                ? (this.toastr.success(
                    i.message || "Dealer updated successfully",
                    "Success"
                  ),
                  (this.isModalOpen = !1),
                  (this.originalDealerName = ""),
                  (this.originalDealerC = ""),
                  setTimeout(() => {
                    this.getAllDealer();
                  }, 500))
                : this.toastr.error(i.message || "Update failed", "Error");
          },
          (i) => {
            console.error("\u274C API Error:", i);
            let e = i?.error?.message || "Failed to update dealer";
            this.toastr.error(e, "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(i) {
    console.log("Edit button clicked. Dealer ID:", i),
      (this.isEditMode = !0),
      this.masterSrv.getDealerById(i).subscribe(
        (e) => {
          let t = e?.data?.dealer;
          t
            ? ((this.dealerObj = Te(G({}, t), {
                dealer_code: Number(t.dealer_code),
              })),
              this.useForm.patchValue({
                dealer_name: t.dealer_name,
                dealer_code: Number(t.dealer_code),
              }),
              (this.originalFormValue = G({}, this.useForm.value)),
              (this.isModalOpen = !0))
            : this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isFormChanged() {
    return (
      this.useForm.get("dealer_name")?.value !== this.originalDealerName ||
      this.useForm.get("dealer_code")?.value !== this.originalDealerC
    );
  }
  selectedDealerForDeletion = null;
  selectDealerForDeletion(i) {
    this.selectedDealerForDeletion = i;
  }
  deleteDealerId() {
    this.selectedDealerForDeletion && this.selectedDealerForDeletion.dealer_id
      ? this.masterSrv
          .deleteDealer(this.selectedDealerForDeletion.dealer_id)
          .subscribe(
            (i) => {
              this.getAllDealer(),
                this.closeModal(),
                this.toastr.success("Dealer Deleted", "Successful");
            },
            (i) => {
              alert(i.message || "Failed to delete vehicle");
            }
          )
      : alert("No vehicle selected for deletion");
  }
  static ɵfac = function (e) {
    return new (e || n)(j(sl));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-dealer"]],
    standalone: !0,
    features: [le],
    decls: 74,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", "mt-10"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search users...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "5", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        "border",
        "2px solid #222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-success",
        "shadow",
        "btn-xs",
        "sharp",
        2,
        "margin-left",
        "5px",
        3,
        "routerLink",
      ],
      [1, "", 2, "margin-left", "0 !important"],
      [1, "fa", "fa-eye"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
      ],
      [1, "modal-dialog", "modal-lg"],
      [
        1,
        "modal-title",
        2,
        "align-items",
        "center",
        "margin-inline",
        "auto",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      [
        "for",
        "dealer_name",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      ["style", "color: red;", 4, "ngIf"],
      [
        "id",
        "dealer_name",
        "type",
        "text",
        "placeholder",
        "Dealer Name",
        "formControlName",
        "dealer_name",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "form-group", "col-md-6"],
      [
        "for",
        "dealer_code",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "YOM",
        "type",
        "text",
        "formControlName",
        "dealer_code",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [
        "for",
        "dealer_email",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "dealer_email",
        "type",
        "text",
        "placeholder",
        "Dealer email",
        "formControlName",
        "dealer_email",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [1, "row", 2, "margin-left", "-3px !important"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [2, "color", "red"],
      [1, "text-danger"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        2,
        "border-color",
        "#222fb9",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Utils"),
        c()(),
        l(7, "li", 7)(8, "a", 8),
        h(9, "Users "),
        c()()()(),
        l(10, "div", 9)(11, "div", 10)(12, "a", 11),
        R("click", function () {
          return t.openModal();
        }),
        U(13, "i", 12),
        h(14, "Add Dealer "),
        c()(),
        l(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Dealer"),
        c(),
        l(19, "h3", 16),
        h(20),
        c()()()(),
        l(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        U(26, "label", 22),
        l(27, "select", 23),
        R("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        l(28, "option", 24),
        h(29, "10"),
        c(),
        l(30, "option", 25),
        h(31, "25"),
        c(),
        l(32, "option", 26),
        h(33, "50"),
        c(),
        l(34, "option", 27),
        h(35, "100"),
        c()(),
        l(36, "label", 28),
        h(37, "records per page"),
        c()(),
        l(38, "div", 29)(39, "div", 30)(40, "input", 31),
        dt("ngModelChange", function (o) {
          return ct(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        R("input", function () {
          return t.onSearchChange();
        }),
        c()()()(),
        l(41, "div", 32)(42, "table", 33)(43, "thead")(44, "tr")(45, "th", 34),
        h(46, "Sr No"),
        c(),
        l(47, "th", 34),
        h(48, "Dealer Name"),
        c(),
        l(49, "th", 34),
        h(50, "Dealer Code"),
        c(),
        l(51, "th", 34),
        h(52, "Dealer email"),
        c(),
        l(53, "th"),
        h(54, "Action"),
        c()()(),
        l(55, "tbody"),
        A(56, DE, 4, 0, "tr", 35)(57, ME, 18, 7, "tr", 36),
        c()()(),
        l(58, "div", 37)(59, "div", 38)(60, "div", 39),
        h(61),
        c()(),
        l(62, "div", 38)(63, "div", 40)(64, "ul", 41)(65, "li", 42)(
          66,
          "a",
          43
        ),
        R("click", function () {
          return t.previousPage();
        }),
        h(67, "Previous"),
        c()(),
        A(68, TE, 3, 3, "li", 44),
        l(69, "li", 45)(70, "a", 43),
        R("click", function () {
          return t.nextPage();
        }),
        h(71, "Next"),
        c()()()()()()()()()()(),
        A(72, EE, 13, 0, "div", 46)(73, VE, 38, 19, "div", 47)),
        e & 2 &&
          (m(20),
          Z(" ", t.filteredDealers.length, " "),
          m(20),
          lt("ngModel", t.searchTerm),
          m(16),
          y("ngIf", t.paginatedDealers.length === 0),
          m(),
          y("ngForOf", t.paginatedDealers),
          m(4),
          Fi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.min(t.currentPage * t.itemsPerPage, t.dealerList().length),
            " of ",
            t.dealerList().length,
            " entries "
          ),
          m(4),
          ne("disabled", t.currentPage === 1),
          m(3),
          y("ngForOf", t.visiblePages),
          m(),
          ne("disabled", t.currentPage === t.totalPages),
          m(3),
          y("ngIf", t.isDeleteModalOpen),
          m(),
          y("ngIf", t.isModalOpen));
    },
    dependencies: [
      Ae,
      It,
      At,
      We,
      Di,
      ni,
      ri,
      Wt,
      ii,
      Bi,
      _i,
      ti,
      tt,
      Jn,
      hn,
      Xi,
      Zi,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}input[_ngcontent-%COMP%]::-webkit-clear-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button, input[_ngcontent-%COMP%]::-webkit-calendar-picker-indicator{display:none!important;-webkit-appearance:none!important}input[_ngcontent-%COMP%]:invalid{box-shadow:none!important}input[_ngcontent-%COMP%]:-moz-ui-invalid{box-shadow:none!important}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border:none}.modal-backdrop[_ngcontent-%COMP%]{display:none!important}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.edit-btn[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:#fff;transition:all .3s ease}.edit-btn[_ngcontent-%COMP%]:hover:enabled{background-color:#222fb9;color:#fff}.edit-btn[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:not-allowed}#editButton[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}",
    ],
  });
};
var t1 = (() => {
  class n {
    constructor(e, t, r) {
      (this.el = e), (this.vcr = t), (this.renderer = r), (this.dtOptions = {});
    }
    ngOnInit() {
      this.dtTrigger
        ? this.dtTrigger.subscribe((e) => {
            this.displayTable(e);
          })
        : this.displayTable(null);
    }
    ngOnDestroy() {
      this.dtTrigger && this.dtTrigger.unsubscribe(),
        this.dt && this.dt.destroy(!0);
    }
    displayTable(e) {
      e && (this.dtOptions = e),
        (this.dtInstance = new Promise((t, r) => {
          Promise.resolve(this.dtOptions).then((o) => {
            if (
              Object.keys(o).length === 0 &&
              $("tbody tr", this.el.nativeElement).length === 0
            ) {
              r("Both the table and dtOptions cannot be empty");
              return;
            }
            o.columns &&
              o.columns.forEach((d) => {
                (d.id ?? "").trim() === "" && (d.id = this.getColumnUniqueId());
              }),
              setTimeout(() => {
                let d = {
                  rowCallback: (u, f, v) => {
                    if (o.columns) {
                      let S = o.columns;
                      this.applyNgPipeTransform(u, S),
                        this.applyNgRefTemplate(u, S, f);
                    }
                    o.rowCallback && o.rowCallback(u, f, v);
                  },
                };
                (d = Object.assign({}, o, d)),
                  (this.dt = $(this.el.nativeElement).DataTable(d)),
                  t(this.dt);
              });
          });
        }));
    }
    applyNgPipeTransform(e, t) {
      t.filter((o) => o.ngPipeInstance && !o.ngTemplateRef).forEach((o) => {
        let a = o.ngPipeInstance,
          d = o.ngPipeArgs || [],
          u = t.filter((T) => T.visible !== !1).findIndex((T) => T.id === o.id),
          f = e.childNodes.item(u),
          v = $(f).text(),
          S = a.transform(v, ...d);
        $(f).text(S);
      });
    }
    applyNgRefTemplate(e, t, r) {
      t.filter((a) => a.ngTemplateRef && !a.ngPipeInstance).forEach((a) => {
        let { ref: d, context: u } = a.ngTemplateRef,
          f = t.filter((M) => M.visible !== !1).findIndex((M) => M.id === a.id),
          v = e.childNodes.item(f);
        $(v).html("");
        let S = Object.assign({}, u, u?.userData, { adtData: r }),
          T = this.vcr.createEmbeddedView(d, S);
        this.renderer.appendChild(v, T.rootNodes[0]);
      });
    }
    getColumnUniqueId() {
      let e = "",
        t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
      for (let r = 0; r < 6; r++) {
        let o = Math.floor(Math.random() * t.length);
        e += t.charAt(o);
      }
      return e.trim();
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(j(Re), j(Wi), j(hi));
      };
    }
    static {
      this.ɵdir = Ie({
        type: n,
        selectors: [["", "datatable", ""]],
        inputs: { dtOptions: "dtOptions", dtTrigger: "dtTrigger" },
      });
    }
  }
  return n;
})();
var wa = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ imports: [Ae] });
    }
  }
  return n;
})();
var ll = class n {
  vehicle_id;
  YOM;
  vehicle_name;
  type;
  VIN;
  created_at;
  updated_at;
  corporate_id;
  deleted;
  chasis_number;
  demo_start_date;
  demo_end_date;
  constructor() {
    (this.deleted = !1),
      (this.vehicle_id = " "),
      (this.YOM = ""),
      (this.vehicle_name = ""),
      (this.type = ""),
      (this.VIN = ""),
      (this.created_at = ""),
      (this.updated_at = ""),
      (this.corporate_id = ""),
      (this.chasis_number = ""),
      (this.demo_start_date = " "),
      (this.demo_end_date = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Tm;
try {
  Tm = typeof Intl < "u" && Intl.v8BreakIterator;
} catch {
  Tm = !1;
}
var kt = (() => {
  class n {
    constructor(e) {
      (this._platformId = e),
        (this.isBrowser = this._platformId
          ? dn(this._platformId)
          : typeof document == "object" && !!document),
        (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
        (this.TRIDENT =
          this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
        (this.BLINK =
          this.isBrowser &&
          !!(window.chrome || Tm) &&
          typeof CSS < "u" &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.WEBKIT =
          this.isBrowser &&
          /AppleWebKit/i.test(navigator.userAgent) &&
          !this.BLINK &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.IOS =
          this.isBrowser &&
          /iPad|iPhone|iPod/.test(navigator.userAgent) &&
          !("MSStream" in window)),
        (this.FIREFOX =
          this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent)),
        (this.ANDROID =
          this.isBrowser &&
          /android/i.test(navigator.userAgent) &&
          !this.TRIDENT),
        (this.SAFARI =
          this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(si));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var cl;
function jE() {
  if (cl == null && typeof window < "u")
    try {
      window.addEventListener(
        "test",
        null,
        Object.defineProperty({}, "passive", { get: () => (cl = !0) })
      );
    } finally {
      cl = cl || !1;
    }
  return cl;
}
function er(n) {
  return jE() ? n : !!n.capture;
}
var Mo;
function i1() {
  if (Mo == null) {
    if (
      typeof document != "object" ||
      !document ||
      typeof Element != "function" ||
      !Element
    )
      return (Mo = !1), Mo;
    if ("scrollBehavior" in document.documentElement.style) Mo = !0;
    else {
      let n = Element.prototype.scrollTo;
      n ? (Mo = !/\{\s*\[native code\]\s*\}/.test(n.toString())) : (Mo = !1);
    }
  }
  return Mo;
}
var Mm;
function HE() {
  if (Mm == null) {
    let n = typeof document < "u" ? document.head : null;
    Mm = !!(n && (n.createShadowRoot || n.attachShadow));
  }
  return Mm;
}
function n1(n) {
  if (HE()) {
    let i = n.getRootNode ? n.getRootNode() : null;
    if (typeof ShadowRoot < "u" && ShadowRoot && i instanceof ShadowRoot)
      return i;
  }
  return null;
}
function Em() {
  let n = typeof document < "u" && document ? document.activeElement : null;
  for (; n && n.shadowRoot; ) {
    let i = n.shadowRoot.activeElement;
    if (i === n) break;
    n = i;
  }
  return n;
}
function mn(n) {
  return n.composedPath ? n.composedPath()[0] : n.target;
}
function dl() {
  return (
    (typeof __karma__ < "u" && !!__karma__) ||
    (typeof jasmine < "u" && !!jasmine) ||
    (typeof jest < "u" && !!jest) ||
    (typeof Mocha < "u" && !!Mocha)
  );
}
function r1(n, ...i) {
  return i.length
    ? i.some((e) => n[e])
    : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
}
function Da(n) {
  return Array.isArray(n) ? n : [n];
}
function Zt(n) {
  return n == null ? "" : typeof n == "string" ? n : `${n}px`;
}
function xr(n) {
  return n instanceof Re ? n.nativeElement : n;
}
var UE = (() => {
  class n {
    create(e) {
      return typeof MutationObserver > "u" ? null : new MutationObserver(e);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Pd = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ providers: [UE] });
    }
  }
  return n;
})();
var o1 = new Set(),
  To,
  zE = (() => {
    class n {
      constructor(e, t) {
        (this._platform = e),
          (this._nonce = t),
          (this._matchMedia =
            this._platform.isBrowser && window.matchMedia
              ? window.matchMedia.bind(window)
              : WE);
      }
      matchMedia(e) {
        return (
          (this._platform.WEBKIT || this._platform.BLINK) && $E(e, this._nonce),
          this._matchMedia(e)
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(kt), Q(Ja, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function $E(n, i) {
  if (!o1.has(n))
    try {
      To ||
        ((To = document.createElement("style")),
        i && To.setAttribute("nonce", i),
        To.setAttribute("type", "text/css"),
        document.head.appendChild(To)),
        To.sheet &&
          (To.sheet.insertRule(`@media ${n} {body{ }}`, 0), o1.add(n));
    } catch (e) {
      console.error(e);
    }
}
function WE(n) {
  return {
    matches: n === "all" || n === "",
    media: n,
    addListener: () => {},
    removeListener: () => {},
  };
}
var s1 = (() => {
  class n {
    constructor(e, t) {
      (this._mediaMatcher = e),
        (this._zone = t),
        (this._queries = new Map()),
        (this._destroySubject = new Ee());
    }
    ngOnDestroy() {
      this._destroySubject.next(), this._destroySubject.complete();
    }
    isMatched(e) {
      return a1(Da(e)).some((r) => this._registerQuery(r).mql.matches);
    }
    observe(e) {
      let r = a1(Da(e)).map((a) => this._registerQuery(a).observable),
        o = ro(r);
      return (
        (o = jl(o.pipe($i(1)), o.pipe(Ka(1), Gu(0)))),
        o.pipe(
          Ke((a) => {
            let d = { matches: !1, breakpoints: {} };
            return (
              a.forEach(({ matches: u, query: f }) => {
                (d.matches = d.matches || u), (d.breakpoints[f] = u);
              }),
              d
            );
          })
        )
      );
    }
    _registerQuery(e) {
      if (this._queries.has(e)) return this._queries.get(e);
      let t = this._mediaMatcher.matchMedia(e),
        o = {
          observable: new jn((a) => {
            let d = (u) => this._zone.run(() => a.next(u));
            return (
              t.addListener(d),
              () => {
                t.removeListener(d);
              }
            );
          }).pipe(
            Un(t),
            Ke(({ matches: a }) => ({ query: e, matches: a })),
            zt(this._destroySubject)
          ),
          mql: t,
        };
      return this._queries.set(e, o), o;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(zE), Q(Me));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
function a1(n) {
  return n
    .map((i) => i.split(","))
    .reduce((i, e) => i.concat(e))
    .map((i) => i.trim());
}
var GE = (() => {
  class n {
    constructor(e) {
      this._platform = e;
    }
    isDisabled(e) {
      return e.hasAttribute("disabled");
    }
    isVisible(e) {
      return qE(e) && getComputedStyle(e).visibility === "visible";
    }
    isTabbable(e) {
      if (!this._platform.isBrowser) return !1;
      let t = YE(iO(e));
      if (t && (l1(t) === -1 || !this.isVisible(t))) return !1;
      let r = e.nodeName.toLowerCase(),
        o = l1(e);
      return e.hasAttribute("contenteditable")
        ? o !== -1
        : r === "iframe" ||
          r === "object" ||
          (this._platform.WEBKIT && this._platform.IOS && !eO(e))
        ? !1
        : r === "audio"
        ? e.hasAttribute("controls")
          ? o !== -1
          : !1
        : r === "video"
        ? o === -1
          ? !1
          : o !== null
          ? !0
          : this._platform.FIREFOX || e.hasAttribute("controls")
        : e.tabIndex >= 0;
    }
    isFocusable(e, t) {
      return (
        tO(e) &&
        !this.isDisabled(e) &&
        (t?.ignoreVisibility || this.isVisible(e))
      );
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(kt));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
function YE(n) {
  try {
    return n.frameElement;
  } catch {
    return null;
  }
}
function qE(n) {
  return !!(
    n.offsetWidth ||
    n.offsetHeight ||
    (typeof n.getClientRects == "function" && n.getClientRects().length)
  );
}
function KE(n) {
  let i = n.nodeName.toLowerCase();
  return i === "input" || i === "select" || i === "button" || i === "textarea";
}
function QE(n) {
  return ZE(n) && n.type == "hidden";
}
function XE(n) {
  return JE(n) && n.hasAttribute("href");
}
function ZE(n) {
  return n.nodeName.toLowerCase() == "input";
}
function JE(n) {
  return n.nodeName.toLowerCase() == "a";
}
function u1(n) {
  if (!n.hasAttribute("tabindex") || n.tabIndex === void 0) return !1;
  let i = n.getAttribute("tabindex");
  return !!(i && !isNaN(parseInt(i, 10)));
}
function l1(n) {
  if (!u1(n)) return null;
  let i = parseInt(n.getAttribute("tabindex") || "", 10);
  return isNaN(i) ? -1 : i;
}
function eO(n) {
  let i = n.nodeName.toLowerCase(),
    e = i === "input" && n.type;
  return e === "text" || e === "password" || i === "select" || i === "textarea";
}
function tO(n) {
  return QE(n)
    ? !1
    : KE(n) || XE(n) || n.hasAttribute("contenteditable") || u1(n);
}
function iO(n) {
  return (n.ownerDocument && n.ownerDocument.defaultView) || window;
}
var km = class {
    get enabled() {
      return this._enabled;
    }
    set enabled(i) {
      (this._enabled = i),
        this._startAnchor &&
          this._endAnchor &&
          (this._toggleAnchorTabIndex(i, this._startAnchor),
          this._toggleAnchorTabIndex(i, this._endAnchor));
    }
    constructor(i, e, t, r, o = !1, a) {
      (this._element = i),
        (this._checker = e),
        (this._ngZone = t),
        (this._document = r),
        (this._injector = a),
        (this._hasAttached = !1),
        (this.startAnchorListener = () => this.focusLastTabbableElement()),
        (this.endAnchorListener = () => this.focusFirstTabbableElement()),
        (this._enabled = !0),
        o || this.attachAnchors();
    }
    destroy() {
      let i = this._startAnchor,
        e = this._endAnchor;
      i &&
        (i.removeEventListener("focus", this.startAnchorListener), i.remove()),
        e &&
          (e.removeEventListener("focus", this.endAnchorListener), e.remove()),
        (this._startAnchor = this._endAnchor = null),
        (this._hasAttached = !1);
    }
    attachAnchors() {
      return this._hasAttached
        ? !0
        : (this._ngZone.runOutsideAngular(() => {
            this._startAnchor ||
              ((this._startAnchor = this._createAnchor()),
              this._startAnchor.addEventListener(
                "focus",
                this.startAnchorListener
              )),
              this._endAnchor ||
                ((this._endAnchor = this._createAnchor()),
                this._endAnchor.addEventListener(
                  "focus",
                  this.endAnchorListener
                ));
          }),
          this._element.parentNode &&
            (this._element.parentNode.insertBefore(
              this._startAnchor,
              this._element
            ),
            this._element.parentNode.insertBefore(
              this._endAnchor,
              this._element.nextSibling
            ),
            (this._hasAttached = !0)),
          this._hasAttached);
    }
    focusInitialElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusInitialElement(i)));
      });
    }
    focusFirstTabbableElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusFirstTabbableElement(i)));
      });
    }
    focusLastTabbableElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusLastTabbableElement(i)));
      });
    }
    _getRegionBoundary(i) {
      let e = this._element.querySelectorAll(
        `[cdk-focus-region-${i}], [cdkFocusRegion${i}], [cdk-focus-${i}]`
      );
      return i == "start"
        ? e.length
          ? e[0]
          : this._getFirstTabbableElement(this._element)
        : e.length
        ? e[e.length - 1]
        : this._getLastTabbableElement(this._element);
    }
    focusInitialElement(i) {
      let e = this._element.querySelector(
        "[cdk-focus-initial], [cdkFocusInitial]"
      );
      if (e) {
        if (!this._checker.isFocusable(e)) {
          let t = this._getFirstTabbableElement(e);
          return t?.focus(i), !!t;
        }
        return e.focus(i), !0;
      }
      return this.focusFirstTabbableElement(i);
    }
    focusFirstTabbableElement(i) {
      let e = this._getRegionBoundary("start");
      return e && e.focus(i), !!e;
    }
    focusLastTabbableElement(i) {
      let e = this._getRegionBoundary("end");
      return e && e.focus(i), !!e;
    }
    hasAttached() {
      return this._hasAttached;
    }
    _getFirstTabbableElement(i) {
      if (this._checker.isFocusable(i) && this._checker.isTabbable(i)) return i;
      let e = i.children;
      for (let t = 0; t < e.length; t++) {
        let r =
          e[t].nodeType === this._document.ELEMENT_NODE
            ? this._getFirstTabbableElement(e[t])
            : null;
        if (r) return r;
      }
      return null;
    }
    _getLastTabbableElement(i) {
      if (this._checker.isFocusable(i) && this._checker.isTabbable(i)) return i;
      let e = i.children;
      for (let t = e.length - 1; t >= 0; t--) {
        let r =
          e[t].nodeType === this._document.ELEMENT_NODE
            ? this._getLastTabbableElement(e[t])
            : null;
        if (r) return r;
      }
      return null;
    }
    _createAnchor() {
      let i = this._document.createElement("div");
      return (
        this._toggleAnchorTabIndex(this._enabled, i),
        i.classList.add("cdk-visually-hidden"),
        i.classList.add("cdk-focus-trap-anchor"),
        i.setAttribute("aria-hidden", "true"),
        i
      );
    }
    _toggleAnchorTabIndex(i, e) {
      i ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
    }
    toggleAnchors(i) {
      this._startAnchor &&
        this._endAnchor &&
        (this._toggleAnchorTabIndex(i, this._startAnchor),
        this._toggleAnchorTabIndex(i, this._endAnchor));
    }
    _executeOnStable(i) {
      this._injector ? xn(i, { injector: this._injector }) : setTimeout(i);
    }
  },
  nO = (() => {
    class n {
      constructor(e, t, r) {
        (this._checker = e),
          (this._ngZone = t),
          (this._injector = W(Mt)),
          (this._document = r);
      }
      create(e, t = !1) {
        return new km(
          e,
          this._checker,
          this._ngZone,
          this._document,
          t,
          this._injector
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(GE), Q(Me), Q(Oe));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  h1 = (() => {
    class n {
      get enabled() {
        return this.focusTrap?.enabled || !1;
      }
      set enabled(e) {
        this.focusTrap && (this.focusTrap.enabled = e);
      }
      constructor(e, t, r) {
        (this._elementRef = e),
          (this._focusTrapFactory = t),
          (this._previouslyFocusedElement = null),
          W(kt).isBrowser &&
            (this.focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
              !0
            ));
      }
      ngOnDestroy() {
        this.focusTrap?.destroy(),
          this._previouslyFocusedElement &&
            (this._previouslyFocusedElement.focus(),
            (this._previouslyFocusedElement = null));
      }
      ngAfterContentInit() {
        this.focusTrap?.attachAnchors(),
          this.autoCapture && this._captureFocus();
      }
      ngDoCheck() {
        this.focusTrap &&
          !this.focusTrap.hasAttached() &&
          this.focusTrap.attachAnchors();
      }
      ngOnChanges(e) {
        let t = e.autoCapture;
        t &&
          !t.firstChange &&
          this.autoCapture &&
          this.focusTrap?.hasAttached() &&
          this._captureFocus();
      }
      _captureFocus() {
        (this._previouslyFocusedElement = Em()),
          this.focusTrap?.focusInitialElementWhenReady();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Re), j(nO), j(Oe));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "cdkTrapFocus", ""]],
          inputs: {
            enabled: [2, "cdkTrapFocus", "enabled", Se],
            autoCapture: [2, "cdkTrapFocusAutoCapture", "autoCapture", Se],
          },
          exportAs: ["cdkTrapFocus"],
          standalone: !0,
          features: [Pt, Dt],
        });
      }
    }
    return n;
  })();
function Pm(n) {
  return n.buttons === 0 || n.detail === 0;
}
function Im(n) {
  let i =
    (n.touches && n.touches[0]) || (n.changedTouches && n.changedTouches[0]);
  return (
    !!i &&
    i.identifier === -1 &&
    (i.radiusX == null || i.radiusX === 1) &&
    (i.radiusY == null || i.radiusY === 1)
  );
}
var rO = new Ce("cdk-input-modality-detector-options"),
  oO = { ignoreKeys: [18, 17, 224, 91, 16] },
  p1 = 650,
  Ma = er({ passive: !0, capture: !0 }),
  aO = (() => {
    class n {
      get mostRecentModality() {
        return this._modality.value;
      }
      constructor(e, t, r, o) {
        (this._platform = e),
          (this._mostRecentTarget = null),
          (this._modality = new Nt(null)),
          (this._lastTouchMs = 0),
          (this._onKeydown = (a) => {
            this._options?.ignoreKeys?.some((d) => d === a.keyCode) ||
              (this._modality.next("keyboard"),
              (this._mostRecentTarget = mn(a)));
          }),
          (this._onMousedown = (a) => {
            Date.now() - this._lastTouchMs < p1 ||
              (this._modality.next(Pm(a) ? "keyboard" : "mouse"),
              (this._mostRecentTarget = mn(a)));
          }),
          (this._onTouchstart = (a) => {
            if (Im(a)) {
              this._modality.next("keyboard");
              return;
            }
            (this._lastTouchMs = Date.now()),
              this._modality.next("touch"),
              (this._mostRecentTarget = mn(a));
          }),
          (this._options = G(G({}, oO), o)),
          (this.modalityDetected = this._modality.pipe(Ka(1))),
          (this.modalityChanged = this.modalityDetected.pipe(Ul())),
          e.isBrowser &&
            t.runOutsideAngular(() => {
              r.addEventListener("keydown", this._onKeydown, Ma),
                r.addEventListener("mousedown", this._onMousedown, Ma),
                r.addEventListener("touchstart", this._onTouchstart, Ma);
            });
      }
      ngOnDestroy() {
        this._modality.complete(),
          this._platform.isBrowser &&
            (document.removeEventListener("keydown", this._onKeydown, Ma),
            document.removeEventListener("mousedown", this._onMousedown, Ma),
            document.removeEventListener("touchstart", this._onTouchstart, Ma));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(kt), Q(Me), Q(Oe), Q(rO, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var Ad = (function (n) {
    return (
      (n[(n.IMMEDIATE = 0)] = "IMMEDIATE"),
      (n[(n.EVENTUAL = 1)] = "EVENTUAL"),
      n
    );
  })(Ad || {}),
  sO = new Ce("cdk-focus-monitor-default-options"),
  Id = er({ passive: !0, capture: !0 }),
  Am = (() => {
    class n {
      constructor(e, t, r, o, a) {
        (this._ngZone = e),
          (this._platform = t),
          (this._inputModalityDetector = r),
          (this._origin = null),
          (this._windowFocused = !1),
          (this._originFromTouchInteraction = !1),
          (this._elementInfo = new Map()),
          (this._monitoredElementCount = 0),
          (this._rootNodeFocusListenerCount = new Map()),
          (this._windowFocusListener = () => {
            (this._windowFocused = !0),
              (this._windowFocusTimeoutId = window.setTimeout(
                () => (this._windowFocused = !1)
              ));
          }),
          (this._stopInputModalityDetector = new Ee()),
          (this._rootNodeFocusAndBlurListener = (d) => {
            let u = mn(d);
            for (let f = u; f; f = f.parentElement)
              d.type === "focus" ? this._onFocus(d, f) : this._onBlur(d, f);
          }),
          (this._document = o),
          (this._detectionMode = a?.detectionMode || Ad.IMMEDIATE);
      }
      monitor(e, t = !1) {
        let r = xr(e);
        if (!this._platform.isBrowser || r.nodeType !== 1) return fe();
        let o = n1(r) || this._getDocument(),
          a = this._elementInfo.get(r);
        if (a) return t && (a.checkChildren = !0), a.subject;
        let d = { checkChildren: t, subject: new Ee(), rootNode: o };
        return (
          this._elementInfo.set(r, d),
          this._registerGlobalListeners(d),
          d.subject
        );
      }
      stopMonitoring(e) {
        let t = xr(e),
          r = this._elementInfo.get(t);
        r &&
          (r.subject.complete(),
          this._setClasses(t),
          this._elementInfo.delete(t),
          this._removeGlobalListeners(r));
      }
      focusVia(e, t, r) {
        let o = xr(e),
          a = this._getDocument().activeElement;
        o === a
          ? this._getClosestElementsInfo(o).forEach(([d, u]) =>
              this._originChanged(d, t, u)
            )
          : (this._setOrigin(t), typeof o.focus == "function" && o.focus(r));
      }
      ngOnDestroy() {
        this._elementInfo.forEach((e, t) => this.stopMonitoring(t));
      }
      _getDocument() {
        return this._document || document;
      }
      _getWindow() {
        return this._getDocument().defaultView || window;
      }
      _getFocusOrigin(e) {
        return this._origin
          ? this._originFromTouchInteraction
            ? this._shouldBeAttributedToTouch(e)
              ? "touch"
              : "program"
            : this._origin
          : this._windowFocused && this._lastFocusOrigin
          ? this._lastFocusOrigin
          : e && this._isLastInteractionFromInputLabel(e)
          ? "mouse"
          : "program";
      }
      _shouldBeAttributedToTouch(e) {
        return (
          this._detectionMode === Ad.EVENTUAL ||
          !!e?.contains(this._inputModalityDetector._mostRecentTarget)
        );
      }
      _setClasses(e, t) {
        e.classList.toggle("cdk-focused", !!t),
          e.classList.toggle("cdk-touch-focused", t === "touch"),
          e.classList.toggle("cdk-keyboard-focused", t === "keyboard"),
          e.classList.toggle("cdk-mouse-focused", t === "mouse"),
          e.classList.toggle("cdk-program-focused", t === "program");
      }
      _setOrigin(e, t = !1) {
        this._ngZone.runOutsideAngular(() => {
          if (
            ((this._origin = e),
            (this._originFromTouchInteraction = e === "touch" && t),
            this._detectionMode === Ad.IMMEDIATE)
          ) {
            clearTimeout(this._originTimeoutId);
            let r = this._originFromTouchInteraction ? p1 : 1;
            this._originTimeoutId = setTimeout(() => (this._origin = null), r);
          }
        });
      }
      _onFocus(e, t) {
        let r = this._elementInfo.get(t),
          o = mn(e);
        !r ||
          (!r.checkChildren && t !== o) ||
          this._originChanged(t, this._getFocusOrigin(o), r);
      }
      _onBlur(e, t) {
        let r = this._elementInfo.get(t);
        !r ||
          (r.checkChildren &&
            e.relatedTarget instanceof Node &&
            t.contains(e.relatedTarget)) ||
          (this._setClasses(t), this._emitOrigin(r, null));
      }
      _emitOrigin(e, t) {
        e.subject.observers.length && this._ngZone.run(() => e.subject.next(t));
      }
      _registerGlobalListeners(e) {
        if (!this._platform.isBrowser) return;
        let t = e.rootNode,
          r = this._rootNodeFocusListenerCount.get(t) || 0;
        r ||
          this._ngZone.runOutsideAngular(() => {
            t.addEventListener("focus", this._rootNodeFocusAndBlurListener, Id),
              t.addEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                Id
              );
          }),
          this._rootNodeFocusListenerCount.set(t, r + 1),
          ++this._monitoredElementCount === 1 &&
            (this._ngZone.runOutsideAngular(() => {
              this._getWindow().addEventListener(
                "focus",
                this._windowFocusListener
              );
            }),
            this._inputModalityDetector.modalityDetected
              .pipe(zt(this._stopInputModalityDetector))
              .subscribe((o) => {
                this._setOrigin(o, !0);
              }));
      }
      _removeGlobalListeners(e) {
        let t = e.rootNode;
        if (this._rootNodeFocusListenerCount.has(t)) {
          let r = this._rootNodeFocusListenerCount.get(t);
          r > 1
            ? this._rootNodeFocusListenerCount.set(t, r - 1)
            : (t.removeEventListener(
                "focus",
                this._rootNodeFocusAndBlurListener,
                Id
              ),
              t.removeEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                Id
              ),
              this._rootNodeFocusListenerCount.delete(t));
        }
        --this._monitoredElementCount ||
          (this._getWindow().removeEventListener(
            "focus",
            this._windowFocusListener
          ),
          this._stopInputModalityDetector.next(),
          clearTimeout(this._windowFocusTimeoutId),
          clearTimeout(this._originTimeoutId));
      }
      _originChanged(e, t, r) {
        this._setClasses(e, t),
          this._emitOrigin(r, t),
          (this._lastFocusOrigin = t);
      }
      _getClosestElementsInfo(e) {
        let t = [];
        return (
          this._elementInfo.forEach((r, o) => {
            (o === e || (r.checkChildren && o.contains(e))) && t.push([o, r]);
          }),
          t
        );
      }
      _isLastInteractionFromInputLabel(e) {
        let { _mostRecentTarget: t, mostRecentModality: r } =
          this._inputModalityDetector;
        if (
          r !== "mouse" ||
          !t ||
          t === e ||
          (e.nodeName !== "INPUT" && e.nodeName !== "TEXTAREA") ||
          e.disabled
        )
          return !1;
        let o = e.labels;
        if (o) {
          for (let a = 0; a < o.length; a++) if (o[a].contains(t)) return !0;
        }
        return !1;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Me), Q(kt), Q(aO), Q(Oe, 8), Q(sO, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  m1 = (() => {
    class n {
      constructor(e, t) {
        (this._elementRef = e),
          (this._focusMonitor = t),
          (this._focusOrigin = null),
          (this.cdkFocusChange = new xe());
      }
      get focusOrigin() {
        return this._focusOrigin;
      }
      ngAfterViewInit() {
        let e = this._elementRef.nativeElement;
        this._monitorSubscription = this._focusMonitor
          .monitor(
            e,
            e.nodeType === 1 && e.hasAttribute("cdkMonitorSubtreeFocus")
          )
          .subscribe((t) => {
            (this._focusOrigin = t), this.cdkFocusChange.emit(t);
          });
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._monitorSubscription && this._monitorSubscription.unsubscribe();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Re), j(Am));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "cdkMonitorElementFocus", ""],
            ["", "cdkMonitorSubtreeFocus", ""],
          ],
          outputs: { cdkFocusChange: "cdkFocusChange" },
          exportAs: ["cdkMonitorFocus"],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  Eo = (function (n) {
    return (
      (n[(n.NONE = 0)] = "NONE"),
      (n[(n.BLACK_ON_WHITE = 1)] = "BLACK_ON_WHITE"),
      (n[(n.WHITE_ON_BLACK = 2)] = "WHITE_ON_BLACK"),
      n
    );
  })(Eo || {}),
  c1 = "cdk-high-contrast-black-on-white",
  d1 = "cdk-high-contrast-white-on-black",
  Om = "cdk-high-contrast-active",
  Rm = (() => {
    class n {
      constructor(e, t) {
        (this._platform = e),
          (this._document = t),
          (this._breakpointSubscription = W(s1)
            .observe("(forced-colors: active)")
            .subscribe(() => {
              this._hasCheckedHighContrastMode &&
                ((this._hasCheckedHighContrastMode = !1),
                this._applyBodyHighContrastModeCssClasses());
            }));
      }
      getHighContrastMode() {
        if (!this._platform.isBrowser) return Eo.NONE;
        let e = this._document.createElement("div");
        (e.style.backgroundColor = "rgb(1,2,3)"),
          (e.style.position = "absolute"),
          this._document.body.appendChild(e);
        let t = this._document.defaultView || window,
          r = t && t.getComputedStyle ? t.getComputedStyle(e) : null,
          o = ((r && r.backgroundColor) || "").replace(/ /g, "");
        switch ((e.remove(), o)) {
          case "rgb(0,0,0)":
          case "rgb(45,50,54)":
          case "rgb(32,32,32)":
            return Eo.WHITE_ON_BLACK;
          case "rgb(255,255,255)":
          case "rgb(255,250,239)":
            return Eo.BLACK_ON_WHITE;
        }
        return Eo.NONE;
      }
      ngOnDestroy() {
        this._breakpointSubscription.unsubscribe();
      }
      _applyBodyHighContrastModeCssClasses() {
        if (
          !this._hasCheckedHighContrastMode &&
          this._platform.isBrowser &&
          this._document.body
        ) {
          let e = this._document.body.classList;
          e.remove(Om, c1, d1), (this._hasCheckedHighContrastMode = !0);
          let t = this.getHighContrastMode();
          t === Eo.BLACK_ON_WHITE
            ? e.add(Om, c1)
            : t === Eo.WHITE_ON_BLACK && e.add(Om, d1);
        }
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(kt), Q(Oe));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  f1 = (() => {
    class n {
      constructor(e) {
        e._applyBodyHighContrastModeCssClasses();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Rm));
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [Pd] });
      }
    }
    return n;
  })();
var cO = new Ce("cdk-dir-doc", { providedIn: "root", factory: dO });
function dO() {
  return W(Oe);
}
var uO =
  /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
function hO(n) {
  let i = n?.toLowerCase() || "";
  return i === "auto" && typeof navigator < "u" && navigator?.language
    ? uO.test(navigator.language)
      ? "rtl"
      : "ltr"
    : i === "rtl"
    ? "rtl"
    : "ltr";
}
var Ta = (() => {
  class n {
    constructor(e) {
      if (((this.value = "ltr"), (this.change = new xe()), e)) {
        let t = e.body ? e.body.dir : null,
          r = e.documentElement ? e.documentElement.dir : null;
        this.value = hO(t || r || "ltr");
      }
    }
    ngOnDestroy() {
      this.change.complete();
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(Q(cO, 8));
      };
    }
    static {
      this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Yr = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
var fO = 20,
  _1 = (() => {
    class n {
      constructor(e, t, r) {
        (this._ngZone = e),
          (this._platform = t),
          (this._scrolled = new Ee()),
          (this._globalSubscription = null),
          (this._scrolledCount = 0),
          (this.scrollContainers = new Map()),
          (this._document = r);
      }
      register(e) {
        this.scrollContainers.has(e) ||
          this.scrollContainers.set(
            e,
            e.elementScrolled().subscribe(() => this._scrolled.next(e))
          );
      }
      deregister(e) {
        let t = this.scrollContainers.get(e);
        t && (t.unsubscribe(), this.scrollContainers.delete(e));
      }
      scrolled(e = fO) {
        return this._platform.isBrowser
          ? new jn((t) => {
              this._globalSubscription || this._addGlobalListener();
              let r =
                e > 0
                  ? this._scrolled.pipe(Wu(e)).subscribe(t)
                  : this._scrolled.subscribe(t);
              return (
                this._scrolledCount++,
                () => {
                  r.unsubscribe(),
                    this._scrolledCount--,
                    this._scrolledCount || this._removeGlobalListener();
                }
              );
            })
          : fe();
      }
      ngOnDestroy() {
        this._removeGlobalListener(),
          this.scrollContainers.forEach((e, t) => this.deregister(t)),
          this._scrolled.complete();
      }
      ancestorScrolled(e, t) {
        let r = this.getAncestorScrollContainers(e);
        return this.scrolled(t).pipe(St((o) => !o || r.indexOf(o) > -1));
      }
      getAncestorScrollContainers(e) {
        let t = [];
        return (
          this.scrollContainers.forEach((r, o) => {
            this._scrollableContainsElement(o, e) && t.push(o);
          }),
          t
        );
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _scrollableContainsElement(e, t) {
        let r = xr(t),
          o = e.getElementRef().nativeElement;
        do if (r == o) return !0;
        while ((r = r.parentElement));
        return !1;
      }
      _addGlobalListener() {
        this._globalSubscription = this._ngZone.runOutsideAngular(() => {
          let e = this._getWindow();
          return yn(e.document, "scroll").subscribe(() =>
            this._scrolled.next()
          );
        });
      }
      _removeGlobalListener() {
        this._globalSubscription &&
          (this._globalSubscription.unsubscribe(),
          (this._globalSubscription = null));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Me), Q(kt), Q(Oe, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var gO = 20,
  Fm = (() => {
    class n {
      constructor(e, t, r) {
        (this._platform = e),
          (this._change = new Ee()),
          (this._changeListener = (o) => {
            this._change.next(o);
          }),
          (this._document = r),
          t.runOutsideAngular(() => {
            if (e.isBrowser) {
              let o = this._getWindow();
              o.addEventListener("resize", this._changeListener),
                o.addEventListener("orientationchange", this._changeListener);
            }
            this.change().subscribe(() => (this._viewportSize = null));
          });
      }
      ngOnDestroy() {
        if (this._platform.isBrowser) {
          let e = this._getWindow();
          e.removeEventListener("resize", this._changeListener),
            e.removeEventListener("orientationchange", this._changeListener);
        }
        this._change.complete();
      }
      getViewportSize() {
        this._viewportSize || this._updateViewportSize();
        let e = {
          width: this._viewportSize.width,
          height: this._viewportSize.height,
        };
        return this._platform.isBrowser || (this._viewportSize = null), e;
      }
      getViewportRect() {
        let e = this.getViewportScrollPosition(),
          { width: t, height: r } = this.getViewportSize();
        return {
          top: e.top,
          left: e.left,
          bottom: e.top + r,
          right: e.left + t,
          height: r,
          width: t,
        };
      }
      getViewportScrollPosition() {
        if (!this._platform.isBrowser) return { top: 0, left: 0 };
        let e = this._document,
          t = this._getWindow(),
          r = e.documentElement,
          o = r.getBoundingClientRect(),
          a = -o.top || e.body.scrollTop || t.scrollY || r.scrollTop || 0,
          d = -o.left || e.body.scrollLeft || t.scrollX || r.scrollLeft || 0;
        return { top: a, left: d };
      }
      change(e = gO) {
        return e > 0 ? this._change.pipe(Wu(e)) : this._change;
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _updateViewportSize() {
        let e = this._getWindow();
        this._viewportSize = this._platform.isBrowser
          ? { width: e.innerWidth, height: e.innerHeight }
          : { width: 0, height: 0 };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(kt), Q(Me), Q(Oe, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var Rd = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({});
      }
    }
    return n;
  })(),
  Nm = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [Yr, Rd, Yr, Rd] });
      }
    }
    return n;
  })();
var ul = class {
    attach(i) {
      return (this._attachedHost = i), i.attach(this);
    }
    detach() {
      let i = this._attachedHost;
      i != null && ((this._attachedHost = null), i.detach());
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(i) {
      this._attachedHost = i;
    }
  },
  hl = class extends ul {
    constructor(i, e, t, r, o) {
      super(),
        (this.component = i),
        (this.viewContainerRef = e),
        (this.injector = t),
        (this.componentFactoryResolver = r),
        (this.projectableNodes = o);
    }
  },
  pl = class extends ul {
    constructor(i, e, t, r) {
      super(),
        (this.templateRef = i),
        (this.viewContainerRef = e),
        (this.context = t),
        (this.injector = r);
    }
    get origin() {
      return this.templateRef.elementRef;
    }
    attach(i, e = this.context) {
      return (this.context = e), super.attach(i);
    }
    detach() {
      return (this.context = void 0), super.detach();
    }
  },
  Lm = class extends ul {
    constructor(i) {
      super(), (this.element = i instanceof Re ? i.nativeElement : i);
    }
  },
  Fd = class {
    constructor() {
      (this._isDisposed = !1), (this.attachDomPortal = null);
    }
    hasAttached() {
      return !!this._attachedPortal;
    }
    attach(i) {
      if (i instanceof hl)
        return (this._attachedPortal = i), this.attachComponentPortal(i);
      if (i instanceof pl)
        return (this._attachedPortal = i), this.attachTemplatePortal(i);
      if (this.attachDomPortal && i instanceof Lm)
        return (this._attachedPortal = i), this.attachDomPortal(i);
    }
    detach() {
      this._attachedPortal &&
        (this._attachedPortal.setAttachedHost(null),
        (this._attachedPortal = null)),
        this._invokeDisposeFn();
    }
    dispose() {
      this.hasAttached() && this.detach(),
        this._invokeDisposeFn(),
        (this._isDisposed = !0);
    }
    setDisposeFn(i) {
      this._disposeFn = i;
    }
    _invokeDisposeFn() {
      this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
    }
  };
var Nd = class extends Fd {
  constructor(i, e, t, r, o) {
    super(),
      (this.outletElement = i),
      (this._componentFactoryResolver = e),
      (this._appRef = t),
      (this._defaultInjector = r),
      (this.attachDomPortal = (a) => {
        this._document;
        let d = a.element;
        d.parentNode;
        let u = this._document.createComment("dom-portal");
        d.parentNode.insertBefore(u, d),
          this.outletElement.appendChild(d),
          (this._attachedPortal = a),
          super.setDisposeFn(() => {
            u.parentNode && u.parentNode.replaceChild(d, u);
          });
      }),
      (this._document = o);
  }
  attachComponentPortal(i) {
    let t = (
        i.componentFactoryResolver || this._componentFactoryResolver
      ).resolveComponentFactory(i.component),
      r;
    return (
      i.viewContainerRef
        ? ((r = i.viewContainerRef.createComponent(
            t,
            i.viewContainerRef.length,
            i.injector || i.viewContainerRef.injector,
            i.projectableNodes || void 0
          )),
          this.setDisposeFn(() => r.destroy()))
        : ((r = t.create(i.injector || this._defaultInjector || Mt.NULL)),
          this._appRef.attachView(r.hostView),
          this.setDisposeFn(() => {
            this._appRef.viewCount > 0 && this._appRef.detachView(r.hostView),
              r.destroy();
          })),
      this.outletElement.appendChild(this._getComponentRootNode(r)),
      (this._attachedPortal = i),
      r
    );
  }
  attachTemplatePortal(i) {
    let e = i.viewContainerRef,
      t = e.createEmbeddedView(i.templateRef, i.context, {
        injector: i.injector,
      });
    return (
      t.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
      t.detectChanges(),
      this.setDisposeFn(() => {
        let r = e.indexOf(t);
        r !== -1 && e.remove(r);
      }),
      (this._attachedPortal = i),
      t
    );
  }
  dispose() {
    super.dispose(), this.outletElement.remove();
  }
  _getComponentRootNode(i) {
    return i.hostView.rootNodes[0];
  }
};
var Vm = (() => {
  class n extends Fd {
    constructor(e, t, r) {
      super(),
        (this._componentFactoryResolver = e),
        (this._viewContainerRef = t),
        (this._isInitialized = !1),
        (this.attached = new xe()),
        (this.attachDomPortal = (o) => {
          this._document;
          let a = o.element;
          a.parentNode;
          let d = this._document.createComment("dom-portal");
          o.setAttachedHost(this),
            a.parentNode.insertBefore(d, a),
            this._getRootNode().appendChild(a),
            (this._attachedPortal = o),
            super.setDisposeFn(() => {
              d.parentNode && d.parentNode.replaceChild(a, d);
            });
        }),
        (this._document = r);
    }
    get portal() {
      return this._attachedPortal;
    }
    set portal(e) {
      (this.hasAttached() && !e && !this._isInitialized) ||
        (this.hasAttached() && super.detach(),
        e && super.attach(e),
        (this._attachedPortal = e || null));
    }
    get attachedRef() {
      return this._attachedRef;
    }
    ngOnInit() {
      this._isInitialized = !0;
    }
    ngOnDestroy() {
      super.dispose(), (this._attachedRef = this._attachedPortal = null);
    }
    attachComponentPortal(e) {
      e.setAttachedHost(this);
      let t =
          e.viewContainerRef != null
            ? e.viewContainerRef
            : this._viewContainerRef,
        o = (
          e.componentFactoryResolver || this._componentFactoryResolver
        ).resolveComponentFactory(e.component),
        a = t.createComponent(
          o,
          t.length,
          e.injector || t.injector,
          e.projectableNodes || void 0
        );
      return (
        t !== this._viewContainerRef &&
          this._getRootNode().appendChild(a.hostView.rootNodes[0]),
        super.setDisposeFn(() => a.destroy()),
        (this._attachedPortal = e),
        (this._attachedRef = a),
        this.attached.emit(a),
        a
      );
    }
    attachTemplatePortal(e) {
      e.setAttachedHost(this);
      let t = this._viewContainerRef.createEmbeddedView(
        e.templateRef,
        e.context,
        { injector: e.injector }
      );
      return (
        super.setDisposeFn(() => this._viewContainerRef.clear()),
        (this._attachedPortal = e),
        (this._attachedRef = t),
        this.attached.emit(t),
        t
      );
    }
    _getRootNode() {
      let e = this._viewContainerRef.element.nativeElement;
      return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(j(ao), j(Wi), j(Oe));
      };
    }
    static {
      this.ɵdir = Ie({
        type: n,
        selectors: [["", "cdkPortalOutlet", ""]],
        inputs: { portal: [0, "cdkPortalOutlet", "portal"] },
        outputs: { attached: "attached" },
        exportAs: ["cdkPortalOutlet"],
        standalone: !0,
        features: [Ze],
      });
    }
  }
  return n;
})();
var Ld = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
var b1 = i1(),
  Bm = class {
    constructor(i, e) {
      (this._viewportRuler = i),
        (this._previousHTMLStyles = { top: "", left: "" }),
        (this._isEnabled = !1),
        (this._document = e);
    }
    attach() {}
    enable() {
      if (this._canBeEnabled()) {
        let i = this._document.documentElement;
        (this._previousScrollPosition =
          this._viewportRuler.getViewportScrollPosition()),
          (this._previousHTMLStyles.left = i.style.left || ""),
          (this._previousHTMLStyles.top = i.style.top || ""),
          (i.style.left = Zt(-this._previousScrollPosition.left)),
          (i.style.top = Zt(-this._previousScrollPosition.top)),
          i.classList.add("cdk-global-scrollblock"),
          (this._isEnabled = !0);
      }
    }
    disable() {
      if (this._isEnabled) {
        let i = this._document.documentElement,
          e = this._document.body,
          t = i.style,
          r = e.style,
          o = t.scrollBehavior || "",
          a = r.scrollBehavior || "";
        (this._isEnabled = !1),
          (t.left = this._previousHTMLStyles.left),
          (t.top = this._previousHTMLStyles.top),
          i.classList.remove("cdk-global-scrollblock"),
          b1 && (t.scrollBehavior = r.scrollBehavior = "auto"),
          window.scroll(
            this._previousScrollPosition.left,
            this._previousScrollPosition.top
          ),
          b1 && ((t.scrollBehavior = o), (r.scrollBehavior = a));
      }
    }
    _canBeEnabled() {
      if (
        this._document.documentElement.classList.contains(
          "cdk-global-scrollblock"
        ) ||
        this._isEnabled
      )
        return !1;
      let e = this._document.body,
        t = this._viewportRuler.getViewportSize();
      return e.scrollHeight > t.height || e.scrollWidth > t.width;
    }
  };
var jm = class {
    constructor(i, e, t, r) {
      (this._scrollDispatcher = i),
        (this._ngZone = e),
        (this._viewportRuler = t),
        (this._config = r),
        (this._scrollSubscription = null),
        (this._detach = () => {
          this.disable(),
            this._overlayRef.hasAttached() &&
              this._ngZone.run(() => this._overlayRef.detach());
        });
    }
    attach(i) {
      this._overlayRef, (this._overlayRef = i);
    }
    enable() {
      if (this._scrollSubscription) return;
      let i = this._scrollDispatcher
        .scrolled(0)
        .pipe(
          St(
            (e) =>
              !e ||
              !this._overlayRef.overlayElement.contains(
                e.getElementRef().nativeElement
              )
          )
        );
      this._config && this._config.threshold && this._config.threshold > 1
        ? ((this._initialScrollPosition =
            this._viewportRuler.getViewportScrollPosition().top),
          (this._scrollSubscription = i.subscribe(() => {
            let e = this._viewportRuler.getViewportScrollPosition().top;
            Math.abs(e - this._initialScrollPosition) > this._config.threshold
              ? this._detach()
              : this._overlayRef.updatePosition();
          })))
        : (this._scrollSubscription = i.subscribe(this._detach));
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  Vd = class {
    enable() {}
    disable() {}
    attach() {}
  };
function Hm(n, i) {
  return i.some((e) => {
    let t = n.bottom < e.top,
      r = n.top > e.bottom,
      o = n.right < e.left,
      a = n.left > e.right;
    return t || r || o || a;
  });
}
function v1(n, i) {
  return i.some((e) => {
    let t = n.top < e.top,
      r = n.bottom > e.bottom,
      o = n.left < e.left,
      a = n.right > e.right;
    return t || r || o || a;
  });
}
var Um = class {
    constructor(i, e, t, r) {
      (this._scrollDispatcher = i),
        (this._viewportRuler = e),
        (this._ngZone = t),
        (this._config = r),
        (this._scrollSubscription = null);
    }
    attach(i) {
      this._overlayRef, (this._overlayRef = i);
    }
    enable() {
      if (!this._scrollSubscription) {
        let i = this._config ? this._config.scrollThrottle : 0;
        this._scrollSubscription = this._scrollDispatcher
          .scrolled(i)
          .subscribe(() => {
            if (
              (this._overlayRef.updatePosition(),
              this._config && this._config.autoClose)
            ) {
              let e = this._overlayRef.overlayElement.getBoundingClientRect(),
                { width: t, height: r } = this._viewportRuler.getViewportSize();
              Hm(e, [
                { width: t, height: r, bottom: r, right: t, top: 0, left: 0 },
              ]) &&
                (this.disable(),
                this._ngZone.run(() => this._overlayRef.detach()));
            }
          });
      }
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  bO = (() => {
    class n {
      constructor(e, t, r, o) {
        (this._scrollDispatcher = e),
          (this._viewportRuler = t),
          (this._ngZone = r),
          (this.noop = () => new Vd()),
          (this.close = (a) =>
            new jm(
              this._scrollDispatcher,
              this._ngZone,
              this._viewportRuler,
              a
            )),
          (this.block = () => new Bm(this._viewportRuler, this._document)),
          (this.reposition = (a) =>
            new Um(
              this._scrollDispatcher,
              this._viewportRuler,
              this._ngZone,
              a
            )),
          (this._document = o);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(_1), Q(Fm), Q(Me), Q(Oe));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Bd = class {
    constructor(i) {
      if (
        ((this.scrollStrategy = new Vd()),
        (this.panelClass = ""),
        (this.hasBackdrop = !1),
        (this.backdropClass = "cdk-overlay-dark-backdrop"),
        (this.disposeOnNavigation = !1),
        i)
      ) {
        let e = Object.keys(i);
        for (let t of e) i[t] !== void 0 && (this[t] = i[t]);
      }
    }
  };
var zm = class {
  constructor(i, e) {
    (this.connectionPair = i), (this.scrollableViewProperties = e);
  }
};
var D1 = (() => {
    class n {
      constructor(e) {
        (this._attachedOverlays = []), (this._document = e);
      }
      ngOnDestroy() {
        this.detach();
      }
      add(e) {
        this.remove(e), this._attachedOverlays.push(e);
      }
      remove(e) {
        let t = this._attachedOverlays.indexOf(e);
        t > -1 && this._attachedOverlays.splice(t, 1),
          this._attachedOverlays.length === 0 && this.detach();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Oe));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  vO = (() => {
    class n extends D1 {
      constructor(e, t) {
        super(e),
          (this._ngZone = t),
          (this._keydownListener = (r) => {
            let o = this._attachedOverlays;
            for (let a = o.length - 1; a > -1; a--)
              if (o[a]._keydownEvents.observers.length > 0) {
                let d = o[a]._keydownEvents;
                this._ngZone ? this._ngZone.run(() => d.next(r)) : d.next(r);
                break;
              }
          });
      }
      add(e) {
        super.add(e),
          this._isAttached ||
            (this._ngZone
              ? this._ngZone.runOutsideAngular(() =>
                  this._document.body.addEventListener(
                    "keydown",
                    this._keydownListener
                  )
                )
              : this._document.body.addEventListener(
                  "keydown",
                  this._keydownListener
                ),
            (this._isAttached = !0));
      }
      detach() {
        this._isAttached &&
          (this._document.body.removeEventListener(
            "keydown",
            this._keydownListener
          ),
          (this._isAttached = !1));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Oe), Q(Me, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  yO = (() => {
    class n extends D1 {
      constructor(e, t, r) {
        super(e),
          (this._platform = t),
          (this._ngZone = r),
          (this._cursorStyleIsSet = !1),
          (this._pointerDownListener = (o) => {
            this._pointerDownEventTarget = mn(o);
          }),
          (this._clickListener = (o) => {
            let a = mn(o),
              d =
                o.type === "click" && this._pointerDownEventTarget
                  ? this._pointerDownEventTarget
                  : a;
            this._pointerDownEventTarget = null;
            let u = this._attachedOverlays.slice();
            for (let f = u.length - 1; f > -1; f--) {
              let v = u[f];
              if (
                v._outsidePointerEvents.observers.length < 1 ||
                !v.hasAttached()
              )
                continue;
              if (y1(v.overlayElement, a) || y1(v.overlayElement, d)) break;
              let S = v._outsidePointerEvents;
              this._ngZone ? this._ngZone.run(() => S.next(o)) : S.next(o);
            }
          });
      }
      add(e) {
        if ((super.add(e), !this._isAttached)) {
          let t = this._document.body;
          this._ngZone
            ? this._ngZone.runOutsideAngular(() => this._addEventListeners(t))
            : this._addEventListeners(t),
            this._platform.IOS &&
              !this._cursorStyleIsSet &&
              ((this._cursorOriginalValue = t.style.cursor),
              (t.style.cursor = "pointer"),
              (this._cursorStyleIsSet = !0)),
            (this._isAttached = !0);
        }
      }
      detach() {
        if (this._isAttached) {
          let e = this._document.body;
          e.removeEventListener("pointerdown", this._pointerDownListener, !0),
            e.removeEventListener("click", this._clickListener, !0),
            e.removeEventListener("auxclick", this._clickListener, !0),
            e.removeEventListener("contextmenu", this._clickListener, !0),
            this._platform.IOS &&
              this._cursorStyleIsSet &&
              ((e.style.cursor = this._cursorOriginalValue),
              (this._cursorStyleIsSet = !1)),
            (this._isAttached = !1);
        }
      }
      _addEventListeners(e) {
        e.addEventListener("pointerdown", this._pointerDownListener, !0),
          e.addEventListener("click", this._clickListener, !0),
          e.addEventListener("auxclick", this._clickListener, !0),
          e.addEventListener("contextmenu", this._clickListener, !0);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Oe), Q(kt), Q(Me, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function y1(n, i) {
  let e = typeof ShadowRoot < "u" && ShadowRoot,
    t = i;
  for (; t; ) {
    if (t === n) return !0;
    t = e && t instanceof ShadowRoot ? t.host : t.parentNode;
  }
  return !1;
}
var M1 = (() => {
    class n {
      constructor(e, t) {
        (this._platform = t), (this._document = e);
      }
      ngOnDestroy() {
        this._containerElement?.remove();
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = "cdk-overlay-container";
        if (this._platform.isBrowser || dl()) {
          let r = this._document.querySelectorAll(
            `.${e}[platform="server"], .${e}[platform="test"]`
          );
          for (let o = 0; o < r.length; o++) r[o].remove();
        }
        let t = this._document.createElement("div");
        t.classList.add(e),
          dl()
            ? t.setAttribute("platform", "test")
            : this._platform.isBrowser || t.setAttribute("platform", "server"),
          this._document.body.appendChild(t),
          (this._containerElement = t);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Oe), Q(kt));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  $m = class {
    constructor(i, e, t, r, o, a, d, u, f, v = !1, S) {
      (this._portalOutlet = i),
        (this._host = e),
        (this._pane = t),
        (this._config = r),
        (this._ngZone = o),
        (this._keyboardDispatcher = a),
        (this._document = d),
        (this._location = u),
        (this._outsideClickDispatcher = f),
        (this._animationsDisabled = v),
        (this._injector = S),
        (this._backdropElement = null),
        (this._backdropClick = new Ee()),
        (this._attachments = new Ee()),
        (this._detachments = new Ee()),
        (this._locationChanges = zi.EMPTY),
        (this._backdropClickHandler = (T) => this._backdropClick.next(T)),
        (this._backdropTransitionendHandler = (T) => {
          this._disposeBackdrop(T.target);
        }),
        (this._keydownEvents = new Ee()),
        (this._outsidePointerEvents = new Ee()),
        (this._renders = new Ee()),
        r.scrollStrategy &&
          ((this._scrollStrategy = r.scrollStrategy),
          this._scrollStrategy.attach(this)),
        (this._positionStrategy = r.positionStrategy),
        (this._afterRenderRef = Sn(() =>
          ih(
            () => {
              this._renders.next();
            },
            { injector: this._injector }
          )
        ));
    }
    get overlayElement() {
      return this._pane;
    }
    get backdropElement() {
      return this._backdropElement;
    }
    get hostElement() {
      return this._host;
    }
    attach(i) {
      !this._host.parentElement &&
        this._previousHostParent &&
        this._previousHostParent.appendChild(this._host);
      let e = this._portalOutlet.attach(i);
      return (
        this._positionStrategy && this._positionStrategy.attach(this),
        this._updateStackingOrder(),
        this._updateElementSize(),
        this._updateElementDirection(),
        this._scrollStrategy && this._scrollStrategy.enable(),
        this._afterNextRenderRef?.destroy(),
        (this._afterNextRenderRef = xn(
          () => {
            this.hasAttached() && this.updatePosition();
          },
          { injector: this._injector }
        )),
        this._togglePointerEvents(!0),
        this._config.hasBackdrop && this._attachBackdrop(),
        this._config.panelClass &&
          this._toggleClasses(this._pane, this._config.panelClass, !0),
        this._attachments.next(),
        this._keyboardDispatcher.add(this),
        this._config.disposeOnNavigation &&
          (this._locationChanges = this._location.subscribe(() =>
            this.dispose()
          )),
        this._outsideClickDispatcher.add(this),
        typeof e?.onDestroy == "function" &&
          e.onDestroy(() => {
            this.hasAttached() &&
              this._ngZone.runOutsideAngular(() =>
                Promise.resolve().then(() => this.detach())
              );
          }),
        e
      );
    }
    detach() {
      if (!this.hasAttached()) return;
      this.detachBackdrop(),
        this._togglePointerEvents(!1),
        this._positionStrategy &&
          this._positionStrategy.detach &&
          this._positionStrategy.detach(),
        this._scrollStrategy && this._scrollStrategy.disable();
      let i = this._portalOutlet.detach();
      return (
        this._detachments.next(),
        this._keyboardDispatcher.remove(this),
        this._detachContentWhenEmpty(),
        this._locationChanges.unsubscribe(),
        this._outsideClickDispatcher.remove(this),
        i
      );
    }
    dispose() {
      let i = this.hasAttached();
      this._positionStrategy && this._positionStrategy.dispose(),
        this._disposeScrollStrategy(),
        this._disposeBackdrop(this._backdropElement),
        this._locationChanges.unsubscribe(),
        this._keyboardDispatcher.remove(this),
        this._portalOutlet.dispose(),
        this._attachments.complete(),
        this._backdropClick.complete(),
        this._keydownEvents.complete(),
        this._outsidePointerEvents.complete(),
        this._outsideClickDispatcher.remove(this),
        this._host?.remove(),
        this._afterNextRenderRef?.destroy(),
        (this._previousHostParent = this._pane = this._host = null),
        i && this._detachments.next(),
        this._detachments.complete(),
        this._afterRenderRef.destroy(),
        this._renders.complete();
    }
    hasAttached() {
      return this._portalOutlet.hasAttached();
    }
    backdropClick() {
      return this._backdropClick;
    }
    attachments() {
      return this._attachments;
    }
    detachments() {
      return this._detachments;
    }
    keydownEvents() {
      return this._keydownEvents;
    }
    outsidePointerEvents() {
      return this._outsidePointerEvents;
    }
    getConfig() {
      return this._config;
    }
    updatePosition() {
      this._positionStrategy && this._positionStrategy.apply();
    }
    updatePositionStrategy(i) {
      i !== this._positionStrategy &&
        (this._positionStrategy && this._positionStrategy.dispose(),
        (this._positionStrategy = i),
        this.hasAttached() && (i.attach(this), this.updatePosition()));
    }
    updateSize(i) {
      (this._config = G(G({}, this._config), i)), this._updateElementSize();
    }
    setDirection(i) {
      (this._config = Te(G({}, this._config), { direction: i })),
        this._updateElementDirection();
    }
    addPanelClass(i) {
      this._pane && this._toggleClasses(this._pane, i, !0);
    }
    removePanelClass(i) {
      this._pane && this._toggleClasses(this._pane, i, !1);
    }
    getDirection() {
      let i = this._config.direction;
      return i ? (typeof i == "string" ? i : i.value) : "ltr";
    }
    updateScrollStrategy(i) {
      i !== this._scrollStrategy &&
        (this._disposeScrollStrategy(),
        (this._scrollStrategy = i),
        this.hasAttached() && (i.attach(this), i.enable()));
    }
    _updateElementDirection() {
      this._host.setAttribute("dir", this.getDirection());
    }
    _updateElementSize() {
      if (!this._pane) return;
      let i = this._pane.style;
      (i.width = Zt(this._config.width)),
        (i.height = Zt(this._config.height)),
        (i.minWidth = Zt(this._config.minWidth)),
        (i.minHeight = Zt(this._config.minHeight)),
        (i.maxWidth = Zt(this._config.maxWidth)),
        (i.maxHeight = Zt(this._config.maxHeight));
    }
    _togglePointerEvents(i) {
      this._pane.style.pointerEvents = i ? "" : "none";
    }
    _attachBackdrop() {
      let i = "cdk-overlay-backdrop-showing";
      (this._backdropElement = this._document.createElement("div")),
        this._backdropElement.classList.add("cdk-overlay-backdrop"),
        this._animationsDisabled &&
          this._backdropElement.classList.add(
            "cdk-overlay-backdrop-noop-animation"
          ),
        this._config.backdropClass &&
          this._toggleClasses(
            this._backdropElement,
            this._config.backdropClass,
            !0
          ),
        this._host.parentElement.insertBefore(
          this._backdropElement,
          this._host
        ),
        this._backdropElement.addEventListener(
          "click",
          this._backdropClickHandler
        ),
        !this._animationsDisabled && typeof requestAnimationFrame < "u"
          ? this._ngZone.runOutsideAngular(() => {
              requestAnimationFrame(() => {
                this._backdropElement && this._backdropElement.classList.add(i);
              });
            })
          : this._backdropElement.classList.add(i);
    }
    _updateStackingOrder() {
      this._host.nextSibling && this._host.parentNode.appendChild(this._host);
    }
    detachBackdrop() {
      let i = this._backdropElement;
      if (i) {
        if (this._animationsDisabled) {
          this._disposeBackdrop(i);
          return;
        }
        i.classList.remove("cdk-overlay-backdrop-showing"),
          this._ngZone.runOutsideAngular(() => {
            i.addEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            );
          }),
          (i.style.pointerEvents = "none"),
          (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
            setTimeout(() => {
              this._disposeBackdrop(i);
            }, 500)
          ));
      }
    }
    _toggleClasses(i, e, t) {
      let r = Da(e || []).filter((o) => !!o);
      r.length && (t ? i.classList.add(...r) : i.classList.remove(...r));
    }
    _detachContentWhenEmpty() {
      this._ngZone.runOutsideAngular(() => {
        let i = this._renders
          .pipe(zt($o(this._attachments, this._detachments)))
          .subscribe(() => {
            (!this._pane || !this._host || this._pane.children.length === 0) &&
              (this._pane &&
                this._config.panelClass &&
                this._toggleClasses(this._pane, this._config.panelClass, !1),
              this._host &&
                this._host.parentElement &&
                ((this._previousHostParent = this._host.parentElement),
                this._host.remove()),
              i.unsubscribe());
          });
      });
    }
    _disposeScrollStrategy() {
      let i = this._scrollStrategy;
      i && (i.disable(), i.detach && i.detach());
    }
    _disposeBackdrop(i) {
      i &&
        (i.removeEventListener("click", this._backdropClickHandler),
        i.removeEventListener(
          "transitionend",
          this._backdropTransitionendHandler
        ),
        i.remove(),
        this._backdropElement === i && (this._backdropElement = null)),
        this._backdropTimeout &&
          (clearTimeout(this._backdropTimeout),
          (this._backdropTimeout = void 0));
    }
  },
  x1 = "cdk-overlay-connected-position-bounding-box",
  xO = /([A-Za-z%]+)$/,
  jd = class {
    get positions() {
      return this._preferredPositions;
    }
    constructor(i, e, t, r, o) {
      (this._viewportRuler = e),
        (this._document = t),
        (this._platform = r),
        (this._overlayContainer = o),
        (this._lastBoundingBoxSize = { width: 0, height: 0 }),
        (this._isPushed = !1),
        (this._canPush = !0),
        (this._growAfterOpen = !1),
        (this._hasFlexibleDimensions = !0),
        (this._positionLocked = !1),
        (this._viewportMargin = 0),
        (this._scrollables = []),
        (this._preferredPositions = []),
        (this._positionChanges = new Ee()),
        (this._resizeSubscription = zi.EMPTY),
        (this._offsetX = 0),
        (this._offsetY = 0),
        (this._appliedPanelClasses = []),
        (this.positionChanges = this._positionChanges),
        this.setOrigin(i);
    }
    attach(i) {
      this._overlayRef && this._overlayRef,
        this._validatePositions(),
        i.hostElement.classList.add(x1),
        (this._overlayRef = i),
        (this._boundingBox = i.hostElement),
        (this._pane = i.overlayElement),
        (this._isDisposed = !1),
        (this._isInitialRender = !0),
        (this._lastPosition = null),
        this._resizeSubscription.unsubscribe(),
        (this._resizeSubscription = this._viewportRuler
          .change()
          .subscribe(() => {
            (this._isInitialRender = !0), this.apply();
          }));
    }
    apply() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      if (
        !this._isInitialRender &&
        this._positionLocked &&
        this._lastPosition
      ) {
        this.reapplyLastPosition();
        return;
      }
      this._clearPanelClasses(),
        this._resetOverlayElementStyles(),
        this._resetBoundingBoxStyles(),
        (this._viewportRect = this._getNarrowedViewportRect()),
        (this._originRect = this._getOriginRect()),
        (this._overlayRect = this._pane.getBoundingClientRect()),
        (this._containerRect = this._overlayContainer
          .getContainerElement()
          .getBoundingClientRect());
      let i = this._originRect,
        e = this._overlayRect,
        t = this._viewportRect,
        r = this._containerRect,
        o = [],
        a;
      for (let d of this._preferredPositions) {
        let u = this._getOriginPoint(i, r, d),
          f = this._getOverlayPoint(u, e, d),
          v = this._getOverlayFit(f, e, t, d);
        if (v.isCompletelyWithinViewport) {
          (this._isPushed = !1), this._applyPosition(d, u);
          return;
        }
        if (this._canFitWithFlexibleDimensions(v, f, t)) {
          o.push({
            position: d,
            origin: u,
            overlayRect: e,
            boundingBoxRect: this._calculateBoundingBoxRect(u, d),
          });
          continue;
        }
        (!a || a.overlayFit.visibleArea < v.visibleArea) &&
          (a = {
            overlayFit: v,
            overlayPoint: f,
            originPoint: u,
            position: d,
            overlayRect: e,
          });
      }
      if (o.length) {
        let d = null,
          u = -1;
        for (let f of o) {
          let v =
            f.boundingBoxRect.width *
            f.boundingBoxRect.height *
            (f.position.weight || 1);
          v > u && ((u = v), (d = f));
        }
        (this._isPushed = !1), this._applyPosition(d.position, d.origin);
        return;
      }
      if (this._canPush) {
        (this._isPushed = !0), this._applyPosition(a.position, a.originPoint);
        return;
      }
      this._applyPosition(a.position, a.originPoint);
    }
    detach() {
      this._clearPanelClasses(),
        (this._lastPosition = null),
        (this._previousPushAmount = null),
        this._resizeSubscription.unsubscribe();
    }
    dispose() {
      this._isDisposed ||
        (this._boundingBox &&
          Oo(this._boundingBox.style, {
            top: "",
            left: "",
            right: "",
            bottom: "",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          }),
        this._pane && this._resetOverlayElementStyles(),
        this._overlayRef && this._overlayRef.hostElement.classList.remove(x1),
        this.detach(),
        this._positionChanges.complete(),
        (this._overlayRef = this._boundingBox = null),
        (this._isDisposed = !0));
    }
    reapplyLastPosition() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      let i = this._lastPosition;
      if (i) {
        (this._originRect = this._getOriginRect()),
          (this._overlayRect = this._pane.getBoundingClientRect()),
          (this._viewportRect = this._getNarrowedViewportRect()),
          (this._containerRect = this._overlayContainer
            .getContainerElement()
            .getBoundingClientRect());
        let e = this._getOriginPoint(this._originRect, this._containerRect, i);
        this._applyPosition(i, e);
      } else this.apply();
    }
    withScrollableContainers(i) {
      return (this._scrollables = i), this;
    }
    withPositions(i) {
      return (
        (this._preferredPositions = i),
        i.indexOf(this._lastPosition) === -1 && (this._lastPosition = null),
        this._validatePositions(),
        this
      );
    }
    withViewportMargin(i) {
      return (this._viewportMargin = i), this;
    }
    withFlexibleDimensions(i = !0) {
      return (this._hasFlexibleDimensions = i), this;
    }
    withGrowAfterOpen(i = !0) {
      return (this._growAfterOpen = i), this;
    }
    withPush(i = !0) {
      return (this._canPush = i), this;
    }
    withLockedPosition(i = !0) {
      return (this._positionLocked = i), this;
    }
    setOrigin(i) {
      return (this._origin = i), this;
    }
    withDefaultOffsetX(i) {
      return (this._offsetX = i), this;
    }
    withDefaultOffsetY(i) {
      return (this._offsetY = i), this;
    }
    withTransformOriginOn(i) {
      return (this._transformOriginSelector = i), this;
    }
    _getOriginPoint(i, e, t) {
      let r;
      if (t.originX == "center") r = i.left + i.width / 2;
      else {
        let a = this._isRtl() ? i.right : i.left,
          d = this._isRtl() ? i.left : i.right;
        r = t.originX == "start" ? a : d;
      }
      e.left < 0 && (r -= e.left);
      let o;
      return (
        t.originY == "center"
          ? (o = i.top + i.height / 2)
          : (o = t.originY == "top" ? i.top : i.bottom),
        e.top < 0 && (o -= e.top),
        { x: r, y: o }
      );
    }
    _getOverlayPoint(i, e, t) {
      let r;
      t.overlayX == "center"
        ? (r = -e.width / 2)
        : t.overlayX === "start"
        ? (r = this._isRtl() ? -e.width : 0)
        : (r = this._isRtl() ? 0 : -e.width);
      let o;
      return (
        t.overlayY == "center"
          ? (o = -e.height / 2)
          : (o = t.overlayY == "top" ? 0 : -e.height),
        { x: i.x + r, y: i.y + o }
      );
    }
    _getOverlayFit(i, e, t, r) {
      let o = w1(e),
        { x: a, y: d } = i,
        u = this._getOffset(r, "x"),
        f = this._getOffset(r, "y");
      u && (a += u), f && (d += f);
      let v = 0 - a,
        S = a + o.width - t.width,
        T = 0 - d,
        M = d + o.height - t.height,
        I = this._subtractOverflows(o.width, v, S),
        L = this._subtractOverflows(o.height, T, M),
        E = I * L;
      return {
        visibleArea: E,
        isCompletelyWithinViewport: o.width * o.height === E,
        fitsInViewportVertically: L === o.height,
        fitsInViewportHorizontally: I == o.width,
      };
    }
    _canFitWithFlexibleDimensions(i, e, t) {
      if (this._hasFlexibleDimensions) {
        let r = t.bottom - e.y,
          o = t.right - e.x,
          a = C1(this._overlayRef.getConfig().minHeight),
          d = C1(this._overlayRef.getConfig().minWidth),
          u = i.fitsInViewportVertically || (a != null && a <= r),
          f = i.fitsInViewportHorizontally || (d != null && d <= o);
        return u && f;
      }
      return !1;
    }
    _pushOverlayOnScreen(i, e, t) {
      if (this._previousPushAmount && this._positionLocked)
        return {
          x: i.x + this._previousPushAmount.x,
          y: i.y + this._previousPushAmount.y,
        };
      let r = w1(e),
        o = this._viewportRect,
        a = Math.max(i.x + r.width - o.width, 0),
        d = Math.max(i.y + r.height - o.height, 0),
        u = Math.max(o.top - t.top - i.y, 0),
        f = Math.max(o.left - t.left - i.x, 0),
        v = 0,
        S = 0;
      return (
        r.width <= o.width
          ? (v = f || -a)
          : (v = i.x < this._viewportMargin ? o.left - t.left - i.x : 0),
        r.height <= o.height
          ? (S = u || -d)
          : (S = i.y < this._viewportMargin ? o.top - t.top - i.y : 0),
        (this._previousPushAmount = { x: v, y: S }),
        { x: i.x + v, y: i.y + S }
      );
    }
    _applyPosition(i, e) {
      if (
        (this._setTransformOrigin(i),
        this._setOverlayElementStyles(e, i),
        this._setBoundingBoxStyles(e, i),
        i.panelClass && this._addPanelClasses(i.panelClass),
        this._positionChanges.observers.length)
      ) {
        let t = this._getScrollVisibility();
        if (
          i !== this._lastPosition ||
          !this._lastScrollVisibility ||
          !CO(this._lastScrollVisibility, t)
        ) {
          let r = new zm(i, t);
          this._positionChanges.next(r);
        }
        this._lastScrollVisibility = t;
      }
      (this._lastPosition = i), (this._isInitialRender = !1);
    }
    _setTransformOrigin(i) {
      if (!this._transformOriginSelector) return;
      let e = this._boundingBox.querySelectorAll(this._transformOriginSelector),
        t,
        r = i.overlayY;
      i.overlayX === "center"
        ? (t = "center")
        : this._isRtl()
        ? (t = i.overlayX === "start" ? "right" : "left")
        : (t = i.overlayX === "start" ? "left" : "right");
      for (let o = 0; o < e.length; o++)
        e[o].style.transformOrigin = `${t} ${r}`;
    }
    _calculateBoundingBoxRect(i, e) {
      let t = this._viewportRect,
        r = this._isRtl(),
        o,
        a,
        d;
      if (e.overlayY === "top")
        (a = i.y), (o = t.height - a + this._viewportMargin);
      else if (e.overlayY === "bottom")
        (d = t.height - i.y + this._viewportMargin * 2),
          (o = t.height - d + this._viewportMargin);
      else {
        let M = Math.min(t.bottom - i.y + t.top, i.y),
          I = this._lastBoundingBoxSize.height;
        (o = M * 2),
          (a = i.y - M),
          o > I &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (a = i.y - I / 2);
      }
      let u = (e.overlayX === "start" && !r) || (e.overlayX === "end" && r),
        f = (e.overlayX === "end" && !r) || (e.overlayX === "start" && r),
        v,
        S,
        T;
      if (f)
        (T = t.width - i.x + this._viewportMargin * 2),
          (v = i.x - this._viewportMargin);
      else if (u) (S = i.x), (v = t.right - i.x);
      else {
        let M = Math.min(t.right - i.x + t.left, i.x),
          I = this._lastBoundingBoxSize.width;
        (v = M * 2),
          (S = i.x - M),
          v > I &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (S = i.x - I / 2);
      }
      return { top: a, left: S, bottom: d, right: T, width: v, height: o };
    }
    _setBoundingBoxStyles(i, e) {
      let t = this._calculateBoundingBoxRect(i, e);
      !this._isInitialRender &&
        !this._growAfterOpen &&
        ((t.height = Math.min(t.height, this._lastBoundingBoxSize.height)),
        (t.width = Math.min(t.width, this._lastBoundingBoxSize.width)));
      let r = {};
      if (this._hasExactPosition())
        (r.top = r.left = "0"),
          (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
          (r.width = r.height = "100%");
      else {
        let o = this._overlayRef.getConfig().maxHeight,
          a = this._overlayRef.getConfig().maxWidth;
        (r.height = Zt(t.height)),
          (r.top = Zt(t.top)),
          (r.bottom = Zt(t.bottom)),
          (r.width = Zt(t.width)),
          (r.left = Zt(t.left)),
          (r.right = Zt(t.right)),
          e.overlayX === "center"
            ? (r.alignItems = "center")
            : (r.alignItems = e.overlayX === "end" ? "flex-end" : "flex-start"),
          e.overlayY === "center"
            ? (r.justifyContent = "center")
            : (r.justifyContent =
                e.overlayY === "bottom" ? "flex-end" : "flex-start"),
          o && (r.maxHeight = Zt(o)),
          a && (r.maxWidth = Zt(a));
      }
      (this._lastBoundingBoxSize = t), Oo(this._boundingBox.style, r);
    }
    _resetBoundingBoxStyles() {
      Oo(this._boundingBox.style, {
        top: "0",
        left: "0",
        right: "0",
        bottom: "0",
        height: "",
        width: "",
        alignItems: "",
        justifyContent: "",
      });
    }
    _resetOverlayElementStyles() {
      Oo(this._pane.style, {
        top: "",
        left: "",
        bottom: "",
        right: "",
        position: "",
        transform: "",
      });
    }
    _setOverlayElementStyles(i, e) {
      let t = {},
        r = this._hasExactPosition(),
        o = this._hasFlexibleDimensions,
        a = this._overlayRef.getConfig();
      if (r) {
        let v = this._viewportRuler.getViewportScrollPosition();
        Oo(t, this._getExactOverlayY(e, i, v)),
          Oo(t, this._getExactOverlayX(e, i, v));
      } else t.position = "static";
      let d = "",
        u = this._getOffset(e, "x"),
        f = this._getOffset(e, "y");
      u && (d += `translateX(${u}px) `),
        f && (d += `translateY(${f}px)`),
        (t.transform = d.trim()),
        a.maxHeight &&
          (r ? (t.maxHeight = Zt(a.maxHeight)) : o && (t.maxHeight = "")),
        a.maxWidth &&
          (r ? (t.maxWidth = Zt(a.maxWidth)) : o && (t.maxWidth = "")),
        Oo(this._pane.style, t);
    }
    _getExactOverlayY(i, e, t) {
      let r = { top: "", bottom: "" },
        o = this._getOverlayPoint(e, this._overlayRect, i);
      if (
        (this._isPushed &&
          (o = this._pushOverlayOnScreen(o, this._overlayRect, t)),
        i.overlayY === "bottom")
      ) {
        let a = this._document.documentElement.clientHeight;
        r.bottom = `${a - (o.y + this._overlayRect.height)}px`;
      } else r.top = Zt(o.y);
      return r;
    }
    _getExactOverlayX(i, e, t) {
      let r = { left: "", right: "" },
        o = this._getOverlayPoint(e, this._overlayRect, i);
      this._isPushed &&
        (o = this._pushOverlayOnScreen(o, this._overlayRect, t));
      let a;
      if (
        (this._isRtl()
          ? (a = i.overlayX === "end" ? "left" : "right")
          : (a = i.overlayX === "end" ? "right" : "left"),
        a === "right")
      ) {
        let d = this._document.documentElement.clientWidth;
        r.right = `${d - (o.x + this._overlayRect.width)}px`;
      } else r.left = Zt(o.x);
      return r;
    }
    _getScrollVisibility() {
      let i = this._getOriginRect(),
        e = this._pane.getBoundingClientRect(),
        t = this._scrollables.map((r) =>
          r.getElementRef().nativeElement.getBoundingClientRect()
        );
      return {
        isOriginClipped: v1(i, t),
        isOriginOutsideView: Hm(i, t),
        isOverlayClipped: v1(e, t),
        isOverlayOutsideView: Hm(e, t),
      };
    }
    _subtractOverflows(i, ...e) {
      return e.reduce((t, r) => t - Math.max(r, 0), i);
    }
    _getNarrowedViewportRect() {
      let i = this._document.documentElement.clientWidth,
        e = this._document.documentElement.clientHeight,
        t = this._viewportRuler.getViewportScrollPosition();
      return {
        top: t.top + this._viewportMargin,
        left: t.left + this._viewportMargin,
        right: t.left + i - this._viewportMargin,
        bottom: t.top + e - this._viewportMargin,
        width: i - 2 * this._viewportMargin,
        height: e - 2 * this._viewportMargin,
      };
    }
    _isRtl() {
      return this._overlayRef.getDirection() === "rtl";
    }
    _hasExactPosition() {
      return !this._hasFlexibleDimensions || this._isPushed;
    }
    _getOffset(i, e) {
      return e === "x"
        ? i.offsetX == null
          ? this._offsetX
          : i.offsetX
        : i.offsetY == null
        ? this._offsetY
        : i.offsetY;
    }
    _validatePositions() {}
    _addPanelClasses(i) {
      this._pane &&
        Da(i).forEach((e) => {
          e !== "" &&
            this._appliedPanelClasses.indexOf(e) === -1 &&
            (this._appliedPanelClasses.push(e), this._pane.classList.add(e));
        });
    }
    _clearPanelClasses() {
      this._pane &&
        (this._appliedPanelClasses.forEach((i) => {
          this._pane.classList.remove(i);
        }),
        (this._appliedPanelClasses = []));
    }
    _getOriginRect() {
      let i = this._origin;
      if (i instanceof Re) return i.nativeElement.getBoundingClientRect();
      if (i instanceof Element) return i.getBoundingClientRect();
      let e = i.width || 0,
        t = i.height || 0;
      return {
        top: i.y,
        bottom: i.y + t,
        left: i.x,
        right: i.x + e,
        height: t,
        width: e,
      };
    }
  };
function Oo(n, i) {
  for (let e in i) i.hasOwnProperty(e) && (n[e] = i[e]);
  return n;
}
function C1(n) {
  if (typeof n != "number" && n != null) {
    let [i, e] = n.split(xO);
    return !e || e === "px" ? parseFloat(i) : null;
  }
  return n || null;
}
function w1(n) {
  return {
    top: Math.floor(n.top),
    right: Math.floor(n.right),
    bottom: Math.floor(n.bottom),
    left: Math.floor(n.left),
    width: Math.floor(n.width),
    height: Math.floor(n.height),
  };
}
function CO(n, i) {
  return n === i
    ? !0
    : n.isOriginClipped === i.isOriginClipped &&
        n.isOriginOutsideView === i.isOriginOutsideView &&
        n.isOverlayClipped === i.isOverlayClipped &&
        n.isOverlayOutsideView === i.isOverlayOutsideView;
}
var S1 = "cdk-global-overlay-wrapper",
  Wm = class {
    constructor() {
      (this._cssPosition = "static"),
        (this._topOffset = ""),
        (this._bottomOffset = ""),
        (this._alignItems = ""),
        (this._xPosition = ""),
        (this._xOffset = ""),
        (this._width = ""),
        (this._height = ""),
        (this._isDisposed = !1);
    }
    attach(i) {
      let e = i.getConfig();
      (this._overlayRef = i),
        this._width && !e.width && i.updateSize({ width: this._width }),
        this._height && !e.height && i.updateSize({ height: this._height }),
        i.hostElement.classList.add(S1),
        (this._isDisposed = !1);
    }
    top(i = "") {
      return (
        (this._bottomOffset = ""),
        (this._topOffset = i),
        (this._alignItems = "flex-start"),
        this
      );
    }
    left(i = "") {
      return (this._xOffset = i), (this._xPosition = "left"), this;
    }
    bottom(i = "") {
      return (
        (this._topOffset = ""),
        (this._bottomOffset = i),
        (this._alignItems = "flex-end"),
        this
      );
    }
    right(i = "") {
      return (this._xOffset = i), (this._xPosition = "right"), this;
    }
    start(i = "") {
      return (this._xOffset = i), (this._xPosition = "start"), this;
    }
    end(i = "") {
      return (this._xOffset = i), (this._xPosition = "end"), this;
    }
    width(i = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ width: i })
          : (this._width = i),
        this
      );
    }
    height(i = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ height: i })
          : (this._height = i),
        this
      );
    }
    centerHorizontally(i = "") {
      return this.left(i), (this._xPosition = "center"), this;
    }
    centerVertically(i = "") {
      return this.top(i), (this._alignItems = "center"), this;
    }
    apply() {
      if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
      let i = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement.style,
        t = this._overlayRef.getConfig(),
        { width: r, height: o, maxWidth: a, maxHeight: d } = t,
        u =
          (r === "100%" || r === "100vw") &&
          (!a || a === "100%" || a === "100vw"),
        f =
          (o === "100%" || o === "100vh") &&
          (!d || d === "100%" || d === "100vh"),
        v = this._xPosition,
        S = this._xOffset,
        T = this._overlayRef.getConfig().direction === "rtl",
        M = "",
        I = "",
        L = "";
      u
        ? (L = "flex-start")
        : v === "center"
        ? ((L = "center"), T ? (I = S) : (M = S))
        : T
        ? v === "left" || v === "end"
          ? ((L = "flex-end"), (M = S))
          : (v === "right" || v === "start") && ((L = "flex-start"), (I = S))
        : v === "left" || v === "start"
        ? ((L = "flex-start"), (M = S))
        : (v === "right" || v === "end") && ((L = "flex-end"), (I = S)),
        (i.position = this._cssPosition),
        (i.marginLeft = u ? "0" : M),
        (i.marginTop = f ? "0" : this._topOffset),
        (i.marginBottom = this._bottomOffset),
        (i.marginRight = u ? "0" : I),
        (e.justifyContent = L),
        (e.alignItems = f ? "flex-start" : this._alignItems);
    }
    dispose() {
      if (this._isDisposed || !this._overlayRef) return;
      let i = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement,
        t = e.style;
      e.classList.remove(S1),
        (t.justifyContent =
          t.alignItems =
          i.marginTop =
          i.marginBottom =
          i.marginLeft =
          i.marginRight =
          i.position =
            ""),
        (this._overlayRef = null),
        (this._isDisposed = !0);
    }
  },
  wO = (() => {
    class n {
      constructor(e, t, r, o) {
        (this._viewportRuler = e),
          (this._document = t),
          (this._platform = r),
          (this._overlayContainer = o);
      }
      global() {
        return new Wm();
      }
      flexibleConnectedTo(e) {
        return new jd(
          e,
          this._viewportRuler,
          this._document,
          this._platform,
          this._overlayContainer
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Fm), Q(Oe), Q(kt), Q(M1));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  SO = 0,
  Ea = (() => {
    class n {
      constructor(e, t, r, o, a, d, u, f, v, S, T, M) {
        (this.scrollStrategies = e),
          (this._overlayContainer = t),
          (this._componentFactoryResolver = r),
          (this._positionBuilder = o),
          (this._keyboardDispatcher = a),
          (this._injector = d),
          (this._ngZone = u),
          (this._document = f),
          (this._directionality = v),
          (this._location = S),
          (this._outsideClickDispatcher = T),
          (this._animationsModuleType = M);
      }
      create(e) {
        let t = this._createHostElement(),
          r = this._createPaneElement(t),
          o = this._createPortalOutlet(r),
          a = new Bd(e);
        return (
          (a.direction = a.direction || this._directionality.value),
          new $m(
            o,
            t,
            r,
            a,
            this._ngZone,
            this._keyboardDispatcher,
            this._document,
            this._location,
            this._outsideClickDispatcher,
            this._animationsModuleType === "NoopAnimations",
            this._injector.get(an)
          )
        );
      }
      position() {
        return this._positionBuilder;
      }
      _createPaneElement(e) {
        let t = this._document.createElement("div");
        return (
          (t.id = `cdk-overlay-${SO++}`),
          t.classList.add("cdk-overlay-pane"),
          e.appendChild(t),
          t
        );
      }
      _createHostElement() {
        let e = this._document.createElement("div");
        return this._overlayContainer.getContainerElement().appendChild(e), e;
      }
      _createPortalOutlet(e) {
        return (
          this._appRef || (this._appRef = this._injector.get(Ni)),
          new Nd(
            e,
            this._componentFactoryResolver,
            this._appRef,
            this._injector,
            this._document
          )
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            Q(bO),
            Q(M1),
            Q(ao),
            Q(wO),
            Q(vO),
            Q(Mt),
            Q(Me),
            Q(Oe),
            Q(Ta),
            Q(cr),
            Q(yO),
            Q($n, 8)
          );
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var DO = new Ce("cdk-connected-overlay-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let n = W(Ea);
    return () => n.scrollStrategies.reposition();
  },
});
function MO(n) {
  return () => n.scrollStrategies.reposition();
}
var TO = { provide: DO, deps: [Ea], useFactory: MO },
  T1 = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ providers: [Ea, TO], imports: [Yr, Ld, Nm, Nm] });
      }
    }
    return n;
  })();
function EO() {
  return !0;
}
var OO = new Ce("mat-sanity-checks", { providedIn: "root", factory: EO }),
  Ji = (() => {
    class n {
      constructor(e, t, r) {
        (this._sanityChecks = t),
          (this._document = r),
          (this._hasDoneGlobalChecks = !1),
          e._applyBodyHighContrastModeCssClasses(),
          this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
      }
      _checkIsEnabled(e) {
        return dl()
          ? !1
          : typeof this._sanityChecks == "boolean"
          ? this._sanityChecks
          : !!this._sanityChecks[e];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Rm), Q(OO, 8), Q(Oe));
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [Yr, Yr] });
      }
    }
    return n;
  })();
var E1 = new Ce("MAT_DATE_LOCALE", { providedIn: "root", factory: kO });
function kO() {
  return W(sh);
}
var Ui = class {
    constructor() {
      (this._localeChanges = new Ee()),
        (this.localeChanges = this._localeChanges);
    }
    getValidDateOrNull(i) {
      return this.isDateInstance(i) && this.isValid(i) ? i : null;
    }
    deserialize(i) {
      return i == null || (this.isDateInstance(i) && this.isValid(i))
        ? i
        : this.invalid();
    }
    setLocale(i) {
      (this.locale = i), this._localeChanges.next();
    }
    compareDate(i, e) {
      return (
        this.getYear(i) - this.getYear(e) ||
        this.getMonth(i) - this.getMonth(e) ||
        this.getDate(i) - this.getDate(e)
      );
    }
    sameDate(i, e) {
      if (i && e) {
        let t = this.isValid(i),
          r = this.isValid(e);
        return t && r ? !this.compareDate(i, e) : t == r;
      }
      return i == e;
    }
    clampDate(i, e, t) {
      return e && this.compareDate(i, e) < 0
        ? e
        : t && this.compareDate(i, t) > 0
        ? t
        : i;
    }
  },
  Oa = new Ce("mat-date-formats"),
  PO =
    /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
function Gm(n, i) {
  let e = Array(n);
  for (let t = 0; t < n; t++) e[t] = i(t);
  return e;
}
var IO = (() => {
    class n extends Ui {
      constructor(e) {
        super(),
          (this.useUtcForDisplay = !1),
          (this._matDateLocale = W(E1, { optional: !0 })),
          e !== void 0 && (this._matDateLocale = e),
          super.setLocale(this._matDateLocale);
      }
      getYear(e) {
        return e.getFullYear();
      }
      getMonth(e) {
        return e.getMonth();
      }
      getDate(e) {
        return e.getDate();
      }
      getDayOfWeek(e) {
        return e.getDay();
      }
      getMonthNames(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          month: e,
          timeZone: "utc",
        });
        return Gm(12, (r) => this._format(t, new Date(2017, r, 1)));
      }
      getDateNames() {
        let e = new Intl.DateTimeFormat(this.locale, {
          day: "numeric",
          timeZone: "utc",
        });
        return Gm(31, (t) => this._format(e, new Date(2017, 0, t + 1)));
      }
      getDayOfWeekNames(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          weekday: e,
          timeZone: "utc",
        });
        return Gm(7, (r) => this._format(t, new Date(2017, 0, r + 1)));
      }
      getYearName(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          year: "numeric",
          timeZone: "utc",
        });
        return this._format(t, e);
      }
      getFirstDayOfWeek() {
        if (typeof Intl < "u" && Intl.Locale) {
          let e = new Intl.Locale(this.locale),
            t = (e.getWeekInfo?.() || e.weekInfo)?.firstDay ?? 0;
          return t === 7 ? 0 : t;
        }
        return 0;
      }
      getNumDaysInMonth(e) {
        return this.getDate(
          this._createDateWithOverflow(this.getYear(e), this.getMonth(e) + 1, 0)
        );
      }
      clone(e) {
        return new Date(e.getTime());
      }
      createDate(e, t, r) {
        let o = this._createDateWithOverflow(e, t, r);
        return o.getMonth() != t, o;
      }
      today() {
        return new Date();
      }
      parse(e, t) {
        return typeof e == "number"
          ? new Date(e)
          : e
          ? new Date(Date.parse(e))
          : null;
      }
      format(e, t) {
        if (!this.isValid(e))
          throw Error("NativeDateAdapter: Cannot format invalid date.");
        let r = new Intl.DateTimeFormat(
          this.locale,
          Te(G({}, t), { timeZone: "utc" })
        );
        return this._format(r, e);
      }
      addCalendarYears(e, t) {
        return this.addCalendarMonths(e, t * 12);
      }
      addCalendarMonths(e, t) {
        let r = this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e) + t,
          this.getDate(e)
        );
        return (
          this.getMonth(r) != (((this.getMonth(e) + t) % 12) + 12) % 12 &&
            (r = this._createDateWithOverflow(
              this.getYear(r),
              this.getMonth(r),
              0
            )),
          r
        );
      }
      addCalendarDays(e, t) {
        return this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e),
          this.getDate(e) + t
        );
      }
      toIso8601(e) {
        return [
          e.getUTCFullYear(),
          this._2digit(e.getUTCMonth() + 1),
          this._2digit(e.getUTCDate()),
        ].join("-");
      }
      deserialize(e) {
        if (typeof e == "string") {
          if (!e) return null;
          if (PO.test(e)) {
            let t = new Date(e);
            if (this.isValid(t)) return t;
          }
        }
        return super.deserialize(e);
      }
      isDateInstance(e) {
        return e instanceof Date;
      }
      isValid(e) {
        return !isNaN(e.getTime());
      }
      invalid() {
        return new Date(NaN);
      }
      _createDateWithOverflow(e, t, r) {
        let o = new Date();
        return o.setFullYear(e, t, r), o.setHours(0, 0, 0, 0), o;
      }
      _2digit(e) {
        return ("00" + e).slice(-2);
      }
      _format(e, t) {
        let r = new Date();
        return (
          r.setUTCFullYear(t.getFullYear(), t.getMonth(), t.getDate()),
          r.setUTCHours(
            t.getHours(),
            t.getMinutes(),
            t.getSeconds(),
            t.getMilliseconds()
          ),
          e.format(r)
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(E1, 8));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  AO = {
    parse: { dateInput: null },
    display: {
      dateInput: { year: "numeric", month: "numeric", day: "numeric" },
      monthYearLabel: { year: "numeric", month: "short" },
      dateA11yLabel: { year: "numeric", month: "long", day: "numeric" },
      monthYearA11yLabel: { year: "numeric", month: "long" },
    },
  };
var Ud = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ providers: [RO()] });
    }
  }
  return n;
})();
function RO(n = AO) {
  return [
    { provide: Ui, useClass: IO },
    { provide: Oa, useValue: n },
  ];
}
var fn = (function (n) {
    return (
      (n[(n.FADING_IN = 0)] = "FADING_IN"),
      (n[(n.VISIBLE = 1)] = "VISIBLE"),
      (n[(n.FADING_OUT = 2)] = "FADING_OUT"),
      (n[(n.HIDDEN = 3)] = "HIDDEN"),
      n
    );
  })(fn || {}),
  Km = class {
    constructor(i, e, t, r = !1) {
      (this._renderer = i),
        (this.element = e),
        (this.config = t),
        (this._animationForciblyDisabledThroughCss = r),
        (this.state = fn.HIDDEN);
    }
    fadeOut() {
      this._renderer.fadeOutRipple(this);
    }
  },
  O1 = er({ passive: !0, capture: !0 }),
  Qm = class {
    constructor() {
      (this._events = new Map()),
        (this._delegateEventHandler = (i) => {
          let e = mn(i);
          e &&
            this._events.get(i.type)?.forEach((t, r) => {
              (r === e || r.contains(e)) && t.forEach((o) => o.handleEvent(i));
            });
        });
    }
    addHandler(i, e, t, r) {
      let o = this._events.get(e);
      if (o) {
        let a = o.get(t);
        a ? a.add(r) : o.set(t, new Set([r]));
      } else
        this._events.set(e, new Map([[t, new Set([r])]])),
          i.runOutsideAngular(() => {
            document.addEventListener(e, this._delegateEventHandler, O1);
          });
    }
    removeHandler(i, e, t) {
      let r = this._events.get(i);
      if (!r) return;
      let o = r.get(e);
      o &&
        (o.delete(t),
        o.size === 0 && r.delete(e),
        r.size === 0 &&
          (this._events.delete(i),
          document.removeEventListener(i, this._delegateEventHandler, O1)));
    }
  },
  k1 = { enterDuration: 225, exitDuration: 150 },
  FO = 800,
  P1 = er({ passive: !0, capture: !0 }),
  I1 = ["mousedown", "touchstart"],
  A1 = ["mouseup", "mouseleave", "touchend", "touchcancel"],
  Xm = class n {
    static {
      this._eventManager = new Qm();
    }
    constructor(i, e, t, r) {
      (this._target = i),
        (this._ngZone = e),
        (this._platform = r),
        (this._isPointerDown = !1),
        (this._activeRipples = new Map()),
        (this._pointerUpEventsRegistered = !1),
        r.isBrowser && (this._containerElement = xr(t));
    }
    fadeInRipple(i, e, t = {}) {
      let r = (this._containerRect =
          this._containerRect ||
          this._containerElement.getBoundingClientRect()),
        o = G(G({}, k1), t.animation);
      t.centered && ((i = r.left + r.width / 2), (e = r.top + r.height / 2));
      let a = t.radius || NO(i, e, r),
        d = i - r.left,
        u = e - r.top,
        f = o.enterDuration,
        v = document.createElement("div");
      v.classList.add("mat-ripple-element"),
        (v.style.left = `${d - a}px`),
        (v.style.top = `${u - a}px`),
        (v.style.height = `${a * 2}px`),
        (v.style.width = `${a * 2}px`),
        t.color != null && (v.style.backgroundColor = t.color),
        (v.style.transitionDuration = `${f}ms`),
        this._containerElement.appendChild(v);
      let S = window.getComputedStyle(v),
        T = S.transitionProperty,
        M = S.transitionDuration,
        I =
          T === "none" ||
          M === "0s" ||
          M === "0s, 0s" ||
          (r.width === 0 && r.height === 0),
        L = new Km(this, v, t, I);
      (v.style.transform = "scale3d(1, 1, 1)"),
        (L.state = fn.FADING_IN),
        t.persistent || (this._mostRecentTransientRipple = L);
      let E = null;
      return (
        !I &&
          (f || o.exitDuration) &&
          this._ngZone.runOutsideAngular(() => {
            let F = () => {
                E && (E.fallbackTimer = null),
                  clearTimeout(re),
                  this._finishRippleTransition(L);
              },
              ee = () => this._destroyRipple(L),
              re = setTimeout(ee, f + 100);
            v.addEventListener("transitionend", F),
              v.addEventListener("transitioncancel", ee),
              (E = {
                onTransitionEnd: F,
                onTransitionCancel: ee,
                fallbackTimer: re,
              });
          }),
        this._activeRipples.set(L, E),
        (I || !f) && this._finishRippleTransition(L),
        L
      );
    }
    fadeOutRipple(i) {
      if (i.state === fn.FADING_OUT || i.state === fn.HIDDEN) return;
      let e = i.element,
        t = G(G({}, k1), i.config.animation);
      (e.style.transitionDuration = `${t.exitDuration}ms`),
        (e.style.opacity = "0"),
        (i.state = fn.FADING_OUT),
        (i._animationForciblyDisabledThroughCss || !t.exitDuration) &&
          this._finishRippleTransition(i);
    }
    fadeOutAll() {
      this._getActiveRipples().forEach((i) => i.fadeOut());
    }
    fadeOutAllNonPersistent() {
      this._getActiveRipples().forEach((i) => {
        i.config.persistent || i.fadeOut();
      });
    }
    setupTriggerEvents(i) {
      let e = xr(i);
      !this._platform.isBrowser ||
        !e ||
        e === this._triggerElement ||
        (this._removeTriggerEvents(),
        (this._triggerElement = e),
        I1.forEach((t) => {
          n._eventManager.addHandler(this._ngZone, t, e, this);
        }));
    }
    handleEvent(i) {
      i.type === "mousedown"
        ? this._onMousedown(i)
        : i.type === "touchstart"
        ? this._onTouchStart(i)
        : this._onPointerUp(),
        this._pointerUpEventsRegistered ||
          (this._ngZone.runOutsideAngular(() => {
            A1.forEach((e) => {
              this._triggerElement.addEventListener(e, this, P1);
            });
          }),
          (this._pointerUpEventsRegistered = !0));
    }
    _finishRippleTransition(i) {
      i.state === fn.FADING_IN
        ? this._startFadeOutTransition(i)
        : i.state === fn.FADING_OUT && this._destroyRipple(i);
    }
    _startFadeOutTransition(i) {
      let e = i === this._mostRecentTransientRipple,
        { persistent: t } = i.config;
      (i.state = fn.VISIBLE), !t && (!e || !this._isPointerDown) && i.fadeOut();
    }
    _destroyRipple(i) {
      let e = this._activeRipples.get(i) ?? null;
      this._activeRipples.delete(i),
        this._activeRipples.size || (this._containerRect = null),
        i === this._mostRecentTransientRipple &&
          (this._mostRecentTransientRipple = null),
        (i.state = fn.HIDDEN),
        e !== null &&
          (i.element.removeEventListener("transitionend", e.onTransitionEnd),
          i.element.removeEventListener(
            "transitioncancel",
            e.onTransitionCancel
          ),
          e.fallbackTimer !== null && clearTimeout(e.fallbackTimer)),
        i.element.remove();
    }
    _onMousedown(i) {
      let e = Pm(i),
        t =
          this._lastTouchStartEvent &&
          Date.now() < this._lastTouchStartEvent + FO;
      !this._target.rippleDisabled &&
        !e &&
        !t &&
        ((this._isPointerDown = !0),
        this.fadeInRipple(i.clientX, i.clientY, this._target.rippleConfig));
    }
    _onTouchStart(i) {
      if (!this._target.rippleDisabled && !Im(i)) {
        (this._lastTouchStartEvent = Date.now()), (this._isPointerDown = !0);
        let e = i.changedTouches;
        if (e)
          for (let t = 0; t < e.length; t++)
            this.fadeInRipple(
              e[t].clientX,
              e[t].clientY,
              this._target.rippleConfig
            );
      }
    }
    _onPointerUp() {
      this._isPointerDown &&
        ((this._isPointerDown = !1),
        this._getActiveRipples().forEach((i) => {
          let e =
            i.state === fn.VISIBLE ||
            (i.config.terminateOnPointerUp && i.state === fn.FADING_IN);
          !i.config.persistent && e && i.fadeOut();
        }));
    }
    _getActiveRipples() {
      return Array.from(this._activeRipples.keys());
    }
    _removeTriggerEvents() {
      let i = this._triggerElement;
      i &&
        (I1.forEach((e) => n._eventManager.removeHandler(e, i, this)),
        this._pointerUpEventsRegistered &&
          (A1.forEach((e) => i.removeEventListener(e, this, P1)),
          (this._pointerUpEventsRegistered = !1)));
    }
  };
function NO(n, i, e) {
  let t = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
    r = Math.max(Math.abs(i - e.top), Math.abs(i - e.bottom));
  return Math.sqrt(t * t + r * r);
}
var L1 = new Ce("mat-ripple-global-options"),
  LO = (() => {
    class n {
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        e && this.fadeOutAllNonPersistent(),
          (this._disabled = e),
          this._setupTriggerEventsIfEnabled();
      }
      get trigger() {
        return this._trigger || this._elementRef.nativeElement;
      }
      set trigger(e) {
        (this._trigger = e), this._setupTriggerEventsIfEnabled();
      }
      constructor(e, t, r, o, a) {
        (this._elementRef = e),
          (this._animationMode = a),
          (this.radius = 0),
          (this._disabled = !1),
          (this._isInitialized = !1),
          (this._globalOptions = o || {}),
          (this._rippleRenderer = new Xm(this, t, e, r));
      }
      ngOnInit() {
        (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
      }
      ngOnDestroy() {
        this._rippleRenderer._removeTriggerEvents();
      }
      fadeOutAll() {
        this._rippleRenderer.fadeOutAll();
      }
      fadeOutAllNonPersistent() {
        this._rippleRenderer.fadeOutAllNonPersistent();
      }
      get rippleConfig() {
        return {
          centered: this.centered,
          radius: this.radius,
          color: this.color,
          animation: G(
            G(
              G({}, this._globalOptions.animation),
              this._animationMode === "NoopAnimations"
                ? { enterDuration: 0, exitDuration: 0 }
                : {}
            ),
            this.animation
          ),
          terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
        };
      }
      get rippleDisabled() {
        return this.disabled || !!this._globalOptions.disabled;
      }
      _setupTriggerEventsIfEnabled() {
        !this.disabled &&
          this._isInitialized &&
          this._rippleRenderer.setupTriggerEvents(this.trigger);
      }
      launch(e, t = 0, r) {
        return typeof e == "number"
          ? this._rippleRenderer.fadeInRipple(
              e,
              t,
              G(G({}, this.rippleConfig), r)
            )
          : this._rippleRenderer.fadeInRipple(
              0,
              0,
              G(G({}, this.rippleConfig), e)
            );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Re), j(Me), j(kt), j(L1, 8), j($n, 8));
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [
            ["", "mat-ripple", ""],
            ["", "matRipple", ""],
          ],
          hostAttrs: [1, "mat-ripple"],
          hostVars: 2,
          hostBindings: function (t, r) {
            t & 2 && ne("mat-ripple-unbounded", r.unbounded);
          },
          inputs: {
            color: [0, "matRippleColor", "color"],
            unbounded: [0, "matRippleUnbounded", "unbounded"],
            centered: [0, "matRippleCentered", "centered"],
            radius: [0, "matRippleRadius", "radius"],
            animation: [0, "matRippleAnimation", "animation"],
            disabled: [0, "matRippleDisabled", "disabled"],
            trigger: [0, "matRippleTrigger", "trigger"],
          },
          exportAs: ["matRipple"],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  V1 = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = ye({ type: n });
      }
      static {
        this.ɵinj = ve({ imports: [Ji, Ji] });
      }
    }
    return n;
  })();
var R1 = { capture: !0 },
  F1 = ["focus", "mousedown", "mouseenter", "touchstart"],
  Ym = "mat-ripple-loader-uninitialized",
  qm = "mat-ripple-loader-class-name",
  N1 = "mat-ripple-loader-centered",
  Hd = "mat-ripple-loader-disabled",
  B1 = (() => {
    class n {
      constructor() {
        (this._document = W(Oe, { optional: !0 })),
          (this._animationMode = W($n, { optional: !0 })),
          (this._globalRippleOptions = W(L1, { optional: !0 })),
          (this._platform = W(kt)),
          (this._ngZone = W(Me)),
          (this._hosts = new Map()),
          (this._onInteraction = (e) => {
            let t = mn(e);
            if (t instanceof HTMLElement) {
              let r = t.closest(
                `[${Ym}="${this._globalRippleOptions?.namespace ?? ""}"]`
              );
              r && this._createRipple(r);
            }
          }),
          this._ngZone.runOutsideAngular(() => {
            for (let e of F1)
              this._document?.addEventListener(e, this._onInteraction, R1);
          });
      }
      ngOnDestroy() {
        let e = this._hosts.keys();
        for (let t of e) this.destroyRipple(t);
        for (let t of F1)
          this._document?.removeEventListener(t, this._onInteraction, R1);
      }
      configureRipple(e, t) {
        e.setAttribute(Ym, this._globalRippleOptions?.namespace ?? ""),
          (t.className || !e.hasAttribute(qm)) &&
            e.setAttribute(qm, t.className || ""),
          t.centered && e.setAttribute(N1, ""),
          t.disabled && e.setAttribute(Hd, "");
      }
      getRipple(e) {
        return this._hosts.get(e) || this._createRipple(e);
      }
      setDisabled(e, t) {
        let r = this._hosts.get(e);
        if (r) {
          r.disabled = t;
          return;
        }
        t ? e.setAttribute(Hd, "") : e.removeAttribute(Hd);
      }
      _createRipple(e) {
        if (!this._document) return;
        let t = this._hosts.get(e);
        if (t) return t;
        e.querySelector(".mat-ripple")?.remove();
        let r = this._document.createElement("span");
        r.classList.add("mat-ripple", e.getAttribute(qm)), e.append(r);
        let o = new LO(
          new Re(r),
          this._ngZone,
          this._platform,
          this._globalRippleOptions ? this._globalRippleOptions : void 0,
          this._animationMode ? this._animationMode : void 0
        );
        return (
          (o._isInitialized = !0),
          (o.trigger = e),
          (o.centered = e.hasAttribute(N1)),
          (o.disabled = e.hasAttribute(Hd)),
          this.attachRipple(e, o),
          o
        );
      }
      attachRipple(e, t) {
        e.removeAttribute(Ym), this._hosts.set(e, t);
      }
      destroyRipple(e) {
        let t = this._hosts.get(e);
        t && (t.ngOnDestroy(), this._hosts.delete(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var BO = ["mat-button", ""],
  jO = [
    [
      ["", 8, "material-icons", 3, "iconPositionEnd", ""],
      ["mat-icon", 3, "iconPositionEnd", ""],
      ["", "matButtonIcon", "", 3, "iconPositionEnd", ""],
    ],
    "*",
    [
      ["", "iconPositionEnd", "", 8, "material-icons"],
      ["mat-icon", "iconPositionEnd", ""],
      ["", "matButtonIcon", "", "iconPositionEnd", ""],
    ],
  ],
  HO = [
    ".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])",
    "*",
    ".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]",
  ];
var UO =
  ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}";
var zO = ["mat-icon-button", ""],
  $O = ["*"];
var WO = new Ce("MAT_BUTTON_CONFIG");
var GO = [
    { attribute: "mat-button", mdcClasses: ["mdc-button", "mat-mdc-button"] },
    {
      attribute: "mat-flat-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--unelevated",
        "mat-mdc-unelevated-button",
      ],
    },
    {
      attribute: "mat-raised-button",
      mdcClasses: ["mdc-button", "mdc-button--raised", "mat-mdc-raised-button"],
    },
    {
      attribute: "mat-stroked-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--outlined",
        "mat-mdc-outlined-button",
      ],
    },
    {
      attribute: "mat-fab",
      mdcClasses: ["mdc-fab", "mat-mdc-fab-base", "mat-mdc-fab"],
    },
    {
      attribute: "mat-mini-fab",
      mdcClasses: [
        "mdc-fab",
        "mat-mdc-fab-base",
        "mdc-fab--mini",
        "mat-mdc-mini-fab",
      ],
    },
    {
      attribute: "mat-icon-button",
      mdcClasses: ["mdc-icon-button", "mat-mdc-icon-button"],
    },
  ],
  j1 = (() => {
    class n {
      get ripple() {
        return this._rippleLoader?.getRipple(this._elementRef.nativeElement);
      }
      set ripple(e) {
        this._rippleLoader?.attachRipple(this._elementRef.nativeElement, e);
      }
      get disableRipple() {
        return this._disableRipple;
      }
      set disableRipple(e) {
        (this._disableRipple = e), this._updateRippleDisabled();
      }
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        (this._disabled = e), this._updateRippleDisabled();
      }
      constructor(e, t, r, o) {
        (this._elementRef = e),
          (this._platform = t),
          (this._ngZone = r),
          (this._animationMode = o),
          (this._focusMonitor = W(Am)),
          (this._rippleLoader = W(B1)),
          (this._isFab = !1),
          (this._disableRipple = !1),
          (this._disabled = !1);
        let a = W(WO, { optional: !0 }),
          d = e.nativeElement,
          u = d.classList;
        (this.disabledInteractive = a?.disabledInteractive ?? !1),
          (this.color = a?.color ?? null),
          this._rippleLoader?.configureRipple(d, {
            className: "mat-mdc-button-ripple",
          });
        for (let { attribute: f, mdcClasses: v } of GO)
          d.hasAttribute(f) && u.add(...v);
      }
      ngAfterViewInit() {
        this._focusMonitor.monitor(this._elementRef, !0);
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);
      }
      focus(e = "program", t) {
        e
          ? this._focusMonitor.focusVia(this._elementRef.nativeElement, e, t)
          : this._elementRef.nativeElement.focus(t);
      }
      _getAriaDisabled() {
        return this.ariaDisabled != null
          ? this.ariaDisabled
          : this.disabled && this.disabledInteractive
          ? !0
          : null;
      }
      _getDisabledAttribute() {
        return this.disabledInteractive || !this.disabled ? null : !0;
      }
      _updateRippleDisabled() {
        this._rippleLoader?.setDisabled(
          this._elementRef.nativeElement,
          this.disableRipple || this.disabled
        );
      }
      static {
        this.ɵfac = function (t) {
          kr();
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          inputs: {
            color: "color",
            disableRipple: [2, "disableRipple", "disableRipple", Se],
            disabled: [2, "disabled", "disabled", Se],
            ariaDisabled: [2, "aria-disabled", "ariaDisabled", Se],
            disabledInteractive: [
              2,
              "disabledInteractive",
              "disabledInteractive",
              Se,
            ],
          },
          features: [Pt],
        });
      }
    }
    return n;
  })();
var Zm = (() => {
  class n extends j1 {
    constructor(e, t, r, o) {
      super(e, t, r, o);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(j(Re), j(kt), j(Me), j($n, 8));
      };
    }
    static {
      this.ɵcmp = se({
        type: n,
        selectors: [
          ["button", "mat-button", ""],
          ["button", "mat-raised-button", ""],
          ["button", "mat-flat-button", ""],
          ["button", "mat-stroked-button", ""],
        ],
        hostVars: 14,
        hostBindings: function (t, r) {
          t & 2 &&
            (ce("disabled", r._getDisabledAttribute())(
              "aria-disabled",
              r._getAriaDisabled()
            ),
            He(r.color ? "mat-" + r.color : ""),
            ne("mat-mdc-button-disabled", r.disabled)(
              "mat-mdc-button-disabled-interactive",
              r.disabledInteractive
            )("_mat-animation-noopable", r._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !r.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [Ze, le],
        attrs: BO,
        ngContentSelectors: HO,
        decls: 7,
        vars: 4,
        consts: [
          [1, "mat-mdc-button-persistent-ripple"],
          [1, "mdc-button__label"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (t, r) {
          t & 1 &&
            (Jt(jO),
            U(0, "span", 0),
            Vt(1),
            l(2, "span", 1),
            Vt(3, 1),
            c(),
            Vt(4, 2),
            U(5, "span", 2)(6, "span", 3)),
            t & 2 &&
              ne("mdc-button__ripple", !r._isFab)("mdc-fab__ripple", r._isFab);
        },
        styles: [
          '.mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-text-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-text-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, var(--mat-app-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-filled-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-filled-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color, var(--mat-app-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, var(--mat-app-on-primary));background-color:var(--mdc-filled-button-container-color, var(--mat-app-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow, var(--mat-app-level1));height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-protected-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-protected-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, var(--mat-app-primary));background-color:var(--mdc-protected-button-container-color, var(--mat-app-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow, var(--mat-app-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow, var(--mat-app-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-outlined-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-outlined-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight, var(--mat-app-label-large-weight));border-radius:var(--mdc-outlined-button-container-shape, var(--mat-app-corner-full));border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, var(--mat-app-primary));border-color:var(--mdc-outlined-button-outline-color, var(--mat-app-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}',
          ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}",
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return n;
})();
var Jm = (() => {
  class n extends j1 {
    constructor(e, t, r, o) {
      super(e, t, r, o),
        this._rippleLoader.configureRipple(this._elementRef.nativeElement, {
          centered: !0,
        });
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(j(Re), j(kt), j(Me), j($n, 8));
      };
    }
    static {
      this.ɵcmp = se({
        type: n,
        selectors: [["button", "mat-icon-button", ""]],
        hostVars: 14,
        hostBindings: function (t, r) {
          t & 2 &&
            (ce("disabled", r._getDisabledAttribute())(
              "aria-disabled",
              r._getAriaDisabled()
            ),
            He(r.color ? "mat-" + r.color : ""),
            ne("mat-mdc-button-disabled", r.disabled)(
              "mat-mdc-button-disabled-interactive",
              r.disabledInteractive
            )("_mat-animation-noopable", r._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !r.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [Ze, le],
        attrs: zO,
        ngContentSelectors: $O,
        decls: 4,
        vars: 0,
        consts: [
          [1, "mat-mdc-button-persistent-ripple", "mdc-icon-button__ripple"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (t, r) {
          t & 1 &&
            (Jt(), U(0, "span", 0), Vt(1), U(2, "span", 1)(3, "span", 2));
        },
        styles: [
          '.mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color, var(--mat-app-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
          UO,
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return n;
})();
var H1 = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ imports: [Ji, V1, Ji] });
    }
  }
  return n;
})();
var ko = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ imports: [Ji, Ae, Pd, Ji] });
    }
  }
  return n;
})();
var U1 = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
var zd = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({ imports: [Ji, ko, ko, U1, Ji] });
    }
  }
  return n;
})();
var KO = ["mat-calendar-body", ""];
function QO(n, i) {
  return this._trackRow(i);
}
var K1 = (n, i) => i.id;
function XO(n, i) {
  if ((n & 1 && (l(0, "tr", 0)(1, "td", 3), h(2), c()()), n & 2)) {
    let e = x();
    m(),
      Lt("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      ce("colspan", e.numCols),
      m(),
      Z(" ", e.label, " ");
  }
}
function ZO(n, i) {
  if ((n & 1 && (l(0, "td", 3), h(1), c()), n & 2)) {
    let e = x(2);
    Lt("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      ce("colspan", e._firstRowOffset),
      m(),
      Z(" ", e._firstRowOffset >= e.labelMinRequiredCells ? e.label : "", " ");
  }
}
function JO(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "td", 6)(1, "button", 7),
      R("click", function (r) {
        let o = O(e).$implicit,
          a = x(2);
        return k(a._cellClicked(o, r));
      })("focus", function (r) {
        let o = O(e).$implicit,
          a = x(2);
        return k(a._emitActiveDateChange(o, r));
      }),
      l(2, "span", 8),
      h(3),
      c(),
      U(4, "span", 9),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.$index,
      r = x().$index,
      o = x();
    Lt("width", o._cellWidth)("padding-top", o._cellPadding)(
      "padding-bottom",
      o._cellPadding
    ),
      ce("data-mat-row", r)("data-mat-col", t),
      m(),
      ne("mat-calendar-body-disabled", !e.enabled)(
        "mat-calendar-body-active",
        o._isActiveCell(r, t)
      )("mat-calendar-body-range-start", o._isRangeStart(e.compareValue))(
        "mat-calendar-body-range-end",
        o._isRangeEnd(e.compareValue)
      )("mat-calendar-body-in-range", o._isInRange(e.compareValue))(
        "mat-calendar-body-comparison-bridge-start",
        o._isComparisonBridgeStart(e.compareValue, r, t)
      )(
        "mat-calendar-body-comparison-bridge-end",
        o._isComparisonBridgeEnd(e.compareValue, r, t)
      )(
        "mat-calendar-body-comparison-start",
        o._isComparisonStart(e.compareValue)
      )("mat-calendar-body-comparison-end", o._isComparisonEnd(e.compareValue))(
        "mat-calendar-body-in-comparison-range",
        o._isInComparisonRange(e.compareValue)
      )("mat-calendar-body-preview-start", o._isPreviewStart(e.compareValue))(
        "mat-calendar-body-preview-end",
        o._isPreviewEnd(e.compareValue)
      )("mat-calendar-body-in-preview", o._isInPreview(e.compareValue)),
      y("ngClass", e.cssClasses)("tabindex", o._isActiveCell(r, t) ? 0 : -1),
      ce("aria-label", e.ariaLabel)("aria-disabled", !e.enabled || null)(
        "aria-pressed",
        o._isSelected(e.compareValue)
      )("aria-current", o.todayValue === e.compareValue ? "date" : null)(
        "aria-describedby",
        o._getDescribedby(e.compareValue)
      ),
      m(),
      ne("mat-calendar-body-selected", o._isSelected(e.compareValue))(
        "mat-calendar-body-comparison-identical",
        o._isComparisonIdentical(e.compareValue)
      )("mat-calendar-body-today", o.todayValue === e.compareValue),
      m(),
      Z(" ", e.displayValue, " ");
  }
}
function ek(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr", 1),
      A(1, ZO, 2, 6, "td", 4),
      Ko(2, JO, 5, 48, "td", 5, K1),
      c()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.$index,
      r = x();
    m(), Cn(t === 0 && r._firstRowOffset ? 1 : -1), m(), Qo(e);
  }
}
function tk(n, i) {
  if (
    (n & 1 &&
      (l(0, "th", 2)(1, "span", 6), h(2), c(), l(3, "span", 3), h(4), c()()),
    n & 2)
  ) {
    let e = i.$implicit;
    m(2), B(e.long), m(2), B(e.narrow);
  }
}
var ik = ["*"];
function nk(n, i) {}
function rk(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "mat-month-view", 4),
      dt("activeDateChange", function (r) {
        O(e);
        let o = x();
        return ct(o.activeDate, r) || (o.activeDate = r), k(r);
      }),
      R("_userSelection", function (r) {
        O(e);
        let o = x();
        return k(o._dateSelected(r));
      })("dragStarted", function (r) {
        O(e);
        let o = x();
        return k(o._dragStarted(r));
      })("dragEnded", function (r) {
        O(e);
        let o = x();
        return k(o._dragEnded(r));
      }),
      c();
  }
  if (n & 2) {
    let e = x();
    lt("activeDate", e.activeDate),
      y("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass)(
        "comparisonStart",
        e.comparisonStart
      )("comparisonEnd", e.comparisonEnd)(
        "startDateAccessibleName",
        e.startDateAccessibleName
      )("endDateAccessibleName", e.endDateAccessibleName)(
        "activeDrag",
        e._activeDrag
      );
  }
}
function ok(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "mat-year-view", 5),
      dt("activeDateChange", function (r) {
        O(e);
        let o = x();
        return ct(o.activeDate, r) || (o.activeDate = r), k(r);
      }),
      R("monthSelected", function (r) {
        O(e);
        let o = x();
        return k(o._monthSelectedInYearView(r));
      })("selectedChange", function (r) {
        O(e);
        let o = x();
        return k(o._goToDateInView(r, "month"));
      }),
      c();
  }
  if (n & 2) {
    let e = x();
    lt("activeDate", e.activeDate),
      y("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function ak(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "mat-multi-year-view", 6),
      dt("activeDateChange", function (r) {
        O(e);
        let o = x();
        return ct(o.activeDate, r) || (o.activeDate = r), k(r);
      }),
      R("yearSelected", function (r) {
        O(e);
        let o = x();
        return k(o._yearSelectedInMultiYearView(r));
      })("selectedChange", function (r) {
        O(e);
        let o = x();
        return k(o._goToDateInView(r, "year"));
      }),
      c();
  }
  if (n & 2) {
    let e = x();
    lt("activeDate", e.activeDate),
      y("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function sk(n, i) {}
var lk = ["button"],
  ck = [[["", "matDatepickerToggleIcon", ""]]],
  dk = ["[matDatepickerToggleIcon]"];
function uk(n, i) {
  n & 1 && (Ct(), l(0, "svg", 2), U(1, "path", 3), c());
}
var gl = (() => {
    class n {
      constructor() {
        (this.changes = new Ee()),
          (this.calendarLabel = "Calendar"),
          (this.openCalendarLabel = "Open calendar"),
          (this.closeCalendarLabel = "Close calendar"),
          (this.prevMonthLabel = "Previous month"),
          (this.nextMonthLabel = "Next month"),
          (this.prevYearLabel = "Previous year"),
          (this.nextYearLabel = "Next year"),
          (this.prevMultiYearLabel = "Previous 24 years"),
          (this.nextMultiYearLabel = "Next 24 years"),
          (this.switchToMonthViewLabel = "Choose date"),
          (this.switchToMultiYearViewLabel = "Choose month and year"),
          (this.startDateLabel = "Start date"),
          (this.endDateLabel = "End date");
      }
      formatYearRange(e, t) {
        return `${e} \u2013 ${t}`;
      }
      formatYearRangeLabel(e, t) {
        return `${e} to ${t}`;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  hk = 0,
  fl = class {
    constructor(i, e, t, r, o = {}, a = i, d) {
      (this.value = i),
        (this.displayValue = e),
        (this.ariaLabel = t),
        (this.enabled = r),
        (this.cssClasses = o),
        (this.compareValue = a),
        (this.rawValue = d),
        (this.id = hk++);
    }
  },
  pk = 1,
  z1 = er({ passive: !1, capture: !0 }),
  qr = er({ passive: !0, capture: !0 }),
  $d = er({ passive: !0 }),
  Ia = (() => {
    class n {
      ngAfterViewChecked() {
        this._focusActiveCellAfterViewChecked &&
          (this._focusActiveCell(),
          (this._focusActiveCellAfterViewChecked = !1));
      }
      constructor(e, t) {
        (this._elementRef = e),
          (this._ngZone = t),
          (this._platform = W(kt)),
          (this._focusActiveCellAfterViewChecked = !1),
          (this.numCols = 7),
          (this.activeCell = 0),
          (this.isRange = !1),
          (this.cellAspectRatio = 1),
          (this.previewStart = null),
          (this.previewEnd = null),
          (this.selectedValueChange = new xe()),
          (this.previewChange = new xe()),
          (this.activeDateChange = new xe()),
          (this.dragStarted = new xe()),
          (this.dragEnded = new xe()),
          (this._didDragSinceMouseDown = !1),
          (this._injector = W(Mt)),
          (this._trackRow = (r) => r),
          (this._enterHandler = (r) => {
            if (this._skipNextFocus && r.type === "focus") {
              this._skipNextFocus = !1;
              return;
            }
            if (r.target && this.isRange) {
              let o = this._getCellFromElement(r.target);
              o &&
                this._ngZone.run(() =>
                  this.previewChange.emit({
                    value: o.enabled ? o : null,
                    event: r,
                  })
                );
            }
          }),
          (this._touchmoveHandler = (r) => {
            if (!this.isRange) return;
            let o = $1(r),
              a = o ? this._getCellFromElement(o) : null;
            o !== r.target && (this._didDragSinceMouseDown = !0),
              tf(r.target) && r.preventDefault(),
              this._ngZone.run(() =>
                this.previewChange.emit({
                  value: a?.enabled ? a : null,
                  event: r,
                })
              );
          }),
          (this._leaveHandler = (r) => {
            this.previewEnd !== null &&
              this.isRange &&
              (r.type !== "blur" && (this._didDragSinceMouseDown = !0),
              r.target &&
                this._getCellFromElement(r.target) &&
                !(
                  r.relatedTarget && this._getCellFromElement(r.relatedTarget)
                ) &&
                this._ngZone.run(() =>
                  this.previewChange.emit({ value: null, event: r })
                ));
          }),
          (this._mousedownHandler = (r) => {
            if (!this.isRange) return;
            this._didDragSinceMouseDown = !1;
            let o = r.target && this._getCellFromElement(r.target);
            !o ||
              !this._isInRange(o.compareValue) ||
              this._ngZone.run(() => {
                this.dragStarted.emit({ value: o.rawValue, event: r });
              });
          }),
          (this._mouseupHandler = (r) => {
            if (!this.isRange) return;
            let o = tf(r.target);
            if (!o) {
              this._ngZone.run(() => {
                this.dragEnded.emit({ value: null, event: r });
              });
              return;
            }
            o.closest(".mat-calendar-body") ===
              this._elementRef.nativeElement &&
              this._ngZone.run(() => {
                let a = this._getCellFromElement(o);
                this.dragEnded.emit({ value: a?.rawValue ?? null, event: r });
              });
          }),
          (this._touchendHandler = (r) => {
            let o = $1(r);
            o && this._mouseupHandler({ target: o });
          }),
          (this._id = `mat-calendar-body-${pk++}`),
          (this._startDateLabelId = `${this._id}-start-date`),
          (this._endDateLabelId = `${this._id}-end-date`),
          t.runOutsideAngular(() => {
            let r = e.nativeElement;
            r.addEventListener("touchmove", this._touchmoveHandler, z1),
              r.addEventListener("mouseenter", this._enterHandler, qr),
              r.addEventListener("focus", this._enterHandler, qr),
              r.addEventListener("mouseleave", this._leaveHandler, qr),
              r.addEventListener("blur", this._leaveHandler, qr),
              r.addEventListener("mousedown", this._mousedownHandler, $d),
              r.addEventListener("touchstart", this._mousedownHandler, $d),
              this._platform.isBrowser &&
                (window.addEventListener("mouseup", this._mouseupHandler),
                window.addEventListener("touchend", this._touchendHandler));
          });
      }
      _cellClicked(e, t) {
        this._didDragSinceMouseDown ||
          (e.enabled &&
            this.selectedValueChange.emit({ value: e.value, event: t }));
      }
      _emitActiveDateChange(e, t) {
        e.enabled && this.activeDateChange.emit({ value: e.value, event: t });
      }
      _isSelected(e) {
        return this.startValue === e || this.endValue === e;
      }
      ngOnChanges(e) {
        let t = e.numCols,
          { rows: r, numCols: o } = this;
        (e.rows || t) &&
          (this._firstRowOffset =
            r && r.length && r[0].length ? o - r[0].length : 0),
          (e.cellAspectRatio || t || !this._cellPadding) &&
            (this._cellPadding = `${(50 * this.cellAspectRatio) / o}%`),
          (t || !this._cellWidth) && (this._cellWidth = `${100 / o}%`);
      }
      ngOnDestroy() {
        let e = this._elementRef.nativeElement;
        e.removeEventListener("touchmove", this._touchmoveHandler, z1),
          e.removeEventListener("mouseenter", this._enterHandler, qr),
          e.removeEventListener("focus", this._enterHandler, qr),
          e.removeEventListener("mouseleave", this._leaveHandler, qr),
          e.removeEventListener("blur", this._leaveHandler, qr),
          e.removeEventListener("mousedown", this._mousedownHandler, $d),
          e.removeEventListener("touchstart", this._mousedownHandler, $d),
          this._platform.isBrowser &&
            (window.removeEventListener("mouseup", this._mouseupHandler),
            window.removeEventListener("touchend", this._touchendHandler));
      }
      _isActiveCell(e, t) {
        let r = e * this.numCols + t;
        return e && (r -= this._firstRowOffset), r == this.activeCell;
      }
      _focusActiveCell(e = !0) {
        xn(
          () => {
            setTimeout(() => {
              let t = this._elementRef.nativeElement.querySelector(
                ".mat-calendar-body-active"
              );
              t && (e || (this._skipNextFocus = !0), t.focus());
            });
          },
          { injector: this._injector }
        );
      }
      _scheduleFocusActiveCellAfterViewChecked() {
        this._focusActiveCellAfterViewChecked = !0;
      }
      _isRangeStart(e) {
        return nf(e, this.startValue, this.endValue);
      }
      _isRangeEnd(e) {
        return rf(e, this.startValue, this.endValue);
      }
      _isInRange(e) {
        return of(e, this.startValue, this.endValue, this.isRange);
      }
      _isComparisonStart(e) {
        return nf(e, this.comparisonStart, this.comparisonEnd);
      }
      _isComparisonBridgeStart(e, t, r) {
        if (
          !this._isComparisonStart(e) ||
          this._isRangeStart(e) ||
          !this._isInRange(e)
        )
          return !1;
        let o = this.rows[t][r - 1];
        if (!o) {
          let a = this.rows[t - 1];
          o = a && a[a.length - 1];
        }
        return o && !this._isRangeEnd(o.compareValue);
      }
      _isComparisonBridgeEnd(e, t, r) {
        if (
          !this._isComparisonEnd(e) ||
          this._isRangeEnd(e) ||
          !this._isInRange(e)
        )
          return !1;
        let o = this.rows[t][r + 1];
        if (!o) {
          let a = this.rows[t + 1];
          o = a && a[0];
        }
        return o && !this._isRangeStart(o.compareValue);
      }
      _isComparisonEnd(e) {
        return rf(e, this.comparisonStart, this.comparisonEnd);
      }
      _isInComparisonRange(e) {
        return of(e, this.comparisonStart, this.comparisonEnd, this.isRange);
      }
      _isComparisonIdentical(e) {
        return (
          this.comparisonStart === this.comparisonEnd &&
          e === this.comparisonStart
        );
      }
      _isPreviewStart(e) {
        return nf(e, this.previewStart, this.previewEnd);
      }
      _isPreviewEnd(e) {
        return rf(e, this.previewStart, this.previewEnd);
      }
      _isInPreview(e) {
        return of(e, this.previewStart, this.previewEnd, this.isRange);
      }
      _getDescribedby(e) {
        return this.isRange
          ? this.startValue === e && this.endValue === e
            ? `${this._startDateLabelId} ${this._endDateLabelId}`
            : this.startValue === e
            ? this._startDateLabelId
            : this.endValue === e
            ? this._endDateLabelId
            : null
          : null;
      }
      _getCellFromElement(e) {
        let t = tf(e);
        if (t) {
          let r = t.getAttribute("data-mat-row"),
            o = t.getAttribute("data-mat-col");
          if (r && o) return this.rows[parseInt(r)][parseInt(o)];
        }
        return null;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Re), j(Me));
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["", "mat-calendar-body", ""]],
          hostAttrs: [1, "mat-calendar-body"],
          inputs: {
            label: "label",
            rows: "rows",
            todayValue: "todayValue",
            startValue: "startValue",
            endValue: "endValue",
            labelMinRequiredCells: "labelMinRequiredCells",
            numCols: "numCols",
            activeCell: "activeCell",
            isRange: "isRange",
            cellAspectRatio: "cellAspectRatio",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            previewStart: "previewStart",
            previewEnd: "previewEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedValueChange: "selectedValueChange",
            previewChange: "previewChange",
            activeDateChange: "activeDateChange",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
          },
          exportAs: ["matCalendarBody"],
          standalone: !0,
          features: [Dt, le],
          attrs: KO,
          decls: 7,
          vars: 5,
          consts: [
            ["aria-hidden", "true"],
            ["role", "row"],
            [1, "mat-calendar-body-hidden-label", 3, "id"],
            [1, "mat-calendar-body-label"],
            [1, "mat-calendar-body-label", 3, "paddingTop", "paddingBottom"],
            [
              "role",
              "gridcell",
              1,
              "mat-calendar-body-cell-container",
              3,
              "width",
              "paddingTop",
              "paddingBottom",
            ],
            ["role", "gridcell", 1, "mat-calendar-body-cell-container"],
            [
              "type",
              "button",
              1,
              "mat-calendar-body-cell",
              3,
              "click",
              "focus",
              "ngClass",
              "tabindex",
            ],
            [1, "mat-calendar-body-cell-content", "mat-focus-indicator"],
            ["aria-hidden", "true", 1, "mat-calendar-body-cell-preview"],
          ],
          template: function (t, r) {
            t & 1 &&
              (A(0, XO, 3, 6, "tr", 0),
              Ko(1, ek, 4, 1, "tr", 1, QO, !0),
              l(3, "span", 2),
              h(4),
              c(),
              l(5, "span", 2),
              h(6),
              c()),
              t & 2 &&
                (Cn(r._firstRowOffset < r.labelMinRequiredCells ? 0 : -1),
                m(),
                Qo(r.rows),
                m(2),
                y("id", r._startDateLabelId),
                m(),
                Z(
                  " ",
                  r.startDateAccessibleName,
                  `
`
                ),
                m(),
                y("id", r._endDateLabelId),
                m(),
                Z(
                  " ",
                  r.endDateAccessibleName,
                  `
`
                ));
          },
          dependencies: [It],
          styles: [
            '.mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color)}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color)}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color)}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-app-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-app-secondary))}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
function ef(n) {
  return n?.nodeName === "TD";
}
function tf(n) {
  let i;
  return (
    ef(n)
      ? (i = n)
      : ef(n.parentNode)
      ? (i = n.parentNode)
      : ef(n.parentNode?.parentNode) && (i = n.parentNode.parentNode),
    i?.getAttribute("data-mat-row") != null ? i : null
  );
}
function nf(n, i, e) {
  return e !== null && i !== e && n < e && n === i;
}
function rf(n, i, e) {
  return i !== null && i !== e && n >= i && n === e;
}
function of(n, i, e, t) {
  return t && i !== null && e !== null && i !== e && n >= i && n <= e;
}
function $1(n) {
  let i = n.changedTouches[0];
  return document.elementFromPoint(i.clientX, i.clientY);
}
var gn = class {
    constructor(i, e) {
      (this.start = i), (this.end = e);
    }
  },
  Wd = (() => {
    class n {
      constructor(e, t) {
        (this.selection = e),
          (this._adapter = t),
          (this._selectionChanged = new Ee()),
          (this.selectionChanged = this._selectionChanged),
          (this.selection = e);
      }
      updateSelection(e, t) {
        let r = this.selection;
        (this.selection = e),
          this._selectionChanged.next({ selection: e, source: t, oldValue: r });
      }
      ngOnDestroy() {
        this._selectionChanged.complete();
      }
      _isValidDateInstance(e) {
        return this._adapter.isDateInstance(e) && this._adapter.isValid(e);
      }
      static {
        this.ɵfac = function (t) {
          kr();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  mk = (() => {
    class n extends Wd {
      constructor(e) {
        super(null, e);
      }
      add(e) {
        super.updateSelection(e, this);
      }
      isValid() {
        return (
          this.selection != null && this._isValidDateInstance(this.selection)
        );
      }
      isComplete() {
        return this.selection != null;
      }
      clone() {
        let e = new n(this._adapter);
        return e.updateSelection(this.selection, this), e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(Q(Ui));
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function fk(n, i) {
  return n || new mk(i);
}
var gk = { provide: Wd, deps: [[new Qa(), new zl(), Wd], Ui], useFactory: fk };
var Q1 = new Ce("MAT_DATE_RANGE_SELECTION_STRATEGY");
var af = 7,
  _k = 0,
  W1 = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          r =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          r,
          this.minDate,
          this.maxDate
        )),
          this._hasSameMonthAndYear(t, this._activeDate) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof gn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setRanges(this._selected);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, r, o, a) {
        (this._changeDetectorRef = e),
          (this._dateFormats = t),
          (this._dateAdapter = r),
          (this._dir = o),
          (this._rangeStrategy = a),
          (this._rerenderSubscription = zi.EMPTY),
          (this.activeDrag = null),
          (this.selectedChange = new xe()),
          (this._userSelection = new xe()),
          (this.dragStarted = new xe()),
          (this.dragEnded = new xe()),
          (this.activeDateChange = new xe()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Un(null))
          .subscribe(() => this._init());
      }
      ngOnChanges(e) {
        let t = e.comparisonStart || e.comparisonEnd;
        t && !t.firstChange && this._setRanges(this.selected),
          e.activeDrag && !this.activeDrag && this._clearPreview();
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _dateSelected(e) {
        let t = e.value,
          r = this._getDateFromDayOfMonth(t),
          o,
          a;
        this._selected instanceof gn
          ? ((o = this._getDateInCurrentMonth(this._selected.start)),
            (a = this._getDateInCurrentMonth(this._selected.end)))
          : (o = a = this._getDateInCurrentMonth(this._selected)),
          (o !== t || a !== t) && this.selectedChange.emit(r),
          this._userSelection.emit({ value: r, event: e.event }),
          this._clearPreview(),
          this._changeDetectorRef.markForCheck();
      }
      _updateActiveDate(e) {
        let t = e.value,
          r = this._activeDate;
        (this.activeDate = this._getDateFromDayOfMonth(t)),
          this._dateAdapter.compareDate(r, this.activeDate) &&
            this.activeDateChange.emit(this._activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          r = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              r ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              r ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              -7
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              7
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              1 - this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              this._dateAdapter.getNumDaysInMonth(this._activeDate) -
                this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
            break;
          case 34:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
            break;
          case 13:
          case 32:
            (this._selectionKeyPressed = !0),
              this._canSelect(this._activeDate) && e.preventDefault();
            return;
          case 27:
            this._previewEnd != null &&
              !r1(e) &&
              (this._clearPreview(),
              this.activeDrag
                ? this.dragEnded.emit({ value: null, event: e })
                : (this.selectedChange.emit(null),
                  this._userSelection.emit({ value: null, event: e })),
              e.preventDefault(),
              e.stopPropagation());
            return;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._canSelect(this._activeDate) &&
            this._dateSelected({
              value: this._dateAdapter.getDate(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setRanges(this.selected),
          (this._todayDate = this._getCellCompareValue(
            this._dateAdapter.today()
          )),
          (this._monthLabel = this._dateFormats.display.monthLabel
            ? this._dateAdapter.format(
                this.activeDate,
                this._dateFormats.display.monthLabel
              )
            : this._dateAdapter
                .getMonthNames("short")
                [
                  this._dateAdapter.getMonth(this.activeDate)
                ].toLocaleUpperCase());
        let e = this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          1
        );
        (this._firstWeekOffset =
          (af +
            this._dateAdapter.getDayOfWeek(e) -
            this._dateAdapter.getFirstDayOfWeek()) %
          af),
          this._initWeekdays(),
          this._createWeekCells(),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell(e) {
        this._matCalendarBody._focusActiveCell(e);
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _previewChanged({ event: e, value: t }) {
        if (this._rangeStrategy) {
          let r = t ? t.rawValue : null,
            o = this._rangeStrategy.createPreview(r, this.selected, e);
          if (
            ((this._previewStart = this._getCellCompareValue(o.start)),
            (this._previewEnd = this._getCellCompareValue(o.end)),
            this.activeDrag && r)
          ) {
            let a = this._rangeStrategy.createDrag?.(
              this.activeDrag.value,
              this.selected,
              r,
              e
            );
            a &&
              ((this._previewStart = this._getCellCompareValue(a.start)),
              (this._previewEnd = this._getCellCompareValue(a.end)));
          }
          this._changeDetectorRef.detectChanges();
        }
      }
      _dragEnded(e) {
        if (this.activeDrag)
          if (e.value) {
            let t = this._rangeStrategy?.createDrag?.(
              this.activeDrag.value,
              this.selected,
              e.value,
              e.event
            );
            this.dragEnded.emit({ value: t ?? null, event: e.event });
          } else this.dragEnded.emit({ value: null, event: e.event });
      }
      _getDateFromDayOfMonth(e) {
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          e
        );
      }
      _initWeekdays() {
        let e = this._dateAdapter.getFirstDayOfWeek(),
          t = this._dateAdapter.getDayOfWeekNames("narrow"),
          o = this._dateAdapter
            .getDayOfWeekNames("long")
            .map((a, d) => ({ long: a, narrow: t[d], id: _k++ }));
        this._weekdays = o.slice(e).concat(o.slice(0, e));
      }
      _createWeekCells() {
        let e = this._dateAdapter.getNumDaysInMonth(this.activeDate),
          t = this._dateAdapter.getDateNames();
        this._weeks = [[]];
        for (let r = 0, o = this._firstWeekOffset; r < e; r++, o++) {
          o == af && (this._weeks.push([]), (o = 0));
          let a = this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              r + 1
            ),
            d = this._shouldEnableDate(a),
            u = this._dateAdapter.format(
              a,
              this._dateFormats.display.dateA11yLabel
            ),
            f = this.dateClass ? this.dateClass(a, "month") : void 0;
          this._weeks[this._weeks.length - 1].push(
            new fl(r + 1, t[r], u, d, f, this._getCellCompareValue(a), a)
          );
        }
      }
      _shouldEnableDate(e) {
        return (
          !!e &&
          (!this.minDate ||
            this._dateAdapter.compareDate(e, this.minDate) >= 0) &&
          (!this.maxDate ||
            this._dateAdapter.compareDate(e, this.maxDate) <= 0) &&
          (!this.dateFilter || this.dateFilter(e))
        );
      }
      _getDateInCurrentMonth(e) {
        return e && this._hasSameMonthAndYear(e, this.activeDate)
          ? this._dateAdapter.getDate(e)
          : null;
      }
      _hasSameMonthAndYear(e, t) {
        return !!(
          e &&
          t &&
          this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(t) &&
          this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t)
        );
      }
      _getCellCompareValue(e) {
        if (e) {
          let t = this._dateAdapter.getYear(e),
            r = this._dateAdapter.getMonth(e),
            o = this._dateAdapter.getDate(e);
          return new Date(t, r, o).getTime();
        }
        return null;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setRanges(e) {
        e instanceof gn
          ? ((this._rangeStart = this._getCellCompareValue(e.start)),
            (this._rangeEnd = this._getCellCompareValue(e.end)),
            (this._isRange = !0))
          : ((this._rangeStart = this._rangeEnd = this._getCellCompareValue(e)),
            (this._isRange = !1)),
          (this._comparisonRangeStart = this._getCellCompareValue(
            this.comparisonStart
          )),
          (this._comparisonRangeEnd = this._getCellCompareValue(
            this.comparisonEnd
          ));
      }
      _canSelect(e) {
        return !this.dateFilter || this.dateFilter(e);
      }
      _clearPreview() {
        this._previewStart = this._previewEnd = null;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Qe), j(Oa, 8), j(Ui, 8), j(Ta, 8), j(Q1, 8));
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["mat-month-view"]],
          viewQuery: function (t, r) {
            if ((t & 1 && _t(Ia, 5), t & 2)) {
              let o;
              nt((o = rt())) && (r._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
            activeDrag: "activeDrag",
          },
          outputs: {
            selectedChange: "selectedChange",
            _userSelection: "_userSelection",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMonthView"],
          standalone: !0,
          features: [Dt, le],
          decls: 8,
          vars: 14,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            [1, "mat-calendar-table-header"],
            ["scope", "col"],
            ["aria-hidden", "true"],
            ["colspan", "7", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "previewChange",
              "dragStarted",
              "dragEnded",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "comparisonStart",
              "comparisonEnd",
              "previewStart",
              "previewEnd",
              "isRange",
              "labelMinRequiredCells",
              "activeCell",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [1, "cdk-visually-hidden"],
          ],
          template: function (t, r) {
            t & 1 &&
              (l(0, "table", 0)(1, "thead", 1)(2, "tr"),
              Ko(3, tk, 5, 2, "th", 2, K1),
              c(),
              l(5, "tr", 3),
              U(6, "th", 4),
              c()(),
              l(7, "tbody", 5),
              R("selectedValueChange", function (a) {
                return r._dateSelected(a);
              })("activeDateChange", function (a) {
                return r._updateActiveDate(a);
              })("previewChange", function (a) {
                return r._previewChanged(a);
              })("dragStarted", function (a) {
                return r.dragStarted.emit(a);
              })("dragEnded", function (a) {
                return r._dragEnded(a);
              })("keyup", function (a) {
                return r._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return r._handleCalendarBodyKeydown(a);
              }),
              c()()),
              t & 2 &&
                (m(3),
                Qo(r._weekdays),
                m(4),
                y("label", r._monthLabel)("rows", r._weeks)(
                  "todayValue",
                  r._todayDate
                )("startValue", r._rangeStart)("endValue", r._rangeEnd)(
                  "comparisonStart",
                  r._comparisonRangeStart
                )("comparisonEnd", r._comparisonRangeEnd)(
                  "previewStart",
                  r._previewStart
                )("previewEnd", r._previewEnd)("isRange", r._isRange)(
                  "labelMinRequiredCells",
                  3
                )("activeCell", r._dateAdapter.getDate(r.activeDate) - 1)(
                  "startDateAccessibleName",
                  r.startDateAccessibleName
                )("endDateAccessibleName", r.endDateAccessibleName));
          },
          dependencies: [Ia],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  en = 24,
  sf = 4,
  G1 = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          r =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          r,
          this.minDate,
          this.maxDate
        )),
          X1(
            this._dateAdapter,
            t,
            this._activeDate,
            this.minDate,
            this.maxDate
          ) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof gn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedYear(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, r) {
        (this._changeDetectorRef = e),
          (this._dateAdapter = t),
          (this._dir = r),
          (this._rerenderSubscription = zi.EMPTY),
          (this.selectedChange = new xe()),
          (this.yearSelected = new xe()),
          (this.activeDateChange = new xe()),
          this._dateAdapter,
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Un(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _init() {
        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());
        let t =
          this._dateAdapter.getYear(this._activeDate) -
          ml(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
        this._years = [];
        for (let r = 0, o = []; r < en; r++)
          o.push(t + r),
            o.length == sf &&
              (this._years.push(o.map((a) => this._createCellForYear(a))),
              (o = []));
        this._changeDetectorRef.markForCheck();
      }
      _yearSelected(e) {
        let t = e.value,
          r = this._dateAdapter.createDate(t, 0, 1),
          o = this._getDateFromYear(t);
        this.yearSelected.emit(r), this.selectedChange.emit(o);
      }
      _updateActiveDate(e) {
        let t = e.value,
          r = this._activeDate;
        (this.activeDate = this._getDateFromYear(t)),
          this._dateAdapter.compareDate(r, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          r = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              r ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              r ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -sf
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              sf
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -ml(
                this._dateAdapter,
                this.activeDate,
                this.minDate,
                this.maxDate
              )
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              en -
                ml(
                  this._dateAdapter,
                  this.activeDate,
                  this.minDate,
                  this.maxDate
                ) -
                1
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -en * 10 : -en
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? en * 10 : en
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked(),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._yearSelected({
              value: this._dateAdapter.getYear(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _getActiveCell() {
        return ml(
          this._dateAdapter,
          this.activeDate,
          this.minDate,
          this.maxDate
        );
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getDateFromYear(e) {
        let t = this._dateAdapter.getMonth(this.activeDate),
          r = this._dateAdapter.getNumDaysInMonth(
            this._dateAdapter.createDate(e, t, 1)
          );
        return this._dateAdapter.createDate(
          e,
          t,
          Math.min(this._dateAdapter.getDate(this.activeDate), r)
        );
      }
      _createCellForYear(e) {
        let t = this._dateAdapter.createDate(e, 0, 1),
          r = this._dateAdapter.getYearName(t),
          o = this.dateClass ? this.dateClass(t, "multi-year") : void 0;
        return new fl(e, r, r, this._shouldEnableYear(e), o);
      }
      _shouldEnableYear(e) {
        if (
          e == null ||
          (this.maxDate && e > this._dateAdapter.getYear(this.maxDate)) ||
          (this.minDate && e < this._dateAdapter.getYear(this.minDate))
        )
          return !1;
        if (!this.dateFilter) return !0;
        let t = this._dateAdapter.createDate(e, 0, 1);
        for (
          let r = t;
          this._dateAdapter.getYear(r) == e;
          r = this._dateAdapter.addCalendarDays(r, 1)
        )
          if (this.dateFilter(r)) return !0;
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedYear(e) {
        if (((this._selectedYear = null), e instanceof gn)) {
          let t = e.start || e.end;
          t && (this._selectedYear = this._dateAdapter.getYear(t));
        } else e && (this._selectedYear = this._dateAdapter.getYear(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Qe), j(Ui, 8), j(Ta, 8));
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["mat-multi-year-view"]],
          viewQuery: function (t, r) {
            if ((t & 1 && _t(Ia, 5), t & 2)) {
              let o;
              nt((o = rt())) && (r._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMultiYearView"],
          standalone: !0,
          features: [le],
          decls: 5,
          vars: 7,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (t, r) {
            t & 1 &&
              (l(0, "table", 0)(1, "thead", 1)(2, "tr"),
              U(3, "th", 2),
              c()(),
              l(4, "tbody", 3),
              R("selectedValueChange", function (a) {
                return r._yearSelected(a);
              })("activeDateChange", function (a) {
                return r._updateActiveDate(a);
              })("keyup", function (a) {
                return r._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return r._handleCalendarBodyKeydown(a);
              }),
              c()()),
              t & 2 &&
                (m(4),
                y("rows", r._years)("todayValue", r._todayYear)(
                  "startValue",
                  r._selectedYear
                )("endValue", r._selectedYear)("numCols", 4)(
                  "cellAspectRatio",
                  4 / 7
                )("activeCell", r._getActiveCell()));
          },
          dependencies: [Ia],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
function X1(n, i, e, t, r) {
  let o = n.getYear(i),
    a = n.getYear(e),
    d = Z1(n, t, r);
  return Math.floor((o - d) / en) === Math.floor((a - d) / en);
}
function ml(n, i, e, t) {
  let r = n.getYear(i);
  return bk(r - Z1(n, e, t), en);
}
function Z1(n, i, e) {
  let t = 0;
  return e ? (t = n.getYear(e) - en + 1) : i && (t = n.getYear(i)), t;
}
function bk(n, i) {
  return ((n % i) + i) % i;
}
var Y1 = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          r =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          r,
          this.minDate,
          this.maxDate
        )),
          this._dateAdapter.getYear(t) !==
            this._dateAdapter.getYear(this._activeDate) && this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof gn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedMonth(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, r, o) {
        (this._changeDetectorRef = e),
          (this._dateFormats = t),
          (this._dateAdapter = r),
          (this._dir = o),
          (this._rerenderSubscription = zi.EMPTY),
          (this.selectedChange = new xe()),
          (this.monthSelected = new xe()),
          (this.activeDateChange = new xe()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Un(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _monthSelected(e) {
        let t = e.value,
          r = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            t,
            1
          );
        this.monthSelected.emit(r);
        let o = this._getDateFromMonth(t);
        this.selectedChange.emit(o);
      }
      _updateActiveDate(e) {
        let t = e.value,
          r = this._activeDate;
        (this.activeDate = this._getDateFromMonth(t)),
          this._dateAdapter.compareDate(r, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          r = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              r ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              r ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -4
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              4
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              11 - this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -10 : -1
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? 10 : 1
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._monthSelected({
              value: this._dateAdapter.getMonth(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setSelectedMonth(this.selected),
          (this._todayMonth = this._getMonthInCurrentYear(
            this._dateAdapter.today()
          )),
          (this._yearLabel = this._dateAdapter.getYearName(this.activeDate));
        let e = this._dateAdapter.getMonthNames("short");
        (this._months = [
          [0, 1, 2, 3],
          [4, 5, 6, 7],
          [8, 9, 10, 11],
        ].map((t) => t.map((r) => this._createCellForMonth(r, e[r])))),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getMonthInCurrentYear(e) {
        return e &&
          this._dateAdapter.getYear(e) ==
            this._dateAdapter.getYear(this.activeDate)
          ? this._dateAdapter.getMonth(e)
          : null;
      }
      _getDateFromMonth(e) {
        let t = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          r = this._dateAdapter.getNumDaysInMonth(t);
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          e,
          Math.min(this._dateAdapter.getDate(this.activeDate), r)
        );
      }
      _createCellForMonth(e, t) {
        let r = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          o = this._dateAdapter.format(
            r,
            this._dateFormats.display.monthYearA11yLabel
          ),
          a = this.dateClass ? this.dateClass(r, "year") : void 0;
        return new fl(
          e,
          t.toLocaleUpperCase(),
          o,
          this._shouldEnableMonth(e),
          a
        );
      }
      _shouldEnableMonth(e) {
        let t = this._dateAdapter.getYear(this.activeDate);
        if (
          e == null ||
          this._isYearAndMonthAfterMaxDate(t, e) ||
          this._isYearAndMonthBeforeMinDate(t, e)
        )
          return !1;
        if (!this.dateFilter) return !0;
        let r = this._dateAdapter.createDate(t, e, 1);
        for (
          let o = r;
          this._dateAdapter.getMonth(o) == e;
          o = this._dateAdapter.addCalendarDays(o, 1)
        )
          if (this.dateFilter(o)) return !0;
        return !1;
      }
      _isYearAndMonthAfterMaxDate(e, t) {
        if (this.maxDate) {
          let r = this._dateAdapter.getYear(this.maxDate),
            o = this._dateAdapter.getMonth(this.maxDate);
          return e > r || (e === r && t > o);
        }
        return !1;
      }
      _isYearAndMonthBeforeMinDate(e, t) {
        if (this.minDate) {
          let r = this._dateAdapter.getYear(this.minDate),
            o = this._dateAdapter.getMonth(this.minDate);
          return e < r || (e === r && t < o);
        }
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedMonth(e) {
        e instanceof gn
          ? (this._selectedMonth =
              this._getMonthInCurrentYear(e.start) ||
              this._getMonthInCurrentYear(e.end))
          : (this._selectedMonth = this._getMonthInCurrentYear(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Qe), j(Oa, 8), j(Ui, 8), j(Ta, 8));
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["mat-year-view"]],
          viewQuery: function (t, r) {
            if ((t & 1 && _t(Ia, 5), t & 2)) {
              let o;
              nt((o = rt())) && (r._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            monthSelected: "monthSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matYearView"],
          standalone: !0,
          features: [le],
          decls: 5,
          vars: 9,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "labelMinRequiredCells",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (t, r) {
            t & 1 &&
              (l(0, "table", 0)(1, "thead", 1)(2, "tr"),
              U(3, "th", 2),
              c()(),
              l(4, "tbody", 3),
              R("selectedValueChange", function (a) {
                return r._monthSelected(a);
              })("activeDateChange", function (a) {
                return r._updateActiveDate(a);
              })("keyup", function (a) {
                return r._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return r._handleCalendarBodyKeydown(a);
              }),
              c()()),
              t & 2 &&
                (m(4),
                y("label", r._yearLabel)("rows", r._months)(
                  "todayValue",
                  r._todayMonth
                )("startValue", r._selectedMonth)("endValue", r._selectedMonth)(
                  "labelMinRequiredCells",
                  2
                )("numCols", 4)("cellAspectRatio", 4 / 7)(
                  "activeCell",
                  r._dateAdapter.getMonth(r.activeDate)
                ));
          },
          dependencies: [Ia],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  vk = 1,
  J1 = (() => {
    class n {
      constructor(e, t, r, o, a) {
        (this._intl = e),
          (this.calendar = t),
          (this._dateAdapter = r),
          (this._dateFormats = o),
          (this._id = `mat-calendar-header-${vk++}`),
          (this._periodButtonLabelId = `${this._id}-period-label`),
          this.calendar.stateChanges.subscribe(() => a.markForCheck());
      }
      get periodButtonText() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRange(...this._formatMinAndMaxYearLabels());
      }
      get periodButtonDescription() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRangeLabel(
              ...this._formatMinAndMaxYearLabels()
            );
      }
      get periodButtonLabel() {
        return this.calendar.currentView == "month"
          ? this._intl.switchToMultiYearViewLabel
          : this._intl.switchToMonthViewLabel;
      }
      get prevButtonLabel() {
        return {
          month: this._intl.prevMonthLabel,
          year: this._intl.prevYearLabel,
          "multi-year": this._intl.prevMultiYearLabel,
        }[this.calendar.currentView];
      }
      get nextButtonLabel() {
        return {
          month: this._intl.nextMonthLabel,
          year: this._intl.nextYearLabel,
          "multi-year": this._intl.nextMultiYearLabel,
        }[this.calendar.currentView];
      }
      currentPeriodClicked() {
        this.calendar.currentView =
          this.calendar.currentView == "month" ? "multi-year" : "month";
      }
      previousClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? -1 : -en
              );
      }
      nextClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? 1 : en
              );
      }
      previousEnabled() {
        return this.calendar.minDate
          ? !this.calendar.minDate ||
              !this._isSameView(this.calendar.activeDate, this.calendar.minDate)
          : !0;
      }
      nextEnabled() {
        return (
          !this.calendar.maxDate ||
          !this._isSameView(this.calendar.activeDate, this.calendar.maxDate)
        );
      }
      _isSameView(e, t) {
        return this.calendar.currentView == "month"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t) &&
              this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(t)
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t)
          : X1(
              this._dateAdapter,
              e,
              t,
              this.calendar.minDate,
              this.calendar.maxDate
            );
      }
      _formatMinAndMaxYearLabels() {
        let t =
            this._dateAdapter.getYear(this.calendar.activeDate) -
            ml(
              this._dateAdapter,
              this.calendar.activeDate,
              this.calendar.minDate,
              this.calendar.maxDate
            ),
          r = t + en - 1,
          o = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(t, 0, 1)
          ),
          a = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(r, 0, 1)
          );
        return [o, a];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            j(gl),
            j(wi(() => lf)),
            j(Ui, 8),
            j(Oa, 8),
            j(Qe)
          );
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["mat-calendar-header"]],
          exportAs: ["matCalendarHeader"],
          standalone: !0,
          features: [le],
          ngContentSelectors: ik,
          decls: 17,
          vars: 11,
          consts: [
            [1, "mat-calendar-header"],
            [1, "mat-calendar-controls"],
            ["aria-live", "polite", 1, "cdk-visually-hidden", 3, "id"],
            [
              "mat-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-period-button",
              3,
              "click",
            ],
            ["aria-hidden", "true"],
            [
              "viewBox",
              "0 0 10 5",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-calendar-arrow",
            ],
            ["points", "0,0 5,5 10,0"],
            [1, "mat-calendar-spacer"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-previous-button",
              3,
              "click",
              "disabled",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "focusable",
              "false",
              "aria-hidden",
              "true",
            ],
            ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-next-button",
              3,
              "click",
              "disabled",
            ],
            ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
          ],
          template: function (t, r) {
            t & 1 &&
              (Jt(),
              l(0, "div", 0)(1, "div", 1)(2, "span", 2),
              h(3),
              c(),
              l(4, "button", 3),
              R("click", function () {
                return r.currentPeriodClicked();
              }),
              l(5, "span", 4),
              h(6),
              c(),
              Ct(),
              l(7, "svg", 5),
              U(8, "polygon", 6),
              c()(),
              oo(),
              U(9, "div", 7),
              Vt(10),
              l(11, "button", 8),
              R("click", function () {
                return r.previousClicked();
              }),
              Ct(),
              l(12, "svg", 9),
              U(13, "path", 10),
              c()(),
              oo(),
              l(14, "button", 11),
              R("click", function () {
                return r.nextClicked();
              }),
              Ct(),
              l(15, "svg", 9),
              U(16, "path", 12),
              c()()()()),
              t & 2 &&
                (m(2),
                y("id", r._periodButtonLabelId),
                m(),
                B(r.periodButtonDescription),
                m(),
                ce("aria-label", r.periodButtonLabel)(
                  "aria-describedby",
                  r._periodButtonLabelId
                ),
                m(2),
                B(r.periodButtonText),
                m(),
                ne("mat-calendar-invert", r.calendar.currentView !== "month"),
                m(4),
                y("disabled", !r.previousEnabled()),
                ce("aria-label", r.prevButtonLabel),
                m(3),
                y("disabled", !r.nextEnabled()),
                ce("aria-label", r.nextButtonLabel));
          },
          dependencies: [Zm, Jm],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  lf = (() => {
    class n {
      get startAt() {
        return this._startAt;
      }
      set startAt(e) {
        this._startAt = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof gn
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ));
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get activeDate() {
        return this._clampedActiveDate;
      }
      set activeDate(e) {
        (this._clampedActiveDate = this._dateAdapter.clampDate(
          e,
          this.minDate,
          this.maxDate
        )),
          this.stateChanges.next(),
          this._changeDetectorRef.markForCheck();
      }
      get currentView() {
        return this._currentView;
      }
      set currentView(e) {
        let t = this._currentView !== e ? e : null;
        (this._currentView = e),
          (this._moveFocusOnNextTick = !0),
          this._changeDetectorRef.markForCheck(),
          t && this.viewChanged.emit(t);
      }
      constructor(e, t, r, o) {
        (this._dateAdapter = t),
          (this._dateFormats = r),
          (this._changeDetectorRef = o),
          (this._moveFocusOnNextTick = !1),
          (this.startView = "month"),
          (this.selectedChange = new xe()),
          (this.yearSelected = new xe()),
          (this.monthSelected = new xe()),
          (this.viewChanged = new xe(!0)),
          (this._userSelection = new xe()),
          (this._userDragDrop = new xe()),
          (this._activeDrag = null),
          (this.stateChanges = new Ee()),
          (this._intlChanges = e.changes.subscribe(() => {
            o.markForCheck(), this.stateChanges.next();
          }));
      }
      ngAfterContentInit() {
        (this._calendarHeaderPortal = new hl(this.headerComponent || J1)),
          (this.activeDate = this.startAt || this._dateAdapter.today()),
          (this._currentView = this.startView);
      }
      ngAfterViewChecked() {
        this._moveFocusOnNextTick &&
          ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
      }
      ngOnDestroy() {
        this._intlChanges.unsubscribe(), this.stateChanges.complete();
      }
      ngOnChanges(e) {
        let t =
            e.minDate &&
            !this._dateAdapter.sameDate(
              e.minDate.previousValue,
              e.minDate.currentValue
            )
              ? e.minDate
              : void 0,
          r =
            e.maxDate &&
            !this._dateAdapter.sameDate(
              e.maxDate.previousValue,
              e.maxDate.currentValue
            )
              ? e.maxDate
              : void 0,
          o = t || r || e.dateFilter;
        if (o && !o.firstChange) {
          let a = this._getCurrentViewComponent();
          a &&
            ((this._moveFocusOnNextTick = !0),
            this._changeDetectorRef.detectChanges(),
            a._init());
        }
        this.stateChanges.next();
      }
      focusActiveCell() {
        this._getCurrentViewComponent()._focusActiveCell(!1);
      }
      updateTodaysDate() {
        this._getCurrentViewComponent()._init();
      }
      _dateSelected(e) {
        let t = e.value;
        (this.selected instanceof gn ||
          (t && !this._dateAdapter.sameDate(t, this.selected))) &&
          this.selectedChange.emit(t),
          this._userSelection.emit(e);
      }
      _yearSelectedInMultiYearView(e) {
        this.yearSelected.emit(e);
      }
      _monthSelectedInYearView(e) {
        this.monthSelected.emit(e);
      }
      _goToDateInView(e, t) {
        (this.activeDate = e), (this.currentView = t);
      }
      _dragStarted(e) {
        this._activeDrag = e;
      }
      _dragEnded(e) {
        this._activeDrag &&
          (e.value && this._userDragDrop.emit(e), (this._activeDrag = null));
      }
      _getCurrentViewComponent() {
        return this.monthView || this.yearView || this.multiYearView;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(gl), j(Ui, 8), j(Oa, 8), j(Qe));
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["mat-calendar"]],
          viewQuery: function (t, r) {
            if ((t & 1 && (_t(W1, 5), _t(Y1, 5), _t(G1, 5)), t & 2)) {
              let o;
              nt((o = rt())) && (r.monthView = o.first),
                nt((o = rt())) && (r.yearView = o.first),
                nt((o = rt())) && (r.multiYearView = o.first);
            }
          },
          hostAttrs: [1, "mat-calendar"],
          inputs: {
            headerComponent: "headerComponent",
            startAt: "startAt",
            startView: "startView",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            monthSelected: "monthSelected",
            viewChanged: "viewChanged",
            _userSelection: "_userSelection",
            _userDragDrop: "_userDragDrop",
          },
          exportAs: ["matCalendar"],
          standalone: !0,
          features: [Bt([gk]), Dt, le],
          decls: 5,
          vars: 2,
          consts: [
            [3, "cdkPortalOutlet"],
            [
              "cdkMonitorSubtreeFocus",
              "",
              "tabindex",
              "-1",
              1,
              "mat-calendar-content",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "_userSelection",
              "dragStarted",
              "dragEnded",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDateChange",
              "monthSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "yearSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
          ],
          template: function (t, r) {
            if (
              (t & 1 &&
                (A(0, nk, 0, 0, "ng-template", 0),
                l(1, "div", 1),
                A(2, rk, 1, 11, "mat-month-view", 2)(
                  3,
                  ok,
                  1,
                  6,
                  "mat-year-view",
                  3
                )(4, ak, 1, 6, "mat-multi-year-view", 3),
                c()),
              t & 2)
            ) {
              let o;
              y("cdkPortalOutlet", r._calendarHeaderPortal),
                m(2),
                Cn(
                  (o = r.currentView) === "month"
                    ? 2
                    : o === "year"
                    ? 3
                    : o === "multi-year"
                    ? 4
                    : -1
                );
            }
          },
          dependencies: [Vm, m1, W1, Y1, G1],
          styles: [
            '.mat-calendar{display:block;line-height:normal;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-app-on-surface-variant))}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-app-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  q1 = {
    transformPanel: lo("transformPanel", [
      qi(
        "void => enter-dropdown",
        Yi(
          "120ms cubic-bezier(0, 0, 0.2, 1)",
          lh([
            li({ opacity: 0, transform: "scale(1, 0.8)" }),
            li({ opacity: 1, transform: "scale(1, 1)" }),
          ])
        )
      ),
      qi(
        "void => enter-dialog",
        Yi(
          "150ms cubic-bezier(0, 0, 0.2, 1)",
          lh([
            li({ opacity: 0, transform: "scale(0.7)" }),
            li({ transform: "none", opacity: 1 }),
          ])
        )
      ),
      qi("* => void", Yi("100ms linear", li({ opacity: 0 }))),
    ]),
    fadeInCalendar: lo("fadeInCalendar", [
      dr("void", li({ opacity: 0 })),
      dr("enter", li({ opacity: 1 })),
      qi("void => *", Yi("120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)")),
    ]),
  };
var yk = new Ce("mat-datepicker-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let n = W(Ea);
    return () => n.scrollStrategies.reposition();
  },
});
function xk(n) {
  return () => n.scrollStrategies.reposition();
}
var Ck = { provide: yk, deps: [Ea], useFactory: xk },
  wk = (() => {
    class n {
      constructor(e, t, r, o, a, d) {
        (this._elementRef = e),
          (this._changeDetectorRef = t),
          (this._globalModel = r),
          (this._dateAdapter = o),
          (this._rangeSelectionStrategy = a),
          (this._subscriptions = new zi()),
          (this._animationDone = new Ee()),
          (this._isAnimating = !1),
          (this._actionsPortal = null),
          (this._closeButtonText = d.closeCalendarLabel);
      }
      ngOnInit() {
        this._animationState = this.datepicker.touchUi
          ? "enter-dialog"
          : "enter-dropdown";
      }
      ngAfterViewInit() {
        this._subscriptions.add(
          this.datepicker.stateChanges.subscribe(() => {
            this._changeDetectorRef.markForCheck();
          })
        ),
          this._calendar.focusActiveCell();
      }
      ngOnDestroy() {
        this._subscriptions.unsubscribe(), this._animationDone.complete();
      }
      _handleUserSelection(e) {
        let t = this._model.selection,
          r = e.value,
          o = t instanceof gn;
        if (o && this._rangeSelectionStrategy) {
          let a = this._rangeSelectionStrategy.selectionFinished(r, t, e.event);
          this._model.updateSelection(a, this);
        } else
          r && (o || !this._dateAdapter.sameDate(r, t)) && this._model.add(r);
        (!this._model || this._model.isComplete()) &&
          !this._actionsPortal &&
          this.datepicker.close();
      }
      _handleUserDragDrop(e) {
        this._model.updateSelection(e.value, this);
      }
      _startExitAnimation() {
        (this._animationState = "void"), this._changeDetectorRef.markForCheck();
      }
      _handleAnimationEvent(e) {
        (this._isAnimating = e.phaseName === "start"),
          this._isAnimating || this._animationDone.next();
      }
      _getSelected() {
        return this._model.selection;
      }
      _applyPendingSelection() {
        this._model !== this._globalModel &&
          this._globalModel.updateSelection(this._model.selection, this);
      }
      _assignActions(e, t) {
        (this._model = e ? this._globalModel.clone() : this._globalModel),
          (this._actionsPortal = e),
          t && this._changeDetectorRef.detectChanges();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Re), j(Qe), j(Wd), j(Ui), j(Q1, 8), j(gl));
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["mat-datepicker-content"]],
          viewQuery: function (t, r) {
            if ((t & 1 && _t(lf, 5), t & 2)) {
              let o;
              nt((o = rt())) && (r._calendar = o.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-content"],
          hostVars: 5,
          hostBindings: function (t, r) {
            t & 1 &&
              Ng("@transformPanel.start", function (a) {
                return r._handleAnimationEvent(a);
              })("@transformPanel.done", function (a) {
                return r._handleAnimationEvent(a);
              }),
              t & 2 &&
                (Yl("@transformPanel", r._animationState),
                He(r.color ? "mat-" + r.color : ""),
                ne("mat-datepicker-content-touch", r.datepicker.touchUi));
          },
          inputs: { color: "color" },
          exportAs: ["matDatepickerContent"],
          standalone: !0,
          features: [le],
          decls: 5,
          vars: 27,
          consts: [
            [
              "cdkTrapFocus",
              "",
              "role",
              "dialog",
              1,
              "mat-datepicker-content-container",
            ],
            [
              3,
              "yearSelected",
              "monthSelected",
              "viewChanged",
              "_userSelection",
              "_userDragDrop",
              "id",
              "startAt",
              "startView",
              "minDate",
              "maxDate",
              "dateFilter",
              "headerComponent",
              "selected",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [3, "cdkPortalOutlet"],
            [
              "type",
              "button",
              "mat-raised-button",
              "",
              1,
              "mat-datepicker-close-button",
              3,
              "focus",
              "blur",
              "click",
              "color",
            ],
          ],
          template: function (t, r) {
            if (
              (t & 1 &&
                (l(0, "div", 0)(1, "mat-calendar", 1),
                R("yearSelected", function (a) {
                  return r.datepicker._selectYear(a);
                })("monthSelected", function (a) {
                  return r.datepicker._selectMonth(a);
                })("viewChanged", function (a) {
                  return r.datepicker._viewChanged(a);
                })("_userSelection", function (a) {
                  return r._handleUserSelection(a);
                })("_userDragDrop", function (a) {
                  return r._handleUserDragDrop(a);
                }),
                c(),
                A(2, sk, 0, 0, "ng-template", 2),
                l(3, "button", 3),
                R("focus", function () {
                  return (r._closeButtonFocused = !0);
                })("blur", function () {
                  return (r._closeButtonFocused = !1);
                })("click", function () {
                  return r.datepicker.close();
                }),
                h(4),
                c()()),
              t & 2)
            ) {
              let o;
              ne(
                "mat-datepicker-content-container-with-custom-header",
                r.datepicker.calendarHeaderComponent
              )(
                "mat-datepicker-content-container-with-actions",
                r._actionsPortal
              ),
                ce("aria-modal", !0)(
                  "aria-labelledby",
                  (o = r._dialogLabelId) !== null && o !== void 0 ? o : void 0
                ),
                m(),
                He(r.datepicker.panelClass),
                y("id", r.datepicker.id)("startAt", r.datepicker.startAt)(
                  "startView",
                  r.datepicker.startView
                )("minDate", r.datepicker._getMinDate())(
                  "maxDate",
                  r.datepicker._getMaxDate()
                )("dateFilter", r.datepicker._getDateFilter())(
                  "headerComponent",
                  r.datepicker.calendarHeaderComponent
                )("selected", r._getSelected())(
                  "dateClass",
                  r.datepicker.dateClass
                )("comparisonStart", r.comparisonStart)(
                  "comparisonEnd",
                  r.comparisonEnd
                )("@fadeInCalendar", "enter")(
                  "startDateAccessibleName",
                  r.startDateAccessibleName
                )("endDateAccessibleName", r.endDateAccessibleName),
                m(),
                y("cdkPortalOutlet", r._actionsPortal),
                m(),
                ne("cdk-visually-hidden", !r._closeButtonFocused),
                y("color", r.color || "primary"),
                m(),
                B(r._closeButtonText);
            }
          },
          dependencies: [h1, lf, Vm, Zm],
          styles: [
            ".mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-app-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-app-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-app-corner-large))}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}",
          ],
          encapsulation: 2,
          data: { animation: [q1.transformPanel, q1.fadeInCalendar] },
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var Sk = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵdir = Ie({
          type: n,
          selectors: [["", "matDatepickerToggleIcon", ""]],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  Dk = (() => {
    class n {
      get disabled() {
        return this._disabled === void 0 && this.datepicker
          ? this.datepicker.disabled
          : !!this._disabled;
      }
      set disabled(e) {
        this._disabled = e;
      }
      constructor(e, t, r) {
        (this._intl = e),
          (this._changeDetectorRef = t),
          (this._stateChanges = zi.EMPTY);
        let o = Number(r);
        this.tabIndex = o || o === 0 ? o : null;
      }
      ngOnChanges(e) {
        e.datepicker && this._watchStateChanges();
      }
      ngOnDestroy() {
        this._stateChanges.unsubscribe();
      }
      ngAfterContentInit() {
        this._watchStateChanges();
      }
      _open(e) {
        this.datepicker &&
          !this.disabled &&
          (this.datepicker.open(), e.stopPropagation());
      }
      _watchStateChanges() {
        let e = this.datepicker ? this.datepicker.stateChanges : fe(),
          t =
            this.datepicker && this.datepicker.datepickerInput
              ? this.datepicker.datepickerInput.stateChanges
              : fe(),
          r = this.datepicker
            ? $o(this.datepicker.openedStream, this.datepicker.closedStream)
            : fe();
        this._stateChanges.unsubscribe(),
          (this._stateChanges = $o(this._intl.changes, e, t, r).subscribe(() =>
            this._changeDetectorRef.markForCheck()
          ));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(gl), j(Qe), Go("tabindex"));
        };
      }
      static {
        this.ɵcmp = se({
          type: n,
          selectors: [["mat-datepicker-toggle"]],
          contentQueries: function (t, r, o) {
            if ((t & 1 && ln(o, Sk, 5), t & 2)) {
              let a;
              nt((a = rt())) && (r._customIcon = a.first);
            }
          },
          viewQuery: function (t, r) {
            if ((t & 1 && _t(lk, 5), t & 2)) {
              let o;
              nt((o = rt())) && (r._button = o.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-toggle"],
          hostVars: 8,
          hostBindings: function (t, r) {
            t & 1 &&
              R("click", function (a) {
                return r._open(a);
              }),
              t & 2 &&
                (ce("tabindex", null)(
                  "data-mat-calendar",
                  r.datepicker ? r.datepicker.id : null
                ),
                ne(
                  "mat-datepicker-toggle-active",
                  r.datepicker && r.datepicker.opened
                )(
                  "mat-accent",
                  r.datepicker && r.datepicker.color === "accent"
                )("mat-warn", r.datepicker && r.datepicker.color === "warn"));
          },
          inputs: {
            datepicker: [0, "for", "datepicker"],
            tabIndex: "tabIndex",
            ariaLabel: [0, "aria-label", "ariaLabel"],
            disabled: [2, "disabled", "disabled", Se],
            disableRipple: "disableRipple",
          },
          exportAs: ["matDatepickerToggle"],
          standalone: !0,
          features: [Pt, Dt, le],
          ngContentSelectors: dk,
          decls: 4,
          vars: 6,
          consts: [
            ["button", ""],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              3,
              "disabled",
              "disableRipple",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "width",
              "24px",
              "height",
              "24px",
              "fill",
              "currentColor",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-datepicker-toggle-default-icon",
            ],
            [
              "d",
              "M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z",
            ],
          ],
          template: function (t, r) {
            t & 1 &&
              (Jt(ck),
              l(0, "button", 1, 0),
              A(2, uk, 2, 0, ":svg:svg", 2),
              Vt(3),
              c()),
              t & 2 &&
                (y("disabled", r.disabled)("disableRipple", r.disableRipple),
                ce("aria-haspopup", r.datepicker ? "dialog" : null)(
                  "aria-label",
                  r.ariaLabel || r._intl.openCalendarLabel
                )("tabindex", r.disabled ? -1 : r.tabIndex),
                m(2),
                Cn(r._customIcon ? -1 : 2));
          },
          dependencies: [Jm],
          styles: [
            ".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var Gd = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({
        providers: [gl, Ck],
        imports: [Ae, H1, T1, f1, Ld, Ji, wk, Dk, J1, Rd],
      });
    }
  }
  return n;
})();
var _f = new Ce("@sweetalert2/ngx-sweetalert2#swalProvider"),
  ey = new Ce("@sweetalert2/ngx-sweetalert2#fireOnInit"),
  ty = new Ce("@sweetalert2/ngx-sweetalert2#dismissOnDestroy"),
  iy = (() => {
    class n {
      swalProvider;
      swalPromiseCache;
      constructor(e) {
        this.swalProvider = e;
      }
      get swal() {
        return (
          this.swalPromiseCache || this.preloadSweetAlertLibrary(),
          this.swalPromiseCache
        );
      }
      preloadSweetAlertLibrary() {
        if (this.swalPromiseCache) return;
        let e = t(this.swalProvider)
          ? this.swalProvider()
          : Promise.resolve(this.swalProvider);
        this.swalPromiseCache = e.then((o) => (r(o) ? o : o.default));
        function t(o) {
          return typeof o == "function" && o.version === void 0;
        }
        function r(o) {
          return typeof o == "function";
        }
      }
      static ɵfac = function (t) {
        return new (t || n)(Q(_f));
      };
      static ɵprov = J({ token: n, factory: n.ɵfac });
    }
    return n;
  })();
function Mk() {
  return import("./chunk-EI52ECUO.js");
}
var ny = (() => {
  class n {
    static forRoot(e = {}) {
      return {
        ngModule: n,
        providers: [
          iy,
          { provide: _f, useValue: e.provideSwal || Mk },
          { provide: ey, useValue: e.fireOnInit || !1 },
          { provide: ty, useValue: e.dismissOnDestroy || !0 },
        ],
      };
    }
    static forChild(e = {}) {
      return {
        ngModule: n,
        providers: [
          ...(e.provideSwal
            ? [iy, { provide: _f, useValue: e.provideSwal }]
            : []),
          ...(e.fireOnInit !== void 0
            ? [{ provide: ey, useValue: e.fireOnInit }]
            : []),
          ...(e.dismissOnDestroy !== void 0
            ? [{ provide: ty, useValue: e.dismissOnDestroy }]
            : []),
        ],
      };
    }
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = ye({ type: n });
    static ɵinj = ve({ imports: [Ae] });
  }
  return n;
})();
var Po = (n) => ({ "is-invalid": n }),
  Tk = (n, i) => ({ "btn-outline-primary": n, "btn-edit-enabled": i });
function Ek(n, i) {
  n & 1 &&
    (l(0, "tr")(1, "td", 48)(2, "p"), h(3, "No Vehicles Found"), c()()());
}
function Ok(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "tr")(1, "td", 34),
      h(2),
      c(),
      l(3, "td", 34),
      h(4),
      c(),
      l(5, "td", 34),
      h(6),
      c(),
      l(7, "td", 34),
      h(8),
      c(),
      l(9, "td", 34),
      h(10),
      c(),
      l(11, "td", 34),
      h(12),
      c(),
      l(13, "td", 34),
      h(14),
      c(),
      l(15, "td", 34),
      h(16),
      c(),
      l(17, "td")(18, "div", 49)(19, "a", 50),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.onEdit(r));
      }),
      U(20, "i", 51),
      c(),
      l(21, "a", 52),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.openDeleteModal(r));
      }),
      U(22, "i", 53),
      c()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x();
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.vehicle_name),
      m(2),
      B(e.YOM),
      m(2),
      B(e.type),
      m(2),
      B(e.VIN),
      m(2),
      B(e.chasis_number),
      m(2),
      B(e.demo_start_date),
      m(2),
      B(e.demo_end_date);
  }
}
function kk(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "li", 54)(1, "a", 43),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.goToPage(r));
      }),
      h(2),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x();
    ne("active", e === t.currentPage), m(2), B(e);
  }
}
function Pk(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 55)(1, "div", 56)(2, "div", 57)(3, "div", 58)(4, "h5", 59),
      h(5, "Delete User"),
      c()(),
      l(6, "div", 60),
      h(7, "Are you sure you want to delete this user?"),
      c(),
      l(8, "div", 61)(9, "button", 62),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeDeleteModal());
      }),
      h(10, "Cancel"),
      c(),
      l(11, "button", 63),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.deleteVehicleId());
      }),
      h(12, "Delete"),
      c()()()()();
  }
}
function Ik(n, i) {
  n & 1 && (l(0, "span", 98), h(1, "*"), c());
}
function Ak(n, i) {
  n & 1 &&
    (l(0, "div", 99)(1, "span"), h(2, "Vehicle name is required."), c()());
}
function Rk(n, i) {
  n & 1 && (l(0, "span", 99), h(1, "*"), c());
}
function Fk(n, i) {
  n & 1 && (l(0, "span"), h(1, "YOM is required."), c());
}
function Nk(n, i) {
  if ((n & 1 && (l(0, "div", 99), A(1, Fk, 2, 0, "span", 35), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("YOM")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Lk(n, i) {
  n & 1 && (l(0, "span", 98), h(1, "*"), c());
}
function Vk(n, i) {
  n & 1 && (l(0, "div", 99)(1, "span"), h(2, "Type is required."), c()());
}
function Bk(n, i) {
  n & 1 && (l(0, "span", 99), h(1, "*"), c());
}
function jk(n, i) {
  n & 1 && (l(0, "span"), h(1, " Chasis number is required. "), c());
}
function Hk(n, i) {
  if ((n & 1 && (l(0, "div", 99), A(1, jk, 2, 0, "span", 35), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("chasis_number")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Uk(n, i) {
  n & 1 && (l(0, "span", 99), h(1, "*"), c());
}
function zk(n, i) {
  n & 1 && (l(0, "span", 101), h(1, " Start date is required. "), c());
}
function $k(n, i) {
  if ((n & 1 && (l(0, "div", 99), A(1, zk, 2, 0, "span", 100), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("demo_start_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Wk(n, i) {
  n & 1 && (l(0, "span", 99), h(1, "*"), c());
}
function Gk(n, i) {
  n & 1 && (l(0, "span"), h(1, " End date is required. "), c());
}
function Yk(n, i) {
  if ((n & 1 && (l(0, "div", 99), A(1, Gk, 2, 0, "span", 35), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("demo_end_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function qk(n, i) {
  n & 1 && (l(0, "span", 99), h(1, "*"), c());
}
function Kk(n, i) {
  n & 1 && (l(0, "span"), h(1, " VIN is required. "), c());
}
function Qk(n, i) {
  if ((n & 1 && (l(0, "div", 99), A(1, Kk, 2, 0, "span", 35), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("VIN")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Xk(n, i) {
  if (n & 1) {
    let e = oe();
    Le(0),
      l(1, "button", 102),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.onUpdate());
      }),
      h(2, " Edit "),
      c(),
      Ve();
  }
  if (n & 2) {
    let e = x(2);
    m(),
      y("disabled", !e.isVehicleNameChanged())(
        "ngClass",
        Gi(2, Tk, !e.isVehicleNameChanged(), e.isVehicleNameChanged())
      );
  }
}
function Zk(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 62),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.onSave());
      }),
      h(1, " Save "),
      c();
  }
  if (n & 2) {
    let e = x(2);
    ce("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function Jk(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 64)(1, "div", 65)(2, "div", 66)(3, "div", 57)(4, "div", 58)(
      5,
      "h5",
      67
    ),
      h(6),
      c(),
      l(7, "button", 68),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeModal());
      }),
      l(8, "span", 69),
      h(9, "\xD7"),
      c()()(),
      l(10, "div", 70)(11, "div", 71)(12, "div", 72)(13, "label", 73),
      h(14, " Vehicle Name "),
      A(15, Ik, 2, 0, "span", 74),
      c(),
      U(16, "input", 75),
      A(17, Ak, 3, 0, "div", 76),
      c(),
      l(18, "div", 77)(19, "label", 78),
      h(20, " YOM "),
      A(21, Rk, 2, 0, "span", 76),
      c(),
      U(22, "input", 79),
      A(23, Nk, 2, 1, "div", 76),
      c()(),
      l(24, "div", 71)(25, "div", 72)(26, "label", 80),
      h(27, " Type "),
      A(28, Lk, 2, 0, "span", 74),
      c(),
      l(29, "select", 81)(30, "option", 82),
      h(31, "Select Type"),
      c(),
      l(32, "option", 83),
      h(33, "Petrol"),
      c(),
      l(34, "option", 84),
      h(35, "Diesel"),
      c(),
      l(36, "option", 85),
      h(37, "EV"),
      c()(),
      A(38, Vk, 3, 0, "div", 76),
      c(),
      l(39, "div", 72)(40, "label", 86),
      h(41, " Chasis Number "),
      A(42, Bk, 2, 0, "span", 76),
      c(),
      U(43, "input", 87),
      A(44, Hk, 2, 1, "div", 76),
      c(),
      l(45, "div", 88)(46, "div", 72)(47, "label", 89),
      h(48, " Start date "),
      A(49, Uk, 2, 0, "span", 76),
      c(),
      U(50, "input", 90),
      A(51, $k, 2, 1, "div", 76),
      c()(),
      l(52, "div", 91)(53, "label", 92),
      h(54, " End date "),
      A(55, Wk, 2, 0, "span", 76),
      c(),
      U(56, "input", 93),
      A(57, Yk, 2, 1, "div", 76),
      c(),
      l(58, "div", 94)(59, "label", 95),
      h(60, " VIN "),
      A(61, qk, 2, 0, "span", 76),
      c(),
      U(62, "input", 96),
      A(63, Qk, 2, 1, "div", 76),
      c()()(),
      l(64, "div", 61),
      A(65, Xk, 3, 5, "ng-container", 97),
      l(66, "button", 63),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeModal());
      }),
      h(67, " Close "),
      c(),
      A(68, Zk, 2, 1, "ng-template", null, 0, bt),
      c()()()()();
  }
  if (n & 2) {
    let e,
      t,
      r,
      o,
      a,
      d,
      u,
      f,
      v,
      S,
      T,
      M,
      I,
      L,
      E = ut(69),
      F = x();
    m(6),
      Z(" ", F.vehicleObj.vehicle_id ? "Edit Vehicle" : "Add New Vehicle", " "),
      m(4),
      y("formGroup", F.useForm),
      m(5),
      y("ngIf", !F.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          25,
          Po,
          !F.isEditMode &&
            ((e = F.useForm.get("vehicle_name")) == null ? null : e.touched) &&
            ((e = F.useForm.get("vehicle_name")) == null ? null : e.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !F.isEditMode &&
          ((t = F.useForm.get("vehicle_name")) == null ? null : t.touched) &&
          ((t = F.useForm.get("vehicle_name")) == null ? null : t.invalid)
      ),
      m(4),
      y("ngIf", !F.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          27,
          Po,
          !F.isEditMode &&
            ((r = F.useForm.get("YOM")) == null ? null : r.touched) &&
            ((r = F.useForm.get("YOM")) == null ? null : r.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !F.isEditMode &&
          ((o = F.useForm.get("YOM")) == null ? null : o.touched) &&
          ((o = F.useForm.get("YOM")) == null ? null : o.invalid)
      ),
      m(5),
      y("ngIf", !F.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          29,
          Po,
          !F.isEditMode &&
            ((a = F.useForm.get("type")) == null ? null : a.touched) &&
            ((a = F.useForm.get("type")) == null ? null : a.invalid)
        )
      ),
      m(9),
      y(
        "ngIf",
        !F.isEditMode &&
          ((d = F.useForm.get("type")) == null ? null : d.touched) &&
          ((d = F.useForm.get("type")) == null ? null : d.invalid)
      ),
      m(4),
      y("ngIf", !F.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          31,
          Po,
          !F.isEditMode &&
            ((u = F.useForm.get("chasis_number")) == null ? null : u.touched) &&
            ((u = F.useForm.get("chasis_number")) == null ? null : u.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !F.isEditMode &&
          ((f = F.useForm.get("chasis_number")) == null ? null : f.touched) &&
          ((f = F.useForm.get("chasis_number")) == null ? null : f.invalid)
      ),
      m(5),
      y("ngIf", !F.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          33,
          Po,
          !F.isEditMode &&
            ((v = F.useForm.get("demo_start_date")) == null
              ? null
              : v.touched) &&
            ((v = F.useForm.get("demo_start_date")) == null ? null : v.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !F.isEditMode &&
          ((S = F.useForm.get("demo_start_date")) == null ? null : S.touched) &&
          ((S = F.useForm.get("demo_start_date")) == null ? null : S.invalid)
      ),
      m(4),
      y("ngIf", !F.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          35,
          Po,
          !F.isEditMode &&
            ((T = F.useForm.get("demo_end_date")) == null ? null : T.touched) &&
            ((T = F.useForm.get("demo_end_date")) == null ? null : T.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !F.isEditMode &&
          ((M = F.useForm.get("demo_end_date")) == null ? null : M.touched) &&
          ((M = F.useForm.get("demo_end_date")) == null ? null : M.invalid)
      ),
      m(4),
      y("ngIf", !F.isEditMode),
      m(),
      y(
        "ngClass",
        de(
          37,
          Po,
          !F.isEditMode &&
            ((I = F.useForm.get("VIN")) == null ? null : I.touched) &&
            ((I = F.useForm.get("VIN")) == null ? null : I.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        !F.isEditMode &&
          ((L = F.useForm.get("VIN")) == null ? null : L.touched) &&
          ((L = F.useForm.get("VIN")) == null ? null : L.invalid)
      ),
      m(2),
      y(
        "ngIf",
        F.vehicleObj.vehicle_id !== null && F.vehicleObj.vehicle_id !== void 0
      )("ngIfElse", E);
  }
}
var Yd = class n {
  constructor(i) {
    this.changeDetectorRef = i;
    this.initializeForm();
  }
  count = pe(0);
  vehicleList = pe([]);
  totalVehicle = pe(0);
  vehicles = [];
  paginatedVehicles = [];
  masterSrv = W(Xe);
  toastr = W(fi);
  modalService = W(sl);
  vehicleObj = new ll();
  isModalVisible = !1;
  isEditMode = !1;
  previousValue = "";
  isModalOpen = !1;
  filteredVehicle = [];
  searchTerm = "";
  filteredVehicles = [];
  currentPage = 1;
  itemsPerPage = 10;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  useForm = new Rt({});
  ngOnInit() {
    this.loadVehicles(),
      (this.filteredVehicles = this.vehicleList()),
      this.paginateVehicles(),
      this.filterVehicles();
  }
  initializeForm() {
    this.useForm = new Rt({
      vehicle_name: new ot("", [
        Fe.required,
        Fe.minLength(2),
        Fe.maxLength(50),
      ]),
      VIN: new ot("", [Fe.required]),
      type: new ot("", [Fe.required]),
      YOM: new ot("", [Fe.required]),
      chasis_number: new ot("", [Fe.required]),
      demo_start_date: new ot("", [Fe.required]),
      demo_end_date: new ot("", [Fe.required]),
    });
  }
  loadVehicles() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (i) => {
        this.count.set(i.data.count),
          (this.vehicles = i.data.rows),
          this.vehicleList.set(this.vehicles),
          (this.filteredVehicles = [...this.vehicles]),
          (this.currentPage = 1),
          this.paginateVehicles();
      },
      error: (i) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", i);
      },
    });
  }
  openModal(i) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      console.log("hello"),
      i
        ? ((this.vehicleObj = G({}, i)),
          this.useForm.patchValue({
            vehicle_name: i.vehicle_name || "",
            VIN: i.VIN || "",
            type: i.type || "",
            YOM: this.formatDate(i.YOM) || "",
            demo_start_date: i.demo_start_date
              ? this.formatDate(i.demo_start_date)
              : "",
            demo_end_date: i.demo_end_date
              ? this.formatDate(i.demo_end_date)
              : "",
            chasis_number: i.chasis_number || "",
          }))
        : ((this.vehicleObj = new ll()),
          (this.vehicleObj.vehicle_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.vehicleObj
          ));
  }
  onSave() {
    console.log("onsave being called"),
      console.log(this.useForm.value),
      console.log(
        "Form end_date value:",
        this.useForm.get("demo_end_date")?.value
      );
    let i = new Date(this.useForm.get("demo_start_date")?.value);
    if (new Date(this.useForm.get("demo_end_date")?.value) < i) {
      this.toastr.error(
        "End date cannot be before start date.",
        "Date Validation"
      );
      return;
    }
    if (this.useForm.invalid) {
      this.markFormGroupTouched(this.useForm),
        console.log("Form Values:", this.useForm.value),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let t = this.useForm.value;
    console.log("Form Data being sent to API:", t),
      this.masterSrv.createNewVehicle(t).subscribe({
        next: () => {
          this.toastr.success("Vehicle created successfully!", "Success"),
            this.getAllVehicle(),
            this.closeModal();
        },
        error: (r) => {
          console.error("Vehicle creation error:", r);
          let o = r.error?.message || "Failed to create vehicle";
          this.toastr.error(o, "Creation Error");
        },
      });
  }
  getAllVehicle() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.totalVehicle.set(i.data.count),
            this.vehicleList.set(i.data.rows),
            (this.paginatedVehicles = this.vehicleList().slice(
              (this.currentPage - 1) * this.itemsPerPage,
              this.currentPage * this.itemsPerPage
            )))
          : this.toastr.warning("No Vehicle found", "Information");
      },
      error: (i) => {
        console.error("Vehicle fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch vehicles", "Error");
      },
    });
  }
  getShowingFrom() {
    return this.filteredVehicles.length === 0
      ? 0
      : (this.currentPage - 1) * this.itemsPerPage + 1;
  }
  getShowingTo() {
    return this.filteredVehicles.length === 0
      ? 0
      : Math.min(
          this.currentPage * this.itemsPerPage,
          this.filteredVehicles.length
        );
  }
  onUpdate() {
    if (!this.vehicleObj || !this.vehicleObj.vehicle_id) {
      this.toastr.warning("No vehicle selected for update!", "Warning");
      return;
    }
    (this.vehicleObj = G(G({}, this.vehicleObj), this.useForm.value)),
      console.log("Updating vehicle:", this.vehicleObj),
      this.masterSrv.updateVehicle(this.vehicleObj).subscribe(
        (i) => {
          i && i.status === 200
            ? (this.toastr.success(
                i.message || "Vehicle updated successfully",
                "Success"
              ),
              this.loadVehicles(),
              this.closeModal())
            : this.toastr.warning("Update failed, check data.", "Warning");
        },
        (i) => {
          this.toastr.error("Error updating vehicle", "Error");
        }
      );
  }
  getAllVehicles() {}
  onSearchChange() {
    (this.currentPage = 1), this.filterVehicles();
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = +i.target.value),
      (this.currentPage = 1),
      this.paginateVehicles();
  }
  displayAllVehicles() {
    (this.filteredVehicles = this.vehicleList()), this.paginateVehicles();
  }
  filterVehicles() {
    let i = this.vehicleList();
    if (
      (console.log("\u{1F50D} Raw vehicle list:", i),
      console.log("\u{1F50E} Current search term:", this.searchTerm),
      !this.searchTerm || this.searchTerm.trim() === "")
    )
      console.log("\u{1F4C4} Empty search term. Showing full list."),
        (this.filteredVehicles = i);
    else {
      let e = this.searchTerm.trim().toLowerCase();
      console.log("\u{1F50D} Normalized search term:", e),
        (this.filteredVehicles = i.filter((t) => {
          let r =
            t.vehicle_name?.toLowerCase().includes(e) ||
            t.VIN?.toLowerCase().includes(e) ||
            t.chasis_number?.toLowerCase().includes(e) ||
            t.type?.toLowerCase().includes(e);
          return (
            console.log("\u{1F697} Checking vehicle:", t, "=> Match:", r), r
          );
        })),
        console.log("\u2705 Filtered vehicles:", this.filteredVehicles);
    }
    (this.currentPage = 1), this.paginateVehicles();
  }
  paginateVehicles() {
    (this.totalPages = Math.ceil(
      this.filteredVehicles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updatePaginatedVehicles();
  }
  updatePaginatedVehicles() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedVehicles = this.filteredVehicles.slice(i, e);
  }
  goToPage(i) {
    (this.currentPage = i), this.updatePaginatedVehicles();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updatePaginatedVehicles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updatePaginatedVehicles());
  }
  selectedVehicleForDeletion = null;
  selectVehicleForDeletion(i) {
    (this.selectedVehicleForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  openDeleteModal(i) {
    (this.selectedVehicleForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  deleteVehicleId() {
    let i = this.selectedVehicleForDeletion;
    if (i && i.vehicle_id) {
      let e = i.vehicle_id;
      this.masterSrv.deleteVehicle(e).subscribe(
        (t) => {
          this.toastr.success("Vehicle deleted successfully", "Success"),
            (this.isDeleteModalOpen = !1);
          let r = this.vehicleList().filter((o) => o.vehicle_id !== e);
          this.vehicleList.set(r),
            (this.filteredVehicles = [...r]),
            this.paginateVehicles();
        },
        (t) => {
          this.toastr.error("Server Error", "Error");
        }
      );
    } else alert("No Vehicle selected for deletion");
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  formatDateForInput(i) {
    if (!i) return "";
    let e = new Date(i);
    return isNaN(e.getTime()) ? "" : e.toISOString().split("T")[0];
  }
  onEdit(i) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", i?.vehicle_id),
      (this.vehicleObj = G({}, i)),
      (this.previousValue = i.vehicle_name),
      this.useForm.patchValue({
        vehicle_name: i.vehicle_name,
        VIN: i.VIN,
        type: i.type,
        YOM: this.formatDate(i.YOM),
        chasis_number: i.chasis_number,
        demo_start_date: i.demo_start_date,
        demo_end_date: i.demo_end_date,
      }),
      console.log(
        "vehicleobj.vehicle_id after setting:",
        this.vehicleObj?.vehicle_id
      );
  }
  isVehicleNameChanged() {
    return this.useForm.dirty && this.useForm.value.name !== this.previousValue;
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof Rt && this.markFormGroupTouched(e);
    });
  }
  formatDate(i) {
    return i ? new Date(i).toISOString().split("T")[0] : "";
  }
  isFieldInvalid(i) {
    let e = this.useForm.get(i);
    return !!(e && e.invalid && (e.dirty || e.touched));
  }
  isVehicleName() {
    return this.useForm.value.vehicle_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Qe));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-vehicle"]],
    standalone: !0,
    features: [le],
    decls: 82,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", "mt-10"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search Vehicles...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "9", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
      ],
      [1, "modal-dialog", "modal-lg"],
      [
        1,
        "modal-title",
        2,
        "align-items",
        "center",
        "margin-inline",
        "auto",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      [
        "for",
        "vehicle_name",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      ["style", "color: red;", 4, "ngIf"],
      [
        "id",
        "vehicle_name",
        "type",
        "text",
        "placeholder",
        "Vehicle Name",
        "formControlName",
        "vehicle_name",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "form-group", "col-md-6"],
      [
        "for",
        "YOM",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "YOM",
        "type",
        "date",
        "formControlName",
        "YOM",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [
        "for",
        "typeSelect",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "typeSelect",
        "formControlName",
        "type",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "pointer",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "petrol"],
      ["value", "diesel"],
      ["value", "EV"],
      [
        "for",
        "chasis_number",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "chasis_number",
        "type",
        "text",
        "placeholder",
        "Enter Chassis Number",
        "formControlName",
        "chasis_number",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "row", 2, "margin-left", "-3px !important"],
      [
        "for",
        "demo_start_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "demo_start_date",
        "type",
        "date",
        "placeholder",
        "start date",
        "formControlName",
        "demo_start_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "17px"],
      [
        "for",
        "demo_end_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
        "margin-left",
        "-2px",
      ],
      [
        "id",
        "demo_end_date",
        "type",
        "date",
        "placeholder",
        "end date",
        "formControlName",
        "demo_end_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "5px"],
      [
        "for",
        "vin",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "vin",
        "type",
        "text",
        "placeholder",
        "VIN",
        "formControlName",
        "VIN",
        1,
        "form-control",
        "form-control-lg",
        2,
        "margin-left",
        "-5px",
        3,
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [2, "color", "red"],
      [1, "text-danger"],
      ["style", "white-space: nowrap;", 4, "ngIf"],
      [2, "white-space", "nowrap"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        3,
        "click",
        "disabled",
        "ngClass",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Transaction"),
        c()(),
        l(7, "li", 7)(8, "a", 8),
        h(9, "Vehicle Master"),
        c()()()(),
        l(10, "div", 9)(11, "div", 10)(12, "a", 11),
        R("click", function () {
          return t.openModal();
        }),
        U(13, "i", 12),
        h(14, "Add Vehicle "),
        c()(),
        l(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Vehicle"),
        c(),
        l(19, "h3", 16),
        h(20),
        c()()()(),
        l(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        U(26, "label", 22),
        l(27, "select", 23),
        R("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        l(28, "option", 24),
        h(29, "10"),
        c(),
        l(30, "option", 25),
        h(31, "25"),
        c(),
        l(32, "option", 26),
        h(33, "50"),
        c(),
        l(34, "option", 27),
        h(35, "100"),
        c()(),
        l(36, "label", 28),
        h(37, "records per page"),
        c()(),
        l(38, "div", 29)(39, "div", 30)(40, "input", 31),
        dt("ngModelChange", function (o) {
          return ct(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        R("input", function () {
          return t.onSearchChange();
        }),
        c()()()(),
        l(41, "div", 32)(42, "table", 33)(43, "thead")(44, "tr")(45, "th", 34),
        h(46, "Sr No"),
        c(),
        l(47, "th", 34),
        h(48, "Vehicle Name"),
        c(),
        l(49, "th", 34),
        h(50, "YOM"),
        c(),
        l(51, "th", 34),
        h(52, "Type"),
        c(),
        l(53, "th", 34),
        h(54, "VIN"),
        c(),
        l(55, "th", 34),
        h(56, "Chasis number"),
        c(),
        l(57, "th", 34),
        h(58, "Demo start date"),
        c(),
        l(59, "th", 34),
        h(60, "Demo end date"),
        c(),
        l(61, "th", 34),
        h(62, "Action"),
        c()()(),
        l(63, "tbody"),
        A(64, Ek, 4, 0, "tr", 35)(65, Ok, 23, 8, "tr", 36),
        c()()(),
        l(66, "div", 37)(67, "div", 38)(68, "div", 39),
        h(69),
        c()(),
        l(70, "div", 38)(71, "div", 40)(72, "ul", 41)(73, "li", 42)(
          74,
          "a",
          43
        ),
        R("click", function () {
          return t.previousPage();
        }),
        h(75, "Previous"),
        c()(),
        A(76, kk, 3, 3, "li", 44),
        l(77, "li", 45)(78, "a", 43),
        R("click", function () {
          return t.nextPage();
        }),
        h(79, "Next"),
        c()()()()()()()()()(),
        A(80, Pk, 13, 0, "div", 46)(81, Jk, 70, 39, "div", 47),
        c()),
        e & 2 &&
          (m(20),
          Z(" ", t.count(), " "),
          m(20),
          lt("ngModel", t.searchTerm),
          m(24),
          y("ngIf", t.paginatedVehicles.length === 0),
          m(),
          y("ngForOf", t.paginatedVehicles),
          m(4),
          Fi(
            " Showing ",
            t.getShowingFrom(),
            " to ",
            t.getShowingTo(),
            " of ",
            t.filteredVehicles.length,
            " entries "
          ),
          m(4),
          ne("disabled", t.currentPage === 1),
          m(3),
          y("ngForOf", t.pages),
          m(),
          ne("disabled", t.currentPage === t.totalPages),
          m(3),
          y("ngIf", t.isDeleteModalOpen),
          m(),
          y("ngIf", t.isModalOpen));
    },
    dependencies: [
      Ae,
      It,
      At,
      We,
      Di,
      ni,
      ri,
      Wt,
      Si,
      ii,
      Bi,
      _i,
      wa,
      tt,
      Gd,
      ko,
      zd,
      Ud,
      hn,
      Xi,
      Zi,
      ny,
      Jn,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}input[type=text][_ngcontent-%COMP%]::-ms-clear, input[type=text][_ngcontent-%COMP%]::-ms-reveal, input[type=text][_ngcontent-%COMP%]::-webkit-clear-button, input[type=text][_ngcontent-%COMP%]::-webkit-search-cancel-button{display:none;-webkit-appearance:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}",
    ],
  });
};
var _l = class {
  account_id;
  account_type;
  salutation;
  fname;
  lname;
  language;
  employment_status;
  lead_source;
  gender;
  industry;
  occupation;
  cust_journey_stage;
  national_id;
  phone;
  mobile;
  billing_street;
  billing_city;
  billing_state;
  billing_zip_code;
  billing_country;
  account_name;
  parent_account;
  company_fleet_size;
  website;
  account_owner;
  corporate_program_code;
  type;
  annual_revenue;
  email;
  household_income;
  birthdate;
  dealer_code;
  marital_status;
  children;
  no_of_people;
  dealer_id;
  constructor() {
    (this.dealer_code = 0),
      (this.dealer_id = ""),
      (this.account_id = ""),
      (this.account_type = ""),
      (this.salutation = null),
      (this.fname = ""),
      (this.lname = ""),
      (this.language = null),
      (this.employment_status = null),
      (this.lead_source = null),
      (this.gender = null),
      (this.industry = null),
      (this.occupation = null),
      (this.cust_journey_stage = null),
      (this.national_id = null),
      (this.phone = void 0),
      (this.mobile = void 0),
      (this.billing_street = null),
      (this.billing_city = null),
      (this.billing_state = null),
      (this.billing_zip_code = null),
      (this.billing_country = null),
      (this.account_name = ""),
      (this.parent_account = null),
      (this.company_fleet_size = null),
      (this.website = null),
      (this.account_owner = null),
      (this.corporate_program_code = null),
      (this.type = null),
      (this.annual_revenue = null),
      (this.email = ""),
      (this.household_income = null),
      (this.birthdate = null),
      (this.marital_status = null),
      (this.children = null),
      (this.no_of_people = null);
  }
};
var tn = class n {
    static isArray(i, e = !0) {
      return Array.isArray(i) && (e || i.length !== 0);
    }
    static isObject(i, e = !0) {
      return (
        typeof i == "object" &&
        !Array.isArray(i) &&
        i != null &&
        (e || Object.keys(i).length !== 0)
      );
    }
    static equals(i, e, t) {
      return t
        ? this.resolveFieldData(i, t) === this.resolveFieldData(e, t)
        : this.equalsByValue(i, e);
    }
    static equalsByValue(i, e) {
      if (i === e) return !0;
      if (i && e && typeof i == "object" && typeof e == "object") {
        var t = Array.isArray(i),
          r = Array.isArray(e),
          o,
          a,
          d;
        if (t && r) {
          if (((a = i.length), a != e.length)) return !1;
          for (o = a; o-- !== 0; )
            if (!this.equalsByValue(i[o], e[o])) return !1;
          return !0;
        }
        if (t != r) return !1;
        var u = this.isDate(i),
          f = this.isDate(e);
        if (u != f) return !1;
        if (u && f) return i.getTime() == e.getTime();
        var v = i instanceof RegExp,
          S = e instanceof RegExp;
        if (v != S) return !1;
        if (v && S) return i.toString() == e.toString();
        var T = Object.keys(i);
        if (((a = T.length), a !== Object.keys(e).length)) return !1;
        for (o = a; o-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, T[o])) return !1;
        for (o = a; o-- !== 0; )
          if (((d = T[o]), !this.equalsByValue(i[d], e[d]))) return !1;
        return !0;
      }
      return i !== i && e !== e;
    }
    static resolveFieldData(i, e) {
      if (i && e) {
        if (this.isFunction(e)) return e(i);
        if (e.indexOf(".") == -1) return i[e];
        {
          let t = e.split("."),
            r = i;
          for (let o = 0, a = t.length; o < a; ++o) {
            if (r == null) return null;
            r = r[t[o]];
          }
          return r;
        }
      } else return null;
    }
    static isFunction(i) {
      return !!(i && i.constructor && i.call && i.apply);
    }
    static reorderArray(i, e, t) {
      let r;
      i &&
        e !== t &&
        (t >= i.length && ((t %= i.length), (e %= i.length)),
        i.splice(t, 0, i.splice(e, 1)[0]));
    }
    static insertIntoOrderedArray(i, e, t, r) {
      if (t.length > 0) {
        let o = !1;
        for (let a = 0; a < t.length; a++)
          if (this.findIndexInList(t[a], r) > e) {
            t.splice(a, 0, i), (o = !0);
            break;
          }
        o || t.push(i);
      } else t.push(i);
    }
    static findIndexInList(i, e) {
      let t = -1;
      if (e) {
        for (let r = 0; r < e.length; r++)
          if (e[r] == i) {
            t = r;
            break;
          }
      }
      return t;
    }
    static contains(i, e) {
      if (i != null && e && e.length) {
        for (let t of e) if (this.equals(i, t)) return !0;
      }
      return !1;
    }
    static removeAccents(i) {
      return (
        i &&
          (i = i
            .normalize("NFKD")
            .replace(new RegExp("\\p{Diacritic}", "gu"), "")),
        i
      );
    }
    static isDate(i) {
      return Object.prototype.toString.call(i) === "[object Date]";
    }
    static isEmpty(i) {
      return (
        i == null ||
        i === "" ||
        (Array.isArray(i) && i.length === 0) ||
        (!this.isDate(i) && typeof i == "object" && Object.keys(i).length === 0)
      );
    }
    static isNotEmpty(i) {
      return !this.isEmpty(i);
    }
    static compare(i, e, t, r = 1) {
      let o = -1,
        a = this.isEmpty(i),
        d = this.isEmpty(e);
      return (
        a && d
          ? (o = 0)
          : a
          ? (o = r)
          : d
          ? (o = -r)
          : typeof i == "string" && typeof e == "string"
          ? (o = i.localeCompare(e, t, { numeric: !0 }))
          : (o = i < e ? -1 : i > e ? 1 : 0),
        o
      );
    }
    static sort(i, e, t = 1, r, o = 1) {
      let a = n.compare(i, e, r, t),
        d = t;
      return (n.isEmpty(i) || n.isEmpty(e)) && (d = o === 1 ? t : o), d * a;
    }
    static merge(i, e) {
      if (!(i == null && e == null)) {
        {
          if (
            (i == null || typeof i == "object") &&
            (e == null || typeof e == "object")
          )
            return G(G({}, i || {}), e || {});
          if (
            (i == null || typeof i == "string") &&
            (e == null || typeof e == "string")
          )
            return [i || "", e || ""].join(" ");
        }
        return e || i;
      }
    }
    static isPrintableCharacter(i = "") {
      return this.isNotEmpty(i) && i.length === 1 && i.match(/\S| /);
    }
    static getItemValue(i, ...e) {
      return this.isFunction(i) ? i(...e) : i;
    }
    static findLastIndex(i, e) {
      let t = -1;
      if (this.isNotEmpty(i))
        try {
          t = i.findLastIndex(e);
        } catch {
          t = i.lastIndexOf([...i].reverse().find(e));
        }
      return t;
    }
    static findLast(i, e) {
      let t;
      if (this.isNotEmpty(i))
        try {
          t = i.findLast(e);
        } catch {
          t = [...i].reverse().find(e);
        }
      return t;
    }
    static deepEquals(i, e) {
      if (i === e) return !0;
      if (i && e && typeof i == "object" && typeof e == "object") {
        var t = Array.isArray(i),
          r = Array.isArray(e),
          o,
          a,
          d;
        if (t && r) {
          if (((a = i.length), a != e.length)) return !1;
          for (o = a; o-- !== 0; ) if (!this.deepEquals(i[o], e[o])) return !1;
          return !0;
        }
        if (t != r) return !1;
        var u = i instanceof Date,
          f = e instanceof Date;
        if (u != f) return !1;
        if (u && f) return i.getTime() == e.getTime();
        var v = i instanceof RegExp,
          S = e instanceof RegExp;
        if (v != S) return !1;
        if (v && S) return i.toString() == e.toString();
        var T = Object.keys(i);
        if (((a = T.length), a !== Object.keys(e).length)) return !1;
        for (o = a; o-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, T[o])) return !1;
        for (o = a; o-- !== 0; )
          if (((d = T[o]), !this.deepEquals(i[d], e[d]))) return !1;
        return !0;
      }
      return i !== i && e !== e;
    }
  },
  ry = 0;
function Aa(n = "pn_id_") {
  return ry++, `${n}${ry}`;
}
function eP() {
  let n = [],
    i = (o, a) => {
      let d = n.length > 0 ? n[n.length - 1] : { key: o, value: a },
        u = d.value + (d.key === o ? 0 : a) + 2;
      return n.push({ key: o, value: u }), u;
    },
    e = (o) => {
      n = n.filter((a) => a.value !== o);
    },
    t = () => (n.length > 0 ? n[n.length - 1].value : 0),
    r = (o) => (o && parseInt(o.style.zIndex, 10)) || 0;
  return {
    get: r,
    set: (o, a, d) => {
      a && (a.style.zIndex = String(i(o, d)));
    },
    clear: (o) => {
      o && (e(r(o)), (o.style.zIndex = ""));
    },
    getCurrent: () => t(),
  };
}
var bl = eP();
var Ti = (() => {
  class n {
    static STARTS_WITH = "startsWith";
    static CONTAINS = "contains";
    static NOT_CONTAINS = "notContains";
    static ENDS_WITH = "endsWith";
    static EQUALS = "equals";
    static NOT_EQUALS = "notEquals";
    static IN = "in";
    static LESS_THAN = "lt";
    static LESS_THAN_OR_EQUAL_TO = "lte";
    static GREATER_THAN = "gt";
    static GREATER_THAN_OR_EQUAL_TO = "gte";
    static BETWEEN = "between";
    static IS = "is";
    static IS_NOT = "isNot";
    static BEFORE = "before";
    static AFTER = "after";
    static DATE_IS = "dateIs";
    static DATE_IS_NOT = "dateIsNot";
    static DATE_BEFORE = "dateBefore";
    static DATE_AFTER = "dateAfter";
  }
  return n;
})();
var oy = (() => {
  class n {
    clickSource = new Ee();
    clickObservable = this.clickSource.asObservable();
    add(e) {
      e && this.clickSource.next(e);
    }
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
  }
  return n;
})();
var qd = (() => {
  class n {
    ripple = !1;
    inputStyle = pe("outlined");
    overlayOptions = {};
    csp = pe({ nonce: void 0 });
    filterMatchModeOptions = {
      text: [
        Ti.STARTS_WITH,
        Ti.CONTAINS,
        Ti.NOT_CONTAINS,
        Ti.ENDS_WITH,
        Ti.EQUALS,
        Ti.NOT_EQUALS,
      ],
      numeric: [
        Ti.EQUALS,
        Ti.NOT_EQUALS,
        Ti.LESS_THAN,
        Ti.LESS_THAN_OR_EQUAL_TO,
        Ti.GREATER_THAN,
        Ti.GREATER_THAN_OR_EQUAL_TO,
      ],
      date: [Ti.DATE_IS, Ti.DATE_IS_NOT, Ti.DATE_BEFORE, Ti.DATE_AFTER],
    };
    translation = {
      startsWith: "Starts with",
      contains: "Contains",
      notContains: "Not contains",
      endsWith: "Ends with",
      equals: "Equals",
      notEquals: "Not equals",
      noFilter: "No Filter",
      lt: "Less than",
      lte: "Less than or equal to",
      gt: "Greater than",
      gte: "Greater than or equal to",
      is: "Is",
      isNot: "Is not",
      before: "Before",
      after: "After",
      dateIs: "Date is",
      dateIsNot: "Date is not",
      dateBefore: "Date is before",
      dateAfter: "Date is after",
      clear: "Clear",
      apply: "Apply",
      matchAll: "Match All",
      matchAny: "Match Any",
      addRule: "Add Rule",
      removeRule: "Remove Rule",
      accept: "Yes",
      reject: "No",
      choose: "Choose",
      upload: "Upload",
      cancel: "Cancel",
      pending: "Pending",
      fileSizeTypes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
      dayNames: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ],
      dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      monthNames: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ],
      monthNamesShort: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec",
      ],
      chooseYear: "Choose Year",
      chooseMonth: "Choose Month",
      chooseDate: "Choose Date",
      prevDecade: "Previous Decade",
      nextDecade: "Next Decade",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      prevHour: "Previous Hour",
      nextHour: "Next Hour",
      prevMinute: "Previous Minute",
      nextMinute: "Next Minute",
      prevSecond: "Previous Second",
      nextSecond: "Next Second",
      am: "am",
      pm: "pm",
      dateFormat: "mm/dd/yy",
      firstDayOfWeek: 0,
      today: "Today",
      weekHeader: "Wk",
      weak: "Weak",
      medium: "Medium",
      strong: "Strong",
      passwordPrompt: "Enter a password",
      emptyMessage: "No results found",
      searchMessage: "{0} results are available",
      selectionMessage: "{0} items selected",
      emptySelectionMessage: "No selected item",
      emptySearchMessage: "No results found",
      emptyFilterMessage: "No results found",
      aria: {
        trueLabel: "True",
        falseLabel: "False",
        nullLabel: "Not Selected",
        star: "1 star",
        stars: "{star} stars",
        selectAll: "All items selected",
        unselectAll: "All items unselected",
        close: "Close",
        previous: "Previous",
        next: "Next",
        navigation: "Navigation",
        scrollTop: "Scroll Top",
        moveTop: "Move Top",
        moveUp: "Move Up",
        moveDown: "Move Down",
        moveBottom: "Move Bottom",
        moveToTarget: "Move to Target",
        moveToSource: "Move to Source",
        moveAllToTarget: "Move All to Target",
        moveAllToSource: "Move All to Source",
        pageLabel: "{page}",
        firstPageLabel: "First Page",
        lastPageLabel: "Last Page",
        nextPageLabel: "Next Page",
        prevPageLabel: "Previous Page",
        rowsPerPageLabel: "Rows per page",
        previousPageLabel: "Previous Page",
        jumpToPageDropdownLabel: "Jump to Page Dropdown",
        jumpToPageInputLabel: "Jump to Page Input",
        selectRow: "Row Selected",
        unselectRow: "Row Unselected",
        expandRow: "Row Expanded",
        collapseRow: "Row Collapsed",
        showFilterMenu: "Show Filter Menu",
        hideFilterMenu: "Hide Filter Menu",
        filterOperator: "Filter Operator",
        filterConstraint: "Filter Constraint",
        editRow: "Row Edit",
        saveEdit: "Save Edit",
        cancelEdit: "Cancel Edit",
        listView: "List View",
        gridView: "Grid View",
        slide: "Slide",
        slideNumber: "{slideNumber}",
        zoomImage: "Zoom Image",
        zoomIn: "Zoom In",
        zoomOut: "Zoom Out",
        rotateRight: "Rotate Right",
        rotateLeft: "Rotate Left",
        listLabel: "Option List",
        selectColor: "Select a color",
        removeLabel: "Remove",
        browseFiles: "Browse Files",
        maximizeLabel: "Maximize",
      },
    };
    zIndex = { modal: 1100, overlay: 1e3, menu: 1e3, tooltip: 1100 };
    translationSource = new Ee();
    translationObserver = this.translationSource.asObservable();
    getTranslation(e) {
      return this.translation[e];
    }
    setTranslation(e) {
      (this.translation = G(G({}, this.translation), e)),
        this.translationSource.next(this.translation);
    }
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
  }
  return n;
})();
var vl = (() => {
    class n {
      template;
      type;
      name;
      constructor(e) {
        this.template = e;
      }
      getType() {
        return this.name;
      }
      static ɵfac = function (t) {
        return new (t || n)(j(Wn));
      };
      static ɵdir = Ie({
        type: n,
        selectors: [["", "pTemplate", ""]],
        inputs: { type: "type", name: [0, "pTemplate", "name"] },
        standalone: !0,
      });
    }
    return n;
  })(),
  On = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({});
    }
    return n;
  })(),
  kn = (() => {
    class n {
      static STARTS_WITH = "startsWith";
      static CONTAINS = "contains";
      static NOT_CONTAINS = "notContains";
      static ENDS_WITH = "endsWith";
      static EQUALS = "equals";
      static NOT_EQUALS = "notEquals";
      static NO_FILTER = "noFilter";
      static LT = "lt";
      static LTE = "lte";
      static GT = "gt";
      static GTE = "gte";
      static IS = "is";
      static IS_NOT = "isNot";
      static BEFORE = "before";
      static AFTER = "after";
      static CLEAR = "clear";
      static APPLY = "apply";
      static MATCH_ALL = "matchAll";
      static MATCH_ANY = "matchAny";
      static ADD_RULE = "addRule";
      static REMOVE_RULE = "removeRule";
      static ACCEPT = "accept";
      static REJECT = "reject";
      static CHOOSE = "choose";
      static UPLOAD = "upload";
      static CANCEL = "cancel";
      static PENDING = "pending";
      static FILE_SIZE_TYPES = "fileSizeTypes";
      static DAY_NAMES = "dayNames";
      static DAY_NAMES_SHORT = "dayNamesShort";
      static DAY_NAMES_MIN = "dayNamesMin";
      static MONTH_NAMES = "monthNames";
      static MONTH_NAMES_SHORT = "monthNamesShort";
      static FIRST_DAY_OF_WEEK = "firstDayOfWeek";
      static TODAY = "today";
      static WEEK_HEADER = "weekHeader";
      static WEAK = "weak";
      static MEDIUM = "medium";
      static STRONG = "strong";
      static PASSWORD_PROMPT = "passwordPrompt";
      static EMPTY_MESSAGE = "emptyMessage";
      static EMPTY_FILTER_MESSAGE = "emptyFilterMessage";
      static SHOW_FILTER_MENU = "showFilterMenu";
      static HIDE_FILTER_MENU = "hideFilterMenu";
      static SELECTION_MESSAGE = "selectionMessage";
      static ARIA = "aria";
      static SELECT_COLOR = "selectColor";
      static BROWSE_FILES = "browseFiles";
    }
    return n;
  })();
var me = (() => {
    class n {
      static zindex = 1e3;
      static calculatedScrollbarWidth = null;
      static calculatedScrollbarHeight = null;
      static browser;
      static addClass(e, t) {
        e && t && (e.classList ? e.classList.add(t) : (e.className += " " + t));
      }
      static addMultipleClasses(e, t) {
        if (e && t)
          if (e.classList) {
            let r = t.trim().split(" ");
            for (let o = 0; o < r.length; o++) e.classList.add(r[o]);
          } else {
            let r = t.split(" ");
            for (let o = 0; o < r.length; o++) e.className += " " + r[o];
          }
      }
      static removeClass(e, t) {
        e &&
          t &&
          (e.classList
            ? e.classList.remove(t)
            : (e.className = e.className.replace(
                new RegExp(
                  "(^|\\b)" + t.split(" ").join("|") + "(\\b|$)",
                  "gi"
                ),
                " "
              )));
      }
      static removeMultipleClasses(e, t) {
        e &&
          t &&
          [t]
            .flat()
            .filter(Boolean)
            .forEach((r) =>
              r.split(" ").forEach((o) => this.removeClass(e, o))
            );
      }
      static hasClass(e, t) {
        return e && t
          ? e.classList
            ? e.classList.contains(t)
            : new RegExp("(^| )" + t + "( |$)", "gi").test(e.className)
          : !1;
      }
      static siblings(e) {
        return Array.prototype.filter.call(e.parentNode.children, function (t) {
          return t !== e;
        });
      }
      static find(e, t) {
        return Array.from(e.querySelectorAll(t));
      }
      static findSingle(e, t) {
        return this.isElement(e) ? e.querySelector(t) : null;
      }
      static index(e) {
        let t = e.parentNode.childNodes,
          r = 0;
        for (var o = 0; o < t.length; o++) {
          if (t[o] == e) return r;
          t[o].nodeType == 1 && r++;
        }
        return -1;
      }
      static indexWithinGroup(e, t) {
        let r = e.parentNode ? e.parentNode.childNodes : [],
          o = 0;
        for (var a = 0; a < r.length; a++) {
          if (r[a] == e) return o;
          r[a].attributes && r[a].attributes[t] && r[a].nodeType == 1 && o++;
        }
        return -1;
      }
      static appendOverlay(e, t, r = "self") {
        r !== "self" && e && t && this.appendChild(e, t);
      }
      static alignOverlay(e, t, r = "self", o = !0) {
        e &&
          t &&
          (o && (e.style.minWidth = `${n.getOuterWidth(t)}px`),
          r === "self"
            ? this.relativePosition(e, t)
            : this.absolutePosition(e, t));
      }
      static relativePosition(e, t, r = !0) {
        let o = (ee) => {
            if (ee)
              return getComputedStyle(ee).getPropertyValue("position") ===
                "relative"
                ? ee
                : o(ee.parentElement);
          },
          a = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          d = t.offsetHeight ?? t.getBoundingClientRect().height,
          u = t.getBoundingClientRect(),
          f = this.getWindowScrollTop(),
          v = this.getWindowScrollLeft(),
          S = this.getViewport(),
          M = o(e)?.getBoundingClientRect() || { top: -1 * f, left: -1 * v },
          I,
          L;
        u.top + d + a.height > S.height
          ? ((I = u.top - M.top - a.height),
            (e.style.transformOrigin = "bottom"),
            u.top + I < 0 && (I = -1 * u.top))
          : ((I = d + u.top - M.top), (e.style.transformOrigin = "top"));
        let E = u.left + a.width - S.width,
          F = u.left - M.left;
        a.width > S.width
          ? (L = (u.left - M.left) * -1)
          : E > 0
          ? (L = F - E)
          : (L = u.left - M.left),
          (e.style.top = I + "px"),
          (e.style.left = L + "px"),
          r &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static absolutePosition(e, t, r = !0) {
        let o = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          a = o.height,
          d = o.width,
          u = t.offsetHeight ?? t.getBoundingClientRect().height,
          f = t.offsetWidth ?? t.getBoundingClientRect().width,
          v = t.getBoundingClientRect(),
          S = this.getWindowScrollTop(),
          T = this.getWindowScrollLeft(),
          M = this.getViewport(),
          I,
          L;
        v.top + u + a > M.height
          ? ((I = v.top + S - a),
            (e.style.transformOrigin = "bottom"),
            I < 0 && (I = S))
          : ((I = u + v.top + S), (e.style.transformOrigin = "top")),
          v.left + d > M.width
            ? (L = Math.max(0, v.left + T + f - d))
            : (L = v.left + T),
          (e.style.top = I + "px"),
          (e.style.left = L + "px"),
          r &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static getParents(e, t = []) {
        return e.parentNode === null
          ? t
          : this.getParents(e.parentNode, t.concat([e.parentNode]));
      }
      static getScrollableParents(e) {
        let t = [];
        if (e) {
          let r = this.getParents(e),
            o = /(auto|scroll)/,
            a = (d) => {
              let u = window.getComputedStyle(d, null);
              return (
                o.test(u.getPropertyValue("overflow")) ||
                o.test(u.getPropertyValue("overflowX")) ||
                o.test(u.getPropertyValue("overflowY"))
              );
            };
          for (let d of r) {
            let u = d.nodeType === 1 && d.dataset.scrollselectors;
            if (u) {
              let f = u.split(",");
              for (let v of f) {
                let S = this.findSingle(d, v);
                S && a(S) && t.push(S);
              }
            }
            d.nodeType !== 9 && a(d) && t.push(d);
          }
        }
        return t;
      }
      static getHiddenElementOuterHeight(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let t = e.offsetHeight;
        return (e.style.display = "none"), (e.style.visibility = "visible"), t;
      }
      static getHiddenElementOuterWidth(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let t = e.offsetWidth;
        return (e.style.display = "none"), (e.style.visibility = "visible"), t;
      }
      static getHiddenElementDimensions(e) {
        let t = {};
        return (
          (e.style.visibility = "hidden"),
          (e.style.display = "block"),
          (t.width = e.offsetWidth),
          (t.height = e.offsetHeight),
          (e.style.display = "none"),
          (e.style.visibility = "visible"),
          t
        );
      }
      static scrollInView(e, t) {
        let r = getComputedStyle(e).getPropertyValue("borderTopWidth"),
          o = r ? parseFloat(r) : 0,
          a = getComputedStyle(e).getPropertyValue("paddingTop"),
          d = a ? parseFloat(a) : 0,
          u = e.getBoundingClientRect(),
          v =
            t.getBoundingClientRect().top +
            document.body.scrollTop -
            (u.top + document.body.scrollTop) -
            o -
            d,
          S = e.scrollTop,
          T = e.clientHeight,
          M = this.getOuterHeight(t);
        v < 0
          ? (e.scrollTop = S + v)
          : v + M > T && (e.scrollTop = S + v - T + M);
      }
      static fadeIn(e, t) {
        e.style.opacity = 0;
        let r = +new Date(),
          o = 0,
          a = function () {
            (o =
              +e.style.opacity.replace(",", ".") +
              (new Date().getTime() - r) / t),
              (e.style.opacity = o),
              (r = +new Date()),
              +o < 1 &&
                ((window.requestAnimationFrame && requestAnimationFrame(a)) ||
                  setTimeout(a, 16));
          };
        a();
      }
      static fadeOut(e, t) {
        var r = 1,
          o = 50,
          a = t,
          d = o / a;
        let u = setInterval(() => {
          (r = r - d),
            r <= 0 && ((r = 0), clearInterval(u)),
            (e.style.opacity = r);
        }, o);
      }
      static getWindowScrollTop() {
        let e = document.documentElement;
        return (window.pageYOffset || e.scrollTop) - (e.clientTop || 0);
      }
      static getWindowScrollLeft() {
        let e = document.documentElement;
        return (window.pageXOffset || e.scrollLeft) - (e.clientLeft || 0);
      }
      static matches(e, t) {
        var r = Element.prototype,
          o =
            r.matches ||
            r.webkitMatchesSelector ||
            r.mozMatchesSelector ||
            r.msMatchesSelector ||
            function (a) {
              return [].indexOf.call(document.querySelectorAll(a), this) !== -1;
            };
        return o.call(e, t);
      }
      static getOuterWidth(e, t) {
        let r = e.offsetWidth;
        if (t) {
          let o = getComputedStyle(e);
          r += parseFloat(o.marginLeft) + parseFloat(o.marginRight);
        }
        return r;
      }
      static getHorizontalPadding(e) {
        let t = getComputedStyle(e);
        return parseFloat(t.paddingLeft) + parseFloat(t.paddingRight);
      }
      static getHorizontalMargin(e) {
        let t = getComputedStyle(e);
        return parseFloat(t.marginLeft) + parseFloat(t.marginRight);
      }
      static innerWidth(e) {
        let t = e.offsetWidth,
          r = getComputedStyle(e);
        return (t += parseFloat(r.paddingLeft) + parseFloat(r.paddingRight)), t;
      }
      static width(e) {
        let t = e.offsetWidth,
          r = getComputedStyle(e);
        return (t -= parseFloat(r.paddingLeft) + parseFloat(r.paddingRight)), t;
      }
      static getInnerHeight(e) {
        let t = e.offsetHeight,
          r = getComputedStyle(e);
        return (t += parseFloat(r.paddingTop) + parseFloat(r.paddingBottom)), t;
      }
      static getOuterHeight(e, t) {
        let r = e.offsetHeight;
        if (t) {
          let o = getComputedStyle(e);
          r += parseFloat(o.marginTop) + parseFloat(o.marginBottom);
        }
        return r;
      }
      static getHeight(e) {
        let t = e.offsetHeight,
          r = getComputedStyle(e);
        return (
          (t -=
            parseFloat(r.paddingTop) +
            parseFloat(r.paddingBottom) +
            parseFloat(r.borderTopWidth) +
            parseFloat(r.borderBottomWidth)),
          t
        );
      }
      static getWidth(e) {
        let t = e.offsetWidth,
          r = getComputedStyle(e);
        return (
          (t -=
            parseFloat(r.paddingLeft) +
            parseFloat(r.paddingRight) +
            parseFloat(r.borderLeftWidth) +
            parseFloat(r.borderRightWidth)),
          t
        );
      }
      static getViewport() {
        let e = window,
          t = document,
          r = t.documentElement,
          o = t.getElementsByTagName("body")[0],
          a = e.innerWidth || r.clientWidth || o.clientWidth,
          d = e.innerHeight || r.clientHeight || o.clientHeight;
        return { width: a, height: d };
      }
      static getOffset(e) {
        var t = e.getBoundingClientRect();
        return {
          top:
            t.top +
            (window.pageYOffset ||
              document.documentElement.scrollTop ||
              document.body.scrollTop ||
              0),
          left:
            t.left +
            (window.pageXOffset ||
              document.documentElement.scrollLeft ||
              document.body.scrollLeft ||
              0),
        };
      }
      static replaceElementWith(e, t) {
        let r = e.parentNode;
        if (!r) throw "Can't replace element";
        return r.replaceChild(t, e);
      }
      static getUserAgent() {
        if (navigator && this.isClient()) return navigator.userAgent;
      }
      static isIE() {
        var e = window.navigator.userAgent,
          t = e.indexOf("MSIE ");
        if (t > 0) return !0;
        var r = e.indexOf("Trident/");
        if (r > 0) {
          var o = e.indexOf("rv:");
          return !0;
        }
        var a = e.indexOf("Edge/");
        return a > 0;
      }
      static isIOS() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
      }
      static isAndroid() {
        return /(android)/i.test(navigator.userAgent);
      }
      static isTouchDevice() {
        return "ontouchstart" in window || navigator.maxTouchPoints > 0;
      }
      static appendChild(e, t) {
        if (this.isElement(t)) t.appendChild(e);
        else if (t && t.el && t.el.nativeElement)
          t.el.nativeElement.appendChild(e);
        else throw "Cannot append " + t + " to " + e;
      }
      static removeChild(e, t) {
        if (this.isElement(t)) t.removeChild(e);
        else if (t.el && t.el.nativeElement) t.el.nativeElement.removeChild(e);
        else throw "Cannot remove " + e + " from " + t;
      }
      static removeElement(e) {
        "remove" in Element.prototype
          ? e.remove()
          : e.parentNode.removeChild(e);
      }
      static isElement(e) {
        return typeof HTMLElement == "object"
          ? e instanceof HTMLElement
          : e &&
              typeof e == "object" &&
              e !== null &&
              e.nodeType === 1 &&
              typeof e.nodeName == "string";
      }
      static calculateScrollbarWidth(e) {
        if (e) {
          let t = getComputedStyle(e);
          return (
            e.offsetWidth -
            e.clientWidth -
            parseFloat(t.borderLeftWidth) -
            parseFloat(t.borderRightWidth)
          );
        } else {
          if (this.calculatedScrollbarWidth !== null)
            return this.calculatedScrollbarWidth;
          let t = document.createElement("div");
          (t.className = "p-scrollbar-measure"), document.body.appendChild(t);
          let r = t.offsetWidth - t.clientWidth;
          return (
            document.body.removeChild(t), (this.calculatedScrollbarWidth = r), r
          );
        }
      }
      static calculateScrollbarHeight() {
        if (this.calculatedScrollbarHeight !== null)
          return this.calculatedScrollbarHeight;
        let e = document.createElement("div");
        (e.className = "p-scrollbar-measure"), document.body.appendChild(e);
        let t = e.offsetHeight - e.clientHeight;
        return (
          document.body.removeChild(e), (this.calculatedScrollbarWidth = t), t
        );
      }
      static invokeElementMethod(e, t, r) {
        e[t].apply(e, r);
      }
      static clearSelection() {
        if (window.getSelection)
          window.getSelection().empty
            ? window.getSelection().empty()
            : window.getSelection().removeAllRanges &&
              window.getSelection().rangeCount > 0 &&
              window.getSelection().getRangeAt(0).getClientRects().length > 0 &&
              window.getSelection().removeAllRanges();
        else if (document.selection && document.selection.empty)
          try {
            document.selection.empty();
          } catch {}
      }
      static getBrowser() {
        if (!this.browser) {
          let e = this.resolveUserAgent();
          (this.browser = {}),
            e.browser &&
              ((this.browser[e.browser] = !0),
              (this.browser.version = e.version)),
            this.browser.chrome
              ? (this.browser.webkit = !0)
              : this.browser.webkit && (this.browser.safari = !0);
        }
        return this.browser;
      }
      static resolveUserAgent() {
        let e = navigator.userAgent.toLowerCase(),
          t =
            /(chrome)[ \/]([\w.]+)/.exec(e) ||
            /(webkit)[ \/]([\w.]+)/.exec(e) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) ||
            /(msie) ([\w.]+)/.exec(e) ||
            (e.indexOf("compatible") < 0 &&
              /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)) ||
            [];
        return { browser: t[1] || "", version: t[2] || "0" };
      }
      static isInteger(e) {
        return Number.isInteger
          ? Number.isInteger(e)
          : typeof e == "number" && isFinite(e) && Math.floor(e) === e;
      }
      static isHidden(e) {
        return !e || e.offsetParent === null;
      }
      static isVisible(e) {
        return e && e.offsetParent != null;
      }
      static isExist(e) {
        return e !== null && typeof e < "u" && e.nodeName && e.parentNode;
      }
      static focus(e, t) {
        e && document.activeElement !== e && e.focus(t);
      }
      static getFocusableSelectorString(e = "") {
        return `button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-inputtext:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e}`;
      }
      static getFocusableElements(e, t = "") {
        let r = this.find(e, this.getFocusableSelectorString(t)),
          o = [];
        for (let a of r) {
          let d = getComputedStyle(a);
          this.isVisible(a) &&
            d.display != "none" &&
            d.visibility != "hidden" &&
            o.push(a);
        }
        return o;
      }
      static getFocusableElement(e, t = "") {
        let r = this.findSingle(e, this.getFocusableSelectorString(t));
        if (r) {
          let o = getComputedStyle(r);
          if (
            this.isVisible(r) &&
            o.display != "none" &&
            o.visibility != "hidden"
          )
            return r;
        }
        return null;
      }
      static getFirstFocusableElement(e, t = "") {
        let r = this.getFocusableElements(e, t);
        return r.length > 0 ? r[0] : null;
      }
      static getLastFocusableElement(e, t) {
        let r = this.getFocusableElements(e, t);
        return r.length > 0 ? r[r.length - 1] : null;
      }
      static getNextFocusableElement(e, t = !1) {
        let r = n.getFocusableElements(e),
          o = 0;
        if (r && r.length > 0) {
          let a = r.indexOf(r[0].ownerDocument.activeElement);
          t
            ? a == -1 || a === 0
              ? (o = r.length - 1)
              : (o = a - 1)
            : a != -1 && a !== r.length - 1 && (o = a + 1);
        }
        return r[o];
      }
      static generateZIndex() {
        return (this.zindex = this.zindex || 999), ++this.zindex;
      }
      static getSelection() {
        return window.getSelection
          ? window.getSelection().toString()
          : document.getSelection
          ? document.getSelection().toString()
          : document.selection
          ? document.selection.createRange().text
          : null;
      }
      static getTargetElement(e, t) {
        if (!e) return null;
        switch (e) {
          case "document":
            return document;
          case "window":
            return window;
          case "@next":
            return t?.nextElementSibling;
          case "@prev":
            return t?.previousElementSibling;
          case "@parent":
            return t?.parentElement;
          case "@grandparent":
            return t?.parentElement.parentElement;
          default:
            let r = typeof e;
            if (r === "string") return document.querySelector(e);
            if (r === "object" && e.hasOwnProperty("nativeElement"))
              return this.isExist(e.nativeElement) ? e.nativeElement : void 0;
            let a = ((d) => !!(d && d.constructor && d.call && d.apply))(e)
              ? e()
              : e;
            return (a && a.nodeType === 9) || this.isExist(a) ? a : null;
        }
      }
      static isClient() {
        return !!(
          typeof window < "u" &&
          window.document &&
          window.document.createElement
        );
      }
      static getAttribute(e, t) {
        if (e) {
          let r = e.getAttribute(t);
          return isNaN(r)
            ? r === "true" || r === "false"
              ? r === "true"
              : r
            : +r;
        }
      }
      static calculateBodyScrollbarWidth() {
        return window.innerWidth - document.documentElement.offsetWidth;
      }
      static blockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.setProperty(
          "--scrollbar-width",
          this.calculateBodyScrollbarWidth() + "px"
        ),
          this.addClass(document.body, e);
      }
      static unblockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.removeProperty("--scrollbar-width"),
          this.removeClass(document.body, e);
      }
      static createElement(e, t = {}, ...r) {
        if (e) {
          let o = document.createElement(e);
          return this.setAttributes(o, t), o.append(...r), o;
        }
      }
      static setAttribute(e, t = "", r) {
        this.isElement(e) && r !== null && r !== void 0 && e.setAttribute(t, r);
      }
      static setAttributes(e, t = {}) {
        if (this.isElement(e)) {
          let r = (o, a) => {
            let d = e?.$attrs?.[o] ? [e?.$attrs?.[o]] : [];
            return [a].flat().reduce((u, f) => {
              if (f != null) {
                let v = typeof f;
                if (v === "string" || v === "number") u.push(f);
                else if (v === "object") {
                  let S = Array.isArray(f)
                    ? r(o, f)
                    : Object.entries(f).map(([T, M]) =>
                        o === "style" && (M || M === 0)
                          ? `${T.replace(
                              /([a-z])([A-Z])/g,
                              "$1-$2"
                            ).toLowerCase()}:${M}`
                          : M
                          ? T
                          : void 0
                      );
                  u = S.length ? u.concat(S.filter((T) => !!T)) : u;
                }
              }
              return u;
            }, d);
          };
          Object.entries(t).forEach(([o, a]) => {
            if (a != null) {
              let d = o.match(/^on(.+)/);
              d
                ? e.addEventListener(d[1].toLowerCase(), a)
                : o === "pBind"
                ? this.setAttributes(e, a)
                : ((a =
                    o === "class"
                      ? [...new Set(r("class", a))].join(" ").trim()
                      : o === "style"
                      ? r("style", a).join(";").trim()
                      : a),
                  (e.$attrs = e.$attrs || {}) && (e.$attrs[o] = a),
                  e.setAttribute(o, a));
            }
          });
        }
      }
      static isFocusableElement(e, t = "") {
        return this.isElement(e)
          ? e.matches(`button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t}`)
          : !1;
      }
    }
    return n;
  })(),
  Kd = class {
    element;
    listener;
    scrollableParents;
    constructor(i, e = () => {}) {
      (this.element = i), (this.listener = e);
    }
    bindScrollListener() {
      this.scrollableParents = me.getScrollableParents(this.element);
      for (let i = 0; i < this.scrollableParents.length; i++)
        this.scrollableParents[i].addEventListener("scroll", this.listener);
    }
    unbindScrollListener() {
      if (this.scrollableParents)
        for (let i = 0; i < this.scrollableParents.length; i++)
          this.scrollableParents[i].removeEventListener(
            "scroll",
            this.listener
          );
    }
    destroy() {
      this.unbindScrollListener(),
        (this.element = null),
        (this.listener = null),
        (this.scrollableParents = null);
    }
  };
var Qd = (() => {
    class n {
      autofocus = !1;
      focused = !1;
      platformId = W(si);
      document = W(Oe);
      host = W(Re);
      ngAfterContentChecked() {
        this.autofocus === !1
          ? this.host.nativeElement.removeAttribute("autofocus")
          : this.host.nativeElement.setAttribute("autofocus", !0),
          this.focused || this.autoFocus();
      }
      ngAfterViewChecked() {
        this.focused || this.autoFocus();
      }
      autoFocus() {
        dn(this.platformId) &&
          this.autofocus &&
          setTimeout(() => {
            let e = me.getFocusableElements(this.host?.nativeElement);
            e.length === 0 && this.host.nativeElement.focus(),
              e.length > 0 && e[0].focus(),
              (this.focused = !0);
          });
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵdir = Ie({
        type: n,
        selectors: [["", "pAutoFocus", ""]],
        hostAttrs: [1, "p-element"],
        inputs: { autofocus: [2, "autofocus", "autofocus", Se] },
        standalone: !0,
        features: [Pt],
      });
    }
    return n;
  })(),
  sy = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({});
    }
    return n;
  })();
var iP = ["*"],
  Ei = (() => {
    class n {
      label;
      spin = !1;
      styleClass;
      role;
      ariaLabel;
      ariaHidden;
      ngOnInit() {
        this.getAttributes();
      }
      getAttributes() {
        let e = tn.isEmpty(this.label);
        (this.role = e ? void 0 : "img"),
          (this.ariaLabel = e ? void 0 : this.label),
          (this.ariaHidden = e);
      }
      getClassNames() {
        return `p-icon ${this.styleClass ? this.styleClass + " " : ""}${
          this.spin ? "p-icon-spin" : ""
        }`;
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵcmp = se({
        type: n,
        selectors: [["ng-component"]],
        hostAttrs: [1, "p-element", "p-icon-wrapper"],
        inputs: {
          label: "label",
          spin: [2, "spin", "spin", Se],
          styleClass: "styleClass",
        },
        standalone: !0,
        features: [Pt, le],
        ngContentSelectors: iP,
        decls: 1,
        vars: 0,
        template: function (t, r) {
          t & 1 && (Jt(), Vt(0));
        },
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })();
var ly = (() => {
  class n extends Ei {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + Aa() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = se({
      type: n,
      selectors: [["SpinnerIcon"]],
      standalone: !0,
      features: [Ze, le],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (t, r) {
        t & 1 &&
          (Ct(),
          l(0, "svg", 0)(1, "g"),
          U(2, "path", 1),
          c(),
          l(3, "defs")(4, "clipPath", 2),
          U(5, "rect", 3),
          c()()()),
          t & 2 &&
            (He(r.getClassNames()),
            ce("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ),
            m(),
            ce("clip-path", r.pathId),
            m(3),
            y("id", r.pathId));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Xd = (() => {
    class n {
      document;
      platformId;
      renderer;
      el;
      zone;
      config;
      constructor(e, t, r, o, a, d) {
        (this.document = e),
          (this.platformId = t),
          (this.renderer = r),
          (this.el = o),
          (this.zone = a),
          (this.config = d);
      }
      animationListener;
      mouseDownListener;
      timeout;
      ngAfterViewInit() {
        dn(this.platformId) &&
          this.config &&
          this.config.ripple &&
          this.zone.runOutsideAngular(() => {
            this.create(),
              (this.mouseDownListener = this.renderer.listen(
                this.el.nativeElement,
                "mousedown",
                this.onMouseDown.bind(this)
              ));
          });
      }
      onMouseDown(e) {
        let t = this.getInk();
        if (
          !t ||
          this.document.defaultView?.getComputedStyle(t, null).display ===
            "none"
        )
          return;
        if (
          (me.removeClass(t, "p-ink-active"),
          !me.getHeight(t) && !me.getWidth(t))
        ) {
          let d = Math.max(
            me.getOuterWidth(this.el.nativeElement),
            me.getOuterHeight(this.el.nativeElement)
          );
          (t.style.height = d + "px"), (t.style.width = d + "px");
        }
        let r = me.getOffset(this.el.nativeElement),
          o =
            e.pageX -
            r.left +
            this.document.body.scrollTop -
            me.getWidth(t) / 2,
          a =
            e.pageY -
            r.top +
            this.document.body.scrollLeft -
            me.getHeight(t) / 2;
        this.renderer.setStyle(t, "top", a + "px"),
          this.renderer.setStyle(t, "left", o + "px"),
          me.addClass(t, "p-ink-active"),
          (this.timeout = setTimeout(() => {
            let d = this.getInk();
            d && me.removeClass(d, "p-ink-active");
          }, 401));
      }
      getInk() {
        let e = this.el.nativeElement.children;
        for (let t = 0; t < e.length; t++)
          if (
            typeof e[t].className == "string" &&
            e[t].className.indexOf("p-ink") !== -1
          )
            return e[t];
        return null;
      }
      resetInk() {
        let e = this.getInk();
        e && me.removeClass(e, "p-ink-active");
      }
      onAnimationEnd(e) {
        this.timeout && clearTimeout(this.timeout),
          me.removeClass(e.currentTarget, "p-ink-active");
      }
      create() {
        let e = this.renderer.createElement("span");
        this.renderer.addClass(e, "p-ink"),
          this.renderer.appendChild(this.el.nativeElement, e),
          this.renderer.setAttribute(e, "aria-hidden", "true"),
          this.renderer.setAttribute(e, "role", "presentation"),
          this.animationListener ||
            (this.animationListener = this.renderer.listen(
              e,
              "animationend",
              this.onAnimationEnd.bind(this)
            ));
      }
      remove() {
        let e = this.getInk();
        e &&
          (this.mouseDownListener && this.mouseDownListener(),
          this.animationListener && this.animationListener(),
          (this.mouseDownListener = null),
          (this.animationListener = null),
          me.removeElement(e));
      }
      ngOnDestroy() {
        this.config && this.config.ripple && this.remove();
      }
      static ɵfac = function (t) {
        return new (t || n)(j(Oe), j(si), j(hi), j(Re), j(Me), j(qd, 8));
      };
      static ɵdir = Ie({
        type: n,
        selectors: [["", "pRipple", ""]],
        hostAttrs: [1, "p-ripple", "p-element"],
        standalone: !0,
      });
    }
    return n;
  })(),
  cy = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({});
    }
    return n;
  })();
var rP = ["*"],
  dy = (n) => ({ class: n });
function oP(n, i) {
  n & 1 && wn(0);
}
function aP(n, i) {
  if ((n & 1 && U(0, "span", 8), n & 2)) {
    let e = x(3);
    y("ngClass", e.iconClass()),
      ce("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function sP(n, i) {
  if ((n & 1 && U(0, "SpinnerIcon", 9), n & 2)) {
    let e = x(3);
    y("styleClass", e.spinnerIconClass())("spin", !0),
      ce("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function lP(n, i) {
  if (
    (n & 1 &&
      (Le(0), A(1, aP, 1, 3, "span", 6)(2, sP, 1, 4, "SpinnerIcon", 7), Ve()),
    n & 2)
  ) {
    let e = x(2);
    m(), y("ngIf", e.loadingIcon), m(), y("ngIf", !e.loadingIcon);
  }
}
function cP(n, i) {}
function dP(n, i) {
  if ((n & 1 && A(0, cP, 0, 0, "ng-template", 10), n & 2)) {
    let e = x(2);
    y("ngIf", e.loadingIconTemplate);
  }
}
function uP(n, i) {
  if (
    (n & 1 &&
      (Le(0), A(1, lP, 3, 2, "ng-container", 2)(2, dP, 1, 1, null, 5), Ve()),
    n & 2)
  ) {
    let e = x();
    m(),
      y("ngIf", !e.loadingIconTemplate),
      m(),
      y("ngTemplateOutlet", e.loadingIconTemplate)(
        "ngTemplateOutletContext",
        de(3, dy, e.iconClass())
      );
  }
}
function hP(n, i) {
  if ((n & 1 && U(0, "span", 8), n & 2)) {
    let e = x(2);
    y("ngClass", e.iconClass()), ce("data-pc-section", "icon");
  }
}
function pP(n, i) {}
function mP(n, i) {
  if ((n & 1 && A(0, pP, 0, 0, "ng-template", 10), n & 2)) {
    let e = x(2);
    y("ngIf", !e.icon && e.iconTemplate);
  }
}
function fP(n, i) {
  if (
    (n & 1 && (Le(0), A(1, hP, 1, 2, "span", 6)(2, mP, 1, 1, null, 5), Ve()),
    n & 2)
  ) {
    let e = x();
    m(),
      y("ngIf", e.icon && !e.iconTemplate),
      m(),
      y("ngTemplateOutlet", e.iconTemplate)(
        "ngTemplateOutletContext",
        de(3, dy, e.iconClass())
      );
  }
}
function gP(n, i) {
  if ((n & 1 && (l(0, "span", 11), h(1), c()), n & 2)) {
    let e = x();
    ce("aria-hidden", e.icon && !e.label)("data-pc-section", "label"),
      m(),
      B(e.label);
  }
}
function _P(n, i) {
  if ((n & 1 && (l(0, "span", 8), h(1), c()), n & 2)) {
    let e = x();
    He(e.badgeClass),
      y("ngClass", e.badgeStyleClass()),
      ce("data-pc-section", "badge"),
      m(),
      B(e.badge);
  }
}
var Kr = {
    button: "p-button",
    component: "p-component",
    iconOnly: "p-button-icon-only",
    disabled: "p-disabled",
    loading: "p-button-loading",
    labelOnly: "p-button-loading-label-only",
  },
  uy = (() => {
    class n {
      el;
      document;
      iconPos = "left";
      loadingIcon;
      get label() {
        return this._label;
      }
      set label(e) {
        (this._label = e),
          this.initialized &&
            (this.updateLabel(), this.updateIcon(), this.setStyleClass());
      }
      get icon() {
        return this._icon;
      }
      set icon(e) {
        (this._icon = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      get loading() {
        return this._loading;
      }
      set loading(e) {
        (this._loading = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      severity;
      raised = !1;
      rounded = !1;
      text = !1;
      outlined = !1;
      size = null;
      plain = !1;
      _label;
      _icon;
      _loading = !1;
      initialized;
      get htmlElement() {
        return this.el.nativeElement;
      }
      _internalClasses = Object.values(Kr);
      constructor(e, t) {
        (this.el = e), (this.document = t);
      }
      ngAfterViewInit() {
        me.addMultipleClasses(this.htmlElement, this.getStyleClass().join(" ")),
          this.createIcon(),
          this.createLabel(),
          (this.initialized = !0);
      }
      getStyleClass() {
        let e = [Kr.button, Kr.component];
        return (
          this.icon &&
            !this.label &&
            tn.isEmpty(this.htmlElement.textContent) &&
            e.push(Kr.iconOnly),
          this.loading &&
            (e.push(Kr.disabled, Kr.loading),
            !this.icon && this.label && e.push(Kr.labelOnly),
            this.icon &&
              !this.label &&
              !tn.isEmpty(this.htmlElement.textContent) &&
              e.push(Kr.iconOnly)),
          this.text && e.push("p-button-text"),
          this.severity && e.push(`p-button-${this.severity}`),
          this.plain && e.push("p-button-plain"),
          this.raised && e.push("p-button-raised"),
          this.size && e.push(`p-button-${this.size}`),
          this.outlined && e.push("p-button-outlined"),
          this.rounded && e.push("p-button-rounded"),
          this.size === "small" && e.push("p-button-sm"),
          this.size === "large" && e.push("p-button-lg"),
          e
        );
      }
      setStyleClass() {
        let e = this.getStyleClass();
        this.htmlElement.classList.remove(...this._internalClasses),
          this.htmlElement.classList.add(...e);
      }
      createLabel() {
        if (!me.findSingle(this.htmlElement, ".p-button-label") && this.label) {
          let t = this.document.createElement("span");
          this.icon && !this.label && t.setAttribute("aria-hidden", "true"),
            (t.className = "p-button-label"),
            t.appendChild(this.document.createTextNode(this.label)),
            this.htmlElement.appendChild(t);
        }
      }
      createIcon() {
        if (
          !me.findSingle(this.htmlElement, ".p-button-icon") &&
          (this.icon || this.loading)
        ) {
          let t = this.document.createElement("span");
          (t.className = "p-button-icon"),
            t.setAttribute("aria-hidden", "true");
          let r = this.label ? "p-button-icon-" + this.iconPos : null;
          r && me.addClass(t, r);
          let o = this.getIconClass();
          o && me.addMultipleClasses(t, o),
            this.htmlElement.insertBefore(t, this.htmlElement.firstChild);
        }
      }
      updateLabel() {
        let e = me.findSingle(this.htmlElement, ".p-button-label");
        if (!this.label) {
          e && this.htmlElement.removeChild(e);
          return;
        }
        e ? (e.textContent = this.label) : this.createLabel();
      }
      updateIcon() {
        let e = me.findSingle(this.htmlElement, ".p-button-icon"),
          t = me.findSingle(this.htmlElement, ".p-button-label");
        e
          ? this.iconPos
            ? (e.className =
                "p-button-icon " +
                (t ? "p-button-icon-" + this.iconPos : "") +
                " " +
                this.getIconClass())
            : (e.className = "p-button-icon " + this.getIconClass())
          : this.createIcon();
      }
      getIconClass() {
        return this.loading
          ? "p-button-loading-icon pi-spin " +
              (this.loadingIcon ?? "pi pi-spinner")
          : this.icon || "p-hidden";
      }
      ngOnDestroy() {
        this.initialized = !1;
      }
      static ɵfac = function (t) {
        return new (t || n)(j(Re), j(Oe));
      };
      static ɵdir = Ie({
        type: n,
        selectors: [["", "pButton", ""]],
        hostAttrs: [1, "p-element"],
        inputs: {
          iconPos: "iconPos",
          loadingIcon: "loadingIcon",
          label: "label",
          icon: "icon",
          loading: "loading",
          severity: "severity",
          raised: [2, "raised", "raised", Se],
          rounded: [2, "rounded", "rounded", Se],
          text: [2, "text", "text", Se],
          outlined: [2, "outlined", "outlined", Se],
          size: "size",
          plain: [2, "plain", "plain", Se],
        },
        standalone: !0,
        features: [Pt],
      });
    }
    return n;
  })(),
  bP = (() => {
    class n {
      el;
      type = "button";
      iconPos = "left";
      icon;
      badge;
      label;
      disabled;
      loading = !1;
      loadingIcon;
      raised = !1;
      rounded = !1;
      text = !1;
      plain = !1;
      severity;
      outlined = !1;
      link = !1;
      tabindex;
      size;
      style;
      styleClass;
      badgeClass;
      ariaLabel;
      autofocus;
      onClick = new xe();
      onFocus = new xe();
      onBlur = new xe();
      contentTemplate;
      loadingIconTemplate;
      iconTemplate;
      templates;
      constructor(e) {
        this.el = e;
      }
      spinnerIconClass() {
        return Object.entries(this.iconClass())
          .filter(([, e]) => !!e)
          .reduce((e, [t]) => e + ` ${t}`, "p-button-loading-icon");
      }
      iconClass() {
        let e = {
          "p-button-icon": !0,
          "p-button-icon-left": this.iconPos === "left" && this.label,
          "p-button-icon-right": this.iconPos === "right" && this.label,
          "p-button-icon-top": this.iconPos === "top" && this.label,
          "p-button-icon-bottom": this.iconPos === "bottom" && this.label,
        };
        return (
          this.loading
            ? (e[`p-button-loading-icon pi-spin ${this.loadingIcon ?? ""}`] =
                !0)
            : this.icon && (e[this.icon] = !0),
          e
        );
      }
      get buttonClass() {
        return {
          "p-button p-component": !0,
          "p-button-icon-only":
            (this.icon ||
              this.iconTemplate ||
              this.loadingIcon ||
              this.loadingIconTemplate) &&
            !this.label,
          "p-button-vertical":
            (this.iconPos === "top" || this.iconPos === "bottom") && this.label,
          "p-button-loading": this.loading,
          "p-button-loading-label-only":
            this.loading &&
            !this.icon &&
            this.label &&
            !this.loadingIcon &&
            this.iconPos === "left",
          "p-button-link": this.link,
          [`p-button-${this.severity}`]: this.severity,
          "p-button-raised": this.raised,
          "p-button-rounded": this.rounded,
          "p-button-text": this.text,
          "p-button-outlined": this.outlined,
          "p-button-sm": this.size === "small",
          "p-button-lg": this.size === "large",
          "p-button-plain": this.plain,
          [`${this.styleClass}`]: this.styleClass,
        };
      }
      ngAfterContentInit() {
        this.templates?.forEach((e) => {
          switch (e.getType()) {
            case "content":
              this.contentTemplate = e.template;
              break;
            case "icon":
              this.iconTemplate = e.template;
              break;
            case "loadingicon":
              this.loadingIconTemplate = e.template;
              break;
            default:
              this.contentTemplate = e.template;
              break;
          }
        });
      }
      badgeStyleClass() {
        return {
          "p-badge p-component": !0,
          "p-badge-no-gutter": this.badge && String(this.badge).length === 1,
        };
      }
      focus() {
        this.el.nativeElement.firstChild.focus();
      }
      static ɵfac = function (t) {
        return new (t || n)(j(Re));
      };
      static ɵcmp = se({
        type: n,
        selectors: [["p-button"]],
        contentQueries: function (t, r, o) {
          if ((t & 1 && ln(o, vl, 4), t & 2)) {
            let a;
            nt((a = rt())) && (r.templates = a);
          }
        },
        hostAttrs: [1, "p-element"],
        hostVars: 2,
        hostBindings: function (t, r) {
          t & 2 && ne("p-disabled", r.disabled);
        },
        inputs: {
          type: "type",
          iconPos: "iconPos",
          icon: "icon",
          badge: "badge",
          label: "label",
          disabled: [2, "disabled", "disabled", Se],
          loading: [2, "loading", "loading", Se],
          loadingIcon: "loadingIcon",
          raised: [2, "raised", "raised", Se],
          rounded: [2, "rounded", "rounded", Se],
          text: [2, "text", "text", Se],
          plain: [2, "plain", "plain", Se],
          severity: "severity",
          outlined: [2, "outlined", "outlined", Se],
          link: [2, "link", "link", Se],
          tabindex: [2, "tabindex", "tabindex", cn],
          size: "size",
          style: "style",
          styleClass: "styleClass",
          badgeClass: "badgeClass",
          ariaLabel: "ariaLabel",
          autofocus: [2, "autofocus", "autofocus", Se],
        },
        outputs: { onClick: "onClick", onFocus: "onFocus", onBlur: "onBlur" },
        standalone: !0,
        features: [Pt, le],
        ngContentSelectors: rP,
        decls: 7,
        vars: 14,
        consts: [
          [
            "pRipple",
            "",
            "pAutoFocus",
            "",
            3,
            "click",
            "focus",
            "blur",
            "ngStyle",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngTemplateOutlet"],
          [4, "ngIf"],
          ["class", "p-button-label", 4, "ngIf"],
          [3, "ngClass", "class", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "ngClass", 4, "ngIf"],
          [3, "styleClass", "spin", 4, "ngIf"],
          [3, "ngClass"],
          [3, "styleClass", "spin"],
          [3, "ngIf"],
          [1, "p-button-label"],
        ],
        template: function (t, r) {
          t & 1 &&
            (Jt(),
            l(0, "button", 0),
            R("click", function (a) {
              return r.onClick.emit(a);
            })("focus", function (a) {
              return r.onFocus.emit(a);
            })("blur", function (a) {
              return r.onBlur.emit(a);
            }),
            Vt(1),
            A(2, oP, 1, 0, "ng-container", 1)(3, uP, 3, 5, "ng-container", 2)(
              4,
              fP,
              3,
              5,
              "ng-container",
              2
            )(5, gP, 2, 3, "span", 3)(6, _P, 2, 5, "span", 4),
            c()),
            t & 2 &&
              (y("ngStyle", r.style)("disabled", r.disabled || r.loading)(
                "ngClass",
                r.buttonClass
              )("autofocus", r.autofocus),
              ce("type", r.type)("aria-label", r.ariaLabel)(
                "data-pc-name",
                "button"
              )("data-pc-section", "root")("tabindex", r.tabindex),
              m(2),
              y("ngTemplateOutlet", r.contentTemplate),
              m(),
              y("ngIf", r.loading),
              m(),
              y("ngIf", !r.loading),
              m(),
              y("ngIf", !r.contentTemplate && r.label),
              m(),
              y("ngIf", !r.contentTemplate && r.badge));
        },
        dependencies: [We, Jo, Pr, It, Xd, Qd, ly],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })(),
  bf = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({ imports: [bP, On] });
    }
    return n;
  })();
var vf = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = se({
      type: n,
      selectors: [["ChevronLeftIcon"]],
      standalone: !0,
      features: [Ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M9.61296 13C9.50997 13.0005 9.40792 12.9804 9.3128 12.9409C9.21767 12.9014 9.13139 12.8433 9.05902 12.7701L3.83313 7.54416C3.68634 7.39718 3.60388 7.19795 3.60388 6.99022C3.60388 6.78249 3.68634 6.58325 3.83313 6.43628L9.05902 1.21039C9.20762 1.07192 9.40416 0.996539 9.60724 1.00012C9.81032 1.00371 10.0041 1.08597 10.1477 1.22959C10.2913 1.37322 10.3736 1.56698 10.3772 1.77005C10.3808 1.97313 10.3054 2.16968 10.1669 2.31827L5.49496 6.99022L10.1669 11.6622C10.3137 11.8091 10.3962 12.0084 10.3962 12.2161C10.3962 12.4238 10.3137 12.6231 10.1669 12.7701C10.0945 12.8433 10.0083 12.9014 9.91313 12.9409C9.81801 12.9804 9.71596 13.0005 9.61296 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (Ct(), l(0, "svg", 0), U(1, "path", 1), c()),
          t & 2 &&
            (He(r.getClassNames()),
            ce("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var yl = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = se({
      type: n,
      selectors: [["ChevronRightIcon"]],
      standalone: !0,
      features: [Ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M4.38708 13C4.28408 13.0005 4.18203 12.9804 4.08691 12.9409C3.99178 12.9014 3.9055 12.8433 3.83313 12.7701C3.68634 12.6231 3.60388 12.4238 3.60388 12.2161C3.60388 12.0084 3.68634 11.8091 3.83313 11.6622L8.50507 6.99022L3.83313 2.31827C3.69467 2.16968 3.61928 1.97313 3.62287 1.77005C3.62645 1.56698 3.70872 1.37322 3.85234 1.22959C3.99596 1.08597 4.18972 1.00371 4.3928 1.00012C4.59588 0.996539 4.79242 1.07192 4.94102 1.21039L10.1669 6.43628C10.3137 6.58325 10.3962 6.78249 10.3962 6.99022C10.3962 7.19795 10.3137 7.39718 10.1669 7.54416L4.94102 12.7701C4.86865 12.8433 4.78237 12.9014 4.68724 12.9409C4.59212 12.9804 4.49007 13.0005 4.38708 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (Ct(), l(0, "svg", 0), U(1, "path", 1), c()),
          t & 2 &&
            (He(r.getClassNames()),
            ce("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var yf = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = se({
      type: n,
      selectors: [["ChevronUpIcon"]],
      standalone: !0,
      features: [Ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M12.2097 10.4113C12.1057 10.4118 12.0027 10.3915 11.9067 10.3516C11.8107 10.3118 11.7237 10.2532 11.6506 10.1792L6.93602 5.46461L2.22139 10.1476C2.07272 10.244 1.89599 10.2877 1.71953 10.2717C1.54307 10.2556 1.3771 10.1808 1.24822 10.0593C1.11933 9.93766 1.035 9.77633 1.00874 9.6011C0.982477 9.42587 1.0158 9.2469 1.10338 9.09287L6.37701 3.81923C6.52533 3.6711 6.72639 3.58789 6.93602 3.58789C7.14565 3.58789 7.3467 3.6711 7.49502 3.81923L12.7687 9.09287C12.9168 9.24119 13 9.44225 13 9.65187C13 9.8615 12.9168 10.0626 12.7687 10.2109C12.616 10.3487 12.4151 10.4207 12.2097 10.4113Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (Ct(), l(0, "svg", 0), U(1, "path", 1), c()),
          t & 2 &&
            (He(r.getClassNames()),
            ce("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var xf = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = se({
      type: n,
      selectors: [["ChevronDownIcon"]],
      standalone: !0,
      features: [Ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (Ct(), l(0, "svg", 0), U(1, "path", 1), c()),
          t & 2 &&
            (He(r.getClassNames()),
            ce("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Cf = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = se({
      type: n,
      selectors: [["TimesIcon"]],
      standalone: !0,
      features: [Ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (Ct(), l(0, "svg", 0), U(1, "path", 1), c()),
          t & 2 &&
            (He(r.getClassNames()),
            ce("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var wf = (() => {
  class n extends Ei {
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = se({
      type: n,
      selectors: [["CalendarIcon"]],
      standalone: !0,
      features: [Ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M10.7838 1.51351H9.83783V0.567568C9.83783 0.417039 9.77804 0.272676 9.6716 0.166237C9.56516 0.0597971 9.42079 0 9.27027 0C9.11974 0 8.97538 0.0597971 8.86894 0.166237C8.7625 0.272676 8.7027 0.417039 8.7027 0.567568V1.51351H5.29729V0.567568C5.29729 0.417039 5.2375 0.272676 5.13106 0.166237C5.02462 0.0597971 4.88025 0 4.72973 0C4.5792 0 4.43484 0.0597971 4.3284 0.166237C4.22196 0.272676 4.16216 0.417039 4.16216 0.567568V1.51351H3.21621C2.66428 1.51351 2.13494 1.73277 1.74467 2.12305C1.35439 2.51333 1.13513 3.04266 1.13513 3.59459V11.9189C1.13513 12.4709 1.35439 13.0002 1.74467 13.3905C2.13494 13.7807 2.66428 14 3.21621 14H10.7838C11.3357 14 11.865 13.7807 12.2553 13.3905C12.6456 13.0002 12.8649 12.4709 12.8649 11.9189V3.59459C12.8649 3.04266 12.6456 2.51333 12.2553 2.12305C11.865 1.73277 11.3357 1.51351 10.7838 1.51351ZM3.21621 2.64865H4.16216V3.59459C4.16216 3.74512 4.22196 3.88949 4.3284 3.99593C4.43484 4.10237 4.5792 4.16216 4.72973 4.16216C4.88025 4.16216 5.02462 4.10237 5.13106 3.99593C5.2375 3.88949 5.29729 3.74512 5.29729 3.59459V2.64865H8.7027V3.59459C8.7027 3.74512 8.7625 3.88949 8.86894 3.99593C8.97538 4.10237 9.11974 4.16216 9.27027 4.16216C9.42079 4.16216 9.56516 4.10237 9.6716 3.99593C9.77804 3.88949 9.83783 3.74512 9.83783 3.59459V2.64865H10.7838C11.0347 2.64865 11.2753 2.74831 11.4527 2.92571C11.6301 3.10311 11.7297 3.34371 11.7297 3.59459V5.67568H2.27027V3.59459C2.27027 3.34371 2.36993 3.10311 2.54733 2.92571C2.72473 2.74831 2.96533 2.64865 3.21621 2.64865ZM10.7838 12.8649H3.21621C2.96533 12.8649 2.72473 12.7652 2.54733 12.5878C2.36993 12.4104 2.27027 12.1698 2.27027 11.9189V6.81081H11.7297V11.9189C11.7297 12.1698 11.6301 12.4104 11.4527 12.5878C11.2753 12.7652 11.0347 12.8649 10.7838 12.8649Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, r) {
        t & 1 && (Ct(), l(0, "svg", 0), U(1, "path", 1), c()),
          t & 2 &&
            (He(r.getClassNames()),
            ce("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var yP = ["container"],
  xP = ["inputfield"],
  CP = ["contentWrapper"],
  wP = [[["p-header"]], [["p-footer"]]],
  SP = ["p-header", "p-footer"],
  DP = (n, i, e, t, r) => ({
    "p-calendar": !0,
    "p-input-icon-right": n,
    "p-calendar-w-btn": i,
    "p-calendar-timeonly": e,
    "p-calendar-disabled": t,
    "p-focus": r,
  }),
  MP = (n) => ({ clickCallBack: n }),
  TP = (n) => ({ "p-datepicker-icon": n }),
  EP = (n, i, e, t, r, o) => ({
    "p-datepicker p-component": !0,
    "p-datepicker-inline": n,
    "p-disabled": i,
    "p-datepicker-timeonly": e,
    "p-datepicker-multiple-month": t,
    "p-datepicker-monthpicker": r,
    "p-datepicker-touch-ui": o,
  }),
  hy = (n, i) => ({ showTransitionParams: n, hideTransitionParams: i }),
  OP = (n) => ({ value: "visibleTouchUI", params: n }),
  kP = (n) => ({ value: "visible", params: n }),
  Sf = (n) => ({ $implicit: n }),
  PP = (n, i) => ({ "p-datepicker-other-month": n, "p-datepicker-today": i }),
  IP = (n, i) => ({
    "p-highlight p-datepicker-current-day": n,
    "p-disabled": i,
  }),
  my = (n, i) => ({ "p-highlight": n, "p-disabled": i }),
  py = (n) => [n];
function AP(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "TimesIcon", 11),
      R("click", function () {
        O(e);
        let r = x(3);
        return k(r.clear());
      }),
      c();
  }
  n & 2 && y("styleClass", "p-calendar-clear-icon");
}
function RP(n, i) {}
function FP(n, i) {
  n & 1 && A(0, RP, 0, 0, "ng-template");
}
function NP(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "span", 12),
      R("click", function () {
        O(e);
        let r = x(3);
        return k(r.clear());
      }),
      A(1, FP, 1, 0, null, 13),
      c();
  }
  if (n & 2) {
    let e = x(3);
    m(), y("ngTemplateOutlet", e.clearIconTemplate);
  }
}
function LP(n, i) {
  if (
    (n & 1 &&
      (Le(0), A(1, AP, 1, 1, "TimesIcon", 9)(2, NP, 2, 1, "span", 10), Ve()),
    n & 2)
  ) {
    let e = x(2);
    m(), y("ngIf", !e.clearIconTemplate), m(), y("ngIf", e.clearIconTemplate);
  }
}
function VP(n, i) {
  if ((n & 1 && U(0, "span", 16), n & 2)) {
    let e = x(3);
    y("ngClass", e.icon);
  }
}
function BP(n, i) {
  n & 1 && U(0, "CalendarIcon");
}
function jP(n, i) {}
function HP(n, i) {
  n & 1 && A(0, jP, 0, 0, "ng-template");
}
function UP(n, i) {
  if (
    (n & 1 &&
      (Le(0), A(1, BP, 1, 0, "CalendarIcon", 7)(2, HP, 1, 0, null, 13), Ve()),
    n & 2)
  ) {
    let e = x(3);
    m(),
      y("ngIf", !e.triggerIconTemplate),
      m(),
      y("ngTemplateOutlet", e.triggerIconTemplate);
  }
}
function zP(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 14),
      R("click", function (r) {
        O(e), x();
        let o = ut(1),
          a = x();
        return k(a.onButtonClick(r, o));
      }),
      A(1, VP, 1, 1, "span", 15)(2, UP, 3, 2, "ng-container", 7),
      c();
  }
  if (n & 2) {
    let e,
      t = x(2);
    y("disabled", t.disabled),
      ce("aria-label", t.iconButtonAriaLabel)(
        "aria-expanded",
        (e = t.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", t.overlayVisible ? t.panelId : null),
      m(),
      y("ngIf", t.icon),
      m(),
      y("ngIf", !t.icon);
  }
}
function $P(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "CalendarIcon", 19),
      R("click", function (r) {
        O(e);
        let o = x(3);
        return k(o.onButtonClick(r));
      }),
      c();
  }
  if (n & 2) {
    let e = x(3);
    y("ngClass", de(1, TP, e.showOnFocus));
  }
}
function WP(n, i) {
  n & 1 && wn(0);
}
function GP(n, i) {
  if (
    (n & 1 &&
      (Le(0),
      A(1, $P, 1, 3, "CalendarIcon", 17)(2, WP, 1, 0, "ng-container", 18),
      Ve()),
    n & 2)
  ) {
    let e = x(2);
    m(),
      y("ngIf", !e.inputIconTemplate),
      m(),
      y("ngTemplateOutlet", e.inputIconTemplate)(
        "ngTemplateOutletContext",
        de(3, MP, e.onButtonClick.bind(e))
      );
  }
}
function YP(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "input", 6, 1),
      R("focus", function (r) {
        O(e);
        let o = x();
        return k(o.onInputFocus(r));
      })("keydown", function (r) {
        O(e);
        let o = x();
        return k(o.onInputKeydown(r));
      })("click", function () {
        O(e);
        let r = x();
        return k(r.onInputClick());
      })("blur", function (r) {
        O(e);
        let o = x();
        return k(o.onInputBlur(r));
      })("input", function (r) {
        O(e);
        let o = x();
        return k(o.onUserInput(r));
      }),
      c(),
      A(2, LP, 3, 2, "ng-container", 7)(3, zP, 3, 6, "button", 8)(
        4,
        GP,
        3,
        5,
        "ng-container",
        7
      );
  }
  if (n & 2) {
    let e,
      t = x();
    He(t.inputStyleClass),
      y("value", t.inputFieldValue)("readonly", t.readonlyInput)(
        "ngStyle",
        t.inputStyle
      )("placeholder", t.placeholder || "")("disabled", t.disabled)(
        "ngClass",
        t.inputClass
      )("autofocus", t.autofocus),
      ce("id", t.inputId)("name", t.name)("required", t.required)(
        "aria-required",
        t.required
      )(
        "aria-expanded",
        (e = t.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", t.overlayVisible ? t.panelId : null)(
        "aria-labelledby",
        t.ariaLabelledBy
      )("aria-label", t.ariaLabel)("tabindex", t.tabindex)(
        "inputmode",
        t.touchUI ? "off" : null
      ),
      m(2),
      y("ngIf", t.showClear && !t.disabled && t.value != null),
      m(),
      y("ngIf", t.showIcon && t.iconDisplay === "button"),
      m(),
      y("ngIf", t.iconDisplay === "input" && t.showIcon);
  }
}
function qP(n, i) {
  n & 1 && wn(0);
}
function KP(n, i) {
  n & 1 && U(0, "ChevronLeftIcon", 40),
    n & 2 && y("styleClass", "p-datepicker-prev-icon");
}
function QP(n, i) {}
function XP(n, i) {
  n & 1 && A(0, QP, 0, 0, "ng-template");
}
function ZP(n, i) {
  if ((n & 1 && (l(0, "span", 41), A(1, XP, 1, 0, null, 13), c()), n & 2)) {
    let e = x(5);
    m(), y("ngTemplateOutlet", e.previousIconTemplate);
  }
}
function JP(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 38),
      R("keydown", function (r) {
        O(e);
        let o = x(4);
        return k(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        O(e);
        let o = x(4);
        return k(o.onPrevButtonClick(r));
      }),
      A(1, KP, 1, 1, "ChevronLeftIcon", 35)(2, ZP, 2, 1, "span", 39),
      c();
  }
  if (n & 2) {
    let e = x(4);
    ce("aria-label", e.prevIconAriaLabel),
      m(),
      y("ngIf", !e.previousIconTemplate),
      m(),
      y("ngIf", e.previousIconTemplate);
  }
}
function eI(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 42),
      R("click", function (r) {
        O(e);
        let o = x(4);
        return k(o.switchToMonthView(r));
      })("keydown", function (r) {
        O(e);
        let o = x(4);
        return k(o.onContainerButtonKeydown(r));
      }),
      h(1),
      c();
  }
  if (n & 2) {
    let e = x().$implicit,
      t = x(3);
    y("disabled", t.switchViewButtonDisabled()),
      ce("aria-label", t.getTranslation("chooseMonth")),
      m(),
      Z(" ", t.getMonthName(e.month), " ");
  }
}
function tI(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 43),
      R("click", function (r) {
        O(e);
        let o = x(4);
        return k(o.switchToYearView(r));
      })("keydown", function (r) {
        O(e);
        let o = x(4);
        return k(o.onContainerButtonKeydown(r));
      }),
      h(1),
      c();
  }
  if (n & 2) {
    let e = x().$implicit,
      t = x(3);
    y("disabled", t.switchViewButtonDisabled()),
      ce("aria-label", t.getTranslation("chooseYear")),
      m(),
      Z(" ", t.getYear(e), " ");
  }
}
function iI(n, i) {
  if ((n & 1 && (Le(0), h(1), Ve()), n & 2)) {
    let e = x(5);
    m(),
      Gn(
        "",
        e.yearPickerValues()[0],
        " - ",
        e.yearPickerValues()[e.yearPickerValues().length - 1],
        ""
      );
  }
}
function nI(n, i) {
  n & 1 && wn(0);
}
function rI(n, i) {
  if (
    (n & 1 &&
      (l(0, "span", 44),
      A(1, iI, 2, 2, "ng-container", 7)(2, nI, 1, 0, "ng-container", 18),
      c()),
    n & 2)
  ) {
    let e = x(4);
    m(),
      y("ngIf", !e.decadeTemplate),
      m(),
      y("ngTemplateOutlet", e.decadeTemplate)(
        "ngTemplateOutletContext",
        de(3, Sf, e.yearPickerValues)
      );
  }
}
function oI(n, i) {
  n & 1 && U(0, "ChevronRightIcon", 40),
    n & 2 && y("styleClass", "p-datepicker-next-icon");
}
function aI(n, i) {}
function sI(n, i) {
  n & 1 && A(0, aI, 0, 0, "ng-template");
}
function lI(n, i) {
  if ((n & 1 && (l(0, "span", 45), A(1, sI, 1, 0, null, 13), c()), n & 2)) {
    let e = x(4);
    m(), y("ngTemplateOutlet", e.nextIconTemplate);
  }
}
function cI(n, i) {
  if ((n & 1 && (l(0, "th", 51)(1, "span"), h(2), c()()), n & 2)) {
    let e = x(5);
    m(2), B(e.getTranslation("weekHeader"));
  }
}
function dI(n, i) {
  if ((n & 1 && (l(0, "th", 52)(1, "span"), h(2), c()()), n & 2)) {
    let e = i.$implicit;
    m(2), B(e);
  }
}
function uI(n, i) {
  if ((n & 1 && (l(0, "td", 55)(1, "span", 56), h(2), c()()), n & 2)) {
    let e = x().index,
      t = x(2).$implicit;
    m(2), Z(" ", t.weekNumbers[e], " ");
  }
}
function hI(n, i) {
  if ((n & 1 && (Le(0), h(1), Ve()), n & 2)) {
    let e = x(2).$implicit;
    m(), B(e.day);
  }
}
function pI(n, i) {
  n & 1 && wn(0);
}
function mI(n, i) {
  if ((n & 1 && (Le(0), A(1, pI, 1, 0, "ng-container", 18), Ve()), n & 2)) {
    let e = x(2).$implicit,
      t = x(6);
    m(),
      y("ngTemplateOutlet", t.dateTemplate)(
        "ngTemplateOutletContext",
        de(2, Sf, e)
      );
  }
}
function fI(n, i) {
  n & 1 && wn(0);
}
function gI(n, i) {
  if ((n & 1 && (Le(0), A(1, fI, 1, 0, "ng-container", 18), Ve()), n & 2)) {
    let e = x(2).$implicit,
      t = x(6);
    m(),
      y("ngTemplateOutlet", t.disabledDateTemplate)(
        "ngTemplateOutletContext",
        de(2, Sf, e)
      );
  }
}
function _I(n, i) {
  if ((n & 1 && (l(0, "div", 59), h(1), c()), n & 2)) {
    let e = x(2).$implicit;
    m(), Z(" ", e.day, " ");
  }
}
function bI(n, i) {
  if (n & 1) {
    let e = oe();
    Le(0),
      l(1, "span", 57),
      R("click", function (r) {
        O(e);
        let o = x().$implicit,
          a = x(6);
        return k(a.onDateSelect(r, o));
      })("keydown", function (r) {
        O(e);
        let o = x().$implicit,
          a = x(3).index,
          d = x(3);
        return k(d.onDateCellKeydown(r, o, a));
      }),
      A(2, hI, 2, 1, "ng-container", 7)(3, mI, 2, 4, "ng-container", 7)(
        4,
        gI,
        2,
        4,
        "ng-container",
        7
      ),
      c(),
      A(5, _I, 2, 1, "div", 58),
      Ve();
  }
  if (n & 2) {
    let e = x().$implicit,
      t = x(6);
    m(),
      y("ngClass", Gi(6, IP, t.isSelected(e) && e.selectable, !e.selectable)),
      ce("data-date", t.formatDateKey(t.formatDateMetaToDate(e))),
      m(),
      y("ngIf", !t.dateTemplate && (e.selectable || !t.disabledDateTemplate)),
      m(),
      y("ngIf", e.selectable || !t.disabledDateTemplate),
      m(),
      y("ngIf", !e.selectable),
      m(),
      y("ngIf", t.isSelected(e));
  }
}
function vI(n, i) {
  if (
    (n & 1 && (l(0, "td", 16), A(1, bI, 6, 9, "ng-container", 7), c()), n & 2)
  ) {
    let e = i.$implicit,
      t = x(6);
    y("ngClass", Gi(3, PP, e.otherMonth, e.today)),
      ce("aria-label", e.day),
      m(),
      y("ngIf", e.otherMonth ? t.showOtherMonths : !0);
  }
}
function yI(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr"), A(1, uI, 3, 1, "td", 53)(2, vI, 2, 6, "td", 54), c()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(5);
    m(), y("ngIf", t.showWeek), m(), y("ngForOf", e);
  }
}
function xI(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 46)(1, "table", 47)(2, "thead")(3, "tr"),
      A(4, cI, 3, 1, "th", 48)(5, dI, 3, 1, "th", 49),
      c()(),
      l(6, "tbody"),
      A(7, yI, 3, 2, "tr", 50),
      c()()()),
    n & 2)
  ) {
    let e = x().$implicit,
      t = x(3);
    m(4),
      y("ngIf", t.showWeek),
      m(),
      y("ngForOf", t.weekDays),
      m(2),
      y("ngForOf", e.dates);
  }
}
function CI(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 27)(1, "div", 28),
      A(2, JP, 3, 3, "button", 29),
      l(3, "div", 30),
      A(4, eI, 2, 3, "button", 31)(5, tI, 2, 3, "button", 32)(
        6,
        rI,
        3,
        5,
        "span",
        33
      ),
      c(),
      l(7, "button", 34),
      R("keydown", function (r) {
        O(e);
        let o = x(3);
        return k(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        O(e);
        let o = x(3);
        return k(o.onNextButtonClick(r));
      }),
      A(8, oI, 1, 1, "ChevronRightIcon", 35)(9, lI, 2, 1, "span", 36),
      c()(),
      A(10, xI, 8, 3, "div", 37),
      c();
  }
  if (n & 2) {
    let e = i.index,
      t = x(3);
    m(2),
      y("ngIf", e === 0),
      m(2),
      y("ngIf", t.currentView === "date"),
      m(),
      y("ngIf", t.currentView !== "year"),
      m(),
      y("ngIf", t.currentView === "year"),
      m(),
      Lt(
        "display",
        t.numberOfMonths === 1 || e === t.numberOfMonths - 1
          ? "inline-flex"
          : "none"
      ),
      ce("aria-label", t.nextIconAriaLabel),
      m(),
      y("ngIf", !t.nextIconTemplate),
      m(),
      y("ngIf", t.nextIconTemplate),
      m(),
      y("ngIf", t.currentView === "date");
  }
}
function wI(n, i) {
  if ((n & 1 && (l(0, "div", 59), h(1), c()), n & 2)) {
    let e = x().$implicit;
    m(), Z(" ", e, " ");
  }
}
function SI(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "span", 62),
      R("click", function (r) {
        let o = O(e).index,
          a = x(4);
        return k(a.onMonthSelect(r, o));
      })("keydown", function (r) {
        let o = O(e).index,
          a = x(4);
        return k(a.onMonthCellKeydown(r, o));
      }),
      h(1),
      A(2, wI, 2, 1, "div", 58),
      c();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x(4);
    y("ngClass", Gi(3, my, r.isMonthSelected(t), r.isMonthDisabled(t))),
      m(),
      Z(" ", e, " "),
      m(),
      y("ngIf", r.isMonthSelected(t));
  }
}
function DI(n, i) {
  if ((n & 1 && (l(0, "div", 60), A(1, SI, 3, 6, "span", 61), c()), n & 2)) {
    let e = x(3);
    m(), y("ngForOf", e.monthPickerValues());
  }
}
function MI(n, i) {
  if ((n & 1 && (l(0, "div", 59), h(1), c()), n & 2)) {
    let e = x().$implicit;
    m(), Z(" ", e, " ");
  }
}
function TI(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "span", 65),
      R("click", function (r) {
        let o = O(e).$implicit,
          a = x(4);
        return k(a.onYearSelect(r, o));
      })("keydown", function (r) {
        let o = O(e).$implicit,
          a = x(4);
        return k(a.onYearCellKeydown(r, o));
      }),
      h(1),
      A(2, MI, 2, 1, "div", 58),
      c();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(4);
    y("ngClass", Gi(3, my, t.isYearSelected(e), t.isYearDisabled(e))),
      m(),
      Z(" ", e, " "),
      m(),
      y("ngIf", t.isYearSelected(e));
  }
}
function EI(n, i) {
  if ((n & 1 && (l(0, "div", 63), A(1, TI, 3, 6, "span", 64), c()), n & 2)) {
    let e = x(3);
    m(), y("ngForOf", e.yearPickerValues());
  }
}
function OI(n, i) {
  if (
    (n & 1 &&
      (Le(0),
      l(1, "div", 23),
      A(2, CI, 11, 10, "div", 24),
      c(),
      A(3, DI, 2, 1, "div", 25)(4, EI, 2, 1, "div", 26),
      Ve()),
    n & 2)
  ) {
    let e = x(2);
    m(2),
      y("ngForOf", e.months),
      m(),
      y("ngIf", e.currentView === "month"),
      m(),
      y("ngIf", e.currentView === "year");
  }
}
function kI(n, i) {
  n & 1 && U(0, "ChevronUpIcon");
}
function PI(n, i) {}
function II(n, i) {
  n & 1 && A(0, PI, 0, 0, "ng-template");
}
function AI(n, i) {
  n & 1 && (Le(0), h(1, "0"), Ve());
}
function RI(n, i) {
  n & 1 && U(0, "ChevronDownIcon");
}
function FI(n, i) {}
function NI(n, i) {
  n & 1 && A(0, FI, 0, 0, "ng-template");
}
function LI(n, i) {
  n & 1 && U(0, "ChevronUpIcon");
}
function VI(n, i) {}
function BI(n, i) {
  n & 1 && A(0, VI, 0, 0, "ng-template");
}
function jI(n, i) {
  n & 1 && (Le(0), h(1, "0"), Ve());
}
function HI(n, i) {
  n & 1 && U(0, "ChevronDownIcon");
}
function UI(n, i) {}
function zI(n, i) {
  n & 1 && A(0, UI, 0, 0, "ng-template");
}
function $I(n, i) {
  if ((n & 1 && (l(0, "div", 69)(1, "span"), h(2), c()()), n & 2)) {
    let e = x(3);
    m(2), B(e.timeSeparator);
  }
}
function WI(n, i) {
  n & 1 && U(0, "ChevronUpIcon");
}
function GI(n, i) {}
function YI(n, i) {
  n & 1 && A(0, GI, 0, 0, "ng-template");
}
function qI(n, i) {
  n & 1 && (Le(0), h(1, "0"), Ve());
}
function KI(n, i) {
  n & 1 && U(0, "ChevronDownIcon");
}
function QI(n, i) {}
function XI(n, i) {
  n & 1 && A(0, QI, 0, 0, "ng-template");
}
function ZI(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 74)(1, "button", 68),
      R("keydown", function (r) {
        O(e);
        let o = x(3);
        return k(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        O(e);
        let o = x(3);
        return k(o.incrementSecond(r));
      })("keydown.space", function (r) {
        O(e);
        let o = x(3);
        return k(o.incrementSecond(r));
      })("mousedown", function (r) {
        O(e);
        let o = x(3);
        return k(o.onTimePickerElementMouseDown(r, 2, 1));
      })("mouseup", function (r) {
        O(e);
        let o = x(3);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        O(e);
        let o = x(3);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        O(e);
        let o = x(3);
        return k(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        O(e);
        let r = x(3);
        return k(r.onTimePickerElementMouseLeave());
      }),
      A(2, WI, 1, 0, "ChevronUpIcon", 7)(3, YI, 1, 0, null, 13),
      c(),
      l(4, "span"),
      A(5, qI, 2, 0, "ng-container", 7),
      h(6),
      c(),
      l(7, "button", 68),
      R("keydown", function (r) {
        O(e);
        let o = x(3);
        return k(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        O(e);
        let o = x(3);
        return k(o.decrementSecond(r));
      })("keydown.space", function (r) {
        O(e);
        let o = x(3);
        return k(o.decrementSecond(r));
      })("mousedown", function (r) {
        O(e);
        let o = x(3);
        return k(o.onTimePickerElementMouseDown(r, 2, -1));
      })("mouseup", function (r) {
        O(e);
        let o = x(3);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        O(e);
        let o = x(3);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        O(e);
        let o = x(3);
        return k(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        O(e);
        let r = x(3);
        return k(r.onTimePickerElementMouseLeave());
      }),
      A(8, KI, 1, 0, "ChevronDownIcon", 7)(9, XI, 1, 0, null, 13),
      c()();
  }
  if (n & 2) {
    let e = x(3);
    m(),
      ce("aria-label", e.getTranslation("nextSecond")),
      m(),
      y("ngIf", !e.incrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      m(2),
      y("ngIf", e.currentSecond < 10),
      m(),
      B(e.currentSecond),
      m(),
      ce("aria-label", e.getTranslation("prevSecond")),
      m(),
      y("ngIf", !e.decrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function JI(n, i) {
  n & 1 && U(0, "ChevronUpIcon");
}
function eA(n, i) {}
function tA(n, i) {
  n & 1 && A(0, eA, 0, 0, "ng-template");
}
function iA(n, i) {
  n & 1 && U(0, "ChevronDownIcon");
}
function nA(n, i) {}
function rA(n, i) {
  n & 1 && A(0, nA, 0, 0, "ng-template");
}
function oA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 75)(1, "button", 76),
      R("keydown", function (r) {
        O(e);
        let o = x(3);
        return k(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        O(e);
        let o = x(3);
        return k(o.toggleAMPM(r));
      })("keydown.enter", function (r) {
        O(e);
        let o = x(3);
        return k(o.toggleAMPM(r));
      }),
      A(2, JI, 1, 0, "ChevronUpIcon", 7)(3, tA, 1, 0, null, 13),
      c(),
      l(4, "span"),
      h(5),
      c(),
      l(6, "button", 76),
      R("keydown", function (r) {
        O(e);
        let o = x(3);
        return k(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        O(e);
        let o = x(3);
        return k(o.toggleAMPM(r));
      })("keydown.enter", function (r) {
        O(e);
        let o = x(3);
        return k(o.toggleAMPM(r));
      }),
      A(7, iA, 1, 0, "ChevronDownIcon", 7)(8, rA, 1, 0, null, 13),
      c()();
  }
  if (n & 2) {
    let e = x(3);
    m(),
      ce("aria-label", e.getTranslation("am")),
      m(),
      y("ngIf", !e.incrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      m(2),
      B(e.pm ? "PM" : "AM"),
      m(),
      ce("aria-label", e.getTranslation("pm")),
      m(),
      y("ngIf", !e.decrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function aA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 66)(1, "div", 67)(2, "button", 68),
      R("keydown", function (r) {
        O(e);
        let o = x(2);
        return k(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        O(e);
        let o = x(2);
        return k(o.incrementHour(r));
      })("keydown.space", function (r) {
        O(e);
        let o = x(2);
        return k(o.incrementHour(r));
      })("mousedown", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseDown(r, 0, 1));
      })("mouseup", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        O(e);
        let r = x(2);
        return k(r.onTimePickerElementMouseLeave());
      }),
      A(3, kI, 1, 0, "ChevronUpIcon", 7)(4, II, 1, 0, null, 13),
      c(),
      l(5, "span"),
      A(6, AI, 2, 0, "ng-container", 7),
      h(7),
      c(),
      l(8, "button", 68),
      R("keydown", function (r) {
        O(e);
        let o = x(2);
        return k(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        O(e);
        let o = x(2);
        return k(o.decrementHour(r));
      })("keydown.space", function (r) {
        O(e);
        let o = x(2);
        return k(o.decrementHour(r));
      })("mousedown", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseDown(r, 0, -1));
      })("mouseup", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        O(e);
        let r = x(2);
        return k(r.onTimePickerElementMouseLeave());
      }),
      A(9, RI, 1, 0, "ChevronDownIcon", 7)(10, NI, 1, 0, null, 13),
      c()(),
      l(11, "div", 69)(12, "span"),
      h(13),
      c()(),
      l(14, "div", 70)(15, "button", 68),
      R("keydown", function (r) {
        O(e);
        let o = x(2);
        return k(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        O(e);
        let o = x(2);
        return k(o.incrementMinute(r));
      })("keydown.space", function (r) {
        O(e);
        let o = x(2);
        return k(o.incrementMinute(r));
      })("mousedown", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseDown(r, 1, 1));
      })("mouseup", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        O(e);
        let r = x(2);
        return k(r.onTimePickerElementMouseLeave());
      }),
      A(16, LI, 1, 0, "ChevronUpIcon", 7)(17, BI, 1, 0, null, 13),
      c(),
      l(18, "span"),
      A(19, jI, 2, 0, "ng-container", 7),
      h(20),
      c(),
      l(21, "button", 68),
      R("keydown", function (r) {
        O(e);
        let o = x(2);
        return k(o.onContainerButtonKeydown(r));
      })("keydown.enter", function (r) {
        O(e);
        let o = x(2);
        return k(o.decrementMinute(r));
      })("keydown.space", function (r) {
        O(e);
        let o = x(2);
        return k(o.decrementMinute(r));
      })("mousedown", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseDown(r, 1, -1));
      })("mouseup", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.enter", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("keyup.space", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTimePickerElementMouseUp(r));
      })("mouseleave", function () {
        O(e);
        let r = x(2);
        return k(r.onTimePickerElementMouseLeave());
      }),
      A(22, HI, 1, 0, "ChevronDownIcon", 7)(23, zI, 1, 0, null, 13),
      c()(),
      A(24, $I, 3, 1, "div", 71)(25, ZI, 10, 8, "div", 72)(
        26,
        oA,
        9,
        7,
        "div",
        73
      ),
      c();
  }
  if (n & 2) {
    let e = x(2);
    m(2),
      ce("aria-label", e.getTranslation("nextHour")),
      m(),
      y("ngIf", !e.incrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      m(2),
      y("ngIf", e.currentHour < 10),
      m(),
      B(e.currentHour),
      m(),
      ce("aria-label", e.getTranslation("prevHour")),
      m(),
      y("ngIf", !e.decrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.decrementIconTemplate),
      m(3),
      B(e.timeSeparator),
      m(2),
      ce("aria-label", e.getTranslation("nextMinute")),
      m(),
      y("ngIf", !e.incrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      m(2),
      y("ngIf", e.currentMinute < 10),
      m(),
      B(e.currentMinute),
      m(),
      ce("aria-label", e.getTranslation("prevMinute")),
      m(),
      y("ngIf", !e.decrementIconTemplate),
      m(),
      y("ngTemplateOutlet", e.decrementIconTemplate),
      m(),
      y("ngIf", e.showSeconds),
      m(),
      y("ngIf", e.showSeconds),
      m(),
      y("ngIf", e.hourFormat == "12");
  }
}
function sA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 77)(1, "button", 78),
      R("keydown", function (r) {
        O(e);
        let o = x(2);
        return k(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        O(e);
        let o = x(2);
        return k(o.onTodayButtonClick(r));
      }),
      c(),
      l(2, "button", 78),
      R("keydown", function (r) {
        O(e);
        let o = x(2);
        return k(o.onContainerButtonKeydown(r));
      })("click", function (r) {
        O(e);
        let o = x(2);
        return k(o.onClearButtonClick(r));
      }),
      c()();
  }
  if (n & 2) {
    let e = x(2);
    m(),
      y("label", e.getTranslation("today"))(
        "ngClass",
        de(4, py, e.todayButtonStyleClass)
      ),
      m(),
      y("label", e.getTranslation("clear"))(
        "ngClass",
        de(6, py, e.clearButtonStyleClass)
      );
  }
}
function lA(n, i) {
  n & 1 && wn(0);
}
function cA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 20, 2),
      R("@overlayAnimation.start", function (r) {
        O(e);
        let o = x();
        return k(o.onOverlayAnimationStart(r));
      })("@overlayAnimation.done", function (r) {
        O(e);
        let o = x();
        return k(o.onOverlayAnimationDone(r));
      })("click", function (r) {
        O(e);
        let o = x();
        return k(o.onOverlayClick(r));
      }),
      Vt(2),
      A(3, qP, 1, 0, "ng-container", 13)(4, OI, 5, 3, "ng-container", 7)(
        5,
        aA,
        27,
        20,
        "div",
        21
      )(6, sA, 3, 8, "div", 22),
      Vt(7, 1),
      A(8, lA, 1, 0, "ng-container", 13),
      c();
  }
  if (n & 2) {
    let e = x();
    He(e.panelStyleClass),
      y("ngStyle", e.panelStyle)(
        "ngClass",
        Vg(
          15,
          EP,
          e.inline,
          e.disabled,
          e.timeOnly,
          e.numberOfMonths > 1,
          e.view === "month",
          e.touchUI
        )
      )(
        "@overlayAnimation",
        e.touchUI
          ? de(
              25,
              OP,
              Gi(22, hy, e.showTransitionOptions, e.hideTransitionOptions)
            )
          : de(
              30,
              kP,
              Gi(27, hy, e.showTransitionOptions, e.hideTransitionOptions)
            )
      )("@.disabled", e.inline === !0),
      ce("id", e.panelId)("aria-label", e.getTranslation("chooseDate"))(
        "role",
        e.inline ? null : "dialog"
      )("aria-modal", e.inline ? null : "true"),
      m(3),
      y("ngTemplateOutlet", e.headerTemplate),
      m(),
      y("ngIf", !e.timeOnly),
      m(),
      y("ngIf", (e.showTime || e.timeOnly) && e.currentView === "date"),
      m(),
      y("ngIf", e.showButtonBar),
      m(2),
      y("ngTemplateOutlet", e.footerTemplate);
  }
}
var dA = { provide: go, useExisting: wi(() => uA), multi: !0 },
  uA = (() => {
    class n {
      document;
      el;
      renderer;
      cd;
      zone;
      config;
      overlayService;
      iconDisplay = "button";
      style;
      styleClass;
      inputStyle;
      inputId;
      name;
      inputStyleClass;
      placeholder;
      ariaLabelledBy;
      ariaLabel;
      iconAriaLabel;
      disabled;
      dateFormat;
      multipleSeparator = ",";
      rangeSeparator = "-";
      inline = !1;
      showOtherMonths = !0;
      selectOtherMonths;
      showIcon;
      icon;
      appendTo;
      readonlyInput;
      shortYearCutoff = "+10";
      monthNavigator;
      yearNavigator;
      hourFormat = "24";
      timeOnly;
      stepYearPicker = 10;
      stepHour = 1;
      stepMinute = 1;
      stepSecond = 1;
      showSeconds = !1;
      required;
      showOnFocus = !0;
      showWeek = !1;
      startWeekFromFirstDayOfYear = !1;
      showClear = !1;
      dataType = "date";
      selectionMode = "single";
      maxDateCount;
      showButtonBar;
      todayButtonStyleClass = "p-button-text";
      clearButtonStyleClass = "p-button-text";
      autofocus;
      autoZIndex = !0;
      baseZIndex = 0;
      panelStyleClass;
      panelStyle;
      keepInvalid = !1;
      hideOnDateTimeSelect = !0;
      touchUI;
      timeSeparator = ":";
      focusTrap = !0;
      showTransitionOptions = ".12s cubic-bezier(0, 0, 0.2, 1)";
      hideTransitionOptions = ".1s linear";
      tabindex;
      variant = "outlined";
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        (this._minDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        (this._maxDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDates() {
        return this._disabledDates;
      }
      set disabledDates(e) {
        (this._disabledDates = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDays() {
        return this._disabledDays;
      }
      set disabledDays(e) {
        (this._disabledDays = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get yearRange() {
        return this._yearRange;
      }
      set yearRange(e) {
        if (((this._yearRange = e), e)) {
          let t = e.split(":"),
            r = parseInt(t[0]),
            o = parseInt(t[1]);
          this.populateYearOptions(r, o);
        }
      }
      get showTime() {
        return this._showTime;
      }
      set showTime(e) {
        (this._showTime = e),
          this.currentHour === void 0 &&
            this.initTime(this.value || new Date()),
          this.updateInputfield();
      }
      get responsiveOptions() {
        return this._responsiveOptions;
      }
      set responsiveOptions(e) {
        (this._responsiveOptions = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get numberOfMonths() {
        return this._numberOfMonths;
      }
      set numberOfMonths(e) {
        (this._numberOfMonths = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get firstDayOfWeek() {
        return this._firstDayOfWeek;
      }
      set firstDayOfWeek(e) {
        (this._firstDayOfWeek = e), this.createWeekDays();
      }
      set locale(e) {
        console.warn(
          "Locale property has no effect, use new i18n API instead."
        );
      }
      get view() {
        return this._view;
      }
      set view(e) {
        (this._view = e), (this.currentView = this._view);
      }
      get defaultDate() {
        return this._defaultDate;
      }
      set defaultDate(e) {
        if (((this._defaultDate = e), this.initialized)) {
          let t = e || new Date();
          (this.currentMonth = t.getMonth()),
            (this.currentYear = t.getFullYear()),
            this.initTime(t),
            this.createMonths(this.currentMonth, this.currentYear);
        }
      }
      get inputClass() {
        return {
          "p-inputtext p-component": !0,
          "p-variant-filled":
            this.variant === "filled" || this.config.inputStyle() === "filled",
        };
      }
      onFocus = new xe();
      onBlur = new xe();
      onClose = new xe();
      onSelect = new xe();
      onClear = new xe();
      onInput = new xe();
      onTodayClick = new xe();
      onClearClick = new xe();
      onMonthChange = new xe();
      onYearChange = new xe();
      onClickOutside = new xe();
      onShow = new xe();
      templates;
      containerViewChild;
      inputfieldViewChild;
      set content(e) {
        (this.contentViewChild = e),
          this.contentViewChild &&
            (this.isMonthNavigate
              ? (Promise.resolve(null).then(() => this.updateFocus()),
                (this.isMonthNavigate = !1))
              : !this.focus && !this.inline && this.initFocusableCell());
      }
      contentViewChild;
      value;
      dates;
      months;
      weekDays;
      currentMonth;
      currentYear;
      currentHour;
      currentMinute;
      currentSecond;
      pm;
      mask;
      maskClickListener;
      overlay;
      responsiveStyleElement;
      overlayVisible;
      onModelChange = () => {};
      onModelTouched = () => {};
      calendarElement;
      timePickerTimer;
      documentClickListener;
      animationEndListener;
      ticksTo1970;
      yearOptions;
      focus;
      isKeydown;
      filled;
      inputFieldValue = null;
      _minDate;
      _maxDate;
      _showTime;
      _yearRange;
      preventDocumentListener;
      dateTemplate;
      headerTemplate;
      footerTemplate;
      disabledDateTemplate;
      decadeTemplate;
      previousIconTemplate;
      nextIconTemplate;
      triggerIconTemplate;
      clearIconTemplate;
      decrementIconTemplate;
      incrementIconTemplate;
      inputIconTemplate;
      _disabledDates;
      _disabledDays;
      selectElement;
      todayElement;
      focusElement;
      scrollHandler;
      documentResizeListener;
      navigationState = null;
      isMonthNavigate;
      initialized;
      translationSubscription;
      _locale;
      _responsiveOptions;
      currentView;
      attributeSelector;
      panelId;
      _numberOfMonths = 1;
      _firstDayOfWeek;
      _view = "date";
      preventFocus;
      _defaultDate;
      _focusKey = null;
      window;
      get locale() {
        return this._locale;
      }
      get iconButtonAriaLabel() {
        return this.iconAriaLabel
          ? this.iconAriaLabel
          : this.getTranslation("chooseDate");
      }
      get prevIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("prevDecade")
          : this.currentView === "month"
          ? this.getTranslation("prevYear")
          : this.getTranslation("prevMonth");
      }
      get nextIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("nextDecade")
          : this.currentView === "month"
          ? this.getTranslation("nextYear")
          : this.getTranslation("nextMonth");
      }
      constructor(e, t, r, o, a, d, u) {
        (this.document = e),
          (this.el = t),
          (this.renderer = r),
          (this.cd = o),
          (this.zone = a),
          (this.config = d),
          (this.overlayService = u),
          (this.window = this.document.defaultView);
      }
      ngOnInit() {
        (this.attributeSelector = Aa()),
          (this.panelId = this.attributeSelector + "_panel");
        let e = this.defaultDate || new Date();
        this.createResponsiveStyle(),
          (this.currentMonth = e.getMonth()),
          (this.currentYear = e.getFullYear()),
          (this.yearOptions = []),
          (this.currentView = this.view),
          this.view === "date" &&
            (this.createWeekDays(),
            this.initTime(e),
            this.createMonths(this.currentMonth, this.currentYear),
            (this.ticksTo1970 =
              (1969 * 365 +
                Math.floor(1970 / 4) -
                Math.floor(1970 / 100) +
                Math.floor(1970 / 400)) *
              24 *
              60 *
              60 *
              1e7)),
          (this.translationSubscription =
            this.config.translationObserver.subscribe(() => {
              this.createWeekDays(), this.cd.markForCheck();
            })),
          (this.initialized = !0);
      }
      ngAfterContentInit() {
        this.templates.forEach((e) => {
          switch (e.getType()) {
            case "date":
              this.dateTemplate = e.template;
              break;
            case "decade":
              this.decadeTemplate = e.template;
              break;
            case "disabledDate":
              this.disabledDateTemplate = e.template;
              break;
            case "header":
              this.headerTemplate = e.template;
              break;
            case "inputicon":
              this.inputIconTemplate = e.template;
              break;
            case "previousicon":
              this.previousIconTemplate = e.template;
              break;
            case "nexticon":
              this.nextIconTemplate = e.template;
              break;
            case "triggericon":
              this.triggerIconTemplate = e.template;
              break;
            case "clearicon":
              this.clearIconTemplate = e.template;
              break;
            case "decrementicon":
              this.decrementIconTemplate = e.template;
              break;
            case "incrementicon":
              this.incrementIconTemplate = e.template;
              break;
            case "footer":
              this.footerTemplate = e.template;
              break;
            default:
              this.dateTemplate = e.template;
              break;
          }
        });
      }
      ngAfterViewInit() {
        this.inline &&
          (this.contentViewChild &&
            this.contentViewChild.nativeElement.setAttribute(
              this.attributeSelector,
              ""
            ),
          !this.disabled &&
            !this.inline &&
            (this.initFocusableCell(),
            this.numberOfMonths === 1 &&
              this.contentViewChild &&
              this.contentViewChild.nativeElement &&
              (this.contentViewChild.nativeElement.style.width =
                me.getOuterWidth(this.containerViewChild?.nativeElement) +
                "px")));
      }
      getTranslation(e) {
        return this.config.getTranslation(e);
      }
      populateYearOptions(e, t) {
        this.yearOptions = [];
        for (let r = e; r <= t; r++) this.yearOptions.push(r);
      }
      createWeekDays() {
        this.weekDays = [];
        let e = this.getFirstDateOfWeek(),
          t = this.getTranslation(kn.DAY_NAMES_MIN);
        for (let r = 0; r < 7; r++)
          this.weekDays.push(t[e]), (e = e == 6 ? 0 : ++e);
      }
      monthPickerValues() {
        let e = [];
        for (let t = 0; t <= 11; t++)
          e.push(this.config.getTranslation("monthNamesShort")[t]);
        return e;
      }
      yearPickerValues() {
        let e = [],
          t = this.currentYear - (this.currentYear % this.stepYearPicker);
        for (let r = 0; r < this.stepYearPicker; r++) e.push(t + r);
        return e;
      }
      createMonths(e, t) {
        this.months = this.months = [];
        for (let r = 0; r < this.numberOfMonths; r++) {
          let o = e + r,
            a = t;
          o > 11 && ((o = (o % 11) - 1), (a = t + 1)),
            this.months.push(this.createMonth(o, a));
        }
      }
      getWeekNumber(e) {
        let t = new Date(e.getTime());
        if (this.startWeekFromFirstDayOfYear) {
          let o = +this.getFirstDateOfWeek();
          t.setDate(t.getDate() + 6 + o - t.getDay());
        } else t.setDate(t.getDate() + 4 - (t.getDay() || 7));
        let r = t.getTime();
        return (
          t.setMonth(0),
          t.setDate(1),
          Math.floor(Math.round((r - t.getTime()) / 864e5) / 7) + 1
        );
      }
      createMonth(e, t) {
        let r = [],
          o = this.getFirstDayOfMonthIndex(e, t),
          a = this.getDaysCountInMonth(e, t),
          d = this.getDaysCountInPrevMonth(e, t),
          u = 1,
          f = new Date(),
          v = [],
          S = Math.ceil((a + o) / 7);
        for (let T = 0; T < S; T++) {
          let M = [];
          if (T == 0) {
            for (let L = d - o + 1; L <= d; L++) {
              let E = this.getPreviousMonthAndYear(e, t);
              M.push({
                day: L,
                month: E.month,
                year: E.year,
                otherMonth: !0,
                today: this.isToday(f, L, E.month, E.year),
                selectable: this.isSelectable(L, E.month, E.year, !0),
              });
            }
            let I = 7 - M.length;
            for (let L = 0; L < I; L++)
              M.push({
                day: u,
                month: e,
                year: t,
                today: this.isToday(f, u, e, t),
                selectable: this.isSelectable(u, e, t, !1),
              }),
                u++;
          } else
            for (let I = 0; I < 7; I++) {
              if (u > a) {
                let L = this.getNextMonthAndYear(e, t);
                M.push({
                  day: u - a,
                  month: L.month,
                  year: L.year,
                  otherMonth: !0,
                  today: this.isToday(f, u - a, L.month, L.year),
                  selectable: this.isSelectable(u - a, L.month, L.year, !0),
                });
              } else
                M.push({
                  day: u,
                  month: e,
                  year: t,
                  today: this.isToday(f, u, e, t),
                  selectable: this.isSelectable(u, e, t, !1),
                });
              u++;
            }
          this.showWeek &&
            v.push(
              this.getWeekNumber(new Date(M[0].year, M[0].month, M[0].day))
            ),
            r.push(M);
        }
        return { month: e, year: t, dates: r, weekNumbers: v };
      }
      initTime(e) {
        (this.pm = e.getHours() > 11),
          this.showTime
            ? ((this.currentMinute = e.getMinutes()),
              (this.currentSecond = e.getSeconds()),
              this.setCurrentHourPM(e.getHours()))
            : this.timeOnly &&
              ((this.currentMinute = 0),
              (this.currentHour = 0),
              (this.currentSecond = 0));
      }
      navBackward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.decrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.decrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 0
                ? ((this.currentMonth = 11), this.decrementYear())
                : this.currentMonth--,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      navForward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.incrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.incrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 11
                ? ((this.currentMonth = 0), this.incrementYear())
                : this.currentMonth++,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      decrementYear() {
        this.currentYear--;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear < e[0]) {
          let t = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] - t, e[e.length - 1] - t);
        }
      }
      decrementYearPickerStep() {
        this.currentYear = this.currentYear - this.stepYearPicker;
      }
      incrementYearPickerStep() {
        this.currentYear = this.currentYear + this.stepYearPicker;
      }
      incrementYear() {
        this.currentYear++;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear > e[e.length - 1]) {
          let t = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] + t, e[e.length - 1] + t);
        }
      }
      switchToMonthView(e) {
        this.setCurrentView("month"), e.preventDefault();
      }
      switchToYearView(e) {
        this.setCurrentView("year"), e.preventDefault();
      }
      onDateSelect(e, t) {
        if (this.disabled || !t.selectable) {
          e.preventDefault();
          return;
        }
        this.isMultipleSelection() && this.isSelected(t)
          ? ((this.value = this.value.filter(
              (r, o) => !this.isDateEquals(r, t)
            )),
            this.value.length === 0 && (this.value = null),
            this.updateModel(this.value))
          : this.shouldSelectDate(t) && this.selectDate(t),
          this.hideOnDateTimeSelect &&
            (this.isSingleSelection() ||
              (this.isRangeSelection() && this.value[1])) &&
            setTimeout(() => {
              e.preventDefault(),
                this.hideOverlay(),
                this.mask && this.disableModality(),
                this.cd.markForCheck();
            }, 150),
          this.updateInputfield(),
          e.preventDefault();
      }
      shouldSelectDate(e) {
        return this.isMultipleSelection() && this.maxDateCount != null
          ? this.maxDateCount > (this.value ? this.value.length : 0)
          : !0;
      }
      onMonthSelect(e, t) {
        this.view === "month"
          ? this.onDateSelect(e, {
              year: this.currentYear,
              month: t,
              day: 1,
              selectable: !0,
            })
          : ((this.currentMonth = t),
            this.createMonths(this.currentMonth, this.currentYear),
            this.setCurrentView("date"),
            this.onMonthChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      onYearSelect(e, t) {
        this.view === "year"
          ? this.onDateSelect(e, { year: t, month: 0, day: 1, selectable: !0 })
          : ((this.currentYear = t),
            this.setCurrentView("month"),
            this.onYearChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      updateInputfield() {
        let e = "";
        if (this.value) {
          if (this.isSingleSelection()) e = this.formatDateTime(this.value);
          else if (this.isMultipleSelection())
            for (let t = 0; t < this.value.length; t++) {
              let r = this.formatDateTime(this.value[t]);
              (e += r),
                t !== this.value.length - 1 &&
                  (e += this.multipleSeparator + " ");
            }
          else if (this.isRangeSelection() && this.value && this.value.length) {
            let t = this.value[0],
              r = this.value[1];
            (e = this.formatDateTime(t)),
              r &&
                (e += " " + this.rangeSeparator + " " + this.formatDateTime(r));
          }
        }
        (this.inputFieldValue = e),
          this.updateFilledState(),
          this.inputfieldViewChild &&
            this.inputfieldViewChild.nativeElement &&
            (this.inputfieldViewChild.nativeElement.value =
              this.inputFieldValue);
      }
      formatDateTime(e) {
        let t = this.keepInvalid ? e : null,
          r = this.isValidDateForTimeConstraints(e);
        return (
          this.isValidDate(e)
            ? this.timeOnly
              ? (t = this.formatTime(e))
              : ((t = this.formatDate(e, this.getDateFormat())),
                this.showTime && (t += " " + this.formatTime(e)))
            : this.dataType === "string" && (t = e),
          (t = r ? t : ""),
          t
        );
      }
      formatDateMetaToDate(e) {
        return new Date(e.year, e.month, e.day);
      }
      formatDateKey(e) {
        return `${e.getFullYear()}-${e.getMonth() + 1}-${e.getDate()}`;
      }
      setCurrentHourPM(e) {
        this.hourFormat == "12"
          ? ((this.pm = e > 11),
            e >= 12
              ? (this.currentHour = e == 12 ? 12 : e - 12)
              : (this.currentHour = e == 0 ? 12 : e))
          : (this.currentHour = e);
      }
      setCurrentView(e) {
        (this.currentView = e), this.cd.detectChanges(), this.alignOverlay();
      }
      selectDate(e) {
        let t = this.formatDateMetaToDate(e);
        if (
          (this.showTime &&
            (this.hourFormat == "12"
              ? this.currentHour === 12
                ? t.setHours(this.pm ? 12 : 0)
                : t.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
              : t.setHours(this.currentHour),
            t.setMinutes(this.currentMinute),
            t.setSeconds(this.currentSecond)),
          this.minDate &&
            this.minDate > t &&
            ((t = this.minDate),
            this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds())),
          this.maxDate &&
            this.maxDate < t &&
            ((t = this.maxDate),
            this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds())),
          this.isSingleSelection())
        )
          this.updateModel(t);
        else if (this.isMultipleSelection())
          this.updateModel(this.value ? [...this.value, t] : [t]);
        else if (this.isRangeSelection())
          if (this.value && this.value.length) {
            let r = this.value[0],
              o = this.value[1];
            !o && t.getTime() >= r.getTime() ? (o = t) : ((r = t), (o = null)),
              this.updateModel([r, o]);
          } else this.updateModel([t, null]);
        this.onSelect.emit(t);
      }
      updateModel(e) {
        if (((this.value = e), this.dataType == "date"))
          this.onModelChange(this.value);
        else if (this.dataType == "string")
          if (this.isSingleSelection())
            this.onModelChange(this.formatDateTime(this.value));
          else {
            let t = null;
            Array.isArray(this.value) &&
              (t = this.value.map((r) => this.formatDateTime(r))),
              this.onModelChange(t);
          }
      }
      getFirstDayOfMonthIndex(e, t) {
        let r = new Date();
        r.setDate(1), r.setMonth(e), r.setFullYear(t);
        let o = r.getDay() + this.getSundayIndex();
        return o >= 7 ? o - 7 : o;
      }
      getDaysCountInMonth(e, t) {
        return 32 - this.daylightSavingAdjust(new Date(t, e, 32)).getDate();
      }
      getDaysCountInPrevMonth(e, t) {
        let r = this.getPreviousMonthAndYear(e, t);
        return this.getDaysCountInMonth(r.month, r.year);
      }
      getPreviousMonthAndYear(e, t) {
        let r, o;
        return (
          e === 0 ? ((r = 11), (o = t - 1)) : ((r = e - 1), (o = t)),
          { month: r, year: o }
        );
      }
      getNextMonthAndYear(e, t) {
        let r, o;
        return (
          e === 11 ? ((r = 0), (o = t + 1)) : ((r = e + 1), (o = t)),
          { month: r, year: o }
        );
      }
      getSundayIndex() {
        let e = this.getFirstDateOfWeek();
        return e > 0 ? 7 - e : 0;
      }
      isSelected(e) {
        if (this.value) {
          if (this.isSingleSelection()) return this.isDateEquals(this.value, e);
          if (this.isMultipleSelection()) {
            let t = !1;
            for (let r of this.value)
              if (((t = this.isDateEquals(r, e)), t)) break;
            return t;
          } else if (this.isRangeSelection())
            return this.value[1]
              ? this.isDateEquals(this.value[0], e) ||
                  this.isDateEquals(this.value[1], e) ||
                  this.isDateBetween(this.value[0], this.value[1], e)
              : this.isDateEquals(this.value[0], e);
        } else return !1;
      }
      isComparable() {
        return this.value != null && typeof this.value != "string";
      }
      isMonthSelected(e) {
        if (this.isComparable() && !this.isMultipleSelection()) {
          let [t, r] = this.isRangeSelection()
              ? this.value
              : [this.value, this.value],
            o = new Date(this.currentYear, e, 1);
          return o >= t && o <= (r ?? t);
        }
        return !1;
      }
      isMonthDisabled(e, t) {
        let r = t ?? this.currentYear;
        for (let o = 1; o < this.getDaysCountInMonth(e, r) + 1; o++)
          if (this.isSelectable(o, e, r, !1)) return !1;
        return !0;
      }
      isYearDisabled(e) {
        return Array(12)
          .fill(0)
          .every((t, r) => this.isMonthDisabled(r, e));
      }
      isYearSelected(e) {
        if (!this.isComparable() || this.isMultipleSelection()) return !1;
        let t = this.isRangeSelection() ? this.value[0] : this.value;
        return t ? t.getFullYear() === e : !1;
      }
      isDateEquals(e, t) {
        return e && tn.isDate(e)
          ? e.getDate() === t.day &&
              e.getMonth() === t.month &&
              e.getFullYear() === t.year
          : !1;
      }
      isDateBetween(e, t, r) {
        let o = !1;
        if (tn.isDate(e) && tn.isDate(t)) {
          let a = this.formatDateMetaToDate(r);
          return e.getTime() <= a.getTime() && t.getTime() >= a.getTime();
        }
        return o;
      }
      isSingleSelection() {
        return this.selectionMode === "single";
      }
      isRangeSelection() {
        return this.selectionMode === "range";
      }
      isMultipleSelection() {
        return this.selectionMode === "multiple";
      }
      isToday(e, t, r, o) {
        return e.getDate() === t && e.getMonth() === r && e.getFullYear() === o;
      }
      isSelectable(e, t, r, o) {
        let a = !0,
          d = !0,
          u = !0,
          f = !0;
        return o && !this.selectOtherMonths
          ? !1
          : (this.minDate &&
              (this.minDate.getFullYear() > r ||
                (this.minDate.getFullYear() === r &&
                  this.currentView != "year" &&
                  (this.minDate.getMonth() > t ||
                    (this.minDate.getMonth() === t &&
                      this.minDate.getDate() > e)))) &&
              (a = !1),
            this.maxDate &&
              (this.maxDate.getFullYear() < r ||
                (this.maxDate.getFullYear() === r &&
                  (this.maxDate.getMonth() < t ||
                    (this.maxDate.getMonth() === t &&
                      this.maxDate.getDate() < e)))) &&
              (d = !1),
            this.disabledDates && (u = !this.isDateDisabled(e, t, r)),
            this.disabledDays && (f = !this.isDayDisabled(e, t, r)),
            a && d && u && f);
      }
      isDateDisabled(e, t, r) {
        if (this.disabledDates) {
          for (let o of this.disabledDates)
            if (
              o.getFullYear() === r &&
              o.getMonth() === t &&
              o.getDate() === e
            )
              return !0;
        }
        return !1;
      }
      isDayDisabled(e, t, r) {
        if (this.disabledDays) {
          let a = new Date(r, t, e).getDay();
          return this.disabledDays.indexOf(a) !== -1;
        }
        return !1;
      }
      onInputFocus(e) {
        (this.focus = !0),
          this.showOnFocus && this.showOverlay(),
          this.onFocus.emit(e);
      }
      onInputClick() {
        this.showOnFocus && !this.overlayVisible && this.showOverlay();
      }
      onInputBlur(e) {
        (this.focus = !1),
          this.onBlur.emit(e),
          this.keepInvalid || this.updateInputfield(),
          this.onModelTouched();
      }
      onButtonClick(e, t = this.inputfieldViewChild?.nativeElement) {
        this.overlayVisible
          ? this.hideOverlay()
          : (t.focus(), this.showOverlay());
      }
      clear() {
        (this.inputFieldValue = null),
          (this.value = null),
          this.onModelChange(this.value),
          this.onClear.emit();
      }
      onOverlayClick(e) {
        this.overlayService.add({
          originalEvent: e,
          target: this.el.nativeElement,
        });
      }
      getMonthName(e) {
        return this.config.getTranslation("monthNames")[e];
      }
      getYear(e) {
        return this.currentView === "month" ? this.currentYear : e.year;
      }
      switchViewButtonDisabled() {
        return this.numberOfMonths > 1 || this.disabled;
      }
      onPrevButtonClick(e) {
        (this.navigationState = { backward: !0, button: !0 }),
          this.navBackward(e);
      }
      onNextButtonClick(e) {
        (this.navigationState = { backward: !1, button: !0 }),
          this.navForward(e);
      }
      onContainerButtonKeydown(e) {
        switch (e.which) {
          case 9:
            if ((this.inline || this.trapFocus(e), this.inline)) {
              let t = me.findSingle(
                  this.containerViewChild?.nativeElement,
                  ".p-datepicker-header"
                ),
                r = e.target;
              if (this.timeOnly) return;
              r == t.children[t?.children?.length - 1] &&
                this.initFocusableCell();
            }
            break;
          case 27:
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          default:
            break;
        }
      }
      onInputKeydown(e) {
        (this.isKeydown = !0),
          e.keyCode === 40 && this.contentViewChild
            ? this.trapFocus(e)
            : e.keyCode === 27
            ? this.overlayVisible &&
              (this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault())
            : e.keyCode === 13
            ? this.overlayVisible &&
              ((this.overlayVisible = !1), e.preventDefault())
            : e.keyCode === 9 &&
              this.contentViewChild &&
              (me
                .getFocusableElements(this.contentViewChild.nativeElement)
                .forEach((t) => (t.tabIndex = "-1")),
              this.overlayVisible && (this.overlayVisible = !1));
      }
      onDateCellKeydown(e, t, r) {
        let o = e.currentTarget,
          a = o.parentElement,
          d = this.formatDateMetaToDate(t);
        switch (e.which) {
          case 40: {
            o.tabIndex = "-1";
            let I = me.index(a),
              L = a.parentElement.nextElementSibling;
            if (L) {
              let E = L.children[I].children[0];
              me.hasClass(E, "p-disabled")
                ? ((this.navigationState = { backward: !1 }),
                  this.navForward(e))
                : ((L.children[I].children[0].tabIndex = "0"),
                  L.children[I].children[0].focus());
            } else
              (this.navigationState = { backward: !1 }), this.navForward(e);
            e.preventDefault();
            break;
          }
          case 38: {
            o.tabIndex = "-1";
            let I = me.index(a),
              L = a.parentElement.previousElementSibling;
            if (L) {
              let E = L.children[I].children[0];
              me.hasClass(E, "p-disabled")
                ? ((this.navigationState = { backward: !0 }),
                  this.navBackward(e))
                : ((E.tabIndex = "0"), E.focus());
            } else
              (this.navigationState = { backward: !0 }), this.navBackward(e);
            e.preventDefault();
            break;
          }
          case 37: {
            o.tabIndex = "-1";
            let I = a.previousElementSibling;
            if (I) {
              let L = I.children[0];
              me.hasClass(L, "p-disabled") ||
              me.hasClass(L.parentElement, "p-datepicker-weeknumber")
                ? this.navigateToMonth(!0, r)
                : ((L.tabIndex = "0"), L.focus());
            } else this.navigateToMonth(!0, r);
            e.preventDefault();
            break;
          }
          case 39: {
            o.tabIndex = "-1";
            let I = a.nextElementSibling;
            if (I) {
              let L = I.children[0];
              me.hasClass(L, "p-disabled")
                ? this.navigateToMonth(!1, r)
                : ((L.tabIndex = "0"), L.focus());
            } else this.navigateToMonth(!1, r);
            e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onDateSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          case 33: {
            o.tabIndex = "-1";
            let I = new Date(d.getFullYear(), d.getMonth() - 1, d.getDate()),
              L = this.formatDateKey(I);
            this.navigateToMonth(
              !0,
              r,
              `span[data-date='${L}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 34: {
            o.tabIndex = "-1";
            let I = new Date(d.getFullYear(), d.getMonth() + 1, d.getDate()),
              L = this.formatDateKey(I);
            this.navigateToMonth(
              !1,
              r,
              `span[data-date='${L}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 36:
            o.tabIndex = "-1";
            let u = new Date(d.getFullYear(), d.getMonth(), 1),
              f = this.formatDateKey(u),
              v = me.findSingle(
                o.offsetParent,
                `span[data-date='${f}']:not(.p-disabled):not(.p-ink)`
              );
            v && ((v.tabIndex = "0"), v.focus()), e.preventDefault();
            break;
          case 35:
            o.tabIndex = "-1";
            let S = new Date(d.getFullYear(), d.getMonth() + 1, 0),
              T = this.formatDateKey(S),
              M = me.findSingle(
                o.offsetParent,
                `span[data-date='${T}']:not(.p-disabled):not(.p-ink)`
              );
            S && ((M.tabIndex = "0"), M.focus()), e.preventDefault();
            break;
          default:
            break;
        }
      }
      onMonthCellKeydown(e, t) {
        let r = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            r.tabIndex = "-1";
            var o = r.parentElement.children,
              a = me.index(r);
            let d = o[e.which === 40 ? a + 3 : a - 3];
            d && ((d.tabIndex = "0"), d.focus()), e.preventDefault();
            break;
          }
          case 37: {
            r.tabIndex = "-1";
            let d = r.previousElementSibling;
            d
              ? ((d.tabIndex = "0"), d.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            r.tabIndex = "-1";
            let d = r.nextElementSibling;
            d
              ? ((d.tabIndex = "0"), d.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onMonthSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      onYearCellKeydown(e, t) {
        let r = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            r.tabIndex = "-1";
            var o = r.parentElement.children,
              a = me.index(r);
            let d = o[e.which === 40 ? a + 2 : a - 2];
            d && ((d.tabIndex = "0"), d.focus()), e.preventDefault();
            break;
          }
          case 37: {
            r.tabIndex = "-1";
            let d = r.previousElementSibling;
            d
              ? ((d.tabIndex = "0"), d.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            r.tabIndex = "-1";
            let d = r.nextElementSibling;
            d
              ? ((d.tabIndex = "0"), d.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onYearSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      navigateToMonth(e, t, r) {
        if (e)
          if (this.numberOfMonths === 1 || t === 0)
            (this.navigationState = { backward: !0 }),
              (this._focusKey = r),
              this.navBackward(event);
          else {
            let o = this.contentViewChild.nativeElement.children[t - 1];
            if (r) {
              let a = me.findSingle(o, r);
              (a.tabIndex = "0"), a.focus();
            } else {
              let a = me.find(
                  o,
                  ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                ),
                d = a[a.length - 1];
              (d.tabIndex = "0"), d.focus();
            }
          }
        else if (this.numberOfMonths === 1 || t === this.numberOfMonths - 1)
          (this.navigationState = { backward: !1 }),
            (this._focusKey = r),
            this.navForward(event);
        else {
          let o = this.contentViewChild.nativeElement.children[t + 1];
          if (r) {
            let a = me.findSingle(o, r);
            (a.tabIndex = "0"), a.focus();
          } else {
            let a = me.findSingle(
              o,
              ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
            );
            (a.tabIndex = "0"), a.focus();
          }
        }
      }
      updateFocus() {
        let e;
        if (this.navigationState) {
          if (this.navigationState.button)
            this.initFocusableCell(),
              this.navigationState.backward
                ? me
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-prev"
                    )
                    .focus()
                : me
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-next"
                    )
                    .focus();
          else {
            if (this.navigationState.backward) {
              let t;
              this.currentView === "month"
                ? (t = me.find(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (t = me.find(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (t = me.find(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  )),
                t && t.length > 0 && (e = t[t.length - 1]);
            } else
              this.currentView === "month"
                ? (e = me.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (e = me.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (e = me.findSingle(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  ));
            e && ((e.tabIndex = "0"), e.focus());
          }
          (this.navigationState = null), (this._focusKey = null);
        } else this.initFocusableCell();
        this.alignOverlay();
      }
      initFocusableCell() {
        let e = this.contentViewChild?.nativeElement,
          t;
        if (this.currentView === "month") {
          let r = me.find(
              e,
              ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
            ),
            o = me.findSingle(
              e,
              ".p-monthpicker .p-monthpicker-month.p-highlight"
            );
          r.forEach((a) => (a.tabIndex = -1)),
            (t = o || r[0]),
            r.length === 0 &&
              me
                .find(
                  e,
                  '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = "0"]'
                )
                .forEach((d) => (d.tabIndex = -1));
        } else if (this.currentView === "year") {
          let r = me.find(
              e,
              ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
            ),
            o = me.findSingle(
              e,
              ".p-yearpicker .p-yearpicker-year.p-highlight"
            );
          r.forEach((a) => (a.tabIndex = -1)),
            (t = o || r[0]),
            r.length === 0 &&
              me
                .find(
                  e,
                  '.p-yearpicker .p-yearpicker-year.p-disabled[tabindex = "0"]'
                )
                .forEach((d) => (d.tabIndex = -1));
        } else if (((t = me.findSingle(e, "span.p-highlight")), !t)) {
          let r = me.findSingle(
            e,
            "td.p-datepicker-today span:not(.p-disabled):not(.p-ink)"
          );
          r
            ? (t = r)
            : (t = me.findSingle(
                e,
                ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
              ));
        }
        t &&
          ((t.tabIndex = "0"),
          !this.preventFocus &&
            (!this.navigationState || !this.navigationState.button) &&
            setTimeout(() => {
              this.disabled || t.focus();
            }, 1),
          (this.preventFocus = !1));
      }
      trapFocus(e) {
        let t = me.getFocusableElements(this.contentViewChild.nativeElement);
        if (t && t.length > 0)
          if (!t[0].ownerDocument.activeElement) t[0].focus();
          else {
            let r = t.indexOf(t[0].ownerDocument.activeElement);
            if (e.shiftKey)
              if (r == -1 || r === 0)
                if (this.focusTrap) t[t.length - 1].focus();
                else {
                  if (r === -1) return this.hideOverlay();
                  if (r === 0) return;
                }
              else t[r - 1].focus();
            else if (r == -1)
              if (this.timeOnly) t[0].focus();
              else {
                let o = 0;
                for (let a = 0; a < t.length; a++)
                  t[a].tagName === "SPAN" && (o = a);
                t[o].focus();
              }
            else if (r === t.length - 1) {
              if (!this.focusTrap && r != -1) return this.hideOverlay();
              t[0].focus();
            } else t[r + 1].focus();
          }
        e.preventDefault();
      }
      onMonthDropdownChange(e) {
        (this.currentMonth = parseInt(e)),
          this.onMonthChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      onYearDropdownChange(e) {
        (this.currentYear = parseInt(e)),
          this.onYearChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      convertTo24Hour(e, t) {
        return this.hourFormat == "12"
          ? e === 12
            ? t
              ? 12
              : 0
            : t
            ? e + 12
            : e
          : e;
      }
      constrainTime(e, t, r, o) {
        let a = [e, t, r],
          d,
          u = this.value,
          f = this.convertTo24Hour(e, o),
          v = this.isRangeSelection(),
          S = this.isMultipleSelection();
        (v || S) &&
          (this.value || (this.value = [new Date(), new Date()]),
          v && (u = this.value[1] || this.value[0]),
          S && (u = this.value[this.value.length - 1]));
        let M = u ? u.toDateString() : null,
          I = this.minDate && M && this.minDate.toDateString() === M,
          L = this.maxDate && M && this.maxDate.toDateString() === M;
        switch ((I && (d = this.minDate.getHours() >= 12), !0)) {
          case I &&
            d &&
            this.minDate.getHours() === 12 &&
            this.minDate.getHours() > f:
            a[0] = 11;
          case I &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case I &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case I &&
            !d &&
            this.minDate.getHours() - 1 === f &&
            this.minDate.getHours() > f:
            (a[0] = 11), (this.pm = !0);
          case I &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case I &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case I && d && this.minDate.getHours() > f && f !== 12:
            this.setCurrentHourPM(this.minDate.getHours()),
              (a[0] = this.currentHour);
          case I &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case I &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case I && this.minDate.getHours() > f:
            a[0] = this.minDate.getHours();
          case I &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case I &&
            this.minDate.getHours() === f &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > r:
            a[2] = this.minDate.getSeconds();
            break;
          case L && this.maxDate.getHours() < f:
            a[0] = this.maxDate.getHours();
          case L &&
            this.maxDate.getHours() === f &&
            this.maxDate.getMinutes() < t:
            a[1] = this.maxDate.getMinutes();
          case L &&
            this.maxDate.getHours() === f &&
            this.maxDate.getMinutes() === t &&
            this.maxDate.getSeconds() < r:
            a[2] = this.maxDate.getSeconds();
            break;
        }
        return a;
      }
      incrementHour(e) {
        let t = this.currentHour ?? 0,
          r = (this.currentHour ?? 0) + this.stepHour,
          o = this.pm;
        this.hourFormat == "24"
          ? (r = r >= 24 ? r - 24 : r)
          : this.hourFormat == "12" &&
            (t < 12 && r > 11 && (o = !this.pm), (r = r >= 13 ? r - 12 : r)),
          this.toggleAMPMIfNotMinDate(o),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(r, this.currentMinute, this.currentSecond, o)),
          e.preventDefault();
      }
      toggleAMPMIfNotMinDate(e) {
        let t = this.value;
        (this.selectionMode == "range" || this.selectionMode == "multiple") &&
          Array.isArray(t) &&
          t.length > 0 &&
          (t = t[t.length - 1]);
        let r = t ? t.toDateString() : null;
        this.minDate &&
        r &&
        this.minDate.toDateString() === r &&
        this.minDate.getHours() >= 12
          ? (this.pm = !0)
          : (this.pm = e);
      }
      onTimePickerElementMouseDown(e, t, r) {
        this.disabled || (this.repeat(e, null, t, r), e.preventDefault());
      }
      onTimePickerElementMouseUp(e) {
        this.disabled || (this.clearTimePickerTimer(), this.updateTime());
      }
      onTimePickerElementMouseLeave() {
        !this.disabled &&
          this.timePickerTimer &&
          (this.clearTimePickerTimer(), this.updateTime());
      }
      repeat(e, t, r, o) {
        let a = t || 500;
        switch (
          (this.clearTimePickerTimer(),
          (this.timePickerTimer = setTimeout(() => {
            this.repeat(e, 100, r, o), this.cd.markForCheck();
          }, a)),
          r)
        ) {
          case 0:
            o === 1 ? this.incrementHour(e) : this.decrementHour(e);
            break;
          case 1:
            o === 1 ? this.incrementMinute(e) : this.decrementMinute(e);
            break;
          case 2:
            o === 1 ? this.incrementSecond(e) : this.decrementSecond(e);
            break;
        }
        this.updateInputfield();
      }
      clearTimePickerTimer() {
        this.timePickerTimer &&
          (clearTimeout(this.timePickerTimer), (this.timePickerTimer = null));
      }
      decrementHour(e) {
        let t = (this.currentHour ?? 0) - this.stepHour,
          r = this.pm;
        this.hourFormat == "24"
          ? (t = t < 0 ? 24 + t : t)
          : this.hourFormat == "12" &&
            (this.currentHour === 12 && (r = !this.pm),
            (t = t <= 0 ? 12 + t : t)),
          this.toggleAMPMIfNotMinDate(r),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(t, this.currentMinute, this.currentSecond, r)),
          e.preventDefault();
      }
      incrementMinute(e) {
        let t = (this.currentMinute ?? 0) + this.stepMinute;
        (t = t > 59 ? t - 60 : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              t,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      decrementMinute(e) {
        let t = (this.currentMinute ?? 0) - this.stepMinute;
        (t = t < 0 ? 60 + t : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              t,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      incrementSecond(e) {
        let t = this.currentSecond + this.stepSecond;
        (t = t > 59 ? t - 60 : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              t,
              this.pm
            )),
          e.preventDefault();
      }
      decrementSecond(e) {
        let t = this.currentSecond - this.stepSecond;
        (t = t < 0 ? 60 + t : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              t,
              this.pm
            )),
          e.preventDefault();
      }
      updateTime() {
        let e = this.value;
        this.isRangeSelection() && (e = this.value[1] || this.value[0]),
          this.isMultipleSelection() && (e = this.value[this.value.length - 1]),
          (e = e ? new Date(e.getTime()) : new Date()),
          this.hourFormat == "12"
            ? this.currentHour === 12
              ? e.setHours(this.pm ? 12 : 0)
              : e.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
            : e.setHours(this.currentHour),
          e.setMinutes(this.currentMinute),
          e.setSeconds(this.currentSecond),
          this.isRangeSelection() &&
            (this.value[1] ? (e = [this.value[0], e]) : (e = [e, null])),
          this.isMultipleSelection() && (e = [...this.value.slice(0, -1), e]),
          this.updateModel(e),
          this.onSelect.emit(e),
          this.updateInputfield();
      }
      toggleAMPM(e) {
        let t = !this.pm;
        (this.pm = t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              this.currentSecond,
              t
            )),
          this.updateTime(),
          e.preventDefault();
      }
      onUserInput(e) {
        if (!this.isKeydown) return;
        this.isKeydown = !1;
        let t = e.target.value;
        try {
          let r = this.parseValueFromString(t);
          this.isValidSelection(r)
            ? (this.updateModel(r), this.updateUI())
            : this.keepInvalid && this.updateModel(r);
        } catch {
          let o = this.keepInvalid ? t : null;
          this.updateModel(o);
        }
        (this.filled = t != null && t.length), this.onInput.emit(e);
      }
      isValidSelection(e) {
        if (this.isSingleSelection())
          return this.isSelectable(
            e.getDate(),
            e.getMonth(),
            e.getFullYear(),
            !1
          );
        let t = e.every((r) =>
          this.isSelectable(r.getDate(), r.getMonth(), r.getFullYear(), !1)
        );
        return (
          t &&
            this.isRangeSelection() &&
            (t = e.length === 1 || (e.length > 1 && e[1] >= e[0])),
          t
        );
      }
      parseValueFromString(e) {
        if (!e || e.trim().length === 0) return null;
        let t;
        if (this.isSingleSelection()) t = this.parseDateTime(e);
        else if (this.isMultipleSelection()) {
          let r = e.split(this.multipleSeparator);
          t = [];
          for (let o of r) t.push(this.parseDateTime(o.trim()));
        } else if (this.isRangeSelection()) {
          let r = e.split(" " + this.rangeSeparator + " ");
          t = [];
          for (let o = 0; o < r.length; o++)
            t[o] = this.parseDateTime(r[o].trim());
        }
        return t;
      }
      parseDateTime(e) {
        let t,
          r = e.split(" ");
        if (this.timeOnly) (t = new Date()), this.populateTime(t, r[0], r[1]);
        else {
          let o = this.getDateFormat();
          if (this.showTime) {
            let a = this.hourFormat == "12" ? r.pop() : null,
              d = r.pop();
            (t = this.parseDate(r.join(" "), o)), this.populateTime(t, d, a);
          } else t = this.parseDate(e, o);
        }
        return t;
      }
      populateTime(e, t, r) {
        if (this.hourFormat == "12" && !r) throw "Invalid Time";
        this.pm = r === "PM" || r === "pm";
        let o = this.parseTime(t);
        e.setHours(o.hour), e.setMinutes(o.minute), e.setSeconds(o.second);
      }
      isValidDate(e) {
        return tn.isDate(e) && tn.isNotEmpty(e);
      }
      updateUI() {
        let e = this.value;
        Array.isArray(e) && (e = e[1] || e[0]);
        let t =
          this.defaultDate && this.isValidDate(this.defaultDate) && !this.value
            ? this.defaultDate
            : e && this.isValidDate(e)
            ? e
            : new Date();
        (this.currentMonth = t.getMonth()),
          (this.currentYear = t.getFullYear()),
          this.createMonths(this.currentMonth, this.currentYear),
          (this.showTime || this.timeOnly) &&
            (this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds()));
      }
      showOverlay() {
        this.overlayVisible ||
          (this.updateUI(),
          this.touchUI || (this.preventFocus = !0),
          (this.overlayVisible = !0));
      }
      hideOverlay() {
        this.inputfieldViewChild?.nativeElement.focus(),
          (this.overlayVisible = !1),
          this.clearTimePickerTimer(),
          this.touchUI && this.disableModality(),
          this.cd.markForCheck();
      }
      toggle() {
        this.inline ||
          (this.overlayVisible
            ? this.hideOverlay()
            : (this.showOverlay(),
              this.inputfieldViewChild?.nativeElement.focus()));
      }
      onOverlayAnimationStart(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              ((this.overlay = e.element),
              this.overlay?.setAttribute(this.attributeSelector, ""),
              this.appendOverlay(),
              this.updateFocus(),
              this.autoZIndex &&
                (this.touchUI
                  ? bl.set(
                      "modal",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.modal
                    )
                  : bl.set(
                      "overlay",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.overlay
                    )),
              this.alignOverlay(),
              this.onShow.emit(e));
            break;
          case "void":
            this.onOverlayHide(), this.onClose.emit(e);
            break;
        }
      }
      onOverlayAnimationDone(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              (this.bindDocumentClickListener(),
              this.bindDocumentResizeListener(),
              this.bindScrollListener());
            break;
          case "void":
            this.autoZIndex && bl.clear(e.element);
            break;
        }
      }
      appendOverlay() {
        this.appendTo &&
          (this.appendTo === "body"
            ? this.document.body.appendChild(this.overlay)
            : me.appendChild(this.overlay, this.appendTo));
      }
      restoreOverlayAppend() {
        this.overlay &&
          this.appendTo &&
          this.el.nativeElement.appendChild(this.overlay);
      }
      alignOverlay() {
        this.touchUI
          ? this.enableModality(this.overlay)
          : this.overlay &&
            (this.appendTo
              ? (this.view === "date"
                  ? (this.overlay.style.width ||
                      (this.overlay.style.width =
                        me.getOuterWidth(this.overlay) + "px"),
                    this.overlay.style.minWidth ||
                      (this.overlay.style.minWidth =
                        me.getOuterWidth(
                          this.inputfieldViewChild?.nativeElement
                        ) + "px"))
                  : this.overlay.style.width ||
                    (this.overlay.style.width =
                      me.getOuterWidth(
                        this.inputfieldViewChild?.nativeElement
                      ) + "px"),
                me.absolutePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ))
              : me.relativePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ));
      }
      enableModality(e) {
        !this.mask &&
          this.touchUI &&
          ((this.mask = this.renderer.createElement("div")),
          this.renderer.setStyle(
            this.mask,
            "zIndex",
            String(parseInt(e.style.zIndex) - 1)
          ),
          me.addMultipleClasses(
            this.mask,
            "p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter"
          ),
          (this.maskClickListener = this.renderer.listen(
            this.mask,
            "click",
            (r) => {
              this.disableModality(), (this.overlayVisible = !1);
            }
          )),
          this.renderer.appendChild(this.document.body, this.mask),
          me.blockBodyScroll());
      }
      disableModality() {
        this.mask &&
          (me.addClass(this.mask, "p-component-overlay-leave"),
          this.animationEndListener ||
            (this.animationEndListener = this.renderer.listen(
              this.mask,
              "animationend",
              this.destroyMask.bind(this)
            )));
      }
      destroyMask() {
        if (!this.mask) return;
        this.renderer.removeChild(this.document.body, this.mask);
        let e = this.document.body.children,
          t;
        for (let r = 0; r < e.length; r++) {
          let o = e[r];
          if (me.hasClass(o, "p-datepicker-mask-scrollblocker")) {
            t = !0;
            break;
          }
        }
        t || me.unblockBodyScroll(),
          this.unbindAnimationEndListener(),
          this.unbindMaskClickListener(),
          (this.mask = null);
      }
      unbindMaskClickListener() {
        this.maskClickListener &&
          (this.maskClickListener(), (this.maskClickListener = null));
      }
      unbindAnimationEndListener() {
        this.animationEndListener &&
          this.mask &&
          (this.animationEndListener(), (this.animationEndListener = null));
      }
      writeValue(e) {
        if (((this.value = e), this.value && typeof this.value == "string"))
          try {
            this.value = this.parseValueFromString(this.value);
          } catch {
            this.keepInvalid && (this.value = e);
          }
        this.updateInputfield(), this.updateUI(), this.cd.markForCheck();
      }
      registerOnChange(e) {
        this.onModelChange = e;
      }
      registerOnTouched(e) {
        this.onModelTouched = e;
      }
      setDisabledState(e) {
        (this.disabled = e), this.cd.markForCheck();
      }
      getDateFormat() {
        return this.dateFormat || this.getTranslation("dateFormat");
      }
      getFirstDateOfWeek() {
        return (
          this._firstDayOfWeek || this.getTranslation(kn.FIRST_DAY_OF_WEEK)
        );
      }
      formatDate(e, t) {
        if (!e) return "";
        let r,
          o = (v) => {
            let S = r + 1 < t.length && t.charAt(r + 1) === v;
            return S && r++, S;
          },
          a = (v, S, T) => {
            let M = "" + S;
            if (o(v)) for (; M.length < T; ) M = "0" + M;
            return M;
          },
          d = (v, S, T, M) => (o(v) ? M[S] : T[S]),
          u = "",
          f = !1;
        if (e)
          for (r = 0; r < t.length; r++)
            if (f)
              t.charAt(r) === "'" && !o("'") ? (f = !1) : (u += t.charAt(r));
            else
              switch (t.charAt(r)) {
                case "d":
                  u += a("d", e.getDate(), 2);
                  break;
                case "D":
                  u += d(
                    "D",
                    e.getDay(),
                    this.getTranslation(kn.DAY_NAMES_SHORT),
                    this.getTranslation(kn.DAY_NAMES)
                  );
                  break;
                case "o":
                  u += a(
                    "o",
                    Math.round(
                      (new Date(
                        e.getFullYear(),
                        e.getMonth(),
                        e.getDate()
                      ).getTime() -
                        new Date(e.getFullYear(), 0, 0).getTime()) /
                        864e5
                    ),
                    3
                  );
                  break;
                case "m":
                  u += a("m", e.getMonth() + 1, 2);
                  break;
                case "M":
                  u += d(
                    "M",
                    e.getMonth(),
                    this.getTranslation(kn.MONTH_NAMES_SHORT),
                    this.getTranslation(kn.MONTH_NAMES)
                  );
                  break;
                case "y":
                  u += o("y")
                    ? e.getFullYear()
                    : (e.getFullYear() % 100 < 10 ? "0" : "") +
                      (e.getFullYear() % 100);
                  break;
                case "@":
                  u += e.getTime();
                  break;
                case "!":
                  u += e.getTime() * 1e4 + this.ticksTo1970;
                  break;
                case "'":
                  o("'") ? (u += "'") : (f = !0);
                  break;
                default:
                  u += t.charAt(r);
              }
        return u;
      }
      formatTime(e) {
        if (!e) return "";
        let t = "",
          r = e.getHours(),
          o = e.getMinutes(),
          a = e.getSeconds();
        return (
          this.hourFormat == "12" && r > 11 && r != 12 && (r -= 12),
          this.hourFormat == "12"
            ? (t += r === 0 ? 12 : r < 10 ? "0" + r : r)
            : (t += r < 10 ? "0" + r : r),
          (t += ":"),
          (t += o < 10 ? "0" + o : o),
          this.showSeconds && ((t += ":"), (t += a < 10 ? "0" + a : a)),
          this.hourFormat == "12" && (t += e.getHours() > 11 ? " PM" : " AM"),
          t
        );
      }
      parseTime(e) {
        let t = e.split(":"),
          r = this.showSeconds ? 3 : 2;
        if (t.length !== r) throw "Invalid time";
        let o = parseInt(t[0]),
          a = parseInt(t[1]),
          d = this.showSeconds ? parseInt(t[2]) : null;
        if (
          isNaN(o) ||
          isNaN(a) ||
          o > 23 ||
          a > 59 ||
          (this.hourFormat == "12" && o > 12) ||
          (this.showSeconds && (isNaN(d) || d > 59))
        )
          throw "Invalid time";
        return (
          this.hourFormat == "12" &&
            (o !== 12 && this.pm
              ? (o += 12)
              : !this.pm && o === 12 && (o -= 12)),
          { hour: o, minute: a, second: d }
        );
      }
      parseDate(e, t) {
        if (t == null || e == null) throw "Invalid arguments";
        if (((e = typeof e == "object" ? e.toString() : e + ""), e === ""))
          return null;
        let r,
          o,
          a,
          d = 0,
          u =
            typeof this.shortYearCutoff != "string"
              ? this.shortYearCutoff
              : (new Date().getFullYear() % 100) +
                parseInt(this.shortYearCutoff, 10),
          f = -1,
          v = -1,
          S = -1,
          T = -1,
          M = !1,
          I,
          L = (re) => {
            let ge = r + 1 < t.length && t.charAt(r + 1) === re;
            return ge && r++, ge;
          },
          E = (re) => {
            let ge = L(re),
              Pe =
                re === "@"
                  ? 14
                  : re === "!"
                  ? 20
                  : re === "y" && ge
                  ? 4
                  : re === "o"
                  ? 3
                  : 2,
              b = re === "y" ? Pe : 1,
              Ue = new RegExp("^\\d{" + b + "," + Pe + "}"),
              we = e.substring(d).match(Ue);
            if (!we) throw "Missing number at position " + d;
            return (d += we[0].length), parseInt(we[0], 10);
          },
          F = (re, ge, Pe) => {
            let b = -1,
              Ue = L(re) ? Pe : ge,
              we = [];
            for (let Ge = 0; Ge < Ue.length; Ge++) we.push([Ge, Ue[Ge]]);
            we.sort((Ge, yt) => -(Ge[1].length - yt[1].length));
            for (let Ge = 0; Ge < we.length; Ge++) {
              let yt = we[Ge][1];
              if (e.substr(d, yt.length).toLowerCase() === yt.toLowerCase()) {
                (b = we[Ge][0]), (d += yt.length);
                break;
              }
            }
            if (b !== -1) return b + 1;
            throw "Unknown name at position " + d;
          },
          ee = () => {
            if (e.charAt(d) !== t.charAt(r))
              throw "Unexpected literal at position " + d;
            d++;
          };
        for (this.view === "month" && (S = 1), r = 0; r < t.length; r++)
          if (M) t.charAt(r) === "'" && !L("'") ? (M = !1) : ee();
          else
            switch (t.charAt(r)) {
              case "d":
                S = E("d");
                break;
              case "D":
                F(
                  "D",
                  this.getTranslation(kn.DAY_NAMES_SHORT),
                  this.getTranslation(kn.DAY_NAMES)
                );
                break;
              case "o":
                T = E("o");
                break;
              case "m":
                v = E("m");
                break;
              case "M":
                v = F(
                  "M",
                  this.getTranslation(kn.MONTH_NAMES_SHORT),
                  this.getTranslation(kn.MONTH_NAMES)
                );
                break;
              case "y":
                f = E("y");
                break;
              case "@":
                (I = new Date(E("@"))),
                  (f = I.getFullYear()),
                  (v = I.getMonth() + 1),
                  (S = I.getDate());
                break;
              case "!":
                (I = new Date((E("!") - this.ticksTo1970) / 1e4)),
                  (f = I.getFullYear()),
                  (v = I.getMonth() + 1),
                  (S = I.getDate());
                break;
              case "'":
                L("'") ? ee() : (M = !0);
                break;
              default:
                ee();
            }
        if (d < e.length && ((a = e.substr(d)), !/^\s+/.test(a)))
          throw "Extra/unparsed characters found in date: " + a;
        if (
          (f === -1
            ? (f = new Date().getFullYear())
            : f < 100 &&
              (f +=
                new Date().getFullYear() -
                (new Date().getFullYear() % 100) +
                (f <= u ? 0 : -100)),
          T > -1)
        ) {
          (v = 1), (S = T);
          do {
            if (((o = this.getDaysCountInMonth(f, v - 1)), S <= o)) break;
            v++, (S -= o);
          } while (!0);
        }
        if (
          (this.view === "year" &&
            ((v = v === -1 ? 1 : v), (S = S === -1 ? 1 : S)),
          (I = this.daylightSavingAdjust(new Date(f, v - 1, S))),
          I.getFullYear() !== f || I.getMonth() + 1 !== v || I.getDate() !== S)
        )
          throw "Invalid date";
        return I;
      }
      daylightSavingAdjust(e) {
        return e
          ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
          : null;
      }
      updateFilledState() {
        this.filled = this.inputFieldValue && this.inputFieldValue != "";
      }
      isValidDateForTimeConstraints(e) {
        return this.keepInvalid
          ? !0
          : (!this.minDate || e >= this.minDate) &&
              (!this.maxDate || e <= this.maxDate);
      }
      onTodayButtonClick(e) {
        let t = new Date(),
          r = {
            day: t.getDate(),
            month: t.getMonth(),
            year: t.getFullYear(),
            otherMonth:
              t.getMonth() !== this.currentMonth ||
              t.getFullYear() !== this.currentYear,
            today: !0,
            selectable: !0,
          };
        this.createMonths(t.getMonth(), t.getFullYear()),
          this.onDateSelect(e, r),
          this.onTodayClick.emit(t);
      }
      onClearButtonClick(e) {
        this.updateModel(null),
          this.updateInputfield(),
          this.hideOverlay(),
          this.onClearClick.emit(e);
      }
      createResponsiveStyle() {
        if (this.numberOfMonths > 1 && this.responsiveOptions) {
          this.responsiveStyleElement ||
            ((this.responsiveStyleElement =
              this.renderer.createElement("style")),
            (this.responsiveStyleElement.type = "text/css"),
            me.setAttribute(
              this.responsiveStyleElement,
              "nonce",
              this.config?.csp()?.nonce
            ),
            this.renderer.appendChild(
              this.document.body,
              this.responsiveStyleElement
            ));
          let e = "";
          if (this.responsiveOptions) {
            let t = [...this.responsiveOptions]
              .filter((r) => !!(r.breakpoint && r.numMonths))
              .sort(
                (r, o) =>
                  -1 *
                  r.breakpoint.localeCompare(o.breakpoint, void 0, {
                    numeric: !0,
                  })
              );
            for (let r = 0; r < t.length; r++) {
              let { breakpoint: o, numMonths: a } = t[r],
                d = `
                        .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${a}) .p-datepicker-next {
                            display: inline-flex !important;
                        }
                    `;
              for (let u = a; u < this.numberOfMonths; u++)
                d += `
                            .p-datepicker[${
                              this.attributeSelector
                            }] .p-datepicker-group:nth-child(${u + 1}) {
                                display: none !important;
                            }
                        `;
              e += `
                        @media screen and (max-width: ${o}) {
                            ${d}
                        }
                    `;
            }
          }
          this.responsiveStyleElement.innerHTML = e;
        }
      }
      destroyResponsiveStyleElement() {
        this.responsiveStyleElement &&
          (this.responsiveStyleElement.remove(),
          (this.responsiveStyleElement = null));
      }
      bindDocumentClickListener() {
        this.documentClickListener ||
          this.zone.runOutsideAngular(() => {
            let e = this.el
              ? this.el.nativeElement.ownerDocument
              : this.document;
            this.documentClickListener = this.renderer.listen(
              e,
              "mousedown",
              (t) => {
                this.isOutsideClicked(t) &&
                  this.overlayVisible &&
                  this.zone.run(() => {
                    this.hideOverlay(),
                      this.onClickOutside.emit(t),
                      this.cd.markForCheck();
                  });
              }
            );
          });
      }
      unbindDocumentClickListener() {
        this.documentClickListener &&
          (this.documentClickListener(), (this.documentClickListener = null));
      }
      bindDocumentResizeListener() {
        !this.documentResizeListener &&
          !this.touchUI &&
          (this.documentResizeListener = this.renderer.listen(
            this.window,
            "resize",
            this.onWindowResize.bind(this)
          ));
      }
      unbindDocumentResizeListener() {
        this.documentResizeListener &&
          (this.documentResizeListener(), (this.documentResizeListener = null));
      }
      bindScrollListener() {
        this.scrollHandler ||
          (this.scrollHandler = new Kd(
            this.containerViewChild?.nativeElement,
            () => {
              this.overlayVisible && this.hideOverlay();
            }
          )),
          this.scrollHandler.bindScrollListener();
      }
      unbindScrollListener() {
        this.scrollHandler && this.scrollHandler.unbindScrollListener();
      }
      isOutsideClicked(e) {
        return !(
          this.el.nativeElement.isSameNode(e.target) ||
          this.isNavIconClicked(e) ||
          this.el.nativeElement.contains(e.target) ||
          (this.overlay && this.overlay.contains(e.target))
        );
      }
      isNavIconClicked(e) {
        return (
          me.hasClass(e.target, "p-datepicker-prev") ||
          me.hasClass(e.target, "p-datepicker-prev-icon") ||
          me.hasClass(e.target, "p-datepicker-next") ||
          me.hasClass(e.target, "p-datepicker-next-icon")
        );
      }
      onWindowResize() {
        this.overlayVisible && !me.isTouchDevice() && this.hideOverlay();
      }
      onOverlayHide() {
        (this.currentView = this.view),
          this.mask && this.destroyMask(),
          this.unbindDocumentClickListener(),
          this.unbindDocumentResizeListener(),
          this.unbindScrollListener(),
          (this.overlay = null);
      }
      ngOnDestroy() {
        this.scrollHandler &&
          (this.scrollHandler.destroy(), (this.scrollHandler = null)),
          this.translationSubscription &&
            this.translationSubscription.unsubscribe(),
          this.overlay && this.autoZIndex && bl.clear(this.overlay),
          this.destroyResponsiveStyleElement(),
          this.clearTimePickerTimer(),
          this.restoreOverlayAppend(),
          this.onOverlayHide();
      }
      static ɵfac = function (t) {
        return new (t || n)(j(Oe), j(Re), j(hi), j(Qe), j(Me), j(qd), j(oy));
      };
      static ɵcmp = se({
        type: n,
        selectors: [["p-calendar"]],
        contentQueries: function (t, r, o) {
          if ((t & 1 && ln(o, vl, 4), t & 2)) {
            let a;
            nt((a = rt())) && (r.templates = a);
          }
        },
        viewQuery: function (t, r) {
          if ((t & 1 && (_t(yP, 5), _t(xP, 5), _t(CP, 5)), t & 2)) {
            let o;
            nt((o = rt())) && (r.containerViewChild = o.first),
              nt((o = rt())) && (r.inputfieldViewChild = o.first),
              nt((o = rt())) && (r.content = o.first);
          }
        },
        hostAttrs: [1, "p-element", "p-inputwrapper"],
        hostVars: 6,
        hostBindings: function (t, r) {
          t & 2 &&
            ne("p-inputwrapper-filled", r.filled)(
              "p-inputwrapper-focus",
              r.focus
            )("p-calendar-clearable", r.showClear && !r.disabled);
        },
        inputs: {
          iconDisplay: "iconDisplay",
          style: "style",
          styleClass: "styleClass",
          inputStyle: "inputStyle",
          inputId: "inputId",
          name: "name",
          inputStyleClass: "inputStyleClass",
          placeholder: "placeholder",
          ariaLabelledBy: "ariaLabelledBy",
          ariaLabel: "ariaLabel",
          iconAriaLabel: "iconAriaLabel",
          disabled: [2, "disabled", "disabled", Se],
          dateFormat: "dateFormat",
          multipleSeparator: "multipleSeparator",
          rangeSeparator: "rangeSeparator",
          inline: [2, "inline", "inline", Se],
          showOtherMonths: [2, "showOtherMonths", "showOtherMonths", Se],
          selectOtherMonths: [2, "selectOtherMonths", "selectOtherMonths", Se],
          showIcon: [2, "showIcon", "showIcon", Se],
          icon: "icon",
          appendTo: "appendTo",
          readonlyInput: [2, "readonlyInput", "readonlyInput", Se],
          shortYearCutoff: "shortYearCutoff",
          monthNavigator: [2, "monthNavigator", "monthNavigator", Se],
          yearNavigator: [2, "yearNavigator", "yearNavigator", Se],
          hourFormat: "hourFormat",
          timeOnly: [2, "timeOnly", "timeOnly", Se],
          stepYearPicker: [2, "stepYearPicker", "stepYearPicker", cn],
          stepHour: [2, "stepHour", "stepHour", cn],
          stepMinute: [2, "stepMinute", "stepMinute", cn],
          stepSecond: [2, "stepSecond", "stepSecond", cn],
          showSeconds: [2, "showSeconds", "showSeconds", Se],
          required: [2, "required", "required", Se],
          showOnFocus: [2, "showOnFocus", "showOnFocus", Se],
          showWeek: [2, "showWeek", "showWeek", Se],
          startWeekFromFirstDayOfYear: "startWeekFromFirstDayOfYear",
          showClear: [2, "showClear", "showClear", Se],
          dataType: "dataType",
          selectionMode: "selectionMode",
          maxDateCount: [2, "maxDateCount", "maxDateCount", cn],
          showButtonBar: [2, "showButtonBar", "showButtonBar", Se],
          todayButtonStyleClass: "todayButtonStyleClass",
          clearButtonStyleClass: "clearButtonStyleClass",
          autofocus: [2, "autofocus", "autofocus", Se],
          autoZIndex: [2, "autoZIndex", "autoZIndex", Se],
          baseZIndex: [2, "baseZIndex", "baseZIndex", cn],
          panelStyleClass: "panelStyleClass",
          panelStyle: "panelStyle",
          keepInvalid: [2, "keepInvalid", "keepInvalid", Se],
          hideOnDateTimeSelect: [
            2,
            "hideOnDateTimeSelect",
            "hideOnDateTimeSelect",
            Se,
          ],
          touchUI: [2, "touchUI", "touchUI", Se],
          timeSeparator: "timeSeparator",
          focusTrap: [2, "focusTrap", "focusTrap", Se],
          showTransitionOptions: "showTransitionOptions",
          hideTransitionOptions: "hideTransitionOptions",
          tabindex: [2, "tabindex", "tabindex", cn],
          variant: "variant",
          minDate: "minDate",
          maxDate: "maxDate",
          disabledDates: "disabledDates",
          disabledDays: "disabledDays",
          yearRange: "yearRange",
          showTime: "showTime",
          responsiveOptions: "responsiveOptions",
          numberOfMonths: "numberOfMonths",
          firstDayOfWeek: "firstDayOfWeek",
          locale: "locale",
          view: "view",
          defaultDate: "defaultDate",
        },
        outputs: {
          onFocus: "onFocus",
          onBlur: "onBlur",
          onClose: "onClose",
          onSelect: "onSelect",
          onClear: "onClear",
          onInput: "onInput",
          onTodayClick: "onTodayClick",
          onClearClick: "onClearClick",
          onMonthChange: "onMonthChange",
          onYearChange: "onYearChange",
          onClickOutside: "onClickOutside",
          onShow: "onShow",
        },
        features: [Bt([dA]), Pt],
        ngContentSelectors: SP,
        decls: 4,
        vars: 12,
        consts: [
          ["container", ""],
          ["inputfield", ""],
          ["contentWrapper", ""],
          [3, "ngClass", "ngStyle"],
          [3, "ngIf"],
          [3, "class", "ngStyle", "ngClass", "click", 4, "ngIf"],
          [
            "type",
            "text",
            "role",
            "combobox",
            "aria-autocomplete",
            "none",
            "aria-haspopup",
            "dialog",
            "autocomplete",
            "off",
            "pAutoFocus",
            "",
            3,
            "focus",
            "keydown",
            "click",
            "blur",
            "input",
            "value",
            "readonly",
            "ngStyle",
            "placeholder",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "class",
            "p-datepicker-trigger p-button-icon-only",
            "tabindex",
            "0",
            3,
            "disabled",
            "click",
            4,
            "ngIf",
          ],
          [3, "styleClass", "click", 4, "ngIf"],
          ["class", "p-calendar-clear-icon", 3, "click", 4, "ngIf"],
          [3, "click", "styleClass"],
          [1, "p-calendar-clear-icon", 3, "click"],
          [4, "ngTemplateOutlet"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "tabindex",
            "0",
            1,
            "p-datepicker-trigger",
            "p-button-icon-only",
            3,
            "click",
            "disabled",
          ],
          [3, "ngClass", 4, "ngIf"],
          [3, "ngClass"],
          [3, "ngClass", "click", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "click", "ngClass"],
          [3, "click", "ngStyle", "ngClass"],
          ["class", "p-timepicker", 4, "ngIf"],
          ["class", "p-datepicker-buttonbar", 4, "ngIf"],
          [1, "p-datepicker-group-container"],
          ["class", "p-datepicker-group", 4, "ngFor", "ngForOf"],
          ["class", "p-monthpicker", 4, "ngIf"],
          ["class", "p-yearpicker", 4, "ngIf"],
          [1, "p-datepicker-group"],
          [1, "p-datepicker-header"],
          [
            "class",
            "p-datepicker-prev p-link",
            "type",
            "button",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            4,
            "ngIf",
          ],
          [1, "p-datepicker-title"],
          [
            "type",
            "button",
            "class",
            "p-datepicker-month p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          [
            "type",
            "button",
            "class",
            "p-datepicker-year p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          ["class", "p-datepicker-decade", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-next",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          [3, "styleClass", 4, "ngIf"],
          ["class", "p-datepicker-next-icon", 4, "ngIf"],
          ["class", "p-datepicker-calendar-container", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-prev",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          ["class", "p-datepicker-prev-icon", 4, "ngIf"],
          [3, "styleClass"],
          [1, "p-datepicker-prev-icon"],
          [
            "type",
            "button",
            1,
            "p-datepicker-month",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [
            "type",
            "button",
            1,
            "p-datepicker-year",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [1, "p-datepicker-decade"],
          [1, "p-datepicker-next-icon"],
          [1, "p-datepicker-calendar-container"],
          ["role", "grid", 1, "p-datepicker-calendar"],
          ["class", "p-datepicker-weekheader p-disabled", 4, "ngIf"],
          ["scope", "col", 4, "ngFor", "ngForOf"],
          [4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weekheader", "p-disabled"],
          ["scope", "col"],
          ["class", "p-datepicker-weeknumber", 4, "ngIf"],
          [3, "ngClass", 4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weeknumber"],
          [1, "p-disabled"],
          [
            "draggable",
            "false",
            "pRipple",
            "",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          ["class", "p-hidden-accessible", "aria-live", "polite", 4, "ngIf"],
          ["aria-live", "polite", 1, "p-hidden-accessible"],
          [1, "p-monthpicker"],
          [
            "class",
            "p-monthpicker-month",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-monthpicker-month",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-yearpicker"],
          [
            "class",
            "p-yearpicker-year",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-yearpicker-year",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-timepicker"],
          [1, "p-hour-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "keydown.enter",
            "keydown.space",
            "mousedown",
            "mouseup",
            "keyup.enter",
            "keyup.space",
            "mouseleave",
          ],
          [1, "p-separator"],
          [1, "p-minute-picker"],
          ["class", "p-separator", 4, "ngIf"],
          ["class", "p-second-picker", 4, "ngIf"],
          ["class", "p-ampm-picker", 4, "ngIf"],
          [1, "p-second-picker"],
          [1, "p-ampm-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "click",
            "keydown.enter",
          ],
          [1, "p-datepicker-buttonbar"],
          [
            "type",
            "button",
            "pButton",
            "",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            "label",
            "ngClass",
          ],
        ],
        template: function (t, r) {
          t & 1 &&
            (Jt(wP),
            l(0, "span", 3, 0),
            A(2, YP, 5, 22, "ng-template", 4)(3, cA, 9, 32, "div", 5),
            c()),
            t & 2 &&
              (He(r.styleClass),
              y(
                "ngClass",
                rh(
                  6,
                  DP,
                  r.showIcon && r.iconDisplay === "input",
                  r.showIcon && r.iconDisplay === "button",
                  r.timeOnly,
                  r.disabled,
                  r.focus || r.overlayVisible
                )
              )("ngStyle", r.style),
              m(2),
              y("ngIf", !r.inline),
              m(),
              y("ngIf", r.inline || r.overlayVisible));
        },
        dependencies: () => [
          It,
          At,
          We,
          Jo,
          Pr,
          uy,
          Xd,
          vf,
          yl,
          yf,
          xf,
          Cf,
          wf,
          Qd,
        ],
        styles: [
          `@layer primeng{.p-calendar{position:relative;display:inline-flex;max-width:100%}.p-calendar .p-inputtext{flex:1 1 auto;width:1%;text-overflow:ellipsis}.p-calendar-w-btn .p-inputtext{border-top-right-radius:0;border-bottom-right-radius:0}.p-calendar-w-btn .p-datepicker-trigger{border-top-left-radius:0;border-bottom-left-radius:0}.p-fluid .p-calendar{display:flex}.p-fluid .p-calendar .p-inputtext{width:1%}.p-calendar .p-datepicker{min-width:100%}.p-datepicker{width:auto;position:absolute;top:0;left:0}.p-datepicker-inline{display:inline-block;position:static;overflow-x:auto}.p-datepicker-header{display:flex;align-items:center;justify-content:space-between}.p-datepicker-header .p-datepicker-title{margin:0 auto}.p-datepicker-prev,.p-datepicker-next{cursor:pointer;display:inline-flex;justify-content:center;align-items:center;overflow:hidden;position:relative}.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group{flex:1 1 auto}.p-datepicker-multiple-month .p-datepicker-group-container{display:flex}.p-datepicker table{width:100%;border-collapse:collapse}.p-datepicker td>span{display:flex;justify-content:center;align-items:center;cursor:pointer;margin:0 auto;overflow:hidden;position:relative}.p-monthpicker-month{width:33.3%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-datepicker-buttonbar{display:flex;justify-content:space-between;align-items:center}.p-timepicker{display:flex;justify-content:center;align-items:center}.p-timepicker button{display:flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-timepicker>div{display:flex;align-items:center;flex-direction:column}.p-datepicker-touch-ui,.p-calendar .p-datepicker-touch-ui{position:fixed;top:50%;left:50%;min-width:80vw;transform:translate(-50%,-50%)}.p-yearpicker-year{width:50%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-calendar-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-datepicker-icon{pointer-events:none}.p-calendar-clearable{position:relative}}
`,
        ],
        encapsulation: 2,
        data: {
          animation: [
            lo("overlayAnimation", [
              dr(
                "visibleTouchUI",
                li({ transform: "translate(-50%,-50%)", opacity: 1 })
              ),
              qi("void => visible", [
                li({ opacity: 0, transform: "scaleY(0.8)" }),
                Yi(
                  "{{showTransitionParams}}",
                  li({ opacity: 1, transform: "*" })
                ),
              ]),
              qi("visible => void", [
                Yi("{{hideTransitionParams}}", li({ opacity: 0 })),
              ]),
              qi("void => visibleTouchUI", [
                li({
                  opacity: 0,
                  transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                }),
                Yi("{{showTransitionParams}}"),
              ]),
              qi("visibleTouchUI => void", [
                Yi(
                  "{{hideTransitionParams}}",
                  li({
                    opacity: 0,
                    transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                  })
                ),
              ]),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return n;
  })(),
  fy = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = ye({ type: n });
      static ɵinj = ve({
        imports: [Ae, bf, On, cy, vf, yl, yf, xf, Cf, wf, sy, bf, On],
      });
    }
    return n;
  })();
var gy = (() => {
  class n extends Ei {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + Aa() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (r) {
        return (e || (e = gt(n)))(r || n);
      };
    })();
    static ɵcmp = se({
      type: n,
      selectors: [["HomeIcon"]],
      standalone: !0,
      features: [Ze, le],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "fill-rule",
          "evenodd",
          "clip-rule",
          "evenodd",
          "d",
          "M13.4175 6.79971C13.2874 6.80029 13.1608 6.75807 13.057 6.67955L12.4162 6.19913V12.6073C12.4141 12.7659 12.3502 12.9176 12.2379 13.0298C12.1257 13.142 11.9741 13.206 11.8154 13.208H8.61206C8.61179 13.208 8.61151 13.208 8.61123 13.2081C8.61095 13.208 8.61068 13.208 8.6104 13.208H5.41076C5.40952 13.208 5.40829 13.2081 5.40705 13.2081C5.40581 13.2081 5.40458 13.208 5.40334 13.208H2.20287C2.04418 13.206 1.89257 13.142 1.78035 13.0298C1.66813 12.9176 1.60416 12.7659 1.60209 12.6073V6.19914L0.961256 6.67955C0.833786 6.77515 0.673559 6.8162 0.515823 6.79367C0.358086 6.77114 0.215762 6.68686 0.120159 6.55939C0.0245566 6.43192 -0.0164931 6.2717 0.00604063 6.11396C0.0285744 5.95622 0.112846 5.8139 0.240316 5.7183L1.83796 4.52007L1.84689 4.51337L6.64868 0.912027C6.75267 0.834032 6.87915 0.79187 7.00915 0.79187C7.13914 0.79187 7.26562 0.834032 7.36962 0.912027L12.1719 4.51372L12.1799 4.51971L13.778 5.7183C13.8943 5.81278 13.9711 5.94732 13.9934 6.09553C14.0156 6.24373 13.9816 6.39489 13.8981 6.51934C13.8471 6.60184 13.7766 6.67054 13.6928 6.71942C13.609 6.76831 13.5144 6.79587 13.4175 6.79971ZM6.00783 12.0065H8.01045V7.60074H6.00783V12.0065ZM9.21201 12.0065V6.99995C9.20994 6.84126 9.14598 6.68965 9.03375 6.57743C8.92153 6.46521 8.76992 6.40124 8.61123 6.39917H5.40705C5.24836 6.40124 5.09675 6.46521 4.98453 6.57743C4.8723 6.68965 4.80834 6.84126 4.80627 6.99995V12.0065H2.80366V5.29836L7.00915 2.14564L11.2146 5.29836V12.0065H9.21201Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (t, r) {
        t & 1 &&
          (Ct(),
          l(0, "svg", 0)(1, "g"),
          U(2, "path", 1),
          c(),
          l(3, "defs")(4, "clipPath", 2),
          U(5, "rect", 3),
          c()()()),
          t & 2 &&
            (He(r.getClassNames()),
            ce("aria-label", r.ariaLabel)("aria-hidden", r.ariaHidden)(
              "role",
              r.role
            ),
            m(),
            ce("clip-path", r.pathId),
            m(3),
            y("id", r.pathId));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var xl = (() => {
  class n {
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = ye({ type: n });
    static ɵinj = ve({ imports: [Ae] });
  }
  return n;
})();
var _y = (() => {
  class n {
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = ye({ type: n });
    static ɵinj = ve({ imports: [Ae, Li, xl, yl, gy, On, Li, xl, On] });
  }
  return n;
})();
var Io = (n) => ({ "is-invalid": n });
function hA(n, i) {
  n & 1 &&
    (l(0, "tr")(1, "td", 53)(2, "p"), h(3, "No Accounts Found"), c()()());
}
function pA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "tr")(1, "td"),
      h(2),
      c(),
      l(3, "td"),
      h(4),
      c(),
      l(5, "td"),
      h(6),
      c(),
      l(7, "td"),
      h(8),
      c(),
      l(9, "td"),
      h(10),
      c(),
      l(11, "td", 55)(12, "a", 56),
      R("click", function () {
        let r = O(e).$implicit,
          o = x(2);
        return k(o.onEdit(r.account_id));
      }),
      U(13, "i", 57),
      c(),
      l(14, "a", 58),
      R("click", function () {
        let r = O(e).$implicit,
          o = x(2);
        return k(o.selectCustomerForDeletion(r));
      }),
      U(15, "i", 59),
      c(),
      l(16, "div", 60)(17, "div", 61)(18, "div", 23)(19, "div", 62)(
        20,
        "h5",
        63
      ),
      h(21, "Delete User"),
      c()(),
      l(22, "div", 64),
      h(23, "HEY ARE YOU SURE TO DELETE..!"),
      c(),
      l(24, "div", 50)(25, "button", 65),
      h(26, " Cancel "),
      c(),
      l(27, "button", 66),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.closeModal());
      })("click", function () {
        O(e);
        let r = x(2);
        return k(r.deleteCustomerId());
      }),
      h(28, " Delete "),
      c()()()()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index;
    m(2),
      B(t + 1),
      m(2),
      B(e.fname),
      m(2),
      B(e.lname),
      m(2),
      B(e.email),
      m(2),
      B(e.phone);
  }
}
function mA(n, i) {
  if ((n & 1 && A(0, pA, 29, 5, "tr", 54), n & 2)) {
    let e = x();
    y("ngForOf", e.customerList());
  }
}
function fA(n, i) {
  n & 1 &&
    (l(0, "div", 67)(1, "span"), h(2, "Account Type is required."), c()());
}
function gA(n, i) {
  n & 1 && (l(0, "span"), h(1, "First Name is required."), c());
}
function _A(n, i) {
  n & 1 &&
    (l(0, "span"), h(1, "First Name must be at least 3 characters long."), c());
}
function bA(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 67),
      A(1, gA, 2, 0, "span", 68)(2, _A, 2, 0, "span", 68),
      c()),
    n & 2)
  ) {
    let e,
      t,
      r = x();
    m(),
      y(
        "ngIf",
        (e = r.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = r.useForm.get("fname")) == null || t.errors == null
          ? null
          : t.errors.minlength
      );
  }
}
function vA(n, i) {
  n & 1 && (l(0, "span"), h(1, "Last Name is required."), c());
}
function yA(n, i) {
  n & 1 &&
    (l(0, "span"), h(1, "Last Name must be at least 3 characters long."), c());
}
function xA(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 67),
      A(1, vA, 2, 0, "span", 68)(2, yA, 2, 0, "span", 68),
      c()),
    n & 2)
  ) {
    let e,
      t,
      r = x();
    m(),
      y(
        "ngIf",
        (e = r.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = r.useForm.get("lname")) == null || t.errors == null
          ? null
          : t.errors.minlength
      );
  }
}
function CA(n, i) {
  if ((n & 1 && (l(0, "option", 69), h(1), c()), n & 2)) {
    let e = i.$implicit;
    y("value", e.dealer_code), m(), Z(" ", e.dealer_code, " ");
  }
}
function wA(n, i) {
  if ((n & 1 && (l(0, "option", 69), h(1), c()), n & 2)) {
    let e = i.$implicit;
    y("value", e.dealer_code), m(), Z(" ", e.dealer_code, " ");
  }
}
function SA(n, i) {
  n & 1 && (l(0, "div", 67)(1, "span"), h(2, "Dealer is required."), c()());
}
function DA(n, i) {
  n & 1 && (l(0, "span"), h(1, "Email is required."), c());
}
function MA(n, i) {
  n & 1 && (l(0, "span"), h(1, "Please enter a valid email."), c());
}
function TA(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 67),
      A(1, DA, 2, 0, "span", 68)(2, MA, 2, 0, "span", 68),
      c()),
    n & 2)
  ) {
    let e,
      t,
      r = x();
    m(),
      y(
        "ngIf",
        (e = r.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = r.useForm.get("email")) == null || t.errors == null
          ? null
          : t.errors.email
      );
  }
}
function EA(n, i) {
  n & 1 && (l(0, "span"), h(1, "Phone is required."), c());
}
function OA(n, i) {
  n & 1 &&
    (l(0, "span"), h(1, "Phone must be at least 3 characters long."), c());
}
function kA(n, i) {
  n & 1 && (l(0, "span"), h(1, "Phone must contain only numbers."), c());
}
function PA(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 67),
      A(1, EA, 2, 0, "span", 68)(2, OA, 2, 0, "span", 68)(
        3,
        kA,
        2,
        0,
        "span",
        68
      ),
      c()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o = x();
    m(),
      y(
        "ngIf",
        (e = o.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = o.useForm.get("phone")) == null || t.errors == null
          ? null
          : t.errors.minlength
      ),
      m(),
      y(
        "ngIf",
        (r = o.useForm.get("phone")) == null || r.errors == null
          ? null
          : r.errors.pattern
      );
  }
}
function IA(n, i) {
  n & 1 && (l(0, "span"), h(1, "Mobile is required."), c());
}
function AA(n, i) {
  n & 1 &&
    (l(0, "span"), h(1, "Mobile must be at least 3 characters long."), c());
}
function RA(n, i) {
  n & 1 && (l(0, "span"), h(1, "Mobile must contain only numbers."), c());
}
function FA(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 67),
      A(1, IA, 2, 0, "span", 68)(2, AA, 2, 0, "span", 68)(
        3,
        RA,
        2,
        0,
        "span",
        68
      ),
      c()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o = x();
    m(),
      y(
        "ngIf",
        (e = o.useForm.get("mobile")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = o.useForm.get("mobile")) == null || t.errors == null
          ? null
          : t.errors.minlength
      ),
      m(),
      y(
        "ngIf",
        (r = o.useForm.get("mobile")) == null || r.errors == null
          ? null
          : r.errors.pattern
      );
  }
}
function NA(n, i) {
  if (n & 1) {
    let e = oe();
    Le(0),
      l(1, "button", 70),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.onUpdate());
      }),
      h(2, " Edit "),
      c(),
      Ve();
  }
  if (n & 2) {
    let e = x();
    m(), y("disabled", !e.isCustomerNameChanged());
  }
}
function LA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 66),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.onSave());
      }),
      h(1, " save "),
      c();
  }
  if (n & 2) {
    let e = x();
    ce("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
var Zd = class n {
  constructor(i, e) {
    this.modalService = i;
    this.cdRef = e;
    this.initializeForm();
  }
  totalCustomer = pe(0);
  customerList = pe([]);
  dealerList = pe([]);
  masterSrv = W(Xe);
  toastr = W(fi);
  previousEmail = "";
  useForm = new Rt({});
  customerObj = new _l();
  dealerObj = new yr();
  isEditMode = !1;
  previousValue = "";
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  ngOnInit() {
    this.initializeForm(),
      this.loadCustomers(),
      this.loadDealers(),
      this.getAllCustomer();
  }
  isModalVisible = !1;
  initializeForm() {
    this.useForm = new Rt({
      account_type: new ot("", [Fe.required]),
      fname: new ot("", [Fe.required, Fe.minLength(3)]),
      lname: new ot("", [Fe.required, Fe.minLength(3)]),
      email: new ot("", [Fe.required, Fe.email]),
      phone: new ot("", [Fe.required, Fe.pattern(/^\d+$/)]),
      mobile: new ot("", [Fe.required, Fe.pattern(/^\d+$/)]),
      dealer_code: new ot("", [Fe.required]),
    });
  }
  openModal(i) {
    (this.isEditMode = !1),
      console.log("hello openmodal", i),
      this.useForm.reset(),
      (this.isModalVisible = !0),
      i
        ? (console.log("\u{1F680} Customer Data:", i),
          (this.customerObj = G({}, i)),
          (this.previousValue = i.account_name || ""),
          this.useForm.patchValue({
            account_type: i.account_type || "",
            fname: i.fname || "",
            lname: i.lname || "",
            email: i.email || "",
            phone: i.phone || "",
            mobile: i.mobile || "",
            dealer_code: i.dealer_code || "",
          }),
          (this.previousEmail = i.email || ""),
          console.log("Edit Mode: Customer Object ->", this.customerObj))
        : ((this.customerObj = new _l()),
          (this.customerObj.account_id = ""),
          console.log(
            "New Customer Mode: Reset customerObj",
            this.customerObj
          ));
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalVisible = !1);
  }
  isEmailChange() {
    return this.useForm.value.email !== this.previousValue;
  }
  loadCustomers() {
    this.masterSrv.getAllCustomer().subscribe(
      (i) => {
        console.log("Fetched Accounts:", i),
          this.customerList.set(i.data.rows),
          this.totalCustomer.set(i.data.count);
      },
      (i) => {
        console.error("Error fetching customers:", i),
          this.toastr.error("Failed to load customers", "Error");
      }
    );
  }
  getDealerCode(i) {
    let e = this.dealerList().find((t) => t.dealer_id === i);
    return console.log(this.dealerList), e?.dealer_code?.toString() ?? "N/A";
  }
  onDealerChange() {
    console.log("on dealer chnage func called "),
      console.log("\u{1F4DD} Dealer List:", this.dealerList());
    let i = this.dealerList().find(
      (e) => e.dealer_id === this.customerObj.dealer_id
    );
    console.log("Selected Dealer:", i),
      i &&
        ((this.customerObj.dealer_code = i.dealer_code),
        this.useForm.patchValue({ dealer_code: i.dealer_code }));
  }
  loadDealers() {
    this.masterSrv.getAllDealer().subscribe(
      (i) => {
        this.dealerList.set(i.data.dealer.rows), console.log(i);
      },
      (i) => {
        this.toastr.error("Serverside Error", "Error");
      }
    );
  }
  createCustomer() {
    console.log("create cust called "),
      console.log("\u{1F6E0} Submitting customer data:", this.customerObj),
      console.log("\u{1F6E0} createCustomer() triggered!"),
      this.masterSrv.createCustomer(this.customerObj).subscribe(
        (i) => {
          this.toastr.success("Customerrr created successfully!", "Success"),
            this.getAllCustomer();
        },
        (i) => {
          this.toastr.error("Error creating dealer", "Error");
        }
      );
  }
  selectedCustomerForDeletion = null;
  selectCustomerForDeletion(i) {
    this.selectedCustomerForDeletion = i;
  }
  deleteCustomerId() {
    console.log(
      "this is the select user",
      this.selectCustomerForDeletion,
      this.selectedCustomerForDeletion
    ),
      this.selectedCustomerForDeletion &&
      this.selectedCustomerForDeletion.account_id
        ? this.masterSrv
            .deleteCustomer(this.selectedCustomerForDeletion.account_id)
            .subscribe(
              (i) => {
                this.toastr.success("Accounts deleted successfully", "Success"),
                  this.getAllCustomer(),
                  $("#deleteModal").modal("hide"),
                  $(".modal-backdrop").remove(),
                  $("body").removeClass("modal-open");
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No accounts selected for deletion");
  }
  onUpdate() {
    console.log("onupdate called "),
      this.useForm.valid
        ? ((this.customerObj = G(G({}, this.customerObj), this.useForm.value)),
          console.log(
            "\u{1F680} Updated Payload before API call:",
            this.customerObj
          ),
          this.masterSrv.updateCustomer(this.customerObj).subscribe(
            (i) => {
              console.log("\u2705 API Response:", i),
                i.status === 200
                  ? (this.toastr.success(i.message, "Success"),
                    setTimeout(() => {
                      this.getAllCustomer();
                    }, 500))
                  : this.toastr.error(
                      "Update failed, no data received",
                      "Error"
                    );
            },
            (i) => {
              console.error("\u274C API Error:", i),
                this.toastr.error("Failed to update customer", "Error");
            }
          ))
        : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  getAllCustomer() {
    this.masterSrv.getAllCustomer().subscribe(
      (i) => {
        console.log("Fetched Customers:", i),
          console.log("customer list updated:", i.data.rows),
          this.customerList.set(i.data.rows),
          this.totalCustomer.set(i.data.count);
      },
      (i) => {
        this.toastr.error("Error fetching dealers", "Error");
      }
    );
  }
  onEdit(i) {
    console.log("Edit button clicked. Dealer ID:", i),
      (this.isEditMode = !0),
      this.masterSrv.getCustomerById(i).subscribe(
        (e) => {
          if ((console.log("API Response:", e), e?.data)) {
            let t = e.data;
            (this.customerObj = Te(G({}, t), {
              dealer_code: Number(t.dealer_code),
            })),
              this.useForm.patchValue({
                dealer_code: Number(t.dealer_code),
                dealer_name: t.account_name || "",
                account_type: t.account_type || "",
                fname: t.fname || "",
                lname: t.lname || "",
                email: t.email || "",
                phone: t.phone || "",
                mobile: t.mobile || "",
                account_id: t.account_id || "",
              }),
              console.log("Dealer data set, opening modal..."),
              setTimeout(() => {
                $("#exampleModalCenter").modal("show");
              }, 0);
          } else
            console.error("Dealer data is missing in response:", e),
              this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          console.error("Error fetching dealer details:", e),
            this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isCustomerNameChanged() {
    return this.useForm.value.name !== this.previousValue;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let i = this.useForm.value;
    console.log("Form Data being sent to API:", i),
      this.masterSrv.createCustomer(i).subscribe({
        next: () => {
          this.toastr.success("Accounts created successfully!", "Success"),
            this.getAllCustomer(),
            this.closeModal();
        },
        error: (e) => {
          console.error("Accounts creation error:", e),
            this.toastr.error(
              e.message || "Failed to create user",
              "Creation Error"
            );
        },
      });
  }
  createNewCustomer() {
    this.masterSrv.createCustomer(this.customerObj).subscribe(
      (i) => {
        this.toastr.success("customer created successfully!", "Success"),
          this.getAllCustomer();
      },
      (i) => {
        this.toastr.error("Error creating dealer", "Error");
      }
    );
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Jn), j(Qe));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-customer"]],
    standalone: !0,
    features: [le],
    decls: 109,
    vars: 36,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-md-4", "col-sm-4", "mb-4", "mb-xl-0"],
      [
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "col-sm-4", "col-md-4", "mb-4", "mb-xl-0"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [1, "row"],
      [1, "col-lg-12"],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-lg",
        "custom-modal",
      ],
      [1, "modal-dialog", "modal-lg"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", 2, "align-items", "center", "margin-inline", "auto"],
      ["type", "button", "data-dismiss", "modal", 1, "close"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "form-group", "col-md-6"],
      ["for", "account_type", 1, "form-label"],
      [
        "formControlName",
        "account_type",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "Individual"],
      ["value", "Corporate"],
      ["value", "Retailer"],
      ["class", "text-danger", 4, "ngIf"],
      ["for", "fname", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "First Name",
        "formControlName",
        "fname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "name", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Last Name",
        "formControlName",
        "lname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_code", 1, "form-label"],
      [
        "id",
        "dealer_code",
        "formControlName",
        "dealer_code",
        1,
        "form-select",
        "form-control",
        "form-control-lg",
        3,
        "change",
        "disabled",
        "ngClass",
      ],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "email", 1, "form-label"],
      [
        "type",
        "email",
        "placeholder",
        "E-mail",
        "formControlName",
        "email",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "phone", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Phone",
        "formControlName",
        "phone",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "mobile", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Mobile",
        "formControlName",
        "mobile",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      ["colspan", "6", 1, "text-center"],
      [4, "ngFor", "ngForOf"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-toggle",
        "modal",
        "data-target",
        ".bd-example-modal-sm",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-sm",
      ],
      [1, "modal-dialog", "modal-sm"],
      [1, "modal-header", "text-center", 2, "margin-inline", "auto"],
      [1, "modal-title", "text-center"],
      [1, "modal-body"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      [1, "text-danger"],
      [4, "ngIf"],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      if (e & 1) {
        let r = oe();
        l(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
          h(6, "Utils"),
          c()(),
          l(7, "li", 7)(8, "a", 8),
          h(9, "Accounts"),
          c()()()(),
          l(10, "div", 9)(11, "div", 10)(12, "a", 11),
          R("click", function () {
            return O(r), k(t.openModal(t.customerObj));
          }),
          U(13, "i", 12),
          h(14, "Add Account"),
          c()(),
          l(15, "div", 13)(16, "div", 14)(17, "p", 15),
          h(18, "Total Account"),
          c(),
          l(19, "h3", 16),
          h(20),
          c()()()(),
          l(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "table", 20)(
            25,
            "thead"
          )(26, "tr")(27, "th"),
          h(28, "Sr No"),
          c(),
          l(29, "th"),
          h(30, "Account Name"),
          c(),
          l(31, "th"),
          h(32, "Last Name"),
          c(),
          l(33, "th"),
          h(34, "E-mail"),
          c(),
          l(35, "th"),
          h(36, "Phone"),
          c(),
          l(37, "th"),
          h(38, "Action"),
          c()()(),
          l(39, "tbody"),
          A(40, hA, 4, 0, "tr")(41, mA, 1, 1, "tr"),
          c()()()()()()(),
          l(42, "div", 21)(43, "div", 22)(44, "div", 23)(45, "div", 24)(
            46,
            "h5",
            25
          ),
          h(47, " Add New Account "),
          c(),
          l(48, "button", 26)(49, "span", 27),
          h(50, "\xD7"),
          c()()(),
          l(51, "div", 28)(52, "div", 17)(53, "div", 29)(54, "label", 30),
          h(55, "Account Type"),
          c(),
          l(56, "select", 31)(57, "option", 32),
          h(58, "Select Account Type"),
          c(),
          l(59, "option", 33),
          h(60, "Individual"),
          c(),
          l(61, "option", 34),
          h(62, "Corporate"),
          c(),
          l(63, "option", 35),
          h(64, "Retailer"),
          c()(),
          A(65, fA, 3, 0, "div", 36),
          c(),
          l(66, "div", 29)(67, "label", 37),
          h(68, "First Name"),
          c(),
          U(69, "input", 38),
          A(70, bA, 3, 2, "div", 36),
          c()(),
          l(71, "div", 17)(72, "div", 29)(73, "label", 39),
          h(74, "Last Name"),
          c(),
          U(75, "input", 40),
          A(76, xA, 3, 2, "div", 36),
          c(),
          l(77, "div", 29)(78, "label", 41),
          h(79, "Dealer Code"),
          c(),
          l(80, "select", 42),
          R("change", function () {
            return O(r), k(t.onDealerChange());
          }),
          l(81, "option", 32),
          h(82, "Select Dealer"),
          c(),
          A(83, CA, 2, 2, "option", 43)(84, wA, 2, 2, "option", 43),
          c(),
          A(85, SA, 3, 0, "div", 36),
          c()(),
          l(86, "div", 17)(87, "div", 29)(88, "label", 44),
          h(89, "E-mail"),
          c(),
          U(90, "input", 45),
          A(91, TA, 3, 2, "div", 36),
          c(),
          l(92, "div", 29)(93, "label", 46),
          h(94, "Phone"),
          c(),
          U(95, "input", 47),
          A(96, PA, 4, 3, "div", 36),
          c()(),
          l(97, "div", 17)(98, "div", 29)(99, "label", 48),
          h(100, "Mobile"),
          c(),
          U(101, "input", 49),
          A(102, FA, 4, 3, "div", 36),
          c()()(),
          l(103, "div", 50),
          A(104, NA, 3, 1, "ng-container", 51),
          l(105, "button", 52),
          R("click", function () {
            return O(r), k(t.closeModal());
          }),
          h(106, " Close "),
          c(),
          A(107, LA, 2, 1, "ng-template", null, 0, bt),
          c()()()();
      }
      if (e & 2) {
        let r,
          o,
          a,
          d,
          u,
          f,
          v,
          S,
          T,
          M,
          I,
          L,
          E,
          F,
          ee,
          re = ut(108);
        m(20),
          Z(" ", t.totalCustomer(), " "),
          m(20),
          Cn(t.customerList().length === 0 ? 40 : 41),
          m(11),
          y("formGroup", t.useForm),
          m(5),
          y(
            "ngClass",
            de(
              22,
              Io,
              ((r = t.useForm.get("account_type")) == null
                ? null
                : r.touched) &&
                ((r = t.useForm.get("account_type")) == null ? null : r.invalid)
            )
          ),
          m(9),
          y(
            "ngIf",
            ((o = t.useForm.get("account_type")) == null ? null : o.touched) &&
              ((o = t.useForm.get("account_type")) == null ? null : o.invalid)
          ),
          m(4),
          y(
            "ngClass",
            de(
              24,
              Io,
              ((a = t.useForm.get("fname")) == null ? null : a.touched) &&
                ((a = t.useForm.get("fname")) == null ? null : a.invalid)
            )
          ),
          m(),
          y(
            "ngIf",
            ((d = t.useForm.get("fname")) == null ? null : d.touched) &&
              ((d = t.useForm.get("fname")) == null ? null : d.invalid)
          ),
          m(5),
          y(
            "ngClass",
            de(
              26,
              Io,
              ((u = t.useForm.get("lname")) == null ? null : u.touched) &&
                ((u = t.useForm.get("lname")) == null ? null : u.invalid)
            )
          ),
          m(),
          y(
            "ngIf",
            ((f = t.useForm.get("lname")) == null ? null : f.touched) &&
              ((f = t.useForm.get("lname")) == null ? null : f.invalid)
          ),
          m(4),
          y(
            "disabled",
            (v = t.useForm.get("account_id")) == null ? null : v.value
          )(
            "ngClass",
            de(
              28,
              Io,
              ((S = t.useForm.get("dealer_code")) == null ? null : S.touched) &&
                ((S = t.useForm.get("dealer_code")) == null ? null : S.invalid)
            )
          ),
          m(3),
          y("ngForOf", t.dealerList()),
          m(),
          y("ngForOf", t.staticDealerList),
          m(),
          y(
            "ngIf",
            ((T = t.useForm.get("dealer_code")) == null ? null : T.touched) &&
              ((T = t.useForm.get("dealer_code")) == null ? null : T.invalid)
          ),
          m(5),
          y(
            "ngClass",
            de(
              30,
              Io,
              ((M = t.useForm.get("email")) == null ? null : M.touched) &&
                ((M = t.useForm.get("email")) == null ? null : M.invalid)
            )
          ),
          m(),
          y(
            "ngIf",
            ((I = t.useForm.get("email")) == null ? null : I.touched) &&
              ((I = t.useForm.get("email")) == null ? null : I.invalid)
          ),
          m(4),
          y(
            "ngClass",
            de(
              32,
              Io,
              ((L = t.useForm.get("phone")) == null ? null : L.touched) &&
                ((L = t.useForm.get("phone")) == null ? null : L.invalid)
            )
          ),
          m(),
          y(
            "ngIf",
            ((E = t.useForm.get("phone")) == null ? null : E.touched) &&
              ((E = t.useForm.get("phone")) == null ? null : E.invalid)
          ),
          m(5),
          y(
            "ngClass",
            de(
              34,
              Io,
              ((F = t.useForm.get("mobile")) == null ? null : F.touched) &&
                ((F = t.useForm.get("mobile")) == null ? null : F.invalid)
            )
          ),
          m(),
          y(
            "ngIf",
            ((ee = t.useForm.get("mobile")) == null ? null : ee.touched) &&
              ((ee = t.useForm.get("mobile")) == null ? null : ee.invalid)
          ),
          m(2),
          y("ngIf", t.customerObj.account_id)("ngIfElse", re);
      }
    },
    dependencies: [
      Ae,
      It,
      At,
      We,
      Di,
      ni,
      ri,
      Wt,
      Si,
      ii,
      Bi,
      tt,
      Gd,
      ko,
      zd,
      Ud,
      hn,
      Xi,
      Zi,
      fy,
      _y,
      Li,
      Jn,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:350px;padding:20px;flex-grow:1}",
    ],
  });
};
var yy = kx(vy());
var VA = () => ["/Admin/dealer"],
  BA = (n) => ["/Admin/single-task", n];
function jA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 11)(1, "div", 19)(2, "div", 29)(3, "div", 30)(4, "p", 31),
      h(5),
      c(),
      l(6, "h4", 32),
      h(7, " Dealer Code : "),
      l(8, "span", 33),
      h(9),
      c()()()()(),
      l(10, "div", 19)(11, "div", 34),
      R("click", function () {
        O(e);
        let r = x();
        return (
          r.toggleUsersTable(),
          k(r.getAllUser(r.dealerData.data.dealer.dealer_code))
        );
      }),
      l(12, "div", 30)(13, "p", 31),
      h(14, "Total Users"),
      c(),
      l(15, "h4", 32)(16, "span", 33),
      h(17),
      c(),
      h(18, " User "),
      c()()()(),
      l(19, "div", 19)(20, "div", 35),
      R("click", function () {
        O(e);
        let r = x();
        return (
          r.toggleOpportunityTable(),
          k(r.getAllOpp(r.dealerData.data.dealer.dealer_id))
        );
      }),
      l(21, "p", 31),
      h(22, "Total Opportunities"),
      c(),
      l(23, "h4", 32)(24, "span", 33),
      h(25),
      c(),
      h(26, " Opportunities "),
      c()()(),
      l(27, "div", 19)(28, "div", 34),
      R("click", function () {
        O(e);
        let r = x();
        return (
          r.toggleLeadsTable(),
          k(r.getAllLeads(r.dealerData.data.dealer.dealer_id))
        );
      }),
      l(29, "div", 30)(30, "p", 31),
      h(31, "Total Lead"),
      c(),
      l(32, "h4", 32)(33, "span", 33),
      h(34),
      c(),
      h(35, " Lead "),
      c()()()(),
      l(36, "div", 19)(37, "div", 34),
      R("click", function () {
        O(e);
        let r = x();
        return (
          r.toggleTasksTable(),
          k(r.getAllTasks(r.dealerData.data.dealer.dealer_id))
        );
      }),
      l(38, "div", 30)(39, "p", 31),
      h(40, "Total Tasks"),
      c(),
      l(41, "h4", 32)(42, "span", 33),
      h(43),
      c(),
      h(44, " Tasks "),
      c()()()(),
      l(45, "div", 19)(46, "div", 34),
      R("click", function () {
        O(e);
        let r = x();
        return (
          r.toggleEventTable(),
          k(r.getAllEvent(r.dealerData.data.dealer.dealer_id))
        );
      }),
      l(47, "div", 30)(48, "p", 31),
      h(49, "Total Events"),
      c(),
      l(50, "h4", 32)(51, "span", 33),
      h(52),
      c(),
      h(53, " Events "),
      c()()()()();
  }
  if (n & 2) {
    let e = x();
    m(5),
      Z(" ", e.dealerData.data.dealer.dealer_name, " "),
      m(4),
      B(e.dealerData.data.dealer.dealer_code),
      m(8),
      B(e.dealerData.data.users),
      m(8),
      B(e.dealerData.data.opportunities),
      m(9),
      B(e.dealerData.data.leads),
      m(9),
      B(e.dealerData.data.tasks),
      m(9),
      Z("", e.dealerData.data.events, " ");
  }
}
function HA(n, i) {
  n & 1 &&
    (l(0, "tr")(1, "td", 52)(2, "p", 53), h(3, " No Users Found "), c()()());
}
function UA(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr")(1, "td", 49),
      h(2),
      c(),
      l(3, "td", 49),
      h(4),
      c(),
      l(5, "td", 49),
      h(6),
      c(),
      l(7, "td", 49),
      h(8),
      c(),
      l(9, "td", 49),
      h(10),
      c(),
      l(11, "td", 49),
      h(12),
      c(),
      l(13, "td", 49),
      h(14),
      c()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x(3);
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.user_account_id || "N/A"),
      m(2),
      B(e.name || "N/A"),
      m(2),
      B(e.email || "N/A"),
      m(2),
      B(e.phone || "N/A"),
      m(2),
      B(e.user_role || "N/A"),
      m(2),
      B(e.dealer_code || "N/A");
  }
}
function zA(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 47)(1, "table", 48)(2, "thead")(3, "tr")(4, "th", 49),
      h(5, "Sr No"),
      c(),
      l(6, "th", 49),
      h(7, "Account ID"),
      c(),
      l(8, "th", 49),
      h(9, "Name"),
      c(),
      l(10, "th", 49),
      h(11, "Email"),
      c(),
      l(12, "th", 49),
      h(13, "Phone"),
      c(),
      l(14, "th", 49),
      h(15, "Role"),
      c(),
      l(16, "th", 49),
      h(17, "Dealer Code"),
      c()()(),
      l(18, "tbody"),
      A(19, HA, 4, 0, "tr", 50)(20, UA, 15, 7, "tr", 51),
      c()()()),
    n & 2)
  ) {
    let e = x(2);
    m(19),
      y("ngIf", !e.paginatedUsers || e.paginatedUsers.length === 0),
      m(),
      y("ngForOf", e.paginatedUsers);
  }
}
function $A(n, i) {
  if ((n & 1 && (Le(0), h(1), Ve()), n & 2)) {
    let e = x(2);
    m(),
      Fi(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalUsers,
        " entries "
      );
  }
}
function WA(n, i) {
  n & 1 && h(0, " No entries available ");
}
function GA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "li", 44)(1, "button", 45),
      R("click", function () {
        let r = O(e).$implicit,
          o = x(2);
        return k(o.goToPage(r));
      }),
      h(2),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(2);
    ne("active", e === t.currentPage)(
      "disabled",
      !t.hasDataForPage(e) || t.totalUsers === 0
    ),
      m(),
      y("disabled", !t.hasDataForPage(e) || t.totalUsers === 0),
      m(),
      Z(" ", e, " ");
  }
}
function YA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 36),
      A(1, zA, 21, 2, "div", 37),
      l(2, "div", 38)(3, "div", 39)(4, "p", 40),
      A(5, $A, 2, 3, "ng-container", 41)(
        6,
        WA,
        1,
        0,
        "ng-template",
        null,
        0,
        bt
      ),
      c()(),
      l(8, "div", 39)(9, "nav", 42)(10, "ul", 43)(11, "li", 44)(
        12,
        "button",
        45
      ),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.goToPreviousPage());
      }),
      h(13, " Previous "),
      c()(),
      A(14, GA, 3, 6, "li", 46),
      l(15, "li", 44)(16, "button", 45),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.goToNextPage());
      }),
      h(17, " Next "),
      c()()()()()()();
  }
  if (n & 2) {
    let e = ut(7),
      t = x();
    m(),
      y("ngIf", t.selectedOption() === "users"),
      m(4),
      y(
        "ngIf",
        t.totalUsers > 0 && (t.currentPage - 1) * t.itemsPerPage < t.totalUsers
      )("ngIfElse", e),
      m(6),
      ne("disabled", t.currentPage === 1 || t.totalUsers === 0),
      m(),
      y("disabled", t.currentPage === 1 || t.totalUsers === 0),
      m(2),
      y("ngForOf", t.visiblePageNumbers),
      m(),
      ne("disabled", t.currentPage === t.totalPages || t.totalUsers === 0),
      m(),
      y("disabled", t.currentPage === t.totalPages || t.totalUsers === 0);
  }
}
function qA(n, i) {
  n & 1 &&
    (l(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Users Found "), c()()());
}
function KA(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr", 49)(1, "td"),
      h(2),
      c(),
      l(3, "td"),
      h(4),
      c(),
      l(5, "td"),
      h(6),
      c(),
      l(7, "td"),
      h(8),
      c(),
      l(9, "td"),
      h(10),
      c(),
      l(11, "td"),
      h(12),
      c(),
      l(13, "td"),
      h(14),
      c(),
      l(15, "td"),
      h(16),
      c(),
      l(17, "td"),
      h(18),
      c(),
      l(19, "td"),
      h(20),
      c(),
      l(21, "td"),
      h(22),
      c(),
      l(23, "td"),
      h(24),
      c()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x(2);
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.lead_code || "N/A"),
      m(2),
      B(e.dealer_name || "N/A"),
      m(2),
      B(e.status || "N/A"),
      m(2),
      B(e.purchase_type || "N/A"),
      m(2),
      B(e.type || "N/A"),
      m(2),
      B(e.sub_type || "N/A"),
      m(2),
      B(e.brand || "N/A"),
      m(2),
      B(e.PMI || "N/A"),
      m(2),
      B(e.lead_source || "N/A"),
      m(2),
      B(e.lname || "N/A"),
      m(2),
      B(e.mobile || "N/A");
  }
}
function QA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "li", 44)(1, "button", 45),
      R("click", function () {
        let r = O(e).$implicit,
          o = x(2);
        return k(o.goToLeadPage(r));
      }),
      h(2),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(2);
    ne("active", e === t.currentPage)("disabled", t.totalLeads === 0),
      m(),
      y("disabled", t.totalLeads === 0),
      m(),
      Z(" ", e, " ");
  }
}
function XA(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(
      5,
      "th",
      49
    ),
      h(6, "Sr No"),
      c(),
      l(7, "th", 49),
      h(8, "Lead"),
      U(9, "br"),
      h(10, " Code"),
      c(),
      l(11, "th", 49),
      h(12, "Dealer "),
      U(13, "br"),
      h(14, "Name"),
      c(),
      l(15, "th", 49),
      h(16, "Status"),
      c(),
      l(17, "th", 49),
      h(18, "Purchase "),
      U(19, "br"),
      h(20, " Type"),
      c(),
      l(21, "th", 49),
      h(22, "Type"),
      c(),
      l(23, "th", 49),
      h(24, "Sub "),
      U(25, "br"),
      h(26, "Type"),
      c(),
      l(27, "th", 49),
      h(28, "Brand"),
      c(),
      l(29, "th", 49),
      h(30, "PMI"),
      c(),
      l(31, "th", 49),
      h(32, "Lead"),
      U(33, "br"),
      h(34, " Source"),
      c(),
      l(35, "th", 49),
      h(36, "Last"),
      U(37, "br"),
      h(38, " Name"),
      c(),
      l(39, "th", 49),
      h(40, "Mobile"),
      c()()(),
      l(41, "tbody"),
      A(42, qA, 4, 0, "tr", 50)(43, KA, 25, 12, "tr", 56),
      c()()(),
      l(44, "div", 38)(45, "div", 39)(46, "p", 40),
      h(47),
      c()(),
      l(48, "div", 39)(49, "nav", 42)(50, "ul", 43)(51, "li", 44)(
        52,
        "button",
        45
      ),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.goToPreviousLeadPage());
      }),
      h(53, " Previous "),
      c()(),
      A(54, QA, 3, 6, "li", 46),
      l(55, "li", 44)(56, "button", 45),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.goToNextLeadPage());
      }),
      h(57, " Next "),
      c()()()()()()();
  }
  if (n & 2) {
    let e = x();
    m(42),
      y("ngIf", !e.paginatedLeads || e.paginatedLeads.length === 0),
      m(),
      y("ngForOf", e.paginatedLeads),
      m(4),
      Fi(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalLeads,
        " entries "
      ),
      m(4),
      ne("disabled", e.currentPage === 1 || e.totalLeads === 0),
      m(),
      y("disabled", e.currentPage === 1 || e.totalLeads === 0),
      m(2),
      y("ngForOf", e.visiblePageNumbers),
      m(),
      ne("disabled", e.currentPage === e.totalPages || e.totalLeads === 0),
      m(),
      y("disabled", e.currentPage === e.totalPages || e.totalLeads === 0);
  }
}
function ZA(n, i) {
  n & 1 &&
    (l(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Users Found "), c()()());
}
function JA(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr", 49)(1, "td"),
      h(2),
      c(),
      l(3, "td"),
      h(4),
      c(),
      l(5, "td"),
      h(6),
      c(),
      l(7, "td"),
      h(8),
      c(),
      l(9, "td"),
      h(10),
      c(),
      l(11, "td"),
      h(12),
      c(),
      l(13, "td"),
      h(14),
      c(),
      l(15, "td"),
      h(16),
      c(),
      l(17, "td"),
      h(18),
      c(),
      l(19, "td"),
      h(20),
      c(),
      l(21, "td"),
      h(22),
      c(),
      l(23, "td"),
      h(24),
      c(),
      l(25, "td"),
      h(26),
      c()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x(2);
    m(2),
      B((r.currentOpportunityPage - 1) * r.opportunityItemsPerPage + t + 1),
      m(2),
      Z(" ", e.opportunity_name, " "),
      m(2),
      Z(" ", e.stage, " "),
      m(2),
      Z(" ", e.opportunity_record_type, " "),
      m(2),
      Z(" ", e.account_name, " "),
      m(2),
      Z(" ", e.close_date, " "),
      m(2),
      Z(" ", e.VIN, " "),
      m(2),
      Z(" ", e.purchase_type, " "),
      m(2),
      Z(" ", e.type, " "),
      m(2),
      Z(" ", e.sub_type, " "),
      m(2),
      Z(" ", e.brand, " "),
      m(2),
      Z(" ", e.PMI, " "),
      m(2),
      Z(" ", e.description, " ");
  }
}
function eR(n, i) {
  if ((n & 1 && (l(0, "p", 40), h(1), c()), n & 2)) {
    let e = x(2);
    m(),
      Fi(
        " Showing ",
        (e.currentOpportunityPage - 1) * e.opportunityItemsPerPage + 1,
        " \u2013 ",
        e.getOpportunityRangeEnd(),
        " of ",
        e.totalOpportunities,
        " entries "
      );
  }
}
function tR(n, i) {
  n & 1 && (l(0, "p", 40), h(1, " No entries available "), c());
}
function iR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "li", 44)(1, "button", 45),
      R("click", function () {
        let r = O(e).$implicit,
          o = x(2);
        return k(o.goToOpportunityPage(r));
      }),
      h(2),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(2);
    ne("active", e === t.currentOpportunityPage)(
      "disabled",
      t.totalOpportunities === 0
    ),
      m(),
      y("disabled", t.totalOpportunities === 0),
      m(),
      Z(" ", e, " ");
  }
}
function nR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
      5,
      "th"
    ),
      h(6, "Sr No"),
      c(),
      l(7, "th"),
      h(8, "Opportunity "),
      U(9, "br"),
      h(10, "Name"),
      c(),
      l(11, "th"),
      h(12, "stage"),
      c(),
      l(13, "th"),
      h(14, "Opportunities "),
      U(15, "br"),
      h(16, "Record"),
      c(),
      l(17, "th"),
      h(18, "account"),
      U(19, "br"),
      h(20, " Name"),
      c(),
      l(21, "th"),
      h(22, "close "),
      U(23, "br"),
      h(24, "Date"),
      c(),
      l(25, "th"),
      h(26, "Opportunity "),
      U(27, "br"),
      h(28, "Currency"),
      c(),
      l(29, "th"),
      h(30, "VIN"),
      c(),
      l(31, "th"),
      h(32, "Purchase"),
      U(33, "br"),
      h(34, " Type"),
      c(),
      l(35, "th"),
      h(36, "Sub"),
      U(37, "br"),
      h(38, " Type"),
      c(),
      l(39, "th"),
      h(40, "Brand"),
      c(),
      l(41, "th"),
      h(42, "PMI"),
      c()()(),
      l(43, "tbody"),
      A(44, ZA, 4, 0, "tr", 50)(45, JA, 27, 13, "tr", 58),
      c()()(),
      l(46, "div", 38)(47, "div", 39),
      A(48, eR, 2, 3, "p", 59)(49, tR, 2, 0, "p", 59),
      c(),
      l(50, "div", 39)(51, "nav", 42)(52, "ul", 43)(53, "li", 44)(
        54,
        "button",
        45
      ),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.goToPreviousOpportunityPage());
      }),
      h(55, " Previous "),
      c()(),
      A(56, iR, 3, 6, "li", 46),
      l(57, "li", 44)(58, "button", 45),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.goToNextOpportunityPage());
      }),
      h(59, " Next "),
      c()()()()()()();
  }
  if (n & 2) {
    let e = x();
    m(44),
      y("ngIf", !e.OpportunityList || e.OpportunityList.length === 0),
      m(),
      y("ngForOf", e.paginatedOpportunities),
      m(3),
      y("ngIf", e.totalOpportunities > 0),
      m(),
      y("ngIf", e.totalOpportunities === 0),
      m(4),
      ne(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      m(),
      y(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      m(2),
      y("ngForOf", e.visibleOpportunityPageNumbers),
      m(),
      ne(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      ),
      m(),
      y(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      );
  }
}
function rR(n, i) {
  n & 1 &&
    (l(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Users Found "), c()()());
}
function oR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "tr", 49)(1, "td"),
      h(2),
      c(),
      l(3, "td"),
      h(4),
      c(),
      l(5, "td"),
      h(6),
      c(),
      l(7, "td"),
      h(8),
      c(),
      l(9, "td"),
      h(10),
      c(),
      l(11, "td"),
      h(12),
      c(),
      l(13, "td"),
      h(14),
      c(),
      l(15, "td"),
      h(16),
      c(),
      l(17, "td"),
      h(18),
      c(),
      l(19, "td"),
      h(20),
      c(),
      l(21, "td")(22, "a", 60),
      R("click", function () {
        let r = O(e).$implicit;
        return k(r.task_id);
      }),
      l(23, "span", 61),
      U(24, "i", 62),
      c()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x(2);
    m(2),
      B((r.currentTaskPage - 1) * r.taskItemsPerPage + t + 1),
      m(2),
      Z(" ", e.subject, " "),
      m(2),
      Z(" ", e.status, " "),
      m(2),
      Z(" ", e.priority, " "),
      m(2),
      Z(" ", e.assigned_to, " "),
      m(2),
      Z(" ", e.due_date, " "),
      m(2),
      Z(" ", e.comments, " "),
      m(2),
      Z(" ", e.lead_name, " "),
      m(2),
      Z(" ", e.lead_email, " "),
      m(2),
      Z(" ", e.lead_code, " "),
      m(2),
      y("routerLink", de(11, BA, e.task_id));
  }
}
function aR(n, i) {
  if ((n & 1 && (l(0, "p", 40), h(1), c()), n & 2)) {
    let e = x(2);
    m(),
      Fi(
        " Showing ",
        (e.currentTaskPage - 1) * e.taskItemsPerPage + 1,
        " \u2013 ",
        e.getTaskRangeEnd(),
        " of ",
        e.totalTasks,
        " entries "
      );
  }
}
function sR(n, i) {
  n & 1 && (l(0, "p", 40), h(1, " No entries available "), c());
}
function lR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "li", 44)(1, "button", 45),
      R("click", function () {
        let r = O(e).$implicit,
          o = x(2);
        return k(o.goToTaskPage(r));
      }),
      h(2),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(2);
    ne("active", e === t.currentTaskPage)("disabled", t.totalTasks === 0),
      m(),
      y("disabled", t.totalTasks === 0),
      m(),
      Z(" ", e, " ");
  }
}
function cR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
      5,
      "th"
    ),
      h(6, "Sr No"),
      c(),
      l(7, "th"),
      h(8, "Subject"),
      c(),
      l(9, "th"),
      h(10, "Status"),
      c(),
      l(11, "th"),
      h(12, "Priority"),
      c(),
      l(13, "th"),
      h(14, "Assigned"),
      c(),
      l(15, "th"),
      h(16, "Due Date"),
      c(),
      l(17, "th"),
      h(18, "Comments"),
      c(),
      l(19, "th"),
      h(20, "Lead Name"),
      c(),
      l(21, "th"),
      h(22, "Actions"),
      c()()(),
      l(23, "tbody"),
      A(24, rR, 4, 0, "tr", 50)(25, oR, 25, 13, "tr", 58),
      c()()(),
      l(26, "div", 38)(27, "div", 39),
      A(28, aR, 2, 3, "p", 59)(29, sR, 2, 0, "p", 59),
      c(),
      l(30, "div", 39)(31, "nav", 42)(32, "ul", 43)(33, "li", 44)(
        34,
        "button",
        45
      ),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.goToPreviousTaskPage());
      }),
      h(35, " Previous "),
      c()(),
      A(36, lR, 3, 6, "li", 46),
      l(37, "li", 44)(38, "button", 45),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.goToNextTaskPage());
      }),
      h(39, " Next "),
      c()()()()()()();
  }
  if (n & 2) {
    let e = x();
    m(24),
      y("ngIf", !e.paginatedTasks || e.paginatedTasks.length === 0),
      m(),
      y("ngForOf", e.paginatedTasks),
      m(3),
      y("ngIf", e.totalTasks > 0),
      m(),
      y("ngIf", e.totalOpportunities === 0),
      m(4),
      ne("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      m(),
      y("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      m(2),
      y("ngForOf", e.visibleOpportunityPageNumbers),
      m(),
      ne(
        "disabled",
        e.currentTaskPage === e.totalTaskPages || e.totalTasks === 0
      ),
      m(),
      y(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalTasks === 0
      );
  }
}
function dR(n, i) {
  n & 1 &&
    (l(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Events Found "), c()()());
}
function uR(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr", 49)(1, "td"),
      h(2),
      c(),
      l(3, "td"),
      h(4),
      c(),
      l(5, "td"),
      h(6),
      c(),
      l(7, "td"),
      h(8),
      c(),
      l(9, "td"),
      h(10),
      c(),
      l(11, "td"),
      h(12),
      c(),
      l(13, "td"),
      h(14),
      c(),
      l(15, "td"),
      h(16),
      c(),
      l(17, "td"),
      h(18),
      c()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x(2);
    m(2),
      B((r.currentEventPage - 1) * r.eventItemsPerPage + t + 1),
      m(2),
      B(e.subject),
      m(2),
      B(e.assigned_to),
      m(2),
      B(e.description),
      m(2),
      B(e.name),
      m(2),
      B(e.start_date),
      m(2),
      B(e.end_date),
      m(2),
      B(e.VIN),
      m(2),
      B(e.location);
  }
}
function hR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "li", 44)(1, "button", 65),
      R("click", function () {
        let r = O(e).$implicit,
          o = x(3);
        return k(o.goToEventPage(r));
      }),
      h(2),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(3);
    ne("active", e === t.currentEventPage), m(2), Z(" ", e, " ");
  }
}
function pR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 38)(1, "div", 39)(2, "p", 40),
      h(3),
      c()(),
      l(4, "div", 39)(5, "nav", 42)(6, "ul", 43)(7, "li", 44)(8, "button", 45),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.goToPreviousEventPage());
      }),
      h(9, " Previous "),
      c()(),
      A(10, hR, 3, 3, "li", 64),
      l(11, "li", 44)(12, "button", 45),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.goToNextEventPage());
      }),
      h(13, " Next "),
      c()()()()()();
  }
  if (n & 2) {
    let e = x(2);
    m(3),
      Fi(
        " Showing ",
        (e.currentEventPage - 1) * e.eventItemsPerPage + 1,
        " \u2013 ",
        e.getEventsRangeEnd(),
        " of ",
        e.totalEvents,
        " entries "
      ),
      m(4),
      ne("disabled", e.currentEventPage === 1),
      m(),
      y("disabled", e.currentEventPage === 1),
      m(2),
      y("ngForOf", e.visibleEventPageNumbers),
      m(),
      ne("disabled", e.currentEventPage === e.totalEventPages),
      m(),
      y("disabled", e.currentEventPage === e.totalEventPages);
  }
}
function mR(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
        5,
        "th"
      ),
      h(6, "Sr No"),
      c(),
      l(7, "th"),
      h(8, "Subject"),
      c(),
      l(9, "th"),
      h(10, "Assigned"),
      c(),
      l(11, "th"),
      h(12, "Description"),
      c(),
      l(13, "th"),
      h(14, "Account Name"),
      c(),
      l(15, "th"),
      h(16, "Start Date"),
      c(),
      l(17, "th"),
      h(18, "End Date"),
      c(),
      l(19, "th"),
      h(20, "VIN"),
      c(),
      l(21, "th"),
      h(22, "Locations"),
      c()()(),
      l(23, "tbody"),
      A(24, dR, 4, 0, "tr", 50)(25, uR, 19, 9, "tr", 58),
      c()()(),
      A(26, pR, 14, 10, "div", 63),
      c()),
    n & 2)
  ) {
    let e = x();
    m(24),
      y("ngIf", !e.EventList || e.EventList.length === 0),
      m(),
      y("ngForOf", e.paginatedEvents),
      m(),
      y("ngIf", e.EventList && e.EventList.length > 0);
  }
}
var Cl = class n {
  constructor(i, e, t, r, o) {
    this.route = i;
    this.http = e;
    this.location = t;
    this.cdr = r;
    this.zone = o;
  }
  UserList = [];
  loading = !1;
  leadList = [];
  TaskList = [];
  EventList = [];
  currentPage = 1;
  itemsPerPage = 10;
  currentEventPage = 1;
  eventItemsPerPage = 10;
  OpportunityList = pe([]);
  paginatedUsers = [];
  dealerData;
  masterSrv = W(Xe);
  showUsersTable = !0;
  showLeadsTable = !1;
  showOpportunityTable = !1;
  showTaskTable = !1;
  showEventTable = !1;
  visiblePageNumbers = [];
  dealer_name = "";
  toastr;
  user;
  apiService;
  paginatedLeads = [];
  opportunityItemsPerPage = 10;
  currentOpportunityPage = 1;
  paginatedOpportunities = [];
  visibleOpportunityPageNumbers = [];
  taskItemsPerPage = 10;
  currentTaskPage = 1;
  paginatedTasks = [];
  visibleTaskPageNumbers = [];
  ngOnInit() {
    console.log("ngOnInit is called"),
      this.handleQueryParams(),
      this.handleRouteData(),
      this.handleDealerId((i) => {
        this.getAllUser(i),
          this.getAllLeads(i),
          this.getAllTasks(i),
          this.getAllEvent(i),
          console.log("API Data:", yy.data),
          console.log("dealerData:", this.dealerData),
          console.log("Fetched UserList:", this.UserList);
      }),
      (this.currentPage = 1),
      this.paginateUsers(),
      this.updateVisiblePages(),
      (this.currentPage = 1),
      this.paginateLeads(),
      this.updateVisibleLeadPages();
  }
  dropdownService = W(qn);
  selectedOption = this.dropdownService.getSelectedOption();
  handleSelectionChange(i) {
    let e = i.target.value;
    switch (
      (this.dropdownService.setSelectedOption(e),
      console.log("this is option", this.selectedOption()),
      e)
    ) {
      case "leads":
        console.log("dealerData:", this.dealerData),
          this.dealerData
            ? (this.getAllLeads(this.dealerData.data.dealer.dealer_id),
              this.toggleLeadsTable())
            : console.warn("lead data is not available.");
        break;
      case "users":
        this.dealerData
          ? (this.getAllUser(this.dealerData.data.dealer.dealer_id),
            this.toggleUsersTable())
          : console.warn("Dealer data is not available.");
        break;
      case "opportunities":
        console.log(this.dealerData),
          this.toggleOpportunityTable(),
          this.dealerData &&
            this.getAllOpp(this.dealerData.data.dealer.dealer_id);
        break;
      case "events":
        this.toggleEventTable(),
          this.dealerData &&
            this.getAllEvent(this.dealerData.data.dealer.dealer_id);
        break;
      case "tasks":
        this.toggleTasksTable(),
          this.dealerData &&
            this.getAllTasks(this.dealerData.data.dealer.dealer_id);
        break;
    }
  }
  get totalUsers() {
    return this.UserList?.length || 0;
  }
  get totalPages() {
    return Math.ceil(this.totalUsers / this.itemsPerPage);
  }
  paginateUsers() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedUsers = this.UserList.slice(i, e);
  }
  updateVisiblePages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalPages);
    this.visiblePageNumbers = [];
    for (let r = e; r <= t; r++) this.visiblePageNumbers.push(r);
  }
  hasDataForPage(i) {
    return (i - 1) * this.itemsPerPage < this.totalUsers;
  }
  goToPreviousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateUsers(), this.updateVisiblePages());
  }
  goToNextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateUsers(), this.updateVisiblePages());
  }
  goToPage(i) {
    (i - 1) * this.itemsPerPage >= this.totalUsers ||
      ((this.currentPage = i), this.paginateUsers(), this.updateVisiblePages());
  }
  get totalLeads() {
    return this.leadList?.length || 0;
  }
  get totalLeadPages() {
    return Math.ceil(this.totalLeads / this.itemsPerPage);
  }
  paginateLeads() {
    if (!this.leadList || this.leadList.length === 0) {
      this.paginatedLeads = [];
      return;
    }
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    (this.paginatedLeads = this.leadList.slice(i, e)),
      console.log(
        `Paginating Leads | Page: ${this.currentPage}, Showing: ${
          i + 1
        } to ${Math.min(e, this.leadList.length)} of ${this.leadList.length}`
      ),
      console.table(this.paginatedLeads);
  }
  updateVisibleLeadPages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalLeadPages);
    this.visiblePageNumbers = [];
    for (let r = e; r <= t; r++) this.visiblePageNumbers.push(r);
  }
  goToLeadPage(i) {
    (this.currentPage = i), this.paginateLeads(), this.updateVisibleLeadPages();
  }
  goToPreviousLeadPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  goToNextLeadPage() {
    this.currentPage < this.totalLeadPages &&
      (this.currentPage++, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  get totalOpportunities() {
    return this.OpportunityList?.length || 0;
  }
  get totalOpportunityPages() {
    return Math.ceil(this.totalOpportunities / this.opportunityItemsPerPage);
  }
  paginateOpportunities() {
    let i = (this.currentOpportunityPage - 1) * this.opportunityItemsPerPage,
      e = i + this.opportunityItemsPerPage,
      t = this.OpportunityList();
    this.paginatedOpportunities = t.slice(i, e);
  }
  getOpportunityRangeEnd() {
    let i = this.currentOpportunityPage * this.opportunityItemsPerPage;
    return i > this.totalOpportunities ? this.totalOpportunities : i;
  }
  updateVisibleOpportunityPages() {
    let e = Math.floor((this.currentOpportunityPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalOpportunityPages);
    this.visibleOpportunityPageNumbers = [];
    for (let r = e; r <= t; r++) this.visibleOpportunityPageNumbers.push(r);
  }
  goToOpportunityPage(i) {
    (this.currentOpportunityPage = i),
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages();
  }
  goToPreviousOpportunityPage() {
    this.currentOpportunityPage > 1 &&
      (this.currentOpportunityPage--,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  goToNextOpportunityPage() {
    this.currentOpportunityPage < this.totalOpportunityPages &&
      (this.currentOpportunityPage++,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  get totalTasks() {
    return this.TaskList?.length || 0;
  }
  get totalTaskPages() {
    return Math.ceil(this.totalTasks / this.taskItemsPerPage);
  }
  paginateTasks() {
    let i = (this.currentTaskPage - 1) * this.taskItemsPerPage,
      e = i + this.taskItemsPerPage;
    this.paginatedTasks = this.TaskList.slice(i, e);
  }
  getTaskRangeEnd() {
    let i = this.currentTaskPage * this.taskItemsPerPage;
    return i > this.totalTasks ? this.totalTasks : i;
  }
  updateVisibleTaskPages() {
    let e = Math.floor((this.currentTaskPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalTaskPages);
    this.visibleTaskPageNumbers = [];
    for (let r = e; r <= t; r++) this.visibleTaskPageNumbers.push(r);
  }
  goToPreviousTaskPage() {
    this.currentTaskPage > 1 &&
      (this.currentTaskPage--,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToNextTaskPage() {
    this.currentTaskPage < this.totalTaskPages &&
      (this.currentTaskPage++,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToTaskPage(i) {
    (this.currentTaskPage = i),
      this.paginateTasks(),
      this.updateVisibleTaskPages();
  }
  getRangeEnd() {
    return Math.min(this.currentPage * this.itemsPerPage, this.totalUsers);
  }
  get totalEvents() {
    return this.EventList ? this.EventList.length : 0;
  }
  get paginatedEvents() {
    if (!this.EventList || this.EventList.length === 0) return [];
    let i = (this.currentEventPage - 1) * this.eventItemsPerPage,
      e = i + this.eventItemsPerPage;
    return this.EventList.slice(i, e);
  }
  get totalEventPages() {
    return Math.ceil(this.totalEvents / this.eventItemsPerPage);
  }
  getEventsRangeEnd() {
    let i = this.currentEventPage * this.eventItemsPerPage;
    return i > this.totalEvents ? this.totalEvents : i;
  }
  get visibleEventPageNumbers() {
    let i = this.totalEventPages,
      e = this.currentEventPage,
      t = 5,
      r = Math.floor(t / 2);
    if (i === 0) return [];
    let o = Math.max(1, e - r),
      a = Math.min(i, o + t - 1);
    a - o < t - 1 && (o = Math.max(1, a - t + 1));
    let d = [];
    for (let u = o; u <= a; u++) d.push(u);
    return d;
  }
  goToPreviousEventPage() {
    this.currentEventPage > 1 && this.currentEventPage--;
  }
  goToNextEventPage() {
    this.currentEventPage < this.totalEventPages && this.currentEventPage++;
  }
  goToEventPage(i) {
    i >= 1 && i <= this.totalEventPages && (this.currentEventPage = i);
  }
  toggleUsersTable() {
    (this.showLeadsTable = !1),
      (this.showUsersTable = !0),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleTasksTable() {
    (this.showTaskTable = !0),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showOpportunityTable = !1),
      (this.showEventTable = !1);
  }
  toggleLeadsTable() {
    (this.showLeadsTable = !0),
      (this.showUsersTable = !1),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleOpportunityTable() {
    (this.showOpportunityTable = !0),
      (this.showEventTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  toggleEventTable() {
    (this.showEventTable = !0),
      (this.showOpportunityTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  ngAfterViewInit() {
    console.log("ngOnInit is called"),
      console.log("hello"),
      console.log(typeof $.fn.DataTable),
      this.initializeDataTable();
  }
  initializeDataTable() {
    setTimeout(() => {
      let i = $("#example5").DataTable();
      i && i.destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 100);
  }
  handleQueryParams() {
    this.route.queryParams.subscribe((i) => {
      (this.dealer_name = i.dealer_name),
        console.log("Dealer Name : ", this.dealer_name);
    });
  }
  handleRouteData() {
    this.route.data.subscribe((i) => {
      if (((this.dealerData = i.dealerData), this.dealerData)) {
        let e = this.dealerData.data.dealer.dealer_id;
        this.getAllUser(e);
      } else console.log("Dealer Data not available from resolver");
    });
  }
  handleDealerId(i) {
    this.route.paramMap.subscribe((e) => {
      let t = e.get("dealer_id");
      t
        ? i(t)
        : this.dealerData ||
          console.error("Dealer ID not found in the URL and no resolver data.");
    });
  }
  getAllUser(i) {
    console.log("Calling API with dealerId:", i),
      this.masterSrv.getAllUser(i).subscribe({
        next: (e) => {
          console.log("\u2705 Full API Response:", e),
            console.log("Fetched Users:", e.data),
            e.data && Array.isArray(e.data) && e.data.length > 0
              ? ((this.UserList = e.data),
                (this.currentPage = 1),
                this.paginateUsers(),
                this.updateVisiblePages(),
                console.log("Users List:", this.UserList),
                (this.loading = !1))
              : (console.warn("No users found"),
                (this.UserList = []),
                this.paginateUsers(),
                this.updateVisiblePages()),
            this.zone.run(() => {
              Array.isArray(this.UserList)
                ? (console.log("\u2705 Assigned UserList:", this.UserList),
                  this.cdr.detectChanges(),
                  setTimeout(() => {
                    this.initializeDataTable();
                  }, 500))
                : (console.warn("\u26A0\uFE0F Invalid API Response Format:", e),
                  (this.UserList = []));
            });
        },
        error: (e) => {
          console.error("\u274C API Error:", e),
            (this.UserList = []),
            this.paginateUsers(),
            this.updateVisiblePages(),
            this.cdr.detectChanges();
        },
      });
  }
  reinitializeDataTable() {
    setTimeout(() => {
      $("#example5").DataTable().clear().destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 200);
  }
  getAllLeads(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllLead(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.leadList = e.data),
              console.log("Leads List:", this.leadList),
              (this.currentPage = 1),
              this.paginateLeads(),
              this.updateVisibleLeadPages())
            : (console.warn("No leads found"),
              (this.leadList = []),
              (this.paginatedLeads = []),
              (this.visiblePageNumbers = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e),
          (this.leadList = []),
          (this.paginatedLeads = []),
          (this.visiblePageNumbers = []);
      },
    });
  }
  getAllEvent(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getEventsAll(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.EventList = e.data),
              console.log("Event List:", this.EventList))
            : (console.warn("No events found"), (this.EventList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.EventList = []);
      },
    });
  }
  getAllTasks(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllTask(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.TaskList = e.data),
              console.log("Task List:", this.TaskList))
            : (console.warn("No tasks found"), (this.TaskList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.TaskList = []);
      },
    });
  }
  getAllOpp(i) {
    this.masterSrv.getAllOpportunities(i).subscribe({
      next: (e) => {
        this.OpportunityList.set(e), console.log("Leads data fetched:", e);
      },
      error: (e) => {
        alert(e.message || "An error occurred while fetching leads.");
      },
    });
  }
  router = W(vt);
  logUserId(i) {
    console.log("Navigating to user with ID:", i),
      this.dealerData?.data.dealer?.dealer_id
        ? localStorage.setItem(
            "previousRoute",
            this.dealerData.data.dealer.dealer_id
          )
        : console.warn("dealer_id is missing, previousRoute not stored.");
  }
  static ɵfac = function (e) {
    return new (e || n)(j(ei), j(jt), j(cr), j(Qe), j(Me));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-single-dealer"]],
    standalone: !0,
    features: [le],
    decls: 46,
    vars: 11,
    consts: [
      ["noEntries", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [2, "cursor", "auto", "color", "#222fb9", 3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [2, "font-weight", "700 !important", "color", "black"],
      [
        "class",
        "col-xl-9",
        "style",
        `
        margin-top: 2em !important;
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
      `,
        4,
        "ngIf",
      ],
      [
        1,
        "col-xl-9",
        2,
        "margin-top",
        "2em !important",
        "display",
        "flex",
        "justify-content",
        "space-between",
        "align-items",
        "center",
        "width",
        "100%",
      ],
      [1, "card"],
      [
        1,
        "card-body",
        "py-9",
        "py-md-2",
        2,
        "margin-left",
        "0.2rem !important",
      ],
      [1, "row", "align-items-start"],
      [1, "mb-md-0"],
      [1, "media", "align-items-end"],
      [1, "media-body"],
      [
        1,
        "mb-0",
        2,
        "background-color",
        "none",
        "text-transform",
        "capitalize",
      ],
      [1, "form-group", 2, "margin-inline", "1em"],
      [1, "form-control", "form-control-lg", 3, "change", "value"],
      ["selected", "", "value", "users", 1, "drop"],
      ["value", "leads", 1, "drop"],
      ["value", "opportunities", 1, "drop"],
      ["value", "tasks", 1, "drop"],
      ["value", "events", 1, "drop"],
      [1, "row"],
      [1, "col-lg-12"],
      ["class", "p-3 bg-white rounded shadow-sm", 4, "ngIf"],
      [1, "media", "align-items-center"],
      [1, "media-body", "ml-1"],
      [1, "mb-0", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-22"],
      [1, "span"],
      [1, "media", "align-items-center", 3, "click"],
      [1, "media-body", "ml-1", 3, "click"],
      [1, "p-3", "bg-white", "rounded", "shadow-sm"],
      ["class", "table-responsive", 4, "ngIf"],
      [1, "row", "align-items-center", "mt-3"],
      [1, "col-md-6"],
      [1, "mb-0", "text-muted"],
      [4, "ngIf", "ngIfElse"],
      ["aria-label", "Page navigation"],
      [1, "pagination", "justify-content-end", "mb-0"],
      [1, "page-item"],
      [1, "page-link", 3, "click", "disabled"],
      ["class", "page-item", 3, "active", "disabled", 4, "ngFor", "ngForOf"],
      [1, "table-responsive"],
      [
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      ["colspan", "7"],
      [2, "color", "#555", "font-weight", "500", "text-align", "center"],
      [1, "table-responsive", 2, "overflow-x", "auto", "width", "100%"],
      [1, "table", "mb-4", "dataTablesCard", "fs-14"],
      ["style", "text-align: left;", 4, "ngFor", "ngForOf"],
      ["colspan", "12"],
      ["style", "text-align:left", 4, "ngFor", "ngForOf"],
      ["class", "mb-0 text-muted", 4, "ngIf"],
      [3, "click", "routerLink"],
      [1, ""],
      [1, "fa", "fa-eye"],
      ["class", "row align-items-center mt-3", 4, "ngIf"],
      ["class", "page-item", 3, "active", 4, "ngFor", "ngForOf"],
      [1, "page-link", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Users"),
        c()(),
        l(7, "li", 5)(8, "a", 7),
        h(9, "Dealer"),
        c()(),
        l(10, "li", 8)(11, "a", 9),
        h(12),
        c()()()(),
        A(13, jA, 54, 7, "div", 10),
        l(14, "div", 11)(15, "div", 12)(16, "div", 13)(17, "div", 14)(
          18,
          "div",
          15
        )(19, "div", 16)(20, "div", 17)(21, "h3", 18),
        h(22),
        c()()()()()()(),
        l(23, "div", 19)(24, "select", 20),
        R("change", function (o) {
          return t.handleSelectionChange(o);
        }),
        l(25, "option", 21),
        h(26, "Users"),
        c(),
        l(27, "option", 22),
        h(28, "Leads"),
        c(),
        l(29, "option", 23),
        h(30, "Opportunities"),
        c(),
        l(31, "option", 24),
        h(32, "Tasks"),
        c(),
        l(33, "option", 25),
        h(34, "Events"),
        c()()()(),
        l(35, "div", 26)(36, "div", 27),
        A(37, YA, 18, 10, "div", 28),
        l(38, "div", 27),
        A(39, XA, 58, 12, "div", 28),
        c(),
        l(40, "div", 27),
        A(41, nR, 60, 11, "div", 28),
        l(42, "div", 27),
        A(43, cR, 40, 11, "div", 28),
        l(44, "div", 27),
        A(45, mR, 27, 3, "div", 28),
        c()()()()()()()),
        e & 2 &&
          (m(8),
          y("routerLink", pi(10, VA)),
          m(4),
          Z(
            "",
            t.dealerData == null ||
              t.dealerData.data == null ||
              t.dealerData.data.dealer == null
              ? null
              : t.dealerData.data.dealer.dealer_name,
            " "
          ),
          m(),
          y("ngIf", t.dealerData),
          m(9),
          Z(" ", t.selectedOption(), " "),
          m(2),
          y("value", t.selectedOption()),
          m(13),
          y("ngIf", t.selectedOption() === "users"),
          m(2),
          y("ngIf", t.selectedOption() === "leads"),
          m(2),
          y("ngIf", t.selectedOption() === "opportunities"),
          m(2),
          y("ngIf", t.selectedOption() === "tasks"),
          m(2),
          y("ngIf", t.selectedOption() === "events"));
    },
    dependencies: [tt, ni, ri, Ae, At, We, Di, ti],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{flex-grow:1}.custom-scroll-wrapper[_ngcontent-%COMP%]{overflow-x:auto;display:block;width:100%}.table-scroll-container[_ngcontent-%COMP%]{overflow-x:auto;width:100%}.table-wrapper[_ngcontent-%COMP%]{border:1px solid #ccc;border-radius:20px;background-color:#fff}.bg-white[_ngcontent-%COMP%]{background-color:#fff!important}.shadow-sm[_ngcontent-%COMP%]{box-shadow:0 .125rem .25rem #00000013}.rounded[_ngcontent-%COMP%]{border-radius:.5rem}.table-responsive[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}",
    ],
  });
};
var fR = ["inputElement"];
function gR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "form", null, 0),
      U(2, "img", 9),
      l(3, "h2", 10),
      h(4, "Login to Smart Assist"),
      c(),
      l(5, "div", 11)(6, "div", 12),
      U(7, "i", 13),
      c(),
      l(8, "div", 14)(9, "h5", 15),
      h(10, "Email"),
      c(),
      l(11, "input", 16, 1),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return ct(o.loginObj.email, r) || (o.loginObj.email = r), k(r);
      }),
      c()()(),
      l(13, "div", 17)(14, "div", 12),
      U(15, "i", 18),
      c(),
      l(16, "div", 14)(17, "h5"),
      h(18, "Password"),
      c(),
      l(19, "input", 19, 1),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return ct(o.loginObj.password, r) || (o.loginObj.password = r), k(r);
      }),
      c(),
      l(21, "i", 20),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.togglePassword("password"));
      }),
      c()()(),
      l(22, "a", 21),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.showVerifyEmail());
      }),
      h(23, "Forgot Password?"),
      c(),
      l(24, "input", 22),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.onLogin());
      }),
      c()();
  }
  if (n & 2) {
    let e = x();
    m(11),
      lt("ngModel", e.loginObj.email),
      m(8),
      lt("ngModel", e.loginObj.password),
      y("type", e.showPassword ? "text" : "password"),
      m(2),
      He(
        "icon11 absolute right-8 top-1/2 transform -translate-y-1/2 cursor-pointer " +
          (e.showPassword ? "fas fa-eye-slash eye" : "fas fa-eye eye")
      );
  }
}
function _R(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "form", null, 2)(2, "div", 23),
      U(3, "img", 9),
      c(),
      l(4, "h2", 10),
      h(5, " Verify Email "),
      c(),
      l(6, "div", 24)(7, "div", 12),
      U(8, "i", 25),
      c(),
      l(9, "div", 14)(10, "input", 26, 3),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return ct(o.verifyObj.email, r) || (o.verifyObj.email = r), k(r);
      }),
      c(),
      l(12, "label", 27),
      h(13, "Verify Email"),
      c()()(),
      l(14, "a", 28),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.backToLogin());
      }),
      h(15, "Back to Login"),
      c(),
      l(16, "input", 29),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.onVerifyEmail());
      }),
      c()();
  }
  if (n & 2) {
    let e = x();
    m(10), lt("ngModel", e.verifyObj.email);
  }
}
function bR(n, i) {
  if ((n & 1 && (l(0, "div", 38), h(1), c()), n & 2)) {
    let e = x(2);
    m(), Z(" Time remaining: ", e.countdown, "s ");
  }
}
function vR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "a", 39),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.onVerifyEmail());
      }),
      h(1, "Resend OTP"),
      c();
  }
}
function yR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "form", null, 4)(2, "div", 23),
      U(3, "img", 9),
      c(),
      l(4, "h2", 10),
      h(5, " Verify OTP "),
      c(),
      A(6, bR, 2, 1, "div", 30),
      l(7, "div", 11)(8, "div", 12),
      U(9, "i", 31),
      c(),
      l(10, "div", 32)(11, "input", 33, 5),
      R("input", function (r) {
        O(e);
        let o = x();
        return k(o.onOtpInput(r));
      }),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return ct(o.loginObj.otp, r) || (o.loginObj.otp = r), k(r);
      }),
      c()()(),
      l(13, "div", 34)(14, "a", 35),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.backToLogin());
      }),
      h(15, "Back to Login"),
      c(),
      A(16, vR, 2, 0, "a", 36),
      c(),
      l(17, "input", 37),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.onVerifyOtp());
      }),
      c()();
  }
  if (n & 2) {
    let e = ut(1),
      t = x();
    m(6),
      y("ngIf", t.countdown > 0),
      m(5),
      lt("ngModel", t.loginObj.otp),
      m(5),
      y("ngIf", t.countdown === 0),
      m(),
      y("disabled", e.invalid);
  }
}
function xR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "form")(1, "h2", 40),
      h(2, "Set New Password"),
      c(),
      l(3, "div", 17)(4, "div", 12),
      U(5, "i", 18),
      c(),
      l(6, "div", 14)(7, "input", 41),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return ct(o.loginObj.newPwd, r) || (o.loginObj.newPwd = r), k(r);
      }),
      c(),
      l(8, "label", 27),
      h(9, "New Password"),
      c(),
      l(10, "i", 42),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.togglePassword("password"));
      }),
      c()()(),
      l(11, "div", 17)(12, "div", 43),
      U(13, "i", 18),
      c(),
      l(14, "div", 14)(15, "input", 44),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return (
          ct(o.loginObj.confirmPassword, r) || (o.loginObj.confirmPassword = r),
          k(r)
        );
      }),
      c(),
      l(16, "label", 27),
      h(17, "Confirm Password"),
      c(),
      l(18, "i", 42),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.togglePassword("confirmPassword"));
      }),
      c()()(),
      l(19, "div", 45)(20, "a", 35),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.backToLogin());
      }),
      h(21, "Back to Login"),
      c()(),
      l(22, "input", 46),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.onSetNewPassword());
      }),
      c()();
  }
  if (n & 2) {
    let e = x();
    m(7),
      lt("ngModel", e.loginObj.newPwd),
      y("type", e.showPassword ? "text" : "password"),
      m(3),
      He(e.showPassword ? "fas fa-eye-slash" : "fas fa-eye"),
      m(5),
      lt("ngModel", e.loginObj.confirmPassword),
      y("type", e.showConfirmPassword ? "text" : "password"),
      m(3),
      He(e.showConfirmPassword ? "fas fa-eye-slash" : "fas fa-eye");
  }
}
var wl = class n {
  inputElements;
  loginObj = {
    email: "",
    password: "",
    otp: 0,
    confirmPassword: "",
    newPwd: "",
  };
  verifyObj = { email: "" };
  currentStep = "login";
  showPassword = !1;
  showConfirmPassword = !1;
  countdown = 0;
  countdownInterval;
  API_BASE_URL = "https://uat.smartassistapp.in/api/";
  SESSION_TIMEOUT = 60 * 60 * 1e3;
  http = W(jt);
  router = W(vt);
  toastr = W(fi);
  renderer = W(hi);
  constructor() {}
  ngAfterViewInit() {
    this.inputElements &&
      this.inputElements.toArray().forEach((i) => {
        this.renderer.listen(
          i.nativeElement,
          "focus",
          this.addClass.bind(this)
        ),
          this.renderer.listen(
            i.nativeElement,
            "blur",
            this.removeClass.bind(this)
          );
      });
  }
  showVerifyEmail() {
    (this.currentStep = "verifyEmail"), this.resetFormExceptEmail();
  }
  showVerifyOtp() {
    this.currentStep = "verifyOtp";
  }
  showNewPassword() {
    this.currentStep = "newPassword";
  }
  backToLogin() {
    (this.currentStep = "login"),
      window.location.reload(),
      this.resetForm(),
      this.countdownInterval && clearInterval(this.countdownInterval);
  }
  resetForm() {
    this.loginObj = {
      email: "",
      newPwd: "",
      otp: null,
      confirmPassword: "",
      password: "",
    };
  }
  resetFormExceptEmail() {
    let i = this.loginObj.email;
    this.resetForm(), (this.loginObj.email = i);
  }
  togglePassword(i) {
    if (i === "password") {
      this.showPassword = !this.showPassword;
      let e = document.getElementById("passwordInput");
      if (e && /iPad|iPhone|iPod/.test(navigator.userAgent)) {
        let t = e.parentElement;
        if (t) {
          let r = e.cloneNode(!0);
          (r.type = this.showPassword ? "text" : "password"),
            (r.value = e.value),
            t.replaceChild(r, e);
        }
      }
    } else this.showConfirmPassword = !this.showConfirmPassword;
  }
  validateLoginInput() {
    return !this.loginObj.email || !this.loginObj.password
      ? (this.toastr.error(
          "Please enter valid email and password",
          "Validation Error"
        ),
        !1)
      : this.isValidEmail(this.loginObj.email)
      ? !0
      : (this.toastr.error("Please enter a valid password", "Validation Error"),
        !1);
  }
  validateNewPassword() {
    return !this.loginObj.newPwd || !this.loginObj.confirmPassword
      ? (this.toastr.error("Please enter both passwords", "Validation Error"),
        !1)
      : this.loginObj.newPwd !== this.loginObj.confirmPassword
      ? (this.toastr.error("Passwords do not match", "Validation Error"), !1)
      : !0;
  }
  isValidEmail(i) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(i);
  }
  onLogin() {
    this.validateLoginInput() &&
      this.http
        .post(`${this.API_BASE_URL}login/super-admin`, this.loginObj)
        .subscribe({
          next: (i) => {
            i.status === 200 && i.data?.token
              ? this.handleSuccessfulLogin(i.data.token)
              : this.toastr.error(i.message || "Invalid credentials", "Error");
          },
          error: (i) => {
            console.error("Login error:", i);
            let e = i.error?.message || "An error occurred";
            this.toastr.error(e, "Error");
          },
        });
  }
  onVerifyEmail() {
    if (!this.verifyObj.email || !this.isValidEmail(this.verifyObj.email)) {
      this.toastr.error(
        "Please enter a valid email address",
        "Validation Error"
      );
      return;
    }
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-email`, {
        email: this.verifyObj.email,
      })
      .subscribe({
        next: () => {
          this.toastr.success("OTP sent to your email", "Success"),
            this.showVerifyOtp();
        },
        error: (i) => {
          console.error("Login error:", i);
          let e = i.error?.message || "An error occurred";
          this.toastr.error(e, "Error");
        },
      });
  }
  onVerifyOtp() {
    if (this.loginObj.otp === null || isNaN(Number(this.loginObj.otp))) {
      this.toastr.error("Please enter a valid OTP", "Validation Error");
      return;
    }
    let i = { otp: Number(this.loginObj.otp), email: this.verifyObj.email };
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-otp`, i)
      .subscribe({
        next: () => {
          this.toastr.success("OTP verified successfully", "Success"),
            this.showNewPassword();
        },
        error: (e) => {
          console.error("OTP verification error:", e);
          let t = e.error.error;
          this.toastr.error("Entered OTP is invalid");
        },
      });
  }
  onOtpInput(i) {
    let e = i.target,
      t = e.value.replace(/[^0-9]/g, "");
    (this.loginObj.otp = t ? Number(t) : 0), (e.value = t);
  }
  onSetNewPassword() {
    if (!this.validateNewPassword()) return;
    let i = {
      email: this.verifyObj.email,
      newPwd: this.loginObj.newPwd,
      confirmPwd: this.loginObj.confirmPassword,
    };
    this.http
      .put(`${this.API_BASE_URL}login/s-admin/forgot-pwd/new-pwd`, i)
      .subscribe({
        next: (e) => {
          this.toastr.success("Password reset successfully", "Success"),
            window.location.reload(),
            this.backToLogin();
        },
        error: (e) => {
          if ((console.error("Password reset error:", e), e.status === 400))
            this.toastr.error(
              "Invalid request. Please check your inputs.",
              "Error"
            );
          else if (e.status === 404)
            this.toastr.error("User not found", "Error");
          else {
            let t = e.error.error;
            this.toastr.error(t, "Error");
          }
        },
        complete: () => {
          (this.loginObj.newPwd = ""), (this.loginObj.confirmPassword = "");
        },
      });
  }
  handleSuccessfulLogin(i) {
    console.log("Storing token in localStorage:", i),
      localStorage.setItem("token", i),
      console.log("Navigating to /admin/dashboard..."),
      this.router
        .navigate(["/Admin/dashboard"])
        .then(() => {
          window.location.reload(),
            console.log("Navigation successful."),
            this.toastr.success("Login Successful", "Success");
        })
        .catch((e) => {
          console.error("Navigation error:", e),
            this.toastr.error("Failed to navigate to dashboard", "Error");
        }),
      console.log("Setting up auto logout...");
  }
  addClass(i) {
    let e = i.target.parentNode?.parentNode;
    e && e.classList.add("focus");
  }
  removeClass(i) {
    let e = i.target.parentNode?.parentNode;
    e && i.target.value === "" && e.classList.remove("focus");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-login-1"]],
    viewQuery: function (e, t) {
      if ((e & 1 && _t(fR, 5), e & 2)) {
        let r;
        nt((r = rt())) && (t.inputElements = r);
      }
    },
    standalone: !0,
    features: [le],
    decls: 6,
    vars: 4,
    consts: [
      ["loginForm", "ngForm"],
      ["inputElement", ""],
      ["verifyForm", "ngForm"],
      ["dealerEmail", "ngModel"],
      ["otpForm", "ngForm"],
      ["otp", "ngModel"],
      [1, "custom-container"],
      [1, "login-content"],
      [4, "ngIf"],
      [
        "src",
        "../../../assets/admin-img/jlr logo.svg",
        "alt",
        "Avatar Image",
        1,
        "mx-auto",
        "inline-flex",
        "items-center",
        "justify-center",
      ],
      [
        1,
        "title",
        2,
        "color",
        "#222fb9",
        "font-size",
        "20px",
        "text-transform",
        "capitalize",
        "margin-top",
        "15px",
      ],
      [1, "input-div", "one"],
      [1, "i", "mr-3"],
      [1, "fas", "fa-user"],
      [1, "div", "relative"],
      [1, "absolute", "left-2", "top-1", "text-gray-500", "text-sm"],
      [
        "type",
        "text",
        "name",
        "username",
        "required",
        "",
        1,
        "forms-control",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "input-div", "pass"],
      [1, "fas", "fa-lock"],
      [
        "id",
        "passwordInput",
        "name",
        "password",
        "required",
        "",
        "autocomplete",
        "off",
        "autocorrect",
        "off",
        "spellcheck",
        "false",
        1,
        "inputt",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        2,
        "padding-left",
        "1px !important",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [3, "click"],
      ["href", "javascript:void(0)", 1, "forgot-password", 3, "click"],
      ["type", "submit", "value", "Login", 1, "btn", 3, "click"],
      [1, "flex", "justify-center"],
      [1, "input-div"],
      [1, "fas", "fa-envelope"],
      [
        "name",
        "dealer_email",
        "type",
        "email",
        "required",
        "",
        "email",
        "",
        "placeholder",
        " ",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "floating-label"],
      ["href", "javascript:void(0)", 1, "back-to-login", 3, "click"],
      ["type", "submit", "value", "Send OTP", 1, "btn", 3, "click"],
      ["class", "text-center mb-4", 4, "ngIf"],
      [1, "fas", "fa-key", "color"],
      [1, "relative", "z-0", "w-full", "mb-1", "group", "flex", "flex-col"],
      [
        "type",
        "text",
        "name",
        "otp",
        "required",
        "",
        "placeholder",
        "OTP",
        1,
        "",
        3,
        "input",
        "ngModelChange",
        "ngModel",
      ],
      [1, "flex", "justify-end", "text-end", "w-full"],
      [1, "back-to-login", 2, "cursor", "pointer", 3, "click"],
      [
        "style",
        "cursor: pointer",
        "class",
        "resend-otp",
        3,
        "click",
        4,
        "ngIf",
      ],
      [
        "type",
        "submit",
        "value",
        "Verify OTP",
        1,
        "btn",
        3,
        "click",
        "disabled",
      ],
      [1, "text-center", "mb-4"],
      [1, "resend-otp", 2, "cursor", "pointer", 3, "click"],
      [1, "title"],
      [
        "name",
        "password",
        "placeholder",
        " ",
        "required",
        "",
        1,
        "forms-control",
        "peer",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [
        1,
        "icon11",
        "absolute",
        "right-8",
        "top-1/2",
        "transform",
        "-translate-y-1/2",
        "cursor-pointer",
        3,
        "click",
      ],
      [1, "i"],
      [
        "name",
        "confirm-password",
        "placeholder",
        " ",
        "required",
        "",
        1,
        "forms-control",
        "peer",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [1, "flex", "justify-between", "w-full"],
      ["type", "submit", "value", "Reset Password", 1, "btn", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 6)(1, "div", 7),
        A(2, gR, 25, 5, "form", 8)(3, _R, 17, 1, "form", 8)(
          4,
          yR,
          18,
          4,
          "form",
          8
        )(5, xR, 23, 8, "form", 8),
        c()()),
        e & 2 &&
          (m(2),
          y("ngIf", t.currentStep === "login"),
          m(),
          y("ngIf", t.currentStep === "verifyEmail"),
          m(),
          y("ngIf", t.currentStep === "verifyOtp"),
          m(),
          y("ngIf", t.currentStep === "newPassword"));
    },
    dependencies: [Ae, We, tt, Br, Wt, ii, Bi, mr, _p, _i, fp, sc],
    styles: [
      '*[_ngcontent-%COMP%]{padding:0;margin:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;overflow:hidden}.inputt[_ngcontent-%COMP%]{width:90%!important}.fas[_ngcontent-%COMP%]{color:#3b86e9!important}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%;margin:0;padding:0}.wave[_ngcontent-%COMP%]{position:fixed;bottom:0;left:0;height:100%;z-index:-1}.container[_ngcontent-%COMP%]{width:100%;grid-gap:7rem;padding:0 2rem}.img[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center}.login-content[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;text-align:center;height:97vh}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:500px}form[_ngcontent-%COMP%]{width:360px}.login-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:15px 0;color:#333;text-transform:uppercase;font-size:2.9rem}.login-content[_ngcontent-%COMP%]   .input-div[_ngcontent-%COMP%]{position:relative;display:grid;grid-template-columns:7% 93%;margin:25px 0;padding:5px 0;border-bottom:2px solid #d9d9d9}.login-content[_ngcontent-%COMP%]   .input-div.one[_ngcontent-%COMP%]{margin-top:0}.i[_ngcontent-%COMP%]{color:#d9d9d9;display:flex;justify-content:center;align-items:center}.i[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{transition:.3s}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;height:45px}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{position:absolute;left:10px;top:50%;transform:translateY(-50%);color:#999;font-size:18px;transition:.3s}#pass[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{left:-15px!important}.input-div[_ngcontent-%COMP%]:before, .input-div[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-2px;width:0%;height:2px;background-color:#3b86e9;transition:.4s}.input-div[_ngcontent-%COMP%]:before{right:50%}.input-div[_ngcontent-%COMP%]:after{left:50%}.input-div.focus[_ngcontent-%COMP%]:before, .input-div.focus[_ngcontent-%COMP%]:after{width:50%}.input-div.focus[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{top:-5px;font-size:15px}input.forms-control[_ngcontent-%COMP%]{background-color:transparent!important;box-shadow:none!important;transition:background-color 5000s ease-in-out 0s}input[_ngcontent-%COMP%]:-webkit-autofill, input[_ngcontent-%COMP%]:-webkit-autofill:hover, input[_ngcontent-%COMP%]:-webkit-autofill:focus{box-shadow:none!important;color:#000!important;transition:background-color 5000s ease-in-out 0s}.fas[_ngcontent-%COMP%]{color:#222fb9!important}.input-div.focus[_ngcontent-%COMP%] > .i[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{color:#5298ee}.input-div[_ngcontent-%COMP%]   .focus[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{top:-5px;font-size:15px;color:#7e7e7e}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > input[_ngcontent-%COMP%]{position:absolute;left:0;top:0;width:100%;height:100%;outline:none;background:none;font-size:1.2rem;border:none;color:#555;font-family:poppins,sans-serif}.password-toggle[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);cursor:pointer;z-index:10}.width-input[_ngcontent-%COMP%]{width:90%!important}.icon11[_ngcontent-%COMP%]{margin-left:18em;margin-top:.7em}.password-toggle[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#999;font-size:16px}.password-toggle[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{color:#666}.input-div.pass[_ngcontent-%COMP%], .input-div.verify[_ngcontent-%COMP%]{margin-bottom:4px}a[_ngcontent-%COMP%]{display:block;text-align:right;text-decoration:none;color:#999;font-size:.9rem;transition:.3s}a[_ngcontent-%COMP%]:hover{color:#3b86e9}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#3b86e9,#5496e7,#5298ee);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}@media screen and (max-width: 1050px){.container[_ngcontent-%COMP%]{grid-gap:5rem}}@media screen and (max-width: 1000px){form[_ngcontent-%COMP%]{width:290px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2.4rem;margin:8px 0}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:400px}}@media screen and (max-width: 900px){.container[_ngcontent-%COMP%]{grid-template-columns:1fr}.img[_ngcontent-%COMP%], .wave[_ngcontent-%COMP%]{display:none}.login-content[_ngcontent-%COMP%]{justify-content:center}}.eye[_ngcontent-%COMP%]{color:#b9b8b8!important}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (min-width: 1024px) and (max-width: 1366px){.img[_ngcontent-%COMP%]{margin-top:-300px}}@media (min-width: 768px) and (max-width: 1023px){.login-content[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);margin-top:0;justify-content:center}}@media (max-width: 768px){.custom-container[_ngcontent-%COMP%]{margin-left:0!important}}input[type=password][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-decoration, input[type=password][_ngcontent-%COMP%]::-webkit-search-cancel-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-decoration{display:none!important}input[type=password][_ngcontent-%COMP%]{-moz-appearance:textfield}.new-custom[_ngcontent-%COMP%]{display:flex;justify-content:center}.div[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{position:absolute;top:12px;left:10px;font-size:16px;color:#9ca3af;pointer-events:none;transition:all .2s ease}.div[_ngcontent-%COMP%]   h5.floating[_ngcontent-%COMP%]{top:-10px;left:5px;font-size:12px;color:#3b86e9;background:#fff;padding:0 5px;z-index:10}.icon11[_ngcontent-%COMP%]{z-index:10;position:relative;pointer-events:auto;width:24px;height:24px;display:inline-flex;align-items:center;justify-content:center}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#222fb9);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}.btn[_ngcontent-%COMP%]:hover{background-position:right}.input-div[_ngcontent-%COMP%]{position:relative;margin-top:20px}.input-div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;padding:10px 5px;font-size:16px;border:none;border-bottom:1px solid #ccc;background:transparent}.input-div[_ngcontent-%COMP%]   label.floating-label[_ngcontent-%COMP%]{position:absolute;left:5px;top:10px;font-family:poppins,sans-serif;font-size:1.2rem;pointer-events:none;transition:.3s ease all}.forms-control[_ngcontent-%COMP%], .inputt[_ngcontent-%COMP%]{padding-top:1.5rem}.input-div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus ~ label.floating-label[_ngcontent-%COMP%], .input-div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:placeholder-shown) ~ label.floating-label[_ngcontent-%COMP%]{top:-15px;font-size:1.2rem;font-family:poppins,sans-serif}input[type=password][_ngcontent-%COMP%]{-webkit-text-security:disc!important}input[type=password][_ngcontent-%COMP%]::-ms-reveal, input[type=password][_ngcontent-%COMP%]::-ms-clear, input[type=password][_ngcontent-%COMP%]::-webkit-credentials-auto-fill-button, input[type=password][_ngcontent-%COMP%]::-webkit-password-toggle-button{display:none!important}input[type=password][_ngcontent-%COMP%]::-webkit-textfield-decoration-container{display:none!important}',
    ],
  });
};
function CR(n, i) {
  if ((n & 1 && (l(0, "div", 12), h(1), c()), n & 2)) {
    let e = x().ngIf,
      t = x();
    m(), Z(" ", t.getInitials(e.name), " ");
  }
}
function wR(n, i) {
  if ((n & 1 && U(0, "img", 13), n & 2)) {
    let e = x(2);
    y("src", e.profileImageUrl, Ju);
  }
}
function SR(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 6)(1, "div", 7),
      A(2, CR, 2, 1, "div", 8)(3, wR, 1, 1, "ng-template", null, 0, bt),
      c(),
      l(5, "div", 9)(6, "h5", 10),
      h(7),
      c(),
      l(8, "p", 11),
      h(9),
      c()()()),
    n & 2)
  ) {
    let e = i.ngIf,
      t = ut(4),
      r = x();
    m(2),
      y("ngIf", !r.isCustomProfileImage())("ngIfElse", t),
      m(5),
      B(e.name),
      m(2),
      B(e.email);
  }
}
function DR(n, i) {
  n & 1 && (l(0, "div", 14), h(1, " Loading profile details... "), c());
}
var eu = class n {
  constructor(i, e) {
    this.http = i;
    this.context = e;
  }
  masterSrv = W(Xe);
  profileImageUrl = "/assets/public/images/profile/default.png";
  profile = pe(null);
  ngOnInit() {
    this.context.onSideBarClick$.next({
      role: "profile",
      pageTitle: "Profile Management",
    }),
      this.getProfileData(),
      this.getProfileImage();
  }
  isCustomProfileImage() {
    return this.profileImageUrl !== "/assets/public/images/profile/default.png";
  }
  getProfileData() {
    this.masterSrv.getProfileData().subscribe({
      next: (i) => {
        console.log("Fetched Profile Data:", i), this.profile.set(i.data);
      },
      error: (i) => {
        console.error("Error fetching profile data:", i),
          alert("Failed to fetch profile data.");
      },
    });
  }
  getProfileImage() {
    this.http
      .get("https://uat.smartassistapp.in/api/superAdmin/show-profile")
      .subscribe({
        next: (i) => {
          console.log("Fetched Profile Image:", i),
            i?.status === 200 && i.data?.image_url
              ? (this.profileImageUrl = i.data.image_url)
              : (this.profileImageUrl =
                  "/assets/public/images/profile/default.png");
        },
        error: (i) => {
          console.error("Error fetching profile image:", i),
            (this.profileImageUrl =
              "/assets/public/images/profile/default.png");
        },
      });
  }
  getInitials(i) {
    let e = i.trim().split(" ");
    return e.length === 1
      ? e[0].charAt(0).toUpperCase()
      : (e[0].charAt(0) + e[e.length - 1].charAt(0)).toUpperCase();
  }
  static ɵfac = function (e) {
    return new (e || n)(j(jt), j(qn));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-profile"]],
    standalone: !0,
    features: [le],
    decls: 5,
    vars: 2,
    consts: [
      ["profilePic", ""],
      [1, "container-fluid"],
      [
        1,
        "d-flex",
        "justify-content-center",
        "align-items-center",
        2,
        "min-height",
        "80vh",
      ],
      [1, "card", "rounded-4", "p-4", 2, "width", "100%"],
      ["class", "row g-3 align-items-center", 4, "ngIf"],
      ["class", "text-muted text-center py-3", 4, "ngIf"],
      [1, "row", "g-3", "align-items-center"],
      [1, "col-auto"],
      ["class", "avatar-circle shadow-sm", 4, "ngIf", "ngIfElse"],
      [1, "col"],
      [1, "text-dark", "mb-1", 2, "font-size", "22px"],
      [1, "text-muted", "mb-2", 2, "font-size", "17px"],
      [1, "avatar-circle", "shadow-sm"],
      ["alt", "Profile Photo", 1, "avatar-img", "shadow-sm", 3, "src"],
      [1, "text-muted", "text-center", "py-3"],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 1)(1, "div", 2)(2, "div", 3),
        A(3, SR, 10, 4, "div", 4)(4, DR, 2, 0, "div", 5),
        c()()()),
        e & 2 && (m(3), y("ngIf", t.profile()), m(), y("ngIf", !t.profile()));
    },
    dependencies: [Ae, We],
    styles: [
      ".avatar-circle[_ngcontent-%COMP%]{width:90px;height:90px;background-color:#dce3fa;color:#3b4cca;font-size:42px;font-weight:600;border-radius:50%;display:flex;align-items:center;justify-content:center;text-transform:uppercase}.avatar-img[_ngcontent-%COMP%]{width:80px;height:80px;border-radius:50%;object-fit:cover}",
    ],
  });
};
var Sl = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.getDealerById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Xe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Dl = class n {
  user_id;
  account_id;
  name;
  email;
  phone;
  user_role;
  password;
  otp_validated;
  otp;
  otp_expiration;
  corporate_id;
  dealer_code;
  dealer_id;
  role_id;
  role_name;
  team_id;
  team_name;
  fname;
  lname;
  team;
  role;
  constructor() {
    (this.user_id = ""),
      (this.account_id = ""),
      (this.name = ""),
      (this.phone = void 0),
      (this.email = ""),
      (this.user_role = ""),
      (this.password = ""),
      (this.otp_validated = ""),
      (this.otp = ""),
      (this.otp_expiration = ""),
      (this.dealer_code = void 0),
      (this.corporate_id = ""),
      (this.dealer_id = ""),
      (this.role_id = ""),
      (this.role_name = ""),
      (this.team_id = ""),
      (this.team_name = ""),
      (this.fname = ""),
      (this.lname = ""),
      (this.role = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var xy = (() => {
  class n {
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = ye({ type: n });
    static ɵinj = ve({ imports: [Ae, On, Li, On] });
  }
  return n;
})();
var vH = new Ce("RowDef"),
  yH = new Ce("DatatableComponentToken");
var Cy = (() => {
  class n {
    static forRoot(e) {
      return {
        ngModule: n,
        providers: [{ provide: "configuration", useValue: e }],
      };
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = ye({ type: n });
    }
    static {
      this.ɵinj = ve({});
    }
  }
  return n;
})();
var Ra = class n {
  confirmationSubject = new Ee();
  confirm(i) {
    let e = window.confirm(i);
    return (
      this.confirmationSubject.next(e), this.confirmationSubject.asObservable()
    );
  }
  showAlert(i, e) {
    let t = document.createElement("div");
    (t.className = `alert alert-${i} alert-dismissible fade show fixed-top m-3`),
      (t.innerHTML = `
      <span class="alert-icon">
        <svg viewBox="0 0 24 24" width="24" height="24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 11 12 14 22 4"></polyline>
        </svg>
      </span>
      <strong>${i.charAt(0).toUpperCase() + i.slice(1)}!</strong> ${e}
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span>&times;</span>
      </button>
    `),
      document.body.appendChild(t),
      setTimeout(() => {
        t.classList.remove("show"), t.remove();
      }, 1e3);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ao = (n) => ({ "is-invalid": n });
function MR(n, i) {
  n & 1 && (l(0, "tr")(1, "td", 45), h(2, "No Users found"), c()());
}
function TR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "tr")(1, "td"),
      h(2),
      c(),
      l(3, "td"),
      h(4),
      c(),
      l(5, "td"),
      h(6),
      c(),
      l(7, "td"),
      h(8),
      c(),
      l(9, "td", 46)(10, "a", 47),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.onEdit(r));
      }),
      U(11, "i", 48),
      c(),
      l(12, "a", 49),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.openDeleteModal(r));
      }),
      U(13, "i", 50),
      c()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x();
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.name),
      m(2),
      B(e.email),
      m(2),
      B(e.user_role);
  }
}
function ER(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "li", 51)(1, "a", 41),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.goToPage(r));
      }),
      h(2),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x();
    ne("active", e === t.currentPage), m(2), B(e);
  }
}
function OR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 52)(1, "div", 53)(2, "div", 54)(3, "div", 55)(4, "h5", 56),
      h(5, "Delete User"),
      c()(),
      l(6, "div", 57),
      h(7, "Are you sure you want to delete this user?"),
      c(),
      l(8, "div", 58)(9, "button", 59),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeDeleteModal());
      }),
      h(10, "Cancel"),
      c(),
      l(11, "button", 60),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.deleteUserId());
      }),
      h(12, "Delete"),
      c()()()()();
  }
}
function kR(n, i) {
  n & 1 && (l(0, "span"), h(1, "First name is required."), c());
}
function PR(n, i) {
  if ((n & 1 && (l(0, "div", 72), A(1, kR, 2, 0, "span", 33), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function IR(n, i) {
  n & 1 && (l(0, "span"), h(1, "Last name is required."), c());
}
function AR(n, i) {
  if ((n & 1 && (l(0, "div", 72), A(1, IR, 2, 0, "span", 33), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function RR(n, i) {
  if ((n & 1 && (l(0, "option", 86), h(1), c()), n & 2)) {
    let e = i.$implicit;
    y("value", e.dealer_id), m(), Z(" ", e.dealer_code, " ");
  }
}
function FR(n, i) {
  n & 1 && (l(0, "span"), h(1, " Dealer Code is required. "), c());
}
function NR(n, i) {
  if ((n & 1 && (l(0, "div", 72), A(1, FR, 2, 0, "span", 33), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("dealer_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function LR(n, i) {
  if ((n & 1 && (l(0, "option", 86), h(1), c()), n & 2)) {
    let e = i.$implicit;
    y("value", e.role_id), m(), Z(" ", e.role_name, " ");
  }
}
function VR(n, i) {
  n & 1 && (l(0, "span"), h(1, " Role name is required. "), c());
}
function BR(n, i) {
  if ((n & 1 && (l(0, "div", 72), A(1, VR, 2, 0, "span", 33), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("role_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function jR(n, i) {
  n & 1 && (l(0, "span"), h(1, "Email is required."), c());
}
function HR(n, i) {
  n & 1 && (l(0, "span"), h(1, "Please enter a valid email address."), c());
}
function UR(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 72),
      A(1, jR, 2, 0, "span", 33)(2, HR, 2, 0, "span", 33),
      c()),
    n & 2)
  ) {
    let e,
      t,
      r = x(2);
    m(),
      y(
        "ngIf",
        (e = r.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = r.useForm.get("email")) == null || t.errors == null
          ? null
          : t.errors.email
      );
  }
}
function zR(n, i) {
  if ((n & 1 && (l(0, "option", 86), h(1), c()), n & 2)) {
    let e = i.$implicit;
    y("value", e.team_id), m(), Z(" ", e.team_name, " ");
  }
}
function $R(n, i) {
  n & 1 && (l(0, "div", 72)(1, "span"), h(2, "Team name is required."), c()());
}
function WR(n, i) {
  n & 1 && (l(0, "span"), h(1, " Phone is required. "), c());
}
function GR(n, i) {
  n & 1 && (l(0, "span"), h(1, " Must not exceed 10 characters. "), c());
}
function YR(n, i) {
  n & 1 && (l(0, "span"), h(1, " Only numbers are allowed. "), c());
}
function qR(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 72),
      A(1, WR, 2, 0, "span", 33)(2, GR, 2, 0, "span", 33)(
        3,
        YR,
        2,
        0,
        "span",
        33
      ),
      c()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o = x(2);
    m(),
      y(
        "ngIf",
        (e = o.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      m(),
      y(
        "ngIf",
        (t = o.useForm.get("phone")) == null || t.errors == null
          ? null
          : t.errors.maxlength
      ),
      m(),
      y(
        "ngIf",
        (r = o.useForm.get("phone")) == null || r.errors == null
          ? null
          : r.errors.pattern
      );
  }
}
function KR(n, i) {
  if (n & 1) {
    let e = oe();
    Le(0),
      l(1, "button", 87),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.onUpdate());
      }),
      h(2, " Edit "),
      c(),
      Ve();
  }
  if (n & 2) {
    let e = x(2);
    m(), y("disabled", !e.isUserNameChanged());
  }
}
function QR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 59),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.onSave());
      }),
      h(1, " Save "),
      c();
  }
  if (n & 2) {
    let e = x(2);
    ce("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function XR(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 52)(1, "div", 61)(2, "div", 54)(3, "div", 55)(4, "h5", 62),
      h(5),
      c(),
      l(6, "button", 63),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeModal());
      }),
      l(7, "span", 64),
      h(8, "\xD7"),
      c()()(),
      l(9, "div", 65)(10, "form", 66)(11, "div", 67)(12, "div", 68)(
        13,
        "label",
        69
      ),
      h(14, "First Name"),
      c(),
      U(15, "input", 70),
      A(16, PR, 2, 1, "div", 71),
      c(),
      l(17, "div", 68)(18, "label", 69),
      h(19, " Last Name "),
      l(20, "span", 72),
      h(21, "*"),
      c()(),
      U(22, "input", 73),
      A(23, AR, 2, 1, "div", 71),
      c(),
      l(24, "div", 68)(25, "label", 74),
      h(26, " Dealer Code "),
      l(27, "span", 72),
      h(28, "*"),
      c()(),
      l(29, "select", 75)(30, "option", 76),
      h(31, "Select Dealer code"),
      c(),
      A(32, RR, 2, 2, "option", 77),
      c(),
      A(33, NR, 2, 1, "div", 71),
      c(),
      l(34, "div", 68)(35, "label", 78),
      h(36, " Role Name "),
      l(37, "span", 72),
      h(38, "*"),
      c()(),
      l(39, "select", 79)(40, "option", 76),
      h(41, "Select Role"),
      c(),
      A(42, LR, 2, 2, "option", 77),
      c(),
      A(43, BR, 2, 1, "div", 71),
      c(),
      l(44, "div", 68)(45, "label", 69),
      h(46, " Email "),
      l(47, "span", 72),
      h(48, "*"),
      c()(),
      U(49, "input", 80),
      A(50, UR, 3, 2, "div", 71),
      c(),
      l(51, "div", 68)(52, "label", 81),
      h(53, " Team name "),
      l(54, "span", 72),
      h(55, "*"),
      c()(),
      l(56, "select", 82),
      R("change", function () {
        O(e);
        let r = x();
        return k(r.onTeamChange());
      }),
      l(57, "option", 76),
      h(58, "Select team name"),
      c(),
      A(59, zR, 2, 2, "option", 77),
      c(),
      A(60, $R, 3, 0, "div", 71),
      c(),
      l(61, "div", 68)(62, "label", 69),
      h(63, " Phone "),
      l(64, "span", 72),
      h(65, "*"),
      c()(),
      l(66, "input", 83),
      R("keypress", function (r) {
        O(e);
        let o = x();
        return k(o.restrictToNumbers(r));
      }),
      c(),
      A(67, qR, 4, 3, "div", 71),
      c()()()(),
      l(68, "div", 58),
      A(69, KR, 3, 1, "ng-container", 84),
      l(70, "button", 85),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeModal());
      }),
      h(71, " Close "),
      c(),
      A(72, QR, 2, 1, "ng-template", null, 0, bt),
      c()()()();
  }
  if (n & 2) {
    let e,
      t,
      r,
      o,
      a,
      d,
      u,
      f,
      v,
      S,
      T,
      M,
      I,
      L,
      E = ut(73),
      F = x();
    m(5),
      Z(" ", F.userObj.user_id ? "Edit User" : "Add New User", " "),
      m(5),
      y("formGroup", F.useForm),
      m(5),
      y(
        "ngClass",
        de(
          24,
          Ao,
          ((e = F.useForm.get("fname")) == null ? null : e.touched) &&
            ((e = F.useForm.get("fname")) == null ? null : e.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        ((t = F.useForm.get("fname")) == null ? null : t.invalid) &&
          ((t = F.useForm.get("fname")) == null ? null : t.touched)
      ),
      m(6),
      y(
        "ngClass",
        de(
          26,
          Ao,
          ((r = F.useForm.get("lname")) == null ? null : r.touched) &&
            ((r = F.useForm.get("lname")) == null ? null : r.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        ((o = F.useForm.get("lname")) == null ? null : o.invalid) &&
          ((o = F.useForm.get("lname")) == null ? null : o.touched)
      ),
      m(6),
      y(
        "ngClass",
        de(
          28,
          Ao,
          ((a = F.useForm.get("dealer_id")) == null ? null : a.touched) &&
            ((a = F.useForm.get("dealer_id")) == null ? null : a.invalid)
        )
      ),
      m(),
      y("ngValue", null),
      m(2),
      y("ngForOf", F.dealerList()),
      m(),
      y(
        "ngIf",
        ((d = F.useForm.get("dealer_id")) == null ? null : d.touched) &&
          ((d = F.useForm.get("dealer_id")) == null ? null : d.invalid)
      ),
      m(6),
      y(
        "ngClass",
        de(
          30,
          Ao,
          ((u = F.useForm.get("role_id")) == null ? null : u.touched) &&
            ((u = F.useForm.get("role_id")) == null ? null : u.invalid)
        )
      ),
      m(),
      y("ngValue", null),
      m(2),
      y("ngForOf", F.roleList()),
      m(),
      y(
        "ngIf",
        ((f = F.useForm.get("role_id")) == null ? null : f.touched) &&
          ((f = F.useForm.get("role_id")) == null ? null : f.invalid)
      ),
      m(6),
      y(
        "ngClass",
        de(
          32,
          Ao,
          ((v = F.useForm.get("email")) == null ? null : v.touched) &&
            ((v = F.useForm.get("email")) == null ? null : v.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        ((S = F.useForm.get("email")) == null ? null : S.invalid) &&
          ((S = F.useForm.get("email")) == null ? null : S.touched)
      ),
      m(6),
      y(
        "ngClass",
        de(
          34,
          Ao,
          ((T = F.useForm.get("team_id")) == null ? null : T.touched) &&
            ((T = F.useForm.get("team_id")) == null ? null : T.invalid)
        )
      ),
      m(),
      y("ngValue", null),
      m(2),
      y("ngForOf", F.teamList()),
      m(),
      y(
        "ngIf",
        ((M = F.useForm.get("team_id")) == null ? null : M.touched) &&
          ((M = F.useForm.get("team_id")) == null ? null : M.invalid)
      ),
      m(6),
      y(
        "ngClass",
        de(
          36,
          Ao,
          ((I = F.useForm.get("phone")) == null ? null : I.touched) &&
            ((I = F.useForm.get("phone")) == null ? null : I.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        ((L = F.useForm.get("phone")) == null ? null : L.touched) &&
          ((L = F.useForm.get("phone")) == null ? null : L.invalid)
      ),
      m(2),
      y("ngIf", F.userObj == null ? null : F.userObj.user_id)("ngIfElse", E);
  }
}
var tu = class n {
  constructor(i, e) {
    this.aleartsrv = i;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = pe(0);
  userList = pe([]);
  dealerList = pe([]);
  totalDealer = pe(0);
  isModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  teamList = pe([]);
  totalteam = pe(0);
  dealerObj = new yr();
  roleList = pe([]);
  masterSrv = W(Xe);
  toastr = W(fi);
  currentPage = 1;
  itemsPerPage = 10;
  searchTerm = "";
  filteredUsers = [];
  paginatedUsers = [];
  useForm = new Rt({});
  userObj = new Dl();
  previousEmail = "";
  isEditMode = !1;
  count;
  Role;
  totalrole;
  previousValue;
  user_id = "";
  dataTable;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  columns = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.displayAllUser(),
      console.log("\u{1F4E6} Loaded Dealer List:", this.dealerList()),
      this.dealerList().length &&
        this.dealerList()[0] &&
        console.log("\u{1F50D} Sample dealer:", this.dealerList()[0]),
      this.displayAllUser(),
      this.getAllTeams(),
      this.loadRole(),
      (this.filteredUsers = this.userList()),
      this.paginateUsers(),
      this.getAllDealer(),
      this.useForm.get("role_id")?.valueChanges.subscribe((i) => {
        if (i) {
          let t = this.roleList().find((r) => r.role_id === i);
          t &&
            (console.log("Role ID:", i),
            console.log("Role Name:", t.role_name),
            this.useForm.patchValue({ user_role: t.role_name }));
        }
      });
  }
  initializeForm() {
    this.useForm = new Rt({
      fname: new ot("", [Fe.required, Fe.minLength(2), Fe.maxLength(50)]),
      lname: new ot("", [Fe.required, Fe.minLength(2), Fe.maxLength(50)]),
      email: new ot("", [Fe.required, Fe.email, Fe.maxLength(100)]),
      phone: new ot(Number, [
        Fe.required,
        Fe.pattern(/^\d{10}$/),
        Fe.maxLength(10),
      ]),
      dealer_id: new ot(null, [Fe.required]),
      team_id: new ot(null, [Fe.required]),
      user_role: new ot(null, [Fe.required]),
      role_id: new ot(null, [Fe.required]),
    });
  }
  restrictToNumbers(i) {
    let e = i.key;
    /^\d$/.test(e) || i.preventDefault();
  }
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe({
      next: (i) => {
        console.log("\u{1F310} Full Dealer API Response:", i),
          i && i.data?.dealer?.rows?.length > 0
            ? (this.dealerList.set(i.data.dealer.rows),
              this.totalDealer.set(i.data.dealer.count),
              console.log("\u2705 Loaded Dealers:", this.dealerList()))
            : (console.warn(
                "\u26A0\uFE0F Dealer list empty or improperly structured"
              ),
              this.toastr.warning("No dealers found", "Information"));
      },
      error: (i) => {
        console.error("\u274C Dealer fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch dealers", "Error");
      },
    });
  }
  getAllTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (i) => {
        i && i.data.rows && i.data.rows
          ? (this.teamList.set(i.data.rows),
            console.log("Fetched teams:", this.teamList()),
            this.totalteam.set(i.data.count))
          : this.toastr.warning("No teams found", "Information");
      },
      error: (i) => {
        console.error("teams fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch teams", "Error");
      },
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (i) => {
        i && i.data && Array.isArray(i.data)
          ? (this.roleList.set(i.data),
            console.log("Fetched roles:", this.roleList()),
            this.totalrole.set(i.data.length))
          : this.toastr.warning("No roles found", "Information");
      },
      error: (i) => {
        console.error("Error fetching roles:", i),
          this.toastr.error(i.error?.error || "Error fetching roles", "Error");
      },
    });
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateUsers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredUsers = this.userList();
    else {
      let i = this.searchTerm.toLowerCase();
      this.filteredUsers = this.userList().filter(
        (e) =>
          e.name.toLowerCase().includes(i) ||
          e.email.toLowerCase().includes(i) ||
          (e.user_role?.toLowerCase().includes(i) ?? !1)
      );
    }
    (this.currentPage = 1), this.paginateUsers();
  }
  paginateUsers() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    (this.paginatedUsers = this.filteredUsers.slice(i, e)),
      (this.totalPages = Math.ceil(
        this.filteredUsers.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (t, r) => r + 1));
  }
  updatePages() {
    (this.totalPages = Math.ceil(
      this.filteredUsers.length / this.itemsPerPage
    )),
      (this.pages = Array(this.totalPages)
        .fill(0)
        .map((i, e) => e + 1));
  }
  initializeUsers() {
    let i = this.filteredUsers.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateUsers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateUsers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateUsers());
  }
  expand(i) {
    i.target.size = 6;
  }
  collapse(i) {
    i.target.size = 0;
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  openModal(i) {
    console.log("\u2705 openModal() function calledm of user"),
      console.log("User object received in openModal:", i),
      (this.isModalOpen = !0),
      i || (this.userObj = {}),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      i
        ? (this.useForm.patchValue({
            user_id: i.user_id,
            name: i.name || "",
            account_id: i.account_id || "",
            email: i.email || "",
            phone: i.phone || "",
            role_id: i.role_id || "",
            user_role: i.role_name || "",
            team_id: i.team_id || null,
            team_name: i.team_name || "",
            fname: i.fname || "",
            lname: i.lname || "",
          }),
          (this.previousEmail = i.email || ""),
          console.log("User team info:", i.team),
          console.log("Form team values:", {
            team_id: this.useForm.get("team_id")?.value,
            team_name: this.useForm.get("team_name")?.value,
          }),
          (this.userObj = G({}, i)))
        : (this.userObj = {});
  }
  onDealerChange() {
    let i = this.useForm.get("dealer_code"),
      e = this.useForm.get("dealer_id");
    if (i && e) {
      let t = this.dealerList().find((r) => r.dealer_code === i.value);
      t && e.setValue(t.dealer_id);
    }
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let i = this.useForm.get("team_name"),
      e = this.useForm.get("team_id");
    if (i && e && i.value) {
      console.log("Team name value:", i.value),
        console.log("Available teams:", this.teamList());
      let t = this.teamList().find((r) => r.team_name === i.value);
      t
        ? (console.log("Selected Team:", t), e.setValue(t.team_id))
        : console.warn("Team not found:", i.value);
    }
  }
  displayAllUser() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.totalUser.set(i.data.count),
            this.userList.set(i.data.rows),
            (this.filteredUsers = i.data.rows),
            this.initializeUsers())
          : (this.userList.set([]),
            (this.filteredUsers = []),
            this.toastr.warning("No users found", "Information"),
            this.initializeUsers());
      },
      error: (i) => {
        console.error("Users fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch users", "Error"),
          this.userList.set([]),
          (this.filteredUsers = []),
          this.initializeUsers();
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let i = this.useForm.value,
      e = this.roleList().find((t) => t.role_id === i.role_id);
    (i.user_role = e?.role_name || ""),
      this.masterSrv.createNewUser(i).subscribe({
        next: () => {
          this.toastr.success("User created successfully!", "Success"),
            this.displayAllUser(),
            this.useForm.reset(),
            (this.userObj = new Dl()),
            this.closeModal();
        },
        error: (t) => {
          let r = t.error?.message || "Failed to create user";
          this.toastr.error(r, "Creation Error");
        },
      });
  }
  onSaveAndClose() {
    this.useForm.valid && (this.onSave(), this.closeModal());
  }
  onUpdate() {
    if (
      (console.log("on update"),
      console.log("Form Values:", this.useForm.value),
      this.useForm.valid)
    ) {
      let i = this.useForm.value,
        e = `${(i.fname || "").trim()} ${(i.lname || "").trim()}`.replace(
          /\s+/g,
          " "
        );
      (i.name = e),
        (this.userObj = G(G({}, this.userObj), i)),
        console.log("\u{1F4E4} Payload sent to backend:", this.userObj),
        console.log("\u{1F50D} Form Status:", this.useForm.status),
        console.log("\u{1F680} Updated Payload before API call:", this.userObj),
        this.masterSrv.updateUser(this.userObj).subscribe(
          (t) => {
            t.status === 200
              ? (console.log("API Response:", t),
                console.log("\u2705 Update Success:", t),
                this.toastr.success(t.message, "Success"),
                this.userList.set(
                  this.userList().map((r) =>
                    r.user_id === this.userObj.user_id
                      ? Te(G(G({}, r), this.userObj), { name: e })
                      : r
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0),
                this.displayAllUser(),
                this.closeModal(),
                this.useForm.reset())
              : this.toastr.error("Update failed", "Error");
          },
          (t) => {
            console.error("\u274C API Error:", t),
              t.response
                ? this.toastr.error(t.response.data.message, "Error")
                : this.toastr.error("Failed to update user", "Error");
          }
        );
    } else
      this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(i) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", i?.user_id),
      (this.userObj = G({}, i)),
      (this.previousValue = i.name);
    let e = `${i.fname || ""} ${i.lname || ""}`.trim().replace(/\s+/g, " ");
    console.log("Formatted name onEdit:", e),
      this.useForm.patchValue({
        user_id: i.user_id,
        name: e,
        account_id: i.account_id || "",
        email: i.email || "",
        phone: i.phone || "",
        role_id: i.role_id || "",
        team_id: i.team_id || null,
        team_name: i.team_name || "",
        fname: i.fname || "",
        lname: i.lname || "",
        user_role: i.user_role || "",
        dealer_id: i.dealer_id || null,
      }),
      console.log("userObj.user_id after setting:", this.userObj?.user_id),
      setTimeout(() => {
        $("#myModal").modal({ backdrop: !1 });
      }, 100);
  }
  isUserNameChanged() {
    return (
      this.useForm.dirty &&
      (this.useForm.value.name !== this.previousValue ||
        this.useForm.value.email !== this.userObj.email ||
        this.useForm.value.phone !== this.userObj.phone ||
        this.useForm.value.role_id !== this.userObj.role_id ||
        this.useForm.value.team_id !== this.userObj.team_id ||
        this.useForm.value.fname !== this.userObj.fname ||
        this.useForm.value.lname !== this.userObj.lname)
    );
  }
  selectedUserForDeletion = null;
  selectUserForDeletion(i) {
    (this.selectedUserForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  setUserToDelete(i) {
    this.selectedUserForDeletion = i;
  }
  openDeleteModal(i) {
    (this.selectedUserForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  deleteUserId() {
    console.log("Deleting User ID:", this.selectedUserForDeletion?.user_id),
      this.selectedUserForDeletion && this.selectedUserForDeletion.user_id
        ? this.masterSrv
            .deleteUser(this.selectedUserForDeletion.user_id)
            .subscribe(
              (i) => {
                this.toastr.success("User deleted successfully", "Success"),
                  this.displayAllUser(),
                  (this.isDeleteModalOpen = !1);
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No users selected for deletion");
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof Rt && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ra), j(Qe));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-users"]],
    standalone: !0,
    features: [le],
    decls: 74,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      ["id", "user", 1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search users...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "colspan",
        "3",
        1,
        "text-center",
        2,
        "display",
        "flex",
        "margin-left",
        "120%",
        "white-space",
        "nowrap",
      ],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
        2,
        "top",
        "6%",
      ],
      [1, "modal-title", "text-center", "w-100", 2, "font-size", "18px"],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "fname", 1, "form-label"],
      [
        "id",
        "fname",
        "type",
        "text",
        "formControlName",
        "fname",
        "placeholder",
        "First Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "text-danger"],
      [
        "id",
        "lname",
        "type",
        "text",
        "formControlName",
        "lname",
        "placeholder",
        "Last Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_id", 1, "form-label"],
      [
        "id",
        "dealer_id",
        "formControlName",
        "dealer_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "role_id", 1, "form-label"],
      [
        "id",
        "role_id",
        "formControlName",
        "role_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [
        "id",
        "email",
        "type",
        "email",
        "formControlName",
        "email",
        "placeholder",
        "E-mail",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "team_name", 1, "form-label"],
      [
        "id",
        "team_name",
        "formControlName",
        "team_id",
        "placeholder",
        "team name",
        1,
        "form-control",
        "form-control-lg",
        3,
        "change",
        "ngClass",
      ],
      [
        "id",
        "phone",
        "formControlName",
        "phone",
        "placeholder",
        "Phone",
        "maxlength",
        "10",
        1,
        "form-control",
        "form-control-lg",
        3,
        "keypress",
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Users"),
        c()(),
        l(7, "li", 7)(8, "a", 8),
        h(9, "User Master"),
        c()()()(),
        l(10, "div", 9)(11, "div", 10)(12, "a", 11),
        R("click", function () {
          return t.openModal();
        }),
        U(13, "i", 12),
        h(14, "Add Users "),
        c()(),
        l(15, "div", 10)(16, "div", 13)(17, "p", 14),
        h(18, "Total User"),
        c(),
        l(19, "h3", 15),
        h(20),
        c()()()(),
        l(21, "div", 16)(22, "div", 17)(23, "div", 18)(24, "div", 19)(
          25,
          "div",
          20
        ),
        U(26, "label", 21),
        l(27, "select", 22),
        R("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        l(28, "option", 23),
        h(29, "10"),
        c(),
        l(30, "option", 24),
        h(31, "25"),
        c(),
        l(32, "option", 25),
        h(33, "50"),
        c(),
        l(34, "option", 26),
        h(35, "100"),
        c()(),
        l(36, "label", 27),
        h(37, "records per page"),
        c()(),
        l(38, "div", 28)(39, "div", 29)(40, "input", 30),
        dt("ngModelChange", function (o) {
          return ct(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        R("input", function () {
          return t.onSearchChange();
        }),
        c()()()(),
        l(41, "div", 31)(42, "table", 32)(43, "thead")(44, "tr")(45, "th"),
        h(46, "Sr No"),
        c(),
        l(47, "th"),
        h(48, "Name"),
        c(),
        l(49, "th"),
        h(50, "Email"),
        c(),
        l(51, "th"),
        h(52, "Role"),
        c(),
        l(53, "th"),
        h(54, "Action"),
        c()()(),
        l(55, "tbody"),
        A(56, MR, 3, 0, "tr", 33)(57, TR, 14, 4, "tr", 34),
        c()()(),
        l(58, "div", 35)(59, "div", 36)(60, "div", 37),
        h(61),
        c()(),
        l(62, "div", 36)(63, "div", 38)(64, "ul", 39)(65, "li", 40)(
          66,
          "a",
          41
        ),
        R("click", function () {
          return t.previousPage();
        }),
        h(67, "Previous"),
        c()(),
        A(68, ER, 3, 3, "li", 42),
        l(69, "li", 43)(70, "a", 41),
        R("click", function () {
          return t.nextPage();
        }),
        h(71, "Next"),
        c()()()()()()()()()()(),
        A(72, OR, 13, 0, "div", 44)(73, XR, 74, 38, "div", 44)),
        e & 2 &&
          (m(20),
          Z(" ", t.totalUser(), " "),
          m(20),
          lt("ngModel", t.searchTerm),
          m(16),
          y("ngIf", t.paginatedUsers.length === 0),
          m(),
          y("ngForOf", t.paginatedUsers),
          m(4),
          Fi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.currentPage * t.itemsPerPage < t.teamList().length
              ? t.currentPage * t.itemsPerPage
              : t.teamList().length,
            " of ",
            t.teamList().length,
            " entries "
          ),
          m(4),
          ne("disabled", t.currentPage === 1),
          m(3),
          y("ngForOf", t.visiblePages),
          m(),
          ne("disabled", t.currentPage === t.totalPages),
          m(3),
          y("ngIf", t.isDeleteModalOpen),
          m(),
          y("ngIf", t.isModalOpen));
    },
    dependencies: [
      Ae,
      It,
      At,
      We,
      Di,
      Br,
      ni,
      ri,
      Wt,
      Si,
      ii,
      Bi,
      mr,
      bp,
      _i,
      tt,
      xl,
      xy,
      hn,
      Xi,
      Zi,
      Jn,
      Cy,
    ],
    styles: [
      "body[_ngcontent-%COMP%]{display:flex;min-height:100vh;margin:0;padding:0}.custom-modal-position[_ngcontent-%COMP%]{top:18%}@media (max-width: 767px){.custom-modal-position[_ngcontent-%COMP%]{top:7%;border:2px solid red}}#user[_ngcontent-%COMP%]{margin-left:-2rem}.sidebar[_ngcontent-%COMP%]{width:250px;flex-shrink:0;background-color:#f8f9fa;z-index:1000}.content-body[_ngcontent-%COMP%]{flex-grow:1;padding:20px;box-sizing:border-box;overflow-x:hidden}@media (max-width: 768px){body[_ngcontent-%COMP%]{flex-direction:column}.sidebar[_ngcontent-%COMP%]{width:100%;height:auto;position:static}.content-body[_ngcontent-%COMP%]{margin-left:0;width:100%;padding:10px}}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (max-width: 576px){.search-input[_ngcontent-%COMP%]{margin-left:0!important;width:100%!important}}.card-box[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 0 15px #00000014;border-radius:10px}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.modal-backdrop[_ngcontent-%COMP%]{z-index:1040!important}.modal[_ngcontent-%COMP%]{z-index:1051!important;position:fixed!important;pointer-events:auto!important}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}@media (max-width: 991.98px){.search-input[_ngcontent-%COMP%]{width:100%;margin-top:10px}}@media only screen and (max-width: 1600px){.content-body[_ngcontent-%COMP%]{margin-left:0}}.searchbar[_ngcontent-%COMP%]{display:flex;float:right}input.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}@media (min-width: 760px) and (max-width: 820px){.delete-btn-ipad[_ngcontent-%COMP%]{margin-top:5px!important}}",
    ],
  });
};
var ZR = () => ["/Admin/dealer"],
  Sy = (n) => ["/Admin/singleUser", n];
function JR(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Subject"),
      c(),
      l(5, "h5", 17),
      h(6),
      c()(),
      l(7, "div", 15)(8, "h4", 16),
      h(9, "Assigned"),
      c(),
      l(10, "h5", 17),
      h(11),
      c()(),
      l(12, "div", 15)(13, "h4", 16),
      h(14, "Description"),
      c(),
      l(15, "h5", 17),
      h(16),
      c()(),
      l(17, "div", 15)(18, "h4", 16),
      h(19, "account Name"),
      c(),
      l(20, "h5", 17),
      h(21),
      c()()(),
      l(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      h(25, "start Date"),
      c(),
      l(26, "h5", 17),
      h(27),
      c()(),
      l(28, "div", 15)(29, "h4", 16),
      h(30, "End Date"),
      c(),
      l(31, "h5", 17),
      h(32),
      c()(),
      l(33, "div", 15)(34, "h4", 16),
      h(35, "Name"),
      c(),
      l(36, "h5", 17),
      h(37),
      c()(),
      l(38, "div", 15)(39, "h4", 16),
      h(40, "Lead Code"),
      c(),
      l(41, "h5", 17),
      h(42),
      c()()(),
      U(43, "div", 18),
      l(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      h(47, "Lead Email"),
      c(),
      l(48, "h5", 17),
      h(49),
      c()(),
      l(50, "div", 15)(51, "h4", 16),
      h(52, "Flag"),
      c(),
      l(53, "h5", 17),
      h(54),
      c()()(),
      l(55, "div", 19)(56, "a", 20),
      h(57, "Go Back"),
      c()()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      d,
      u,
      f,
      v,
      S,
      T = x();
    m(6),
      Z(" ", (e = T.eventList()) == null ? null : e.subject, ""),
      m(5),
      B((t = T.eventList()) == null ? null : t.assigned_to),
      m(5),
      B((r = T.eventList()) == null ? null : r.description),
      m(5),
      B((o = T.eventList()) == null ? null : o.name),
      m(6),
      Z(" ", (a = T.eventList()) == null ? null : a.start_date, ""),
      m(5),
      Z(" ", (d = T.eventList()) == null ? null : d.end_date, ""),
      m(5),
      Z(" ", (u = T.eventList()) == null ? null : u.name, ""),
      m(5),
      B((f = T.eventList()) == null ? null : f.lead_code),
      m(7),
      Z(" ", (v = T.eventList()) == null ? null : v.lead_email, ""),
      m(5),
      Z(" ", (S = T.eventList()) == null ? null : S.flag, ""),
      m(2),
      y("routerLink", de(11, Sy, T.previousRoute));
  }
}
var iu = class n {
  constructor(i) {
    this.route = i;
  }
  eventList = pe(null);
  masterSrv = W(Xe);
  eventData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.eventData = i.leadData),
          this.eventData
            ? this.eventById(this.eventData.event_id)
            : console.warn("event data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("eventId");
        e
          ? this.eventById(e)
          : this.eventData ||
            console.error(
              "event ID not found in the URL and no resolver data."
            );
      });
  }
  eventById(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.eventById(i).subscribe({
        next: (e) => {
          this.eventList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(ei));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-single-event"]],
    standalone: !0,
    features: [le],
    decls: 21,
    vars: 6,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "row", "mb-4", "text-center"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
          5,
          "a",
          5
        ),
        h(6, "Utils"),
        c()(),
        l(7, "li", 4)(8, "a", 6),
        h(9, "Dealer"),
        c()(),
        l(10, "li", 4)(11, "a", 6),
        h(12, "Single Dealer"),
        c()(),
        l(13, "li", 7)(14, "a", 8),
        h(15, "Single Event"),
        c()()()(),
        l(16, "div", 9)(17, "div", 10)(18, "h5", 11),
        h(19, "User Details"),
        c()(),
        A(20, JR, 58, 13, "div", 12),
        c()()()),
        e & 2 &&
          (m(8),
          y("routerLink", pi(3, ZR)),
          m(3),
          y("routerLink", de(4, Sy, t.previousRoute)),
          m(9),
          y("ngIf", t.eventList()));
    },
    dependencies: [Ae, We, tt, ti],
  });
};
var eF = () => ["/Admin/dealer"],
  Dy = (n) => ["/Admin/singleUser", n];
function tF(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Lead Code"),
      c(),
      l(5, "h5", 17),
      h(6),
      c()(),
      l(7, "div", 15)(8, "h4", 16),
      h(9, "Status"),
      c(),
      l(10, "h5", 17),
      h(11),
      c()(),
      l(12, "div", 15)(13, "h4", 16),
      h(14, "Purchase Type"),
      c(),
      l(15, "h5", 17),
      h(16),
      c()(),
      l(17, "div", 15)(18, "h4", 16),
      h(19, "Sub Type"),
      c(),
      l(20, "h5", 17),
      h(21),
      c()()(),
      l(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      h(25, "Type"),
      c(),
      l(26, "h5", 17),
      h(27),
      c()(),
      l(28, "div", 15)(29, "h4", 16),
      h(30, "Sub Type"),
      c(),
      l(31, "h5", 17),
      h(32),
      c()(),
      l(33, "div", 15)(34, "h4", 16),
      h(35, "Brand"),
      c(),
      l(36, "h5", 17),
      h(37),
      c()(),
      l(38, "div", 15)(39, "h4", 16),
      h(40, "PMI"),
      c(),
      l(41, "h5", 17),
      h(42),
      c()()(),
      l(43, "div", 14)(44, "div", 15)(45, "h4", 16),
      h(46, "Lead Source"),
      c(),
      l(47, "h5", 17),
      h(48),
      c()(),
      l(49, "div", 15)(50, "h4", 16),
      h(51, "Last Name"),
      c(),
      l(52, "h5", 17),
      h(53),
      c()(),
      l(54, "div", 15)(55, "h4", 16),
      h(56, "Mobile"),
      c(),
      l(57, "h5", 17),
      h(58),
      c()(),
      l(59, "div", 15)(60, "h4", 16),
      h(61, "Email"),
      c(),
      l(62, "h5", 17),
      h(63),
      c()()(),
      l(64, "div", 14)(65, "div", 15)(66, "h4", 16),
      h(67, "Lead Owner"),
      c(),
      l(68, "h5", 17),
      h(69),
      c()(),
      l(70, "div", 15)(71, "h4", 16),
      h(72, "Flag"),
      c(),
      l(73, "h5", 17),
      h(74),
      c()()(),
      l(75, "div", 18)(76, "a", 19),
      h(77, "Go Back"),
      c()()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      d,
      u,
      f,
      v,
      S,
      T,
      M,
      I,
      L,
      E = x();
    m(6),
      B((e = E.leadList()) == null ? null : e.lead_code),
      m(5),
      B((t = E.leadList()) == null ? null : t.status),
      m(5),
      B((r = E.leadList()) == null ? null : r.status),
      m(5),
      B((o = E.leadList()) == null ? null : o.purchase_type),
      m(6),
      B((a = E.leadList()) == null ? null : a.type),
      m(5),
      B((d = E.leadList()) == null ? null : d.sub_type),
      m(5),
      B((u = E.leadList()) == null ? null : u.brand),
      m(5),
      B((f = E.leadList()) == null ? null : f.PMI),
      m(6),
      B((v = E.leadList()) == null ? null : v.lead_source),
      m(5),
      B((S = E.leadList()) == null ? null : S.lname),
      m(5),
      B((T = E.leadList()) == null ? null : T.mobile),
      m(5),
      B((M = E.leadList()) == null ? null : M.email),
      m(6),
      B((I = E.leadList()) == null ? null : I.lead_owner),
      m(5),
      B((L = E.leadList()) == null ? null : L.flag),
      m(2),
      y("routerLink", de(15, Dy, E.previousRoute));
  }
}
var nu = class n {
  constructor(i) {
    this.route = i;
  }
  leadList = pe(null);
  masterSrv = W(Xe);
  leadData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.leadData = i.leadData),
          this.leadData
            ? this.singleLeadData(this.leadData.lead_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("leadId");
        e
          ? this.singleLeadData(e)
          : this.leadData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleLeadData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.leadById(i).subscribe({
        next: (e) => {
          this.leadList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(ei));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-single-lead"]],
    standalone: !0,
    features: [le],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (l(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          c()(),
          l(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          c()(),
          l(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          c()(),
          l(13, "li", 7)(14, "a", 8),
          h(15),
          c()()()(),
          l(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19, "Leads Details"),
          c()(),
          A(20, tF, 78, 17, "div", 12),
          c()()()),
        e & 2)
      ) {
        let r;
        m(8),
          y("routerLink", pi(4, eF)),
          m(3),
          y("routerLink", de(5, Dy, t.previousRoute)),
          m(4),
          B((r = t.leadList()) == null ? null : r.lead_owner),
          m(5),
          y("ngIf", t.leadList());
      }
    },
    dependencies: [Ae, We, tt, ti],
  });
};
var ru = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.leadById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Xe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var ou = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("eventId");
    return console.log(t), t ? this.masterSrv.eventById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Xe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var au = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.userById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Xe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var iF = () => ["/Admin/dealer"],
  My = (n) => ["/Admin/singleUser", n];
function nF(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Name"),
      c(),
      l(5, "h5", 17),
      h(6),
      c()(),
      l(7, "div", 15)(8, "h4", 16),
      h(9, "Account ID"),
      c(),
      l(10, "h5", 17),
      h(11),
      c()()(),
      l(12, "div", 14)(13, "div", 15)(14, "h4", 16),
      h(15, "Email"),
      c(),
      l(16, "h5", 17),
      h(17),
      c()(),
      l(18, "div", 15)(19, "h4", 16),
      h(20, "Phone"),
      c(),
      l(21, "h5", 17),
      h(22),
      c()()(),
      l(23, "div", 14)(24, "div", 15)(25, "h4", 16),
      h(26, "Role"),
      c(),
      l(27, "h5", 17),
      h(28),
      c()(),
      l(29, "div", 15)(30, "h4", 16),
      h(31, "Dealer Code"),
      c(),
      l(32, "h5", 17),
      h(33),
      c()()(),
      l(34, "div", 18)(35, "a", 19),
      h(36, "Go Back"),
      c()()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      d,
      u = x();
    m(6),
      B((e = u.userList()) == null ? null : e.name),
      m(5),
      B((t = u.userList()) == null ? null : t.account_id),
      m(6),
      B((r = u.userList()) == null ? null : r.email),
      m(5),
      B((o = u.userList()) == null ? null : o.phone),
      m(6),
      B((a = u.userList()) == null ? null : a.user_role),
      m(5),
      B((d = u.userList()) == null ? null : d.dealer_code),
      m(2),
      y("routerLink", de(7, My, u.previousRoute));
  }
}
var su = class n {
  constructor(i) {
    this.route = i;
  }
  masterSrv = W(Xe);
  userData;
  previousRoute;
  userList = pe(null);
  ngOnInit() {
    this.previousRoute = localStorage.getItem("previousRoute");
    debugger;
    this.route.data.subscribe((i) => {
      console.log("Resolved userData:", i.userData),
        i.userData &&
        Array.isArray(i.userData.data) &&
        i.userData.data.length > 0
          ? (this.userData = i.userData.data[0])
          : console.warn("User data not available.");
    }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("user_id");
        e && this.fetchSingleUser(e);
      });
  }
  fetchSingleUser(i) {
    console.log("Calling fetchSingleUser with ID:", i),
      this.masterSrv.userById(i).subscribe({
        next: (e) => {
          console.log("API Response:", e);
          debugger;
          e &&
          e.status === 200 &&
          e.data &&
          Array.isArray(e.data) &&
          e.data.length > 0
            ? (console.log("User found:", e.data[0]),
              this.userList.set(e.data[0]),
              console.log("UserList signal after setting:", this.userList()))
            : console.error("Invalid or empty response:", e);
        },
        error: (e) => {
          console.error("API Error:", e),
            e.error && console.error("Error details:", e.error),
            e.message && console.error("Error message:", e.message),
            e.status && console.error("Error status:", e.status);
        },
        complete: () => {
          console.log("API call completed");
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(ei));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-single-user"]],
    standalone: !0,
    features: [le],
    decls: 21,
    vars: 8,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4"],
      [1, "col-md-6", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (l(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          c()(),
          l(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          c()(),
          l(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          c()(),
          l(13, "li", 7)(14, "a", 8),
          h(15),
          c()()()(),
          l(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19),
          c()(),
          A(20, nF, 37, 9, "div", 12),
          c()()()),
        e & 2)
      ) {
        let r, o;
        m(8),
          y("routerLink", pi(5, iF)),
          m(3),
          y("routerLink", de(6, My, t.previousRoute)),
          m(4),
          B((r = t.userList()) == null ? null : r.name),
          m(4),
          Z(" ", (o = t.userList()) == null ? null : o.name, " Details "),
          m(),
          y("ngIf", t.userList());
      }
    },
    dependencies: [Li, ti, Ae, We],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}",
    ],
  });
};
var lu = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.taskById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Xe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var rF = () => ["/Admin/dealer"],
  Ty = (n) => ["/Admin/singleUser", n];
function oF(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Subject"),
      c(),
      l(5, "h5", 17),
      h(6),
      c()(),
      l(7, "div", 15)(8, "h4", 16),
      h(9, "Status"),
      c(),
      l(10, "h5", 17),
      h(11),
      c()(),
      l(12, "div", 15)(13, "h4", 16),
      h(14, "Assigned"),
      c(),
      l(15, "h5", 17),
      h(16),
      c()()(),
      l(17, "div", 14)(18, "div", 15)(19, "h4", 16),
      h(20, "Due Date"),
      c(),
      l(21, "h5", 17),
      h(22),
      c()(),
      l(23, "div", 15)(24, "h4", 16),
      h(25, "Comments"),
      c(),
      l(26, "h5", 17),
      h(27),
      c()(),
      l(28, "div", 15)(29, "h4", 16),
      h(30, "Lead Name"),
      c(),
      l(31, "h5", 17),
      h(32),
      c()()(),
      l(33, "div", 14)(34, "div", 15)(35, "h4", 16),
      h(36, "Lead Email"),
      c(),
      l(37, "h5", 17),
      h(38),
      c()(),
      l(39, "div", 15)(40, "h4", 16),
      h(41, "Lead Code"),
      c(),
      l(42, "h5", 17),
      h(43),
      c()()(),
      l(44, "div", 18)(45, "a", 19),
      h(46, "Go Back"),
      c()()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      d,
      u,
      f,
      v = x();
    m(6),
      B((e = v.taskList()) == null ? null : e.subject),
      m(5),
      B((t = v.taskList()) == null ? null : t.status),
      m(5),
      B((r = v.taskList()) == null ? null : r.assigned_to),
      m(6),
      B((o = v.taskList()) == null ? null : o.due_date),
      m(5),
      B((a = v.taskList()) == null ? null : a.comments),
      m(5),
      B((d = v.taskList()) == null ? null : d.lead_name),
      m(6),
      B((u = v.taskList()) == null ? null : u.lead_email),
      m(5),
      B((f = v.taskList()) == null ? null : f.lead_code),
      m(2),
      y("routerLink", de(9, Ty, v.previousRoute));
  }
}
var cu = class n {
  constructor(i) {
    this.route = i;
  }
  taskList = pe(null);
  masterSrv = W(Xe);
  taskData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.taskData = i.taskData),
          this.taskData
            ? this.singleTaskData(this.taskData.task_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("taskId");
        e
          ? this.singleTaskData(e)
          : this.taskData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleTaskData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.taskById(i).subscribe({
        next: (e) => {
          this.taskList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(ei));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-single-task"]],
    standalone: !0,
    features: [le],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-4", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (l(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          c()(),
          l(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          c()(),
          l(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          c()(),
          l(13, "li", 7)(14, "a", 8),
          h(15),
          c()()()(),
          l(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19, "Task Details"),
          c()(),
          A(20, oF, 47, 11, "div", 12),
          c()()()),
        e & 2)
      ) {
        let r;
        m(8),
          y("routerLink", pi(4, rF)),
          m(3),
          y("routerLink", de(5, Ty, t.previousRoute)),
          m(4),
          B((r = t.taskList()) == null ? null : r.assigned_to),
          m(5),
          y("ngIf", t.taskList());
      }
    },
    dependencies: [Ae, We, tt, ti],
  });
};
var du = class n {
  constructor(i) {
    this.router = i;
    this.initRouteTracking();
  }
  previousIdSubject = new Nt(null);
  previousId$ = this.previousIdSubject.asObservable();
  currentId = null;
  initRouteTracking() {
    this.router.events.pipe(St((i) => i instanceof ci)).subscribe(() => {
      let t = this.router.url.split("/")[3] || null;
      this.currentId && this.setPreviousId(this.currentId),
        (this.currentId = t);
    });
  }
  setPreviousId(i) {
    localStorage.setItem("previousId", i), this.previousIdSubject.next(i);
  }
  getPreviousId() {
    return localStorage.getItem("previousId");
  }
  clearPreviousId() {
    localStorage.removeItem("previousId"), this.previousIdSubject.next(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(vt));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var sF = () => ["/Admin/dealer"],
  lF = (n) => ["/Admin/singleUser", n];
function cF(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Opportunity Name"),
      c(),
      l(5, "h5", 17),
      h(6),
      c()(),
      l(7, "div", 15)(8, "h4", 16),
      h(9, "stage"),
      c(),
      l(10, "h5", 17),
      h(11),
      c()(),
      l(12, "div", 15)(13, "h4", 16),
      h(14, "Opportunities Record"),
      c(),
      l(15, "h5", 17),
      h(16),
      c()(),
      l(17, "div", 15)(18, "h4", 16),
      h(19, "account Name"),
      c(),
      l(20, "h5", 17),
      h(21),
      c()()(),
      l(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      h(25, "close Date"),
      c(),
      l(26, "h5", 17),
      h(27),
      c()(),
      l(28, "div", 15)(29, "h4", 16),
      h(30, "Opportunity Currency"),
      c(),
      l(31, "h5", 17),
      h(32),
      c()(),
      l(33, "div", 15)(34, "h4", 16),
      h(35, "VIN"),
      c(),
      l(36, "h5", 17),
      h(37),
      c()(),
      l(38, "div", 15)(39, "h4", 16),
      h(40, "Purchase Type"),
      c(),
      l(41, "h5", 17),
      h(42),
      c()()(),
      U(43, "div", 14),
      l(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      h(47, "Sub Type"),
      c(),
      l(48, "h5", 17),
      h(49),
      c()(),
      l(50, "div", 15)(51, "h4", 16),
      h(52, "Brand"),
      c(),
      l(53, "h5", 17),
      h(54),
      c()(),
      l(55, "div", 15)(56, "h4", 16),
      h(57, "PMI"),
      c(),
      l(58, "h5", 17),
      h(59),
      c()(),
      l(60, "div", 15)(61, "h4", 16),
      h(62, "Description"),
      c(),
      l(63, "h5", 17),
      h(64),
      c()()(),
      l(65, "div", 14)(66, "div", 15)(67, "h4", 16),
      h(68, "Mobile"),
      c(),
      l(69, "h5", 17),
      h(70),
      c()(),
      l(71, "div", 15)(72, "h4", 16),
      h(73, "Phone"),
      c(),
      l(74, "h5", 17),
      h(75),
      c()(),
      l(76, "div", 15)(77, "h4", 16),
      h(78, "E-mail"),
      c(),
      l(79, "h5", 17),
      h(80),
      c()(),
      l(81, "div", 15)(82, "h4", 16),
      h(83, "Enquiry Type"),
      c(),
      l(84, "h5", 17),
      h(85),
      c()()(),
      l(86, "div", 18)(87, "a", 19),
      h(88, "Go Back"),
      c()()()),
    n & 2)
  ) {
    let e,
      t,
      r,
      o,
      a,
      d,
      u,
      f,
      v,
      S,
      T,
      M,
      I,
      L,
      E,
      F,
      ee = x();
    m(6),
      B((e = ee.oppList()) == null ? null : e.opportunity_name),
      m(5),
      B((t = ee.oppList()) == null ? null : t.stage),
      m(5),
      B((r = ee.oppList()) == null ? null : r.opportunity_record_type),
      m(5),
      B((o = ee.oppList()) == null ? null : o.account_name),
      m(6),
      B((a = ee.oppList()) == null ? null : a.close_date),
      m(5),
      B((d = ee.oppList()) == null ? null : d.opportunity_currency),
      m(5),
      B((u = ee.oppList()) == null ? null : u.purchase_type),
      m(5),
      B((f = ee.oppList()) == null ? null : f.type),
      m(7),
      B((v = ee.oppList()) == null ? null : v.sub_type),
      m(5),
      B((S = ee.oppList()) == null ? null : S.brand),
      m(5),
      B((T = ee.oppList()) == null ? null : T.PMI),
      m(5),
      B((M = ee.oppList()) == null ? null : M.description),
      m(6),
      B((I = ee.oppList()) == null ? null : I.mobile),
      m(5),
      B((L = ee.oppList()) == null ? null : L.phone),
      m(5),
      B((E = ee.oppList()) == null ? null : E.email),
      m(5),
      B((F = ee.oppList()) == null ? null : F.enquiry_type);
  }
}
var uu = class n {
  constructor(i, e) {
    this.route = i;
    this.routeTrackingService = e;
  }
  oppList = pe(null);
  masterSrv = W(Xe);
  oppData;
  previousRoutes;
  previousRoute = null;
  previousId = null;
  ngOnInit() {
    this.routeTrackingService.previousId$.subscribe((i) => {
      this.previousId = i;
    }),
      (this.previousId = this.routeTrackingService.getPreviousId()),
      this.route.data.subscribe((i) => {
        (this.oppData = i.oppData),
          this.oppData
            ? this.singleoppData(this.oppData.opportunity_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("oppId");
        e
          ? this.singleoppData(e)
          : this.oppData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleoppData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.oppById(i).subscribe({
        next: (e) => {
          this.oppList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(ei), j(du));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-single-opp"]],
    standalone: !0,
    features: [le],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-start",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        "href",
        "/Admin/dealer",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (l(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          c()(),
          l(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          c()(),
          l(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          c()(),
          l(13, "li", 7)(14, "a", 8),
          h(15),
          c()()()(),
          l(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19, " Opportunities Details "),
          c()(),
          A(20, cF, 89, 16, "div", 12),
          c()()()),
        e & 2)
      ) {
        let r;
        m(8),
          y("routerLink", pi(4, sF)),
          m(3),
          y("routerLink", de(5, lF, t.previousId)),
          m(4),
          B((r = t.oppList()) == null ? null : r.opportunity_name),
          m(5),
          y("ngIf", t.oppList());
      }
    },
    dependencies: [tt, Ae, We, ti],
  });
};
var hu = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.oppById(t) : fe(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(Xe));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Kt = class n {
  constructor(i, e) {
    this.router = i;
    this.platformId = e;
  }
  canActivate(i, e) {
    if (!dn(this.platformId)) return !1;
    let t = this.getToken();
    if (!t) return this.router.navigate([""]), !1;
    try {
      let r = this.decodeToken(t);
      if (r.exp * 1e3 < Date.now())
        return this.removeToken(), this.router.navigate([""]), !1;
      if (i.data.roles) {
        let a = r.roles || [],
          d = i.data.roles;
        if (!this.checkRoles(a, d)) return this.router.navigate([""]), !1;
      }
      return !0;
    } catch (r) {
      return (
        console.error("Token validation error:", r),
        this.removeToken(),
        this.router.navigate([""]),
        !1
      );
    }
  }
  getToken() {
    try {
      return typeof localStorage < "u" ? localStorage.getItem("token") : null;
    } catch (i) {
      return console.error("Error accessing token:", i), null;
    }
  }
  removeToken() {
    try {
      typeof localStorage < "u" && localStorage.removeItem("token");
    } catch (i) {
      console.error("Error removing token:", i);
    }
  }
  decodeToken(i) {
    try {
      let e = i.split(".")[1];
      return JSON.parse(atob(e));
    } catch (e) {
      throw (console.error("Token decoding error:", e), e);
    }
  }
  checkRoles(i, e) {
    return e.some((t) => i.includes(t));
  }
  static ɵfac = function (e) {
    return new (e || n)(Q(vt), Q(si));
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ml = class n {
  role_id;
  role_name;
  description;
  constructor() {
    (this.role_id = ""), (this.role_name = ""), (this.description = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var dF = (n) => ({ "is-invalid": n });
function uF(n, i) {
  n & 1 && (l(0, "tr")(1, "td", 30), h(2, "No Roles Found"), c()());
}
function hF(n, i) {
  if (
    (n & 1 &&
      (l(0, "tr")(1, "td", 24),
      h(2),
      c(),
      l(3, "td", 24),
      h(4),
      c(),
      l(5, "td", 24),
      h(6),
      c(),
      l(7, "td"),
      U(8, "div", 31),
      c()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      r = x();
    m(2),
      B((r.currentPage - 1) * r.itemsPerPage + t + 1),
      m(2),
      B(e.role_name),
      m(2),
      B(e.description);
  }
}
function pF(n, i) {
  if ((n & 1 && (l(0, "option", 53), h(1), c()), n & 2)) {
    let e = i.$implicit;
    y("value", e.dealer_code), m(), Z(" ", e.dealer_code, " ");
  }
}
function mF(n, i) {
  n & 1 && (l(0, "span"), h(1, " Role Name is required. "), c());
}
function fF(n, i) {
  if ((n & 1 && (l(0, "div", 44), A(1, mF, 2, 0, "span", 25), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("role_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function gF(n, i) {
  if (
    (n & 1 && (Le(0), l(1, "button", 54), h(2, " Edit "), c(), Ve()), n & 2)
  ) {
    let e = x(2);
    m(), y("disabled", !e.isRoleNameChanged());
  }
}
function _F(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 55),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.onSave());
      }),
      h(1, " Save "),
      c();
  }
}
function bF(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 32)(1, "div", 33)(2, "div", 34)(3, "div", 35)(4, "h5", 36),
      h(5),
      c(),
      l(6, "button", 37),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeModal());
      }),
      l(7, "span", 38),
      h(8, "\xD7"),
      c()()(),
      l(9, "div", 39)(10, "form", 40)(11, "div", 41)(12, "div", 42)(
        13,
        "label",
        43
      ),
      h(14, " Role Name "),
      l(15, "span", 44),
      h(16, "*"),
      c()(),
      l(17, "select", 45)(18, "option", 46),
      h(19, "Select Role"),
      c(),
      A(20, pF, 2, 2, "option", 47),
      c(),
      A(21, fF, 2, 1, "div", 48),
      c(),
      l(22, "div", 42)(23, "label", 43),
      h(24, " Description "),
      c(),
      U(25, "input", 49),
      c()(),
      l(26, "div", 50),
      A(27, gF, 3, 1, "ng-container", 51),
      l(28, "button", 52),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeModal());
      }),
      h(29, " Close "),
      c(),
      A(30, _F, 2, 0, "ng-template", null, 0, bt),
      c()()()()()();
  }
  if (n & 2) {
    let e,
      t,
      r = ut(31),
      o = x();
    m(5),
      Z(
        " ",
        o.roleObj.role_name || o.roleObj.description
          ? "Edit User"
          : "Add New Role",
        " "
      ),
      m(5),
      y("formGroup", o.useForm),
      m(7),
      y(
        "ngClass",
        de(
          8,
          dF,
          ((e = o.useForm.get("role_name")) == null ? null : e.touched) &&
            ((e = o.useForm.get("role_name")) == null ? null : e.invalid)
        )
      ),
      m(),
      y("ngValue", null),
      m(2),
      y("ngForOf", o.staticDealerList),
      m(),
      y(
        "ngIf",
        ((t = o.useForm.get("role_name")) == null ? null : t.invalid) &&
          ((t = o.useForm.get("role_name")) == null ? null : t.touched)
      ),
      m(6),
      y("ngIf", o.roleObj.role_id)("ngIfElse", r);
  }
}
var pu = class n {
  constructor(i) {
    this.cdr = i;
    console.log("Constructor called"), this.initializeForm();
  }
  http = W(jt);
  useForm = new Rt({});
  roleList = pe([]);
  count = pe(0);
  totalRoles = pe(0);
  isModalOpen = !1;
  roleObj = new Ml();
  previousValue = "";
  isEditMode = !1;
  isSubmitting = !1;
  roleListAll = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  pages = [];
  totalPages = 1;
  filteredRoles = [];
  paginatedRoles = [];
  masterSrv = W(Xe);
  toastr = W(fi);
  staticDealerList = [
    { dealer_code: "Admin" },
    { dealer_code: "SM" },
    { dealer_code: "PS" },
    { dealer_code: "GM" },
    { dealer_code: "DP" },
  ];
  ngOnInit() {
    console.log("ngOnInit triggered"), this.loadRole();
  }
  initializeForm() {
    console.log("Initializing form..."),
      (this.useForm = new Rt({
        role_name: new ot("", [Fe.required]),
        description: new ot(""),
      }));
  }
  openModal(i) {
    this.useForm.reset(),
      (this.isModalOpen = !0),
      (this.isSubmitting = !1),
      document.body.classList.add("modal-open"),
      (this.isEditMode = !!i),
      i
        ? (this.useForm.patchValue({
            role_name: i.role_name || "",
            description: i.description || "",
          }),
          (this.roleObj = G({}, i)))
        : (this.roleObj = new Ml());
  }
  onSaveAndClose() {
    this.useForm.valid && this.onSave();
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e.controls && this.markFormGroupTouched(e);
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (i) => {
        this.roleList.set(i.data),
          this.count.set(i.data.length),
          (this.filteredRoles = i.data),
          this.applyFilterAndPagination();
      },
      error: (i) => {
        this.toastr.error("Failed to load role", "Error"),
          console.error("role load error:", i);
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    if (!this.isSubmitting) {
      if (
        (this.markFormGroupTouched(this.useForm),
        console.log("Save button clicked"),
        this.useForm.invalid)
      ) {
        console.warn("Form is invalid:", this.useForm.value),
          this.useForm.markAllAsTouched();
        return;
      }
      console.log("Form is valid. Submitting:", this.useForm.value),
        (this.isSubmitting = !0),
        this.masterSrv.createRole(this.useForm.value).subscribe({
          next: (i) => {
            console.log("Role created successfully", i),
              this.toastr.success("Role created successfully!", "Success"),
              this.loadRole(),
              console.log("closing from next"),
              this.closeModal();
          },
          error: (i) => {
            console.error("Create role error:", i), (this.isSubmitting = !1);
            let e =
              i.error?.error || i.error?.message || "Failed to create role.";
            this.toastr.error(e, "Error"),
              this.closeModal(),
              console.log("closing from error");
          },
          complete: () => {
            this.isSubmitting = !1;
          },
        });
    }
  }
  onSearchChange() {
    (this.currentPage = 1), this.applyFilterAndPagination();
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      this.applyFilterAndPagination();
  }
  applyFilterAndPagination() {
    let i = this.roleList(),
      e = (this.searchTerm ?? "").toLowerCase();
    (this.filteredRoles = i.filter(
      (t) =>
        (t.role_name ?? "").toLowerCase().includes(e) ||
        (t.description ?? "").toLowerCase().includes(e)
    )),
      (this.totalPages = Math.ceil(
        this.filteredRoles.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (t, r) => r + 1)),
      this.paginateRoles();
  }
  closeModal() {
    (this.isModalOpen = !1),
      document.body.classList.remove("modal-open"),
      console.log("Modal closed");
  }
  paginateRoles() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedRoles = this.filteredRoles.slice(i, e);
  }
  goToPage(i) {
    (this.currentPage = i), this.paginateRoles();
  }
  previousPage() {
    this.currentPage > 1 && (this.currentPage--, this.paginateRoles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateRoles());
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredRoles.length
    );
  }
  min(i, e) {
    return Math.min(i, e);
  }
  updatePagination() {
    (this.totalPages = Math.ceil(
      this.filteredRoles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      (this.paginatedRoles = this.filteredRoles.slice(
        (this.currentPage - 1) * this.itemsPerPage,
        this.currentPage * this.itemsPerPage
      ));
  }
  isRoleNameChanged() {
    return this.useForm.value.role_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Qe));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-role"]],
    standalone: !0,
    features: [le],
    decls: 42,
    vars: 4,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3"],
      [1, "col-md-6"],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "4", 1, "text-center"],
      [1, "d-flex"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "role_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "role_name",
        "formControlName",
        "role_name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["class", "text-danger", 4, "ngIf"],
      [
        "id",
        "description",
        "type",
        "text",
        "formControlName",
        "description",
        "placeholder",
        "Description",
        1,
        "form-control",
        "form-control-lg",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "disabled",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Users"),
        c()(),
        l(7, "li", 7)(8, "a", 8),
        h(9, "Role Master"),
        c()()()(),
        l(10, "div", 9)(11, "div", 10)(12, "a", 11),
        R("click", function () {
          return t.openModal();
        }),
        U(13, "i", 12),
        h(14, "Add Roles "),
        c()(),
        l(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Roles"),
        c(),
        l(19, "h3", 16),
        h(20),
        c()()()(),
        l(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20),
        U(25, "div", 21),
        c()()(),
        l(26, "div", 22)(27, "table", 23)(28, "thead")(29, "tr")(30, "th", 24),
        h(31, "Sr No"),
        c(),
        l(32, "th", 24),
        h(33, "Role Name"),
        c(),
        l(34, "th", 24),
        h(35, "Description"),
        c()()(),
        l(36, "tbody"),
        A(37, uF, 3, 0, "tr", 25)(38, hF, 9, 3, "tr", 26),
        c()()(),
        l(39, "div", 27),
        U(40, "div", 28),
        c()()(),
        A(41, bF, 32, 10, "div", 29),
        c()),
        e & 2 &&
          (m(20),
          Z(" ", t.filteredRoles.length, " "),
          m(17),
          y("ngIf", t.paginatedRoles.length === 0),
          m(),
          y("ngForOf", t.paginatedRoles),
          m(3),
          y("ngIf", t.isModalOpen));
    },
    dependencies: [
      tt,
      Br,
      ni,
      ri,
      Wt,
      Si,
      ii,
      Bi,
      mr,
      hn,
      Xi,
      Zi,
      Ae,
      It,
      At,
      We,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.table-responsive[_ngcontent-%COMP%]{width:100%;overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}body[_ngcontent-%COMP%]{overflow-x:hidden}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.toast-warning[_ngcontent-%COMP%]{background-color:#ff9800!important;color:#fff!important}.toast-info[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}",
    ],
  });
};
var mu = class n {
  dtOptions = {};
  ngOnInit() {
    this.dtOptions = { pagingType: "full_numbers" };
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-datatable"]],
    standalone: !0,
    features: [le],
    decls: 94,
    vars: 1,
    consts: [["datatable", "", 1, "row-border", "hover", 3, "dtOptions"]],
    template: function (e, t) {
      e & 1 &&
        (l(0, "table", 0)(1, "thead")(2, "tr")(3, "th"),
        h(4, "ID"),
        c(),
        l(5, "th"),
        h(6, "First name"),
        c(),
        l(7, "th"),
        h(8, "Last name"),
        c()()(),
        l(9, "tbody")(10, "tr")(11, "td"),
        h(12, "1"),
        c(),
        l(13, "td"),
        h(14, "Foo"),
        c(),
        l(15, "td"),
        h(16, "Bar"),
        c()(),
        l(17, "tr")(18, "td"),
        h(19, "2"),
        c(),
        l(20, "td"),
        h(21, "Someone"),
        c(),
        l(22, "td"),
        h(23, "Youknow"),
        c()(),
        l(24, "tr")(25, "td"),
        h(26, "3"),
        c(),
        l(27, "td"),
        h(28, "Iamout"),
        c(),
        l(29, "td"),
        h(30, "Ofinspiration"),
        c()(),
        l(31, "tr")(32, "td"),
        h(33, "4"),
        c(),
        l(34, "td"),
        h(35, "Yoda"),
        c(),
        l(36, "td"),
        h(37, "Skywalker"),
        c()(),
        l(38, "tr")(39, "td"),
        h(40, "5"),
        c(),
        l(41, "td"),
        h(42, "Patrick"),
        c(),
        l(43, "td"),
        h(44, "Dupont"),
        c()(),
        l(45, "tr")(46, "td"),
        h(47, "6"),
        c(),
        l(48, "td"),
        h(49, "Barack"),
        c(),
        l(50, "td"),
        h(51, "Obama"),
        c()(),
        l(52, "tr")(53, "td"),
        h(54, "7"),
        c(),
        l(55, "td"),
        h(56, "Fran\xE7ois"),
        c(),
        l(57, "td"),
        h(58, "Holland"),
        c()(),
        l(59, "tr")(60, "td"),
        h(61, "8"),
        c(),
        l(62, "td"),
        h(63, "Michel"),
        c(),
        l(64, "td"),
        h(65, "Popo"),
        c()(),
        l(66, "tr")(67, "td"),
        h(68, "9"),
        c(),
        l(69, "td"),
        h(70, "Chuck"),
        c(),
        l(71, "td"),
        h(72, "Norris"),
        c()(),
        l(73, "tr")(74, "td"),
        h(75, "10"),
        c(),
        l(76, "td"),
        h(77, "Simon"),
        c(),
        l(78, "td"),
        h(79, "Robin"),
        c()(),
        l(80, "tr")(81, "td"),
        h(82, "11"),
        c(),
        l(83, "td"),
        h(84, "Louis"),
        c(),
        l(85, "td"),
        h(86, "Lin"),
        c()(),
        l(87, "tr")(88, "td"),
        h(89, "12"),
        c(),
        l(90, "td"),
        h(91, "Zelda"),
        c(),
        l(92, "td"),
        h(93, "Link"),
        c()()()()),
        e & 2 && y("dtOptions", t.dtOptions);
    },
    dependencies: [wa, t1],
  });
};
var Fa = class n {
  team_id;
  team_name;
  team_lead_id;
  team_lead_email;
  total_teams;
  constructor() {
    (this.team_id = ""),
      (this.team_name = ""),
      (this.team_lead_id = ""),
      (this.team_lead_email = ""),
      (this.total_teams = 0);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = J({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var vF = (n) => ({ "is-invalid": n });
function yF(n, i) {
  n & 1 && (l(0, "tr")(1, "td", 47), h(2, "No Teams Found"), c()());
}
function xF(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "tr")(1, "td"),
      h(2),
      c(),
      l(3, "td"),
      h(4),
      c(),
      l(5, "td", 48)(6, "a", 49),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.onEdit(r));
      }),
      U(7, "i", 50),
      c(),
      l(8, "a", 51),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.openDeleteModal(r));
      }),
      U(9, "i", 52),
      c()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      r = x();
    m(2), B((r.currentPage - 1) * r.itemsPerPage + t + 1), m(2), B(e.team_name);
  }
}
function CF(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "li", 53)(1, "a", 42),
      R("click", function () {
        let r = O(e).$implicit,
          o = x();
        return k(o.goToPage(r));
      }),
      h(2),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x();
    ne("active", e === t.currentPage), m(2), B(e);
  }
}
function wF(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 54)(1, "div", 55)(2, "div", 56)(3, "div", 57)(4, "h5", 58),
      h(5, "Delete User"),
      c()(),
      l(6, "div", 59),
      h(7, "Are you sure you want to delete this user?"),
      c(),
      l(8, "div", 60)(9, "button", 61),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeDeleteModal());
      }),
      h(10, "Cancel"),
      c(),
      l(11, "button", 62),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.deleteTeamid());
      }),
      h(12, "Delete"),
      c()()()()();
  }
}
function SF(n, i) {
  n & 1 && (l(0, "span"), h(1, "Team Name is required."), c());
}
function DF(n, i) {
  if ((n & 1 && (l(0, "div", 73), A(1, SF, 2, 0, "span", 34), c()), n & 2)) {
    let e,
      t = x(2);
    m(),
      y(
        "ngIf",
        (e = t.useForm.get("team_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function MF(n, i) {
  if (n & 1) {
    let e = oe();
    Le(0),
      l(1, "button", 78),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.onUpdate());
      }),
      h(2, " Edit "),
      c(),
      Ve();
  }
  if (n & 2) {
    let e = x(2);
    m(), y("disabled", !e.isTeamNameChanged());
  }
}
function TF(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "button", 61),
      R("click", function () {
        O(e);
        let r = x(2);
        return k(r.onSave());
      }),
      h(1, " save "),
      c();
  }
  if (n & 2) {
    let e = x(2);
    ce("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function EF(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 63)(1, "div", 64)(2, "div", 56)(3, "div", 57)(4, "h5", 65),
      h(5),
      c(),
      l(6, "button", 66),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeModal());
      }),
      l(7, "span", 67),
      h(8, "\xD7"),
      c()()(),
      l(9, "div", 68)(10, "form", 69)(11, "div", 70)(12, "div", 71)(
        13,
        "label",
        72
      ),
      h(14, " Team Name "),
      l(15, "span", 73),
      h(16, "*"),
      c()(),
      U(17, "input", 74),
      A(18, DF, 2, 1, "div", 75),
      c()()()(),
      l(19, "div", 60),
      A(20, MF, 3, 1, "ng-container", 76),
      l(21, "button", 77),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.closeModal());
      }),
      h(22, " Close "),
      c(),
      A(23, TF, 2, 1, "ng-template", null, 0, bt),
      c()()()();
  }
  if (n & 2) {
    let e,
      t,
      r = ut(24),
      o = x();
    m(5),
      Z(
        " ",
        o.userObj.team_name || o.userObj.team_lead_email
          ? "Edit User"
          : "Add New Team",
        " "
      ),
      m(5),
      y("formGroup", o.useForm),
      m(7),
      y(
        "ngClass",
        de(
          6,
          vF,
          ((e = o.useForm.get("team_name")) == null ? null : e.touched) &&
            ((e = o.useForm.get("team_name")) == null ? null : e.invalid)
        )
      ),
      m(),
      y(
        "ngIf",
        ((t = o.useForm.get("team_name")) == null ? null : t.invalid) &&
          ((t = o.useForm.get("team_name")) == null ? null : t.touched)
      ),
      m(2),
      y("ngIf", o.teamObj.team_id)("ngIfElse", r);
  }
}
var fu = class n {
  constructor(i, e) {
    this.aleartsrv = i;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = pe(0);
  teamList = pe([]);
  totalteam = pe(0);
  userList = pe([]);
  teamObj = new Fa();
  count = pe(0);
  userObj = new Fa();
  previousValue = "";
  totalPages = 0;
  isModalOpen = !1;
  masterSrv = W(Xe);
  toastr = W(fi);
  useForm = new Rt({});
  isEditMode = !1;
  previousEmail = "";
  allUsers = [];
  pages = [];
  filteredTeams = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  filteredTeam = [];
  isDeleteModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  paginatedTeams = [];
  filteredTeamList = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllTeams(),
      this.getAllTeams(),
      this.displayAllTeams(),
      (this.filteredTeams = this.teamList()),
      this.paginateTeams(),
      this.filterTeams();
  }
  initializeForm() {
    this.useForm = new Rt({
      team_name: new ot("", [Fe.required, Fe.minLength(2), Fe.maxLength(50)]),
    });
  }
  openModal(i) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      i
        ? ((this.teamObj = G({}, i)),
          this.useForm.patchValue({
            team_name: i.team_name,
            team_lead_email: i.team_lead_email,
            team_lead_id: i.team_lead_id,
          }),
          console.log("fhgir"),
          console.log("\u{1F539} Edit Mode: team Object ->", this.teamObj),
          console.log("\u{1F539} teamobj.team_id ->", this.teamObj.team_id))
        : ((this.teamObj = new Fa()),
          (this.teamObj.team_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.teamObj
          ));
  }
  onEdit(i) {
    console.log("Edit button clicked. Team ID:", i?.team_id),
      (this.isEditMode = !0),
      (this.isModalOpen = !0),
      (this.teamObj = G({}, i)),
      this.masterSrv.getTeamById(i.team_id).subscribe(
        (e) => {
          if (e?.status === 200) {
            let t = e.data?.TeamDetails;
            t
              ? (console.log("Team Details:", t),
                this.useForm.patchValue({
                  team_name: t.team_name,
                  team_lead_email: t.team_lead_email,
                  team_lead_id: t.team_lead_id,
                }),
                console.log("Form data patched, opening modal..."),
                setTimeout(() => {
                  $("#exampleModalCenter").modal("show");
                }, 0))
              : (console.error("No team details found"),
                this.toastr.error("Team details not found", "Error"));
          }
        },
        (e) => {
          console.error("Error fetching team details:", e),
            this.toastr.error("Error fetching team details", "Error");
        }
      );
  }
  isTeamNameChanged() {
    return (
      this.useForm.dirty && this.useForm.value.team_name !== this.previousValue
    );
  }
  selectedteamForDeletion = null;
  selectteamForDeletion(i) {
    (this.selectedteamForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let i = this.useForm.get("team_name"),
      e = this.useForm.get("team_lead_email"),
      t = this.useForm.get("team_id");
    if (i && t && i.value) {
      console.log("Team name value:", i.value),
        console.log("Available teams:", this.teamList());
      let r = this.teamList().find((o) => o.team_name === i.value);
      r
        ? (console.log("Selected Team:", r),
          t.setValue(r.team_id),
          e?.setValue(r.team_lead_email))
        : console.warn("Team not found:", i.value);
    }
  }
  openDeleteModal(i) {
    (this.selectedteamForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  getAllTeams() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.allUsers = i.data.rows)
          : this.toastr.warning("No teams found", "Information");
      },
      error: (i) => {
        console.error("teams fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch users", "Error");
      },
    });
  }
  updatePagination() {
    let i = this.filteredTeams,
      e = (this.currentPage - 1) * this.itemsPerPage,
      t = e + this.itemsPerPage;
    (this.paginatedTeams = i.slice(e, t)),
      (this.totalPages = Math.ceil(i.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (r, o) => o + 1));
  }
  onSearchChange() {
    (this.currentPage = 1), this.filterTeams();
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredTeam.length
    );
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = +i.target.value),
      (this.currentPage = 1),
      this.filterTeams();
  }
  filterTeams() {
    (this.filteredTeams = this.teamList().filter((i) =>
      i.team_name.toLowerCase().includes(this.searchTerm.toLowerCase())
    )),
      this.paginateTeams();
  }
  paginateTeams() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedTeams = this.filteredTeams.slice(i, e);
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateTeams();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateTeams());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateTeams());
  }
  deleteTeamid() {
    console.log(
      "this is the select user",
      this.selectteamForDeletion,
      this.selectedteamForDeletion
    ),
      this.selectedteamForDeletion && this.selectedteamForDeletion.team_id
        ? this.masterSrv
            .deleteTeam(this.selectedteamForDeletion.team_id)
            .subscribe(
              (i) => {
                this.toastr.success("Team deleted successfully", "Success"),
                  (this.isDeleteModalOpen = !1),
                  this.displayAllTeams();
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No Team selected for deletion");
  }
  displayAllTeams() {
    console.log("Fetching all teams..."),
      this.masterSrv.getMultipleTeams().subscribe({
        next: (i) => {
          i && i.data.rows
            ? (this.teamList.set(i.data.rows),
              (this.filteredTeams = i.data.rows),
              this.totalteam.set(i.data.rows.length),
              this.initializeTeamPagination())
            : (this.teamList.set([]),
              (this.filteredTeams = []),
              this.toastr.warning("No team found", "Information"),
              this.totalteam.set(0),
              this.initializeTeamPagination());
        },
        error: (i) => {
          console.error("team fetch error:", i),
            this.toastr.error(i.message || "Failed to fetch team", "Error"),
            this.teamList.set([]),
            (this.filteredTeams = []),
            this.totalteam.set(0),
            this.initializeTeamPagination();
        },
      });
  }
  initializeTeamPagination() {
    let i = this.filteredTeams.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateTeams();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.teamObj = G(G({}, this.teamObj), this.useForm.value)),
        console.log("\u{1F680} Updated Payload before API call:", this.teamObj),
        this.masterSrv.updateTeam(this.teamObj).subscribe(
          (i) => {
            i.status === 200
              ? (console.log("\u2705 Update Success:", i),
                this.toastr.success(i.message, "Success"),
                this.displayAllTeams(),
                this.closeModal(),
                this.userList.set(
                  this.userList().map((e) =>
                    e.team_id === this.teamObj.team_id
                      ? G(G({}, e), this.teamObj)
                      : e
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0))
              : this.toastr.error("Update failed", "Error");
          },
          (i) => {
            console.error("\u274C API Error:", i),
              this.toastr.error("Failed to update team", "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  closeModal() {
    this.isModalOpen = !1;
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof Rt && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let i = this.useForm.value;
    console.log("Form Data being sent to API:", i),
      this.masterSrv.createNewTeam(i).subscribe({
        next: (e) => {
          this.toastr.success("Team created successfully!", "Success"),
            this.displayAllTeams(),
            this.closeModal(),
            setTimeout(() => {
              this.cdr.detectChanges(), this.cdr.markForCheck();
            }, 0);
        },
        error: (e) => {
          console.error("Team creation error:", e);
          let t = e?.error?.message || "Failed to create team";
          this.toastr.error(t, "Creation Error");
        },
      });
  }
  loadTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (i) => {
        this.count.set(i.data.count), this.teamList.set(i.data.rows);
      },
      error: (i) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", i);
      },
    });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ra), j(Qe));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-team"]],
    standalone: !0,
    features: [le],
    decls: 71,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search teams...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "3", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "team_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "team_name",
        "type",
        "text",
        "formControlName",
        "team_name",
        "placeholder",
        "Team Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Utils"),
        c()(),
        l(7, "li", 7)(8, "a", 8),
        h(9, "Team Master"),
        c()()()(),
        l(10, "div", 9)(11, "div", 10)(12, "a", 11),
        R("click", function () {
          return t.openModal();
        }),
        U(13, "i", 12),
        h(14, "Add Team "),
        c()(),
        l(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Team"),
        c(),
        l(19, "h3", 16),
        h(20),
        c()()()(),
        l(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        U(26, "label", 22),
        l(27, "select", 23),
        R("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        l(28, "option", 24),
        h(29, "10"),
        c(),
        l(30, "option", 25),
        h(31, "25"),
        c(),
        l(32, "option", 26),
        h(33, "50"),
        c(),
        l(34, "option", 27),
        h(35, "100"),
        c()(),
        l(36, "label", 28),
        h(37, "records per page"),
        c()(),
        l(38, "div", 29)(39, "div", 30)(40, "input", 31),
        dt("ngModelChange", function (o) {
          return ct(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        R("input", function () {
          return t.onSearchChange();
        }),
        c()()()(),
        h(41, " \xA0\xA0 "),
        c(),
        l(42, "div", 32)(43, "table", 33)(44, "thead")(45, "tr")(46, "th"),
        h(47, "Sr No"),
        c(),
        l(48, "th"),
        h(49, "Team Name"),
        c(),
        l(50, "th"),
        h(51, "Action"),
        c()()(),
        l(52, "tbody"),
        A(53, yF, 3, 0, "tr", 34)(54, xF, 10, 2, "tr", 35),
        c()()(),
        l(55, "div", 36)(56, "div", 37)(57, "div", 38),
        h(58),
        c()(),
        l(59, "div", 37)(60, "div", 39)(61, "ul", 40)(62, "li", 41)(
          63,
          "a",
          42
        ),
        R("click", function () {
          return t.previousPage();
        }),
        h(64, "Previous"),
        c()(),
        A(65, CF, 3, 3, "li", 43),
        l(66, "li", 44)(67, "a", 42),
        R("click", function () {
          return t.nextPage();
        }),
        h(68, "Next"),
        c()()()()()()()()()(),
        A(69, wF, 13, 0, "div", 45)(70, EF, 25, 8, "div", 46)),
        e & 2 &&
          (m(20),
          Z(" ", t.totalteam(), " "),
          m(20),
          lt("ngModel", t.searchTerm),
          m(13),
          y("ngIf", t.paginatedTeams.length === 0),
          m(),
          y("ngForOf", t.paginatedTeams),
          m(4),
          Fi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.currentPage * t.itemsPerPage < t.teamList().length
              ? t.currentPage * t.itemsPerPage
              : t.teamList().length,
            " of ",
            t.teamList().length,
            " entries "
          ),
          m(4),
          ne("disabled", t.currentPage === 1),
          m(3),
          y("ngForOf", t.visiblePages),
          m(),
          ne("disabled", t.currentPage === t.totalPages),
          m(3),
          y("ngIf", t.isDeleteModalOpen),
          m(),
          y("ngIf", t.isModalOpen));
    },
    dependencies: [
      Ae,
      It,
      At,
      We,
      tt,
      Br,
      ni,
      ri,
      Wt,
      ii,
      Bi,
      mr,
      _i,
      hn,
      Xi,
      Zi,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}",
    ],
  });
};
var OF = ["dropdown"],
  kF = ["modelDropdown"],
  PF = ["psDropdown"],
  Df = (n) => ({ color: n }),
  gu = (n) => ({ "background-color": n });
function IF(n, i) {
  n & 1 && (l(0, "div"), U(1, "router-outlet"), c());
}
function AF(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 54),
      R("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      l(1, "input", 55),
      R("change", function (r) {
        O(e);
        let o = x().$implicit,
          a = x(3);
        return k(a.onDealerChange(o.dealer_id, r));
      }),
      c(),
      l(2, "label", 56),
      h(3),
      c()();
  }
  if (n & 2) {
    let e = x().$implicit,
      t = x(3);
    m(),
      y("id", e.dealer_id)("checked", t.selectedDealers.includes(e.dealer_id)),
      m(),
      y("for", e.dealer_id),
      m(),
      B(e.dealer_name);
  }
}
function RF(n, i) {
  if ((n & 1 && (Le(0), A(1, AF, 4, 4, "div", 53), Ve()), n & 2)) {
    let e = i.$implicit;
    m(), y("ngIf", e.dealer_name && e.dealer_name.trim() !== "");
  }
}
function FF(n, i) {
  if ((n & 1 && (Le(0), A(1, RF, 2, 1, "ng-container", 52), Ve()), n & 2)) {
    let e = x(2);
    m(), y("ngForOf", e.filteredDealers());
  }
}
function NF(n, i) {
  n & 1 && (l(0, "div", 57), h(1, " No Dealers Found "), c());
}
function LF(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 59)(1, "input", 60),
      R("change", function (r) {
        O(e);
        let o = x().$implicit,
          a = x(3);
        return k(a.onPSChange(o.user_id, r));
      }),
      c(),
      l(2, "label", 56),
      h(3),
      c()();
  }
  if (n & 2) {
    let e = x().$implicit,
      t = x(3);
    ne("disabled", t.selectedDealers.length === 0),
      m(),
      y("id", e.user_id)("checked", t.selectedPSs.includes(e.user_id))(
        "disabled",
        t.selectedDealers.length === 0
      ),
      m(),
      y("for", e.user_id),
      m(),
      B(e.name);
  }
}
function VF(n, i) {
  if ((n & 1 && (Le(0), A(1, LF, 4, 7, "div", 58), Ve()), n & 2)) {
    let e = i.$implicit;
    m(), y("ngIf", e.name && e.name.trim() !== "");
  }
}
function BF(n, i) {
  if ((n & 1 && (Le(0), A(1, VF, 2, 1, "ng-container", 52), Ve()), n & 2)) {
    let e = x(2);
    m(), y("ngForOf", e.filteredPSs());
  }
}
function jF(n, i) {
  n & 1 && (l(0, "div", 57), h(1, "No PS Found"), c());
}
function HF(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 54),
      R("click", function () {
        O(e);
        let r = x().$implicit,
          o = x(3);
        return k(o.toggleModelSelection(r));
      }),
      U(1, "input", 61),
      l(2, "span", 62),
      h(3),
      c()();
  }
  if (n & 2) {
    let e = x().$implicit;
    m(), y("checked", e.selected), m(2), B(e.model_name);
  }
}
function UF(n, i) {
  if ((n & 1 && (Le(0), A(1, HF, 4, 2, "div", 53), Ve()), n & 2)) {
    let e = i.$implicit;
    m(), y("ngIf", e.model_name && e.model_name.trim() !== "");
  }
}
function zF(n, i) {
  if ((n & 1 && (Le(0), A(1, UF, 2, 1, "ng-container", 52), Ve()), n & 2)) {
    let e = x(2);
    m(), y("ngForOf", e.filteredModels());
  }
}
function $F(n, i) {
  n & 1 && (l(0, "div", 57), h(1, "No Models Found"), c());
}
function WF(n, i) {
  n & 1 && U(0, "i", 63);
}
function GF(n, i) {
  n & 1 && U(0, "i", 64);
}
function YF(n, i) {
  if ((n & 1 && U(0, "div", 80), n & 2)) {
    let e = x().$implicit,
      t = x(2);
    Lt("left", t.getTargetPosition(e.value, e.target), "%");
  }
}
function qF(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 65)(1, "div", 66)(2, "div", 67)(3, "span", 68),
      h(4),
      c(),
      l(5, "div", 69)(6, "span", 70),
      h(7),
      c(),
      U(8, "div", 71),
      c()(),
      l(9, "div", 72)(10, "div", 73)(11, "div", 74),
      U(12, "div", 75),
      c(),
      A(13, YF, 1, 2, "div", 76),
      c()()(),
      l(14, "div", 77)(15, "div", 78),
      h(16, "GROWTH"),
      c(),
      l(17, "div", 79),
      h(18),
      c()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(2);
    m(4),
      B(e.name),
      m(3),
      Gn(" ", e.value, " | ", e.achieved, "% "),
      m(),
      y("ngClass", e.growth >= 0 ? "arrow-up" : "arrow-down"),
      m(3),
      y(
        "title",
        "Actual: " + e.value + ", Target: " + e.target + t.getStaticMsg(e.name)
      ),
      m(),
      Lt("width", t.getProgressWidth(e.value, e.target), "%"),
      y("ngStyle", de(14, gu, t.getProgressColor(e.value, e.target))),
      m(),
      y("ngIf", e.target !== 0),
      m(),
      ne("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      m(4),
      Z(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function KF(n, i) {
  if ((n & 1 && U(0, "div", 80), n & 2)) {
    let e = x().$implicit,
      t = x(2);
    Lt("left", t.getTargetPosition(e.value, e.target), "%");
  }
}
function QF(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 65)(1, "div", 66)(2, "div", 67)(3, "span", 68),
      h(4),
      c(),
      l(5, "div", 69)(6, "span", 70),
      h(7),
      c(),
      U(8, "div", 71),
      c()(),
      l(9, "div", 72)(10, "div", 73)(11, "div", 74),
      U(12, "div", 75),
      c(),
      A(13, KF, 1, 2, "div", 76),
      c()()(),
      l(14, "div", 77)(15, "div", 78),
      h(16, "GROWTH"),
      c(),
      l(17, "div", 79),
      h(18),
      c()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(2);
    m(4),
      B(e.name),
      m(3),
      Gn("", e.value, " | ", e.achieved, "%"),
      m(),
      y("ngClass", e.growth >= 0 ? "arrow-up" : "arrow-down"),
      m(3),
      y(
        "title",
        "Actual: " +
          e.value +
          ", Target: " +
          e.target +
          t.getProductivityMsg(e.name)
      ),
      m(),
      Lt("width", t.getProgressWidth(e.value, e.target), "%"),
      y("ngStyle", de(14, gu, t.getProgressColor(e.value, e.target))),
      m(),
      y("ngIf", e.target !== 0),
      m(),
      ne("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      m(4),
      Z(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function XF(n, i) {
  if ((n & 1 && U(0, "div", 80), n & 2)) {
    let e = x().$implicit,
      t = x(2);
    Lt("left", t.getTargetPosition(e.value, e.target), "%");
  }
}
function ZF(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 65)(1, "div", 66)(2, "div", 67)(3, "span", 68),
      h(4),
      c(),
      l(5, "div", 69)(6, "span", 70),
      h(7),
      c(),
      U(8, "div", 71),
      c()(),
      l(9, "div", 72)(10, "div", 73)(11, "div", 74),
      U(12, "div", 75),
      c(),
      A(13, XF, 1, 2, "div", 76),
      c()()(),
      l(14, "div", 77)(15, "div", 78),
      h(16, "GROWTH"),
      c(),
      l(17, "div", 79),
      h(18),
      c()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(2);
    m(4),
      B(e.name),
      m(3),
      Gn("", e.value, " | ", e.achieved, "%"),
      m(),
      y("ngClass", e.growth >= 0 ? "arrow-up" : "arrow-down"),
      m(3),
      y(
        "title",
        "Actual: " +
          e.value +
          ", Target: " +
          e.target +
          t.getProductivityMsg(e.name)
      ),
      m(),
      Lt("width", t.getProgressWidth(e.value, e.target), "%"),
      y("ngStyle", de(14, gu, t.getProgressColor(e.value, e.target))),
      m(),
      y("ngIf", e.target !== 0),
      m(),
      ne("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      m(4),
      Z(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function JF(n, i) {
  if ((n & 1 && U(0, "div", 80), n & 2)) {
    let e = x().$implicit,
      t = x(2);
    Lt("left", t.getTargetPosition(e.value, e.target), "%");
  }
}
function e3(n, i) {
  if (
    (n & 1 &&
      (l(0, "div", 65)(1, "div", 66)(2, "div", 67)(3, "span", 68),
      h(4),
      c(),
      l(5, "div", 69)(6, "span", 70),
      h(7),
      c(),
      U(8, "div", 71),
      c()(),
      l(9, "div", 72)(10, "div", 73)(11, "div", 74),
      U(12, "div", 75),
      c(),
      A(13, JF, 1, 2, "div", 76),
      c()()(),
      l(14, "div", 77)(15, "div", 78),
      h(16, "GROWTH"),
      c(),
      l(17, "div", 79),
      h(18),
      c()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = x(2);
    m(4),
      B(e.name),
      m(3),
      Gn("", e.value, " | ", e.target, "%"),
      m(),
      y("ngClass", e.growth >= 0 ? "arrow-up" : "arrow-down"),
      m(3),
      y(
        "title",
        "Actual: " +
          e.value +
          ", Target: " +
          e.target +
          t.getActivePsMsg(e.name)
      ),
      m(),
      Lt("width", t.getProgressWidth(e.value, e.target), "%"),
      y("ngStyle", de(14, gu, t.getProgressColor(e.value, e.target))),
      m(),
      y("ngIf", e.target !== 0),
      m(),
      ne("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      m(4),
      Z(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function t3(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div")(1, "div", 6)(2, "div", 9)(3, "div", 10)(4, "section", 11)(
      5,
      "h2"
    ),
      Ct(),
      l(6, "svg", 12),
      U(7, "path", 13),
      c(),
      h(8, " Filters "),
      c(),
      oo(),
      l(9, "div", 14)(10, "select", 15),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return (
          ct(o.selectedSummaryFilter, r) || (o.selectedSummaryFilter = r), k(r)
        );
      }),
      R("change", function () {
        O(e);
        let r = x();
        return k(r.onFilterChange(r.selectedSummaryFilter));
      }),
      l(11, "option", 16),
      h(12, "Today"),
      c(),
      l(13, "option", 17),
      h(14, "Yesterday"),
      c(),
      l(15, "option", 18),
      h(16, "This Week"),
      c(),
      l(17, "option", 19),
      h(18, "Last Week"),
      c(),
      l(19, "option", 20),
      h(20, "This Month"),
      c(),
      l(21, "option", 21),
      h(22, "Last Month"),
      c(),
      l(23, "option", 22),
      h(24, "This Quarter"),
      c(),
      l(25, "option", 23),
      h(26, "Last Quarter"),
      c()()(),
      l(27, "div", 24, 0),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.toggleDropdown());
      }),
      l(29, "div", 25),
      h(30),
      c(),
      l(31, "div", 26)(32, "div", 27)(33, "button", 28),
      R("click", function (r) {
        return O(e), x().selectAllDealers(r), k(r.stopPropagation());
      }),
      h(34, "Select All"),
      c(),
      l(35, "button", 28),
      R("click", function (r) {
        return O(e), x().clearDealers(r), k(r.stopPropagation());
      }),
      h(36, "Clear"),
      c()(),
      l(37, "div", 29),
      R("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      l(38, "input", 30),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return ct(o.dealerSearch, r) || (o.dealerSearch = r), k(r);
      }),
      c()(),
      A(39, FF, 2, 1, "ng-container", 31)(
        40,
        NF,
        2,
        0,
        "ng-template",
        null,
        1,
        bt
      ),
      c()(),
      l(42, "div", 24, 2),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.selectedDealers.length > 0 && r.togglePSDropdown());
      }),
      l(44, "div", 25),
      h(45),
      c(),
      l(46, "div", 32),
      R("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      l(47, "div", 27)(48, "button", 33),
      R("click", function (r) {
        return O(e), x().toggleSelectAllPS(r), k(r.stopPropagation());
      }),
      h(49, " Select All "),
      c(),
      l(50, "button", 33),
      R("click", function (r) {
        return O(e), x().clearAllPS(r), k(r.stopPropagation());
      }),
      h(51, " Clear "),
      c()(),
      l(52, "div", 29),
      R("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      l(53, "input", 34),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return ct(o.psSearch, r) || (o.psSearch = r), k(r);
      }),
      c()(),
      A(54, BF, 2, 1, "ng-container", 31)(
        55,
        jF,
        2,
        0,
        "ng-template",
        null,
        3,
        bt
      ),
      c()(),
      l(57, "div", 24, 4),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.toggleModelDropdown());
      }),
      l(59, "div", 25),
      h(60),
      c(),
      l(61, "div", 32),
      R("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      l(62, "div", 27)(63, "button", 28),
      R("click", function (r) {
        return O(e), x().selectAllModels(r), k(r.stopPropagation());
      }),
      h(64, "Select All"),
      c(),
      l(65, "button", 28),
      R("click", function (r) {
        return O(e), x().clearModels(r), k(r.stopPropagation());
      }),
      h(66, "Clear"),
      c()(),
      l(67, "div", 29),
      R("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      l(68, "input", 35),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return ct(o.modelSearch, r) || (o.modelSearch = r), k(r);
      }),
      c()(),
      A(69, zF, 2, 1, "ng-container", 31)(
        70,
        $F,
        2,
        0,
        "ng-template",
        null,
        5,
        bt
      ),
      c()(),
      l(72, "div", 36)(73, "button", 37),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.resetFilters());
      }),
      h(74, "Reset"),
      c(),
      l(75, "button", 38),
      R("click", function () {
        O(e);
        let r = x();
        return k(r.refreshData());
      }),
      A(76, WF, 1, 0, "i", 39)(77, GF, 1, 0, "i", 40),
      c()()()(),
      l(78, "section", 41)(79, "div", 42)(80, "div", 43)(81, "h3", 44),
      h(82, " Efforts "),
      c(),
      l(83, "span", 45),
      U(84, "span", 46),
      l(85, "span", 47),
      h(86),
      c(),
      h(87, " overall "),
      c()(),
      l(88, "div", 48),
      A(89, qF, 19, 16, "div", 49),
      c()(),
      l(90, "div", 42)(91, "div", 50)(92, "h3", 44),
      h(93, " Productivity "),
      c(),
      l(94, "span", 45),
      U(95, "span", 46),
      l(96, "span", 47),
      h(97),
      c(),
      h(98, " overall "),
      c()(),
      l(99, "div", 48),
      A(100, QF, 19, 16, "div", 49),
      c()(),
      l(101, "div", 42)(102, "div", 51)(103, "h3"),
      h(104, "Active PS"),
      c()(),
      l(105, "div", 48),
      A(106, ZF, 19, 16, "div", 49),
      c()(),
      l(107, "div", 42)(108, "div", 50)(109, "h3", 44),
      h(110, " Other KPIs "),
      c(),
      l(111, "span", 45),
      U(112, "span", 46),
      l(113, "span", 47),
      h(114),
      c(),
      h(115, " target "),
      c()(),
      l(116, "div", 48),
      A(117, e3, 19, 16, "div", 49),
      c()()()()()();
  }
  if (n & 2) {
    let e = ut(41),
      t = ut(56),
      r = ut(71),
      o = x();
    m(10),
      lt("ngModel", o.selectedSummaryFilter),
      m(17),
      ne("open", o.dropdownOpen),
      m(3),
      Z(
        " ",
        o.selectedDealers.length === o.allDealers.length
          ? "All Dealers Selected"
          : o.selectedDealers.length
          ? o.selectedDealers.length + " selected"
          : "Select Dealers",
        " "
      ),
      m(8),
      lt("ngModel", o.dealerSearch),
      m(),
      y("ngIf", o.filteredDealers().length > 0)("ngIfElse", e),
      m(3),
      ne("open", o.dropdownPSOpen)("disabled", o.selectedDealers.length === 0),
      ce(
        "title",
        o.selectedDealers.length === 0 ? "Select a dealer to see PS" : null
      ),
      m(3),
      Z(" ", o.psDropdownLabel, " "),
      m(3),
      y("disabled", o.selectedDealers.length === 0),
      m(2),
      y("disabled", o.selectedDealers.length === 0),
      m(3),
      lt("ngModel", o.psSearch),
      y("disabled", o.selectedDealers.length === 0),
      m(),
      y("ngIf", o.filteredPSs().length > 0)("ngIfElse", t),
      m(3),
      ne("open", o.modelDropdownOpen),
      m(3),
      Z(
        " ",
        o.selectedModels.length === o.models.length
          ? "All Models Selected"
          : o.selectedModels.length
          ? o.selectedModels.length + " selected"
          : "Select Model",
        " "
      ),
      m(8),
      lt("ngModel", o.modelSearch),
      m(),
      y("ngIf", o.filteredModels().length > 0)("ngIfElse", r),
      m(6),
      y("disabled", o.isLoading),
      m(),
      y("ngIf", !o.isLoading),
      m(),
      y("ngIf", o.isLoading),
      m(8),
      y(
        "ngStyle",
        de(38, Df, o.getKpiColor(o.categoryPercentages.Efforts || 0))
      ),
      m(),
      Z(" ", o.categoryPercentages.Efforts || 0, "% "),
      m(3),
      y("ngForOf", o.efforts),
      m(7),
      y(
        "ngStyle",
        de(40, Df, o.getKpiColor(o.categoryPercentages.Productivity || 0))
      ),
      m(),
      Z(" ", o.categoryPercentages.Productivity || 0, "% "),
      m(3),
      y("ngForOf", o.productivity),
      m(6),
      y("ngForOf", o.activePSKpis),
      m(7),
      y(
        "ngStyle",
        de(42, Df, o.getKpiColor(o.categoryPercentages["Other KPIs"] || 0))
      ),
      m(),
      Z(" ", o.categoryPercentages["Other KPIs"] || 0, "% "),
      m(3),
      y("ngForOf", o.otherKpis);
  }
}
var Tl = class n {
  constructor(i, e, t, r) {
    this.sidebarService = i;
    this.router = e;
    this.http = t;
    this.cd = r;
  }
  selectedTab = "dashboard";
  isSidebarOpen = !0;
  dropdownOpen = !1;
  modelDropdownOpen = !1;
  selectedModels = [];
  isFirstLoadPS = !0;
  isLoading = !1;
  selectedDealer = "all";
  selectedPS = "all";
  models = [];
  selectedSummaryFilter;
  selectedDealers = [];
  allDealers = [];
  dropdown;
  modelDropdown;
  psDropdown;
  aggregatedMetrics;
  psSearch = "";
  manualPSSelection = !1;
  efforts = [];
  productivity = [];
  otherKpis = [];
  activePSKpis = [];
  selectedPSs = [];
  dropdownPSOpen = !1;
  selectedModel = "all";
  dealers = [];
  dealerSearch = "";
  modelSearch = "";
  users = [];
  categoryPercentages = { Efforts: 0, Productivity: 0, "Other KPIs": 0 };
  ngOnInit() {
    this.selectedSummaryFilter =
      localStorage.getItem("selectedSummaryFilter") || "DAY";
    let i = this.selectedDealers?.length ? this.selectedDealers : "all",
      e = this.selectedPSs?.length ? this.selectedPSs : "all",
      t =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(this.selectedSummaryFilter, i, e, t),
      (this.efforts = []),
      this.loadDealers(),
      this.sidebarService.isOpen$.subscribe((o) => {
        this.isSidebarOpen = o;
      });
    let r = this.router.url;
    r.includes("/Admin/dashboard")
      ? (this.selectedTab = "dashboard")
      : r.includes("/Admin/summary") && (this.selectedTab = "summary"),
      this.router.events.pipe(St((o) => o instanceof ci)).subscribe((o) => {
        o.urlAfterRedirects.includes("/Admin/dashboard")
          ? (this.selectedTab = "dashboard")
          : o.urlAfterRedirects.includes("/Admin/summary") &&
            (this.selectedTab = "summary");
      });
  }
  getOverallProgress() {
    if (!this.efforts || this.efforts.length === 0) return 0;
    let i = this.efforts.reduce((e, t) => e + t.achieved, 0);
    return Math.round(i / this.efforts.length);
  }
  toggleSidebar() {
    this.sidebarService.toggleSidebar();
  }
  selectAllDealers(i) {
    i.stopPropagation(),
      (this.selectedDealers = this.allDealers.map((e) => e.dealer_id)),
      this.loadDealers("DAY", this.selectedDealers);
  }
  clearDealers(i) {
    i.stopPropagation(),
      (this.selectedDealers = []),
      (this.dealerSearch = ""),
      (this.selectedPSs = []),
      (this.selectedModels = []),
      (this.modelSearch = ""),
      this.models.forEach((e) => (e.selected = !1));
  }
  selectTab(i) {
    this.selectedTab = i;
  }
  isActive(i) {
    return this.router.url.includes(`/Admin/${i}`);
  }
  navigateTo(i) {
    this.router.navigate(["/Admin", i]);
  }
  navigateToSingleDealer(i) {
    this.router.navigate(["/Admin/singleDealer", i]);
  }
  resetFilters() {
    (this.selectedSummaryFilter = "DAY"),
      (this.selectedDealers = this.allDealers.map((i) => i.dealer_id)),
      (this.selectedPSs = this.users.map((i) => i.user_id)),
      (this.selectedModels = this.models.map((i) => i.model)),
      this.loadDealers(this.selectedSummaryFilter, this.selectedDealers);
  }
  filteredModels() {
    return this.modelSearch
      ? this.models.filter((i) =>
          i.model_name.toLowerCase().includes(this.modelSearch.toLowerCase())
        )
      : this.models;
  }
  getKpis(i) {
    if (!i.aggregatedMetrics) return [];
    let { efforts: e, productivity: t, otherKpis: r } = i.aggregatedMetrics;
    return [
      ...Object.values(e || {}),
      ...Object.values(t || {}),
      ...Object.values(r || {}),
    ];
  }
  onFilterChange(i) {
    (this.selectedSummaryFilter = i),
      localStorage.setItem("selectedSummaryFilter", i);
    let e = this.selectedDealers?.length ? this.selectedDealers : "all",
      t = this.selectedPSs?.length ? this.selectedPSs : "all",
      r =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(this.selectedSummaryFilter, e, t, r);
  }
  toggleDropdown() {
    this.dropdownOpen = !this.dropdownOpen;
  }
  onDealerToggle(i, e) {
    e.stopPropagation(),
      this.selectedDealers.includes(i)
        ? (this.selectedDealers = this.selectedDealers.filter((r) => r !== i))
        : this.selectedDealers.push(i);
    let t = this.selectedDealers.length
      ? this.selectedDealers.join(",")
      : "all";
    this.loadDealers(this.selectedSummaryFilter, t);
  }
  onDealerChange(i, e) {
    if (
      (e.target.checked
        ? this.selectedDealers.push(i)
        : (this.selectedDealers = this.selectedDealers.filter((a) => a !== i)),
      this.selectedDealers.length === 0)
    )
      this.selectedPSs = [];
    else {
      let a = this.users
        .filter((d) => this.selectedDealers.includes(d.dealer_id))
        .map((d) => d.user_id);
      this.selectedPSs = this.selectedPSs.filter((d) => a.includes(d));
    }
    let t = this.selectedDealers.length > 0 ? [...this.selectedDealers] : "all",
      r = this.selectedPSs.length > 0 ? [...this.selectedPSs] : "all",
      o =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(this.selectedSummaryFilter, t, r, o);
  }
  get psDropdownLabel() {
    let i = this.filteredPSs();
    if (!i.length) return "Select PS";
    let e = i.filter((t) => this.selectedPSs.includes(t.user_id)).length;
    return e === 0
      ? "Select PS"
      : e === i.length
      ? "All PS Selected"
      : `${e} selected`;
  }
  filteredPSs() {
    let i = this.users;
    return (
      this.selectedDealers.length > 0 &&
        this.selectedDealers.length !== this.allDealers.length &&
        (i = i.filter((e) => this.selectedDealers.includes(e.dealer_id))),
      this.psSearch &&
        (i = i.filter((e) =>
          e.name.toLowerCase().includes(this.psSearch.toLowerCase())
        )),
      i
    );
  }
  getStaticMsg(i) {
    switch ((console.log("Checking static msg forrrrrrrrrrrrrrrrrrr:", i), i)) {
      case "New Enquiry":
        return " (2 per day per ps)";
      case "Outgoing Calls":
        return " (60 per day per ps)";
      case "Unq. Call Connected":
        return " (30 per day per ps)";
      case "Avg Duration/call":
        return " (2m per call)";
      case "Avg Connected Calls/PS":
        return " (30 per day per ps)";
      case "UTD":
        return " (30 per month per ps)";
      default:
        return "";
    }
  }
  getProductivityMsg(i) {
    switch (i) {
      case "New Orders":
        return " (3 per month per ps)";
      case "Net Orders":
        return " (2.5 per month per ps)";
      case "Retails":
        return " (3 per month per ps)";
      default:
        return "";
    }
  }
  getActivePsMsg(i) {
    switch (i) {
      case "TD/Car/Day":
        return " (2 per day per retailer)";
      case "KMs/TDs":
        return " (5 per day per retailer)";
      default:
        return "";
    }
  }
  refreshData() {
    this.isLoading = !0;
    let i =
        this.selectedSummaryFilter ||
        localStorage.getItem("selectedFilter") ||
        "DAY",
      e = this.selectedDealers?.length ? this.selectedDealers : "all",
      t = this.selectedPSs?.length ? this.selectedPSs : "all",
      r =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(i, e, t, r, () => {
      this.isLoading = !1;
    });
  }
  loadDealers(i = "DAY", e = "all", t = null, r = "", o) {
    let a = "https://uat.smartassistapp.in/api/superAdmin/dashboard/summary",
      d = localStorage.getItem("token"),
      u = "";
    e &&
      e !== "all" &&
      (Array.isArray(e)
        ? (u += `dealer_ids=${e.join(",")}&`)
        : ((u += `dealer_ids=${e}&`), (e = e.split(",")))),
      t &&
        t !== "all" &&
        (Array.isArray(t)
          ? (u += `user_id=${t.join(",")}&`)
          : ((u += `user_id=${t}&`), (t = t.split(",")))),
      (u += `type=${i}`),
      r && r !== "all" && (u += `&modal=${encodeURIComponent(r)}`),
      console.log("API call URL:", `${a}?${u}`),
      this.http
        .get(`${a}?${u}`, { headers: { Authorization: `Bearer ${d}` } })
        .subscribe({
          next: (f) => {
            console.log("Full API response:", f),
              (!this.allDealers || this.allDealers.length === 0) &&
                (this.allDealers = f.dealers || []);
            let v = !this.selectedDealers || this.selectedDealers.length === 0;
            e === "all" && v && !this.dealers.length
              ? (this.selectedDealers = this.allDealers.map(
                  (re) => re.dealer_id || re.dealerId
                ))
              : Array.isArray(e) && e.length > 0 && (this.selectedDealers = e);
            let S = f.models || [];
            (this.models = S.map((re) =>
              Te(G({}, re), {
                selected: this.selectedModels.includes(re.model),
              })
            )),
              (!this.selectedModels || this.selectedModels.length === 0) &&
                ((this.selectedModels = S.map((re) => re.model)),
                this.models.forEach((re) => (re.selected = !0)));
            let T = Array.isArray(e) ? e : [e],
              M = !t || t === "all" ? [] : Array.isArray(t) ? t : t.split(","),
              I =
                e === "all"
                  ? [...this.allDealers]
                  : this.allDealers.filter((re) =>
                      T.includes(re.dealerId || re.dealer_id)
                    );
            (this.dealers = I),
              (this.users =
                e === "all"
                  ? this.allDealers.flatMap((re) => re.users || [])
                  : I.flatMap((re) => re.users || [])),
              this.manualPSSelection
                ? (this.selectedPSs = this.selectedPSs.filter((re) =>
                    this.users.some((ge) => ge.user_id === re)
                  ))
                : (this.selectedPSs = this.users.map((re) => re.user_id));
            let L = null,
              E = T.length > 0 && T[0] !== "all",
              F = M.length > 0,
              ee = r && r !== "all";
            if (
              (!E && !F && !ee
                ? (L = f.dealerAggregatedMetrics)
                : E && !F
                ? (L = f.selectedDealerAggregatedMetrics)
                : F
                ? (L = f.selectedUserAggregatedMetrics)
                : !E && !F && ee && (L = f.dealerAggregatedMetrics),
              !L && this.dealers[0] && (L = this.dealers[0]),
              L)
            ) {
              (this.efforts = Object.values(L.efforts || {})),
                (this.productivity = Object.values(L.productivity || {}));
              let re = Object.values(L.otherKpis || {});
              (this.activePSKpis = re.filter(
                (ge) => ge.name === "By Test Drive"
              )),
                (this.otherKpis = re.filter(
                  (ge) => ge.name !== "By Test Drive"
                )),
                (this.categoryPercentages = L.categoryPercentages || {
                  Efforts: 0,
                  Productivity: 0,
                  "Other KPIs": 0,
                });
            }
            o && o();
          },
          error: (f) => {
            console.error("Error fetching data", f),
              o && o(),
              (this.efforts = []),
              (this.productivity = []),
              (this.activePSKpis = []),
              (this.otherKpis = []),
              (this.categoryPercentages = {
                Efforts: 0,
                Productivity: 0,
                "Other KPIs": 0,
              });
          },
        });
  }
  selectAllModels(i) {
    i.stopPropagation(),
      (this.selectedModels = this.models.map((e) => e.model)),
      this.models.forEach((e) => (e.selected = !0));
  }
  clearModels(i) {
    i.stopPropagation(),
      (this.selectedModels = []),
      this.models.forEach((e) => (e.selected = !1));
  }
  toggleSelectAllPS(i) {
    i.stopPropagation();
    let e = this.filteredPSs().map((r) => r.user_id);
    e.every((r) => this.selectedPSs.includes(r))
      ? (this.selectedPSs = this.selectedPSs.filter((r) => !e.includes(r)))
      : (this.selectedPSs = Array.from(new Set([...this.selectedPSs, ...e])));
  }
  getProgressWidth(i, e) {
    if (e <= 0) return 0;
    let t = Math.max(i, e);
    return (i / t) * 100;
  }
  getTargetPosition(i, e) {
    if (e <= 0) return 0;
    let t = Math.max(i, e);
    return (e / t) * 100;
  }
  getProgressColor(i, e) {
    return i >= e ? "#28a745" : i >= e * 0.8 ? "#fd7e14" : "#dc3545";
  }
  clearAllPS(i) {
    i.stopPropagation(), (this.manualPSSelection = !0), (this.selectedPSs = []);
  }
  toggleKpiDetails(i) {
    i.showDetails = !i.showDetails;
  }
  filteredDealers() {
    return this.dealerSearch
      ? this.allDealers.filter((i) =>
          i.dealer_name.toLowerCase().includes(this.dealerSearch.toLowerCase())
        )
      : this.allDealers;
  }
  onPSChange(i, e) {
    (this.manualPSSelection = !0),
      e.target.checked
        ? this.selectedPSs.includes(i) || this.selectedPSs.push(i)
        : (this.selectedPSs = this.selectedPSs.filter((a) => a !== i));
    let t =
        this.selectedDealers.length > 0
          ? this.selectedDealers.join(",")
          : "all",
      r = this.selectedPSs.length > 0 ? this.selectedPSs.join(",") : "all",
      o =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(this.selectedSummaryFilter, t, r, o);
  }
  toggleModelSelection(i) {
    (i.selected = !i.selected), this.onModelChange(i.model);
  }
  clickOutside(i) {
    let e = i.target;
    this.modelDropdownOpen &&
      this.modelDropdown &&
      !this.modelDropdown.nativeElement.contains(e) &&
      (this.modelDropdownOpen = !1),
      this.dropdownOpen &&
        this.dropdown &&
        !this.dropdown.nativeElement.contains(e) &&
        (this.dropdownOpen = !1),
      this.dropdownPSOpen &&
        this.psDropdown &&
        !this.psDropdown.nativeElement.contains(e) &&
        (this.dropdownPSOpen = !1);
  }
  getKpiColor(i) {
    return i <= 50 ? "red" : i <= 80 ? "amber" : "green";
  }
  onModelChange(i) {
    let e = this.selectedModels.indexOf(i);
    e > -1 ? this.selectedModels.splice(e, 1) : this.selectedModels.push(i),
      (this.models = this.models.map((t) =>
        Te(G({}, t), { selected: this.selectedModels.includes(t.model) })
      )),
      this.callAPI();
  }
  getSelectedDealerNames() {
    return !this.selectedDealers || this.selectedDealers.length === 0
      ? "All Dealers"
      : this.selectedDealers.map((i) => this.getDealerName(i)).join(", ");
  }
  abs(i) {
    return Math.abs(i);
  }
  toggleModelDropdown() {
    this.modelDropdownOpen = !this.modelDropdownOpen;
  }
  toggleAllModels(i) {
    i.target.checked
      ? (this.selectedModels = this.models.map((e) => e.model))
      : (this.selectedModels = []),
      this.callAPI();
  }
  callAPI() {
    let i = this.selectedModels.length ? this.selectedModels.join(",") : "all",
      e =
        this.selectedDealers.length > 0
          ? this.selectedDealers.join(",")
          : "all",
      t = this.selectedPSs.length > 0 ? this.selectedPSs.join(",") : "all";
    this.loadDealers(this.selectedSummaryFilter, e, t, i);
  }
  onCheckboxChange(i) {
    let e = i.target.value;
    i.target.checked
      ? this.selectedDealers.push(e)
      : (this.selectedDealers = this.selectedDealers.filter((r) => r !== e));
    let t =
      this.selectedDealers.length === 0
        ? "all"
        : this.selectedDealers.join(",");
    this.loadDealers(this.selectedSummaryFilter, t);
  }
  getDealerName(i) {
    let e = this.allDealers.find((t) => t.dealer_id === i);
    return e ? e.dealer_name : "";
  }
  isDealerSelected(i) {
    return this.selectedDealers.includes(i.dealer_id);
  }
  toggleDealerSelection(i) {
    let e = i.dealer_id;
    this.selectedDealers.includes(e)
      ? (this.selectedDealers = this.selectedDealers.filter((r) => r !== e))
      : this.selectedDealers.push(e);
    let t =
      this.selectedDealers.length === 0
        ? "all"
        : this.selectedDealers.join(",");
    this.loadDealers(this.selectedSummaryFilter, t);
  }
  togglePSDropdown() {
    this.dropdownPSOpen = !this.dropdownPSOpen;
  }
  static ɵfac = function (e) {
    return new (e || n)(j(jr), j(vt), j(jt), j(Qe));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-overview"]],
    viewQuery: function (e, t) {
      if ((e & 1 && (_t(OF, 5), _t(kF, 5), _t(PF, 5)), e & 2)) {
        let r;
        nt((r = rt())) && (t.dropdown = r.first),
          nt((r = rt())) && (t.modelDropdown = r.first),
          nt((r = rt())) && (t.psDropdown = r.first);
      }
    },
    hostBindings: function (e, t) {
      e & 1 &&
        R(
          "click",
          function (o) {
            return t.clickOutside(o);
          },
          !1,
          Or
        );
    },
    standalone: !0,
    features: [le],
    decls: 4,
    vars: 3,
    consts: [
      ["dropdown", ""],
      ["noDealers", ""],
      ["psDropdown", ""],
      ["noPS", ""],
      ["modelDropdown", ""],
      ["noModels", ""],
      [1, "mt-4"],
      [3, "ngSwitch"],
      [4, "ngSwitchCase"],
      [1, "sa-dashboard-container"],
      [1, "filters-wrap"],
      [1, "filters"],
      [
        "width",
        "18",
        "height",
        "18",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "stroke",
        "currentColor",
      ],
      [
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
        "stroke-width",
        "2",
        "d",
        "M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z",
      ],
      [1, "select"],
      [3, "ngModelChange", "change", "ngModel"],
      ["value", "DAY"],
      ["value", "YESTERDAY"],
      ["value", "WEEK"],
      ["value", "LAST_WEEK"],
      ["value", "MTD"],
      ["value", "LAST_MONTH"],
      ["value", "QTD"],
      ["value", "LAST_QUARTER"],
      [1, "select-dropdown", 3, "click"],
      [1, "dropdown-label"],
      [1, "dropdown-menu"],
      [1, "actions-row"],
      ["type", "button", 3, "click"],
      [1, "search-row", 3, "click"],
      [
        "type",
        "text",
        "placeholder",
        "Search Dealers",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [4, "ngIf", "ngIfElse"],
      [1, "dropdown-menu", 3, "click"],
      ["type", "button", 3, "click", "disabled"],
      [
        "type",
        "text",
        "placeholder",
        "Search PS",
        3,
        "ngModelChange",
        "ngModel",
        "disabled",
      ],
      [
        "type",
        "text",
        "placeholder",
        "Search Models",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "filter-actions"],
      ["type", "button", 1, "btn", 3, "click"],
      [
        "type",
        "button",
        "title",
        "Refresh",
        1,
        "btn",
        "refresh-btn",
        3,
        "click",
        "disabled",
      ],
      ["class", "fas fa-sync-alt", 4, "ngIf"],
      ["class", "fas fa-spinner fa-spin", 4, "ngIf"],
      [1, "kpi-grid"],
      [1, "kpi-card"],
      [
        1,
        "card-header",
        2,
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "12px",
      ],
      [
        2,
        "margin",
        "0",
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "6px",
        "margin-left",
        "-10px",
      ],
      [
        "id",
        "chipdiv",
        1,
        "chip",
        2,
        "border",
        "1px solid #ccc",
        "background",
        "#f1f5ff",
        "margin-left",
        "auto",
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "4px",
      ],
      [1, "dot"],
      [1, "count", 2, "font-weight", "bold", 3, "ngStyle"],
      [1, "kpi-items"],
      ["class", "kpi-item-wrapper", 4, "ngFor", "ngForOf"],
      [
        1,
        "card-header",
        2,
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "8px",
      ],
      [1, "card-header"],
      [4, "ngFor", "ngForOf"],
      ["class", "checkbox-item", 3, "click", 4, "ngIf"],
      [1, "checkbox-item", 3, "click"],
      ["type", "checkbox", 3, "change", "id", "checked"],
      [3, "for"],
      [1, "no-dealers"],
      ["class", "checkbox-item", 3, "disabled", 4, "ngIf"],
      [1, "checkbox-item"],
      ["type", "checkbox", 3, "change", "id", "checked", "disabled"],
      ["type", "checkbox", 3, "checked"],
      [2, "margin-left", "8px"],
      [1, "fas", "fa-sync-alt"],
      [1, "fas", "fa-spinner", "fa-spin"],
      [1, "kpi-item-wrapper"],
      [1, "kpi-item"],
      [1, "kpi-row"],
      [1, "kpi-label"],
      [1, "kpi-values"],
      [1, "kpi-actual"],
      [1, "trend-icon", 3, "ngClass"],
      [1, "chart-container"],
      [1, "progress-wrapper"],
      [1, "progress", 3, "title"],
      [1, "bar", 3, "ngStyle"],
      ["class", "target-marker-global", 3, "left", 4, "ngIf"],
      [1, "growth-box"],
      [1, "growth-title"],
      [1, "growth-value"],
      [1, "target-marker-global"],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "div", 6),
        Le(1, 7),
        A(2, IF, 2, 0, "div", 8)(3, t3, 118, 44, "div", 8),
        Ve(),
        c()),
        e & 2 &&
          (m(),
          y("ngSwitch", t.selectedTab),
          m(),
          y("ngSwitchCase", "dashboard"),
          m(),
          y("ngSwitchCase", "summary"));
    },
    dependencies: [Di, It, At, We, Pr, Jl, ec, ni, ri, Wt, Si, ii, _i, mo, tt],
    styles: [
      '.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:7rem}@media (min-width: 768px) and (max-width: 819px){.content-body[_ngcontent-%COMP%]{margin-left:42px!important}}@media (max-width: 768px){.select-dropdown[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{width:100%!important}}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .deznav[_ngcontent-%COMP%]{width:80px}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .nav-text[_ngcontent-%COMP%]{display:none}@media (min-width: 2560px){.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:336px!important}}@media screen and (min-width: 1920px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:336px}}@media screen and (width: 1366px){.content-body[_ngcontent-%COMP%]{margin-left:4rem}}#main-wrapper[_ngcontent-%COMP%]{display:flex}.content-body[_ngcontent-%COMP%]{transition:margin-left .3s ease;width:100%}.content-section[_ngcontent-%COMP%]{padding:20px;margin-top:70px}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:2rem;margin-top:20px}.performance-panel[_ngcontent-%COMP%]{flex:1;background:#f9f9f9;border-radius:8px;padding:20px;height:300px}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px}.metric-box[_ngcontent-%COMP%]{background:#fff;padding:1rem;border-radius:8px;text-align:center;box-shadow:0 2px 4px #0000001a}.super-header[_ngcontent-ng-c3749377617][_ngcontent-%COMP%]{background-color:#fff;margin-top:15px}.content-body[_ngcontent-%COMP%]   .container-fluid[_ngcontent-%COMP%], .content-body[_ngcontent-%COMP%]{padding-top:0}.tracking-tight[_ngcontent-%COMP%]{letter-spacing:-.025em}.font-bold[_ngcontent-%COMP%]{font-weight:700}@media (max-width: 768px){.tracking-tight[_ngcontent-%COMP%]{font-size:1.125rem}}[_ngcontent-%COMP%]:root{--bg: #0b1020;--bg-soft: #0e1428;--card: rgba(255, 255, 255, .06);--card-border: rgba(255, 255, 255, .14);--text: #e8edf6;--muted: #a6b0c3;--brand: #7aa2ff;--brand-2: #6ae3ff;--success: #34d399;--danger: #ef4444;--warn: #f59e0b;--ring: rgba(122, 162, 255, .35);--chip: #1b223a;--select: #111832;--grid-line: rgba(255, 255, 255, .06);--shadow: 0 10px 30px rgba(0, 0, 0, .35), 0 2px 8px rgba(0, 0, 0, .25);--radius: 16px;--radius-sm: 12px;--radius-xs: 8px;--blur: 12px;--fw-600: 600;--fw-700: 700}[data-theme=light][_ngcontent-%COMP%]{--bg: #f7f9fc;--bg-soft: #eef2fb;--card: #ffffff;--card-border: #e7e9f2;--text: #1a2234;--muted: #5b657a;--brand: #2563eb;--brand-2: #60a5fa;--success: #10b981;--danger: #ef4444;--warn: #d97706;--ring: rgba(37, 99, 235, .2);--chip: #f1f5ff;--select: #ffffff;--grid-line: rgba(26, 34, 52, .06);--shadow: 0 10px 30px rgba(16, 24, 40, .08), 0 2px 8px rgba(16, 24, 40, .06)}*[_ngcontent-%COMP%]{box-sizing:border-box}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}.dashboard-header[_ngcontent-%COMP%]{background-color:#fff!important;padding:15px;box-shadow:0 4px 6px #0000001a}body[_ngcontent-%COMP%]{margin:0;font-family:Inter,ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Helvetica Neue,Arial,"Apple Color Emoji","Segoe UI Emoji";color:var(--text);background:radial-gradient(1200px 800px at 10% -10%,var(--brand-2) 0%,transparent 35%),radial-gradient(1000px 700px at 120% 10%,var(--brand) 0%,transparent 30%),linear-gradient(180deg,var(--bg-soft),var(--bg));background-attachment:fixed;line-height:1.6}.grid-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;pointer-events:none;background:linear-gradient(var(--grid-line) 1px,transparent 1px) 0 0/ 100% 48px,linear-gradient(90deg,var(--grid-line) 1px,transparent 1px) 0 0/ 48px 100%;mask-image:radial-gradient(1200px 800px at 40% 0%,rgba(0,0,0,.35),transparent 70%)}.container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:28px 20px 56px}.header[_ngcontent-%COMP%]{position:relative;margin-bottom:20px;padding:24px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);overflow:hidden}.header[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;background:radial-gradient(600px 150px at 20% 0%,rgba(255,255,255,.12),transparent 40%);pointer-events:none}.header-top[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px;justify-content:space-between;margin-bottom:10px}.brand-chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:10px;background:var(--chip);border:1px solid var(--card-border);padding:8px 12px;border-radius:999px;font-size:12px;color:var(--muted)}.brand-dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background:linear-gradient(135deg,var(--brand),var(--brand-2));box-shadow:0 0 0 6px var(--ring)}.theme-toggle[_ngcontent-%COMP%]{border:1px solid var(--card-border);background:var(--chip);color:var(--text);border-radius:999px;padding:8px 12px;cursor:pointer;transition:transform .15s ease}.theme-toggle[_ngcontent-%COMP%]:hover{transform:translateY(-1px)}.main-title[_ngcontent-%COMP%]{margin:6px 0 4px;font-weight:var(--fw-700);letter-spacing:.2px;font-size:clamp(22px,3.4vw,32px);background:linear-gradient(90deg,var(--text),var(--brand));-webkit-background-clip:text;background-clip:text;color:#000!important}.subtitle[_ngcontent-%COMP%]{color:var(--muted);font-size:14px}.progress[_ngcontent-%COMP%]{width:100%;height:10px;background:#f0f0f0;border-radius:6px;overflow:hidden;margin-top:6px}.filters-wrap[_ngcontent-%COMP%]{position:sticky;top:10px;z-index:5;margin:18px 0 28px;background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a}.trend-up[_ngcontent-%COMP%]{color:green}.trend-down[_ngcontent-%COMP%]{color:red}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:14px;align-items:center}.filters[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:14px;font-weight:var(--fw-600);color:var(--muted);margin:0 6px 0 2px;display:flex;align-items:center;gap:8px}.select[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;background:var(--select);border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px;min-width:230px;transition:box-shadow .2s ease,border-color .2s ease}.select[_ngcontent-%COMP%]:focus-within{box-shadow:0 0 0 6px var(--ring);border-color:var(--brand)}.select[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:18px;height:18px;opacity:.7}.select[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{border:0;background:transparent;color:var(--text);width:100%;padding:6px 6px 6px 2px;outline:none;font-size:14px;appearance:none}.filter-actions[_ngcontent-%COMP%]{margin-left:auto;display:flex;gap:10px;flex-wrap:wrap}.filter-container[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center;width:100%;gap:10px}.filter-actions[_ngcontent-%COMP%]{display:flex;gap:10px;flex-wrap:wrap}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip, #f3f4f6);color:var(--text, #111);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:600;cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip);color:var(--text);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:var(--fw-600);cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[_ngcontent-%COMP%]:hover{transform:translateY(-1px);box-shadow:var(--shadow)}.btn.primary[_ngcontent-%COMP%]{background:linear-gradient(135deg,var(--brand),var(--brand-2));color:#fff;border-color:transparent}.kpi-grid[_ngcontent-%COMP%]{display:grid;gap:22px;grid-template-columns:repeat(12,1fr)}.kpi-card[_ngcontent-%COMP%]{background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a;grid-column:span 6;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);padding:18px 18px 16px;overflow:hidden;position:relative}.kpi-card[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;pointer-events:none;background:radial-gradient(450px 120px at 95% -10%,rgba(122,162,255,.13),transparent 45%)}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);transition:transform .2s ease}.card-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:10px;margin-bottom:12px}.card-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:15px;margin-left:-15px;letter-spacing:.2px}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;border:1px solid #ccc;background:var(--chip);border-radius:999px;padding:6px 10px;font-size:12px;color:var(--muted)}.kpi-items[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px}.kpi-item[_ngcontent-%COMP%]{border:1px solid #e2e8f0;border-radius:15px!important;background:linear-gradient(180deg,rgba(255,255,255,.04),transparent);padding:10px 12px;transition:border-color .2s ease,background .2s ease}.kpi-item[_ngcontent-%COMP%]:hover{border-color:var(--ring);background:linear-gradient(180deg,rgba(122,162,255,.08),transparent)}.kpi-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:12px;font-size:13px;margin-bottom:8px}.kpi-label[_ngcontent-%COMP%]{color:var(--muted)}.kpi-values[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;font-weight:var(--fw-600)}.kpi-actual[_ngcontent-%COMP%]{color:var(--text)}.trend-icon[_ngcontent-%COMP%]{width:16px;height:16px}.progress[_ngcontent-%COMP%]{position:relative;height:10px;border-radius:999px;overflow:hidden;background:linear-gradient(0deg,#ffffff14,#ffffff0a);border:1px solid #e2e8f0}.growth[_ngcontent-%COMP%]{grid-column:span 12;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:18px;background-color:#fff!important;box-shadow:0 4px 6px #0000001a}.growth-head[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;margin-bottom:8px}.growth-head[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:15px}.growth-note[_ngcontent-%COMP%]{color:var(--muted);font-size:12px;margin-top:6px}.sparkline[_ngcontent-%COMP%]{width:100%;height:140px;border-radius:var(--radius);border:1px dashed var(--card-border);display:grid;place-items:center;color:var(--muted);font-size:13px}@media (max-width: 1024px){.kpi-card[_ngcontent-%COMP%]{grid-column:span 12}}@media (max-width: 640px){.filters[_ngcontent-%COMP%]{gap:10px}.select[_ngcontent-%COMP%]{min-width:100%}.filter-actions[_ngcontent-%COMP%]{width:100%;justify-content:flex-end}}@keyframes _ngcontent-%COMP%_pop{0%{transform:scale(.98);opacity:0}to{transform:scale(1);opacity:1}}.kpi-card[_ngcontent-%COMP%], .growth[_ngcontent-%COMP%], .header[_ngcontent-%COMP%], .filters[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pop .35s ease both;border-radius:10px!important}.ring[_ngcontent-%COMP%]{box-shadow:0 0 0 6px var(--ring);transition:box-shadow .3s ease}.trend-icon[_ngcontent-%COMP%]{width:18px;height:18px;stroke-width:2.25;vertical-align:middle;flex-shrink:0;display:inline-block}.kpi-values[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;line-height:1}.trend-up[_ngcontent-%COMP%]{color:var(--success)}.trend-down[_ngcontent-%COMP%]{color:var(--danger)}.kpi-item[_ngcontent-%COMP%]{flex:1}.kpi-item-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:20px;border-radius:14px;margin-bottom:16px}.kpi-item[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;justify-content:center}.growth-box[_ngcontent-%COMP%]{background:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;width:90px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:flex;flex-direction:column;align-items:center}.growth-box[_ngcontent-%COMP%]{background:linear-gradient(135deg,#10b981,#059669);color:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:inline-flex;flex-direction:column;align-items:flex-start;width:70px;height:70px}.growth-header[_ngcontent-%COMP%]{display:flex;color:#fff;justify-content:flex-start;align-items:baseline;gap:4px;margin-bottom:6px}.growth-title[_ngcontent-%COMP%]{font-size:11px;color:#fff;font-weight:500}.growth-value[_ngcontent-%COMP%]{font-size:13px;font-weight:700;color:#fff}.growth-bars[_ngcontent-%COMP%]{display:flex;align-items:flex-end;gap:2px;color:#fff;height:25px;justify-content:flex-start;width:fit-content}.bar-segment[_ngcontent-%COMP%]{width:3px;background:#fff;border-radius:2px}.select-dropdown[_ngcontent-%COMP%]{position:relative;width:200px;cursor:pointer;-webkit-user-select:none;user-select:none}.dropdown-label[_ngcontent-%COMP%]{padding:12px;border:1px solid #e2e8f0;border-radius:22px;background:#fff;color:var(--text);display:flex;font-size:14px;justify-content:space-between;align-items:center}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;right:0;background:#fff;border:1px solid #ccc;border-radius:6px;max-height:400px;overflow-y:auto;display:none;z-index:10}.select-dropdown.open[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{display:block}.checkbox-item[_ngcontent-%COMP%]{padding:6px 8px;gap:6px}.bar[_ngcontent-%COMP%]{height:100%;border-radius:6px;transition:width .4s ease}.negative-box[_ngcontent-%COMP%]{background:linear-gradient(90deg,var(--danger),#fda4af)}[_ngcontent-%COMP%]:root{--brand: #10b981;--brand-2: #059669;--danger: #ef4444}.chip[_ngcontent-%COMP%]   .dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background:linear-gradient(135deg,var(--brand),var(--brand-2))}.arrow[_ngcontent-%COMP%]{display:inline-block;margin-left:5px;width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent}.arrow.up[_ngcontent-%COMP%]{border-bottom:10px solid green}.arrow.down[_ngcontent-%COMP%]{border-top:10px solid red}.growth-box[_ngcontent-%COMP%]{padding:8px;border-radius:6px;text-align:center;font-weight:700;color:#fff}.growth-box.positive-box[_ngcontent-%COMP%]{background-color:#28a745!important}.growth-box.negative-box[_ngcontent-%COMP%]{background-color:#dc3545!important}.total-bar[_ngcontent-%COMP%]{background:#f1f5ff;border:1px solid #ccc;border-radius:6px;padding:8px;margin:8px 0;font-weight:700;text-align:center}@media (max-width: 844px){.growth-box[_ngcontent-%COMP%]{margin-left:-10px!important}.select-dropdown[_ngcontent-%COMP%]{min-width:100%!important}}.select-dropdown.open[_ngcontent-%COMP%]   .dropdown-label[_ngcontent-%COMP%]{border-bottom-left-radius:0;border-bottom-right-radius:0}.select-dropdown[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;width:150%;border:1px solid #ccc;border-top:none;background:#fff;z-index:1000;overflow-y:auto;border-radius:0 0 6px 6px;box-shadow:0 2px 6px #0000001a}.select-dropdown[_ngcontent-%COMP%]   .actions-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;padding:6px 10px;border-bottom:1px solid #eee;background:#f9f9f9;top:0;z-index:5}.select-dropdown[_ngcontent-%COMP%]   .actions-row[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:none;border:none;font-size:13px;color:#007bff;cursor:pointer;padding:4px 6px;border-radius:4px;transition:background .2s}.select-dropdown.disabled[_ngcontent-%COMP%]{color:#9ca3af;cursor:not-allowed;opacity:.7}.select-dropdown.disabled[_ngcontent-%COMP%]   .dropdown-label[_ngcontent-%COMP%]{color:#9ca3af}.select-dropdown.disabled[_ngcontent-%COMP%]   .checkbox-item[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#9ca3af;cursor:not-allowed}.select-dropdown[_ngcontent-%COMP%]   .actions-row[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background:#f0f0f0}.checkbox-item[_ngcontent-%COMP%]{padding:6px 10px}.chart-container[_ngcontent-%COMP%], .progress[_ngcontent-%COMP%]{position:relative}.target-marker-global[_ngcontent-%COMP%]{position:absolute!important;top:0!important;bottom:0!important;width:1.5px!important;height:20px!important;background-color:#000!important;z-index:999!important;pointer-events:none}.search-row[_ngcontent-%COMP%]{padding:6px 12px;border-bottom:1px solid #eee}.search-row[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;border:1px solid #ccc;padding:10px;border-radius:15px;font-size:12px;box-sizing:border-box}.no-dealers[_ngcontent-%COMP%]{padding:8px 12px;font-size:13px;color:#999;text-align:center}.growth-box[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;text-align:center;height:100%}.growth-title[_ngcontent-%COMP%]{font-size:12px;font-weight:600;margin-bottom:4px}.growth-value[_ngcontent-%COMP%]{font-size:16px;font-weight:700}.arrow-up[_ngcontent-%COMP%]{width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-bottom:10px solid green}.arrow-down[_ngcontent-%COMP%]{width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-top:10px solid red}.filter-actions[_ngcontent-%COMP%]{display:flex;gap:8px;align-items:center}.refresh-btn[_ngcontent-%COMP%]{font-size:14px!important;line-height:1!important;background:#f5f5f5!important;border:1px solid #ccc!important;border-radius:4px!important;cursor:pointer!important;display:inline-block!important}.refresh-btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{pointer-events:none}.custom-tooltip[_ngcontent-%COMP%]{position:absolute;background:#333;color:#fff;padding:4px 8px;border-radius:4px;font-size:12px;white-space:nowrap;transform:translate(-50%);z-index:9999}',
    ],
  });
};
function i3(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 35),
      R("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      l(1, "input", 36),
      R("change", function (r) {
        let o = O(e).$implicit;
        return x(3).toggleDealerSelection(o), k(r.stopPropagation());
      }),
      c(),
      l(2, "span", 37),
      R("click", function (r) {
        let o = O(e).$implicit;
        return x(3).toggleDealerSelection(o), k(r.stopPropagation());
      }),
      h(3),
      c()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = x(3);
    m(), y("checked", t.isDealerSelected(e)), m(2), Z(" ", e.dealer_name, " ");
  }
}
function n3(n, i) {
  if ((n & 1 && (Le(0), A(1, i3, 4, 2, "div", 34), Ve()), n & 2)) {
    let e = x(2);
    m(), y("ngForOf", e.filteredDealers);
  }
}
function r3(n, i) {
  n & 1 && (l(0, "div", 38), h(1, " No dealers found "), c());
}
function o3(n, i) {
  if (n & 1) {
    let e = oe();
    l(0, "div", 26)(1, "div", 27)(2, "input", 28),
      dt("ngModelChange", function (r) {
        O(e);
        let o = x();
        return ct(o.dealerSearch, r) || (o.dealerSearch = r), k(r);
      }),
      R("input", function () {
        O(e);
        let r = x();
        return k(r.filterDealers());
      })("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      c()(),
      l(3, "div", 29)(4, "label", 30),
      R("click", function (r) {
        return O(e), k(r.stopPropagation());
      }),
      l(5, "input", 31),
      R("change", function (r) {
        return O(e), x().toggleSelectAll(r), k(r.stopPropagation());
      }),
      c(),
      h(6, " Select All "),
      c(),
      l(7, "button", 32),
      R("click", function (r) {
        return O(e), x().clearSelection(), k(r.stopPropagation());
      }),
      h(8, " Clear "),
      c()(),
      A(9, n3, 2, 1, "ng-container", 33)(
        10,
        r3,
        2,
        0,
        "ng-template",
        null,
        0,
        bt
      ),
      c();
  }
  if (n & 2) {
    let e = ut(11),
      t = x();
    m(2),
      lt("ngModel", t.dealerSearch),
      m(3),
      y("checked", t.areAllSelected()),
      m(4),
      y("ngIf", t.filteredDealers.length > 0)("ngIfElse", e);
  }
}
var _u = class n {
  constructor(i) {
    this.http = i;
  }
  chartOptions = {
    series: [],
    chart: {
      height: 350,
      type: "line",
      zoom: { enabled: !1 },
      toolbar: { show: !0 },
    },
    dataLabels: { enabled: !1 },
    stroke: { width: 2, curve: "smooth" },
    legend: {
      position: "top",
      horizontalAlign: "left",
      fontSize: "12px",
      itemMargin: { horizontal: 10, vertical: 4 },
      tooltipHoverFormatter: function (i, e) {
        return (
          i +
          " - <strong>" +
          e.w.globals.series[e.seriesIndex][e.dataPointIndex] +
          "</strong>"
        );
      },
    },
    markers: { size: 0, hover: { sizeOffset: 6 } },
    xaxis: {
      type: "category",
      categories: [],
      labels: {
        rotate: -45,
        hideOverlappingLabels: !0,
        showDuplicates: !1,
        style: { fontSize: "10px" },
      },
      tickPlacement: "on",
      sorted: !1,
    },
    tooltip: {
      x: { formatter: (i) => i.toString() },
      y: { formatter: (i) => i.toString() },
    },
    grid: {
      show: !0,
      borderColor: "#e0e0e0",
      strokeDashArray: 3,
      position: "back",
      xaxis: { lines: { show: !0 } },
      yaxis: { lines: { show: !0 } },
      row: { colors: ["transparent"], opacity: 0 },
      column: { colors: ["transparent"], opacity: 0 },
    },
  };
  BASE_URL = "https://uat.smartassistapp.in";
  TREND_CHART_URL = "/api/superAdmin/dashboard/trend-chart";
  ngOnInit() {
    this.fetchTrendChart();
  }
  dealers = [];
  selectedDealers = [];
  filteredDealers = [];
  dropdownOpen = !1;
  dealerSearch = "";
  selectedDateFilter = "LAST_30_DAYS";
  selectedMetric = "calls";
  chartTypes = ["line", "area", "bar"];
  currentChartTypeIndex = 0;
  loadDealers() {
    this.filteredDealers = [...this.dealers];
  }
  switchChartType() {
    this.currentChartTypeIndex =
      (this.currentChartTypeIndex + 1) % this.chartTypes.length;
    let i = this.chartTypes[this.currentChartTypeIndex];
    this.chartOptions = Te(G({}, this.chartOptions), {
      chart: Te(G({}, this.chartOptions.chart), {
        type: i,
        animations: {
          enabled: !0,
          speed: 800,
          animateGradually: { enabled: !0, delay: 150 },
          dynamicAnimation: { enabled: !0, speed: 600 },
        },
      }),
    });
  }
  toggleDropdown() {
    this.dropdownOpen = !this.dropdownOpen;
  }
  filterDealers() {
    this.dealerSearch.trim()
      ? (this.filteredDealers = this.dealers.filter((i) =>
          i.dealer_name.toLowerCase().includes(this.dealerSearch.toLowerCase())
        ))
      : (this.filteredDealers = [...this.dealers]);
  }
  isDealerSelected(i) {
    return this.selectedDealers.includes(i.dealer_id);
  }
  toggleDealerSelection(i) {
    let e = i.dealer_id,
      t = this.selectedDealers.indexOf(e);
    t > -1 ? this.selectedDealers.splice(t, 1) : this.selectedDealers.push(e),
      this.fetchTrendChartWithFilters();
  }
  areAllSelected() {
    return (
      this.filteredDealers.length > 0 &&
      this.filteredDealers.every((i) => this.isDealerSelected(i))
    );
  }
  toggleSelectAll(i) {
    i.target.checked
      ? this.filteredDealers.forEach((t) => {
          this.selectedDealers.includes(t.dealer_id) ||
            this.selectedDealers.push(t.dealer_id);
        })
      : this.filteredDealers.forEach((t) => {
          let r = this.selectedDealers.indexOf(t.dealer_id);
          r > -1 && this.selectedDealers.splice(r, 1);
        }),
      this.fetchTrendChartWithFilters();
  }
  clearSelection() {
    (this.selectedDealers = []), this.fetchTrendChartWithFilters();
  }
  fetchTrendChart() {
    let i = localStorage.getItem("token");
    if (!i) {
      console.error("\u274C No token found in localStorage");
      return;
    }
    let e = new Tt({ authorization: `Bearer ${i}` }),
      t = new Dn().set("metric", "calls").set("dateFilter", "LAST_30_DAYS");
    this.http
      .get(`${this.BASE_URL}${this.TREND_CHART_URL}`, { headers: e, params: t })
      .subscribe({
        next: (r) => {
          console.log("\u2705 Initial API Response:", r),
            r.activeDealers &&
              ((this.dealers = r.activeDealers),
              (this.filteredDealers = [...this.dealers]),
              (this.selectedDealers = this.dealers.map((o) => o.dealer_id))),
            this.updateChart(r.data || []);
        },
        error: (r) => {
          console.error("\u274C API Error:", r);
        },
      });
  }
  fetchTrendChartWithFilters() {
    let i = localStorage.getItem("token");
    if (!i) {
      console.error("\u274C No token found in localStorage");
      return;
    }
    let e = new Tt({ authorization: `Bearer ${i}` }),
      t = new Dn()
        .set("metric", this.selectedMetric)
        .set("dateFilter", this.selectedDateFilter);
    this.selectedDealers.length > 0 &&
      (t = t.set("dealer_id", this.selectedDealers.join(","))),
      this.http
        .get(`${this.BASE_URL}${this.TREND_CHART_URL}`, {
          headers: e,
          params: t,
        })
        .subscribe({
          next: (r) => {
            console.log("\u2705 Filtered API Response:", r),
              this.updateChart(r.data || []);
          },
          error: (r) => {
            console.error("\u274C API Error:", r);
          },
        });
  }
  updateChart(i) {
    if (!i || i.length === 0) {
      this.chartOptions = Te(G({}, this.chartOptions), {
        series: [],
        xaxis: Te(G({}, this.chartOptions.xaxis), { categories: [] }),
      });
      return;
    }
    let e = this.transformDataForChart(i);
    console.log("Categories being set:", e.categories),
      console.log("First few categories:", e.categories.slice(0, 5));
    let t = [
        "#008FFB",
        "#00E396",
        "#FEB019",
        "#FF4560",
        "#775DD0",
        "#546E7A",
        "#26A69A",
        "#D4526E",
      ],
      r = e.series.map((o, a) => Te(G({}, o), { color: t[a % t.length] }));
    this.chartOptions = {
      series: r,
      chart: {
        height: 350,
        type: this.chartOptions.chart?.type || "line",
        zoom: { enabled: !1 },
        toolbar: { show: !0 },
      },
      dataLabels: { enabled: !1 },
      stroke: { width: 2, curve: "smooth" },
      markers: { size: 0, hover: { sizeOffset: 6 } },
      legend: {
        position: "top",
        horizontalAlign: "left",
        fontSize: "12px",
        itemMargin: { horizontal: 10, vertical: 4 },
        tooltipHoverFormatter: function (o, a) {
          let d = a.dataPointIndex;
          return d !== void 0 && d >= 0
            ? `${o} - <strong>${a.w.globals.series[a.seriesIndex][d]}</strong>`
            : o;
        },
      },
      xaxis: {
        type: "category",
        categories: e.categories,
        tickPlacement: "on",
        tickAmount: 8,
        labels: {
          rotate: -45,
          hideOverlappingLabels: !0,
          showDuplicates: !1,
          style: { fontSize: "10px" },
        },
      },
      tooltip: { x: {}, y: { formatter: (o) => o.toString() } },
      grid: { show: !0, borderColor: "#e0e0e0", strokeDashArray: 3 },
      colors: [
        "#2a8eff",
        "#0f5fb8",
        "#1676e6",
        "#86c1ff",
        "#57a8ff",
        "#059669",
        "#0ea5e9",
        "#9333ea",
        "#d97706",
        "#e11d48",
        "#0d4c90",
        "#0c3f76",
        "#64748b",
        "#475569",
        "#14b8a6",
      ],
      responsive: [
        {
          breakpoint: 1024,
          options: {
            xaxis: {
              tickAmount: 8,
              labels: { style: { fontSize: "8px" }, rotate: -45 },
            },
          },
        },
        {
          breakpoint: 768,
          options: {
            xaxis: {
              tickAmount: 8,
              labels: { style: { fontSize: "7px" }, rotate: -60 },
            },
            chart: { height: 260 },
          },
        },
      ],
    };
  }
  transformDataForChart(i) {
    if (!i || i.length === 0) return { series: [], categories: [] };
    let e = Array.from(new Set(i.map((a) => a.label)));
    console.log("Original unique labels:", e);
    let t = e.sort((a, d) => {
      let u = (S) => {
          try {
            let [T, M] = S.trim().split(" "),
              I = {
                Jan: 0,
                Feb: 1,
                Mar: 2,
                Apr: 3,
                May: 4,
                Jun: 5,
                Jul: 6,
                Aug: 7,
                Sep: 8,
                Oct: 9,
                Nov: 10,
                Dec: 11,
              },
              L = parseInt(T, 10),
              E = I[M];
            if (isNaN(L) || E === void 0 || L < 1 || L > 31)
              return console.warn(`Invalid date format: ${S}`), new Date(0);
            let F = 2024;
            return new Date(F, E, L);
          } catch (T) {
            return console.warn(`Error parsing date: ${S}`, T), new Date(0);
          }
        },
        f = u(a),
        v = u(d);
      return f.getTime() - v.getTime();
    });
    console.log("Sorted labels (categories):", t),
      console.log("First 5 sorted labels:", t.slice(0, 5));
    let r = {};
    i.forEach((a) => {
      let d = a.dealer_name;
      r[d] || (r[d] = []), r[d].push(a);
    }),
      console.log("Dealer groups:", Object.keys(r));
    let o = Object.keys(r).map((a) => {
      let d = r[a],
        u = new Map(d.map((v) => [v.label, Number(v.count) || 0])),
        f = t.map((v) => u.get(v) || 0);
      return { name: a, data: f };
    });
    return (
      console.log("Final series data:", o),
      console.log("Final categories being returned:", t),
      { series: o, categories: t }
    );
  }
  groupDataByDealer(i) {
    return i.reduce((e, t) => {
      let r = t.dealer_name || "Unknown Dealer";
      return e[r] || (e[r] = []), e[r].push(t), e;
    }, {});
  }
  formatDate(i) {
    return new Date(i).toLocaleDateString("en-US", {
      month: "short",
      day: "2-digit",
    });
  }
  getExportFileName() {
    let e =
        {
          last_login: "LastLogin",
          leads: "Leads",
          follow_up: "FollowUps",
          unique_testdrive: "UniqueTestDrives",
          calls: "TotalCalls",
        }[this.selectedMetric] || this.selectedMetric,
      t = "AllDealers";
    if (this.selectedDealers.length > 0) {
      let o = this.dealers
        .filter((a) => this.selectedDealers.includes(a.dealer_id))
        .map((a) => a.dealer_name.replace(/\s+/g, ""));
      (t = o.slice(0, 3).join("_")),
        o.length > 3 && (t += `_plus${o.length - 3}`);
    }
    let r = new Date().toISOString().split("T")[0];
    return `${e}_${t}_${r}_Report`;
  }
  onDocumentClick(i) {
    let t = i.target.closest(".dropdown");
    (!t || !t.classList.contains("flt1")) && (this.dropdownOpen = !1);
  }
  static ɵfac = function (e) {
    return new (e || n)(j(jt));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-trend-chart"]],
    hostBindings: function (e, t) {
      e & 1 &&
        R(
          "click",
          function (o) {
            return t.onDocumentClick(o);
          },
          !1,
          Or
        );
    },
    standalone: !0,
    features: [le],
    decls: 41,
    vars: 17,
    consts: [
      ["noDealers", ""],
      [
        1,
        "bg-white",
        "rounded-2xl",
        "shadow-sm",
        "border",
        "border-slate-200",
        2,
        "margin-top",
        "39px",
        "margin-bottom",
        "15px",
      ],
      [
        1,
        "p-4",
        "sm:p-6",
        "border-b",
        "border-slate-200",
        "flex",
        "flex-col",
        "md:flex-row",
        "md:items-center",
        "md:justify-between",
        "gap-4",
        "delar_usage",
      ],
      [1, "text-lg", "font-semibold"],
      [1, "text-slate-500", "text-sm"],
      [
        1,
        "flex",
        "flex-col",
        "md:flex-row",
        "md:items-center",
        "gap-3",
        "Granularity_section",
      ],
      [1, "flex", "flex-wrap", "items-center", "gap-2", "wrapper-content"],
      [1, "dropdown", "flt1", 2, "margin-right", "5px"],
      [
        "type",
        "button",
        1,
        "no-border",
        "time-dropdown",
        "dropdown-toggle",
        3,
        "click",
      ],
      ["class", "dropdown-menu show", 4, "ngIf"],
      ["for", "usageGran", 1, "text-sm", "text-slate-600"],
      [
        "id",
        "usageGran",
        1,
        "no-border",
        "rounded-xl",
        "border-slate-300",
        "text-sm",
        "focus:ring-2",
        "focus:ring-brand-500",
        "focus:border-brand-500",
        3,
        "ngModelChange",
        "change",
        "ngModel",
      ],
      ["value", "LAST_30_DAYS", "selected", ""],
      ["value", "LAST_4_WEEKS"],
      ["value", "LAST_6_MONTHS"],
      ["for", "usageMetric", 1, "text-sm", "text-slate-600"],
      [
        "id",
        "usageMetric",
        1,
        "no-border",
        "rounded-xl",
        "border-slate-300",
        "text-sm",
        "focus:ring-2",
        "focus:ring-brand-500",
        "focus:border-brand-500",
        3,
        "ngModelChange",
        "change",
        "ngModel",
      ],
      ["value", "last_login"],
      ["value", "leads"],
      ["value", "follow_up"],
      ["value", "unique_testdrive"],
      ["value", "calls", "selected", ""],
      [1, "flex", "items-center", "gap-2"],
      [
        1,
        "no-border",
        "switchChart",
        "px-3",
        "py-2",
        "rounded-lg",
        "bg-slate-200",
        "hover:bg-slate-300",
        "text-sm",
        "font-medium",
        3,
        "click",
      ],
      [1, "relative"],
      [
        3,
        "series",
        "chart",
        "xaxis",
        "dataLabels",
        "grid",
        "stroke",
        "title",
        "markers",
        "legend",
        "tooltip",
      ],
      [1, "dropdown-menu", "show"],
      [1, "px-2", "py-1"],
      [
        "type",
        "text",
        "placeholder",
        "Search dealers...",
        1,
        "form-control",
        3,
        "ngModelChange",
        "input",
        "click",
        "ngModel",
      ],
      [
        1,
        "d-flex",
        "justify-content-between",
        "align-items-center",
        "px-2",
        "py-1",
        "border-bottom",
        2,
        "display",
        "flex",
      ],
      [1, "mb-0", "d-flex", "align-items-center", 3, "click"],
      ["type", "checkbox", 1, "me-2", 3, "change", "checked"],
      [
        "type",
        "button",
        "id",
        "clearbtn",
        1,
        "btn",
        "btn-link",
        "btn-sm",
        "text-danger",
        "p-0",
        "ms-auto",
        3,
        "click",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "class",
        "dropdown-item d-flex align-items-center",
        3,
        "click",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "dropdown-item", "d-flex", "align-items-center", 3, "click"],
      [
        "type",
        "checkbox",
        1,
        "me-2",
        2,
        "border",
        "1px solid black",
        3,
        "change",
        "checked",
      ],
      [3, "click"],
      [1, "dropdown-item", "text-muted", "text-center"],
    ],
    template: function (e, t) {
      e & 1 &&
        (l(0, "section", 1)(1, "div", 2)(2, "div")(3, "h2", 3),
        h(4, "Dealer Usage \u2014 Last 30 Days"),
        c(),
        l(5, "p", 4),
        h(6, "Daily usage by metric "),
        c()(),
        l(7, "div", 5)(8, "div", 6)(9, "div", 7)(10, "button", 8),
        R("click", function () {
          return t.toggleDropdown();
        }),
        h(11),
        c(),
        A(12, o3, 12, 4, "div", 9),
        c(),
        l(13, "label", 10),
        h(14, "Date Filter"),
        c(),
        l(15, "select", 11),
        dt("ngModelChange", function (o) {
          return ct(t.selectedDateFilter, o) || (t.selectedDateFilter = o), o;
        }),
        R("change", function () {
          return t.fetchTrendChartWithFilters();
        }),
        l(16, "option", 12),
        h(17, "Last 30 Days"),
        c(),
        l(18, "option", 13),
        h(19, "Last 4 Weeks"),
        c(),
        l(20, "option", 14),
        h(21, "Last 6 Months"),
        c()(),
        l(22, "label", 15),
        h(23, "Metric"),
        c(),
        l(24, "select", 16),
        dt("ngModelChange", function (o) {
          return ct(t.selectedMetric, o) || (t.selectedMetric = o), o;
        }),
        R("change", function () {
          return t.fetchTrendChartWithFilters();
        }),
        l(25, "option", 17),
        h(26, "Last login"),
        c(),
        l(27, "option", 18),
        h(28, "Leads"),
        c(),
        l(29, "option", 19),
        h(30, "Follow-ups"),
        c(),
        l(31, "option", 20),
        h(32, "Unique Test Drives"),
        c(),
        l(33, "option", 21),
        h(34, "Total Calls"),
        c()(),
        l(35, "div", 22)(36, "button", 23),
        R("click", function () {
          return t.switchChartType();
        }),
        h(37),
        c()()()()(),
        l(38, "div")(39, "div", 24),
        U(40, "apx-chart", 25),
        c()()()),
        e & 2 &&
          (m(9),
          ne("show", t.dropdownOpen),
          m(2),
          Z(
            " ",
            t.selectedDealers.length > 0
              ? "Dealers Selected (" + t.selectedDealers.length + ")"
              : "Select Dealers",
            " "
          ),
          m(),
          y("ngIf", t.dropdownOpen),
          m(3),
          lt("ngModel", t.selectedDateFilter),
          m(9),
          lt("ngModel", t.selectedMetric),
          m(13),
          Z(
            " Switch Chart (",
            t.chartOptions.chart == null ? null : t.chartOptions.chart.type,
            ") "
          ),
          m(3),
          y("series", t.chartOptions.series)("chart", t.chartOptions.chart)(
            "xaxis",
            t.chartOptions.xaxis
          )("dataLabels", t.chartOptions.dataLabels)(
            "grid",
            t.chartOptions.grid
          )("stroke", t.chartOptions.stroke)("title", t.chartOptions.title)(
            "markers",
            t.chartOptions.markers
          )("legend", t.chartOptions.legend)(
            "tooltip",
            t.chartOptions.tooltip
          ));
    },
    dependencies: [Ae, At, We, tt, ni, ri, Wt, Si, ii, _i, wd, Gc, Wc],
    styles: [
      `.delar_usage[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.Granularity_section[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.75rem}.text-lg[_ngcontent-%COMP%]{font-size:1.125rem;line-height:1.75rem}.bg-brand-600[_ngcontent-%COMP%]{--tw-bg-opacity: 1;background-color:rgb(22 118 230 / var(--tw-bg-opacity, 1))}.text-white[_ngcontent-%COMP%]{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.font-semibold[_ngcontent-%COMP%]{font-weight:600}.text-xs[_ngcontent-%COMP%]{font-size:.75rem;line-height:1rem}.rounded-xl[_ngcontent-%COMP%]{border-radius:.75rem}.gap-2[_ngcontent-%COMP%]{gap:.5rem}.items-center[_ngcontent-%COMP%]{align-items:center}.inline-flex[_ngcontent-%COMP%]{display:inline-flex}.buttons[_ngcontent-%COMP%]{padding:.5rem .75rem;border:none}.wrapper-content[_ngcontent-%COMP%]{gap:.5rem;display:flex}label[_ngcontent-%COMP%]{margin-bottom:0rem}.dropdown.flt1[_ngcontent-%COMP%]{position:relative;display:inline-block}.time-dropdown[_ngcontent-%COMP%]{background:#fff;border:1px solid #ddd;border-radius:4px;padding:8px 12px;cursor:pointer;min-width:200px;text-align:left}.time-dropdown[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;z-index:1000;display:block;min-width:250px;max-height:300px;overflow-y:auto;background:#fff;border:1px solid #ddd;border-radius:4px;box-shadow:0 2px 8px #0000001a}.dropdown-item[_ngcontent-%COMP%]{padding:8px 12px;cursor:pointer;border-bottom:1px solid #f1f1f1}.dropdown-item[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.dropdown-item[_ngcontent-%COMP%]:last-child{border-bottom:none}.form-control[_ngcontent-%COMP%]{width:100%;padding:6px 10px;border:1px solid #ddd;border-radius:4px;font-size:14px}.btn-link[_ngcontent-%COMP%]{background:none;border:none;color:#dc3545;text-decoration:none;font-size:12px}.btn-link[_ngcontent-%COMP%]:hover{text-decoration:underline}.delar_usage[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1.5rem}@media (min-width: 768px){.delar_usage[_ngcontent-%COMP%]{flex-direction:row;align-items:center;justify-content:space-between}}.Granularity_section[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem;width:100%}@media (min-width: 768px){.Granularity_section[_ngcontent-%COMP%]{flex-direction:row;align-items:center;width:auto}}.wrapper-content[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;align-items:center;gap:1rem;width:100%}@media (min-width: 768px){.wrapper-content[_ngcontent-%COMP%]{width:auto}}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%]{position:relative;display:inline-flex;align-items:center;justify-content:space-between;min-width:160px;padding:.625rem 1rem;background:#fff;border:1px solid #d1d5db;border-radius:.75rem;font-size:.875rem;font-weight:500;color:#374151;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 2px #0000000d}.time-dropdown[_ngcontent-%COMP%]:hover, .standard-dropdown[_ngcontent-%COMP%]:hover{border-color:#9ca3af;box-shadow:0 1px 3px #0000001a}.time-dropdown[_ngcontent-%COMP%]:focus, .standard-dropdown[_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;box-shadow:0 0 0 3px #3b82f61a}.time-dropdown[_ngcontent-%COMP%]:after, .standard-dropdown[_ngcontent-%COMP%]:after{content:"";width:0;height:0;border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid #6b7280;margin-left:.5rem;transition:transform .2s ease}.time-dropdown.show[_ngcontent-%COMP%]:after, .standard-dropdown.show[_ngcontent-%COMP%]:after{transform:rotate(180deg)}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;right:0;z-index:1000;margin-top:.25rem;background:#fff;border:1px solid #e5e7eb;border-radius:.75rem;box-shadow:0 10px 25px -5px #0000001a,0 10px 10px -5px #0000000a;max-height:300px;overflow-y:auto;opacity:0;transform:translateY(-10px);transition:all .2s ease;pointer-events:none}.dropdown-menu.show[_ngcontent-%COMP%]{opacity:1;transform:translateY(0);pointer-events:auto}.dropdown-menu[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{width:100%;padding:.5rem .75rem;border:1px solid #e5e7eb;border-radius:.5rem;font-size:.875rem;background:#f9fafb;transition:all .2s ease}.dropdown-menu[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;background:#fff;box-shadow:0 0 0 2px #3b82f61a}.dropdown-menu[_ngcontent-%COMP%]   .border-bottom[_ngcontent-%COMP%]{border-bottom:1px solid #e5e7eb!important;padding:.5rem .75rem;background:#f9fafb}.dropdown-item[_ngcontent-%COMP%]{display:flex;align-items:center;padding:.5rem .75rem;font-size:.875rem;color:#374151;cursor:pointer;transition:background-color .15s ease;border:none;background:none;width:100%}.dropdown-item[_ngcontent-%COMP%]:hover{background-color:#f3f4f6}.dropdown-item[_ngcontent-%COMP%]:active{background-color:#e5e7eb}.dropdown-item[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{width:1rem;height:1rem;margin-right:.5rem;border:1px solid #d1d5db;border-radius:.25rem;cursor:pointer}.dropdown-item[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked{background-color:#3b82f6;border-color:#3b82f6}#clearbtn[_ngcontent-%COMP%]{color:#dc2626!important;font-size:.75rem;padding:.25rem .5rem;border:none;background:none;border-radius:.375rem;transition:all .2s ease}#clearbtn[_ngcontent-%COMP%]:hover{background-color:#fef2f2;color:#b91c1c!important}#usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{appearance:none;-webkit-appearance:none;-moz-appearance:none;background:#fff;border:1px solid #d1d5db;border-radius:.75rem;padding:.625rem 2rem .625rem 1rem;font-size:.875rem;font-weight:500;color:#374151;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 2px #0000000d;min-width:140px;background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");background-position:right .5rem center;background-repeat:no-repeat;background-size:1.5em 1.5em}#usageGran[_ngcontent-%COMP%]:hover, #usageMetric[_ngcontent-%COMP%]:hover{border-color:#9ca3af;box-shadow:0 1px 3px #0000001a}#usageGran[_ngcontent-%COMP%]:focus, #usageMetric[_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;box-shadow:0 0 0 3px #3b82f61a}label[_ngcontent-%COMP%]{font-size:.875rem;font-weight:500;color:#4b5563;margin-bottom:.25rem;display:block}@media (max-width: 767px){.wrapper-content[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{width:100%;min-width:unset}.Granularity_section[_ngcontent-%COMP%]{gap:1.5rem}.wrapper-content[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:100%}.wrapper-content[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{margin-top:1rem;margin-bottom:.25rem}.wrapper-content[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]:first-child{margin-top:0}}@media (min-width: 768px) and (max-width: 1023px){.wrapper-content[_ngcontent-%COMP%]{gap:.75rem}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{min-width:130px}}@media (min-width: 1024px){.wrapper-content[_ngcontent-%COMP%]{gap:1rem}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%]{min-width:180px}#usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{min-width:150px}}.flex.items-center.gap-2.mb-3[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:.625rem 1rem;background:#f8fafc;border:1px solid #e2e8f0;border-radius:.75rem;font-size:.875rem;font-weight:500;color:#475569;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 2px #0000000d}.flex.items-center.gap-2.mb-3[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background:#f1f5f9;border-color:#cbd5e1;box-shadow:0 1px 3px #0000001a}#usageLocalLoader[_ngcontent-%COMP%]{justify-content:center;padding:1rem}#usageLocalLoader[_ngcontent-%COMP%]   .animate-spin[_ngcontent-%COMP%]{width:1.25rem;height:1.25rem;border-width:2px;border-color:#e5e7eb;border-top-color:#3b82f6;border-radius:50%;animation:_ngcontent-%COMP%_spin 1s linear infinite}@keyframes _ngcontent-%COMP%_spin{to{transform:rotate(360deg)}}.relative[_ngcontent-%COMP%]{background:#fff;border-radius:.5rem;padding:1rem;margin-top:1rem}@media (prefers-contrast: high){.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{border-width:2px}}@media (prefers-reduced-motion: reduce){.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], .dropdown-menu[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{transition:none}}.switchChart[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #d1d5db;box-shadow:0 1px 2px #0000000d;font-size:.875rem;font-weight:500;color:#374151;padding:.625rem 2rem!important}.no-border[_ngcontent-%COMP%]{border-radius:0!important}.dealer-search[_ngcontent-%COMP%]:focus{outline:none;box-shadow:0 0 0 2px #2a8eff40}`,
    ],
  });
};
var Ey = [
  { path: "dataTable", component: mu },
  { path: "", component: wl, pathMatch: "full" },
  { path: "login", component: wl },
  {
    path: "Admin",
    component: $c,
    canActivate: [Kt],
    children: [
      { path: "", redirectTo: "dashboard", pathMatch: "full" },
      {
        path: "dashboard",
        component: Md,
        data: { title: "Dashboard" },
        canActivate: [Kt],
      },
      {
        path: "dealer",
        component: kd,
        data: { title: "Dealer" },
        canActivate: [Kt],
      },
      {
        path: "team",
        component: fu,
        data: { title: "team" },
        canActivate: [Kt],
      },
      {
        path: "vehicle",
        component: Yd,
        data: { title: "Vehicle" },
        canActivate: [Kt],
      },
      {
        path: "role",
        component: pu,
        data: { title: "Role" },
        canActivate: [Kt],
      },
      {
        path: "user-all",
        component: tu,
        data: { title: "Users-All" },
        canActivate: [Kt],
      },
      {
        path: "customer",
        component: Zd,
        data: { title: "Customer" },
        canActivate: [Kt],
      },
      {
        path: "profile",
        component: eu,
        data: { title: "Profile" },
        canActivate: [Kt],
      },
      {
        path: "singleUser/:dealer_id",
        component: Cl,
        resolve: { dealerData: Sl },
        data: { title: "Multiple" },
        canActivate: [Kt],
      },
      {
        path: "single-events/:eventId",
        component: iu,
        resolve: { eventData: ou },
        data: { title: "Single events" },
        canActivate: [Kt],
      },
      {
        path: "single-lead/:dealerId/:leadId",
        component: nu,
        resolve: { leadData: ru },
        data: { title: "Single Lead Data" },
        canActivate: [Kt],
      },
      {
        path: "single-user/:user_id",
        component: su,
        resolve: { userData: au },
        data: { title: "Single user Data" },
        canActivate: [Kt],
      },
      {
        path: "single-task/:taskId",
        component: cu,
        resolve: { taskData: lu },
        data: { title: "Single Task Data" },
        canActivate: [Kt],
      },
      {
        path: "single-opportunities/:oppId",
        component: uu,
        resolve: { oppData: hu },
        data: { title: "Single Opportunities Data" },
        canActivate: [Kt],
      },
      {
        path: "admin/singleDealer/:id",
        component: Cl,
        resolve: { dealerData: Sl },
        data: { title: "Single dealer Data" },
        canActivate: [Kt],
      },
      {
        path: "summary",
        component: Tl,
        data: { title: "Summary" },
        canActivate: [Kt],
      },
      {
        path: "summary",
        component: Tl,
        data: { title: "Summary" },
        canActivate: [Kt],
      },
      {
        path: "trend-chart",
        component: _u,
        data: { title: "Trend-chart" },
        canActivate: [Kt],
      },
    ],
  },
];
var a3 = "@",
  s3 = (() => {
    class n {
      constructor(e, t, r, o, a) {
        (this.doc = e),
          (this.delegate = t),
          (this.zone = r),
          (this.animationType = o),
          (this.moduleImpl = a),
          (this._rendererFactoryPromise = null),
          (this.scheduler = W(Ag, { optional: !0 })),
          (this.loadingSchedulerFn = W(l3, { optional: !0 }));
      }
      ngOnDestroy() {
        this._engine?.flush();
      }
      loadImpl() {
        let e = () =>
            this.moduleImpl ?? import("./chunk-SF5QPUCN.js").then((r) => r),
          t;
        return (
          this.loadingSchedulerFn
            ? (t = this.loadingSchedulerFn(e))
            : (t = e()),
          t
            .catch((r) => {
              throw new pt(5300, !1);
            })
            .then(({ ɵcreateEngine: r, ɵAnimationRendererFactory: o }) => {
              this._engine = r(this.animationType, this.doc);
              let a = new o(this.delegate, this._engine, this.zone);
              return (this.delegate = a), a;
            })
        );
      }
      createRenderer(e, t) {
        let r = this.delegate.createRenderer(e, t);
        if (r.ɵtype === 0) return r;
        typeof r.throwOnSyntheticProps == "boolean" &&
          (r.throwOnSyntheticProps = !1);
        let o = new Mf(r);
        return (
          t?.data?.animation &&
            !this._rendererFactoryPromise &&
            (this._rendererFactoryPromise = this.loadImpl()),
          this._rendererFactoryPromise
            ?.then((a) => {
              let d = a.createRenderer(e, t);
              o.use(d), this.scheduler?.notify(10);
            })
            .catch((a) => {
              o.use(r);
            }),
          o
        );
      }
      begin() {
        this.delegate.begin?.();
      }
      end() {
        this.delegate.end?.();
      }
      whenRenderingDone() {
        return this.delegate.whenRenderingDone?.() ?? Promise.resolve();
      }
      static {
        this.ɵfac = function (t) {
          kr();
        };
      }
      static {
        this.ɵprov = J({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  Mf = class {
    constructor(i) {
      (this.delegate = i), (this.replay = []), (this.ɵtype = 1);
    }
    use(i) {
      if (((this.delegate = i), this.replay !== null)) {
        for (let e of this.replay) e(i);
        this.replay = null;
      }
    }
    get data() {
      return this.delegate.data;
    }
    destroy() {
      (this.replay = null), this.delegate.destroy();
    }
    createElement(i, e) {
      return this.delegate.createElement(i, e);
    }
    createComment(i) {
      return this.delegate.createComment(i);
    }
    createText(i) {
      return this.delegate.createText(i);
    }
    get destroyNode() {
      return this.delegate.destroyNode;
    }
    appendChild(i, e) {
      this.delegate.appendChild(i, e);
    }
    insertBefore(i, e, t, r) {
      this.delegate.insertBefore(i, e, t, r);
    }
    removeChild(i, e, t) {
      this.delegate.removeChild(i, e, t);
    }
    selectRootElement(i, e) {
      return this.delegate.selectRootElement(i, e);
    }
    parentNode(i) {
      return this.delegate.parentNode(i);
    }
    nextSibling(i) {
      return this.delegate.nextSibling(i);
    }
    setAttribute(i, e, t, r) {
      this.delegate.setAttribute(i, e, t, r);
    }
    removeAttribute(i, e, t) {
      this.delegate.removeAttribute(i, e, t);
    }
    addClass(i, e) {
      this.delegate.addClass(i, e);
    }
    removeClass(i, e) {
      this.delegate.removeClass(i, e);
    }
    setStyle(i, e, t, r) {
      this.delegate.setStyle(i, e, t, r);
    }
    removeStyle(i, e, t) {
      this.delegate.removeStyle(i, e, t);
    }
    setProperty(i, e, t) {
      this.shouldReplay(e) && this.replay.push((r) => r.setProperty(i, e, t)),
        this.delegate.setProperty(i, e, t);
    }
    setValue(i, e) {
      this.delegate.setValue(i, e);
    }
    listen(i, e, t) {
      return (
        this.shouldReplay(e) && this.replay.push((r) => r.listen(i, e, t)),
        this.delegate.listen(i, e, t)
      );
    }
    shouldReplay(i) {
      return this.replay !== null && i.startsWith(a3);
    }
  },
  l3 = new Ce("");
function Oy(n = "animations") {
  return (
    Gl("NgAsyncAnimations"),
    zn([
      {
        provide: Wl,
        useFactory: (i, e, t) => new s3(i, e, t, n),
        deps: [Oe, cc, Me],
      },
      {
        provide: $n,
        useValue: n === "noop" ? "NoopAnimations" : "BrowserAnimations",
      },
    ])
  );
}
var ky = {
  providers: [
    Hg({ eventCoalescing: !0 }),
    x_(Ey),
    wa,
    k0(),
    fh(),
    Oy(),
    yg(
      Yv.forRoot({
        timeOut: 3e3,
        positionClass: "toast-top-right",
        preventDuplicates: !0,
        progressBar: !0,
      })
    ),
  ],
};
var bu = class n {
  constructor(i) {
    this.router = i;
  }
  logout() {
    localStorage.removeItem("token"),
      sessionStorage.clear(),
      this.router.navigate(["/login"]);
  }
  static ɵfac = function (e) {
    return new (e || n)(j(vt));
  };
  static ɵcmp = se({
    type: n,
    selectors: [["app-root"]],
    standalone: !0,
    features: [le],
    decls: 1,
    vars: 0,
    template: function (e, t) {
      e & 1 && U(0, "router-outlet");
    },
    dependencies: [mo],
  });
};
E0(bu, ky).catch((n) => console.error(n));
