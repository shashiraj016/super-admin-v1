import "./polyfills.server.mjs";
import {
  a as Kt,
  b as ti,
  c as am,
  d as Bs,
  e as sm,
  f as lm,
  g as cm,
  h as dm,
  k as um,
  o as Tr,
  p as Ei,
  q as Hs,
  s as Ti,
  t as ii,
  u as hm,
  v as ki,
} from "./chunk-AOS3CGX6.mjs";
import {
  $ as ie,
  $a as Uo,
  $b as tm,
  A as nd,
  Ab as hn,
  Bb as ce,
  Bc as om,
  Ca as cn,
  Cb as Fs,
  Cc as md,
  D as od,
  Da as Mn,
  Db as z,
  Ea as Kp,
  Eb as em,
  F as zo,
  Fb as E,
  Fc as ze,
  Gb as Ut,
  H as Ps,
  Hb as kt,
  I as $p,
  Ib as Tn,
  Jb as Bt,
  Kb as _t,
  Lb as bt,
  Mb as Dt,
  Mc as Vs,
  Nb as m,
  O as ya,
  Ob as B,
  Oc as Vt,
  P as fo,
  Pb as oe,
  Pc as $t,
  Q as rd,
  Qb as wa,
  Qc as Je,
  R as jt,
  Ra as Qp,
  Rb as Mi,
  Rc as Ls,
  S as ad,
  Sa as Ca,
  Sb as Rt,
  Sc as Er,
  T as sd,
  Ta as ld,
  Tb as Ft,
  Tc as rm,
  U as wr,
  Ub as Nt,
  Uc as ke,
  V as di,
  Vb as Ot,
  W as ae,
  Wa as g,
  Wb as he,
  X as we,
  Xa as j,
  Xb as ui,
  Xc as On,
  Ya as Dr,
  Yb as ye,
  Z as Ze,
  Za as En,
  Zb as kn,
  _a as Xp,
  _b as ud,
  a as sn,
  aa as ne,
  ab as Zp,
  ac as Da,
  ad as $o,
  ba as Gp,
  bb as yi,
  bc as hd,
  bd as Li,
  c as jo,
  ca as Yp,
  cb as dn,
  cc as Wt,
  cd as Qt,
  db as Jp,
  dd as Xn,
  ea as le,
  eb as pe,
  ed as fd,
  f as Ae,
  fa as De,
  fb as qe,
  fd as Bi,
  g as Yn,
  ga as Pe,
  gb as At,
  gc as im,
  h as Bp,
  ha as As,
  i as Hp,
  ia as qp,
  j as Et,
  jb as F,
  jc as Qn,
  ka as xa,
  kb as cd,
  lb as dd,
  ma as zt,
  mb as Kn,
  mc as nm,
  n as qn,
  na as N,
  nb as de,
  nc as pd,
  o as id,
  oa as V,
  ob as S,
  pa as pt,
  pb as Si,
  qa as go,
  qb as Ce,
  qc as it,
  r as jp,
  ra as gt,
  rb as Ve,
  sa as Rs,
  sb as un,
  t as zp,
  ta as Tt,
  tb as Sr,
  u as ln,
  ub as Mr,
  v as Up,
  va as Se,
  vb as u,
  vc as Ee,
  w as Cr,
  wa as He,
  wb as d,
  wc as Ki,
  x as vi,
  xb as W,
  xc as Wo,
  y as Wp,
  ya as Ne,
  yb as $e,
  yc as pn,
  z as Is,
  zb as Ge,
  zc as Ns,
} from "./chunk-HQJZXFUO.mjs";
import { a as se, b as at, e as qb, g as Kb } from "./chunk-5XUXGTUW.mjs";
var V0 = qb((N0, _c) => {
  "use strict";
  (function (n, i) {
    "use strict";
    typeof _c == "object" && typeof _c.exports == "object"
      ? (_c.exports = n.document
          ? i(n, !0)
          : function (e) {
              if (!e.document)
                throw new Error("jQuery requires a window with a document");
              return i(e);
            })
      : i(n);
  })(typeof window < "u" ? window : N0, function (n, i) {
    "use strict";
    var e = [],
      t = Object.getPrototypeOf,
      o = e.slice,
      r = e.flat
        ? function (l) {
            return e.flat.call(l);
          }
        : function (l) {
            return e.concat.apply([], l);
          },
      a = e.push,
      s = e.indexOf,
      c = {},
      p = c.toString,
      f = c.hasOwnProperty,
      y = f.toString,
      x = y.call(Object),
      C = {},
      M = function (h) {
        return (
          typeof h == "function" &&
          typeof h.nodeType != "number" &&
          typeof h.item != "function"
        );
      },
      k = function (h) {
        return h != null && h === h.window;
      },
      O = n.document,
      P = { type: !0, src: !0, nonce: !0, noModule: !0 };
    function U(l, h, _) {
      _ = _ || O;
      var v,
        w,
        D = _.createElement("script");
      if (((D.text = l), h))
        for (v in P)
          (w = h[v] || (h.getAttribute && h.getAttribute(v))),
            w && D.setAttribute(v, w);
      _.head.appendChild(D).parentNode.removeChild(D);
    }
    function Q(l) {
      return l == null
        ? l + ""
        : typeof l == "object" || typeof l == "function"
        ? c[p.call(l)] || "object"
        : typeof l;
    }
    var te = "3.7.1",
      Z = /HTML$/i,
      b = function (l, h) {
        return new b.fn.init(l, h);
      };
    (b.fn = b.prototype =
      {
        jquery: te,
        constructor: b,
        length: 0,
        toArray: function () {
          return o.call(this);
        },
        get: function (l) {
          return l == null
            ? o.call(this)
            : l < 0
            ? this[l + this.length]
            : this[l];
        },
        pushStack: function (l) {
          var h = b.merge(this.constructor(), l);
          return (h.prevObject = this), h;
        },
        each: function (l) {
          return b.each(this, l);
        },
        map: function (l) {
          return this.pushStack(
            b.map(this, function (h, _) {
              return l.call(h, _, h);
            })
          );
        },
        slice: function () {
          return this.pushStack(o.apply(this, arguments));
        },
        first: function () {
          return this.eq(0);
        },
        last: function () {
          return this.eq(-1);
        },
        even: function () {
          return this.pushStack(
            b.grep(this, function (l, h) {
              return (h + 1) % 2;
            })
          );
        },
        odd: function () {
          return this.pushStack(
            b.grep(this, function (l, h) {
              return h % 2;
            })
          );
        },
        eq: function (l) {
          var h = this.length,
            _ = +l + (l < 0 ? h : 0);
          return this.pushStack(_ >= 0 && _ < h ? [this[_]] : []);
        },
        end: function () {
          return this.prevObject || this.constructor();
        },
        push: a,
        sort: e.sort,
        splice: e.splice,
      }),
      (b.extend = b.fn.extend =
        function () {
          var l,
            h,
            _,
            v,
            w,
            D,
            T = arguments[0] || {},
            R = 1,
            A = arguments.length,
            H = !1;
          for (
            typeof T == "boolean" && ((H = T), (T = arguments[R] || {}), R++),
              typeof T != "object" && !M(T) && (T = {}),
              R === A && ((T = this), R--);
            R < A;
            R++
          )
            if ((l = arguments[R]) != null)
              for (h in l)
                (v = l[h]),
                  !(h === "__proto__" || T === v) &&
                    (H && v && (b.isPlainObject(v) || (w = Array.isArray(v)))
                      ? ((_ = T[h]),
                        w && !Array.isArray(_)
                          ? (D = [])
                          : !w && !b.isPlainObject(_)
                          ? (D = {})
                          : (D = _),
                        (w = !1),
                        (T[h] = b.extend(H, D, v)))
                      : v !== void 0 && (T[h] = v));
          return T;
        }),
      b.extend({
        expando: "jQuery" + (te + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function (l) {
          throw new Error(l);
        },
        noop: function () {},
        isPlainObject: function (l) {
          var h, _;
          return !l || p.call(l) !== "[object Object]"
            ? !1
            : ((h = t(l)),
              h
                ? ((_ = f.call(h, "constructor") && h.constructor),
                  typeof _ == "function" && y.call(_) === x)
                : !0);
        },
        isEmptyObject: function (l) {
          var h;
          for (h in l) return !1;
          return !0;
        },
        globalEval: function (l, h, _) {
          U(l, { nonce: h && h.nonce }, _);
        },
        each: function (l, h) {
          var _,
            v = 0;
          if (ge(l))
            for (_ = l.length; v < _ && h.call(l[v], v, l[v]) !== !1; v++);
          else for (v in l) if (h.call(l[v], v, l[v]) === !1) break;
          return l;
        },
        text: function (l) {
          var h,
            _ = "",
            v = 0,
            w = l.nodeType;
          if (!w) for (; (h = l[v++]); ) _ += b.text(h);
          return w === 1 || w === 11
            ? l.textContent
            : w === 9
            ? l.documentElement.textContent
            : w === 3 || w === 4
            ? l.nodeValue
            : _;
        },
        makeArray: function (l, h) {
          var _ = h || [];
          return (
            l != null &&
              (ge(Object(l))
                ? b.merge(_, typeof l == "string" ? [l] : l)
                : a.call(_, l)),
            _
          );
        },
        inArray: function (l, h, _) {
          return h == null ? -1 : s.call(h, l, _);
        },
        isXMLDoc: function (l) {
          var h = l && l.namespaceURI,
            _ = l && (l.ownerDocument || l).documentElement;
          return !Z.test(h || (_ && _.nodeName) || "HTML");
        },
        merge: function (l, h) {
          for (var _ = +h.length, v = 0, w = l.length; v < _; v++)
            l[w++] = h[v];
          return (l.length = w), l;
        },
        grep: function (l, h, _) {
          for (var v, w = [], D = 0, T = l.length, R = !_; D < T; D++)
            (v = !h(l[D], D)), v !== R && w.push(l[D]);
          return w;
        },
        map: function (l, h, _) {
          var v,
            w,
            D = 0,
            T = [];
          if (ge(l))
            for (v = l.length; D < v; D++)
              (w = h(l[D], D, _)), w != null && T.push(w);
          else for (D in l) (w = h(l[D], D, _)), w != null && T.push(w);
          return r(T);
        },
        guid: 1,
        support: C,
      }),
      typeof Symbol == "function" &&
        (b.fn[Symbol.iterator] = e[Symbol.iterator]),
      b.each(
        "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
          " "
        ),
        function (l, h) {
          c["[object " + h + "]"] = h.toLowerCase();
        }
      );
    function ge(l) {
      var h = !!l && "length" in l && l.length,
        _ = Q(l);
      return M(l) || k(l)
        ? !1
        : _ === "array" ||
            h === 0 ||
            (typeof h == "number" && h > 0 && h - 1 in l);
    }
    function ee(l, h) {
      return l.nodeName && l.nodeName.toLowerCase() === h.toLowerCase();
    }
    var _e = e.pop,
      Re = e.sort,
      Ue = e.splice,
      xe = "[\\x20\\t\\r\\n\\f]",
      Mt = new RegExp(
        "^" + xe + "+|((?:^|[^\\\\])(?:\\\\.)*)" + xe + "+$",
        "g"
      );
    b.contains = function (l, h) {
      var _ = h && h.parentNode;
      return (
        l === _ ||
        !!(
          _ &&
          _.nodeType === 1 &&
          (l.contains
            ? l.contains(_)
            : l.compareDocumentPosition && l.compareDocumentPosition(_) & 16)
        )
      );
    };
    var _i = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function dt(l, h) {
      return h
        ? l === "\0"
          ? "\uFFFD"
          : l.slice(0, -1) +
            "\\" +
            l.charCodeAt(l.length - 1).toString(16) +
            " "
        : "\\" + l;
    }
    b.escapeSelector = function (l) {
      return (l + "").replace(_i, dt);
    };
    var ot = O,
      xt = a;
    (function () {
      var l,
        h,
        _,
        v,
        w,
        D = xt,
        T,
        R,
        A,
        H,
        K,
        J = b.expando,
        Y = 0,
        re = 0,
        Le = Es(),
        rt = Es(),
        We = Es(),
        oi = Es(),
        qt = function (I, L) {
          return I === L && (w = !0), 0;
        },
        xn =
          "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        Cn =
          "(?:\\\\[\\da-fA-F]{1,6}" +
          xe +
          "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
        tt =
          "\\[" +
          xe +
          "*(" +
          Cn +
          ")(?:" +
          xe +
          "*([*^$|!~]?=)" +
          xe +
          `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` +
          Cn +
          "))|)" +
          xe +
          "*\\]",
        Bo =
          ":(" +
          Cn +
          `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` +
          tt +
          ")*)|.*)\\)|)",
        st = new RegExp(xe + "+", "g"),
        Pt = new RegExp("^" + xe + "*," + xe + "*"),
        _a = new RegExp("^" + xe + "*([>+~]|" + xe + ")" + xe + "*"),
        Kc = new RegExp(xe + "|>"),
        wn = new RegExp(Bo),
        ba = new RegExp("^" + Cn + "$"),
        Dn = {
          ID: new RegExp("^#(" + Cn + ")"),
          CLASS: new RegExp("^\\.(" + Cn + ")"),
          TAG: new RegExp("^(" + Cn + "|[*])"),
          ATTR: new RegExp("^" + tt),
          PSEUDO: new RegExp("^" + Bo),
          CHILD: new RegExp(
            "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
              xe +
              "*(even|odd|(([+-]|)(\\d*)n|)" +
              xe +
              "*(?:([+-]|)" +
              xe +
              "*(\\d+)|))" +
              xe +
              "*\\)|)",
            "i"
          ),
          bool: new RegExp("^(?:" + xn + ")$", "i"),
          needsContext: new RegExp(
            "^" +
              xe +
              "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
              xe +
              "*((?:-\\d)?\\d*)" +
              xe +
              "*\\)|)(?=[^-]|$)",
            "i"
          ),
        },
        ho = /^(?:input|select|textarea|button)$/i,
        po = /^h\d$/i,
        Yi = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        Qc = /[+~]/,
        $n = new RegExp(
          "\\\\[\\da-fA-F]{1,6}" + xe + "?|\\\\([^\\r\\n\\f])",
          "g"
        ),
        Gn = function (I, L) {
          var G = "0x" + I.slice(1) - 65536;
          return (
            L ||
            (G < 0
              ? String.fromCharCode(G + 65536)
              : String.fromCharCode((G >> 10) | 55296, (G & 1023) | 56320))
          );
        },
        jb = function () {
          mo();
        },
        zb = ks(
          function (I) {
            return I.disabled === !0 && ee(I, "fieldset");
          },
          { dir: "parentNode", next: "legend" }
        );
      function Ub() {
        try {
          return T.activeElement;
        } catch {}
      }
      try {
        D.apply((e = o.call(ot.childNodes)), ot.childNodes),
          e[ot.childNodes.length].nodeType;
      } catch {
        D = {
          apply: function (L, G) {
            xt.apply(L, o.call(G));
          },
          call: function (L) {
            xt.apply(L, o.call(arguments, 1));
          },
        };
      }
      function ht(I, L, G, q) {
        var X,
          ue,
          be,
          Me,
          ve,
          Qe,
          Fe,
          Be = L && L.ownerDocument,
          Xe = L ? L.nodeType : 9;
        if (
          ((G = G || []),
          typeof I != "string" || !I || (Xe !== 1 && Xe !== 9 && Xe !== 11))
        )
          return G;
        if (!q && (mo(L), (L = L || T), A)) {
          if (Xe !== 11 && (ve = Yi.exec(I)))
            if ((X = ve[1])) {
              if (Xe === 9)
                if ((be = L.getElementById(X))) {
                  if (be.id === X) return D.call(G, be), G;
                } else return G;
              else if (
                Be &&
                (be = Be.getElementById(X)) &&
                ht.contains(L, be) &&
                be.id === X
              )
                return D.call(G, be), G;
            } else {
              if (ve[2]) return D.apply(G, L.getElementsByTagName(I)), G;
              if ((X = ve[3]) && L.getElementsByClassName)
                return D.apply(G, L.getElementsByClassName(X)), G;
            }
          if (!oi[I + " "] && (!H || !H.test(I))) {
            if (((Fe = I), (Be = L), Xe === 1 && (Kc.test(I) || _a.test(I)))) {
              for (
                Be = (Qc.test(I) && Xc(L.parentNode)) || L,
                  (Be != L || !C.scope) &&
                    ((Me = L.getAttribute("id"))
                      ? (Me = b.escapeSelector(Me))
                      : L.setAttribute("id", (Me = J))),
                  Qe = va(I),
                  ue = Qe.length;
                ue--;

              )
                Qe[ue] = (Me ? "#" + Me : ":scope") + " " + Ts(Qe[ue]);
              Fe = Qe.join(",");
            }
            try {
              return D.apply(G, Be.querySelectorAll(Fe)), G;
            } catch {
              oi(I, !0);
            } finally {
              Me === J && L.removeAttribute("id");
            }
          }
        }
        return Lp(I.replace(Mt, "$1"), L, G, q);
      }
      function Es() {
        var I = [];
        function L(G, q) {
          return (
            I.push(G + " ") > h.cacheLength && delete L[I.shift()],
            (L[G + " "] = q)
          );
        }
        return L;
      }
      function an(I) {
        return (I[J] = !0), I;
      }
      function yr(I) {
        var L = T.createElement("fieldset");
        try {
          return !!I(L);
        } catch {
          return !1;
        } finally {
          L.parentNode && L.parentNode.removeChild(L), (L = null);
        }
      }
      function Wb(I) {
        return function (L) {
          return ee(L, "input") && L.type === I;
        };
      }
      function $b(I) {
        return function (L) {
          return (ee(L, "input") || ee(L, "button")) && L.type === I;
        };
      }
      function Np(I) {
        return function (L) {
          return "form" in L
            ? L.parentNode && L.disabled === !1
              ? "label" in L
                ? "label" in L.parentNode
                  ? L.parentNode.disabled === I
                  : L.disabled === I
                : L.isDisabled === I || (L.isDisabled !== !I && zb(L) === I)
              : L.disabled === I
            : "label" in L
            ? L.disabled === I
            : !1;
        };
      }
      function Ho(I) {
        return an(function (L) {
          return (
            (L = +L),
            an(function (G, q) {
              for (var X, ue = I([], G.length, L), be = ue.length; be--; )
                G[(X = ue[be])] && (G[X] = !(q[X] = G[X]));
            })
          );
        });
      }
      function Xc(I) {
        return I && typeof I.getElementsByTagName < "u" && I;
      }
      function mo(I) {
        var L,
          G = I ? I.ownerDocument || I : ot;
        return (
          G == T ||
            G.nodeType !== 9 ||
            !G.documentElement ||
            ((T = G),
            (R = T.documentElement),
            (A = !b.isXMLDoc(T)),
            (K = R.matches || R.webkitMatchesSelector || R.msMatchesSelector),
            R.msMatchesSelector &&
              ot != T &&
              (L = T.defaultView) &&
              L.top !== L &&
              L.addEventListener("unload", jb),
            (C.getById = yr(function (q) {
              return (
                (R.appendChild(q).id = b.expando),
                !T.getElementsByName || !T.getElementsByName(b.expando).length
              );
            })),
            (C.disconnectedMatch = yr(function (q) {
              return K.call(q, "*");
            })),
            (C.scope = yr(function () {
              return T.querySelectorAll(":scope");
            })),
            (C.cssHas = yr(function () {
              try {
                return T.querySelector(":has(*,:jqfake)"), !1;
              } catch {
                return !0;
              }
            })),
            C.getById
              ? ((h.filter.ID = function (q) {
                  var X = q.replace($n, Gn);
                  return function (ue) {
                    return ue.getAttribute("id") === X;
                  };
                }),
                (h.find.ID = function (q, X) {
                  if (typeof X.getElementById < "u" && A) {
                    var ue = X.getElementById(q);
                    return ue ? [ue] : [];
                  }
                }))
              : ((h.filter.ID = function (q) {
                  var X = q.replace($n, Gn);
                  return function (ue) {
                    var be =
                      typeof ue.getAttributeNode < "u" &&
                      ue.getAttributeNode("id");
                    return be && be.value === X;
                  };
                }),
                (h.find.ID = function (q, X) {
                  if (typeof X.getElementById < "u" && A) {
                    var ue,
                      be,
                      Me,
                      ve = X.getElementById(q);
                    if (ve) {
                      if (
                        ((ue = ve.getAttributeNode("id")), ue && ue.value === q)
                      )
                        return [ve];
                      for (
                        Me = X.getElementsByName(q), be = 0;
                        (ve = Me[be++]);

                      )
                        if (
                          ((ue = ve.getAttributeNode("id")),
                          ue && ue.value === q)
                        )
                          return [ve];
                    }
                    return [];
                  }
                })),
            (h.find.TAG = function (q, X) {
              return typeof X.getElementsByTagName < "u"
                ? X.getElementsByTagName(q)
                : X.querySelectorAll(q);
            }),
            (h.find.CLASS = function (q, X) {
              if (typeof X.getElementsByClassName < "u" && A)
                return X.getElementsByClassName(q);
            }),
            (H = []),
            yr(function (q) {
              var X;
              (R.appendChild(q).innerHTML =
                "<a id='" +
                J +
                "' href='' disabled='disabled'></a><select id='" +
                J +
                "-\r\\' disabled='disabled'><option selected=''></option></select>"),
                q.querySelectorAll("[selected]").length ||
                  H.push("\\[" + xe + "*(?:value|" + xn + ")"),
                q.querySelectorAll("[id~=" + J + "-]").length || H.push("~="),
                q.querySelectorAll("a#" + J + "+*").length ||
                  H.push(".#.+[+~]"),
                q.querySelectorAll(":checked").length || H.push(":checked"),
                (X = T.createElement("input")),
                X.setAttribute("type", "hidden"),
                q.appendChild(X).setAttribute("name", "D"),
                (R.appendChild(q).disabled = !0),
                q.querySelectorAll(":disabled").length !== 2 &&
                  H.push(":enabled", ":disabled"),
                (X = T.createElement("input")),
                X.setAttribute("name", ""),
                q.appendChild(X),
                q.querySelectorAll("[name='']").length ||
                  H.push("\\[" + xe + "*name" + xe + "*=" + xe + `*(?:''|"")`);
            }),
            C.cssHas || H.push(":has"),
            (H = H.length && new RegExp(H.join("|"))),
            (qt = function (q, X) {
              if (q === X) return (w = !0), 0;
              var ue = !q.compareDocumentPosition - !X.compareDocumentPosition;
              return (
                ue ||
                ((ue =
                  (q.ownerDocument || q) == (X.ownerDocument || X)
                    ? q.compareDocumentPosition(X)
                    : 1),
                ue & 1 ||
                (!C.sortDetached && X.compareDocumentPosition(q) === ue)
                  ? q === T || (q.ownerDocument == ot && ht.contains(ot, q))
                    ? -1
                    : X === T || (X.ownerDocument == ot && ht.contains(ot, X))
                    ? 1
                    : v
                    ? s.call(v, q) - s.call(v, X)
                    : 0
                  : ue & 4
                  ? -1
                  : 1)
              );
            })),
          T
        );
      }
      (ht.matches = function (I, L) {
        return ht(I, null, null, L);
      }),
        (ht.matchesSelector = function (I, L) {
          if ((mo(I), A && !oi[L + " "] && (!H || !H.test(L))))
            try {
              var G = K.call(I, L);
              if (
                G ||
                C.disconnectedMatch ||
                (I.document && I.document.nodeType !== 11)
              )
                return G;
            } catch {
              oi(L, !0);
            }
          return ht(L, T, null, [I]).length > 0;
        }),
        (ht.contains = function (I, L) {
          return (I.ownerDocument || I) != T && mo(I), b.contains(I, L);
        }),
        (ht.attr = function (I, L) {
          (I.ownerDocument || I) != T && mo(I);
          var G = h.attrHandle[L.toLowerCase()],
            q =
              G && f.call(h.attrHandle, L.toLowerCase()) ? G(I, L, !A) : void 0;
          return q !== void 0 ? q : I.getAttribute(L);
        }),
        (ht.error = function (I) {
          throw new Error("Syntax error, unrecognized expression: " + I);
        }),
        (b.uniqueSort = function (I) {
          var L,
            G = [],
            q = 0,
            X = 0;
          if (
            ((w = !C.sortStable),
            (v = !C.sortStable && o.call(I, 0)),
            Re.call(I, qt),
            w)
          ) {
            for (; (L = I[X++]); ) L === I[X] && (q = G.push(X));
            for (; q--; ) Ue.call(I, G[q], 1);
          }
          return (v = null), I;
        }),
        (b.fn.uniqueSort = function () {
          return this.pushStack(b.uniqueSort(o.apply(this)));
        }),
        (h = b.expr =
          {
            cacheLength: 50,
            createPseudo: an,
            match: Dn,
            attrHandle: {},
            find: {},
            relative: {
              ">": { dir: "parentNode", first: !0 },
              " ": { dir: "parentNode" },
              "+": { dir: "previousSibling", first: !0 },
              "~": { dir: "previousSibling" },
            },
            preFilter: {
              ATTR: function (I) {
                return (
                  (I[1] = I[1].replace($n, Gn)),
                  (I[3] = (I[3] || I[4] || I[5] || "").replace($n, Gn)),
                  I[2] === "~=" && (I[3] = " " + I[3] + " "),
                  I.slice(0, 4)
                );
              },
              CHILD: function (I) {
                return (
                  (I[1] = I[1].toLowerCase()),
                  I[1].slice(0, 3) === "nth"
                    ? (I[3] || ht.error(I[0]),
                      (I[4] = +(I[4]
                        ? I[5] + (I[6] || 1)
                        : 2 * (I[3] === "even" || I[3] === "odd"))),
                      (I[5] = +(I[7] + I[8] || I[3] === "odd")))
                    : I[3] && ht.error(I[0]),
                  I
                );
              },
              PSEUDO: function (I) {
                var L,
                  G = !I[6] && I[2];
                return Dn.CHILD.test(I[0])
                  ? null
                  : (I[3]
                      ? (I[2] = I[4] || I[5] || "")
                      : G &&
                        wn.test(G) &&
                        (L = va(G, !0)) &&
                        (L = G.indexOf(")", G.length - L) - G.length) &&
                        ((I[0] = I[0].slice(0, L)), (I[2] = G.slice(0, L))),
                    I.slice(0, 3));
              },
            },
            filter: {
              TAG: function (I) {
                var L = I.replace($n, Gn).toLowerCase();
                return I === "*"
                  ? function () {
                      return !0;
                    }
                  : function (G) {
                      return ee(G, L);
                    };
              },
              CLASS: function (I) {
                var L = Le[I + " "];
                return (
                  L ||
                  ((L = new RegExp("(^|" + xe + ")" + I + "(" + xe + "|$)")) &&
                    Le(I, function (G) {
                      return L.test(
                        (typeof G.className == "string" && G.className) ||
                          (typeof G.getAttribute < "u" &&
                            G.getAttribute("class")) ||
                          ""
                      );
                    }))
                );
              },
              ATTR: function (I, L, G) {
                return function (q) {
                  var X = ht.attr(q, I);
                  return X == null
                    ? L === "!="
                    : L
                    ? ((X += ""),
                      L === "="
                        ? X === G
                        : L === "!="
                        ? X !== G
                        : L === "^="
                        ? G && X.indexOf(G) === 0
                        : L === "*="
                        ? G && X.indexOf(G) > -1
                        : L === "$="
                        ? G && X.slice(-G.length) === G
                        : L === "~="
                        ? (" " + X.replace(st, " ") + " ").indexOf(G) > -1
                        : L === "|="
                        ? X === G || X.slice(0, G.length + 1) === G + "-"
                        : !1)
                    : !0;
                };
              },
              CHILD: function (I, L, G, q, X) {
                var ue = I.slice(0, 3) !== "nth",
                  be = I.slice(-4) !== "last",
                  Me = L === "of-type";
                return q === 1 && X === 0
                  ? function (ve) {
                      return !!ve.parentNode;
                    }
                  : function (ve, Qe, Fe) {
                      var Be,
                        Xe,
                        Ie,
                        ft,
                        Di,
                        ci = ue !== be ? "nextSibling" : "previousSibling",
                        qi = ve.parentNode,
                        Sn = Me && ve.nodeName.toLowerCase(),
                        xr = !Fe && !Me,
                        bi = !1;
                      if (qi) {
                        if (ue) {
                          for (; ci; ) {
                            for (Ie = ve; (Ie = Ie[ci]); )
                              if (Me ? ee(Ie, Sn) : Ie.nodeType === 1)
                                return !1;
                            Di = ci = I === "only" && !Di && "nextSibling";
                          }
                          return !0;
                        }
                        if (
                          ((Di = [be ? qi.firstChild : qi.lastChild]), be && xr)
                        ) {
                          for (
                            Xe = qi[J] || (qi[J] = {}),
                              Be = Xe[I] || [],
                              ft = Be[0] === Y && Be[1],
                              bi = ft && Be[2],
                              Ie = ft && qi.childNodes[ft];
                            (Ie =
                              (++ft && Ie && Ie[ci]) ||
                              (bi = ft = 0) ||
                              Di.pop());

                          )
                            if (Ie.nodeType === 1 && ++bi && Ie === ve) {
                              Xe[I] = [Y, ft, bi];
                              break;
                            }
                        } else if (
                          (xr &&
                            ((Xe = ve[J] || (ve[J] = {})),
                            (Be = Xe[I] || []),
                            (ft = Be[0] === Y && Be[1]),
                            (bi = ft)),
                          bi === !1)
                        )
                          for (
                            ;
                            (Ie =
                              (++ft && Ie && Ie[ci]) ||
                              (bi = ft = 0) ||
                              Di.pop()) &&
                            !(
                              (Me ? ee(Ie, Sn) : Ie.nodeType === 1) &&
                              ++bi &&
                              (xr &&
                                ((Xe = Ie[J] || (Ie[J] = {})),
                                (Xe[I] = [Y, bi])),
                              Ie === ve)
                            );

                          );
                        return (
                          (bi -= X), bi === q || (bi % q === 0 && bi / q >= 0)
                        );
                      }
                    };
              },
              PSEUDO: function (I, L) {
                var G,
                  q =
                    h.pseudos[I] ||
                    h.setFilters[I.toLowerCase()] ||
                    ht.error("unsupported pseudo: " + I);
                return q[J]
                  ? q(L)
                  : q.length > 1
                  ? ((G = [I, I, "", L]),
                    h.setFilters.hasOwnProperty(I.toLowerCase())
                      ? an(function (X, ue) {
                          for (var be, Me = q(X, L), ve = Me.length; ve--; )
                            (be = s.call(X, Me[ve])),
                              (X[be] = !(ue[be] = Me[ve]));
                        })
                      : function (X) {
                          return q(X, 0, G);
                        })
                  : q;
              },
            },
            pseudos: {
              not: an(function (I) {
                var L = [],
                  G = [],
                  q = td(I.replace(Mt, "$1"));
                return q[J]
                  ? an(function (X, ue, be, Me) {
                      for (
                        var ve, Qe = q(X, null, Me, []), Fe = X.length;
                        Fe--;

                      )
                        (ve = Qe[Fe]) && (X[Fe] = !(ue[Fe] = ve));
                    })
                  : function (X, ue, be) {
                      return (
                        (L[0] = X), q(L, null, be, G), (L[0] = null), !G.pop()
                      );
                    };
              }),
              has: an(function (I) {
                return function (L) {
                  return ht(I, L).length > 0;
                };
              }),
              contains: an(function (I) {
                return (
                  (I = I.replace($n, Gn)),
                  function (L) {
                    return (L.textContent || b.text(L)).indexOf(I) > -1;
                  }
                );
              }),
              lang: an(function (I) {
                return (
                  ba.test(I || "") || ht.error("unsupported lang: " + I),
                  (I = I.replace($n, Gn).toLowerCase()),
                  function (L) {
                    var G;
                    do
                      if (
                        (G = A
                          ? L.lang
                          : L.getAttribute("xml:lang") ||
                            L.getAttribute("lang"))
                      )
                        return (
                          (G = G.toLowerCase()),
                          G === I || G.indexOf(I + "-") === 0
                        );
                    while ((L = L.parentNode) && L.nodeType === 1);
                    return !1;
                  }
                );
              }),
              target: function (I) {
                var L = n.location && n.location.hash;
                return L && L.slice(1) === I.id;
              },
              root: function (I) {
                return I === R;
              },
              focus: function (I) {
                return (
                  I === Ub() &&
                  T.hasFocus() &&
                  !!(I.type || I.href || ~I.tabIndex)
                );
              },
              enabled: Np(!1),
              disabled: Np(!0),
              checked: function (I) {
                return (
                  (ee(I, "input") && !!I.checked) ||
                  (ee(I, "option") && !!I.selected)
                );
              },
              selected: function (I) {
                return (
                  I.parentNode && I.parentNode.selectedIndex, I.selected === !0
                );
              },
              empty: function (I) {
                for (I = I.firstChild; I; I = I.nextSibling)
                  if (I.nodeType < 6) return !1;
                return !0;
              },
              parent: function (I) {
                return !h.pseudos.empty(I);
              },
              header: function (I) {
                return po.test(I.nodeName);
              },
              input: function (I) {
                return ho.test(I.nodeName);
              },
              button: function (I) {
                return (
                  (ee(I, "input") && I.type === "button") || ee(I, "button")
                );
              },
              text: function (I) {
                var L;
                return (
                  ee(I, "input") &&
                  I.type === "text" &&
                  ((L = I.getAttribute("type")) == null ||
                    L.toLowerCase() === "text")
                );
              },
              first: Ho(function () {
                return [0];
              }),
              last: Ho(function (I, L) {
                return [L - 1];
              }),
              eq: Ho(function (I, L, G) {
                return [G < 0 ? G + L : G];
              }),
              even: Ho(function (I, L) {
                for (var G = 0; G < L; G += 2) I.push(G);
                return I;
              }),
              odd: Ho(function (I, L) {
                for (var G = 1; G < L; G += 2) I.push(G);
                return I;
              }),
              lt: Ho(function (I, L, G) {
                var q;
                for (
                  G < 0 ? (q = G + L) : G > L ? (q = L) : (q = G);
                  --q >= 0;

                )
                  I.push(q);
                return I;
              }),
              gt: Ho(function (I, L, G) {
                for (var q = G < 0 ? G + L : G; ++q < L; ) I.push(q);
                return I;
              }),
            },
          }),
        (h.pseudos.nth = h.pseudos.eq);
      for (l in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })
        h.pseudos[l] = Wb(l);
      for (l in { submit: !0, reset: !0 }) h.pseudos[l] = $b(l);
      function Vp() {}
      (Vp.prototype = h.filters = h.pseudos), (h.setFilters = new Vp());
      function va(I, L) {
        var G,
          q,
          X,
          ue,
          be,
          Me,
          ve,
          Qe = rt[I + " "];
        if (Qe) return L ? 0 : Qe.slice(0);
        for (be = I, Me = [], ve = h.preFilter; be; ) {
          (!G || (q = Pt.exec(be))) &&
            (q && (be = be.slice(q[0].length) || be), Me.push((X = []))),
            (G = !1),
            (q = _a.exec(be)) &&
              ((G = q.shift()),
              X.push({ value: G, type: q[0].replace(Mt, " ") }),
              (be = be.slice(G.length)));
          for (ue in h.filter)
            (q = Dn[ue].exec(be)) &&
              (!ve[ue] || (q = ve[ue](q))) &&
              ((G = q.shift()),
              X.push({ value: G, type: ue, matches: q }),
              (be = be.slice(G.length)));
          if (!G) break;
        }
        return L ? be.length : be ? ht.error(I) : rt(I, Me).slice(0);
      }
      function Ts(I) {
        for (var L = 0, G = I.length, q = ""; L < G; L++) q += I[L].value;
        return q;
      }
      function ks(I, L, G) {
        var q = L.dir,
          X = L.next,
          ue = X || q,
          be = G && ue === "parentNode",
          Me = re++;
        return L.first
          ? function (ve, Qe, Fe) {
              for (; (ve = ve[q]); )
                if (ve.nodeType === 1 || be) return I(ve, Qe, Fe);
              return !1;
            }
          : function (ve, Qe, Fe) {
              var Be,
                Xe,
                Ie = [Y, Me];
              if (Fe) {
                for (; (ve = ve[q]); )
                  if ((ve.nodeType === 1 || be) && I(ve, Qe, Fe)) return !0;
              } else
                for (; (ve = ve[q]); )
                  if (ve.nodeType === 1 || be)
                    if (((Xe = ve[J] || (ve[J] = {})), X && ee(ve, X)))
                      ve = ve[q] || ve;
                    else {
                      if ((Be = Xe[ue]) && Be[0] === Y && Be[1] === Me)
                        return (Ie[2] = Be[2]);
                      if (((Xe[ue] = Ie), (Ie[2] = I(ve, Qe, Fe)))) return !0;
                    }
              return !1;
            };
      }
      function Zc(I) {
        return I.length > 1
          ? function (L, G, q) {
              for (var X = I.length; X--; ) if (!I[X](L, G, q)) return !1;
              return !0;
            }
          : I[0];
      }
      function Gb(I, L, G) {
        for (var q = 0, X = L.length; q < X; q++) ht(I, L[q], G);
        return G;
      }
      function Os(I, L, G, q, X) {
        for (
          var ue, be = [], Me = 0, ve = I.length, Qe = L != null;
          Me < ve;
          Me++
        )
          (ue = I[Me]) &&
            (!G || G(ue, q, X)) &&
            (be.push(ue), Qe && L.push(Me));
        return be;
      }
      function Jc(I, L, G, q, X, ue) {
        return (
          q && !q[J] && (q = Jc(q)),
          X && !X[J] && (X = Jc(X, ue)),
          an(function (be, Me, ve, Qe) {
            var Fe,
              Be,
              Xe,
              Ie,
              ft = [],
              Di = [],
              ci = Me.length,
              qi = be || Gb(L || "*", ve.nodeType ? [ve] : ve, []),
              Sn = I && (be || !L) ? Os(qi, ft, I, ve, Qe) : qi;
            if (
              (G
                ? ((Ie = X || (be ? I : ci || q) ? [] : Me), G(Sn, Ie, ve, Qe))
                : (Ie = Sn),
              q)
            )
              for (Fe = Os(Ie, Di), q(Fe, [], ve, Qe), Be = Fe.length; Be--; )
                (Xe = Fe[Be]) && (Ie[Di[Be]] = !(Sn[Di[Be]] = Xe));
            if (be) {
              if (X || I) {
                if (X) {
                  for (Fe = [], Be = Ie.length; Be--; )
                    (Xe = Ie[Be]) && Fe.push((Sn[Be] = Xe));
                  X(null, (Ie = []), Fe, Qe);
                }
                for (Be = Ie.length; Be--; )
                  (Xe = Ie[Be]) &&
                    (Fe = X ? s.call(be, Xe) : ft[Be]) > -1 &&
                    (be[Fe] = !(Me[Fe] = Xe));
              }
            } else (Ie = Os(Ie === Me ? Ie.splice(ci, Ie.length) : Ie)), X ? X(null, Me, Ie, Qe) : D.apply(Me, Ie);
          })
        );
      }
      function ed(I) {
        for (
          var L,
            G,
            q,
            X = I.length,
            ue = h.relative[I[0].type],
            be = ue || h.relative[" "],
            Me = ue ? 1 : 0,
            ve = ks(
              function (Be) {
                return Be === L;
              },
              be,
              !0
            ),
            Qe = ks(
              function (Be) {
                return s.call(L, Be) > -1;
              },
              be,
              !0
            ),
            Fe = [
              function (Be, Xe, Ie) {
                var ft =
                  (!ue && (Ie || Xe != _)) ||
                  ((L = Xe).nodeType ? ve(Be, Xe, Ie) : Qe(Be, Xe, Ie));
                return (L = null), ft;
              },
            ];
          Me < X;
          Me++
        )
          if ((G = h.relative[I[Me].type])) Fe = [ks(Zc(Fe), G)];
          else {
            if (((G = h.filter[I[Me].type].apply(null, I[Me].matches)), G[J])) {
              for (q = ++Me; q < X && !h.relative[I[q].type]; q++);
              return Jc(
                Me > 1 && Zc(Fe),
                Me > 1 &&
                  Ts(
                    I.slice(0, Me - 1).concat({
                      value: I[Me - 2].type === " " ? "*" : "",
                    })
                  ).replace(Mt, "$1"),
                G,
                Me < q && ed(I.slice(Me, q)),
                q < X && ed((I = I.slice(q))),
                q < X && Ts(I)
              );
            }
            Fe.push(G);
          }
        return Zc(Fe);
      }
      function Yb(I, L) {
        var G = L.length > 0,
          q = I.length > 0,
          X = function (ue, be, Me, ve, Qe) {
            var Fe,
              Be,
              Xe,
              Ie = 0,
              ft = "0",
              Di = ue && [],
              ci = [],
              qi = _,
              Sn = ue || (q && h.find.TAG("*", Qe)),
              xr = (Y += qi == null ? 1 : Math.random() || 0.1),
              bi = Sn.length;
            for (
              Qe && (_ = be == T || be || Qe);
              ft !== bi && (Fe = Sn[ft]) != null;
              ft++
            ) {
              if (q && Fe) {
                for (
                  Be = 0, !be && Fe.ownerDocument != T && (mo(Fe), (Me = !A));
                  (Xe = I[Be++]);

                )
                  if (Xe(Fe, be || T, Me)) {
                    D.call(ve, Fe);
                    break;
                  }
                Qe && (Y = xr);
              }
              G && ((Fe = !Xe && Fe) && Ie--, ue && Di.push(Fe));
            }
            if (((Ie += ft), G && ft !== Ie)) {
              for (Be = 0; (Xe = L[Be++]); ) Xe(Di, ci, be, Me);
              if (ue) {
                if (Ie > 0)
                  for (; ft--; ) Di[ft] || ci[ft] || (ci[ft] = _e.call(ve));
                ci = Os(ci);
              }
              D.apply(ve, ci),
                Qe &&
                  !ue &&
                  ci.length > 0 &&
                  Ie + L.length > 1 &&
                  b.uniqueSort(ve);
            }
            return Qe && ((Y = xr), (_ = qi)), Di;
          };
        return G ? an(X) : X;
      }
      function td(I, L) {
        var G,
          q = [],
          X = [],
          ue = We[I + " "];
        if (!ue) {
          for (L || (L = va(I)), G = L.length; G--; )
            (ue = ed(L[G])), ue[J] ? q.push(ue) : X.push(ue);
          (ue = We(I, Yb(X, q))), (ue.selector = I);
        }
        return ue;
      }
      function Lp(I, L, G, q) {
        var X,
          ue,
          be,
          Me,
          ve,
          Qe = typeof I == "function" && I,
          Fe = !q && va((I = Qe.selector || I));
        if (((G = G || []), Fe.length === 1)) {
          if (
            ((ue = Fe[0] = Fe[0].slice(0)),
            ue.length > 2 &&
              (be = ue[0]).type === "ID" &&
              L.nodeType === 9 &&
              A &&
              h.relative[ue[1].type])
          ) {
            if (
              ((L = (h.find.ID(be.matches[0].replace($n, Gn), L) || [])[0]), L)
            )
              Qe && (L = L.parentNode);
            else return G;
            I = I.slice(ue.shift().value.length);
          }
          for (
            X = Dn.needsContext.test(I) ? 0 : ue.length;
            X-- && ((be = ue[X]), !h.relative[(Me = be.type)]);

          )
            if (
              (ve = h.find[Me]) &&
              (q = ve(
                be.matches[0].replace($n, Gn),
                (Qc.test(ue[0].type) && Xc(L.parentNode)) || L
              ))
            ) {
              if ((ue.splice(X, 1), (I = q.length && Ts(ue)), !I))
                return D.apply(G, q), G;
              break;
            }
        }
        return (
          (Qe || td(I, Fe))(
            q,
            L,
            !A,
            G,
            !L || (Qc.test(I) && Xc(L.parentNode)) || L
          ),
          G
        );
      }
      (C.sortStable = J.split("").sort(qt).join("") === J),
        mo(),
        (C.sortDetached = yr(function (I) {
          return I.compareDocumentPosition(T.createElement("fieldset")) & 1;
        })),
        (b.find = ht),
        (b.expr[":"] = b.expr.pseudos),
        (b.unique = b.uniqueSort),
        (ht.compile = td),
        (ht.select = Lp),
        (ht.setDocument = mo),
        (ht.tokenize = va),
        (ht.escape = b.escapeSelector),
        (ht.getText = b.text),
        (ht.isXML = b.isXMLDoc),
        (ht.selectors = b.expr),
        (ht.support = b.support),
        (ht.uniqueSort = b.uniqueSort);
    })();
    var ei = function (l, h, _) {
        for (var v = [], w = _ !== void 0; (l = l[h]) && l.nodeType !== 9; )
          if (l.nodeType === 1) {
            if (w && b(l).is(_)) break;
            v.push(l);
          }
        return v;
      },
      Yt = function (l, h) {
        for (var _ = []; l; l = l.nextSibling)
          l.nodeType === 1 && l !== h && _.push(l);
        return _;
      },
      Hn = b.expr.match.needsContext,
      Ro = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function bn(l, h, _) {
      return M(h)
        ? b.grep(l, function (v, w) {
            return !!h.call(v, w, v) !== _;
          })
        : h.nodeType
        ? b.grep(l, function (v) {
            return (v === h) !== _;
          })
        : typeof h != "string"
        ? b.grep(l, function (v) {
            return s.call(h, v) > -1 !== _;
          })
        : b.filter(h, l, _);
    }
    (b.filter = function (l, h, _) {
      var v = h[0];
      return (
        _ && (l = ":not(" + l + ")"),
        h.length === 1 && v.nodeType === 1
          ? b.find.matchesSelector(v, l)
            ? [v]
            : []
          : b.find.matches(
              l,
              b.grep(h, function (w) {
                return w.nodeType === 1;
              })
            )
      );
    }),
      b.fn.extend({
        find: function (l) {
          var h,
            _,
            v = this.length,
            w = this;
          if (typeof l != "string")
            return this.pushStack(
              b(l).filter(function () {
                for (h = 0; h < v; h++) if (b.contains(w[h], this)) return !0;
              })
            );
          for (_ = this.pushStack([]), h = 0; h < v; h++) b.find(l, w[h], _);
          return v > 1 ? b.uniqueSort(_) : _;
        },
        filter: function (l) {
          return this.pushStack(bn(this, l || [], !1));
        },
        not: function (l) {
          return this.pushStack(bn(this, l || [], !0));
        },
        is: function (l) {
          return !!bn(
            this,
            typeof l == "string" && Hn.test(l) ? b(l) : l || [],
            !1
          ).length;
        },
      });
    var uo,
      jn = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
      Fo = (b.fn.init = function (l, h, _) {
        var v, w;
        if (!l) return this;
        if (((_ = _ || uo), typeof l == "string"))
          if (
            (l[0] === "<" && l[l.length - 1] === ">" && l.length >= 3
              ? (v = [null, l, null])
              : (v = jn.exec(l)),
            v && (v[1] || !h))
          )
            if (v[1]) {
              if (
                ((h = h instanceof b ? h[0] : h),
                b.merge(
                  this,
                  b.parseHTML(
                    v[1],
                    h && h.nodeType ? h.ownerDocument || h : O,
                    !0
                  )
                ),
                Ro.test(v[1]) && b.isPlainObject(h))
              )
                for (v in h) M(this[v]) ? this[v](h[v]) : this.attr(v, h[v]);
              return this;
            } else
              return (
                (w = O.getElementById(v[2])),
                w && ((this[0] = w), (this.length = 1)),
                this
              );
          else
            return !h || h.jquery
              ? (h || _).find(l)
              : this.constructor(h).find(l);
        else {
          if (l.nodeType) return (this[0] = l), (this.length = 1), this;
          if (M(l)) return _.ready !== void 0 ? _.ready(l) : l(b);
        }
        return b.makeArray(l, this);
      });
    (Fo.prototype = b.fn), (uo = b(O));
    var zn = /^(?:parents|prev(?:Until|All))/,
      Q0 = { children: !0, contents: !0, next: !0, prev: !0 };
    b.fn.extend({
      has: function (l) {
        var h = b(l, this),
          _ = h.length;
        return this.filter(function () {
          for (var v = 0; v < _; v++) if (b.contains(this, h[v])) return !0;
        });
      },
      closest: function (l, h) {
        var _,
          v = 0,
          w = this.length,
          D = [],
          T = typeof l != "string" && b(l);
        if (!Hn.test(l)) {
          for (; v < w; v++)
            for (_ = this[v]; _ && _ !== h; _ = _.parentNode)
              if (
                _.nodeType < 11 &&
                (T
                  ? T.index(_) > -1
                  : _.nodeType === 1 && b.find.matchesSelector(_, l))
              ) {
                D.push(_);
                break;
              }
        }
        return this.pushStack(D.length > 1 ? b.uniqueSort(D) : D);
      },
      index: function (l) {
        return l
          ? typeof l == "string"
            ? s.call(b(l), this[0])
            : s.call(this, l.jquery ? l[0] : l)
          : this[0] && this[0].parentNode
          ? this.first().prevAll().length
          : -1;
      },
      add: function (l, h) {
        return this.pushStack(b.uniqueSort(b.merge(this.get(), b(l, h))));
      },
      addBack: function (l) {
        return this.add(
          l == null ? this.prevObject : this.prevObject.filter(l)
        );
      },
    });
    function np(l, h) {
      for (; (l = l[h]) && l.nodeType !== 1; );
      return l;
    }
    b.each(
      {
        parent: function (l) {
          var h = l.parentNode;
          return h && h.nodeType !== 11 ? h : null;
        },
        parents: function (l) {
          return ei(l, "parentNode");
        },
        parentsUntil: function (l, h, _) {
          return ei(l, "parentNode", _);
        },
        next: function (l) {
          return np(l, "nextSibling");
        },
        prev: function (l) {
          return np(l, "previousSibling");
        },
        nextAll: function (l) {
          return ei(l, "nextSibling");
        },
        prevAll: function (l) {
          return ei(l, "previousSibling");
        },
        nextUntil: function (l, h, _) {
          return ei(l, "nextSibling", _);
        },
        prevUntil: function (l, h, _) {
          return ei(l, "previousSibling", _);
        },
        siblings: function (l) {
          return Yt((l.parentNode || {}).firstChild, l);
        },
        children: function (l) {
          return Yt(l.firstChild);
        },
        contents: function (l) {
          return l.contentDocument != null && t(l.contentDocument)
            ? l.contentDocument
            : (ee(l, "template") && (l = l.content || l),
              b.merge([], l.childNodes));
        },
      },
      function (l, h) {
        b.fn[l] = function (_, v) {
          var w = b.map(this, h, _);
          return (
            l.slice(-5) !== "Until" && (v = _),
            v && typeof v == "string" && (w = b.filter(v, w)),
            this.length > 1 &&
              (Q0[l] || b.uniqueSort(w), zn.test(l) && w.reverse()),
            this.pushStack(w)
          );
        };
      }
    );
    var vn = /[^\x20\t\r\n\f]+/g;
    function X0(l) {
      var h = {};
      return (
        b.each(l.match(vn) || [], function (_, v) {
          h[v] = !0;
        }),
        h
      );
    }
    b.Callbacks = function (l) {
      l = typeof l == "string" ? X0(l) : b.extend({}, l);
      var h,
        _,
        v,
        w,
        D = [],
        T = [],
        R = -1,
        A = function () {
          for (w = w || l.once, v = h = !0; T.length; R = -1)
            for (_ = T.shift(); ++R < D.length; )
              D[R].apply(_[0], _[1]) === !1 &&
                l.stopOnFalse &&
                ((R = D.length), (_ = !1));
          l.memory || (_ = !1), (h = !1), w && (_ ? (D = []) : (D = ""));
        },
        H = {
          add: function () {
            return (
              D &&
                (_ && !h && ((R = D.length - 1), T.push(_)),
                (function K(J) {
                  b.each(J, function (Y, re) {
                    M(re)
                      ? (!l.unique || !H.has(re)) && D.push(re)
                      : re && re.length && Q(re) !== "string" && K(re);
                  });
                })(arguments),
                _ && !h && A()),
              this
            );
          },
          remove: function () {
            return (
              b.each(arguments, function (K, J) {
                for (var Y; (Y = b.inArray(J, D, Y)) > -1; )
                  D.splice(Y, 1), Y <= R && R--;
              }),
              this
            );
          },
          has: function (K) {
            return K ? b.inArray(K, D) > -1 : D.length > 0;
          },
          empty: function () {
            return D && (D = []), this;
          },
          disable: function () {
            return (w = T = []), (D = _ = ""), this;
          },
          disabled: function () {
            return !D;
          },
          lock: function () {
            return (w = T = []), !_ && !h && (D = _ = ""), this;
          },
          locked: function () {
            return !!w;
          },
          fireWith: function (K, J) {
            return (
              w ||
                ((J = J || []),
                (J = [K, J.slice ? J.slice() : J]),
                T.push(J),
                h || A()),
              this
            );
          },
          fire: function () {
            return H.fireWith(this, arguments), this;
          },
          fired: function () {
            return !!v;
          },
        };
      return H;
    };
    function pr(l) {
      return l;
    }
    function ys(l) {
      throw l;
    }
    function op(l, h, _, v) {
      var w;
      try {
        l && M((w = l.promise))
          ? w.call(l).done(h).fail(_)
          : l && M((w = l.then))
          ? w.call(l, h, _)
          : h.apply(void 0, [l].slice(v));
      } catch (D) {
        _.apply(void 0, [D]);
      }
    }
    b.extend({
      Deferred: function (l) {
        var h = [
            [
              "notify",
              "progress",
              b.Callbacks("memory"),
              b.Callbacks("memory"),
              2,
            ],
            [
              "resolve",
              "done",
              b.Callbacks("once memory"),
              b.Callbacks("once memory"),
              0,
              "resolved",
            ],
            [
              "reject",
              "fail",
              b.Callbacks("once memory"),
              b.Callbacks("once memory"),
              1,
              "rejected",
            ],
          ],
          _ = "pending",
          v = {
            state: function () {
              return _;
            },
            always: function () {
              return w.done(arguments).fail(arguments), this;
            },
            catch: function (D) {
              return v.then(null, D);
            },
            pipe: function () {
              var D = arguments;
              return b
                .Deferred(function (T) {
                  b.each(h, function (R, A) {
                    var H = M(D[A[4]]) && D[A[4]];
                    w[A[1]](function () {
                      var K = H && H.apply(this, arguments);
                      K && M(K.promise)
                        ? K.promise()
                            .progress(T.notify)
                            .done(T.resolve)
                            .fail(T.reject)
                        : T[A[0] + "With"](this, H ? [K] : arguments);
                    });
                  }),
                    (D = null);
                })
                .promise();
            },
            then: function (D, T, R) {
              var A = 0;
              function H(K, J, Y, re) {
                return function () {
                  var Le = this,
                    rt = arguments,
                    We = function () {
                      var qt, xn;
                      if (!(K < A)) {
                        if (((qt = Y.apply(Le, rt)), qt === J.promise()))
                          throw new TypeError("Thenable self-resolution");
                        (xn =
                          qt &&
                          (typeof qt == "object" || typeof qt == "function") &&
                          qt.then),
                          M(xn)
                            ? re
                              ? xn.call(qt, H(A, J, pr, re), H(A, J, ys, re))
                              : (A++,
                                xn.call(
                                  qt,
                                  H(A, J, pr, re),
                                  H(A, J, ys, re),
                                  H(A, J, pr, J.notifyWith)
                                ))
                            : (Y !== pr && ((Le = void 0), (rt = [qt])),
                              (re || J.resolveWith)(Le, rt));
                      }
                    },
                    oi = re
                      ? We
                      : function () {
                          try {
                            We();
                          } catch (qt) {
                            b.Deferred.exceptionHook &&
                              b.Deferred.exceptionHook(qt, oi.error),
                              K + 1 >= A &&
                                (Y !== ys && ((Le = void 0), (rt = [qt])),
                                J.rejectWith(Le, rt));
                          }
                        };
                  K
                    ? oi()
                    : (b.Deferred.getErrorHook
                        ? (oi.error = b.Deferred.getErrorHook())
                        : b.Deferred.getStackHook &&
                          (oi.error = b.Deferred.getStackHook()),
                      n.setTimeout(oi));
                };
              }
              return b
                .Deferred(function (K) {
                  h[0][3].add(H(0, K, M(R) ? R : pr, K.notifyWith)),
                    h[1][3].add(H(0, K, M(D) ? D : pr)),
                    h[2][3].add(H(0, K, M(T) ? T : ys));
                })
                .promise();
            },
            promise: function (D) {
              return D != null ? b.extend(D, v) : v;
            },
          },
          w = {};
        return (
          b.each(h, function (D, T) {
            var R = T[2],
              A = T[5];
            (v[T[1]] = R.add),
              A &&
                R.add(
                  function () {
                    _ = A;
                  },
                  h[3 - D][2].disable,
                  h[3 - D][3].disable,
                  h[0][2].lock,
                  h[0][3].lock
                ),
              R.add(T[3].fire),
              (w[T[0]] = function () {
                return (
                  w[T[0] + "With"](this === w ? void 0 : this, arguments), this
                );
              }),
              (w[T[0] + "With"] = R.fireWith);
          }),
          v.promise(w),
          l && l.call(w, w),
          w
        );
      },
      when: function (l) {
        var h = arguments.length,
          _ = h,
          v = Array(_),
          w = o.call(arguments),
          D = b.Deferred(),
          T = function (R) {
            return function (A) {
              (v[R] = this),
                (w[R] = arguments.length > 1 ? o.call(arguments) : A),
                --h || D.resolveWith(v, w);
            };
          };
        if (
          h <= 1 &&
          (op(l, D.done(T(_)).resolve, D.reject, !h),
          D.state() === "pending" || M(w[_] && w[_].then))
        )
          return D.then();
        for (; _--; ) op(w[_], T(_), D.reject);
        return D.promise();
      },
    });
    var Z0 = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    (b.Deferred.exceptionHook = function (l, h) {
      n.console &&
        n.console.warn &&
        l &&
        Z0.test(l.name) &&
        n.console.warn("jQuery.Deferred exception: " + l.message, l.stack, h);
    }),
      (b.readyException = function (l) {
        n.setTimeout(function () {
          throw l;
        });
      });
    var Rc = b.Deferred();
    (b.fn.ready = function (l) {
      return (
        Rc.then(l).catch(function (h) {
          b.readyException(h);
        }),
        this
      );
    }),
      b.extend({
        isReady: !1,
        readyWait: 1,
        ready: function (l) {
          (l === !0 ? --b.readyWait : b.isReady) ||
            ((b.isReady = !0),
            !(l !== !0 && --b.readyWait > 0) && Rc.resolveWith(O, [b]));
        },
      }),
      (b.ready.then = Rc.then);
    function xs() {
      O.removeEventListener("DOMContentLoaded", xs),
        n.removeEventListener("load", xs),
        b.ready();
    }
    O.readyState === "complete" ||
    (O.readyState !== "loading" && !O.documentElement.doScroll)
      ? n.setTimeout(b.ready)
      : (O.addEventListener("DOMContentLoaded", xs),
        n.addEventListener("load", xs));
    var Un = function (l, h, _, v, w, D, T) {
        var R = 0,
          A = l.length,
          H = _ == null;
        if (Q(_) === "object") {
          w = !0;
          for (R in _) Un(l, h, R, _[R], !0, D, T);
        } else if (
          v !== void 0 &&
          ((w = !0),
          M(v) || (T = !0),
          H &&
            (T
              ? (h.call(l, v), (h = null))
              : ((H = h),
                (h = function (K, J, Y) {
                  return H.call(b(K), Y);
                }))),
          h)
        )
          for (; R < A; R++) h(l[R], _, T ? v : v.call(l[R], R, h(l[R], _)));
        return w ? l : H ? h.call(l) : A ? h(l[0], _) : D;
      },
      J0 = /^-ms-/,
      eb = /-([a-z])/g;
    function tb(l, h) {
      return h.toUpperCase();
    }
    function yn(l) {
      return l.replace(J0, "ms-").replace(eb, tb);
    }
    var ca = function (l) {
      return l.nodeType === 1 || l.nodeType === 9 || !+l.nodeType;
    };
    function da() {
      this.expando = b.expando + da.uid++;
    }
    (da.uid = 1),
      (da.prototype = {
        cache: function (l) {
          var h = l[this.expando];
          return (
            h ||
              ((h = {}),
              ca(l) &&
                (l.nodeType
                  ? (l[this.expando] = h)
                  : Object.defineProperty(l, this.expando, {
                      value: h,
                      configurable: !0,
                    }))),
            h
          );
        },
        set: function (l, h, _) {
          var v,
            w = this.cache(l);
          if (typeof h == "string") w[yn(h)] = _;
          else for (v in h) w[yn(v)] = h[v];
          return w;
        },
        get: function (l, h) {
          return h === void 0
            ? this.cache(l)
            : l[this.expando] && l[this.expando][yn(h)];
        },
        access: function (l, h, _) {
          return h === void 0 || (h && typeof h == "string" && _ === void 0)
            ? this.get(l, h)
            : (this.set(l, h, _), _ !== void 0 ? _ : h);
        },
        remove: function (l, h) {
          var _,
            v = l[this.expando];
          if (v !== void 0) {
            if (h !== void 0)
              for (
                Array.isArray(h)
                  ? (h = h.map(yn))
                  : ((h = yn(h)), (h = (h in v) ? [h] : h.match(vn) || [])),
                  _ = h.length;
                _--;

              )
                delete v[h[_]];
            (h === void 0 || b.isEmptyObject(v)) &&
              (l.nodeType
                ? (l[this.expando] = void 0)
                : delete l[this.expando]);
          }
        },
        hasData: function (l) {
          var h = l[this.expando];
          return h !== void 0 && !b.isEmptyObject(h);
        },
      });
    var Te = new da(),
      xi = new da(),
      ib = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      nb = /[A-Z]/g;
    function ob(l) {
      return l === "true"
        ? !0
        : l === "false"
        ? !1
        : l === "null"
        ? null
        : l === +l + ""
        ? +l
        : ib.test(l)
        ? JSON.parse(l)
        : l;
    }
    function rp(l, h, _) {
      var v;
      if (_ === void 0 && l.nodeType === 1)
        if (
          ((v = "data-" + h.replace(nb, "-$&").toLowerCase()),
          (_ = l.getAttribute(v)),
          typeof _ == "string")
        ) {
          try {
            _ = ob(_);
          } catch {}
          xi.set(l, h, _);
        } else _ = void 0;
      return _;
    }
    b.extend({
      hasData: function (l) {
        return xi.hasData(l) || Te.hasData(l);
      },
      data: function (l, h, _) {
        return xi.access(l, h, _);
      },
      removeData: function (l, h) {
        xi.remove(l, h);
      },
      _data: function (l, h, _) {
        return Te.access(l, h, _);
      },
      _removeData: function (l, h) {
        Te.remove(l, h);
      },
    }),
      b.fn.extend({
        data: function (l, h) {
          var _,
            v,
            w,
            D = this[0],
            T = D && D.attributes;
          if (l === void 0) {
            if (
              this.length &&
              ((w = xi.get(D)), D.nodeType === 1 && !Te.get(D, "hasDataAttrs"))
            ) {
              for (_ = T.length; _--; )
                T[_] &&
                  ((v = T[_].name),
                  v.indexOf("data-") === 0 &&
                    ((v = yn(v.slice(5))), rp(D, v, w[v])));
              Te.set(D, "hasDataAttrs", !0);
            }
            return w;
          }
          return typeof l == "object"
            ? this.each(function () {
                xi.set(this, l);
              })
            : Un(
                this,
                function (R) {
                  var A;
                  if (D && R === void 0)
                    return (
                      (A = xi.get(D, l)),
                      A !== void 0 || ((A = rp(D, l)), A !== void 0)
                        ? A
                        : void 0
                    );
                  this.each(function () {
                    xi.set(this, l, R);
                  });
                },
                null,
                h,
                arguments.length > 1,
                null,
                !0
              );
        },
        removeData: function (l) {
          return this.each(function () {
            xi.remove(this, l);
          });
        },
      }),
      b.extend({
        queue: function (l, h, _) {
          var v;
          if (l)
            return (
              (h = (h || "fx") + "queue"),
              (v = Te.get(l, h)),
              _ &&
                (!v || Array.isArray(_)
                  ? (v = Te.access(l, h, b.makeArray(_)))
                  : v.push(_)),
              v || []
            );
        },
        dequeue: function (l, h) {
          h = h || "fx";
          var _ = b.queue(l, h),
            v = _.length,
            w = _.shift(),
            D = b._queueHooks(l, h),
            T = function () {
              b.dequeue(l, h);
            };
          w === "inprogress" && ((w = _.shift()), v--),
            w &&
              (h === "fx" && _.unshift("inprogress"),
              delete D.stop,
              w.call(l, T, D)),
            !v && D && D.empty.fire();
        },
        _queueHooks: function (l, h) {
          var _ = h + "queueHooks";
          return (
            Te.get(l, _) ||
            Te.access(l, _, {
              empty: b.Callbacks("once memory").add(function () {
                Te.remove(l, [h + "queue", _]);
              }),
            })
          );
        },
      }),
      b.fn.extend({
        queue: function (l, h) {
          var _ = 2;
          return (
            typeof l != "string" && ((h = l), (l = "fx"), _--),
            arguments.length < _
              ? b.queue(this[0], l)
              : h === void 0
              ? this
              : this.each(function () {
                  var v = b.queue(this, l, h);
                  b._queueHooks(this, l),
                    l === "fx" && v[0] !== "inprogress" && b.dequeue(this, l);
                })
          );
        },
        dequeue: function (l) {
          return this.each(function () {
            b.dequeue(this, l);
          });
        },
        clearQueue: function (l) {
          return this.queue(l || "fx", []);
        },
        promise: function (l, h) {
          var _,
            v = 1,
            w = b.Deferred(),
            D = this,
            T = this.length,
            R = function () {
              --v || w.resolveWith(D, [D]);
            };
          for (
            typeof l != "string" && ((h = l), (l = void 0)), l = l || "fx";
            T--;

          )
            (_ = Te.get(D[T], l + "queueHooks")),
              _ && _.empty && (v++, _.empty.add(R));
          return R(), w.promise(h);
        },
      });
    var ap = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
      ua = new RegExp("^(?:([+-])=|)(" + ap + ")([a-z%]*)$", "i"),
      Wn = ["Top", "Right", "Bottom", "Left"],
      No = O.documentElement,
      mr = function (l) {
        return b.contains(l.ownerDocument, l);
      },
      rb = { composed: !0 };
    No.getRootNode &&
      (mr = function (l) {
        return (
          b.contains(l.ownerDocument, l) ||
          l.getRootNode(rb) === l.ownerDocument
        );
      });
    var Cs = function (l, h) {
      return (
        (l = h || l),
        l.style.display === "none" ||
          (l.style.display === "" && mr(l) && b.css(l, "display") === "none")
      );
    };
    function sp(l, h, _, v) {
      var w,
        D,
        T = 20,
        R = v
          ? function () {
              return v.cur();
            }
          : function () {
              return b.css(l, h, "");
            },
        A = R(),
        H = (_ && _[3]) || (b.cssNumber[h] ? "" : "px"),
        K =
          l.nodeType &&
          (b.cssNumber[h] || (H !== "px" && +A)) &&
          ua.exec(b.css(l, h));
      if (K && K[3] !== H) {
        for (A = A / 2, H = H || K[3], K = +A || 1; T--; )
          b.style(l, h, K + H),
            (1 - D) * (1 - (D = R() / A || 0.5)) <= 0 && (T = 0),
            (K = K / D);
        (K = K * 2), b.style(l, h, K + H), (_ = _ || []);
      }
      return (
        _ &&
          ((K = +K || +A || 0),
          (w = _[1] ? K + (_[1] + 1) * _[2] : +_[2]),
          v && ((v.unit = H), (v.start = K), (v.end = w))),
        w
      );
    }
    var lp = {};
    function ab(l) {
      var h,
        _ = l.ownerDocument,
        v = l.nodeName,
        w = lp[v];
      return (
        w ||
        ((h = _.body.appendChild(_.createElement(v))),
        (w = b.css(h, "display")),
        h.parentNode.removeChild(h),
        w === "none" && (w = "block"),
        (lp[v] = w),
        w)
      );
    }
    function fr(l, h) {
      for (var _, v, w = [], D = 0, T = l.length; D < T; D++)
        (v = l[D]),
          v.style &&
            ((_ = v.style.display),
            h
              ? (_ === "none" &&
                  ((w[D] = Te.get(v, "display") || null),
                  w[D] || (v.style.display = "")),
                v.style.display === "" && Cs(v) && (w[D] = ab(v)))
              : _ !== "none" && ((w[D] = "none"), Te.set(v, "display", _)));
      for (D = 0; D < T; D++) w[D] != null && (l[D].style.display = w[D]);
      return l;
    }
    b.fn.extend({
      show: function () {
        return fr(this, !0);
      },
      hide: function () {
        return fr(this);
      },
      toggle: function (l) {
        return typeof l == "boolean"
          ? l
            ? this.show()
            : this.hide()
          : this.each(function () {
              Cs(this) ? b(this).show() : b(this).hide();
            });
      },
    });
    var ha = /^(?:checkbox|radio)$/i,
      cp = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
      dp = /^$|^module$|\/(?:java|ecma)script/i;
    (function () {
      var l = O.createDocumentFragment(),
        h = l.appendChild(O.createElement("div")),
        _ = O.createElement("input");
      _.setAttribute("type", "radio"),
        _.setAttribute("checked", "checked"),
        _.setAttribute("name", "t"),
        h.appendChild(_),
        (C.checkClone = h.cloneNode(!0).cloneNode(!0).lastChild.checked),
        (h.innerHTML = "<textarea>x</textarea>"),
        (C.noCloneChecked = !!h.cloneNode(!0).lastChild.defaultValue),
        (h.innerHTML = "<option></option>"),
        (C.option = !!h.lastChild);
    })();
    var Gi = {
      thead: [1, "<table>", "</table>"],
      col: [2, "<table><colgroup>", "</colgroup></table>"],
      tr: [2, "<table><tbody>", "</tbody></table>"],
      td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
      _default: [0, "", ""],
    };
    (Gi.tbody = Gi.tfoot = Gi.colgroup = Gi.caption = Gi.thead),
      (Gi.th = Gi.td),
      C.option ||
        (Gi.optgroup = Gi.option =
          [1, "<select multiple='multiple'>", "</select>"]);
    function Ci(l, h) {
      var _;
      return (
        typeof l.getElementsByTagName < "u"
          ? (_ = l.getElementsByTagName(h || "*"))
          : typeof l.querySelectorAll < "u"
          ? (_ = l.querySelectorAll(h || "*"))
          : (_ = []),
        h === void 0 || (h && ee(l, h)) ? b.merge([l], _) : _
      );
    }
    function Fc(l, h) {
      for (var _ = 0, v = l.length; _ < v; _++)
        Te.set(l[_], "globalEval", !h || Te.get(h[_], "globalEval"));
    }
    var sb = /<|&#?\w+;/;
    function up(l, h, _, v, w) {
      for (
        var D,
          T,
          R,
          A,
          H,
          K,
          J = h.createDocumentFragment(),
          Y = [],
          re = 0,
          Le = l.length;
        re < Le;
        re++
      )
        if (((D = l[re]), D || D === 0))
          if (Q(D) === "object") b.merge(Y, D.nodeType ? [D] : D);
          else if (!sb.test(D)) Y.push(h.createTextNode(D));
          else {
            for (
              T = T || J.appendChild(h.createElement("div")),
                R = (cp.exec(D) || ["", ""])[1].toLowerCase(),
                A = Gi[R] || Gi._default,
                T.innerHTML = A[1] + b.htmlPrefilter(D) + A[2],
                K = A[0];
              K--;

            )
              T = T.lastChild;
            b.merge(Y, T.childNodes), (T = J.firstChild), (T.textContent = "");
          }
      for (J.textContent = "", re = 0; (D = Y[re++]); ) {
        if (v && b.inArray(D, v) > -1) {
          w && w.push(D);
          continue;
        }
        if (((H = mr(D)), (T = Ci(J.appendChild(D), "script")), H && Fc(T), _))
          for (K = 0; (D = T[K++]); ) dp.test(D.type || "") && _.push(D);
      }
      return J;
    }
    var hp = /^([^.]*)(?:\.(.+)|)/;
    function gr() {
      return !0;
    }
    function _r() {
      return !1;
    }
    function Nc(l, h, _, v, w, D) {
      var T, R;
      if (typeof h == "object") {
        typeof _ != "string" && ((v = v || _), (_ = void 0));
        for (R in h) Nc(l, R, _, v, h[R], D);
        return l;
      }
      if (
        (v == null && w == null
          ? ((w = _), (v = _ = void 0))
          : w == null &&
            (typeof _ == "string"
              ? ((w = v), (v = void 0))
              : ((w = v), (v = _), (_ = void 0))),
        w === !1)
      )
        w = _r;
      else if (!w) return l;
      return (
        D === 1 &&
          ((T = w),
          (w = function (A) {
            return b().off(A), T.apply(this, arguments);
          }),
          (w.guid = T.guid || (T.guid = b.guid++))),
        l.each(function () {
          b.event.add(this, h, w, v, _);
        })
      );
    }
    b.event = {
      global: {},
      add: function (l, h, _, v, w) {
        var D,
          T,
          R,
          A,
          H,
          K,
          J,
          Y,
          re,
          Le,
          rt,
          We = Te.get(l);
        if (ca(l))
          for (
            _.handler && ((D = _), (_ = D.handler), (w = D.selector)),
              w && b.find.matchesSelector(No, w),
              _.guid || (_.guid = b.guid++),
              (A = We.events) || (A = We.events = Object.create(null)),
              (T = We.handle) ||
                (T = We.handle =
                  function (oi) {
                    return typeof b < "u" && b.event.triggered !== oi.type
                      ? b.event.dispatch.apply(l, arguments)
                      : void 0;
                  }),
              h = (h || "").match(vn) || [""],
              H = h.length;
            H--;

          )
            (R = hp.exec(h[H]) || []),
              (re = rt = R[1]),
              (Le = (R[2] || "").split(".").sort()),
              re &&
                ((J = b.event.special[re] || {}),
                (re = (w ? J.delegateType : J.bindType) || re),
                (J = b.event.special[re] || {}),
                (K = b.extend(
                  {
                    type: re,
                    origType: rt,
                    data: v,
                    handler: _,
                    guid: _.guid,
                    selector: w,
                    needsContext: w && b.expr.match.needsContext.test(w),
                    namespace: Le.join("."),
                  },
                  D
                )),
                (Y = A[re]) ||
                  ((Y = A[re] = []),
                  (Y.delegateCount = 0),
                  (!J.setup || J.setup.call(l, v, Le, T) === !1) &&
                    l.addEventListener &&
                    l.addEventListener(re, T)),
                J.add &&
                  (J.add.call(l, K),
                  K.handler.guid || (K.handler.guid = _.guid)),
                w ? Y.splice(Y.delegateCount++, 0, K) : Y.push(K),
                (b.event.global[re] = !0));
      },
      remove: function (l, h, _, v, w) {
        var D,
          T,
          R,
          A,
          H,
          K,
          J,
          Y,
          re,
          Le,
          rt,
          We = Te.hasData(l) && Te.get(l);
        if (!(!We || !(A = We.events))) {
          for (h = (h || "").match(vn) || [""], H = h.length; H--; ) {
            if (
              ((R = hp.exec(h[H]) || []),
              (re = rt = R[1]),
              (Le = (R[2] || "").split(".").sort()),
              !re)
            ) {
              for (re in A) b.event.remove(l, re + h[H], _, v, !0);
              continue;
            }
            for (
              J = b.event.special[re] || {},
                re = (v ? J.delegateType : J.bindType) || re,
                Y = A[re] || [],
                R =
                  R[2] &&
                  new RegExp("(^|\\.)" + Le.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                T = D = Y.length;
              D--;

            )
              (K = Y[D]),
                (w || rt === K.origType) &&
                  (!_ || _.guid === K.guid) &&
                  (!R || R.test(K.namespace)) &&
                  (!v || v === K.selector || (v === "**" && K.selector)) &&
                  (Y.splice(D, 1),
                  K.selector && Y.delegateCount--,
                  J.remove && J.remove.call(l, K));
            T &&
              !Y.length &&
              ((!J.teardown || J.teardown.call(l, Le, We.handle) === !1) &&
                b.removeEvent(l, re, We.handle),
              delete A[re]);
          }
          b.isEmptyObject(A) && Te.remove(l, "handle events");
        }
      },
      dispatch: function (l) {
        var h,
          _,
          v,
          w,
          D,
          T,
          R = new Array(arguments.length),
          A = b.event.fix(l),
          H = (Te.get(this, "events") || Object.create(null))[A.type] || [],
          K = b.event.special[A.type] || {};
        for (R[0] = A, h = 1; h < arguments.length; h++) R[h] = arguments[h];
        if (
          ((A.delegateTarget = this),
          !(K.preDispatch && K.preDispatch.call(this, A) === !1))
        ) {
          for (
            T = b.event.handlers.call(this, A, H), h = 0;
            (w = T[h++]) && !A.isPropagationStopped();

          )
            for (
              A.currentTarget = w.elem, _ = 0;
              (D = w.handlers[_++]) && !A.isImmediatePropagationStopped();

            )
              (!A.rnamespace ||
                D.namespace === !1 ||
                A.rnamespace.test(D.namespace)) &&
                ((A.handleObj = D),
                (A.data = D.data),
                (v = (
                  (b.event.special[D.origType] || {}).handle || D.handler
                ).apply(w.elem, R)),
                v !== void 0 &&
                  (A.result = v) === !1 &&
                  (A.preventDefault(), A.stopPropagation()));
          return K.postDispatch && K.postDispatch.call(this, A), A.result;
        }
      },
      handlers: function (l, h) {
        var _,
          v,
          w,
          D,
          T,
          R = [],
          A = h.delegateCount,
          H = l.target;
        if (A && H.nodeType && !(l.type === "click" && l.button >= 1)) {
          for (; H !== this; H = H.parentNode || this)
            if (
              H.nodeType === 1 &&
              !(l.type === "click" && H.disabled === !0)
            ) {
              for (D = [], T = {}, _ = 0; _ < A; _++)
                (v = h[_]),
                  (w = v.selector + " "),
                  T[w] === void 0 &&
                    (T[w] = v.needsContext
                      ? b(w, this).index(H) > -1
                      : b.find(w, this, null, [H]).length),
                  T[w] && D.push(v);
              D.length && R.push({ elem: H, handlers: D });
            }
        }
        return (
          (H = this),
          A < h.length && R.push({ elem: H, handlers: h.slice(A) }),
          R
        );
      },
      addProp: function (l, h) {
        Object.defineProperty(b.Event.prototype, l, {
          enumerable: !0,
          configurable: !0,
          get: M(h)
            ? function () {
                if (this.originalEvent) return h(this.originalEvent);
              }
            : function () {
                if (this.originalEvent) return this.originalEvent[l];
              },
          set: function (_) {
            Object.defineProperty(this, l, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: _,
            });
          },
        });
      },
      fix: function (l) {
        return l[b.expando] ? l : new b.Event(l);
      },
      special: {
        load: { noBubble: !0 },
        click: {
          setup: function (l) {
            var h = this || l;
            return (
              ha.test(h.type) &&
                h.click &&
                ee(h, "input") &&
                ws(h, "click", !0),
              !1
            );
          },
          trigger: function (l) {
            var h = this || l;
            return (
              ha.test(h.type) && h.click && ee(h, "input") && ws(h, "click"), !0
            );
          },
          _default: function (l) {
            var h = l.target;
            return (
              (ha.test(h.type) &&
                h.click &&
                ee(h, "input") &&
                Te.get(h, "click")) ||
              ee(h, "a")
            );
          },
        },
        beforeunload: {
          postDispatch: function (l) {
            l.result !== void 0 &&
              l.originalEvent &&
              (l.originalEvent.returnValue = l.result);
          },
        },
      },
    };
    function ws(l, h, _) {
      if (!_) {
        Te.get(l, h) === void 0 && b.event.add(l, h, gr);
        return;
      }
      Te.set(l, h, !1),
        b.event.add(l, h, {
          namespace: !1,
          handler: function (v) {
            var w,
              D = Te.get(this, h);
            if (v.isTrigger & 1 && this[h]) {
              if (D)
                (b.event.special[h] || {}).delegateType && v.stopPropagation();
              else if (
                ((D = o.call(arguments)),
                Te.set(this, h, D),
                this[h](),
                (w = Te.get(this, h)),
                Te.set(this, h, !1),
                D !== w)
              )
                return v.stopImmediatePropagation(), v.preventDefault(), w;
            } else
              D &&
                (Te.set(this, h, b.event.trigger(D[0], D.slice(1), this)),
                v.stopPropagation(),
                (v.isImmediatePropagationStopped = gr));
          },
        });
    }
    (b.removeEvent = function (l, h, _) {
      l.removeEventListener && l.removeEventListener(h, _);
    }),
      (b.Event = function (l, h) {
        if (!(this instanceof b.Event)) return new b.Event(l, h);
        l && l.type
          ? ((this.originalEvent = l),
            (this.type = l.type),
            (this.isDefaultPrevented =
              l.defaultPrevented ||
              (l.defaultPrevented === void 0 && l.returnValue === !1)
                ? gr
                : _r),
            (this.target =
              l.target && l.target.nodeType === 3
                ? l.target.parentNode
                : l.target),
            (this.currentTarget = l.currentTarget),
            (this.relatedTarget = l.relatedTarget))
          : (this.type = l),
          h && b.extend(this, h),
          (this.timeStamp = (l && l.timeStamp) || Date.now()),
          (this[b.expando] = !0);
      }),
      (b.Event.prototype = {
        constructor: b.Event,
        isDefaultPrevented: _r,
        isPropagationStopped: _r,
        isImmediatePropagationStopped: _r,
        isSimulated: !1,
        preventDefault: function () {
          var l = this.originalEvent;
          (this.isDefaultPrevented = gr),
            l && !this.isSimulated && l.preventDefault();
        },
        stopPropagation: function () {
          var l = this.originalEvent;
          (this.isPropagationStopped = gr),
            l && !this.isSimulated && l.stopPropagation();
        },
        stopImmediatePropagation: function () {
          var l = this.originalEvent;
          (this.isImmediatePropagationStopped = gr),
            l && !this.isSimulated && l.stopImmediatePropagation(),
            this.stopPropagation();
        },
      }),
      b.each(
        {
          altKey: !0,
          bubbles: !0,
          cancelable: !0,
          changedTouches: !0,
          ctrlKey: !0,
          detail: !0,
          eventPhase: !0,
          metaKey: !0,
          pageX: !0,
          pageY: !0,
          shiftKey: !0,
          view: !0,
          char: !0,
          code: !0,
          charCode: !0,
          key: !0,
          keyCode: !0,
          button: !0,
          buttons: !0,
          clientX: !0,
          clientY: !0,
          offsetX: !0,
          offsetY: !0,
          pointerId: !0,
          pointerType: !0,
          screenX: !0,
          screenY: !0,
          targetTouches: !0,
          toElement: !0,
          touches: !0,
          which: !0,
        },
        b.event.addProp
      ),
      b.each({ focus: "focusin", blur: "focusout" }, function (l, h) {
        function _(v) {
          if (O.documentMode) {
            var w = Te.get(this, "handle"),
              D = b.event.fix(v);
            (D.type = v.type === "focusin" ? "focus" : "blur"),
              (D.isSimulated = !0),
              w(v),
              D.target === D.currentTarget && w(D);
          } else b.event.simulate(h, v.target, b.event.fix(v));
        }
        (b.event.special[l] = {
          setup: function () {
            var v;
            if ((ws(this, l, !0), O.documentMode))
              (v = Te.get(this, h)),
                v || this.addEventListener(h, _),
                Te.set(this, h, (v || 0) + 1);
            else return !1;
          },
          trigger: function () {
            return ws(this, l), !0;
          },
          teardown: function () {
            var v;
            if (O.documentMode)
              (v = Te.get(this, h) - 1),
                v
                  ? Te.set(this, h, v)
                  : (this.removeEventListener(h, _), Te.remove(this, h));
            else return !1;
          },
          _default: function (v) {
            return Te.get(v.target, l);
          },
          delegateType: h,
        }),
          (b.event.special[h] = {
            setup: function () {
              var v = this.ownerDocument || this.document || this,
                w = O.documentMode ? this : v,
                D = Te.get(w, h);
              D ||
                (O.documentMode
                  ? this.addEventListener(h, _)
                  : v.addEventListener(l, _, !0)),
                Te.set(w, h, (D || 0) + 1);
            },
            teardown: function () {
              var v = this.ownerDocument || this.document || this,
                w = O.documentMode ? this : v,
                D = Te.get(w, h) - 1;
              D
                ? Te.set(w, h, D)
                : (O.documentMode
                    ? this.removeEventListener(h, _)
                    : v.removeEventListener(l, _, !0),
                  Te.remove(w, h));
            },
          });
      }),
      b.each(
        {
          mouseenter: "mouseover",
          mouseleave: "mouseout",
          pointerenter: "pointerover",
          pointerleave: "pointerout",
        },
        function (l, h) {
          b.event.special[l] = {
            delegateType: h,
            bindType: h,
            handle: function (_) {
              var v,
                w = this,
                D = _.relatedTarget,
                T = _.handleObj;
              return (
                (!D || (D !== w && !b.contains(w, D))) &&
                  ((_.type = T.origType),
                  (v = T.handler.apply(this, arguments)),
                  (_.type = h)),
                v
              );
            },
          };
        }
      ),
      b.fn.extend({
        on: function (l, h, _, v) {
          return Nc(this, l, h, _, v);
        },
        one: function (l, h, _, v) {
          return Nc(this, l, h, _, v, 1);
        },
        off: function (l, h, _) {
          var v, w;
          if (l && l.preventDefault && l.handleObj)
            return (
              (v = l.handleObj),
              b(l.delegateTarget).off(
                v.namespace ? v.origType + "." + v.namespace : v.origType,
                v.selector,
                v.handler
              ),
              this
            );
          if (typeof l == "object") {
            for (w in l) this.off(w, h, l[w]);
            return this;
          }
          return (
            (h === !1 || typeof h == "function") && ((_ = h), (h = void 0)),
            _ === !1 && (_ = _r),
            this.each(function () {
              b.event.remove(this, l, _, h);
            })
          );
        },
      });
    var lb = /<script|<style|<link/i,
      cb = /checked\s*(?:[^=]|=\s*.checked.)/i,
      db = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function pp(l, h) {
      return (
        (ee(l, "table") &&
          ee(h.nodeType !== 11 ? h : h.firstChild, "tr") &&
          b(l).children("tbody")[0]) ||
        l
      );
    }
    function ub(l) {
      return (l.type = (l.getAttribute("type") !== null) + "/" + l.type), l;
    }
    function hb(l) {
      return (
        (l.type || "").slice(0, 5) === "true/"
          ? (l.type = l.type.slice(5))
          : l.removeAttribute("type"),
        l
      );
    }
    function mp(l, h) {
      var _, v, w, D, T, R, A;
      if (h.nodeType === 1) {
        if (Te.hasData(l) && ((D = Te.get(l)), (A = D.events), A)) {
          Te.remove(h, "handle events");
          for (w in A)
            for (_ = 0, v = A[w].length; _ < v; _++) b.event.add(h, w, A[w][_]);
        }
        xi.hasData(l) &&
          ((T = xi.access(l)), (R = b.extend({}, T)), xi.set(h, R));
      }
    }
    function pb(l, h) {
      var _ = h.nodeName.toLowerCase();
      _ === "input" && ha.test(l.type)
        ? (h.checked = l.checked)
        : (_ === "input" || _ === "textarea") &&
          (h.defaultValue = l.defaultValue);
    }
    function br(l, h, _, v) {
      h = r(h);
      var w,
        D,
        T,
        R,
        A,
        H,
        K = 0,
        J = l.length,
        Y = J - 1,
        re = h[0],
        Le = M(re);
      if (
        Le ||
        (J > 1 && typeof re == "string" && !C.checkClone && cb.test(re))
      )
        return l.each(function (rt) {
          var We = l.eq(rt);
          Le && (h[0] = re.call(this, rt, We.html())), br(We, h, _, v);
        });
      if (
        J &&
        ((w = up(h, l[0].ownerDocument, !1, l, v)),
        (D = w.firstChild),
        w.childNodes.length === 1 && (w = D),
        D || v)
      ) {
        for (T = b.map(Ci(w, "script"), ub), R = T.length; K < J; K++)
          (A = w),
            K !== Y &&
              ((A = b.clone(A, !0, !0)), R && b.merge(T, Ci(A, "script"))),
            _.call(l[K], A, K);
        if (R)
          for (
            H = T[T.length - 1].ownerDocument, b.map(T, hb), K = 0;
            K < R;
            K++
          )
            (A = T[K]),
              dp.test(A.type || "") &&
                !Te.access(A, "globalEval") &&
                b.contains(H, A) &&
                (A.src && (A.type || "").toLowerCase() !== "module"
                  ? b._evalUrl &&
                    !A.noModule &&
                    b._evalUrl(
                      A.src,
                      { nonce: A.nonce || A.getAttribute("nonce") },
                      H
                    )
                  : U(A.textContent.replace(db, ""), A, H));
      }
      return l;
    }
    function fp(l, h, _) {
      for (var v, w = h ? b.filter(h, l) : l, D = 0; (v = w[D]) != null; D++)
        !_ && v.nodeType === 1 && b.cleanData(Ci(v)),
          v.parentNode &&
            (_ && mr(v) && Fc(Ci(v, "script")), v.parentNode.removeChild(v));
      return l;
    }
    b.extend({
      htmlPrefilter: function (l) {
        return l;
      },
      clone: function (l, h, _) {
        var v,
          w,
          D,
          T,
          R = l.cloneNode(!0),
          A = mr(l);
        if (
          !C.noCloneChecked &&
          (l.nodeType === 1 || l.nodeType === 11) &&
          !b.isXMLDoc(l)
        )
          for (T = Ci(R), D = Ci(l), v = 0, w = D.length; v < w; v++)
            pb(D[v], T[v]);
        if (h)
          if (_)
            for (
              D = D || Ci(l), T = T || Ci(R), v = 0, w = D.length;
              v < w;
              v++
            )
              mp(D[v], T[v]);
          else mp(l, R);
        return (
          (T = Ci(R, "script")), T.length > 0 && Fc(T, !A && Ci(l, "script")), R
        );
      },
      cleanData: function (l) {
        for (
          var h, _, v, w = b.event.special, D = 0;
          (_ = l[D]) !== void 0;
          D++
        )
          if (ca(_)) {
            if ((h = _[Te.expando])) {
              if (h.events)
                for (v in h.events)
                  w[v] ? b.event.remove(_, v) : b.removeEvent(_, v, h.handle);
              _[Te.expando] = void 0;
            }
            _[xi.expando] && (_[xi.expando] = void 0);
          }
      },
    }),
      b.fn.extend({
        detach: function (l) {
          return fp(this, l, !0);
        },
        remove: function (l) {
          return fp(this, l);
        },
        text: function (l) {
          return Un(
            this,
            function (h) {
              return h === void 0
                ? b.text(this)
                : this.empty().each(function () {
                    (this.nodeType === 1 ||
                      this.nodeType === 11 ||
                      this.nodeType === 9) &&
                      (this.textContent = h);
                  });
            },
            null,
            l,
            arguments.length
          );
        },
        append: function () {
          return br(this, arguments, function (l) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var h = pp(this, l);
              h.appendChild(l);
            }
          });
        },
        prepend: function () {
          return br(this, arguments, function (l) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var h = pp(this, l);
              h.insertBefore(l, h.firstChild);
            }
          });
        },
        before: function () {
          return br(this, arguments, function (l) {
            this.parentNode && this.parentNode.insertBefore(l, this);
          });
        },
        after: function () {
          return br(this, arguments, function (l) {
            this.parentNode &&
              this.parentNode.insertBefore(l, this.nextSibling);
          });
        },
        empty: function () {
          for (var l, h = 0; (l = this[h]) != null; h++)
            l.nodeType === 1 && (b.cleanData(Ci(l, !1)), (l.textContent = ""));
          return this;
        },
        clone: function (l, h) {
          return (
            (l = l ?? !1),
            (h = h ?? l),
            this.map(function () {
              return b.clone(this, l, h);
            })
          );
        },
        html: function (l) {
          return Un(
            this,
            function (h) {
              var _ = this[0] || {},
                v = 0,
                w = this.length;
              if (h === void 0 && _.nodeType === 1) return _.innerHTML;
              if (
                typeof h == "string" &&
                !lb.test(h) &&
                !Gi[(cp.exec(h) || ["", ""])[1].toLowerCase()]
              ) {
                h = b.htmlPrefilter(h);
                try {
                  for (; v < w; v++)
                    (_ = this[v] || {}),
                      _.nodeType === 1 &&
                        (b.cleanData(Ci(_, !1)), (_.innerHTML = h));
                  _ = 0;
                } catch {}
              }
              _ && this.empty().append(h);
            },
            null,
            l,
            arguments.length
          );
        },
        replaceWith: function () {
          var l = [];
          return br(
            this,
            arguments,
            function (h) {
              var _ = this.parentNode;
              b.inArray(this, l) < 0 &&
                (b.cleanData(Ci(this)), _ && _.replaceChild(h, this));
            },
            l
          );
        },
      }),
      b.each(
        {
          appendTo: "append",
          prependTo: "prepend",
          insertBefore: "before",
          insertAfter: "after",
          replaceAll: "replaceWith",
        },
        function (l, h) {
          b.fn[l] = function (_) {
            for (var v, w = [], D = b(_), T = D.length - 1, R = 0; R <= T; R++)
              (v = R === T ? this : this.clone(!0)),
                b(D[R])[h](v),
                a.apply(w, v.get());
            return this.pushStack(w);
          };
        }
      );
    var Vc = new RegExp("^(" + ap + ")(?!px)[a-z%]+$", "i"),
      Lc = /^--/,
      Ds = function (l) {
        var h = l.ownerDocument.defaultView;
        return (!h || !h.opener) && (h = n), h.getComputedStyle(l);
      },
      gp = function (l, h, _) {
        var v,
          w,
          D = {};
        for (w in h) (D[w] = l.style[w]), (l.style[w] = h[w]);
        v = _.call(l);
        for (w in h) l.style[w] = D[w];
        return v;
      },
      mb = new RegExp(Wn.join("|"), "i");
    (function () {
      function l() {
        if (H) {
          (A.style.cssText =
            "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
            (H.style.cssText =
              "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
            No.appendChild(A).appendChild(H);
          var K = n.getComputedStyle(H);
          (_ = K.top !== "1%"),
            (R = h(K.marginLeft) === 12),
            (H.style.right = "60%"),
            (D = h(K.right) === 36),
            (v = h(K.width) === 36),
            (H.style.position = "absolute"),
            (w = h(H.offsetWidth / 3) === 12),
            No.removeChild(A),
            (H = null);
        }
      }
      function h(K) {
        return Math.round(parseFloat(K));
      }
      var _,
        v,
        w,
        D,
        T,
        R,
        A = O.createElement("div"),
        H = O.createElement("div");
      H.style &&
        ((H.style.backgroundClip = "content-box"),
        (H.cloneNode(!0).style.backgroundClip = ""),
        (C.clearCloneStyle = H.style.backgroundClip === "content-box"),
        b.extend(C, {
          boxSizingReliable: function () {
            return l(), v;
          },
          pixelBoxStyles: function () {
            return l(), D;
          },
          pixelPosition: function () {
            return l(), _;
          },
          reliableMarginLeft: function () {
            return l(), R;
          },
          scrollboxSize: function () {
            return l(), w;
          },
          reliableTrDimensions: function () {
            var K, J, Y, re;
            return (
              T == null &&
                ((K = O.createElement("table")),
                (J = O.createElement("tr")),
                (Y = O.createElement("div")),
                (K.style.cssText =
                  "position:absolute;left:-11111px;border-collapse:separate"),
                (J.style.cssText = "box-sizing:content-box;border:1px solid"),
                (J.style.height = "1px"),
                (Y.style.height = "9px"),
                (Y.style.display = "block"),
                No.appendChild(K).appendChild(J).appendChild(Y),
                (re = n.getComputedStyle(J)),
                (T =
                  parseInt(re.height, 10) +
                    parseInt(re.borderTopWidth, 10) +
                    parseInt(re.borderBottomWidth, 10) ===
                  J.offsetHeight),
                No.removeChild(K)),
              T
            );
          },
        }));
    })();
    function pa(l, h, _) {
      var v,
        w,
        D,
        T,
        R = Lc.test(h),
        A = l.style;
      return (
        (_ = _ || Ds(l)),
        _ &&
          ((T = _.getPropertyValue(h) || _[h]),
          R && T && (T = T.replace(Mt, "$1") || void 0),
          T === "" && !mr(l) && (T = b.style(l, h)),
          !C.pixelBoxStyles() &&
            Vc.test(T) &&
            mb.test(h) &&
            ((v = A.width),
            (w = A.minWidth),
            (D = A.maxWidth),
            (A.minWidth = A.maxWidth = A.width = T),
            (T = _.width),
            (A.width = v),
            (A.minWidth = w),
            (A.maxWidth = D))),
        T !== void 0 ? T + "" : T
      );
    }
    function _p(l, h) {
      return {
        get: function () {
          if (l()) {
            delete this.get;
            return;
          }
          return (this.get = h).apply(this, arguments);
        },
      };
    }
    var bp = ["Webkit", "Moz", "ms"],
      vp = O.createElement("div").style,
      yp = {};
    function fb(l) {
      for (var h = l[0].toUpperCase() + l.slice(1), _ = bp.length; _--; )
        if (((l = bp[_] + h), l in vp)) return l;
    }
    function Bc(l) {
      var h = b.cssProps[l] || yp[l];
      return h || (l in vp ? l : (yp[l] = fb(l) || l));
    }
    var gb = /^(none|table(?!-c[ea]).+)/,
      _b = { position: "absolute", visibility: "hidden", display: "block" },
      xp = { letterSpacing: "0", fontWeight: "400" };
    function Cp(l, h, _) {
      var v = ua.exec(h);
      return v ? Math.max(0, v[2] - (_ || 0)) + (v[3] || "px") : h;
    }
    function Hc(l, h, _, v, w, D) {
      var T = h === "width" ? 1 : 0,
        R = 0,
        A = 0,
        H = 0;
      if (_ === (v ? "border" : "content")) return 0;
      for (; T < 4; T += 2)
        _ === "margin" && (H += b.css(l, _ + Wn[T], !0, w)),
          v
            ? (_ === "content" && (A -= b.css(l, "padding" + Wn[T], !0, w)),
              _ !== "margin" &&
                (A -= b.css(l, "border" + Wn[T] + "Width", !0, w)))
            : ((A += b.css(l, "padding" + Wn[T], !0, w)),
              _ !== "padding"
                ? (A += b.css(l, "border" + Wn[T] + "Width", !0, w))
                : (R += b.css(l, "border" + Wn[T] + "Width", !0, w)));
      return (
        !v &&
          D >= 0 &&
          (A +=
            Math.max(
              0,
              Math.ceil(
                l["offset" + h[0].toUpperCase() + h.slice(1)] - D - A - R - 0.5
              )
            ) || 0),
        A + H
      );
    }
    function wp(l, h, _) {
      var v = Ds(l),
        w = !C.boxSizingReliable() || _,
        D = w && b.css(l, "boxSizing", !1, v) === "border-box",
        T = D,
        R = pa(l, h, v),
        A = "offset" + h[0].toUpperCase() + h.slice(1);
      if (Vc.test(R)) {
        if (!_) return R;
        R = "auto";
      }
      return (
        ((!C.boxSizingReliable() && D) ||
          (!C.reliableTrDimensions() && ee(l, "tr")) ||
          R === "auto" ||
          (!parseFloat(R) && b.css(l, "display", !1, v) === "inline")) &&
          l.getClientRects().length &&
          ((D = b.css(l, "boxSizing", !1, v) === "border-box"),
          (T = A in l),
          T && (R = l[A])),
        (R = parseFloat(R) || 0),
        R + Hc(l, h, _ || (D ? "border" : "content"), T, v, R) + "px"
      );
    }
    b.extend({
      cssHooks: {
        opacity: {
          get: function (l, h) {
            if (h) {
              var _ = pa(l, "opacity");
              return _ === "" ? "1" : _;
            }
          },
        },
      },
      cssNumber: {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageSlice: !0,
        columnCount: !0,
        flexGrow: !0,
        flexShrink: !0,
        fontWeight: !0,
        gridArea: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnStart: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowStart: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        scale: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
      },
      cssProps: {},
      style: function (l, h, _, v) {
        if (!(!l || l.nodeType === 3 || l.nodeType === 8 || !l.style)) {
          var w,
            D,
            T,
            R = yn(h),
            A = Lc.test(h),
            H = l.style;
          if (
            (A || (h = Bc(R)),
            (T = b.cssHooks[h] || b.cssHooks[R]),
            _ !== void 0)
          ) {
            if (
              ((D = typeof _),
              D === "string" &&
                (w = ua.exec(_)) &&
                w[1] &&
                ((_ = sp(l, h, w)), (D = "number")),
              _ == null || _ !== _)
            )
              return;
            D === "number" &&
              !A &&
              (_ += (w && w[3]) || (b.cssNumber[R] ? "" : "px")),
              !C.clearCloneStyle &&
                _ === "" &&
                h.indexOf("background") === 0 &&
                (H[h] = "inherit"),
              (!T || !("set" in T) || (_ = T.set(l, _, v)) !== void 0) &&
                (A ? H.setProperty(h, _) : (H[h] = _));
          } else
            return T && "get" in T && (w = T.get(l, !1, v)) !== void 0
              ? w
              : H[h];
        }
      },
      css: function (l, h, _, v) {
        var w,
          D,
          T,
          R = yn(h),
          A = Lc.test(h);
        return (
          A || (h = Bc(R)),
          (T = b.cssHooks[h] || b.cssHooks[R]),
          T && "get" in T && (w = T.get(l, !0, _)),
          w === void 0 && (w = pa(l, h, v)),
          w === "normal" && h in xp && (w = xp[h]),
          _ === "" || _
            ? ((D = parseFloat(w)), _ === !0 || isFinite(D) ? D || 0 : w)
            : w
        );
      },
    }),
      b.each(["height", "width"], function (l, h) {
        b.cssHooks[h] = {
          get: function (_, v, w) {
            if (v)
              return gb.test(b.css(_, "display")) &&
                (!_.getClientRects().length || !_.getBoundingClientRect().width)
                ? gp(_, _b, function () {
                    return wp(_, h, w);
                  })
                : wp(_, h, w);
          },
          set: function (_, v, w) {
            var D,
              T = Ds(_),
              R = !C.scrollboxSize() && T.position === "absolute",
              A = R || w,
              H = A && b.css(_, "boxSizing", !1, T) === "border-box",
              K = w ? Hc(_, h, w, H, T) : 0;
            return (
              H &&
                R &&
                (K -= Math.ceil(
                  _["offset" + h[0].toUpperCase() + h.slice(1)] -
                    parseFloat(T[h]) -
                    Hc(_, h, "border", !1, T) -
                    0.5
                )),
              K &&
                (D = ua.exec(v)) &&
                (D[3] || "px") !== "px" &&
                ((_.style[h] = v), (v = b.css(_, h))),
              Cp(_, v, K)
            );
          },
        };
      }),
      (b.cssHooks.marginLeft = _p(C.reliableMarginLeft, function (l, h) {
        if (h)
          return (
            (parseFloat(pa(l, "marginLeft")) ||
              l.getBoundingClientRect().left -
                gp(l, { marginLeft: 0 }, function () {
                  return l.getBoundingClientRect().left;
                })) + "px"
          );
      })),
      b.each({ margin: "", padding: "", border: "Width" }, function (l, h) {
        (b.cssHooks[l + h] = {
          expand: function (_) {
            for (
              var v = 0, w = {}, D = typeof _ == "string" ? _.split(" ") : [_];
              v < 4;
              v++
            )
              w[l + Wn[v] + h] = D[v] || D[v - 2] || D[0];
            return w;
          },
        }),
          l !== "margin" && (b.cssHooks[l + h].set = Cp);
      }),
      b.fn.extend({
        css: function (l, h) {
          return Un(
            this,
            function (_, v, w) {
              var D,
                T,
                R = {},
                A = 0;
              if (Array.isArray(v)) {
                for (D = Ds(_), T = v.length; A < T; A++)
                  R[v[A]] = b.css(_, v[A], !1, D);
                return R;
              }
              return w !== void 0 ? b.style(_, v, w) : b.css(_, v);
            },
            l,
            h,
            arguments.length > 1
          );
        },
      });
    function wi(l, h, _, v, w) {
      return new wi.prototype.init(l, h, _, v, w);
    }
    (b.Tween = wi),
      (wi.prototype = {
        constructor: wi,
        init: function (l, h, _, v, w, D) {
          (this.elem = l),
            (this.prop = _),
            (this.easing = w || b.easing._default),
            (this.options = h),
            (this.start = this.now = this.cur()),
            (this.end = v),
            (this.unit = D || (b.cssNumber[_] ? "" : "px"));
        },
        cur: function () {
          var l = wi.propHooks[this.prop];
          return l && l.get ? l.get(this) : wi.propHooks._default.get(this);
        },
        run: function (l) {
          var h,
            _ = wi.propHooks[this.prop];
          return (
            this.options.duration
              ? (this.pos = h =
                  b.easing[this.easing](
                    l,
                    this.options.duration * l,
                    0,
                    1,
                    this.options.duration
                  ))
              : (this.pos = h = l),
            (this.now = (this.end - this.start) * h + this.start),
            this.options.step &&
              this.options.step.call(this.elem, this.now, this),
            _ && _.set ? _.set(this) : wi.propHooks._default.set(this),
            this
          );
        },
      }),
      (wi.prototype.init.prototype = wi.prototype),
      (wi.propHooks = {
        _default: {
          get: function (l) {
            var h;
            return l.elem.nodeType !== 1 ||
              (l.elem[l.prop] != null && l.elem.style[l.prop] == null)
              ? l.elem[l.prop]
              : ((h = b.css(l.elem, l.prop, "")), !h || h === "auto" ? 0 : h);
          },
          set: function (l) {
            b.fx.step[l.prop]
              ? b.fx.step[l.prop](l)
              : l.elem.nodeType === 1 &&
                (b.cssHooks[l.prop] || l.elem.style[Bc(l.prop)] != null)
              ? b.style(l.elem, l.prop, l.now + l.unit)
              : (l.elem[l.prop] = l.now);
          },
        },
      }),
      (wi.propHooks.scrollTop = wi.propHooks.scrollLeft =
        {
          set: function (l) {
            l.elem.nodeType && l.elem.parentNode && (l.elem[l.prop] = l.now);
          },
        }),
      (b.easing = {
        linear: function (l) {
          return l;
        },
        swing: function (l) {
          return 0.5 - Math.cos(l * Math.PI) / 2;
        },
        _default: "swing",
      }),
      (b.fx = wi.prototype.init),
      (b.fx.step = {});
    var vr,
      Ss,
      bb = /^(?:toggle|show|hide)$/,
      vb = /queueHooks$/;
    function jc() {
      Ss &&
        (O.hidden === !1 && n.requestAnimationFrame
          ? n.requestAnimationFrame(jc)
          : n.setTimeout(jc, b.fx.interval),
        b.fx.tick());
    }
    function Dp() {
      return (
        n.setTimeout(function () {
          vr = void 0;
        }),
        (vr = Date.now())
      );
    }
    function Ms(l, h) {
      var _,
        v = 0,
        w = { height: l };
      for (h = h ? 1 : 0; v < 4; v += 2 - h)
        (_ = Wn[v]), (w["margin" + _] = w["padding" + _] = l);
      return h && (w.opacity = w.width = l), w;
    }
    function Sp(l, h, _) {
      for (
        var v,
          w = (rn.tweeners[h] || []).concat(rn.tweeners["*"]),
          D = 0,
          T = w.length;
        D < T;
        D++
      )
        if ((v = w[D].call(_, h, l))) return v;
    }
    function yb(l, h, _) {
      var v,
        w,
        D,
        T,
        R,
        A,
        H,
        K,
        J = "width" in h || "height" in h,
        Y = this,
        re = {},
        Le = l.style,
        rt = l.nodeType && Cs(l),
        We = Te.get(l, "fxshow");
      _.queue ||
        ((T = b._queueHooks(l, "fx")),
        T.unqueued == null &&
          ((T.unqueued = 0),
          (R = T.empty.fire),
          (T.empty.fire = function () {
            T.unqueued || R();
          })),
        T.unqueued++,
        Y.always(function () {
          Y.always(function () {
            T.unqueued--, b.queue(l, "fx").length || T.empty.fire();
          });
        }));
      for (v in h)
        if (((w = h[v]), bb.test(w))) {
          if (
            (delete h[v],
            (D = D || w === "toggle"),
            w === (rt ? "hide" : "show"))
          )
            if (w === "show" && We && We[v] !== void 0) rt = !0;
            else continue;
          re[v] = (We && We[v]) || b.style(l, v);
        }
      if (((A = !b.isEmptyObject(h)), !(!A && b.isEmptyObject(re)))) {
        J &&
          l.nodeType === 1 &&
          ((_.overflow = [Le.overflow, Le.overflowX, Le.overflowY]),
          (H = We && We.display),
          H == null && (H = Te.get(l, "display")),
          (K = b.css(l, "display")),
          K === "none" &&
            (H
              ? (K = H)
              : (fr([l], !0),
                (H = l.style.display || H),
                (K = b.css(l, "display")),
                fr([l]))),
          (K === "inline" || (K === "inline-block" && H != null)) &&
            b.css(l, "float") === "none" &&
            (A ||
              (Y.done(function () {
                Le.display = H;
              }),
              H == null && ((K = Le.display), (H = K === "none" ? "" : K))),
            (Le.display = "inline-block"))),
          _.overflow &&
            ((Le.overflow = "hidden"),
            Y.always(function () {
              (Le.overflow = _.overflow[0]),
                (Le.overflowX = _.overflow[1]),
                (Le.overflowY = _.overflow[2]);
            })),
          (A = !1);
        for (v in re)
          A ||
            (We
              ? "hidden" in We && (rt = We.hidden)
              : (We = Te.access(l, "fxshow", { display: H })),
            D && (We.hidden = !rt),
            rt && fr([l], !0),
            Y.done(function () {
              rt || fr([l]), Te.remove(l, "fxshow");
              for (v in re) b.style(l, v, re[v]);
            })),
            (A = Sp(rt ? We[v] : 0, v, Y)),
            v in We ||
              ((We[v] = A.start), rt && ((A.end = A.start), (A.start = 0)));
      }
    }
    function xb(l, h) {
      var _, v, w, D, T;
      for (_ in l)
        if (
          ((v = yn(_)),
          (w = h[v]),
          (D = l[_]),
          Array.isArray(D) && ((w = D[1]), (D = l[_] = D[0])),
          _ !== v && ((l[v] = D), delete l[_]),
          (T = b.cssHooks[v]),
          T && "expand" in T)
        ) {
          (D = T.expand(D)), delete l[v];
          for (_ in D) _ in l || ((l[_] = D[_]), (h[_] = w));
        } else h[v] = w;
    }
    function rn(l, h, _) {
      var v,
        w,
        D = 0,
        T = rn.prefilters.length,
        R = b.Deferred().always(function () {
          delete A.elem;
        }),
        A = function () {
          if (w) return !1;
          for (
            var J = vr || Dp(),
              Y = Math.max(0, H.startTime + H.duration - J),
              re = Y / H.duration || 0,
              Le = 1 - re,
              rt = 0,
              We = H.tweens.length;
            rt < We;
            rt++
          )
            H.tweens[rt].run(Le);
          return (
            R.notifyWith(l, [H, Le, Y]),
            Le < 1 && We
              ? Y
              : (We || R.notifyWith(l, [H, 1, 0]), R.resolveWith(l, [H]), !1)
          );
        },
        H = R.promise({
          elem: l,
          props: b.extend({}, h),
          opts: b.extend(
            !0,
            { specialEasing: {}, easing: b.easing._default },
            _
          ),
          originalProperties: h,
          originalOptions: _,
          startTime: vr || Dp(),
          duration: _.duration,
          tweens: [],
          createTween: function (J, Y) {
            var re = b.Tween(
              l,
              H.opts,
              J,
              Y,
              H.opts.specialEasing[J] || H.opts.easing
            );
            return H.tweens.push(re), re;
          },
          stop: function (J) {
            var Y = 0,
              re = J ? H.tweens.length : 0;
            if (w) return this;
            for (w = !0; Y < re; Y++) H.tweens[Y].run(1);
            return (
              J
                ? (R.notifyWith(l, [H, 1, 0]), R.resolveWith(l, [H, J]))
                : R.rejectWith(l, [H, J]),
              this
            );
          },
        }),
        K = H.props;
      for (xb(K, H.opts.specialEasing); D < T; D++)
        if (((v = rn.prefilters[D].call(H, l, K, H.opts)), v))
          return (
            M(v.stop) &&
              (b._queueHooks(H.elem, H.opts.queue).stop = v.stop.bind(v)),
            v
          );
      return (
        b.map(K, Sp, H),
        M(H.opts.start) && H.opts.start.call(l, H),
        H.progress(H.opts.progress)
          .done(H.opts.done, H.opts.complete)
          .fail(H.opts.fail)
          .always(H.opts.always),
        b.fx.timer(b.extend(A, { elem: l, anim: H, queue: H.opts.queue })),
        H
      );
    }
    (b.Animation = b.extend(rn, {
      tweeners: {
        "*": [
          function (l, h) {
            var _ = this.createTween(l, h);
            return sp(_.elem, l, ua.exec(h), _), _;
          },
        ],
      },
      tweener: function (l, h) {
        M(l) ? ((h = l), (l = ["*"])) : (l = l.match(vn));
        for (var _, v = 0, w = l.length; v < w; v++)
          (_ = l[v]),
            (rn.tweeners[_] = rn.tweeners[_] || []),
            rn.tweeners[_].unshift(h);
      },
      prefilters: [yb],
      prefilter: function (l, h) {
        h ? rn.prefilters.unshift(l) : rn.prefilters.push(l);
      },
    })),
      (b.speed = function (l, h, _) {
        var v =
          l && typeof l == "object"
            ? b.extend({}, l)
            : {
                complete: _ || (!_ && h) || (M(l) && l),
                duration: l,
                easing: (_ && h) || (h && !M(h) && h),
              };
        return (
          b.fx.off
            ? (v.duration = 0)
            : typeof v.duration != "number" &&
              (v.duration in b.fx.speeds
                ? (v.duration = b.fx.speeds[v.duration])
                : (v.duration = b.fx.speeds._default)),
          (v.queue == null || v.queue === !0) && (v.queue = "fx"),
          (v.old = v.complete),
          (v.complete = function () {
            M(v.old) && v.old.call(this), v.queue && b.dequeue(this, v.queue);
          }),
          v
        );
      }),
      b.fn.extend({
        fadeTo: function (l, h, _, v) {
          return this.filter(Cs)
            .css("opacity", 0)
            .show()
            .end()
            .animate({ opacity: h }, l, _, v);
        },
        animate: function (l, h, _, v) {
          var w = b.isEmptyObject(l),
            D = b.speed(h, _, v),
            T = function () {
              var R = rn(this, b.extend({}, l), D);
              (w || Te.get(this, "finish")) && R.stop(!0);
            };
          return (
            (T.finish = T),
            w || D.queue === !1 ? this.each(T) : this.queue(D.queue, T)
          );
        },
        stop: function (l, h, _) {
          var v = function (w) {
            var D = w.stop;
            delete w.stop, D(_);
          };
          return (
            typeof l != "string" && ((_ = h), (h = l), (l = void 0)),
            h && this.queue(l || "fx", []),
            this.each(function () {
              var w = !0,
                D = l != null && l + "queueHooks",
                T = b.timers,
                R = Te.get(this);
              if (D) R[D] && R[D].stop && v(R[D]);
              else for (D in R) R[D] && R[D].stop && vb.test(D) && v(R[D]);
              for (D = T.length; D--; )
                T[D].elem === this &&
                  (l == null || T[D].queue === l) &&
                  (T[D].anim.stop(_), (w = !1), T.splice(D, 1));
              (w || !_) && b.dequeue(this, l);
            })
          );
        },
        finish: function (l) {
          return (
            l !== !1 && (l = l || "fx"),
            this.each(function () {
              var h,
                _ = Te.get(this),
                v = _[l + "queue"],
                w = _[l + "queueHooks"],
                D = b.timers,
                T = v ? v.length : 0;
              for (
                _.finish = !0,
                  b.queue(this, l, []),
                  w && w.stop && w.stop.call(this, !0),
                  h = D.length;
                h--;

              )
                D[h].elem === this &&
                  D[h].queue === l &&
                  (D[h].anim.stop(!0), D.splice(h, 1));
              for (h = 0; h < T; h++)
                v[h] && v[h].finish && v[h].finish.call(this);
              delete _.finish;
            })
          );
        },
      }),
      b.each(["toggle", "show", "hide"], function (l, h) {
        var _ = b.fn[h];
        b.fn[h] = function (v, w, D) {
          return v == null || typeof v == "boolean"
            ? _.apply(this, arguments)
            : this.animate(Ms(h, !0), v, w, D);
        };
      }),
      b.each(
        {
          slideDown: Ms("show"),
          slideUp: Ms("hide"),
          slideToggle: Ms("toggle"),
          fadeIn: { opacity: "show" },
          fadeOut: { opacity: "hide" },
          fadeToggle: { opacity: "toggle" },
        },
        function (l, h) {
          b.fn[l] = function (_, v, w) {
            return this.animate(h, _, v, w);
          };
        }
      ),
      (b.timers = []),
      (b.fx.tick = function () {
        var l,
          h = 0,
          _ = b.timers;
        for (vr = Date.now(); h < _.length; h++)
          (l = _[h]), !l() && _[h] === l && _.splice(h--, 1);
        _.length || b.fx.stop(), (vr = void 0);
      }),
      (b.fx.timer = function (l) {
        b.timers.push(l), b.fx.start();
      }),
      (b.fx.interval = 13),
      (b.fx.start = function () {
        Ss || ((Ss = !0), jc());
      }),
      (b.fx.stop = function () {
        Ss = null;
      }),
      (b.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
      (b.fn.delay = function (l, h) {
        return (
          (l = (b.fx && b.fx.speeds[l]) || l),
          (h = h || "fx"),
          this.queue(h, function (_, v) {
            var w = n.setTimeout(_, l);
            v.stop = function () {
              n.clearTimeout(w);
            };
          })
        );
      }),
      (function () {
        var l = O.createElement("input"),
          h = O.createElement("select"),
          _ = h.appendChild(O.createElement("option"));
        (l.type = "checkbox"),
          (C.checkOn = l.value !== ""),
          (C.optSelected = _.selected),
          (l = O.createElement("input")),
          (l.value = "t"),
          (l.type = "radio"),
          (C.radioValue = l.value === "t");
      })();
    var Mp,
      ma = b.expr.attrHandle;
    b.fn.extend({
      attr: function (l, h) {
        return Un(this, b.attr, l, h, arguments.length > 1);
      },
      removeAttr: function (l) {
        return this.each(function () {
          b.removeAttr(this, l);
        });
      },
    }),
      b.extend({
        attr: function (l, h, _) {
          var v,
            w,
            D = l.nodeType;
          if (!(D === 3 || D === 8 || D === 2)) {
            if (typeof l.getAttribute > "u") return b.prop(l, h, _);
            if (
              ((D !== 1 || !b.isXMLDoc(l)) &&
                (w =
                  b.attrHooks[h.toLowerCase()] ||
                  (b.expr.match.bool.test(h) ? Mp : void 0)),
              _ !== void 0)
            ) {
              if (_ === null) {
                b.removeAttr(l, h);
                return;
              }
              return w && "set" in w && (v = w.set(l, _, h)) !== void 0
                ? v
                : (l.setAttribute(h, _ + ""), _);
            }
            return w && "get" in w && (v = w.get(l, h)) !== null
              ? v
              : ((v = b.find.attr(l, h)), v ?? void 0);
          }
        },
        attrHooks: {
          type: {
            set: function (l, h) {
              if (!C.radioValue && h === "radio" && ee(l, "input")) {
                var _ = l.value;
                return l.setAttribute("type", h), _ && (l.value = _), h;
              }
            },
          },
        },
        removeAttr: function (l, h) {
          var _,
            v = 0,
            w = h && h.match(vn);
          if (w && l.nodeType === 1)
            for (; (_ = w[v++]); ) l.removeAttribute(_);
        },
      }),
      (Mp = {
        set: function (l, h, _) {
          return h === !1 ? b.removeAttr(l, _) : l.setAttribute(_, _), _;
        },
      }),
      b.each(b.expr.match.bool.source.match(/\w+/g), function (l, h) {
        var _ = ma[h] || b.find.attr;
        ma[h] = function (v, w, D) {
          var T,
            R,
            A = w.toLowerCase();
          return (
            D ||
              ((R = ma[A]),
              (ma[A] = T),
              (T = _(v, w, D) != null ? A : null),
              (ma[A] = R)),
            T
          );
        };
      });
    var Cb = /^(?:input|select|textarea|button)$/i,
      wb = /^(?:a|area)$/i;
    b.fn.extend({
      prop: function (l, h) {
        return Un(this, b.prop, l, h, arguments.length > 1);
      },
      removeProp: function (l) {
        return this.each(function () {
          delete this[b.propFix[l] || l];
        });
      },
    }),
      b.extend({
        prop: function (l, h, _) {
          var v,
            w,
            D = l.nodeType;
          if (!(D === 3 || D === 8 || D === 2))
            return (
              (D !== 1 || !b.isXMLDoc(l)) &&
                ((h = b.propFix[h] || h), (w = b.propHooks[h])),
              _ !== void 0
                ? w && "set" in w && (v = w.set(l, _, h)) !== void 0
                  ? v
                  : (l[h] = _)
                : w && "get" in w && (v = w.get(l, h)) !== null
                ? v
                : l[h]
            );
        },
        propHooks: {
          tabIndex: {
            get: function (l) {
              var h = b.find.attr(l, "tabindex");
              return h
                ? parseInt(h, 10)
                : Cb.test(l.nodeName) || (wb.test(l.nodeName) && l.href)
                ? 0
                : -1;
            },
          },
        },
        propFix: { for: "htmlFor", class: "className" },
      }),
      C.optSelected ||
        (b.propHooks.selected = {
          get: function (l) {
            var h = l.parentNode;
            return h && h.parentNode && h.parentNode.selectedIndex, null;
          },
          set: function (l) {
            var h = l.parentNode;
            h && (h.selectedIndex, h.parentNode && h.parentNode.selectedIndex);
          },
        }),
      b.each(
        [
          "tabIndex",
          "readOnly",
          "maxLength",
          "cellSpacing",
          "cellPadding",
          "rowSpan",
          "colSpan",
          "useMap",
          "frameBorder",
          "contentEditable",
        ],
        function () {
          b.propFix[this.toLowerCase()] = this;
        }
      );
    function Vo(l) {
      var h = l.match(vn) || [];
      return h.join(" ");
    }
    function Lo(l) {
      return (l.getAttribute && l.getAttribute("class")) || "";
    }
    function zc(l) {
      return Array.isArray(l)
        ? l
        : typeof l == "string"
        ? l.match(vn) || []
        : [];
    }
    b.fn.extend({
      addClass: function (l) {
        var h, _, v, w, D, T;
        return M(l)
          ? this.each(function (R) {
              b(this).addClass(l.call(this, R, Lo(this)));
            })
          : ((h = zc(l)),
            h.length
              ? this.each(function () {
                  if (
                    ((v = Lo(this)),
                    (_ = this.nodeType === 1 && " " + Vo(v) + " "),
                    _)
                  ) {
                    for (D = 0; D < h.length; D++)
                      (w = h[D]),
                        _.indexOf(" " + w + " ") < 0 && (_ += w + " ");
                    (T = Vo(_)), v !== T && this.setAttribute("class", T);
                  }
                })
              : this);
      },
      removeClass: function (l) {
        var h, _, v, w, D, T;
        return M(l)
          ? this.each(function (R) {
              b(this).removeClass(l.call(this, R, Lo(this)));
            })
          : arguments.length
          ? ((h = zc(l)),
            h.length
              ? this.each(function () {
                  if (
                    ((v = Lo(this)),
                    (_ = this.nodeType === 1 && " " + Vo(v) + " "),
                    _)
                  ) {
                    for (D = 0; D < h.length; D++)
                      for (w = h[D]; _.indexOf(" " + w + " ") > -1; )
                        _ = _.replace(" " + w + " ", " ");
                    (T = Vo(_)), v !== T && this.setAttribute("class", T);
                  }
                })
              : this)
          : this.attr("class", "");
      },
      toggleClass: function (l, h) {
        var _,
          v,
          w,
          D,
          T = typeof l,
          R = T === "string" || Array.isArray(l);
        return M(l)
          ? this.each(function (A) {
              b(this).toggleClass(l.call(this, A, Lo(this), h), h);
            })
          : typeof h == "boolean" && R
          ? h
            ? this.addClass(l)
            : this.removeClass(l)
          : ((_ = zc(l)),
            this.each(function () {
              if (R)
                for (D = b(this), w = 0; w < _.length; w++)
                  (v = _[w]), D.hasClass(v) ? D.removeClass(v) : D.addClass(v);
              else
                (l === void 0 || T === "boolean") &&
                  ((v = Lo(this)),
                  v && Te.set(this, "__className__", v),
                  this.setAttribute &&
                    this.setAttribute(
                      "class",
                      v || l === !1 ? "" : Te.get(this, "__className__") || ""
                    ));
            }));
      },
      hasClass: function (l) {
        var h,
          _,
          v = 0;
        for (h = " " + l + " "; (_ = this[v++]); )
          if (_.nodeType === 1 && (" " + Vo(Lo(_)) + " ").indexOf(h) > -1)
            return !0;
        return !1;
      },
    });
    var Db = /\r/g;
    b.fn.extend({
      val: function (l) {
        var h,
          _,
          v,
          w = this[0];
        return arguments.length
          ? ((v = M(l)),
            this.each(function (D) {
              var T;
              this.nodeType === 1 &&
                (v ? (T = l.call(this, D, b(this).val())) : (T = l),
                T == null
                  ? (T = "")
                  : typeof T == "number"
                  ? (T += "")
                  : Array.isArray(T) &&
                    (T = b.map(T, function (R) {
                      return R == null ? "" : R + "";
                    })),
                (h =
                  b.valHooks[this.type] ||
                  b.valHooks[this.nodeName.toLowerCase()]),
                (!h || !("set" in h) || h.set(this, T, "value") === void 0) &&
                  (this.value = T));
            }))
          : w
          ? ((h = b.valHooks[w.type] || b.valHooks[w.nodeName.toLowerCase()]),
            h && "get" in h && (_ = h.get(w, "value")) !== void 0
              ? _
              : ((_ = w.value),
                typeof _ == "string" ? _.replace(Db, "") : _ ?? ""))
          : void 0;
      },
    }),
      b.extend({
        valHooks: {
          option: {
            get: function (l) {
              var h = b.find.attr(l, "value");
              return h ?? Vo(b.text(l));
            },
          },
          select: {
            get: function (l) {
              var h,
                _,
                v,
                w = l.options,
                D = l.selectedIndex,
                T = l.type === "select-one",
                R = T ? null : [],
                A = T ? D + 1 : w.length;
              for (D < 0 ? (v = A) : (v = T ? D : 0); v < A; v++)
                if (
                  ((_ = w[v]),
                  (_.selected || v === D) &&
                    !_.disabled &&
                    (!_.parentNode.disabled || !ee(_.parentNode, "optgroup")))
                ) {
                  if (((h = b(_).val()), T)) return h;
                  R.push(h);
                }
              return R;
            },
            set: function (l, h) {
              for (
                var _, v, w = l.options, D = b.makeArray(h), T = w.length;
                T--;

              )
                (v = w[T]),
                  (v.selected = b.inArray(b.valHooks.option.get(v), D) > -1) &&
                    (_ = !0);
              return _ || (l.selectedIndex = -1), D;
            },
          },
        },
      }),
      b.each(["radio", "checkbox"], function () {
        (b.valHooks[this] = {
          set: function (l, h) {
            if (Array.isArray(h))
              return (l.checked = b.inArray(b(l).val(), h) > -1);
          },
        }),
          C.checkOn ||
            (b.valHooks[this].get = function (l) {
              return l.getAttribute("value") === null ? "on" : l.value;
            });
      });
    var fa = n.location,
      Ep = { guid: Date.now() },
      Uc = /\?/;
    b.parseXML = function (l) {
      var h, _;
      if (!l || typeof l != "string") return null;
      try {
        h = new n.DOMParser().parseFromString(l, "text/xml");
      } catch {}
      return (
        (_ = h && h.getElementsByTagName("parsererror")[0]),
        (!h || _) &&
          b.error(
            "Invalid XML: " +
              (_
                ? b.map(_.childNodes, function (v) {
                    return v.textContent;
                  }).join(`
`)
                : l)
          ),
        h
      );
    };
    var Tp = /^(?:focusinfocus|focusoutblur)$/,
      kp = function (l) {
        l.stopPropagation();
      };
    b.extend(b.event, {
      trigger: function (l, h, _, v) {
        var w,
          D,
          T,
          R,
          A,
          H,
          K,
          J,
          Y = [_ || O],
          re = f.call(l, "type") ? l.type : l,
          Le = f.call(l, "namespace") ? l.namespace.split(".") : [];
        if (
          ((D = J = T = _ = _ || O),
          !(_.nodeType === 3 || _.nodeType === 8) &&
            !Tp.test(re + b.event.triggered) &&
            (re.indexOf(".") > -1 &&
              ((Le = re.split(".")), (re = Le.shift()), Le.sort()),
            (A = re.indexOf(":") < 0 && "on" + re),
            (l = l[b.expando] ? l : new b.Event(re, typeof l == "object" && l)),
            (l.isTrigger = v ? 2 : 3),
            (l.namespace = Le.join(".")),
            (l.rnamespace = l.namespace
              ? new RegExp("(^|\\.)" + Le.join("\\.(?:.*\\.|)") + "(\\.|$)")
              : null),
            (l.result = void 0),
            l.target || (l.target = _),
            (h = h == null ? [l] : b.makeArray(h, [l])),
            (K = b.event.special[re] || {}),
            !(!v && K.trigger && K.trigger.apply(_, h) === !1)))
        ) {
          if (!v && !K.noBubble && !k(_)) {
            for (
              R = K.delegateType || re, Tp.test(R + re) || (D = D.parentNode);
              D;
              D = D.parentNode
            )
              Y.push(D), (T = D);
            T === (_.ownerDocument || O) &&
              Y.push(T.defaultView || T.parentWindow || n);
          }
          for (w = 0; (D = Y[w++]) && !l.isPropagationStopped(); )
            (J = D),
              (l.type = w > 1 ? R : K.bindType || re),
              (H =
                (Te.get(D, "events") || Object.create(null))[l.type] &&
                Te.get(D, "handle")),
              H && H.apply(D, h),
              (H = A && D[A]),
              H &&
                H.apply &&
                ca(D) &&
                ((l.result = H.apply(D, h)),
                l.result === !1 && l.preventDefault());
          return (
            (l.type = re),
            !v &&
              !l.isDefaultPrevented() &&
              (!K._default || K._default.apply(Y.pop(), h) === !1) &&
              ca(_) &&
              A &&
              M(_[re]) &&
              !k(_) &&
              ((T = _[A]),
              T && (_[A] = null),
              (b.event.triggered = re),
              l.isPropagationStopped() && J.addEventListener(re, kp),
              _[re](),
              l.isPropagationStopped() && J.removeEventListener(re, kp),
              (b.event.triggered = void 0),
              T && (_[A] = T)),
            l.result
          );
        }
      },
      simulate: function (l, h, _) {
        var v = b.extend(new b.Event(), _, { type: l, isSimulated: !0 });
        b.event.trigger(v, null, h);
      },
    }),
      b.fn.extend({
        trigger: function (l, h) {
          return this.each(function () {
            b.event.trigger(l, h, this);
          });
        },
        triggerHandler: function (l, h) {
          var _ = this[0];
          if (_) return b.event.trigger(l, h, _, !0);
        },
      });
    var Sb = /\[\]$/,
      Op = /\r?\n/g,
      Mb = /^(?:submit|button|image|reset|file)$/i,
      Eb = /^(?:input|select|textarea|keygen)/i;
    function Wc(l, h, _, v) {
      var w;
      if (Array.isArray(h))
        b.each(h, function (D, T) {
          _ || Sb.test(l)
            ? v(l, T)
            : Wc(
                l + "[" + (typeof T == "object" && T != null ? D : "") + "]",
                T,
                _,
                v
              );
        });
      else if (!_ && Q(h) === "object")
        for (w in h) Wc(l + "[" + w + "]", h[w], _, v);
      else v(l, h);
    }
    (b.param = function (l, h) {
      var _,
        v = [],
        w = function (D, T) {
          var R = M(T) ? T() : T;
          v[v.length] =
            encodeURIComponent(D) + "=" + encodeURIComponent(R ?? "");
        };
      if (l == null) return "";
      if (Array.isArray(l) || (l.jquery && !b.isPlainObject(l)))
        b.each(l, function () {
          w(this.name, this.value);
        });
      else for (_ in l) Wc(_, l[_], h, w);
      return v.join("&");
    }),
      b.fn.extend({
        serialize: function () {
          return b.param(this.serializeArray());
        },
        serializeArray: function () {
          return this.map(function () {
            var l = b.prop(this, "elements");
            return l ? b.makeArray(l) : this;
          })
            .filter(function () {
              var l = this.type;
              return (
                this.name &&
                !b(this).is(":disabled") &&
                Eb.test(this.nodeName) &&
                !Mb.test(l) &&
                (this.checked || !ha.test(l))
              );
            })
            .map(function (l, h) {
              var _ = b(this).val();
              return _ == null
                ? null
                : Array.isArray(_)
                ? b.map(_, function (v) {
                    return {
                      name: h.name,
                      value: v.replace(
                        Op,
                        `\r
`
                      ),
                    };
                  })
                : {
                    name: h.name,
                    value: _.replace(
                      Op,
                      `\r
`
                    ),
                  };
            })
            .get();
        },
      });
    var Tb = /%20/g,
      kb = /#.*$/,
      Ob = /([?&])_=[^&]*/,
      Ib = /^(.*?):[ \t]*([^\r\n]*)$/gm,
      Pb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      Ab = /^(?:GET|HEAD)$/,
      Rb = /^\/\//,
      Ip = {},
      $c = {},
      Pp = "*/".concat("*"),
      Gc = O.createElement("a");
    Gc.href = fa.href;
    function Ap(l) {
      return function (h, _) {
        typeof h != "string" && ((_ = h), (h = "*"));
        var v,
          w = 0,
          D = h.toLowerCase().match(vn) || [];
        if (M(_))
          for (; (v = D[w++]); )
            v[0] === "+"
              ? ((v = v.slice(1) || "*"), (l[v] = l[v] || []).unshift(_))
              : (l[v] = l[v] || []).push(_);
      };
    }
    function Rp(l, h, _, v) {
      var w = {},
        D = l === $c;
      function T(R) {
        var A;
        return (
          (w[R] = !0),
          b.each(l[R] || [], function (H, K) {
            var J = K(h, _, v);
            if (typeof J == "string" && !D && !w[J])
              return h.dataTypes.unshift(J), T(J), !1;
            if (D) return !(A = J);
          }),
          A
        );
      }
      return T(h.dataTypes[0]) || (!w["*"] && T("*"));
    }
    function Yc(l, h) {
      var _,
        v,
        w = b.ajaxSettings.flatOptions || {};
      for (_ in h) h[_] !== void 0 && ((w[_] ? l : v || (v = {}))[_] = h[_]);
      return v && b.extend(!0, l, v), l;
    }
    function Fb(l, h, _) {
      for (var v, w, D, T, R = l.contents, A = l.dataTypes; A[0] === "*"; )
        A.shift(),
          v === void 0 &&
            (v = l.mimeType || h.getResponseHeader("Content-Type"));
      if (v) {
        for (w in R)
          if (R[w] && R[w].test(v)) {
            A.unshift(w);
            break;
          }
      }
      if (A[0] in _) D = A[0];
      else {
        for (w in _) {
          if (!A[0] || l.converters[w + " " + A[0]]) {
            D = w;
            break;
          }
          T || (T = w);
        }
        D = D || T;
      }
      if (D) return D !== A[0] && A.unshift(D), _[D];
    }
    function Nb(l, h, _, v) {
      var w,
        D,
        T,
        R,
        A,
        H = {},
        K = l.dataTypes.slice();
      if (K[1]) for (T in l.converters) H[T.toLowerCase()] = l.converters[T];
      for (D = K.shift(); D; )
        if (
          (l.responseFields[D] && (_[l.responseFields[D]] = h),
          !A && v && l.dataFilter && (h = l.dataFilter(h, l.dataType)),
          (A = D),
          (D = K.shift()),
          D)
        ) {
          if (D === "*") D = A;
          else if (A !== "*" && A !== D) {
            if (((T = H[A + " " + D] || H["* " + D]), !T)) {
              for (w in H)
                if (
                  ((R = w.split(" ")),
                  R[1] === D && ((T = H[A + " " + R[0]] || H["* " + R[0]]), T))
                ) {
                  T === !0
                    ? (T = H[w])
                    : H[w] !== !0 && ((D = R[0]), K.unshift(R[1]));
                  break;
                }
            }
            if (T !== !0)
              if (T && l.throws) h = T(h);
              else
                try {
                  h = T(h);
                } catch (J) {
                  return {
                    state: "parsererror",
                    error: T ? J : "No conversion from " + A + " to " + D,
                  };
                }
          }
        }
      return { state: "success", data: h };
    }
    b.extend({
      active: 0,
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: fa.href,
        type: "GET",
        isLocal: Pb.test(fa.protocol),
        global: !0,
        processData: !0,
        async: !0,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        accepts: {
          "*": Pp,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript",
        },
        contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON",
        },
        converters: {
          "* text": String,
          "text html": !0,
          "text json": JSON.parse,
          "text xml": b.parseXML,
        },
        flatOptions: { url: !0, context: !0 },
      },
      ajaxSetup: function (l, h) {
        return h ? Yc(Yc(l, b.ajaxSettings), h) : Yc(b.ajaxSettings, l);
      },
      ajaxPrefilter: Ap(Ip),
      ajaxTransport: Ap($c),
      ajax: function (l, h) {
        typeof l == "object" && ((h = l), (l = void 0)), (h = h || {});
        var _,
          v,
          w,
          D,
          T,
          R,
          A,
          H,
          K,
          J,
          Y = b.ajaxSetup({}, h),
          re = Y.context || Y,
          Le = Y.context && (re.nodeType || re.jquery) ? b(re) : b.event,
          rt = b.Deferred(),
          We = b.Callbacks("once memory"),
          oi = Y.statusCode || {},
          qt = {},
          xn = {},
          Cn = "canceled",
          tt = {
            readyState: 0,
            getResponseHeader: function (st) {
              var Pt;
              if (A) {
                if (!D)
                  for (D = {}; (Pt = Ib.exec(w)); )
                    D[Pt[1].toLowerCase() + " "] = (
                      D[Pt[1].toLowerCase() + " "] || []
                    ).concat(Pt[2]);
                Pt = D[st.toLowerCase() + " "];
              }
              return Pt == null ? null : Pt.join(", ");
            },
            getAllResponseHeaders: function () {
              return A ? w : null;
            },
            setRequestHeader: function (st, Pt) {
              return (
                A == null &&
                  ((st = xn[st.toLowerCase()] = xn[st.toLowerCase()] || st),
                  (qt[st] = Pt)),
                this
              );
            },
            overrideMimeType: function (st) {
              return A == null && (Y.mimeType = st), this;
            },
            statusCode: function (st) {
              var Pt;
              if (st)
                if (A) tt.always(st[tt.status]);
                else for (Pt in st) oi[Pt] = [oi[Pt], st[Pt]];
              return this;
            },
            abort: function (st) {
              var Pt = st || Cn;
              return _ && _.abort(Pt), Bo(0, Pt), this;
            },
          };
        if (
          (rt.promise(tt),
          (Y.url = ((l || Y.url || fa.href) + "").replace(
            Rb,
            fa.protocol + "//"
          )),
          (Y.type = h.method || h.type || Y.method || Y.type),
          (Y.dataTypes = (Y.dataType || "*").toLowerCase().match(vn) || [""]),
          Y.crossDomain == null)
        ) {
          R = O.createElement("a");
          try {
            (R.href = Y.url),
              (R.href = R.href),
              (Y.crossDomain =
                Gc.protocol + "//" + Gc.host != R.protocol + "//" + R.host);
          } catch {
            Y.crossDomain = !0;
          }
        }
        if (
          (Y.data &&
            Y.processData &&
            typeof Y.data != "string" &&
            (Y.data = b.param(Y.data, Y.traditional)),
          Rp(Ip, Y, h, tt),
          A)
        )
          return tt;
        (H = b.event && Y.global),
          H && b.active++ === 0 && b.event.trigger("ajaxStart"),
          (Y.type = Y.type.toUpperCase()),
          (Y.hasContent = !Ab.test(Y.type)),
          (v = Y.url.replace(kb, "")),
          Y.hasContent
            ? Y.data &&
              Y.processData &&
              (Y.contentType || "").indexOf(
                "application/x-www-form-urlencoded"
              ) === 0 &&
              (Y.data = Y.data.replace(Tb, "+"))
            : ((J = Y.url.slice(v.length)),
              Y.data &&
                (Y.processData || typeof Y.data == "string") &&
                ((v += (Uc.test(v) ? "&" : "?") + Y.data), delete Y.data),
              Y.cache === !1 &&
                ((v = v.replace(Ob, "$1")),
                (J = (Uc.test(v) ? "&" : "?") + "_=" + Ep.guid++ + J)),
              (Y.url = v + J)),
          Y.ifModified &&
            (b.lastModified[v] &&
              tt.setRequestHeader("If-Modified-Since", b.lastModified[v]),
            b.etag[v] && tt.setRequestHeader("If-None-Match", b.etag[v])),
          ((Y.data && Y.hasContent && Y.contentType !== !1) || h.contentType) &&
            tt.setRequestHeader("Content-Type", Y.contentType),
          tt.setRequestHeader(
            "Accept",
            Y.dataTypes[0] && Y.accepts[Y.dataTypes[0]]
              ? Y.accepts[Y.dataTypes[0]] +
                  (Y.dataTypes[0] !== "*" ? ", " + Pp + "; q=0.01" : "")
              : Y.accepts["*"]
          );
        for (K in Y.headers) tt.setRequestHeader(K, Y.headers[K]);
        if (Y.beforeSend && (Y.beforeSend.call(re, tt, Y) === !1 || A))
          return tt.abort();
        if (
          ((Cn = "abort"),
          We.add(Y.complete),
          tt.done(Y.success),
          tt.fail(Y.error),
          (_ = Rp($c, Y, h, tt)),
          !_)
        )
          Bo(-1, "No Transport");
        else {
          if (((tt.readyState = 1), H && Le.trigger("ajaxSend", [tt, Y]), A))
            return tt;
          Y.async &&
            Y.timeout > 0 &&
            (T = n.setTimeout(function () {
              tt.abort("timeout");
            }, Y.timeout));
          try {
            (A = !1), _.send(qt, Bo);
          } catch (st) {
            if (A) throw st;
            Bo(-1, st);
          }
        }
        function Bo(st, Pt, _a, Kc) {
          var wn,
            ba,
            Dn,
            ho,
            po,
            Yi = Pt;
          A ||
            ((A = !0),
            T && n.clearTimeout(T),
            (_ = void 0),
            (w = Kc || ""),
            (tt.readyState = st > 0 ? 4 : 0),
            (wn = (st >= 200 && st < 300) || st === 304),
            _a && (ho = Fb(Y, tt, _a)),
            !wn &&
              b.inArray("script", Y.dataTypes) > -1 &&
              b.inArray("json", Y.dataTypes) < 0 &&
              (Y.converters["text script"] = function () {}),
            (ho = Nb(Y, ho, tt, wn)),
            wn
              ? (Y.ifModified &&
                  ((po = tt.getResponseHeader("Last-Modified")),
                  po && (b.lastModified[v] = po),
                  (po = tt.getResponseHeader("etag")),
                  po && (b.etag[v] = po)),
                st === 204 || Y.type === "HEAD"
                  ? (Yi = "nocontent")
                  : st === 304
                  ? (Yi = "notmodified")
                  : ((Yi = ho.state),
                    (ba = ho.data),
                    (Dn = ho.error),
                    (wn = !Dn)))
              : ((Dn = Yi),
                (st || !Yi) && ((Yi = "error"), st < 0 && (st = 0))),
            (tt.status = st),
            (tt.statusText = (Pt || Yi) + ""),
            wn
              ? rt.resolveWith(re, [ba, Yi, tt])
              : rt.rejectWith(re, [tt, Yi, Dn]),
            tt.statusCode(oi),
            (oi = void 0),
            H &&
              Le.trigger(wn ? "ajaxSuccess" : "ajaxError", [
                tt,
                Y,
                wn ? ba : Dn,
              ]),
            We.fireWith(re, [tt, Yi]),
            H &&
              (Le.trigger("ajaxComplete", [tt, Y]),
              --b.active || b.event.trigger("ajaxStop")));
        }
        return tt;
      },
      getJSON: function (l, h, _) {
        return b.get(l, h, _, "json");
      },
      getScript: function (l, h) {
        return b.get(l, void 0, h, "script");
      },
    }),
      b.each(["get", "post"], function (l, h) {
        b[h] = function (_, v, w, D) {
          return (
            M(v) && ((D = D || w), (w = v), (v = void 0)),
            b.ajax(
              b.extend(
                { url: _, type: h, dataType: D, data: v, success: w },
                b.isPlainObject(_) && _
              )
            )
          );
        };
      }),
      b.ajaxPrefilter(function (l) {
        var h;
        for (h in l.headers)
          h.toLowerCase() === "content-type" &&
            (l.contentType = l.headers[h] || "");
      }),
      (b._evalUrl = function (l, h, _) {
        return b.ajax({
          url: l,
          type: "GET",
          dataType: "script",
          cache: !0,
          async: !1,
          global: !1,
          converters: { "text script": function () {} },
          dataFilter: function (v) {
            b.globalEval(v, h, _);
          },
        });
      }),
      b.fn.extend({
        wrapAll: function (l) {
          var h;
          return (
            this[0] &&
              (M(l) && (l = l.call(this[0])),
              (h = b(l, this[0].ownerDocument).eq(0).clone(!0)),
              this[0].parentNode && h.insertBefore(this[0]),
              h
                .map(function () {
                  for (var _ = this; _.firstElementChild; )
                    _ = _.firstElementChild;
                  return _;
                })
                .append(this)),
            this
          );
        },
        wrapInner: function (l) {
          return M(l)
            ? this.each(function (h) {
                b(this).wrapInner(l.call(this, h));
              })
            : this.each(function () {
                var h = b(this),
                  _ = h.contents();
                _.length ? _.wrapAll(l) : h.append(l);
              });
        },
        wrap: function (l) {
          var h = M(l);
          return this.each(function (_) {
            b(this).wrapAll(h ? l.call(this, _) : l);
          });
        },
        unwrap: function (l) {
          return (
            this.parent(l)
              .not("body")
              .each(function () {
                b(this).replaceWith(this.childNodes);
              }),
            this
          );
        },
      }),
      (b.expr.pseudos.hidden = function (l) {
        return !b.expr.pseudos.visible(l);
      }),
      (b.expr.pseudos.visible = function (l) {
        return !!(l.offsetWidth || l.offsetHeight || l.getClientRects().length);
      }),
      (b.ajaxSettings.xhr = function () {
        try {
          return new n.XMLHttpRequest();
        } catch {}
      });
    var Vb = { 0: 200, 1223: 204 },
      ga = b.ajaxSettings.xhr();
    (C.cors = !!ga && "withCredentials" in ga),
      (C.ajax = ga = !!ga),
      b.ajaxTransport(function (l) {
        var h, _;
        if (C.cors || (ga && !l.crossDomain))
          return {
            send: function (v, w) {
              var D,
                T = l.xhr();
              if (
                (T.open(l.type, l.url, l.async, l.username, l.password),
                l.xhrFields)
              )
                for (D in l.xhrFields) T[D] = l.xhrFields[D];
              l.mimeType &&
                T.overrideMimeType &&
                T.overrideMimeType(l.mimeType),
                !l.crossDomain &&
                  !v["X-Requested-With"] &&
                  (v["X-Requested-With"] = "XMLHttpRequest");
              for (D in v) T.setRequestHeader(D, v[D]);
              (h = function (R) {
                return function () {
                  h &&
                    ((h =
                      _ =
                      T.onload =
                      T.onerror =
                      T.onabort =
                      T.ontimeout =
                      T.onreadystatechange =
                        null),
                    R === "abort"
                      ? T.abort()
                      : R === "error"
                      ? typeof T.status != "number"
                        ? w(0, "error")
                        : w(T.status, T.statusText)
                      : w(
                          Vb[T.status] || T.status,
                          T.statusText,
                          (T.responseType || "text") !== "text" ||
                            typeof T.responseText != "string"
                            ? { binary: T.response }
                            : { text: T.responseText },
                          T.getAllResponseHeaders()
                        ));
                };
              }),
                (T.onload = h()),
                (_ = T.onerror = T.ontimeout = h("error")),
                T.onabort !== void 0
                  ? (T.onabort = _)
                  : (T.onreadystatechange = function () {
                      T.readyState === 4 &&
                        n.setTimeout(function () {
                          h && _();
                        });
                    }),
                (h = h("abort"));
              try {
                T.send((l.hasContent && l.data) || null);
              } catch (R) {
                if (h) throw R;
              }
            },
            abort: function () {
              h && h();
            },
          };
      }),
      b.ajaxPrefilter(function (l) {
        l.crossDomain && (l.contents.script = !1);
      }),
      b.ajaxSetup({
        accepts: {
          script:
            "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
        },
        contents: { script: /\b(?:java|ecma)script\b/ },
        converters: {
          "text script": function (l) {
            return b.globalEval(l), l;
          },
        },
      }),
      b.ajaxPrefilter("script", function (l) {
        l.cache === void 0 && (l.cache = !1), l.crossDomain && (l.type = "GET");
      }),
      b.ajaxTransport("script", function (l) {
        if (l.crossDomain || l.scriptAttrs) {
          var h, _;
          return {
            send: function (v, w) {
              (h = b("<script>")
                .attr(l.scriptAttrs || {})
                .prop({ charset: l.scriptCharset, src: l.url })
                .on(
                  "load error",
                  (_ = function (D) {
                    h.remove(),
                      (_ = null),
                      D && w(D.type === "error" ? 404 : 200, D.type);
                  })
                )),
                O.head.appendChild(h[0]);
            },
            abort: function () {
              _ && _();
            },
          };
        }
      });
    var Fp = [],
      qc = /(=)\?(?=&|$)|\?\?/;
    b.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function () {
        var l = Fp.pop() || b.expando + "_" + Ep.guid++;
        return (this[l] = !0), l;
      },
    }),
      b.ajaxPrefilter("json jsonp", function (l, h, _) {
        var v,
          w,
          D,
          T =
            l.jsonp !== !1 &&
            (qc.test(l.url)
              ? "url"
              : typeof l.data == "string" &&
                (l.contentType || "").indexOf(
                  "application/x-www-form-urlencoded"
                ) === 0 &&
                qc.test(l.data) &&
                "data");
        if (T || l.dataTypes[0] === "jsonp")
          return (
            (v = l.jsonpCallback =
              M(l.jsonpCallback) ? l.jsonpCallback() : l.jsonpCallback),
            T
              ? (l[T] = l[T].replace(qc, "$1" + v))
              : l.jsonp !== !1 &&
                (l.url += (Uc.test(l.url) ? "&" : "?") + l.jsonp + "=" + v),
            (l.converters["script json"] = function () {
              return D || b.error(v + " was not called"), D[0];
            }),
            (l.dataTypes[0] = "json"),
            (w = n[v]),
            (n[v] = function () {
              D = arguments;
            }),
            _.always(function () {
              w === void 0 ? b(n).removeProp(v) : (n[v] = w),
                l[v] && ((l.jsonpCallback = h.jsonpCallback), Fp.push(v)),
                D && M(w) && w(D[0]),
                (D = w = void 0);
            }),
            "script"
          );
      }),
      (C.createHTMLDocument = (function () {
        var l = O.implementation.createHTMLDocument("").body;
        return (
          (l.innerHTML = "<form></form><form></form>"),
          l.childNodes.length === 2
        );
      })()),
      (b.parseHTML = function (l, h, _) {
        if (typeof l != "string") return [];
        typeof h == "boolean" && ((_ = h), (h = !1));
        var v, w, D;
        return (
          h ||
            (C.createHTMLDocument
              ? ((h = O.implementation.createHTMLDocument("")),
                (v = h.createElement("base")),
                (v.href = O.location.href),
                h.head.appendChild(v))
              : (h = O)),
          (w = Ro.exec(l)),
          (D = !_ && []),
          w
            ? [h.createElement(w[1])]
            : ((w = up([l], h, D)),
              D && D.length && b(D).remove(),
              b.merge([], w.childNodes))
        );
      }),
      (b.fn.load = function (l, h, _) {
        var v,
          w,
          D,
          T = this,
          R = l.indexOf(" ");
        return (
          R > -1 && ((v = Vo(l.slice(R))), (l = l.slice(0, R))),
          M(h)
            ? ((_ = h), (h = void 0))
            : h && typeof h == "object" && (w = "POST"),
          T.length > 0 &&
            b
              .ajax({ url: l, type: w || "GET", dataType: "html", data: h })
              .done(function (A) {
                (D = arguments),
                  T.html(v ? b("<div>").append(b.parseHTML(A)).find(v) : A);
              })
              .always(
                _ &&
                  function (A, H) {
                    T.each(function () {
                      _.apply(this, D || [A.responseText, H, A]);
                    });
                  }
              ),
          this
        );
      }),
      (b.expr.pseudos.animated = function (l) {
        return b.grep(b.timers, function (h) {
          return l === h.elem;
        }).length;
      }),
      (b.offset = {
        setOffset: function (l, h, _) {
          var v,
            w,
            D,
            T,
            R,
            A,
            H,
            K = b.css(l, "position"),
            J = b(l),
            Y = {};
          K === "static" && (l.style.position = "relative"),
            (R = J.offset()),
            (D = b.css(l, "top")),
            (A = b.css(l, "left")),
            (H =
              (K === "absolute" || K === "fixed") &&
              (D + A).indexOf("auto") > -1),
            H
              ? ((v = J.position()), (T = v.top), (w = v.left))
              : ((T = parseFloat(D) || 0), (w = parseFloat(A) || 0)),
            M(h) && (h = h.call(l, _, b.extend({}, R))),
            h.top != null && (Y.top = h.top - R.top + T),
            h.left != null && (Y.left = h.left - R.left + w),
            "using" in h ? h.using.call(l, Y) : J.css(Y);
        },
      }),
      b.fn.extend({
        offset: function (l) {
          if (arguments.length)
            return l === void 0
              ? this
              : this.each(function (w) {
                  b.offset.setOffset(this, l, w);
                });
          var h,
            _,
            v = this[0];
          if (v)
            return v.getClientRects().length
              ? ((h = v.getBoundingClientRect()),
                (_ = v.ownerDocument.defaultView),
                { top: h.top + _.pageYOffset, left: h.left + _.pageXOffset })
              : { top: 0, left: 0 };
        },
        position: function () {
          if (this[0]) {
            var l,
              h,
              _,
              v = this[0],
              w = { top: 0, left: 0 };
            if (b.css(v, "position") === "fixed") h = v.getBoundingClientRect();
            else {
              for (
                h = this.offset(),
                  _ = v.ownerDocument,
                  l = v.offsetParent || _.documentElement;
                l &&
                (l === _.body || l === _.documentElement) &&
                b.css(l, "position") === "static";

              )
                l = l.parentNode;
              l &&
                l !== v &&
                l.nodeType === 1 &&
                ((w = b(l).offset()),
                (w.top += b.css(l, "borderTopWidth", !0)),
                (w.left += b.css(l, "borderLeftWidth", !0)));
            }
            return {
              top: h.top - w.top - b.css(v, "marginTop", !0),
              left: h.left - w.left - b.css(v, "marginLeft", !0),
            };
          }
        },
        offsetParent: function () {
          return this.map(function () {
            for (
              var l = this.offsetParent;
              l && b.css(l, "position") === "static";

            )
              l = l.offsetParent;
            return l || No;
          });
        },
      }),
      b.each(
        { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
        function (l, h) {
          var _ = h === "pageYOffset";
          b.fn[l] = function (v) {
            return Un(
              this,
              function (w, D, T) {
                var R;
                if (
                  (k(w) ? (R = w) : w.nodeType === 9 && (R = w.defaultView),
                  T === void 0)
                )
                  return R ? R[h] : w[D];
                R
                  ? R.scrollTo(_ ? R.pageXOffset : T, _ ? T : R.pageYOffset)
                  : (w[D] = T);
              },
              l,
              v,
              arguments.length
            );
          };
        }
      ),
      b.each(["top", "left"], function (l, h) {
        b.cssHooks[h] = _p(C.pixelPosition, function (_, v) {
          if (v)
            return (v = pa(_, h)), Vc.test(v) ? b(_).position()[h] + "px" : v;
        });
      }),
      b.each({ Height: "height", Width: "width" }, function (l, h) {
        b.each(
          { padding: "inner" + l, content: h, "": "outer" + l },
          function (_, v) {
            b.fn[v] = function (w, D) {
              var T = arguments.length && (_ || typeof w != "boolean"),
                R = _ || (w === !0 || D === !0 ? "margin" : "border");
              return Un(
                this,
                function (A, H, K) {
                  var J;
                  return k(A)
                    ? v.indexOf("outer") === 0
                      ? A["inner" + l]
                      : A.document.documentElement["client" + l]
                    : A.nodeType === 9
                    ? ((J = A.documentElement),
                      Math.max(
                        A.body["scroll" + l],
                        J["scroll" + l],
                        A.body["offset" + l],
                        J["offset" + l],
                        J["client" + l]
                      ))
                    : K === void 0
                    ? b.css(A, H, R)
                    : b.style(A, H, K, R);
                },
                h,
                T ? w : void 0,
                T
              );
            };
          }
        );
      }),
      b.each(
        [
          "ajaxStart",
          "ajaxStop",
          "ajaxComplete",
          "ajaxError",
          "ajaxSuccess",
          "ajaxSend",
        ],
        function (l, h) {
          b.fn[h] = function (_) {
            return this.on(h, _);
          };
        }
      ),
      b.fn.extend({
        bind: function (l, h, _) {
          return this.on(l, null, h, _);
        },
        unbind: function (l, h) {
          return this.off(l, null, h);
        },
        delegate: function (l, h, _, v) {
          return this.on(h, l, _, v);
        },
        undelegate: function (l, h, _) {
          return arguments.length === 1
            ? this.off(l, "**")
            : this.off(h, l || "**", _);
        },
        hover: function (l, h) {
          return this.on("mouseenter", l).on("mouseleave", h || l);
        },
      }),
      b.each(
        "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(
          " "
        ),
        function (l, h) {
          b.fn[h] = function (_, v) {
            return arguments.length > 0
              ? this.on(h, null, _, v)
              : this.trigger(h);
          };
        }
      );
    var Lb = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    (b.proxy = function (l, h) {
      var _, v, w;
      if ((typeof h == "string" && ((_ = l[h]), (h = l), (l = _)), !!M(l)))
        return (
          (v = o.call(arguments, 2)),
          (w = function () {
            return l.apply(h || this, v.concat(o.call(arguments)));
          }),
          (w.guid = l.guid = l.guid || b.guid++),
          w
        );
    }),
      (b.holdReady = function (l) {
        l ? b.readyWait++ : b.ready(!0);
      }),
      (b.isArray = Array.isArray),
      (b.parseJSON = JSON.parse),
      (b.nodeName = ee),
      (b.isFunction = M),
      (b.isWindow = k),
      (b.camelCase = yn),
      (b.type = Q),
      (b.now = Date.now),
      (b.isNumeric = function (l) {
        var h = b.type(l);
        return (h === "number" || h === "string") && !isNaN(l - parseFloat(l));
      }),
      (b.trim = function (l) {
        return l == null ? "" : (l + "").replace(Lb, "$1");
      }),
      typeof define == "function" &&
        define.amd &&
        define("jquery", [], function () {
          return b;
        });
    var Bb = n.jQuery,
      Hb = n.$;
    return (
      (b.noConflict = function (l) {
        return (
          n.$ === b && (n.$ = Hb), l && n.jQuery === b && (n.jQuery = Bb), b
        );
      }),
      typeof i > "u" && (n.jQuery = n.$ = b),
      b
    );
  });
});
var js = class n {
  title = "smartAssists";
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-root"]],
    standalone: !0,
    features: [he],
    decls: 1,
    vars: 0,
    template: function (e, t) {
      e & 1 && W(0, "router-outlet");
    },
    dependencies: [Hs],
  });
};
var xm = (() => {
    class n {
      constructor(e, t) {
        (this._renderer = e),
          (this._elementRef = t),
          (this.onChange = (o) => {}),
          (this.onTouched = () => {});
      }
      setProperty(e, t) {
        this._renderer.setProperty(this._elementRef.nativeElement, e, t);
      }
      registerOnTouched(e) {
        this.onTouched = e;
      }
      registerOnChange(e) {
        this.onChange = e;
      }
      setDisabledState(e) {
        this.setProperty("disabled", e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(yi), j(Ne));
        };
      }
      static {
        this.ɵdir = Pe({ type: n });
      }
    }
    return n;
  })(),
  vd = (() => {
    class n extends xm {
      static {
        this.ɵfac = (() => {
          let e;
          return function (o) {
            return (e || (e = gt(n)))(o || n);
          };
        })();
      }
      static {
        this.ɵdir = Pe({ type: n, features: [qe] });
      }
    }
    return n;
  })(),
  Yo = new Ze("");
var Xb = { provide: Yo, useExisting: di(() => ni), multi: !0 };
function Zb() {
  let n = md() ? md().getUserAgent() : "";
  return /android (\d+)/.test(n.toLowerCase());
}
var Jb = new Ze(""),
  ni = (() => {
    class n extends xm {
      constructor(e, t, o) {
        super(e, t),
          (this._compositionMode = o),
          (this._composing = !1),
          this._compositionMode == null && (this._compositionMode = !Zb());
      }
      writeValue(e) {
        let t = e ?? "";
        this.setProperty("value", t);
      }
      _handleInput(e) {
        (!this._compositionMode ||
          (this._compositionMode && !this._composing)) &&
          this.onChange(e);
      }
      _compositionStart() {
        this._composing = !0;
      }
      _compositionEnd(e) {
        (this._composing = !1), this._compositionMode && this.onChange(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(yi), j(Ne), j(Jb, 8));
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["input", "formControlName", "", 3, "type", "checkbox"],
            ["textarea", "formControlName", ""],
            ["input", "formControl", "", 3, "type", "checkbox"],
            ["textarea", "formControl", ""],
            ["input", "ngModel", "", 3, "type", "checkbox"],
            ["textarea", "ngModel", ""],
            ["", "ngDefaultControl", ""],
          ],
          hostBindings: function (t, o) {
            t & 1 &&
              z("input", function (a) {
                return o._handleInput(a.target.value);
              })("blur", function () {
                return o.onTouched();
              })("compositionstart", function () {
                return o._compositionStart();
              })("compositionend", function (a) {
                return o._compositionEnd(a.target.value);
              });
          },
          features: [Ot([Xb]), qe],
        });
      }
    }
    return n;
  })();
function _o(n) {
  return (
    n == null || ((typeof n == "string" || Array.isArray(n)) && n.length === 0)
  );
}
function Cm(n) {
  return n != null && typeof n.length == "number";
}
var qo = new Ze(""),
  Zs = new Ze(""),
  ev =
    /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
  Oe = class {
    static min(i) {
      return tv(i);
    }
    static max(i) {
      return iv(i);
    }
    static required(i) {
      return wm(i);
    }
    static requiredTrue(i) {
      return nv(i);
    }
    static email(i) {
      return Dm(i);
    }
    static minLength(i) {
      return ov(i);
    }
    static maxLength(i) {
      return Sm(i);
    }
    static pattern(i) {
      return rv(i);
    }
    static nullValidator(i) {
      return Us(i);
    }
    static compose(i) {
      return Im(i);
    }
    static composeAsync(i) {
      return Pm(i);
    }
  };
function tv(n) {
  return (i) => {
    if (_o(i.value) || _o(n)) return null;
    let e = parseFloat(i.value);
    return !isNaN(e) && e < n ? { min: { min: n, actual: i.value } } : null;
  };
}
function iv(n) {
  return (i) => {
    if (_o(i.value) || _o(n)) return null;
    let e = parseFloat(i.value);
    return !isNaN(e) && e > n ? { max: { max: n, actual: i.value } } : null;
  };
}
function wm(n) {
  return _o(n.value) ? { required: !0 } : null;
}
function nv(n) {
  return n.value === !0 ? null : { required: !0 };
}
function Dm(n) {
  return _o(n.value) || ev.test(n.value) ? null : { email: !0 };
}
function ov(n) {
  return (i) =>
    _o(i.value) || !Cm(i.value)
      ? null
      : i.value.length < n
      ? { minlength: { requiredLength: n, actualLength: i.value.length } }
      : null;
}
function Sm(n) {
  return (i) =>
    Cm(i.value) && i.value.length > n
      ? { maxlength: { requiredLength: n, actualLength: i.value.length } }
      : null;
}
function rv(n) {
  if (!n) return Us;
  let i, e;
  return (
    typeof n == "string"
      ? ((e = ""),
        n.charAt(0) !== "^" && (e += "^"),
        (e += n),
        n.charAt(n.length - 1) !== "$" && (e += "$"),
        (i = new RegExp(e)))
      : ((e = n.toString()), (i = n)),
    (t) => {
      if (_o(t.value)) return null;
      let o = t.value;
      return i.test(o)
        ? null
        : { pattern: { requiredPattern: e, actualValue: o } };
    }
  );
}
function Us(n) {
  return null;
}
function Mm(n) {
  return n != null;
}
function Em(n) {
  return im(n) ? Hp(n) : n;
}
function Tm(n) {
  let i = {};
  return (
    n.forEach((e) => {
      i = e != null ? se(se({}, i), e) : i;
    }),
    Object.keys(i).length === 0 ? null : i
  );
}
function km(n, i) {
  return i.map((e) => e(n));
}
function av(n) {
  return !n.validate;
}
function Om(n) {
  return n.map((i) => (av(i) ? i : (e) => i.validate(e)));
}
function Im(n) {
  if (!n) return null;
  let i = n.filter(Mm);
  return i.length == 0
    ? null
    : function (e) {
        return Tm(km(e, i));
      };
}
function yd(n) {
  return n != null ? Im(Om(n)) : null;
}
function Pm(n) {
  if (!n) return null;
  let i = n.filter(Mm);
  return i.length == 0
    ? null
    : function (e) {
        let t = km(e, i).map(Em);
        return zp(t).pipe(qn(Tm));
      };
}
function xd(n) {
  return n != null ? Pm(Om(n)) : null;
}
function pm(n, i) {
  return n === null ? [i] : Array.isArray(n) ? [...n, i] : [n, i];
}
function Am(n) {
  return n._rawValidators;
}
function Rm(n) {
  return n._rawAsyncValidators;
}
function gd(n) {
  return n ? (Array.isArray(n) ? n : [n]) : [];
}
function Ws(n, i) {
  return Array.isArray(n) ? n.includes(i) : n === i;
}
function mm(n, i) {
  let e = gd(i);
  return (
    gd(n).forEach((o) => {
      Ws(e, o) || e.push(o);
    }),
    e
  );
}
function fm(n, i) {
  return gd(i).filter((e) => !Ws(n, e));
}
var $s = class {
    constructor() {
      (this._rawValidators = []),
        (this._rawAsyncValidators = []),
        (this._onDestroyCallbacks = []);
    }
    get value() {
      return this.control ? this.control.value : null;
    }
    get valid() {
      return this.control ? this.control.valid : null;
    }
    get invalid() {
      return this.control ? this.control.invalid : null;
    }
    get pending() {
      return this.control ? this.control.pending : null;
    }
    get disabled() {
      return this.control ? this.control.disabled : null;
    }
    get enabled() {
      return this.control ? this.control.enabled : null;
    }
    get errors() {
      return this.control ? this.control.errors : null;
    }
    get pristine() {
      return this.control ? this.control.pristine : null;
    }
    get dirty() {
      return this.control ? this.control.dirty : null;
    }
    get touched() {
      return this.control ? this.control.touched : null;
    }
    get status() {
      return this.control ? this.control.status : null;
    }
    get untouched() {
      return this.control ? this.control.untouched : null;
    }
    get statusChanges() {
      return this.control ? this.control.statusChanges : null;
    }
    get valueChanges() {
      return this.control ? this.control.valueChanges : null;
    }
    get path() {
      return null;
    }
    _setValidators(i) {
      (this._rawValidators = i || []),
        (this._composedValidatorFn = yd(this._rawValidators));
    }
    _setAsyncValidators(i) {
      (this._rawAsyncValidators = i || []),
        (this._composedAsyncValidatorFn = xd(this._rawAsyncValidators));
    }
    get validator() {
      return this._composedValidatorFn || null;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn || null;
    }
    _registerOnDestroy(i) {
      this._onDestroyCallbacks.push(i);
    }
    _invokeOnDestroyCallbacks() {
      this._onDestroyCallbacks.forEach((i) => i()),
        (this._onDestroyCallbacks = []);
    }
    reset(i = void 0) {
      this.control && this.control.reset(i);
    }
    hasError(i, e) {
      return this.control ? this.control.hasError(i, e) : !1;
    }
    getError(i, e) {
      return this.control ? this.control.getError(i, e) : null;
    }
  },
  Zn = class extends $s {
    get formDirective() {
      return null;
    }
    get path() {
      return null;
    }
  },
  Go = class extends $s {
    constructor() {
      super(...arguments),
        (this._parent = null),
        (this.name = null),
        (this.valueAccessor = null);
    }
  },
  Gs = class {
    constructor(i) {
      this._cd = i;
    }
    get isTouched() {
      return this._cd?.control?._touched?.(), !!this._cd?.control?.touched;
    }
    get isUntouched() {
      return !!this._cd?.control?.untouched;
    }
    get isPristine() {
      return this._cd?.control?._pristine?.(), !!this._cd?.control?.pristine;
    }
    get isDirty() {
      return !!this._cd?.control?.dirty;
    }
    get isValid() {
      return this._cd?.control?._status?.(), !!this._cd?.control?.valid;
    }
    get isInvalid() {
      return !!this._cd?.control?.invalid;
    }
    get isPending() {
      return !!this._cd?.control?.pending;
    }
    get isSubmitted() {
      return this._cd?._submitted?.(), !!this._cd?.submitted;
    }
  },
  sv = {
    "[class.ng-untouched]": "isUntouched",
    "[class.ng-touched]": "isTouched",
    "[class.ng-pristine]": "isPristine",
    "[class.ng-dirty]": "isDirty",
    "[class.ng-valid]": "isValid",
    "[class.ng-invalid]": "isInvalid",
    "[class.ng-pending]": "isPending",
  },
  jO = at(se({}, sv), { "[class.ng-submitted]": "isSubmitted" }),
  hi = (() => {
    class n extends Gs {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Go, 2));
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["", "formControlName", ""],
            ["", "ngModel", ""],
            ["", "formControl", ""],
          ],
          hostVars: 14,
          hostBindings: function (t, o) {
            t & 2 &&
              Ce("ng-untouched", o.isUntouched)("ng-touched", o.isTouched)(
                "ng-pristine",
                o.isPristine
              )("ng-dirty", o.isDirty)("ng-valid", o.isValid)(
                "ng-invalid",
                o.isInvalid
              )("ng-pending", o.isPending);
          },
          features: [qe],
        });
      }
    }
    return n;
  })(),
  Oi = (() => {
    class n extends Gs {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Zn, 10));
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["", "formGroupName", ""],
            ["", "formArrayName", ""],
            ["", "ngModelGroup", ""],
            ["", "formGroup", ""],
            ["form", 3, "ngNoForm", ""],
            ["", "ngForm", ""],
          ],
          hostVars: 16,
          hostBindings: function (t, o) {
            t & 2 &&
              Ce("ng-untouched", o.isUntouched)("ng-touched", o.isTouched)(
                "ng-pristine",
                o.isPristine
              )("ng-dirty", o.isDirty)("ng-valid", o.isValid)(
                "ng-invalid",
                o.isInvalid
              )("ng-pending", o.isPending)("ng-submitted", o.isSubmitted);
          },
          features: [qe],
        });
      }
    }
    return n;
  })();
var Sa = "VALID",
  zs = "INVALID",
  kr = "PENDING",
  Ma = "DISABLED",
  bo = class {},
  Ys = class extends bo {
    constructor(i, e) {
      super(), (this.value = i), (this.source = e);
    }
  },
  Ta = class extends bo {
    constructor(i, e) {
      super(), (this.pristine = i), (this.source = e);
    }
  },
  ka = class extends bo {
    constructor(i, e) {
      super(), (this.touched = i), (this.source = e);
    }
  },
  Or = class extends bo {
    constructor(i, e) {
      super(), (this.status = i), (this.source = e);
    }
  },
  _d = class extends bo {
    constructor(i) {
      super(), (this.source = i);
    }
  },
  bd = class extends bo {
    constructor(i) {
      super(), (this.source = i);
    }
  };
function Fm(n) {
  return (Js(n) ? n.validators : n) || null;
}
function lv(n) {
  return Array.isArray(n) ? yd(n) : n || null;
}
function Nm(n, i) {
  return (Js(i) ? i.asyncValidators : n) || null;
}
function cv(n) {
  return Array.isArray(n) ? xd(n) : n || null;
}
function Js(n) {
  return n != null && !Array.isArray(n) && typeof n == "object";
}
function dv(n, i, e) {
  let t = n.controls;
  if (!(i ? Object.keys(t) : t).length) throw new wr(1e3, "");
  if (!t[e]) throw new wr(1001, "");
}
function uv(n, i, e) {
  n._forEachChild((t, o) => {
    if (e[o] === void 0) throw new wr(1002, "");
  });
}
var qs = class {
    constructor(i, e) {
      (this._pendingDirty = !1),
        (this._hasOwnPendingAsyncValidator = null),
        (this._pendingTouched = !1),
        (this._onCollectionChange = () => {}),
        (this._parent = null),
        (this._status = Wo(() => this.statusReactive())),
        (this.statusReactive = pe(void 0)),
        (this._pristine = Wo(() => this.pristineReactive())),
        (this.pristineReactive = pe(!0)),
        (this._touched = Wo(() => this.touchedReactive())),
        (this.touchedReactive = pe(!1)),
        (this._events = new Ae()),
        (this.events = this._events.asObservable()),
        (this._onDisabledChange = []),
        this._assignValidators(i),
        this._assignAsyncValidators(e);
    }
    get validator() {
      return this._composedValidatorFn;
    }
    set validator(i) {
      this._rawValidators = this._composedValidatorFn = i;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn;
    }
    set asyncValidator(i) {
      this._rawAsyncValidators = this._composedAsyncValidatorFn = i;
    }
    get parent() {
      return this._parent;
    }
    get status() {
      return pn(this.statusReactive);
    }
    set status(i) {
      pn(() => this.statusReactive.set(i));
    }
    get valid() {
      return this.status === Sa;
    }
    get invalid() {
      return this.status === zs;
    }
    get pending() {
      return this.status == kr;
    }
    get disabled() {
      return this.status === Ma;
    }
    get enabled() {
      return this.status !== Ma;
    }
    get pristine() {
      return pn(this.pristineReactive);
    }
    set pristine(i) {
      pn(() => this.pristineReactive.set(i));
    }
    get dirty() {
      return !this.pristine;
    }
    get touched() {
      return pn(this.touchedReactive);
    }
    set touched(i) {
      pn(() => this.touchedReactive.set(i));
    }
    get untouched() {
      return !this.touched;
    }
    get updateOn() {
      return this._updateOn
        ? this._updateOn
        : this.parent
        ? this.parent.updateOn
        : "change";
    }
    setValidators(i) {
      this._assignValidators(i);
    }
    setAsyncValidators(i) {
      this._assignAsyncValidators(i);
    }
    addValidators(i) {
      this.setValidators(mm(i, this._rawValidators));
    }
    addAsyncValidators(i) {
      this.setAsyncValidators(mm(i, this._rawAsyncValidators));
    }
    removeValidators(i) {
      this.setValidators(fm(i, this._rawValidators));
    }
    removeAsyncValidators(i) {
      this.setAsyncValidators(fm(i, this._rawAsyncValidators));
    }
    hasValidator(i) {
      return Ws(this._rawValidators, i);
    }
    hasAsyncValidator(i) {
      return Ws(this._rawAsyncValidators, i);
    }
    clearValidators() {
      this.validator = null;
    }
    clearAsyncValidators() {
      this.asyncValidator = null;
    }
    markAsTouched(i = {}) {
      let e = this.touched === !1;
      this.touched = !0;
      let t = i.sourceControl ?? this;
      this._parent &&
        !i.onlySelf &&
        this._parent.markAsTouched(at(se({}, i), { sourceControl: t })),
        e && i.emitEvent !== !1 && this._events.next(new ka(!0, t));
    }
    markAllAsTouched(i = {}) {
      this.markAsTouched({
        onlySelf: !0,
        emitEvent: i.emitEvent,
        sourceControl: this,
      }),
        this._forEachChild((e) => e.markAllAsTouched(i));
    }
    markAsUntouched(i = {}) {
      let e = this.touched === !0;
      (this.touched = !1), (this._pendingTouched = !1);
      let t = i.sourceControl ?? this;
      this._forEachChild((o) => {
        o.markAsUntouched({
          onlySelf: !0,
          emitEvent: i.emitEvent,
          sourceControl: t,
        });
      }),
        this._parent && !i.onlySelf && this._parent._updateTouched(i, t),
        e && i.emitEvent !== !1 && this._events.next(new ka(!1, t));
    }
    markAsDirty(i = {}) {
      let e = this.pristine === !0;
      this.pristine = !1;
      let t = i.sourceControl ?? this;
      this._parent &&
        !i.onlySelf &&
        this._parent.markAsDirty(at(se({}, i), { sourceControl: t })),
        e && i.emitEvent !== !1 && this._events.next(new Ta(!1, t));
    }
    markAsPristine(i = {}) {
      let e = this.pristine === !1;
      (this.pristine = !0), (this._pendingDirty = !1);
      let t = i.sourceControl ?? this;
      this._forEachChild((o) => {
        o.markAsPristine({ onlySelf: !0, emitEvent: i.emitEvent });
      }),
        this._parent && !i.onlySelf && this._parent._updatePristine(i, t),
        e && i.emitEvent !== !1 && this._events.next(new Ta(!0, t));
    }
    markAsPending(i = {}) {
      this.status = kr;
      let e = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new Or(this.status, e)),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !i.onlySelf &&
          this._parent.markAsPending(at(se({}, i), { sourceControl: e }));
    }
    disable(i = {}) {
      let e = this._parentMarkedDirty(i.onlySelf);
      (this.status = Ma),
        (this.errors = null),
        this._forEachChild((o) => {
          o.disable(at(se({}, i), { onlySelf: !0 }));
        }),
        this._updateValue();
      let t = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new Ys(this.value, t)),
        this._events.next(new Or(this.status, t)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._updateAncestors(at(se({}, i), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((o) => o(!0));
    }
    enable(i = {}) {
      let e = this._parentMarkedDirty(i.onlySelf);
      (this.status = Sa),
        this._forEachChild((t) => {
          t.enable(at(se({}, i), { onlySelf: !0 }));
        }),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: i.emitEvent }),
        this._updateAncestors(at(se({}, i), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((t) => t(!1));
    }
    _updateAncestors(i, e) {
      this._parent &&
        !i.onlySelf &&
        (this._parent.updateValueAndValidity(i),
        i.skipPristineCheck || this._parent._updatePristine({}, e),
        this._parent._updateTouched({}, e));
    }
    setParent(i) {
      this._parent = i;
    }
    getRawValue() {
      return this.value;
    }
    updateValueAndValidity(i = {}) {
      if ((this._setInitialStatus(), this._updateValue(), this.enabled)) {
        let t = this._cancelExistingSubscription();
        (this.errors = this._runValidator()),
          (this.status = this._calculateStatus()),
          (this.status === Sa || this.status === kr) &&
            this._runAsyncValidator(t, i.emitEvent);
      }
      let e = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new Ys(this.value, e)),
        this._events.next(new Or(this.status, e)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !i.onlySelf &&
          this._parent.updateValueAndValidity(
            at(se({}, i), { sourceControl: e })
          );
    }
    _updateTreeValidity(i = { emitEvent: !0 }) {
      this._forEachChild((e) => e._updateTreeValidity(i)),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: i.emitEvent });
    }
    _setInitialStatus() {
      this.status = this._allControlsDisabled() ? Ma : Sa;
    }
    _runValidator() {
      return this.validator ? this.validator(this) : null;
    }
    _runAsyncValidator(i, e) {
      if (this.asyncValidator) {
        (this.status = kr),
          (this._hasOwnPendingAsyncValidator = { emitEvent: e !== !1 });
        let t = Em(this.asyncValidator(this));
        this._asyncValidationSubscription = t.subscribe((o) => {
          (this._hasOwnPendingAsyncValidator = null),
            this.setErrors(o, { emitEvent: e, shouldHaveEmitted: i });
        });
      }
    }
    _cancelExistingSubscription() {
      if (this._asyncValidationSubscription) {
        this._asyncValidationSubscription.unsubscribe();
        let i = this._hasOwnPendingAsyncValidator?.emitEvent ?? !1;
        return (this._hasOwnPendingAsyncValidator = null), i;
      }
      return !1;
    }
    setErrors(i, e = {}) {
      (this.errors = i),
        this._updateControlsErrors(
          e.emitEvent !== !1,
          this,
          e.shouldHaveEmitted
        );
    }
    get(i) {
      let e = i;
      return e == null ||
        (Array.isArray(e) || (e = e.split(".")), e.length === 0)
        ? null
        : e.reduce((t, o) => t && t._find(o), this);
    }
    getError(i, e) {
      let t = e ? this.get(e) : this;
      return t && t.errors ? t.errors[i] : null;
    }
    hasError(i, e) {
      return !!this.getError(i, e);
    }
    get root() {
      let i = this;
      for (; i._parent; ) i = i._parent;
      return i;
    }
    _updateControlsErrors(i, e, t) {
      (this.status = this._calculateStatus()),
        i && this.statusChanges.emit(this.status),
        (i || t) && this._events.next(new Or(this.status, e)),
        this._parent && this._parent._updateControlsErrors(i, e, t);
    }
    _initObservables() {
      (this.valueChanges = new Se()), (this.statusChanges = new Se());
    }
    _calculateStatus() {
      return this._allControlsDisabled()
        ? Ma
        : this.errors
        ? zs
        : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(kr)
        ? kr
        : this._anyControlsHaveStatus(zs)
        ? zs
        : Sa;
    }
    _anyControlsHaveStatus(i) {
      return this._anyControls((e) => e.status === i);
    }
    _anyControlsDirty() {
      return this._anyControls((i) => i.dirty);
    }
    _anyControlsTouched() {
      return this._anyControls((i) => i.touched);
    }
    _updatePristine(i, e) {
      let t = !this._anyControlsDirty(),
        o = this.pristine !== t;
      (this.pristine = t),
        this._parent && !i.onlySelf && this._parent._updatePristine(i, e),
        o && this._events.next(new Ta(this.pristine, e));
    }
    _updateTouched(i = {}, e) {
      (this.touched = this._anyControlsTouched()),
        this._events.next(new ka(this.touched, e)),
        this._parent && !i.onlySelf && this._parent._updateTouched(i, e);
    }
    _registerOnCollectionChange(i) {
      this._onCollectionChange = i;
    }
    _setUpdateStrategy(i) {
      Js(i) && i.updateOn != null && (this._updateOn = i.updateOn);
    }
    _parentMarkedDirty(i) {
      let e = this._parent && this._parent.dirty;
      return !i && !!e && !this._parent._anyControlsDirty();
    }
    _find(i) {
      return null;
    }
    _assignValidators(i) {
      (this._rawValidators = Array.isArray(i) ? i.slice() : i),
        (this._composedValidatorFn = lv(this._rawValidators));
    }
    _assignAsyncValidators(i) {
      (this._rawAsyncValidators = Array.isArray(i) ? i.slice() : i),
        (this._composedAsyncValidatorFn = cv(this._rawAsyncValidators));
    }
  },
  St = class extends qs {
    constructor(i, e, t) {
      super(Fm(e), Nm(t, e)),
        (this.controls = i),
        this._initObservables(),
        this._setUpdateStrategy(e),
        this._setUpControls(),
        this.updateValueAndValidity({
          onlySelf: !0,
          emitEvent: !!this.asyncValidator,
        });
    }
    registerControl(i, e) {
      return this.controls[i]
        ? this.controls[i]
        : ((this.controls[i] = e),
          e.setParent(this),
          e._registerOnCollectionChange(this._onCollectionChange),
          e);
    }
    addControl(i, e, t = {}) {
      this.registerControl(i, e),
        this.updateValueAndValidity({ emitEvent: t.emitEvent }),
        this._onCollectionChange();
    }
    removeControl(i, e = {}) {
      this.controls[i] &&
        this.controls[i]._registerOnCollectionChange(() => {}),
        delete this.controls[i],
        this.updateValueAndValidity({ emitEvent: e.emitEvent }),
        this._onCollectionChange();
    }
    setControl(i, e, t = {}) {
      this.controls[i] &&
        this.controls[i]._registerOnCollectionChange(() => {}),
        delete this.controls[i],
        e && this.registerControl(i, e),
        this.updateValueAndValidity({ emitEvent: t.emitEvent }),
        this._onCollectionChange();
    }
    contains(i) {
      return this.controls.hasOwnProperty(i) && this.controls[i].enabled;
    }
    setValue(i, e = {}) {
      uv(this, !0, i),
        Object.keys(i).forEach((t) => {
          dv(this, !0, t),
            this.controls[t].setValue(i[t], {
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }),
        this.updateValueAndValidity(e);
    }
    patchValue(i, e = {}) {
      i != null &&
        (Object.keys(i).forEach((t) => {
          let o = this.controls[t];
          o && o.patchValue(i[t], { onlySelf: !0, emitEvent: e.emitEvent });
        }),
        this.updateValueAndValidity(e));
    }
    reset(i = {}, e = {}) {
      this._forEachChild((t, o) => {
        t.reset(i ? i[o] : null, { onlySelf: !0, emitEvent: e.emitEvent });
      }),
        this._updatePristine(e, this),
        this._updateTouched(e, this),
        this.updateValueAndValidity(e);
    }
    getRawValue() {
      return this._reduceChildren(
        {},
        (i, e, t) => ((i[t] = e.getRawValue()), i)
      );
    }
    _syncPendingControls() {
      let i = this._reduceChildren(!1, (e, t) =>
        t._syncPendingControls() ? !0 : e
      );
      return i && this.updateValueAndValidity({ onlySelf: !0 }), i;
    }
    _forEachChild(i) {
      Object.keys(this.controls).forEach((e) => {
        let t = this.controls[e];
        t && i(t, e);
      });
    }
    _setUpControls() {
      this._forEachChild((i) => {
        i.setParent(this),
          i._registerOnCollectionChange(this._onCollectionChange);
      });
    }
    _updateValue() {
      this.value = this._reduceValue();
    }
    _anyControls(i) {
      for (let [e, t] of Object.entries(this.controls))
        if (this.contains(e) && i(t)) return !0;
      return !1;
    }
    _reduceValue() {
      let i = {};
      return this._reduceChildren(
        i,
        (e, t, o) => ((t.enabled || this.disabled) && (e[o] = t.value), e)
      );
    }
    _reduceChildren(i, e) {
      let t = i;
      return (
        this._forEachChild((o, r) => {
          t = e(t, o, r);
        }),
        t
      );
    }
    _allControlsDisabled() {
      for (let i of Object.keys(this.controls))
        if (this.controls[i].enabled) return !1;
      return Object.keys(this.controls).length > 0 || this.disabled;
    }
    _find(i) {
      return this.controls.hasOwnProperty(i) ? this.controls[i] : null;
    }
  };
var Oa = new Ze("CallSetDisabledState", {
    providedIn: "root",
    factory: () => el,
  }),
  el = "always";
function Vm(n, i) {
  return [...i.path, n];
}
function Ks(n, i, e = el) {
  Cd(n, i),
    i.valueAccessor.writeValue(n.value),
    (n.disabled || e === "always") &&
      i.valueAccessor.setDisabledState?.(n.disabled),
    pv(n, i),
    fv(n, i),
    mv(n, i),
    hv(n, i);
}
function gm(n, i, e = !0) {
  let t = () => {};
  i.valueAccessor &&
    (i.valueAccessor.registerOnChange(t), i.valueAccessor.registerOnTouched(t)),
    Xs(n, i),
    n &&
      (i._invokeOnDestroyCallbacks(), n._registerOnCollectionChange(() => {}));
}
function Qs(n, i) {
  n.forEach((e) => {
    e.registerOnValidatorChange && e.registerOnValidatorChange(i);
  });
}
function hv(n, i) {
  if (i.valueAccessor.setDisabledState) {
    let e = (t) => {
      i.valueAccessor.setDisabledState(t);
    };
    n.registerOnDisabledChange(e),
      i._registerOnDestroy(() => {
        n._unregisterOnDisabledChange(e);
      });
  }
}
function Cd(n, i) {
  let e = Am(n);
  i.validator !== null
    ? n.setValidators(pm(e, i.validator))
    : typeof e == "function" && n.setValidators([e]);
  let t = Rm(n);
  i.asyncValidator !== null
    ? n.setAsyncValidators(pm(t, i.asyncValidator))
    : typeof t == "function" && n.setAsyncValidators([t]);
  let o = () => n.updateValueAndValidity();
  Qs(i._rawValidators, o), Qs(i._rawAsyncValidators, o);
}
function Xs(n, i) {
  let e = !1;
  if (n !== null) {
    if (i.validator !== null) {
      let o = Am(n);
      if (Array.isArray(o) && o.length > 0) {
        let r = o.filter((a) => a !== i.validator);
        r.length !== o.length && ((e = !0), n.setValidators(r));
      }
    }
    if (i.asyncValidator !== null) {
      let o = Rm(n);
      if (Array.isArray(o) && o.length > 0) {
        let r = o.filter((a) => a !== i.asyncValidator);
        r.length !== o.length && ((e = !0), n.setAsyncValidators(r));
      }
    }
  }
  let t = () => {};
  return Qs(i._rawValidators, t), Qs(i._rawAsyncValidators, t), e;
}
function pv(n, i) {
  i.valueAccessor.registerOnChange((e) => {
    (n._pendingValue = e),
      (n._pendingChange = !0),
      (n._pendingDirty = !0),
      n.updateOn === "change" && Lm(n, i);
  });
}
function mv(n, i) {
  i.valueAccessor.registerOnTouched(() => {
    (n._pendingTouched = !0),
      n.updateOn === "blur" && n._pendingChange && Lm(n, i),
      n.updateOn !== "submit" && n.markAsTouched();
  });
}
function Lm(n, i) {
  n._pendingDirty && n.markAsDirty(),
    n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
    i.viewToModelUpdate(n._pendingValue),
    (n._pendingChange = !1);
}
function fv(n, i) {
  let e = (t, o) => {
    i.valueAccessor.writeValue(t), o && i.viewToModelUpdate(t);
  };
  n.registerOnChange(e),
    i._registerOnDestroy(() => {
      n._unregisterOnChange(e);
    });
}
function Bm(n, i) {
  n == null, Cd(n, i);
}
function gv(n, i) {
  return Xs(n, i);
}
function Hm(n, i) {
  if (!n.hasOwnProperty("model")) return !1;
  let e = n.model;
  return e.isFirstChange() ? !0 : !Object.is(i, e.currentValue);
}
function _v(n) {
  return Object.getPrototypeOf(n.constructor) === vd;
}
function jm(n, i) {
  n._syncPendingControls(),
    i.forEach((e) => {
      let t = e.control;
      t.updateOn === "submit" &&
        t._pendingChange &&
        (e.viewToModelUpdate(t._pendingValue), (t._pendingChange = !1));
    });
}
function zm(n, i) {
  if (!i) return null;
  Array.isArray(i);
  let e, t, o;
  return (
    i.forEach((r) => {
      r.constructor === ni ? (e = r) : _v(r) ? (t = r) : (o = r);
    }),
    o || t || e || null
  );
}
function bv(n, i) {
  let e = n.indexOf(i);
  e > -1 && n.splice(e, 1);
}
var vv = { provide: Zn, useExisting: di(() => wd) },
  Ea = Promise.resolve(),
  wd = (() => {
    class n extends Zn {
      get submitted() {
        return pn(this.submittedReactive);
      }
      constructor(e, t, o) {
        super(),
          (this.callSetDisabledState = o),
          (this._submitted = Wo(() => this.submittedReactive())),
          (this.submittedReactive = pe(!1)),
          (this._directives = new Set()),
          (this.ngSubmit = new Se()),
          (this.form = new St({}, yd(e), xd(t)));
      }
      ngAfterViewInit() {
        this._setUpdateStrategy();
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      get controls() {
        return this.form.controls;
      }
      addControl(e) {
        Ea.then(() => {
          let t = this._findContainer(e.path);
          (e.control = t.registerControl(e.name, e.control)),
            Ks(e.control, e, this.callSetDisabledState),
            e.control.updateValueAndValidity({ emitEvent: !1 }),
            this._directives.add(e);
        });
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        Ea.then(() => {
          let t = this._findContainer(e.path);
          t && t.removeControl(e.name), this._directives.delete(e);
        });
      }
      addFormGroup(e) {
        Ea.then(() => {
          let t = this._findContainer(e.path),
            o = new St({});
          Bm(o, e),
            t.registerControl(e.name, o),
            o.updateValueAndValidity({ emitEvent: !1 });
        });
      }
      removeFormGroup(e) {
        Ea.then(() => {
          let t = this._findContainer(e.path);
          t && t.removeControl(e.name);
        });
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      updateModel(e, t) {
        Ea.then(() => {
          this.form.get(e.path).setValue(t);
        });
      }
      setValue(e) {
        this.control.setValue(e);
      }
      onSubmit(e) {
        return (
          this.submittedReactive.set(!0),
          jm(this.form, this._directives),
          this.ngSubmit.emit(e),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e), this.submittedReactive.set(!1);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.form._updateOn = this.options.updateOn);
      }
      _findContainer(e) {
        return e.pop(), e.length ? this.form.get(e) : this.form;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(qo, 10), j(Zs, 10), j(Oa, 8));
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
            ["ng-form"],
            ["", "ngForm", ""],
          ],
          hostBindings: function (t, o) {
            t & 1 &&
              z("submit", function (a) {
                return o.onSubmit(a);
              })("reset", function () {
                return o.onReset();
              });
          },
          inputs: { options: [0, "ngFormOptions", "options"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [Ot([vv]), qe],
        });
      }
    }
    return n;
  })();
function _m(n, i) {
  let e = n.indexOf(i);
  e > -1 && n.splice(e, 1);
}
function bm(n) {
  return (
    typeof n == "object" &&
    n !== null &&
    Object.keys(n).length === 2 &&
    "value" in n &&
    "disabled" in n
  );
}
var nt = class extends qs {
  constructor(i = null, e, t) {
    super(Fm(e), Nm(t, e)),
      (this.defaultValue = null),
      (this._onChange = []),
      (this._pendingChange = !1),
      this._applyFormState(i),
      this._setUpdateStrategy(e),
      this._initObservables(),
      this.updateValueAndValidity({
        onlySelf: !0,
        emitEvent: !!this.asyncValidator,
      }),
      Js(e) &&
        (e.nonNullable || e.initialValueIsDefault) &&
        (bm(i) ? (this.defaultValue = i.value) : (this.defaultValue = i));
  }
  setValue(i, e = {}) {
    (this.value = this._pendingValue = i),
      this._onChange.length &&
        e.emitModelToViewChange !== !1 &&
        this._onChange.forEach((t) =>
          t(this.value, e.emitViewToModelChange !== !1)
        ),
      this.updateValueAndValidity(e);
  }
  patchValue(i, e = {}) {
    this.setValue(i, e);
  }
  reset(i = this.defaultValue, e = {}) {
    this._applyFormState(i),
      this.markAsPristine(e),
      this.markAsUntouched(e),
      this.setValue(this.value, e),
      (this._pendingChange = !1);
  }
  _updateValue() {}
  _anyControls(i) {
    return !1;
  }
  _allControlsDisabled() {
    return this.disabled;
  }
  registerOnChange(i) {
    this._onChange.push(i);
  }
  _unregisterOnChange(i) {
    _m(this._onChange, i);
  }
  registerOnDisabledChange(i) {
    this._onDisabledChange.push(i);
  }
  _unregisterOnDisabledChange(i) {
    _m(this._onDisabledChange, i);
  }
  _forEachChild(i) {}
  _syncPendingControls() {
    return this.updateOn === "submit" &&
      (this._pendingDirty && this.markAsDirty(),
      this._pendingTouched && this.markAsTouched(),
      this._pendingChange)
      ? (this.setValue(this._pendingValue, {
          onlySelf: !0,
          emitModelToViewChange: !1,
        }),
        !0)
      : !1;
  }
  _applyFormState(i) {
    bm(i)
      ? ((this.value = this._pendingValue = i.value),
        i.disabled
          ? this.disable({ onlySelf: !0, emitEvent: !1 })
          : this.enable({ onlySelf: !0, emitEvent: !1 }))
      : (this.value = this._pendingValue = i);
  }
};
var yv = (n) => n instanceof nt;
var xv = { provide: Go, useExisting: di(() => Hi) },
  vm = Promise.resolve(),
  Hi = (() => {
    class n extends Go {
      constructor(e, t, o, r, a, s) {
        super(),
          (this._changeDetectorRef = a),
          (this.callSetDisabledState = s),
          (this.control = new nt()),
          (this._registered = !1),
          (this.name = ""),
          (this.update = new Se()),
          (this._parent = e),
          this._setValidators(t),
          this._setAsyncValidators(o),
          (this.valueAccessor = zm(this, r));
      }
      ngOnChanges(e) {
        if ((this._checkForErrors(), !this._registered || "name" in e)) {
          if (this._registered && (this._checkName(), this.formDirective)) {
            let t = e.name.previousValue;
            this.formDirective.removeControl({
              name: t,
              path: this._getPath(t),
            });
          }
          this._setUpControl();
        }
        "isDisabled" in e && this._updateDisabled(e),
          Hm(e, this.viewModel) &&
            (this._updateValue(this.model), (this.viewModel = this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      get path() {
        return this._getPath(this.name);
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      _setUpControl() {
        this._setUpdateStrategy(),
          this._isStandalone()
            ? this._setUpStandalone()
            : this.formDirective.addControl(this),
          (this._registered = !0);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.control._updateOn = this.options.updateOn);
      }
      _isStandalone() {
        return !this._parent || !!(this.options && this.options.standalone);
      }
      _setUpStandalone() {
        Ks(this.control, this, this.callSetDisabledState),
          this.control.updateValueAndValidity({ emitEvent: !1 });
      }
      _checkForErrors() {
        this._isStandalone() || this._checkParentType(), this._checkName();
      }
      _checkParentType() {}
      _checkName() {
        this.options && this.options.name && (this.name = this.options.name),
          !this._isStandalone() && this.name;
      }
      _updateValue(e) {
        vm.then(() => {
          this.control.setValue(e, { emitViewToModelChange: !1 }),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _updateDisabled(e) {
        let t = e.isDisabled.currentValue,
          o = t !== 0 && Ee(t);
        vm.then(() => {
          o && !this.control.disabled
            ? this.control.disable()
            : !o && this.control.disabled && this.control.enable(),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _getPath(e) {
        return this._parent ? Vm(e, this._parent) : [e];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            j(Zn, 9),
            j(qo, 10),
            j(Zs, 10),
            j(Yo, 10),
            j(it, 8),
            j(Oa, 8)
          );
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""],
          ],
          inputs: {
            name: "name",
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
            options: [0, "ngModelOptions", "options"],
          },
          outputs: { update: "ngModelChange" },
          exportAs: ["ngModel"],
          features: [Ot([xv]), qe, zt],
        });
      }
    }
    return n;
  })(),
  vo = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]],
          hostAttrs: ["novalidate", ""],
        });
      }
    }
    return n;
  })();
var Um = new Ze("");
var Cv = { provide: Zn, useExisting: di(() => ji) },
  ji = (() => {
    class n extends Zn {
      get submitted() {
        return pn(this._submittedReactive);
      }
      set submitted(e) {
        this._submittedReactive.set(e);
      }
      constructor(e, t, o) {
        super(),
          (this.callSetDisabledState = o),
          (this._submitted = Wo(() => this._submittedReactive())),
          (this._submittedReactive = pe(!1)),
          (this._onCollectionChange = () => this._updateDomValue()),
          (this.directives = []),
          (this.form = null),
          (this.ngSubmit = new Se()),
          this._setValidators(e),
          this._setAsyncValidators(t);
      }
      ngOnChanges(e) {
        this._checkFormPresent(),
          e.hasOwnProperty("form") &&
            (this._updateValidators(),
            this._updateDomValue(),
            this._updateRegistrations(),
            (this._oldForm = this.form));
      }
      ngOnDestroy() {
        this.form &&
          (Xs(this.form, this),
          this.form._onCollectionChange === this._onCollectionChange &&
            this.form._registerOnCollectionChange(() => {}));
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      addControl(e) {
        let t = this.form.get(e.path);
        return (
          Ks(t, e, this.callSetDisabledState),
          t.updateValueAndValidity({ emitEvent: !1 }),
          this.directives.push(e),
          t
        );
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        gm(e.control || null, e, !1), bv(this.directives, e);
      }
      addFormGroup(e) {
        this._setUpFormContainer(e);
      }
      removeFormGroup(e) {
        this._cleanUpFormContainer(e);
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      addFormArray(e) {
        this._setUpFormContainer(e);
      }
      removeFormArray(e) {
        this._cleanUpFormContainer(e);
      }
      getFormArray(e) {
        return this.form.get(e.path);
      }
      updateModel(e, t) {
        this.form.get(e.path).setValue(t);
      }
      onSubmit(e) {
        return (
          this._submittedReactive.set(!0),
          jm(this.form, this.directives),
          this.ngSubmit.emit(e),
          this.form._events.next(new _d(this.control)),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e),
          this._submittedReactive.set(!1),
          this.form._events.next(new bd(this.form));
      }
      _updateDomValue() {
        this.directives.forEach((e) => {
          let t = e.control,
            o = this.form.get(e.path);
          t !== o &&
            (gm(t || null, e),
            yv(o) && (Ks(o, e, this.callSetDisabledState), (e.control = o)));
        }),
          this.form._updateTreeValidity({ emitEvent: !1 });
      }
      _setUpFormContainer(e) {
        let t = this.form.get(e.path);
        Bm(t, e), t.updateValueAndValidity({ emitEvent: !1 });
      }
      _cleanUpFormContainer(e) {
        if (this.form) {
          let t = this.form.get(e.path);
          t && gv(t, e) && t.updateValueAndValidity({ emitEvent: !1 });
        }
      }
      _updateRegistrations() {
        this.form._registerOnCollectionChange(this._onCollectionChange),
          this._oldForm && this._oldForm._registerOnCollectionChange(() => {});
      }
      _updateValidators() {
        Cd(this.form, this), this._oldForm && Xs(this._oldForm, this);
      }
      _checkFormPresent() {
        this.form;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(qo, 10), j(Zs, 10), j(Oa, 8));
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [["", "formGroup", ""]],
          hostBindings: function (t, o) {
            t & 1 &&
              z("submit", function (a) {
                return o.onSubmit(a);
              })("reset", function () {
                return o.onReset();
              });
          },
          inputs: { form: [0, "formGroup", "form"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [Ot([Cv]), qe, zt],
        });
      }
    }
    return n;
  })();
var wv = { provide: Go, useExisting: di(() => zi) },
  zi = (() => {
    class n extends Go {
      set isDisabled(e) {}
      static {
        this._ngModelWarningSentOnce = !1;
      }
      constructor(e, t, o, r, a) {
        super(),
          (this._ngModelWarningConfig = a),
          (this._added = !1),
          (this.name = null),
          (this.update = new Se()),
          (this._ngModelWarningSent = !1),
          (this._parent = e),
          this._setValidators(t),
          this._setAsyncValidators(o),
          (this.valueAccessor = zm(this, r));
      }
      ngOnChanges(e) {
        this._added || this._setUpControl(),
          Hm(e, this.viewModel) &&
            ((this.viewModel = this.model),
            this.formDirective.updateModel(this, this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      get path() {
        return Vm(
          this.name == null ? this.name : this.name.toString(),
          this._parent
        );
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      _checkParentType() {}
      _setUpControl() {
        this._checkParentType(),
          (this.control = this.formDirective.addControl(this)),
          (this._added = !0);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            j(Zn, 13),
            j(qo, 10),
            j(Zs, 10),
            j(Yo, 10),
            j(Um, 8)
          );
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [["", "formControlName", ""]],
          inputs: {
            name: [0, "formControlName", "name"],
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
          },
          outputs: { update: "ngModelChange" },
          features: [Ot([wv]), qe, zt],
        });
      }
    }
    return n;
  })(),
  Dv = { provide: Yo, useExisting: di(() => In), multi: !0 };
function Wm(n, i) {
  return n == null
    ? `${i}`
    : (i && typeof i == "object" && (i = "Object"), `${n}: ${i}`.slice(0, 50));
}
function Sv(n) {
  return n.split(":")[0];
}
var In = (() => {
    class n extends vd {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let t = this._getOptionId(e),
          o = Wm(t, e);
        this.setProperty("value", o);
      }
      registerOnChange(e) {
        this.onChange = (t) => {
          (this.value = this._getOptionValue(t)), e(this.value);
        };
      }
      _registerOption() {
        return (this._idCounter++).toString();
      }
      _getOptionId(e) {
        for (let t of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(t), e)) return t;
        return null;
      }
      _getOptionValue(e) {
        let t = Sv(e);
        return this._optionMap.has(t) ? this._optionMap.get(t) : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (o) {
            return (e || (e = gt(n)))(o || n);
          };
        })();
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["select", "formControlName", "", 3, "multiple", ""],
            ["select", "formControl", "", 3, "multiple", ""],
            ["select", "ngModel", "", 3, "multiple", ""],
          ],
          hostBindings: function (t, o) {
            t & 1 &&
              z("change", function (a) {
                return o.onChange(a.target.value);
              })("blur", function () {
                return o.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [Ot([Dv]), qe],
        });
      }
    }
    return n;
  })(),
  Ii = (() => {
    class n {
      constructor(e, t, o) {
        (this._element = e),
          (this._renderer = t),
          (this._select = o),
          this._select && (this.id = this._select._registerOption());
      }
      set ngValue(e) {
        this._select != null &&
          (this._select._optionMap.set(this.id, e),
          this._setElementValue(Wm(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._setElementValue(e),
          this._select && this._select.writeValue(this._select.value);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Ne), j(yi), j(In, 9));
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return n;
  })(),
  Mv = { provide: Yo, useExisting: di(() => $m), multi: !0 };
function ym(n, i) {
  return n == null
    ? `${i}`
    : (typeof i == "string" && (i = `'${i}'`),
      i && typeof i == "object" && (i = "Object"),
      `${n}: ${i}`.slice(0, 50));
}
function Ev(n) {
  return n.split(":")[0];
}
var $m = (() => {
    class n extends vd {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let t;
        if (Array.isArray(e)) {
          let o = e.map((r) => this._getOptionId(r));
          t = (r, a) => {
            r._setSelected(o.indexOf(a.toString()) > -1);
          };
        } else
          t = (o, r) => {
            o._setSelected(!1);
          };
        this._optionMap.forEach(t);
      }
      registerOnChange(e) {
        this.onChange = (t) => {
          let o = [],
            r = t.selectedOptions;
          if (r !== void 0) {
            let a = r;
            for (let s = 0; s < a.length; s++) {
              let c = a[s],
                p = this._getOptionValue(c.value);
              o.push(p);
            }
          } else {
            let a = t.options;
            for (let s = 0; s < a.length; s++) {
              let c = a[s];
              if (c.selected) {
                let p = this._getOptionValue(c.value);
                o.push(p);
              }
            }
          }
          (this.value = o), e(o);
        };
      }
      _registerOption(e) {
        let t = (this._idCounter++).toString();
        return this._optionMap.set(t, e), t;
      }
      _getOptionId(e) {
        for (let t of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(t)._value, e)) return t;
        return null;
      }
      _getOptionValue(e) {
        let t = Ev(e);
        return this._optionMap.has(t) ? this._optionMap.get(t)._value : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (o) {
            return (e || (e = gt(n)))(o || n);
          };
        })();
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["select", "multiple", "", "formControlName", ""],
            ["select", "multiple", "", "formControl", ""],
            ["select", "multiple", "", "ngModel", ""],
          ],
          hostBindings: function (t, o) {
            t & 1 &&
              z("change", function (a) {
                return o.onChange(a.target);
              })("blur", function () {
                return o.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [Ot([Mv]), qe],
        });
      }
    }
    return n;
  })(),
  Pi = (() => {
    class n {
      constructor(e, t, o) {
        (this._element = e),
          (this._renderer = t),
          (this._select = o),
          this._select && (this.id = this._select._registerOption(this));
      }
      set ngValue(e) {
        this._select != null &&
          ((this._value = e),
          this._setElementValue(ym(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._select
          ? ((this._value = e),
            this._setElementValue(ym(this.id, e)),
            this._select.writeValue(this._select.value))
          : this._setElementValue(e);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      _setSelected(e) {
        this._renderer.setProperty(this._element.nativeElement, "selected", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Ne), j(yi), j($m, 9));
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return n;
  })();
function Tv(n) {
  return typeof n == "number" ? n : parseInt(n, 10);
}
var Dd = (() => {
  class n {
    constructor() {
      this._validator = Us;
    }
    ngOnChanges(e) {
      if (this.inputName in e) {
        let t = this.normalizeInput(e[this.inputName].currentValue);
        (this._enabled = this.enabled(t)),
          (this._validator = this._enabled ? this.createValidator(t) : Us),
          this._onChange && this._onChange();
      }
    }
    validate(e) {
      return this._validator(e);
    }
    registerOnValidatorChange(e) {
      this._onChange = e;
    }
    enabled(e) {
      return e != null;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵdir = Pe({ type: n, features: [zt] });
    }
  }
  return n;
})();
var kv = { provide: qo, useExisting: di(() => Jn), multi: !0 };
var Jn = (() => {
  class n extends Dd {
    constructor() {
      super(...arguments),
        (this.inputName = "required"),
        (this.normalizeInput = Ee),
        (this.createValidator = (e) => wm);
    }
    enabled(e) {
      return e;
    }
    static {
      this.ɵfac = (() => {
        let e;
        return function (o) {
          return (e || (e = gt(n)))(o || n);
        };
      })();
    }
    static {
      this.ɵdir = Pe({
        type: n,
        selectors: [
          ["", "required", "", "formControlName", "", 3, "type", "checkbox"],
          ["", "required", "", "formControl", "", 3, "type", "checkbox"],
          ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
        ],
        hostVars: 1,
        hostBindings: function (t, o) {
          t & 2 && de("required", o._enabled ? "" : null);
        },
        inputs: { required: "required" },
        features: [Ot([kv]), qe],
      });
    }
  }
  return n;
})();
var Ov = { provide: qo, useExisting: di(() => Sd), multi: !0 },
  Sd = (() => {
    class n extends Dd {
      constructor() {
        super(...arguments),
          (this.inputName = "email"),
          (this.normalizeInput = Ee),
          (this.createValidator = (e) => Dm);
      }
      enabled(e) {
        return e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (o) {
            return (e || (e = gt(n)))(o || n);
          };
        })();
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["", "email", "", "formControlName", ""],
            ["", "email", "", "formControl", ""],
            ["", "email", "", "ngModel", ""],
          ],
          inputs: { email: "email" },
          features: [Ot([Ov]), qe],
        });
      }
    }
    return n;
  })();
var Iv = { provide: qo, useExisting: di(() => Md), multi: !0 },
  Md = (() => {
    class n extends Dd {
      constructor() {
        super(...arguments),
          (this.inputName = "maxlength"),
          (this.normalizeInput = (e) => Tv(e)),
          (this.createValidator = (e) => Sm(e));
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (o) {
            return (e || (e = gt(n)))(o || n);
          };
        })();
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["", "maxlength", "", "formControlName", ""],
            ["", "maxlength", "", "formControl", ""],
            ["", "maxlength", "", "ngModel", ""],
          ],
          hostVars: 1,
          hostBindings: function (t, o) {
            t & 2 && de("maxlength", o._enabled ? o.maxlength : null);
          },
          inputs: { maxlength: "maxlength" },
          features: [Ot([Iv]), qe],
        });
      }
    }
    return n;
  })();
var Gm = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({});
    }
  }
  return n;
})();
var ct = (() => {
    class n {
      static withConfig(e) {
        return {
          ngModule: n,
          providers: [{ provide: Oa, useValue: e.callSetDisabledState ?? el }],
        };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = De({ type: n });
      }
      static {
        this.ɵinj = we({ imports: [Gm] });
      }
    }
    return n;
  })(),
  Qi = (() => {
    class n {
      static withConfig(e) {
        return {
          ngModule: n,
          providers: [
            {
              provide: Um,
              useValue: e.warnOnNgModelWithFormControl ?? "always",
            },
            { provide: Oa, useValue: e.callSetDisabledState ?? el },
          ],
        };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = De({ type: n });
      }
      static {
        this.ɵinj = we({ imports: [Gm] });
      }
    }
    return n;
  })();
var Xi = class n {
  onSideBarClick$ = new Ae();
  selectedOption = pe("users");
  getSelectedOption() {
    return this.selectedOption;
  }
  setSelectedOption(i) {
    this.selectedOption.set(i);
  }
  pageTitleSubject = new Yn("Dashboard");
  pageTitle$ = this.pageTitleSubject.asObservable();
  setPageTitle(i) {
    this.pageTitleSubject.next(i);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var yo = class n {
  isOpen = new Yn(!0);
  isOpen$ = this.isOpen.asObservable();
  toggleSidebar() {
    this.isOpen.next(!this.isOpen.value);
  }
  setSidebar(i) {
    this.isOpen.next(i);
  }
  get currentState() {
    return this.isOpen.value;
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Pv = (n) => ({ "collapsed-sidebar": n }),
  Av = (n) => ({ collapsed: n });
function Rv(n, i) {
  if (
    (n & 1 &&
      (u(0, "li", 4)(1, "a", 5), W(2, "i", 6), u(3, "span", 7), m(4), d()()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = E();
    Ce("active", t.isActive(e.key)),
      g(),
      S("routerLink", e.route),
      g(),
      S("ngClass", e.icon),
      g(2),
      B(e.label);
  }
}
var Ir = class n {
  constructor(i, e, t) {
    this.router = i;
    this.context = e;
    this.sidebarService = t;
  }
  activeMenu = "";
  isSidebarOpen = !0;
  sidebarSub;
  routerSub;
  menuItems = [
    {
      key: "dashboard",
      label: "Dashboard",
      route: "/Admin/dashboard",
      icon: "fas fa-tachometer-alt",
    },
    {
      key: "role",
      label: "Role Management",
      route: "/Admin/role",
      icon: "fas fa-user-shield",
    },
    {
      key: "vehicle",
      label: "Vehicle Management",
      route: "/Admin/vehicle",
      icon: "fas fa-car",
    },
    {
      key: "dealer",
      label: "Dealer Management",
      route: "/Admin/dealer",
      icon: "fas fa-user-tie",
    },
  ];
  ngOnInit() {
    (this.sidebarSub = this.sidebarService.isOpen$.subscribe((i) => {
      this.isSidebarOpen = i;
    })),
      this.updateActiveFromUrl(this.router.url),
      (this.routerSub = this.router.events.subscribe((i) => {
        i instanceof Tr && this.updateActiveFromUrl(i.urlAfterRedirects);
      }));
  }
  ngOnDestroy() {
    this.sidebarSub?.unsubscribe(), this.routerSub?.unsubscribe();
  }
  updateActiveFromUrl(i) {
    console.log("Updating active from URL:", i);
    let e = this.menuItems.find((t) => i.includes(t.route));
    e &&
      this.activeMenu !== e.key &&
      (console.log("Setting active menu to:", e.key),
      (this.activeMenu = e.key),
      this.context.setPageTitle(e.label),
      this.context.onSideBarClick$.next({ role: e.key, pageTitle: e.label }));
  }
  isActive(i) {
    return this.activeMenu === i;
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ti), j(Xi), j(yo));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-sidebar"]],
    standalone: !0,
    features: [he],
    decls: 5,
    vars: 7,
    consts: [
      [1, "deznav", 2, "background-color", "#222fb9", 3, "ngClass"],
      ["id", "menu", 1, "metismenu", 3, "ngClass"],
      ["style", "margin-bottom:10px;", 3, "active", 4, "ngFor", "ngForOf"],
      [1, "copyright", 2, "margin-top", "280px"],
      [2, "margin-bottom", "10px"],
      [3, "routerLink"],
      [3, "ngClass"],
      [1, "nav-text", 2, "font-size", "11px", "white-space", "nowrap"],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 0)(1, "div")(2, "ul", 1),
        F(3, Rv, 5, 5, "li", 2),
        d(),
        W(4, "div", 3),
        d()()),
        e & 2 &&
          (S("ngClass", ye(3, Pv, !t.isSidebarOpen)),
          g(2),
          S("ngClass", ye(5, Av, !t.isSidebarOpen)),
          g(),
          S("ngForOf", t.menuItems));
    },
    dependencies: [ct, ii, ki, ke, Vt, $t],
    styles: [
      ".metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{background:#fff3!important;color:#fff!important;border-radius:50px;align-items:center;gap:8px;transition:none!important}.deznav[_ngcontent-%COMP%]:not(.collapsed-sidebar)   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:#fff!important;color:#222fb9!important}.collapsed-sidebar[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:transparent!important;color:#fff!important}.metismenu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{background-color:inherit!important;color:inherit!important}.deznav[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{font-size:1.5rem}.nav-text[_ngcontent-%COMP%]{font-size:15px}",
    ],
  });
};
var Ai = class n {
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵmod = De({ type: n });
  static ɵinj = we({ imports: [ke, ct, ki, Ir, ke, ct, ki] });
};
var il = class n {
  constructor(i) {
    this.http = i;
  }
  getProfile() {
    let i = sessionStorage.getItem("token"),
      e = new Kt({ Authorization: `Bearer ${i}` });
    return this.http.get(
      "https://uat.smartassistapp.in/api/
superAdmin/show-profile",
      { headers: e }
    );
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(ti));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var nl = class n {
  constructor(i, e, t, o, r, a, s) {
    this.router = i;
    this.platformId = e;
    this.activatedRoute = t;
    this.context = o;
    this.cdr = r;
    this.sidebarService = a;
    this.userService = s;
  }
  sidebarToggle = new Se();
  guestDetails;
  currentHeading = "Dashboard";
  userName = "";
  ngOnInit() {
    this.context.onSideBarClick$.subscribe(({ pageTitle: i }) => {
      console.log("Current Heading Updated:", i),
        (this.currentHeading = i),
        this.cdr.markForCheck();
    }),
      this.updateTitle(),
      this.router.events
        .pipe(vi((i) => i instanceof Tr))
        .subscribe(() => this.updateTitle()),
      this.userService.getProfile().subscribe({
        next: (i) => {
          console.log("Profile response:", i),
            (this.userName = i.data?.name || ""),
            console.log("Assigned userName:", this.userName),
            this.cdr.detectChanges();
        },
        error: (i) => {
          console.error("Failed to fetch profile", i),
            (this.userName = ""),
            this.cdr.detectChanges();
        },
      });
  }
  onToggleClick() {
    console.log("Hamburger clicked"), this.sidebarService.toggleSidebar();
  }
  updateTitle() {
    let i = this.getDeepestChild(this.activatedRoute);
  }
  getDeepestChild(i) {
    return i.firstChild ? this.getDeepestChild(i.firstChild) : i;
  }
  logout() {
    console.log("Logging out..."),
      sessionStorage.removeItem("token"),
      (this.guestDetails = null),
      this.router.navigate(["/"]);
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ti), j(cn), j(Ei), j(Xi), j(it), j(yo), j(il));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-header"]],
    outputs: { sidebarToggle: "sidebarToggle" },
    standalone: !0,
    features: [he],
    decls: 83,
    vars: 2,
    consts: [
      [1, "nav-header", 2, "background-color", "#222fb9"],
      [
        "href",
        "javascript:void(0)",
        1,
        "brand-logo",
        2,
        "padding-left",
        "15px !important",
      ],
      [1, "demo-section"],
      [1, "demo-title"],
      [1, "brand-container"],
      [1, "logo-section"],
      ["src", "assets/admin-img/image (1).png", "alt", "Logo", 1, "logo-img"],
      [1, "brand-title"],
      [1, "nav-control", 3, "click"],
      [1, "hamburger"],
      [1, "line"],
      [1, "header"],
      [1, "header-content"],
      [1, "navbar", "navbar-expand"],
      [1, "collapse", "navbar-collapse", "justify-content-between"],
      [1, "header-left"],
      [1, "dashboard_bar"],
      [1, "navbar-nav", "header-right"],
      [1, "nav-item", "dropdown", "header-profile"],
      [
        "data-toggle",
        "dropdown",
        "data-toggle",
        "tooltip",
        "title",
        "Profile",
        1,
        "nav-link",
        "tooltip-test",
        "text-primary",
      ],
      ["src", "./assets/images/1.jpg", 1, "logo-abbr"],
      [1, "dropdown-menu", "dropdown-menu-right"],
      ["routerLink", "/login", 1, "dropdown-item", "ai-icon"],
      [
        "id",
        "icon-user1",
        "xmlns",
        "http://www.w3.org/2000/svg",
        "width",
        "18",
        "height",
        "18",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "stroke",
        "currentColor",
        "stroke-width",
        "2",
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
        1,
        "text-primary",
      ],
      ["d", "M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"],
      ["cx", "12", "cy", "7", "r", "4"],
      [1, "ml-2"],
      [
        "href",
        "javascript:void(0)",
        "onclick",
        "document.getElementById('logoutModal').style.display='block'",
        1,
        "dropdown-item",
      ],
      [
        "id",
        "icon-logout",
        "xmlns",
        "http://www.w3.org/2000/svg",
        "width",
        "18",
        "height",
        "18",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "stroke",
        "currentColor",
        "stroke-width",
        "2",
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
        1,
        "text-danger",
      ],
      ["d", "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"],
      ["points", "16 17 21 12 16 7"],
      ["x1", "21", "y1", "12", "x2", "9", "y2", "12"],
      ["id", "logoutModal", 1, "modal"],
      [1, "modal-content"],
      [
        2,
        "font-family",
        "'Poppins', sans-serif",
        "color",
        "black",
        "font-size",
        "15px",
      ],
      [
        "href",
        "javascript:void(0)",
        "onclick",
        "document.getElementById('logoutModal').style.display='none'",
        1,
        "close-btn",
      ],
      [
        "href",
        "javascript:void(0)",
        "onclick",
        "window.location.href='/login'",
        1,
        "logout-btn",
      ],
      [1, "navbar-nav", "header-right", "bg-red-500"],
      [1, "nav-item", "dropdown", "notification_dropdown"],
      [
        "href",
        "#",
        "role",
        "button",
        "data-toggle",
        "dropdown",
        1,
        "nav-link",
        "d-flex",
        "align-items-center",
      ],
      [1, "fa", "fa-user-circle", "mr-2", 2, "font-size", "40px"],
      [
        1,
        "d-none",
        "d-md-inline-block",
        2,
        "color",
        "#000000",
        "font-weight",
        "500",
        "font-size",
        "20px",
      ],
      [
        1,
        "dropdown-menu",
        "dropdown-menu-right",
        2,
        "z-index",
        "999",
        "position",
        "absolute",
      ],
      ["routerLink", "/Admin/profile", 1, "dropdown-item", "ai-icon"],
      [2, "padding", "10px"],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 0)(1, "a", 1)(2, "div", 2),
        W(3, "h2", 3),
        u(4, "div", 4)(5, "div", 5),
        W(6, "img", 6),
        d(),
        u(7, "div", 7)(8, "p"),
        m(9, "Smart Assist"),
        d()()()()(),
        u(10, "div", 8),
        z("click", function () {
          return t.onToggleClick();
        }),
        u(11, "div", 9),
        W(12, "span", 10)(13, "span", 10)(14, "span", 10),
        d()()(),
        u(15, "div", 11)(16, "div", 12)(17, "nav", 13)(18, "div", 14)(
          19,
          "div",
          15
        ),
        W(20, "div", 16),
        d(),
        u(21, "ul", 17)(22, "li", 18)(23, "a", 19),
        W(24, "img", 20),
        d(),
        u(25, "div", 21)(26, "a", 22),
        pt(),
        u(27, "svg", 23),
        W(28, "path", 24)(29, "circle", 25),
        d(),
        go(),
        u(30, "span", 26),
        m(31, "Profile "),
        d()(),
        u(32, "a", 27),
        pt(),
        u(33, "svg", 28),
        W(34, "path", 29)(35, "polyline", 30)(36, "line", 31),
        d(),
        go(),
        u(37, "span"),
        m(38, "Logout"),
        d()()()()()()()()(),
        u(39, "div", 32)(40, "div", 33)(41, "h3", 34),
        m(42, "Are you sure you want to logout?"),
        d(),
        u(43, "a", 35),
        m(44, "Cancel"),
        d(),
        u(45, "a", 36),
        m(46, "Logout"),
        d()()(),
        u(47, "div", 11)(48, "div", 12)(49, "nav", 13)(50, "div", 14)(
          51,
          "div",
          15
        )(52, "div", 16),
        m(53),
        d()(),
        u(54, "ul", 37),
        W(55, "li", 38),
        u(56, "li", 18)(57, "a", 39),
        W(58, "i", 40),
        u(59, "span", 41),
        m(60),
        d()(),
        u(61, "div", 42)(62, "a", 43),
        pt(),
        u(63, "svg", 23),
        W(64, "path", 24)(65, "circle", 25),
        d(),
        go(),
        u(66, "span", 26),
        m(67, "Profile "),
        d()(),
        u(68, "a", 27),
        pt(),
        u(69, "svg", 28),
        W(70, "path", 29)(71, "polyline", 30)(72, "line", 31),
        d(),
        go(),
        u(73, "span", 44),
        m(74, "Logout"),
        d()()()()()()()()(),
        u(75, "div", 32)(76, "div", 33)(77, "h3", 34),
        m(78, "Are you sure you want to logout?"),
        d(),
        u(79, "a", 35),
        m(80, "Cancel"),
        d(),
        u(81, "a", 36),
        m(82, "Logout"),
        d()()()),
        e & 2 &&
          (g(53), B(t.currentHeading), g(7), oe(" Welcome ", t.userName, "! "));
    },
    dependencies: [ii],
    styles: [
      ".brand-title[_ngcontent-%COMP%]{display:block;max-width:170px!important;margin-left:0}.sidebar.hidden[_ngcontent-%COMP%]{transform:translate(-100%);transition:transform .3s ease}.sidebar[_ngcontent-%COMP%]{transform:translate(0)}.menu-toggle[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{padding:0!important}.logo-abbr[_ngcontent-%COMP%]{display:none}.brand-title[_ngcontent-%COMP%]{display:block;max-width:170px!important;margin-left:30px}.menu-toggle[_ngcontent-%COMP%]   .logo-abbr[_ngcontent-%COMP%]{display:block}.menu-toggle[_ngcontent-%COMP%]   .brand-title[_ngcontent-%COMP%]{display:none}.brand-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;height:60px;gap:10px}.logo-img[_ngcontent-%COMP%]{height:32px;width:auto}.brand-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;font-size:29px;white-space:nowrap;font-weight:600}@media (max-width: 1400px){.nav-control[_ngcontent-%COMP%]{top:40%!important}}@media (max-width: 767px){.brand-title[_ngcontent-%COMP%]{display:none!important}.logo-abbr[_ngcontent-%COMP%]{display:block!important}}.nav-control[_ngcontent-%COMP%]{border:1px solid #ccc;height:40px;border-radius:5px}.brand-container[_ngcontent-%COMP%]{display:flex;align-items:center;padding:12px 16px;border-radius:8px;width:100%;max-width:250px;gap:12px}.logo-section[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;background-color:#ffffff26;border-radius:6px;width:40px;height:40px;flex-shrink:0}.logo-icon[_ngcontent-%COMP%]{width:24px;height:24px;fill:#000}.brand-title[_ngcontent-%COMP%]{fill:#fff;font-size:1.125rem;font-weight:700;white-space:nowrap;margin:0;letter-spacing:-.025em}.brand-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}.logo-img[_ngcontent-%COMP%]{width:24px;height:24px;object-fit:contain}.demo-section[_ngcontent-%COMP%]{margin-bottom:30px}.demo-title[_ngcontent-%COMP%]{font-size:18px;font-weight:600;margin-bottom:15px;color:#374151}@media screen and (min-width: 1280px) and (max-width: 1600px){.brand-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:20px!important}}.modal[_ngcontent-%COMP%]{display:none;position:fixed;z-index:9999;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#00000080}.modal[_ngcontent-%COMP%]:target{display:block}.modal-content[_ngcontent-%COMP%]{background-color:#fff;margin:15% auto;padding:20px;border-radius:10px;width:300px;text-align:center;animation:_ngcontent-%COMP%_fadeIn .3s ease-in-out}@keyframes _ngcontent-%COMP%_fadeIn{0%{transform:scale(.8);opacity:0}to{transform:scale(1);opacity:1}}.close-btn[_ngcontent-%COMP%]{display:inline-block;margin-top:15px;padding:8px 16px;background-color:#ccc;color:#000;text-decoration:none;border-radius:5px}.logout-btn[_ngcontent-%COMP%]{display:inline-block;margin-top:15px;padding:8px 16px;background-color:#222fb9;color:#fff;text-decoration:none;border-radius:5px}.dropdown-item[_ngcontent-%COMP%]{cursor:pointer;display:flex;align-items:center;gap:10px;color:#000;text-decoration:none}.dropdown-item[_ngcontent-%COMP%]:hover{color:#222fb9}",
    ],
    changeDetection: 0,
  });
};
var ol = class n {
  constructor(i) {
    this.sidebarService = i;
  }
  ngOnInit() {
    this.sidebarService.isOpen$.subscribe((i) => {
      this.isSidebarOpen = i;
    });
  }
  isSidebarOpen = !0;
  toggleSidebar() {
    this.sidebarService.toggleSidebar();
  }
  static ɵfac = function (e) {
    return new (e || n)(j(yo));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-overview"]],
    standalone: !0,
    features: [he],
    decls: 6,
    vars: 2,
    consts: [
      ["id", "main-wrapper"],
      [3, "sidebarToggle"],
      [1, "content-body"],
      [1, "container-fluid"],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 0)(1, "app-header", 1),
        z("sidebarToggle", function () {
          return t.toggleSidebar();
        }),
        d(),
        W(2, "app-sidebar"),
        u(3, "div", 2)(4, "div", 3),
        W(5, "router-outlet"),
        d()()()),
        e & 2 && Ce("menu-toggle", !t.isSidebarOpen);
    },
    dependencies: [Ai, Hs, nl, Ir],
    styles: [
      ".sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:7rem}@media (min-width: 768px) and (max-width: 819px){.content-body[_ngcontent-%COMP%]{margin-left:42px!important}}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .deznav[_ngcontent-%COMP%]{width:80px}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .nav-text[_ngcontent-%COMP%]{display:none}@media (min-width: 2560px){.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:336px!important}}@media screen and (min-width: 1920px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:336px}}@media screen and (width: 1366px){.content-body[_ngcontent-%COMP%]{margin-left:4rem}}#main-wrapper[_ngcontent-%COMP%]{display:flex}.content-body[_ngcontent-%COMP%]{margin-left:250px;transition:margin-left .3s ease;width:100%}@media (min-width: 1601px){.content-body[_ngcontent-%COMP%]{margin-left:336px}}@media only screen and (min-width: 820px) and (max-width: 1279px){.content-body[_ngcontent-%COMP%]{margin-left:5rem}}.content-section[_ngcontent-%COMP%]{padding:20px;margin-top:70px}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:2rem;margin-top:20px}.performance-panel[_ngcontent-%COMP%]{flex:1;background:#f9f9f9;border-radius:8px;padding:20px;height:300px}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px}.metric-box[_ngcontent-%COMP%]{background:#fff;padding:1rem;border-radius:8px;text-align:center;box-shadow:0 2px 4px #0000001a}",
    ],
  });
};
function Ra(n) {
  return (n + 0.5) | 0;
}
var xo = (n, i, e) => Math.max(Math.min(n, e), i);
function Pa(n) {
  return xo(Ra(n * 2.55), 0, 255);
}
function Co(n) {
  return xo(Ra(n * 255), 0, 255);
}
function to(n) {
  return xo(Ra(n / 2.55) / 100, 0, 1);
}
function Ym(n) {
  return xo(Ra(n * 100), 0, 100);
}
var Ji = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    A: 10,
    B: 11,
    C: 12,
    D: 13,
    E: 14,
    F: 15,
    a: 10,
    b: 11,
    c: 12,
    d: 13,
    e: 14,
    f: 15,
  },
  kd = [..."0123456789ABCDEF"],
  Lv = (n) => kd[n & 15],
  Bv = (n) => kd[(n & 240) >> 4] + kd[n & 15],
  rl = (n) => (n & 240) >> 4 === (n & 15),
  Hv = (n) => rl(n.r) && rl(n.g) && rl(n.b) && rl(n.a);
function jv(n) {
  var i = n.length,
    e;
  return (
    n[0] === "#" &&
      (i === 4 || i === 5
        ? (e = {
            r: 255 & (Ji[n[1]] * 17),
            g: 255 & (Ji[n[2]] * 17),
            b: 255 & (Ji[n[3]] * 17),
            a: i === 5 ? Ji[n[4]] * 17 : 255,
          })
        : (i === 7 || i === 9) &&
          (e = {
            r: (Ji[n[1]] << 4) | Ji[n[2]],
            g: (Ji[n[3]] << 4) | Ji[n[4]],
            b: (Ji[n[5]] << 4) | Ji[n[6]],
            a: i === 9 ? (Ji[n[7]] << 4) | Ji[n[8]] : 255,
          })),
    e
  );
}
var zv = (n, i) => (n < 255 ? i(n) : "");
function Uv(n) {
  var i = Hv(n) ? Lv : Bv;
  return n ? "#" + i(n.r) + i(n.g) + i(n.b) + zv(n.a, i) : void 0;
}
var Wv =
  /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
function Xm(n, i, e) {
  let t = i * Math.min(e, 1 - e),
    o = (r, a = (r + n / 30) % 12) =>
      e - t * Math.max(Math.min(a - 3, 9 - a, 1), -1);
  return [o(0), o(8), o(4)];
}
function $v(n, i, e) {
  let t = (o, r = (o + n / 60) % 6) =>
    e - e * i * Math.max(Math.min(r, 4 - r, 1), 0);
  return [t(5), t(3), t(1)];
}
function Gv(n, i, e) {
  let t = Xm(n, 1, 0.5),
    o;
  for (i + e > 1 && ((o = 1 / (i + e)), (i *= o), (e *= o)), o = 0; o < 3; o++)
    (t[o] *= 1 - i - e), (t[o] += i);
  return t;
}
function Yv(n, i, e, t, o) {
  return n === o
    ? (i - e) / t + (i < e ? 6 : 0)
    : i === o
    ? (e - n) / t + 2
    : (n - i) / t + 4;
}
function Od(n) {
  let e = n.r / 255,
    t = n.g / 255,
    o = n.b / 255,
    r = Math.max(e, t, o),
    a = Math.min(e, t, o),
    s = (r + a) / 2,
    c,
    p,
    f;
  return (
    r !== a &&
      ((f = r - a),
      (p = s > 0.5 ? f / (2 - r - a) : f / (r + a)),
      (c = Yv(e, t, o, f, r)),
      (c = c * 60 + 0.5)),
    [c | 0, p || 0, s]
  );
}
function Id(n, i, e, t) {
  return (Array.isArray(i) ? n(i[0], i[1], i[2]) : n(i, e, t)).map(Co);
}
function Pd(n, i, e) {
  return Id(Xm, n, i, e);
}
function qv(n, i, e) {
  return Id(Gv, n, i, e);
}
function Kv(n, i, e) {
  return Id($v, n, i, e);
}
function Zm(n) {
  return ((n % 360) + 360) % 360;
}
function Qv(n) {
  let i = Wv.exec(n),
    e = 255,
    t;
  if (!i) return;
  i[5] !== t && (e = i[6] ? Pa(+i[5]) : Co(+i[5]));
  let o = Zm(+i[2]),
    r = +i[3] / 100,
    a = +i[4] / 100;
  return (
    i[1] === "hwb"
      ? (t = qv(o, r, a))
      : i[1] === "hsv"
      ? (t = Kv(o, r, a))
      : (t = Pd(o, r, a)),
    { r: t[0], g: t[1], b: t[2], a: e }
  );
}
function Xv(n, i) {
  var e = Od(n);
  (e[0] = Zm(e[0] + i)), (e = Pd(e)), (n.r = e[0]), (n.g = e[1]), (n.b = e[2]);
}
function Zv(n) {
  if (!n) return;
  let i = Od(n),
    e = i[0],
    t = Ym(i[1]),
    o = Ym(i[2]);
  return n.a < 255
    ? `hsla(${e}, ${t}%, ${o}%, ${to(n.a)})`
    : `hsl(${e}, ${t}%, ${o}%)`;
}
var qm = {
    x: "dark",
    Z: "light",
    Y: "re",
    X: "blu",
    W: "gr",
    V: "medium",
    U: "slate",
    A: "ee",
    T: "ol",
    S: "or",
    B: "ra",
    C: "lateg",
    D: "ights",
    R: "in",
    Q: "turquois",
    E: "hi",
    P: "ro",
    O: "al",
    N: "le",
    M: "de",
    L: "yello",
    F: "en",
    K: "ch",
    G: "arks",
    H: "ea",
    I: "ightg",
    J: "wh",
  },
  Km = {
    OiceXe: "f0f8ff",
    antiquewEte: "faebd7",
    aqua: "ffff",
    aquamarRe: "7fffd4",
    azuY: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "0",
    blanKedOmond: "ffebcd",
    Xe: "ff",
    XeviTet: "8a2be2",
    bPwn: "a52a2a",
    burlywood: "deb887",
    caMtXe: "5f9ea0",
    KartYuse: "7fff00",
    KocTate: "d2691e",
    cSO: "ff7f50",
    cSnflowerXe: "6495ed",
    cSnsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "ffff",
    xXe: "8b",
    xcyan: "8b8b",
    xgTMnPd: "b8860b",
    xWay: "a9a9a9",
    xgYF: "6400",
    xgYy: "a9a9a9",
    xkhaki: "bdb76b",
    xmagFta: "8b008b",
    xTivegYF: "556b2f",
    xSange: "ff8c00",
    xScEd: "9932cc",
    xYd: "8b0000",
    xsOmon: "e9967a",
    xsHgYF: "8fbc8f",
    xUXe: "483d8b",
    xUWay: "2f4f4f",
    xUgYy: "2f4f4f",
    xQe: "ced1",
    xviTet: "9400d3",
    dAppRk: "ff1493",
    dApskyXe: "bfff",
    dimWay: "696969",
    dimgYy: "696969",
    dodgerXe: "1e90ff",
    fiYbrick: "b22222",
    flSOwEte: "fffaf0",
    foYstWAn: "228b22",
    fuKsia: "ff00ff",
    gaRsbSo: "dcdcdc",
    ghostwEte: "f8f8ff",
    gTd: "ffd700",
    gTMnPd: "daa520",
    Way: "808080",
    gYF: "8000",
    gYFLw: "adff2f",
    gYy: "808080",
    honeyMw: "f0fff0",
    hotpRk: "ff69b4",
    RdianYd: "cd5c5c",
    Rdigo: "4b0082",
    ivSy: "fffff0",
    khaki: "f0e68c",
    lavFMr: "e6e6fa",
    lavFMrXsh: "fff0f5",
    lawngYF: "7cfc00",
    NmoncEffon: "fffacd",
    ZXe: "add8e6",
    ZcSO: "f08080",
    Zcyan: "e0ffff",
    ZgTMnPdLw: "fafad2",
    ZWay: "d3d3d3",
    ZgYF: "90ee90",
    ZgYy: "d3d3d3",
    ZpRk: "ffb6c1",
    ZsOmon: "ffa07a",
    ZsHgYF: "20b2aa",
    ZskyXe: "87cefa",
    ZUWay: "778899",
    ZUgYy: "778899",
    ZstAlXe: "b0c4de",
    ZLw: "ffffe0",
    lime: "ff00",
    limegYF: "32cd32",
    lRF: "faf0e6",
    magFta: "ff00ff",
    maPon: "800000",
    VaquamarRe: "66cdaa",
    VXe: "cd",
    VScEd: "ba55d3",
    VpurpN: "9370db",
    VsHgYF: "3cb371",
    VUXe: "7b68ee",
    VsprRggYF: "fa9a",
    VQe: "48d1cc",
    VviTetYd: "c71585",
    midnightXe: "191970",
    mRtcYam: "f5fffa",
    mistyPse: "ffe4e1",
    moccasR: "ffe4b5",
    navajowEte: "ffdead",
    navy: "80",
    Tdlace: "fdf5e6",
    Tive: "808000",
    TivedBb: "6b8e23",
    Sange: "ffa500",
    SangeYd: "ff4500",
    ScEd: "da70d6",
    pOegTMnPd: "eee8aa",
    pOegYF: "98fb98",
    pOeQe: "afeeee",
    pOeviTetYd: "db7093",
    papayawEp: "ffefd5",
    pHKpuff: "ffdab9",
    peru: "cd853f",
    pRk: "ffc0cb",
    plum: "dda0dd",
    powMrXe: "b0e0e6",
    purpN: "800080",
    YbeccapurpN: "663399",
    Yd: "ff0000",
    Psybrown: "bc8f8f",
    PyOXe: "4169e1",
    saddNbPwn: "8b4513",
    sOmon: "fa8072",
    sandybPwn: "f4a460",
    sHgYF: "2e8b57",
    sHshell: "fff5ee",
    siFna: "a0522d",
    silver: "c0c0c0",
    skyXe: "87ceeb",
    UXe: "6a5acd",
    UWay: "708090",
    UgYy: "708090",
    snow: "fffafa",
    sprRggYF: "ff7f",
    stAlXe: "4682b4",
    tan: "d2b48c",
    teO: "8080",
    tEstN: "d8bfd8",
    tomato: "ff6347",
    Qe: "40e0d0",
    viTet: "ee82ee",
    JHt: "f5deb3",
    wEte: "ffffff",
    wEtesmoke: "f5f5f5",
    Lw: "ffff00",
    LwgYF: "9acd32",
  };
function Jv() {
  let n = {},
    i = Object.keys(Km),
    e = Object.keys(qm),
    t,
    o,
    r,
    a,
    s;
  for (t = 0; t < i.length; t++) {
    for (a = s = i[t], o = 0; o < e.length; o++)
      (r = e[o]), (s = s.replace(r, qm[r]));
    (r = parseInt(Km[a], 16)),
      (n[s] = [(r >> 16) & 255, (r >> 8) & 255, r & 255]);
  }
  return n;
}
var al;
function e1(n) {
  al || ((al = Jv()), (al.transparent = [0, 0, 0, 0]));
  let i = al[n.toLowerCase()];
  return i && { r: i[0], g: i[1], b: i[2], a: i.length === 4 ? i[3] : 255 };
}
var t1 =
  /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
function i1(n) {
  let i = t1.exec(n),
    e = 255,
    t,
    o,
    r;
  if (i) {
    if (i[7] !== t) {
      let a = +i[7];
      e = i[8] ? Pa(a) : xo(a * 255, 0, 255);
    }
    return (
      (t = +i[1]),
      (o = +i[3]),
      (r = +i[5]),
      (t = 255 & (i[2] ? Pa(t) : xo(t, 0, 255))),
      (o = 255 & (i[4] ? Pa(o) : xo(o, 0, 255))),
      (r = 255 & (i[6] ? Pa(r) : xo(r, 0, 255))),
      { r: t, g: o, b: r, a: e }
    );
  }
}
function n1(n) {
  return (
    n &&
    (n.a < 255
      ? `rgba(${n.r}, ${n.g}, ${n.b}, ${to(n.a)})`
      : `rgb(${n.r}, ${n.g}, ${n.b})`)
  );
}
var Td = (n) =>
    n <= 0.0031308 ? n * 12.92 : Math.pow(n, 1 / 2.4) * 1.055 - 0.055,
  Pr = (n) => (n <= 0.04045 ? n / 12.92 : Math.pow((n + 0.055) / 1.055, 2.4));
function o1(n, i, e) {
  let t = Pr(to(n.r)),
    o = Pr(to(n.g)),
    r = Pr(to(n.b));
  return {
    r: Co(Td(t + e * (Pr(to(i.r)) - t))),
    g: Co(Td(o + e * (Pr(to(i.g)) - o))),
    b: Co(Td(r + e * (Pr(to(i.b)) - r))),
    a: n.a + e * (i.a - n.a),
  };
}
function sl(n, i, e) {
  if (n) {
    let t = Od(n);
    (t[i] = Math.max(0, Math.min(t[i] + t[i] * e, i === 0 ? 360 : 1))),
      (t = Pd(t)),
      (n.r = t[0]),
      (n.g = t[1]),
      (n.b = t[2]);
  }
}
function Jm(n, i) {
  return n && Object.assign(i || {}, n);
}
function Qm(n) {
  var i = { r: 0, g: 0, b: 0, a: 255 };
  return (
    Array.isArray(n)
      ? n.length >= 3 &&
        ((i = { r: n[0], g: n[1], b: n[2], a: 255 }),
        n.length > 3 && (i.a = Co(n[3])))
      : ((i = Jm(n, { r: 0, g: 0, b: 0, a: 1 })), (i.a = Co(i.a))),
    i
  );
}
function r1(n) {
  return n.charAt(0) === "r" ? i1(n) : Qv(n);
}
var Aa = class n {
  constructor(i) {
    if (i instanceof n) return i;
    let e = typeof i,
      t;
    e === "object"
      ? (t = Qm(i))
      : e === "string" && (t = jv(i) || e1(i) || r1(i)),
      (this._rgb = t),
      (this._valid = !!t);
  }
  get valid() {
    return this._valid;
  }
  get rgb() {
    var i = Jm(this._rgb);
    return i && (i.a = to(i.a)), i;
  }
  set rgb(i) {
    this._rgb = Qm(i);
  }
  rgbString() {
    return this._valid ? n1(this._rgb) : void 0;
  }
  hexString() {
    return this._valid ? Uv(this._rgb) : void 0;
  }
  hslString() {
    return this._valid ? Zv(this._rgb) : void 0;
  }
  mix(i, e) {
    if (i) {
      let t = this.rgb,
        o = i.rgb,
        r,
        a = e === r ? 0.5 : e,
        s = 2 * a - 1,
        c = t.a - o.a,
        p = ((s * c === -1 ? s : (s + c) / (1 + s * c)) + 1) / 2;
      (r = 1 - p),
        (t.r = 255 & (p * t.r + r * o.r + 0.5)),
        (t.g = 255 & (p * t.g + r * o.g + 0.5)),
        (t.b = 255 & (p * t.b + r * o.b + 0.5)),
        (t.a = a * t.a + (1 - a) * o.a),
        (this.rgb = t);
    }
    return this;
  }
  interpolate(i, e) {
    return i && (this._rgb = o1(this._rgb, i._rgb, e)), this;
  }
  clone() {
    return new n(this.rgb);
  }
  alpha(i) {
    return (this._rgb.a = Co(i)), this;
  }
  clearer(i) {
    let e = this._rgb;
    return (e.a *= 1 - i), this;
  }
  greyscale() {
    let i = this._rgb,
      e = Ra(i.r * 0.3 + i.g * 0.59 + i.b * 0.11);
    return (i.r = i.g = i.b = e), this;
  }
  opaquer(i) {
    let e = this._rgb;
    return (e.a *= 1 + i), this;
  }
  negate() {
    let i = this._rgb;
    return (i.r = 255 - i.r), (i.g = 255 - i.g), (i.b = 255 - i.b), this;
  }
  lighten(i) {
    return sl(this._rgb, 2, i), this;
  }
  darken(i) {
    return sl(this._rgb, 2, -i), this;
  }
  saturate(i) {
    return sl(this._rgb, 1, i), this;
  }
  desaturate(i) {
    return sl(this._rgb, 1, -i), this;
  }
  rotate(i) {
    return Xv(this._rgb, i), this;
  }
};
function Rn() {}
var uf = (() => {
  let n = 0;
  return () => n++;
})();
function Ke(n) {
  return n == null;
}
function vt(n) {
  if (Array.isArray && Array.isArray(n)) return !0;
  let i = Object.prototype.toString.call(n);
  return i.slice(0, 7) === "[object" && i.slice(-6) === "Array]";
}
function et(n) {
  return n !== null && Object.prototype.toString.call(n) === "[object Object]";
}
function It(n) {
  return (typeof n == "number" || n instanceof Number) && isFinite(+n);
}
function Ri(n, i) {
  return It(n) ? n : i;
}
function je(n, i) {
  return typeof n > "u" ? i : n;
}
var hf = (n, i) =>
    typeof n == "string" && n.endsWith("%") ? parseFloat(n) / 100 : +n / i,
  Nd = (n, i) =>
    typeof n == "string" && n.endsWith("%") ? (parseFloat(n) / 100) * i : +n;
function mt(n, i, e) {
  if (n && typeof n.call == "function") return n.apply(e, i);
}
function ut(n, i, e, t) {
  let o, r, a;
  if (vt(n))
    if (((r = n.length), t)) for (o = r - 1; o >= 0; o--) i.call(e, n[o], o);
    else for (o = 0; o < r; o++) i.call(e, n[o], o);
  else if (et(n))
    for (a = Object.keys(n), r = a.length, o = 0; o < r; o++)
      i.call(e, n[a[o]], a[o]);
}
function Va(n, i) {
  let e, t, o, r;
  if (!n || !i || n.length !== i.length) return !1;
  for (e = 0, t = n.length; e < t; ++e)
    if (
      ((o = n[e]),
      (r = i[e]),
      o.datasetIndex !== r.datasetIndex || o.index !== r.index)
    )
      return !1;
  return !0;
}
function hl(n) {
  if (vt(n)) return n.map(hl);
  if (et(n)) {
    let i = Object.create(null),
      e = Object.keys(n),
      t = e.length,
      o = 0;
    for (; o < t; ++o) i[e[o]] = hl(n[e[o]]);
    return i;
  }
  return n;
}
function pf(n) {
  return ["__proto__", "prototype", "constructor"].indexOf(n) === -1;
}
function a1(n, i, e, t) {
  if (!pf(n)) return;
  let o = i[n],
    r = e[n];
  et(o) && et(r) ? Rr(o, r, t) : (i[n] = hl(r));
}
function Rr(n, i, e) {
  let t = vt(i) ? i : [i],
    o = t.length;
  if (!et(n)) return n;
  e = e || {};
  let r = e.merger || a1,
    a;
  for (let s = 0; s < o; ++s) {
    if (((a = t[s]), !et(a))) continue;
    let c = Object.keys(a);
    for (let p = 0, f = c.length; p < f; ++p) r(c[p], n, a, e);
  }
  return n;
}
function Nr(n, i) {
  return Rr(n, i, { merger: s1 });
}
function s1(n, i, e) {
  if (!pf(n)) return;
  let t = i[n],
    o = e[n];
  et(t) && et(o)
    ? Nr(t, o)
    : Object.prototype.hasOwnProperty.call(i, n) || (i[n] = hl(o));
}
var ef = { "": (n) => n, x: (n) => n.x, y: (n) => n.y };
function l1(n) {
  let i = n.split("."),
    e = [],
    t = "";
  for (let o of i)
    (t += o),
      t.endsWith("\\") ? (t = t.slice(0, -1) + ".") : (e.push(t), (t = ""));
  return e;
}
function c1(n) {
  let i = l1(n);
  return (e) => {
    for (let t of i) {
      if (t === "") break;
      e = e && e[t];
    }
    return e;
  };
}
function oo(n, i) {
  return (ef[i] || (ef[i] = c1(i)))(n);
}
function gl(n) {
  return n.charAt(0).toUpperCase() + n.slice(1);
}
var Vr = (n) => typeof n < "u",
  io = (n) => typeof n == "function",
  Vd = (n, i) => {
    if (n.size !== i.size) return !1;
    for (let e of n) if (!i.has(e)) return !1;
    return !0;
  };
function mf(n) {
  return n.type === "mouseup" || n.type === "click" || n.type === "contextmenu";
}
var lt = Math.PI,
  yt = 2 * lt,
  d1 = yt + lt,
  pl = Number.POSITIVE_INFINITY,
  u1 = lt / 180,
  Lt = lt / 2,
  Ko = lt / 4,
  tf = (lt * 2) / 3,
  no = Math.log10,
  mn = Math.sign;
function Lr(n, i, e) {
  return Math.abs(n - i) < e;
}
function Ld(n) {
  let i = Math.round(n);
  n = Lr(n, i, n / 1e3) ? i : n;
  let e = Math.pow(10, Math.floor(no(n))),
    t = n / e;
  return (t <= 1 ? 1 : t <= 2 ? 2 : t <= 5 ? 5 : 10) * e;
}
function ff(n) {
  let i = [],
    e = Math.sqrt(n),
    t;
  for (t = 1; t < e; t++) n % t === 0 && (i.push(t), i.push(n / t));
  return e === (e | 0) && i.push(e), i.sort((o, r) => o - r).pop(), i;
}
function h1(n) {
  return (
    typeof n == "symbol" ||
    (typeof n == "object" &&
      n !== null &&
      !(Symbol.toPrimitive in n || "toString" in n || "valueOf" in n))
  );
}
function Zo(n) {
  return !h1(n) && !isNaN(parseFloat(n)) && isFinite(n);
}
function gf(n, i) {
  let e = Math.round(n);
  return e - i <= n && e + i >= n;
}
function Bd(n, i, e) {
  let t, o, r;
  for (t = 0, o = n.length; t < o; t++)
    (r = n[t][e]),
      isNaN(r) || ((i.min = Math.min(i.min, r)), (i.max = Math.max(i.max, r)));
}
function en(n) {
  return n * (lt / 180);
}
function _l(n) {
  return n * (180 / lt);
}
function Hd(n) {
  if (!It(n)) return;
  let i = 1,
    e = 0;
  for (; Math.round(n * i) / i !== n; ) (i *= 10), e++;
  return e;
}
function jd(n, i) {
  let e = i.x - n.x,
    t = i.y - n.y,
    o = Math.sqrt(e * e + t * t),
    r = Math.atan2(t, e);
  return r < -0.5 * lt && (r += yt), { angle: r, distance: o };
}
function ml(n, i) {
  return Math.sqrt(Math.pow(i.x - n.x, 2) + Math.pow(i.y - n.y, 2));
}
function p1(n, i) {
  return ((n - i + d1) % yt) - lt;
}
function ai(n) {
  return ((n % yt) + yt) % yt;
}
function Br(n, i, e, t) {
  let o = ai(n),
    r = ai(i),
    a = ai(e),
    s = ai(r - o),
    c = ai(a - o),
    p = ai(o - r),
    f = ai(o - a);
  return o === r || o === a || (t && r === a) || (s > c && p < f);
}
function Zt(n, i, e) {
  return Math.max(i, Math.min(e, n));
}
function _f(n) {
  return Zt(n, -32768, 32767);
}
function Fn(n, i, e, t = 1e-6) {
  return n >= Math.min(i, e) - t && n <= Math.max(i, e) + t;
}
function bl(n, i, e) {
  e = e || ((a) => n[a] < i);
  let t = n.length - 1,
    o = 0,
    r;
  for (; t - o > 1; ) (r = (o + t) >> 1), e(r) ? (o = r) : (t = r);
  return { lo: o, hi: t };
}
var Pn = (n, i, e, t) =>
    bl(
      n,
      e,
      t
        ? (o) => {
            let r = n[o][i];
            return r < e || (r === e && n[o + 1][i] === e);
          }
        : (o) => n[o][i] < e
    ),
  bf = (n, i, e) => bl(n, e, (t) => n[t][i] >= e);
function vf(n, i, e) {
  let t = 0,
    o = n.length;
  for (; t < o && n[t] < i; ) t++;
  for (; o > t && n[o - 1] > e; ) o--;
  return t > 0 || o < n.length ? n.slice(t, o) : n;
}
var yf = ["push", "pop", "shift", "splice", "unshift"];
function xf(n, i) {
  if (n._chartjs) {
    n._chartjs.listeners.push(i);
    return;
  }
  Object.defineProperty(n, "_chartjs", {
    configurable: !0,
    enumerable: !1,
    value: { listeners: [i] },
  }),
    yf.forEach((e) => {
      let t = "_onData" + gl(e),
        o = n[e];
      Object.defineProperty(n, e, {
        configurable: !0,
        enumerable: !1,
        value(...r) {
          let a = o.apply(this, r);
          return (
            n._chartjs.listeners.forEach((s) => {
              typeof s[t] == "function" && s[t](...r);
            }),
            a
          );
        },
      });
    });
}
function zd(n, i) {
  let e = n._chartjs;
  if (!e) return;
  let t = e.listeners,
    o = t.indexOf(i);
  o !== -1 && t.splice(o, 1),
    !(t.length > 0) &&
      (yf.forEach((r) => {
        delete n[r];
      }),
      delete n._chartjs);
}
function Ud(n) {
  let i = new Set(n);
  return i.size === n.length ? n : Array.from(i);
}
var Wd = (function () {
  return typeof window > "u"
    ? function (n) {
        return n();
      }
    : window.requestAnimationFrame;
})();
function $d(n, i) {
  let e = [],
    t = !1;
  return function (...o) {
    (e = o),
      t ||
        ((t = !0),
        Wd.call(window, () => {
          (t = !1), n.apply(i, e);
        }));
  };
}
function Cf(n, i) {
  let e;
  return function (...t) {
    return (
      i ? (clearTimeout(e), (e = setTimeout(n, i, t))) : n.apply(this, t), i
    );
  };
}
var vl = (n) => (n === "start" ? "left" : n === "end" ? "right" : "center"),
  si = (n, i, e) => (n === "start" ? i : n === "end" ? e : (i + e) / 2),
  wf = (n, i, e, t) =>
    n === (t ? "left" : "right") ? e : n === "center" ? (i + e) / 2 : i;
function Gd(n, i, e) {
  let t = i.length,
    o = 0,
    r = t;
  if (n._sorted) {
    let { iScale: a, vScale: s, _parsed: c } = n,
      p = n.dataset && n.dataset.options ? n.dataset.options.spanGaps : null,
      f = a.axis,
      { min: y, max: x, minDefined: C, maxDefined: M } = a.getUserBounds();
    if (C) {
      if (
        ((o = Math.min(
          Pn(c, f, y).lo,
          e ? t : Pn(i, f, a.getPixelForValue(y)).lo
        )),
        p)
      ) {
        let k = c
          .slice(0, o + 1)
          .reverse()
          .findIndex((O) => !Ke(O[s.axis]));
        o -= Math.max(0, k);
      }
      o = Zt(o, 0, t - 1);
    }
    if (M) {
      let k = Math.max(
        Pn(c, a.axis, x, !0).hi + 1,
        e ? 0 : Pn(i, f, a.getPixelForValue(x), !0).hi + 1
      );
      if (p) {
        let O = c.slice(k - 1).findIndex((P) => !Ke(P[s.axis]));
        k += Math.max(0, O);
      }
      r = Zt(k, o, t) - o;
    } else r = t - o;
  }
  return { start: o, count: r };
}
function Yd(n) {
  let { xScale: i, yScale: e, _scaleRanges: t } = n,
    o = { xmin: i.min, xmax: i.max, ymin: e.min, ymax: e.max };
  if (!t) return (n._scaleRanges = o), !0;
  let r =
    t.xmin !== i.min ||
    t.xmax !== i.max ||
    t.ymin !== e.min ||
    t.ymax !== e.max;
  return Object.assign(t, o), r;
}
var ll = (n) => n === 0 || n === 1,
  nf = (n, i, e) =>
    -(Math.pow(2, 10 * (n -= 1)) * Math.sin(((n - i) * yt) / e)),
  of = (n, i, e) => Math.pow(2, -10 * n) * Math.sin(((n - i) * yt) / e) + 1,
  Ar = {
    linear: (n) => n,
    easeInQuad: (n) => n * n,
    easeOutQuad: (n) => -n * (n - 2),
    easeInOutQuad: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n : -0.5 * (--n * (n - 2) - 1),
    easeInCubic: (n) => n * n * n,
    easeOutCubic: (n) => (n -= 1) * n * n + 1,
    easeInOutCubic: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n * n : 0.5 * ((n -= 2) * n * n + 2),
    easeInQuart: (n) => n * n * n * n,
    easeOutQuart: (n) => -((n -= 1) * n * n * n - 1),
    easeInOutQuart: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n * n * n : -0.5 * ((n -= 2) * n * n * n - 2),
    easeInQuint: (n) => n * n * n * n * n,
    easeOutQuint: (n) => (n -= 1) * n * n * n * n + 1,
    easeInOutQuint: (n) =>
      (n /= 0.5) < 1
        ? 0.5 * n * n * n * n * n
        : 0.5 * ((n -= 2) * n * n * n * n + 2),
    easeInSine: (n) => -Math.cos(n * Lt) + 1,
    easeOutSine: (n) => Math.sin(n * Lt),
    easeInOutSine: (n) => -0.5 * (Math.cos(lt * n) - 1),
    easeInExpo: (n) => (n === 0 ? 0 : Math.pow(2, 10 * (n - 1))),
    easeOutExpo: (n) => (n === 1 ? 1 : -Math.pow(2, -10 * n) + 1),
    easeInOutExpo: (n) =>
      ll(n)
        ? n
        : n < 0.5
        ? 0.5 * Math.pow(2, 10 * (n * 2 - 1))
        : 0.5 * (-Math.pow(2, -10 * (n * 2 - 1)) + 2),
    easeInCirc: (n) => (n >= 1 ? n : -(Math.sqrt(1 - n * n) - 1)),
    easeOutCirc: (n) => Math.sqrt(1 - (n -= 1) * n),
    easeInOutCirc: (n) =>
      (n /= 0.5) < 1
        ? -0.5 * (Math.sqrt(1 - n * n) - 1)
        : 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1),
    easeInElastic: (n) => (ll(n) ? n : nf(n, 0.075, 0.3)),
    easeOutElastic: (n) => (ll(n) ? n : of(n, 0.075, 0.3)),
    easeInOutElastic(n) {
      return ll(n)
        ? n
        : n < 0.5
        ? 0.5 * nf(n * 2, 0.1125, 0.45)
        : 0.5 + 0.5 * of(n * 2 - 1, 0.1125, 0.45);
    },
    easeInBack(n) {
      return n * n * ((1.70158 + 1) * n - 1.70158);
    },
    easeOutBack(n) {
      return (n -= 1) * n * ((1.70158 + 1) * n + 1.70158) + 1;
    },
    easeInOutBack(n) {
      let i = 1.70158;
      return (n /= 0.5) < 1
        ? 0.5 * (n * n * (((i *= 1.525) + 1) * n - i))
        : 0.5 * ((n -= 2) * n * (((i *= 1.525) + 1) * n + i) + 2);
    },
    easeInBounce: (n) => 1 - Ar.easeOutBounce(1 - n),
    easeOutBounce(n) {
      return n < 1 / 2.75
        ? 7.5625 * n * n
        : n < 2 / 2.75
        ? 7.5625 * (n -= 1.5 / 2.75) * n + 0.75
        : n < 2.5 / 2.75
        ? 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375
        : 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;
    },
    easeInOutBounce: (n) =>
      n < 0.5
        ? Ar.easeInBounce(n * 2) * 0.5
        : Ar.easeOutBounce(n * 2 - 1) * 0.5 + 0.5,
  };
function qd(n) {
  if (n && typeof n == "object") {
    let i = n.toString();
    return i === "[object CanvasPattern]" || i === "[object CanvasGradient]";
  }
  return !1;
}
function Kd(n) {
  return qd(n) ? n : new Aa(n);
}
function Ad(n) {
  return qd(n) ? n : new Aa(n).saturate(0.5).darken(0.1).hexString();
}
var m1 = ["x", "y", "borderWidth", "radius", "tension"],
  f1 = ["color", "borderColor", "backgroundColor"];
function g1(n) {
  n.set("animation", {
    delay: void 0,
    duration: 1e3,
    easing: "easeOutQuart",
    fn: void 0,
    from: void 0,
    loop: void 0,
    to: void 0,
    type: void 0,
  }),
    n.describe("animation", {
      _fallback: !1,
      _indexable: !1,
      _scriptable: (i) =>
        i !== "onProgress" && i !== "onComplete" && i !== "fn",
    }),
    n.set("animations", {
      colors: { type: "color", properties: f1 },
      numbers: { type: "number", properties: m1 },
    }),
    n.describe("animations", { _fallback: "animation" }),
    n.set("transitions", {
      active: { animation: { duration: 400 } },
      resize: { animation: { duration: 0 } },
      show: {
        animations: {
          colors: { from: "transparent" },
          visible: { type: "boolean", duration: 0 },
        },
      },
      hide: {
        animations: {
          colors: { to: "transparent" },
          visible: { type: "boolean", easing: "linear", fn: (i) => i | 0 },
        },
      },
    });
}
function _1(n) {
  n.set("layout", {
    autoPadding: !0,
    padding: { top: 0, right: 0, bottom: 0, left: 0 },
  });
}
var rf = new Map();
function b1(n, i) {
  i = i || {};
  let e = n + JSON.stringify(i),
    t = rf.get(e);
  return t || ((t = new Intl.NumberFormat(n, i)), rf.set(e, t)), t;
}
function Hr(n, i, e) {
  return b1(i, e).format(n);
}
var Df = {
  values(n) {
    return vt(n) ? n : "" + n;
  },
  numeric(n, i, e) {
    if (n === 0) return "0";
    let t = this.chart.options.locale,
      o,
      r = n;
    if (e.length > 1) {
      let p = Math.max(Math.abs(e[0].value), Math.abs(e[e.length - 1].value));
      (p < 1e-4 || p > 1e15) && (o = "scientific"), (r = v1(n, e));
    }
    let a = no(Math.abs(r)),
      s = isNaN(a) ? 1 : Math.max(Math.min(-1 * Math.floor(a), 20), 0),
      c = { notation: o, minimumFractionDigits: s, maximumFractionDigits: s };
    return Object.assign(c, this.options.ticks.format), Hr(n, t, c);
  },
  logarithmic(n, i, e) {
    if (n === 0) return "0";
    let t = e[i].significand || n / Math.pow(10, Math.floor(no(n)));
    return [1, 2, 3, 5, 10, 15].includes(t) || i > 0.8 * e.length
      ? Df.numeric.call(this, n, i, e)
      : "";
  },
};
function v1(n, i) {
  let e = i.length > 3 ? i[2].value - i[1].value : i[1].value - i[0].value;
  return Math.abs(e) >= 1 && n !== Math.floor(n) && (e = n - Math.floor(n)), e;
}
var La = { formatters: Df };
function y1(n) {
  n.set("scale", {
    display: !0,
    offset: !1,
    reverse: !1,
    beginAtZero: !1,
    bounds: "ticks",
    clip: !0,
    grace: 0,
    grid: {
      display: !0,
      lineWidth: 1,
      drawOnChartArea: !0,
      drawTicks: !0,
      tickLength: 8,
      tickWidth: (i, e) => e.lineWidth,
      tickColor: (i, e) => e.color,
      offset: !1,
    },
    border: { display: !0, dash: [], dashOffset: 0, width: 1 },
    title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
    ticks: {
      minRotation: 0,
      maxRotation: 50,
      mirror: !1,
      textStrokeWidth: 0,
      textStrokeColor: "",
      padding: 3,
      display: !0,
      autoSkip: !0,
      autoSkipPadding: 3,
      labelOffset: 0,
      callback: La.formatters.values,
      minor: {},
      major: {},
      align: "center",
      crossAlign: "near",
      showLabelBackdrop: !1,
      backdropColor: "rgba(255, 255, 255, 0.75)",
      backdropPadding: 2,
    },
  }),
    n.route("scale.ticks", "color", "", "color"),
    n.route("scale.grid", "color", "", "borderColor"),
    n.route("scale.border", "color", "", "borderColor"),
    n.route("scale.title", "color", "", "color"),
    n.describe("scale", {
      _fallback: !1,
      _scriptable: (i) =>
        !i.startsWith("before") &&
        !i.startsWith("after") &&
        i !== "callback" &&
        i !== "parser",
      _indexable: (i) =>
        i !== "borderDash" && i !== "tickBorderDash" && i !== "dash",
    }),
    n.describe("scales", { _fallback: "scale" }),
    n.describe("scale.ticks", {
      _scriptable: (i) => i !== "backdropPadding" && i !== "callback",
      _indexable: (i) => i !== "backdropPadding",
    });
}
var Do = Object.create(null),
  yl = Object.create(null);
function Fa(n, i) {
  if (!i) return n;
  let e = i.split(".");
  for (let t = 0, o = e.length; t < o; ++t) {
    let r = e[t];
    n = n[r] || (n[r] = Object.create(null));
  }
  return n;
}
function Rd(n, i, e) {
  return typeof i == "string" ? Rr(Fa(n, i), e) : Rr(Fa(n, ""), i);
}
var Fd = class {
    constructor(i, e) {
      (this.animation = void 0),
        (this.backgroundColor = "rgba(0,0,0,0.1)"),
        (this.borderColor = "rgba(0,0,0,0.1)"),
        (this.color = "#666"),
        (this.datasets = {}),
        (this.devicePixelRatio = (t) => t.chart.platform.getDevicePixelRatio()),
        (this.elements = {}),
        (this.events = [
          "mousemove",
          "mouseout",
          "click",
          "touchstart",
          "touchmove",
        ]),
        (this.font = {
          family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
          size: 12,
          style: "normal",
          lineHeight: 1.2,
          weight: null,
        }),
        (this.hover = {}),
        (this.hoverBackgroundColor = (t, o) => Ad(o.backgroundColor)),
        (this.hoverBorderColor = (t, o) => Ad(o.borderColor)),
        (this.hoverColor = (t, o) => Ad(o.color)),
        (this.indexAxis = "x"),
        (this.interaction = {
          mode: "nearest",
          intersect: !0,
          includeInvisible: !1,
        }),
        (this.maintainAspectRatio = !0),
        (this.onHover = null),
        (this.onClick = null),
        (this.parsing = !0),
        (this.plugins = {}),
        (this.responsive = !0),
        (this.scale = void 0),
        (this.scales = {}),
        (this.showLine = !0),
        (this.drawActiveElementsOnTop = !0),
        this.describe(i),
        this.apply(e);
    }
    set(i, e) {
      return Rd(this, i, e);
    }
    get(i) {
      return Fa(this, i);
    }
    describe(i, e) {
      return Rd(yl, i, e);
    }
    override(i, e) {
      return Rd(Do, i, e);
    }
    route(i, e, t, o) {
      let r = Fa(this, i),
        a = Fa(this, t),
        s = "_" + e;
      Object.defineProperties(r, {
        [s]: { value: r[e], writable: !0 },
        [e]: {
          enumerable: !0,
          get() {
            let c = this[s],
              p = a[o];
            return et(c) ? Object.assign({}, p, c) : je(c, p);
          },
          set(c) {
            this[s] = c;
          },
        },
      });
    }
    apply(i) {
      i.forEach((e) => e(this));
    }
  },
  Ct = new Fd(
    {
      _scriptable: (n) => !n.startsWith("on"),
      _indexable: (n) => n !== "events",
      hover: { _fallback: "interaction" },
      interaction: { _scriptable: !1, _indexable: !1 },
    },
    [g1, _1, y1]
  );
function x1(n) {
  return !n || Ke(n.size) || Ke(n.family)
    ? null
    : (n.style ? n.style + " " : "") +
        (n.weight ? n.weight + " " : "") +
        n.size +
        "px " +
        n.family;
}
function Na(n, i, e, t, o) {
  let r = i[o];
  return (
    r || ((r = i[o] = n.measureText(o).width), e.push(o)), r > t && (t = r), t
  );
}
function Sf(n, i, e, t) {
  t = t || {};
  let o = (t.data = t.data || {}),
    r = (t.garbageCollect = t.garbageCollect || []);
  t.font !== i &&
    ((o = t.data = {}), (r = t.garbageCollect = []), (t.font = i)),
    n.save(),
    (n.font = i);
  let a = 0,
    s = e.length,
    c,
    p,
    f,
    y,
    x;
  for (c = 0; c < s; c++)
    if (((y = e[c]), y != null && !vt(y))) a = Na(n, o, r, a, y);
    else if (vt(y))
      for (p = 0, f = y.length; p < f; p++)
        (x = y[p]), x != null && !vt(x) && (a = Na(n, o, r, a, x));
  n.restore();
  let C = r.length / 2;
  if (C > e.length) {
    for (c = 0; c < C; c++) delete o[r[c]];
    r.splice(0, C);
  }
  return a;
}
function So(n, i, e) {
  let t = n.currentDevicePixelRatio,
    o = e !== 0 ? Math.max(e / 2, 0.5) : 0;
  return Math.round((i - o) * t) / t + o;
}
function Qd(n, i) {
  (!i && !n) ||
    ((i = i || n.getContext("2d")),
    i.save(),
    i.resetTransform(),
    i.clearRect(0, 0, n.width, n.height),
    i.restore());
}
function xl(n, i, e, t) {
  Xd(n, i, e, t, null);
}
function Xd(n, i, e, t, o) {
  let r,
    a,
    s,
    c,
    p,
    f,
    y,
    x,
    C = i.pointStyle,
    M = i.rotation,
    k = i.radius,
    O = (M || 0) * u1;
  if (
    C &&
    typeof C == "object" &&
    ((r = C.toString()),
    r === "[object HTMLImageElement]" || r === "[object HTMLCanvasElement]")
  ) {
    n.save(),
      n.translate(e, t),
      n.rotate(O),
      n.drawImage(C, -C.width / 2, -C.height / 2, C.width, C.height),
      n.restore();
    return;
  }
  if (!(isNaN(k) || k <= 0)) {
    switch ((n.beginPath(), C)) {
      default:
        o ? n.ellipse(e, t, o / 2, k, 0, 0, yt) : n.arc(e, t, k, 0, yt),
          n.closePath();
        break;
      case "triangle":
        (f = o ? o / 2 : k),
          n.moveTo(e + Math.sin(O) * f, t - Math.cos(O) * k),
          (O += tf),
          n.lineTo(e + Math.sin(O) * f, t - Math.cos(O) * k),
          (O += tf),
          n.lineTo(e + Math.sin(O) * f, t - Math.cos(O) * k),
          n.closePath();
        break;
      case "rectRounded":
        (p = k * 0.516),
          (c = k - p),
          (a = Math.cos(O + Ko) * c),
          (y = Math.cos(O + Ko) * (o ? o / 2 - p : c)),
          (s = Math.sin(O + Ko) * c),
          (x = Math.sin(O + Ko) * (o ? o / 2 - p : c)),
          n.arc(e - y, t - s, p, O - lt, O - Lt),
          n.arc(e + x, t - a, p, O - Lt, O),
          n.arc(e + y, t + s, p, O, O + Lt),
          n.arc(e - x, t + a, p, O + Lt, O + lt),
          n.closePath();
        break;
      case "rect":
        if (!M) {
          (c = Math.SQRT1_2 * k),
            (f = o ? o / 2 : c),
            n.rect(e - f, t - c, 2 * f, 2 * c);
          break;
        }
        O += Ko;
      case "rectRot":
        (y = Math.cos(O) * (o ? o / 2 : k)),
          (a = Math.cos(O) * k),
          (s = Math.sin(O) * k),
          (x = Math.sin(O) * (o ? o / 2 : k)),
          n.moveTo(e - y, t - s),
          n.lineTo(e + x, t - a),
          n.lineTo(e + y, t + s),
          n.lineTo(e - x, t + a),
          n.closePath();
        break;
      case "crossRot":
        O += Ko;
      case "cross":
        (y = Math.cos(O) * (o ? o / 2 : k)),
          (a = Math.cos(O) * k),
          (s = Math.sin(O) * k),
          (x = Math.sin(O) * (o ? o / 2 : k)),
          n.moveTo(e - y, t - s),
          n.lineTo(e + y, t + s),
          n.moveTo(e + x, t - a),
          n.lineTo(e - x, t + a);
        break;
      case "star":
        (y = Math.cos(O) * (o ? o / 2 : k)),
          (a = Math.cos(O) * k),
          (s = Math.sin(O) * k),
          (x = Math.sin(O) * (o ? o / 2 : k)),
          n.moveTo(e - y, t - s),
          n.lineTo(e + y, t + s),
          n.moveTo(e + x, t - a),
          n.lineTo(e - x, t + a),
          (O += Ko),
          (y = Math.cos(O) * (o ? o / 2 : k)),
          (a = Math.cos(O) * k),
          (s = Math.sin(O) * k),
          (x = Math.sin(O) * (o ? o / 2 : k)),
          n.moveTo(e - y, t - s),
          n.lineTo(e + y, t + s),
          n.moveTo(e + x, t - a),
          n.lineTo(e - x, t + a);
        break;
      case "line":
        (a = o ? o / 2 : Math.cos(O) * k),
          (s = Math.sin(O) * k),
          n.moveTo(e - a, t - s),
          n.lineTo(e + a, t + s);
        break;
      case "dash":
        n.moveTo(e, t),
          n.lineTo(e + Math.cos(O) * (o ? o / 2 : k), t + Math.sin(O) * k);
        break;
      case !1:
        n.closePath();
        break;
    }
    n.fill(), i.borderWidth > 0 && n.stroke();
  }
}
function An(n, i, e) {
  return (
    (e = e || 0.5),
    !i ||
      (n &&
        n.x > i.left - e &&
        n.x < i.right + e &&
        n.y > i.top - e &&
        n.y < i.bottom + e)
  );
}
function Ba(n, i) {
  n.save(),
    n.beginPath(),
    n.rect(i.left, i.top, i.right - i.left, i.bottom - i.top),
    n.clip();
}
function Ha(n) {
  n.restore();
}
function Mf(n, i, e, t, o) {
  if (!i) return n.lineTo(e.x, e.y);
  if (o === "middle") {
    let r = (i.x + e.x) / 2;
    n.lineTo(r, i.y), n.lineTo(r, e.y);
  } else (o === "after") != !!t ? n.lineTo(i.x, e.y) : n.lineTo(e.x, i.y);
  n.lineTo(e.x, e.y);
}
function Ef(n, i, e, t) {
  if (!i) return n.lineTo(e.x, e.y);
  n.bezierCurveTo(
    t ? i.cp1x : i.cp2x,
    t ? i.cp1y : i.cp2y,
    t ? e.cp2x : e.cp1x,
    t ? e.cp2y : e.cp1y,
    e.x,
    e.y
  );
}
function C1(n, i) {
  i.translation && n.translate(i.translation[0], i.translation[1]),
    Ke(i.rotation) || n.rotate(i.rotation),
    i.color && (n.fillStyle = i.color),
    i.textAlign && (n.textAlign = i.textAlign),
    i.textBaseline && (n.textBaseline = i.textBaseline);
}
function w1(n, i, e, t, o) {
  if (o.strikethrough || o.underline) {
    let r = n.measureText(t),
      a = i - r.actualBoundingBoxLeft,
      s = i + r.actualBoundingBoxRight,
      c = e - r.actualBoundingBoxAscent,
      p = e + r.actualBoundingBoxDescent,
      f = o.strikethrough ? (c + p) / 2 : p;
    (n.strokeStyle = n.fillStyle),
      n.beginPath(),
      (n.lineWidth = o.decorationWidth || 2),
      n.moveTo(a, f),
      n.lineTo(s, f),
      n.stroke();
  }
}
function D1(n, i) {
  let e = n.fillStyle;
  (n.fillStyle = i.color),
    n.fillRect(i.left, i.top, i.width, i.height),
    (n.fillStyle = e);
}
function Mo(n, i, e, t, o, r = {}) {
  let a = vt(i) ? i : [i],
    s = r.strokeWidth > 0 && r.strokeColor !== "",
    c,
    p;
  for (n.save(), n.font = o.string, C1(n, r), c = 0; c < a.length; ++c)
    (p = a[c]),
      r.backdrop && D1(n, r.backdrop),
      s &&
        (r.strokeColor && (n.strokeStyle = r.strokeColor),
        Ke(r.strokeWidth) || (n.lineWidth = r.strokeWidth),
        n.strokeText(p, e, t, r.maxWidth)),
      n.fillText(p, e, t, r.maxWidth),
      w1(n, e, t, p, r),
      (t += Number(o.lineHeight));
  n.restore();
}
function jr(n, i) {
  let { x: e, y: t, w: o, h: r, radius: a } = i;
  n.arc(e + a.topLeft, t + a.topLeft, a.topLeft, 1.5 * lt, lt, !0),
    n.lineTo(e, t + r - a.bottomLeft),
    n.arc(e + a.bottomLeft, t + r - a.bottomLeft, a.bottomLeft, lt, Lt, !0),
    n.lineTo(e + o - a.bottomRight, t + r),
    n.arc(
      e + o - a.bottomRight,
      t + r - a.bottomRight,
      a.bottomRight,
      Lt,
      0,
      !0
    ),
    n.lineTo(e + o, t + a.topRight),
    n.arc(e + o - a.topRight, t + a.topRight, a.topRight, 0, -Lt, !0),
    n.lineTo(e + a.topLeft, t);
}
var S1 = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,
  M1 = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
function E1(n, i) {
  let e = ("" + n).match(S1);
  if (!e || e[1] === "normal") return i * 1.2;
  switch (((n = +e[2]), e[3])) {
    case "px":
      return n;
    case "%":
      n /= 100;
      break;
  }
  return i * n;
}
var T1 = (n) => +n || 0;
function Cl(n, i) {
  let e = {},
    t = et(i),
    o = t ? Object.keys(i) : i,
    r = et(n) ? (t ? (a) => je(n[a], n[i[a]]) : (a) => n[a]) : () => n;
  for (let a of o) e[a] = T1(r(a));
  return e;
}
function Zd(n) {
  return Cl(n, { top: "y", right: "x", bottom: "y", left: "x" });
}
function Eo(n) {
  return Cl(n, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
}
function li(n) {
  let i = Zd(n);
  return (i.width = i.left + i.right), (i.height = i.top + i.bottom), i;
}
function Gt(n, i) {
  (n = n || {}), (i = i || Ct.font);
  let e = je(n.size, i.size);
  typeof e == "string" && (e = parseInt(e, 10));
  let t = je(n.style, i.style);
  t &&
    !("" + t).match(M1) &&
    (console.warn('Invalid font style specified: "' + t + '"'), (t = void 0));
  let o = {
    family: je(n.family, i.family),
    lineHeight: E1(je(n.lineHeight, i.lineHeight), e),
    size: e,
    style: t,
    weight: je(n.weight, i.weight),
    string: "",
  };
  return (o.string = x1(o)), o;
}
function zr(n, i, e, t) {
  let o = !0,
    r,
    a,
    s;
  for (r = 0, a = n.length; r < a; ++r)
    if (
      ((s = n[r]),
      s !== void 0 &&
        (i !== void 0 && typeof s == "function" && ((s = s(i)), (o = !1)),
        e !== void 0 && vt(s) && ((s = s[e % s.length]), (o = !1)),
        s !== void 0))
    )
      return t && !o && (t.cacheable = !1), s;
}
function Tf(n, i, e) {
  let { min: t, max: o } = n,
    r = Nd(i, (o - t) / 2),
    a = (s, c) => (e && s === 0 ? 0 : s + c);
  return { min: a(t, -Math.abs(r)), max: a(o, r) };
}
function ro(n, i) {
  return Object.assign(Object.create(n), i);
}
function wl(n, i = [""], e, t, o = () => n[0]) {
  let r = e || n;
  typeof t > "u" && (t = If("_fallback", n));
  let a = {
    [Symbol.toStringTag]: "Object",
    _cacheable: !0,
    _scopes: n,
    _rootScopes: r,
    _fallback: t,
    _getTarget: o,
    override: (s) => wl([s, ...n], i, r, t),
  };
  return new Proxy(a, {
    deleteProperty(s, c) {
      return delete s[c], delete s._keys, delete n[0][c], !0;
    },
    get(s, c) {
      return kf(s, c, () => N1(c, i, n, s));
    },
    getOwnPropertyDescriptor(s, c) {
      return Reflect.getOwnPropertyDescriptor(s._scopes[0], c);
    },
    getPrototypeOf() {
      return Reflect.getPrototypeOf(n[0]);
    },
    has(s, c) {
      return sf(s).includes(c);
    },
    ownKeys(s) {
      return sf(s);
    },
    set(s, c, p) {
      let f = s._storage || (s._storage = o());
      return (s[c] = f[c] = p), delete s._keys, !0;
    },
  });
}
function Xo(n, i, e, t) {
  let o = {
    _cacheable: !1,
    _proxy: n,
    _context: i,
    _subProxy: e,
    _stack: new Set(),
    _descriptors: Jd(n, t),
    setContext: (r) => Xo(n, r, e, t),
    override: (r) => Xo(n.override(r), i, e, t),
  };
  return new Proxy(o, {
    deleteProperty(r, a) {
      return delete r[a], delete n[a], !0;
    },
    get(r, a, s) {
      return kf(r, a, () => O1(r, a, s));
    },
    getOwnPropertyDescriptor(r, a) {
      return r._descriptors.allKeys
        ? Reflect.has(n, a)
          ? { enumerable: !0, configurable: !0 }
          : void 0
        : Reflect.getOwnPropertyDescriptor(n, a);
    },
    getPrototypeOf() {
      return Reflect.getPrototypeOf(n);
    },
    has(r, a) {
      return Reflect.has(n, a);
    },
    ownKeys() {
      return Reflect.ownKeys(n);
    },
    set(r, a, s) {
      return (n[a] = s), delete r[a], !0;
    },
  });
}
function Jd(n, i = { scriptable: !0, indexable: !0 }) {
  let {
    _scriptable: e = i.scriptable,
    _indexable: t = i.indexable,
    _allKeys: o = i.allKeys,
  } = n;
  return {
    allKeys: o,
    scriptable: e,
    indexable: t,
    isScriptable: io(e) ? e : () => e,
    isIndexable: io(t) ? t : () => t,
  };
}
var k1 = (n, i) => (n ? n + gl(i) : i),
  eu = (n, i) =>
    et(i) &&
    n !== "adapters" &&
    (Object.getPrototypeOf(i) === null || i.constructor === Object);
function kf(n, i, e) {
  if (Object.prototype.hasOwnProperty.call(n, i) || i === "constructor")
    return n[i];
  let t = e();
  return (n[i] = t), t;
}
function O1(n, i, e) {
  let { _proxy: t, _context: o, _subProxy: r, _descriptors: a } = n,
    s = t[i];
  return (
    io(s) && a.isScriptable(i) && (s = I1(i, s, n, e)),
    vt(s) && s.length && (s = P1(i, s, n, a.isIndexable)),
    eu(i, s) && (s = Xo(s, o, r && r[i], a)),
    s
  );
}
function I1(n, i, e, t) {
  let { _proxy: o, _context: r, _subProxy: a, _stack: s } = e;
  if (s.has(n))
    throw new Error(
      "Recursion detected: " + Array.from(s).join("->") + "->" + n
    );
  s.add(n);
  let c = i(r, a || t);
  return s.delete(n), eu(n, c) && (c = tu(o._scopes, o, n, c)), c;
}
function P1(n, i, e, t) {
  let { _proxy: o, _context: r, _subProxy: a, _descriptors: s } = e;
  if (typeof r.index < "u" && t(n)) return i[r.index % i.length];
  if (et(i[0])) {
    let c = i,
      p = o._scopes.filter((f) => f !== c);
    i = [];
    for (let f of c) {
      let y = tu(p, o, n, f);
      i.push(Xo(y, r, a && a[n], s));
    }
  }
  return i;
}
function Of(n, i, e) {
  return io(n) ? n(i, e) : n;
}
var A1 = (n, i) => (n === !0 ? i : typeof n == "string" ? oo(i, n) : void 0);
function R1(n, i, e, t, o) {
  for (let r of i) {
    let a = A1(e, r);
    if (a) {
      n.add(a);
      let s = Of(a._fallback, e, o);
      if (typeof s < "u" && s !== e && s !== t) return s;
    } else if (a === !1 && typeof t < "u" && e !== t) return null;
  }
  return !1;
}
function tu(n, i, e, t) {
  let o = i._rootScopes,
    r = Of(i._fallback, e, t),
    a = [...n, ...o],
    s = new Set();
  s.add(t);
  let c = af(s, a, e, r || e, t);
  return c === null ||
    (typeof r < "u" && r !== e && ((c = af(s, a, r, c, t)), c === null))
    ? !1
    : wl(Array.from(s), [""], o, r, () => F1(i, e, t));
}
function af(n, i, e, t, o) {
  for (; e; ) e = R1(n, i, e, t, o);
  return e;
}
function F1(n, i, e) {
  let t = n._getTarget();
  i in t || (t[i] = {});
  let o = t[i];
  return vt(o) && et(e) ? e : o || {};
}
function N1(n, i, e, t) {
  let o;
  for (let r of i)
    if (((o = If(k1(r, n), e)), typeof o < "u"))
      return eu(n, o) ? tu(e, t, n, o) : o;
}
function If(n, i) {
  for (let e of i) {
    if (!e) continue;
    let t = e[n];
    if (typeof t < "u") return t;
  }
}
function sf(n) {
  let i = n._keys;
  return i || (i = n._keys = V1(n._scopes)), i;
}
function V1(n) {
  let i = new Set();
  for (let e of n)
    for (let t of Object.keys(e).filter((o) => !o.startsWith("_"))) i.add(t);
  return Array.from(i);
}
function iu(n, i, e, t) {
  let { iScale: o } = n,
    { key: r = "r" } = this._parsing,
    a = new Array(t),
    s,
    c,
    p,
    f;
  for (s = 0, c = t; s < c; ++s)
    (p = s + e), (f = i[p]), (a[s] = { r: o.parse(oo(f, r), p) });
  return a;
}
var L1 = Number.EPSILON || 1e-14,
  Fr = (n, i) => i < n.length && !n[i].skip && n[i],
  Pf = (n) => (n === "x" ? "y" : "x");
function B1(n, i, e, t) {
  let o = n.skip ? i : n,
    r = i,
    a = e.skip ? i : e,
    s = ml(r, o),
    c = ml(a, r),
    p = s / (s + c),
    f = c / (s + c);
  (p = isNaN(p) ? 0 : p), (f = isNaN(f) ? 0 : f);
  let y = t * p,
    x = t * f;
  return {
    previous: { x: r.x - y * (a.x - o.x), y: r.y - y * (a.y - o.y) },
    next: { x: r.x + x * (a.x - o.x), y: r.y + x * (a.y - o.y) },
  };
}
function H1(n, i, e) {
  let t = n.length,
    o,
    r,
    a,
    s,
    c,
    p = Fr(n, 0);
  for (let f = 0; f < t - 1; ++f)
    if (((c = p), (p = Fr(n, f + 1)), !(!c || !p))) {
      if (Lr(i[f], 0, L1)) {
        e[f] = e[f + 1] = 0;
        continue;
      }
      (o = e[f] / i[f]),
        (r = e[f + 1] / i[f]),
        (s = Math.pow(o, 2) + Math.pow(r, 2)),
        !(s <= 9) &&
          ((a = 3 / Math.sqrt(s)),
          (e[f] = o * a * i[f]),
          (e[f + 1] = r * a * i[f]));
    }
}
function j1(n, i, e = "x") {
  let t = Pf(e),
    o = n.length,
    r,
    a,
    s,
    c = Fr(n, 0);
  for (let p = 0; p < o; ++p) {
    if (((a = s), (s = c), (c = Fr(n, p + 1)), !s)) continue;
    let f = s[e],
      y = s[t];
    a &&
      ((r = (f - a[e]) / 3),
      (s[`cp1${e}`] = f - r),
      (s[`cp1${t}`] = y - r * i[p])),
      c &&
        ((r = (c[e] - f) / 3),
        (s[`cp2${e}`] = f + r),
        (s[`cp2${t}`] = y + r * i[p]));
  }
}
function z1(n, i = "x") {
  let e = Pf(i),
    t = n.length,
    o = Array(t).fill(0),
    r = Array(t),
    a,
    s,
    c,
    p = Fr(n, 0);
  for (a = 0; a < t; ++a)
    if (((s = c), (c = p), (p = Fr(n, a + 1)), !!c)) {
      if (p) {
        let f = p[i] - c[i];
        o[a] = f !== 0 ? (p[e] - c[e]) / f : 0;
      }
      r[a] = s
        ? p
          ? mn(o[a - 1]) !== mn(o[a])
            ? 0
            : (o[a - 1] + o[a]) / 2
          : o[a - 1]
        : o[a];
    }
  H1(n, o, r), j1(n, r, i);
}
function cl(n, i, e) {
  return Math.max(Math.min(n, e), i);
}
function U1(n, i) {
  let e,
    t,
    o,
    r,
    a,
    s = An(n[0], i);
  for (e = 0, t = n.length; e < t; ++e)
    (a = r),
      (r = s),
      (s = e < t - 1 && An(n[e + 1], i)),
      r &&
        ((o = n[e]),
        a &&
          ((o.cp1x = cl(o.cp1x, i.left, i.right)),
          (o.cp1y = cl(o.cp1y, i.top, i.bottom))),
        s &&
          ((o.cp2x = cl(o.cp2x, i.left, i.right)),
          (o.cp2y = cl(o.cp2y, i.top, i.bottom))));
}
function Af(n, i, e, t, o) {
  let r, a, s, c;
  if (
    (i.spanGaps && (n = n.filter((p) => !p.skip)),
    i.cubicInterpolationMode === "monotone")
  )
    z1(n, o);
  else {
    let p = t ? n[n.length - 1] : n[0];
    for (r = 0, a = n.length; r < a; ++r)
      (s = n[r]),
        (c = B1(p, s, n[Math.min(r + 1, a - (t ? 0 : 1)) % a], i.tension)),
        (s.cp1x = c.previous.x),
        (s.cp1y = c.previous.y),
        (s.cp2x = c.next.x),
        (s.cp2y = c.next.y),
        (p = s);
  }
  i.capBezierPoints && U1(n, e);
}
function Dl() {
  return typeof window < "u" && typeof document < "u";
}
function Sl(n) {
  let i = n.parentNode;
  return i && i.toString() === "[object ShadowRoot]" && (i = i.host), i;
}
function fl(n, i, e) {
  let t;
  return (
    typeof n == "string"
      ? ((t = parseInt(n, 10)),
        n.indexOf("%") !== -1 && (t = (t / 100) * i.parentNode[e]))
      : (t = n),
    t
  );
}
var Ml = (n) => n.ownerDocument.defaultView.getComputedStyle(n, null);
function W1(n, i) {
  return Ml(n).getPropertyValue(i);
}
var $1 = ["top", "right", "bottom", "left"];
function Qo(n, i, e) {
  let t = {};
  e = e ? "-" + e : "";
  for (let o = 0; o < 4; o++) {
    let r = $1[o];
    t[r] = parseFloat(n[i + "-" + r + e]) || 0;
  }
  return (t.width = t.left + t.right), (t.height = t.top + t.bottom), t;
}
var G1 = (n, i, e) => (n > 0 || i > 0) && (!e || !e.shadowRoot);
function Y1(n, i) {
  let e = n.touches,
    t = e && e.length ? e[0] : n,
    { offsetX: o, offsetY: r } = t,
    a = !1,
    s,
    c;
  if (G1(o, r, n.target)) (s = o), (c = r);
  else {
    let p = i.getBoundingClientRect();
    (s = t.clientX - p.left), (c = t.clientY - p.top), (a = !0);
  }
  return { x: s, y: c, box: a };
}
function To(n, i) {
  if ("native" in n) return n;
  let { canvas: e, currentDevicePixelRatio: t } = i,
    o = Ml(e),
    r = o.boxSizing === "border-box",
    a = Qo(o, "padding"),
    s = Qo(o, "border", "width"),
    { x: c, y: p, box: f } = Y1(n, e),
    y = a.left + (f && s.left),
    x = a.top + (f && s.top),
    { width: C, height: M } = i;
  return (
    r && ((C -= a.width + s.width), (M -= a.height + s.height)),
    {
      x: Math.round((((c - y) / C) * e.width) / t),
      y: Math.round((((p - x) / M) * e.height) / t),
    }
  );
}
function q1(n, i, e) {
  let t, o;
  if (i === void 0 || e === void 0) {
    let r = n && Sl(n);
    if (!r) (i = n.clientWidth), (e = n.clientHeight);
    else {
      let a = r.getBoundingClientRect(),
        s = Ml(r),
        c = Qo(s, "border", "width"),
        p = Qo(s, "padding");
      (i = a.width - p.width - c.width),
        (e = a.height - p.height - c.height),
        (t = fl(s.maxWidth, r, "clientWidth")),
        (o = fl(s.maxHeight, r, "clientHeight"));
    }
  }
  return { width: i, height: e, maxWidth: t || pl, maxHeight: o || pl };
}
var dl = (n) => Math.round(n * 10) / 10;
function Rf(n, i, e, t) {
  let o = Ml(n),
    r = Qo(o, "margin"),
    a = fl(o.maxWidth, n, "clientWidth") || pl,
    s = fl(o.maxHeight, n, "clientHeight") || pl,
    c = q1(n, i, e),
    { width: p, height: f } = c;
  if (o.boxSizing === "content-box") {
    let x = Qo(o, "border", "width"),
      C = Qo(o, "padding");
    (p -= C.width + x.width), (f -= C.height + x.height);
  }
  return (
    (p = Math.max(0, p - r.width)),
    (f = Math.max(0, t ? p / t : f - r.height)),
    (p = dl(Math.min(p, a, c.maxWidth))),
    (f = dl(Math.min(f, s, c.maxHeight))),
    p && !f && (f = dl(p / 2)),
    (i !== void 0 || e !== void 0) &&
      t &&
      c.height &&
      f > c.height &&
      ((f = c.height), (p = dl(Math.floor(f * t)))),
    { width: p, height: f }
  );
}
function nu(n, i, e) {
  let t = i || 1,
    o = Math.floor(n.height * t),
    r = Math.floor(n.width * t);
  (n.height = Math.floor(n.height)), (n.width = Math.floor(n.width));
  let a = n.canvas;
  return (
    a.style &&
      (e || (!a.style.height && !a.style.width)) &&
      ((a.style.height = `${n.height}px`), (a.style.width = `${n.width}px`)),
    n.currentDevicePixelRatio !== t || a.height !== o || a.width !== r
      ? ((n.currentDevicePixelRatio = t),
        (a.height = o),
        (a.width = r),
        n.ctx.setTransform(t, 0, 0, t, 0, 0),
        !0)
      : !1
  );
}
var Ff = (function () {
  let n = !1;
  try {
    let i = {
      get passive() {
        return (n = !0), !1;
      },
    };
    Dl() &&
      (window.addEventListener("test", null, i),
      window.removeEventListener("test", null, i));
  } catch {}
  return n;
})();
function ou(n, i) {
  let e = W1(n, i),
    t = e && e.match(/^(\d+)(\.\d+)?px$/);
  return t ? +t[1] : void 0;
}
function wo(n, i, e, t) {
  return { x: n.x + e * (i.x - n.x), y: n.y + e * (i.y - n.y) };
}
function Nf(n, i, e, t) {
  return {
    x: n.x + e * (i.x - n.x),
    y:
      t === "middle"
        ? e < 0.5
          ? n.y
          : i.y
        : t === "after"
        ? e < 1
          ? n.y
          : i.y
        : e > 0
        ? i.y
        : n.y,
  };
}
function Vf(n, i, e, t) {
  let o = { x: n.cp2x, y: n.cp2y },
    r = { x: i.cp1x, y: i.cp1y },
    a = wo(n, o, e),
    s = wo(o, r, e),
    c = wo(r, i, e),
    p = wo(a, s, e),
    f = wo(s, c, e);
  return wo(p, f, e);
}
var K1 = function (n, i) {
    return {
      x(e) {
        return n + n + i - e;
      },
      setWidth(e) {
        i = e;
      },
      textAlign(e) {
        return e === "center" ? e : e === "right" ? "left" : "right";
      },
      xPlus(e, t) {
        return e - t;
      },
      leftForLtr(e, t) {
        return e - t;
      },
    };
  },
  Q1 = function () {
    return {
      x(n) {
        return n;
      },
      setWidth(n) {},
      textAlign(n) {
        return n;
      },
      xPlus(n, i) {
        return n + i;
      },
      leftForLtr(n, i) {
        return n;
      },
    };
  };
function Jo(n, i, e) {
  return n ? K1(i, e) : Q1();
}
function ru(n, i) {
  let e, t;
  (i === "ltr" || i === "rtl") &&
    ((e = n.canvas.style),
    (t = [e.getPropertyValue("direction"), e.getPropertyPriority("direction")]),
    e.setProperty("direction", i, "important"),
    (n.prevTextDirection = t));
}
function au(n, i) {
  i !== void 0 &&
    (delete n.prevTextDirection,
    n.canvas.style.setProperty("direction", i[0], i[1]));
}
function Lf(n) {
  return n === "angle"
    ? { between: Br, compare: p1, normalize: ai }
    : { between: Fn, compare: (i, e) => i - e, normalize: (i) => i };
}
function lf({ start: n, end: i, count: e, loop: t, style: o }) {
  return {
    start: n % e,
    end: i % e,
    loop: t && (i - n + 1) % e === 0,
    style: o,
  };
}
function X1(n, i, e) {
  let { property: t, start: o, end: r } = e,
    { between: a, normalize: s } = Lf(t),
    c = i.length,
    { start: p, end: f, loop: y } = n,
    x,
    C;
  if (y) {
    for (p += c, f += c, x = 0, C = c; x < C && a(s(i[p % c][t]), o, r); ++x)
      p--, f--;
    (p %= c), (f %= c);
  }
  return f < p && (f += c), { start: p, end: f, loop: y, style: n.style };
}
function su(n, i, e) {
  if (!e) return [n];
  let { property: t, start: o, end: r } = e,
    a = i.length,
    { compare: s, between: c, normalize: p } = Lf(t),
    { start: f, end: y, loop: x, style: C } = X1(n, i, e),
    M = [],
    k = !1,
    O = null,
    P,
    U,
    Q,
    te = () => c(o, Q, P) && s(o, Q) !== 0,
    Z = () => s(r, P) === 0 || c(r, Q, P),
    b = () => k || te(),
    ge = () => !k || Z();
  for (let ee = f, _e = f; ee <= y; ++ee)
    (U = i[ee % a]),
      !U.skip &&
        ((P = p(U[t])),
        P !== Q &&
          ((k = c(P, o, r)),
          O === null && b() && (O = s(P, o) === 0 ? ee : _e),
          O !== null &&
            ge() &&
            (M.push(lf({ start: O, end: ee, loop: x, count: a, style: C })),
            (O = null)),
          (_e = ee),
          (Q = P)));
  return (
    O !== null && M.push(lf({ start: O, end: y, loop: x, count: a, style: C })),
    M
  );
}
function lu(n, i) {
  let e = [],
    t = n.segments;
  for (let o = 0; o < t.length; o++) {
    let r = su(t[o], n.points, i);
    r.length && e.push(...r);
  }
  return e;
}
function Z1(n, i, e, t) {
  let o = 0,
    r = i - 1;
  if (e && !t) for (; o < i && !n[o].skip; ) o++;
  for (; o < i && n[o].skip; ) o++;
  for (o %= i, e && (r += o); r > o && n[r % i].skip; ) r--;
  return (r %= i), { start: o, end: r };
}
function J1(n, i, e, t) {
  let o = n.length,
    r = [],
    a = i,
    s = n[i],
    c;
  for (c = i + 1; c <= e; ++c) {
    let p = n[c % o];
    p.skip || p.stop
      ? s.skip ||
        ((t = !1),
        r.push({ start: i % o, end: (c - 1) % o, loop: t }),
        (i = a = p.stop ? c : null))
      : ((a = c), s.skip && (i = c)),
      (s = p);
  }
  return a !== null && r.push({ start: i % o, end: a % o, loop: t }), r;
}
function Bf(n, i) {
  let e = n.points,
    t = n.options.spanGaps,
    o = e.length;
  if (!o) return [];
  let r = !!n._loop,
    { start: a, end: s } = Z1(e, o, r, t);
  if (t === !0) return cf(n, [{ start: a, end: s, loop: r }], e, i);
  let c = s < a ? s + o : s,
    p = !!n._fullLoop && a === 0 && s === o - 1;
  return cf(n, J1(e, a, c, p), e, i);
}
function cf(n, i, e, t) {
  return !t || !t.setContext || !e ? i : ey(n, i, e, t);
}
function ey(n, i, e, t) {
  let o = n._chart.getContext(),
    r = df(n.options),
    {
      _datasetIndex: a,
      options: { spanGaps: s },
    } = n,
    c = e.length,
    p = [],
    f = r,
    y = i[0].start,
    x = y;
  function C(M, k, O, P) {
    let U = s ? -1 : 1;
    if (M !== k) {
      for (M += c; e[M % c].skip; ) M -= U;
      for (; e[k % c].skip; ) k += U;
      M % c !== k % c &&
        (p.push({ start: M % c, end: k % c, loop: O, style: P }),
        (f = P),
        (y = k % c));
    }
  }
  for (let M of i) {
    y = s ? y : M.start;
    let k = e[y % c],
      O;
    for (x = y + 1; x <= M.end; x++) {
      let P = e[x % c];
      (O = df(
        t.setContext(
          ro(o, {
            type: "segment",
            p0: k,
            p1: P,
            p0DataIndex: (x - 1) % c,
            p1DataIndex: x % c,
            datasetIndex: a,
          })
        )
      )),
        ty(O, f) && C(y, x - 1, M.loop, f),
        (k = P),
        (f = O);
    }
    y < x - 1 && C(y, x - 1, M.loop, f);
  }
  return p;
}
function df(n) {
  return {
    backgroundColor: n.backgroundColor,
    borderCapStyle: n.borderCapStyle,
    borderDash: n.borderDash,
    borderDashOffset: n.borderDashOffset,
    borderJoinStyle: n.borderJoinStyle,
    borderWidth: n.borderWidth,
    borderColor: n.borderColor,
  };
}
function ty(n, i) {
  if (!i) return !1;
  let e = [],
    t = function (o, r) {
      return qd(r) ? (e.includes(r) || e.push(r), e.indexOf(r)) : r;
    };
  return JSON.stringify(n, t) !== JSON.stringify(i, t);
}
function ul(n, i, e) {
  return n.options.clip ? n[e] : i[e];
}
function iy(n, i) {
  let { xScale: e, yScale: t } = n;
  return e && t
    ? {
        left: ul(e, i, "left"),
        right: ul(e, i, "right"),
        top: ul(t, i, "top"),
        bottom: ul(t, i, "bottom"),
      }
    : i;
}
function cu(n, i) {
  let e = i._clip;
  if (e.disabled) return !1;
  let t = iy(i, n.chartArea);
  return {
    left: e.left === !1 ? 0 : t.left - (e.left === !0 ? 0 : e.left),
    right: e.right === !1 ? n.width : t.right + (e.right === !0 ? 0 : e.right),
    top: e.top === !1 ? 0 : t.top - (e.top === !0 ? 0 : e.top),
    bottom:
      e.bottom === !1 ? n.height : t.bottom + (e.bottom === !0 ? 0 : e.bottom),
  };
}
var xu = class {
    constructor() {
      (this._request = null),
        (this._charts = new Map()),
        (this._running = !1),
        (this._lastDate = void 0);
    }
    _notify(i, e, t, o) {
      let r = e.listeners[o],
        a = e.duration;
      r.forEach((s) =>
        s({
          chart: i,
          initial: e.initial,
          numSteps: a,
          currentStep: Math.min(t - e.start, a),
        })
      );
    }
    _refresh() {
      this._request ||
        ((this._running = !0),
        (this._request = Wd.call(window, () => {
          this._update(),
            (this._request = null),
            this._running && this._refresh();
        })));
    }
    _update(i = Date.now()) {
      let e = 0;
      this._charts.forEach((t, o) => {
        if (!t.running || !t.items.length) return;
        let r = t.items,
          a = r.length - 1,
          s = !1,
          c;
        for (; a >= 0; --a)
          (c = r[a]),
            c._active
              ? (c._total > t.duration && (t.duration = c._total),
                c.tick(i),
                (s = !0))
              : ((r[a] = r[r.length - 1]), r.pop());
        s && (o.draw(), this._notify(o, t, i, "progress")),
          r.length ||
            ((t.running = !1),
            this._notify(o, t, i, "complete"),
            (t.initial = !1)),
          (e += r.length);
      }),
        (this._lastDate = i),
        e === 0 && (this._running = !1);
    }
    _getAnims(i) {
      let e = this._charts,
        t = e.get(i);
      return (
        t ||
          ((t = {
            running: !1,
            initial: !0,
            items: [],
            listeners: { complete: [], progress: [] },
          }),
          e.set(i, t)),
        t
      );
    }
    listen(i, e, t) {
      this._getAnims(i).listeners[e].push(t);
    }
    add(i, e) {
      !e || !e.length || this._getAnims(i).items.push(...e);
    }
    has(i) {
      return this._getAnims(i).items.length > 0;
    }
    start(i) {
      let e = this._charts.get(i);
      e &&
        ((e.running = !0),
        (e.start = Date.now()),
        (e.duration = e.items.reduce((t, o) => Math.max(t, o._duration), 0)),
        this._refresh());
    }
    running(i) {
      if (!this._running) return !1;
      let e = this._charts.get(i);
      return !(!e || !e.running || !e.items.length);
    }
    stop(i) {
      let e = this._charts.get(i);
      if (!e || !e.items.length) return;
      let t = e.items,
        o = t.length - 1;
      for (; o >= 0; --o) t[o].cancel();
      (e.items = []), this._notify(i, e, Date.now(), "complete");
    }
    remove(i) {
      return this._charts.delete(i);
    }
  },
  ao = new xu(),
  Hf = "transparent",
  ny = {
    boolean(n, i, e) {
      return e > 0.5 ? i : n;
    },
    color(n, i, e) {
      let t = Kd(n || Hf),
        o = t.valid && Kd(i || Hf);
      return o && o.valid ? o.mix(t, e).hexString() : i;
    },
    number(n, i, e) {
      return n + (i - n) * e;
    },
  },
  Cu = class {
    constructor(i, e, t, o) {
      let r = e[t];
      o = zr([i.to, o, r, i.from]);
      let a = zr([i.from, r, o]);
      (this._active = !0),
        (this._fn = i.fn || ny[i.type || typeof a]),
        (this._easing = Ar[i.easing] || Ar.linear),
        (this._start = Math.floor(Date.now() + (i.delay || 0))),
        (this._duration = this._total = Math.floor(i.duration)),
        (this._loop = !!i.loop),
        (this._target = e),
        (this._prop = t),
        (this._from = a),
        (this._to = o),
        (this._promises = void 0);
    }
    active() {
      return this._active;
    }
    update(i, e, t) {
      if (this._active) {
        this._notify(!1);
        let o = this._target[this._prop],
          r = t - this._start,
          a = this._duration - r;
        (this._start = t),
          (this._duration = Math.floor(Math.max(a, i.duration))),
          (this._total += r),
          (this._loop = !!i.loop),
          (this._to = zr([i.to, e, o, i.from])),
          (this._from = zr([i.from, o, e]));
      }
    }
    cancel() {
      this._active &&
        (this.tick(Date.now()), (this._active = !1), this._notify(!1));
    }
    tick(i) {
      let e = i - this._start,
        t = this._duration,
        o = this._prop,
        r = this._from,
        a = this._loop,
        s = this._to,
        c;
      if (((this._active = r !== s && (a || e < t)), !this._active)) {
        (this._target[o] = s), this._notify(!0);
        return;
      }
      if (e < 0) {
        this._target[o] = r;
        return;
      }
      (c = (e / t) % 2),
        (c = a && c > 1 ? 2 - c : c),
        (c = this._easing(Math.min(1, Math.max(0, c)))),
        (this._target[o] = this._fn(r, s, c));
    }
    wait() {
      let i = this._promises || (this._promises = []);
      return new Promise((e, t) => {
        i.push({ res: e, rej: t });
      });
    }
    _notify(i) {
      let e = i ? "res" : "rej",
        t = this._promises || [];
      for (let o = 0; o < t.length; o++) t[o][e]();
    }
  },
  Fl = class {
    constructor(i, e) {
      (this._chart = i), (this._properties = new Map()), this.configure(e);
    }
    configure(i) {
      if (!et(i)) return;
      let e = Object.keys(Ct.animation),
        t = this._properties;
      Object.getOwnPropertyNames(i).forEach((o) => {
        let r = i[o];
        if (!et(r)) return;
        let a = {};
        for (let s of e) a[s] = r[s];
        ((vt(r.properties) && r.properties) || [o]).forEach((s) => {
          (s === o || !t.has(s)) && t.set(s, a);
        });
      });
    }
    _animateOptions(i, e) {
      let t = e.options,
        o = ry(i, t);
      if (!o) return [];
      let r = this._createAnimations(o, t);
      return (
        t.$shared &&
          oy(i.options.$animations, t).then(
            () => {
              i.options = t;
            },
            () => {}
          ),
        r
      );
    }
    _createAnimations(i, e) {
      let t = this._properties,
        o = [],
        r = i.$animations || (i.$animations = {}),
        a = Object.keys(e),
        s = Date.now(),
        c;
      for (c = a.length - 1; c >= 0; --c) {
        let p = a[c];
        if (p.charAt(0) === "$") continue;
        if (p === "options") {
          o.push(...this._animateOptions(i, e));
          continue;
        }
        let f = e[p],
          y = r[p],
          x = t.get(p);
        if (y)
          if (x && y.active()) {
            y.update(x, f, s);
            continue;
          } else y.cancel();
        if (!x || !x.duration) {
          i[p] = f;
          continue;
        }
        (r[p] = y = new Cu(x, i, p, f)), o.push(y);
      }
      return o;
    }
    update(i, e) {
      if (this._properties.size === 0) {
        Object.assign(i, e);
        return;
      }
      let t = this._createAnimations(i, e);
      if (t.length) return ao.add(this._chart, t), !0;
    }
  };
function oy(n, i) {
  let e = [],
    t = Object.keys(i);
  for (let o = 0; o < t.length; o++) {
    let r = n[t[o]];
    r && r.active() && e.push(r.wait());
  }
  return Promise.all(e);
}
function ry(n, i) {
  if (!i) return;
  let e = n.options;
  if (!e) {
    n.options = i;
    return;
  }
  return (
    e.$shared &&
      (n.options = e = Object.assign({}, e, { $shared: !1, $animations: {} })),
    e
  );
}
function jf(n, i) {
  let e = (n && n.options) || {},
    t = e.reverse,
    o = e.min === void 0 ? i : 0,
    r = e.max === void 0 ? i : 0;
  return { start: t ? r : o, end: t ? o : r };
}
function ay(n, i, e) {
  if (e === !1) return !1;
  let t = jf(n, e),
    o = jf(i, e);
  return { top: o.end, right: t.end, bottom: o.start, left: t.start };
}
function sy(n) {
  let i, e, t, o;
  return (
    et(n)
      ? ((i = n.top), (e = n.right), (t = n.bottom), (o = n.left))
      : (i = e = t = o = n),
    { top: i, right: e, bottom: t, left: o, disabled: n === !1 }
  );
}
function Hg(n, i) {
  let e = [],
    t = n._getSortedDatasetMetas(i),
    o,
    r;
  for (o = 0, r = t.length; o < r; ++o) e.push(t[o].index);
  return e;
}
function zf(n, i, e, t = {}) {
  let o = n.keys,
    r = t.mode === "single",
    a,
    s,
    c,
    p;
  if (i === null) return;
  let f = !1;
  for (a = 0, s = o.length; a < s; ++a) {
    if (((c = +o[a]), c === e)) {
      if (((f = !0), t.all)) continue;
      break;
    }
    (p = n.values[c]), It(p) && (r || i === 0 || mn(i) === mn(p)) && (i += p);
  }
  return !f && !t.all ? 0 : i;
}
function ly(n, i) {
  let { iScale: e, vScale: t } = i,
    o = e.axis === "x" ? "x" : "y",
    r = t.axis === "x" ? "x" : "y",
    a = Object.keys(n),
    s = new Array(a.length),
    c,
    p,
    f;
  for (c = 0, p = a.length; c < p; ++c)
    (f = a[c]), (s[c] = { [o]: f, [r]: n[f] });
  return s;
}
function du(n, i) {
  let e = n && n.options.stacked;
  return e || (e === void 0 && i.stack !== void 0);
}
function cy(n, i, e) {
  return `${n.id}.${i.id}.${e.stack || e.type}`;
}
function dy(n) {
  let { min: i, max: e, minDefined: t, maxDefined: o } = n.getUserBounds();
  return {
    min: t ? i : Number.NEGATIVE_INFINITY,
    max: o ? e : Number.POSITIVE_INFINITY,
  };
}
function uy(n, i, e) {
  let t = n[i] || (n[i] = {});
  return t[e] || (t[e] = {});
}
function Uf(n, i, e, t) {
  for (let o of i.getMatchingVisibleMetas(t).reverse()) {
    let r = n[o.index];
    if ((e && r > 0) || (!e && r < 0)) return o.index;
  }
  return null;
}
function Wf(n, i) {
  let { chart: e, _cachedMeta: t } = n,
    o = e._stacks || (e._stacks = {}),
    { iScale: r, vScale: a, index: s } = t,
    c = r.axis,
    p = a.axis,
    f = cy(r, a, t),
    y = i.length,
    x;
  for (let C = 0; C < y; ++C) {
    let M = i[C],
      { [c]: k, [p]: O } = M,
      P = M._stacks || (M._stacks = {});
    (x = P[p] = uy(o, f, k)),
      (x[s] = O),
      (x._top = Uf(x, a, !0, t.type)),
      (x._bottom = Uf(x, a, !1, t.type));
    let U = x._visualValues || (x._visualValues = {});
    U[s] = O;
  }
}
function uu(n, i) {
  let e = n.scales;
  return Object.keys(e)
    .filter((t) => e[t].axis === i)
    .shift();
}
function hy(n, i) {
  return ro(n, {
    active: !1,
    dataset: void 0,
    datasetIndex: i,
    index: i,
    mode: "default",
    type: "dataset",
  });
}
function py(n, i, e) {
  return ro(n, {
    active: !1,
    dataIndex: i,
    parsed: void 0,
    raw: void 0,
    element: e,
    index: i,
    mode: "default",
    type: "data",
  });
}
function ja(n, i) {
  let e = n.controller.index,
    t = n.vScale && n.vScale.axis;
  if (t) {
    i = i || n._parsed;
    for (let o of i) {
      let r = o._stacks;
      if (!r || r[t] === void 0 || r[t][e] === void 0) return;
      delete r[t][e],
        r[t]._visualValues !== void 0 &&
          r[t]._visualValues[e] !== void 0 &&
          delete r[t]._visualValues[e];
    }
  }
}
var hu = (n) => n === "reset" || n === "none",
  $f = (n, i) => (i ? n : Object.assign({}, n)),
  my = (n, i, e) =>
    n && !i.hidden && i._stacked && { keys: Hg(e, !0), values: null },
  Oo = (() => {
    class n {
      static defaults = {};
      static datasetElementType = null;
      static dataElementType = null;
      constructor(e, t) {
        (this.chart = e),
          (this._ctx = e.ctx),
          (this.index = t),
          (this._cachedDataOpts = {}),
          (this._cachedMeta = this.getMeta()),
          (this._type = this._cachedMeta.type),
          (this.options = void 0),
          (this._parsing = !1),
          (this._data = void 0),
          (this._objectData = void 0),
          (this._sharedOptions = void 0),
          (this._drawStart = void 0),
          (this._drawCount = void 0),
          (this.enableOptionSharing = !1),
          (this.supportsDecimation = !1),
          (this.$context = void 0),
          (this._syncList = []),
          (this.datasetElementType = new.target.datasetElementType),
          (this.dataElementType = new.target.dataElementType),
          this.initialize();
      }
      initialize() {
        let e = this._cachedMeta;
        this.configure(),
          this.linkScales(),
          (e._stacked = du(e.vScale, e)),
          this.addElements(),
          this.options.fill &&
            !this.chart.isPluginEnabled("filler") &&
            console.warn(
              "Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options"
            );
      }
      updateIndex(e) {
        this.index !== e && ja(this._cachedMeta), (this.index = e);
      }
      linkScales() {
        let e = this.chart,
          t = this._cachedMeta,
          o = this.getDataset(),
          r = (x, C, M, k) => (x === "x" ? C : x === "r" ? k : M),
          a = (t.xAxisID = je(o.xAxisID, uu(e, "x"))),
          s = (t.yAxisID = je(o.yAxisID, uu(e, "y"))),
          c = (t.rAxisID = je(o.rAxisID, uu(e, "r"))),
          p = t.indexAxis,
          f = (t.iAxisID = r(p, a, s, c)),
          y = (t.vAxisID = r(p, s, a, c));
        (t.xScale = this.getScaleForId(a)),
          (t.yScale = this.getScaleForId(s)),
          (t.rScale = this.getScaleForId(c)),
          (t.iScale = this.getScaleForId(f)),
          (t.vScale = this.getScaleForId(y));
      }
      getDataset() {
        return this.chart.data.datasets[this.index];
      }
      getMeta() {
        return this.chart.getDatasetMeta(this.index);
      }
      getScaleForId(e) {
        return this.chart.scales[e];
      }
      _getOtherScale(e) {
        let t = this._cachedMeta;
        return e === t.iScale ? t.vScale : t.iScale;
      }
      reset() {
        this._update("reset");
      }
      _destroy() {
        let e = this._cachedMeta;
        this._data && zd(this._data, this), e._stacked && ja(e);
      }
      _dataCheck() {
        let e = this.getDataset(),
          t = e.data || (e.data = []),
          o = this._data;
        if (et(t)) {
          let r = this._cachedMeta;
          this._data = ly(t, r);
        } else if (o !== t) {
          if (o) {
            zd(o, this);
            let r = this._cachedMeta;
            ja(r), (r._parsed = []);
          }
          t && Object.isExtensible(t) && xf(t, this),
            (this._syncList = []),
            (this._data = t);
        }
      }
      addElements() {
        let e = this._cachedMeta;
        this._dataCheck(),
          this.datasetElementType &&
            (e.dataset = new this.datasetElementType());
      }
      buildOrUpdateElements(e) {
        let t = this._cachedMeta,
          o = this.getDataset(),
          r = !1;
        this._dataCheck();
        let a = t._stacked;
        (t._stacked = du(t.vScale, t)),
          t.stack !== o.stack && ((r = !0), ja(t), (t.stack = o.stack)),
          this._resyncElements(e),
          (r || a !== t._stacked) &&
            (Wf(this, t._parsed), (t._stacked = du(t.vScale, t)));
      }
      configure() {
        let e = this.chart.config,
          t = e.datasetScopeKeys(this._type),
          o = e.getOptionScopes(this.getDataset(), t, !0);
        (this.options = e.createResolver(o, this.getContext())),
          (this._parsing = this.options.parsing),
          (this._cachedDataOpts = {});
      }
      parse(e, t) {
        let { _cachedMeta: o, _data: r } = this,
          { iScale: a, _stacked: s } = o,
          c = a.axis,
          p = e === 0 && t === r.length ? !0 : o._sorted,
          f = e > 0 && o._parsed[e - 1],
          y,
          x,
          C;
        if (this._parsing === !1) (o._parsed = r), (o._sorted = !0), (C = r);
        else {
          vt(r[e])
            ? (C = this.parseArrayData(o, r, e, t))
            : et(r[e])
            ? (C = this.parseObjectData(o, r, e, t))
            : (C = this.parsePrimitiveData(o, r, e, t));
          let M = () => x[c] === null || (f && x[c] < f[c]);
          for (y = 0; y < t; ++y)
            (o._parsed[y + e] = x = C[y]), p && (M() && (p = !1), (f = x));
          o._sorted = p;
        }
        s && Wf(this, C);
      }
      parsePrimitiveData(e, t, o, r) {
        let { iScale: a, vScale: s } = e,
          c = a.axis,
          p = s.axis,
          f = a.getLabels(),
          y = a === s,
          x = new Array(r),
          C,
          M,
          k;
        for (C = 0, M = r; C < M; ++C)
          (k = C + o),
            (x[C] = { [c]: y || a.parse(f[k], k), [p]: s.parse(t[k], k) });
        return x;
      }
      parseArrayData(e, t, o, r) {
        let { xScale: a, yScale: s } = e,
          c = new Array(r),
          p,
          f,
          y,
          x;
        for (p = 0, f = r; p < f; ++p)
          (y = p + o),
            (x = t[y]),
            (c[p] = { x: a.parse(x[0], y), y: s.parse(x[1], y) });
        return c;
      }
      parseObjectData(e, t, o, r) {
        let { xScale: a, yScale: s } = e,
          { xAxisKey: c = "x", yAxisKey: p = "y" } = this._parsing,
          f = new Array(r),
          y,
          x,
          C,
          M;
        for (y = 0, x = r; y < x; ++y)
          (C = y + o),
            (M = t[C]),
            (f[y] = { x: a.parse(oo(M, c), C), y: s.parse(oo(M, p), C) });
        return f;
      }
      getParsed(e) {
        return this._cachedMeta._parsed[e];
      }
      getDataElement(e) {
        return this._cachedMeta.data[e];
      }
      applyStack(e, t, o) {
        let r = this.chart,
          a = this._cachedMeta,
          s = t[e.axis],
          c = { keys: Hg(r, !0), values: t._stacks[e.axis]._visualValues };
        return zf(c, s, a.index, { mode: o });
      }
      updateRangeFromParsed(e, t, o, r) {
        let a = o[t.axis],
          s = a === null ? NaN : a,
          c = r && o._stacks[t.axis];
        r && c && ((r.values = c), (s = zf(r, a, this._cachedMeta.index))),
          (e.min = Math.min(e.min, s)),
          (e.max = Math.max(e.max, s));
      }
      getMinMax(e, t) {
        let o = this._cachedMeta,
          r = o._parsed,
          a = o._sorted && e === o.iScale,
          s = r.length,
          c = this._getOtherScale(e),
          p = my(t, o, this.chart),
          f = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY },
          { min: y, max: x } = dy(c),
          C,
          M;
        function k() {
          M = r[C];
          let O = M[c.axis];
          return !It(M[e.axis]) || y > O || x < O;
        }
        for (
          C = 0;
          C < s && !(!k() && (this.updateRangeFromParsed(f, e, M, p), a));
          ++C
        );
        if (a) {
          for (C = s - 1; C >= 0; --C)
            if (!k()) {
              this.updateRangeFromParsed(f, e, M, p);
              break;
            }
        }
        return f;
      }
      getAllParsedValues(e) {
        let t = this._cachedMeta._parsed,
          o = [],
          r,
          a,
          s;
        for (r = 0, a = t.length; r < a; ++r)
          (s = t[r][e.axis]), It(s) && o.push(s);
        return o;
      }
      getMaxOverflow() {
        return !1;
      }
      getLabelAndValue(e) {
        let t = this._cachedMeta,
          o = t.iScale,
          r = t.vScale,
          a = this.getParsed(e);
        return {
          label: o ? "" + o.getLabelForValue(a[o.axis]) : "",
          value: r ? "" + r.getLabelForValue(a[r.axis]) : "",
        };
      }
      _update(e) {
        let t = this._cachedMeta;
        this.update(e || "default"),
          (t._clip = sy(
            je(this.options.clip, ay(t.xScale, t.yScale, this.getMaxOverflow()))
          ));
      }
      update(e) {}
      draw() {
        let e = this._ctx,
          t = this.chart,
          o = this._cachedMeta,
          r = o.data || [],
          a = t.chartArea,
          s = [],
          c = this._drawStart || 0,
          p = this._drawCount || r.length - c,
          f = this.options.drawActiveElementsOnTop,
          y;
        for (o.dataset && o.dataset.draw(e, a, c, p), y = c; y < c + p; ++y) {
          let x = r[y];
          x.hidden || (x.active && f ? s.push(x) : x.draw(e, a));
        }
        for (y = 0; y < s.length; ++y) s[y].draw(e, a);
      }
      getStyle(e, t) {
        let o = t ? "active" : "default";
        return e === void 0 && this._cachedMeta.dataset
          ? this.resolveDatasetElementOptions(o)
          : this.resolveDataElementOptions(e || 0, o);
      }
      getContext(e, t, o) {
        let r = this.getDataset(),
          a;
        if (e >= 0 && e < this._cachedMeta.data.length) {
          let s = this._cachedMeta.data[e];
          (a = s.$context || (s.$context = py(this.getContext(), e, s))),
            (a.parsed = this.getParsed(e)),
            (a.raw = r.data[e]),
            (a.index = a.dataIndex = e);
        } else
          (a =
            this.$context ||
            (this.$context = hy(this.chart.getContext(), this.index))),
            (a.dataset = r),
            (a.index = a.datasetIndex = this.index);
        return (a.active = !!t), (a.mode = o), a;
      }
      resolveDatasetElementOptions(e) {
        return this._resolveElementOptions(this.datasetElementType.id, e);
      }
      resolveDataElementOptions(e, t) {
        return this._resolveElementOptions(this.dataElementType.id, t, e);
      }
      _resolveElementOptions(e, t = "default", o) {
        let r = t === "active",
          a = this._cachedDataOpts,
          s = e + "-" + t,
          c = a[s],
          p = this.enableOptionSharing && Vr(o);
        if (c) return $f(c, p);
        let f = this.chart.config,
          y = f.datasetElementScopeKeys(this._type, e),
          x = r ? [`${e}Hover`, "hover", e, ""] : [e, ""],
          C = f.getOptionScopes(this.getDataset(), y),
          M = Object.keys(Ct.elements[e]),
          k = () => this.getContext(o, r, t),
          O = f.resolveNamedOptions(C, M, k, x);
        return (
          O.$shared && ((O.$shared = p), (a[s] = Object.freeze($f(O, p)))), O
        );
      }
      _resolveAnimations(e, t, o) {
        let r = this.chart,
          a = this._cachedDataOpts,
          s = `animation-${t}`,
          c = a[s];
        if (c) return c;
        let p;
        if (r.options.animation !== !1) {
          let y = this.chart.config,
            x = y.datasetAnimationScopeKeys(this._type, t),
            C = y.getOptionScopes(this.getDataset(), x);
          p = y.createResolver(C, this.getContext(e, o, t));
        }
        let f = new Fl(r, p && p.animations);
        return p && p._cacheable && (a[s] = Object.freeze(f)), f;
      }
      getSharedOptions(e) {
        if (e.$shared)
          return (
            this._sharedOptions || (this._sharedOptions = Object.assign({}, e))
          );
      }
      includeOptions(e, t) {
        return !t || hu(e) || this.chart._animationsDisabled;
      }
      _getSharedOptions(e, t) {
        let o = this.resolveDataElementOptions(e, t),
          r = this._sharedOptions,
          a = this.getSharedOptions(o),
          s = this.includeOptions(t, a) || a !== r;
        return (
          this.updateSharedOptions(a, t, o),
          { sharedOptions: a, includeOptions: s }
        );
      }
      updateElement(e, t, o, r) {
        hu(r)
          ? Object.assign(e, o)
          : this._resolveAnimations(t, r).update(e, o);
      }
      updateSharedOptions(e, t, o) {
        e && !hu(t) && this._resolveAnimations(void 0, t).update(e, o);
      }
      _setStyle(e, t, o, r) {
        e.active = r;
        let a = this.getStyle(t, r);
        this._resolveAnimations(t, o, r).update(e, {
          options: (!r && this.getSharedOptions(a)) || a,
        });
      }
      removeHoverStyle(e, t, o) {
        this._setStyle(e, o, "active", !1);
      }
      setHoverStyle(e, t, o) {
        this._setStyle(e, o, "active", !0);
      }
      _removeDatasetHoverStyle() {
        let e = this._cachedMeta.dataset;
        e && this._setStyle(e, void 0, "active", !1);
      }
      _setDatasetHoverStyle() {
        let e = this._cachedMeta.dataset;
        e && this._setStyle(e, void 0, "active", !0);
      }
      _resyncElements(e) {
        let t = this._data,
          o = this._cachedMeta.data;
        for (let [c, p, f] of this._syncList) this[c](p, f);
        this._syncList = [];
        let r = o.length,
          a = t.length,
          s = Math.min(a, r);
        s && this.parse(0, s),
          a > r
            ? this._insertElements(r, a - r, e)
            : a < r && this._removeElements(a, r - a);
      }
      _insertElements(e, t, o = !0) {
        let r = this._cachedMeta,
          a = r.data,
          s = e + t,
          c,
          p = (f) => {
            for (f.length += t, c = f.length - 1; c >= s; c--) f[c] = f[c - t];
          };
        for (p(a), c = e; c < s; ++c) a[c] = new this.dataElementType();
        this._parsing && p(r._parsed),
          this.parse(e, t),
          o && this.updateElements(a, e, t, "reset");
      }
      updateElements(e, t, o, r) {}
      _removeElements(e, t) {
        let o = this._cachedMeta;
        if (this._parsing) {
          let r = o._parsed.splice(e, t);
          o._stacked && ja(o, r);
        }
        o.data.splice(e, t);
      }
      _sync(e) {
        if (this._parsing) this._syncList.push(e);
        else {
          let [t, o, r] = e;
          this[t](o, r);
        }
        this.chart._dataChanges.push([this.index, ...e]);
      }
      _onDataPush() {
        let e = arguments.length;
        this._sync(["_insertElements", this.getDataset().data.length - e, e]);
      }
      _onDataPop() {
        this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1]);
      }
      _onDataShift() {
        this._sync(["_removeElements", 0, 1]);
      }
      _onDataSplice(e, t) {
        t && this._sync(["_removeElements", e, t]);
        let o = arguments.length - 2;
        o && this._sync(["_insertElements", e, o]);
      }
      _onDataUnshift() {
        this._sync(["_insertElements", 0, arguments.length]);
      }
    }
    return n;
  })();
function fy(n, i) {
  if (!n._cache.$bar) {
    let e = n.getMatchingVisibleMetas(i),
      t = [];
    for (let o = 0, r = e.length; o < r; o++)
      t = t.concat(e[o].controller.getAllParsedValues(n));
    n._cache.$bar = Ud(t.sort((o, r) => o - r));
  }
  return n._cache.$bar;
}
function gy(n) {
  let i = n.iScale,
    e = fy(i, n.type),
    t = i._length,
    o,
    r,
    a,
    s,
    c = () => {
      a === 32767 ||
        a === -32768 ||
        (Vr(s) && (t = Math.min(t, Math.abs(a - s) || t)), (s = a));
    };
  for (o = 0, r = e.length; o < r; ++o) (a = i.getPixelForValue(e[o])), c();
  for (s = void 0, o = 0, r = i.ticks.length; o < r; ++o)
    (a = i.getPixelForTick(o)), c();
  return t;
}
function _y(n, i, e, t) {
  let o = e.barThickness,
    r,
    a;
  return (
    Ke(o)
      ? ((r = i.min * e.categoryPercentage), (a = e.barPercentage))
      : ((r = o * t), (a = 1)),
    { chunk: r / t, ratio: a, start: i.pixels[n] - r / 2 }
  );
}
function by(n, i, e, t) {
  let o = i.pixels,
    r = o[n],
    a = n > 0 ? o[n - 1] : null,
    s = n < o.length - 1 ? o[n + 1] : null,
    c = e.categoryPercentage;
  a === null && (a = r - (s === null ? i.end - i.start : s - r)),
    s === null && (s = r + r - a);
  let p = r - ((r - Math.min(a, s)) / 2) * c;
  return {
    chunk: ((Math.abs(s - a) / 2) * c) / t,
    ratio: e.barPercentage,
    start: p,
  };
}
function vy(n, i, e, t) {
  let o = e.parse(n[0], t),
    r = e.parse(n[1], t),
    a = Math.min(o, r),
    s = Math.max(o, r),
    c = a,
    p = s;
  Math.abs(a) > Math.abs(s) && ((c = s), (p = a)),
    (i[e.axis] = p),
    (i._custom = { barStart: c, barEnd: p, start: o, end: r, min: a, max: s });
}
function jg(n, i, e, t) {
  return vt(n) ? vy(n, i, e, t) : (i[e.axis] = e.parse(n, t)), i;
}
function Gf(n, i, e, t) {
  let o = n.iScale,
    r = n.vScale,
    a = o.getLabels(),
    s = o === r,
    c = [],
    p,
    f,
    y,
    x;
  for (p = e, f = e + t; p < f; ++p)
    (x = i[p]),
      (y = {}),
      (y[o.axis] = s || o.parse(a[p], p)),
      c.push(jg(x, y, r, p));
  return c;
}
function pu(n) {
  return n && n.barStart !== void 0 && n.barEnd !== void 0;
}
function yy(n, i, e) {
  return n !== 0 ? mn(n) : (i.isHorizontal() ? 1 : -1) * (i.min >= e ? 1 : -1);
}
function xy(n) {
  let i, e, t, o, r;
  return (
    n.horizontal
      ? ((i = n.base > n.x), (e = "left"), (t = "right"))
      : ((i = n.base < n.y), (e = "bottom"), (t = "top")),
    i ? ((o = "end"), (r = "start")) : ((o = "start"), (r = "end")),
    { start: e, end: t, reverse: i, top: o, bottom: r }
  );
}
function Cy(n, i, e, t) {
  let o = i.borderSkipped,
    r = {};
  if (!o) {
    n.borderSkipped = r;
    return;
  }
  if (o === !0) {
    n.borderSkipped = { top: !0, right: !0, bottom: !0, left: !0 };
    return;
  }
  let { start: a, end: s, reverse: c, top: p, bottom: f } = xy(n);
  o === "middle" &&
    e &&
    ((n.enableBorderRadius = !0),
    (e._top || 0) === t
      ? (o = p)
      : (e._bottom || 0) === t
      ? (o = f)
      : ((r[Yf(f, a, s, c)] = !0), (o = p))),
    (r[Yf(o, a, s, c)] = !0),
    (n.borderSkipped = r);
}
function Yf(n, i, e, t) {
  return t ? ((n = wy(n, i, e)), (n = qf(n, e, i))) : (n = qf(n, i, e)), n;
}
function wy(n, i, e) {
  return n === i ? e : n === e ? i : n;
}
function qf(n, i, e) {
  return n === "start" ? i : n === "end" ? e : n;
}
function Dy(n, { inflateAmount: i }, e) {
  n.inflateAmount = i === "auto" ? (e === 1 ? 0.33 : 0) : i;
}
var Sy = (() => {
    class n extends Oo {
      static id = "bar";
      static defaults = {
        datasetElementType: !1,
        dataElementType: "bar",
        categoryPercentage: 0.8,
        barPercentage: 0.9,
        grouped: !0,
        animations: {
          numbers: {
            type: "number",
            properties: ["x", "y", "base", "width", "height"],
          },
        },
      };
      static overrides = {
        scales: {
          _index_: { type: "category", offset: !0, grid: { offset: !0 } },
          _value_: { type: "linear", beginAtZero: !0 },
        },
      };
      parsePrimitiveData(e, t, o, r) {
        return Gf(e, t, o, r);
      }
      parseArrayData(e, t, o, r) {
        return Gf(e, t, o, r);
      }
      parseObjectData(e, t, o, r) {
        let { iScale: a, vScale: s } = e,
          { xAxisKey: c = "x", yAxisKey: p = "y" } = this._parsing,
          f = a.axis === "x" ? c : p,
          y = s.axis === "x" ? c : p,
          x = [],
          C,
          M,
          k,
          O;
        for (C = o, M = o + r; C < M; ++C)
          (O = t[C]),
            (k = {}),
            (k[a.axis] = a.parse(oo(O, f), C)),
            x.push(jg(oo(O, y), k, s, C));
        return x;
      }
      updateRangeFromParsed(e, t, o, r) {
        super.updateRangeFromParsed(e, t, o, r);
        let a = o._custom;
        a &&
          t === this._cachedMeta.vScale &&
          ((e.min = Math.min(e.min, a.min)), (e.max = Math.max(e.max, a.max)));
      }
      getMaxOverflow() {
        return 0;
      }
      getLabelAndValue(e) {
        let t = this._cachedMeta,
          { iScale: o, vScale: r } = t,
          a = this.getParsed(e),
          s = a._custom,
          c = pu(s)
            ? "[" + s.start + ", " + s.end + "]"
            : "" + r.getLabelForValue(a[r.axis]);
        return { label: "" + o.getLabelForValue(a[o.axis]), value: c };
      }
      initialize() {
        (this.enableOptionSharing = !0), super.initialize();
        let e = this._cachedMeta;
        e.stack = this.getDataset().stack;
      }
      update(e) {
        let t = this._cachedMeta;
        this.updateElements(t.data, 0, t.data.length, e);
      }
      updateElements(e, t, o, r) {
        let a = r === "reset",
          {
            index: s,
            _cachedMeta: { vScale: c },
          } = this,
          p = c.getBasePixel(),
          f = c.isHorizontal(),
          y = this._getRuler(),
          { sharedOptions: x, includeOptions: C } = this._getSharedOptions(
            t,
            r
          );
        for (let M = t; M < t + o; M++) {
          let k = this.getParsed(M),
            O =
              a || Ke(k[c.axis])
                ? { base: p, head: p }
                : this._calculateBarValuePixels(M),
            P = this._calculateBarIndexPixels(M, y),
            U = (k._stacks || {})[c.axis],
            Q = {
              horizontal: f,
              base: O.base,
              enableBorderRadius:
                !U || pu(k._custom) || s === U._top || s === U._bottom,
              x: f ? O.head : P.center,
              y: f ? P.center : O.head,
              height: f ? P.size : Math.abs(O.size),
              width: f ? Math.abs(O.size) : P.size,
            };
          C &&
            (Q.options =
              x ||
              this.resolveDataElementOptions(M, e[M].active ? "active" : r));
          let te = Q.options || e[M].options;
          Cy(Q, te, U, s),
            Dy(Q, te, y.ratio),
            this.updateElement(e[M], M, Q, r);
        }
      }
      _getStacks(e, t) {
        let { iScale: o } = this._cachedMeta,
          r = o
            .getMatchingVisibleMetas(this._type)
            .filter((y) => y.controller.options.grouped),
          a = o.options.stacked,
          s = [],
          c = this._cachedMeta.controller.getParsed(t),
          p = c && c[o.axis],
          f = (y) => {
            let x = y._parsed.find((M) => M[o.axis] === p),
              C = x && x[y.vScale.axis];
            if (Ke(C) || isNaN(C)) return !0;
          };
        for (let y of r)
          if (
            !(t !== void 0 && f(y)) &&
            ((a === !1 ||
              s.indexOf(y.stack) === -1 ||
              (a === void 0 && y.stack === void 0)) &&
              s.push(y.stack),
            y.index === e)
          )
            break;
        return s.length || s.push(void 0), s;
      }
      _getStackCount(e) {
        return this._getStacks(void 0, e).length;
      }
      _getAxisCount() {
        return this._getAxis().length;
      }
      getFirstScaleIdForIndexAxis() {
        let e = this.chart.scales,
          t = this.chart.options.indexAxis;
        return Object.keys(e)
          .filter((o) => e[o].axis === t)
          .shift();
      }
      _getAxis() {
        let e = {},
          t = this.getFirstScaleIdForIndexAxis();
        for (let o of this.chart.data.datasets)
          e[
            je(this.chart.options.indexAxis === "x" ? o.xAxisID : o.yAxisID, t)
          ] = !0;
        return Object.keys(e);
      }
      _getStackIndex(e, t, o) {
        let r = this._getStacks(e, o),
          a = t !== void 0 ? r.indexOf(t) : -1;
        return a === -1 ? r.length - 1 : a;
      }
      _getRuler() {
        let e = this.options,
          t = this._cachedMeta,
          o = t.iScale,
          r = [],
          a,
          s;
        for (a = 0, s = t.data.length; a < s; ++a)
          r.push(o.getPixelForValue(this.getParsed(a)[o.axis], a));
        let c = e.barThickness;
        return {
          min: c || gy(t),
          pixels: r,
          start: o._startPixel,
          end: o._endPixel,
          stackCount: this._getStackCount(),
          scale: o,
          grouped: e.grouped,
          ratio: c ? 1 : e.categoryPercentage * e.barPercentage,
        };
      }
      _calculateBarValuePixels(e) {
        let {
            _cachedMeta: { vScale: t, _stacked: o, index: r },
            options: { base: a, minBarLength: s },
          } = this,
          c = a || 0,
          p = this.getParsed(e),
          f = p._custom,
          y = pu(f),
          x = p[t.axis],
          C = 0,
          M = o ? this.applyStack(t, p, o) : x,
          k,
          O;
        M !== x && ((C = M - x), (M = x)),
          y &&
            ((x = f.barStart),
            (M = f.barEnd - f.barStart),
            x !== 0 && mn(x) !== mn(f.barEnd) && (C = 0),
            (C += x));
        let P = !Ke(a) && !y ? a : C,
          U = t.getPixelForValue(P);
        if (
          (this.chart.getDataVisibility(e)
            ? (k = t.getPixelForValue(C + M))
            : (k = U),
          (O = k - U),
          Math.abs(O) < s)
        ) {
          (O = yy(O, t, c) * s), x === c && (U -= O / 2);
          let Q = t.getPixelForDecimal(0),
            te = t.getPixelForDecimal(1),
            Z = Math.min(Q, te),
            b = Math.max(Q, te);
          (U = Math.max(Math.min(U, b), Z)),
            (k = U + O),
            o &&
              !y &&
              (p._stacks[t.axis]._visualValues[r] =
                t.getValueForPixel(k) - t.getValueForPixel(U));
        }
        if (U === t.getPixelForValue(c)) {
          let Q = (mn(O) * t.getLineWidthForValue(c)) / 2;
          (U += Q), (O -= Q);
        }
        return { size: O, base: U, head: k, center: k + O / 2 };
      }
      _calculateBarIndexPixels(e, t) {
        let o = t.scale,
          r = this.options,
          a = r.skipNull,
          s = je(r.maxBarThickness, 1 / 0),
          c,
          p,
          f = this._getAxisCount();
        if (t.grouped) {
          let y = a ? this._getStackCount(e) : t.stackCount,
            x =
              r.barThickness === "flex"
                ? by(e, t, r, y * f)
                : _y(e, t, r, y * f),
            C =
              this.chart.options.indexAxis === "x"
                ? this.getDataset().xAxisID
                : this.getDataset().yAxisID,
            M = this._getAxis().indexOf(
              je(C, this.getFirstScaleIdForIndexAxis())
            ),
            k =
              this._getStackIndex(
                this.index,
                this._cachedMeta.stack,
                a ? e : void 0
              ) + M;
          (c = x.start + x.chunk * k + x.chunk / 2),
            (p = Math.min(s, x.chunk * x.ratio));
        } else
          (c = o.getPixelForValue(this.getParsed(e)[o.axis], e)),
            (p = Math.min(s, t.min * t.ratio));
        return { base: c - p / 2, head: c + p / 2, center: c, size: p };
      }
      draw() {
        let e = this._cachedMeta,
          t = e.vScale,
          o = e.data,
          r = o.length,
          a = 0;
        for (; a < r; ++a)
          this.getParsed(a)[t.axis] !== null &&
            !o[a].hidden &&
            o[a].draw(this._ctx);
      }
    }
    return n;
  })(),
  My = (() => {
    class n extends Oo {
      static id = "bubble";
      static defaults = {
        datasetElementType: !1,
        dataElementType: "point",
        animations: {
          numbers: {
            type: "number",
            properties: ["x", "y", "borderWidth", "radius"],
          },
        },
      };
      static overrides = {
        scales: { x: { type: "linear" }, y: { type: "linear" } },
      };
      initialize() {
        (this.enableOptionSharing = !0), super.initialize();
      }
      parsePrimitiveData(e, t, o, r) {
        let a = super.parsePrimitiveData(e, t, o, r);
        for (let s = 0; s < a.length; s++)
          a[s]._custom = this.resolveDataElementOptions(s + o).radius;
        return a;
      }
      parseArrayData(e, t, o, r) {
        let a = super.parseArrayData(e, t, o, r);
        for (let s = 0; s < a.length; s++) {
          let c = t[o + s];
          a[s]._custom = je(c[2], this.resolveDataElementOptions(s + o).radius);
        }
        return a;
      }
      parseObjectData(e, t, o, r) {
        let a = super.parseObjectData(e, t, o, r);
        for (let s = 0; s < a.length; s++) {
          let c = t[o + s];
          a[s]._custom = je(
            c && c.r && +c.r,
            this.resolveDataElementOptions(s + o).radius
          );
        }
        return a;
      }
      getMaxOverflow() {
        let e = this._cachedMeta.data,
          t = 0;
        for (let o = e.length - 1; o >= 0; --o)
          t = Math.max(t, e[o].size(this.resolveDataElementOptions(o)) / 2);
        return t > 0 && t;
      }
      getLabelAndValue(e) {
        let t = this._cachedMeta,
          o = this.chart.data.labels || [],
          { xScale: r, yScale: a } = t,
          s = this.getParsed(e),
          c = r.getLabelForValue(s.x),
          p = a.getLabelForValue(s.y),
          f = s._custom;
        return {
          label: o[e] || "",
          value: "(" + c + ", " + p + (f ? ", " + f : "") + ")",
        };
      }
      update(e) {
        let t = this._cachedMeta.data;
        this.updateElements(t, 0, t.length, e);
      }
      updateElements(e, t, o, r) {
        let a = r === "reset",
          { iScale: s, vScale: c } = this._cachedMeta,
          { sharedOptions: p, includeOptions: f } = this._getSharedOptions(
            t,
            r
          ),
          y = s.axis,
          x = c.axis;
        for (let C = t; C < t + o; C++) {
          let M = e[C],
            k = !a && this.getParsed(C),
            O = {},
            P = (O[y] = a
              ? s.getPixelForDecimal(0.5)
              : s.getPixelForValue(k[y])),
            U = (O[x] = a ? c.getBasePixel() : c.getPixelForValue(k[x]));
          (O.skip = isNaN(P) || isNaN(U)),
            f &&
              ((O.options =
                p ||
                this.resolveDataElementOptions(C, M.active ? "active" : r)),
              a && (O.options.radius = 0)),
            this.updateElement(M, C, O, r);
        }
      }
      resolveDataElementOptions(e, t) {
        let o = this.getParsed(e),
          r = super.resolveDataElementOptions(e, t);
        r.$shared && (r = Object.assign({}, r, { $shared: !1 }));
        let a = r.radius;
        return (
          t !== "active" && (r.radius = 0),
          (r.radius += je(o && o._custom, a)),
          r
        );
      }
    }
    return n;
  })();
function Ey(n, i, e) {
  let t = 1,
    o = 1,
    r = 0,
    a = 0;
  if (i < yt) {
    let s = n,
      c = s + i,
      p = Math.cos(s),
      f = Math.sin(s),
      y = Math.cos(c),
      x = Math.sin(c),
      C = (Q, te, Z) => (Br(Q, s, c, !0) ? 1 : Math.max(te, te * e, Z, Z * e)),
      M = (Q, te, Z) => (Br(Q, s, c, !0) ? -1 : Math.min(te, te * e, Z, Z * e)),
      k = C(0, p, y),
      O = C(Lt, f, x),
      P = M(lt, p, y),
      U = M(lt + Lt, f, x);
    (t = (k - P) / 2),
      (o = (O - U) / 2),
      (r = -(k + P) / 2),
      (a = -(O + U) / 2);
  }
  return { ratioX: t, ratioY: o, offsetX: r, offsetY: a };
}
var ju = (() => {
    class n extends Oo {
      static id = "doughnut";
      static defaults = {
        datasetElementType: !1,
        dataElementType: "arc",
        animation: { animateRotate: !0, animateScale: !1 },
        animations: {
          numbers: {
            type: "number",
            properties: [
              "circumference",
              "endAngle",
              "innerRadius",
              "outerRadius",
              "startAngle",
              "x",
              "y",
              "offset",
              "borderWidth",
              "spacing",
            ],
          },
        },
        cutout: "50%",
        rotation: 0,
        circumference: 360,
        radius: "100%",
        spacing: 0,
        indexAxis: "r",
      };
      static descriptors = {
        _scriptable: (e) => e !== "spacing",
        _indexable: (e) =>
          e !== "spacing" &&
          !e.startsWith("borderDash") &&
          !e.startsWith("hoverBorderDash"),
      };
      static overrides = {
        aspectRatio: 1,
        plugins: {
          legend: {
            labels: {
              generateLabels(e) {
                let t = e.data;
                if (t.labels.length && t.datasets.length) {
                  let {
                    labels: { pointStyle: o, color: r },
                  } = e.legend.options;
                  return t.labels.map((a, s) => {
                    let p = e.getDatasetMeta(0).controller.getStyle(s);
                    return {
                      text: a,
                      fillStyle: p.backgroundColor,
                      strokeStyle: p.borderColor,
                      fontColor: r,
                      lineWidth: p.borderWidth,
                      pointStyle: o,
                      hidden: !e.getDataVisibility(s),
                      index: s,
                    };
                  });
                }
                return [];
              },
            },
            onClick(e, t, o) {
              o.chart.toggleDataVisibility(t.index), o.chart.update();
            },
          },
        },
      };
      constructor(e, t) {
        super(e, t),
          (this.enableOptionSharing = !0),
          (this.innerRadius = void 0),
          (this.outerRadius = void 0),
          (this.offsetX = void 0),
          (this.offsetY = void 0);
      }
      linkScales() {}
      parse(e, t) {
        let o = this.getDataset().data,
          r = this._cachedMeta;
        if (this._parsing === !1) r._parsed = o;
        else {
          let a = (p) => +o[p];
          if (et(o[e])) {
            let { key: p = "value" } = this._parsing;
            a = (f) => +oo(o[f], p);
          }
          let s, c;
          for (s = e, c = e + t; s < c; ++s) r._parsed[s] = a(s);
        }
      }
      _getRotation() {
        return en(this.options.rotation - 90);
      }
      _getCircumference() {
        return en(this.options.circumference);
      }
      _getRotationExtents() {
        let e = yt,
          t = -yt;
        for (let o = 0; o < this.chart.data.datasets.length; ++o)
          if (
            this.chart.isDatasetVisible(o) &&
            this.chart.getDatasetMeta(o).type === this._type
          ) {
            let r = this.chart.getDatasetMeta(o).controller,
              a = r._getRotation(),
              s = r._getCircumference();
            (e = Math.min(e, a)), (t = Math.max(t, a + s));
          }
        return { rotation: e, circumference: t - e };
      }
      update(e) {
        let t = this.chart,
          { chartArea: o } = t,
          r = this._cachedMeta,
          a = r.data,
          s =
            this.getMaxBorderWidth() +
            this.getMaxOffset(a) +
            this.options.spacing,
          c = Math.max((Math.min(o.width, o.height) - s) / 2, 0),
          p = Math.min(hf(this.options.cutout, c), 1),
          f = this._getRingWeight(this.index),
          { circumference: y, rotation: x } = this._getRotationExtents(),
          { ratioX: C, ratioY: M, offsetX: k, offsetY: O } = Ey(x, y, p),
          P = (o.width - s) / C,
          U = (o.height - s) / M,
          Q = Math.max(Math.min(P, U) / 2, 0),
          te = Nd(this.options.radius, Q),
          Z = Math.max(te * p, 0),
          b = (te - Z) / this._getVisibleDatasetWeightTotal();
        (this.offsetX = k * te),
          (this.offsetY = O * te),
          (r.total = this.calculateTotal()),
          (this.outerRadius = te - b * this._getRingWeightOffset(this.index)),
          (this.innerRadius = Math.max(this.outerRadius - b * f, 0)),
          this.updateElements(a, 0, a.length, e);
      }
      _circumference(e, t) {
        let o = this.options,
          r = this._cachedMeta,
          a = this._getCircumference();
        return (t && o.animation.animateRotate) ||
          !this.chart.getDataVisibility(e) ||
          r._parsed[e] === null ||
          r.data[e].hidden
          ? 0
          : this.calculateCircumference((r._parsed[e] * a) / yt);
      }
      updateElements(e, t, o, r) {
        let a = r === "reset",
          s = this.chart,
          c = s.chartArea,
          f = s.options.animation,
          y = (c.left + c.right) / 2,
          x = (c.top + c.bottom) / 2,
          C = a && f.animateScale,
          M = C ? 0 : this.innerRadius,
          k = C ? 0 : this.outerRadius,
          { sharedOptions: O, includeOptions: P } = this._getSharedOptions(
            t,
            r
          ),
          U = this._getRotation(),
          Q;
        for (Q = 0; Q < t; ++Q) U += this._circumference(Q, a);
        for (Q = t; Q < t + o; ++Q) {
          let te = this._circumference(Q, a),
            Z = e[Q],
            b = {
              x: y + this.offsetX,
              y: x + this.offsetY,
              startAngle: U,
              endAngle: U + te,
              circumference: te,
              outerRadius: k,
              innerRadius: M,
            };
          P &&
            (b.options =
              O || this.resolveDataElementOptions(Q, Z.active ? "active" : r)),
            (U += te),
            this.updateElement(Z, Q, b, r);
        }
      }
      calculateTotal() {
        let e = this._cachedMeta,
          t = e.data,
          o = 0,
          r;
        for (r = 0; r < t.length; r++) {
          let a = e._parsed[r];
          a !== null &&
            !isNaN(a) &&
            this.chart.getDataVisibility(r) &&
            !t[r].hidden &&
            (o += Math.abs(a));
        }
        return o;
      }
      calculateCircumference(e) {
        let t = this._cachedMeta.total;
        return t > 0 && !isNaN(e) ? yt * (Math.abs(e) / t) : 0;
      }
      getLabelAndValue(e) {
        let t = this._cachedMeta,
          o = this.chart,
          r = o.data.labels || [],
          a = Hr(t._parsed[e], o.options.locale);
        return { label: r[e] || "", value: a };
      }
      getMaxBorderWidth(e) {
        let t = 0,
          o = this.chart,
          r,
          a,
          s,
          c,
          p;
        if (!e) {
          for (r = 0, a = o.data.datasets.length; r < a; ++r)
            if (o.isDatasetVisible(r)) {
              (s = o.getDatasetMeta(r)), (e = s.data), (c = s.controller);
              break;
            }
        }
        if (!e) return 0;
        for (r = 0, a = e.length; r < a; ++r)
          (p = c.resolveDataElementOptions(r)),
            p.borderAlign !== "inner" &&
              (t = Math.max(t, p.borderWidth || 0, p.hoverBorderWidth || 0));
        return t;
      }
      getMaxOffset(e) {
        let t = 0;
        for (let o = 0, r = e.length; o < r; ++o) {
          let a = this.resolveDataElementOptions(o);
          t = Math.max(t, a.offset || 0, a.hoverOffset || 0);
        }
        return t;
      }
      _getRingWeightOffset(e) {
        let t = 0;
        for (let o = 0; o < e; ++o)
          this.chart.isDatasetVisible(o) && (t += this._getRingWeight(o));
        return t;
      }
      _getRingWeight(e) {
        return Math.max(je(this.chart.data.datasets[e].weight, 1), 0);
      }
      _getVisibleDatasetWeightTotal() {
        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;
      }
    }
    return n;
  })(),
  zu = (() => {
    class n extends Oo {
      static id = "line";
      static defaults = {
        datasetElementType: "line",
        dataElementType: "point",
        showLine: !0,
        spanGaps: !1,
      };
      static overrides = {
        scales: { _index_: { type: "category" }, _value_: { type: "linear" } },
      };
      initialize() {
        (this.enableOptionSharing = !0),
          (this.supportsDecimation = !0),
          super.initialize();
      }
      update(e) {
        let t = this._cachedMeta,
          { dataset: o, data: r = [], _dataset: a } = t,
          s = this.chart._animationsDisabled,
          { start: c, count: p } = Gd(t, r, s);
        (this._drawStart = c),
          (this._drawCount = p),
          Yd(t) && ((c = 0), (p = r.length)),
          (o._chart = this.chart),
          (o._datasetIndex = this.index),
          (o._decimated = !!a._decimated),
          (o.points = r);
        let f = this.resolveDatasetElementOptions(e);
        this.options.showLine || (f.borderWidth = 0),
          (f.segment = this.options.segment),
          this.updateElement(o, void 0, { animated: !s, options: f }, e),
          this.updateElements(r, c, p, e);
      }
      updateElements(e, t, o, r) {
        let a = r === "reset",
          { iScale: s, vScale: c, _stacked: p, _dataset: f } = this._cachedMeta,
          { sharedOptions: y, includeOptions: x } = this._getSharedOptions(
            t,
            r
          ),
          C = s.axis,
          M = c.axis,
          { spanGaps: k, segment: O } = this.options,
          P = Zo(k) ? k : Number.POSITIVE_INFINITY,
          U = this.chart._animationsDisabled || a || r === "none",
          Q = t + o,
          te = e.length,
          Z = t > 0 && this.getParsed(t - 1);
        for (let b = 0; b < te; ++b) {
          let ge = e[b],
            ee = U ? ge : {};
          if (b < t || b >= Q) {
            ee.skip = !0;
            continue;
          }
          let _e = this.getParsed(b),
            Re = Ke(_e[M]),
            Ue = (ee[C] = s.getPixelForValue(_e[C], b)),
            xe = (ee[M] =
              a || Re
                ? c.getBasePixel()
                : c.getPixelForValue(p ? this.applyStack(c, _e, p) : _e[M], b));
          (ee.skip = isNaN(Ue) || isNaN(xe) || Re),
            (ee.stop = b > 0 && Math.abs(_e[C] - Z[C]) > P),
            O && ((ee.parsed = _e), (ee.raw = f.data[b])),
            x &&
              (ee.options =
                y ||
                this.resolveDataElementOptions(b, ge.active ? "active" : r)),
            U || this.updateElement(ge, b, ee, r),
            (Z = _e);
        }
      }
      getMaxOverflow() {
        let e = this._cachedMeta,
          t = e.dataset,
          o = (t.options && t.options.borderWidth) || 0,
          r = e.data || [];
        if (!r.length) return o;
        let a = r[0].size(this.resolveDataElementOptions(0)),
          s = r[r.length - 1].size(
            this.resolveDataElementOptions(r.length - 1)
          );
        return Math.max(o, a, s) / 2;
      }
      draw() {
        let e = this._cachedMeta;
        e.dataset.updateControlPoints(this.chart.chartArea, e.iScale.axis),
          super.draw();
      }
    }
    return n;
  })(),
  zg = (() => {
    class n extends Oo {
      static id = "polarArea";
      static defaults = {
        dataElementType: "arc",
        animation: { animateRotate: !0, animateScale: !0 },
        animations: {
          numbers: {
            type: "number",
            properties: [
              "x",
              "y",
              "startAngle",
              "endAngle",
              "innerRadius",
              "outerRadius",
            ],
          },
        },
        indexAxis: "r",
        startAngle: 0,
      };
      static overrides = {
        aspectRatio: 1,
        plugins: {
          legend: {
            labels: {
              generateLabels(e) {
                let t = e.data;
                if (t.labels.length && t.datasets.length) {
                  let {
                    labels: { pointStyle: o, color: r },
                  } = e.legend.options;
                  return t.labels.map((a, s) => {
                    let p = e.getDatasetMeta(0).controller.getStyle(s);
                    return {
                      text: a,
                      fillStyle: p.backgroundColor,
                      strokeStyle: p.borderColor,
                      fontColor: r,
                      lineWidth: p.borderWidth,
                      pointStyle: o,
                      hidden: !e.getDataVisibility(s),
                      index: s,
                    };
                  });
                }
                return [];
              },
            },
            onClick(e, t, o) {
              o.chart.toggleDataVisibility(t.index), o.chart.update();
            },
          },
        },
        scales: {
          r: {
            type: "radialLinear",
            angleLines: { display: !1 },
            beginAtZero: !0,
            grid: { circular: !0 },
            pointLabels: { display: !1 },
            startAngle: 0,
          },
        },
      };
      constructor(e, t) {
        super(e, t), (this.innerRadius = void 0), (this.outerRadius = void 0);
      }
      getLabelAndValue(e) {
        let t = this._cachedMeta,
          o = this.chart,
          r = o.data.labels || [],
          a = Hr(t._parsed[e].r, o.options.locale);
        return { label: r[e] || "", value: a };
      }
      parseObjectData(e, t, o, r) {
        return iu.bind(this)(e, t, o, r);
      }
      update(e) {
        let t = this._cachedMeta.data;
        this._updateRadius(), this.updateElements(t, 0, t.length, e);
      }
      getMinMax() {
        let e = this._cachedMeta,
          t = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY };
        return (
          e.data.forEach((o, r) => {
            let a = this.getParsed(r).r;
            !isNaN(a) &&
              this.chart.getDataVisibility(r) &&
              (a < t.min && (t.min = a), a > t.max && (t.max = a));
          }),
          t
        );
      }
      _updateRadius() {
        let e = this.chart,
          t = e.chartArea,
          o = e.options,
          r = Math.min(t.right - t.left, t.bottom - t.top),
          a = Math.max(r / 2, 0),
          s = Math.max(
            o.cutoutPercentage ? (a / 100) * o.cutoutPercentage : 1,
            0
          ),
          c = (a - s) / e.getVisibleDatasetCount();
        (this.outerRadius = a - c * this.index),
          (this.innerRadius = this.outerRadius - c);
      }
      updateElements(e, t, o, r) {
        let a = r === "reset",
          s = this.chart,
          p = s.options.animation,
          f = this._cachedMeta.rScale,
          y = f.xCenter,
          x = f.yCenter,
          C = f.getIndexAngle(0) - 0.5 * lt,
          M = C,
          k,
          O = 360 / this.countVisibleElements();
        for (k = 0; k < t; ++k) M += this._computeAngle(k, r, O);
        for (k = t; k < t + o; k++) {
          let P = e[k],
            U = M,
            Q = M + this._computeAngle(k, r, O),
            te = s.getDataVisibility(k)
              ? f.getDistanceFromCenterForValue(this.getParsed(k).r)
              : 0;
          (M = Q),
            a && (p.animateScale && (te = 0), p.animateRotate && (U = Q = C));
          let Z = {
            x: y,
            y: x,
            innerRadius: 0,
            outerRadius: te,
            startAngle: U,
            endAngle: Q,
            options: this.resolveDataElementOptions(k, P.active ? "active" : r),
          };
          this.updateElement(P, k, Z, r);
        }
      }
      countVisibleElements() {
        let e = this._cachedMeta,
          t = 0;
        return (
          e.data.forEach((o, r) => {
            !isNaN(this.getParsed(r).r) &&
              this.chart.getDataVisibility(r) &&
              t++;
          }),
          t
        );
      }
      _computeAngle(e, t, o) {
        return this.chart.getDataVisibility(e)
          ? en(this.resolveDataElementOptions(e, t).angle || o)
          : 0;
      }
    }
    return n;
  })(),
  Ty = (() => {
    class n extends ju {
      static id = "pie";
      static defaults = {
        cutout: 0,
        rotation: 0,
        circumference: 360,
        radius: "100%",
      };
    }
    return n;
  })(),
  ky = (() => {
    class n extends Oo {
      static id = "radar";
      static defaults = {
        datasetElementType: "line",
        dataElementType: "point",
        indexAxis: "r",
        showLine: !0,
        elements: { line: { fill: "start" } },
      };
      static overrides = {
        aspectRatio: 1,
        scales: { r: { type: "radialLinear" } },
      };
      getLabelAndValue(e) {
        let t = this._cachedMeta.vScale,
          o = this.getParsed(e);
        return {
          label: t.getLabels()[e],
          value: "" + t.getLabelForValue(o[t.axis]),
        };
      }
      parseObjectData(e, t, o, r) {
        return iu.bind(this)(e, t, o, r);
      }
      update(e) {
        let t = this._cachedMeta,
          o = t.dataset,
          r = t.data || [],
          a = t.iScale.getLabels();
        if (((o.points = r), e !== "resize")) {
          let s = this.resolveDatasetElementOptions(e);
          this.options.showLine || (s.borderWidth = 0);
          let c = { _loop: !0, _fullLoop: a.length === r.length, options: s };
          this.updateElement(o, void 0, c, e);
        }
        this.updateElements(r, 0, r.length, e);
      }
      updateElements(e, t, o, r) {
        let a = this._cachedMeta.rScale,
          s = r === "reset";
        for (let c = t; c < t + o; c++) {
          let p = e[c],
            f = this.resolveDataElementOptions(c, p.active ? "active" : r),
            y = a.getPointPositionForValue(c, this.getParsed(c).r),
            x = s ? a.xCenter : y.x,
            C = s ? a.yCenter : y.y,
            M = {
              x,
              y: C,
              angle: y.angle,
              skip: isNaN(x) || isNaN(C),
              options: f,
            };
          this.updateElement(p, c, M, r);
        }
      }
    }
    return n;
  })(),
  Oy = (() => {
    class n extends Oo {
      static id = "scatter";
      static defaults = {
        datasetElementType: !1,
        dataElementType: "point",
        showLine: !1,
        fill: !1,
      };
      static overrides = {
        interaction: { mode: "point" },
        scales: { x: { type: "linear" }, y: { type: "linear" } },
      };
      getLabelAndValue(e) {
        let t = this._cachedMeta,
          o = this.chart.data.labels || [],
          { xScale: r, yScale: a } = t,
          s = this.getParsed(e),
          c = r.getLabelForValue(s.x),
          p = a.getLabelForValue(s.y);
        return { label: o[e] || "", value: "(" + c + ", " + p + ")" };
      }
      update(e) {
        let t = this._cachedMeta,
          { data: o = [] } = t,
          r = this.chart._animationsDisabled,
          { start: a, count: s } = Gd(t, o, r);
        if (
          ((this._drawStart = a),
          (this._drawCount = s),
          Yd(t) && ((a = 0), (s = o.length)),
          this.options.showLine)
        ) {
          this.datasetElementType || this.addElements();
          let { dataset: c, _dataset: p } = t;
          (c._chart = this.chart),
            (c._datasetIndex = this.index),
            (c._decimated = !!p._decimated),
            (c.points = o);
          let f = this.resolveDatasetElementOptions(e);
          (f.segment = this.options.segment),
            this.updateElement(c, void 0, { animated: !r, options: f }, e);
        } else
          this.datasetElementType &&
            (delete t.dataset, (this.datasetElementType = !1));
        this.updateElements(o, a, s, e);
      }
      addElements() {
        let { showLine: e } = this.options;
        !this.datasetElementType &&
          e &&
          (this.datasetElementType = this.chart.registry.getElement("line")),
          super.addElements();
      }
      updateElements(e, t, o, r) {
        let a = r === "reset",
          { iScale: s, vScale: c, _stacked: p, _dataset: f } = this._cachedMeta,
          y = this.resolveDataElementOptions(t, r),
          x = this.getSharedOptions(y),
          C = this.includeOptions(r, x),
          M = s.axis,
          k = c.axis,
          { spanGaps: O, segment: P } = this.options,
          U = Zo(O) ? O : Number.POSITIVE_INFINITY,
          Q = this.chart._animationsDisabled || a || r === "none",
          te = t > 0 && this.getParsed(t - 1);
        for (let Z = t; Z < t + o; ++Z) {
          let b = e[Z],
            ge = this.getParsed(Z),
            ee = Q ? b : {},
            _e = Ke(ge[k]),
            Re = (ee[M] = s.getPixelForValue(ge[M], Z)),
            Ue = (ee[k] =
              a || _e
                ? c.getBasePixel()
                : c.getPixelForValue(p ? this.applyStack(c, ge, p) : ge[k], Z));
          (ee.skip = isNaN(Re) || isNaN(Ue) || _e),
            (ee.stop = Z > 0 && Math.abs(ge[M] - te[M]) > U),
            P && ((ee.parsed = ge), (ee.raw = f.data[Z])),
            C &&
              (ee.options =
                x ||
                this.resolveDataElementOptions(Z, b.active ? "active" : r)),
            Q || this.updateElement(b, Z, ee, r),
            (te = ge);
        }
        this.updateSharedOptions(x, r, y);
      }
      getMaxOverflow() {
        let e = this._cachedMeta,
          t = e.data || [];
        if (!this.options.showLine) {
          let c = 0;
          for (let p = t.length - 1; p >= 0; --p)
            c = Math.max(c, t[p].size(this.resolveDataElementOptions(p)) / 2);
          return c > 0 && c;
        }
        let o = e.dataset,
          r = (o.options && o.options.borderWidth) || 0;
        if (!t.length) return r;
        let a = t[0].size(this.resolveDataElementOptions(0)),
          s = t[t.length - 1].size(
            this.resolveDataElementOptions(t.length - 1)
          );
        return Math.max(r, a, s) / 2;
      }
    }
    return n;
  })(),
  Iy = Object.freeze({
    __proto__: null,
    BarController: Sy,
    BubbleController: My,
    DoughnutController: ju,
    LineController: zu,
    PieController: Ty,
    PolarAreaController: zg,
    RadarController: ky,
    ScatterController: Oy,
  });
function er() {
  throw new Error(
    "This method is not implemented: Check that a complete date adapter is provided."
  );
}
var wu = class n {
    static override(i) {
      Object.assign(n.prototype, i);
    }
    options;
    constructor(i) {
      this.options = i || {};
    }
    init() {}
    formats() {
      return er();
    }
    parse() {
      return er();
    }
    format() {
      return er();
    }
    add() {
      return er();
    }
    diff() {
      return er();
    }
    startOf() {
      return er();
    }
    endOf() {
      return er();
    }
  },
  Py = { _date: wu };
function Ay(n, i, e, t) {
  let { controller: o, data: r, _sorted: a } = n,
    s = o._cachedMeta.iScale,
    c = n.dataset && n.dataset.options ? n.dataset.options.spanGaps : null;
  if (s && i === s.axis && i !== "r" && a && r.length) {
    let p = s._reversePixels ? bf : Pn;
    if (t) {
      if (o._sharedOptions) {
        let f = r[0],
          y = typeof f.getRange == "function" && f.getRange(i);
        if (y) {
          let x = p(r, i, e - y),
            C = p(r, i, e + y);
          return { lo: x.lo, hi: C.hi };
        }
      }
    } else {
      let f = p(r, i, e);
      if (c) {
        let { vScale: y } = o._cachedMeta,
          { _parsed: x } = n,
          C = x
            .slice(0, f.lo + 1)
            .reverse()
            .findIndex((k) => !Ke(k[y.axis]));
        f.lo -= Math.max(0, C);
        let M = x.slice(f.hi).findIndex((k) => !Ke(k[y.axis]));
        f.hi += Math.max(0, M);
      }
      return f;
    }
  }
  return { lo: 0, hi: r.length - 1 };
}
function Za(n, i, e, t, o) {
  let r = n.getSortedVisibleDatasetMetas(),
    a = e[i];
  for (let s = 0, c = r.length; s < c; ++s) {
    let { index: p, data: f } = r[s],
      { lo: y, hi: x } = Ay(r[s], i, a, o);
    for (let C = y; C <= x; ++C) {
      let M = f[C];
      M.skip || t(M, p, C);
    }
  }
}
function Ry(n) {
  let i = n.indexOf("x") !== -1,
    e = n.indexOf("y") !== -1;
  return function (t, o) {
    let r = i ? Math.abs(t.x - o.x) : 0,
      a = e ? Math.abs(t.y - o.y) : 0;
    return Math.sqrt(Math.pow(r, 2) + Math.pow(a, 2));
  };
}
function mu(n, i, e, t, o) {
  let r = [];
  return (
    (!o && !n.isPointInArea(i)) ||
      Za(
        n,
        e,
        i,
        function (s, c, p) {
          (!o && !An(s, n.chartArea, 0)) ||
            (s.inRange(i.x, i.y, t) &&
              r.push({ element: s, datasetIndex: c, index: p }));
        },
        !0
      ),
    r
  );
}
function Fy(n, i, e, t) {
  let o = [];
  function r(a, s, c) {
    let { startAngle: p, endAngle: f } = a.getProps(
        ["startAngle", "endAngle"],
        t
      ),
      { angle: y } = jd(a, { x: i.x, y: i.y });
    Br(y, p, f) && o.push({ element: a, datasetIndex: s, index: c });
  }
  return Za(n, e, i, r), o;
}
function Ny(n, i, e, t, o, r) {
  let a = [],
    s = Ry(e),
    c = Number.POSITIVE_INFINITY;
  function p(f, y, x) {
    let C = f.inRange(i.x, i.y, o);
    if (t && !C) return;
    let M = f.getCenterPoint(o);
    if (!(!!r || n.isPointInArea(M)) && !C) return;
    let O = s(i, M);
    O < c
      ? ((a = [{ element: f, datasetIndex: y, index: x }]), (c = O))
      : O === c && a.push({ element: f, datasetIndex: y, index: x });
  }
  return Za(n, e, i, p), a;
}
function fu(n, i, e, t, o, r) {
  return !r && !n.isPointInArea(i)
    ? []
    : e === "r" && !t
    ? Fy(n, i, e, o)
    : Ny(n, i, e, t, o, r);
}
function Kf(n, i, e, t, o) {
  let r = [],
    a = e === "x" ? "inXRange" : "inYRange",
    s = !1;
  return (
    Za(n, e, i, (c, p, f) => {
      c[a] &&
        c[a](i[e], o) &&
        (r.push({ element: c, datasetIndex: p, index: f }),
        (s = s || c.inRange(i.x, i.y, o)));
    }),
    t && !s ? [] : r
  );
}
var Vy = {
    evaluateInteractionItems: Za,
    modes: {
      index(n, i, e, t) {
        let o = To(i, n),
          r = e.axis || "x",
          a = e.includeInvisible || !1,
          s = e.intersect ? mu(n, o, r, t, a) : fu(n, o, r, !1, t, a),
          c = [];
        return s.length
          ? (n.getSortedVisibleDatasetMetas().forEach((p) => {
              let f = s[0].index,
                y = p.data[f];
              y &&
                !y.skip &&
                c.push({ element: y, datasetIndex: p.index, index: f });
            }),
            c)
          : [];
      },
      dataset(n, i, e, t) {
        let o = To(i, n),
          r = e.axis || "xy",
          a = e.includeInvisible || !1,
          s = e.intersect ? mu(n, o, r, t, a) : fu(n, o, r, !1, t, a);
        if (s.length > 0) {
          let c = s[0].datasetIndex,
            p = n.getDatasetMeta(c).data;
          s = [];
          for (let f = 0; f < p.length; ++f)
            s.push({ element: p[f], datasetIndex: c, index: f });
        }
        return s;
      },
      point(n, i, e, t) {
        let o = To(i, n),
          r = e.axis || "xy",
          a = e.includeInvisible || !1;
        return mu(n, o, r, t, a);
      },
      nearest(n, i, e, t) {
        let o = To(i, n),
          r = e.axis || "xy",
          a = e.includeInvisible || !1;
        return fu(n, o, r, e.intersect, t, a);
      },
      x(n, i, e, t) {
        let o = To(i, n);
        return Kf(n, o, "x", e.intersect, t);
      },
      y(n, i, e, t) {
        let o = To(i, n);
        return Kf(n, o, "y", e.intersect, t);
      },
    },
  },
  Ug = ["left", "top", "right", "bottom"];
function za(n, i) {
  return n.filter((e) => e.pos === i);
}
function Qf(n, i) {
  return n.filter((e) => Ug.indexOf(e.pos) === -1 && e.box.axis === i);
}
function Ua(n, i) {
  return n.sort((e, t) => {
    let o = i ? t : e,
      r = i ? e : t;
    return o.weight === r.weight ? o.index - r.index : o.weight - r.weight;
  });
}
function Ly(n) {
  let i = [],
    e,
    t,
    o,
    r,
    a,
    s;
  for (e = 0, t = (n || []).length; e < t; ++e)
    (o = n[e]),
      ({
        position: r,
        options: { stack: a, stackWeight: s = 1 },
      } = o),
      i.push({
        index: e,
        box: o,
        pos: r,
        horizontal: o.isHorizontal(),
        weight: o.weight,
        stack: a && r + a,
        stackWeight: s,
      });
  return i;
}
function By(n) {
  let i = {};
  for (let e of n) {
    let { stack: t, pos: o, stackWeight: r } = e;
    if (!t || !Ug.includes(o)) continue;
    let a = i[t] || (i[t] = { count: 0, placed: 0, weight: 0, size: 0 });
    a.count++, (a.weight += r);
  }
  return i;
}
function Hy(n, i) {
  let e = By(n),
    { vBoxMaxWidth: t, hBoxMaxHeight: o } = i,
    r,
    a,
    s;
  for (r = 0, a = n.length; r < a; ++r) {
    s = n[r];
    let { fullSize: c } = s.box,
      p = e[s.stack],
      f = p && s.stackWeight / p.weight;
    s.horizontal
      ? ((s.width = f ? f * t : c && i.availableWidth), (s.height = o))
      : ((s.width = t), (s.height = f ? f * o : c && i.availableHeight));
  }
  return e;
}
function jy(n) {
  let i = Ly(n),
    e = Ua(
      i.filter((p) => p.box.fullSize),
      !0
    ),
    t = Ua(za(i, "left"), !0),
    o = Ua(za(i, "right")),
    r = Ua(za(i, "top"), !0),
    a = Ua(za(i, "bottom")),
    s = Qf(i, "x"),
    c = Qf(i, "y");
  return {
    fullSize: e,
    leftAndTop: t.concat(r),
    rightAndBottom: o.concat(c).concat(a).concat(s),
    chartArea: za(i, "chartArea"),
    vertical: t.concat(o).concat(c),
    horizontal: r.concat(a).concat(s),
  };
}
function Xf(n, i, e, t) {
  return Math.max(n[e], i[e]) + Math.max(n[t], i[t]);
}
function Wg(n, i) {
  (n.top = Math.max(n.top, i.top)),
    (n.left = Math.max(n.left, i.left)),
    (n.bottom = Math.max(n.bottom, i.bottom)),
    (n.right = Math.max(n.right, i.right));
}
function zy(n, i, e, t) {
  let { pos: o, box: r } = e,
    a = n.maxPadding;
  if (!et(o)) {
    e.size && (n[o] -= e.size);
    let y = t[e.stack] || { size: 0, count: 1 };
    (y.size = Math.max(y.size, e.horizontal ? r.height : r.width)),
      (e.size = y.size / y.count),
      (n[o] += e.size);
  }
  r.getPadding && Wg(a, r.getPadding());
  let s = Math.max(0, i.outerWidth - Xf(a, n, "left", "right")),
    c = Math.max(0, i.outerHeight - Xf(a, n, "top", "bottom")),
    p = s !== n.w,
    f = c !== n.h;
  return (
    (n.w = s),
    (n.h = c),
    e.horizontal ? { same: p, other: f } : { same: f, other: p }
  );
}
function Uy(n) {
  let i = n.maxPadding;
  function e(t) {
    let o = Math.max(i[t] - n[t], 0);
    return (n[t] += o), o;
  }
  (n.y += e("top")), (n.x += e("left")), e("right"), e("bottom");
}
function Wy(n, i) {
  let e = i.maxPadding;
  function t(o) {
    let r = { left: 0, top: 0, right: 0, bottom: 0 };
    return (
      o.forEach((a) => {
        r[a] = Math.max(i[a], e[a]);
      }),
      r
    );
  }
  return t(n ? ["left", "right"] : ["top", "bottom"]);
}
function Ga(n, i, e, t) {
  let o = [],
    r,
    a,
    s,
    c,
    p,
    f;
  for (r = 0, a = n.length, p = 0; r < a; ++r) {
    (s = n[r]),
      (c = s.box),
      c.update(s.width || i.w, s.height || i.h, Wy(s.horizontal, i));
    let { same: y, other: x } = zy(i, e, s, t);
    (p |= y && o.length), (f = f || x), c.fullSize || o.push(s);
  }
  return (p && Ga(o, i, e, t)) || f;
}
function El(n, i, e, t, o) {
  (n.top = e),
    (n.left = i),
    (n.right = i + t),
    (n.bottom = e + o),
    (n.width = t),
    (n.height = o);
}
function Zf(n, i, e, t) {
  let o = e.padding,
    { x: r, y: a } = i;
  for (let s of n) {
    let c = s.box,
      p = t[s.stack] || { count: 1, placed: 0, weight: 1 },
      f = s.stackWeight / p.weight || 1;
    if (s.horizontal) {
      let y = i.w * f,
        x = p.size || c.height;
      Vr(p.start) && (a = p.start),
        c.fullSize
          ? El(c, o.left, a, e.outerWidth - o.right - o.left, x)
          : El(c, i.left + p.placed, a, y, x),
        (p.start = a),
        (p.placed += y),
        (a = c.bottom);
    } else {
      let y = i.h * f,
        x = p.size || c.width;
      Vr(p.start) && (r = p.start),
        c.fullSize
          ? El(c, r, o.top, x, e.outerHeight - o.bottom - o.top)
          : El(c, r, i.top + p.placed, x, y),
        (p.start = r),
        (p.placed += y),
        (r = c.right);
    }
  }
  (i.x = r), (i.y = a);
}
var pi = {
    addBox(n, i) {
      n.boxes || (n.boxes = []),
        (i.fullSize = i.fullSize || !1),
        (i.position = i.position || "top"),
        (i.weight = i.weight || 0),
        (i._layers =
          i._layers ||
          function () {
            return [
              {
                z: 0,
                draw(e) {
                  i.draw(e);
                },
              },
            ];
          }),
        n.boxes.push(i);
    },
    removeBox(n, i) {
      let e = n.boxes ? n.boxes.indexOf(i) : -1;
      e !== -1 && n.boxes.splice(e, 1);
    },
    configure(n, i, e) {
      (i.fullSize = e.fullSize),
        (i.position = e.position),
        (i.weight = e.weight);
    },
    update(n, i, e, t) {
      if (!n) return;
      let o = li(n.options.layout.padding),
        r = Math.max(i - o.width, 0),
        a = Math.max(e - o.height, 0),
        s = jy(n.boxes),
        c = s.vertical,
        p = s.horizontal;
      ut(n.boxes, (k) => {
        typeof k.beforeLayout == "function" && k.beforeLayout();
      });
      let f =
          c.reduce(
            (k, O) =>
              O.box.options && O.box.options.display === !1 ? k : k + 1,
            0
          ) || 1,
        y = Object.freeze({
          outerWidth: i,
          outerHeight: e,
          padding: o,
          availableWidth: r,
          availableHeight: a,
          vBoxMaxWidth: r / 2 / f,
          hBoxMaxHeight: a / 2,
        }),
        x = Object.assign({}, o);
      Wg(x, li(t));
      let C = Object.assign(
          { maxPadding: x, w: r, h: a, x: o.left, y: o.top },
          o
        ),
        M = Hy(c.concat(p), y);
      Ga(s.fullSize, C, y, M),
        Ga(c, C, y, M),
        Ga(p, C, y, M) && Ga(c, C, y, M),
        Uy(C),
        Zf(s.leftAndTop, C, y, M),
        (C.x += C.w),
        (C.y += C.h),
        Zf(s.rightAndBottom, C, y, M),
        (n.chartArea = {
          left: C.left,
          top: C.top,
          right: C.left + C.w,
          bottom: C.top + C.h,
          height: C.h,
          width: C.w,
        }),
        ut(s.chartArea, (k) => {
          let O = k.box;
          Object.assign(O, n.chartArea),
            O.update(C.w, C.h, { left: 0, top: 0, right: 0, bottom: 0 });
        });
    },
  },
  Nl = class {
    acquireContext(i, e) {}
    releaseContext(i) {
      return !1;
    }
    addEventListener(i, e, t) {}
    removeEventListener(i, e, t) {}
    getDevicePixelRatio() {
      return 1;
    }
    getMaximumSize(i, e, t, o) {
      return (
        (e = Math.max(0, e || i.width)),
        (t = t || i.height),
        { width: e, height: Math.max(0, o ? Math.floor(e / o) : t) }
      );
    }
    isAttached(i) {
      return !0;
    }
    updateConfig(i) {}
  },
  Du = class extends Nl {
    acquireContext(i) {
      return (i && i.getContext && i.getContext("2d")) || null;
    }
    updateConfig(i) {
      i.options.animation = !1;
    }
  },
  Al = "$chartjs",
  $y = {
    touchstart: "mousedown",
    touchmove: "mousemove",
    touchend: "mouseup",
    pointerenter: "mouseenter",
    pointerdown: "mousedown",
    pointermove: "mousemove",
    pointerup: "mouseup",
    pointerleave: "mouseout",
    pointerout: "mouseout",
  },
  Jf = (n) => n === null || n === "";
function Gy(n, i) {
  let e = n.style,
    t = n.getAttribute("height"),
    o = n.getAttribute("width");
  if (
    ((n[Al] = {
      initial: {
        height: t,
        width: o,
        style: { display: e.display, height: e.height, width: e.width },
      },
    }),
    (e.display = e.display || "block"),
    (e.boxSizing = e.boxSizing || "border-box"),
    Jf(o))
  ) {
    let r = ou(n, "width");
    r !== void 0 && (n.width = r);
  }
  if (Jf(t))
    if (n.style.height === "") n.height = n.width / (i || 2);
    else {
      let r = ou(n, "height");
      r !== void 0 && (n.height = r);
    }
  return n;
}
var $g = Ff ? { passive: !0 } : !1;
function Yy(n, i, e) {
  n && n.addEventListener(i, e, $g);
}
function qy(n, i, e) {
  n && n.canvas && n.canvas.removeEventListener(i, e, $g);
}
function Ky(n, i) {
  let e = $y[n.type] || n.type,
    { x: t, y: o } = To(n, i);
  return {
    type: e,
    chart: i,
    native: n,
    x: t !== void 0 ? t : null,
    y: o !== void 0 ? o : null,
  };
}
function Vl(n, i) {
  for (let e of n) if (e === i || e.contains(i)) return !0;
}
function Qy(n, i, e) {
  let t = n.canvas,
    o = new MutationObserver((r) => {
      let a = !1;
      for (let s of r)
        (a = a || Vl(s.addedNodes, t)), (a = a && !Vl(s.removedNodes, t));
      a && e();
    });
  return o.observe(document, { childList: !0, subtree: !0 }), o;
}
function Xy(n, i, e) {
  let t = n.canvas,
    o = new MutationObserver((r) => {
      let a = !1;
      for (let s of r)
        (a = a || Vl(s.removedNodes, t)), (a = a && !Vl(s.addedNodes, t));
      a && e();
    });
  return o.observe(document, { childList: !0, subtree: !0 }), o;
}
var qa = new Map(),
  eg = 0;
function Gg() {
  let n = window.devicePixelRatio;
  n !== eg &&
    ((eg = n),
    qa.forEach((i, e) => {
      e.currentDevicePixelRatio !== n && i();
    }));
}
function Zy(n, i) {
  qa.size || window.addEventListener("resize", Gg), qa.set(n, i);
}
function Jy(n) {
  qa.delete(n), qa.size || window.removeEventListener("resize", Gg);
}
function ex(n, i, e) {
  let t = n.canvas,
    o = t && Sl(t);
  if (!o) return;
  let r = $d((s, c) => {
      let p = o.clientWidth;
      e(s, c), p < o.clientWidth && e();
    }, window),
    a = new ResizeObserver((s) => {
      let c = s[0],
        p = c.contentRect.width,
        f = c.contentRect.height;
      (p === 0 && f === 0) || r(p, f);
    });
  return a.observe(o), Zy(n, r), a;
}
function gu(n, i, e) {
  e && e.disconnect(), i === "resize" && Jy(n);
}
function tx(n, i, e) {
  let t = n.canvas,
    o = $d((r) => {
      n.ctx !== null && e(Ky(r, n));
    }, n);
  return Yy(t, i, o), o;
}
var Su = class extends Nl {
  acquireContext(i, e) {
    let t = i && i.getContext && i.getContext("2d");
    return t && t.canvas === i ? (Gy(i, e), t) : null;
  }
  releaseContext(i) {
    let e = i.canvas;
    if (!e[Al]) return !1;
    let t = e[Al].initial;
    ["height", "width"].forEach((r) => {
      let a = t[r];
      Ke(a) ? e.removeAttribute(r) : e.setAttribute(r, a);
    });
    let o = t.style || {};
    return (
      Object.keys(o).forEach((r) => {
        e.style[r] = o[r];
      }),
      (e.width = e.width),
      delete e[Al],
      !0
    );
  }
  addEventListener(i, e, t) {
    this.removeEventListener(i, e);
    let o = i.$proxies || (i.$proxies = {}),
      a = { attach: Qy, detach: Xy, resize: ex }[e] || tx;
    o[e] = a(i, e, t);
  }
  removeEventListener(i, e) {
    let t = i.$proxies || (i.$proxies = {}),
      o = t[e];
    if (!o) return;
    (({ attach: gu, detach: gu, resize: gu })[e] || qy)(i, e, o),
      (t[e] = void 0);
  }
  getDevicePixelRatio() {
    return window.devicePixelRatio;
  }
  getMaximumSize(i, e, t, o) {
    return Rf(i, e, t, o);
  }
  isAttached(i) {
    let e = i && Sl(i);
    return !!(e && e.isConnected);
  }
};
function ix(n) {
  return !Dl() || (typeof OffscreenCanvas < "u" && n instanceof OffscreenCanvas)
    ? Du
    : Su;
}
var fn = class {
  static defaults = {};
  static defaultRoutes = void 0;
  x;
  y;
  active = !1;
  options;
  $animations;
  tooltipPosition(i) {
    let { x: e, y: t } = this.getProps(["x", "y"], i);
    return { x: e, y: t };
  }
  hasValue() {
    return Zo(this.x) && Zo(this.y);
  }
  getProps(i, e) {
    let t = this.$animations;
    if (!e || !t) return this;
    let o = {};
    return (
      i.forEach((r) => {
        o[r] = t[r] && t[r].active() ? t[r]._to : this[r];
      }),
      o
    );
  }
};
function nx(n, i) {
  let e = n.options.ticks,
    t = ox(n),
    o = Math.min(e.maxTicksLimit || t, t),
    r = e.major.enabled ? ax(i) : [],
    a = r.length,
    s = r[0],
    c = r[a - 1],
    p = [];
  if (a > o) return sx(i, p, r, a / o), p;
  let f = rx(r, i, o);
  if (a > 0) {
    let y,
      x,
      C = a > 1 ? Math.round((c - s) / (a - 1)) : null;
    for (Tl(i, p, f, Ke(C) ? 0 : s - C, s), y = 0, x = a - 1; y < x; y++)
      Tl(i, p, f, r[y], r[y + 1]);
    return Tl(i, p, f, c, Ke(C) ? i.length : c + C), p;
  }
  return Tl(i, p, f), p;
}
function ox(n) {
  let i = n.options.offset,
    e = n._tickSize(),
    t = n._length / e + (i ? 0 : 1),
    o = n._maxLength / e;
  return Math.floor(Math.min(t, o));
}
function rx(n, i, e) {
  let t = lx(n),
    o = i.length / e;
  if (!t) return Math.max(o, 1);
  let r = ff(t);
  for (let a = 0, s = r.length - 1; a < s; a++) {
    let c = r[a];
    if (c > o) return c;
  }
  return Math.max(o, 1);
}
function ax(n) {
  let i = [],
    e,
    t;
  for (e = 0, t = n.length; e < t; e++) n[e].major && i.push(e);
  return i;
}
function sx(n, i, e, t) {
  let o = 0,
    r = e[0],
    a;
  for (t = Math.ceil(t), a = 0; a < n.length; a++)
    a === r && (i.push(n[a]), o++, (r = e[o * t]));
}
function Tl(n, i, e, t, o) {
  let r = je(t, 0),
    a = Math.min(je(o, n.length), n.length),
    s = 0,
    c,
    p,
    f;
  for (
    e = Math.ceil(e), o && ((c = o - t), (e = c / Math.floor(c / e))), f = r;
    f < 0;

  )
    s++, (f = Math.round(r + s * e));
  for (p = Math.max(r, 0); p < a; p++)
    p === f && (i.push(n[p]), s++, (f = Math.round(r + s * e)));
}
function lx(n) {
  let i = n.length,
    e,
    t;
  if (i < 2) return !1;
  for (t = n[0], e = 1; e < i; ++e) if (n[e] - n[e - 1] !== t) return !1;
  return t;
}
var cx = (n) => (n === "left" ? "right" : n === "right" ? "left" : n),
  tg = (n, i, e) => (i === "top" || i === "left" ? n[i] + e : n[i] - e),
  ig = (n, i) => Math.min(i || n, n);
function ng(n, i) {
  let e = [],
    t = n.length / i,
    o = n.length,
    r = 0;
  for (; r < o; r += t) e.push(n[Math.floor(r)]);
  return e;
}
function dx(n, i, e) {
  let t = n.ticks.length,
    o = Math.min(i, t - 1),
    r = n._startPixel,
    a = n._endPixel,
    s = 1e-6,
    c = n.getPixelForTick(o),
    p;
  if (
    !(
      e &&
      (t === 1
        ? (p = Math.max(c - r, a - c))
        : i === 0
        ? (p = (n.getPixelForTick(1) - c) / 2)
        : (p = (c - n.getPixelForTick(o - 1)) / 2),
      (c += o < i ? p : -p),
      c < r - s || c > a + s)
    )
  )
    return c;
}
function ux(n, i) {
  ut(n, (e) => {
    let t = e.gc,
      o = t.length / 2,
      r;
    if (o > i) {
      for (r = 0; r < o; ++r) delete e.data[t[r]];
      t.splice(0, o);
    }
  });
}
function Wa(n) {
  return n.drawTicks ? n.tickLength : 0;
}
function og(n, i) {
  if (!n.display) return 0;
  let e = Gt(n.font, i),
    t = li(n.padding);
  return (vt(n.text) ? n.text.length : 1) * e.lineHeight + t.height;
}
function hx(n, i) {
  return ro(n, { scale: i, type: "scale" });
}
function px(n, i, e) {
  return ro(n, { tick: e, index: i, type: "tick" });
}
function mx(n, i, e) {
  let t = vl(n);
  return ((e && i !== "right") || (!e && i === "right")) && (t = cx(t)), t;
}
function fx(n, i, e, t) {
  let { top: o, left: r, bottom: a, right: s, chart: c } = n,
    { chartArea: p, scales: f } = c,
    y = 0,
    x,
    C,
    M,
    k = a - o,
    O = s - r;
  if (n.isHorizontal()) {
    if (((C = si(t, r, s)), et(e))) {
      let P = Object.keys(e)[0],
        U = e[P];
      M = f[P].getPixelForValue(U) + k - i;
    } else
      e === "center" ? (M = (p.bottom + p.top) / 2 + k - i) : (M = tg(n, e, i));
    x = s - r;
  } else {
    if (et(e)) {
      let P = Object.keys(e)[0],
        U = e[P];
      C = f[P].getPixelForValue(U) - O + i;
    } else
      e === "center" ? (C = (p.left + p.right) / 2 - O + i) : (C = tg(n, e, i));
    (M = si(t, a, o)), (y = e === "left" ? -Lt : Lt);
  }
  return { titleX: C, titleY: M, maxWidth: x, rotation: y };
}
var ir = class n extends fn {
    constructor(i) {
      super(),
        (this.id = i.id),
        (this.type = i.type),
        (this.options = void 0),
        (this.ctx = i.ctx),
        (this.chart = i.chart),
        (this.top = void 0),
        (this.bottom = void 0),
        (this.left = void 0),
        (this.right = void 0),
        (this.width = void 0),
        (this.height = void 0),
        (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
        (this.maxWidth = void 0),
        (this.maxHeight = void 0),
        (this.paddingTop = void 0),
        (this.paddingBottom = void 0),
        (this.paddingLeft = void 0),
        (this.paddingRight = void 0),
        (this.axis = void 0),
        (this.labelRotation = void 0),
        (this.min = void 0),
        (this.max = void 0),
        (this._range = void 0),
        (this.ticks = []),
        (this._gridLineItems = null),
        (this._labelItems = null),
        (this._labelSizes = null),
        (this._length = 0),
        (this._maxLength = 0),
        (this._longestTextCache = {}),
        (this._startPixel = void 0),
        (this._endPixel = void 0),
        (this._reversePixels = !1),
        (this._userMax = void 0),
        (this._userMin = void 0),
        (this._suggestedMax = void 0),
        (this._suggestedMin = void 0),
        (this._ticksLength = 0),
        (this._borderValue = 0),
        (this._cache = {}),
        (this._dataLimitsCached = !1),
        (this.$context = void 0);
    }
    init(i) {
      (this.options = i.setContext(this.getContext())),
        (this.axis = i.axis),
        (this._userMin = this.parse(i.min)),
        (this._userMax = this.parse(i.max)),
        (this._suggestedMin = this.parse(i.suggestedMin)),
        (this._suggestedMax = this.parse(i.suggestedMax));
    }
    parse(i, e) {
      return i;
    }
    getUserBounds() {
      let {
        _userMin: i,
        _userMax: e,
        _suggestedMin: t,
        _suggestedMax: o,
      } = this;
      return (
        (i = Ri(i, Number.POSITIVE_INFINITY)),
        (e = Ri(e, Number.NEGATIVE_INFINITY)),
        (t = Ri(t, Number.POSITIVE_INFINITY)),
        (o = Ri(o, Number.NEGATIVE_INFINITY)),
        { min: Ri(i, t), max: Ri(e, o), minDefined: It(i), maxDefined: It(e) }
      );
    }
    getMinMax(i) {
      let {
          min: e,
          max: t,
          minDefined: o,
          maxDefined: r,
        } = this.getUserBounds(),
        a;
      if (o && r) return { min: e, max: t };
      let s = this.getMatchingVisibleMetas();
      for (let c = 0, p = s.length; c < p; ++c)
        (a = s[c].controller.getMinMax(this, i)),
          o || (e = Math.min(e, a.min)),
          r || (t = Math.max(t, a.max));
      return (
        (e = r && e > t ? t : e),
        (t = o && e > t ? e : t),
        { min: Ri(e, Ri(t, e)), max: Ri(t, Ri(e, t)) }
      );
    }
    getPadding() {
      return {
        left: this.paddingLeft || 0,
        top: this.paddingTop || 0,
        right: this.paddingRight || 0,
        bottom: this.paddingBottom || 0,
      };
    }
    getTicks() {
      return this.ticks;
    }
    getLabels() {
      let i = this.chart.data;
      return (
        this.options.labels ||
        (this.isHorizontal() ? i.xLabels : i.yLabels) ||
        i.labels ||
        []
      );
    }
    getLabelItems(i = this.chart.chartArea) {
      return (
        this._labelItems || (this._labelItems = this._computeLabelItems(i))
      );
    }
    beforeLayout() {
      (this._cache = {}), (this._dataLimitsCached = !1);
    }
    beforeUpdate() {
      mt(this.options.beforeUpdate, [this]);
    }
    update(i, e, t) {
      let { beginAtZero: o, grace: r, ticks: a } = this.options,
        s = a.sampleSize;
      this.beforeUpdate(),
        (this.maxWidth = i),
        (this.maxHeight = e),
        (this._margins = t =
          Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, t)),
        (this.ticks = null),
        (this._labelSizes = null),
        (this._gridLineItems = null),
        (this._labelItems = null),
        this.beforeSetDimensions(),
        this.setDimensions(),
        this.afterSetDimensions(),
        (this._maxLength = this.isHorizontal()
          ? this.width + t.left + t.right
          : this.height + t.top + t.bottom),
        this._dataLimitsCached ||
          (this.beforeDataLimits(),
          this.determineDataLimits(),
          this.afterDataLimits(),
          (this._range = Tf(this, r, o)),
          (this._dataLimitsCached = !0)),
        this.beforeBuildTicks(),
        (this.ticks = this.buildTicks() || []),
        this.afterBuildTicks();
      let c = s < this.ticks.length;
      this._convertTicksToLabels(c ? ng(this.ticks, s) : this.ticks),
        this.configure(),
        this.beforeCalculateLabelRotation(),
        this.calculateLabelRotation(),
        this.afterCalculateLabelRotation(),
        a.display &&
          (a.autoSkip || a.source === "auto") &&
          ((this.ticks = nx(this, this.ticks)),
          (this._labelSizes = null),
          this.afterAutoSkip()),
        c && this._convertTicksToLabels(this.ticks),
        this.beforeFit(),
        this.fit(),
        this.afterFit(),
        this.afterUpdate();
    }
    configure() {
      let i = this.options.reverse,
        e,
        t;
      this.isHorizontal()
        ? ((e = this.left), (t = this.right))
        : ((e = this.top), (t = this.bottom), (i = !i)),
        (this._startPixel = e),
        (this._endPixel = t),
        (this._reversePixels = i),
        (this._length = t - e),
        (this._alignToPixels = this.options.alignToPixels);
    }
    afterUpdate() {
      mt(this.options.afterUpdate, [this]);
    }
    beforeSetDimensions() {
      mt(this.options.beforeSetDimensions, [this]);
    }
    setDimensions() {
      this.isHorizontal()
        ? ((this.width = this.maxWidth),
          (this.left = 0),
          (this.right = this.width))
        : ((this.height = this.maxHeight),
          (this.top = 0),
          (this.bottom = this.height)),
        (this.paddingLeft = 0),
        (this.paddingTop = 0),
        (this.paddingRight = 0),
        (this.paddingBottom = 0);
    }
    afterSetDimensions() {
      mt(this.options.afterSetDimensions, [this]);
    }
    _callHooks(i) {
      this.chart.notifyPlugins(i, this.getContext()),
        mt(this.options[i], [this]);
    }
    beforeDataLimits() {
      this._callHooks("beforeDataLimits");
    }
    determineDataLimits() {}
    afterDataLimits() {
      this._callHooks("afterDataLimits");
    }
    beforeBuildTicks() {
      this._callHooks("beforeBuildTicks");
    }
    buildTicks() {
      return [];
    }
    afterBuildTicks() {
      this._callHooks("afterBuildTicks");
    }
    beforeTickToLabelConversion() {
      mt(this.options.beforeTickToLabelConversion, [this]);
    }
    generateTickLabels(i) {
      let e = this.options.ticks,
        t,
        o,
        r;
      for (t = 0, o = i.length; t < o; t++)
        (r = i[t]), (r.label = mt(e.callback, [r.value, t, i], this));
    }
    afterTickToLabelConversion() {
      mt(this.options.afterTickToLabelConversion, [this]);
    }
    beforeCalculateLabelRotation() {
      mt(this.options.beforeCalculateLabelRotation, [this]);
    }
    calculateLabelRotation() {
      let i = this.options,
        e = i.ticks,
        t = ig(this.ticks.length, i.ticks.maxTicksLimit),
        o = e.minRotation || 0,
        r = e.maxRotation,
        a = o,
        s,
        c,
        p;
      if (
        !this._isVisible() ||
        !e.display ||
        o >= r ||
        t <= 1 ||
        !this.isHorizontal()
      ) {
        this.labelRotation = o;
        return;
      }
      let f = this._getLabelSizes(),
        y = f.widest.width,
        x = f.highest.height,
        C = Zt(this.chart.width - y, 0, this.maxWidth);
      (s = i.offset ? this.maxWidth / t : C / (t - 1)),
        y + 6 > s &&
          ((s = C / (t - (i.offset ? 0.5 : 1))),
          (c =
            this.maxHeight -
            Wa(i.grid) -
            e.padding -
            og(i.title, this.chart.options.font)),
          (p = Math.sqrt(y * y + x * x)),
          (a = _l(
            Math.min(
              Math.asin(Zt((f.highest.height + 6) / s, -1, 1)),
              Math.asin(Zt(c / p, -1, 1)) - Math.asin(Zt(x / p, -1, 1))
            )
          )),
          (a = Math.max(o, Math.min(r, a)))),
        (this.labelRotation = a);
    }
    afterCalculateLabelRotation() {
      mt(this.options.afterCalculateLabelRotation, [this]);
    }
    afterAutoSkip() {}
    beforeFit() {
      mt(this.options.beforeFit, [this]);
    }
    fit() {
      let i = { width: 0, height: 0 },
        {
          chart: e,
          options: { ticks: t, title: o, grid: r },
        } = this,
        a = this._isVisible(),
        s = this.isHorizontal();
      if (a) {
        let c = og(o, e.options.font);
        if (
          (s
            ? ((i.width = this.maxWidth), (i.height = Wa(r) + c))
            : ((i.height = this.maxHeight), (i.width = Wa(r) + c)),
          t.display && this.ticks.length)
        ) {
          let {
              first: p,
              last: f,
              widest: y,
              highest: x,
            } = this._getLabelSizes(),
            C = t.padding * 2,
            M = en(this.labelRotation),
            k = Math.cos(M),
            O = Math.sin(M);
          if (s) {
            let P = t.mirror ? 0 : O * y.width + k * x.height;
            i.height = Math.min(this.maxHeight, i.height + P + C);
          } else {
            let P = t.mirror ? 0 : k * y.width + O * x.height;
            i.width = Math.min(this.maxWidth, i.width + P + C);
          }
          this._calculatePadding(p, f, O, k);
        }
      }
      this._handleMargins(),
        s
          ? ((this.width = this._length =
              e.width - this._margins.left - this._margins.right),
            (this.height = i.height))
          : ((this.width = i.width),
            (this.height = this._length =
              e.height - this._margins.top - this._margins.bottom));
    }
    _calculatePadding(i, e, t, o) {
      let {
          ticks: { align: r, padding: a },
          position: s,
        } = this.options,
        c = this.labelRotation !== 0,
        p = s !== "top" && this.axis === "x";
      if (this.isHorizontal()) {
        let f = this.getPixelForTick(0) - this.left,
          y = this.right - this.getPixelForTick(this.ticks.length - 1),
          x = 0,
          C = 0;
        c
          ? p
            ? ((x = o * i.width), (C = t * e.height))
            : ((x = t * i.height), (C = o * e.width))
          : r === "start"
          ? (C = e.width)
          : r === "end"
          ? (x = i.width)
          : r !== "inner" && ((x = i.width / 2), (C = e.width / 2)),
          (this.paddingLeft = Math.max(
            ((x - f + a) * this.width) / (this.width - f),
            0
          )),
          (this.paddingRight = Math.max(
            ((C - y + a) * this.width) / (this.width - y),
            0
          ));
      } else {
        let f = e.height / 2,
          y = i.height / 2;
        r === "start"
          ? ((f = 0), (y = i.height))
          : r === "end" && ((f = e.height), (y = 0)),
          (this.paddingTop = f + a),
          (this.paddingBottom = y + a);
      }
    }
    _handleMargins() {
      this._margins &&
        ((this._margins.left = Math.max(this.paddingLeft, this._margins.left)),
        (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
        (this._margins.right = Math.max(
          this.paddingRight,
          this._margins.right
        )),
        (this._margins.bottom = Math.max(
          this.paddingBottom,
          this._margins.bottom
        )));
    }
    afterFit() {
      mt(this.options.afterFit, [this]);
    }
    isHorizontal() {
      let { axis: i, position: e } = this.options;
      return e === "top" || e === "bottom" || i === "x";
    }
    isFullSize() {
      return this.options.fullSize;
    }
    _convertTicksToLabels(i) {
      this.beforeTickToLabelConversion(), this.generateTickLabels(i);
      let e, t;
      for (e = 0, t = i.length; e < t; e++)
        Ke(i[e].label) && (i.splice(e, 1), t--, e--);
      this.afterTickToLabelConversion();
    }
    _getLabelSizes() {
      let i = this._labelSizes;
      if (!i) {
        let e = this.options.ticks.sampleSize,
          t = this.ticks;
        e < t.length && (t = ng(t, e)),
          (this._labelSizes = i =
            this._computeLabelSizes(
              t,
              t.length,
              this.options.ticks.maxTicksLimit
            ));
      }
      return i;
    }
    _computeLabelSizes(i, e, t) {
      let { ctx: o, _longestTextCache: r } = this,
        a = [],
        s = [],
        c = Math.floor(e / ig(e, t)),
        p = 0,
        f = 0,
        y,
        x,
        C,
        M,
        k,
        O,
        P,
        U,
        Q,
        te,
        Z;
      for (y = 0; y < e; y += c) {
        if (
          ((M = i[y].label),
          (k = this._resolveTickFontOptions(y)),
          (o.font = O = k.string),
          (P = r[O] = r[O] || { data: {}, gc: [] }),
          (U = k.lineHeight),
          (Q = te = 0),
          !Ke(M) && !vt(M))
        )
          (Q = Na(o, P.data, P.gc, Q, M)), (te = U);
        else if (vt(M))
          for (x = 0, C = M.length; x < C; ++x)
            (Z = M[x]),
              !Ke(Z) && !vt(Z) && ((Q = Na(o, P.data, P.gc, Q, Z)), (te += U));
        a.push(Q), s.push(te), (p = Math.max(Q, p)), (f = Math.max(te, f));
      }
      ux(r, e);
      let b = a.indexOf(p),
        ge = s.indexOf(f),
        ee = (_e) => ({ width: a[_e] || 0, height: s[_e] || 0 });
      return {
        first: ee(0),
        last: ee(e - 1),
        widest: ee(b),
        highest: ee(ge),
        widths: a,
        heights: s,
      };
    }
    getLabelForValue(i) {
      return i;
    }
    getPixelForValue(i, e) {
      return NaN;
    }
    getValueForPixel(i) {}
    getPixelForTick(i) {
      let e = this.ticks;
      return i < 0 || i > e.length - 1
        ? null
        : this.getPixelForValue(e[i].value);
    }
    getPixelForDecimal(i) {
      this._reversePixels && (i = 1 - i);
      let e = this._startPixel + i * this._length;
      return _f(this._alignToPixels ? So(this.chart, e, 0) : e);
    }
    getDecimalForPixel(i) {
      let e = (i - this._startPixel) / this._length;
      return this._reversePixels ? 1 - e : e;
    }
    getBasePixel() {
      return this.getPixelForValue(this.getBaseValue());
    }
    getBaseValue() {
      let { min: i, max: e } = this;
      return i < 0 && e < 0 ? e : i > 0 && e > 0 ? i : 0;
    }
    getContext(i) {
      let e = this.ticks || [];
      if (i >= 0 && i < e.length) {
        let t = e[i];
        return t.$context || (t.$context = px(this.getContext(), i, t));
      }
      return (
        this.$context || (this.$context = hx(this.chart.getContext(), this))
      );
    }
    _tickSize() {
      let i = this.options.ticks,
        e = en(this.labelRotation),
        t = Math.abs(Math.cos(e)),
        o = Math.abs(Math.sin(e)),
        r = this._getLabelSizes(),
        a = i.autoSkipPadding || 0,
        s = r ? r.widest.width + a : 0,
        c = r ? r.highest.height + a : 0;
      return this.isHorizontal()
        ? c * t > s * o
          ? s / t
          : c / o
        : c * o < s * t
        ? c / t
        : s / o;
    }
    _isVisible() {
      let i = this.options.display;
      return i !== "auto" ? !!i : this.getMatchingVisibleMetas().length > 0;
    }
    _computeGridLineItems(i) {
      let e = this.axis,
        t = this.chart,
        o = this.options,
        { grid: r, position: a, border: s } = o,
        c = r.offset,
        p = this.isHorizontal(),
        y = this.ticks.length + (c ? 1 : 0),
        x = Wa(r),
        C = [],
        M = s.setContext(this.getContext()),
        k = M.display ? M.width : 0,
        O = k / 2,
        P = function (ot) {
          return So(t, ot, k);
        },
        U,
        Q,
        te,
        Z,
        b,
        ge,
        ee,
        _e,
        Re,
        Ue,
        xe,
        Mt;
      if (a === "top")
        (U = P(this.bottom)),
          (ge = this.bottom - x),
          (_e = U - O),
          (Ue = P(i.top) + O),
          (Mt = i.bottom);
      else if (a === "bottom")
        (U = P(this.top)),
          (Ue = i.top),
          (Mt = P(i.bottom) - O),
          (ge = U + O),
          (_e = this.top + x);
      else if (a === "left")
        (U = P(this.right)),
          (b = this.right - x),
          (ee = U - O),
          (Re = P(i.left) + O),
          (xe = i.right);
      else if (a === "right")
        (U = P(this.left)),
          (Re = i.left),
          (xe = P(i.right) - O),
          (b = U + O),
          (ee = this.left + x);
      else if (e === "x") {
        if (a === "center") U = P((i.top + i.bottom) / 2 + 0.5);
        else if (et(a)) {
          let ot = Object.keys(a)[0],
            xt = a[ot];
          U = P(this.chart.scales[ot].getPixelForValue(xt));
        }
        (Ue = i.top), (Mt = i.bottom), (ge = U + O), (_e = ge + x);
      } else if (e === "y") {
        if (a === "center") U = P((i.left + i.right) / 2);
        else if (et(a)) {
          let ot = Object.keys(a)[0],
            xt = a[ot];
          U = P(this.chart.scales[ot].getPixelForValue(xt));
        }
        (b = U - O), (ee = b - x), (Re = i.left), (xe = i.right);
      }
      let _i = je(o.ticks.maxTicksLimit, y),
        dt = Math.max(1, Math.ceil(y / _i));
      for (Q = 0; Q < y; Q += dt) {
        let ot = this.getContext(Q),
          xt = r.setContext(ot),
          ei = s.setContext(ot),
          Yt = xt.lineWidth,
          Hn = xt.color,
          Ro = ei.dash || [],
          bn = ei.dashOffset,
          uo = xt.tickWidth,
          jn = xt.tickColor,
          Fo = xt.tickBorderDash || [],
          zn = xt.tickBorderDashOffset;
        (te = dx(this, Q, c)),
          te !== void 0 &&
            ((Z = So(t, te, Yt)),
            p ? (b = ee = Re = xe = Z) : (ge = _e = Ue = Mt = Z),
            C.push({
              tx1: b,
              ty1: ge,
              tx2: ee,
              ty2: _e,
              x1: Re,
              y1: Ue,
              x2: xe,
              y2: Mt,
              width: Yt,
              color: Hn,
              borderDash: Ro,
              borderDashOffset: bn,
              tickWidth: uo,
              tickColor: jn,
              tickBorderDash: Fo,
              tickBorderDashOffset: zn,
            }));
      }
      return (this._ticksLength = y), (this._borderValue = U), C;
    }
    _computeLabelItems(i) {
      let e = this.axis,
        t = this.options,
        { position: o, ticks: r } = t,
        a = this.isHorizontal(),
        s = this.ticks,
        { align: c, crossAlign: p, padding: f, mirror: y } = r,
        x = Wa(t.grid),
        C = x + f,
        M = y ? -f : C,
        k = -en(this.labelRotation),
        O = [],
        P,
        U,
        Q,
        te,
        Z,
        b,
        ge,
        ee,
        _e,
        Re,
        Ue,
        xe,
        Mt = "middle";
      if (o === "top")
        (b = this.bottom - M), (ge = this._getXAxisLabelAlignment());
      else if (o === "bottom")
        (b = this.top + M), (ge = this._getXAxisLabelAlignment());
      else if (o === "left") {
        let dt = this._getYAxisLabelAlignment(x);
        (ge = dt.textAlign), (Z = dt.x);
      } else if (o === "right") {
        let dt = this._getYAxisLabelAlignment(x);
        (ge = dt.textAlign), (Z = dt.x);
      } else if (e === "x") {
        if (o === "center") b = (i.top + i.bottom) / 2 + C;
        else if (et(o)) {
          let dt = Object.keys(o)[0],
            ot = o[dt];
          b = this.chart.scales[dt].getPixelForValue(ot) + C;
        }
        ge = this._getXAxisLabelAlignment();
      } else if (e === "y") {
        if (o === "center") Z = (i.left + i.right) / 2 - C;
        else if (et(o)) {
          let dt = Object.keys(o)[0],
            ot = o[dt];
          Z = this.chart.scales[dt].getPixelForValue(ot);
        }
        ge = this._getYAxisLabelAlignment(x).textAlign;
      }
      e === "y" &&
        (c === "start" ? (Mt = "top") : c === "end" && (Mt = "bottom"));
      let _i = this._getLabelSizes();
      for (P = 0, U = s.length; P < U; ++P) {
        (Q = s[P]), (te = Q.label);
        let dt = r.setContext(this.getContext(P));
        (ee = this.getPixelForTick(P) + r.labelOffset),
          (_e = this._resolveTickFontOptions(P)),
          (Re = _e.lineHeight),
          (Ue = vt(te) ? te.length : 1);
        let ot = Ue / 2,
          xt = dt.color,
          ei = dt.textStrokeColor,
          Yt = dt.textStrokeWidth,
          Hn = ge;
        a
          ? ((Z = ee),
            ge === "inner" &&
              (P === U - 1
                ? (Hn = this.options.reverse ? "left" : "right")
                : P === 0
                ? (Hn = this.options.reverse ? "right" : "left")
                : (Hn = "center")),
            o === "top"
              ? p === "near" || k !== 0
                ? (xe = -Ue * Re + Re / 2)
                : p === "center"
                ? (xe = -_i.highest.height / 2 - ot * Re + Re)
                : (xe = -_i.highest.height + Re / 2)
              : p === "near" || k !== 0
              ? (xe = Re / 2)
              : p === "center"
              ? (xe = _i.highest.height / 2 - ot * Re)
              : (xe = _i.highest.height - Ue * Re),
            y && (xe *= -1),
            k !== 0 && !dt.showLabelBackdrop && (Z += (Re / 2) * Math.sin(k)))
          : ((b = ee), (xe = ((1 - Ue) * Re) / 2));
        let Ro;
        if (dt.showLabelBackdrop) {
          let bn = li(dt.backdropPadding),
            uo = _i.heights[P],
            jn = _i.widths[P],
            Fo = xe - bn.top,
            zn = 0 - bn.left;
          switch (Mt) {
            case "middle":
              Fo -= uo / 2;
              break;
            case "bottom":
              Fo -= uo;
              break;
          }
          switch (ge) {
            case "center":
              zn -= jn / 2;
              break;
            case "right":
              zn -= jn;
              break;
            case "inner":
              P === U - 1 ? (zn -= jn) : P > 0 && (zn -= jn / 2);
              break;
          }
          Ro = {
            left: zn,
            top: Fo,
            width: jn + bn.width,
            height: uo + bn.height,
            color: dt.backdropColor,
          };
        }
        O.push({
          label: te,
          font: _e,
          textOffset: xe,
          options: {
            rotation: k,
            color: xt,
            strokeColor: ei,
            strokeWidth: Yt,
            textAlign: Hn,
            textBaseline: Mt,
            translation: [Z, b],
            backdrop: Ro,
          },
        });
      }
      return O;
    }
    _getXAxisLabelAlignment() {
      let { position: i, ticks: e } = this.options;
      if (-en(this.labelRotation)) return i === "top" ? "left" : "right";
      let o = "center";
      return (
        e.align === "start"
          ? (o = "left")
          : e.align === "end"
          ? (o = "right")
          : e.align === "inner" && (o = "inner"),
        o
      );
    }
    _getYAxisLabelAlignment(i) {
      let {
          position: e,
          ticks: { crossAlign: t, mirror: o, padding: r },
        } = this.options,
        a = this._getLabelSizes(),
        s = i + r,
        c = a.widest.width,
        p,
        f;
      return (
        e === "left"
          ? o
            ? ((f = this.right + r),
              t === "near"
                ? (p = "left")
                : t === "center"
                ? ((p = "center"), (f += c / 2))
                : ((p = "right"), (f += c)))
            : ((f = this.right - s),
              t === "near"
                ? (p = "right")
                : t === "center"
                ? ((p = "center"), (f -= c / 2))
                : ((p = "left"), (f = this.left)))
          : e === "right"
          ? o
            ? ((f = this.left + r),
              t === "near"
                ? (p = "right")
                : t === "center"
                ? ((p = "center"), (f -= c / 2))
                : ((p = "left"), (f -= c)))
            : ((f = this.left + s),
              t === "near"
                ? (p = "left")
                : t === "center"
                ? ((p = "center"), (f += c / 2))
                : ((p = "right"), (f = this.right)))
          : (p = "right"),
        { textAlign: p, x: f }
      );
    }
    _computeLabelArea() {
      if (this.options.ticks.mirror) return;
      let i = this.chart,
        e = this.options.position;
      if (e === "left" || e === "right")
        return { top: 0, left: this.left, bottom: i.height, right: this.right };
      if (e === "top" || e === "bottom")
        return { top: this.top, left: 0, bottom: this.bottom, right: i.width };
    }
    drawBackground() {
      let {
        ctx: i,
        options: { backgroundColor: e },
        left: t,
        top: o,
        width: r,
        height: a,
      } = this;
      e && (i.save(), (i.fillStyle = e), i.fillRect(t, o, r, a), i.restore());
    }
    getLineWidthForValue(i) {
      let e = this.options.grid;
      if (!this._isVisible() || !e.display) return 0;
      let o = this.ticks.findIndex((r) => r.value === i);
      return o >= 0 ? e.setContext(this.getContext(o)).lineWidth : 0;
    }
    drawGrid(i) {
      let e = this.options.grid,
        t = this.ctx,
        o =
          this._gridLineItems ||
          (this._gridLineItems = this._computeGridLineItems(i)),
        r,
        a,
        s = (c, p, f) => {
          !f.width ||
            !f.color ||
            (t.save(),
            (t.lineWidth = f.width),
            (t.strokeStyle = f.color),
            t.setLineDash(f.borderDash || []),
            (t.lineDashOffset = f.borderDashOffset),
            t.beginPath(),
            t.moveTo(c.x, c.y),
            t.lineTo(p.x, p.y),
            t.stroke(),
            t.restore());
        };
      if (e.display)
        for (r = 0, a = o.length; r < a; ++r) {
          let c = o[r];
          e.drawOnChartArea && s({ x: c.x1, y: c.y1 }, { x: c.x2, y: c.y2 }, c),
            e.drawTicks &&
              s(
                { x: c.tx1, y: c.ty1 },
                { x: c.tx2, y: c.ty2 },
                {
                  color: c.tickColor,
                  width: c.tickWidth,
                  borderDash: c.tickBorderDash,
                  borderDashOffset: c.tickBorderDashOffset,
                }
              );
        }
    }
    drawBorder() {
      let {
          chart: i,
          ctx: e,
          options: { border: t, grid: o },
        } = this,
        r = t.setContext(this.getContext()),
        a = t.display ? r.width : 0;
      if (!a) return;
      let s = o.setContext(this.getContext(0)).lineWidth,
        c = this._borderValue,
        p,
        f,
        y,
        x;
      this.isHorizontal()
        ? ((p = So(i, this.left, a) - a / 2),
          (f = So(i, this.right, s) + s / 2),
          (y = x = c))
        : ((y = So(i, this.top, a) - a / 2),
          (x = So(i, this.bottom, s) + s / 2),
          (p = f = c)),
        e.save(),
        (e.lineWidth = r.width),
        (e.strokeStyle = r.color),
        e.beginPath(),
        e.moveTo(p, y),
        e.lineTo(f, x),
        e.stroke(),
        e.restore();
    }
    drawLabels(i) {
      if (!this.options.ticks.display) return;
      let t = this.ctx,
        o = this._computeLabelArea();
      o && Ba(t, o);
      let r = this.getLabelItems(i);
      for (let a of r) {
        let s = a.options,
          c = a.font,
          p = a.label,
          f = a.textOffset;
        Mo(t, p, 0, f, c, s);
      }
      o && Ha(t);
    }
    drawTitle() {
      let {
        ctx: i,
        options: { position: e, title: t, reverse: o },
      } = this;
      if (!t.display) return;
      let r = Gt(t.font),
        a = li(t.padding),
        s = t.align,
        c = r.lineHeight / 2;
      e === "bottom" || e === "center" || et(e)
        ? ((c += a.bottom),
          vt(t.text) && (c += r.lineHeight * (t.text.length - 1)))
        : (c += a.top);
      let {
        titleX: p,
        titleY: f,
        maxWidth: y,
        rotation: x,
      } = fx(this, c, e, s);
      Mo(i, t.text, 0, 0, r, {
        color: t.color,
        maxWidth: y,
        rotation: x,
        textAlign: mx(s, e, o),
        textBaseline: "middle",
        translation: [p, f],
      });
    }
    draw(i) {
      this._isVisible() &&
        (this.drawBackground(),
        this.drawGrid(i),
        this.drawBorder(),
        this.drawTitle(),
        this.drawLabels(i));
    }
    _layers() {
      let i = this.options,
        e = (i.ticks && i.ticks.z) || 0,
        t = je(i.grid && i.grid.z, -1),
        o = je(i.border && i.border.z, 0);
      return !this._isVisible() || this.draw !== n.prototype.draw
        ? [
            {
              z: e,
              draw: (r) => {
                this.draw(r);
              },
            },
          ]
        : [
            {
              z: t,
              draw: (r) => {
                this.drawBackground(), this.drawGrid(r), this.drawTitle();
              },
            },
            {
              z: o,
              draw: () => {
                this.drawBorder();
              },
            },
            {
              z: e,
              draw: (r) => {
                this.drawLabels(r);
              },
            },
          ];
    }
    getMatchingVisibleMetas(i) {
      let e = this.chart.getSortedVisibleDatasetMetas(),
        t = this.axis + "AxisID",
        o = [],
        r,
        a;
      for (r = 0, a = e.length; r < a; ++r) {
        let s = e[r];
        s[t] === this.id && (!i || s.type === i) && o.push(s);
      }
      return o;
    }
    _resolveTickFontOptions(i) {
      let e = this.options.ticks.setContext(this.getContext(i));
      return Gt(e.font);
    }
    _maxDigits() {
      let i = this._resolveTickFontOptions(0).lineHeight;
      return (this.isHorizontal() ? this.width : this.height) / i;
    }
  },
  Wr = class {
    constructor(i, e, t) {
      (this.type = i),
        (this.scope = e),
        (this.override = t),
        (this.items = Object.create(null));
    }
    isForType(i) {
      return Object.prototype.isPrototypeOf.call(
        this.type.prototype,
        i.prototype
      );
    }
    register(i) {
      let e = Object.getPrototypeOf(i),
        t;
      bx(e) && (t = this.register(e));
      let o = this.items,
        r = i.id,
        a = this.scope + "." + r;
      if (!r) throw new Error("class does not have id: " + i);
      return (
        r in o ||
          ((o[r] = i),
          gx(i, a, t),
          this.override && Ct.override(i.id, i.overrides)),
        a
      );
    }
    get(i) {
      return this.items[i];
    }
    unregister(i) {
      let e = this.items,
        t = i.id,
        o = this.scope;
      t in e && delete e[t],
        o && t in Ct[o] && (delete Ct[o][t], this.override && delete Do[t]);
    }
  };
function gx(n, i, e) {
  let t = Rr(Object.create(null), [e ? Ct.get(e) : {}, Ct.get(i), n.defaults]);
  Ct.set(i, t),
    n.defaultRoutes && _x(i, n.defaultRoutes),
    n.descriptors && Ct.describe(i, n.descriptors);
}
function _x(n, i) {
  Object.keys(i).forEach((e) => {
    let t = e.split("."),
      o = t.pop(),
      r = [n].concat(t).join("."),
      a = i[e].split("."),
      s = a.pop(),
      c = a.join(".");
    Ct.route(r, o, c, s);
  });
}
function bx(n) {
  return "id" in n && "defaults" in n;
}
var Mu = class {
    constructor() {
      (this.controllers = new Wr(Oo, "datasets", !0)),
        (this.elements = new Wr(fn, "elements")),
        (this.plugins = new Wr(Object, "plugins")),
        (this.scales = new Wr(ir, "scales")),
        (this._typedRegistries = [
          this.controllers,
          this.scales,
          this.elements,
        ]);
    }
    add(...i) {
      this._each("register", i);
    }
    remove(...i) {
      this._each("unregister", i);
    }
    addControllers(...i) {
      this._each("register", i, this.controllers);
    }
    addElements(...i) {
      this._each("register", i, this.elements);
    }
    addPlugins(...i) {
      this._each("register", i, this.plugins);
    }
    addScales(...i) {
      this._each("register", i, this.scales);
    }
    getController(i) {
      return this._get(i, this.controllers, "controller");
    }
    getElement(i) {
      return this._get(i, this.elements, "element");
    }
    getPlugin(i) {
      return this._get(i, this.plugins, "plugin");
    }
    getScale(i) {
      return this._get(i, this.scales, "scale");
    }
    removeControllers(...i) {
      this._each("unregister", i, this.controllers);
    }
    removeElements(...i) {
      this._each("unregister", i, this.elements);
    }
    removePlugins(...i) {
      this._each("unregister", i, this.plugins);
    }
    removeScales(...i) {
      this._each("unregister", i, this.scales);
    }
    _each(i, e, t) {
      [...e].forEach((o) => {
        let r = t || this._getRegistryForType(o);
        t || r.isForType(o) || (r === this.plugins && o.id)
          ? this._exec(i, r, o)
          : ut(o, (a) => {
              let s = t || this._getRegistryForType(a);
              this._exec(i, s, a);
            });
      });
    }
    _exec(i, e, t) {
      let o = gl(i);
      mt(t["before" + o], [], t), e[i](t), mt(t["after" + o], [], t);
    }
    _getRegistryForType(i) {
      for (let e = 0; e < this._typedRegistries.length; e++) {
        let t = this._typedRegistries[e];
        if (t.isForType(i)) return t;
      }
      return this.plugins;
    }
    _get(i, e, t) {
      let o = e.get(i);
      if (o === void 0)
        throw new Error('"' + i + '" is not a registered ' + t + ".");
      return o;
    }
  },
  Vn = new Mu(),
  Eu = class {
    constructor() {
      this._init = [];
    }
    notify(i, e, t, o) {
      e === "beforeInit" &&
        ((this._init = this._createDescriptors(i, !0)),
        this._notify(this._init, i, "install"));
      let r = o ? this._descriptors(i).filter(o) : this._descriptors(i),
        a = this._notify(r, i, e, t);
      return (
        e === "afterDestroy" &&
          (this._notify(r, i, "stop"),
          this._notify(this._init, i, "uninstall")),
        a
      );
    }
    _notify(i, e, t, o) {
      o = o || {};
      for (let r of i) {
        let a = r.plugin,
          s = a[t],
          c = [e, o, r.options];
        if (mt(s, c, a) === !1 && o.cancelable) return !1;
      }
      return !0;
    }
    invalidate() {
      Ke(this._cache) ||
        ((this._oldCache = this._cache), (this._cache = void 0));
    }
    _descriptors(i) {
      if (this._cache) return this._cache;
      let e = (this._cache = this._createDescriptors(i));
      return this._notifyStateChanges(i), e;
    }
    _createDescriptors(i, e) {
      let t = i && i.config,
        o = je(t.options && t.options.plugins, {}),
        r = vx(t);
      return o === !1 && !e ? [] : xx(i, r, o, e);
    }
    _notifyStateChanges(i) {
      let e = this._oldCache || [],
        t = this._cache,
        o = (r, a) =>
          r.filter((s) => !a.some((c) => s.plugin.id === c.plugin.id));
      this._notify(o(e, t), i, "stop"), this._notify(o(t, e), i, "start");
    }
  };
function vx(n) {
  let i = {},
    e = [],
    t = Object.keys(Vn.plugins.items);
  for (let r = 0; r < t.length; r++) e.push(Vn.getPlugin(t[r]));
  let o = n.plugins || [];
  for (let r = 0; r < o.length; r++) {
    let a = o[r];
    e.indexOf(a) === -1 && (e.push(a), (i[a.id] = !0));
  }
  return { plugins: e, localIds: i };
}
function yx(n, i) {
  return !i && n === !1 ? null : n === !0 ? {} : n;
}
function xx(n, { plugins: i, localIds: e }, t, o) {
  let r = [],
    a = n.getContext();
  for (let s of i) {
    let c = s.id,
      p = yx(t[c], o);
    p !== null &&
      r.push({
        plugin: s,
        options: Cx(n.config, { plugin: s, local: e[c] }, p, a),
      });
  }
  return r;
}
function Cx(n, { plugin: i, local: e }, t, o) {
  let r = n.pluginScopeKeys(i),
    a = n.getOptionScopes(t, r);
  return (
    e && i.defaults && a.push(i.defaults),
    n.createResolver(a, o, [""], { scriptable: !1, indexable: !1, allKeys: !0 })
  );
}
function Tu(n, i) {
  let e = Ct.datasets[n] || {};
  return (
    ((i.datasets || {})[n] || {}).indexAxis || i.indexAxis || e.indexAxis || "x"
  );
}
function wx(n, i) {
  let e = n;
  return (
    n === "_index_" ? (e = i) : n === "_value_" && (e = i === "x" ? "y" : "x"),
    e
  );
}
function Dx(n, i) {
  return n === i ? "_index_" : "_value_";
}
function rg(n) {
  if (n === "x" || n === "y" || n === "r") return n;
}
function Sx(n) {
  if (n === "top" || n === "bottom") return "x";
  if (n === "left" || n === "right") return "y";
}
function ku(n, ...i) {
  if (rg(n)) return n;
  for (let e of i) {
    let t =
      e.axis || Sx(e.position) || (n.length > 1 && rg(n[0].toLowerCase()));
    if (t) return t;
  }
  throw new Error(
    `Cannot determine type of '${n}' axis. Please provide 'axis' or 'position' option.`
  );
}
function ag(n, i, e) {
  if (e[i + "AxisID"] === n) return { axis: i };
}
function Mx(n, i) {
  if (i.data && i.data.datasets) {
    let e = i.data.datasets.filter((t) => t.xAxisID === n || t.yAxisID === n);
    if (e.length) return ag(n, "x", e[0]) || ag(n, "y", e[0]);
  }
  return {};
}
function Ex(n, i) {
  let e = Do[n.type] || { scales: {} },
    t = i.scales || {},
    o = Tu(n.type, i),
    r = Object.create(null);
  return (
    Object.keys(t).forEach((a) => {
      let s = t[a];
      if (!et(s))
        return console.error(`Invalid scale configuration for scale: ${a}`);
      if (s._proxy)
        return console.warn(
          `Ignoring resolver passed as options for scale: ${a}`
        );
      let c = ku(a, s, Mx(a, n), Ct.scales[s.type]),
        p = Dx(c, o),
        f = e.scales || {};
      r[a] = Nr(Object.create(null), [{ axis: c }, s, f[c], f[p]]);
    }),
    n.data.datasets.forEach((a) => {
      let s = a.type || n.type,
        c = a.indexAxis || Tu(s, i),
        f = (Do[s] || {}).scales || {};
      Object.keys(f).forEach((y) => {
        let x = wx(y, c),
          C = a[x + "AxisID"] || x;
        (r[C] = r[C] || Object.create(null)),
          Nr(r[C], [{ axis: x }, t[C], f[y]]);
      });
    }),
    Object.keys(r).forEach((a) => {
      let s = r[a];
      Nr(s, [Ct.scales[s.type], Ct.scale]);
    }),
    r
  );
}
function Yg(n) {
  let i = n.options || (n.options = {});
  (i.plugins = je(i.plugins, {})), (i.scales = Ex(n, i));
}
function qg(n) {
  return (
    (n = n || {}),
    (n.datasets = n.datasets || []),
    (n.labels = n.labels || []),
    n
  );
}
function Tx(n) {
  return (n = n || {}), (n.data = qg(n.data)), Yg(n), n;
}
var sg = new Map(),
  Kg = new Set();
function kl(n, i) {
  let e = sg.get(n);
  return e || ((e = i()), sg.set(n, e), Kg.add(e)), e;
}
var $a = (n, i, e) => {
    let t = oo(i, e);
    t !== void 0 && n.add(t);
  },
  Ou = class {
    constructor(i) {
      (this._config = Tx(i)),
        (this._scopeCache = new Map()),
        (this._resolverCache = new Map());
    }
    get platform() {
      return this._config.platform;
    }
    get type() {
      return this._config.type;
    }
    set type(i) {
      this._config.type = i;
    }
    get data() {
      return this._config.data;
    }
    set data(i) {
      this._config.data = qg(i);
    }
    get options() {
      return this._config.options;
    }
    set options(i) {
      this._config.options = i;
    }
    get plugins() {
      return this._config.plugins;
    }
    update() {
      let i = this._config;
      this.clearCache(), Yg(i);
    }
    clearCache() {
      this._scopeCache.clear(), this._resolverCache.clear();
    }
    datasetScopeKeys(i) {
      return kl(i, () => [[`datasets.${i}`, ""]]);
    }
    datasetAnimationScopeKeys(i, e) {
      return kl(`${i}.transition.${e}`, () => [
        [`datasets.${i}.transitions.${e}`, `transitions.${e}`],
        [`datasets.${i}`, ""],
      ]);
    }
    datasetElementScopeKeys(i, e) {
      return kl(`${i}-${e}`, () => [
        [`datasets.${i}.elements.${e}`, `datasets.${i}`, `elements.${e}`, ""],
      ]);
    }
    pluginScopeKeys(i) {
      let e = i.id,
        t = this.type;
      return kl(`${t}-plugin-${e}`, () => [
        [`plugins.${e}`, ...(i.additionalOptionScopes || [])],
      ]);
    }
    _cachedScopes(i, e) {
      let t = this._scopeCache,
        o = t.get(i);
      return (!o || e) && ((o = new Map()), t.set(i, o)), o;
    }
    getOptionScopes(i, e, t) {
      let { options: o, type: r } = this,
        a = this._cachedScopes(i, t),
        s = a.get(e);
      if (s) return s;
      let c = new Set();
      e.forEach((f) => {
        i && (c.add(i), f.forEach((y) => $a(c, i, y))),
          f.forEach((y) => $a(c, o, y)),
          f.forEach((y) => $a(c, Do[r] || {}, y)),
          f.forEach((y) => $a(c, Ct, y)),
          f.forEach((y) => $a(c, yl, y));
      });
      let p = Array.from(c);
      return (
        p.length === 0 && p.push(Object.create(null)),
        Kg.has(e) && a.set(e, p),
        p
      );
    }
    chartOptionScopes() {
      let { options: i, type: e } = this;
      return [i, Do[e] || {}, Ct.datasets[e] || {}, { type: e }, Ct, yl];
    }
    resolveNamedOptions(i, e, t, o = [""]) {
      let r = { $shared: !0 },
        { resolver: a, subPrefixes: s } = lg(this._resolverCache, i, o),
        c = a;
      if (Ox(a, e)) {
        (r.$shared = !1), (t = io(t) ? t() : t);
        let p = this.createResolver(i, t, s);
        c = Xo(a, t, p);
      }
      for (let p of e) r[p] = c[p];
      return r;
    }
    createResolver(i, e, t = [""], o) {
      let { resolver: r } = lg(this._resolverCache, i, t);
      return et(e) ? Xo(r, e, void 0, o) : r;
    }
  };
function lg(n, i, e) {
  let t = n.get(i);
  t || ((t = new Map()), n.set(i, t));
  let o = e.join(),
    r = t.get(o);
  return (
    r ||
      ((r = {
        resolver: wl(i, e),
        subPrefixes: e.filter((s) => !s.toLowerCase().includes("hover")),
      }),
      t.set(o, r)),
    r
  );
}
var kx = (n) => et(n) && Object.getOwnPropertyNames(n).some((i) => io(n[i]));
function Ox(n, i) {
  let { isScriptable: e, isIndexable: t } = Jd(n);
  for (let o of i) {
    let r = e(o),
      a = t(o),
      s = (a || r) && n[o];
    if ((r && (io(s) || kx(s))) || (a && vt(s))) return !0;
  }
  return !1;
}
var Ix = "4.5.0",
  Px = ["top", "bottom", "left", "right", "chartArea"];
function cg(n, i) {
  return n === "top" || n === "bottom" || (Px.indexOf(n) === -1 && i === "x");
}
function dg(n, i) {
  return function (e, t) {
    return e[n] === t[n] ? e[i] - t[i] : e[n] - t[n];
  };
}
function ug(n) {
  let i = n.chart,
    e = i.options.animation;
  i.notifyPlugins("afterRender"), mt(e && e.onComplete, [n], i);
}
function Ax(n) {
  let i = n.chart,
    e = i.options.animation;
  mt(e && e.onProgress, [n], i);
}
function Qg(n) {
  return (
    Dl() && typeof n == "string"
      ? (n = document.getElementById(n))
      : n && n.length && (n = n[0]),
    n && n.canvas && (n = n.canvas),
    n
  );
}
var Rl = {},
  hg = (n) => {
    let i = Qg(n);
    return Object.values(Rl)
      .filter((e) => e.canvas === i)
      .pop();
  };
function Rx(n, i, e) {
  let t = Object.keys(n);
  for (let o of t) {
    let r = +o;
    if (r >= i) {
      let a = n[o];
      delete n[o], (e > 0 || r > i) && (n[r + e] = a);
    }
  }
}
function Fx(n, i, e, t) {
  return !e || n.type === "mouseout" ? null : t ? i : n;
}
var nr = (() => {
  class n {
    static defaults = Ct;
    static instances = Rl;
    static overrides = Do;
    static registry = Vn;
    static version = Ix;
    static getChart = hg;
    static register(...e) {
      Vn.add(...e), pg();
    }
    static unregister(...e) {
      Vn.remove(...e), pg();
    }
    constructor(e, t) {
      let o = (this.config = new Ou(t)),
        r = Qg(e),
        a = hg(r);
      if (a)
        throw new Error(
          "Canvas is already in use. Chart with ID '" +
            a.id +
            "' must be destroyed before the canvas with ID '" +
            a.canvas.id +
            "' can be reused."
        );
      let s = o.createResolver(o.chartOptionScopes(), this.getContext());
      (this.platform = new (o.platform || ix(r))()),
        this.platform.updateConfig(o);
      let c = this.platform.acquireContext(r, s.aspectRatio),
        p = c && c.canvas,
        f = p && p.height,
        y = p && p.width;
      if (
        ((this.id = uf()),
        (this.ctx = c),
        (this.canvas = p),
        (this.width = y),
        (this.height = f),
        (this._options = s),
        (this._aspectRatio = this.aspectRatio),
        (this._layers = []),
        (this._metasets = []),
        (this._stacks = void 0),
        (this.boxes = []),
        (this.currentDevicePixelRatio = void 0),
        (this.chartArea = void 0),
        (this._active = []),
        (this._lastEvent = void 0),
        (this._listeners = {}),
        (this._responsiveListeners = void 0),
        (this._sortedMetasets = []),
        (this.scales = {}),
        (this._plugins = new Eu()),
        (this.$proxies = {}),
        (this._hiddenIndices = {}),
        (this.attached = !1),
        (this._animationsDisabled = void 0),
        (this.$context = void 0),
        (this._doResize = Cf((x) => this.update(x), s.resizeDelay || 0)),
        (this._dataChanges = []),
        (Rl[this.id] = this),
        !c || !p)
      ) {
        console.error(
          "Failed to create chart: can't acquire context from the given item"
        );
        return;
      }
      ao.listen(this, "complete", ug),
        ao.listen(this, "progress", Ax),
        this._initialize(),
        this.attached && this.update();
    }
    get aspectRatio() {
      let {
        options: { aspectRatio: e, maintainAspectRatio: t },
        width: o,
        height: r,
        _aspectRatio: a,
      } = this;
      return Ke(e) ? (t && a ? a : r ? o / r : null) : e;
    }
    get data() {
      return this.config.data;
    }
    set data(e) {
      this.config.data = e;
    }
    get options() {
      return this._options;
    }
    set options(e) {
      this.config.options = e;
    }
    get registry() {
      return Vn;
    }
    _initialize() {
      return (
        this.notifyPlugins("beforeInit"),
        this.options.responsive
          ? this.resize()
          : nu(this, this.options.devicePixelRatio),
        this.bindEvents(),
        this.notifyPlugins("afterInit"),
        this
      );
    }
    clear() {
      return Qd(this.canvas, this.ctx), this;
    }
    stop() {
      return ao.stop(this), this;
    }
    resize(e, t) {
      ao.running(this)
        ? (this._resizeBeforeDraw = { width: e, height: t })
        : this._resize(e, t);
    }
    _resize(e, t) {
      let o = this.options,
        r = this.canvas,
        a = o.maintainAspectRatio && this.aspectRatio,
        s = this.platform.getMaximumSize(r, e, t, a),
        c = o.devicePixelRatio || this.platform.getDevicePixelRatio(),
        p = this.width ? "resize" : "attach";
      (this.width = s.width),
        (this.height = s.height),
        (this._aspectRatio = this.aspectRatio),
        nu(this, c, !0) &&
          (this.notifyPlugins("resize", { size: s }),
          mt(o.onResize, [this, s], this),
          this.attached && this._doResize(p) && this.render());
    }
    ensureScalesHaveIDs() {
      let t = this.options.scales || {};
      ut(t, (o, r) => {
        o.id = r;
      });
    }
    buildOrUpdateScales() {
      let e = this.options,
        t = e.scales,
        o = this.scales,
        r = Object.keys(o).reduce((s, c) => ((s[c] = !1), s), {}),
        a = [];
      t &&
        (a = a.concat(
          Object.keys(t).map((s) => {
            let c = t[s],
              p = ku(s, c),
              f = p === "r",
              y = p === "x";
            return {
              options: c,
              dposition: f ? "chartArea" : y ? "bottom" : "left",
              dtype: f ? "radialLinear" : y ? "category" : "linear",
            };
          })
        )),
        ut(a, (s) => {
          let c = s.options,
            p = c.id,
            f = ku(p, c),
            y = je(c.type, s.dtype);
          (c.position === void 0 || cg(c.position, f) !== cg(s.dposition)) &&
            (c.position = s.dposition),
            (r[p] = !0);
          let x = null;
          if (p in o && o[p].type === y) x = o[p];
          else {
            let C = Vn.getScale(y);
            (x = new C({ id: p, type: y, ctx: this.ctx, chart: this })),
              (o[x.id] = x);
          }
          x.init(c, e);
        }),
        ut(r, (s, c) => {
          s || delete o[c];
        }),
        ut(o, (s) => {
          pi.configure(this, s, s.options), pi.addBox(this, s);
        });
    }
    _updateMetasets() {
      let e = this._metasets,
        t = this.data.datasets.length,
        o = e.length;
      if ((e.sort((r, a) => r.index - a.index), o > t)) {
        for (let r = t; r < o; ++r) this._destroyDatasetMeta(r);
        e.splice(t, o - t);
      }
      this._sortedMetasets = e.slice(0).sort(dg("order", "index"));
    }
    _removeUnreferencedMetasets() {
      let {
        _metasets: e,
        data: { datasets: t },
      } = this;
      e.length > t.length && delete this._stacks,
        e.forEach((o, r) => {
          t.filter((a) => a === o._dataset).length === 0 &&
            this._destroyDatasetMeta(r);
        });
    }
    buildOrUpdateControllers() {
      let e = [],
        t = this.data.datasets,
        o,
        r;
      for (
        this._removeUnreferencedMetasets(), o = 0, r = t.length;
        o < r;
        o++
      ) {
        let a = t[o],
          s = this.getDatasetMeta(o),
          c = a.type || this.config.type;
        if (
          (s.type &&
            s.type !== c &&
            (this._destroyDatasetMeta(o), (s = this.getDatasetMeta(o))),
          (s.type = c),
          (s.indexAxis = a.indexAxis || Tu(c, this.options)),
          (s.order = a.order || 0),
          (s.index = o),
          (s.label = "" + a.label),
          (s.visible = this.isDatasetVisible(o)),
          s.controller)
        )
          s.controller.updateIndex(o), s.controller.linkScales();
        else {
          let p = Vn.getController(c),
            { datasetElementType: f, dataElementType: y } = Ct.datasets[c];
          Object.assign(p, {
            dataElementType: Vn.getElement(y),
            datasetElementType: f && Vn.getElement(f),
          }),
            (s.controller = new p(this, o)),
            e.push(s.controller);
        }
      }
      return this._updateMetasets(), e;
    }
    _resetElements() {
      ut(
        this.data.datasets,
        (e, t) => {
          this.getDatasetMeta(t).controller.reset();
        },
        this
      );
    }
    reset() {
      this._resetElements(), this.notifyPlugins("reset");
    }
    update(e) {
      let t = this.config;
      t.update();
      let o = (this._options = t.createResolver(
          t.chartOptionScopes(),
          this.getContext()
        )),
        r = (this._animationsDisabled = !o.animation);
      if (
        (this._updateScales(),
        this._checkEventBindings(),
        this._updateHiddenIndices(),
        this._plugins.invalidate(),
        this.notifyPlugins("beforeUpdate", { mode: e, cancelable: !0 }) === !1)
      )
        return;
      let a = this.buildOrUpdateControllers();
      this.notifyPlugins("beforeElementsUpdate");
      let s = 0;
      for (let f = 0, y = this.data.datasets.length; f < y; f++) {
        let { controller: x } = this.getDatasetMeta(f),
          C = !r && a.indexOf(x) === -1;
        x.buildOrUpdateElements(C), (s = Math.max(+x.getMaxOverflow(), s));
      }
      (s = this._minPadding = o.layout.autoPadding ? s : 0),
        this._updateLayout(s),
        r ||
          ut(a, (f) => {
            f.reset();
          }),
        this._updateDatasets(e),
        this.notifyPlugins("afterUpdate", { mode: e }),
        this._layers.sort(dg("z", "_idx"));
      let { _active: c, _lastEvent: p } = this;
      p
        ? this._eventHandler(p, !0)
        : c.length && this._updateHoverStyles(c, c, !0),
        this.render();
    }
    _updateScales() {
      ut(this.scales, (e) => {
        pi.removeBox(this, e);
      }),
        this.ensureScalesHaveIDs(),
        this.buildOrUpdateScales();
    }
    _checkEventBindings() {
      let e = this.options,
        t = new Set(Object.keys(this._listeners)),
        o = new Set(e.events);
      (!Vd(t, o) || !!this._responsiveListeners !== e.responsive) &&
        (this.unbindEvents(), this.bindEvents());
    }
    _updateHiddenIndices() {
      let { _hiddenIndices: e } = this,
        t = this._getUniformDataChanges() || [];
      for (let { method: o, start: r, count: a } of t) {
        let s = o === "_removeElements" ? -a : a;
        Rx(e, r, s);
      }
    }
    _getUniformDataChanges() {
      let e = this._dataChanges;
      if (!e || !e.length) return;
      this._dataChanges = [];
      let t = this.data.datasets.length,
        o = (a) =>
          new Set(
            e
              .filter((s) => s[0] === a)
              .map((s, c) => c + "," + s.splice(1).join(","))
          ),
        r = o(0);
      for (let a = 1; a < t; a++) if (!Vd(r, o(a))) return;
      return Array.from(r)
        .map((a) => a.split(","))
        .map((a) => ({ method: a[1], start: +a[2], count: +a[3] }));
    }
    _updateLayout(e) {
      if (this.notifyPlugins("beforeLayout", { cancelable: !0 }) === !1) return;
      pi.update(this, this.width, this.height, e);
      let t = this.chartArea,
        o = t.width <= 0 || t.height <= 0;
      (this._layers = []),
        ut(
          this.boxes,
          (r) => {
            (o && r.position === "chartArea") ||
              (r.configure && r.configure(), this._layers.push(...r._layers()));
          },
          this
        ),
        this._layers.forEach((r, a) => {
          r._idx = a;
        }),
        this.notifyPlugins("afterLayout");
    }
    _updateDatasets(e) {
      if (
        this.notifyPlugins("beforeDatasetsUpdate", {
          mode: e,
          cancelable: !0,
        }) !== !1
      ) {
        for (let t = 0, o = this.data.datasets.length; t < o; ++t)
          this.getDatasetMeta(t).controller.configure();
        for (let t = 0, o = this.data.datasets.length; t < o; ++t)
          this._updateDataset(t, io(e) ? e({ datasetIndex: t }) : e);
        this.notifyPlugins("afterDatasetsUpdate", { mode: e });
      }
    }
    _updateDataset(e, t) {
      let o = this.getDatasetMeta(e),
        r = { meta: o, index: e, mode: t, cancelable: !0 };
      this.notifyPlugins("beforeDatasetUpdate", r) !== !1 &&
        (o.controller._update(t),
        (r.cancelable = !1),
        this.notifyPlugins("afterDatasetUpdate", r));
    }
    render() {
      this.notifyPlugins("beforeRender", { cancelable: !0 }) !== !1 &&
        (ao.has(this)
          ? this.attached && !ao.running(this) && ao.start(this)
          : (this.draw(), ug({ chart: this })));
    }
    draw() {
      let e;
      if (this._resizeBeforeDraw) {
        let { width: o, height: r } = this._resizeBeforeDraw;
        (this._resizeBeforeDraw = null), this._resize(o, r);
      }
      if (
        (this.clear(),
        this.width <= 0 ||
          this.height <= 0 ||
          this.notifyPlugins("beforeDraw", { cancelable: !0 }) === !1)
      )
        return;
      let t = this._layers;
      for (e = 0; e < t.length && t[e].z <= 0; ++e) t[e].draw(this.chartArea);
      for (this._drawDatasets(); e < t.length; ++e) t[e].draw(this.chartArea);
      this.notifyPlugins("afterDraw");
    }
    _getSortedDatasetMetas(e) {
      let t = this._sortedMetasets,
        o = [],
        r,
        a;
      for (r = 0, a = t.length; r < a; ++r) {
        let s = t[r];
        (!e || s.visible) && o.push(s);
      }
      return o;
    }
    getSortedVisibleDatasetMetas() {
      return this._getSortedDatasetMetas(!0);
    }
    _drawDatasets() {
      if (this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 }) === !1)
        return;
      let e = this.getSortedVisibleDatasetMetas();
      for (let t = e.length - 1; t >= 0; --t) this._drawDataset(e[t]);
      this.notifyPlugins("afterDatasetsDraw");
    }
    _drawDataset(e) {
      let t = this.ctx,
        o = { meta: e, index: e.index, cancelable: !0 },
        r = cu(this, e);
      this.notifyPlugins("beforeDatasetDraw", o) !== !1 &&
        (r && Ba(t, r),
        e.controller.draw(),
        r && Ha(t),
        (o.cancelable = !1),
        this.notifyPlugins("afterDatasetDraw", o));
    }
    isPointInArea(e) {
      return An(e, this.chartArea, this._minPadding);
    }
    getElementsAtEventForMode(e, t, o, r) {
      let a = Vy.modes[t];
      return typeof a == "function" ? a(this, e, o, r) : [];
    }
    getDatasetMeta(e) {
      let t = this.data.datasets[e],
        o = this._metasets,
        r = o.filter((a) => a && a._dataset === t).pop();
      return (
        r ||
          ((r = {
            type: null,
            data: [],
            dataset: null,
            controller: null,
            hidden: null,
            xAxisID: null,
            yAxisID: null,
            order: (t && t.order) || 0,
            index: e,
            _dataset: t,
            _parsed: [],
            _sorted: !1,
          }),
          o.push(r)),
        r
      );
    }
    getContext() {
      return (
        this.$context ||
        (this.$context = ro(null, { chart: this, type: "chart" }))
      );
    }
    getVisibleDatasetCount() {
      return this.getSortedVisibleDatasetMetas().length;
    }
    isDatasetVisible(e) {
      let t = this.data.datasets[e];
      if (!t) return !1;
      let o = this.getDatasetMeta(e);
      return typeof o.hidden == "boolean" ? !o.hidden : !t.hidden;
    }
    setDatasetVisibility(e, t) {
      let o = this.getDatasetMeta(e);
      o.hidden = !t;
    }
    toggleDataVisibility(e) {
      this._hiddenIndices[e] = !this._hiddenIndices[e];
    }
    getDataVisibility(e) {
      return !this._hiddenIndices[e];
    }
    _updateVisibility(e, t, o) {
      let r = o ? "show" : "hide",
        a = this.getDatasetMeta(e),
        s = a.controller._resolveAnimations(void 0, r);
      Vr(t)
        ? ((a.data[t].hidden = !o), this.update())
        : (this.setDatasetVisibility(e, o),
          s.update(a, { visible: o }),
          this.update((c) => (c.datasetIndex === e ? r : void 0)));
    }
    hide(e, t) {
      this._updateVisibility(e, t, !1);
    }
    show(e, t) {
      this._updateVisibility(e, t, !0);
    }
    _destroyDatasetMeta(e) {
      let t = this._metasets[e];
      t && t.controller && t.controller._destroy(), delete this._metasets[e];
    }
    _stop() {
      let e, t;
      for (
        this.stop(), ao.remove(this), e = 0, t = this.data.datasets.length;
        e < t;
        ++e
      )
        this._destroyDatasetMeta(e);
    }
    destroy() {
      this.notifyPlugins("beforeDestroy");
      let { canvas: e, ctx: t } = this;
      this._stop(),
        this.config.clearCache(),
        e &&
          (this.unbindEvents(),
          Qd(e, t),
          this.platform.releaseContext(t),
          (this.canvas = null),
          (this.ctx = null)),
        delete Rl[this.id],
        this.notifyPlugins("afterDestroy");
    }
    toBase64Image(...e) {
      return this.canvas.toDataURL(...e);
    }
    bindEvents() {
      this.bindUserEvents(),
        this.options.responsive
          ? this.bindResponsiveEvents()
          : (this.attached = !0);
    }
    bindUserEvents() {
      let e = this._listeners,
        t = this.platform,
        o = (a, s) => {
          t.addEventListener(this, a, s), (e[a] = s);
        },
        r = (a, s, c) => {
          (a.offsetX = s), (a.offsetY = c), this._eventHandler(a);
        };
      ut(this.options.events, (a) => o(a, r));
    }
    bindResponsiveEvents() {
      this._responsiveListeners || (this._responsiveListeners = {});
      let e = this._responsiveListeners,
        t = this.platform,
        o = (p, f) => {
          t.addEventListener(this, p, f), (e[p] = f);
        },
        r = (p, f) => {
          e[p] && (t.removeEventListener(this, p, f), delete e[p]);
        },
        a = (p, f) => {
          this.canvas && this.resize(p, f);
        },
        s,
        c = () => {
          r("attach", c),
            (this.attached = !0),
            this.resize(),
            o("resize", a),
            o("detach", s);
        };
      (s = () => {
        (this.attached = !1),
          r("resize", a),
          this._stop(),
          this._resize(0, 0),
          o("attach", c);
      }),
        t.isAttached(this.canvas) ? c() : s();
    }
    unbindEvents() {
      ut(this._listeners, (e, t) => {
        this.platform.removeEventListener(this, t, e);
      }),
        (this._listeners = {}),
        ut(this._responsiveListeners, (e, t) => {
          this.platform.removeEventListener(this, t, e);
        }),
        (this._responsiveListeners = void 0);
    }
    updateHoverStyle(e, t, o) {
      let r = o ? "set" : "remove",
        a,
        s,
        c,
        p;
      for (
        t === "dataset" &&
          ((a = this.getDatasetMeta(e[0].datasetIndex)),
          a.controller["_" + r + "DatasetHoverStyle"]()),
          c = 0,
          p = e.length;
        c < p;
        ++c
      ) {
        s = e[c];
        let f = s && this.getDatasetMeta(s.datasetIndex).controller;
        f && f[r + "HoverStyle"](s.element, s.datasetIndex, s.index);
      }
    }
    getActiveElements() {
      return this._active || [];
    }
    setActiveElements(e) {
      let t = this._active || [],
        o = e.map(({ datasetIndex: a, index: s }) => {
          let c = this.getDatasetMeta(a);
          if (!c) throw new Error("No dataset found at index " + a);
          return { datasetIndex: a, element: c.data[s], index: s };
        });
      !Va(o, t) &&
        ((this._active = o),
        (this._lastEvent = null),
        this._updateHoverStyles(o, t));
    }
    notifyPlugins(e, t, o) {
      return this._plugins.notify(this, e, t, o);
    }
    isPluginEnabled(e) {
      return this._plugins._cache.filter((t) => t.plugin.id === e).length === 1;
    }
    _updateHoverStyles(e, t, o) {
      let r = this.options.hover,
        a = (p, f) =>
          p.filter(
            (y) =>
              !f.some(
                (x) => y.datasetIndex === x.datasetIndex && y.index === x.index
              )
          ),
        s = a(t, e),
        c = o ? e : a(e, t);
      s.length && this.updateHoverStyle(s, r.mode, !1),
        c.length && r.mode && this.updateHoverStyle(c, r.mode, !0);
    }
    _eventHandler(e, t) {
      let o = {
          event: e,
          replay: t,
          cancelable: !0,
          inChartArea: this.isPointInArea(e),
        },
        r = (s) =>
          (s.options.events || this.options.events).includes(e.native.type);
      if (this.notifyPlugins("beforeEvent", o, r) === !1) return;
      let a = this._handleEvent(e, t, o.inChartArea);
      return (
        (o.cancelable = !1),
        this.notifyPlugins("afterEvent", o, r),
        (a || o.changed) && this.render(),
        this
      );
    }
    _handleEvent(e, t, o) {
      let { _active: r = [], options: a } = this,
        s = t,
        c = this._getActiveElements(e, r, o, s),
        p = mf(e),
        f = Fx(e, this._lastEvent, o, p);
      o &&
        ((this._lastEvent = null),
        mt(a.onHover, [e, c, this], this),
        p && mt(a.onClick, [e, c, this], this));
      let y = !Va(c, r);
      return (
        (y || t) && ((this._active = c), this._updateHoverStyles(c, r, t)),
        (this._lastEvent = f),
        y
      );
    }
    _getActiveElements(e, t, o, r) {
      if (e.type === "mouseout") return [];
      if (!o) return t;
      let a = this.options.hover;
      return this.getElementsAtEventForMode(e, a.mode, a, r);
    }
  }
  return n;
})();
function pg() {
  return ut(nr.instances, (n) => n._plugins.invalidate());
}
function Nx(n, i, e) {
  let {
      startAngle: t,
      x: o,
      y: r,
      outerRadius: a,
      innerRadius: s,
      options: c,
    } = i,
    { borderWidth: p, borderJoinStyle: f } = c,
    y = Math.min(p / a, ai(t - e));
  if ((n.beginPath(), n.arc(o, r, a - p / 2, t + y / 2, e - y / 2), s > 0)) {
    let x = Math.min(p / s, ai(t - e));
    n.arc(o, r, s + p / 2, e - x / 2, t + x / 2, !0);
  } else {
    let x = Math.min(p / 2, a * ai(t - e));
    if (f === "round") n.arc(o, r, x, e - lt / 2, t + lt / 2, !0);
    else if (f === "bevel") {
      let C = 2 * x * x,
        M = -C * Math.cos(e + lt / 2) + o,
        k = -C * Math.sin(e + lt / 2) + r,
        O = C * Math.cos(t + lt / 2) + o,
        P = C * Math.sin(t + lt / 2) + r;
      n.lineTo(M, k), n.lineTo(O, P);
    }
  }
  n.closePath(),
    n.moveTo(0, 0),
    n.rect(0, 0, n.canvas.width, n.canvas.height),
    n.clip("evenodd");
}
function Vx(n, i, e) {
  let {
      startAngle: t,
      pixelMargin: o,
      x: r,
      y: a,
      outerRadius: s,
      innerRadius: c,
    } = i,
    p = o / s;
  n.beginPath(),
    n.arc(r, a, s, t - p, e + p),
    c > o
      ? ((p = o / c), n.arc(r, a, c, e + p, t - p, !0))
      : n.arc(r, a, o, e + Lt, t - Lt),
    n.closePath(),
    n.clip();
}
function Lx(n) {
  return Cl(n, ["outerStart", "outerEnd", "innerStart", "innerEnd"]);
}
function Bx(n, i, e, t) {
  let o = Lx(n.options.borderRadius),
    r = (e - i) / 2,
    a = Math.min(r, (t * i) / 2),
    s = (c) => {
      let p = ((e - Math.min(r, c)) * t) / 2;
      return Zt(c, 0, Math.min(r, p));
    };
  return {
    outerStart: s(o.outerStart),
    outerEnd: s(o.outerEnd),
    innerStart: Zt(o.innerStart, 0, a),
    innerEnd: Zt(o.innerEnd, 0, a),
  };
}
function Ur(n, i, e, t) {
  return { x: e + n * Math.cos(i), y: t + n * Math.sin(i) };
}
function Ll(n, i, e, t, o, r) {
  let { x: a, y: s, startAngle: c, pixelMargin: p, innerRadius: f } = i,
    y = Math.max(i.outerRadius + t + e - p, 0),
    x = f > 0 ? f + t + e + p : 0,
    C = 0,
    M = o - c;
  if (t) {
    let dt = f > 0 ? f - t : 0,
      ot = y > 0 ? y - t : 0,
      xt = (dt + ot) / 2,
      ei = xt !== 0 ? (M * xt) / (xt + t) : M;
    C = (M - ei) / 2;
  }
  let k = Math.max(0.001, M * y - e / lt) / y,
    O = (M - k) / 2,
    P = c + O + C,
    U = o - O - C,
    {
      outerStart: Q,
      outerEnd: te,
      innerStart: Z,
      innerEnd: b,
    } = Bx(i, x, y, U - P),
    ge = y - Q,
    ee = y - te,
    _e = P + Q / ge,
    Re = U - te / ee,
    Ue = x + Z,
    xe = x + b,
    Mt = P + Z / Ue,
    _i = U - b / xe;
  if ((n.beginPath(), r)) {
    let dt = (_e + Re) / 2;
    if ((n.arc(a, s, y, _e, dt), n.arc(a, s, y, dt, Re), te > 0)) {
      let Yt = Ur(ee, Re, a, s);
      n.arc(Yt.x, Yt.y, te, Re, U + Lt);
    }
    let ot = Ur(xe, U, a, s);
    if ((n.lineTo(ot.x, ot.y), b > 0)) {
      let Yt = Ur(xe, _i, a, s);
      n.arc(Yt.x, Yt.y, b, U + Lt, _i + Math.PI);
    }
    let xt = (U - b / x + (P + Z / x)) / 2;
    if (
      (n.arc(a, s, x, U - b / x, xt, !0),
      n.arc(a, s, x, xt, P + Z / x, !0),
      Z > 0)
    ) {
      let Yt = Ur(Ue, Mt, a, s);
      n.arc(Yt.x, Yt.y, Z, Mt + Math.PI, P - Lt);
    }
    let ei = Ur(ge, P, a, s);
    if ((n.lineTo(ei.x, ei.y), Q > 0)) {
      let Yt = Ur(ge, _e, a, s);
      n.arc(Yt.x, Yt.y, Q, P - Lt, _e);
    }
  } else {
    n.moveTo(a, s);
    let dt = Math.cos(_e) * y + a,
      ot = Math.sin(_e) * y + s;
    n.lineTo(dt, ot);
    let xt = Math.cos(Re) * y + a,
      ei = Math.sin(Re) * y + s;
    n.lineTo(xt, ei);
  }
  n.closePath();
}
function Hx(n, i, e, t, o) {
  let { fullCircles: r, startAngle: a, circumference: s } = i,
    c = i.endAngle;
  if (r) {
    Ll(n, i, e, t, c, o);
    for (let p = 0; p < r; ++p) n.fill();
    isNaN(s) || (c = a + (s % yt || yt));
  }
  return Ll(n, i, e, t, c, o), n.fill(), c;
}
function jx(n, i, e, t, o) {
  let { fullCircles: r, startAngle: a, circumference: s, options: c } = i,
    {
      borderWidth: p,
      borderJoinStyle: f,
      borderDash: y,
      borderDashOffset: x,
      borderRadius: C,
    } = c,
    M = c.borderAlign === "inner";
  if (!p) return;
  n.setLineDash(y || []),
    (n.lineDashOffset = x),
    M
      ? ((n.lineWidth = p * 2), (n.lineJoin = f || "round"))
      : ((n.lineWidth = p), (n.lineJoin = f || "bevel"));
  let k = i.endAngle;
  if (r) {
    Ll(n, i, e, t, k, o);
    for (let O = 0; O < r; ++O) n.stroke();
    isNaN(s) || (k = a + (s % yt || yt));
  }
  M && Vx(n, i, k),
    c.selfJoin && k - a >= lt && C === 0 && f !== "miter" && Nx(n, i, k),
    r || (Ll(n, i, e, t, k, o), n.stroke());
}
var Iu = class extends fn {
  static id = "arc";
  static defaults = {
    borderAlign: "center",
    borderColor: "#fff",
    borderDash: [],
    borderDashOffset: 0,
    borderJoinStyle: void 0,
    borderRadius: 0,
    borderWidth: 2,
    offset: 0,
    spacing: 0,
    angle: void 0,
    circular: !0,
    selfJoin: !1,
  };
  static defaultRoutes = { backgroundColor: "backgroundColor" };
  static descriptors = {
    _scriptable: !0,
    _indexable: (i) => i !== "borderDash",
  };
  circumference;
  endAngle;
  fullCircles;
  innerRadius;
  outerRadius;
  pixelMargin;
  startAngle;
  constructor(i) {
    super(),
      (this.options = void 0),
      (this.circumference = void 0),
      (this.startAngle = void 0),
      (this.endAngle = void 0),
      (this.innerRadius = void 0),
      (this.outerRadius = void 0),
      (this.pixelMargin = 0),
      (this.fullCircles = 0),
      i && Object.assign(this, i);
  }
  inRange(i, e, t) {
    let o = this.getProps(["x", "y"], t),
      { angle: r, distance: a } = jd(o, { x: i, y: e }),
      {
        startAngle: s,
        endAngle: c,
        innerRadius: p,
        outerRadius: f,
        circumference: y,
      } = this.getProps(
        [
          "startAngle",
          "endAngle",
          "innerRadius",
          "outerRadius",
          "circumference",
        ],
        t
      ),
      x = (this.options.spacing + this.options.borderWidth) / 2,
      C = je(y, c - s),
      M = Br(r, s, c) && s !== c,
      k = C >= yt || M,
      O = Fn(a, p + x, f + x);
    return k && O;
  }
  getCenterPoint(i) {
    let {
        x: e,
        y: t,
        startAngle: o,
        endAngle: r,
        innerRadius: a,
        outerRadius: s,
      } = this.getProps(
        ["x", "y", "startAngle", "endAngle", "innerRadius", "outerRadius"],
        i
      ),
      { offset: c, spacing: p } = this.options,
      f = (o + r) / 2,
      y = (a + s + p + c) / 2;
    return { x: e + Math.cos(f) * y, y: t + Math.sin(f) * y };
  }
  tooltipPosition(i) {
    return this.getCenterPoint(i);
  }
  draw(i) {
    let { options: e, circumference: t } = this,
      o = (e.offset || 0) / 4,
      r = (e.spacing || 0) / 2,
      a = e.circular;
    if (
      ((this.pixelMargin = e.borderAlign === "inner" ? 0.33 : 0),
      (this.fullCircles = t > yt ? Math.floor(t / yt) : 0),
      t === 0 || this.innerRadius < 0 || this.outerRadius < 0)
    )
      return;
    i.save();
    let s = (this.startAngle + this.endAngle) / 2;
    i.translate(Math.cos(s) * o, Math.sin(s) * o);
    let c = 1 - Math.sin(Math.min(lt, t || 0)),
      p = o * c;
    (i.fillStyle = e.backgroundColor),
      (i.strokeStyle = e.borderColor),
      Hx(i, this, p, r, a),
      jx(i, this, p, r, a),
      i.restore();
  }
};
function Xg(n, i, e = i) {
  (n.lineCap = je(e.borderCapStyle, i.borderCapStyle)),
    n.setLineDash(je(e.borderDash, i.borderDash)),
    (n.lineDashOffset = je(e.borderDashOffset, i.borderDashOffset)),
    (n.lineJoin = je(e.borderJoinStyle, i.borderJoinStyle)),
    (n.lineWidth = je(e.borderWidth, i.borderWidth)),
    (n.strokeStyle = je(e.borderColor, i.borderColor));
}
function zx(n, i, e) {
  n.lineTo(e.x, e.y);
}
function Ux(n) {
  return n.stepped
    ? Mf
    : n.tension || n.cubicInterpolationMode === "monotone"
    ? Ef
    : zx;
}
function Zg(n, i, e = {}) {
  let t = n.length,
    { start: o = 0, end: r = t - 1 } = e,
    { start: a, end: s } = i,
    c = Math.max(o, a),
    p = Math.min(r, s),
    f = (o < a && r < a) || (o > s && r > s);
  return {
    count: t,
    start: c,
    loop: i.loop,
    ilen: p < c && !f ? t + p - c : p - c,
  };
}
function Wx(n, i, e, t) {
  let { points: o, options: r } = i,
    { count: a, start: s, loop: c, ilen: p } = Zg(o, e, t),
    f = Ux(r),
    { move: y = !0, reverse: x } = t || {},
    C,
    M,
    k;
  for (C = 0; C <= p; ++C)
    (M = o[(s + (x ? p - C : C)) % a]),
      !M.skip &&
        (y ? (n.moveTo(M.x, M.y), (y = !1)) : f(n, k, M, x, r.stepped),
        (k = M));
  return c && ((M = o[(s + (x ? p : 0)) % a]), f(n, k, M, x, r.stepped)), !!c;
}
function $x(n, i, e, t) {
  let o = i.points,
    { count: r, start: a, ilen: s } = Zg(o, e, t),
    { move: c = !0, reverse: p } = t || {},
    f = 0,
    y = 0,
    x,
    C,
    M,
    k,
    O,
    P,
    U = (te) => (a + (p ? s - te : te)) % r,
    Q = () => {
      k !== O && (n.lineTo(f, O), n.lineTo(f, k), n.lineTo(f, P));
    };
  for (c && ((C = o[U(0)]), n.moveTo(C.x, C.y)), x = 0; x <= s; ++x) {
    if (((C = o[U(x)]), C.skip)) continue;
    let te = C.x,
      Z = C.y,
      b = te | 0;
    b === M
      ? (Z < k ? (k = Z) : Z > O && (O = Z), (f = (y * f + te) / ++y))
      : (Q(), n.lineTo(te, Z), (M = b), (y = 0), (k = O = Z)),
      (P = Z);
  }
  Q();
}
function Pu(n) {
  let i = n.options,
    e = i.borderDash && i.borderDash.length;
  return !n._decimated &&
    !n._loop &&
    !i.tension &&
    i.cubicInterpolationMode !== "monotone" &&
    !i.stepped &&
    !e
    ? $x
    : Wx;
}
function Gx(n) {
  return n.stepped
    ? Nf
    : n.tension || n.cubicInterpolationMode === "monotone"
    ? Vf
    : wo;
}
function Yx(n, i, e, t) {
  let o = i._path;
  o || ((o = i._path = new Path2D()), i.path(o, e, t) && o.closePath()),
    Xg(n, i.options),
    n.stroke(o);
}
function qx(n, i, e, t) {
  let { segments: o, options: r } = i,
    a = Pu(i);
  for (let s of o)
    Xg(n, r, s.style),
      n.beginPath(),
      a(n, i, s, { start: e, end: e + t - 1 }) && n.closePath(),
      n.stroke();
}
var Kx = typeof Path2D == "function";
function Qx(n, i, e, t) {
  Kx && !i.options.segment ? Yx(n, i, e, t) : qx(n, i, e, t);
}
var Gr = (() => {
  class n extends fn {
    static id = "line";
    static defaults = {
      borderCapStyle: "butt",
      borderDash: [],
      borderDashOffset: 0,
      borderJoinStyle: "miter",
      borderWidth: 3,
      capBezierPoints: !0,
      cubicInterpolationMode: "default",
      fill: !1,
      spanGaps: !1,
      stepped: !1,
      tension: 0,
    };
    static defaultRoutes = {
      backgroundColor: "backgroundColor",
      borderColor: "borderColor",
    };
    static descriptors = {
      _scriptable: !0,
      _indexable: (e) => e !== "borderDash" && e !== "fill",
    };
    constructor(e) {
      super(),
        (this.animated = !0),
        (this.options = void 0),
        (this._chart = void 0),
        (this._loop = void 0),
        (this._fullLoop = void 0),
        (this._path = void 0),
        (this._points = void 0),
        (this._segments = void 0),
        (this._decimated = !1),
        (this._pointsUpdated = !1),
        (this._datasetIndex = void 0),
        e && Object.assign(this, e);
    }
    updateControlPoints(e, t) {
      let o = this.options;
      if (
        (o.tension || o.cubicInterpolationMode === "monotone") &&
        !o.stepped &&
        !this._pointsUpdated
      ) {
        let r = o.spanGaps ? this._loop : this._fullLoop;
        Af(this._points, o, e, r, t), (this._pointsUpdated = !0);
      }
    }
    set points(e) {
      (this._points = e),
        delete this._segments,
        delete this._path,
        (this._pointsUpdated = !1);
    }
    get points() {
      return this._points;
    }
    get segments() {
      return (
        this._segments || (this._segments = Bf(this, this.options.segment))
      );
    }
    first() {
      let e = this.segments,
        t = this.points;
      return e.length && t[e[0].start];
    }
    last() {
      let e = this.segments,
        t = this.points,
        o = e.length;
      return o && t[e[o - 1].end];
    }
    interpolate(e, t) {
      let o = this.options,
        r = e[t],
        a = this.points,
        s = lu(this, { property: t, start: r, end: r });
      if (!s.length) return;
      let c = [],
        p = Gx(o),
        f,
        y;
      for (f = 0, y = s.length; f < y; ++f) {
        let { start: x, end: C } = s[f],
          M = a[x],
          k = a[C];
        if (M === k) {
          c.push(M);
          continue;
        }
        let O = Math.abs((r - M[t]) / (k[t] - M[t])),
          P = p(M, k, O, o.stepped);
        (P[t] = e[t]), c.push(P);
      }
      return c.length === 1 ? c[0] : c;
    }
    pathSegment(e, t, o) {
      return Pu(this)(e, this, t, o);
    }
    path(e, t, o) {
      let r = this.segments,
        a = Pu(this),
        s = this._loop;
      (t = t || 0), (o = o || this.points.length - t);
      for (let c of r) s &= a(e, this, c, { start: t, end: t + o - 1 });
      return !!s;
    }
    draw(e, t, o, r) {
      let a = this.options || {};
      (this.points || []).length &&
        a.borderWidth &&
        (e.save(), Qx(e, this, o, r), e.restore()),
        this.animated && ((this._pointsUpdated = !1), (this._path = void 0));
    }
  }
  return n;
})();
function mg(n, i, e, t) {
  let o = n.options,
    { [e]: r } = n.getProps([e], t);
  return Math.abs(i - r) < o.radius + o.hitRadius;
}
var Uu = (() => {
  class n extends fn {
    static id = "point";
    parsed;
    skip;
    stop;
    static defaults = {
      borderWidth: 1,
      hitRadius: 1,
      hoverBorderWidth: 1,
      hoverRadius: 4,
      pointStyle: "circle",
      radius: 3,
      rotation: 0,
    };
    static defaultRoutes = {
      backgroundColor: "backgroundColor",
      borderColor: "borderColor",
    };
    constructor(e) {
      super(),
        (this.options = void 0),
        (this.parsed = void 0),
        (this.skip = void 0),
        (this.stop = void 0),
        e && Object.assign(this, e);
    }
    inRange(e, t, o) {
      let r = this.options,
        { x: a, y: s } = this.getProps(["x", "y"], o);
      return (
        Math.pow(e - a, 2) + Math.pow(t - s, 2) <
        Math.pow(r.hitRadius + r.radius, 2)
      );
    }
    inXRange(e, t) {
      return mg(this, e, "x", t);
    }
    inYRange(e, t) {
      return mg(this, e, "y", t);
    }
    getCenterPoint(e) {
      let { x: t, y: o } = this.getProps(["x", "y"], e);
      return { x: t, y: o };
    }
    size(e) {
      e = e || this.options || {};
      let t = e.radius || 0;
      t = Math.max(t, (t && e.hoverRadius) || 0);
      let o = (t && e.borderWidth) || 0;
      return (t + o) * 2;
    }
    draw(e, t) {
      let o = this.options;
      this.skip ||
        o.radius < 0.1 ||
        !An(this, t, this.size(o) / 2) ||
        ((e.strokeStyle = o.borderColor),
        (e.lineWidth = o.borderWidth),
        (e.fillStyle = o.backgroundColor),
        xl(e, o, this.x, this.y));
    }
    getRange() {
      let e = this.options || {};
      return e.radius + e.hitRadius;
    }
  }
  return n;
})();
function Jg(n, i) {
  let {
      x: e,
      y: t,
      base: o,
      width: r,
      height: a,
    } = n.getProps(["x", "y", "base", "width", "height"], i),
    s,
    c,
    p,
    f,
    y;
  return (
    n.horizontal
      ? ((y = a / 2),
        (s = Math.min(e, o)),
        (c = Math.max(e, o)),
        (p = t - y),
        (f = t + y))
      : ((y = r / 2),
        (s = e - y),
        (c = e + y),
        (p = Math.min(t, o)),
        (f = Math.max(t, o))),
    { left: s, top: p, right: c, bottom: f }
  );
}
function ko(n, i, e, t) {
  return n ? 0 : Zt(i, e, t);
}
function Xx(n, i, e) {
  let t = n.options.borderWidth,
    o = n.borderSkipped,
    r = Zd(t);
  return {
    t: ko(o.top, r.top, 0, e),
    r: ko(o.right, r.right, 0, i),
    b: ko(o.bottom, r.bottom, 0, e),
    l: ko(o.left, r.left, 0, i),
  };
}
function Zx(n, i, e) {
  let { enableBorderRadius: t } = n.getProps(["enableBorderRadius"]),
    o = n.options.borderRadius,
    r = Eo(o),
    a = Math.min(i, e),
    s = n.borderSkipped,
    c = t || et(o);
  return {
    topLeft: ko(!c || s.top || s.left, r.topLeft, 0, a),
    topRight: ko(!c || s.top || s.right, r.topRight, 0, a),
    bottomLeft: ko(!c || s.bottom || s.left, r.bottomLeft, 0, a),
    bottomRight: ko(!c || s.bottom || s.right, r.bottomRight, 0, a),
  };
}
function Jx(n) {
  let i = Jg(n),
    e = i.right - i.left,
    t = i.bottom - i.top,
    o = Xx(n, e / 2, t / 2),
    r = Zx(n, e / 2, t / 2);
  return {
    outer: { x: i.left, y: i.top, w: e, h: t, radius: r },
    inner: {
      x: i.left + o.l,
      y: i.top + o.t,
      w: e - o.l - o.r,
      h: t - o.t - o.b,
      radius: {
        topLeft: Math.max(0, r.topLeft - Math.max(o.t, o.l)),
        topRight: Math.max(0, r.topRight - Math.max(o.t, o.r)),
        bottomLeft: Math.max(0, r.bottomLeft - Math.max(o.b, o.l)),
        bottomRight: Math.max(0, r.bottomRight - Math.max(o.b, o.r)),
      },
    },
  };
}
function _u(n, i, e, t) {
  let o = i === null,
    r = e === null,
    s = n && !(o && r) && Jg(n, t);
  return s && (o || Fn(i, s.left, s.right)) && (r || Fn(e, s.top, s.bottom));
}
function eC(n) {
  return n.topLeft || n.topRight || n.bottomLeft || n.bottomRight;
}
function tC(n, i) {
  n.rect(i.x, i.y, i.w, i.h);
}
function bu(n, i, e = {}) {
  let t = n.x !== e.x ? -i : 0,
    o = n.y !== e.y ? -i : 0,
    r = (n.x + n.w !== e.x + e.w ? i : 0) - t,
    a = (n.y + n.h !== e.y + e.h ? i : 0) - o;
  return { x: n.x + t, y: n.y + o, w: n.w + r, h: n.h + a, radius: n.radius };
}
var Au = class extends fn {
    static id = "bar";
    static defaults = {
      borderSkipped: "start",
      borderWidth: 0,
      borderRadius: 0,
      inflateAmount: "auto",
      pointStyle: void 0,
    };
    static defaultRoutes = {
      backgroundColor: "backgroundColor",
      borderColor: "borderColor",
    };
    constructor(i) {
      super(),
        (this.options = void 0),
        (this.horizontal = void 0),
        (this.base = void 0),
        (this.width = void 0),
        (this.height = void 0),
        (this.inflateAmount = void 0),
        i && Object.assign(this, i);
    }
    draw(i) {
      let {
          inflateAmount: e,
          options: { borderColor: t, backgroundColor: o },
        } = this,
        { inner: r, outer: a } = Jx(this),
        s = eC(a.radius) ? jr : tC;
      i.save(),
        (a.w !== r.w || a.h !== r.h) &&
          (i.beginPath(),
          s(i, bu(a, e, r)),
          i.clip(),
          s(i, bu(r, -e, a)),
          (i.fillStyle = t),
          i.fill("evenodd")),
        i.beginPath(),
        s(i, bu(r, e)),
        (i.fillStyle = o),
        i.fill(),
        i.restore();
    }
    inRange(i, e, t) {
      return _u(this, i, e, t);
    }
    inXRange(i, e) {
      return _u(this, i, null, e);
    }
    inYRange(i, e) {
      return _u(this, null, i, e);
    }
    getCenterPoint(i) {
      let {
        x: e,
        y: t,
        base: o,
        horizontal: r,
      } = this.getProps(["x", "y", "base", "horizontal"], i);
      return { x: r ? (e + o) / 2 : e, y: r ? t : (t + o) / 2 };
    }
    getRange(i) {
      return i === "x" ? this.width / 2 : this.height / 2;
    }
  },
  iC = Object.freeze({
    __proto__: null,
    ArcElement: Iu,
    BarElement: Au,
    LineElement: Gr,
    PointElement: Uu,
  }),
  Ru = [
    "rgb(54, 162, 235)",
    "rgb(255, 99, 132)",
    "rgb(255, 159, 64)",
    "rgb(255, 205, 86)",
    "rgb(75, 192, 192)",
    "rgb(153, 102, 255)",
    "rgb(201, 203, 207)",
  ],
  fg = Ru.map((n) => n.replace("rgb(", "rgba(").replace(")", ", 0.5)"));
function e_(n) {
  return Ru[n % Ru.length];
}
function t_(n) {
  return fg[n % fg.length];
}
function nC(n, i) {
  return (n.borderColor = e_(i)), (n.backgroundColor = t_(i)), ++i;
}
function oC(n, i) {
  return (n.backgroundColor = n.data.map(() => e_(i++))), i;
}
function rC(n, i) {
  return (n.backgroundColor = n.data.map(() => t_(i++))), i;
}
function aC(n) {
  let i = 0;
  return (e, t) => {
    let o = n.getDatasetMeta(t).controller;
    o instanceof ju
      ? (i = oC(e, i))
      : o instanceof zg
      ? (i = rC(e, i))
      : o && (i = nC(e, i));
  };
}
function gg(n) {
  let i;
  for (i in n) if (n[i].borderColor || n[i].backgroundColor) return !0;
  return !1;
}
function sC(n) {
  return n && (n.borderColor || n.backgroundColor);
}
function lC() {
  return (
    Ct.borderColor !== "rgba(0,0,0,0.1)" ||
    Ct.backgroundColor !== "rgba(0,0,0,0.1)"
  );
}
var cC = {
  id: "colors",
  defaults: { enabled: !0, forceOverride: !1 },
  beforeLayout(n, i, e) {
    if (!e.enabled) return;
    let {
        data: { datasets: t },
        options: o,
      } = n.config,
      { elements: r } = o,
      a = gg(t) || sC(o) || (r && gg(r)) || lC();
    if (!e.forceOverride && a) return;
    let s = aC(n);
    t.forEach(s);
  },
};
function dC(n, i, e, t, o) {
  let r = o.samples || t;
  if (r >= e) return n.slice(i, i + e);
  let a = [],
    s = (e - 2) / (r - 2),
    c = 0,
    p = i + e - 1,
    f = i,
    y,
    x,
    C,
    M,
    k;
  for (a[c++] = n[f], y = 0; y < r - 2; y++) {
    let O = 0,
      P = 0,
      U,
      Q = Math.floor((y + 1) * s) + 1 + i,
      te = Math.min(Math.floor((y + 2) * s) + 1, e) + i,
      Z = te - Q;
    for (U = Q; U < te; U++) (O += n[U].x), (P += n[U].y);
    (O /= Z), (P /= Z);
    let b = Math.floor(y * s) + 1 + i,
      ge = Math.min(Math.floor((y + 1) * s) + 1, e) + i,
      { x: ee, y: _e } = n[f];
    for (C = M = -1, U = b; U < ge; U++)
      (M = 0.5 * Math.abs((ee - O) * (n[U].y - _e) - (ee - n[U].x) * (P - _e))),
        M > C && ((C = M), (x = n[U]), (k = U));
    (a[c++] = x), (f = k);
  }
  return (a[c++] = n[p]), a;
}
function uC(n, i, e, t) {
  let o = 0,
    r = 0,
    a,
    s,
    c,
    p,
    f,
    y,
    x,
    C,
    M,
    k,
    O = [],
    P = i + e - 1,
    U = n[i].x,
    te = n[P].x - U;
  for (a = i; a < i + e; ++a) {
    (s = n[a]), (c = ((s.x - U) / te) * t), (p = s.y);
    let Z = c | 0;
    if (Z === f)
      p < M ? ((M = p), (y = a)) : p > k && ((k = p), (x = a)),
        (o = (r * o + s.x) / ++r);
    else {
      let b = a - 1;
      if (!Ke(y) && !Ke(x)) {
        let ge = Math.min(y, x),
          ee = Math.max(y, x);
        ge !== C && ge !== b && O.push(at(se({}, n[ge]), { x: o })),
          ee !== C && ee !== b && O.push(at(se({}, n[ee]), { x: o }));
      }
      a > 0 && b !== C && O.push(n[b]),
        O.push(s),
        (f = Z),
        (r = 0),
        (M = k = p),
        (y = x = C = a);
    }
  }
  return O;
}
function i_(n) {
  if (n._decimated) {
    let i = n._data;
    delete n._decimated,
      delete n._data,
      Object.defineProperty(n, "data", {
        configurable: !0,
        enumerable: !0,
        writable: !0,
        value: i,
      });
  }
}
function _g(n) {
  n.data.datasets.forEach((i) => {
    i_(i);
  });
}
function hC(n, i) {
  let e = i.length,
    t = 0,
    o,
    { iScale: r } = n,
    { min: a, max: s, minDefined: c, maxDefined: p } = r.getUserBounds();
  return (
    c && (t = Zt(Pn(i, r.axis, a).lo, 0, e - 1)),
    p ? (o = Zt(Pn(i, r.axis, s).hi + 1, t, e) - t) : (o = e - t),
    { start: t, count: o }
  );
}
var pC = {
  id: "decimation",
  defaults: { algorithm: "min-max", enabled: !1 },
  beforeElementsUpdate: (n, i, e) => {
    if (!e.enabled) {
      _g(n);
      return;
    }
    let t = n.width;
    n.data.datasets.forEach((o, r) => {
      let { _data: a, indexAxis: s } = o,
        c = n.getDatasetMeta(r),
        p = a || o.data;
      if (
        zr([s, n.options.indexAxis]) === "y" ||
        !c.controller.supportsDecimation
      )
        return;
      let f = n.scales[c.xAxisID];
      if ((f.type !== "linear" && f.type !== "time") || n.options.parsing)
        return;
      let { start: y, count: x } = hC(c, p),
        C = e.threshold || 4 * t;
      if (x <= C) {
        i_(o);
        return;
      }
      Ke(a) &&
        ((o._data = p),
        delete o.data,
        Object.defineProperty(o, "data", {
          configurable: !0,
          enumerable: !0,
          get: function () {
            return this._decimated;
          },
          set: function (k) {
            this._data = k;
          },
        }));
      let M;
      switch (e.algorithm) {
        case "lttb":
          M = dC(p, y, x, t, e);
          break;
        case "min-max":
          M = uC(p, y, x, t);
          break;
        default:
          throw new Error(`Unsupported decimation algorithm '${e.algorithm}'`);
      }
      o._decimated = M;
    });
  },
  destroy(n) {
    _g(n);
  },
};
function mC(n, i, e) {
  let t = n.segments,
    o = n.points,
    r = i.points,
    a = [];
  for (let s of t) {
    let { start: c, end: p } = s;
    p = jl(c, p, o);
    let f = Fu(e, o[c], o[p], s.loop);
    if (!i.segments) {
      a.push({ source: s, target: f, start: o[c], end: o[p] });
      continue;
    }
    let y = lu(i, f);
    for (let x of y) {
      let C = Fu(e, r[x.start], r[x.end], x.loop),
        M = su(s, o, C);
      for (let k of M)
        a.push({
          source: k,
          target: x,
          start: { [e]: bg(f, C, "start", Math.max) },
          end: { [e]: bg(f, C, "end", Math.min) },
        });
    }
  }
  return a;
}
function Fu(n, i, e, t) {
  if (t) return;
  let o = i[n],
    r = e[n];
  return (
    n === "angle" && ((o = ai(o)), (r = ai(r))),
    { property: n, start: o, end: r }
  );
}
function fC(n, i) {
  let { x: e = null, y: t = null } = n || {},
    o = i.points,
    r = [];
  return (
    i.segments.forEach(({ start: a, end: s }) => {
      s = jl(a, s, o);
      let c = o[a],
        p = o[s];
      t !== null
        ? (r.push({ x: c.x, y: t }), r.push({ x: p.x, y: t }))
        : e !== null && (r.push({ x: e, y: c.y }), r.push({ x: e, y: p.y }));
    }),
    r
  );
}
function jl(n, i, e) {
  for (; i > n; i--) {
    let t = e[i];
    if (!isNaN(t.x) && !isNaN(t.y)) break;
  }
  return i;
}
function bg(n, i, e, t) {
  return n && i ? t(n[e], i[e]) : n ? n[e] : i ? i[e] : 0;
}
function n_(n, i) {
  let e = [],
    t = !1;
  return (
    vt(n) ? ((t = !0), (e = n)) : (e = fC(n, i)),
    e.length
      ? new Gr({ points: e, options: { tension: 0 }, _loop: t, _fullLoop: t })
      : null
  );
}
function vg(n) {
  return n && n.fill !== !1;
}
function gC(n, i, e) {
  let o = n[i].fill,
    r = [i],
    a;
  if (!e) return o;
  for (; o !== !1 && r.indexOf(o) === -1; ) {
    if (!It(o)) return o;
    if (((a = n[o]), !a)) return !1;
    if (a.visible) return o;
    r.push(o), (o = a.fill);
  }
  return !1;
}
function _C(n, i, e) {
  let t = xC(n);
  if (et(t)) return isNaN(t.value) ? !1 : t;
  let o = parseFloat(t);
  return It(o) && Math.floor(o) === o
    ? bC(t[0], i, o, e)
    : ["origin", "start", "end", "stack", "shape"].indexOf(t) >= 0 && t;
}
function bC(n, i, e, t) {
  return (
    (n === "-" || n === "+") && (e = i + e), e === i || e < 0 || e >= t ? !1 : e
  );
}
function vC(n, i) {
  let e = null;
  return (
    n === "start"
      ? (e = i.bottom)
      : n === "end"
      ? (e = i.top)
      : et(n)
      ? (e = i.getPixelForValue(n.value))
      : i.getBasePixel && (e = i.getBasePixel()),
    e
  );
}
function yC(n, i, e) {
  let t;
  return (
    n === "start"
      ? (t = e)
      : n === "end"
      ? (t = i.options.reverse ? i.min : i.max)
      : et(n)
      ? (t = n.value)
      : (t = i.getBaseValue()),
    t
  );
}
function xC(n) {
  let i = n.options,
    e = i.fill,
    t = je(e && e.target, e);
  return (
    t === void 0 && (t = !!i.backgroundColor),
    t === !1 || t === null ? !1 : t === !0 ? "origin" : t
  );
}
function CC(n) {
  let { scale: i, index: e, line: t } = n,
    o = [],
    r = t.segments,
    a = t.points,
    s = wC(i, e);
  s.push(n_({ x: null, y: i.bottom }, t));
  for (let c = 0; c < r.length; c++) {
    let p = r[c];
    for (let f = p.start; f <= p.end; f++) DC(o, a[f], s);
  }
  return new Gr({ points: o, options: {} });
}
function wC(n, i) {
  let e = [],
    t = n.getMatchingVisibleMetas("line");
  for (let o = 0; o < t.length; o++) {
    let r = t[o];
    if (r.index === i) break;
    r.hidden || e.unshift(r.dataset);
  }
  return e;
}
function DC(n, i, e) {
  let t = [];
  for (let o = 0; o < e.length; o++) {
    let r = e[o],
      { first: a, last: s, point: c } = SC(r, i, "x");
    if (!(!c || (a && s))) {
      if (a) t.unshift(c);
      else if ((n.push(c), !s)) break;
    }
  }
  n.push(...t);
}
function SC(n, i, e) {
  let t = n.interpolate(i, e);
  if (!t) return {};
  let o = t[e],
    r = n.segments,
    a = n.points,
    s = !1,
    c = !1;
  for (let p = 0; p < r.length; p++) {
    let f = r[p],
      y = a[f.start][e],
      x = a[f.end][e];
    if (Fn(o, y, x)) {
      (s = o === y), (c = o === x);
      break;
    }
  }
  return { first: s, last: c, point: t };
}
var Bl = class {
  constructor(i) {
    (this.x = i.x), (this.y = i.y), (this.radius = i.radius);
  }
  pathSegment(i, e, t) {
    let { x: o, y: r, radius: a } = this;
    return (
      (e = e || { start: 0, end: yt }),
      i.arc(o, r, a, e.end, e.start, !0),
      !t.bounds
    );
  }
  interpolate(i) {
    let { x: e, y: t, radius: o } = this,
      r = i.angle;
    return { x: e + Math.cos(r) * o, y: t + Math.sin(r) * o, angle: r };
  }
};
function MC(n) {
  let { chart: i, fill: e, line: t } = n;
  if (It(e)) return EC(i, e);
  if (e === "stack") return CC(n);
  if (e === "shape") return !0;
  let o = TC(n);
  return o instanceof Bl ? o : n_(o, t);
}
function EC(n, i) {
  let e = n.getDatasetMeta(i);
  return e && n.isDatasetVisible(i) ? e.dataset : null;
}
function TC(n) {
  return (n.scale || {}).getPointPositionForValue ? OC(n) : kC(n);
}
function kC(n) {
  let { scale: i = {}, fill: e } = n,
    t = vC(e, i);
  if (It(t)) {
    let o = i.isHorizontal();
    return { x: o ? t : null, y: o ? null : t };
  }
  return null;
}
function OC(n) {
  let { scale: i, fill: e } = n,
    t = i.options,
    o = i.getLabels().length,
    r = t.reverse ? i.max : i.min,
    a = yC(e, i, r),
    s = [];
  if (t.grid.circular) {
    let c = i.getPointPositionForValue(0, r);
    return new Bl({
      x: c.x,
      y: c.y,
      radius: i.getDistanceFromCenterForValue(a),
    });
  }
  for (let c = 0; c < o; ++c) s.push(i.getPointPositionForValue(c, a));
  return s;
}
function vu(n, i, e) {
  let t = MC(i),
    { chart: o, index: r, line: a, scale: s, axis: c } = i,
    p = a.options,
    f = p.fill,
    y = p.backgroundColor,
    { above: x = y, below: C = y } = f || {},
    M = o.getDatasetMeta(r),
    k = cu(o, M);
  t &&
    a.points.length &&
    (Ba(n, e),
    IC(n, {
      line: a,
      target: t,
      above: x,
      below: C,
      area: e,
      scale: s,
      axis: c,
      clip: k,
    }),
    Ha(n));
}
function IC(n, i) {
  let {
      line: e,
      target: t,
      above: o,
      below: r,
      area: a,
      scale: s,
      clip: c,
    } = i,
    p = e._loop ? "angle" : i.axis;
  n.save();
  let f = r;
  r !== o &&
    (p === "x"
      ? (yg(n, t, a.top),
        yu(n, { line: e, target: t, color: o, scale: s, property: p, clip: c }),
        n.restore(),
        n.save(),
        yg(n, t, a.bottom))
      : p === "y" &&
        (xg(n, t, a.left),
        yu(n, { line: e, target: t, color: r, scale: s, property: p, clip: c }),
        n.restore(),
        n.save(),
        xg(n, t, a.right),
        (f = o))),
    yu(n, { line: e, target: t, color: f, scale: s, property: p, clip: c }),
    n.restore();
}
function yg(n, i, e) {
  let { segments: t, points: o } = i,
    r = !0,
    a = !1;
  n.beginPath();
  for (let s of t) {
    let { start: c, end: p } = s,
      f = o[c],
      y = o[jl(c, p, o)];
    r ? (n.moveTo(f.x, f.y), (r = !1)) : (n.lineTo(f.x, e), n.lineTo(f.x, f.y)),
      (a = !!i.pathSegment(n, s, { move: a })),
      a ? n.closePath() : n.lineTo(y.x, e);
  }
  n.lineTo(i.first().x, e), n.closePath(), n.clip();
}
function xg(n, i, e) {
  let { segments: t, points: o } = i,
    r = !0,
    a = !1;
  n.beginPath();
  for (let s of t) {
    let { start: c, end: p } = s,
      f = o[c],
      y = o[jl(c, p, o)];
    r ? (n.moveTo(f.x, f.y), (r = !1)) : (n.lineTo(e, f.y), n.lineTo(f.x, f.y)),
      (a = !!i.pathSegment(n, s, { move: a })),
      a ? n.closePath() : n.lineTo(e, y.y);
  }
  n.lineTo(e, i.first().y), n.closePath(), n.clip();
}
function yu(n, i) {
  let { line: e, target: t, property: o, color: r, scale: a, clip: s } = i,
    c = mC(e, t, o);
  for (let { source: p, target: f, start: y, end: x } of c) {
    let { style: { backgroundColor: C = r } = {} } = p,
      M = t !== !0;
    n.save(), (n.fillStyle = C), PC(n, a, s, M && Fu(o, y, x)), n.beginPath();
    let k = !!e.pathSegment(n, p),
      O;
    if (M) {
      k ? n.closePath() : Cg(n, t, x, o);
      let P = !!t.pathSegment(n, f, { move: k, reverse: !0 });
      (O = k && P), O || Cg(n, t, y, o);
    }
    n.closePath(), n.fill(O ? "evenodd" : "nonzero"), n.restore();
  }
}
function PC(n, i, e, t) {
  let o = i.chart.chartArea,
    { property: r, start: a, end: s } = t || {};
  if (r === "x" || r === "y") {
    let c, p, f, y;
    r === "x"
      ? ((c = a), (p = o.top), (f = s), (y = o.bottom))
      : ((c = o.left), (p = a), (f = o.right), (y = s)),
      n.beginPath(),
      e &&
        ((c = Math.max(c, e.left)),
        (f = Math.min(f, e.right)),
        (p = Math.max(p, e.top)),
        (y = Math.min(y, e.bottom))),
      n.rect(c, p, f - c, y - p),
      n.clip();
  }
}
function Cg(n, i, e, t) {
  let o = i.interpolate(e, t);
  o && n.lineTo(o.x, o.y);
}
var AC = {
    id: "filler",
    afterDatasetsUpdate(n, i, e) {
      let t = (n.data.datasets || []).length,
        o = [],
        r,
        a,
        s,
        c;
      for (a = 0; a < t; ++a)
        (r = n.getDatasetMeta(a)),
          (s = r.dataset),
          (c = null),
          s &&
            s.options &&
            s instanceof Gr &&
            (c = {
              visible: n.isDatasetVisible(a),
              index: a,
              fill: _C(s, a, t),
              chart: n,
              axis: r.controller.options.indexAxis,
              scale: r.vScale,
              line: s,
            }),
          (r.$filler = c),
          o.push(c);
      for (a = 0; a < t; ++a)
        (c = o[a]), !(!c || c.fill === !1) && (c.fill = gC(o, a, e.propagate));
    },
    beforeDraw(n, i, e) {
      let t = e.drawTime === "beforeDraw",
        o = n.getSortedVisibleDatasetMetas(),
        r = n.chartArea;
      for (let a = o.length - 1; a >= 0; --a) {
        let s = o[a].$filler;
        s &&
          (s.line.updateControlPoints(r, s.axis),
          t && s.fill && vu(n.ctx, s, r));
      }
    },
    beforeDatasetsDraw(n, i, e) {
      if (e.drawTime !== "beforeDatasetsDraw") return;
      let t = n.getSortedVisibleDatasetMetas();
      for (let o = t.length - 1; o >= 0; --o) {
        let r = t[o].$filler;
        vg(r) && vu(n.ctx, r, n.chartArea);
      }
    },
    beforeDatasetDraw(n, i, e) {
      let t = i.meta.$filler;
      !vg(t) || e.drawTime !== "beforeDatasetDraw" || vu(n.ctx, t, n.chartArea);
    },
    defaults: { propagate: !0, drawTime: "beforeDatasetDraw" },
  },
  wg = (n, i) => {
    let { boxHeight: e = i, boxWidth: t = i } = n;
    return (
      n.usePointStyle &&
        ((e = Math.min(e, i)), (t = n.pointStyleWidth || Math.min(t, i))),
      { boxWidth: t, boxHeight: e, itemHeight: Math.max(i, e) }
    );
  },
  RC = (n, i) =>
    n !== null &&
    i !== null &&
    n.datasetIndex === i.datasetIndex &&
    n.index === i.index,
  Hl = class extends fn {
    constructor(i) {
      super(),
        (this._added = !1),
        (this.legendHitBoxes = []),
        (this._hoveredItem = null),
        (this.doughnutMode = !1),
        (this.chart = i.chart),
        (this.options = i.options),
        (this.ctx = i.ctx),
        (this.legendItems = void 0),
        (this.columnSizes = void 0),
        (this.lineWidths = void 0),
        (this.maxHeight = void 0),
        (this.maxWidth = void 0),
        (this.top = void 0),
        (this.bottom = void 0),
        (this.left = void 0),
        (this.right = void 0),
        (this.height = void 0),
        (this.width = void 0),
        (this._margins = void 0),
        (this.position = void 0),
        (this.weight = void 0),
        (this.fullSize = void 0);
    }
    update(i, e, t) {
      (this.maxWidth = i),
        (this.maxHeight = e),
        (this._margins = t),
        this.setDimensions(),
        this.buildLabels(),
        this.fit();
    }
    setDimensions() {
      this.isHorizontal()
        ? ((this.width = this.maxWidth),
          (this.left = this._margins.left),
          (this.right = this.width))
        : ((this.height = this.maxHeight),
          (this.top = this._margins.top),
          (this.bottom = this.height));
    }
    buildLabels() {
      let i = this.options.labels || {},
        e = mt(i.generateLabels, [this.chart], this) || [];
      i.filter && (e = e.filter((t) => i.filter(t, this.chart.data))),
        i.sort && (e = e.sort((t, o) => i.sort(t, o, this.chart.data))),
        this.options.reverse && e.reverse(),
        (this.legendItems = e);
    }
    fit() {
      let { options: i, ctx: e } = this;
      if (!i.display) {
        this.width = this.height = 0;
        return;
      }
      let t = i.labels,
        o = Gt(t.font),
        r = o.size,
        a = this._computeTitleHeight(),
        { boxWidth: s, itemHeight: c } = wg(t, r),
        p,
        f;
      (e.font = o.string),
        this.isHorizontal()
          ? ((p = this.maxWidth), (f = this._fitRows(a, r, s, c) + 10))
          : ((f = this.maxHeight), (p = this._fitCols(a, o, s, c) + 10)),
        (this.width = Math.min(p, i.maxWidth || this.maxWidth)),
        (this.height = Math.min(f, i.maxHeight || this.maxHeight));
    }
    _fitRows(i, e, t, o) {
      let {
          ctx: r,
          maxWidth: a,
          options: {
            labels: { padding: s },
          },
        } = this,
        c = (this.legendHitBoxes = []),
        p = (this.lineWidths = [0]),
        f = o + s,
        y = i;
      (r.textAlign = "left"), (r.textBaseline = "middle");
      let x = -1,
        C = -f;
      return (
        this.legendItems.forEach((M, k) => {
          let O = t + e / 2 + r.measureText(M.text).width;
          (k === 0 || p[p.length - 1] + O + 2 * s > a) &&
            ((y += f), (p[p.length - (k > 0 ? 0 : 1)] = 0), (C += f), x++),
            (c[k] = { left: 0, top: C, row: x, width: O, height: o }),
            (p[p.length - 1] += O + s);
        }),
        y
      );
    }
    _fitCols(i, e, t, o) {
      let {
          ctx: r,
          maxHeight: a,
          options: {
            labels: { padding: s },
          },
        } = this,
        c = (this.legendHitBoxes = []),
        p = (this.columnSizes = []),
        f = a - i,
        y = s,
        x = 0,
        C = 0,
        M = 0,
        k = 0;
      return (
        this.legendItems.forEach((O, P) => {
          let { itemWidth: U, itemHeight: Q } = FC(t, e, r, O, o);
          P > 0 &&
            C + Q + 2 * s > f &&
            ((y += x + s),
            p.push({ width: x, height: C }),
            (M += x + s),
            k++,
            (x = C = 0)),
            (c[P] = { left: M, top: C, col: k, width: U, height: Q }),
            (x = Math.max(x, U)),
            (C += Q + s);
        }),
        (y += x),
        p.push({ width: x, height: C }),
        y
      );
    }
    adjustHitBoxes() {
      if (!this.options.display) return;
      let i = this._computeTitleHeight(),
        {
          legendHitBoxes: e,
          options: {
            align: t,
            labels: { padding: o },
            rtl: r,
          },
        } = this,
        a = Jo(r, this.left, this.width);
      if (this.isHorizontal()) {
        let s = 0,
          c = si(t, this.left + o, this.right - this.lineWidths[s]);
        for (let p of e)
          s !== p.row &&
            ((s = p.row),
            (c = si(t, this.left + o, this.right - this.lineWidths[s]))),
            (p.top += this.top + i + o),
            (p.left = a.leftForLtr(a.x(c), p.width)),
            (c += p.width + o);
      } else {
        let s = 0,
          c = si(t, this.top + i + o, this.bottom - this.columnSizes[s].height);
        for (let p of e)
          p.col !== s &&
            ((s = p.col),
            (c = si(
              t,
              this.top + i + o,
              this.bottom - this.columnSizes[s].height
            ))),
            (p.top = c),
            (p.left += this.left + o),
            (p.left = a.leftForLtr(a.x(p.left), p.width)),
            (c += p.height + o);
      }
    }
    isHorizontal() {
      return (
        this.options.position === "top" || this.options.position === "bottom"
      );
    }
    draw() {
      if (this.options.display) {
        let i = this.ctx;
        Ba(i, this), this._draw(), Ha(i);
      }
    }
    _draw() {
      let { options: i, columnSizes: e, lineWidths: t, ctx: o } = this,
        { align: r, labels: a } = i,
        s = Ct.color,
        c = Jo(i.rtl, this.left, this.width),
        p = Gt(a.font),
        { padding: f } = a,
        y = p.size,
        x = y / 2,
        C;
      this.drawTitle(),
        (o.textAlign = c.textAlign("left")),
        (o.textBaseline = "middle"),
        (o.lineWidth = 0.5),
        (o.font = p.string);
      let { boxWidth: M, boxHeight: k, itemHeight: O } = wg(a, y),
        P = function (b, ge, ee) {
          if (isNaN(M) || M <= 0 || isNaN(k) || k < 0) return;
          o.save();
          let _e = je(ee.lineWidth, 1);
          if (
            ((o.fillStyle = je(ee.fillStyle, s)),
            (o.lineCap = je(ee.lineCap, "butt")),
            (o.lineDashOffset = je(ee.lineDashOffset, 0)),
            (o.lineJoin = je(ee.lineJoin, "miter")),
            (o.lineWidth = _e),
            (o.strokeStyle = je(ee.strokeStyle, s)),
            o.setLineDash(je(ee.lineDash, [])),
            a.usePointStyle)
          ) {
            let Re = {
                radius: (k * Math.SQRT2) / 2,
                pointStyle: ee.pointStyle,
                rotation: ee.rotation,
                borderWidth: _e,
              },
              Ue = c.xPlus(b, M / 2),
              xe = ge + x;
            Xd(o, Re, Ue, xe, a.pointStyleWidth && M);
          } else {
            let Re = ge + Math.max((y - k) / 2, 0),
              Ue = c.leftForLtr(b, M),
              xe = Eo(ee.borderRadius);
            o.beginPath(),
              Object.values(xe).some((Mt) => Mt !== 0)
                ? jr(o, { x: Ue, y: Re, w: M, h: k, radius: xe })
                : o.rect(Ue, Re, M, k),
              o.fill(),
              _e !== 0 && o.stroke();
          }
          o.restore();
        },
        U = function (b, ge, ee) {
          Mo(o, ee.text, b, ge + O / 2, p, {
            strikethrough: ee.hidden,
            textAlign: c.textAlign(ee.textAlign),
          });
        },
        Q = this.isHorizontal(),
        te = this._computeTitleHeight();
      Q
        ? (C = {
            x: si(r, this.left + f, this.right - t[0]),
            y: this.top + f + te,
            line: 0,
          })
        : (C = {
            x: this.left + f,
            y: si(r, this.top + te + f, this.bottom - e[0].height),
            line: 0,
          }),
        ru(this.ctx, i.textDirection);
      let Z = O + f;
      this.legendItems.forEach((b, ge) => {
        (o.strokeStyle = b.fontColor), (o.fillStyle = b.fontColor);
        let ee = o.measureText(b.text).width,
          _e = c.textAlign(b.textAlign || (b.textAlign = a.textAlign)),
          Re = M + x + ee,
          Ue = C.x,
          xe = C.y;
        c.setWidth(this.width),
          Q
            ? ge > 0 &&
              Ue + Re + f > this.right &&
              ((xe = C.y += Z),
              C.line++,
              (Ue = C.x = si(r, this.left + f, this.right - t[C.line])))
            : ge > 0 &&
              xe + Z > this.bottom &&
              ((Ue = C.x = Ue + e[C.line].width + f),
              C.line++,
              (xe = C.y =
                si(r, this.top + te + f, this.bottom - e[C.line].height)));
        let Mt = c.x(Ue);
        if (
          (P(Mt, xe, b),
          (Ue = wf(_e, Ue + M + x, Q ? Ue + Re : this.right, i.rtl)),
          U(c.x(Ue), xe, b),
          Q)
        )
          C.x += Re + f;
        else if (typeof b.text != "string") {
          let _i = p.lineHeight;
          C.y += o_(b, _i) + f;
        } else C.y += Z;
      }),
        au(this.ctx, i.textDirection);
    }
    drawTitle() {
      let i = this.options,
        e = i.title,
        t = Gt(e.font),
        o = li(e.padding);
      if (!e.display) return;
      let r = Jo(i.rtl, this.left, this.width),
        a = this.ctx,
        s = e.position,
        c = t.size / 2,
        p = o.top + c,
        f,
        y = this.left,
        x = this.width;
      if (this.isHorizontal())
        (x = Math.max(...this.lineWidths)),
          (f = this.top + p),
          (y = si(i.align, y, this.right - x));
      else {
        let M = this.columnSizes.reduce((k, O) => Math.max(k, O.height), 0);
        f =
          p +
          si(
            i.align,
            this.top,
            this.bottom - M - i.labels.padding - this._computeTitleHeight()
          );
      }
      let C = si(s, y, y + x);
      (a.textAlign = r.textAlign(vl(s))),
        (a.textBaseline = "middle"),
        (a.strokeStyle = e.color),
        (a.fillStyle = e.color),
        (a.font = t.string),
        Mo(a, e.text, C, f, t);
    }
    _computeTitleHeight() {
      let i = this.options.title,
        e = Gt(i.font),
        t = li(i.padding);
      return i.display ? e.lineHeight + t.height : 0;
    }
    _getLegendItemAt(i, e) {
      let t, o, r;
      if (Fn(i, this.left, this.right) && Fn(e, this.top, this.bottom)) {
        for (r = this.legendHitBoxes, t = 0; t < r.length; ++t)
          if (
            ((o = r[t]),
            Fn(i, o.left, o.left + o.width) && Fn(e, o.top, o.top + o.height))
          )
            return this.legendItems[t];
      }
      return null;
    }
    handleEvent(i) {
      let e = this.options;
      if (!LC(i.type, e)) return;
      let t = this._getLegendItemAt(i.x, i.y);
      if (i.type === "mousemove" || i.type === "mouseout") {
        let o = this._hoveredItem,
          r = RC(o, t);
        o && !r && mt(e.onLeave, [i, o, this], this),
          (this._hoveredItem = t),
          t && !r && mt(e.onHover, [i, t, this], this);
      } else t && mt(e.onClick, [i, t, this], this);
    }
  };
function FC(n, i, e, t, o) {
  let r = NC(t, n, i, e),
    a = VC(o, t, i.lineHeight);
  return { itemWidth: r, itemHeight: a };
}
function NC(n, i, e, t) {
  let o = n.text;
  return (
    o &&
      typeof o != "string" &&
      (o = o.reduce((r, a) => (r.length > a.length ? r : a))),
    i + e.size / 2 + t.measureText(o).width
  );
}
function VC(n, i, e) {
  let t = n;
  return typeof i.text != "string" && (t = o_(i, e)), t;
}
function o_(n, i) {
  let e = n.text ? n.text.length : 0;
  return i * e;
}
function LC(n, i) {
  return !!(
    ((n === "mousemove" || n === "mouseout") && (i.onHover || i.onLeave)) ||
    (i.onClick && (n === "click" || n === "mouseup"))
  );
}
var BC = {
    id: "legend",
    _element: Hl,
    start(n, i, e) {
      let t = (n.legend = new Hl({ ctx: n.ctx, options: e, chart: n }));
      pi.configure(n, t, e), pi.addBox(n, t);
    },
    stop(n) {
      pi.removeBox(n, n.legend), delete n.legend;
    },
    beforeUpdate(n, i, e) {
      let t = n.legend;
      pi.configure(n, t, e), (t.options = e);
    },
    afterUpdate(n) {
      let i = n.legend;
      i.buildLabels(), i.adjustHitBoxes();
    },
    afterEvent(n, i) {
      i.replay || n.legend.handleEvent(i.event);
    },
    defaults: {
      display: !0,
      position: "top",
      align: "center",
      fullSize: !0,
      reverse: !1,
      weight: 1e3,
      onClick(n, i, e) {
        let t = i.datasetIndex,
          o = e.chart;
        o.isDatasetVisible(t)
          ? (o.hide(t), (i.hidden = !0))
          : (o.show(t), (i.hidden = !1));
      },
      onHover: null,
      onLeave: null,
      labels: {
        color: (n) => n.chart.options.color,
        boxWidth: 40,
        padding: 10,
        generateLabels(n) {
          let i = n.data.datasets,
            {
              labels: {
                usePointStyle: e,
                pointStyle: t,
                textAlign: o,
                color: r,
                useBorderRadius: a,
                borderRadius: s,
              },
            } = n.legend.options;
          return n._getSortedDatasetMetas().map((c) => {
            let p = c.controller.getStyle(e ? 0 : void 0),
              f = li(p.borderWidth);
            return {
              text: i[c.index].label,
              fillStyle: p.backgroundColor,
              fontColor: r,
              hidden: !c.visible,
              lineCap: p.borderCapStyle,
              lineDash: p.borderDash,
              lineDashOffset: p.borderDashOffset,
              lineJoin: p.borderJoinStyle,
              lineWidth: (f.width + f.height) / 4,
              strokeStyle: p.borderColor,
              pointStyle: t || p.pointStyle,
              rotation: p.rotation,
              textAlign: o || p.textAlign,
              borderRadius: a && (s || p.borderRadius),
              datasetIndex: c.index,
            };
          }, this);
        },
      },
      title: {
        color: (n) => n.chart.options.color,
        display: !1,
        position: "center",
        text: "",
      },
    },
    descriptors: {
      _scriptable: (n) => !n.startsWith("on"),
      labels: {
        _scriptable: (n) => !["generateLabels", "filter", "sort"].includes(n),
      },
    },
  },
  Ka = class extends fn {
    constructor(i) {
      super(),
        (this.chart = i.chart),
        (this.options = i.options),
        (this.ctx = i.ctx),
        (this._padding = void 0),
        (this.top = void 0),
        (this.bottom = void 0),
        (this.left = void 0),
        (this.right = void 0),
        (this.width = void 0),
        (this.height = void 0),
        (this.position = void 0),
        (this.weight = void 0),
        (this.fullSize = void 0);
    }
    update(i, e) {
      let t = this.options;
      if (((this.left = 0), (this.top = 0), !t.display)) {
        this.width = this.height = this.right = this.bottom = 0;
        return;
      }
      (this.width = this.right = i), (this.height = this.bottom = e);
      let o = vt(t.text) ? t.text.length : 1;
      this._padding = li(t.padding);
      let r = o * Gt(t.font).lineHeight + this._padding.height;
      this.isHorizontal() ? (this.height = r) : (this.width = r);
    }
    isHorizontal() {
      let i = this.options.position;
      return i === "top" || i === "bottom";
    }
    _drawArgs(i) {
      let { top: e, left: t, bottom: o, right: r, options: a } = this,
        s = a.align,
        c = 0,
        p,
        f,
        y;
      return (
        this.isHorizontal()
          ? ((f = si(s, t, r)), (y = e + i), (p = r - t))
          : (a.position === "left"
              ? ((f = t + i), (y = si(s, o, e)), (c = lt * -0.5))
              : ((f = r - i), (y = si(s, e, o)), (c = lt * 0.5)),
            (p = o - e)),
        { titleX: f, titleY: y, maxWidth: p, rotation: c }
      );
    }
    draw() {
      let i = this.ctx,
        e = this.options;
      if (!e.display) return;
      let t = Gt(e.font),
        r = t.lineHeight / 2 + this._padding.top,
        { titleX: a, titleY: s, maxWidth: c, rotation: p } = this._drawArgs(r);
      Mo(i, e.text, 0, 0, t, {
        color: e.color,
        maxWidth: c,
        rotation: p,
        textAlign: vl(e.align),
        textBaseline: "middle",
        translation: [a, s],
      });
    }
  };
function HC(n, i) {
  let e = new Ka({ ctx: n.ctx, options: i, chart: n });
  pi.configure(n, e, i), pi.addBox(n, e), (n.titleBlock = e);
}
var Wu = {
    id: "title",
    _element: Ka,
    start(n, i, e) {
      HC(n, e);
    },
    stop(n) {
      let i = n.titleBlock;
      pi.removeBox(n, i), delete n.titleBlock;
    },
    beforeUpdate(n, i, e) {
      let t = n.titleBlock;
      pi.configure(n, t, e), (t.options = e);
    },
    defaults: {
      align: "center",
      display: !1,
      font: { weight: "bold" },
      fullSize: !0,
      padding: 10,
      position: "top",
      text: "",
      weight: 2e3,
    },
    defaultRoutes: { color: "color" },
    descriptors: { _scriptable: !0, _indexable: !1 },
  },
  Ol = new WeakMap(),
  jC = {
    id: "subtitle",
    start(n, i, e) {
      let t = new Ka({ ctx: n.ctx, options: e, chart: n });
      pi.configure(n, t, e), pi.addBox(n, t), Ol.set(n, t);
    },
    stop(n) {
      pi.removeBox(n, Ol.get(n)), Ol.delete(n);
    },
    beforeUpdate(n, i, e) {
      let t = Ol.get(n);
      pi.configure(n, t, e), (t.options = e);
    },
    defaults: {
      align: "center",
      display: !1,
      font: { weight: "normal" },
      fullSize: !0,
      padding: 0,
      position: "top",
      text: "",
      weight: 1500,
    },
    defaultRoutes: { color: "color" },
    descriptors: { _scriptable: !0, _indexable: !1 },
  },
  Ya = {
    average(n) {
      if (!n.length) return !1;
      let i,
        e,
        t = new Set(),
        o = 0,
        r = 0;
      for (i = 0, e = n.length; i < e; ++i) {
        let s = n[i].element;
        if (s && s.hasValue()) {
          let c = s.tooltipPosition();
          t.add(c.x), (o += c.y), ++r;
        }
      }
      return r === 0 || t.size === 0
        ? !1
        : { x: [...t].reduce((s, c) => s + c) / t.size, y: o / r };
    },
    nearest(n, i) {
      if (!n.length) return !1;
      let e = i.x,
        t = i.y,
        o = Number.POSITIVE_INFINITY,
        r,
        a,
        s;
      for (r = 0, a = n.length; r < a; ++r) {
        let c = n[r].element;
        if (c && c.hasValue()) {
          let p = c.getCenterPoint(),
            f = ml(i, p);
          f < o && ((o = f), (s = c));
        }
      }
      if (s) {
        let c = s.tooltipPosition();
        (e = c.x), (t = c.y);
      }
      return { x: e, y: t };
    },
  };
function Nn(n, i) {
  return i && (vt(i) ? Array.prototype.push.apply(n, i) : n.push(i)), n;
}
function so(n) {
  return (typeof n == "string" || n instanceof String) &&
    n.indexOf(`
`) > -1
    ? n.split(`
`)
    : n;
}
function zC(n, i) {
  let { element: e, datasetIndex: t, index: o } = i,
    r = n.getDatasetMeta(t).controller,
    { label: a, value: s } = r.getLabelAndValue(o);
  return {
    chart: n,
    label: a,
    parsed: r.getParsed(o),
    raw: n.data.datasets[t].data[o],
    formattedValue: s,
    dataset: r.getDataset(),
    dataIndex: o,
    datasetIndex: t,
    element: e,
  };
}
function Dg(n, i) {
  let e = n.chart.ctx,
    { body: t, footer: o, title: r } = n,
    { boxWidth: a, boxHeight: s } = i,
    c = Gt(i.bodyFont),
    p = Gt(i.titleFont),
    f = Gt(i.footerFont),
    y = r.length,
    x = o.length,
    C = t.length,
    M = li(i.padding),
    k = M.height,
    O = 0,
    P = t.reduce(
      (te, Z) => te + Z.before.length + Z.lines.length + Z.after.length,
      0
    );
  if (
    ((P += n.beforeBody.length + n.afterBody.length),
    y &&
      (k += y * p.lineHeight + (y - 1) * i.titleSpacing + i.titleMarginBottom),
    P)
  ) {
    let te = i.displayColors ? Math.max(s, c.lineHeight) : c.lineHeight;
    k += C * te + (P - C) * c.lineHeight + (P - 1) * i.bodySpacing;
  }
  x && (k += i.footerMarginTop + x * f.lineHeight + (x - 1) * i.footerSpacing);
  let U = 0,
    Q = function (te) {
      O = Math.max(O, e.measureText(te).width + U);
    };
  return (
    e.save(),
    (e.font = p.string),
    ut(n.title, Q),
    (e.font = c.string),
    ut(n.beforeBody.concat(n.afterBody), Q),
    (U = i.displayColors ? a + 2 + i.boxPadding : 0),
    ut(t, (te) => {
      ut(te.before, Q), ut(te.lines, Q), ut(te.after, Q);
    }),
    (U = 0),
    (e.font = f.string),
    ut(n.footer, Q),
    e.restore(),
    (O += M.width),
    { width: O, height: k }
  );
}
function UC(n, i) {
  let { y: e, height: t } = i;
  return e < t / 2 ? "top" : e > n.height - t / 2 ? "bottom" : "center";
}
function WC(n, i, e, t) {
  let { x: o, width: r } = t,
    a = e.caretSize + e.caretPadding;
  if ((n === "left" && o + r + a > i.width) || (n === "right" && o - r - a < 0))
    return !0;
}
function $C(n, i, e, t) {
  let { x: o, width: r } = e,
    {
      width: a,
      chartArea: { left: s, right: c },
    } = n,
    p = "center";
  return (
    t === "center"
      ? (p = o <= (s + c) / 2 ? "left" : "right")
      : o <= r / 2
      ? (p = "left")
      : o >= a - r / 2 && (p = "right"),
    WC(p, n, i, e) && (p = "center"),
    p
  );
}
function Sg(n, i, e) {
  let t = e.yAlign || i.yAlign || UC(n, e);
  return { xAlign: e.xAlign || i.xAlign || $C(n, i, e, t), yAlign: t };
}
function GC(n, i) {
  let { x: e, width: t } = n;
  return i === "right" ? (e -= t) : i === "center" && (e -= t / 2), e;
}
function YC(n, i, e) {
  let { y: t, height: o } = n;
  return (
    i === "top" ? (t += e) : i === "bottom" ? (t -= o + e) : (t -= o / 2), t
  );
}
function Mg(n, i, e, t) {
  let { caretSize: o, caretPadding: r, cornerRadius: a } = n,
    { xAlign: s, yAlign: c } = e,
    p = o + r,
    { topLeft: f, topRight: y, bottomLeft: x, bottomRight: C } = Eo(a),
    M = GC(i, s),
    k = YC(i, c, p);
  return (
    c === "center"
      ? s === "left"
        ? (M += p)
        : s === "right" && (M -= p)
      : s === "left"
      ? (M -= Math.max(f, x) + o)
      : s === "right" && (M += Math.max(y, C) + o),
    { x: Zt(M, 0, t.width - i.width), y: Zt(k, 0, t.height - i.height) }
  );
}
function Il(n, i, e) {
  let t = li(e.padding);
  return i === "center"
    ? n.x + n.width / 2
    : i === "right"
    ? n.x + n.width - t.right
    : n.x + t.left;
}
function Eg(n) {
  return Nn([], so(n));
}
function qC(n, i, e) {
  return ro(n, { tooltip: i, tooltipItems: e, type: "tooltip" });
}
function Tg(n, i) {
  let e = i && i.dataset && i.dataset.tooltip && i.dataset.tooltip.callbacks;
  return e ? n.override(e) : n;
}
var r_ = {
  beforeTitle: Rn,
  title(n) {
    if (n.length > 0) {
      let i = n[0],
        e = i.chart.data.labels,
        t = e ? e.length : 0;
      if (this && this.options && this.options.mode === "dataset")
        return i.dataset.label || "";
      if (i.label) return i.label;
      if (t > 0 && i.dataIndex < t) return e[i.dataIndex];
    }
    return "";
  },
  afterTitle: Rn,
  beforeBody: Rn,
  beforeLabel: Rn,
  label(n) {
    if (this && this.options && this.options.mode === "dataset")
      return n.label + ": " + n.formattedValue || n.formattedValue;
    let i = n.dataset.label || "";
    i && (i += ": ");
    let e = n.formattedValue;
    return Ke(e) || (i += e), i;
  },
  labelColor(n) {
    let e = n.chart
      .getDatasetMeta(n.datasetIndex)
      .controller.getStyle(n.dataIndex);
    return {
      borderColor: e.borderColor,
      backgroundColor: e.backgroundColor,
      borderWidth: e.borderWidth,
      borderDash: e.borderDash,
      borderDashOffset: e.borderDashOffset,
      borderRadius: 0,
    };
  },
  labelTextColor() {
    return this.options.bodyColor;
  },
  labelPointStyle(n) {
    let e = n.chart
      .getDatasetMeta(n.datasetIndex)
      .controller.getStyle(n.dataIndex);
    return { pointStyle: e.pointStyle, rotation: e.rotation };
  },
  afterLabel: Rn,
  afterBody: Rn,
  beforeFooter: Rn,
  footer: Rn,
  afterFooter: Rn,
};
function Fi(n, i, e, t) {
  let o = n[i].call(e, t);
  return typeof o > "u" ? r_[i].call(e, t) : o;
}
var kg = (() => {
    class n extends fn {
      static positioners = Ya;
      constructor(e) {
        super(),
          (this.opacity = 0),
          (this._active = []),
          (this._eventPosition = void 0),
          (this._size = void 0),
          (this._cachedAnimations = void 0),
          (this._tooltipItems = []),
          (this.$animations = void 0),
          (this.$context = void 0),
          (this.chart = e.chart),
          (this.options = e.options),
          (this.dataPoints = void 0),
          (this.title = void 0),
          (this.beforeBody = void 0),
          (this.body = void 0),
          (this.afterBody = void 0),
          (this.footer = void 0),
          (this.xAlign = void 0),
          (this.yAlign = void 0),
          (this.x = void 0),
          (this.y = void 0),
          (this.height = void 0),
          (this.width = void 0),
          (this.caretX = void 0),
          (this.caretY = void 0),
          (this.labelColors = void 0),
          (this.labelPointStyles = void 0),
          (this.labelTextColors = void 0);
      }
      initialize(e) {
        (this.options = e),
          (this._cachedAnimations = void 0),
          (this.$context = void 0);
      }
      _resolveAnimations() {
        let e = this._cachedAnimations;
        if (e) return e;
        let t = this.chart,
          o = this.options.setContext(this.getContext()),
          r = o.enabled && t.options.animation && o.animations,
          a = new Fl(this.chart, r);
        return r._cacheable && (this._cachedAnimations = Object.freeze(a)), a;
      }
      getContext() {
        return (
          this.$context ||
          (this.$context = qC(
            this.chart.getContext(),
            this,
            this._tooltipItems
          ))
        );
      }
      getTitle(e, t) {
        let { callbacks: o } = t,
          r = Fi(o, "beforeTitle", this, e),
          a = Fi(o, "title", this, e),
          s = Fi(o, "afterTitle", this, e),
          c = [];
        return (c = Nn(c, so(r))), (c = Nn(c, so(a))), (c = Nn(c, so(s))), c;
      }
      getBeforeBody(e, t) {
        return Eg(Fi(t.callbacks, "beforeBody", this, e));
      }
      getBody(e, t) {
        let { callbacks: o } = t,
          r = [];
        return (
          ut(e, (a) => {
            let s = { before: [], lines: [], after: [] },
              c = Tg(o, a);
            Nn(s.before, so(Fi(c, "beforeLabel", this, a))),
              Nn(s.lines, Fi(c, "label", this, a)),
              Nn(s.after, so(Fi(c, "afterLabel", this, a))),
              r.push(s);
          }),
          r
        );
      }
      getAfterBody(e, t) {
        return Eg(Fi(t.callbacks, "afterBody", this, e));
      }
      getFooter(e, t) {
        let { callbacks: o } = t,
          r = Fi(o, "beforeFooter", this, e),
          a = Fi(o, "footer", this, e),
          s = Fi(o, "afterFooter", this, e),
          c = [];
        return (c = Nn(c, so(r))), (c = Nn(c, so(a))), (c = Nn(c, so(s))), c;
      }
      _createItems(e) {
        let t = this._active,
          o = this.chart.data,
          r = [],
          a = [],
          s = [],
          c = [],
          p,
          f;
        for (p = 0, f = t.length; p < f; ++p) c.push(zC(this.chart, t[p]));
        return (
          e.filter && (c = c.filter((y, x, C) => e.filter(y, x, C, o))),
          e.itemSort && (c = c.sort((y, x) => e.itemSort(y, x, o))),
          ut(c, (y) => {
            let x = Tg(e.callbacks, y);
            r.push(Fi(x, "labelColor", this, y)),
              a.push(Fi(x, "labelPointStyle", this, y)),
              s.push(Fi(x, "labelTextColor", this, y));
          }),
          (this.labelColors = r),
          (this.labelPointStyles = a),
          (this.labelTextColors = s),
          (this.dataPoints = c),
          c
        );
      }
      update(e, t) {
        let o = this.options.setContext(this.getContext()),
          r = this._active,
          a,
          s = [];
        if (!r.length) this.opacity !== 0 && (a = { opacity: 0 });
        else {
          let c = Ya[o.position].call(this, r, this._eventPosition);
          (s = this._createItems(o)),
            (this.title = this.getTitle(s, o)),
            (this.beforeBody = this.getBeforeBody(s, o)),
            (this.body = this.getBody(s, o)),
            (this.afterBody = this.getAfterBody(s, o)),
            (this.footer = this.getFooter(s, o));
          let p = (this._size = Dg(this, o)),
            f = Object.assign({}, c, p),
            y = Sg(this.chart, o, f),
            x = Mg(o, f, y, this.chart);
          (this.xAlign = y.xAlign),
            (this.yAlign = y.yAlign),
            (a = {
              opacity: 1,
              x: x.x,
              y: x.y,
              width: p.width,
              height: p.height,
              caretX: c.x,
              caretY: c.y,
            });
        }
        (this._tooltipItems = s),
          (this.$context = void 0),
          a && this._resolveAnimations().update(this, a),
          e &&
            o.external &&
            o.external.call(this, {
              chart: this.chart,
              tooltip: this,
              replay: t,
            });
      }
      drawCaret(e, t, o, r) {
        let a = this.getCaretPosition(e, o, r);
        t.lineTo(a.x1, a.y1), t.lineTo(a.x2, a.y2), t.lineTo(a.x3, a.y3);
      }
      getCaretPosition(e, t, o) {
        let { xAlign: r, yAlign: a } = this,
          { caretSize: s, cornerRadius: c } = o,
          { topLeft: p, topRight: f, bottomLeft: y, bottomRight: x } = Eo(c),
          { x: C, y: M } = e,
          { width: k, height: O } = t,
          P,
          U,
          Q,
          te,
          Z,
          b;
        return (
          a === "center"
            ? ((Z = M + O / 2),
              r === "left"
                ? ((P = C), (U = P - s), (te = Z + s), (b = Z - s))
                : ((P = C + k), (U = P + s), (te = Z - s), (b = Z + s)),
              (Q = P))
            : (r === "left"
                ? (U = C + Math.max(p, y) + s)
                : r === "right"
                ? (U = C + k - Math.max(f, x) - s)
                : (U = this.caretX),
              a === "top"
                ? ((te = M), (Z = te - s), (P = U - s), (Q = U + s))
                : ((te = M + O), (Z = te + s), (P = U + s), (Q = U - s)),
              (b = te)),
          { x1: P, x2: U, x3: Q, y1: te, y2: Z, y3: b }
        );
      }
      drawTitle(e, t, o) {
        let r = this.title,
          a = r.length,
          s,
          c,
          p;
        if (a) {
          let f = Jo(o.rtl, this.x, this.width);
          for (
            e.x = Il(this, o.titleAlign, o),
              t.textAlign = f.textAlign(o.titleAlign),
              t.textBaseline = "middle",
              s = Gt(o.titleFont),
              c = o.titleSpacing,
              t.fillStyle = o.titleColor,
              t.font = s.string,
              p = 0;
            p < a;
            ++p
          )
            t.fillText(r[p], f.x(e.x), e.y + s.lineHeight / 2),
              (e.y += s.lineHeight + c),
              p + 1 === a && (e.y += o.titleMarginBottom - c);
        }
      }
      _drawColorBox(e, t, o, r, a) {
        let s = this.labelColors[o],
          c = this.labelPointStyles[o],
          { boxHeight: p, boxWidth: f } = a,
          y = Gt(a.bodyFont),
          x = Il(this, "left", a),
          C = r.x(x),
          M = p < y.lineHeight ? (y.lineHeight - p) / 2 : 0,
          k = t.y + M;
        if (a.usePointStyle) {
          let O = {
              radius: Math.min(f, p) / 2,
              pointStyle: c.pointStyle,
              rotation: c.rotation,
              borderWidth: 1,
            },
            P = r.leftForLtr(C, f) + f / 2,
            U = k + p / 2;
          (e.strokeStyle = a.multiKeyBackground),
            (e.fillStyle = a.multiKeyBackground),
            xl(e, O, P, U),
            (e.strokeStyle = s.borderColor),
            (e.fillStyle = s.backgroundColor),
            xl(e, O, P, U);
        } else {
          (e.lineWidth = et(s.borderWidth)
            ? Math.max(...Object.values(s.borderWidth))
            : s.borderWidth || 1),
            (e.strokeStyle = s.borderColor),
            e.setLineDash(s.borderDash || []),
            (e.lineDashOffset = s.borderDashOffset || 0);
          let O = r.leftForLtr(C, f),
            P = r.leftForLtr(r.xPlus(C, 1), f - 2),
            U = Eo(s.borderRadius);
          Object.values(U).some((Q) => Q !== 0)
            ? (e.beginPath(),
              (e.fillStyle = a.multiKeyBackground),
              jr(e, { x: O, y: k, w: f, h: p, radius: U }),
              e.fill(),
              e.stroke(),
              (e.fillStyle = s.backgroundColor),
              e.beginPath(),
              jr(e, { x: P, y: k + 1, w: f - 2, h: p - 2, radius: U }),
              e.fill())
            : ((e.fillStyle = a.multiKeyBackground),
              e.fillRect(O, k, f, p),
              e.strokeRect(O, k, f, p),
              (e.fillStyle = s.backgroundColor),
              e.fillRect(P, k + 1, f - 2, p - 2));
        }
        e.fillStyle = this.labelTextColors[o];
      }
      drawBody(e, t, o) {
        let { body: r } = this,
          {
            bodySpacing: a,
            bodyAlign: s,
            displayColors: c,
            boxHeight: p,
            boxWidth: f,
            boxPadding: y,
          } = o,
          x = Gt(o.bodyFont),
          C = x.lineHeight,
          M = 0,
          k = Jo(o.rtl, this.x, this.width),
          O = function (_e) {
            t.fillText(_e, k.x(e.x + M), e.y + C / 2), (e.y += C + a);
          },
          P = k.textAlign(s),
          U,
          Q,
          te,
          Z,
          b,
          ge,
          ee;
        for (
          t.textAlign = s,
            t.textBaseline = "middle",
            t.font = x.string,
            e.x = Il(this, P, o),
            t.fillStyle = o.bodyColor,
            ut(this.beforeBody, O),
            M =
              c && P !== "right" ? (s === "center" ? f / 2 + y : f + 2 + y) : 0,
            Z = 0,
            ge = r.length;
          Z < ge;
          ++Z
        ) {
          for (
            U = r[Z],
              Q = this.labelTextColors[Z],
              t.fillStyle = Q,
              ut(U.before, O),
              te = U.lines,
              c &&
                te.length &&
                (this._drawColorBox(t, e, Z, k, o),
                (C = Math.max(x.lineHeight, p))),
              b = 0,
              ee = te.length;
            b < ee;
            ++b
          )
            O(te[b]), (C = x.lineHeight);
          ut(U.after, O);
        }
        (M = 0), (C = x.lineHeight), ut(this.afterBody, O), (e.y -= a);
      }
      drawFooter(e, t, o) {
        let r = this.footer,
          a = r.length,
          s,
          c;
        if (a) {
          let p = Jo(o.rtl, this.x, this.width);
          for (
            e.x = Il(this, o.footerAlign, o),
              e.y += o.footerMarginTop,
              t.textAlign = p.textAlign(o.footerAlign),
              t.textBaseline = "middle",
              s = Gt(o.footerFont),
              t.fillStyle = o.footerColor,
              t.font = s.string,
              c = 0;
            c < a;
            ++c
          )
            t.fillText(r[c], p.x(e.x), e.y + s.lineHeight / 2),
              (e.y += s.lineHeight + o.footerSpacing);
        }
      }
      drawBackground(e, t, o, r) {
        let { xAlign: a, yAlign: s } = this,
          { x: c, y: p } = e,
          { width: f, height: y } = o,
          {
            topLeft: x,
            topRight: C,
            bottomLeft: M,
            bottomRight: k,
          } = Eo(r.cornerRadius);
        (t.fillStyle = r.backgroundColor),
          (t.strokeStyle = r.borderColor),
          (t.lineWidth = r.borderWidth),
          t.beginPath(),
          t.moveTo(c + x, p),
          s === "top" && this.drawCaret(e, t, o, r),
          t.lineTo(c + f - C, p),
          t.quadraticCurveTo(c + f, p, c + f, p + C),
          s === "center" && a === "right" && this.drawCaret(e, t, o, r),
          t.lineTo(c + f, p + y - k),
          t.quadraticCurveTo(c + f, p + y, c + f - k, p + y),
          s === "bottom" && this.drawCaret(e, t, o, r),
          t.lineTo(c + M, p + y),
          t.quadraticCurveTo(c, p + y, c, p + y - M),
          s === "center" && a === "left" && this.drawCaret(e, t, o, r),
          t.lineTo(c, p + x),
          t.quadraticCurveTo(c, p, c + x, p),
          t.closePath(),
          t.fill(),
          r.borderWidth > 0 && t.stroke();
      }
      _updateAnimationTarget(e) {
        let t = this.chart,
          o = this.$animations,
          r = o && o.x,
          a = o && o.y;
        if (r || a) {
          let s = Ya[e.position].call(this, this._active, this._eventPosition);
          if (!s) return;
          let c = (this._size = Dg(this, e)),
            p = Object.assign({}, s, this._size),
            f = Sg(t, e, p),
            y = Mg(e, p, f, t);
          (r._to !== y.x || a._to !== y.y) &&
            ((this.xAlign = f.xAlign),
            (this.yAlign = f.yAlign),
            (this.width = c.width),
            (this.height = c.height),
            (this.caretX = s.x),
            (this.caretY = s.y),
            this._resolveAnimations().update(this, y));
        }
      }
      _willRender() {
        return !!this.opacity;
      }
      draw(e) {
        let t = this.options.setContext(this.getContext()),
          o = this.opacity;
        if (!o) return;
        this._updateAnimationTarget(t);
        let r = { width: this.width, height: this.height },
          a = { x: this.x, y: this.y };
        o = Math.abs(o) < 0.001 ? 0 : o;
        let s = li(t.padding),
          c =
            this.title.length ||
            this.beforeBody.length ||
            this.body.length ||
            this.afterBody.length ||
            this.footer.length;
        t.enabled &&
          c &&
          (e.save(),
          (e.globalAlpha = o),
          this.drawBackground(a, e, r, t),
          ru(e, t.textDirection),
          (a.y += s.top),
          this.drawTitle(a, e, t),
          this.drawBody(a, e, t),
          this.drawFooter(a, e, t),
          au(e, t.textDirection),
          e.restore());
      }
      getActiveElements() {
        return this._active || [];
      }
      setActiveElements(e, t) {
        let o = this._active,
          r = e.map(({ datasetIndex: c, index: p }) => {
            let f = this.chart.getDatasetMeta(c);
            if (!f) throw new Error("Cannot find a dataset at index " + c);
            return { datasetIndex: c, element: f.data[p], index: p };
          }),
          a = !Va(o, r),
          s = this._positionChanged(r, t);
        (a || s) &&
          ((this._active = r),
          (this._eventPosition = t),
          (this._ignoreReplayEvents = !0),
          this.update(!0));
      }
      handleEvent(e, t, o = !0) {
        if (t && this._ignoreReplayEvents) return !1;
        this._ignoreReplayEvents = !1;
        let r = this.options,
          a = this._active || [],
          s = this._getActiveElements(e, a, t, o),
          c = this._positionChanged(s, e),
          p = t || !Va(s, a) || c;
        return (
          p &&
            ((this._active = s),
            (r.enabled || r.external) &&
              ((this._eventPosition = { x: e.x, y: e.y }), this.update(!0, t))),
          p
        );
      }
      _getActiveElements(e, t, o, r) {
        let a = this.options;
        if (e.type === "mouseout") return [];
        if (!r)
          return t.filter(
            (c) =>
              this.chart.data.datasets[c.datasetIndex] &&
              this.chart
                .getDatasetMeta(c.datasetIndex)
                .controller.getParsed(c.index) !== void 0
          );
        let s = this.chart.getElementsAtEventForMode(e, a.mode, a, o);
        return a.reverse && s.reverse(), s;
      }
      _positionChanged(e, t) {
        let { caretX: o, caretY: r, options: a } = this,
          s = Ya[a.position].call(this, e, t);
        return s !== !1 && (o !== s.x || r !== s.y);
      }
    }
    return n;
  })(),
  $u = {
    id: "tooltip",
    _element: kg,
    positioners: Ya,
    afterInit(n, i, e) {
      e && (n.tooltip = new kg({ chart: n, options: e }));
    },
    beforeUpdate(n, i, e) {
      n.tooltip && n.tooltip.initialize(e);
    },
    reset(n, i, e) {
      n.tooltip && n.tooltip.initialize(e);
    },
    afterDraw(n) {
      let i = n.tooltip;
      if (i && i._willRender()) {
        let e = { tooltip: i };
        if (
          n.notifyPlugins(
            "beforeTooltipDraw",
            at(se({}, e), { cancelable: !0 })
          ) === !1
        )
          return;
        i.draw(n.ctx), n.notifyPlugins("afterTooltipDraw", e);
      }
    },
    afterEvent(n, i) {
      if (n.tooltip) {
        let e = i.replay;
        n.tooltip.handleEvent(i.event, e, i.inChartArea) && (i.changed = !0);
      }
    },
    defaults: {
      enabled: !0,
      external: null,
      position: "average",
      backgroundColor: "rgba(0,0,0,0.8)",
      titleColor: "#fff",
      titleFont: { weight: "bold" },
      titleSpacing: 2,
      titleMarginBottom: 6,
      titleAlign: "left",
      bodyColor: "#fff",
      bodySpacing: 2,
      bodyFont: {},
      bodyAlign: "left",
      footerColor: "#fff",
      footerSpacing: 2,
      footerMarginTop: 6,
      footerFont: { weight: "bold" },
      footerAlign: "left",
      padding: 6,
      caretPadding: 2,
      caretSize: 5,
      cornerRadius: 6,
      boxHeight: (n, i) => i.bodyFont.size,
      boxWidth: (n, i) => i.bodyFont.size,
      multiKeyBackground: "#fff",
      displayColors: !0,
      boxPadding: 0,
      borderColor: "rgba(0,0,0,0)",
      borderWidth: 0,
      animation: { duration: 400, easing: "easeOutQuart" },
      animations: {
        numbers: {
          type: "number",
          properties: ["x", "y", "width", "height", "caretX", "caretY"],
        },
        opacity: { easing: "linear", duration: 200 },
      },
      callbacks: r_,
    },
    defaultRoutes: { bodyFont: "font", footerFont: "font", titleFont: "font" },
    descriptors: {
      _scriptable: (n) =>
        n !== "filter" && n !== "itemSort" && n !== "external",
      _indexable: !1,
      callbacks: { _scriptable: !1, _indexable: !1 },
      animation: { _fallback: !1 },
      animations: { _fallback: "animation" },
    },
    additionalOptionScopes: ["interaction"],
  },
  KC = Object.freeze({
    __proto__: null,
    Colors: cC,
    Decimation: pC,
    Filler: AC,
    Legend: BC,
    SubTitle: jC,
    Title: Wu,
    Tooltip: $u,
  }),
  QC = (n, i, e, t) => (
    typeof i == "string"
      ? ((e = n.push(i) - 1), t.unshift({ index: e, label: i }))
      : isNaN(i) && (e = null),
    e
  );
function XC(n, i, e, t) {
  let o = n.indexOf(i);
  if (o === -1) return QC(n, i, e, t);
  let r = n.lastIndexOf(i);
  return o !== r ? e : o;
}
var ZC = (n, i) => (n === null ? null : Zt(Math.round(n), 0, i));
function Og(n) {
  let i = this.getLabels();
  return n >= 0 && n < i.length ? i[n] : n;
}
var Gu = (() => {
  class n extends ir {
    static id = "category";
    static defaults = { ticks: { callback: Og } };
    constructor(e) {
      super(e),
        (this._startValue = void 0),
        (this._valueRange = 0),
        (this._addedLabels = []);
    }
    init(e) {
      let t = this._addedLabels;
      if (t.length) {
        let o = this.getLabels();
        for (let { index: r, label: a } of t) o[r] === a && o.splice(r, 1);
        this._addedLabels = [];
      }
      super.init(e);
    }
    parse(e, t) {
      if (Ke(e)) return null;
      let o = this.getLabels();
      return (
        (t =
          isFinite(t) && o[t] === e
            ? t
            : XC(o, e, je(t, e), this._addedLabels)),
        ZC(t, o.length - 1)
      );
    }
    determineDataLimits() {
      let { minDefined: e, maxDefined: t } = this.getUserBounds(),
        { min: o, max: r } = this.getMinMax(!0);
      this.options.bounds === "ticks" &&
        (e || (o = 0), t || (r = this.getLabels().length - 1)),
        (this.min = o),
        (this.max = r);
    }
    buildTicks() {
      let e = this.min,
        t = this.max,
        o = this.options.offset,
        r = [],
        a = this.getLabels();
      (a = e === 0 && t === a.length - 1 ? a : a.slice(e, t + 1)),
        (this._valueRange = Math.max(a.length - (o ? 0 : 1), 1)),
        (this._startValue = this.min - (o ? 0.5 : 0));
      for (let s = e; s <= t; s++) r.push({ value: s });
      return r;
    }
    getLabelForValue(e) {
      return Og.call(this, e);
    }
    configure() {
      super.configure(),
        this.isHorizontal() || (this._reversePixels = !this._reversePixels);
    }
    getPixelForValue(e) {
      return (
        typeof e != "number" && (e = this.parse(e)),
        e === null
          ? NaN
          : this.getPixelForDecimal((e - this._startValue) / this._valueRange)
      );
    }
    getPixelForTick(e) {
      let t = this.ticks;
      return e < 0 || e > t.length - 1
        ? null
        : this.getPixelForValue(t[e].value);
    }
    getValueForPixel(e) {
      return Math.round(
        this._startValue + this.getDecimalForPixel(e) * this._valueRange
      );
    }
    getBasePixel() {
      return this.bottom;
    }
  }
  return n;
})();
function JC(n, i) {
  let e = [],
    {
      bounds: o,
      step: r,
      min: a,
      max: s,
      precision: c,
      count: p,
      maxTicks: f,
      maxDigits: y,
      includeBounds: x,
    } = n,
    C = r || 1,
    M = f - 1,
    { min: k, max: O } = i,
    P = !Ke(a),
    U = !Ke(s),
    Q = !Ke(p),
    te = (O - k) / (y + 1),
    Z = Ld((O - k) / M / C) * C,
    b,
    ge,
    ee,
    _e;
  if (Z < 1e-14 && !P && !U) return [{ value: k }, { value: O }];
  (_e = Math.ceil(O / Z) - Math.floor(k / Z)),
    _e > M && (Z = Ld((_e * Z) / M / C) * C),
    Ke(c) || ((b = Math.pow(10, c)), (Z = Math.ceil(Z * b) / b)),
    o === "ticks"
      ? ((ge = Math.floor(k / Z) * Z), (ee = Math.ceil(O / Z) * Z))
      : ((ge = k), (ee = O)),
    P && U && r && gf((s - a) / r, Z / 1e3)
      ? ((_e = Math.round(Math.min((s - a) / Z, f))),
        (Z = (s - a) / _e),
        (ge = a),
        (ee = s))
      : Q
      ? ((ge = P ? a : ge),
        (ee = U ? s : ee),
        (_e = p - 1),
        (Z = (ee - ge) / _e))
      : ((_e = (ee - ge) / Z),
        Lr(_e, Math.round(_e), Z / 1e3)
          ? (_e = Math.round(_e))
          : (_e = Math.ceil(_e)));
  let Re = Math.max(Hd(Z), Hd(ge));
  (b = Math.pow(10, Ke(c) ? Re : c)),
    (ge = Math.round(ge * b) / b),
    (ee = Math.round(ee * b) / b);
  let Ue = 0;
  for (
    P &&
    (x && ge !== a
      ? (e.push({ value: a }),
        ge < a && Ue++,
        Lr(Math.round((ge + Ue * Z) * b) / b, a, Ig(a, te, n)) && Ue++)
      : ge < a && Ue++);
    Ue < _e;
    ++Ue
  ) {
    let xe = Math.round((ge + Ue * Z) * b) / b;
    if (U && xe > s) break;
    e.push({ value: xe });
  }
  return (
    U && x && ee !== s
      ? e.length && Lr(e[e.length - 1].value, s, Ig(s, te, n))
        ? (e[e.length - 1].value = s)
        : e.push({ value: s })
      : (!U || ee === s) && e.push({ value: ee }),
    e
  );
}
function Ig(n, i, { horizontal: e, minRotation: t }) {
  let o = en(t),
    r = (e ? Math.sin(o) : Math.cos(o)) || 0.001,
    a = 0.75 * i * ("" + n).length;
  return Math.min(i / r, a);
}
var $r = class extends ir {
    constructor(i) {
      super(i),
        (this.start = void 0),
        (this.end = void 0),
        (this._startValue = void 0),
        (this._endValue = void 0),
        (this._valueRange = 0);
    }
    parse(i, e) {
      return Ke(i) ||
        ((typeof i == "number" || i instanceof Number) && !isFinite(+i))
        ? null
        : +i;
    }
    handleTickRangeOptions() {
      let { beginAtZero: i } = this.options,
        { minDefined: e, maxDefined: t } = this.getUserBounds(),
        { min: o, max: r } = this,
        a = (c) => (o = e ? o : c),
        s = (c) => (r = t ? r : c);
      if (i) {
        let c = mn(o),
          p = mn(r);
        c < 0 && p < 0 ? s(0) : c > 0 && p > 0 && a(0);
      }
      if (o === r) {
        let c = r === 0 ? 1 : Math.abs(r * 0.05);
        s(r + c), i || a(o - c);
      }
      (this.min = o), (this.max = r);
    }
    getTickLimit() {
      let i = this.options.ticks,
        { maxTicksLimit: e, stepSize: t } = i,
        o;
      return (
        t
          ? ((o = Math.ceil(this.max / t) - Math.floor(this.min / t) + 1),
            o > 1e3 &&
              (console.warn(
                `scales.${this.id}.ticks.stepSize: ${t} would result generating up to ${o} ticks. Limiting to 1000.`
              ),
              (o = 1e3)))
          : ((o = this.computeTickLimit()), (e = e || 11)),
        e && (o = Math.min(e, o)),
        o
      );
    }
    computeTickLimit() {
      return Number.POSITIVE_INFINITY;
    }
    buildTicks() {
      let i = this.options,
        e = i.ticks,
        t = this.getTickLimit();
      t = Math.max(2, t);
      let o = {
          maxTicks: t,
          bounds: i.bounds,
          min: i.min,
          max: i.max,
          precision: e.precision,
          step: e.stepSize,
          count: e.count,
          maxDigits: this._maxDigits(),
          horizontal: this.isHorizontal(),
          minRotation: e.minRotation || 0,
          includeBounds: e.includeBounds !== !1,
        },
        r = this._range || this,
        a = JC(o, r);
      return (
        i.bounds === "ticks" && Bd(a, this, "value"),
        i.reverse
          ? (a.reverse(), (this.start = this.max), (this.end = this.min))
          : ((this.start = this.min), (this.end = this.max)),
        a
      );
    }
    configure() {
      let i = this.ticks,
        e = this.min,
        t = this.max;
      if ((super.configure(), this.options.offset && i.length)) {
        let o = (t - e) / Math.max(i.length - 1, 1) / 2;
        (e -= o), (t += o);
      }
      (this._startValue = e), (this._endValue = t), (this._valueRange = t - e);
    }
    getLabelForValue(i) {
      return Hr(i, this.chart.options.locale, this.options.ticks.format);
    }
  },
  Qa = class extends $r {
    static id = "linear";
    static defaults = { ticks: { callback: La.formatters.numeric } };
    determineDataLimits() {
      let { min: i, max: e } = this.getMinMax(!0);
      (this.min = It(i) ? i : 0),
        (this.max = It(e) ? e : 1),
        this.handleTickRangeOptions();
    }
    computeTickLimit() {
      let i = this.isHorizontal(),
        e = i ? this.width : this.height,
        t = en(this.options.ticks.minRotation),
        o = (i ? Math.sin(t) : Math.cos(t)) || 0.001,
        r = this._resolveTickFontOptions(0);
      return Math.ceil(e / Math.min(40, r.lineHeight / o));
    }
    getPixelForValue(i) {
      return i === null
        ? NaN
        : this.getPixelForDecimal((i - this._startValue) / this._valueRange);
    }
    getValueForPixel(i) {
      return this._startValue + this.getDecimalForPixel(i) * this._valueRange;
    }
  },
  Xa = (n) => Math.floor(no(n)),
  tr = (n, i) => Math.pow(10, Xa(n) + i);
function Pg(n) {
  return n / Math.pow(10, Xa(n)) === 1;
}
function Ag(n, i, e) {
  let t = Math.pow(10, e),
    o = Math.floor(n / t);
  return Math.ceil(i / t) - o;
}
function ew(n, i) {
  let e = i - n,
    t = Xa(e);
  for (; Ag(n, i, t) > 10; ) t++;
  for (; Ag(n, i, t) < 10; ) t--;
  return Math.min(t, Xa(n));
}
function tw(n, { min: i, max: e }) {
  i = Ri(n.min, i);
  let t = [],
    o = Xa(i),
    r = ew(i, e),
    a = r < 0 ? Math.pow(10, Math.abs(r)) : 1,
    s = Math.pow(10, r),
    c = o > r ? Math.pow(10, o) : 0,
    p = Math.round((i - c) * a) / a,
    f = Math.floor((i - c) / s / 10) * s * 10,
    y = Math.floor((p - f) / Math.pow(10, r)),
    x = Ri(n.min, Math.round((c + f + y * Math.pow(10, r)) * a) / a);
  for (; x < e; )
    t.push({ value: x, major: Pg(x), significand: y }),
      y >= 10 ? (y = y < 15 ? 15 : 20) : y++,
      y >= 20 && (r++, (y = 2), (a = r >= 0 ? 1 : a)),
      (x = Math.round((c + f + y * Math.pow(10, r)) * a) / a);
  let C = Ri(n.max, x);
  return t.push({ value: C, major: Pg(C), significand: y }), t;
}
var Nu = class extends ir {
  static id = "logarithmic";
  static defaults = {
    ticks: { callback: La.formatters.logarithmic, major: { enabled: !0 } },
  };
  constructor(i) {
    super(i),
      (this.start = void 0),
      (this.end = void 0),
      (this._startValue = void 0),
      (this._valueRange = 0);
  }
  parse(i, e) {
    let t = $r.prototype.parse.apply(this, [i, e]);
    if (t === 0) {
      this._zero = !0;
      return;
    }
    return It(t) && t > 0 ? t : null;
  }
  determineDataLimits() {
    let { min: i, max: e } = this.getMinMax(!0);
    (this.min = It(i) ? Math.max(0, i) : null),
      (this.max = It(e) ? Math.max(0, e) : null),
      this.options.beginAtZero && (this._zero = !0),
      this._zero &&
        this.min !== this._suggestedMin &&
        !It(this._userMin) &&
        (this.min = i === tr(this.min, 0) ? tr(this.min, -1) : tr(this.min, 0)),
      this.handleTickRangeOptions();
  }
  handleTickRangeOptions() {
    let { minDefined: i, maxDefined: e } = this.getUserBounds(),
      t = this.min,
      o = this.max,
      r = (s) => (t = i ? t : s),
      a = (s) => (o = e ? o : s);
    t === o && (t <= 0 ? (r(1), a(10)) : (r(tr(t, -1)), a(tr(o, 1)))),
      t <= 0 && r(tr(o, -1)),
      o <= 0 && a(tr(t, 1)),
      (this.min = t),
      (this.max = o);
  }
  buildTicks() {
    let i = this.options,
      e = { min: this._userMin, max: this._userMax },
      t = tw(e, this);
    return (
      i.bounds === "ticks" && Bd(t, this, "value"),
      i.reverse
        ? (t.reverse(), (this.start = this.max), (this.end = this.min))
        : ((this.start = this.min), (this.end = this.max)),
      t
    );
  }
  getLabelForValue(i) {
    return i === void 0
      ? "0"
      : Hr(i, this.chart.options.locale, this.options.ticks.format);
  }
  configure() {
    let i = this.min;
    super.configure(),
      (this._startValue = no(i)),
      (this._valueRange = no(this.max) - no(i));
  }
  getPixelForValue(i) {
    return (
      (i === void 0 || i === 0) && (i = this.min),
      i === null || isNaN(i)
        ? NaN
        : this.getPixelForDecimal(
            i === this.min ? 0 : (no(i) - this._startValue) / this._valueRange
          )
    );
  }
  getValueForPixel(i) {
    let e = this.getDecimalForPixel(i);
    return Math.pow(10, this._startValue + e * this._valueRange);
  }
};
function Vu(n) {
  let i = n.ticks;
  if (i.display && n.display) {
    let e = li(i.backdropPadding);
    return je(i.font && i.font.size, Ct.font.size) + e.height;
  }
  return 0;
}
function iw(n, i, e) {
  return (
    (e = vt(e) ? e : [e]), { w: Sf(n, i.string, e), h: e.length * i.lineHeight }
  );
}
function Rg(n, i, e, t, o) {
  return n === t || n === o
    ? { start: i - e / 2, end: i + e / 2 }
    : n < t || n > o
    ? { start: i - e, end: i }
    : { start: i, end: i + e };
}
function nw(n) {
  let i = {
      l: n.left + n._padding.left,
      r: n.right - n._padding.right,
      t: n.top + n._padding.top,
      b: n.bottom - n._padding.bottom,
    },
    e = Object.assign({}, i),
    t = [],
    o = [],
    r = n._pointLabels.length,
    a = n.options.pointLabels,
    s = a.centerPointLabels ? lt / r : 0;
  for (let c = 0; c < r; c++) {
    let p = a.setContext(n.getPointLabelContext(c));
    o[c] = p.padding;
    let f = n.getPointPosition(c, n.drawingArea + o[c], s),
      y = Gt(p.font),
      x = iw(n.ctx, y, n._pointLabels[c]);
    t[c] = x;
    let C = ai(n.getIndexAngle(c) + s),
      M = Math.round(_l(C)),
      k = Rg(M, f.x, x.w, 0, 180),
      O = Rg(M, f.y, x.h, 90, 270);
    ow(e, i, C, k, O);
  }
  n.setCenterPoint(i.l - e.l, e.r - i.r, i.t - e.t, e.b - i.b),
    (n._pointLabelItems = sw(n, t, o));
}
function ow(n, i, e, t, o) {
  let r = Math.abs(Math.sin(e)),
    a = Math.abs(Math.cos(e)),
    s = 0,
    c = 0;
  t.start < i.l
    ? ((s = (i.l - t.start) / r), (n.l = Math.min(n.l, i.l - s)))
    : t.end > i.r && ((s = (t.end - i.r) / r), (n.r = Math.max(n.r, i.r + s))),
    o.start < i.t
      ? ((c = (i.t - o.start) / a), (n.t = Math.min(n.t, i.t - c)))
      : o.end > i.b &&
        ((c = (o.end - i.b) / a), (n.b = Math.max(n.b, i.b + c)));
}
function rw(n, i, e) {
  let t = n.drawingArea,
    { extra: o, additionalAngle: r, padding: a, size: s } = e,
    c = n.getPointPosition(i, t + o + a, r),
    p = Math.round(_l(ai(c.angle + Lt))),
    f = dw(c.y, s.h, p),
    y = lw(p),
    x = cw(c.x, s.w, y);
  return {
    visible: !0,
    x: c.x,
    y: f,
    textAlign: y,
    left: x,
    top: f,
    right: x + s.w,
    bottom: f + s.h,
  };
}
function aw(n, i) {
  if (!i) return !0;
  let { left: e, top: t, right: o, bottom: r } = n;
  return !(
    An({ x: e, y: t }, i) ||
    An({ x: e, y: r }, i) ||
    An({ x: o, y: t }, i) ||
    An({ x: o, y: r }, i)
  );
}
function sw(n, i, e) {
  let t = [],
    o = n._pointLabels.length,
    r = n.options,
    { centerPointLabels: a, display: s } = r.pointLabels,
    c = { extra: Vu(r) / 2, additionalAngle: a ? lt / o : 0 },
    p;
  for (let f = 0; f < o; f++) {
    (c.padding = e[f]), (c.size = i[f]);
    let y = rw(n, f, c);
    t.push(y), s === "auto" && ((y.visible = aw(y, p)), y.visible && (p = y));
  }
  return t;
}
function lw(n) {
  return n === 0 || n === 180 ? "center" : n < 180 ? "left" : "right";
}
function cw(n, i, e) {
  return e === "right" ? (n -= i) : e === "center" && (n -= i / 2), n;
}
function dw(n, i, e) {
  return (
    e === 90 || e === 270 ? (n -= i / 2) : (e > 270 || e < 90) && (n -= i), n
  );
}
function uw(n, i, e) {
  let { left: t, top: o, right: r, bottom: a } = e,
    { backdropColor: s } = i;
  if (!Ke(s)) {
    let c = Eo(i.borderRadius),
      p = li(i.backdropPadding);
    n.fillStyle = s;
    let f = t - p.left,
      y = o - p.top,
      x = r - t + p.width,
      C = a - o + p.height;
    Object.values(c).some((M) => M !== 0)
      ? (n.beginPath(), jr(n, { x: f, y, w: x, h: C, radius: c }), n.fill())
      : n.fillRect(f, y, x, C);
  }
}
function hw(n, i) {
  let {
    ctx: e,
    options: { pointLabels: t },
  } = n;
  for (let o = i - 1; o >= 0; o--) {
    let r = n._pointLabelItems[o];
    if (!r.visible) continue;
    let a = t.setContext(n.getPointLabelContext(o));
    uw(e, a, r);
    let s = Gt(a.font),
      { x: c, y: p, textAlign: f } = r;
    Mo(e, n._pointLabels[o], c, p + s.lineHeight / 2, s, {
      color: a.color,
      textAlign: f,
      textBaseline: "middle",
    });
  }
}
function a_(n, i, e, t) {
  let { ctx: o } = n;
  if (e) o.arc(n.xCenter, n.yCenter, i, 0, yt);
  else {
    let r = n.getPointPosition(0, i);
    o.moveTo(r.x, r.y);
    for (let a = 1; a < t; a++)
      (r = n.getPointPosition(a, i)), o.lineTo(r.x, r.y);
  }
}
function pw(n, i, e, t, o) {
  let r = n.ctx,
    a = i.circular,
    { color: s, lineWidth: c } = i;
  (!a && !t) ||
    !s ||
    !c ||
    e < 0 ||
    (r.save(),
    (r.strokeStyle = s),
    (r.lineWidth = c),
    r.setLineDash(o.dash || []),
    (r.lineDashOffset = o.dashOffset),
    r.beginPath(),
    a_(n, e, a, t),
    r.closePath(),
    r.stroke(),
    r.restore());
}
function mw(n, i, e) {
  return ro(n, { label: e, index: i, type: "pointLabel" });
}
var Lu = class extends $r {
    static id = "radialLinear";
    static defaults = {
      display: !0,
      animate: !0,
      position: "chartArea",
      angleLines: {
        display: !0,
        lineWidth: 1,
        borderDash: [],
        borderDashOffset: 0,
      },
      grid: { circular: !1 },
      startAngle: 0,
      ticks: { showLabelBackdrop: !0, callback: La.formatters.numeric },
      pointLabels: {
        backdropColor: void 0,
        backdropPadding: 2,
        display: !0,
        font: { size: 10 },
        callback(i) {
          return i;
        },
        padding: 5,
        centerPointLabels: !1,
      },
    };
    static defaultRoutes = {
      "angleLines.color": "borderColor",
      "pointLabels.color": "color",
      "ticks.color": "color",
    };
    static descriptors = { angleLines: { _fallback: "grid" } };
    constructor(i) {
      super(i),
        (this.xCenter = void 0),
        (this.yCenter = void 0),
        (this.drawingArea = void 0),
        (this._pointLabels = []),
        (this._pointLabelItems = []);
    }
    setDimensions() {
      let i = (this._padding = li(Vu(this.options) / 2)),
        e = (this.width = this.maxWidth - i.width),
        t = (this.height = this.maxHeight - i.height);
      (this.xCenter = Math.floor(this.left + e / 2 + i.left)),
        (this.yCenter = Math.floor(this.top + t / 2 + i.top)),
        (this.drawingArea = Math.floor(Math.min(e, t) / 2));
    }
    determineDataLimits() {
      let { min: i, max: e } = this.getMinMax(!1);
      (this.min = It(i) && !isNaN(i) ? i : 0),
        (this.max = It(e) && !isNaN(e) ? e : 0),
        this.handleTickRangeOptions();
    }
    computeTickLimit() {
      return Math.ceil(this.drawingArea / Vu(this.options));
    }
    generateTickLabels(i) {
      $r.prototype.generateTickLabels.call(this, i),
        (this._pointLabels = this.getLabels()
          .map((e, t) => {
            let o = mt(this.options.pointLabels.callback, [e, t], this);
            return o || o === 0 ? o : "";
          })
          .filter((e, t) => this.chart.getDataVisibility(t)));
    }
    fit() {
      let i = this.options;
      i.display && i.pointLabels.display
        ? nw(this)
        : this.setCenterPoint(0, 0, 0, 0);
    }
    setCenterPoint(i, e, t, o) {
      (this.xCenter += Math.floor((i - e) / 2)),
        (this.yCenter += Math.floor((t - o) / 2)),
        (this.drawingArea -= Math.min(
          this.drawingArea / 2,
          Math.max(i, e, t, o)
        ));
    }
    getIndexAngle(i) {
      let e = yt / (this._pointLabels.length || 1),
        t = this.options.startAngle || 0;
      return ai(i * e + en(t));
    }
    getDistanceFromCenterForValue(i) {
      if (Ke(i)) return NaN;
      let e = this.drawingArea / (this.max - this.min);
      return this.options.reverse ? (this.max - i) * e : (i - this.min) * e;
    }
    getValueForDistanceFromCenter(i) {
      if (Ke(i)) return NaN;
      let e = i / (this.drawingArea / (this.max - this.min));
      return this.options.reverse ? this.max - e : this.min + e;
    }
    getPointLabelContext(i) {
      let e = this._pointLabels || [];
      if (i >= 0 && i < e.length) {
        let t = e[i];
        return mw(this.getContext(), i, t);
      }
    }
    getPointPosition(i, e, t = 0) {
      let o = this.getIndexAngle(i) - Lt + t;
      return {
        x: Math.cos(o) * e + this.xCenter,
        y: Math.sin(o) * e + this.yCenter,
        angle: o,
      };
    }
    getPointPositionForValue(i, e) {
      return this.getPointPosition(i, this.getDistanceFromCenterForValue(e));
    }
    getBasePosition(i) {
      return this.getPointPositionForValue(i || 0, this.getBaseValue());
    }
    getPointLabelPosition(i) {
      let { left: e, top: t, right: o, bottom: r } = this._pointLabelItems[i];
      return { left: e, top: t, right: o, bottom: r };
    }
    drawBackground() {
      let {
        backgroundColor: i,
        grid: { circular: e },
      } = this.options;
      if (i) {
        let t = this.ctx;
        t.save(),
          t.beginPath(),
          a_(
            this,
            this.getDistanceFromCenterForValue(this._endValue),
            e,
            this._pointLabels.length
          ),
          t.closePath(),
          (t.fillStyle = i),
          t.fill(),
          t.restore();
      }
    }
    drawGrid() {
      let i = this.ctx,
        e = this.options,
        { angleLines: t, grid: o, border: r } = e,
        a = this._pointLabels.length,
        s,
        c,
        p;
      if (
        (e.pointLabels.display && hw(this, a),
        o.display &&
          this.ticks.forEach((f, y) => {
            if (y !== 0 || (y === 0 && this.min < 0)) {
              c = this.getDistanceFromCenterForValue(f.value);
              let x = this.getContext(y),
                C = o.setContext(x),
                M = r.setContext(x);
              pw(this, C, c, a, M);
            }
          }),
        t.display)
      ) {
        for (i.save(), s = a - 1; s >= 0; s--) {
          let f = t.setContext(this.getPointLabelContext(s)),
            { color: y, lineWidth: x } = f;
          !x ||
            !y ||
            ((i.lineWidth = x),
            (i.strokeStyle = y),
            i.setLineDash(f.borderDash),
            (i.lineDashOffset = f.borderDashOffset),
            (c = this.getDistanceFromCenterForValue(
              e.reverse ? this.min : this.max
            )),
            (p = this.getPointPosition(s, c)),
            i.beginPath(),
            i.moveTo(this.xCenter, this.yCenter),
            i.lineTo(p.x, p.y),
            i.stroke());
        }
        i.restore();
      }
    }
    drawBorder() {}
    drawLabels() {
      let i = this.ctx,
        e = this.options,
        t = e.ticks;
      if (!t.display) return;
      let o = this.getIndexAngle(0),
        r,
        a;
      i.save(),
        i.translate(this.xCenter, this.yCenter),
        i.rotate(o),
        (i.textAlign = "center"),
        (i.textBaseline = "middle"),
        this.ticks.forEach((s, c) => {
          if (c === 0 && this.min >= 0 && !e.reverse) return;
          let p = t.setContext(this.getContext(c)),
            f = Gt(p.font);
          if (
            ((r = this.getDistanceFromCenterForValue(this.ticks[c].value)),
            p.showLabelBackdrop)
          ) {
            (i.font = f.string),
              (a = i.measureText(s.label).width),
              (i.fillStyle = p.backdropColor);
            let y = li(p.backdropPadding);
            i.fillRect(
              -a / 2 - y.left,
              -r - f.size / 2 - y.top,
              a + y.width,
              f.size + y.height
            );
          }
          Mo(i, s.label, 0, -r, f, {
            color: p.color,
            strokeColor: p.textStrokeColor,
            strokeWidth: p.textStrokeWidth,
          });
        }),
        i.restore();
    }
    drawTitle() {}
  },
  zl = {
    millisecond: { common: !0, size: 1, steps: 1e3 },
    second: { common: !0, size: 1e3, steps: 60 },
    minute: { common: !0, size: 6e4, steps: 60 },
    hour: { common: !0, size: 36e5, steps: 24 },
    day: { common: !0, size: 864e5, steps: 30 },
    week: { common: !1, size: 6048e5, steps: 4 },
    month: { common: !0, size: 2628e6, steps: 12 },
    quarter: { common: !1, size: 7884e6, steps: 4 },
    year: { common: !0, size: 3154e7 },
  },
  Ni = Object.keys(zl);
function Fg(n, i) {
  return n - i;
}
function Ng(n, i) {
  if (Ke(i)) return null;
  let e = n._adapter,
    { parser: t, round: o, isoWeekday: r } = n._parseOpts,
    a = i;
  return (
    typeof t == "function" && (a = t(a)),
    It(a) || (a = typeof t == "string" ? e.parse(a, t) : e.parse(a)),
    a === null
      ? null
      : (o &&
          (a =
            o === "week" && (Zo(r) || r === !0)
              ? e.startOf(a, "isoWeek", r)
              : e.startOf(a, o)),
        +a)
  );
}
function Vg(n, i, e, t) {
  let o = Ni.length;
  for (let r = Ni.indexOf(n); r < o - 1; ++r) {
    let a = zl[Ni[r]],
      s = a.steps ? a.steps : Number.MAX_SAFE_INTEGER;
    if (a.common && Math.ceil((e - i) / (s * a.size)) <= t) return Ni[r];
  }
  return Ni[o - 1];
}
function fw(n, i, e, t, o) {
  for (let r = Ni.length - 1; r >= Ni.indexOf(e); r--) {
    let a = Ni[r];
    if (zl[a].common && n._adapter.diff(o, t, a) >= i - 1) return a;
  }
  return Ni[e ? Ni.indexOf(e) : 0];
}
function gw(n) {
  for (let i = Ni.indexOf(n) + 1, e = Ni.length; i < e; ++i)
    if (zl[Ni[i]].common) return Ni[i];
}
function Lg(n, i, e) {
  if (!e) n[i] = !0;
  else if (e.length) {
    let { lo: t, hi: o } = bl(e, i),
      r = e[t] >= i ? e[t] : e[o];
    n[r] = !0;
  }
}
function _w(n, i, e, t) {
  let o = n._adapter,
    r = +o.startOf(i[0].value, t),
    a = i[i.length - 1].value,
    s,
    c;
  for (s = r; s <= a; s = +o.add(s, 1, t))
    (c = e[s]), c >= 0 && (i[c].major = !0);
  return i;
}
function Bg(n, i, e) {
  let t = [],
    o = {},
    r = i.length,
    a,
    s;
  for (a = 0; a < r; ++a)
    (s = i[a]), (o[s] = a), t.push({ value: s, major: !1 });
  return r === 0 || !e ? t : _w(n, t, o, e);
}
var Bu = (() => {
  class n extends ir {
    static id = "time";
    static defaults = {
      bounds: "data",
      adapters: {},
      time: {
        parser: !1,
        unit: !1,
        round: !1,
        isoWeekday: !1,
        minUnit: "millisecond",
        displayFormats: {},
      },
      ticks: { source: "auto", callback: !1, major: { enabled: !1 } },
    };
    constructor(e) {
      super(e),
        (this._cache = { data: [], labels: [], all: [] }),
        (this._unit = "day"),
        (this._majorUnit = void 0),
        (this._offsets = {}),
        (this._normalized = !1),
        (this._parseOpts = void 0);
    }
    init(e, t = {}) {
      let o = e.time || (e.time = {}),
        r = (this._adapter = new Py._date(e.adapters.date));
      r.init(t),
        Nr(o.displayFormats, r.formats()),
        (this._parseOpts = {
          parser: o.parser,
          round: o.round,
          isoWeekday: o.isoWeekday,
        }),
        super.init(e),
        (this._normalized = t.normalized);
    }
    parse(e, t) {
      return e === void 0 ? null : Ng(this, e);
    }
    beforeLayout() {
      super.beforeLayout(), (this._cache = { data: [], labels: [], all: [] });
    }
    determineDataLimits() {
      let e = this.options,
        t = this._adapter,
        o = e.time.unit || "day",
        { min: r, max: a, minDefined: s, maxDefined: c } = this.getUserBounds();
      function p(f) {
        !s && !isNaN(f.min) && (r = Math.min(r, f.min)),
          !c && !isNaN(f.max) && (a = Math.max(a, f.max));
      }
      (!s || !c) &&
        (p(this._getLabelBounds()),
        (e.bounds !== "ticks" || e.ticks.source !== "labels") &&
          p(this.getMinMax(!1))),
        (r = It(r) && !isNaN(r) ? r : +t.startOf(Date.now(), o)),
        (a = It(a) && !isNaN(a) ? a : +t.endOf(Date.now(), o) + 1),
        (this.min = Math.min(r, a - 1)),
        (this.max = Math.max(r + 1, a));
    }
    _getLabelBounds() {
      let e = this.getLabelTimestamps(),
        t = Number.POSITIVE_INFINITY,
        o = Number.NEGATIVE_INFINITY;
      return (
        e.length && ((t = e[0]), (o = e[e.length - 1])), { min: t, max: o }
      );
    }
    buildTicks() {
      let e = this.options,
        t = e.time,
        o = e.ticks,
        r =
          o.source === "labels" ? this.getLabelTimestamps() : this._generate();
      e.bounds === "ticks" &&
        r.length &&
        ((this.min = this._userMin || r[0]),
        (this.max = this._userMax || r[r.length - 1]));
      let a = this.min,
        s = this.max,
        c = vf(r, a, s);
      return (
        (this._unit =
          t.unit ||
          (o.autoSkip
            ? Vg(t.minUnit, this.min, this.max, this._getLabelCapacity(a))
            : fw(this, c.length, t.minUnit, this.min, this.max))),
        (this._majorUnit =
          !o.major.enabled || this._unit === "year" ? void 0 : gw(this._unit)),
        this.initOffsets(r),
        e.reverse && c.reverse(),
        Bg(this, c, this._majorUnit)
      );
    }
    afterAutoSkip() {
      this.options.offsetAfterAutoskip &&
        this.initOffsets(this.ticks.map((e) => +e.value));
    }
    initOffsets(e = []) {
      let t = 0,
        o = 0,
        r,
        a;
      this.options.offset &&
        e.length &&
        ((r = this.getDecimalForValue(e[0])),
        e.length === 1
          ? (t = 1 - r)
          : (t = (this.getDecimalForValue(e[1]) - r) / 2),
        (a = this.getDecimalForValue(e[e.length - 1])),
        e.length === 1
          ? (o = a)
          : (o = (a - this.getDecimalForValue(e[e.length - 2])) / 2));
      let s = e.length < 3 ? 0.5 : 0.25;
      (t = Zt(t, 0, s)),
        (o = Zt(o, 0, s)),
        (this._offsets = { start: t, end: o, factor: 1 / (t + 1 + o) });
    }
    _generate() {
      let e = this._adapter,
        t = this.min,
        o = this.max,
        r = this.options,
        a = r.time,
        s = a.unit || Vg(a.minUnit, t, o, this._getLabelCapacity(t)),
        c = je(r.ticks.stepSize, 1),
        p = s === "week" ? a.isoWeekday : !1,
        f = Zo(p) || p === !0,
        y = {},
        x = t,
        C,
        M;
      if (
        (f && (x = +e.startOf(x, "isoWeek", p)),
        (x = +e.startOf(x, f ? "day" : s)),
        e.diff(o, t, s) > 1e5 * c)
      )
        throw new Error(
          t + " and " + o + " are too far apart with stepSize of " + c + " " + s
        );
      let k = r.ticks.source === "data" && this.getDataTimestamps();
      for (C = x, M = 0; C < o; C = +e.add(C, c, s), M++) Lg(y, C, k);
      return (
        (C === o || r.bounds === "ticks" || M === 1) && Lg(y, C, k),
        Object.keys(y)
          .sort(Fg)
          .map((O) => +O)
      );
    }
    getLabelForValue(e) {
      let t = this._adapter,
        o = this.options.time;
      return o.tooltipFormat
        ? t.format(e, o.tooltipFormat)
        : t.format(e, o.displayFormats.datetime);
    }
    format(e, t) {
      let r = this.options.time.displayFormats,
        a = this._unit,
        s = t || r[a];
      return this._adapter.format(e, s);
    }
    _tickFormatFunction(e, t, o, r) {
      let a = this.options,
        s = a.ticks.callback;
      if (s) return mt(s, [e, t, o], this);
      let c = a.time.displayFormats,
        p = this._unit,
        f = this._majorUnit,
        y = p && c[p],
        x = f && c[f],
        C = o[t],
        M = f && x && C && C.major;
      return this._adapter.format(e, r || (M ? x : y));
    }
    generateTickLabels(e) {
      let t, o, r;
      for (t = 0, o = e.length; t < o; ++t)
        (r = e[t]), (r.label = this._tickFormatFunction(r.value, t, e));
    }
    getDecimalForValue(e) {
      return e === null ? NaN : (e - this.min) / (this.max - this.min);
    }
    getPixelForValue(e) {
      let t = this._offsets,
        o = this.getDecimalForValue(e);
      return this.getPixelForDecimal((t.start + o) * t.factor);
    }
    getValueForPixel(e) {
      let t = this._offsets,
        o = this.getDecimalForPixel(e) / t.factor - t.end;
      return this.min + o * (this.max - this.min);
    }
    _getLabelSize(e) {
      let t = this.options.ticks,
        o = this.ctx.measureText(e).width,
        r = en(this.isHorizontal() ? t.maxRotation : t.minRotation),
        a = Math.cos(r),
        s = Math.sin(r),
        c = this._resolveTickFontOptions(0).size;
      return { w: o * a + c * s, h: o * s + c * a };
    }
    _getLabelCapacity(e) {
      let t = this.options.time,
        o = t.displayFormats,
        r = o[t.unit] || o.millisecond,
        a = this._tickFormatFunction(e, 0, Bg(this, [e], this._majorUnit), r),
        s = this._getLabelSize(a),
        c =
          Math.floor(
            this.isHorizontal() ? this.width / s.w : this.height / s.h
          ) - 1;
      return c > 0 ? c : 1;
    }
    getDataTimestamps() {
      let e = this._cache.data || [],
        t,
        o;
      if (e.length) return e;
      let r = this.getMatchingVisibleMetas();
      if (this._normalized && r.length)
        return (this._cache.data = r[0].controller.getAllParsedValues(this));
      for (t = 0, o = r.length; t < o; ++t)
        e = e.concat(r[t].controller.getAllParsedValues(this));
      return (this._cache.data = this.normalize(e));
    }
    getLabelTimestamps() {
      let e = this._cache.labels || [],
        t,
        o;
      if (e.length) return e;
      let r = this.getLabels();
      for (t = 0, o = r.length; t < o; ++t) e.push(Ng(this, r[t]));
      return (this._cache.labels = this._normalized ? e : this.normalize(e));
    }
    normalize(e) {
      return Ud(e.sort(Fg));
    }
  }
  return n;
})();
function Pl(n, i, e) {
  let t = 0,
    o = n.length - 1,
    r,
    a,
    s,
    c;
  e
    ? (i >= n[t].pos && i <= n[o].pos && ({ lo: t, hi: o } = Pn(n, "pos", i)),
      ({ pos: r, time: s } = n[t]),
      ({ pos: a, time: c } = n[o]))
    : (i >= n[t].time &&
        i <= n[o].time &&
        ({ lo: t, hi: o } = Pn(n, "time", i)),
      ({ time: r, pos: s } = n[t]),
      ({ time: a, pos: c } = n[o]));
  let p = a - r;
  return p ? s + ((c - s) * (i - r)) / p : s;
}
var Hu = class extends Bu {
    static id = "timeseries";
    static defaults = Bu.defaults;
    constructor(i) {
      super(i),
        (this._table = []),
        (this._minPos = void 0),
        (this._tableRange = void 0);
    }
    initOffsets() {
      let i = this._getTimestampsForTable(),
        e = (this._table = this.buildLookupTable(i));
      (this._minPos = Pl(e, this.min)),
        (this._tableRange = Pl(e, this.max) - this._minPos),
        super.initOffsets(i);
    }
    buildLookupTable(i) {
      let { min: e, max: t } = this,
        o = [],
        r = [],
        a,
        s,
        c,
        p,
        f;
      for (a = 0, s = i.length; a < s; ++a)
        (p = i[a]), p >= e && p <= t && o.push(p);
      if (o.length < 2)
        return [
          { time: e, pos: 0 },
          { time: t, pos: 1 },
        ];
      for (a = 0, s = o.length; a < s; ++a)
        (f = o[a + 1]),
          (c = o[a - 1]),
          (p = o[a]),
          Math.round((f + c) / 2) !== p &&
            r.push({ time: p, pos: a / (s - 1) });
      return r;
    }
    _generate() {
      let i = this.min,
        e = this.max,
        t = super.getDataTimestamps();
      return (
        (!t.includes(i) || !t.length) && t.splice(0, 0, i),
        (!t.includes(e) || t.length === 1) && t.push(e),
        t.sort((o, r) => o - r)
      );
    }
    _getTimestampsForTable() {
      let i = this._cache.all || [];
      if (i.length) return i;
      let e = this.getDataTimestamps(),
        t = this.getLabelTimestamps();
      return (
        e.length && t.length
          ? (i = this.normalize(e.concat(t)))
          : (i = e.length ? e : t),
        (i = this._cache.all = i),
        i
      );
    }
    getDecimalForValue(i) {
      return (Pl(this._table, i) - this._minPos) / this._tableRange;
    }
    getValueForPixel(i) {
      let e = this._offsets,
        t = this.getDecimalForPixel(i) / e.factor - e.end;
      return Pl(this._table, t * this._tableRange + this._minPos, !0);
    }
  },
  bw = Object.freeze({
    __proto__: null,
    CategoryScale: Gu,
    LinearScale: Qa,
    LogarithmicScale: Nu,
    RadialLinearScale: Lu,
    TimeScale: Bu,
    TimeSeriesScale: Hu,
  }),
  s_ = [Iy, iC, KC, bw];
var Yu = class {
  constructor() {
    (this.class = ""),
      (this.backgroundGradient = !1),
      (this.backgroundColor = "transparent"),
      (this.backgroundGradientStopColor = "transparent"),
      (this.backgroundOpacity = 1),
      (this.backgroundStroke = "transparent"),
      (this.backgroundStrokeWidth = 0),
      (this.backgroundPadding = 5),
      (this.percent = 0),
      (this.radius = 90),
      (this.space = 4),
      (this.toFixed = 0),
      (this.maxPercent = 1e3),
      (this.renderOnClick = !0),
      (this.units = "%"),
      (this.unitsFontSize = "10"),
      (this.unitsFontWeight = "normal"),
      (this.unitsColor = "#444444"),
      (this.outerStrokeGradient = !1),
      (this.outerStrokeWidth = 8),
      (this.outerStrokeColor = "#78C000"),
      (this.outerStrokeGradientStopColor = "transparent"),
      (this.outerStrokeLinecap = "round"),
      (this.innerStrokeColor = "#C7E596"),
      (this.innerStrokeWidth = 4),
      (this.titleFormat = void 0),
      (this.title = "auto"),
      (this.titleColor = "#444444"),
      (this.titleFontSize = "20"),
      (this.titleFontWeight = "normal"),
      (this.subtitleFormat = void 0),
      (this.subtitle = "progress"),
      (this.subtitleColor = "#A9A9A9"),
      (this.subtitleFontSize = "10"),
      (this.subtitleFontWeight = "normal"),
      (this.imageSrc = void 0),
      (this.imageHeight = 0),
      (this.imageWidth = 0),
      (this.animation = !0),
      (this.animateTitle = !0),
      (this.animateSubtitle = !1),
      (this.animationDuration = 500),
      (this.showTitle = !0),
      (this.showSubtitle = !0),
      (this.showUnits = !0),
      (this.showImage = !1),
      (this.showBackground = !0),
      (this.showInnerStroke = !0),
      (this.clockwise = !0),
      (this.responsive = !1),
      (this.startFromZero = !0),
      (this.showZeroOuterStroke = !0),
      (this.lazy = !1);
  }
};
var l_ = (() => {
  class n {
    static forRoot(e = {}) {
      return { ngModule: n, providers: [{ provide: Yu, useValue: e }] };
    }
  }
  return (
    (n.ɵfac = function (e) {
      return new (e || n)();
    }),
    (n.ɵmod = De({ type: n })),
    (n.ɵinj = we({ imports: [ke] })),
    n
  );
})();
var Ul = class n {
  constructor(i) {
    this.http = i;
  }
  baseUrl = "https://uat.smartassistapp.in/api/
superAdmin/dashboard";
  getDealerActivities(i) {
    let e = sessionStorage.getItem("token"),
      t = new Kt({ Authorization: `Bearer ${e}` }),
      o = `${this.baseUrl}/NoSM?type=${i}`;
    return this.http.get(o, { headers: t });
  }
  getDealerActivitiesCustom(i, e, t) {
    let o = sessionStorage.getItem("token"),
      r = new Kt({ Authorization: `Bearer ${o}` }),
      a = t || "MTD",
      s = `${this.baseUrl}/NoSM?type=${a}&start_date=${i}&end_date=${e}`;
    return this.http.get(s, { headers: r });
  }
  getNoSMUsers(i, e = "MTD") {
    let t = sessionStorage.getItem("token"),
      o = new Kt({ Authorization: `Bearer ${t}` });
    return this.http.get(`${this.baseUrl}/NoSM?dealer_id=${i}&type=${e}`, {
      headers: o,
    });
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(ti));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var qu = (n) => ({ active: n }),
  yw = () => [];
function xw(n, i) {
  if (
    (n & 1 && (u(0, "span", 10), m(1), Da(2, "date"), Da(3, "date"), d()),
    n & 2)
  ) {
    let e = E();
    g(),
      wa(
        " Showing data from ",
        hd(2, 2, e.appliedStartDate, "shortDate"),
        " to ",
        hd(3, 5, e.appliedEndDate, "shortDate"),
        " "
      );
  }
}
function Cw(n, i) {
  if ((n & 1 && (u(0, "tr", 22)(1, "td", 23), m(2), d()()), n & 2)) {
    let e = E(2).$implicit;
    g(2), oe(" Users for ", e.dealer_name, " ");
  }
}
function ww(n, i) {
  if (
    (n & 1 &&
      (u(0, "tr")(1, "td", 24),
      m(2),
      d(),
      u(3, "td", 25),
      m(4),
      d(),
      u(5, "td", 25),
      m(6),
      d(),
      u(7, "td", 25),
      m(8),
      d(),
      u(9, "td", 25),
      m(10),
      d(),
      u(11, "td", 26),
      m(12),
      d(),
      u(13, "td", 25),
      m(14),
      d(),
      u(15, "td", 25),
      m(16),
      d(),
      u(17, "td", 25),
      m(18),
      d(),
      u(19, "td", 25),
      m(20),
      d(),
      u(21, "td", 25),
      m(22),
      d(),
      u(23, "td", 25),
      m(24),
      d(),
      u(25, "td", 25),
      m(26),
      d(),
      u(27, "td", 26),
      m(28),
      d(),
      u(29, "td", 25),
      m(30),
      d(),
      u(31, "td"),
      m(32, "-"),
      d(),
      u(33, "td"),
      m(34, "-"),
      d(),
      W(35, "td"),
      d()),
    n & 2)
  ) {
    let e = i.$implicit;
    g(2),
      B(e.user_name),
      g(2),
      B(e.enquiries),
      g(2),
      B(e.testDrives),
      g(2),
      B(e.orders),
      g(2),
      B(e.net_orders),
      g(2),
      B(e.lostEnquiries),
      g(2),
      B(e.retail),
      g(2),
      B(e.cancellations),
      g(2),
      B(e.upComingFollowups),
      g(2),
      B(e.overdueFollowups),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.outgoing),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.incoming),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.connected),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.declined),
      g(2),
      B((e.callLogs == null ? null : e.callLogs.duration) || "-");
  }
}
function Dw(n, i) {
  if ((n & 1 && (u(0, "tr")(1, "td", 27), m(2), d()()), n & 2)) {
    let e = E(2).$implicit;
    g(2), oe(" No users found for ", e.dealer_name, ". ");
  }
}
function Sw(n, i) {
  if (
    (n & 1 &&
      ($e(0),
      F(1, Cw, 3, 1, "tr", 20)(2, ww, 36, 15, "tr", 21)(3, Dw, 3, 1, "tr", 19),
      Ge()),
    n & 2)
  ) {
    let e = E().$implicit,
      t = E(2);
    g(),
      S("ngIf", (t.dealerUsers[e.dealer_id] || ui(3, yw)).length > 0),
      g(),
      S("ngForOf", t.dealerUsers[e.dealer_id]),
      g(),
      S(
        "ngIf",
        t.dealerUsers[e.dealer_id] && t.dealerUsers[e.dealer_id].length === 0
      );
  }
}
function Mw(n, i) {
  if (n & 1) {
    let e = ce();
    $e(0),
      u(1, "tr")(2, "td", 15),
      m(3),
      d(),
      u(4, "td"),
      m(5),
      d(),
      u(6, "td"),
      m(7),
      d(),
      u(8, "td"),
      m(9),
      d(),
      u(10, "td"),
      m(11),
      d(),
      u(12, "td"),
      m(13),
      d(),
      u(14, "td"),
      m(15),
      d(),
      u(16, "td"),
      m(17),
      d(),
      u(18, "td", 16),
      m(19),
      d(),
      u(20, "td"),
      m(21),
      d(),
      u(22, "td"),
      m(23),
      d(),
      u(24, "td"),
      m(25),
      d(),
      u(26, "td"),
      m(27),
      d(),
      u(28, "td"),
      m(29),
      d(),
      u(30, "td"),
      m(31),
      d(),
      u(32, "td"),
      m(33),
      d(),
      u(34, "td", 16),
      m(35),
      d(),
      u(36, "td"),
      m(37),
      d(),
      u(38, "td"),
      m(39),
      d(),
      u(40, "td"),
      m(41),
      d(),
      u(42, "td")(43, "button", 17),
      z("click", function () {
        let o = N(e),
          r = o.$implicit,
          a = o.index,
          s = E(2);
        return V(s.toggleDetails(a, r));
      }),
      W(44, "i", 18),
      d()()(),
      F(45, Sw, 4, 4, "ng-container", 19),
      Ge();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      o = E(2);
    g(3),
      B(e.dealer_name),
      g(2),
      B(e.enquiries),
      g(2),
      B(e.testDrives),
      g(2),
      B(e.upComingTestDrives),
      g(2),
      B(e.overdueTestDrives),
      g(2),
      B(e.completedTestDrives),
      g(2),
      B(e.orders),
      g(2),
      B(e.net_orders),
      g(2),
      B(e.lostEnquiries),
      g(2),
      B(e.retail),
      g(2),
      B(e.cancellations),
      g(2),
      B(e.upComingFollowups),
      g(2),
      B(e.overdueFollowups),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.outgoing),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.incoming),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.connected),
      g(2),
      B(e.callLogs == null ? null : e.callLogs.declined),
      g(2),
      B((e.callLogs == null ? null : e.callLogs.duration) || "-"),
      g(2),
      B(e.totalUsersCount),
      g(2),
      B(e.activeUsersCount),
      g(3),
      S("ngClass", o.expandedRow === t ? "fa-minus" : "fa-plus"),
      g(),
      S("ngIf", o.expandedRow === t);
  }
}
function Ew(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 28)(1, "button", 29),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.toggleShow());
      }),
      m(2),
      d()();
  }
  if (n & 2) {
    let e = E(2);
    g(2), oe(" ", e.showButtonText, " ");
  }
}
function Tw(n, i) {
  n & 1 &&
    (u(0, "div", 28),
    m(
      1,
      ` No dealers found.
`
    ),
    d());
}
function kw(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 11)(1, "table", 12)(2, "thead")(3, "tr")(4, "th"),
      m(5, "Dealer name"),
      d(),
      u(6, "th"),
      m(7, "Enquiries"),
      d(),
      u(8, "th"),
      m(9, "Test Drives"),
      d(),
      u(10, "th"),
      m(11, "Upcoming Test Drives"),
      d(),
      u(12, "th"),
      m(13, "Overdue Test Drives"),
      d(),
      u(14, "th"),
      m(15, "Completed Test Drives"),
      d(),
      u(16, "th"),
      m(17, "Orders"),
      d(),
      u(18, "th"),
      m(19, "Net orders"),
      d(),
      u(20, "th"),
      m(21, "Lost leads"),
      d(),
      u(22, "th"),
      m(23, "Retail"),
      d(),
      u(24, "th"),
      m(25, "Cancellations"),
      d(),
      u(26, "th"),
      m(27, "Upcoming Followups"),
      d(),
      u(28, "th"),
      m(29, "Overdue Followups"),
      d(),
      u(30, "th"),
      m(31, "Outgoing"),
      d(),
      u(32, "th"),
      m(33, "Incoming"),
      d(),
      u(34, "th"),
      m(35, "Connected"),
      d(),
      u(36, "th"),
      m(37, "Declined"),
      d(),
      u(38, "th"),
      m(39, "Duration"),
      d(),
      u(40, "th"),
      m(41, "Total user"),
      d(),
      u(42, "th"),
      m(43, "Active user"),
      d(),
      W(44, "th"),
      d()(),
      u(45, "tbody"),
      F(46, Mw, 46, 22, "ng-container", 13),
      d()(),
      F(47, Ew, 3, 1, "div", 14)(48, Tw, 2, 0, "div", 14),
      d()),
    n & 2)
  ) {
    let e = E();
    g(46),
      S("ngForOf", e.paginatedDealers)("ngForTrackBy", e.trackByDealerId),
      g(),
      S("ngIf", e.dealers.length > e.itemsPerPage),
      g(),
      S("ngIf", e.paginatedDealers.length === 0);
  }
}
nr.register(...s_);
nr.register(zu, Gr, Uu, Qa, Wu, Gu, $u);
var Wl = class n {
  constructor(i, e, t, o, r) {
    this.http = i;
    this.cdr = e;
    this.context = t;
    this.router = o;
    this.dashboardService = r;
  }
  dashboardMetrics = {
    totalLeads: 0,
    totalTestDrives: 0,
    totalOrders: 0,
    lostLeads: 0,
    cancellations: 0,
    netOrders: 0,
    retail: 0,
  };
  currentPageMap = {};
  showAllSMs = {};
  totalLeads = pe(0);
  totalTestDrives = pe(0);
  totalOrders = pe(0);
  prevLeads = pe(0);
  prevTestDrives = pe(0);
  prevOrders = pe(0);
  selectedOption = "leads-MTD";
  testDrives = 0;
  displayedData = [];
  filteredData = [];
  mtdTestDrives = pe(0);
  qtdTestDrives = pe(0);
  hoveredSM = null;
  loading = !1;
  selectedDealer = null;
  ps1Data = [];
  ps2Data = [];
  pageSize = 20;
  selectedSection = "analysis";
  ytdTestDrives = pe(0);
  loadingSM = !1;
  psData = {};
  showDetails = !1;
  paginatedDealers = [];
  dealerUsers = {};
  mtdOrders = pe(0);
  qtdOrders = pe(0);
  ytdOrders = pe(0);
  selectedFilter = "MTD";
  dealerColors = ["#e6f2ff", "#f9f2ec", "#eaf7ea", "#f3e8ff"];
  appliedStartDate = null;
  appliedEndDate = null;
  mtdLeads = pe(0);
  qtdLeads = pe(0);
  currentLeads = 0;
  previousLeads = 0;
  changeLeads = 0;
  testDriveChange = 0;
  testDriveProgressValue = 0;
  testDriveStrokeColor = "#4CAF50";
  selectedCategory = "leads";
  selectedDuration = "MTD";
  orderChange = 0;
  orderProgressValue = 0;
  loadingPS = !1;
  activeAccordion = null;
  showAll = !1;
  orderStrokeColor = "#4CAF50";
  currentTestDrives = 0;
  previousTestDrives = 0;
  selectedDealerId = null;
  dealerSMS = {};
  salesManagers = {};
  loadingSMs = {};
  expandedRow = null;
  Math = Math;
  itemsPerPagedeal = 10;
  currentDisplayCount;
  orders = 0;
  currentOrders = 0;
  previousOrders = 0;
  ytdLeads = pe(0);
  selectedPeriod = "MTD";
  dashboardData = {};
  leads = 0;
  selectedSM = null;
  isSidebarOpen = !0;
  paginatedDealerskpis = [];
  currentIndex = 0;
  currentDealerPage = 1;
  dealersPerPage = 5;
  expandedItems = {};
  filterOptions = ["MTD", "QTD", "YTD"];
  expandedRows = [!1, !1, !1, !1, !1, !1];
  showMoreActive = !1;
  rankings = {};
  sidebarTestDrives = pe(0);
  sidebarOrders = pe(0);
  sidebarLeads = pe(0);
  pieChartInstance;
  leadsData = {};
  chart;
  miniChart;
  hoveredPS = null;
  activeDealer = null;
  activeSM = null;
  activePS = null;
  incrementSize = 10;
  graphPath = "";
  leadsChange = 0;
  testDrivesChange = 0;
  ordersChange = 0;
  change = 0;
  doughnutChart;
  animatedValue = 0;
  itemsPerPage = 10;
  currentPage = 1;
  paginatedData = [];
  activeFilter = "MTD";
  dealers = [];
  currentdealerPage = 1;
  itemsPerdealerPage = 5;
  maxValue = 0;
  selectedFilterPS = "MTD";
  customStartDate = null;
  customEndDate = null;
  changeDisplay = 0;
  progressValue = 0;
  strokeColor = "red";
  data;
  apiUrl = "https://uat.smartassistapp.in/api/
superAdmin/dashbaordNew";
  ngOnInit() {
    (this.currentDisplayCount = this.itemsPerPage),
      this.loadInitialDealers(),
      (this.selectedFilter = "MTD"),
      this.fetchDealers(this.selectedFilter),
      this.fetchSuperAdminDashboard("MTD"),
      this.fetchDashboardDataForTopCards(this.selectedFilter),
      this.onDropdownChange(),
      this.context.onSideBarClick$.next({
        role: "dashboard",
        pageTitle: "Dashboard",
      }),
      (this.selectedFilter = "MTD"),
      this.fetchDashboardData("MTD"),
      this.applyFilter(this.selectedFilter),
      setTimeout(() => {
        this.animatedValue = this.progressValue;
      }, 100);
  }
  initializeDisplay() {
    (this.currentDisplayCount = this.itemsPerPage),
      this.updatePaginatedDealers();
  }
  toggleShow() {
    this.currentDisplayCount >= this.dealers.length
      ? (this.currentDisplayCount = this.itemsPerPage)
      : (this.currentDisplayCount = Math.min(
          this.dealers.length,
          this.currentDisplayCount + this.incrementSize
        )),
      this.updatePaginatedDealers();
  }
  get canShowMore() {
    return this.currentDisplayCount < this.dealers.length;
  }
  get canShowLess() {
    return this.currentDisplayCount > this.itemsPerPage;
  }
  get isShowingAll() {
    return this.currentDisplayCount >= this.dealers.length;
  }
  get showButtonText() {
    return this.currentDisplayCount >= this.dealers.length
      ? "Show Less"
      : "Show More";
  }
  toggleExpand(i) {
    (this.expandedRows[i] = !this.expandedRows[i]),
      console.log(`Order ${i + 1} expanded:`, this.expandedRows[i]);
  }
  getStrokeColor(i) {
    let e = Number(i);
    return e > 0 ? "#4CAF50" : e < 0 ? "#F44336" : "#9E9E9E";
  }
  getDealerBackground(i) {
    let e = [
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
      "linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)",
      "linear-gradient(135deg, #fa709a 0%, #fee140 100%)",
      "linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)",
      "linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)",
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
    ];
    return e[i % e.length];
  }
  ngAfterViewInit() {
    this.totalTestDrives() &&
      this.totalOrders() &&
      this.createDoughnutChart(this.totalTestDrives(), this.totalOrders()),
      this.initLineChart();
  }
  onFilterClick(i) {}
  toggleShowAllSMs(i) {
    this.showAllSMs[i] = !this.showAllSMs[i];
  }
  onFilterChange(i) {
    (this.selectedFilter = i), this.fetchDealers(i);
    let e = this.activeSM;
    (this.selectedFilter = i),
      this.fetchDashboardDataForTopCards(i),
      this.fetchSuperAdminDashboard(i),
      this.selectedDealerId &&
        (this.fetchDealerSMs(this.selectedDealerId, i),
        (this.dealerSMS[this.selectedDealerId] || []).some((o) => o.sm_id === e)
          ? (this.activeSM = e)
          : (this.activeSM = null));
  }
  fetchDealerSMs(i, e, t) {
    let o = sessionStorage.getItem("token");
    if (!o) return;
    let r = new Kt({ Authorization: `Bearer ${o}` }),
      a = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/NoSM?dealer_id=${i}&type=${e}`;
    this.http.get(a, { headers: r }).subscribe({
      next: (s) => {
        (this.dealerSMS[i] =
          s?.status === 200 && s.data?.dealers?.[0]?.user_list
            ? s.data.dealers[0].user_list
            : []),
          t && this.dealerSMS[i].some((c) => c.user_id === t)
            ? (this.activeSM = t)
            : (this.activeSM = null);
      },
      error: (s) => {
        console.error("Failed to fetch SM data:", s),
          (this.dealerSMS[i] = []),
          (this.activeSM = null);
      },
    });
  }
  fetchPS(i, e) {
    let t = sessionStorage.getItem("token");
    if (!t) return;
    let o = new Kt({ Authorization: `Bearer ${t}` }),
      r = `https://uat.smartassistapp.in/api/
superAdmin/dashbaordNew?type=${this.selectedFilter}&dealer_id=${e}&sm_id=${i}`;
    this.http.get(r, { headers: o }).subscribe({
      next: (a) => {
        this.psData[i] = a?.data?.ps || [];
      },
      error: (a) => {
        console.error("Failed to fetch PS data:", a), (this.psData[i] = []);
      },
    });
  }
  toggleDetails(i, e) {
    if (this.expandedRow === i) {
      this.expandedRow = null;
      return;
    }
    (this.expandedRow = i),
      this.dealerUsers[e.dealer_id] ||
        this.dashboardService.getNoSMUsers(e.dealer_id, "MTD").subscribe({
          next: (t) => {
            if (t.status === 200) {
              let o = t.data?.dealers?.[0]?.user_list || [];
              this.dealerUsers[e.dealer_id] = o;
            } else this.dealerUsers[e.dealer_id] = [];
          },
          error: () => {
            this.dealerUsers[e.dealer_id] = [];
          },
        });
  }
  updateProgressAndColor(i) {
    (this.changeDisplay = i),
      (this.progressValue = this.getProgressFromChange(i)),
      (this.strokeColor = this.getStrokeColor(i)),
      this.cdr.detectChanges();
  }
  selectSection(i) {
    this.selectedSection = i;
  }
  getProgressFromChange(i) {
    return Math.min((Math.abs(i) / 500) * 100, 100);
  }
  isDealerDataAvailable(i) {
    return i?.dealer_id && this.dealerSMS[i.dealer_id]?.length > 0;
  }
  getDashOffset(i) {
    return 100 - i;
  }
  get totalDealerPages() {
    return Math.ceil(this.dealers.length / this.itemsPerdealerPage);
  }
  goToPage(i) {
    i >= 1 && i <= this.totalDealerPages && (this.currentdealerPage = i);
  }
  getShowingRange() {
    let i = (this.currentdealerPage - 1) * this.itemsPerdealerPage + 1,
      e = Math.min(
        this.currentdealerPage * this.itemsPerdealerPage,
        this.dealers.length
      );
    return `Showing ${i} \u2013 ${e} of ${this.dealers.length} dealers`;
  }
  goBack() {
    (this.selectedSM = null),
      (this.selectedDealer = null),
      (this.selectedDealerId = null);
  }
  getDealerColor(i) {
    return this.dealerColors[i % this.dealerColors.length];
  }
  toggleAccordion(i) {
    this.activeAccordion === i
      ? (this.activeAccordion = null)
      : (this.activeAccordion = i);
  }
  toggleDealer(i) {
    this.activeDealer = this.activeDealer === i ? null : i;
  }
  get totalPagesdealer() {
    return Math.ceil(this.dealers.length / this.dealersPerPage);
  }
  prevPage() {
    this.currentPage > 1 && this.currentPage--;
  }
  get paginatedDealerskpi() {
    let i = (this.currentPage - 1) * this.dealersPerPage;
    return this.dealers.slice(i, i + this.dealersPerPage);
  }
  get startEntry() {
    return (this.currentPage - 1) * this.dealersPerPage + 1;
  }
  get endEntry() {
    return Math.min(
      this.currentPage * this.dealersPerPage,
      this.dealers.length
    );
  }
  nextPage() {
    this.currentPage < this.totalPagesdealer && this.currentPage++;
  }
  applyCustomDateFilter() {
    this.customStartDate && this.customEndDate
      ? ((this.appliedStartDate = this.customStartDate),
        (this.appliedEndDate = this.customEndDate),
        (this.dealers = []),
        (this.paginatedDealers = []),
        (this.expandedRow = null),
        this.dashboardService
          .getDealerActivitiesCustom(
            this.customStartDate,
            this.customEndDate,
            this.selectedFilter
          )
          .subscribe((i) => {
            i.status === 200 &&
              ((this.dealers = i.data.dealers || []),
              (this.currentPage = 1),
              this.paginateDealers(),
              (this.expandedRow = null));
          }))
      : alert("Please select both start and end dates.");
  }
  onPageChange(i) {
    let e = Math.ceil(this.dealers.length / this.itemsPerPage);
    i >= 1 && i <= e && ((this.currentPage = i), this.updatePaginatedDealers());
  }
  toggleSM(i, e) {
    if (this.activeSM === i) (this.activeSM = null), (this.activePS = null);
    else {
      (this.activeSM = i), (this.activePS = null);
      let t = sessionStorage.getItem("token");
      if (!t) return;
      let o = new Kt({ Authorization: `Bearer ${t}` }),
        r = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?dealer_id=${e}&sm_id=${i}&type=${this.selectedFilter}`;
      this.http.get(r, { headers: o }).subscribe({
        next: (a) => {
          let s = a?.data?.dealers?.find((p) => p.dealer_id === e);
          this.dealerSMS[e] = s?.sm_list || [];
          let c = this.dealerSMS[e].find((p) => p.sm_id === i);
          this.psData[i] = c?.ps_list || [];
        },
        error: (a) => {
          console.error("Failed to fetch SMs and PS:", a),
            (this.dealerSMS[e] = []),
            (this.psData[i] = []);
        },
      });
    }
  }
  togglePS(i) {
    this.activePS = this.activePS === i ? null : i;
  }
  onDropdownChange() {
    console.log("Dropdown changed:"),
      console.log("selectedCategory:", this.selectedCategory),
      console.log("selectedDuration:", this.selectedDuration),
      this.selectedCategory && this.selectedDuration
        ? (console.log(
            "\u2705 Both dropdowns selected. Proceeding to fetch data..."
          ),
          (this.selectedOption = `${this.selectedCategory}-${this.selectedDuration}`))
        : console.warn(
            "\u26A0\uFE0F One or both dropdowns not selected. Skipping fetch."
          );
  }
  onSMClick(i) {
    (this.selectedSM = i),
      (this.selectedDealer = null),
      (this.currentPage = 1),
      (this.ps1Data = []),
      this.fetchPS1Data();
  }
  changeDealerPage(i) {
    let e = this.currentDealerPage + i;
    e >= 1 && e <= this.totalDealerPages && this.goToDealerPage(e);
  }
  goToDealerPage(i) {
    i >= 1 &&
      i <= this.totalDealerPages &&
      ((this.currentDealerPage = i),
      this.updateDealerPagination(),
      this.loadDealersForPage(i));
  }
  updateDealerPagination() {
    let i = (this.currentDealerPage - 1) * this.dealersPerPage + 1,
      e = Math.min(this.currentDealerPage * this.dealersPerPage, 23),
      t = document.getElementById("dealer-range");
    t && (t.textContent = `${i}-${e}`),
      document.querySelectorAll(".pagination-btn").forEach((r, a) => {
        r.textContent === "Previous"
          ? (r.disabled = this.currentDealerPage === 1)
          : r.textContent === "Next"
          ? (r.disabled = this.currentDealerPage === this.totalDealerPages)
          : r.textContent &&
            !isNaN(parseInt(r.textContent)) &&
            r.classList.toggle(
              "active",
              parseInt(r.textContent) === this.currentDealerPage
            );
      });
  }
  loadDealersForPage(i) {
    console.log(`Loading dealers for page ${i}`);
    let e = document.querySelectorAll(".accordion.level-1");
    e.forEach((t) => {
      t.style.opacity = "0.5";
    }),
      setTimeout(() => {
        e.forEach((t) => {
          t.style.opacity = "1";
        });
      }, 300);
  }
  changeTablePage(i, e) {
    console.log(`Changing page for ${i} by ${e}`);
  }
  searchDealer(i) {
    console.log("Searching for:", i);
  }
  autoCollapseOthers(i) {
    document.querySelectorAll(".accordion-content.active").forEach((t) => {
      if (t.id !== `content-${i}`) {
        let o = t.id.replace("content-", "toggle-"),
          r = document.getElementById(o);
        r &&
          r.parentElement &&
          (t.classList.remove("active"),
          r.parentElement.classList.remove("active"),
          (r.textContent = "\u25BC"));
      }
    });
  }
  initializeFilters() {
    document.querySelectorAll('select, input[type="date"]').forEach((e) => {
      e.addEventListener("change", (t) => {
        let o = t.target;
        console.log("Filter changed:", o.value),
          this.handleFilterChange(o.value);
      });
    });
  }
  handleFilterChange(i) {
    console.log("Handling filter change:", i);
  }
  onSearchChange(i) {
    let e = i.target;
    this.searchDealer(e.value);
  }
  fetchSuperAdminDashboard(i = "MTD") {
    let e = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/NoSM?type=${i}`,
      t = sessionStorage.getItem("token"),
      o = new Kt({ Authorization: `Bearer ${t}` });
    this.http.get(e, { headers: o }).subscribe({
      next: (r) => {
        if (((this.loading = !1), r?.status === 200)) {
          this.dealers = r.data?.dealers || [];
          let a = r.data?.sms || [];
          (this.dealerSMS = {}),
            a.forEach((s) => {
              let c = s.team_id;
              this.dealerSMS[c] || (this.dealerSMS[c] = []),
                this.dealerSMS[c].push(s);
            }),
            (this.ps1Data = r.data?.ps || []),
            (this.hoveredSM = null),
            console.log("Grouped dealerSMS:", this.dealerSMS);
        } else console.error("Unexpected response format:", r);
      },
      error: (r) => {
        console.error("Super Admin Dashboard API failed:", r);
      },
    });
  }
  fetchDealers(i) {
    this.dashboardService.getDealerActivities(i).subscribe((e) => {
      console.log("API responseeeeeeeeeee:", e),
        e.status === 200
          ? ((this.dealers = e.data.dealers || []),
            console.log("Dealers array:", this.dealers),
            (this.currentPage = 1),
            this.updatePaginatedDealers())
          : ((this.dealers = []), (this.paginatedDealers = []));
    });
  }
  trackByDealerId(i, e) {
    return e.dealer_id;
  }
  updatePaginatedDealers() {
    this.paginatedDealers = this.dealers.slice(0, this.currentDisplayCount);
  }
  toggleDealerSMs(i) {
    if (this.selectedDealerId === i) {
      this.selectedDealerId = null;
      return;
    }
    this.selectedDealerId = i;
    let e = sessionStorage.getItem("token"),
      t = new Kt({ Authorization: `Bearer ${e}` }),
      o = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?dealer_id=${i}&type=${this.selectedFilter}`;
    this.http.get(o, { headers: t }).subscribe({
      next: (r) => {
        let a = r.data.dealers.find((s) => s.dealer_id === i);
        a && a.sm_list
          ? (this.dealerSMS[i] = a.sm_list)
          : (this.dealerSMS[i] = []);
      },
      error: (r) => {
        console.error("Error fetching SMs for dealer:", r),
          (this.dealerSMS[i] = []);
      },
    });
  }
  onDealerClick(i) {
    if (this.selectedDealerId === i) {
      this.selectedDealerId = null;
      return;
    }
    if (((this.selectedDealerId = i), !this.dealerSMS[i])) {
      this.loadingSM = !0;
      let e = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?type=${this.selectedFilter}&dealer_id=${i}`,
        t = sessionStorage.getItem("token"),
        o = new Kt({ Authorization: `Bearer ${t}` });
      this.http.get(e, { headers: o }).subscribe({
        next: (r) => {
          r?.status === 200 && r.data?.sms
            ? (this.dealerSMS[i] = r.data.sms)
            : (this.dealerSMS[i] = []),
            (this.loadingSM = !1);
        },
        error: (r) => {
          console.error("Failed to fetch SM data:", r),
            (this.dealerSMS[i] = []),
            (this.loadingSM = !1);
        },
      });
    }
  }
  avatarColors = [
    { background: "#E2E0F5", color: "#4B3C9B" },
    { background: "#D1F8F2", color: "#008B7F" },
    { background: "#FFD6D6", color: "#C62828" },
    { background: "#D6FFD6", color: "#2E7D32" },
    { background: "#D6E6FF", color: "#2962FF" },
    { background: "#FFE6FF", color: "#AD1457" },
  ];
  getAvatarStyle(i) {
    let e = this.avatarColors[i % this.avatarColors.length];
    return {
      width: "60px",
      height: "60px",
      margin: "0 auto 12px auto",
      borderRadius: "50%",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      fontWeight: "600",
      fontSize: "24px",
      background: e.background,
      color: e.color,
    };
  }
  isLastRow(i) {
    let e = Math.floor(window.innerWidth / 160),
      t = Math.ceil(this.ps1Data.length / e);
    return Math.floor(i / e) + 1 === t;
  }
  getAvatarColor(i) {
    let e = [
      { background: "#E2E0F5", text: "#4B3C9B" },
      { background: "#C4FEFB", text: "#007A78" },
      { background: "#FED1CF", text: "#C9302C" },
      { background: "#E3FFDF", text: "#3E8E41" },
      { background: "#CFDFFE", text: "#2C4DB2" },
      { background: "#FFEDFE", text: "#AF4C96" },
      { background: "#EAD1DC", text: "#9C2550" },
      { background: "#FFF2CC", text: "#B58900" },
      { background: "#D9EAD3", text: "#3B7A2A" },
      { background: "#F4CCCC", text: "#990000" },
      { background: "#F3F3F3", text: "#4D4D4D" },
      { background: "#FFE6F0", text: "#C2185B" },
    ];
    return e[i % e.length];
  }
  onPSCardClick(i) {
    console.log("Clicked PS ID:", i);
  }
  fetchPS1Data() {
    if (!this.selectedSM || !this.selectedDealerId) {
      console.warn("SM or Dealer not selected");
      return;
    }
    this.loadingPS = !0;
    let i = this.selectedFilter,
      e = "https://uat.smartassistapp.in/api/
superAdmin/dashbaordNew",
      t = this.selectedDealerId,
      o = this.selectedSM.sm_id,
      r = `${e}?type=${i}&dealer_id=${t}&sm_id=${o}`,
      a = sessionStorage.getItem("token");
    if (!a) {
      console.error("No token found in sessionStorage"), (this.loadingPS = !1);
      return;
    }
    let s = new Kt().set("Authorization", `Bearer ${a}`);
    this.http.get(r, { headers: s }).subscribe({
      next: (c) => {
        let p = c?.data?.ps;
        Array.isArray(p)
          ? (this.ps1Data = p.map((f) => ({
              ps_id: f.ps_id,
              ps_name: `${f.ps_fname} ${f.ps_lname}`,
              enquiries: f.enquiries,
              testDrives: f.testDrives,
              orders: f.orders,
              cancellations: f.cancellation,
              netOrders: f.net_orders,
              retail: f.retail,
            })))
          : (console.warn("No PS data found in API response"),
            (this.ps1Data = [])),
          (this.loadingPS = !1);
      },
      error: (c) => {
        console.error("Error fetching PS1 data:", c),
          (this.ps1Data = []),
          (this.loadingPS = !1);
      },
    });
  }
  get paginatedPs1Data() {
    let i = (this.currentPage - 1) * this.pageSize,
      e = i + this.pageSize;
    return this.ps1Data.slice(i, e);
  }
  get totalPs1Pages() {
    return Math.ceil(this.ps1Data.length / this.pageSize);
  }
  formatChangeValue(i) {
    return i === 0 || Object.is(i, -0) ? "0%" : i > 0 ? `+${i}%` : `${i}%`;
  }
  getChangeColor(i) {
    return i > 0 ? "text-success" : (i < 0, "text-danger");
  }
  showMore() {
    let i = this.currentIndex + this.itemsPerPage;
    (this.paginatedDealers = this.paginatedDealers.concat(
      this.dealers.slice(this.currentIndex, i)
    )),
      (this.currentIndex = this.paginatedDealers.length);
  }
  fetchDashboardData(i = "MTD") {
    let e = sessionStorage.getItem("token");
    if (!e) {
      console.error("Token not found!");
      return;
    }
    let t = new Kt().set("Authorization", `Bearer ${e}`),
      o = `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?type=${i}`;
    this.http.get(o, { headers: t }).subscribe({
      next: (r) => {
        console.log(`API response for type=${i}:`, r);
        let a = r?.data || {},
          s = (c) =>
            typeof c == "string"
              ? parseFloat(c.replace("%", "").trim())
              : Number(c) || 0;
        if (
          ((this.currentLeads = Number(a.current) || 0),
          (this.previousLeads = Number(a.previous) || 0),
          (this.changeDisplay = s(a.change)),
          (this.currentTestDrives = Number(a.currentTestDrives) || 0),
          (this.previousTestDrives = Number(a.previousTestDrives) || 0),
          (this.testDriveChange = s(a.testDriveChange)),
          (this.currentOrders = Number(a.currentOrders) || 0),
          (this.previousOrders = Number(a.previousOrders) || 0),
          (this.orderChange = s(a.orderChange)),
          (this.progressValue = Math.abs(this.changeDisplay)),
          (this.strokeColor = this.getStrokeColor(this.changeDisplay)),
          (this.testDriveProgressValue = Math.abs(this.testDriveChange)),
          (this.testDriveStrokeColor = this.getStrokeColor(
            this.testDriveChange
          )),
          (this.orderProgressValue = Math.abs(this.orderChange)),
          (this.orderStrokeColor = this.getStrokeColor(this.orderChange)),
          console.log("\u2705 Final Parsed Data:", {
            leads: {
              current: this.currentLeads,
              previous: this.previousLeads,
              change: this.changeDisplay,
            },
            testDrives: {
              current: this.currentTestDrives,
              previous: this.previousTestDrives,
              change: this.testDriveChange,
            },
            orders: {
              current: this.currentOrders,
              previous: this.previousOrders,
              change: this.orderChange,
            },
          }),
          a.kpi)
        ) {
          let c = Number(a.kpi.totalTestDrives) || 0,
            p = Number(a.kpi.totalOrders) || 0;
          (c > 0 || p > 0) &&
            console.log("\u{1F4CA} Creating Doughnut Chart with:", {
              totalTestDrives: c,
              totalOrders: p,
            });
        }
      },
      error: (r) => {
        console.error("Dashboard API error:", r);
      },
    });
  }
  initLineChart() {
    let i = document.getElementById("enquiryLineChart");
    new nr(i, {
      type: "line",
      data: {
        labels: ["Jan", "Feb", "Mar", "Apr"],
        datasets: [
          {
            data: [3, 5, 7, 4],
            borderColor: "#4CAF50",
            tension: 0.4,
            pointRadius: 0,
            borderWidth: 2,
          },
        ],
      },
      options: {
        responsive: !0,
        plugins: { legend: { display: !1 }, tooltip: { enabled: !0 } },
        scales: { x: { display: !1 }, y: { display: !1 } },
      },
    });
  }
  renderChart(i) {
    let e = {
      labels: ["Leads", "Test Drives", "Orders"],
      datasets: [
        {
          label: "MTD Data",
          data: [i.mtdLeads, i.mtdTestDrives, i.mtdOrders],
          backgroundColor: ["#FF5733", "#33FF57", "#3357FF"],
          borderColor: ["#FF5733", "#33FF57", "#3357FF"],
          borderWidth: 1,
        },
      ],
    };
    this.chart = new nr("myColumnChart", {
      type: "bar",
      data: e,
      options: {
        responsive: !0,
        scales: { y: { beginAtZero: !0, ticks: { stepSize: 1 } } },
        plugins: {
          legend: { position: "top" },
          tooltip: { callbacks: { label: (t) => `${t.label}: ${t.raw}` } },
        },
      },
    });
  }
  fetchData() {
    this.http
      .get("https://uat.smartassistapp.in/api/
superAdmin/dashbaordNew")
      .subscribe(
        (i) => {
          console.log("API Response:", i),
            i?.data
              ? ((this.data = i.data),
                console.log("Data after assignment:", this.data))
              : console.error("No data in response:", i);
        },
        (i) => {
          console.error("Error fetching data:", i);
        }
      );
  }
  getLeadChange() {
    return (
      console.log("Data:", this.data),
      console.log("Lead Change:", this.data?.leads?.change),
      this.data?.leads?.change ? this.data.leads.change : 0
    );
  }
  getChangePercentage() {
    return this.data?.leads?.change || 0;
  }
  getLeadPercentageChange() {
    return (
      console.log(this.dashboardData),
      console.log(this.dashboardData?.leads?.change),
      this.dashboardData?.leads?.change || 0
    );
  }
  getPaginatedLogs(i) {
    let e = Array.isArray(i.callLogs) ? i.callLogs : [i.callLogs],
      o = ((this.currentPageMap[i.dealer_id] || 1) - 1) * this.itemsPerPage,
      r = o + this.itemsPerPage;
    return e.slice(o, r);
  }
  getTotalPages(i) {
    let e = Array.isArray(i.callLogs) ? i.callLogs : [i.callLogs];
    return Math.ceil(e.length / this.itemsPerPage);
  }
  changePagesm(i, e) {
    let t = this.dealers.find((r) => r.dealer_id === i);
    if (!t) return;
    let o = this.getTotalPages(t);
    e >= 1 && e <= o && (this.currentPageMap[i] = e);
  }
  updateData(i) {
    switch (this.selectedOption) {
      case "leads":
        this.displayedData = i.rankings.leads;
        break;
      case "testDrives":
        this.displayedData = i.rankings.testDrives;
        break;
      case "orders":
        this.displayedData = i.rankings.orders;
        break;
      default:
        this.displayedData = i.rankings.leads;
    }
    this.maxValue = Math.max(...this.displayedData.map((e) => e.value)) || 1;
  }
  getChangeData(i, e) {
    if (e === 0 && i === 0) return { value: "-0%", color: "text-danger" };
    if (e === 0 && i > 0) return { value: "+100%", color: "text-success" };
    if (e > 0 && i === 0) return { value: "-100%", color: "text-danger" };
    let t = ((i - e) / e) * 100,
      o = Math.round(t);
    return {
      value:
        (t === 0 ? (i < e ? "-" : "") : t > 0 ? "+" : "") + Math.abs(o) + "%",
      color: t > 0 ? "text-success" : t < 0 ? "text-danger" : "text-muted",
    };
  }
  getFilteredLeads() {
    switch (this.selectedPeriod) {
      case "MTD":
      case "QTD":
      case "YTD":
        return this.leads;
      default:
        return this.leads;
    }
  }
  getFilteredTestDrives() {
    switch (this.selectedPeriod) {
      case "MTD":
      case "QTD":
      case "YTD":
        return this.testDrives;
      default:
        return this.testDrives;
    }
  }
  getFilteredOrders() {
    switch (this.selectedPeriod) {
      case "MTD":
      case "QTD":
      case "YTD":
        return this.orders;
      default:
        return this.orders;
    }
  }
  showTooltip() {
    let i = document.querySelector(".tooltip-content");
    i && (i.style.opacity = "1");
  }
  hideTooltip() {
    let i = document.querySelector(".tooltip-content");
    i && (i.style.opacity = "0");
  }
  fetchDashboardDataForTopCards(i) {
    let e = sessionStorage.getItem("token");
    if (!e) {
      console.error("No token found!");
      return;
    }
    let t = new Kt().set("Authorization", `Bearer ${e}`);
    this.http
      .get(
        `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?type=${i}`,
        { headers: t }
      )
      .subscribe(
        (o) => {
          if (o && o.status === 200) {
            let r = o.data?.kpi;
            if (r) {
              this.dashboardMetrics = {
                totalLeads: r.totalLeads || 0,
                totalTestDrives: r.totalTestDrives || 0,
                totalOrders: r.totalOrders || 0,
                lostLeads: r.lostLeads || 0,
                cancellations: r.cancellations || 0,
                netOrders: r.netOrders || 0,
                retail: r.retail || 0,
              };
              let a = this.dashboardMetrics.totalTestDrives,
                s = this.dashboardMetrics.totalOrders;
              setTimeout(() => {
                this.createDoughnutChart(a, s);
              }, 0);
            } else console.warn("No KPI data found in response");
          } else
            console.error("Error fetching data:", o.message || "Unknown error");
        },
        (o) => {
          console.error("Error fetching data:", o);
        }
      );
  }
  fetchDashboardDataForTable(i) {
    let e = sessionStorage.getItem("token");
    if (!e) {
      console.error("No token found!");
      return;
    }
    let t = new Kt().set("Authorization", `Bearer ${e}`);
    this.http
      .get(
        `https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities?type=${i};`,
        { headers: t }
      )
      .subscribe(
        (o) => {
          o && o.status === 200
            ? ((this.displayedData = o.data.tableData || []),
              (this.maxValue =
                Math.max(...this.displayedData.map((r) => r.value)) || 1))
            : console.error("Failed to fetch table data:", o.message);
        },
        (o) => {
          console.error("Fetch error:", o);
        }
      );
  }
  createDoughnutChart(i, e) {
    this.cdr.detectChanges();
    let t = document.getElementById("doughnutChart");
    if (!t) {
      console.error('Canvas element with ID "doughnutChart" not found.');
      return;
    }
    this.doughnutChart &&
      (this.doughnutChart.destroy(), (this.doughnutChart = null));
    let o = t.getContext("2d");
    o?.clearRect(0, 0, t.width, t.height),
      (this.doughnutChart = new nr(o, {
        type: "doughnut",
        data: {
          labels: ["Test Drives", "Orders"],
          datasets: [{ data: [i, e], backgroundColor: ["#1E90FF", "#87CEFA"] }],
        },
        options: {
          responsive: !0,
          maintainAspectRatio: !0,
          plugins: {
            legend: { position: "top" },
            tooltip: {
              callbacks: {
                label: function (r) {
                  let a = r.raw;
                  return `${r.label}: ${a}`;
                },
              },
            },
          },
        },
      }));
  }
  getPercentageChange() {
    if (this.previousLeads === 0) return 100;
    let i = this.currentLeads - this.previousLeads;
    return Math.round((i / this.previousLeads) * 100);
  }
  updatePieChart(i, e) {
    this.pieChartInstance
      ? ((this.pieChartInstance.data.datasets[0].data = [i, e]),
        this.pieChartInstance.update())
      : this.createDoughnutChart(i, e);
  }
  paginateData() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedData = this.displayedData.slice(i, e);
  }
  paginateDealers() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedDealers = [...this.dealers.slice(i, e)];
  }
  getFormattedChange(i) {
    return Object.is(i, -0) ? "-0%" : `${i >= 0 ? "+" : ""}${i}%`;
  }
  getProgressPercentage(i, e) {
    return (i / e) * 100;
  }
  getColor(i) {
    return i <= 3 ? "#28a745" : "#dc3545";
  }
  changePage(i) {
    i < 1 ||
      i > this.totalPages() ||
      ((this.currentPage = i), this.paginateData());
  }
  totalPages() {
    return Math.ceil(this.displayedData.length / this.itemsPerPage);
  }
  getPageNumbers() {
    return Array(this.totalPages())
      .fill(0)
      .map((i, e) => e + 1);
  }
  clearCustomDateFilter() {
    (this.customStartDate = null),
      (this.customEndDate = null),
      (this.appliedStartDate = null),
      (this.appliedEndDate = null),
      this.applyFilter(this.selectedFilter);
  }
  applyFilter(i) {
    this.selectedPeriod = i;
    let e = sessionStorage.getItem("token");
    if (!e) return;
    let t =
      "https://uat.smartassistapp.in/api/
superAdmin/dashboard/view-activities";
    i && i !== "today" && (t += `?type=${i}`);
    let o = { Authorization: `Bearer ${e}` };
    this.http.get(t, { headers: o }).subscribe({
      next: (r) => {
        let a = r.data;
        if (
          ((this.leads = a.leads ?? 0),
          (this.currentLeads = a.current ?? 0),
          (this.previousLeads = a.previous ?? 0),
          (this.changeLeads = a.change ?? 0),
          (this.testDrives = a.testDrives ?? 0),
          (this.currentTestDrives = a.currentTestDrives ?? 0),
          (this.previousTestDrives = a.previousTestDrives ?? 0),
          (this.testDriveChange = a.testDriveChange ?? 0),
          (this.orders = a.orders ?? 0),
          (this.currentOrders = a.currentOrders ?? 0),
          (this.previousOrders = a.previousOrders ?? 0),
          (this.orderChange = a.orderChange ?? 0),
          ["MTD", "QTD", "YTD"].includes(i))
        ) {
          let s = a.totalTestDrives ?? 0,
            c = a.totalOrders ?? 0;
          this.createDoughnutChart(s, c);
        } else
          this.doughnutChart &&
            (this.doughnutChart.destroy(), (this.doughnutChart = null));
        this.cdr.detectChanges();
      },
      error: (r) => {
        console.error("API error:", r);
      },
    });
  }
  loadInitialDealers() {
    (this.paginatedDealers = this.dealers.slice(0, this.itemsPerPage)),
      (this.currentIndex = this.paginatedDealers.length),
      (this.showMoreActive = !1);
  }
  loadTodayData() {
    (this.selectedPeriod = ""), this.applyFilter("today");
  }
  static ɵfac = function (e) {
    return new (e || n)(j(ti), j(it), j(Xi), j(Ti), j(Ul));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-dashboard"]],
    standalone: !0,
    features: [he],
    decls: 19,
    vars: 13,
    consts: [
      [1, "container-fluid"],
      [1, "orders-table-container"],
      [1, "filter-container", "mb-3", "d-flex", "align-items-center"],
      [1, "btn", "filter-btn", "me-2", 3, "click", "ngClass"],
      [1, "btn", "filter-btn", "me-3", 3, "click", "ngClass"],
      [1, "me-2", "mb-0", 2, "margin-left", "10px"],
      [
        "type",
        "date",
        1,
        "form-control",
        "form-control-sm",
        "me-2",
        2,
        "width",
        "120px",
        "display",
        "inline-block",
        "margin-left",
        "10px",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "btn", "btn-sm", 2, "margin-left", "10px", 3, "click"],
      ["class", "ms-3 fw-bold text-primary", 4, "ngIf"],
      ["class", "table-responsive", 4, "ngIf"],
      [1, "ms-3", "fw-bold", "text-primary"],
      [1, "table-responsive"],
      [1, "table", "table-bordered", "table-striped"],
      [4, "ngFor", "ngForOf", "ngForTrackBy"],
      ["class", "text-center mt-3", 4, "ngIf"],
      [2, "text-align", "left"],
      [2, "color", "red"],
      [1, "icon-btn", 3, "click"],
      [1, "fas", 3, "ngClass"],
      [4, "ngIf"],
      ["class", "table-secondary", 4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "table-secondary"],
      ["colspan", "18", 1, "fw-bold", "ps-3"],
      [1, "ps-4", 2, "color", "#222fb9 !important"],
      [2, "color", "#222fb9 !important"],
      [2, "color", "red !important"],
      ["colspan", "18", 1, "text-center", "text-muted"],
      [1, "text-center", "mt-3"],
      [1, "btn", "btn-primary", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "button", 3),
        z("click", function () {
          return t.onFilterChange("MTD");
        }),
        m(4, "MTD"),
        d(),
        u(5, "button", 3),
        z("click", function () {
          return t.onFilterChange("QTD");
        }),
        m(6, "QTD"),
        d(),
        u(7, "button", 4),
        z("click", function () {
          return t.onFilterChange("YTD");
        }),
        m(8, "YTD"),
        d(),
        u(9, "label", 5),
        m(10, "Custom date:"),
        d(),
        u(11, "input", 6),
        Nt("ngModelChange", function (r) {
          return Ft(t.customStartDate, r) || (t.customStartDate = r), r;
        }),
        d(),
        u(12, "input", 6),
        Nt("ngModelChange", function (r) {
          return Ft(t.customEndDate, r) || (t.customEndDate = r), r;
        }),
        d(),
        u(13, "button", 7),
        z("click", function () {
          return t.applyCustomDateFilter();
        }),
        m(14, "Apply"),
        d(),
        u(15, "button", 7),
        z("click", function () {
          return t.clearCustomDateFilter();
        }),
        m(16, "Clear"),
        d(),
        F(17, xw, 4, 8, "span", 8),
        d(),
        F(18, kw, 49, 4, "div", 9),
        d()()),
        e & 2 &&
          (g(3),
          S("ngClass", ye(7, qu, t.selectedFilter === "MTD")),
          g(2),
          S("ngClass", ye(9, qu, t.selectedFilter === "QTD")),
          g(2),
          S("ngClass", ye(11, qu, t.selectedFilter === "YTD")),
          g(4),
          Rt("ngModel", t.customStartDate),
          g(),
          Rt("ngModel", t.customEndDate),
          g(5),
          S("ngIf", t.appliedStartDate && t.appliedEndDate),
          g(),
          S("ngIf", t.paginatedDealers.length > 0));
    },
    dependencies: [ke, Vt, $t, Je, rm, Bs, ct, ni, hi, Hi, l_],
    styles: [
      '.wrapper[_ngcontent-%COMP%]{display:flex}.table-responsive[_ngcontent-%COMP%]{width:80%;overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}.card-header[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;align-items:center}.card-header[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%]{margin-left:10px}.card[_ngcontent-%COMP%]{border-radius:6px!important}.custom-btn[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;border:none;padding:8px 16px;font-size:14px;border-radius:4px;transition:background-color .3s,color .3s}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#007bff;color:#fff}#dataTable[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border:none!important}#doughnutChart[_ngcontent-%COMP%]{max-width:100%;max-height:100%}.progress-circle[_ngcontent-%COMP%]{--size: 50px;--progress: 70%;--color: #28a745;width:var(--size);height:var(--size);border-radius:50%;background:conic-gradient(var(--color) var(--progress),#e6e6e6 0);display:flex;align-items:center;justify-content:center;position:relative}.custom-btn[_ngcontent-%COMP%]{border:none;background-color:#f0f0f0;padding:8px 20px;border-radius:20px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#dcdcdc}.selected-btn[_ngcontent-%COMP%]{background-color:#1e88e5!important;color:#fff!important}.circle-text[_ngcontent-%COMP%]{font-weight:700;color:#333}.position-absolute[_ngcontent-%COMP%]{position:absolute}.circular-chart[_ngcontent-%COMP%]{transition:transform .3s ease}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.5rem;font-weight:700;color:#4caf50;opacity:1}.circular-chart[_ngcontent-%COMP%]   .circle-fill[_ngcontent-%COMP%]{transition:stroke-dasharray 1s ease-out}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.2rem;font-weight:700}.tooltip-content[_ngcontent-%COMP%]{position:absolute;bottom:110%;left:50%;transform:translate(-50%);background-color:#333;color:#fff;padding:6px 10px;border-radius:5px;white-space:nowrap;font-size:13px;z-index:10;opacity:0;pointer-events:none;transition:opacity .3s ease}.tooltip-content[_ngcontent-%COMP%]:after{content:"";position:absolute;top:100%;left:50%;transform:translate(-50%);border-width:5px;border-style:solid;border-color:#333 transparent transparent transparent}.tooltip-container[_ngcontent-%COMP%]:hover   .tooltip-content[_ngcontent-%COMP%]{opacity:1}.no-scrollbar[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch;scrollbar-width:none}.no-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}@media (min-width: 992px) and (max-width: 1250px){.tooltip-container[_ngcontent-%COMP%]{right:15px!important;width:83px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:80px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   .tooltip-content[_ngcontent-%COMP%]{font-size:.85rem}#num[_ngcontent-%COMP%]{right:-53px}.tooltip-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{font-size:1.1rem;padding:10px!important}}@media screen and (width: 1024px) and (height: 1366px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:0!important}}.tooltip-container[_ngcontent-%COMP%]{top:18%}@media screen and (min-width: 1024px) and (max-width: 1366px){#first[_ngcontent-%COMP%]{top:10px!important}#sec[_ngcontent-%COMP%], #third[_ngcontent-%COMP%]{top:49%!important}}.custom-btn[_ngcontent-%COMP%]{background:transparent;border:none;padding:6px 16px;font-weight:500;cursor:pointer;transition:all .2s ease-in-out}.custom-btn[_ngcontent-%COMP%]:hover{color:#222fb9}.selected-btn[_ngcontent-%COMP%]{background:#222fb9;color:#fff;border-radius:6px}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:6px;margin-top:20px;font-family:Poppins,sans-serif}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;background-color:#fff;border:1px solid #d4d4d8;border-radius:6px;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 3px #0000000d}.back-arrow[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:24px;cursor:pointer;color:#333;transition:transform .2s ease}.back-arrow[_ngcontent-%COMP%]:hover{transform:scale(1.1);color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:600;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{background-color:#f1f1f1;color:#ccc;border-color:#e5e5e5;cursor:not-allowed}.sm-card[_ngcontent-%COMP%]{background:#fff;border-radius:12px;box-shadow:0 2px 8px #00000014;padding:20px 16px;text-align:center;font-family:Poppins,sans-serif;transition:transform .2s ease,box-shadow .2s ease}.sm-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 4px 12px #0000001f}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:none!important;border-bottom:1px solid #ccc!important}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto;font-family:Poppins,sans-serif}.header[_ngcontent-%COMP%]{background-color:#fff;color:#000;padding:1rem;display:flex;justify-content:space-between;align-items:center;margin-top:50px!important}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:1rem}.nav-button[_ngcontent-%COMP%]{background:none;border:none;color:#fff;padding:.5rem 1rem;border-radius:4px;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#fff;color:#06c;font-weight:500}.nav-button[_ngcontent-%COMP%]:hover{background-color:#fff;color:#06c}.nav-button[_ngcontent-%COMP%]{color:#000}.nav-button[_ngcontent-%COMP%]:hover{background-color:#00f;color:#fff}.metrics-container[_ngcontent-%COMP%]{background-color:#e6e6e6;padding:1.5rem;border-radius:8px;box-shadow:0 2px 4px #0000000d;margin-bottom:1.5rem;position:relative}.dashboard-section[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;width:100%;max-width:100%}.card[_ngcontent-%COMP%]{width:100%;box-shadow:0 1px 5px #0000001a;border-radius:8px;padding:16px;background:#fff}.metrics-grid[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:20px;align-items:flex-start}.filters-container[_ngcontent-%COMP%]{width:290px;min-width:200px;flex-shrink:0;margin-left:30px}.filter-section[_ngcontent-%COMP%]{background-color:#fff}.dealer-block[_ngcontent-%COMP%]{background:transparent!important;margin-bottom:10px}.dashboard-container[_ngcontent-%COMP%]{background:transparent!important}.metric-box[_ngcontent-%COMP%]{background-color:#fff;padding:1rem;border-radius:15px;text-align:center;box-shadow:0 1px 3px #0000001a;height:130px;display:flex;width:150px;flex-direction:column;justify-content:center;align-items:center}.metric-value[_ngcontent-%COMP%]{font-size:2rem;font-weight:700;color:#06c;margin-bottom:.5rem}.metric-label[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.filters-panel[_ngcontent-%COMP%]{background-color:#e5e5e5;padding:.75rem;border-radius:8px}.filters-title[_ngcontent-%COMP%]{text-align:center;font-size:.9rem;font-weight:600}.time-filters[_ngcontent-%COMP%]{display:flex;margin-bottom:.5rem}.select-container[_ngcontent-%COMP%]{position:relative}.sm-select[_ngcontent-%COMP%]{width:100%;padding:.35rem .75rem;border:1px solid #ccc;border-radius:4px;appearance:none;font-size:.85rem}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:.6rem;color:#666}.performance-panels[_ngcontent-%COMP%]{gap:1.5rem}.person-info[_ngcontent-%COMP%]{background-color:#f9f9f9;padding:14px;border-radius:6px;box-shadow:0 2px 5px #0000001a;width:fit-content;margin-bottom:16px}.person-n[_ngcontent-%COMP%]   .panel-title[_ngcontent-%COMP%]{text-align:center;font-size:1.8rem;font-weight:500;margin-bottom:1rem;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{margin-top:-190px;display:flex;align-items:center;justify-content:center;color:#999}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:3.5rem;box-sizing:border-box}@media (max-width: 1024px) and (min-width: 768px){.performance-panels[_ngcontent-%COMP%]{display:block!important;gap:0!important}}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{pointer-events:none;display:none;position:fixed;left:-100%}}.performance-panel[_ngcontent-%COMP%]{flex:1;background-color:#e6e6e6}.avatar[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:50%;background-color:#e0e0e0;display:flex;align-items:center;justify-content:center;font-size:24px;color:#888}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;margin:0;padding:0}.dashboard-container[_ngcontent-%COMP%]{width:100%;margin:0 auto;position:relative}.header[_ngcontent-%COMP%]{background-color:#f5f5f5;padding:15px;top:0;width:100%;max-width:1540px;z-index:100;box-shadow:0 2px 5px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#eee;cursor:pointer;border-radius:4px}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{vertical-align:middle}.content-section[_ngcontent-%COMP%]{margin-top:40px}.nav-button[_ngcontent-%COMP%]:hover{background-color:gray}.main-content[_ngcontent-%COMP%]{background-color:#f9f9f9}[_nghost-%COMP%]     .header{position:static!important}[_nghost-%COMP%]     .header{width:100%!important;max-width:100%!important;transition:width .3s ease,margin-left .3s ease!important;z-index:auto!important}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:24px;font-weight:700;color:#fff}.header[_ngcontent-%COMP%]{transition:width .3s ease!important;transition:width .3s ease,margin-left .3s ease!important}.metric-label[_ngcontent-%COMP%]{font-size:14px;color:#666;margin-top:5px}.filters-container[_ngcontent-%COMP%]{grid-column:1 / -1;margin-top:15px}.filters-panel[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a}.filters-title[_ngcontent-%COMP%]{font-weight:700}.time-filters[_ngcontent-%COMP%]{display:flex;gap:0px;margin-bottom:10px}.filter-button[_ngcontent-%COMP%]{padding:5px 10px;border:none;background-color:#fff;border-radius:4px;cursor:pointer}.filter-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;border-color:#222fb9}.select-container[_ngcontent-%COMP%]{position:relative;width:200px}.sm-select[_ngcontent-%COMP%]{width:100%;padding:8px;border-radius:4px;border:1px solid #ddd;appearance:none}.performance-panels[_ngcontent-%COMP%]{margin-top:20px}.performance-panel[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;box-shadow:0 2px 5px #0000001a;padding:15px}.panel-title[_ngcontent-%COMP%]{font-size:30px!important;margin-top:0;margin-bottom:15px;padding-bottom:10px;font-weight:500;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{min-height:300px}table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.content-section[_ngcontent-%COMP%]{display:none}.content-section.active[_ngcontent-%COMP%]{display:block}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#f0f0f0;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-of-type(odd){--bs-table-accent-bg: transparent !important}table.table-striped[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd){background-color:red!important}.team-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;background-color:#fff;border-radius:10px;padding:15px 25px;gap:15px}.team-name[_ngcontent-%COMP%]{font-size:17px;color:#000;white-space:nowrap;font-weight:500;font-family:Poppins,sans-serif}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:8px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:4px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.metrics-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;justify-content:flex-end;flex:1}.metric-card[_ngcontent-%COMP%]{display:flex;align-items:center;padding:8px 12px;border-radius:22px;font-size:.85em;font-weight:600;color:#333;text-align:center;box-shadow:0 0 12px #0000001a;flex-shrink:0;height:50px}.metric-card[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:6px;font-size:1em}.metric-value[_ngcontent-%COMP%]{font-weight:700;margin-left:10px}@media (max-width: 768px){.team-container[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.metrics-wrapper[_ngcontent-%COMP%]{justify-content:flex-start}}.back-button[_ngcontent-%COMP%]{margin-right:15px;cursor:pointer;color:#fff;font-size:20px}.nav-button[_ngcontent-%COMP%]{background-color:#fff;color:#000;border:none;border-radius:4px;padding:5px 15px;margin-right:10px;font-weight:700;cursor:pointer}.nav-tab[_ngcontent-%COMP%]{color:#fff;margin-left:20px;font-size:16px}.container[_ngcontent-%COMP%]{margin:0;padding:20px 0}.card[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:20px;margin-bottom:20px;box-shadow:0 1px 3px #0000001a}.card-title[_ngcontent-%COMP%]{font-size:18px;font-weight:700;margin-bottom:15px}.profiles[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;gap:25px;margin-bottom:20px;flex-wrap:wrap}.profile[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:70px}.avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#e0e0e0;margin-bottom:8px}.name[_ngcontent-%COMP%]{font-size:12px;text-align:center;line-height:1.2}.actions[_ngcontent-%COMP%]{margin-top:20px}.action-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:10px}.person-info[_ngcontent-%COMP%]{display:flex;flex-direction:column}.person-name[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px}.person-role[_ngcontent-%COMP%]{color:#666;font-size:14px}.action-button[_ngcontent-%COMP%]{background-color:#1e88e5;color:#fff;border:none;border-radius:15px;padding:5px 15px;cursor:pointer}.test-drive[_ngcontent-%COMP%], .follow-up[_ngcontent-%COMP%]{background-color:#1e88e5}.show-more[_ngcontent-%COMP%]{text-align:center;margin-top:10px;color:#333;font-size:14px}.metrics-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;margin-left:-10px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:15px;min-width:120px;flex:1;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:20px;font-weight:700;color:#fff;margin-bottom:5px}.metric-label[_ngcontent-%COMP%]{color:#666;font-size:14px}.filters-row[_ngcontent-%COMP%]{display:flex;background-color:#fff;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a;align-items:center}.filters-title[_ngcontent-%COMP%]{font-weight:700;padding-top:10px}.time-filters[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-button[_ngcontent-%COMP%]{padding:6px 12px;cursor:pointer;font-size:14px}.select-container[_ngcontent-%COMP%]{position:relative;margin-left:auto}.sm-select[_ngcontent-%COMP%]{padding:6px 30px 6px 10px;border:1px solid #ddd;border-radius:4px;appearance:none;background-color:#fff;font-size:14px;cursor:pointer}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:12px}select[_ngcontent-%COMP%]{position:relative;z-index:1000}.dropdown-row[_ngcontent-%COMP%]{margin-bottom:150px}.modal[_ngcontent-%COMP%]{display:flex;position:fixed;z-index:1000;left:0;top:0;width:100%;height:100%;background-color:#00000080;justify-content:center;align-items:center}.modal-content[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:6px;max-width:400px;width:90%;box-shadow:0 5px 15px #0000004d;position:relative}.close[_ngcontent-%COMP%]{position:absolute;right:12px;top:8px;font-size:24px;font-weight:700;cursor:pointer}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0}[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}[_ngcontent-%COMP%]::-webkit-scrollbar-button:single-button{display:none;width:0;height:0}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0;width:0}.selected-user[_ngcontent-%COMP%]{background-color:#cce5ff;border:2px solid #3399ff;border-radius:8px;padding:5px;width:90px}.container-fluid[_ngcontent-%COMP%]{width:100%;padding:0 20px;margin:0 auto;box-sizing:border-box}@media only screen and (max-width: 600px){.metrics-row[_ngcontent-%COMP%]{width:100%!important;flex-direction:column!important;gap:10px!important}.metric-box[_ngcontent-%COMP%]{width:100%!important;box-sizing:border-box}.metric-box[_ngcontent-%COMP%]:last-child{width:100%!important}}@media (max-width: 600px){.performance-panels[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;margin-left:0!important;width:100%!important}.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%]{flex-direction:column!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{min-width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   h2.panel-title[_ngcontent-%COMP%]{text-align:center}}.table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{margin-top:20px!important;padding:10px!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px!important;font-size:14px}}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;padding:0 10px;margin-left:0!important;height:200px!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%!important;margin-top:20px!important;padding:0!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px 4px!important;font-size:14px}.performance-panel[_ngcontent-%COMP%]   .table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media screen and (max-width: 767px){.header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{box-sizing:border-box;max-width:100vw;overflow-x:hidden;padding-left:10px;padding-right:10px}.nav-buttons[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:10px;align-items:stretch;width:100%}.nav-button[_ngcontent-%COMP%]{width:100%;font-size:1rem;box-sizing:border-box}}  table.highlight-alt-rows tbody tr:nth-child(2n){background-color:#f3f9ff!important}  table.highlight-alt-rows tbody tr:nth-child(2n) td{background-color:#f3f9ff!important}  .highlight-alt-rows tbody tr:nth-child(1){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(1) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5) td{background-color:transparent!important}@media (max-width: 768px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important;margin-bottom:20px!important}.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;word-wrap:break-word;white-space:normal;margin-top:5px}.container[_ngcontent-%COMP%]{max-width:100%;padding-left:15px;padding-right:15px;margin-left:auto;margin-right:auto}}@media (max-width: 400px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, .profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{grid-template-columns:repeat(2,1fr)!important}}.user-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(15,1fr);gap:30px;margin-bottom:20px}@media (max-width: 768px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;margin-top:5px;word-wrap:break-word;white-space:normal}}@media (max-width: 400px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)!important}}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .dashboard-content[_ngcontent-%COMP%]{transition:margin-left .3s ease}.sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-container[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .header2[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-content[_ngcontent-%COMP%]{margin-left:7rem}.header2[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;background:#fff;padding:1rem;box-shadow:0 2px 4px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f5f5f5;padding:4px;border-radius:6px}.nav-button[_ngcontent-%COMP%]{background:#fff;border:none;font-weight:700;padding:8px 16px;cursor:pointer;border-radius:4px}@media (max-width: 768px){.nav-buttons[_ngcontent-%COMP%]{align-items:stretch}.nav-button[_ngcontent-%COMP%]{width:100%}}.filter-btn[_ngcontent-%COMP%]{padding:5px 12px;font-size:14px;border-radius:4px;border:1px solid #ccc;background-color:#fff;transition:all .3s ease;cursor:pointer;color:#333}.filter-btn[_ngcontent-%COMP%]:hover{background-color:#f2f2f2}.active-filter-today[_ngcontent-%COMP%], .active-filter-upcoming[_ngcontent-%COMP%]{background:linear-gradient(#222fb9);color:#fff}.avatar-color-1[_ngcontent-%COMP%]{background-color:#ffd3b6}.avatar-color-2[_ngcontent-%COMP%]{background-color:#caffbf}.avatar-color-3[_ngcontent-%COMP%]{background-color:#9bf6ff}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:9999!important}.header2-right[_ngcontent-%COMP%]   .header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{padding:15px 0;min-width:12.5rem;z-index:9999;position:absolute}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important}.nav-buttons[_ngcontent-%COMP%]{z-index:1000}.header2-profile[_ngcontent-%COMP%]{position:relative;z-index:9999}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:99999!important;top:100%;right:0;display:block}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important;z-index:auto!important}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.user-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin:8px;width:80px}.user-avatar[_ngcontent-%COMP%]{width:50px;height:50px;background-color:#f0f0f0;color:#126893;border-radius:50%;display:flex;align-items:center;justify-content:center;font-weight:700;font-size:18px;box-shadow:0 2px 6px #0000001a}.user-name[_ngcontent-%COMP%]{font-size:12px;text-align:center;margin-top:4px;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{background-color:#fff;border-radius:12px;padding:16px;box-shadow:0 4px 10px #00000014;text-align:center;margin-bottom:12px}.user-avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#c4fefb;color:#26eee4;font-weight:700;display:flex;align-items:center;justify-content:center;margin:0 auto 8px;font-size:25px}.user-name[_ngcontent-%COMP%]{font-size:14px;font-weight:500;color:#333}.header-box[_ngcontent-%COMP%]{background-color:#f4f6fb;padding:6px 10px;border-radius:8px;display:inline-flex;align-items:center;gap:6px;font-weight:600;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:max-content;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse;outline:none!important}.header-box1[_ngcontent-%COMP%], .header-box2[_ngcontent-%COMP%], .header-box3[_ngcontent-%COMP%], .header-box4[_ngcontent-%COMP%], .header-box5[_ngcontent-%COMP%], .header-box6[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:6px;padding:6px 8px;border-radius:12px;font-weight:400;color:#000;text-align:center;font-family:Poppins,sans-serif;white-space:normal}.pagination-container[_ngcontent-%COMP%]{margin-top:20px;display:flex;justify-content:center;align-items:center;gap:6px;flex-wrap:wrap}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ccc;background-color:#fff;color:#333;cursor:pointer;border-radius:6px;font-size:14px;transition:all .2s ease-in-out}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#222fb9;color:#fff;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.pagination-container[_ngcontent-%COMP%]   button.active-page[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:700;border-color:#222fb9}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:10px;border:none}.header-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:wrap;width:100%;margin-bottom:15px}.panel-title[_ngcontent-%COMP%]{font-size:25px;color:#313131;font-family:Poppins,sans-serif;font-weight:600;border-radius:20px;margin:0}.panel-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#000;font-weight:400;font-size:16px;margin:0}.dealer-select[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;border-radius:6px;border:1px solid #ccc;height:fit-content;margin-top:5px}.dropdown-wrapper[_ngcontent-%COMP%]{width:250px;border:1px solid #ccc;border-radius:6px;position:relative;background:#fff;cursor:pointer}.selected-value[_ngcontent-%COMP%]{padding:10px;display:flex;justify-content:space-between;align-items:center}.arrow[_ngcontent-%COMP%]{font-size:12px}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;width:100%;top:100%;left:0;right:0;border:1px solid #ccc;background:#fff;z-index:1000;border-radius:0 0 6px 6px;box-shadow:0 2px 6px #00000026;max-height:240px;overflow-y:auto;padding:0;margin:0}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:none;padding:10px 12px;transition:background .2s;cursor:pointer}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#f0f0f0}.user-dropdown[_ngcontent-%COMP%]{width:100%;max-width:300px;padding:10px 16px;border:none;border-radius:20px;background-color:#ebedf0;color:#333;font-size:16px;appearance:none;outline:none;cursor:pointer;box-shadow:0 2px 6px #0000001a;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{padding:8px;font-size:14px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-height:200px}  .custom-ng-select .ng-dropdown-panel{max-height:200px!important;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]{max-height:200px;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{white-space:nowrap}.radio-circle[_ngcontent-%COMP%]{width:16px;height:16px;border-radius:50%;border:2px solid currentColor;display:flex;align-items:center;justify-content:center}.radio-circle-inner[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:currentColor}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(1)   th[_ngcontent-%COMP%]{background-color:#fff!important}.table-wrapper[_ngcontent-%COMP%]{padding:20px}table[_ngcontent-%COMP%]{width:100%;border-collapse:separate;border-spacing:0 12px}td[_ngcontent-%COMP%]{background-color:#f9f9fb;text-align:center;font-weight:500;color:#000;border:none;padding:30px;transition:all .3s ease}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child{border-top-left-radius:12px;border-bottom-left-radius:12px}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child{border-top-right-radius:12px;border-bottom-right-radius:12px}.badge[_ngcontent-%COMP%]{padding:6px 14px;border-radius:8px;font-size:14px;font-weight:500;display:inline-block}.badge-upcoming[_ngcontent-%COMP%], .badge-enquiry[_ngcontent-%COMP%]{background-color:#d9f2e7;color:#177a47}.badge-coldcalls[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.badge-completed[_ngcontent-%COMP%]{background-color:#fef3c7;color:#b45309}.badge-overdue[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.nav-button[_ngcontent-%COMP%]{font-family:Poppins,sans-serif}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#1f2937}.filter-wrapper[_ngcontent-%COMP%]{background-color:#fff;border-radius:16px;box-shadow:0 4px 12px #0000000d;padding:15px 20px;width:fit-content;margin:20px}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f2f2f2;border-radius:50px;padding:5px 10px}.filter-btn[_ngcontent-%COMP%]{border:none;background:transparent;padding:6px 14px;border-radius:50px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.filter-btn.active[_ngcontent-%COMP%]{background-color:#fff;color:#2b45c7;border:2px solid #2b45c7}.filter-wrapper[_ngcontent-%COMP%]{margin-top:20px;background:#fff;padding:10px;border-radius:8px;width:fit-content}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-btn[_ngcontent-%COMP%]{padding:6px 10px;border:none;background:#f0f0f0;border-radius:4px;cursor:pointer}.filter-btn.active[_ngcontent-%COMP%]{background-color:#126893;color:#fff}.no-bottom-border[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:none!important}.back-button[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:35px;color:#333;cursor:pointer;padding:4px 10px;transition:transform .2s ease,color .2s ease}.back-button[_ngcontent-%COMP%]:hover{transform:translate(-3px);color:#126893}.nav-button[_ngcontent-%COMP%]{background-color:transparent;color:#000;border:none;padding:10px 16px;font-weight:500;border-radius:6px;cursor:pointer;transition:background-color .2s ease-in-out}.nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb926;color:#000}.nav-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:100%;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}.active-filter[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}.pill-button[_ngcontent-%COMP%]{padding:6px 16px;border:none;border-radius:999px;font-family:Poppins,sans-serif;background-color:transparent;color:#000;font-weight:500;cursor:pointer;transition:background-color .3s ease}.pill-active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}@media (min-width: 768px) and (max-width: 1080px){.dashboard-container[_ngcontent-%COMP%]{padding:20px}}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:6px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f1f1;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#999}.user-card[_ngcontent-%COMP%]{flex:0 0 auto;min-width:80px;cursor:pointer}.user-row[_ngcontent-%COMP%]{position:relative}.user-row[_ngcontent-%COMP%]:after{content:"";position:absolute;right:0;top:0;bottom:0;width:20px;background:linear-gradient(to right,transparent,rgba(255,255,255,.8));pointer-events:none;z-index:1}.dashboard-container[_ngcontent-%COMP%]{padding:10px}@media (max-width: 991.98px){.performance-panels[_ngcontent-%COMP%]{flex-direction:column}}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{padding:10px!important;margin:0 auto}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:#fff;font-size:1.2rem;border:none!important;font-weight:700;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:#fff;box-shadow:0 4px 6px #0000001a}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;font-family:Poppins,sans-serif;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4;font-family:Poppins,sans-serif}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#cfe8fc,#a0cfff);font-family:Poppins,sans-serif;font-size:1rem;font-weight:500;padding-left:60px;color:#000;border-radius:5px;transition:background .3s ease}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:linear-gradient(135deg,#b6dcf8,#87c5f5);cursor:pointer}.accordion-header[_ngcontent-%COMP%]:hover{transform:translateY(-2px)}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;transition:max-height .4s ease;background:#fffffff2;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px}*[_ngcontent-%COMP%]{margin:0;padding:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;background:linear-gradient(135deg,#667eea,#764ba2);min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto}.dashboard-header[_ngcontent-%COMP%]{text-align:center;color:#fff;margin-bottom:30px}.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:300;text-shadow:0 2px 4px rgba(0,0,0,.3)}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;padding:15px 20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.pagination-info[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.pagination-controls[_ngcontent-%COMP%]{display:flex;gap:10px}.pagination-btn[_ngcontent-%COMP%]{padding:8px 15px;background:#fff3;border:1px solid rgba(255,255,255,.3);border-radius:5px;color:#fff;cursor:pointer;transition:all .3s ease}.pagination-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:#ffffff4d}.pagination-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.pagination-btn.active[_ngcontent-%COMP%]{background:#fff6;font-weight:700}.accordion[_ngcontent-%COMP%]{margin-bottom:15px;border-radius:12px;overflow:hidden;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);border:1px solid rgba(255,255,255,.2)}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:700;color:#036;border:1px solid #b3d4ff;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{cursor:pointer}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif;box-shadow:0 8px 32px #0000001a}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4}.accordion-header[_ngcontent-%COMP%]{padding:20px 30px;cursor:pointer;display:flex;justify-content:space-between;align-items:center;color:#fff;transition:all .3s ease;position:relative}.accordion-header.active[_ngcontent-%COMP%]{box-shadow:inset 0 2px 4px #0003}.accordion-toggle[_ngcontent-%COMP%]{background:#fff3;border:none;width:30px;height:30px;border-radius:50%;color:#fff;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .3s ease}.accordion-toggle[_ngcontent-%COMP%]:hover{background:#ffffff4d}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;box-shadow:0 8px 32px #0000001a;transition:max-height .4s ease;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px;box-shadow:0 8px 32px #0000001a}.content-wrapper[_ngcontent-%COMP%]{padding:30px}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px 8px;background:#fff3;border-radius:12px;font-size:.75rem;font-weight:500;margin-right:10px}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:15px;margin-bottom:25px;padding:20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.filter-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:5px}.filter-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.85rem;color:#666;font-weight:500}.filter-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .filter-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:8px 12px;border:1px solid #ddd;border-radius:6px;font-size:.9rem;min-width:120px}.table-container[_ngcontent-%COMP%]{overflow-x:auto;border-radius:10px;box-shadow:0 4px 15px #0000001a;margin-bottom:20px}.call-logs-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background:#fff}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .call-logs-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:left;border-bottom:1px solid #eee}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background:linear-gradient(135deg,#f8f9fa,#e9ecef);font-weight:600;color:#495057;font-size:.9rem;position:sticky;top:0}.call-logs-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.status-badge[_ngcontent-%COMP%]{padding:4px 10px;border-radius:20px;font-size:.8rem;font-weight:500}.status-connected[_ngcontent-%COMP%]{background:#d4edda;color:#155724}.status-missed[_ngcontent-%COMP%]{background:#f8d7da;color:#721c24}.status-rejected[_ngcontent-%COMP%]{background:#f1f3f4;color:#5f6368}.status-enquiry[_ngcontent-%COMP%]{background:#e7f3ff;color:#06c}.status-cold[_ngcontent-%COMP%]{background:#fff3cd;color:#856404}.duration[_ngcontent-%COMP%]{font-family:monospace;font-weight:500}.table-pagination[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:10px;padding:15px;background:#fff;border-top:1px solid #eee}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ddd;background:#fff;border-radius:4px;cursor:pointer;font-size:.85rem}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background:#f8f9fa}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.table-pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background:#007bff;color:#fff;border-color:#007bff}@media (max-width: 768px){.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2rem}.accordion-header[_ngcontent-%COMP%]{padding:15px 20px;font-size:.95rem}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%], .accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{padding-left:30px}.content-wrapper[_ngcontent-%COMP%]{padding:20px}.kpi-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(auto-fit,minmax(140px,1fr));gap:12px}.filters[_ngcontent-%COMP%]{flex-direction:column}.pagination-container[_ngcontent-%COMP%]{flex-direction:column;gap:10px;text-align:center}}.loading[_ngcontent-%COMP%]{display:inline-block;width:20px;height:20px;border:2px solid rgba(255,255,255,.3);border-radius:50%;border-top-color:#fff;animation:_ngcontent-%COMP%_spin 1s ease-in-out infinite}@keyframes _ngcontent-%COMP%_spin{to{transform:rotate(360deg)}}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(7,1fr);gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease;min-width:0}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px;background-color:#fff;border:2px solid #222fb9;border-radius:15px;font-size:12px;font-weight:600;color:#222fb9}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-3px)}.kpi-value[_ngcontent-%COMP%]{font-size:1.8rem;font-weight:700;margin-bottom:5px}.kpi-label[_ngcontent-%COMP%]{font-size:.85rem;opacity:.9}@media (max-width: 1366px){.kpi-card[_ngcontent-%COMP%]{padding:12px 8px}.kpi-value[_ngcontent-%COMP%]{font-size:1.5rem}.kpi-label[_ngcontent-%COMP%]{font-size:.75rem}}@media (max-width: 1024px){.kpi-grid[_ngcontent-%COMP%]{gap:8px}.kpi-card[_ngcontent-%COMP%]{padding:10px 6px}.kpi-value[_ngcontent-%COMP%]{font-size:1.3rem}.kpi-label[_ngcontent-%COMP%]{font-size:.7rem}}.shadow-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;margin-top:10px;background-color:#fff;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .shadow-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f4f4f4;font-weight:700}.dealer-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden;background:linear-gradient(135deg,#f8f9fa,#e9ecef);margin-top:15px;font-family:Arial,sans-serif}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .dealer-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:center}.dealer-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{background-color:#f0f0f0}.dealer-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.dealer-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f7ff}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#333}.show-more-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:15px 0}.show-more-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;border:none;padding:8px 20px;border-radius:8px;cursor:pointer;font-size:14px;font-weight:500;transition:background-color .3s ease,transform .2s ease}.show-more-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}.pagination-center[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:8px;margin-top:15px}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #007bff;background-color:#fff;color:#007bff;cursor:pointer;border-radius:4px;transition:all .2s}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#007bff;color:#fff}.pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;font-weight:700}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.expand-row[_ngcontent-%COMP%]{background-color:#f8f9fa}.expanded-content[_ngcontent-%COMP%]{padding:20px;border-left:4px solid #007bff;margin:10px;background-color:#fff;border-radius:6px;box-shadow:0 2px 4px #0000000d}.expanded-content[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin:0}.expanded-content[_ngcontent-%COMP%]   .col-md-4[_ngcontent-%COMP%]{margin-bottom:15px}.expanded-content[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:#495057;font-size:13px}.orders-table-container[_ngcontent-%COMP%]{border-radius:8px;overflow:hidden;margin:20px 0;max-width:100%}.table[_ngcontent-%COMP%]{margin-bottom:0;font-size:14px}.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;font-weight:600;font-size:12px;text-transform:uppercase;letter-spacing:.5px;border-bottom:1px solid #dee2e6;padding:16px 12px;white-space:nowrap}.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:16px 12px;vertical-align:middle;border-bottom:1px solid #f1f3f4}.order-row[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.order-id[_ngcontent-%COMP%]{font-weight:600;color:#495057}.created-time[_ngcontent-%COMP%]{color:#6c757d}.customer-name[_ngcontent-%COMP%]{font-weight:500;color:#212529}.total-amount[_ngcontent-%COMP%], .profit-amount[_ngcontent-%COMP%]{font-weight:600;color:#212529}.status-badge[_ngcontent-%COMP%]{padding:6px 12px;border-radius:20px;font-size:12px;font-weight:500;text-transform:capitalize}.status-pending[_ngcontent-%COMP%]{background-color:#fff3cd;color:#856404}.status-confirmed[_ngcontent-%COMP%]{background-color:#cce5ff;color:#06c}.status-shipped[_ngcontent-%COMP%]{background-color:#d4edda;color:#155724}.status-rejected[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24}.btn-plus[_ngcontent-%COMP%]{background:none;border:none;color:#6c757d;font-size:16px;cursor:pointer;padding:8px;border-radius:50%;transition:all .2s ease;display:flex;align-items:center;justify-content:center;width:32px;height:32px}.btn-plus[_ngcontent-%COMP%]:hover{background-color:#e9ecef;color:#495057}.btn-plus[_ngcontent-%COMP%]:focus{outline:2px solid #007bff;outline-offset:2px}.action-cell[_ngcontent-%COMP%]{text-align:center;width:60px}@media (max-width: 768px){.table-responsive[_ngcontent-%COMP%]{font-size:12px}.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 8px}}.filter-btn[_ngcontent-%COMP%]{border-radius:20px;padding:6px 16px;font-size:14px;font-weight:500;border:1px solid #0d6efd;background-color:#fff;color:#0d6efd;box-sizing:border-box}.filter-btn.active[_ngcontent-%COMP%], .filter-btn[_ngcontent-%COMP%]:hover{background-color:#0d6efd;color:#fff;border:1px solid #0d6efd}.icon-btn[_ngcontent-%COMP%]{border:none;outline:none;background:#f8f9fa;border-radius:8px;padding:6px 10px;cursor:pointer;transition:all .2s ease-in-out;box-shadow:0 1px 3px #0000001a}.icon-btn[_ngcontent-%COMP%]:hover{background:#e9ecef}.icon-btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:16px;color:#0d6efd}.filter-btn[_ngcontent-%COMP%]{background-color:#fff;color:#222fb9;border:1px solid #222fb9}.filter-btn.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;border-color:#222fb9}.filter-btn[_ngcontent-%COMP%]:hover{background-color:#1b26a0;color:#fff}.btn-sm[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;padding:5px;border-radius:10px}',
    ],
  });
};
var $l = class n {
  isSessionStorageAvailable() {
    return typeof window < "u" && typeof sessionStorage < "u";
  }
  getItem(i) {
    return this.isSessionStorageAvailable() ? sessionStorage.getItem(i) : null;
  }
  setItem(i, e) {
    this.isSessionStorageAvailable() && sessionStorage.setItem(i, e);
  }
  removeItem(i) {
    this.isSessionStorageAvailable() && sessionStorage.removeItem(i);
  }
  clear() {
    this.isSessionStorageAvailable() && sessionStorage.clear();
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ye = class n {
  constructor(i, e) {
    this.http = i;
    this.storageService = e;
  }
  apiUrl = "https://uat.smartassistapp.in/api/
superAdmin/";
  getAuthHeaders() {
    let i = this.storageService.getItem("token");
    return (
      console.log("Retrieved Token:", i),
      new Kt()
        .set("authorization", `Bearer ${i}`)
        .set("accept", "application/json")
    );
  }
  getAllDealer() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "dealers/all", { headers: i });
  }
  getDealerById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}`, { headers: e });
  }
  getCustomerById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}accounts/${i}`, { headers: e });
  }
  getTeamById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}teams/${i}`, { headers: e });
  }
  getVehicleById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}vehicles/${i}`, { headers: e });
  }
  getUserById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}users/${i}`, { headers: e });
  }
  getAllUser(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/users/all`, {
      headers: e,
    });
  }
  getAllLead(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/leads/all`, {
      headers: e,
    });
  }
  getAllTask(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/tasks/all`, {
      headers: e,
    });
  }
  getEventsAll(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/events/t-drives/all`, {
      headers: e,
    });
  }
  getAllOpportunities(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/opportunities/all`, {
      headers: e,
    });
  }
  updateDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}dealers/${i.dealer_id}/update`, i, {
      headers: e,
    });
  }
  createDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "dealers/create", i, { headers: e });
  }
  deleteDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}dealers/${i}/delete`,
      {},
      { headers: e }
    );
  }
  getAllVehicle() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "vehicles/all", { headers: i });
  }
  getSingleVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/vehicles/${i}`, { headers: e });
  }
  createNewVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "vehicles/create", i, { headers: e });
  }
  deleteVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}vehicles/${i}/delete`,
      {},
      { headers: e }
    );
  }
  updateVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}vehicles/${i.vehicle_id}/update`, i, {
      headers: e,
    });
  }
  eventById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}events/${i}`, { headers: e });
  }
  leadById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}leads/${i}`, { headers: e });
  }
  userById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/users/all`, {
      headers: e,
    });
  }
  oppById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}opportunities/${i}`, { headers: e });
  }
  taskById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}tasks/${i}`, { headers: e });
  }
  getMultipleUser() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "users/all", { headers: i });
  }
  getMultipleTeams() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: i });
  }
  createNewUser(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "users/create", i, { headers: e });
  }
  createNewTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "teams/new", i, { headers: e });
  }
  updateUser(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${i.user_id}/update`, i, {
      headers: e,
    });
  }
  updateTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${i.team_id}/update`, i, {
      headers: e,
    });
  }
  getSingleUser(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/users/${i}`, { headers: e });
  }
  getAllTeams() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: i });
  }
  deleteUser(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${i}/delete`, {}, { headers: e });
  }
  deleteTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${i}/delete`, {}, { headers: e });
  }
  getAllCustomer() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "accounts/all", { headers: i });
  }
  getSingleAccount(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/accounts/${i}`, { headers: e });
  }
  createCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.post(`${this.apiUrl}accounts/create`, i, { headers: e });
  }
  updateCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}accounts/${i.account_id}/update`, i, {
      headers: e,
    });
  }
  deleteCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}accounts/${i}/delete`,
      {},
      { headers: e }
    );
  }
  getProfileData() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "show-profile", { headers: i });
  }
  getAllRole() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "role/all", { headers: i });
  }
  createRole(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "roles/new", i, { headers: e });
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(ti), ie($l));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var lo = class n {
  dealer_id;
  dealer_name;
  dealer_code;
  dealer_email;
  corporate_id;
  constructor() {
    (this.dealer_id = ""),
      (this.dealer_name = ""),
      (this.dealer_code = null),
      (this.corporate_id = ""),
      (this.dealer_email = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var c_ = ["toast-component", ""];
function Iw(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 5),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.remove());
      }),
      u(1, "span", 6),
      m(2, "\xD7"),
      d()();
  }
}
function Pw(n, i) {
  if ((n & 1 && ($e(0), m(1), Ge()), n & 2)) {
    let e = E(2);
    g(), oe("[", e.duplicatesCount + 1, "]");
  }
}
function Aw(n, i) {
  if (
    (n & 1 && (u(0, "div"), m(1), F(2, Pw, 2, 1, "ng-container", 4), d()),
    n & 2)
  ) {
    let e = E();
    Ve(e.options.titleClass),
      de("aria-label", e.title),
      g(),
      oe(" ", e.title, " "),
      g(),
      S("ngIf", e.duplicatesCount);
  }
}
function Rw(n, i) {
  if ((n & 1 && W(0, "div", 7), n & 2)) {
    let e = E();
    Ve(e.options.messageClass), S("innerHTML", e.message, Ca);
  }
}
function Fw(n, i) {
  if ((n & 1 && (u(0, "div", 8), m(1), d()), n & 2)) {
    let e = E();
    Ve(e.options.messageClass),
      de("aria-label", e.message),
      g(),
      oe(" ", e.message, " ");
  }
}
function Nw(n, i) {
  if ((n & 1 && (u(0, "div"), W(1, "div", 9), d()), n & 2)) {
    let e = E();
    g(), Si("width", e.width() + "%");
  }
}
function Vw(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 5),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.remove());
      }),
      u(1, "span", 6),
      m(2, "\xD7"),
      d()();
  }
}
function Lw(n, i) {
  if ((n & 1 && ($e(0), m(1), Ge()), n & 2)) {
    let e = E(2);
    g(), oe("[", e.duplicatesCount + 1, "]");
  }
}
function Bw(n, i) {
  if (
    (n & 1 && (u(0, "div"), m(1), F(2, Lw, 2, 1, "ng-container", 4), d()),
    n & 2)
  ) {
    let e = E();
    Ve(e.options.titleClass),
      de("aria-label", e.title),
      g(),
      oe(" ", e.title, " "),
      g(),
      S("ngIf", e.duplicatesCount);
  }
}
function Hw(n, i) {
  if ((n & 1 && W(0, "div", 7), n & 2)) {
    let e = E();
    Ve(e.options.messageClass), S("innerHTML", e.message, Ca);
  }
}
function jw(n, i) {
  if ((n & 1 && (u(0, "div", 8), m(1), d()), n & 2)) {
    let e = E();
    Ve(e.options.messageClass),
      de("aria-label", e.message),
      g(),
      oe(" ", e.message, " ");
  }
}
function zw(n, i) {
  if ((n & 1 && (u(0, "div"), W(1, "div", 9), d()), n & 2)) {
    let e = E();
    g(), Si("width", e.width() + "%");
  }
}
var Ku = class {
    _attachedHost;
    component;
    viewContainerRef;
    injector;
    constructor(i, e) {
      (this.component = i), (this.injector = e);
    }
    attach(i, e) {
      return (this._attachedHost = i), i.attach(this, e);
    }
    detach() {
      let i = this._attachedHost;
      if (i) return (this._attachedHost = void 0), i.detach();
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(i) {
      this._attachedHost = i;
    }
  },
  Qu = class {
    _attachedPortal;
    _disposeFn;
    attach(i, e) {
      return (this._attachedPortal = i), this.attachComponentPortal(i, e);
    }
    detach() {
      this._attachedPortal && this._attachedPortal.setAttachedHost(),
        (this._attachedPortal = void 0),
        this._disposeFn && (this._disposeFn(), (this._disposeFn = void 0));
    }
    setDisposeFn(i) {
      this._disposeFn = i;
    }
  },
  Xu = class {
    _overlayRef;
    componentInstance;
    duplicatesCount = 0;
    _afterClosed = new Ae();
    _activate = new Ae();
    _manualClose = new Ae();
    _resetTimeout = new Ae();
    _countDuplicate = new Ae();
    constructor(i) {
      this._overlayRef = i;
    }
    manualClose() {
      this._manualClose.next(), this._manualClose.complete();
    }
    manualClosed() {
      return this._manualClose.asObservable();
    }
    timeoutReset() {
      return this._resetTimeout.asObservable();
    }
    countDuplicate() {
      return this._countDuplicate.asObservable();
    }
    close() {
      this._overlayRef.detach(),
        this._afterClosed.next(),
        this._manualClose.next(),
        this._afterClosed.complete(),
        this._manualClose.complete(),
        this._activate.complete(),
        this._resetTimeout.complete(),
        this._countDuplicate.complete();
    }
    afterClosed() {
      return this._afterClosed.asObservable();
    }
    isInactive() {
      return this._activate.isStopped;
    }
    activate() {
      this._activate.next(), this._activate.complete();
    }
    afterActivate() {
      return this._activate.asObservable();
    }
    onDuplicate(i, e) {
      i && this._resetTimeout.next(),
        e && this._countDuplicate.next(++this.duplicatesCount);
    }
  },
  qr = class {
    toastId;
    config;
    message;
    title;
    toastType;
    toastRef;
    _onTap = new Ae();
    _onAction = new Ae();
    constructor(i, e, t, o, r, a) {
      (this.toastId = i),
        (this.config = e),
        (this.message = t),
        (this.title = o),
        (this.toastType = r),
        (this.toastRef = a),
        this.toastRef.afterClosed().subscribe(() => {
          this._onAction.complete(), this._onTap.complete();
        });
    }
    triggerTap() {
      this._onTap.next(), this.config.tapToDismiss && this._onTap.complete();
    }
    onTap() {
      return this._onTap.asObservable();
    }
    triggerAction(i) {
      this._onAction.next(i);
    }
    onAction() {
      return this._onAction.asObservable();
    }
  },
  d_ = {
    maxOpened: 0,
    autoDismiss: !1,
    newestOnTop: !0,
    preventDuplicates: !1,
    countDuplicates: !1,
    resetTimeoutOnDuplicate: !1,
    includeTitleDuplicates: !1,
    iconClasses: {
      error: "toast-error",
      info: "toast-info",
      success: "toast-success",
      warning: "toast-warning",
    },
    closeButton: !1,
    disableTimeOut: !1,
    timeOut: 5e3,
    extendedTimeOut: 1e3,
    enableHtml: !1,
    progressBar: !1,
    toastClass: "ngx-toastr",
    positionClass: "toast-top-right",
    titleClass: "toast-title",
    messageClass: "toast-message",
    easing: "ease-in",
    easeTime: 300,
    tapToDismiss: !0,
    onActivateTick: !1,
    progressAnimation: "decreasing",
  },
  u_ = new Ze("ToastConfig"),
  Zu = class extends Qu {
    _hostDomElement;
    _componentFactoryResolver;
    _appRef;
    constructor(i, e, t) {
      super(),
        (this._hostDomElement = i),
        (this._componentFactoryResolver = e),
        (this._appRef = t);
    }
    attachComponentPortal(i, e) {
      let t = this._componentFactoryResolver.resolveComponentFactory(
          i.component
        ),
        o;
      return (
        (o = t.create(i.injector)),
        this._appRef.attachView(o.hostView),
        this.setDisposeFn(() => {
          this._appRef.detachView(o.hostView), o.destroy();
        }),
        e
          ? this._hostDomElement.insertBefore(
              this._getComponentRootNode(o),
              this._hostDomElement.firstChild
            )
          : this._hostDomElement.appendChild(this._getComponentRootNode(o)),
        o
      );
    }
    _getComponentRootNode(i) {
      return i.hostView.rootNodes[0];
    }
  },
  Uw = (() => {
    class n {
      _document = ne(ze);
      _containerElement;
      ngOnDestroy() {
        this._containerElement &&
          this._containerElement.parentNode &&
          this._containerElement.parentNode.removeChild(this._containerElement);
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = this._document.createElement("div");
        e.classList.add("overlay-container"),
          e.setAttribute("aria-live", "polite"),
          this._document.body.appendChild(e),
          (this._containerElement = e);
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  Ju = class {
    _portalHost;
    constructor(i) {
      this._portalHost = i;
    }
    attach(i, e = !0) {
      return this._portalHost.attach(i, e);
    }
    detach() {
      return this._portalHost.detach();
    }
  },
  Ww = (() => {
    class n {
      _overlayContainer = ne(Uw);
      _componentFactoryResolver = ne(Uo);
      _appRef = ne(Qn);
      _document = ne(ze);
      _paneElements = new Map();
      create(e, t) {
        return this._createOverlayRef(this.getPaneElement(e, t));
      }
      getPaneElement(e = "", t) {
        return (
          this._paneElements.get(t) || this._paneElements.set(t, {}),
          this._paneElements.get(t)[e] ||
            (this._paneElements.get(t)[e] = this._createPaneElement(e, t)),
          this._paneElements.get(t)[e]
        );
      }
      _createPaneElement(e, t) {
        let o = this._document.createElement("div");
        return (
          (o.id = "toast-container"),
          o.classList.add(e),
          o.classList.add("toast-container"),
          t
            ? t.getContainerElement().appendChild(o)
            : this._overlayContainer.getContainerElement().appendChild(o),
          o
        );
      }
      _createPortalHost(e) {
        return new Zu(e, this._componentFactoryResolver, this._appRef);
      }
      _createOverlayRef(e) {
        return new Ju(this._createPortalHost(e));
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  mi = (() => {
    class n {
      overlay;
      _injector;
      sanitizer;
      ngZone;
      toastrConfig;
      currentlyActive = 0;
      toasts = [];
      overlayContainer;
      previousToastMessage;
      index = 0;
      constructor(e, t, o, r, a) {
        (this.overlay = t),
          (this._injector = o),
          (this.sanitizer = r),
          (this.ngZone = a),
          (this.toastrConfig = se(se({}, e.default), e.config)),
          e.config.iconClasses &&
            (this.toastrConfig.iconClasses = se(
              se({}, e.default.iconClasses),
              e.config.iconClasses
            ));
      }
      show(e, t, o = {}, r = "") {
        return this._preBuildNotification(r, e, t, this.applyConfig(o));
      }
      success(e, t, o = {}) {
        let r = this.toastrConfig.iconClasses.success || "";
        return this._preBuildNotification(r, e, t, this.applyConfig(o));
      }
      error(e, t, o = {}) {
        let r = this.toastrConfig.iconClasses.error || "";
        return this._preBuildNotification(r, e, t, this.applyConfig(o));
      }
      info(e, t, o = {}) {
        let r = this.toastrConfig.iconClasses.info || "";
        return this._preBuildNotification(r, e, t, this.applyConfig(o));
      }
      warning(e, t, o = {}) {
        let r = this.toastrConfig.iconClasses.warning || "";
        return this._preBuildNotification(r, e, t, this.applyConfig(o));
      }
      clear(e) {
        for (let t of this.toasts)
          if (e !== void 0) {
            if (t.toastId === e) {
              t.toastRef.manualClose();
              return;
            }
          } else t.toastRef.manualClose();
      }
      remove(e) {
        let t = this._findToast(e);
        if (
          !t ||
          (t.activeToast.toastRef.close(),
          this.toasts.splice(t.index, 1),
          (this.currentlyActive = this.currentlyActive - 1),
          !this.toastrConfig.maxOpened || !this.toasts.length)
        )
          return !1;
        if (
          this.currentlyActive < this.toastrConfig.maxOpened &&
          this.toasts[this.currentlyActive]
        ) {
          let o = this.toasts[this.currentlyActive].toastRef;
          o.isInactive() ||
            ((this.currentlyActive = this.currentlyActive + 1), o.activate());
        }
        return !0;
      }
      findDuplicate(e = "", t = "", o, r) {
        let { includeTitleDuplicates: a } = this.toastrConfig;
        for (let s of this.toasts) {
          let c = a && s.title === e;
          if ((!a || c) && s.message === t)
            return s.toastRef.onDuplicate(o, r), s;
        }
        return null;
      }
      applyConfig(e = {}) {
        return se(se({}, this.toastrConfig), e);
      }
      _findToast(e) {
        for (let t = 0; t < this.toasts.length; t++)
          if (this.toasts[t].toastId === e)
            return { index: t, activeToast: this.toasts[t] };
        return null;
      }
      _preBuildNotification(e, t, o, r) {
        return r.onActivateTick
          ? this.ngZone.run(() => this._buildNotification(e, t, o, r))
          : this._buildNotification(e, t, o, r);
      }
      _buildNotification(e, t, o, r) {
        if (!r.toastComponent) throw new Error("toastComponent required");
        let a = this.findDuplicate(
          o,
          t,
          this.toastrConfig.resetTimeoutOnDuplicate && r.timeOut > 0,
          this.toastrConfig.countDuplicates
        );
        if (
          ((this.toastrConfig.includeTitleDuplicates && o) || t) &&
          this.toastrConfig.preventDuplicates &&
          a !== null
        )
          return a;
        this.previousToastMessage = t;
        let s = !1;
        this.toastrConfig.maxOpened &&
          this.currentlyActive >= this.toastrConfig.maxOpened &&
          ((s = !0),
          this.toastrConfig.autoDismiss && this.clear(this.toasts[0].toastId));
        let c = this.overlay.create(r.positionClass, this.overlayContainer);
        this.index = this.index + 1;
        let p = t;
        t && r.enableHtml && (p = this.sanitizer.sanitize(Qp.HTML, t));
        let f = new Xu(c),
          y = new qr(this.index, r, p, o, e, f),
          x = [{ provide: qr, useValue: y }],
          C = Tt.create({ providers: x, parent: this._injector }),
          M = new Ku(r.toastComponent, C),
          k = c.attach(M, r.newestOnTop);
        f.componentInstance = k.instance;
        let O = {
          toastId: this.index,
          title: o || "",
          message: t || "",
          toastRef: f,
          onShown: f.afterActivate(),
          onHidden: f.afterClosed(),
          onTap: y.onTap(),
          onAction: y.onAction(),
          portal: k,
        };
        return (
          s ||
            ((this.currentlyActive = this.currentlyActive + 1),
            setTimeout(() => {
              O.toastRef.activate();
            })),
          this.toasts.push(O),
          O
        );
      }
      static ɵfac = function (t) {
        return new (t || n)(ie(u_), ie(Ww), ie(Tt), ie(cm), ie(He));
      };
      static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  $w = (() => {
    class n {
      toastrService;
      toastPackage;
      ngZone;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = pe(-1);
      toastClasses = "";
      state;
      get _state() {
        return this.state();
      }
      get displayStyle() {
        if (this.state().value === "inactive") return "none";
      }
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, t, o) {
        (this.toastrService = e),
          (this.toastPackage = t),
          (this.ngZone = o),
          (this.message = t.message),
          (this.title = t.title),
          (this.options = t.config),
          (this.originalTimeout = t.config.timeOut),
          (this.toastClasses = `${t.toastType} ${t.config.toastClass}`),
          (this.sub = t.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = t.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = t.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = t.toastRef.countDuplicate().subscribe((r) => {
            this.duplicatesCount = r;
          })),
          (this.state = pe({
            value: "inactive",
            params: {
              easeTime: this.toastPackage.config.easeTime,
              easing: "ease-in",
            },
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.update((e) => at(se({}, e), { value: "active" })),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            (this.outsideTimeout(() => this.remove(), this.options.timeOut),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              this.outsideInterval(() => this.updateProgress(), 10));
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          t = this.hideTime - e;
        this.width.set((t / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((o) => 100 - o),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.update((e) => at(se({}, e), { value: "active" })),
          this.outsideTimeout(() => this.remove(), this.originalTimeout),
          (this.options.timeOut = this.originalTimeout),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10);
      }
      remove() {
        this.state().value !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.update((e) => at(se({}, e), { value: "removed" })),
          this.outsideTimeout(
            () => this.toastrService.remove(this.toastPackage.toastId),
            +this.toastPackage.config.easeTime
          ));
      }
      tapToast() {
        this.state().value !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state().value !== "removed" &&
          this.options.disableTimeOut !== "extendedTimeOut" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state().value === "removed" ||
          (this.outsideTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          ),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10));
      }
      outsideTimeout(e, t) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.timeout = setTimeout(() => this.runInsideAngular(e), t))
            )
          : (this.timeout = setTimeout(() => e(), t));
      }
      outsideInterval(e, t) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.intervalId = setInterval(
                  () => this.runInsideAngular(e),
                  t
                ))
            )
          : (this.intervalId = setInterval(() => e(), t));
      }
      runInsideAngular(e) {
        this.ngZone ? this.ngZone.run(() => e()) : e();
      }
      static ɵfac = function (t) {
        return new (t || n)(j(mi), j(qr), j(He));
      };
      static ɵcmp = le({
        type: n,
        selectors: [["", "toast-component", ""]],
        hostVars: 5,
        hostBindings: function (t, o) {
          t & 1 &&
            z("click", function () {
              return o.tapToast();
            })("mouseenter", function () {
              return o.stickAround();
            })("mouseleave", function () {
              return o.delayedHideToast();
            }),
            t & 2 &&
              (Fs("@flyInOut", o._state),
              Ve(o.toastClasses),
              Si("display", o.displayStyle));
        },
        standalone: !0,
        features: [he],
        attrs: c_,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (t, o) {
          t & 1 &&
            F(0, Iw, 3, 0, "button", 0)(1, Aw, 3, 5, "div", 1)(
              2,
              Rw,
              1,
              3,
              "div",
              2
            )(3, Fw, 2, 4, "div", 3)(4, Nw, 2, 2, "div", 4),
            t & 2 &&
              (S("ngIf", o.options.closeButton),
              g(),
              S("ngIf", o.title),
              g(),
              S("ngIf", o.message && o.options.enableHtml),
              g(),
              S("ngIf", o.message && !o.options.enableHtml),
              g(),
              S("ngIf", o.options.progressBar));
        },
        dependencies: [Je],
        encapsulation: 2,
        data: {
          animation: [
            $o("flyInOut", [
              Xn("inactive", Qt({ opacity: 0 })),
              Xn("active", Qt({ opacity: 1 })),
              Xn("removed", Qt({ opacity: 0 })),
              Bi("inactive => active", Li("{{ easeTime }}ms {{ easing }}")),
              Bi("active => removed", Li("{{ easeTime }}ms {{ easing }}")),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return n;
  })(),
  Gw = at(se({}, d_), { toastComponent: $w }),
  Yw = (n = {}) => As([{ provide: u_, useValue: { default: Gw, config: n } }]),
  h_ = (() => {
    class n {
      static forRoot(e = {}) {
        return { ngModule: n, providers: [Yw(e)] };
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = De({ type: n });
      static ɵinj = we({});
    }
    return n;
  })();
var qw = (() => {
    class n {
      toastrService;
      toastPackage;
      appRef;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = pe(-1);
      toastClasses = "";
      get displayStyle() {
        return this.state() === "inactive" ? "none" : null;
      }
      state = pe("inactive");
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, t, o) {
        (this.toastrService = e),
          (this.toastPackage = t),
          (this.appRef = o),
          (this.message = t.message),
          (this.title = t.title),
          (this.options = t.config),
          (this.originalTimeout = t.config.timeOut),
          (this.toastClasses = `${t.toastType} ${t.config.toastClass}`),
          (this.sub = t.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = t.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = t.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = t.toastRef.countDuplicate().subscribe((r) => {
            this.duplicatesCount = r;
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.set("active"),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            ((this.timeout = setTimeout(() => {
              this.remove();
            }, this.options.timeOut)),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              (this.intervalId = setInterval(() => this.updateProgress(), 10))),
          this.options.onActivateTick && this.appRef.tick();
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          t = this.hideTime - e;
        this.width.set((t / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((o) => 100 - o),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.set("active"),
          (this.options.timeOut = this.originalTimeout),
          (this.timeout = setTimeout(
            () => this.remove(),
            this.originalTimeout
          )),
          (this.hideTime = new Date().getTime() + (this.originalTimeout || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10));
      }
      remove() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.set("removed"),
          (this.timeout = setTimeout(() =>
            this.toastrService.remove(this.toastPackage.toastId)
          )));
      }
      tapToast() {
        this.state() !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state() === "removed" ||
          ((this.timeout = setTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          )),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10)));
      }
      static ɵfac = function (t) {
        return new (t || n)(j(mi), j(qr), j(Qn));
      };
      static ɵcmp = le({
        type: n,
        selectors: [["", "toast-component", ""]],
        hostVars: 4,
        hostBindings: function (t, o) {
          t & 1 &&
            z("click", function () {
              return o.tapToast();
            })("mouseenter", function () {
              return o.stickAround();
            })("mouseleave", function () {
              return o.delayedHideToast();
            }),
            t & 2 && (Ve(o.toastClasses), Si("display", o.displayStyle));
        },
        standalone: !0,
        features: [he],
        attrs: c_,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (t, o) {
          t & 1 &&
            F(0, Vw, 3, 0, "button", 0)(1, Bw, 3, 5, "div", 1)(
              2,
              Hw,
              1,
              3,
              "div",
              2
            )(3, jw, 2, 4, "div", 3)(4, zw, 2, 2, "div", 4),
            t & 2 &&
              (S("ngIf", o.options.closeButton),
              g(),
              S("ngIf", o.title),
              g(),
              S("ngIf", o.message && o.options.enableHtml),
              g(),
              S("ngIf", o.message && !o.options.enableHtml),
              g(),
              S("ngIf", o.options.progressBar));
        },
        dependencies: [Je],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })(),
  sP = at(se({}, d_), { toastComponent: qw });
var Xw = ["*"];
var Zw = ["dialog"];
var p_ = { animation: !0, transitionTimerDelayMs: 5 },
  Jw = (() => {
    class n {
      constructor() {
        this.animation = p_.animation;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function eD(n) {
  let { transitionDelay: i, transitionDuration: e } =
      window.getComputedStyle(n),
    t = parseFloat(i),
    o = parseFloat(e);
  return (t + o) * 1e3;
}
function m_(n) {
  return typeof n == "string";
}
function eh(n) {
  return n != null;
}
function tD(n) {
  return n && n.then;
}
function f_(n) {
  return (n || document.body).getBoundingClientRect();
}
function iD(n) {
  return (i) =>
    new jo((e) => {
      let t = (a) => n.run(() => e.next(a)),
        o = (a) => n.run(() => e.error(a)),
        r = () => n.run(() => e.complete());
      return i.subscribe({ next: t, error: o, complete: r });
    });
}
var nD = () => {},
  { transitionTimerDelayMs: oD } = p_,
  Gl = new Map(),
  or = (n, i, e, t) => {
    let o = t.context || {},
      r = Gl.get(i);
    if (r)
      switch (t.runningTransition) {
        case "continue":
          return Bp;
        case "stop":
          n.run(() => r.transition$.complete()),
            (o = Object.assign(r.context, o)),
            Gl.delete(i);
      }
    let a = e(i, t.animation, o) || nD;
    if (
      !t.animation ||
      window.getComputedStyle(i).transitionProperty === "none"
    )
      return n.run(() => a()), Et(void 0).pipe(iD(n));
    let s = new Ae(),
      c = new Ae(),
      p = s.pipe($p(!0));
    Gl.set(i, {
      transition$: s,
      complete: () => {
        c.next(), c.complete();
      },
      context: o,
    });
    let f = eD(i);
    return (
      n.runOutsideAngular(() => {
        let y = ln(i, "transitionend").pipe(
            jt(p),
            vi(({ target: C }) => C === i)
          ),
          x = Up(f + oD).pipe(jt(p));
        Wp(x, y, c)
          .pipe(jt(p))
          .subscribe(() => {
            Gl.delete(i),
              n.run(() => {
                a(), s.next(), s.complete();
              });
          });
      }),
      s.asObservable()
    );
  };
var jP = (() => {
  let n = () =>
      /iPad|iPhone|iPod/.test(navigator.userAgent) ||
      (/Macintosh/.test(navigator.userAgent) &&
        navigator.maxTouchPoints &&
        navigator.maxTouchPoints > 2),
    i = () => /Android/.test(navigator.userAgent);
  return typeof navigator < "u" ? !!navigator.userAgent && (n() || i()) : !1;
})();
var rD = [
  "a[href]",
  "button:not([disabled])",
  'input:not([disabled]):not([type="hidden"])',
  "select:not([disabled])",
  "textarea:not([disabled])",
  "[contenteditable]",
  '[tabindex]:not([tabindex="-1"])',
].join(", ");
function g_(n) {
  let i = Array.from(n.querySelectorAll(rD)).filter((e) => e.tabIndex !== -1);
  return [i[0], i[i.length - 1]];
}
var aD = (n, i, e, t = !1) => {
  n.runOutsideAngular(() => {
    let o = ln(i, "focusin").pipe(
      jt(e),
      qn((r) => r.target)
    );
    ln(i, "keydown")
      .pipe(
        jt(e),
        vi((r) => r.key === "Tab"),
        sd(o)
      )
      .subscribe(([r, a]) => {
        let [s, c] = g_(i);
        (a === s || a === i) && r.shiftKey && (c.focus(), r.preventDefault()),
          a === c && !r.shiftKey && (s.focus(), r.preventDefault());
      }),
      t &&
        ln(i, "click")
          .pipe(
            jt(e),
            sd(o),
            qn((r) => r[1])
          )
          .subscribe((r) => r.focus());
  });
};
var zP = new Date(1882, 10, 12),
  UP = new Date(2174, 10, 25);
var WP = 1e3 * 60 * 60 * 24;
var nh = 1080,
  sD = 24 * nh,
  lD = 12 * nh + 793,
  $P = 29 * sD + lD,
  GP = 11 * nh + 204;
var cD = (() => {
    class n {
      constructor() {
        (this._ngbConfig = ne(Jw)),
          (this.backdrop = !0),
          (this.fullscreen = !1),
          (this.keyboard = !0);
      }
      get animation() {
        return this._animation ?? this._ngbConfig.animation;
      }
      set animation(e) {
        this._animation = e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Kr = class {
    constructor(i, e, t) {
      (this.nodes = i), (this.viewRef = e), (this.componentRef = t);
    }
  };
var dD = (() => {
    class n {
      constructor() {
        this._document = ne(ze);
      }
      hide() {
        let e = Math.abs(
            window.innerWidth - this._document.documentElement.clientWidth
          ),
          t = this._document.body,
          o = t.style,
          { overflow: r, paddingRight: a } = o;
        if (e > 0) {
          let s = parseFloat(window.getComputedStyle(t).paddingRight);
          o.paddingRight = `${s + e}px`;
        }
        return (
          (o.overflow = "hidden"),
          () => {
            e > 0 && (o.paddingRight = a), (o.overflow = r);
          }
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  uD = (() => {
    class n {
      constructor() {
        (this._nativeElement = ne(Ne).nativeElement),
          (this._zone = ne(He)),
          (this._injector = ne(Tt));
      }
      ngOnInit() {
        Kn(
          () =>
            or(
              this._zone,
              this._nativeElement,
              (e, t) => {
                t && f_(e), e.classList.add("show");
              },
              { animation: this.animation, runningTransition: "continue" }
            ),
          { injector: this._injector, phase: cd.MixedReadWrite }
        );
      }
      hide() {
        return or(
          this._zone,
          this._nativeElement,
          ({ classList: e }) => e.remove("show"),
          { animation: this.animation, runningTransition: "stop" }
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["ngb-modal-backdrop"]],
          hostAttrs: [2, "z-index", "1055"],
          hostVars: 6,
          hostBindings: function (t, o) {
            t & 2 &&
              (Ve(
                "modal-backdrop" +
                  (o.backdropClass ? " " + o.backdropClass : "")
              ),
              Ce("show", !o.animation)("fade", o.animation));
          },
          inputs: { animation: "animation", backdropClass: "backdropClass" },
          standalone: !0,
          features: [he],
          decls: 0,
          vars: 0,
          template: function (t, o) {},
          encapsulation: 2,
        });
      }
    }
    return n;
  })(),
  Yl = class {
    update(i) {}
    close(i) {}
    dismiss(i) {}
  },
  hD = [
    "animation",
    "ariaLabelledBy",
    "ariaDescribedBy",
    "backdrop",
    "centered",
    "fullscreen",
    "keyboard",
    "scrollable",
    "size",
    "windowClass",
    "modalDialogClass",
  ],
  pD = ["animation", "backdropClass"],
  th = class {
    _applyWindowOptions(i, e) {
      hD.forEach((t) => {
        eh(e[t]) && (i[t] = e[t]);
      });
    }
    _applyBackdropOptions(i, e) {
      pD.forEach((t) => {
        eh(e[t]) && (i[t] = e[t]);
      });
    }
    update(i) {
      this._applyWindowOptions(this._windowCmptRef.instance, i),
        this._backdropCmptRef &&
          this._backdropCmptRef.instance &&
          this._applyBackdropOptions(this._backdropCmptRef.instance, i);
    }
    get componentInstance() {
      if (this._contentRef && this._contentRef.componentRef)
        return this._contentRef.componentRef.instance;
    }
    get closed() {
      return this._closed.asObservable().pipe(jt(this._hidden));
    }
    get dismissed() {
      return this._dismissed.asObservable().pipe(jt(this._hidden));
    }
    get hidden() {
      return this._hidden.asObservable();
    }
    get shown() {
      return this._windowCmptRef.instance.shown.asObservable();
    }
    constructor(i, e, t, o) {
      (this._windowCmptRef = i),
        (this._contentRef = e),
        (this._backdropCmptRef = t),
        (this._beforeDismiss = o),
        (this._closed = new Ae()),
        (this._dismissed = new Ae()),
        (this._hidden = new Ae()),
        i.instance.dismissEvent.subscribe((r) => {
          this.dismiss(r);
        }),
        (this.result = new Promise((r, a) => {
          (this._resolve = r), (this._reject = a);
        })),
        this.result.then(null, () => {});
    }
    close(i) {
      this._windowCmptRef &&
        (this._closed.next(i), this._resolve(i), this._removeModalElements());
    }
    _dismiss(i) {
      this._dismissed.next(i), this._reject(i), this._removeModalElements();
    }
    dismiss(i) {
      if (this._windowCmptRef)
        if (!this._beforeDismiss) this._dismiss(i);
        else {
          let e = this._beforeDismiss();
          tD(e)
            ? e.then(
                (t) => {
                  t !== !1 && this._dismiss(i);
                },
                () => {}
              )
            : e !== !1 && this._dismiss(i);
        }
    }
    _removeModalElements() {
      let i = this._windowCmptRef.instance.hide(),
        e = this._backdropCmptRef
          ? this._backdropCmptRef.instance.hide()
          : Et(void 0);
      i.subscribe(() => {
        let { nativeElement: t } = this._windowCmptRef.location;
        t.parentNode.removeChild(t),
          this._windowCmptRef.destroy(),
          this._contentRef?.viewRef?.destroy(),
          (this._windowCmptRef = null),
          (this._contentRef = null);
      }),
        e.subscribe(() => {
          if (this._backdropCmptRef) {
            let { nativeElement: t } = this._backdropCmptRef.location;
            t.parentNode.removeChild(t),
              this._backdropCmptRef.destroy(),
              (this._backdropCmptRef = null);
          }
        }),
        Is(i, e).subscribe(() => {
          this._hidden.next(), this._hidden.complete();
        });
    }
  },
  ih = (function (n) {
    return (
      (n[(n.BACKDROP_CLICK = 0)] = "BACKDROP_CLICK"),
      (n[(n.ESC = 1)] = "ESC"),
      n
    );
  })(ih || {}),
  mD = (() => {
    class n {
      constructor() {
        (this._document = ne(ze)),
          (this._elRef = ne(Ne)),
          (this._zone = ne(He)),
          (this._injector = ne(Tt)),
          (this._closed$ = new Ae()),
          (this._elWithFocus = null),
          (this.backdrop = !0),
          (this.keyboard = !0),
          (this.dismissEvent = new Se()),
          (this.shown = new Ae()),
          (this.hidden = new Ae());
      }
      get fullscreenClass() {
        return this.fullscreen === !0
          ? " modal-fullscreen"
          : m_(this.fullscreen)
          ? ` modal-fullscreen-${this.fullscreen}-down`
          : "";
      }
      dismiss(e) {
        this.dismissEvent.emit(e);
      }
      ngOnInit() {
        (this._elWithFocus = this._document.activeElement),
          Kn(() => this._show(), {
            injector: this._injector,
            phase: cd.MixedReadWrite,
          });
      }
      ngOnDestroy() {
        this._disableEventHandling();
      }
      hide() {
        let { nativeElement: e } = this._elRef,
          t = { animation: this.animation, runningTransition: "stop" },
          o = or(this._zone, e, () => e.classList.remove("show"), t),
          r = or(this._zone, this._dialogEl.nativeElement, () => {}, t),
          a = Is(o, r);
        return (
          a.subscribe(() => {
            this.hidden.next(), this.hidden.complete();
          }),
          this._disableEventHandling(),
          this._restoreFocus(),
          a
        );
      }
      _show() {
        let e = { animation: this.animation, runningTransition: "continue" },
          t = or(
            this._zone,
            this._elRef.nativeElement,
            (r, a) => {
              a && f_(r), r.classList.add("show");
            },
            e
          ),
          o = or(this._zone, this._dialogEl.nativeElement, () => {}, e);
        Is(t, o).subscribe(() => {
          this.shown.next(), this.shown.complete();
        }),
          this._enableEventHandling(),
          this._setFocus();
      }
      _enableEventHandling() {
        let { nativeElement: e } = this._elRef;
        this._zone.runOutsideAngular(() => {
          ln(e, "keydown")
            .pipe(
              jt(this._closed$),
              vi((o) => o.key === "Escape")
            )
            .subscribe((o) => {
              this.keyboard
                ? requestAnimationFrame(() => {
                    o.defaultPrevented ||
                      this._zone.run(() => this.dismiss(ih.ESC));
                  })
                : this.backdrop === "static" && this._bumpBackdrop();
            });
          let t = !1;
          ln(this._dialogEl.nativeElement, "mousedown")
            .pipe(
              jt(this._closed$),
              ad(() => (t = !1)),
              rd(() => ln(e, "mouseup").pipe(jt(this._closed$), zo(1))),
              vi(({ target: o }) => e === o)
            )
            .subscribe(() => {
              t = !0;
            }),
            ln(e, "click")
              .pipe(jt(this._closed$))
              .subscribe(({ target: o }) => {
                e === o &&
                  (this.backdrop === "static"
                    ? this._bumpBackdrop()
                    : this.backdrop === !0 &&
                      !t &&
                      this._zone.run(() => this.dismiss(ih.BACKDROP_CLICK))),
                  (t = !1);
              });
        });
      }
      _disableEventHandling() {
        this._closed$.next();
      }
      _setFocus() {
        let { nativeElement: e } = this._elRef;
        if (!e.contains(document.activeElement)) {
          let t = e.querySelector("[ngbAutofocus]"),
            o = g_(e)[0];
          (t || o || e).focus();
        }
      }
      _restoreFocus() {
        let e = this._document.body,
          t = this._elWithFocus,
          o;
        t && t.focus && e.contains(t) ? (o = t) : (o = e),
          this._zone.runOutsideAngular(() => {
            setTimeout(() => o.focus()), (this._elWithFocus = null);
          });
      }
      _bumpBackdrop() {
        this.backdrop === "static" &&
          or(
            this._zone,
            this._elRef.nativeElement,
            ({ classList: e }) => (
              e.add("modal-static"), () => e.remove("modal-static")
            ),
            { animation: this.animation, runningTransition: "continue" }
          );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["ngb-modal-window"]],
          viewQuery: function (t, o) {
            if ((t & 1 && Bt(Zw, 7), t & 2)) {
              let r;
              _t((r = bt())) && (o._dialogEl = r.first);
            }
          },
          hostAttrs: ["role", "dialog", "tabindex", "-1"],
          hostVars: 7,
          hostBindings: function (t, o) {
            t & 2 &&
              (de("aria-modal", !0)("aria-labelledby", o.ariaLabelledBy)(
                "aria-describedby",
                o.ariaDescribedBy
              ),
              Ve("modal d-block" + (o.windowClass ? " " + o.windowClass : "")),
              Ce("fade", o.animation));
          },
          inputs: {
            animation: "animation",
            ariaLabelledBy: "ariaLabelledBy",
            ariaDescribedBy: "ariaDescribedBy",
            backdrop: "backdrop",
            centered: "centered",
            fullscreen: "fullscreen",
            keyboard: "keyboard",
            scrollable: "scrollable",
            size: "size",
            windowClass: "windowClass",
            modalDialogClass: "modalDialogClass",
          },
          outputs: { dismissEvent: "dismiss" },
          standalone: !0,
          features: [he],
          ngContentSelectors: Xw,
          decls: 4,
          vars: 2,
          consts: [
            ["dialog", ""],
            ["role", "document"],
            [1, "modal-content"],
          ],
          template: function (t, o) {
            t & 1 && (Ut(), u(0, "div", 1, 0)(2, "div", 2), kt(3), d()()),
              t & 2 &&
                Ve(
                  "modal-dialog" +
                    (o.size ? " modal-" + o.size : "") +
                    (o.centered ? " modal-dialog-centered" : "") +
                    o.fullscreenClass +
                    (o.scrollable ? " modal-dialog-scrollable" : "") +
                    (o.modalDialogClass ? " " + o.modalDialogClass : "")
                );
          },
          styles: [
            `ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}
`,
          ],
          encapsulation: 2,
        });
      }
    }
    return n;
  })(),
  fD = (() => {
    class n {
      constructor() {
        (this._applicationRef = ne(Qn)),
          (this._injector = ne(Tt)),
          (this._environmentInjector = ne(xa)),
          (this._document = ne(ze)),
          (this._scrollBar = ne(dD)),
          (this._activeWindowCmptHasChanged = new Ae()),
          (this._ariaHiddenValues = new Map()),
          (this._scrollBarRestoreFn = null),
          (this._modalRefs = []),
          (this._windowCmpts = []),
          (this._activeInstances = new Se());
        let e = ne(He);
        this._activeWindowCmptHasChanged.subscribe(() => {
          if (this._windowCmpts.length) {
            let t = this._windowCmpts[this._windowCmpts.length - 1];
            aD(e, t.location.nativeElement, this._activeWindowCmptHasChanged),
              this._revertAriaHidden(),
              this._setAriaHidden(t.location.nativeElement);
          }
        });
      }
      _restoreScrollBar() {
        let e = this._scrollBarRestoreFn;
        e && ((this._scrollBarRestoreFn = null), e());
      }
      _hideScrollBar() {
        this._scrollBarRestoreFn ||
          (this._scrollBarRestoreFn = this._scrollBar.hide());
      }
      open(e, t, o) {
        let r =
          o.container instanceof HTMLElement
            ? o.container
            : eh(o.container)
            ? this._document.querySelector(o.container)
            : this._document.body;
        if (!r)
          throw new Error(
            `The specified modal container "${
              o.container || "body"
            }" was not found in the DOM.`
          );
        this._hideScrollBar();
        let a = new Yl();
        e = o.injector || e;
        let s = e.get(xa, null) || this._environmentInjector,
          c = this._getContentRef(e, s, t, a, o),
          p = o.backdrop !== !1 ? this._attachBackdrop(r) : void 0,
          f = this._attachWindowComponent(r, c.nodes),
          y = new th(f, c, p, o.beforeDismiss);
        return (
          this._registerModalRef(y),
          this._registerWindowCmpt(f),
          y.hidden.pipe(zo(1)).subscribe(() =>
            Promise.resolve(!0).then(() => {
              this._modalRefs.length ||
                (this._document.body.classList.remove("modal-open"),
                this._restoreScrollBar(),
                this._revertAriaHidden());
            })
          ),
          (a.close = (x) => {
            y.close(x);
          }),
          (a.dismiss = (x) => {
            y.dismiss(x);
          }),
          (a.update = (x) => {
            y.update(x);
          }),
          y.update(o),
          this._modalRefs.length === 1 &&
            this._document.body.classList.add("modal-open"),
          p && p.instance && p.changeDetectorRef.detectChanges(),
          f.changeDetectorRef.detectChanges(),
          y
        );
      }
      get activeInstances() {
        return this._activeInstances;
      }
      dismissAll(e) {
        this._modalRefs.forEach((t) => t.dismiss(e));
      }
      hasOpenModals() {
        return this._modalRefs.length > 0;
      }
      _attachBackdrop(e) {
        let t = Ns(uD, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
        });
        return (
          this._applicationRef.attachView(t.hostView),
          e.appendChild(t.location.nativeElement),
          t
        );
      }
      _attachWindowComponent(e, t) {
        let o = Ns(mD, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
          projectableNodes: t,
        });
        return (
          this._applicationRef.attachView(o.hostView),
          e.appendChild(o.location.nativeElement),
          o
        );
      }
      _getContentRef(e, t, o, r, a) {
        return o
          ? o instanceof En
            ? this._createFromTemplateRef(o, r)
            : m_(o)
            ? this._createFromString(o)
            : this._createFromComponent(e, t, o, r, a)
          : new Kr([]);
      }
      _createFromTemplateRef(e, t) {
        let o = {
            $implicit: t,
            close(a) {
              t.close(a);
            },
            dismiss(a) {
              t.dismiss(a);
            },
          },
          r = e.createEmbeddedView(o);
        return this._applicationRef.attachView(r), new Kr([r.rootNodes], r);
      }
      _createFromString(e) {
        let t = this._document.createTextNode(`${e}`);
        return new Kr([[t]]);
      }
      _createFromComponent(e, t, o, r, a) {
        let s = Tt.create({
            providers: [{ provide: Yl, useValue: r }],
            parent: e,
          }),
          c = Ns(o, { environmentInjector: t, elementInjector: s }),
          p = c.location.nativeElement;
        return (
          a.scrollable && p.classList.add("component-host-scrollable"),
          this._applicationRef.attachView(c.hostView),
          new Kr([[p]], c.hostView, c)
        );
      }
      _setAriaHidden(e) {
        let t = e.parentElement;
        t &&
          e !== this._document.body &&
          (Array.from(t.children).forEach((o) => {
            o !== e &&
              o.nodeName !== "SCRIPT" &&
              (this._ariaHiddenValues.set(o, o.getAttribute("aria-hidden")),
              o.setAttribute("aria-hidden", "true"));
          }),
          this._setAriaHidden(t));
      }
      _revertAriaHidden() {
        this._ariaHiddenValues.forEach((e, t) => {
          e
            ? t.setAttribute("aria-hidden", e)
            : t.removeAttribute("aria-hidden");
        }),
          this._ariaHiddenValues.clear();
      }
      _registerModalRef(e) {
        let t = () => {
          let o = this._modalRefs.indexOf(e);
          o > -1 &&
            (this._modalRefs.splice(o, 1),
            this._activeInstances.emit(this._modalRefs));
        };
        this._modalRefs.push(e),
          this._activeInstances.emit(this._modalRefs),
          e.result.then(t, t);
      }
      _registerWindowCmpt(e) {
        this._windowCmpts.push(e),
          this._activeWindowCmptHasChanged.next(),
          e.onDestroy(() => {
            let t = this._windowCmpts.indexOf(e);
            t > -1 &&
              (this._windowCmpts.splice(t, 1),
              this._activeWindowCmptHasChanged.next());
          });
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  es = (() => {
    class n {
      constructor() {
        (this._injector = ne(Tt)),
          (this._modalStack = ne(fD)),
          (this._config = ne(cD));
      }
      open(e, t = {}) {
        let o = se(
          at(se({}, this._config), { animation: this._config.animation }),
          t
        );
        return this._modalStack.open(this._injector, e, o);
      }
      get activeInstances() {
        return this._modalStack.activeInstances;
      }
      dismissAll(e) {
        this._modalStack.dismissAll(e);
      }
      hasOpenModals() {
        return this._modalStack.hasOpenModals();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Ln = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = De({ type: n });
      }
      static {
        this.ɵinj = we({ providers: [es] });
      }
    }
    return n;
  })();
var YP = new Ze("live announcer delay", {
  providedIn: "root",
  factory: () => 100,
});
var gD = (n) => ["/Admin/singleUser", n],
  b_ = (n) => ({ "is-invalid": n });
function _D(n, i) {
  n & 1 && (u(0, "tr")(1, "td", 45)(2, "p"), m(3, "No Dealers Found"), d()()());
}
function bD(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td"),
      m(6),
      d(),
      u(7, "td")(8, "div", 46)(9, "a", 47),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.onEdit(o.dealer_id));
      }),
      W(10, "i", 48),
      d(),
      u(11, "a", 49),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.openDeleteModal(o));
      }),
      W(12, "i", 50),
      d(),
      u(13, "a", 51)(14, "span", 52),
      W(15, "i", 53),
      d()()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      o = E();
    g(2),
      B((o.currentPage - 1) * o.itemsPerPage + t + 1),
      g(2),
      B(e.dealer_name),
      g(2),
      B(e.dealer_code),
      g(7),
      S("routerLink", ye(4, gD, e.dealer_id));
  }
}
function vD(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "li", 54)(1, "a", 41),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.goToPage(o));
      }),
      m(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = E();
    Ce("active", e === t.currentPage), g(2), B(e);
  }
}
function yD(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 55)(1, "div", 56)(2, "div", 57)(3, "div", 58)(4, "h5", 59),
      m(5, "Delete Dealer"),
      d()(),
      u(6, "div", 60),
      m(7, "Are you sure you want to delete this dealer?"),
      d(),
      u(8, "div", 61)(9, "button", 62),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeDeleteModal());
      }),
      m(10, "Cancel"),
      d(),
      u(11, "button", 63),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.deleteDealerId());
      }),
      m(12, "Delete"),
      d()()()()();
  }
}
function xD(n, i) {
  n & 1 && (u(0, "span", 77), m(1, "*"), d());
}
function CD(n, i) {
  n & 1 &&
    (u(0, "div", 78)(1, "span"), m(2, "Dealer Name is required."), d()());
}
function wD(n, i) {
  n & 1 && (u(0, "span", 78), m(1, "*"), d());
}
function DD(n, i) {
  n & 1 &&
    (u(0, "div", 78)(1, "span"), m(2, "Dealer Code is required."), d()());
}
function SD(n, i) {
  if (n & 1) {
    let e = ce();
    $e(0),
      u(1, "button", 79),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.onUpdate());
      }),
      m(2, " Edit "),
      d(),
      Ge();
  }
  if (n & 2) {
    let e = E(2);
    g(), S("disabled", !e.isFormChanged());
  }
}
function MD(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 62),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.onSave());
      }),
      m(1, " save "),
      d();
  }
  if (n & 2) {
    let e = E(2);
    de("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function ED(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 55)(1, "div", 64)(2, "div", 57)(3, "div", 58)(4, "h5", 65),
      m(5),
      d(),
      u(6, "button", 66),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeModal());
      }),
      u(7, "span", 67),
      m(8, "\xD7"),
      d()()(),
      u(9, "div", 68)(10, "label", 69),
      m(11, " Dealer Name"),
      F(12, xD, 2, 0, "span", 70),
      d(),
      W(13, "input", 71),
      F(14, CD, 3, 0, "div", 72),
      d(),
      u(15, "div", 68)(16, "label", 73),
      m(17, " Dealer Code"),
      F(18, wD, 2, 0, "span", 72),
      d(),
      W(19, "input", 74),
      F(20, DD, 3, 0, "div", 72),
      d(),
      u(21, "div", 61),
      F(22, SD, 3, 1, "ng-container", 75),
      u(23, "button", 76),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeModal());
      }),
      m(24, " Close "),
      d(),
      F(25, MD, 2, 1, "ng-template", null, 0, Wt),
      d()()()();
  }
  if (n & 2) {
    let e,
      t,
      o,
      r,
      a = Dt(26),
      s = E();
    g(5),
      oe(" ", s.dealerObj.dealer_id ? "Edit Dealer" : "Add New Dealer", " "),
      g(4),
      S("formGroup", s.useForm),
      g(3),
      S("ngIf", !s.isEditMode),
      g(),
      S(
        "ngClass",
        ye(
          11,
          b_,
          ((e = s.useForm.get("dealer_name")) == null ? null : e.touched) &&
            ((e = s.useForm.get("dealer_name")) == null ? null : e.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        ((t = s.useForm.get("dealer_name")) == null ? null : t.touched) &&
          ((t = s.useForm.get("dealer_name")) == null ? null : t.invalid)
      ),
      g(),
      S("formGroup", s.useForm),
      g(3),
      S("ngIf", !s.isEditMode),
      g(),
      S(
        "ngClass",
        ye(
          13,
          b_,
          ((o = s.useForm.get("dealer_code")) == null ? null : o.touched) &&
            ((o = s.useForm.get("dealer_code")) == null ? null : o.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        ((r = s.useForm.get("dealer_code")) == null ? null : r.touched) &&
          ((r = s.useForm.get("dealer_code")) == null ? null : r.invalid)
      ),
      g(2),
      S("ngIf", s.dealerObj == null ? null : s.dealerObj.dealer_id)(
        "ngIfElse",
        a
      );
  }
}
var ql = class n {
  constructor(i) {
    this.modalService = i;
    this.useForm = new St({
      dealer_name: new nt(this.dealerObj.dealer_name, [
        Oe.required,
        Oe.minLength(2),
      ]),
      dealer_code: new nt(this.dealerObj.dealer_code, [
        Oe.required,
        Oe.minLength(5),
      ]),
    });
  }
  http = ne(ti);
  dealerList = pe([]);
  totalDealer = pe(0);
  masterSrv = ne(Ye);
  dealerObj = new lo();
  selectedRowCount = 3;
  isLoading = !1;
  isModalVisible = !1;
  isModalOpen = !1;
  isEditMode = !1;
  useForm;
  previousValue = "";
  isDeleteModalOpen = !1;
  itemsPerPage = 10;
  originalDealerName = "";
  originalDealerC = "";
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  currentPage = 1;
  originalFormValue;
  searchTerm = "";
  filteredDealers = [];
  paginatedDealers = [];
  totalPages = 0;
  pages = [];
  toastr = ne(mi);
  openModal(i) {
    (this.isModalOpen = !0),
      console.log("open modal called"),
      this.useForm.reset(),
      (this.isModalVisible = !0),
      i
        ? ((this.previousValue = i.dealer_name),
          this.useForm.patchValue({
            dealer_name: i.dealer_name,
            dealer_code: i.dealer_code,
            dealer_email: i.dealer_email,
          }),
          (this.dealerObj = se({}, i)))
        : (this.dealerObj = new lo());
  }
  isDealerNameChanged() {
    return this.useForm.get("dealer_name")?.value !== this.originalDealerName;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllDealer(),
      this.getAllDealer();
  }
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe(
      (i) => {
        console.log("Dealer list updated:", i.data.dealer.rows),
          this.dealerList.set(i.data.dealer.rows),
          (this.filteredDealers = i.data.dealer.rows),
          this.totalDealer.set(i.data.dealer.count),
          this.initializeDealerPagination();
      },
      (i) => {
        this.toastr.error("Error fetching dealers", "Error"),
          console.error("Error fetching dealers:", i),
          this.dealerList.set([]),
          (this.filteredDealers = []),
          this.totalDealer.set(0),
          this.initializeDealerPagination();
      }
    );
  }
  initializeDealerPagination() {
    let i = this.filteredDealers.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateDealers();
  }
  applyFilterAndPagination() {
    let e = this.dealerList().filter(
      (r) =>
        r.dealer_name?.toLowerCase().includes(this.searchTerm.toLowerCase()) ||
        r.dealer_code
          ?.toString()
          .toLowerCase()
          .includes(this.searchTerm.toLowerCase())
    );
    (this.filteredDealers = e),
      (this.totalPages = Math.ceil(e.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (r, a) => a + 1));
    let t = (this.currentPage - 1) * this.itemsPerPage,
      o = t + this.itemsPerPage;
    this.paginatedDealers = e.slice(t, o);
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateDealers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredDealers = this.dealerList();
    else {
      let i = this.searchTerm.toLowerCase();
      this.filteredDealers = this.dealerList().filter((e) =>
        e.dealer_name.toLowerCase().includes(i)
      );
    }
    (this.currentPage = 1), this.paginateDealers();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateDealers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateDealers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateDealers());
  }
  paginateDealers() {
    let e = this.dealerList().filter(
        (r) =>
          r.dealer_name
            ?.toLowerCase()
            .includes(this.searchTerm.toLowerCase()) ||
          r.dealer_code
            ?.toString()
            .toLowerCase()
            .includes(this.searchTerm.toLowerCase())
      ),
      t = (this.currentPage - 1) * this.itemsPerPage,
      o = t + this.itemsPerPage;
    this.paginatedDealers = e.slice(t, o);
  }
  openDeleteModal(i) {
    console.log("\u{1F5D1}\uFE0F Delete button clicked", i),
      (this.selectedDealerForDeletion = i),
      (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    this.isEditMode ? this.onUpdate() : this.createNewDealer(),
      this.closeModal();
  }
  createNewDealer() {
    this.masterSrv.createDealer(this.dealerObj).subscribe(
      (i) => {
        this.toastr.success("Dealer created successfully!", "Success"),
          this.getAllDealer();
      },
      (i) => {
        this.toastr.error("Error creating dealer", "Error");
      }
    );
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      console.log("Dropdown changed to:", this.itemsPerPage),
      this.applyFilterAndPagination();
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.dealerObj = se(se({}, this.dealerObj), this.useForm.value)),
        console.log(
          "\u{1F680} Updated Payload before API call:",
          this.dealerObj
        ),
        this.masterSrv.updateDealer(this.dealerObj).subscribe(
          (i) => {
            console.log("\u2705 API Response:", i),
              i.status === 200
                ? (this.toastr.success(
                    i.message || "Dealer updated successfully",
                    "Success"
                  ),
                  (this.isModalOpen = !1),
                  (this.originalDealerName = ""),
                  (this.originalDealerC = ""),
                  setTimeout(() => {
                    this.getAllDealer();
                  }, 500))
                : this.toastr.error(i.message || "Update failed", "Error");
          },
          (i) => {
            console.error("\u274C API Error:", i);
            let e = i?.error?.message || "Failed to update dealer";
            this.toastr.error(e, "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(i) {
    console.log("Edit button clicked. Dealer ID:", i),
      (this.isEditMode = !0),
      this.masterSrv.getDealerById(i).subscribe(
        (e) => {
          let t = e?.data?.dealer;
          t
            ? ((this.dealerObj = at(se({}, t), {
                dealer_code: Number(t.dealer_code),
              })),
              this.useForm.patchValue({
                dealer_name: t.dealer_name,
                dealer_code: Number(t.dealer_code),
              }),
              (this.originalFormValue = se({}, this.useForm.value)),
              (this.isModalOpen = !0))
            : this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isFormChanged() {
    return (
      this.useForm.get("dealer_name")?.value !== this.originalDealerName ||
      this.useForm.get("dealer_code")?.value !== this.originalDealerC
    );
  }
  selectedDealerForDeletion = null;
  selectDealerForDeletion(i) {
    this.selectedDealerForDeletion = i;
  }
  deleteDealerId() {
    this.selectedDealerForDeletion && this.selectedDealerForDeletion.dealer_id
      ? this.masterSrv
          .deleteDealer(this.selectedDealerForDeletion.dealer_id)
          .subscribe(
            (i) => {
              this.getAllDealer(),
                this.closeModal(),
                this.toastr.success("Dealer Deleted", "Successful");
            },
            (i) => {
              alert(i.message || "Failed to delete vehicle");
            }
          )
      : alert("No vehicle selected for deletion");
  }
  static ɵfac = function (e) {
    return new (e || n)(j(es));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-dealer"]],
    standalone: !0,
    features: [he],
    decls: 72,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "dashboard-container"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search dealers...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      ["colspan", "5", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        "border",
        "2px solid #222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-success",
        "shadow",
        "btn-xs",
        "sharp",
        2,
        "margin-left",
        "5px",
        3,
        "routerLink",
      ],
      [1, "", 2, "margin-left", "0 !important"],
      [1, "fa", "fa-eye"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      ["role", "document", 1, "modal-dialog", "modal-dialog-centered"],
      [1, "modal-title", 2, "align-items", "center", "margin-inline", "auto"],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "form-group", 2, "margin-inline", "1em", 3, "formGroup"],
      ["for", "dealer_name", 1, "form-label"],
      ["style", "color: red;", 4, "ngIf"],
      [
        "type",
        "text",
        "placeholder",
        "Dealer Name",
        "formControlName",
        "dealer_name",
        1,
        "form-control",
        "form-control-lg",
        "editable-input",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      ["for", "dealer_code", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Dealer Code",
        "formControlName",
        "dealer_code",
        1,
        "form-control",
        "form-control-lg",
        "editable-input",
        3,
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [2, "color", "red"],
      [1, "text-danger"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        2,
        "border-color",
        "#222fb9",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        m(6, "Users"),
        d()(),
        u(7, "li", 7)(8, "a", 8),
        m(9, "Dealers"),
        d()()()(),
        u(10, "div", 9)(11, "div", 10)(12, "a", 11),
        z("click", function () {
          return t.openModal();
        }),
        W(13, "i", 12),
        m(14, "Add Dealer "),
        d()(),
        u(15, "div", 10)(16, "div", 13)(17, "p", 14),
        m(18, "Total dealer"),
        d(),
        u(19, "h3", 15),
        m(20),
        d()()()(),
        u(21, "div", 16)(22, "div", 17)(23, "div", 18)(24, "div", 19)(
          25,
          "div",
          20
        ),
        W(26, "label", 21),
        u(27, "select", 22),
        z("change", function (r) {
          return t.onItemsPerPageChange(r);
        }),
        u(28, "option", 23),
        m(29, "10"),
        d(),
        u(30, "option", 24),
        m(31, "25"),
        d(),
        u(32, "option", 25),
        m(33, "50"),
        d(),
        u(34, "option", 26),
        m(35, "100"),
        d()(),
        u(36, "label", 27),
        m(37, "records per page"),
        d()(),
        u(38, "div", 28)(39, "div", 29)(40, "input", 30),
        Nt("ngModelChange", function (r) {
          return Ft(t.searchTerm, r) || (t.searchTerm = r), r;
        }),
        z("input", function () {
          return t.onSearchChange();
        }),
        d()()()(),
        u(41, "div", 31)(42, "table", 32)(43, "thead")(44, "tr")(45, "th"),
        m(46, "Sr No"),
        d(),
        u(47, "th"),
        m(48, "Dealer Name"),
        d(),
        u(49, "th"),
        m(50, "Dealer Code"),
        d(),
        u(51, "th"),
        m(52, "Action"),
        d()()(),
        u(53, "tbody"),
        F(54, _D, 4, 0, "tr", 33)(55, bD, 16, 6, "tr", 34),
        d()()(),
        u(56, "div", 35)(57, "div", 36)(58, "div", 37),
        m(59),
        d()(),
        u(60, "div", 36)(61, "div", 38)(62, "ul", 39)(63, "li", 40)(
          64,
          "a",
          41
        ),
        z("click", function () {
          return t.previousPage();
        }),
        m(65, "Previous"),
        d()(),
        F(66, vD, 3, 3, "li", 42),
        u(67, "li", 43)(68, "a", 41),
        z("click", function () {
          return t.nextPage();
        }),
        m(69, "Next"),
        d()()()()()()()()()()(),
        F(70, yD, 13, 0, "div", 44)(71, ED, 27, 15, "div", 44)),
        e & 2 &&
          (g(20),
          oe(" ", t.filteredDealers.length, " "),
          g(20),
          Rt("ngModel", t.searchTerm),
          g(14),
          S("ngIf", t.paginatedDealers.length === 0),
          g(),
          S("ngForOf", t.paginatedDealers),
          g(4),
          Mi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.min(t.currentPage * t.itemsPerPage, t.dealerList().length),
            " of ",
            t.dealerList().length,
            " entries "
          ),
          g(4),
          Ce("disabled", t.currentPage === 1),
          g(3),
          S("ngForOf", t.visiblePages),
          g(),
          Ce("disabled", t.currentPage === t.totalPages),
          g(3),
          S("ngIf", t.isDeleteModalOpen),
          g(),
          S("ngIf", t.isModalOpen));
    },
    dependencies: [
      ke,
      Vt,
      $t,
      Je,
      Ai,
      Ii,
      Pi,
      ni,
      hi,
      Oi,
      Hi,
      ii,
      ct,
      Ln,
      Qi,
      ji,
      zi,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}input[_ngcontent-%COMP%]::-webkit-clear-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button, input[_ngcontent-%COMP%]::-webkit-calendar-picker-indicator{display:none!important;-webkit-appearance:none!important}input[_ngcontent-%COMP%]:invalid{box-shadow:none!important}input[_ngcontent-%COMP%]:-moz-ui-invalid{box-shadow:none!important}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border:none}.modal-backdrop[_ngcontent-%COMP%]{display:none!important}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.edit-btn[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:#fff;transition:all .3s ease}.edit-btn[_ngcontent-%COMP%]:hover:enabled{background-color:#222fb9;color:#fff}.edit-btn[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:not-allowed}#editButton[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}",
    ],
  });
};
var v_ = (() => {
  class n {
    constructor(e, t, o) {
      (this.el = e), (this.vcr = t), (this.renderer = o), (this.dtOptions = {});
    }
    ngOnInit() {
      this.dtTrigger
        ? this.dtTrigger.subscribe((e) => {
            this.displayTable(e);
          })
        : this.displayTable(null);
    }
    ngOnDestroy() {
      this.dtTrigger && this.dtTrigger.unsubscribe(),
        this.dt && this.dt.destroy(!0);
    }
    displayTable(e) {
      e && (this.dtOptions = e),
        (this.dtInstance = new Promise((t, o) => {
          Promise.resolve(this.dtOptions).then((r) => {
            if (
              Object.keys(r).length === 0 &&
              $("tbody tr", this.el.nativeElement).length === 0
            ) {
              o("Both the table and dtOptions cannot be empty");
              return;
            }
            r.columns &&
              r.columns.forEach((s) => {
                (s.id ?? "").trim() === "" && (s.id = this.getColumnUniqueId());
              }),
              setTimeout(() => {
                let s = {
                  rowCallback: (c, p, f) => {
                    if (r.columns) {
                      let y = r.columns;
                      this.applyNgPipeTransform(c, y),
                        this.applyNgRefTemplate(c, y, p);
                    }
                    r.rowCallback && r.rowCallback(c, p, f);
                  },
                };
                (s = Object.assign({}, r, s)),
                  (this.dt = $(this.el.nativeElement).DataTable(s)),
                  t(this.dt);
              });
          });
        }));
    }
    applyNgPipeTransform(e, t) {
      t.filter((r) => r.ngPipeInstance && !r.ngTemplateRef).forEach((r) => {
        let a = r.ngPipeInstance,
          s = r.ngPipeArgs || [],
          c = t.filter((x) => x.visible !== !1).findIndex((x) => x.id === r.id),
          p = e.childNodes.item(c),
          f = $(p).text(),
          y = a.transform(f, ...s);
        $(p).text(y);
      });
    }
    applyNgRefTemplate(e, t, o) {
      t.filter((a) => a.ngTemplateRef && !a.ngPipeInstance).forEach((a) => {
        let { ref: s, context: c } = a.ngTemplateRef,
          p = t.filter((C) => C.visible !== !1).findIndex((C) => C.id === a.id),
          f = e.childNodes.item(p);
        $(f).html("");
        let y = Object.assign({}, c, c?.userData, { adtData: o }),
          x = this.vcr.createEmbeddedView(s, y);
        this.renderer.appendChild(f, x.rootNodes[0]);
      });
    }
    getColumnUniqueId() {
      let e = "",
        t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
      for (let o = 0; o < 6; o++) {
        let r = Math.floor(Math.random() * t.length);
        e += t.charAt(r);
      }
      return e.trim();
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(j(Ne), j(dn), j(yi));
      };
    }
    static {
      this.ɵdir = Pe({
        type: n,
        selectors: [["", "datatable", ""]],
        inputs: { dtOptions: "dtOptions", dtTrigger: "dtTrigger" },
      });
    }
  }
  return n;
})();
var Qr = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({ imports: [ke] });
    }
  }
  return n;
})();
var ts = class n {
  vehicle_id;
  YOM;
  vehicle_name;
  type;
  VIN;
  created_at;
  updated_at;
  corporate_id;
  deleted;
  chasis_number;
  demo_start_date;
  demo_end_date;
  constructor() {
    (this.deleted = !1),
      (this.vehicle_id = " "),
      (this.YOM = ""),
      (this.vehicle_name = ""),
      (this.type = ""),
      (this.VIN = ""),
      (this.created_at = ""),
      (this.updated_at = ""),
      (this.corporate_id = ""),
      (this.chasis_number = ""),
      (this.demo_start_date = " "),
      (this.demo_end_date = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var rh;
try {
  rh = typeof Intl < "u" && Intl.v8BreakIterator;
} catch {
  rh = !1;
}
var wt = (() => {
  class n {
    constructor(e) {
      (this._platformId = e),
        (this.isBrowser = this._platformId
          ? On(this._platformId)
          : typeof document == "object" && !!document),
        (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
        (this.TRIDENT =
          this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
        (this.BLINK =
          this.isBrowser &&
          !!(window.chrome || rh) &&
          typeof CSS < "u" &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.WEBKIT =
          this.isBrowser &&
          /AppleWebKit/i.test(navigator.userAgent) &&
          !this.BLINK &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.IOS =
          this.isBrowser &&
          /iPad|iPhone|iPod/.test(navigator.userAgent) &&
          !("MSStream" in window)),
        (this.FIREFOX =
          this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent)),
        (this.ANDROID =
          this.isBrowser &&
          /android/i.test(navigator.userAgent) &&
          !this.TRIDENT),
        (this.SAFARI =
          this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(ie(cn));
      };
    }
    static {
      this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var is;
function kD() {
  if (is == null && typeof window < "u")
    try {
      window.addEventListener(
        "test",
        null,
        Object.defineProperty({}, "passive", { get: () => (is = !0) })
      );
    } finally {
      is = is || !1;
    }
  return is;
}
function Bn(n) {
  return kD() ? n : !!n.capture;
}
var rr;
function y_() {
  if (rr == null) {
    if (
      typeof document != "object" ||
      !document ||
      typeof Element != "function" ||
      !Element
    )
      return (rr = !1), rr;
    if ("scrollBehavior" in document.documentElement.style) rr = !0;
    else {
      let n = Element.prototype.scrollTo;
      n ? (rr = !/\{\s*\[native code\]\s*\}/.test(n.toString())) : (rr = !1);
    }
  }
  return rr;
}
var oh;
function OD() {
  if (oh == null) {
    let n = typeof document < "u" ? document.head : null;
    oh = !!(n && (n.createShadowRoot || n.attachShadow));
  }
  return oh;
}
function x_(n) {
  if (OD()) {
    let i = n.getRootNode ? n.getRootNode() : null;
    if (typeof ShadowRoot < "u" && ShadowRoot && i instanceof ShadowRoot)
      return i;
  }
  return null;
}
function ah() {
  let n = typeof document < "u" && document ? document.activeElement : null;
  for (; n && n.shadowRoot; ) {
    let i = n.shadowRoot.activeElement;
    if (i === n) break;
    n = i;
  }
  return n;
}
function tn(n) {
  return n.composedPath ? n.composedPath()[0] : n.target;
}
function ns() {
  return (
    (typeof __karma__ < "u" && !!__karma__) ||
    (typeof jasmine < "u" && !!jasmine) ||
    (typeof jest < "u" && !!jest) ||
    (typeof Mocha < "u" && !!Mocha)
  );
}
function C_(n, ...i) {
  return i.length
    ? i.some((e) => n[e])
    : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
}
function Zr(n) {
  return Array.isArray(n) ? n : [n];
}
function Ht(n) {
  return n == null ? "" : typeof n == "string" ? n : `${n}px`;
}
function co(n) {
  return n instanceof Ne ? n.nativeElement : n;
}
var ID = (() => {
  class n {
    create(e) {
      return typeof MutationObserver > "u" ? null : new MutationObserver(e);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Kl = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({ providers: [ID] });
    }
  }
  return n;
})();
var w_ = new Set(),
  ar,
  PD = (() => {
    class n {
      constructor(e, t) {
        (this._platform = e),
          (this._nonce = t),
          (this._matchMedia =
            this._platform.isBrowser && window.matchMedia
              ? window.matchMedia.bind(window)
              : RD);
      }
      matchMedia(e) {
        return (
          (this._platform.WEBKIT || this._platform.BLINK) && AD(e, this._nonce),
          this._matchMedia(e)
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(wt), ie(Kp, 8));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function AD(n, i) {
  if (!w_.has(n))
    try {
      ar ||
        ((ar = document.createElement("style")),
        i && ar.setAttribute("nonce", i),
        ar.setAttribute("type", "text/css"),
        document.head.appendChild(ar)),
        ar.sheet &&
          (ar.sheet.insertRule(`@media ${n} {body{ }}`, 0), w_.add(n));
    } catch (e) {
      console.error(e);
    }
}
function RD(n) {
  return {
    matches: n === "all" || n === "",
    media: n,
    addListener: () => {},
    removeListener: () => {},
  };
}
var S_ = (() => {
  class n {
    constructor(e, t) {
      (this._mediaMatcher = e),
        (this._zone = t),
        (this._queries = new Map()),
        (this._destroySubject = new Ae());
    }
    ngOnDestroy() {
      this._destroySubject.next(), this._destroySubject.complete();
    }
    isMatched(e) {
      return D_(Zr(e)).some((o) => this._registerQuery(o).mql.matches);
    }
    observe(e) {
      let o = D_(Zr(e)).map((a) => this._registerQuery(a).observable),
        r = id(o);
      return (
        (r = jp(r.pipe(zo(1)), r.pipe(ya(1), od(0)))),
        r.pipe(
          qn((a) => {
            let s = { matches: !1, breakpoints: {} };
            return (
              a.forEach(({ matches: c, query: p }) => {
                (s.matches = s.matches || c), (s.breakpoints[p] = c);
              }),
              s
            );
          })
        )
      );
    }
    _registerQuery(e) {
      if (this._queries.has(e)) return this._queries.get(e);
      let t = this._mediaMatcher.matchMedia(e),
        r = {
          observable: new jo((a) => {
            let s = (c) => this._zone.run(() => a.next(c));
            return (
              t.addListener(s),
              () => {
                t.removeListener(s);
              }
            );
          }).pipe(
            fo(t),
            qn(({ matches: a }) => ({ query: e, matches: a })),
            jt(this._destroySubject)
          ),
          mql: t,
        };
      return this._queries.set(e, r), r;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(ie(PD), ie(He));
      };
    }
    static {
      this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
function D_(n) {
  return n
    .map((i) => i.split(","))
    .reduce((i, e) => i.concat(e))
    .map((i) => i.trim());
}
var ND = (() => {
  class n {
    constructor(e) {
      this._platform = e;
    }
    isDisabled(e) {
      return e.hasAttribute("disabled");
    }
    isVisible(e) {
      return LD(e) && getComputedStyle(e).visibility === "visible";
    }
    isTabbable(e) {
      if (!this._platform.isBrowser) return !1;
      let t = VD(GD(e));
      if (t && (M_(t) === -1 || !this.isVisible(t))) return !1;
      let o = e.nodeName.toLowerCase(),
        r = M_(e);
      return e.hasAttribute("contenteditable")
        ? r !== -1
        : o === "iframe" ||
          o === "object" ||
          (this._platform.WEBKIT && this._platform.IOS && !WD(e))
        ? !1
        : o === "audio"
        ? e.hasAttribute("controls")
          ? r !== -1
          : !1
        : o === "video"
        ? r === -1
          ? !1
          : r !== null
          ? !0
          : this._platform.FIREFOX || e.hasAttribute("controls")
        : e.tabIndex >= 0;
    }
    isFocusable(e, t) {
      return (
        $D(e) &&
        !this.isDisabled(e) &&
        (t?.ignoreVisibility || this.isVisible(e))
      );
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(ie(wt));
      };
    }
    static {
      this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
function VD(n) {
  try {
    return n.frameElement;
  } catch {
    return null;
  }
}
function LD(n) {
  return !!(
    n.offsetWidth ||
    n.offsetHeight ||
    (typeof n.getClientRects == "function" && n.getClientRects().length)
  );
}
function BD(n) {
  let i = n.nodeName.toLowerCase();
  return i === "input" || i === "select" || i === "button" || i === "textarea";
}
function HD(n) {
  return zD(n) && n.type == "hidden";
}
function jD(n) {
  return UD(n) && n.hasAttribute("href");
}
function zD(n) {
  return n.nodeName.toLowerCase() == "input";
}
function UD(n) {
  return n.nodeName.toLowerCase() == "a";
}
function k_(n) {
  if (!n.hasAttribute("tabindex") || n.tabIndex === void 0) return !1;
  let i = n.getAttribute("tabindex");
  return !!(i && !isNaN(parseInt(i, 10)));
}
function M_(n) {
  if (!k_(n)) return null;
  let i = parseInt(n.getAttribute("tabindex") || "", 10);
  return isNaN(i) ? -1 : i;
}
function WD(n) {
  let i = n.nodeName.toLowerCase(),
    e = i === "input" && n.type;
  return e === "text" || e === "password" || i === "select" || i === "textarea";
}
function $D(n) {
  return HD(n)
    ? !1
    : BD(n) || jD(n) || n.hasAttribute("contenteditable") || k_(n);
}
function GD(n) {
  return (n.ownerDocument && n.ownerDocument.defaultView) || window;
}
var lh = class {
    get enabled() {
      return this._enabled;
    }
    set enabled(i) {
      (this._enabled = i),
        this._startAnchor &&
          this._endAnchor &&
          (this._toggleAnchorTabIndex(i, this._startAnchor),
          this._toggleAnchorTabIndex(i, this._endAnchor));
    }
    constructor(i, e, t, o, r = !1, a) {
      (this._element = i),
        (this._checker = e),
        (this._ngZone = t),
        (this._document = o),
        (this._injector = a),
        (this._hasAttached = !1),
        (this.startAnchorListener = () => this.focusLastTabbableElement()),
        (this.endAnchorListener = () => this.focusFirstTabbableElement()),
        (this._enabled = !0),
        r || this.attachAnchors();
    }
    destroy() {
      let i = this._startAnchor,
        e = this._endAnchor;
      i &&
        (i.removeEventListener("focus", this.startAnchorListener), i.remove()),
        e &&
          (e.removeEventListener("focus", this.endAnchorListener), e.remove()),
        (this._startAnchor = this._endAnchor = null),
        (this._hasAttached = !1);
    }
    attachAnchors() {
      return this._hasAttached
        ? !0
        : (this._ngZone.runOutsideAngular(() => {
            this._startAnchor ||
              ((this._startAnchor = this._createAnchor()),
              this._startAnchor.addEventListener(
                "focus",
                this.startAnchorListener
              )),
              this._endAnchor ||
                ((this._endAnchor = this._createAnchor()),
                this._endAnchor.addEventListener(
                  "focus",
                  this.endAnchorListener
                ));
          }),
          this._element.parentNode &&
            (this._element.parentNode.insertBefore(
              this._startAnchor,
              this._element
            ),
            this._element.parentNode.insertBefore(
              this._endAnchor,
              this._element.nextSibling
            ),
            (this._hasAttached = !0)),
          this._hasAttached);
    }
    focusInitialElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusInitialElement(i)));
      });
    }
    focusFirstTabbableElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusFirstTabbableElement(i)));
      });
    }
    focusLastTabbableElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusLastTabbableElement(i)));
      });
    }
    _getRegionBoundary(i) {
      let e = this._element.querySelectorAll(
        `[cdk-focus-region-${i}], [cdkFocusRegion${i}], [cdk-focus-${i}]`
      );
      return i == "start"
        ? e.length
          ? e[0]
          : this._getFirstTabbableElement(this._element)
        : e.length
        ? e[e.length - 1]
        : this._getLastTabbableElement(this._element);
    }
    focusInitialElement(i) {
      let e = this._element.querySelector(
        "[cdk-focus-initial], [cdkFocusInitial]"
      );
      if (e) {
        if (!this._checker.isFocusable(e)) {
          let t = this._getFirstTabbableElement(e);
          return t?.focus(i), !!t;
        }
        return e.focus(i), !0;
      }
      return this.focusFirstTabbableElement(i);
    }
    focusFirstTabbableElement(i) {
      let e = this._getRegionBoundary("start");
      return e && e.focus(i), !!e;
    }
    focusLastTabbableElement(i) {
      let e = this._getRegionBoundary("end");
      return e && e.focus(i), !!e;
    }
    hasAttached() {
      return this._hasAttached;
    }
    _getFirstTabbableElement(i) {
      if (this._checker.isFocusable(i) && this._checker.isTabbable(i)) return i;
      let e = i.children;
      for (let t = 0; t < e.length; t++) {
        let o =
          e[t].nodeType === this._document.ELEMENT_NODE
            ? this._getFirstTabbableElement(e[t])
            : null;
        if (o) return o;
      }
      return null;
    }
    _getLastTabbableElement(i) {
      if (this._checker.isFocusable(i) && this._checker.isTabbable(i)) return i;
      let e = i.children;
      for (let t = e.length - 1; t >= 0; t--) {
        let o =
          e[t].nodeType === this._document.ELEMENT_NODE
            ? this._getLastTabbableElement(e[t])
            : null;
        if (o) return o;
      }
      return null;
    }
    _createAnchor() {
      let i = this._document.createElement("div");
      return (
        this._toggleAnchorTabIndex(this._enabled, i),
        i.classList.add("cdk-visually-hidden"),
        i.classList.add("cdk-focus-trap-anchor"),
        i.setAttribute("aria-hidden", "true"),
        i
      );
    }
    _toggleAnchorTabIndex(i, e) {
      i ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
    }
    toggleAnchors(i) {
      this._startAnchor &&
        this._endAnchor &&
        (this._toggleAnchorTabIndex(i, this._startAnchor),
        this._toggleAnchorTabIndex(i, this._endAnchor));
    }
    _executeOnStable(i) {
      this._injector ? Kn(i, { injector: this._injector }) : setTimeout(i);
    }
  },
  YD = (() => {
    class n {
      constructor(e, t, o) {
        (this._checker = e),
          (this._ngZone = t),
          (this._injector = ne(Tt)),
          (this._document = o);
      }
      create(e, t = !1) {
        return new lh(
          e,
          this._checker,
          this._ngZone,
          this._document,
          t,
          this._injector
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(ND), ie(He), ie(ze));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  O_ = (() => {
    class n {
      get enabled() {
        return this.focusTrap?.enabled || !1;
      }
      set enabled(e) {
        this.focusTrap && (this.focusTrap.enabled = e);
      }
      constructor(e, t, o) {
        (this._elementRef = e),
          (this._focusTrapFactory = t),
          (this._previouslyFocusedElement = null),
          ne(wt).isBrowser &&
            (this.focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
              !0
            ));
      }
      ngOnDestroy() {
        this.focusTrap?.destroy(),
          this._previouslyFocusedElement &&
            (this._previouslyFocusedElement.focus(),
            (this._previouslyFocusedElement = null));
      }
      ngAfterContentInit() {
        this.focusTrap?.attachAnchors(),
          this.autoCapture && this._captureFocus();
      }
      ngDoCheck() {
        this.focusTrap &&
          !this.focusTrap.hasAttached() &&
          this.focusTrap.attachAnchors();
      }
      ngOnChanges(e) {
        let t = e.autoCapture;
        t &&
          !t.firstChange &&
          this.autoCapture &&
          this.focusTrap?.hasAttached() &&
          this._captureFocus();
      }
      _captureFocus() {
        (this._previouslyFocusedElement = ah()),
          this.focusTrap?.focusInitialElementWhenReady();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Ne), j(YD), j(ze));
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [["", "cdkTrapFocus", ""]],
          inputs: {
            enabled: [2, "cdkTrapFocus", "enabled", Ee],
            autoCapture: [2, "cdkTrapFocusAutoCapture", "autoCapture", Ee],
          },
          exportAs: ["cdkTrapFocus"],
          standalone: !0,
          features: [At, zt],
        });
      }
    }
    return n;
  })();
function ch(n) {
  return n.buttons === 0 || n.detail === 0;
}
function dh(n) {
  let i =
    (n.touches && n.touches[0]) || (n.changedTouches && n.changedTouches[0]);
  return (
    !!i &&
    i.identifier === -1 &&
    (i.radiusX == null || i.radiusX === 1) &&
    (i.radiusY == null || i.radiusY === 1)
  );
}
var qD = new Ze("cdk-input-modality-detector-options"),
  KD = { ignoreKeys: [18, 17, 224, 91, 16] },
  I_ = 650,
  Jr = Bn({ passive: !0, capture: !0 }),
  QD = (() => {
    class n {
      get mostRecentModality() {
        return this._modality.value;
      }
      constructor(e, t, o, r) {
        (this._platform = e),
          (this._mostRecentTarget = null),
          (this._modality = new Yn(null)),
          (this._lastTouchMs = 0),
          (this._onKeydown = (a) => {
            this._options?.ignoreKeys?.some((s) => s === a.keyCode) ||
              (this._modality.next("keyboard"),
              (this._mostRecentTarget = tn(a)));
          }),
          (this._onMousedown = (a) => {
            Date.now() - this._lastTouchMs < I_ ||
              (this._modality.next(ch(a) ? "keyboard" : "mouse"),
              (this._mostRecentTarget = tn(a)));
          }),
          (this._onTouchstart = (a) => {
            if (dh(a)) {
              this._modality.next("keyboard");
              return;
            }
            (this._lastTouchMs = Date.now()),
              this._modality.next("touch"),
              (this._mostRecentTarget = tn(a));
          }),
          (this._options = se(se({}, KD), r)),
          (this.modalityDetected = this._modality.pipe(ya(1))),
          (this.modalityChanged = this.modalityDetected.pipe(Ps())),
          e.isBrowser &&
            t.runOutsideAngular(() => {
              o.addEventListener("keydown", this._onKeydown, Jr),
                o.addEventListener("mousedown", this._onMousedown, Jr),
                o.addEventListener("touchstart", this._onTouchstart, Jr);
            });
      }
      ngOnDestroy() {
        this._modality.complete(),
          this._platform.isBrowser &&
            (document.removeEventListener("keydown", this._onKeydown, Jr),
            document.removeEventListener("mousedown", this._onMousedown, Jr),
            document.removeEventListener("touchstart", this._onTouchstart, Jr));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(wt), ie(He), ie(ze), ie(qD, 8));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var Xl = (function (n) {
    return (
      (n[(n.IMMEDIATE = 0)] = "IMMEDIATE"),
      (n[(n.EVENTUAL = 1)] = "EVENTUAL"),
      n
    );
  })(Xl || {}),
  XD = new Ze("cdk-focus-monitor-default-options"),
  Ql = Bn({ passive: !0, capture: !0 }),
  uh = (() => {
    class n {
      constructor(e, t, o, r, a) {
        (this._ngZone = e),
          (this._platform = t),
          (this._inputModalityDetector = o),
          (this._origin = null),
          (this._windowFocused = !1),
          (this._originFromTouchInteraction = !1),
          (this._elementInfo = new Map()),
          (this._monitoredElementCount = 0),
          (this._rootNodeFocusListenerCount = new Map()),
          (this._windowFocusListener = () => {
            (this._windowFocused = !0),
              (this._windowFocusTimeoutId = window.setTimeout(
                () => (this._windowFocused = !1)
              ));
          }),
          (this._stopInputModalityDetector = new Ae()),
          (this._rootNodeFocusAndBlurListener = (s) => {
            let c = tn(s);
            for (let p = c; p; p = p.parentElement)
              s.type === "focus" ? this._onFocus(s, p) : this._onBlur(s, p);
          }),
          (this._document = r),
          (this._detectionMode = a?.detectionMode || Xl.IMMEDIATE);
      }
      monitor(e, t = !1) {
        let o = co(e);
        if (!this._platform.isBrowser || o.nodeType !== 1) return Et();
        let r = x_(o) || this._getDocument(),
          a = this._elementInfo.get(o);
        if (a) return t && (a.checkChildren = !0), a.subject;
        let s = { checkChildren: t, subject: new Ae(), rootNode: r };
        return (
          this._elementInfo.set(o, s),
          this._registerGlobalListeners(s),
          s.subject
        );
      }
      stopMonitoring(e) {
        let t = co(e),
          o = this._elementInfo.get(t);
        o &&
          (o.subject.complete(),
          this._setClasses(t),
          this._elementInfo.delete(t),
          this._removeGlobalListeners(o));
      }
      focusVia(e, t, o) {
        let r = co(e),
          a = this._getDocument().activeElement;
        r === a
          ? this._getClosestElementsInfo(r).forEach(([s, c]) =>
              this._originChanged(s, t, c)
            )
          : (this._setOrigin(t), typeof r.focus == "function" && r.focus(o));
      }
      ngOnDestroy() {
        this._elementInfo.forEach((e, t) => this.stopMonitoring(t));
      }
      _getDocument() {
        return this._document || document;
      }
      _getWindow() {
        return this._getDocument().defaultView || window;
      }
      _getFocusOrigin(e) {
        return this._origin
          ? this._originFromTouchInteraction
            ? this._shouldBeAttributedToTouch(e)
              ? "touch"
              : "program"
            : this._origin
          : this._windowFocused && this._lastFocusOrigin
          ? this._lastFocusOrigin
          : e && this._isLastInteractionFromInputLabel(e)
          ? "mouse"
          : "program";
      }
      _shouldBeAttributedToTouch(e) {
        return (
          this._detectionMode === Xl.EVENTUAL ||
          !!e?.contains(this._inputModalityDetector._mostRecentTarget)
        );
      }
      _setClasses(e, t) {
        e.classList.toggle("cdk-focused", !!t),
          e.classList.toggle("cdk-touch-focused", t === "touch"),
          e.classList.toggle("cdk-keyboard-focused", t === "keyboard"),
          e.classList.toggle("cdk-mouse-focused", t === "mouse"),
          e.classList.toggle("cdk-program-focused", t === "program");
      }
      _setOrigin(e, t = !1) {
        this._ngZone.runOutsideAngular(() => {
          if (
            ((this._origin = e),
            (this._originFromTouchInteraction = e === "touch" && t),
            this._detectionMode === Xl.IMMEDIATE)
          ) {
            clearTimeout(this._originTimeoutId);
            let o = this._originFromTouchInteraction ? I_ : 1;
            this._originTimeoutId = setTimeout(() => (this._origin = null), o);
          }
        });
      }
      _onFocus(e, t) {
        let o = this._elementInfo.get(t),
          r = tn(e);
        !o ||
          (!o.checkChildren && t !== r) ||
          this._originChanged(t, this._getFocusOrigin(r), o);
      }
      _onBlur(e, t) {
        let o = this._elementInfo.get(t);
        !o ||
          (o.checkChildren &&
            e.relatedTarget instanceof Node &&
            t.contains(e.relatedTarget)) ||
          (this._setClasses(t), this._emitOrigin(o, null));
      }
      _emitOrigin(e, t) {
        e.subject.observers.length && this._ngZone.run(() => e.subject.next(t));
      }
      _registerGlobalListeners(e) {
        if (!this._platform.isBrowser) return;
        let t = e.rootNode,
          o = this._rootNodeFocusListenerCount.get(t) || 0;
        o ||
          this._ngZone.runOutsideAngular(() => {
            t.addEventListener("focus", this._rootNodeFocusAndBlurListener, Ql),
              t.addEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                Ql
              );
          }),
          this._rootNodeFocusListenerCount.set(t, o + 1),
          ++this._monitoredElementCount === 1 &&
            (this._ngZone.runOutsideAngular(() => {
              this._getWindow().addEventListener(
                "focus",
                this._windowFocusListener
              );
            }),
            this._inputModalityDetector.modalityDetected
              .pipe(jt(this._stopInputModalityDetector))
              .subscribe((r) => {
                this._setOrigin(r, !0);
              }));
      }
      _removeGlobalListeners(e) {
        let t = e.rootNode;
        if (this._rootNodeFocusListenerCount.has(t)) {
          let o = this._rootNodeFocusListenerCount.get(t);
          o > 1
            ? this._rootNodeFocusListenerCount.set(t, o - 1)
            : (t.removeEventListener(
                "focus",
                this._rootNodeFocusAndBlurListener,
                Ql
              ),
              t.removeEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                Ql
              ),
              this._rootNodeFocusListenerCount.delete(t));
        }
        --this._monitoredElementCount ||
          (this._getWindow().removeEventListener(
            "focus",
            this._windowFocusListener
          ),
          this._stopInputModalityDetector.next(),
          clearTimeout(this._windowFocusTimeoutId),
          clearTimeout(this._originTimeoutId));
      }
      _originChanged(e, t, o) {
        this._setClasses(e, t),
          this._emitOrigin(o, t),
          (this._lastFocusOrigin = t);
      }
      _getClosestElementsInfo(e) {
        let t = [];
        return (
          this._elementInfo.forEach((o, r) => {
            (r === e || (o.checkChildren && r.contains(e))) && t.push([r, o]);
          }),
          t
        );
      }
      _isLastInteractionFromInputLabel(e) {
        let { _mostRecentTarget: t, mostRecentModality: o } =
          this._inputModalityDetector;
        if (
          o !== "mouse" ||
          !t ||
          t === e ||
          (e.nodeName !== "INPUT" && e.nodeName !== "TEXTAREA") ||
          e.disabled
        )
          return !1;
        let r = e.labels;
        if (r) {
          for (let a = 0; a < r.length; a++) if (r[a].contains(t)) return !0;
        }
        return !1;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(He), ie(wt), ie(QD), ie(ze, 8), ie(XD, 8));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  P_ = (() => {
    class n {
      constructor(e, t) {
        (this._elementRef = e),
          (this._focusMonitor = t),
          (this._focusOrigin = null),
          (this.cdkFocusChange = new Se());
      }
      get focusOrigin() {
        return this._focusOrigin;
      }
      ngAfterViewInit() {
        let e = this._elementRef.nativeElement;
        this._monitorSubscription = this._focusMonitor
          .monitor(
            e,
            e.nodeType === 1 && e.hasAttribute("cdkMonitorSubtreeFocus")
          )
          .subscribe((t) => {
            (this._focusOrigin = t), this.cdkFocusChange.emit(t);
          });
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._monitorSubscription && this._monitorSubscription.unsubscribe();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Ne), j(uh));
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["", "cdkMonitorElementFocus", ""],
            ["", "cdkMonitorSubtreeFocus", ""],
          ],
          outputs: { cdkFocusChange: "cdkFocusChange" },
          exportAs: ["cdkMonitorFocus"],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  sr = (function (n) {
    return (
      (n[(n.NONE = 0)] = "NONE"),
      (n[(n.BLACK_ON_WHITE = 1)] = "BLACK_ON_WHITE"),
      (n[(n.WHITE_ON_BLACK = 2)] = "WHITE_ON_BLACK"),
      n
    );
  })(sr || {}),
  E_ = "cdk-high-contrast-black-on-white",
  T_ = "cdk-high-contrast-white-on-black",
  sh = "cdk-high-contrast-active",
  hh = (() => {
    class n {
      constructor(e, t) {
        (this._platform = e),
          (this._document = t),
          (this._breakpointSubscription = ne(S_)
            .observe("(forced-colors: active)")
            .subscribe(() => {
              this._hasCheckedHighContrastMode &&
                ((this._hasCheckedHighContrastMode = !1),
                this._applyBodyHighContrastModeCssClasses());
            }));
      }
      getHighContrastMode() {
        if (!this._platform.isBrowser) return sr.NONE;
        let e = this._document.createElement("div");
        (e.style.backgroundColor = "rgb(1,2,3)"),
          (e.style.position = "absolute"),
          this._document.body.appendChild(e);
        let t = this._document.defaultView || window,
          o = t && t.getComputedStyle ? t.getComputedStyle(e) : null,
          r = ((o && o.backgroundColor) || "").replace(/ /g, "");
        switch ((e.remove(), r)) {
          case "rgb(0,0,0)":
          case "rgb(45,50,54)":
          case "rgb(32,32,32)":
            return sr.WHITE_ON_BLACK;
          case "rgb(255,255,255)":
          case "rgb(255,250,239)":
            return sr.BLACK_ON_WHITE;
        }
        return sr.NONE;
      }
      ngOnDestroy() {
        this._breakpointSubscription.unsubscribe();
      }
      _applyBodyHighContrastModeCssClasses() {
        if (
          !this._hasCheckedHighContrastMode &&
          this._platform.isBrowser &&
          this._document.body
        ) {
          let e = this._document.body.classList;
          e.remove(sh, E_, T_), (this._hasCheckedHighContrastMode = !0);
          let t = this.getHighContrastMode();
          t === sr.BLACK_ON_WHITE
            ? e.add(sh, E_)
            : t === sr.WHITE_ON_BLACK && e.add(sh, T_);
        }
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(wt), ie(ze));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  A_ = (() => {
    class n {
      constructor(e) {
        e._applyBodyHighContrastModeCssClasses();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(hh));
        };
      }
      static {
        this.ɵmod = De({ type: n });
      }
      static {
        this.ɵinj = we({ imports: [Kl] });
      }
    }
    return n;
  })();
var JD = new Ze("cdk-dir-doc", { providedIn: "root", factory: eS });
function eS() {
  return ne(ze);
}
var tS =
  /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
function iS(n) {
  let i = n?.toLowerCase() || "";
  return i === "auto" && typeof navigator < "u" && navigator?.language
    ? tS.test(navigator.language)
      ? "rtl"
      : "ltr"
    : i === "rtl"
    ? "rtl"
    : "ltr";
}
var ea = (() => {
  class n {
    constructor(e) {
      if (((this.value = "ltr"), (this.change = new Se()), e)) {
        let t = e.body ? e.body.dir : null,
          o = e.documentElement ? e.documentElement.dir : null;
        this.value = iS(t || o || "ltr");
      }
    }
    ngOnDestroy() {
      this.change.complete();
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(ie(JD, 8));
      };
    }
    static {
      this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Io = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({});
    }
  }
  return n;
})();
var rS = 20,
  F_ = (() => {
    class n {
      constructor(e, t, o) {
        (this._ngZone = e),
          (this._platform = t),
          (this._scrolled = new Ae()),
          (this._globalSubscription = null),
          (this._scrolledCount = 0),
          (this.scrollContainers = new Map()),
          (this._document = o);
      }
      register(e) {
        this.scrollContainers.has(e) ||
          this.scrollContainers.set(
            e,
            e.elementScrolled().subscribe(() => this._scrolled.next(e))
          );
      }
      deregister(e) {
        let t = this.scrollContainers.get(e);
        t && (t.unsubscribe(), this.scrollContainers.delete(e));
      }
      scrolled(e = rS) {
        return this._platform.isBrowser
          ? new jo((t) => {
              this._globalSubscription || this._addGlobalListener();
              let o =
                e > 0
                  ? this._scrolled.pipe(nd(e)).subscribe(t)
                  : this._scrolled.subscribe(t);
              return (
                this._scrolledCount++,
                () => {
                  o.unsubscribe(),
                    this._scrolledCount--,
                    this._scrolledCount || this._removeGlobalListener();
                }
              );
            })
          : Et();
      }
      ngOnDestroy() {
        this._removeGlobalListener(),
          this.scrollContainers.forEach((e, t) => this.deregister(t)),
          this._scrolled.complete();
      }
      ancestorScrolled(e, t) {
        let o = this.getAncestorScrollContainers(e);
        return this.scrolled(t).pipe(vi((r) => !r || o.indexOf(r) > -1));
      }
      getAncestorScrollContainers(e) {
        let t = [];
        return (
          this.scrollContainers.forEach((o, r) => {
            this._scrollableContainsElement(r, e) && t.push(r);
          }),
          t
        );
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _scrollableContainsElement(e, t) {
        let o = co(t),
          r = e.getElementRef().nativeElement;
        do if (o == r) return !0;
        while ((o = o.parentElement));
        return !1;
      }
      _addGlobalListener() {
        this._globalSubscription = this._ngZone.runOutsideAngular(() => {
          let e = this._getWindow();
          return ln(e.document, "scroll").subscribe(() =>
            this._scrolled.next()
          );
        });
      }
      _removeGlobalListener() {
        this._globalSubscription &&
          (this._globalSubscription.unsubscribe(),
          (this._globalSubscription = null));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(He), ie(wt), ie(ze, 8));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var aS = 20,
  ph = (() => {
    class n {
      constructor(e, t, o) {
        (this._platform = e),
          (this._change = new Ae()),
          (this._changeListener = (r) => {
            this._change.next(r);
          }),
          (this._document = o),
          t.runOutsideAngular(() => {
            if (e.isBrowser) {
              let r = this._getWindow();
              r.addEventListener("resize", this._changeListener),
                r.addEventListener("orientationchange", this._changeListener);
            }
            this.change().subscribe(() => (this._viewportSize = null));
          });
      }
      ngOnDestroy() {
        if (this._platform.isBrowser) {
          let e = this._getWindow();
          e.removeEventListener("resize", this._changeListener),
            e.removeEventListener("orientationchange", this._changeListener);
        }
        this._change.complete();
      }
      getViewportSize() {
        this._viewportSize || this._updateViewportSize();
        let e = {
          width: this._viewportSize.width,
          height: this._viewportSize.height,
        };
        return this._platform.isBrowser || (this._viewportSize = null), e;
      }
      getViewportRect() {
        let e = this.getViewportScrollPosition(),
          { width: t, height: o } = this.getViewportSize();
        return {
          top: e.top,
          left: e.left,
          bottom: e.top + o,
          right: e.left + t,
          height: o,
          width: t,
        };
      }
      getViewportScrollPosition() {
        if (!this._platform.isBrowser) return { top: 0, left: 0 };
        let e = this._document,
          t = this._getWindow(),
          o = e.documentElement,
          r = o.getBoundingClientRect(),
          a = -r.top || e.body.scrollTop || t.scrollY || o.scrollTop || 0,
          s = -r.left || e.body.scrollLeft || t.scrollX || o.scrollLeft || 0;
        return { top: a, left: s };
      }
      change(e = aS) {
        return e > 0 ? this._change.pipe(nd(e)) : this._change;
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _updateViewportSize() {
        let e = this._getWindow();
        this._viewportSize = this._platform.isBrowser
          ? { width: e.innerWidth, height: e.innerHeight }
          : { width: 0, height: 0 };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(wt), ie(He), ie(ze, 8));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var Zl = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = De({ type: n });
      }
      static {
        this.ɵinj = we({});
      }
    }
    return n;
  })(),
  mh = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = De({ type: n });
      }
      static {
        this.ɵinj = we({ imports: [Io, Zl, Io, Zl] });
      }
    }
    return n;
  })();
var os = class {
    attach(i) {
      return (this._attachedHost = i), i.attach(this);
    }
    detach() {
      let i = this._attachedHost;
      i != null && ((this._attachedHost = null), i.detach());
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(i) {
      this._attachedHost = i;
    }
  },
  rs = class extends os {
    constructor(i, e, t, o, r) {
      super(),
        (this.component = i),
        (this.viewContainerRef = e),
        (this.injector = t),
        (this.componentFactoryResolver = o),
        (this.projectableNodes = r);
    }
  },
  as = class extends os {
    constructor(i, e, t, o) {
      super(),
        (this.templateRef = i),
        (this.viewContainerRef = e),
        (this.context = t),
        (this.injector = o);
    }
    get origin() {
      return this.templateRef.elementRef;
    }
    attach(i, e = this.context) {
      return (this.context = e), super.attach(i);
    }
    detach() {
      return (this.context = void 0), super.detach();
    }
  },
  fh = class extends os {
    constructor(i) {
      super(), (this.element = i instanceof Ne ? i.nativeElement : i);
    }
  },
  Jl = class {
    constructor() {
      (this._isDisposed = !1), (this.attachDomPortal = null);
    }
    hasAttached() {
      return !!this._attachedPortal;
    }
    attach(i) {
      if (i instanceof rs)
        return (this._attachedPortal = i), this.attachComponentPortal(i);
      if (i instanceof as)
        return (this._attachedPortal = i), this.attachTemplatePortal(i);
      if (this.attachDomPortal && i instanceof fh)
        return (this._attachedPortal = i), this.attachDomPortal(i);
    }
    detach() {
      this._attachedPortal &&
        (this._attachedPortal.setAttachedHost(null),
        (this._attachedPortal = null)),
        this._invokeDisposeFn();
    }
    dispose() {
      this.hasAttached() && this.detach(),
        this._invokeDisposeFn(),
        (this._isDisposed = !0);
    }
    setDisposeFn(i) {
      this._disposeFn = i;
    }
    _invokeDisposeFn() {
      this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
    }
  };
var ec = class extends Jl {
  constructor(i, e, t, o, r) {
    super(),
      (this.outletElement = i),
      (this._componentFactoryResolver = e),
      (this._appRef = t),
      (this._defaultInjector = o),
      (this.attachDomPortal = (a) => {
        this._document;
        let s = a.element;
        s.parentNode;
        let c = this._document.createComment("dom-portal");
        s.parentNode.insertBefore(c, s),
          this.outletElement.appendChild(s),
          (this._attachedPortal = a),
          super.setDisposeFn(() => {
            c.parentNode && c.parentNode.replaceChild(s, c);
          });
      }),
      (this._document = r);
  }
  attachComponentPortal(i) {
    let t = (
        i.componentFactoryResolver || this._componentFactoryResolver
      ).resolveComponentFactory(i.component),
      o;
    return (
      i.viewContainerRef
        ? ((o = i.viewContainerRef.createComponent(
            t,
            i.viewContainerRef.length,
            i.injector || i.viewContainerRef.injector,
            i.projectableNodes || void 0
          )),
          this.setDisposeFn(() => o.destroy()))
        : ((o = t.create(i.injector || this._defaultInjector || Tt.NULL)),
          this._appRef.attachView(o.hostView),
          this.setDisposeFn(() => {
            this._appRef.viewCount > 0 && this._appRef.detachView(o.hostView),
              o.destroy();
          })),
      this.outletElement.appendChild(this._getComponentRootNode(o)),
      (this._attachedPortal = i),
      o
    );
  }
  attachTemplatePortal(i) {
    let e = i.viewContainerRef,
      t = e.createEmbeddedView(i.templateRef, i.context, {
        injector: i.injector,
      });
    return (
      t.rootNodes.forEach((o) => this.outletElement.appendChild(o)),
      t.detectChanges(),
      this.setDisposeFn(() => {
        let o = e.indexOf(t);
        o !== -1 && e.remove(o);
      }),
      (this._attachedPortal = i),
      t
    );
  }
  dispose() {
    super.dispose(), this.outletElement.remove();
  }
  _getComponentRootNode(i) {
    return i.hostView.rootNodes[0];
  }
};
var gh = (() => {
  class n extends Jl {
    constructor(e, t, o) {
      super(),
        (this._componentFactoryResolver = e),
        (this._viewContainerRef = t),
        (this._isInitialized = !1),
        (this.attached = new Se()),
        (this.attachDomPortal = (r) => {
          this._document;
          let a = r.element;
          a.parentNode;
          let s = this._document.createComment("dom-portal");
          r.setAttachedHost(this),
            a.parentNode.insertBefore(s, a),
            this._getRootNode().appendChild(a),
            (this._attachedPortal = r),
            super.setDisposeFn(() => {
              s.parentNode && s.parentNode.replaceChild(a, s);
            });
        }),
        (this._document = o);
    }
    get portal() {
      return this._attachedPortal;
    }
    set portal(e) {
      (this.hasAttached() && !e && !this._isInitialized) ||
        (this.hasAttached() && super.detach(),
        e && super.attach(e),
        (this._attachedPortal = e || null));
    }
    get attachedRef() {
      return this._attachedRef;
    }
    ngOnInit() {
      this._isInitialized = !0;
    }
    ngOnDestroy() {
      super.dispose(), (this._attachedRef = this._attachedPortal = null);
    }
    attachComponentPortal(e) {
      e.setAttachedHost(this);
      let t =
          e.viewContainerRef != null
            ? e.viewContainerRef
            : this._viewContainerRef,
        r = (
          e.componentFactoryResolver || this._componentFactoryResolver
        ).resolveComponentFactory(e.component),
        a = t.createComponent(
          r,
          t.length,
          e.injector || t.injector,
          e.projectableNodes || void 0
        );
      return (
        t !== this._viewContainerRef &&
          this._getRootNode().appendChild(a.hostView.rootNodes[0]),
        super.setDisposeFn(() => a.destroy()),
        (this._attachedPortal = e),
        (this._attachedRef = a),
        this.attached.emit(a),
        a
      );
    }
    attachTemplatePortal(e) {
      e.setAttachedHost(this);
      let t = this._viewContainerRef.createEmbeddedView(
        e.templateRef,
        e.context,
        { injector: e.injector }
      );
      return (
        super.setDisposeFn(() => this._viewContainerRef.clear()),
        (this._attachedPortal = e),
        (this._attachedRef = t),
        this.attached.emit(t),
        t
      );
    }
    _getRootNode() {
      let e = this._viewContainerRef.element.nativeElement;
      return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(j(Uo), j(dn), j(ze));
      };
    }
    static {
      this.ɵdir = Pe({
        type: n,
        selectors: [["", "cdkPortalOutlet", ""]],
        inputs: { portal: [0, "cdkPortalOutlet", "portal"] },
        outputs: { attached: "attached" },
        exportAs: ["cdkPortalOutlet"],
        standalone: !0,
        features: [qe],
      });
    }
  }
  return n;
})();
var tc = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({});
    }
  }
  return n;
})();
var N_ = y_(),
  _h = class {
    constructor(i, e) {
      (this._viewportRuler = i),
        (this._previousHTMLStyles = { top: "", left: "" }),
        (this._isEnabled = !1),
        (this._document = e);
    }
    attach() {}
    enable() {
      if (this._canBeEnabled()) {
        let i = this._document.documentElement;
        (this._previousScrollPosition =
          this._viewportRuler.getViewportScrollPosition()),
          (this._previousHTMLStyles.left = i.style.left || ""),
          (this._previousHTMLStyles.top = i.style.top || ""),
          (i.style.left = Ht(-this._previousScrollPosition.left)),
          (i.style.top = Ht(-this._previousScrollPosition.top)),
          i.classList.add("cdk-global-scrollblock"),
          (this._isEnabled = !0);
      }
    }
    disable() {
      if (this._isEnabled) {
        let i = this._document.documentElement,
          e = this._document.body,
          t = i.style,
          o = e.style,
          r = t.scrollBehavior || "",
          a = o.scrollBehavior || "";
        (this._isEnabled = !1),
          (t.left = this._previousHTMLStyles.left),
          (t.top = this._previousHTMLStyles.top),
          i.classList.remove("cdk-global-scrollblock"),
          N_ && (t.scrollBehavior = o.scrollBehavior = "auto"),
          window.scroll(
            this._previousScrollPosition.left,
            this._previousScrollPosition.top
          ),
          N_ && ((t.scrollBehavior = r), (o.scrollBehavior = a));
      }
    }
    _canBeEnabled() {
      if (
        this._document.documentElement.classList.contains(
          "cdk-global-scrollblock"
        ) ||
        this._isEnabled
      )
        return !1;
      let e = this._document.body,
        t = this._viewportRuler.getViewportSize();
      return e.scrollHeight > t.height || e.scrollWidth > t.width;
    }
  };
var bh = class {
    constructor(i, e, t, o) {
      (this._scrollDispatcher = i),
        (this._ngZone = e),
        (this._viewportRuler = t),
        (this._config = o),
        (this._scrollSubscription = null),
        (this._detach = () => {
          this.disable(),
            this._overlayRef.hasAttached() &&
              this._ngZone.run(() => this._overlayRef.detach());
        });
    }
    attach(i) {
      this._overlayRef, (this._overlayRef = i);
    }
    enable() {
      if (this._scrollSubscription) return;
      let i = this._scrollDispatcher
        .scrolled(0)
        .pipe(
          vi(
            (e) =>
              !e ||
              !this._overlayRef.overlayElement.contains(
                e.getElementRef().nativeElement
              )
          )
        );
      this._config && this._config.threshold && this._config.threshold > 1
        ? ((this._initialScrollPosition =
            this._viewportRuler.getViewportScrollPosition().top),
          (this._scrollSubscription = i.subscribe(() => {
            let e = this._viewportRuler.getViewportScrollPosition().top;
            Math.abs(e - this._initialScrollPosition) > this._config.threshold
              ? this._detach()
              : this._overlayRef.updatePosition();
          })))
        : (this._scrollSubscription = i.subscribe(this._detach));
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  ic = class {
    enable() {}
    disable() {}
    attach() {}
  };
function vh(n, i) {
  return i.some((e) => {
    let t = n.bottom < e.top,
      o = n.top > e.bottom,
      r = n.right < e.left,
      a = n.left > e.right;
    return t || o || r || a;
  });
}
function V_(n, i) {
  return i.some((e) => {
    let t = n.top < e.top,
      o = n.bottom > e.bottom,
      r = n.left < e.left,
      a = n.right > e.right;
    return t || o || r || a;
  });
}
var yh = class {
    constructor(i, e, t, o) {
      (this._scrollDispatcher = i),
        (this._viewportRuler = e),
        (this._ngZone = t),
        (this._config = o),
        (this._scrollSubscription = null);
    }
    attach(i) {
      this._overlayRef, (this._overlayRef = i);
    }
    enable() {
      if (!this._scrollSubscription) {
        let i = this._config ? this._config.scrollThrottle : 0;
        this._scrollSubscription = this._scrollDispatcher
          .scrolled(i)
          .subscribe(() => {
            if (
              (this._overlayRef.updatePosition(),
              this._config && this._config.autoClose)
            ) {
              let e = this._overlayRef.overlayElement.getBoundingClientRect(),
                { width: t, height: o } = this._viewportRuler.getViewportSize();
              vh(e, [
                { width: t, height: o, bottom: o, right: t, top: 0, left: 0 },
              ]) &&
                (this.disable(),
                this._ngZone.run(() => this._overlayRef.detach()));
            }
          });
      }
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  lS = (() => {
    class n {
      constructor(e, t, o, r) {
        (this._scrollDispatcher = e),
          (this._viewportRuler = t),
          (this._ngZone = o),
          (this.noop = () => new ic()),
          (this.close = (a) =>
            new bh(
              this._scrollDispatcher,
              this._ngZone,
              this._viewportRuler,
              a
            )),
          (this.block = () => new _h(this._viewportRuler, this._document)),
          (this.reposition = (a) =>
            new yh(
              this._scrollDispatcher,
              this._viewportRuler,
              this._ngZone,
              a
            )),
          (this._document = r);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(F_), ie(ph), ie(He), ie(ze));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  nc = class {
    constructor(i) {
      if (
        ((this.scrollStrategy = new ic()),
        (this.panelClass = ""),
        (this.hasBackdrop = !1),
        (this.backdropClass = "cdk-overlay-dark-backdrop"),
        (this.disposeOnNavigation = !1),
        i)
      ) {
        let e = Object.keys(i);
        for (let t of e) i[t] !== void 0 && (this[t] = i[t]);
      }
    }
  };
var xh = class {
  constructor(i, e) {
    (this.connectionPair = i), (this.scrollableViewProperties = e);
  }
};
var U_ = (() => {
    class n {
      constructor(e) {
        (this._attachedOverlays = []), (this._document = e);
      }
      ngOnDestroy() {
        this.detach();
      }
      add(e) {
        this.remove(e), this._attachedOverlays.push(e);
      }
      remove(e) {
        let t = this._attachedOverlays.indexOf(e);
        t > -1 && this._attachedOverlays.splice(t, 1),
          this._attachedOverlays.length === 0 && this.detach();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(ze));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  cS = (() => {
    class n extends U_ {
      constructor(e, t) {
        super(e),
          (this._ngZone = t),
          (this._keydownListener = (o) => {
            let r = this._attachedOverlays;
            for (let a = r.length - 1; a > -1; a--)
              if (r[a]._keydownEvents.observers.length > 0) {
                let s = r[a]._keydownEvents;
                this._ngZone ? this._ngZone.run(() => s.next(o)) : s.next(o);
                break;
              }
          });
      }
      add(e) {
        super.add(e),
          this._isAttached ||
            (this._ngZone
              ? this._ngZone.runOutsideAngular(() =>
                  this._document.body.addEventListener(
                    "keydown",
                    this._keydownListener
                  )
                )
              : this._document.body.addEventListener(
                  "keydown",
                  this._keydownListener
                ),
            (this._isAttached = !0));
      }
      detach() {
        this._isAttached &&
          (this._document.body.removeEventListener(
            "keydown",
            this._keydownListener
          ),
          (this._isAttached = !1));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(ze), ie(He, 8));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  dS = (() => {
    class n extends U_ {
      constructor(e, t, o) {
        super(e),
          (this._platform = t),
          (this._ngZone = o),
          (this._cursorStyleIsSet = !1),
          (this._pointerDownListener = (r) => {
            this._pointerDownEventTarget = tn(r);
          }),
          (this._clickListener = (r) => {
            let a = tn(r),
              s =
                r.type === "click" && this._pointerDownEventTarget
                  ? this._pointerDownEventTarget
                  : a;
            this._pointerDownEventTarget = null;
            let c = this._attachedOverlays.slice();
            for (let p = c.length - 1; p > -1; p--) {
              let f = c[p];
              if (
                f._outsidePointerEvents.observers.length < 1 ||
                !f.hasAttached()
              )
                continue;
              if (L_(f.overlayElement, a) || L_(f.overlayElement, s)) break;
              let y = f._outsidePointerEvents;
              this._ngZone ? this._ngZone.run(() => y.next(r)) : y.next(r);
            }
          });
      }
      add(e) {
        if ((super.add(e), !this._isAttached)) {
          let t = this._document.body;
          this._ngZone
            ? this._ngZone.runOutsideAngular(() => this._addEventListeners(t))
            : this._addEventListeners(t),
            this._platform.IOS &&
              !this._cursorStyleIsSet &&
              ((this._cursorOriginalValue = t.style.cursor),
              (t.style.cursor = "pointer"),
              (this._cursorStyleIsSet = !0)),
            (this._isAttached = !0);
        }
      }
      detach() {
        if (this._isAttached) {
          let e = this._document.body;
          e.removeEventListener("pointerdown", this._pointerDownListener, !0),
            e.removeEventListener("click", this._clickListener, !0),
            e.removeEventListener("auxclick", this._clickListener, !0),
            e.removeEventListener("contextmenu", this._clickListener, !0),
            this._platform.IOS &&
              this._cursorStyleIsSet &&
              ((e.style.cursor = this._cursorOriginalValue),
              (this._cursorStyleIsSet = !1)),
            (this._isAttached = !1);
        }
      }
      _addEventListeners(e) {
        e.addEventListener("pointerdown", this._pointerDownListener, !0),
          e.addEventListener("click", this._clickListener, !0),
          e.addEventListener("auxclick", this._clickListener, !0),
          e.addEventListener("contextmenu", this._clickListener, !0);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(ze), ie(wt), ie(He, 8));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function L_(n, i) {
  let e = typeof ShadowRoot < "u" && ShadowRoot,
    t = i;
  for (; t; ) {
    if (t === n) return !0;
    t = e && t instanceof ShadowRoot ? t.host : t.parentNode;
  }
  return !1;
}
var W_ = (() => {
    class n {
      constructor(e, t) {
        (this._platform = t), (this._document = e);
      }
      ngOnDestroy() {
        this._containerElement?.remove();
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = "cdk-overlay-container";
        if (this._platform.isBrowser || ns()) {
          let o = this._document.querySelectorAll(
            `.${e}[platform="server"], .${e}[platform="test"]`
          );
          for (let r = 0; r < o.length; r++) o[r].remove();
        }
        let t = this._document.createElement("div");
        t.classList.add(e),
          ns()
            ? t.setAttribute("platform", "test")
            : this._platform.isBrowser || t.setAttribute("platform", "server"),
          this._document.body.appendChild(t),
          (this._containerElement = t);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(ze), ie(wt));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Ch = class {
    constructor(i, e, t, o, r, a, s, c, p, f = !1, y) {
      (this._portalOutlet = i),
        (this._host = e),
        (this._pane = t),
        (this._config = o),
        (this._ngZone = r),
        (this._keyboardDispatcher = a),
        (this._document = s),
        (this._location = c),
        (this._outsideClickDispatcher = p),
        (this._animationsDisabled = f),
        (this._injector = y),
        (this._backdropElement = null),
        (this._backdropClick = new Ae()),
        (this._attachments = new Ae()),
        (this._detachments = new Ae()),
        (this._locationChanges = sn.EMPTY),
        (this._backdropClickHandler = (x) => this._backdropClick.next(x)),
        (this._backdropTransitionendHandler = (x) => {
          this._disposeBackdrop(x.target);
        }),
        (this._keydownEvents = new Ae()),
        (this._outsidePointerEvents = new Ae()),
        (this._renders = new Ae()),
        o.scrollStrategy &&
          ((this._scrollStrategy = o.scrollStrategy),
          this._scrollStrategy.attach(this)),
        (this._positionStrategy = o.positionStrategy),
        (this._afterRenderRef = pn(() =>
          dd(
            () => {
              this._renders.next();
            },
            { injector: this._injector }
          )
        ));
    }
    get overlayElement() {
      return this._pane;
    }
    get backdropElement() {
      return this._backdropElement;
    }
    get hostElement() {
      return this._host;
    }
    attach(i) {
      !this._host.parentElement &&
        this._previousHostParent &&
        this._previousHostParent.appendChild(this._host);
      let e = this._portalOutlet.attach(i);
      return (
        this._positionStrategy && this._positionStrategy.attach(this),
        this._updateStackingOrder(),
        this._updateElementSize(),
        this._updateElementDirection(),
        this._scrollStrategy && this._scrollStrategy.enable(),
        this._afterNextRenderRef?.destroy(),
        (this._afterNextRenderRef = Kn(
          () => {
            this.hasAttached() && this.updatePosition();
          },
          { injector: this._injector }
        )),
        this._togglePointerEvents(!0),
        this._config.hasBackdrop && this._attachBackdrop(),
        this._config.panelClass &&
          this._toggleClasses(this._pane, this._config.panelClass, !0),
        this._attachments.next(),
        this._keyboardDispatcher.add(this),
        this._config.disposeOnNavigation &&
          (this._locationChanges = this._location.subscribe(() =>
            this.dispose()
          )),
        this._outsideClickDispatcher.add(this),
        typeof e?.onDestroy == "function" &&
          e.onDestroy(() => {
            this.hasAttached() &&
              this._ngZone.runOutsideAngular(() =>
                Promise.resolve().then(() => this.detach())
              );
          }),
        e
      );
    }
    detach() {
      if (!this.hasAttached()) return;
      this.detachBackdrop(),
        this._togglePointerEvents(!1),
        this._positionStrategy &&
          this._positionStrategy.detach &&
          this._positionStrategy.detach(),
        this._scrollStrategy && this._scrollStrategy.disable();
      let i = this._portalOutlet.detach();
      return (
        this._detachments.next(),
        this._keyboardDispatcher.remove(this),
        this._detachContentWhenEmpty(),
        this._locationChanges.unsubscribe(),
        this._outsideClickDispatcher.remove(this),
        i
      );
    }
    dispose() {
      let i = this.hasAttached();
      this._positionStrategy && this._positionStrategy.dispose(),
        this._disposeScrollStrategy(),
        this._disposeBackdrop(this._backdropElement),
        this._locationChanges.unsubscribe(),
        this._keyboardDispatcher.remove(this),
        this._portalOutlet.dispose(),
        this._attachments.complete(),
        this._backdropClick.complete(),
        this._keydownEvents.complete(),
        this._outsidePointerEvents.complete(),
        this._outsideClickDispatcher.remove(this),
        this._host?.remove(),
        this._afterNextRenderRef?.destroy(),
        (this._previousHostParent = this._pane = this._host = null),
        i && this._detachments.next(),
        this._detachments.complete(),
        this._afterRenderRef.destroy(),
        this._renders.complete();
    }
    hasAttached() {
      return this._portalOutlet.hasAttached();
    }
    backdropClick() {
      return this._backdropClick;
    }
    attachments() {
      return this._attachments;
    }
    detachments() {
      return this._detachments;
    }
    keydownEvents() {
      return this._keydownEvents;
    }
    outsidePointerEvents() {
      return this._outsidePointerEvents;
    }
    getConfig() {
      return this._config;
    }
    updatePosition() {
      this._positionStrategy && this._positionStrategy.apply();
    }
    updatePositionStrategy(i) {
      i !== this._positionStrategy &&
        (this._positionStrategy && this._positionStrategy.dispose(),
        (this._positionStrategy = i),
        this.hasAttached() && (i.attach(this), this.updatePosition()));
    }
    updateSize(i) {
      (this._config = se(se({}, this._config), i)), this._updateElementSize();
    }
    setDirection(i) {
      (this._config = at(se({}, this._config), { direction: i })),
        this._updateElementDirection();
    }
    addPanelClass(i) {
      this._pane && this._toggleClasses(this._pane, i, !0);
    }
    removePanelClass(i) {
      this._pane && this._toggleClasses(this._pane, i, !1);
    }
    getDirection() {
      let i = this._config.direction;
      return i ? (typeof i == "string" ? i : i.value) : "ltr";
    }
    updateScrollStrategy(i) {
      i !== this._scrollStrategy &&
        (this._disposeScrollStrategy(),
        (this._scrollStrategy = i),
        this.hasAttached() && (i.attach(this), i.enable()));
    }
    _updateElementDirection() {
      this._host.setAttribute("dir", this.getDirection());
    }
    _updateElementSize() {
      if (!this._pane) return;
      let i = this._pane.style;
      (i.width = Ht(this._config.width)),
        (i.height = Ht(this._config.height)),
        (i.minWidth = Ht(this._config.minWidth)),
        (i.minHeight = Ht(this._config.minHeight)),
        (i.maxWidth = Ht(this._config.maxWidth)),
        (i.maxHeight = Ht(this._config.maxHeight));
    }
    _togglePointerEvents(i) {
      this._pane.style.pointerEvents = i ? "" : "none";
    }
    _attachBackdrop() {
      let i = "cdk-overlay-backdrop-showing";
      (this._backdropElement = this._document.createElement("div")),
        this._backdropElement.classList.add("cdk-overlay-backdrop"),
        this._animationsDisabled &&
          this._backdropElement.classList.add(
            "cdk-overlay-backdrop-noop-animation"
          ),
        this._config.backdropClass &&
          this._toggleClasses(
            this._backdropElement,
            this._config.backdropClass,
            !0
          ),
        this._host.parentElement.insertBefore(
          this._backdropElement,
          this._host
        ),
        this._backdropElement.addEventListener(
          "click",
          this._backdropClickHandler
        ),
        !this._animationsDisabled && typeof requestAnimationFrame < "u"
          ? this._ngZone.runOutsideAngular(() => {
              requestAnimationFrame(() => {
                this._backdropElement && this._backdropElement.classList.add(i);
              });
            })
          : this._backdropElement.classList.add(i);
    }
    _updateStackingOrder() {
      this._host.nextSibling && this._host.parentNode.appendChild(this._host);
    }
    detachBackdrop() {
      let i = this._backdropElement;
      if (i) {
        if (this._animationsDisabled) {
          this._disposeBackdrop(i);
          return;
        }
        i.classList.remove("cdk-overlay-backdrop-showing"),
          this._ngZone.runOutsideAngular(() => {
            i.addEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            );
          }),
          (i.style.pointerEvents = "none"),
          (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
            setTimeout(() => {
              this._disposeBackdrop(i);
            }, 500)
          ));
      }
    }
    _toggleClasses(i, e, t) {
      let o = Zr(e || []).filter((r) => !!r);
      o.length && (t ? i.classList.add(...o) : i.classList.remove(...o));
    }
    _detachContentWhenEmpty() {
      this._ngZone.runOutsideAngular(() => {
        let i = this._renders
          .pipe(jt(Cr(this._attachments, this._detachments)))
          .subscribe(() => {
            (!this._pane || !this._host || this._pane.children.length === 0) &&
              (this._pane &&
                this._config.panelClass &&
                this._toggleClasses(this._pane, this._config.panelClass, !1),
              this._host &&
                this._host.parentElement &&
                ((this._previousHostParent = this._host.parentElement),
                this._host.remove()),
              i.unsubscribe());
          });
      });
    }
    _disposeScrollStrategy() {
      let i = this._scrollStrategy;
      i && (i.disable(), i.detach && i.detach());
    }
    _disposeBackdrop(i) {
      i &&
        (i.removeEventListener("click", this._backdropClickHandler),
        i.removeEventListener(
          "transitionend",
          this._backdropTransitionendHandler
        ),
        i.remove(),
        this._backdropElement === i && (this._backdropElement = null)),
        this._backdropTimeout &&
          (clearTimeout(this._backdropTimeout),
          (this._backdropTimeout = void 0));
    }
  },
  B_ = "cdk-overlay-connected-position-bounding-box",
  uS = /([A-Za-z%]+)$/,
  oc = class {
    get positions() {
      return this._preferredPositions;
    }
    constructor(i, e, t, o, r) {
      (this._viewportRuler = e),
        (this._document = t),
        (this._platform = o),
        (this._overlayContainer = r),
        (this._lastBoundingBoxSize = { width: 0, height: 0 }),
        (this._isPushed = !1),
        (this._canPush = !0),
        (this._growAfterOpen = !1),
        (this._hasFlexibleDimensions = !0),
        (this._positionLocked = !1),
        (this._viewportMargin = 0),
        (this._scrollables = []),
        (this._preferredPositions = []),
        (this._positionChanges = new Ae()),
        (this._resizeSubscription = sn.EMPTY),
        (this._offsetX = 0),
        (this._offsetY = 0),
        (this._appliedPanelClasses = []),
        (this.positionChanges = this._positionChanges),
        this.setOrigin(i);
    }
    attach(i) {
      this._overlayRef && this._overlayRef,
        this._validatePositions(),
        i.hostElement.classList.add(B_),
        (this._overlayRef = i),
        (this._boundingBox = i.hostElement),
        (this._pane = i.overlayElement),
        (this._isDisposed = !1),
        (this._isInitialRender = !0),
        (this._lastPosition = null),
        this._resizeSubscription.unsubscribe(),
        (this._resizeSubscription = this._viewportRuler
          .change()
          .subscribe(() => {
            (this._isInitialRender = !0), this.apply();
          }));
    }
    apply() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      if (
        !this._isInitialRender &&
        this._positionLocked &&
        this._lastPosition
      ) {
        this.reapplyLastPosition();
        return;
      }
      this._clearPanelClasses(),
        this._resetOverlayElementStyles(),
        this._resetBoundingBoxStyles(),
        (this._viewportRect = this._getNarrowedViewportRect()),
        (this._originRect = this._getOriginRect()),
        (this._overlayRect = this._pane.getBoundingClientRect()),
        (this._containerRect = this._overlayContainer
          .getContainerElement()
          .getBoundingClientRect());
      let i = this._originRect,
        e = this._overlayRect,
        t = this._viewportRect,
        o = this._containerRect,
        r = [],
        a;
      for (let s of this._preferredPositions) {
        let c = this._getOriginPoint(i, o, s),
          p = this._getOverlayPoint(c, e, s),
          f = this._getOverlayFit(p, e, t, s);
        if (f.isCompletelyWithinViewport) {
          (this._isPushed = !1), this._applyPosition(s, c);
          return;
        }
        if (this._canFitWithFlexibleDimensions(f, p, t)) {
          r.push({
            position: s,
            origin: c,
            overlayRect: e,
            boundingBoxRect: this._calculateBoundingBoxRect(c, s),
          });
          continue;
        }
        (!a || a.overlayFit.visibleArea < f.visibleArea) &&
          (a = {
            overlayFit: f,
            overlayPoint: p,
            originPoint: c,
            position: s,
            overlayRect: e,
          });
      }
      if (r.length) {
        let s = null,
          c = -1;
        for (let p of r) {
          let f =
            p.boundingBoxRect.width *
            p.boundingBoxRect.height *
            (p.position.weight || 1);
          f > c && ((c = f), (s = p));
        }
        (this._isPushed = !1), this._applyPosition(s.position, s.origin);
        return;
      }
      if (this._canPush) {
        (this._isPushed = !0), this._applyPosition(a.position, a.originPoint);
        return;
      }
      this._applyPosition(a.position, a.originPoint);
    }
    detach() {
      this._clearPanelClasses(),
        (this._lastPosition = null),
        (this._previousPushAmount = null),
        this._resizeSubscription.unsubscribe();
    }
    dispose() {
      this._isDisposed ||
        (this._boundingBox &&
          lr(this._boundingBox.style, {
            top: "",
            left: "",
            right: "",
            bottom: "",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          }),
        this._pane && this._resetOverlayElementStyles(),
        this._overlayRef && this._overlayRef.hostElement.classList.remove(B_),
        this.detach(),
        this._positionChanges.complete(),
        (this._overlayRef = this._boundingBox = null),
        (this._isDisposed = !0));
    }
    reapplyLastPosition() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      let i = this._lastPosition;
      if (i) {
        (this._originRect = this._getOriginRect()),
          (this._overlayRect = this._pane.getBoundingClientRect()),
          (this._viewportRect = this._getNarrowedViewportRect()),
          (this._containerRect = this._overlayContainer
            .getContainerElement()
            .getBoundingClientRect());
        let e = this._getOriginPoint(this._originRect, this._containerRect, i);
        this._applyPosition(i, e);
      } else this.apply();
    }
    withScrollableContainers(i) {
      return (this._scrollables = i), this;
    }
    withPositions(i) {
      return (
        (this._preferredPositions = i),
        i.indexOf(this._lastPosition) === -1 && (this._lastPosition = null),
        this._validatePositions(),
        this
      );
    }
    withViewportMargin(i) {
      return (this._viewportMargin = i), this;
    }
    withFlexibleDimensions(i = !0) {
      return (this._hasFlexibleDimensions = i), this;
    }
    withGrowAfterOpen(i = !0) {
      return (this._growAfterOpen = i), this;
    }
    withPush(i = !0) {
      return (this._canPush = i), this;
    }
    withLockedPosition(i = !0) {
      return (this._positionLocked = i), this;
    }
    setOrigin(i) {
      return (this._origin = i), this;
    }
    withDefaultOffsetX(i) {
      return (this._offsetX = i), this;
    }
    withDefaultOffsetY(i) {
      return (this._offsetY = i), this;
    }
    withTransformOriginOn(i) {
      return (this._transformOriginSelector = i), this;
    }
    _getOriginPoint(i, e, t) {
      let o;
      if (t.originX == "center") o = i.left + i.width / 2;
      else {
        let a = this._isRtl() ? i.right : i.left,
          s = this._isRtl() ? i.left : i.right;
        o = t.originX == "start" ? a : s;
      }
      e.left < 0 && (o -= e.left);
      let r;
      return (
        t.originY == "center"
          ? (r = i.top + i.height / 2)
          : (r = t.originY == "top" ? i.top : i.bottom),
        e.top < 0 && (r -= e.top),
        { x: o, y: r }
      );
    }
    _getOverlayPoint(i, e, t) {
      let o;
      t.overlayX == "center"
        ? (o = -e.width / 2)
        : t.overlayX === "start"
        ? (o = this._isRtl() ? -e.width : 0)
        : (o = this._isRtl() ? 0 : -e.width);
      let r;
      return (
        t.overlayY == "center"
          ? (r = -e.height / 2)
          : (r = t.overlayY == "top" ? 0 : -e.height),
        { x: i.x + o, y: i.y + r }
      );
    }
    _getOverlayFit(i, e, t, o) {
      let r = j_(e),
        { x: a, y: s } = i,
        c = this._getOffset(o, "x"),
        p = this._getOffset(o, "y");
      c && (a += c), p && (s += p);
      let f = 0 - a,
        y = a + r.width - t.width,
        x = 0 - s,
        C = s + r.height - t.height,
        M = this._subtractOverflows(r.width, f, y),
        k = this._subtractOverflows(r.height, x, C),
        O = M * k;
      return {
        visibleArea: O,
        isCompletelyWithinViewport: r.width * r.height === O,
        fitsInViewportVertically: k === r.height,
        fitsInViewportHorizontally: M == r.width,
      };
    }
    _canFitWithFlexibleDimensions(i, e, t) {
      if (this._hasFlexibleDimensions) {
        let o = t.bottom - e.y,
          r = t.right - e.x,
          a = H_(this._overlayRef.getConfig().minHeight),
          s = H_(this._overlayRef.getConfig().minWidth),
          c = i.fitsInViewportVertically || (a != null && a <= o),
          p = i.fitsInViewportHorizontally || (s != null && s <= r);
        return c && p;
      }
      return !1;
    }
    _pushOverlayOnScreen(i, e, t) {
      if (this._previousPushAmount && this._positionLocked)
        return {
          x: i.x + this._previousPushAmount.x,
          y: i.y + this._previousPushAmount.y,
        };
      let o = j_(e),
        r = this._viewportRect,
        a = Math.max(i.x + o.width - r.width, 0),
        s = Math.max(i.y + o.height - r.height, 0),
        c = Math.max(r.top - t.top - i.y, 0),
        p = Math.max(r.left - t.left - i.x, 0),
        f = 0,
        y = 0;
      return (
        o.width <= r.width
          ? (f = p || -a)
          : (f = i.x < this._viewportMargin ? r.left - t.left - i.x : 0),
        o.height <= r.height
          ? (y = c || -s)
          : (y = i.y < this._viewportMargin ? r.top - t.top - i.y : 0),
        (this._previousPushAmount = { x: f, y }),
        { x: i.x + f, y: i.y + y }
      );
    }
    _applyPosition(i, e) {
      if (
        (this._setTransformOrigin(i),
        this._setOverlayElementStyles(e, i),
        this._setBoundingBoxStyles(e, i),
        i.panelClass && this._addPanelClasses(i.panelClass),
        this._positionChanges.observers.length)
      ) {
        let t = this._getScrollVisibility();
        if (
          i !== this._lastPosition ||
          !this._lastScrollVisibility ||
          !hS(this._lastScrollVisibility, t)
        ) {
          let o = new xh(i, t);
          this._positionChanges.next(o);
        }
        this._lastScrollVisibility = t;
      }
      (this._lastPosition = i), (this._isInitialRender = !1);
    }
    _setTransformOrigin(i) {
      if (!this._transformOriginSelector) return;
      let e = this._boundingBox.querySelectorAll(this._transformOriginSelector),
        t,
        o = i.overlayY;
      i.overlayX === "center"
        ? (t = "center")
        : this._isRtl()
        ? (t = i.overlayX === "start" ? "right" : "left")
        : (t = i.overlayX === "start" ? "left" : "right");
      for (let r = 0; r < e.length; r++)
        e[r].style.transformOrigin = `${t} ${o}`;
    }
    _calculateBoundingBoxRect(i, e) {
      let t = this._viewportRect,
        o = this._isRtl(),
        r,
        a,
        s;
      if (e.overlayY === "top")
        (a = i.y), (r = t.height - a + this._viewportMargin);
      else if (e.overlayY === "bottom")
        (s = t.height - i.y + this._viewportMargin * 2),
          (r = t.height - s + this._viewportMargin);
      else {
        let C = Math.min(t.bottom - i.y + t.top, i.y),
          M = this._lastBoundingBoxSize.height;
        (r = C * 2),
          (a = i.y - C),
          r > M &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (a = i.y - M / 2);
      }
      let c = (e.overlayX === "start" && !o) || (e.overlayX === "end" && o),
        p = (e.overlayX === "end" && !o) || (e.overlayX === "start" && o),
        f,
        y,
        x;
      if (p)
        (x = t.width - i.x + this._viewportMargin * 2),
          (f = i.x - this._viewportMargin);
      else if (c) (y = i.x), (f = t.right - i.x);
      else {
        let C = Math.min(t.right - i.x + t.left, i.x),
          M = this._lastBoundingBoxSize.width;
        (f = C * 2),
          (y = i.x - C),
          f > M &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (y = i.x - M / 2);
      }
      return { top: a, left: y, bottom: s, right: x, width: f, height: r };
    }
    _setBoundingBoxStyles(i, e) {
      let t = this._calculateBoundingBoxRect(i, e);
      !this._isInitialRender &&
        !this._growAfterOpen &&
        ((t.height = Math.min(t.height, this._lastBoundingBoxSize.height)),
        (t.width = Math.min(t.width, this._lastBoundingBoxSize.width)));
      let o = {};
      if (this._hasExactPosition())
        (o.top = o.left = "0"),
          (o.bottom = o.right = o.maxHeight = o.maxWidth = ""),
          (o.width = o.height = "100%");
      else {
        let r = this._overlayRef.getConfig().maxHeight,
          a = this._overlayRef.getConfig().maxWidth;
        (o.height = Ht(t.height)),
          (o.top = Ht(t.top)),
          (o.bottom = Ht(t.bottom)),
          (o.width = Ht(t.width)),
          (o.left = Ht(t.left)),
          (o.right = Ht(t.right)),
          e.overlayX === "center"
            ? (o.alignItems = "center")
            : (o.alignItems = e.overlayX === "end" ? "flex-end" : "flex-start"),
          e.overlayY === "center"
            ? (o.justifyContent = "center")
            : (o.justifyContent =
                e.overlayY === "bottom" ? "flex-end" : "flex-start"),
          r && (o.maxHeight = Ht(r)),
          a && (o.maxWidth = Ht(a));
      }
      (this._lastBoundingBoxSize = t), lr(this._boundingBox.style, o);
    }
    _resetBoundingBoxStyles() {
      lr(this._boundingBox.style, {
        top: "0",
        left: "0",
        right: "0",
        bottom: "0",
        height: "",
        width: "",
        alignItems: "",
        justifyContent: "",
      });
    }
    _resetOverlayElementStyles() {
      lr(this._pane.style, {
        top: "",
        left: "",
        bottom: "",
        right: "",
        position: "",
        transform: "",
      });
    }
    _setOverlayElementStyles(i, e) {
      let t = {},
        o = this._hasExactPosition(),
        r = this._hasFlexibleDimensions,
        a = this._overlayRef.getConfig();
      if (o) {
        let f = this._viewportRuler.getViewportScrollPosition();
        lr(t, this._getExactOverlayY(e, i, f)),
          lr(t, this._getExactOverlayX(e, i, f));
      } else t.position = "static";
      let s = "",
        c = this._getOffset(e, "x"),
        p = this._getOffset(e, "y");
      c && (s += `translateX(${c}px) `),
        p && (s += `translateY(${p}px)`),
        (t.transform = s.trim()),
        a.maxHeight &&
          (o ? (t.maxHeight = Ht(a.maxHeight)) : r && (t.maxHeight = "")),
        a.maxWidth &&
          (o ? (t.maxWidth = Ht(a.maxWidth)) : r && (t.maxWidth = "")),
        lr(this._pane.style, t);
    }
    _getExactOverlayY(i, e, t) {
      let o = { top: "", bottom: "" },
        r = this._getOverlayPoint(e, this._overlayRect, i);
      if (
        (this._isPushed &&
          (r = this._pushOverlayOnScreen(r, this._overlayRect, t)),
        i.overlayY === "bottom")
      ) {
        let a = this._document.documentElement.clientHeight;
        o.bottom = `${a - (r.y + this._overlayRect.height)}px`;
      } else o.top = Ht(r.y);
      return o;
    }
    _getExactOverlayX(i, e, t) {
      let o = { left: "", right: "" },
        r = this._getOverlayPoint(e, this._overlayRect, i);
      this._isPushed &&
        (r = this._pushOverlayOnScreen(r, this._overlayRect, t));
      let a;
      if (
        (this._isRtl()
          ? (a = i.overlayX === "end" ? "left" : "right")
          : (a = i.overlayX === "end" ? "right" : "left"),
        a === "right")
      ) {
        let s = this._document.documentElement.clientWidth;
        o.right = `${s - (r.x + this._overlayRect.width)}px`;
      } else o.left = Ht(r.x);
      return o;
    }
    _getScrollVisibility() {
      let i = this._getOriginRect(),
        e = this._pane.getBoundingClientRect(),
        t = this._scrollables.map((o) =>
          o.getElementRef().nativeElement.getBoundingClientRect()
        );
      return {
        isOriginClipped: V_(i, t),
        isOriginOutsideView: vh(i, t),
        isOverlayClipped: V_(e, t),
        isOverlayOutsideView: vh(e, t),
      };
    }
    _subtractOverflows(i, ...e) {
      return e.reduce((t, o) => t - Math.max(o, 0), i);
    }
    _getNarrowedViewportRect() {
      let i = this._document.documentElement.clientWidth,
        e = this._document.documentElement.clientHeight,
        t = this._viewportRuler.getViewportScrollPosition();
      return {
        top: t.top + this._viewportMargin,
        left: t.left + this._viewportMargin,
        right: t.left + i - this._viewportMargin,
        bottom: t.top + e - this._viewportMargin,
        width: i - 2 * this._viewportMargin,
        height: e - 2 * this._viewportMargin,
      };
    }
    _isRtl() {
      return this._overlayRef.getDirection() === "rtl";
    }
    _hasExactPosition() {
      return !this._hasFlexibleDimensions || this._isPushed;
    }
    _getOffset(i, e) {
      return e === "x"
        ? i.offsetX == null
          ? this._offsetX
          : i.offsetX
        : i.offsetY == null
        ? this._offsetY
        : i.offsetY;
    }
    _validatePositions() {}
    _addPanelClasses(i) {
      this._pane &&
        Zr(i).forEach((e) => {
          e !== "" &&
            this._appliedPanelClasses.indexOf(e) === -1 &&
            (this._appliedPanelClasses.push(e), this._pane.classList.add(e));
        });
    }
    _clearPanelClasses() {
      this._pane &&
        (this._appliedPanelClasses.forEach((i) => {
          this._pane.classList.remove(i);
        }),
        (this._appliedPanelClasses = []));
    }
    _getOriginRect() {
      let i = this._origin;
      if (i instanceof Ne) return i.nativeElement.getBoundingClientRect();
      if (i instanceof Element) return i.getBoundingClientRect();
      let e = i.width || 0,
        t = i.height || 0;
      return {
        top: i.y,
        bottom: i.y + t,
        left: i.x,
        right: i.x + e,
        height: t,
        width: e,
      };
    }
  };
function lr(n, i) {
  for (let e in i) i.hasOwnProperty(e) && (n[e] = i[e]);
  return n;
}
function H_(n) {
  if (typeof n != "number" && n != null) {
    let [i, e] = n.split(uS);
    return !e || e === "px" ? parseFloat(i) : null;
  }
  return n || null;
}
function j_(n) {
  return {
    top: Math.floor(n.top),
    right: Math.floor(n.right),
    bottom: Math.floor(n.bottom),
    left: Math.floor(n.left),
    width: Math.floor(n.width),
    height: Math.floor(n.height),
  };
}
function hS(n, i) {
  return n === i
    ? !0
    : n.isOriginClipped === i.isOriginClipped &&
        n.isOriginOutsideView === i.isOriginOutsideView &&
        n.isOverlayClipped === i.isOverlayClipped &&
        n.isOverlayOutsideView === i.isOverlayOutsideView;
}
var z_ = "cdk-global-overlay-wrapper",
  wh = class {
    constructor() {
      (this._cssPosition = "static"),
        (this._topOffset = ""),
        (this._bottomOffset = ""),
        (this._alignItems = ""),
        (this._xPosition = ""),
        (this._xOffset = ""),
        (this._width = ""),
        (this._height = ""),
        (this._isDisposed = !1);
    }
    attach(i) {
      let e = i.getConfig();
      (this._overlayRef = i),
        this._width && !e.width && i.updateSize({ width: this._width }),
        this._height && !e.height && i.updateSize({ height: this._height }),
        i.hostElement.classList.add(z_),
        (this._isDisposed = !1);
    }
    top(i = "") {
      return (
        (this._bottomOffset = ""),
        (this._topOffset = i),
        (this._alignItems = "flex-start"),
        this
      );
    }
    left(i = "") {
      return (this._xOffset = i), (this._xPosition = "left"), this;
    }
    bottom(i = "") {
      return (
        (this._topOffset = ""),
        (this._bottomOffset = i),
        (this._alignItems = "flex-end"),
        this
      );
    }
    right(i = "") {
      return (this._xOffset = i), (this._xPosition = "right"), this;
    }
    start(i = "") {
      return (this._xOffset = i), (this._xPosition = "start"), this;
    }
    end(i = "") {
      return (this._xOffset = i), (this._xPosition = "end"), this;
    }
    width(i = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ width: i })
          : (this._width = i),
        this
      );
    }
    height(i = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ height: i })
          : (this._height = i),
        this
      );
    }
    centerHorizontally(i = "") {
      return this.left(i), (this._xPosition = "center"), this;
    }
    centerVertically(i = "") {
      return this.top(i), (this._alignItems = "center"), this;
    }
    apply() {
      if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
      let i = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement.style,
        t = this._overlayRef.getConfig(),
        { width: o, height: r, maxWidth: a, maxHeight: s } = t,
        c =
          (o === "100%" || o === "100vw") &&
          (!a || a === "100%" || a === "100vw"),
        p =
          (r === "100%" || r === "100vh") &&
          (!s || s === "100%" || s === "100vh"),
        f = this._xPosition,
        y = this._xOffset,
        x = this._overlayRef.getConfig().direction === "rtl",
        C = "",
        M = "",
        k = "";
      c
        ? (k = "flex-start")
        : f === "center"
        ? ((k = "center"), x ? (M = y) : (C = y))
        : x
        ? f === "left" || f === "end"
          ? ((k = "flex-end"), (C = y))
          : (f === "right" || f === "start") && ((k = "flex-start"), (M = y))
        : f === "left" || f === "start"
        ? ((k = "flex-start"), (C = y))
        : (f === "right" || f === "end") && ((k = "flex-end"), (M = y)),
        (i.position = this._cssPosition),
        (i.marginLeft = c ? "0" : C),
        (i.marginTop = p ? "0" : this._topOffset),
        (i.marginBottom = this._bottomOffset),
        (i.marginRight = c ? "0" : M),
        (e.justifyContent = k),
        (e.alignItems = p ? "flex-start" : this._alignItems);
    }
    dispose() {
      if (this._isDisposed || !this._overlayRef) return;
      let i = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement,
        t = e.style;
      e.classList.remove(z_),
        (t.justifyContent =
          t.alignItems =
          i.marginTop =
          i.marginBottom =
          i.marginLeft =
          i.marginRight =
          i.position =
            ""),
        (this._overlayRef = null),
        (this._isDisposed = !0);
    }
  },
  pS = (() => {
    class n {
      constructor(e, t, o, r) {
        (this._viewportRuler = e),
          (this._document = t),
          (this._platform = o),
          (this._overlayContainer = r);
      }
      global() {
        return new wh();
      }
      flexibleConnectedTo(e) {
        return new oc(
          e,
          this._viewportRuler,
          this._document,
          this._platform,
          this._overlayContainer
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(ph), ie(ze), ie(wt), ie(W_));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  mS = 0,
  ta = (() => {
    class n {
      constructor(e, t, o, r, a, s, c, p, f, y, x, C) {
        (this.scrollStrategies = e),
          (this._overlayContainer = t),
          (this._componentFactoryResolver = o),
          (this._positionBuilder = r),
          (this._keyboardDispatcher = a),
          (this._injector = s),
          (this._ngZone = c),
          (this._document = p),
          (this._directionality = f),
          (this._location = y),
          (this._outsideClickDispatcher = x),
          (this._animationsModuleType = C);
      }
      create(e) {
        let t = this._createHostElement(),
          o = this._createPaneElement(t),
          r = this._createPortalOutlet(o),
          a = new nc(e);
        return (
          (a.direction = a.direction || this._directionality.value),
          new Ch(
            r,
            t,
            o,
            a,
            this._ngZone,
            this._keyboardDispatcher,
            this._document,
            this._location,
            this._outsideClickDispatcher,
            this._animationsModuleType === "NoopAnimations",
            this._injector.get(xa)
          )
        );
      }
      position() {
        return this._positionBuilder;
      }
      _createPaneElement(e) {
        let t = this._document.createElement("div");
        return (
          (t.id = `cdk-overlay-${mS++}`),
          t.classList.add("cdk-overlay-pane"),
          e.appendChild(t),
          t
        );
      }
      _createHostElement() {
        let e = this._document.createElement("div");
        return this._overlayContainer.getContainerElement().appendChild(e), e;
      }
      _createPortalOutlet(e) {
        return (
          this._appRef || (this._appRef = this._injector.get(Qn)),
          new ec(
            e,
            this._componentFactoryResolver,
            this._appRef,
            this._injector,
            this._document
          )
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            ie(lS),
            ie(W_),
            ie(Uo),
            ie(pS),
            ie(cS),
            ie(Tt),
            ie(He),
            ie(ze),
            ie(ea),
            ie(Vs),
            ie(dS),
            ie(Mn, 8)
          );
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var fS = new Ze("cdk-connected-overlay-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let n = ne(ta);
    return () => n.scrollStrategies.reposition();
  },
});
function gS(n) {
  return () => n.scrollStrategies.reposition();
}
var _S = { provide: fS, deps: [ta], useFactory: gS },
  $_ = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = De({ type: n });
      }
      static {
        this.ɵinj = we({ providers: [ta, _S], imports: [Io, tc, mh, mh] });
      }
    }
    return n;
  })();
function bS() {
  return !0;
}
var vS = new Ze("mat-sanity-checks", { providedIn: "root", factory: bS }),
  Ui = (() => {
    class n {
      constructor(e, t, o) {
        (this._sanityChecks = t),
          (this._document = o),
          (this._hasDoneGlobalChecks = !1),
          e._applyBodyHighContrastModeCssClasses(),
          this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
      }
      _checkIsEnabled(e) {
        return ns()
          ? !1
          : typeof this._sanityChecks == "boolean"
          ? this._sanityChecks
          : !!this._sanityChecks[e];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(hh), ie(vS, 8), ie(ze));
        };
      }
      static {
        this.ɵmod = De({ type: n });
      }
      static {
        this.ɵinj = we({ imports: [Io, Io] });
      }
    }
    return n;
  })();
var G_ = new Ze("MAT_DATE_LOCALE", { providedIn: "root", factory: yS });
function yS() {
  return ne(pd);
}
var Vi = class {
    constructor() {
      (this._localeChanges = new Ae()),
        (this.localeChanges = this._localeChanges);
    }
    getValidDateOrNull(i) {
      return this.isDateInstance(i) && this.isValid(i) ? i : null;
    }
    deserialize(i) {
      return i == null || (this.isDateInstance(i) && this.isValid(i))
        ? i
        : this.invalid();
    }
    setLocale(i) {
      (this.locale = i), this._localeChanges.next();
    }
    compareDate(i, e) {
      return (
        this.getYear(i) - this.getYear(e) ||
        this.getMonth(i) - this.getMonth(e) ||
        this.getDate(i) - this.getDate(e)
      );
    }
    sameDate(i, e) {
      if (i && e) {
        let t = this.isValid(i),
          o = this.isValid(e);
        return t && o ? !this.compareDate(i, e) : t == o;
      }
      return i == e;
    }
    clampDate(i, e, t) {
      return e && this.compareDate(i, e) < 0
        ? e
        : t && this.compareDate(i, t) > 0
        ? t
        : i;
    }
  },
  ia = new Ze("mat-date-formats"),
  xS =
    /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
function Dh(n, i) {
  let e = Array(n);
  for (let t = 0; t < n; t++) e[t] = i(t);
  return e;
}
var CS = (() => {
    class n extends Vi {
      constructor(e) {
        super(),
          (this.useUtcForDisplay = !1),
          (this._matDateLocale = ne(G_, { optional: !0 })),
          e !== void 0 && (this._matDateLocale = e),
          super.setLocale(this._matDateLocale);
      }
      getYear(e) {
        return e.getFullYear();
      }
      getMonth(e) {
        return e.getMonth();
      }
      getDate(e) {
        return e.getDate();
      }
      getDayOfWeek(e) {
        return e.getDay();
      }
      getMonthNames(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          month: e,
          timeZone: "utc",
        });
        return Dh(12, (o) => this._format(t, new Date(2017, o, 1)));
      }
      getDateNames() {
        let e = new Intl.DateTimeFormat(this.locale, {
          day: "numeric",
          timeZone: "utc",
        });
        return Dh(31, (t) => this._format(e, new Date(2017, 0, t + 1)));
      }
      getDayOfWeekNames(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          weekday: e,
          timeZone: "utc",
        });
        return Dh(7, (o) => this._format(t, new Date(2017, 0, o + 1)));
      }
      getYearName(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          year: "numeric",
          timeZone: "utc",
        });
        return this._format(t, e);
      }
      getFirstDayOfWeek() {
        if (typeof Intl < "u" && Intl.Locale) {
          let e = new Intl.Locale(this.locale),
            t = (e.getWeekInfo?.() || e.weekInfo)?.firstDay ?? 0;
          return t === 7 ? 0 : t;
        }
        return 0;
      }
      getNumDaysInMonth(e) {
        return this.getDate(
          this._createDateWithOverflow(this.getYear(e), this.getMonth(e) + 1, 0)
        );
      }
      clone(e) {
        return new Date(e.getTime());
      }
      createDate(e, t, o) {
        let r = this._createDateWithOverflow(e, t, o);
        return r.getMonth() != t, r;
      }
      today() {
        return new Date();
      }
      parse(e, t) {
        return typeof e == "number"
          ? new Date(e)
          : e
          ? new Date(Date.parse(e))
          : null;
      }
      format(e, t) {
        if (!this.isValid(e))
          throw Error("NativeDateAdapter: Cannot format invalid date.");
        let o = new Intl.DateTimeFormat(
          this.locale,
          at(se({}, t), { timeZone: "utc" })
        );
        return this._format(o, e);
      }
      addCalendarYears(e, t) {
        return this.addCalendarMonths(e, t * 12);
      }
      addCalendarMonths(e, t) {
        let o = this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e) + t,
          this.getDate(e)
        );
        return (
          this.getMonth(o) != (((this.getMonth(e) + t) % 12) + 12) % 12 &&
            (o = this._createDateWithOverflow(
              this.getYear(o),
              this.getMonth(o),
              0
            )),
          o
        );
      }
      addCalendarDays(e, t) {
        return this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e),
          this.getDate(e) + t
        );
      }
      toIso8601(e) {
        return [
          e.getUTCFullYear(),
          this._2digit(e.getUTCMonth() + 1),
          this._2digit(e.getUTCDate()),
        ].join("-");
      }
      deserialize(e) {
        if (typeof e == "string") {
          if (!e) return null;
          if (xS.test(e)) {
            let t = new Date(e);
            if (this.isValid(t)) return t;
          }
        }
        return super.deserialize(e);
      }
      isDateInstance(e) {
        return e instanceof Date;
      }
      isValid(e) {
        return !isNaN(e.getTime());
      }
      invalid() {
        return new Date(NaN);
      }
      _createDateWithOverflow(e, t, o) {
        let r = new Date();
        return r.setFullYear(e, t, o), r.setHours(0, 0, 0, 0), r;
      }
      _2digit(e) {
        return ("00" + e).slice(-2);
      }
      _format(e, t) {
        let o = new Date();
        return (
          o.setUTCFullYear(t.getFullYear(), t.getMonth(), t.getDate()),
          o.setUTCHours(
            t.getHours(),
            t.getMinutes(),
            t.getSeconds(),
            t.getMilliseconds()
          ),
          e.format(o)
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(G_, 8));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  wS = {
    parse: { dateInput: null },
    display: {
      dateInput: { year: "numeric", month: "numeric", day: "numeric" },
      monthYearLabel: { year: "numeric", month: "short" },
      dateA11yLabel: { year: "numeric", month: "long", day: "numeric" },
      monthYearA11yLabel: { year: "numeric", month: "long" },
    },
  };
var ac = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({ providers: [DS()] });
    }
  }
  return n;
})();
function DS(n = wS) {
  return [
    { provide: Vi, useClass: CS },
    { provide: ia, useValue: n },
  ];
}
var nn = (function (n) {
    return (
      (n[(n.FADING_IN = 0)] = "FADING_IN"),
      (n[(n.VISIBLE = 1)] = "VISIBLE"),
      (n[(n.FADING_OUT = 2)] = "FADING_OUT"),
      (n[(n.HIDDEN = 3)] = "HIDDEN"),
      n
    );
  })(nn || {}),
  Eh = class {
    constructor(i, e, t, o = !1) {
      (this._renderer = i),
        (this.element = e),
        (this.config = t),
        (this._animationForciblyDisabledThroughCss = o),
        (this.state = nn.HIDDEN);
    }
    fadeOut() {
      this._renderer.fadeOutRipple(this);
    }
  },
  Y_ = Bn({ passive: !0, capture: !0 }),
  Th = class {
    constructor() {
      (this._events = new Map()),
        (this._delegateEventHandler = (i) => {
          let e = tn(i);
          e &&
            this._events.get(i.type)?.forEach((t, o) => {
              (o === e || o.contains(e)) && t.forEach((r) => r.handleEvent(i));
            });
        });
    }
    addHandler(i, e, t, o) {
      let r = this._events.get(e);
      if (r) {
        let a = r.get(t);
        a ? a.add(o) : r.set(t, new Set([o]));
      } else
        this._events.set(e, new Map([[t, new Set([o])]])),
          i.runOutsideAngular(() => {
            document.addEventListener(e, this._delegateEventHandler, Y_);
          });
    }
    removeHandler(i, e, t) {
      let o = this._events.get(i);
      if (!o) return;
      let r = o.get(e);
      r &&
        (r.delete(t),
        r.size === 0 && o.delete(e),
        o.size === 0 &&
          (this._events.delete(i),
          document.removeEventListener(i, this._delegateEventHandler, Y_)));
    }
  },
  q_ = { enterDuration: 225, exitDuration: 150 },
  SS = 800,
  K_ = Bn({ passive: !0, capture: !0 }),
  Q_ = ["mousedown", "touchstart"],
  X_ = ["mouseup", "mouseleave", "touchend", "touchcancel"],
  kh = class n {
    static {
      this._eventManager = new Th();
    }
    constructor(i, e, t, o) {
      (this._target = i),
        (this._ngZone = e),
        (this._platform = o),
        (this._isPointerDown = !1),
        (this._activeRipples = new Map()),
        (this._pointerUpEventsRegistered = !1),
        o.isBrowser && (this._containerElement = co(t));
    }
    fadeInRipple(i, e, t = {}) {
      let o = (this._containerRect =
          this._containerRect ||
          this._containerElement.getBoundingClientRect()),
        r = se(se({}, q_), t.animation);
      t.centered && ((i = o.left + o.width / 2), (e = o.top + o.height / 2));
      let a = t.radius || MS(i, e, o),
        s = i - o.left,
        c = e - o.top,
        p = r.enterDuration,
        f = document.createElement("div");
      f.classList.add("mat-ripple-element"),
        (f.style.left = `${s - a}px`),
        (f.style.top = `${c - a}px`),
        (f.style.height = `${a * 2}px`),
        (f.style.width = `${a * 2}px`),
        t.color != null && (f.style.backgroundColor = t.color),
        (f.style.transitionDuration = `${p}ms`),
        this._containerElement.appendChild(f);
      let y = window.getComputedStyle(f),
        x = y.transitionProperty,
        C = y.transitionDuration,
        M =
          x === "none" ||
          C === "0s" ||
          C === "0s, 0s" ||
          (o.width === 0 && o.height === 0),
        k = new Eh(this, f, t, M);
      (f.style.transform = "scale3d(1, 1, 1)"),
        (k.state = nn.FADING_IN),
        t.persistent || (this._mostRecentTransientRipple = k);
      let O = null;
      return (
        !M &&
          (p || r.exitDuration) &&
          this._ngZone.runOutsideAngular(() => {
            let P = () => {
                O && (O.fallbackTimer = null),
                  clearTimeout(Q),
                  this._finishRippleTransition(k);
              },
              U = () => this._destroyRipple(k),
              Q = setTimeout(U, p + 100);
            f.addEventListener("transitionend", P),
              f.addEventListener("transitioncancel", U),
              (O = {
                onTransitionEnd: P,
                onTransitionCancel: U,
                fallbackTimer: Q,
              });
          }),
        this._activeRipples.set(k, O),
        (M || !p) && this._finishRippleTransition(k),
        k
      );
    }
    fadeOutRipple(i) {
      if (i.state === nn.FADING_OUT || i.state === nn.HIDDEN) return;
      let e = i.element,
        t = se(se({}, q_), i.config.animation);
      (e.style.transitionDuration = `${t.exitDuration}ms`),
        (e.style.opacity = "0"),
        (i.state = nn.FADING_OUT),
        (i._animationForciblyDisabledThroughCss || !t.exitDuration) &&
          this._finishRippleTransition(i);
    }
    fadeOutAll() {
      this._getActiveRipples().forEach((i) => i.fadeOut());
    }
    fadeOutAllNonPersistent() {
      this._getActiveRipples().forEach((i) => {
        i.config.persistent || i.fadeOut();
      });
    }
    setupTriggerEvents(i) {
      let e = co(i);
      !this._platform.isBrowser ||
        !e ||
        e === this._triggerElement ||
        (this._removeTriggerEvents(),
        (this._triggerElement = e),
        Q_.forEach((t) => {
          n._eventManager.addHandler(this._ngZone, t, e, this);
        }));
    }
    handleEvent(i) {
      i.type === "mousedown"
        ? this._onMousedown(i)
        : i.type === "touchstart"
        ? this._onTouchStart(i)
        : this._onPointerUp(),
        this._pointerUpEventsRegistered ||
          (this._ngZone.runOutsideAngular(() => {
            X_.forEach((e) => {
              this._triggerElement.addEventListener(e, this, K_);
            });
          }),
          (this._pointerUpEventsRegistered = !0));
    }
    _finishRippleTransition(i) {
      i.state === nn.FADING_IN
        ? this._startFadeOutTransition(i)
        : i.state === nn.FADING_OUT && this._destroyRipple(i);
    }
    _startFadeOutTransition(i) {
      let e = i === this._mostRecentTransientRipple,
        { persistent: t } = i.config;
      (i.state = nn.VISIBLE), !t && (!e || !this._isPointerDown) && i.fadeOut();
    }
    _destroyRipple(i) {
      let e = this._activeRipples.get(i) ?? null;
      this._activeRipples.delete(i),
        this._activeRipples.size || (this._containerRect = null),
        i === this._mostRecentTransientRipple &&
          (this._mostRecentTransientRipple = null),
        (i.state = nn.HIDDEN),
        e !== null &&
          (i.element.removeEventListener("transitionend", e.onTransitionEnd),
          i.element.removeEventListener(
            "transitioncancel",
            e.onTransitionCancel
          ),
          e.fallbackTimer !== null && clearTimeout(e.fallbackTimer)),
        i.element.remove();
    }
    _onMousedown(i) {
      let e = ch(i),
        t =
          this._lastTouchStartEvent &&
          Date.now() < this._lastTouchStartEvent + SS;
      !this._target.rippleDisabled &&
        !e &&
        !t &&
        ((this._isPointerDown = !0),
        this.fadeInRipple(i.clientX, i.clientY, this._target.rippleConfig));
    }
    _onTouchStart(i) {
      if (!this._target.rippleDisabled && !dh(i)) {
        (this._lastTouchStartEvent = Date.now()), (this._isPointerDown = !0);
        let e = i.changedTouches;
        if (e)
          for (let t = 0; t < e.length; t++)
            this.fadeInRipple(
              e[t].clientX,
              e[t].clientY,
              this._target.rippleConfig
            );
      }
    }
    _onPointerUp() {
      this._isPointerDown &&
        ((this._isPointerDown = !1),
        this._getActiveRipples().forEach((i) => {
          let e =
            i.state === nn.VISIBLE ||
            (i.config.terminateOnPointerUp && i.state === nn.FADING_IN);
          !i.config.persistent && e && i.fadeOut();
        }));
    }
    _getActiveRipples() {
      return Array.from(this._activeRipples.keys());
    }
    _removeTriggerEvents() {
      let i = this._triggerElement;
      i &&
        (Q_.forEach((e) => n._eventManager.removeHandler(e, i, this)),
        this._pointerUpEventsRegistered &&
          (X_.forEach((e) => i.removeEventListener(e, this, K_)),
          (this._pointerUpEventsRegistered = !1)));
    }
  };
function MS(n, i, e) {
  let t = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
    o = Math.max(Math.abs(i - e.top), Math.abs(i - e.bottom));
  return Math.sqrt(t * t + o * o);
}
var t0 = new Ze("mat-ripple-global-options"),
  ES = (() => {
    class n {
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        e && this.fadeOutAllNonPersistent(),
          (this._disabled = e),
          this._setupTriggerEventsIfEnabled();
      }
      get trigger() {
        return this._trigger || this._elementRef.nativeElement;
      }
      set trigger(e) {
        (this._trigger = e), this._setupTriggerEventsIfEnabled();
      }
      constructor(e, t, o, r, a) {
        (this._elementRef = e),
          (this._animationMode = a),
          (this.radius = 0),
          (this._disabled = !1),
          (this._isInitialized = !1),
          (this._globalOptions = r || {}),
          (this._rippleRenderer = new kh(this, t, e, o));
      }
      ngOnInit() {
        (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
      }
      ngOnDestroy() {
        this._rippleRenderer._removeTriggerEvents();
      }
      fadeOutAll() {
        this._rippleRenderer.fadeOutAll();
      }
      fadeOutAllNonPersistent() {
        this._rippleRenderer.fadeOutAllNonPersistent();
      }
      get rippleConfig() {
        return {
          centered: this.centered,
          radius: this.radius,
          color: this.color,
          animation: se(
            se(
              se({}, this._globalOptions.animation),
              this._animationMode === "NoopAnimations"
                ? { enterDuration: 0, exitDuration: 0 }
                : {}
            ),
            this.animation
          ),
          terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
        };
      }
      get rippleDisabled() {
        return this.disabled || !!this._globalOptions.disabled;
      }
      _setupTriggerEventsIfEnabled() {
        !this.disabled &&
          this._isInitialized &&
          this._rippleRenderer.setupTriggerEvents(this.trigger);
      }
      launch(e, t = 0, o) {
        return typeof e == "number"
          ? this._rippleRenderer.fadeInRipple(
              e,
              t,
              se(se({}, this.rippleConfig), o)
            )
          : this._rippleRenderer.fadeInRipple(
              0,
              0,
              se(se({}, this.rippleConfig), e)
            );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Ne), j(He), j(wt), j(t0, 8), j(Mn, 8));
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [
            ["", "mat-ripple", ""],
            ["", "matRipple", ""],
          ],
          hostAttrs: [1, "mat-ripple"],
          hostVars: 2,
          hostBindings: function (t, o) {
            t & 2 && Ce("mat-ripple-unbounded", o.unbounded);
          },
          inputs: {
            color: [0, "matRippleColor", "color"],
            unbounded: [0, "matRippleUnbounded", "unbounded"],
            centered: [0, "matRippleCentered", "centered"],
            radius: [0, "matRippleRadius", "radius"],
            animation: [0, "matRippleAnimation", "animation"],
            disabled: [0, "matRippleDisabled", "disabled"],
            trigger: [0, "matRippleTrigger", "trigger"],
          },
          exportAs: ["matRipple"],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  i0 = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵmod = De({ type: n });
      }
      static {
        this.ɵinj = we({ imports: [Ui, Ui] });
      }
    }
    return n;
  })();
var Z_ = { capture: !0 },
  J_ = ["focus", "mousedown", "mouseenter", "touchstart"],
  Sh = "mat-ripple-loader-uninitialized",
  Mh = "mat-ripple-loader-class-name",
  e0 = "mat-ripple-loader-centered",
  rc = "mat-ripple-loader-disabled",
  n0 = (() => {
    class n {
      constructor() {
        (this._document = ne(ze, { optional: !0 })),
          (this._animationMode = ne(Mn, { optional: !0 })),
          (this._globalRippleOptions = ne(t0, { optional: !0 })),
          (this._platform = ne(wt)),
          (this._ngZone = ne(He)),
          (this._hosts = new Map()),
          (this._onInteraction = (e) => {
            let t = tn(e);
            if (t instanceof HTMLElement) {
              let o = t.closest(
                `[${Sh}="${this._globalRippleOptions?.namespace ?? ""}"]`
              );
              o && this._createRipple(o);
            }
          }),
          this._ngZone.runOutsideAngular(() => {
            for (let e of J_)
              this._document?.addEventListener(e, this._onInteraction, Z_);
          });
      }
      ngOnDestroy() {
        let e = this._hosts.keys();
        for (let t of e) this.destroyRipple(t);
        for (let t of J_)
          this._document?.removeEventListener(t, this._onInteraction, Z_);
      }
      configureRipple(e, t) {
        e.setAttribute(Sh, this._globalRippleOptions?.namespace ?? ""),
          (t.className || !e.hasAttribute(Mh)) &&
            e.setAttribute(Mh, t.className || ""),
          t.centered && e.setAttribute(e0, ""),
          t.disabled && e.setAttribute(rc, "");
      }
      getRipple(e) {
        return this._hosts.get(e) || this._createRipple(e);
      }
      setDisabled(e, t) {
        let o = this._hosts.get(e);
        if (o) {
          o.disabled = t;
          return;
        }
        t ? e.setAttribute(rc, "") : e.removeAttribute(rc);
      }
      _createRipple(e) {
        if (!this._document) return;
        let t = this._hosts.get(e);
        if (t) return t;
        e.querySelector(".mat-ripple")?.remove();
        let o = this._document.createElement("span");
        o.classList.add("mat-ripple", e.getAttribute(Mh)), e.append(o);
        let r = new ES(
          new Ne(o),
          this._ngZone,
          this._platform,
          this._globalRippleOptions ? this._globalRippleOptions : void 0,
          this._animationMode ? this._animationMode : void 0
        );
        return (
          (r._isInitialized = !0),
          (r.trigger = e),
          (r.centered = e.hasAttribute(e0)),
          (r.disabled = e.hasAttribute(rc)),
          this.attachRipple(e, r),
          r
        );
      }
      attachRipple(e, t) {
        e.removeAttribute(Sh), this._hosts.set(e, t);
      }
      destroyRipple(e) {
        let t = this._hosts.get(e);
        t && (t.ngOnDestroy(), this._hosts.delete(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var kS = ["mat-button", ""],
  OS = [
    [
      ["", 8, "material-icons", 3, "iconPositionEnd", ""],
      ["mat-icon", 3, "iconPositionEnd", ""],
      ["", "matButtonIcon", "", 3, "iconPositionEnd", ""],
    ],
    "*",
    [
      ["", "iconPositionEnd", "", 8, "material-icons"],
      ["mat-icon", "iconPositionEnd", ""],
      ["", "matButtonIcon", "", "iconPositionEnd", ""],
    ],
  ],
  IS = [
    ".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])",
    "*",
    ".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]",
  ];
var PS =
  ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}";
var AS = ["mat-icon-button", ""],
  RS = ["*"];
var FS = new Ze("MAT_BUTTON_CONFIG");
var NS = [
    { attribute: "mat-button", mdcClasses: ["mdc-button", "mat-mdc-button"] },
    {
      attribute: "mat-flat-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--unelevated",
        "mat-mdc-unelevated-button",
      ],
    },
    {
      attribute: "mat-raised-button",
      mdcClasses: ["mdc-button", "mdc-button--raised", "mat-mdc-raised-button"],
    },
    {
      attribute: "mat-stroked-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--outlined",
        "mat-mdc-outlined-button",
      ],
    },
    {
      attribute: "mat-fab",
      mdcClasses: ["mdc-fab", "mat-mdc-fab-base", "mat-mdc-fab"],
    },
    {
      attribute: "mat-mini-fab",
      mdcClasses: [
        "mdc-fab",
        "mat-mdc-fab-base",
        "mdc-fab--mini",
        "mat-mdc-mini-fab",
      ],
    },
    {
      attribute: "mat-icon-button",
      mdcClasses: ["mdc-icon-button", "mat-mdc-icon-button"],
    },
  ],
  o0 = (() => {
    class n {
      get ripple() {
        return this._rippleLoader?.getRipple(this._elementRef.nativeElement);
      }
      set ripple(e) {
        this._rippleLoader?.attachRipple(this._elementRef.nativeElement, e);
      }
      get disableRipple() {
        return this._disableRipple;
      }
      set disableRipple(e) {
        (this._disableRipple = e), this._updateRippleDisabled();
      }
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        (this._disabled = e), this._updateRippleDisabled();
      }
      constructor(e, t, o, r) {
        (this._elementRef = e),
          (this._platform = t),
          (this._ngZone = o),
          (this._animationMode = r),
          (this._focusMonitor = ne(uh)),
          (this._rippleLoader = ne(n0)),
          (this._isFab = !1),
          (this._disableRipple = !1),
          (this._disabled = !1);
        let a = ne(FS, { optional: !0 }),
          s = e.nativeElement,
          c = s.classList;
        (this.disabledInteractive = a?.disabledInteractive ?? !1),
          (this.color = a?.color ?? null),
          this._rippleLoader?.configureRipple(s, {
            className: "mat-mdc-button-ripple",
          });
        for (let { attribute: p, mdcClasses: f } of NS)
          s.hasAttribute(p) && c.add(...f);
      }
      ngAfterViewInit() {
        this._focusMonitor.monitor(this._elementRef, !0);
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);
      }
      focus(e = "program", t) {
        e
          ? this._focusMonitor.focusVia(this._elementRef.nativeElement, e, t)
          : this._elementRef.nativeElement.focus(t);
      }
      _getAriaDisabled() {
        return this.ariaDisabled != null
          ? this.ariaDisabled
          : this.disabled && this.disabledInteractive
          ? !0
          : null;
      }
      _getDisabledAttribute() {
        return this.disabledInteractive || !this.disabled ? null : !0;
      }
      _updateRippleDisabled() {
        this._rippleLoader?.setDisabled(
          this._elementRef.nativeElement,
          this.disableRipple || this.disabled
        );
      }
      static {
        this.ɵfac = function (t) {
          Dr();
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          inputs: {
            color: "color",
            disableRipple: [2, "disableRipple", "disableRipple", Ee],
            disabled: [2, "disabled", "disabled", Ee],
            ariaDisabled: [2, "aria-disabled", "ariaDisabled", Ee],
            disabledInteractive: [
              2,
              "disabledInteractive",
              "disabledInteractive",
              Ee,
            ],
          },
          features: [At],
        });
      }
    }
    return n;
  })();
var Oh = (() => {
  class n extends o0 {
    constructor(e, t, o, r) {
      super(e, t, o, r);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(j(Ne), j(wt), j(He), j(Mn, 8));
      };
    }
    static {
      this.ɵcmp = le({
        type: n,
        selectors: [
          ["button", "mat-button", ""],
          ["button", "mat-raised-button", ""],
          ["button", "mat-flat-button", ""],
          ["button", "mat-stroked-button", ""],
        ],
        hostVars: 14,
        hostBindings: function (t, o) {
          t & 2 &&
            (de("disabled", o._getDisabledAttribute())(
              "aria-disabled",
              o._getAriaDisabled()
            ),
            Ve(o.color ? "mat-" + o.color : ""),
            Ce("mat-mdc-button-disabled", o.disabled)(
              "mat-mdc-button-disabled-interactive",
              o.disabledInteractive
            )("_mat-animation-noopable", o._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !o.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [qe, he],
        attrs: kS,
        ngContentSelectors: IS,
        decls: 7,
        vars: 4,
        consts: [
          [1, "mat-mdc-button-persistent-ripple"],
          [1, "mdc-button__label"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (t, o) {
          t & 1 &&
            (Ut(OS),
            W(0, "span", 0),
            kt(1),
            u(2, "span", 1),
            kt(3, 1),
            d(),
            kt(4, 2),
            W(5, "span", 2)(6, "span", 3)),
            t & 2 &&
              Ce("mdc-button__ripple", !o._isFab)("mdc-fab__ripple", o._isFab);
        },
        styles: [
          '.mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-text-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-text-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, var(--mat-app-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-filled-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-filled-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color, var(--mat-app-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, var(--mat-app-on-primary));background-color:var(--mdc-filled-button-container-color, var(--mat-app-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow, var(--mat-app-level1));height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-protected-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-protected-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, var(--mat-app-primary));background-color:var(--mdc-protected-button-container-color, var(--mat-app-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow, var(--mat-app-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow, var(--mat-app-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-outlined-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-outlined-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight, var(--mat-app-label-large-weight));border-radius:var(--mdc-outlined-button-container-shape, var(--mat-app-corner-full));border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, var(--mat-app-primary));border-color:var(--mdc-outlined-button-outline-color, var(--mat-app-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}',
          ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}",
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return n;
})();
var Ih = (() => {
  class n extends o0 {
    constructor(e, t, o, r) {
      super(e, t, o, r),
        this._rippleLoader.configureRipple(this._elementRef.nativeElement, {
          centered: !0,
        });
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)(j(Ne), j(wt), j(He), j(Mn, 8));
      };
    }
    static {
      this.ɵcmp = le({
        type: n,
        selectors: [["button", "mat-icon-button", ""]],
        hostVars: 14,
        hostBindings: function (t, o) {
          t & 2 &&
            (de("disabled", o._getDisabledAttribute())(
              "aria-disabled",
              o._getAriaDisabled()
            ),
            Ve(o.color ? "mat-" + o.color : ""),
            Ce("mat-mdc-button-disabled", o.disabled)(
              "mat-mdc-button-disabled-interactive",
              o.disabledInteractive
            )("_mat-animation-noopable", o._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !o.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [qe, he],
        attrs: AS,
        ngContentSelectors: RS,
        decls: 4,
        vars: 0,
        consts: [
          [1, "mat-mdc-button-persistent-ripple", "mdc-icon-button__ripple"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (t, o) {
          t & 1 &&
            (Ut(), W(0, "span", 0), kt(1), W(2, "span", 1)(3, "span", 2));
        },
        styles: [
          '.mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color, var(--mat-app-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
          PS,
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return n;
})();
var r0 = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({ imports: [Ui, i0, Ui] });
    }
  }
  return n;
})();
var cr = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({ imports: [Ui, ke, Kl, Ui] });
    }
  }
  return n;
})();
var a0 = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({});
    }
  }
  return n;
})();
var sc = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({ imports: [Ui, cr, cr, a0, Ui] });
    }
  }
  return n;
})();
var BS = ["mat-calendar-body", ""];
function HS(n, i) {
  return this._trackRow(i);
}
var p0 = (n, i) => i.id;
function jS(n, i) {
  if ((n & 1 && (u(0, "tr", 0)(1, "td", 3), m(2), d()()), n & 2)) {
    let e = E();
    g(),
      Si("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      de("colspan", e.numCols),
      g(),
      oe(" ", e.label, " ");
  }
}
function zS(n, i) {
  if ((n & 1 && (u(0, "td", 3), m(1), d()), n & 2)) {
    let e = E(2);
    Si("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      de("colspan", e._firstRowOffset),
      g(),
      oe(" ", e._firstRowOffset >= e.labelMinRequiredCells ? e.label : "", " ");
  }
}
function US(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "td", 6)(1, "button", 7),
      z("click", function (o) {
        let r = N(e).$implicit,
          a = E(2);
        return V(a._cellClicked(r, o));
      })("focus", function (o) {
        let r = N(e).$implicit,
          a = E(2);
        return V(a._emitActiveDateChange(r, o));
      }),
      u(2, "span", 8),
      m(3),
      d(),
      W(4, "span", 9),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.$index,
      o = E().$index,
      r = E();
    Si("width", r._cellWidth)("padding-top", r._cellPadding)(
      "padding-bottom",
      r._cellPadding
    ),
      de("data-mat-row", o)("data-mat-col", t),
      g(),
      Ce("mat-calendar-body-disabled", !e.enabled)(
        "mat-calendar-body-active",
        r._isActiveCell(o, t)
      )("mat-calendar-body-range-start", r._isRangeStart(e.compareValue))(
        "mat-calendar-body-range-end",
        r._isRangeEnd(e.compareValue)
      )("mat-calendar-body-in-range", r._isInRange(e.compareValue))(
        "mat-calendar-body-comparison-bridge-start",
        r._isComparisonBridgeStart(e.compareValue, o, t)
      )(
        "mat-calendar-body-comparison-bridge-end",
        r._isComparisonBridgeEnd(e.compareValue, o, t)
      )(
        "mat-calendar-body-comparison-start",
        r._isComparisonStart(e.compareValue)
      )("mat-calendar-body-comparison-end", r._isComparisonEnd(e.compareValue))(
        "mat-calendar-body-in-comparison-range",
        r._isInComparisonRange(e.compareValue)
      )("mat-calendar-body-preview-start", r._isPreviewStart(e.compareValue))(
        "mat-calendar-body-preview-end",
        r._isPreviewEnd(e.compareValue)
      )("mat-calendar-body-in-preview", r._isInPreview(e.compareValue)),
      S("ngClass", e.cssClasses)("tabindex", r._isActiveCell(o, t) ? 0 : -1),
      de("aria-label", e.ariaLabel)("aria-disabled", !e.enabled || null)(
        "aria-pressed",
        r._isSelected(e.compareValue)
      )("aria-current", r.todayValue === e.compareValue ? "date" : null)(
        "aria-describedby",
        r._getDescribedby(e.compareValue)
      ),
      g(),
      Ce("mat-calendar-body-selected", r._isSelected(e.compareValue))(
        "mat-calendar-body-comparison-identical",
        r._isComparisonIdentical(e.compareValue)
      )("mat-calendar-body-today", r.todayValue === e.compareValue),
      g(),
      oe(" ", e.displayValue, " ");
  }
}
function WS(n, i) {
  if (
    (n & 1 &&
      (u(0, "tr", 1),
      F(1, zS, 2, 6, "td", 4),
      Sr(2, US, 5, 48, "td", 5, p0),
      d()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.$index,
      o = E();
    g(), un(t === 0 && o._firstRowOffset ? 1 : -1), g(), Mr(e);
  }
}
function $S(n, i) {
  if (
    (n & 1 &&
      (u(0, "th", 2)(1, "span", 6), m(2), d(), u(3, "span", 3), m(4), d()()),
    n & 2)
  ) {
    let e = i.$implicit;
    g(2), B(e.long), g(2), B(e.narrow);
  }
}
var GS = ["*"];
function YS(n, i) {}
function qS(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "mat-month-view", 4),
      Nt("activeDateChange", function (o) {
        N(e);
        let r = E();
        return Ft(r.activeDate, o) || (r.activeDate = o), V(o);
      }),
      z("_userSelection", function (o) {
        N(e);
        let r = E();
        return V(r._dateSelected(o));
      })("dragStarted", function (o) {
        N(e);
        let r = E();
        return V(r._dragStarted(o));
      })("dragEnded", function (o) {
        N(e);
        let r = E();
        return V(r._dragEnded(o));
      }),
      d();
  }
  if (n & 2) {
    let e = E();
    Rt("activeDate", e.activeDate),
      S("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass)(
        "comparisonStart",
        e.comparisonStart
      )("comparisonEnd", e.comparisonEnd)(
        "startDateAccessibleName",
        e.startDateAccessibleName
      )("endDateAccessibleName", e.endDateAccessibleName)(
        "activeDrag",
        e._activeDrag
      );
  }
}
function KS(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "mat-year-view", 5),
      Nt("activeDateChange", function (o) {
        N(e);
        let r = E();
        return Ft(r.activeDate, o) || (r.activeDate = o), V(o);
      }),
      z("monthSelected", function (o) {
        N(e);
        let r = E();
        return V(r._monthSelectedInYearView(o));
      })("selectedChange", function (o) {
        N(e);
        let r = E();
        return V(r._goToDateInView(o, "month"));
      }),
      d();
  }
  if (n & 2) {
    let e = E();
    Rt("activeDate", e.activeDate),
      S("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function QS(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "mat-multi-year-view", 6),
      Nt("activeDateChange", function (o) {
        N(e);
        let r = E();
        return Ft(r.activeDate, o) || (r.activeDate = o), V(o);
      }),
      z("yearSelected", function (o) {
        N(e);
        let r = E();
        return V(r._yearSelectedInMultiYearView(o));
      })("selectedChange", function (o) {
        N(e);
        let r = E();
        return V(r._goToDateInView(o, "year"));
      }),
      d();
  }
  if (n & 2) {
    let e = E();
    Rt("activeDate", e.activeDate),
      S("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function XS(n, i) {}
var ZS = ["button"],
  JS = [[["", "matDatepickerToggleIcon", ""]]],
  eM = ["[matDatepickerToggleIcon]"];
function tM(n, i) {
  n & 1 && (pt(), u(0, "svg", 2), W(1, "path", 3), d());
}
var cs = (() => {
    class n {
      constructor() {
        (this.changes = new Ae()),
          (this.calendarLabel = "Calendar"),
          (this.openCalendarLabel = "Open calendar"),
          (this.closeCalendarLabel = "Close calendar"),
          (this.prevMonthLabel = "Previous month"),
          (this.nextMonthLabel = "Next month"),
          (this.prevYearLabel = "Previous year"),
          (this.nextYearLabel = "Next year"),
          (this.prevMultiYearLabel = "Previous 24 years"),
          (this.nextMultiYearLabel = "Next 24 years"),
          (this.switchToMonthViewLabel = "Choose date"),
          (this.switchToMultiYearViewLabel = "Choose month and year"),
          (this.startDateLabel = "Start date"),
          (this.endDateLabel = "End date");
      }
      formatYearRange(e, t) {
        return `${e} \u2013 ${t}`;
      }
      formatYearRangeLabel(e, t) {
        return `${e} to ${t}`;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  iM = 0,
  ls = class {
    constructor(i, e, t, o, r = {}, a = i, s) {
      (this.value = i),
        (this.displayValue = e),
        (this.ariaLabel = t),
        (this.enabled = o),
        (this.cssClasses = r),
        (this.compareValue = a),
        (this.rawValue = s),
        (this.id = iM++);
    }
  },
  nM = 1,
  s0 = Bn({ passive: !1, capture: !0 }),
  Po = Bn({ passive: !0, capture: !0 }),
  lc = Bn({ passive: !0 }),
  ra = (() => {
    class n {
      ngAfterViewChecked() {
        this._focusActiveCellAfterViewChecked &&
          (this._focusActiveCell(),
          (this._focusActiveCellAfterViewChecked = !1));
      }
      constructor(e, t) {
        (this._elementRef = e),
          (this._ngZone = t),
          (this._platform = ne(wt)),
          (this._focusActiveCellAfterViewChecked = !1),
          (this.numCols = 7),
          (this.activeCell = 0),
          (this.isRange = !1),
          (this.cellAspectRatio = 1),
          (this.previewStart = null),
          (this.previewEnd = null),
          (this.selectedValueChange = new Se()),
          (this.previewChange = new Se()),
          (this.activeDateChange = new Se()),
          (this.dragStarted = new Se()),
          (this.dragEnded = new Se()),
          (this._didDragSinceMouseDown = !1),
          (this._injector = ne(Tt)),
          (this._trackRow = (o) => o),
          (this._enterHandler = (o) => {
            if (this._skipNextFocus && o.type === "focus") {
              this._skipNextFocus = !1;
              return;
            }
            if (o.target && this.isRange) {
              let r = this._getCellFromElement(o.target);
              r &&
                this._ngZone.run(() =>
                  this.previewChange.emit({
                    value: r.enabled ? r : null,
                    event: o,
                  })
                );
            }
          }),
          (this._touchmoveHandler = (o) => {
            if (!this.isRange) return;
            let r = l0(o),
              a = r ? this._getCellFromElement(r) : null;
            r !== o.target && (this._didDragSinceMouseDown = !0),
              Ah(o.target) && o.preventDefault(),
              this._ngZone.run(() =>
                this.previewChange.emit({
                  value: a?.enabled ? a : null,
                  event: o,
                })
              );
          }),
          (this._leaveHandler = (o) => {
            this.previewEnd !== null &&
              this.isRange &&
              (o.type !== "blur" && (this._didDragSinceMouseDown = !0),
              o.target &&
                this._getCellFromElement(o.target) &&
                !(
                  o.relatedTarget && this._getCellFromElement(o.relatedTarget)
                ) &&
                this._ngZone.run(() =>
                  this.previewChange.emit({ value: null, event: o })
                ));
          }),
          (this._mousedownHandler = (o) => {
            if (!this.isRange) return;
            this._didDragSinceMouseDown = !1;
            let r = o.target && this._getCellFromElement(o.target);
            !r ||
              !this._isInRange(r.compareValue) ||
              this._ngZone.run(() => {
                this.dragStarted.emit({ value: r.rawValue, event: o });
              });
          }),
          (this._mouseupHandler = (o) => {
            if (!this.isRange) return;
            let r = Ah(o.target);
            if (!r) {
              this._ngZone.run(() => {
                this.dragEnded.emit({ value: null, event: o });
              });
              return;
            }
            r.closest(".mat-calendar-body") ===
              this._elementRef.nativeElement &&
              this._ngZone.run(() => {
                let a = this._getCellFromElement(r);
                this.dragEnded.emit({ value: a?.rawValue ?? null, event: o });
              });
          }),
          (this._touchendHandler = (o) => {
            let r = l0(o);
            r && this._mouseupHandler({ target: r });
          }),
          (this._id = `mat-calendar-body-${nM++}`),
          (this._startDateLabelId = `${this._id}-start-date`),
          (this._endDateLabelId = `${this._id}-end-date`),
          t.runOutsideAngular(() => {
            let o = e.nativeElement;
            o.addEventListener("touchmove", this._touchmoveHandler, s0),
              o.addEventListener("mouseenter", this._enterHandler, Po),
              o.addEventListener("focus", this._enterHandler, Po),
              o.addEventListener("mouseleave", this._leaveHandler, Po),
              o.addEventListener("blur", this._leaveHandler, Po),
              o.addEventListener("mousedown", this._mousedownHandler, lc),
              o.addEventListener("touchstart", this._mousedownHandler, lc),
              this._platform.isBrowser &&
                (window.addEventListener("mouseup", this._mouseupHandler),
                window.addEventListener("touchend", this._touchendHandler));
          });
      }
      _cellClicked(e, t) {
        this._didDragSinceMouseDown ||
          (e.enabled &&
            this.selectedValueChange.emit({ value: e.value, event: t }));
      }
      _emitActiveDateChange(e, t) {
        e.enabled && this.activeDateChange.emit({ value: e.value, event: t });
      }
      _isSelected(e) {
        return this.startValue === e || this.endValue === e;
      }
      ngOnChanges(e) {
        let t = e.numCols,
          { rows: o, numCols: r } = this;
        (e.rows || t) &&
          (this._firstRowOffset =
            o && o.length && o[0].length ? r - o[0].length : 0),
          (e.cellAspectRatio || t || !this._cellPadding) &&
            (this._cellPadding = `${(50 * this.cellAspectRatio) / r}%`),
          (t || !this._cellWidth) && (this._cellWidth = `${100 / r}%`);
      }
      ngOnDestroy() {
        let e = this._elementRef.nativeElement;
        e.removeEventListener("touchmove", this._touchmoveHandler, s0),
          e.removeEventListener("mouseenter", this._enterHandler, Po),
          e.removeEventListener("focus", this._enterHandler, Po),
          e.removeEventListener("mouseleave", this._leaveHandler, Po),
          e.removeEventListener("blur", this._leaveHandler, Po),
          e.removeEventListener("mousedown", this._mousedownHandler, lc),
          e.removeEventListener("touchstart", this._mousedownHandler, lc),
          this._platform.isBrowser &&
            (window.removeEventListener("mouseup", this._mouseupHandler),
            window.removeEventListener("touchend", this._touchendHandler));
      }
      _isActiveCell(e, t) {
        let o = e * this.numCols + t;
        return e && (o -= this._firstRowOffset), o == this.activeCell;
      }
      _focusActiveCell(e = !0) {
        Kn(
          () => {
            setTimeout(() => {
              let t = this._elementRef.nativeElement.querySelector(
                ".mat-calendar-body-active"
              );
              t && (e || (this._skipNextFocus = !0), t.focus());
            });
          },
          { injector: this._injector }
        );
      }
      _scheduleFocusActiveCellAfterViewChecked() {
        this._focusActiveCellAfterViewChecked = !0;
      }
      _isRangeStart(e) {
        return Rh(e, this.startValue, this.endValue);
      }
      _isRangeEnd(e) {
        return Fh(e, this.startValue, this.endValue);
      }
      _isInRange(e) {
        return Nh(e, this.startValue, this.endValue, this.isRange);
      }
      _isComparisonStart(e) {
        return Rh(e, this.comparisonStart, this.comparisonEnd);
      }
      _isComparisonBridgeStart(e, t, o) {
        if (
          !this._isComparisonStart(e) ||
          this._isRangeStart(e) ||
          !this._isInRange(e)
        )
          return !1;
        let r = this.rows[t][o - 1];
        if (!r) {
          let a = this.rows[t - 1];
          r = a && a[a.length - 1];
        }
        return r && !this._isRangeEnd(r.compareValue);
      }
      _isComparisonBridgeEnd(e, t, o) {
        if (
          !this._isComparisonEnd(e) ||
          this._isRangeEnd(e) ||
          !this._isInRange(e)
        )
          return !1;
        let r = this.rows[t][o + 1];
        if (!r) {
          let a = this.rows[t + 1];
          r = a && a[0];
        }
        return r && !this._isRangeStart(r.compareValue);
      }
      _isComparisonEnd(e) {
        return Fh(e, this.comparisonStart, this.comparisonEnd);
      }
      _isInComparisonRange(e) {
        return Nh(e, this.comparisonStart, this.comparisonEnd, this.isRange);
      }
      _isComparisonIdentical(e) {
        return (
          this.comparisonStart === this.comparisonEnd &&
          e === this.comparisonStart
        );
      }
      _isPreviewStart(e) {
        return Rh(e, this.previewStart, this.previewEnd);
      }
      _isPreviewEnd(e) {
        return Fh(e, this.previewStart, this.previewEnd);
      }
      _isInPreview(e) {
        return Nh(e, this.previewStart, this.previewEnd, this.isRange);
      }
      _getDescribedby(e) {
        return this.isRange
          ? this.startValue === e && this.endValue === e
            ? `${this._startDateLabelId} ${this._endDateLabelId}`
            : this.startValue === e
            ? this._startDateLabelId
            : this.endValue === e
            ? this._endDateLabelId
            : null
          : null;
      }
      _getCellFromElement(e) {
        let t = Ah(e);
        if (t) {
          let o = t.getAttribute("data-mat-row"),
            r = t.getAttribute("data-mat-col");
          if (o && r) return this.rows[parseInt(o)][parseInt(r)];
        }
        return null;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Ne), j(He));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["", "mat-calendar-body", ""]],
          hostAttrs: [1, "mat-calendar-body"],
          inputs: {
            label: "label",
            rows: "rows",
            todayValue: "todayValue",
            startValue: "startValue",
            endValue: "endValue",
            labelMinRequiredCells: "labelMinRequiredCells",
            numCols: "numCols",
            activeCell: "activeCell",
            isRange: "isRange",
            cellAspectRatio: "cellAspectRatio",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            previewStart: "previewStart",
            previewEnd: "previewEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedValueChange: "selectedValueChange",
            previewChange: "previewChange",
            activeDateChange: "activeDateChange",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
          },
          exportAs: ["matCalendarBody"],
          standalone: !0,
          features: [zt, he],
          attrs: BS,
          decls: 7,
          vars: 5,
          consts: [
            ["aria-hidden", "true"],
            ["role", "row"],
            [1, "mat-calendar-body-hidden-label", 3, "id"],
            [1, "mat-calendar-body-label"],
            [1, "mat-calendar-body-label", 3, "paddingTop", "paddingBottom"],
            [
              "role",
              "gridcell",
              1,
              "mat-calendar-body-cell-container",
              3,
              "width",
              "paddingTop",
              "paddingBottom",
            ],
            ["role", "gridcell", 1, "mat-calendar-body-cell-container"],
            [
              "type",
              "button",
              1,
              "mat-calendar-body-cell",
              3,
              "click",
              "focus",
              "ngClass",
              "tabindex",
            ],
            [1, "mat-calendar-body-cell-content", "mat-focus-indicator"],
            ["aria-hidden", "true", 1, "mat-calendar-body-cell-preview"],
          ],
          template: function (t, o) {
            t & 1 &&
              (F(0, jS, 3, 6, "tr", 0),
              Sr(1, WS, 4, 1, "tr", 1, HS, !0),
              u(3, "span", 2),
              m(4),
              d(),
              u(5, "span", 2),
              m(6),
              d()),
              t & 2 &&
                (un(o._firstRowOffset < o.labelMinRequiredCells ? 0 : -1),
                g(),
                Mr(o.rows),
                g(2),
                S("id", o._startDateLabelId),
                g(),
                oe(
                  " ",
                  o.startDateAccessibleName,
                  `
`
                ),
                g(),
                S("id", o._endDateLabelId),
                g(),
                oe(
                  " ",
                  o.endDateAccessibleName,
                  `
`
                ));
          },
          dependencies: [Vt],
          styles: [
            '.mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color)}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color)}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color)}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-app-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-app-secondary))}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
function Ph(n) {
  return n?.nodeName === "TD";
}
function Ah(n) {
  let i;
  return (
    Ph(n)
      ? (i = n)
      : Ph(n.parentNode)
      ? (i = n.parentNode)
      : Ph(n.parentNode?.parentNode) && (i = n.parentNode.parentNode),
    i?.getAttribute("data-mat-row") != null ? i : null
  );
}
function Rh(n, i, e) {
  return e !== null && i !== e && n < e && n === i;
}
function Fh(n, i, e) {
  return i !== null && i !== e && n >= i && n === e;
}
function Nh(n, i, e, t) {
  return t && i !== null && e !== null && i !== e && n >= i && n <= e;
}
function l0(n) {
  let i = n.changedTouches[0];
  return document.elementFromPoint(i.clientX, i.clientY);
}
var on = class {
    constructor(i, e) {
      (this.start = i), (this.end = e);
    }
  },
  cc = (() => {
    class n {
      constructor(e, t) {
        (this.selection = e),
          (this._adapter = t),
          (this._selectionChanged = new Ae()),
          (this.selectionChanged = this._selectionChanged),
          (this.selection = e);
      }
      updateSelection(e, t) {
        let o = this.selection;
        (this.selection = e),
          this._selectionChanged.next({ selection: e, source: t, oldValue: o });
      }
      ngOnDestroy() {
        this._selectionChanged.complete();
      }
      _isValidDateInstance(e) {
        return this._adapter.isDateInstance(e) && this._adapter.isValid(e);
      }
      static {
        this.ɵfac = function (t) {
          Dr();
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  oM = (() => {
    class n extends cc {
      constructor(e) {
        super(null, e);
      }
      add(e) {
        super.updateSelection(e, this);
      }
      isValid() {
        return (
          this.selection != null && this._isValidDateInstance(this.selection)
        );
      }
      isComplete() {
        return this.selection != null;
      }
      clone() {
        let e = new n(this._adapter);
        return e.updateSelection(this.selection, this), e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(ie(Vi));
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function rM(n, i) {
  return n || new oM(i);
}
var aM = { provide: cc, deps: [[new Gp(), new Yp(), cc], Vi], useFactory: rM };
var m0 = new Ze("MAT_DATE_RANGE_SELECTION_STRATEGY");
var Vh = 7,
  sM = 0,
  c0 = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          o =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          o,
          this.minDate,
          this.maxDate
        )),
          this._hasSameMonthAndYear(t, this._activeDate) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof on
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setRanges(this._selected);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, o, r, a) {
        (this._changeDetectorRef = e),
          (this._dateFormats = t),
          (this._dateAdapter = o),
          (this._dir = r),
          (this._rangeStrategy = a),
          (this._rerenderSubscription = sn.EMPTY),
          (this.activeDrag = null),
          (this.selectedChange = new Se()),
          (this._userSelection = new Se()),
          (this.dragStarted = new Se()),
          (this.dragEnded = new Se()),
          (this.activeDateChange = new Se()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(fo(null))
          .subscribe(() => this._init());
      }
      ngOnChanges(e) {
        let t = e.comparisonStart || e.comparisonEnd;
        t && !t.firstChange && this._setRanges(this.selected),
          e.activeDrag && !this.activeDrag && this._clearPreview();
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _dateSelected(e) {
        let t = e.value,
          o = this._getDateFromDayOfMonth(t),
          r,
          a;
        this._selected instanceof on
          ? ((r = this._getDateInCurrentMonth(this._selected.start)),
            (a = this._getDateInCurrentMonth(this._selected.end)))
          : (r = a = this._getDateInCurrentMonth(this._selected)),
          (r !== t || a !== t) && this.selectedChange.emit(o),
          this._userSelection.emit({ value: o, event: e.event }),
          this._clearPreview(),
          this._changeDetectorRef.markForCheck();
      }
      _updateActiveDate(e) {
        let t = e.value,
          o = this._activeDate;
        (this.activeDate = this._getDateFromDayOfMonth(t)),
          this._dateAdapter.compareDate(o, this.activeDate) &&
            this.activeDateChange.emit(this._activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          o = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              o ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              o ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              -7
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              7
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              1 - this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              this._dateAdapter.getNumDaysInMonth(this._activeDate) -
                this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
            break;
          case 34:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
            break;
          case 13:
          case 32:
            (this._selectionKeyPressed = !0),
              this._canSelect(this._activeDate) && e.preventDefault();
            return;
          case 27:
            this._previewEnd != null &&
              !C_(e) &&
              (this._clearPreview(),
              this.activeDrag
                ? this.dragEnded.emit({ value: null, event: e })
                : (this.selectedChange.emit(null),
                  this._userSelection.emit({ value: null, event: e })),
              e.preventDefault(),
              e.stopPropagation());
            return;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._canSelect(this._activeDate) &&
            this._dateSelected({
              value: this._dateAdapter.getDate(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setRanges(this.selected),
          (this._todayDate = this._getCellCompareValue(
            this._dateAdapter.today()
          )),
          (this._monthLabel = this._dateFormats.display.monthLabel
            ? this._dateAdapter.format(
                this.activeDate,
                this._dateFormats.display.monthLabel
              )
            : this._dateAdapter
                .getMonthNames("short")
                [
                  this._dateAdapter.getMonth(this.activeDate)
                ].toLocaleUpperCase());
        let e = this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          1
        );
        (this._firstWeekOffset =
          (Vh +
            this._dateAdapter.getDayOfWeek(e) -
            this._dateAdapter.getFirstDayOfWeek()) %
          Vh),
          this._initWeekdays(),
          this._createWeekCells(),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell(e) {
        this._matCalendarBody._focusActiveCell(e);
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _previewChanged({ event: e, value: t }) {
        if (this._rangeStrategy) {
          let o = t ? t.rawValue : null,
            r = this._rangeStrategy.createPreview(o, this.selected, e);
          if (
            ((this._previewStart = this._getCellCompareValue(r.start)),
            (this._previewEnd = this._getCellCompareValue(r.end)),
            this.activeDrag && o)
          ) {
            let a = this._rangeStrategy.createDrag?.(
              this.activeDrag.value,
              this.selected,
              o,
              e
            );
            a &&
              ((this._previewStart = this._getCellCompareValue(a.start)),
              (this._previewEnd = this._getCellCompareValue(a.end)));
          }
          this._changeDetectorRef.detectChanges();
        }
      }
      _dragEnded(e) {
        if (this.activeDrag)
          if (e.value) {
            let t = this._rangeStrategy?.createDrag?.(
              this.activeDrag.value,
              this.selected,
              e.value,
              e.event
            );
            this.dragEnded.emit({ value: t ?? null, event: e.event });
          } else this.dragEnded.emit({ value: null, event: e.event });
      }
      _getDateFromDayOfMonth(e) {
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          e
        );
      }
      _initWeekdays() {
        let e = this._dateAdapter.getFirstDayOfWeek(),
          t = this._dateAdapter.getDayOfWeekNames("narrow"),
          r = this._dateAdapter
            .getDayOfWeekNames("long")
            .map((a, s) => ({ long: a, narrow: t[s], id: sM++ }));
        this._weekdays = r.slice(e).concat(r.slice(0, e));
      }
      _createWeekCells() {
        let e = this._dateAdapter.getNumDaysInMonth(this.activeDate),
          t = this._dateAdapter.getDateNames();
        this._weeks = [[]];
        for (let o = 0, r = this._firstWeekOffset; o < e; o++, r++) {
          r == Vh && (this._weeks.push([]), (r = 0));
          let a = this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              o + 1
            ),
            s = this._shouldEnableDate(a),
            c = this._dateAdapter.format(
              a,
              this._dateFormats.display.dateA11yLabel
            ),
            p = this.dateClass ? this.dateClass(a, "month") : void 0;
          this._weeks[this._weeks.length - 1].push(
            new ls(o + 1, t[o], c, s, p, this._getCellCompareValue(a), a)
          );
        }
      }
      _shouldEnableDate(e) {
        return (
          !!e &&
          (!this.minDate ||
            this._dateAdapter.compareDate(e, this.minDate) >= 0) &&
          (!this.maxDate ||
            this._dateAdapter.compareDate(e, this.maxDate) <= 0) &&
          (!this.dateFilter || this.dateFilter(e))
        );
      }
      _getDateInCurrentMonth(e) {
        return e && this._hasSameMonthAndYear(e, this.activeDate)
          ? this._dateAdapter.getDate(e)
          : null;
      }
      _hasSameMonthAndYear(e, t) {
        return !!(
          e &&
          t &&
          this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(t) &&
          this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t)
        );
      }
      _getCellCompareValue(e) {
        if (e) {
          let t = this._dateAdapter.getYear(e),
            o = this._dateAdapter.getMonth(e),
            r = this._dateAdapter.getDate(e);
          return new Date(t, o, r).getTime();
        }
        return null;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setRanges(e) {
        e instanceof on
          ? ((this._rangeStart = this._getCellCompareValue(e.start)),
            (this._rangeEnd = this._getCellCompareValue(e.end)),
            (this._isRange = !0))
          : ((this._rangeStart = this._rangeEnd = this._getCellCompareValue(e)),
            (this._isRange = !1)),
          (this._comparisonRangeStart = this._getCellCompareValue(
            this.comparisonStart
          )),
          (this._comparisonRangeEnd = this._getCellCompareValue(
            this.comparisonEnd
          ));
      }
      _canSelect(e) {
        return !this.dateFilter || this.dateFilter(e);
      }
      _clearPreview() {
        this._previewStart = this._previewEnd = null;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(it), j(ia, 8), j(Vi, 8), j(ea, 8), j(m0, 8));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-month-view"]],
          viewQuery: function (t, o) {
            if ((t & 1 && Bt(ra, 5), t & 2)) {
              let r;
              _t((r = bt())) && (o._matCalendarBody = r.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
            activeDrag: "activeDrag",
          },
          outputs: {
            selectedChange: "selectedChange",
            _userSelection: "_userSelection",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMonthView"],
          standalone: !0,
          features: [zt, he],
          decls: 8,
          vars: 14,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            [1, "mat-calendar-table-header"],
            ["scope", "col"],
            ["aria-hidden", "true"],
            ["colspan", "7", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "previewChange",
              "dragStarted",
              "dragEnded",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "comparisonStart",
              "comparisonEnd",
              "previewStart",
              "previewEnd",
              "isRange",
              "labelMinRequiredCells",
              "activeCell",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [1, "cdk-visually-hidden"],
          ],
          template: function (t, o) {
            t & 1 &&
              (u(0, "table", 0)(1, "thead", 1)(2, "tr"),
              Sr(3, $S, 5, 2, "th", 2, p0),
              d(),
              u(5, "tr", 3),
              W(6, "th", 4),
              d()(),
              u(7, "tbody", 5),
              z("selectedValueChange", function (a) {
                return o._dateSelected(a);
              })("activeDateChange", function (a) {
                return o._updateActiveDate(a);
              })("previewChange", function (a) {
                return o._previewChanged(a);
              })("dragStarted", function (a) {
                return o.dragStarted.emit(a);
              })("dragEnded", function (a) {
                return o._dragEnded(a);
              })("keyup", function (a) {
                return o._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return o._handleCalendarBodyKeydown(a);
              }),
              d()()),
              t & 2 &&
                (g(3),
                Mr(o._weekdays),
                g(4),
                S("label", o._monthLabel)("rows", o._weeks)(
                  "todayValue",
                  o._todayDate
                )("startValue", o._rangeStart)("endValue", o._rangeEnd)(
                  "comparisonStart",
                  o._comparisonRangeStart
                )("comparisonEnd", o._comparisonRangeEnd)(
                  "previewStart",
                  o._previewStart
                )("previewEnd", o._previewEnd)("isRange", o._isRange)(
                  "labelMinRequiredCells",
                  3
                )("activeCell", o._dateAdapter.getDate(o.activeDate) - 1)(
                  "startDateAccessibleName",
                  o.startDateAccessibleName
                )("endDateAccessibleName", o.endDateAccessibleName));
          },
          dependencies: [ra],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  Wi = 24,
  Lh = 4,
  d0 = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          o =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          o,
          this.minDate,
          this.maxDate
        )),
          f0(
            this._dateAdapter,
            t,
            this._activeDate,
            this.minDate,
            this.maxDate
          ) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof on
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedYear(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, o) {
        (this._changeDetectorRef = e),
          (this._dateAdapter = t),
          (this._dir = o),
          (this._rerenderSubscription = sn.EMPTY),
          (this.selectedChange = new Se()),
          (this.yearSelected = new Se()),
          (this.activeDateChange = new Se()),
          this._dateAdapter,
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(fo(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _init() {
        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());
        let t =
          this._dateAdapter.getYear(this._activeDate) -
          ss(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
        this._years = [];
        for (let o = 0, r = []; o < Wi; o++)
          r.push(t + o),
            r.length == Lh &&
              (this._years.push(r.map((a) => this._createCellForYear(a))),
              (r = []));
        this._changeDetectorRef.markForCheck();
      }
      _yearSelected(e) {
        let t = e.value,
          o = this._dateAdapter.createDate(t, 0, 1),
          r = this._getDateFromYear(t);
        this.yearSelected.emit(o), this.selectedChange.emit(r);
      }
      _updateActiveDate(e) {
        let t = e.value,
          o = this._activeDate;
        (this.activeDate = this._getDateFromYear(t)),
          this._dateAdapter.compareDate(o, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          o = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              o ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              o ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -Lh
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              Lh
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -ss(
                this._dateAdapter,
                this.activeDate,
                this.minDate,
                this.maxDate
              )
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              Wi -
                ss(
                  this._dateAdapter,
                  this.activeDate,
                  this.minDate,
                  this.maxDate
                ) -
                1
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -Wi * 10 : -Wi
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? Wi * 10 : Wi
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked(),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._yearSelected({
              value: this._dateAdapter.getYear(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _getActiveCell() {
        return ss(
          this._dateAdapter,
          this.activeDate,
          this.minDate,
          this.maxDate
        );
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getDateFromYear(e) {
        let t = this._dateAdapter.getMonth(this.activeDate),
          o = this._dateAdapter.getNumDaysInMonth(
            this._dateAdapter.createDate(e, t, 1)
          );
        return this._dateAdapter.createDate(
          e,
          t,
          Math.min(this._dateAdapter.getDate(this.activeDate), o)
        );
      }
      _createCellForYear(e) {
        let t = this._dateAdapter.createDate(e, 0, 1),
          o = this._dateAdapter.getYearName(t),
          r = this.dateClass ? this.dateClass(t, "multi-year") : void 0;
        return new ls(e, o, o, this._shouldEnableYear(e), r);
      }
      _shouldEnableYear(e) {
        if (
          e == null ||
          (this.maxDate && e > this._dateAdapter.getYear(this.maxDate)) ||
          (this.minDate && e < this._dateAdapter.getYear(this.minDate))
        )
          return !1;
        if (!this.dateFilter) return !0;
        let t = this._dateAdapter.createDate(e, 0, 1);
        for (
          let o = t;
          this._dateAdapter.getYear(o) == e;
          o = this._dateAdapter.addCalendarDays(o, 1)
        )
          if (this.dateFilter(o)) return !0;
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedYear(e) {
        if (((this._selectedYear = null), e instanceof on)) {
          let t = e.start || e.end;
          t && (this._selectedYear = this._dateAdapter.getYear(t));
        } else e && (this._selectedYear = this._dateAdapter.getYear(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(it), j(Vi, 8), j(ea, 8));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-multi-year-view"]],
          viewQuery: function (t, o) {
            if ((t & 1 && Bt(ra, 5), t & 2)) {
              let r;
              _t((r = bt())) && (o._matCalendarBody = r.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMultiYearView"],
          standalone: !0,
          features: [he],
          decls: 5,
          vars: 7,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (t, o) {
            t & 1 &&
              (u(0, "table", 0)(1, "thead", 1)(2, "tr"),
              W(3, "th", 2),
              d()(),
              u(4, "tbody", 3),
              z("selectedValueChange", function (a) {
                return o._yearSelected(a);
              })("activeDateChange", function (a) {
                return o._updateActiveDate(a);
              })("keyup", function (a) {
                return o._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return o._handleCalendarBodyKeydown(a);
              }),
              d()()),
              t & 2 &&
                (g(4),
                S("rows", o._years)("todayValue", o._todayYear)(
                  "startValue",
                  o._selectedYear
                )("endValue", o._selectedYear)("numCols", 4)(
                  "cellAspectRatio",
                  4 / 7
                )("activeCell", o._getActiveCell()));
          },
          dependencies: [ra],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
function f0(n, i, e, t, o) {
  let r = n.getYear(i),
    a = n.getYear(e),
    s = g0(n, t, o);
  return Math.floor((r - s) / Wi) === Math.floor((a - s) / Wi);
}
function ss(n, i, e, t) {
  let o = n.getYear(i);
  return lM(o - g0(n, e, t), Wi);
}
function g0(n, i, e) {
  let t = 0;
  return e ? (t = n.getYear(e) - Wi + 1) : i && (t = n.getYear(i)), t;
}
function lM(n, i) {
  return ((n % i) + i) % i;
}
var u0 = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          o =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          o,
          this.minDate,
          this.maxDate
        )),
          this._dateAdapter.getYear(t) !==
            this._dateAdapter.getYear(this._activeDate) && this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof on
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedMonth(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, o, r) {
        (this._changeDetectorRef = e),
          (this._dateFormats = t),
          (this._dateAdapter = o),
          (this._dir = r),
          (this._rerenderSubscription = sn.EMPTY),
          (this.selectedChange = new Se()),
          (this.monthSelected = new Se()),
          (this.activeDateChange = new Se()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(fo(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _monthSelected(e) {
        let t = e.value,
          o = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            t,
            1
          );
        this.monthSelected.emit(o);
        let r = this._getDateFromMonth(t);
        this.selectedChange.emit(r);
      }
      _updateActiveDate(e) {
        let t = e.value,
          o = this._activeDate;
        (this.activeDate = this._getDateFromMonth(t)),
          this._dateAdapter.compareDate(o, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          o = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              o ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              o ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -4
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              4
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              11 - this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -10 : -1
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? 10 : 1
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._monthSelected({
              value: this._dateAdapter.getMonth(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setSelectedMonth(this.selected),
          (this._todayMonth = this._getMonthInCurrentYear(
            this._dateAdapter.today()
          )),
          (this._yearLabel = this._dateAdapter.getYearName(this.activeDate));
        let e = this._dateAdapter.getMonthNames("short");
        (this._months = [
          [0, 1, 2, 3],
          [4, 5, 6, 7],
          [8, 9, 10, 11],
        ].map((t) => t.map((o) => this._createCellForMonth(o, e[o])))),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getMonthInCurrentYear(e) {
        return e &&
          this._dateAdapter.getYear(e) ==
            this._dateAdapter.getYear(this.activeDate)
          ? this._dateAdapter.getMonth(e)
          : null;
      }
      _getDateFromMonth(e) {
        let t = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          o = this._dateAdapter.getNumDaysInMonth(t);
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          e,
          Math.min(this._dateAdapter.getDate(this.activeDate), o)
        );
      }
      _createCellForMonth(e, t) {
        let o = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          r = this._dateAdapter.format(
            o,
            this._dateFormats.display.monthYearA11yLabel
          ),
          a = this.dateClass ? this.dateClass(o, "year") : void 0;
        return new ls(
          e,
          t.toLocaleUpperCase(),
          r,
          this._shouldEnableMonth(e),
          a
        );
      }
      _shouldEnableMonth(e) {
        let t = this._dateAdapter.getYear(this.activeDate);
        if (
          e == null ||
          this._isYearAndMonthAfterMaxDate(t, e) ||
          this._isYearAndMonthBeforeMinDate(t, e)
        )
          return !1;
        if (!this.dateFilter) return !0;
        let o = this._dateAdapter.createDate(t, e, 1);
        for (
          let r = o;
          this._dateAdapter.getMonth(r) == e;
          r = this._dateAdapter.addCalendarDays(r, 1)
        )
          if (this.dateFilter(r)) return !0;
        return !1;
      }
      _isYearAndMonthAfterMaxDate(e, t) {
        if (this.maxDate) {
          let o = this._dateAdapter.getYear(this.maxDate),
            r = this._dateAdapter.getMonth(this.maxDate);
          return e > o || (e === o && t > r);
        }
        return !1;
      }
      _isYearAndMonthBeforeMinDate(e, t) {
        if (this.minDate) {
          let o = this._dateAdapter.getYear(this.minDate),
            r = this._dateAdapter.getMonth(this.minDate);
          return e < o || (e === o && t < r);
        }
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedMonth(e) {
        e instanceof on
          ? (this._selectedMonth =
              this._getMonthInCurrentYear(e.start) ||
              this._getMonthInCurrentYear(e.end))
          : (this._selectedMonth = this._getMonthInCurrentYear(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(it), j(ia, 8), j(Vi, 8), j(ea, 8));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-year-view"]],
          viewQuery: function (t, o) {
            if ((t & 1 && Bt(ra, 5), t & 2)) {
              let r;
              _t((r = bt())) && (o._matCalendarBody = r.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            monthSelected: "monthSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matYearView"],
          standalone: !0,
          features: [he],
          decls: 5,
          vars: 9,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "labelMinRequiredCells",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (t, o) {
            t & 1 &&
              (u(0, "table", 0)(1, "thead", 1)(2, "tr"),
              W(3, "th", 2),
              d()(),
              u(4, "tbody", 3),
              z("selectedValueChange", function (a) {
                return o._monthSelected(a);
              })("activeDateChange", function (a) {
                return o._updateActiveDate(a);
              })("keyup", function (a) {
                return o._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return o._handleCalendarBodyKeydown(a);
              }),
              d()()),
              t & 2 &&
                (g(4),
                S("label", o._yearLabel)("rows", o._months)(
                  "todayValue",
                  o._todayMonth
                )("startValue", o._selectedMonth)("endValue", o._selectedMonth)(
                  "labelMinRequiredCells",
                  2
                )("numCols", 4)("cellAspectRatio", 4 / 7)(
                  "activeCell",
                  o._dateAdapter.getMonth(o.activeDate)
                ));
          },
          dependencies: [ra],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  cM = 1,
  _0 = (() => {
    class n {
      constructor(e, t, o, r, a) {
        (this._intl = e),
          (this.calendar = t),
          (this._dateAdapter = o),
          (this._dateFormats = r),
          (this._id = `mat-calendar-header-${cM++}`),
          (this._periodButtonLabelId = `${this._id}-period-label`),
          this.calendar.stateChanges.subscribe(() => a.markForCheck());
      }
      get periodButtonText() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRange(...this._formatMinAndMaxYearLabels());
      }
      get periodButtonDescription() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRangeLabel(
              ...this._formatMinAndMaxYearLabels()
            );
      }
      get periodButtonLabel() {
        return this.calendar.currentView == "month"
          ? this._intl.switchToMultiYearViewLabel
          : this._intl.switchToMonthViewLabel;
      }
      get prevButtonLabel() {
        return {
          month: this._intl.prevMonthLabel,
          year: this._intl.prevYearLabel,
          "multi-year": this._intl.prevMultiYearLabel,
        }[this.calendar.currentView];
      }
      get nextButtonLabel() {
        return {
          month: this._intl.nextMonthLabel,
          year: this._intl.nextYearLabel,
          "multi-year": this._intl.nextMultiYearLabel,
        }[this.calendar.currentView];
      }
      currentPeriodClicked() {
        this.calendar.currentView =
          this.calendar.currentView == "month" ? "multi-year" : "month";
      }
      previousClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? -1 : -Wi
              );
      }
      nextClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? 1 : Wi
              );
      }
      previousEnabled() {
        return this.calendar.minDate
          ? !this.calendar.minDate ||
              !this._isSameView(this.calendar.activeDate, this.calendar.minDate)
          : !0;
      }
      nextEnabled() {
        return (
          !this.calendar.maxDate ||
          !this._isSameView(this.calendar.activeDate, this.calendar.maxDate)
        );
      }
      _isSameView(e, t) {
        return this.calendar.currentView == "month"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t) &&
              this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(t)
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t)
          : f0(
              this._dateAdapter,
              e,
              t,
              this.calendar.minDate,
              this.calendar.maxDate
            );
      }
      _formatMinAndMaxYearLabels() {
        let t =
            this._dateAdapter.getYear(this.calendar.activeDate) -
            ss(
              this._dateAdapter,
              this.calendar.activeDate,
              this.calendar.minDate,
              this.calendar.maxDate
            ),
          o = t + Wi - 1,
          r = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(t, 0, 1)
          ),
          a = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(o, 0, 1)
          );
        return [r, a];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(
            j(cs),
            j(di(() => Bh)),
            j(Vi, 8),
            j(ia, 8),
            j(it)
          );
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-calendar-header"]],
          exportAs: ["matCalendarHeader"],
          standalone: !0,
          features: [he],
          ngContentSelectors: GS,
          decls: 17,
          vars: 11,
          consts: [
            [1, "mat-calendar-header"],
            [1, "mat-calendar-controls"],
            ["aria-live", "polite", 1, "cdk-visually-hidden", 3, "id"],
            [
              "mat-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-period-button",
              3,
              "click",
            ],
            ["aria-hidden", "true"],
            [
              "viewBox",
              "0 0 10 5",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-calendar-arrow",
            ],
            ["points", "0,0 5,5 10,0"],
            [1, "mat-calendar-spacer"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-previous-button",
              3,
              "click",
              "disabled",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "focusable",
              "false",
              "aria-hidden",
              "true",
            ],
            ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-next-button",
              3,
              "click",
              "disabled",
            ],
            ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
          ],
          template: function (t, o) {
            t & 1 &&
              (Ut(),
              u(0, "div", 0)(1, "div", 1)(2, "span", 2),
              m(3),
              d(),
              u(4, "button", 3),
              z("click", function () {
                return o.currentPeriodClicked();
              }),
              u(5, "span", 4),
              m(6),
              d(),
              pt(),
              u(7, "svg", 5),
              W(8, "polygon", 6),
              d()(),
              go(),
              W(9, "div", 7),
              kt(10),
              u(11, "button", 8),
              z("click", function () {
                return o.previousClicked();
              }),
              pt(),
              u(12, "svg", 9),
              W(13, "path", 10),
              d()(),
              go(),
              u(14, "button", 11),
              z("click", function () {
                return o.nextClicked();
              }),
              pt(),
              u(15, "svg", 9),
              W(16, "path", 12),
              d()()()()),
              t & 2 &&
                (g(2),
                S("id", o._periodButtonLabelId),
                g(),
                B(o.periodButtonDescription),
                g(),
                de("aria-label", o.periodButtonLabel)(
                  "aria-describedby",
                  o._periodButtonLabelId
                ),
                g(2),
                B(o.periodButtonText),
                g(),
                Ce("mat-calendar-invert", o.calendar.currentView !== "month"),
                g(4),
                S("disabled", !o.previousEnabled()),
                de("aria-label", o.prevButtonLabel),
                g(3),
                S("disabled", !o.nextEnabled()),
                de("aria-label", o.nextButtonLabel));
          },
          dependencies: [Oh, Ih],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  Bh = (() => {
    class n {
      get startAt() {
        return this._startAt;
      }
      set startAt(e) {
        this._startAt = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof on
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ));
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get activeDate() {
        return this._clampedActiveDate;
      }
      set activeDate(e) {
        (this._clampedActiveDate = this._dateAdapter.clampDate(
          e,
          this.minDate,
          this.maxDate
        )),
          this.stateChanges.next(),
          this._changeDetectorRef.markForCheck();
      }
      get currentView() {
        return this._currentView;
      }
      set currentView(e) {
        let t = this._currentView !== e ? e : null;
        (this._currentView = e),
          (this._moveFocusOnNextTick = !0),
          this._changeDetectorRef.markForCheck(),
          t && this.viewChanged.emit(t);
      }
      constructor(e, t, o, r) {
        (this._dateAdapter = t),
          (this._dateFormats = o),
          (this._changeDetectorRef = r),
          (this._moveFocusOnNextTick = !1),
          (this.startView = "month"),
          (this.selectedChange = new Se()),
          (this.yearSelected = new Se()),
          (this.monthSelected = new Se()),
          (this.viewChanged = new Se(!0)),
          (this._userSelection = new Se()),
          (this._userDragDrop = new Se()),
          (this._activeDrag = null),
          (this.stateChanges = new Ae()),
          (this._intlChanges = e.changes.subscribe(() => {
            r.markForCheck(), this.stateChanges.next();
          }));
      }
      ngAfterContentInit() {
        (this._calendarHeaderPortal = new rs(this.headerComponent || _0)),
          (this.activeDate = this.startAt || this._dateAdapter.today()),
          (this._currentView = this.startView);
      }
      ngAfterViewChecked() {
        this._moveFocusOnNextTick &&
          ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
      }
      ngOnDestroy() {
        this._intlChanges.unsubscribe(), this.stateChanges.complete();
      }
      ngOnChanges(e) {
        let t =
            e.minDate &&
            !this._dateAdapter.sameDate(
              e.minDate.previousValue,
              e.minDate.currentValue
            )
              ? e.minDate
              : void 0,
          o =
            e.maxDate &&
            !this._dateAdapter.sameDate(
              e.maxDate.previousValue,
              e.maxDate.currentValue
            )
              ? e.maxDate
              : void 0,
          r = t || o || e.dateFilter;
        if (r && !r.firstChange) {
          let a = this._getCurrentViewComponent();
          a &&
            ((this._moveFocusOnNextTick = !0),
            this._changeDetectorRef.detectChanges(),
            a._init());
        }
        this.stateChanges.next();
      }
      focusActiveCell() {
        this._getCurrentViewComponent()._focusActiveCell(!1);
      }
      updateTodaysDate() {
        this._getCurrentViewComponent()._init();
      }
      _dateSelected(e) {
        let t = e.value;
        (this.selected instanceof on ||
          (t && !this._dateAdapter.sameDate(t, this.selected))) &&
          this.selectedChange.emit(t),
          this._userSelection.emit(e);
      }
      _yearSelectedInMultiYearView(e) {
        this.yearSelected.emit(e);
      }
      _monthSelectedInYearView(e) {
        this.monthSelected.emit(e);
      }
      _goToDateInView(e, t) {
        (this.activeDate = e), (this.currentView = t);
      }
      _dragStarted(e) {
        this._activeDrag = e;
      }
      _dragEnded(e) {
        this._activeDrag &&
          (e.value && this._userDragDrop.emit(e), (this._activeDrag = null));
      }
      _getCurrentViewComponent() {
        return this.monthView || this.yearView || this.multiYearView;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(cs), j(Vi, 8), j(ia, 8), j(it));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-calendar"]],
          viewQuery: function (t, o) {
            if ((t & 1 && (Bt(c0, 5), Bt(u0, 5), Bt(d0, 5)), t & 2)) {
              let r;
              _t((r = bt())) && (o.monthView = r.first),
                _t((r = bt())) && (o.yearView = r.first),
                _t((r = bt())) && (o.multiYearView = r.first);
            }
          },
          hostAttrs: [1, "mat-calendar"],
          inputs: {
            headerComponent: "headerComponent",
            startAt: "startAt",
            startView: "startView",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            monthSelected: "monthSelected",
            viewChanged: "viewChanged",
            _userSelection: "_userSelection",
            _userDragDrop: "_userDragDrop",
          },
          exportAs: ["matCalendar"],
          standalone: !0,
          features: [Ot([aM]), zt, he],
          decls: 5,
          vars: 2,
          consts: [
            [3, "cdkPortalOutlet"],
            [
              "cdkMonitorSubtreeFocus",
              "",
              "tabindex",
              "-1",
              1,
              "mat-calendar-content",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "_userSelection",
              "dragStarted",
              "dragEnded",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDateChange",
              "monthSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "yearSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
          ],
          template: function (t, o) {
            if (
              (t & 1 &&
                (F(0, YS, 0, 0, "ng-template", 0),
                u(1, "div", 1),
                F(2, qS, 1, 11, "mat-month-view", 2)(
                  3,
                  KS,
                  1,
                  6,
                  "mat-year-view",
                  3
                )(4, QS, 1, 6, "mat-multi-year-view", 3),
                d()),
              t & 2)
            ) {
              let r;
              S("cdkPortalOutlet", o._calendarHeaderPortal),
                g(2),
                un(
                  (r = o.currentView) === "month"
                    ? 2
                    : r === "year"
                    ? 3
                    : r === "multi-year"
                    ? 4
                    : -1
                );
            }
          },
          dependencies: [gh, P_, c0, u0, d0],
          styles: [
            '.mat-calendar{display:block;line-height:normal;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-app-on-surface-variant))}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-app-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  h0 = {
    transformPanel: $o("transformPanel", [
      Bi(
        "void => enter-dropdown",
        Li(
          "120ms cubic-bezier(0, 0, 0.2, 1)",
          fd([
            Qt({ opacity: 0, transform: "scale(1, 0.8)" }),
            Qt({ opacity: 1, transform: "scale(1, 1)" }),
          ])
        )
      ),
      Bi(
        "void => enter-dialog",
        Li(
          "150ms cubic-bezier(0, 0, 0.2, 1)",
          fd([
            Qt({ opacity: 0, transform: "scale(0.7)" }),
            Qt({ transform: "none", opacity: 1 }),
          ])
        )
      ),
      Bi("* => void", Li("100ms linear", Qt({ opacity: 0 }))),
    ]),
    fadeInCalendar: $o("fadeInCalendar", [
      Xn("void", Qt({ opacity: 0 })),
      Xn("enter", Qt({ opacity: 1 })),
      Bi("void => *", Li("120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)")),
    ]),
  };
var dM = new Ze("mat-datepicker-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let n = ne(ta);
    return () => n.scrollStrategies.reposition();
  },
});
function uM(n) {
  return () => n.scrollStrategies.reposition();
}
var hM = { provide: dM, deps: [ta], useFactory: uM },
  pM = (() => {
    class n {
      constructor(e, t, o, r, a, s) {
        (this._elementRef = e),
          (this._changeDetectorRef = t),
          (this._globalModel = o),
          (this._dateAdapter = r),
          (this._rangeSelectionStrategy = a),
          (this._subscriptions = new sn()),
          (this._animationDone = new Ae()),
          (this._isAnimating = !1),
          (this._actionsPortal = null),
          (this._closeButtonText = s.closeCalendarLabel);
      }
      ngOnInit() {
        this._animationState = this.datepicker.touchUi
          ? "enter-dialog"
          : "enter-dropdown";
      }
      ngAfterViewInit() {
        this._subscriptions.add(
          this.datepicker.stateChanges.subscribe(() => {
            this._changeDetectorRef.markForCheck();
          })
        ),
          this._calendar.focusActiveCell();
      }
      ngOnDestroy() {
        this._subscriptions.unsubscribe(), this._animationDone.complete();
      }
      _handleUserSelection(e) {
        let t = this._model.selection,
          o = e.value,
          r = t instanceof on;
        if (r && this._rangeSelectionStrategy) {
          let a = this._rangeSelectionStrategy.selectionFinished(o, t, e.event);
          this._model.updateSelection(a, this);
        } else
          o && (r || !this._dateAdapter.sameDate(o, t)) && this._model.add(o);
        (!this._model || this._model.isComplete()) &&
          !this._actionsPortal &&
          this.datepicker.close();
      }
      _handleUserDragDrop(e) {
        this._model.updateSelection(e.value, this);
      }
      _startExitAnimation() {
        (this._animationState = "void"), this._changeDetectorRef.markForCheck();
      }
      _handleAnimationEvent(e) {
        (this._isAnimating = e.phaseName === "start"),
          this._isAnimating || this._animationDone.next();
      }
      _getSelected() {
        return this._model.selection;
      }
      _applyPendingSelection() {
        this._model !== this._globalModel &&
          this._globalModel.updateSelection(this._model.selection, this);
      }
      _assignActions(e, t) {
        (this._model = e ? this._globalModel.clone() : this._globalModel),
          (this._actionsPortal = e),
          t && this._changeDetectorRef.detectChanges();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(Ne), j(it), j(cc), j(Vi), j(m0, 8), j(cs));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-datepicker-content"]],
          viewQuery: function (t, o) {
            if ((t & 1 && Bt(Bh, 5), t & 2)) {
              let r;
              _t((r = bt())) && (o._calendar = r.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-content"],
          hostVars: 5,
          hostBindings: function (t, o) {
            t & 1 &&
              em("@transformPanel.start", function (a) {
                return o._handleAnimationEvent(a);
              })("@transformPanel.done", function (a) {
                return o._handleAnimationEvent(a);
              }),
              t & 2 &&
                (Fs("@transformPanel", o._animationState),
                Ve(o.color ? "mat-" + o.color : ""),
                Ce("mat-datepicker-content-touch", o.datepicker.touchUi));
          },
          inputs: { color: "color" },
          exportAs: ["matDatepickerContent"],
          standalone: !0,
          features: [he],
          decls: 5,
          vars: 27,
          consts: [
            [
              "cdkTrapFocus",
              "",
              "role",
              "dialog",
              1,
              "mat-datepicker-content-container",
            ],
            [
              3,
              "yearSelected",
              "monthSelected",
              "viewChanged",
              "_userSelection",
              "_userDragDrop",
              "id",
              "startAt",
              "startView",
              "minDate",
              "maxDate",
              "dateFilter",
              "headerComponent",
              "selected",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [3, "cdkPortalOutlet"],
            [
              "type",
              "button",
              "mat-raised-button",
              "",
              1,
              "mat-datepicker-close-button",
              3,
              "focus",
              "blur",
              "click",
              "color",
            ],
          ],
          template: function (t, o) {
            if (
              (t & 1 &&
                (u(0, "div", 0)(1, "mat-calendar", 1),
                z("yearSelected", function (a) {
                  return o.datepicker._selectYear(a);
                })("monthSelected", function (a) {
                  return o.datepicker._selectMonth(a);
                })("viewChanged", function (a) {
                  return o.datepicker._viewChanged(a);
                })("_userSelection", function (a) {
                  return o._handleUserSelection(a);
                })("_userDragDrop", function (a) {
                  return o._handleUserDragDrop(a);
                }),
                d(),
                F(2, XS, 0, 0, "ng-template", 2),
                u(3, "button", 3),
                z("focus", function () {
                  return (o._closeButtonFocused = !0);
                })("blur", function () {
                  return (o._closeButtonFocused = !1);
                })("click", function () {
                  return o.datepicker.close();
                }),
                m(4),
                d()()),
              t & 2)
            ) {
              let r;
              Ce(
                "mat-datepicker-content-container-with-custom-header",
                o.datepicker.calendarHeaderComponent
              )(
                "mat-datepicker-content-container-with-actions",
                o._actionsPortal
              ),
                de("aria-modal", !0)(
                  "aria-labelledby",
                  (r = o._dialogLabelId) !== null && r !== void 0 ? r : void 0
                ),
                g(),
                Ve(o.datepicker.panelClass),
                S("id", o.datepicker.id)("startAt", o.datepicker.startAt)(
                  "startView",
                  o.datepicker.startView
                )("minDate", o.datepicker._getMinDate())(
                  "maxDate",
                  o.datepicker._getMaxDate()
                )("dateFilter", o.datepicker._getDateFilter())(
                  "headerComponent",
                  o.datepicker.calendarHeaderComponent
                )("selected", o._getSelected())(
                  "dateClass",
                  o.datepicker.dateClass
                )("comparisonStart", o.comparisonStart)(
                  "comparisonEnd",
                  o.comparisonEnd
                )("@fadeInCalendar", "enter")(
                  "startDateAccessibleName",
                  o.startDateAccessibleName
                )("endDateAccessibleName", o.endDateAccessibleName),
                g(),
                S("cdkPortalOutlet", o._actionsPortal),
                g(),
                Ce("cdk-visually-hidden", !o._closeButtonFocused),
                S("color", o.color || "primary"),
                g(),
                B(o._closeButtonText);
            }
          },
          dependencies: [O_, Bh, gh, Oh],
          styles: [
            ".mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-app-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-app-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-app-corner-large))}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}",
          ],
          encapsulation: 2,
          data: { animation: [h0.transformPanel, h0.fadeInCalendar] },
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var mM = (() => {
    class n {
      static {
        this.ɵfac = function (t) {
          return new (t || n)();
        };
      }
      static {
        this.ɵdir = Pe({
          type: n,
          selectors: [["", "matDatepickerToggleIcon", ""]],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  fM = (() => {
    class n {
      get disabled() {
        return this._disabled === void 0 && this.datepicker
          ? this.datepicker.disabled
          : !!this._disabled;
      }
      set disabled(e) {
        this._disabled = e;
      }
      constructor(e, t, o) {
        (this._intl = e),
          (this._changeDetectorRef = t),
          (this._stateChanges = sn.EMPTY);
        let r = Number(o);
        this.tabIndex = r || r === 0 ? r : null;
      }
      ngOnChanges(e) {
        e.datepicker && this._watchStateChanges();
      }
      ngOnDestroy() {
        this._stateChanges.unsubscribe();
      }
      ngAfterContentInit() {
        this._watchStateChanges();
      }
      _open(e) {
        this.datepicker &&
          !this.disabled &&
          (this.datepicker.open(), e.stopPropagation());
      }
      _watchStateChanges() {
        let e = this.datepicker ? this.datepicker.stateChanges : Et(),
          t =
            this.datepicker && this.datepicker.datepickerInput
              ? this.datepicker.datepickerInput.stateChanges
              : Et(),
          o = this.datepicker
            ? Cr(this.datepicker.openedStream, this.datepicker.closedStream)
            : Et();
        this._stateChanges.unsubscribe(),
          (this._stateChanges = Cr(this._intl.changes, e, t, o).subscribe(() =>
            this._changeDetectorRef.markForCheck()
          ));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || n)(j(cs), j(it), Rs("tabindex"));
        };
      }
      static {
        this.ɵcmp = le({
          type: n,
          selectors: [["mat-datepicker-toggle"]],
          contentQueries: function (t, o, r) {
            if ((t & 1 && Tn(r, mM, 5), t & 2)) {
              let a;
              _t((a = bt())) && (o._customIcon = a.first);
            }
          },
          viewQuery: function (t, o) {
            if ((t & 1 && Bt(ZS, 5), t & 2)) {
              let r;
              _t((r = bt())) && (o._button = r.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-toggle"],
          hostVars: 8,
          hostBindings: function (t, o) {
            t & 1 &&
              z("click", function (a) {
                return o._open(a);
              }),
              t & 2 &&
                (de("tabindex", null)(
                  "data-mat-calendar",
                  o.datepicker ? o.datepicker.id : null
                ),
                Ce(
                  "mat-datepicker-toggle-active",
                  o.datepicker && o.datepicker.opened
                )(
                  "mat-accent",
                  o.datepicker && o.datepicker.color === "accent"
                )("mat-warn", o.datepicker && o.datepicker.color === "warn"));
          },
          inputs: {
            datepicker: [0, "for", "datepicker"],
            tabIndex: "tabIndex",
            ariaLabel: [0, "aria-label", "ariaLabel"],
            disabled: [2, "disabled", "disabled", Ee],
            disableRipple: "disableRipple",
          },
          exportAs: ["matDatepickerToggle"],
          standalone: !0,
          features: [At, zt, he],
          ngContentSelectors: eM,
          decls: 4,
          vars: 6,
          consts: [
            ["button", ""],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              3,
              "disabled",
              "disableRipple",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "width",
              "24px",
              "height",
              "24px",
              "fill",
              "currentColor",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-datepicker-toggle-default-icon",
            ],
            [
              "d",
              "M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z",
            ],
          ],
          template: function (t, o) {
            t & 1 &&
              (Ut(JS),
              u(0, "button", 1, 0),
              F(2, tM, 2, 0, ":svg:svg", 2),
              kt(3),
              d()),
              t & 2 &&
                (S("disabled", o.disabled)("disableRipple", o.disableRipple),
                de("aria-haspopup", o.datepicker ? "dialog" : null)(
                  "aria-label",
                  o.ariaLabel || o._intl.openCalendarLabel
                )("tabindex", o.disabled ? -1 : o.tabIndex),
                g(2),
                un(o._customIcon ? -1 : 2));
          },
          dependencies: [Ih],
          styles: [
            ".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var dc = (() => {
  class n {
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({
        providers: [cs, hM],
        imports: [ke, r0, $_, A_, tc, Ui, pM, fM, _0, Zl],
      });
    }
  }
  return n;
})();
var qh = new Ze("@sweetalert2/ngx-sweetalert2#swalProvider"),
  b0 = new Ze("@sweetalert2/ngx-sweetalert2#fireOnInit"),
  v0 = new Ze("@sweetalert2/ngx-sweetalert2#dismissOnDestroy"),
  y0 = (() => {
    class n {
      swalProvider;
      swalPromiseCache;
      constructor(e) {
        this.swalProvider = e;
      }
      get swal() {
        return (
          this.swalPromiseCache || this.preloadSweetAlertLibrary(),
          this.swalPromiseCache
        );
      }
      preloadSweetAlertLibrary() {
        if (this.swalPromiseCache) return;
        let e = t(this.swalProvider)
          ? this.swalProvider()
          : Promise.resolve(this.swalProvider);
        this.swalPromiseCache = e.then((r) => (o(r) ? r : r.default));
        function t(r) {
          return typeof r == "function" && r.version === void 0;
        }
        function o(r) {
          return typeof r == "function";
        }
      }
      static ɵfac = function (t) {
        return new (t || n)(ie(qh));
      };
      static ɵprov = ae({ token: n, factory: n.ɵfac });
    }
    return n;
  })();
function gM() {
  return import("./chunk-LY4RODGJ.mjs");
}
var x0 = (() => {
  class n {
    static forRoot(e = {}) {
      return {
        ngModule: n,
        providers: [
          y0,
          { provide: qh, useValue: e.provideSwal || gM },
          { provide: b0, useValue: e.fireOnInit || !1 },
          { provide: v0, useValue: e.dismissOnDestroy || !0 },
        ],
      };
    }
    static forChild(e = {}) {
      return {
        ngModule: n,
        providers: [
          ...(e.provideSwal
            ? [y0, { provide: qh, useValue: e.provideSwal }]
            : []),
          ...(e.fireOnInit !== void 0
            ? [{ provide: b0, useValue: e.fireOnInit }]
            : []),
          ...(e.dismissOnDestroy !== void 0
            ? [{ provide: v0, useValue: e.dismissOnDestroy }]
            : []),
        ],
      };
    }
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = De({ type: n });
    static ɵinj = we({ imports: [ke] });
  }
  return n;
})();
var dr = (n) => ({ "is-invalid": n }),
  _M = (n, i) => ({ "btn-outline-primary": n, "btn-edit-enabled": i });
function bM(n, i) {
  n & 1 &&
    (u(0, "tr")(1, "td", 47)(2, "p"), m(3, "No Vehicles Found"), d()()());
}
function vM(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td"),
      m(6),
      d(),
      u(7, "td"),
      m(8),
      d(),
      u(9, "td"),
      m(10),
      d(),
      u(11, "td"),
      m(12),
      d(),
      u(13, "td"),
      m(14),
      d(),
      u(15, "td"),
      m(16),
      d(),
      u(17, "td")(18, "div", 48)(19, "a", 49),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.onEdit(o));
      }),
      W(20, "i", 50),
      d(),
      u(21, "a", 51),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.openDeleteModal(o));
      }),
      W(22, "i", 52),
      d()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      o = E();
    g(2),
      B((o.currentPage - 1) * o.itemsPerPage + t + 1),
      g(2),
      B(e.vehicle_name),
      g(2),
      B(e.YOM),
      g(2),
      B(e.type),
      g(2),
      B(e.VIN),
      g(2),
      B(e.chasis_number),
      g(2),
      B(e.demo_start_date),
      g(2),
      B(e.demo_end_date);
  }
}
function yM(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "li", 53)(1, "a", 42),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.goToPage(o));
      }),
      m(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = E();
    Ce("active", e === t.currentPage), g(2), B(e);
  }
}
function xM(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 54)(1, "div", 55)(2, "div", 56)(3, "div", 57)(4, "h5", 58),
      m(5, "Delete User"),
      d()(),
      u(6, "div", 59),
      m(7, "Are you sure you want to delete this user?"),
      d(),
      u(8, "div", 60)(9, "button", 61),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeDeleteModal());
      }),
      m(10, "Cancel"),
      d(),
      u(11, "button", 62),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.deleteVehicleId());
      }),
      m(12, "Delete"),
      d()()()()();
  }
}
function CM(n, i) {
  n & 1 && (u(0, "span", 97), m(1, "*"), d());
}
function wM(n, i) {
  n & 1 &&
    (u(0, "div", 98)(1, "span"), m(2, "Vehicle name is required."), d()());
}
function DM(n, i) {
  n & 1 && (u(0, "span", 98), m(1, "*"), d());
}
function SM(n, i) {
  n & 1 && (u(0, "span"), m(1, "YOM is required."), d());
}
function MM(n, i) {
  if ((n & 1 && (u(0, "div", 98), F(1, SM, 2, 0, "span", 34), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("YOM")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function EM(n, i) {
  n & 1 && (u(0, "span", 97), m(1, "*"), d());
}
function TM(n, i) {
  n & 1 && (u(0, "div", 98)(1, "span"), m(2, "Type is required."), d()());
}
function kM(n, i) {
  n & 1 && (u(0, "span", 98), m(1, "*"), d());
}
function OM(n, i) {
  n & 1 && (u(0, "span"), m(1, " Chasis number is required. "), d());
}
function IM(n, i) {
  if ((n & 1 && (u(0, "div", 98), F(1, OM, 2, 0, "span", 34), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("chasis_number")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function PM(n, i) {
  n & 1 && (u(0, "span", 98), m(1, "*"), d());
}
function AM(n, i) {
  n & 1 && (u(0, "span"), m(1, " Start date is required. "), d());
}
function RM(n, i) {
  if ((n & 1 && (u(0, "div", 98), F(1, AM, 2, 0, "span", 34), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("demo_start_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function FM(n, i) {
  n & 1 && (u(0, "span", 98), m(1, "*"), d());
}
function NM(n, i) {
  n & 1 && (u(0, "span"), m(1, " End date is required. "), d());
}
function VM(n, i) {
  if ((n & 1 && (u(0, "div", 98), F(1, NM, 2, 0, "span", 34), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("demo_end_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function LM(n, i) {
  n & 1 && (u(0, "span", 98), m(1, "*"), d());
}
function BM(n, i) {
  n & 1 && (u(0, "span"), m(1, " VIN is required. "), d());
}
function HM(n, i) {
  if ((n & 1 && (u(0, "div", 98), F(1, BM, 2, 0, "span", 34), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("VIN")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function jM(n, i) {
  if (n & 1) {
    let e = ce();
    $e(0),
      u(1, "button", 99),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.onUpdate());
      }),
      m(2, " Edit "),
      d(),
      Ge();
  }
  if (n & 2) {
    let e = E(2);
    g(),
      S("disabled", !e.isVehicleNameChanged())(
        "ngClass",
        kn(2, _M, !e.isVehicleNameChanged(), e.isVehicleNameChanged())
      );
  }
}
function zM(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 61),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.onSave());
      }),
      m(1, " Save "),
      d();
  }
  if (n & 2) {
    let e = E(2);
    de("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function UM(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 63)(1, "div", 64)(2, "div", 65)(3, "div", 56)(4, "div", 57)(
      5,
      "h5",
      66
    ),
      m(6),
      d(),
      u(7, "button", 67),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeModal());
      }),
      u(8, "span", 68),
      m(9, "\xD7"),
      d()()(),
      u(10, "div", 69)(11, "div", 70)(12, "div", 71)(13, "label", 72),
      m(14, " Vehicle Name "),
      F(15, CM, 2, 0, "span", 73),
      d(),
      W(16, "input", 74),
      F(17, wM, 3, 0, "div", 75),
      d(),
      u(18, "div", 76)(19, "label", 77),
      m(20, " YOM "),
      F(21, DM, 2, 0, "span", 75),
      d(),
      W(22, "input", 78),
      F(23, MM, 2, 1, "div", 75),
      d()(),
      u(24, "div", 70)(25, "div", 71)(26, "label", 79),
      m(27, " Type "),
      F(28, EM, 2, 0, "span", 73),
      d(),
      u(29, "select", 80)(30, "option", 81),
      m(31, "Select Type"),
      d(),
      u(32, "option", 82),
      m(33, "Petrol"),
      d(),
      u(34, "option", 83),
      m(35, "Diesel"),
      d(),
      u(36, "option", 84),
      m(37, "EV"),
      d()(),
      F(38, TM, 3, 0, "div", 75),
      d(),
      u(39, "div", 71)(40, "label", 85),
      m(41, " Chasis Number "),
      F(42, kM, 2, 0, "span", 75),
      d(),
      W(43, "input", 86),
      F(44, IM, 2, 1, "div", 75),
      d(),
      u(45, "div", 87)(46, "div", 71)(47, "label", 88),
      m(48, " Start date "),
      F(49, PM, 2, 0, "span", 75),
      d(),
      W(50, "input", 89),
      F(51, RM, 2, 1, "div", 75),
      d()(),
      u(52, "div", 90)(53, "label", 91),
      m(54, " End date "),
      F(55, FM, 2, 0, "span", 75),
      d(),
      W(56, "input", 92),
      F(57, VM, 2, 1, "div", 75),
      d(),
      u(58, "div", 93)(59, "label", 94),
      m(60, " VIN "),
      F(61, LM, 2, 0, "span", 75),
      d(),
      W(62, "input", 95),
      F(63, HM, 2, 1, "div", 75),
      d()()(),
      u(64, "div", 60),
      F(65, jM, 3, 5, "ng-container", 96),
      u(66, "button", 62),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeModal());
      }),
      m(67, " Close "),
      d(),
      F(68, zM, 2, 1, "ng-template", null, 0, Wt),
      d()()()()();
  }
  if (n & 2) {
    let e,
      t,
      o,
      r,
      a,
      s,
      c,
      p,
      f,
      y,
      x,
      C,
      M,
      k,
      O = Dt(69),
      P = E();
    g(6),
      oe(
        " ",
        P.vehicleObj.vehicle_id ? "Edit Vehicle" : "Add New Vehicle",
        " "
      ),
      g(4),
      S("formGroup", P.useForm),
      g(5),
      S("ngIf", !P.isEditMode),
      g(),
      S(
        "ngClass",
        ye(
          25,
          dr,
          !P.isEditMode &&
            ((e = P.useForm.get("vehicle_name")) == null ? null : e.touched) &&
            ((e = P.useForm.get("vehicle_name")) == null ? null : e.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        !P.isEditMode &&
          ((t = P.useForm.get("vehicle_name")) == null ? null : t.touched) &&
          ((t = P.useForm.get("vehicle_name")) == null ? null : t.invalid)
      ),
      g(4),
      S("ngIf", !P.isEditMode),
      g(),
      S(
        "ngClass",
        ye(
          27,
          dr,
          !P.isEditMode &&
            ((o = P.useForm.get("YOM")) == null ? null : o.touched) &&
            ((o = P.useForm.get("YOM")) == null ? null : o.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        !P.isEditMode &&
          ((r = P.useForm.get("YOM")) == null ? null : r.touched) &&
          ((r = P.useForm.get("YOM")) == null ? null : r.invalid)
      ),
      g(5),
      S("ngIf", !P.isEditMode),
      g(),
      S(
        "ngClass",
        ye(
          29,
          dr,
          !P.isEditMode &&
            ((a = P.useForm.get("type")) == null ? null : a.touched) &&
            ((a = P.useForm.get("type")) == null ? null : a.invalid)
        )
      ),
      g(9),
      S(
        "ngIf",
        !P.isEditMode &&
          ((s = P.useForm.get("type")) == null ? null : s.touched) &&
          ((s = P.useForm.get("type")) == null ? null : s.invalid)
      ),
      g(4),
      S("ngIf", !P.isEditMode),
      g(),
      S(
        "ngClass",
        ye(
          31,
          dr,
          !P.isEditMode &&
            ((c = P.useForm.get("chasis_number")) == null ? null : c.touched) &&
            ((c = P.useForm.get("chasis_number")) == null ? null : c.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        !P.isEditMode &&
          ((p = P.useForm.get("chasis_number")) == null ? null : p.touched) &&
          ((p = P.useForm.get("chasis_number")) == null ? null : p.invalid)
      ),
      g(5),
      S("ngIf", !P.isEditMode),
      g(),
      S(
        "ngClass",
        ye(
          33,
          dr,
          !P.isEditMode &&
            ((f = P.useForm.get("demo_start_date")) == null
              ? null
              : f.touched) &&
            ((f = P.useForm.get("demo_start_date")) == null ? null : f.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        !P.isEditMode &&
          ((y = P.useForm.get("demo_start_date")) == null ? null : y.touched) &&
          ((y = P.useForm.get("demo_start_date")) == null ? null : y.invalid)
      ),
      g(4),
      S("ngIf", !P.isEditMode),
      g(),
      S(
        "ngClass",
        ye(
          35,
          dr,
          !P.isEditMode &&
            ((x = P.useForm.get("demo_end_date")) == null ? null : x.touched) &&
            ((x = P.useForm.get("demo_end_date")) == null ? null : x.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        !P.isEditMode &&
          ((C = P.useForm.get("demo_end_date")) == null ? null : C.touched) &&
          ((C = P.useForm.get("demo_end_date")) == null ? null : C.invalid)
      ),
      g(4),
      S("ngIf", !P.isEditMode),
      g(),
      S(
        "ngClass",
        ye(
          37,
          dr,
          !P.isEditMode &&
            ((M = P.useForm.get("VIN")) == null ? null : M.touched) &&
            ((M = P.useForm.get("VIN")) == null ? null : M.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        !P.isEditMode &&
          ((k = P.useForm.get("VIN")) == null ? null : k.touched) &&
          ((k = P.useForm.get("VIN")) == null ? null : k.invalid)
      ),
      g(2),
      S(
        "ngIf",
        P.vehicleObj.vehicle_id !== null && P.vehicleObj.vehicle_id !== void 0
      )("ngIfElse", O);
  }
}
var uc = class n {
  constructor(i) {
    this.changeDetectorRef = i;
    this.initializeForm();
  }
  count = pe(0);
  vehicleList = pe([]);
  totalVehicle = pe(0);
  vehicles = [];
  paginatedVehicles = [];
  masterSrv = ne(Ye);
  toastr = ne(mi);
  modalService = ne(es);
  vehicleObj = new ts();
  isModalVisible = !1;
  isEditMode = !1;
  previousValue = "";
  isModalOpen = !1;
  filteredVehicle = [];
  searchTerm = "";
  filteredVehicles = [];
  currentPage = 1;
  itemsPerPage = 10;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  useForm = new St({});
  ngOnInit() {
    this.loadVehicles(),
      (this.filteredVehicles = this.vehicleList()),
      this.paginateVehicles(),
      this.filterVehicles();
  }
  initializeForm() {
    this.useForm = new St({
      vehicle_name: new nt("", [
        Oe.required,
        Oe.minLength(2),
        Oe.maxLength(50),
      ]),
      VIN: new nt("", [Oe.required]),
      type: new nt("", [Oe.required]),
      YOM: new nt("", [Oe.required]),
      chasis_number: new nt("", [Oe.required]),
      demo_start_date: new nt("", [Oe.required]),
      demo_end_date: new nt("", [Oe.required]),
    });
  }
  loadVehicles() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (i) => {
        this.count.set(i.data.count),
          (this.vehicles = i.data.rows),
          this.vehicleList.set(this.vehicles),
          (this.filteredVehicles = [...this.vehicles]),
          (this.currentPage = 1),
          this.paginateVehicles();
      },
      error: (i) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", i);
      },
    });
  }
  openModal(i) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      console.log("hello"),
      i
        ? ((this.vehicleObj = se({}, i)),
          this.useForm.patchValue({
            vehicle_name: i.vehicle_name || "",
            VIN: i.VIN || "",
            type: i.type || "",
            YOM: this.formatDate(i.YOM) || "",
            demo_start_date: i.demo_start_date
              ? this.formatDate(i.demo_start_date)
              : "",
            demo_end_date: i.demo_end_date
              ? this.formatDate(i.demo_end_date)
              : "",
            chasis_number: i.chasis_number || "",
          }))
        : ((this.vehicleObj = new ts()),
          (this.vehicleObj.vehicle_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.vehicleObj
          ));
  }
  onSave() {
    console.log("onsave being called"),
      console.log(this.useForm.value),
      console.log(
        "Form end_date value:",
        this.useForm.get("demo_end_date")?.value
      );
    let i = new Date(this.useForm.get("demo_start_date")?.value);
    if (new Date(this.useForm.get("demo_end_date")?.value) < i) {
      this.toastr.error(
        "End date cannot be before start date.",
        "Date Validation"
      );
      return;
    }
    if (this.useForm.invalid) {
      this.markFormGroupTouched(this.useForm),
        console.log("Form Values:", this.useForm.value),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let t = this.useForm.value;
    console.log("Form Data being sent to API:", t),
      this.masterSrv.createNewVehicle(t).subscribe({
        next: () => {
          this.toastr.success("Vehicle created successfully!", "Success"),
            this.getAllVehicle(),
            this.closeModal();
        },
        error: (o) => {
          console.error("Vehicle creation error:", o);
          let r = o.error?.message || "Failed to create vehicle";
          this.toastr.error(r, "Creation Error");
        },
      });
  }
  getAllVehicle() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.totalVehicle.set(i.data.count),
            this.vehicleList.set(i.data.rows),
            (this.paginatedVehicles = this.vehicleList().slice(
              (this.currentPage - 1) * this.itemsPerPage,
              this.currentPage * this.itemsPerPage
            )))
          : this.toastr.warning("No Vehicle found", "Information");
      },
      error: (i) => {
        console.error("Vehicle fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch vehicles", "Error");
      },
    });
  }
  getShowingFrom() {
    return this.filteredVehicles.length === 0
      ? 0
      : (this.currentPage - 1) * this.itemsPerPage + 1;
  }
  getShowingTo() {
    return this.filteredVehicles.length === 0
      ? 0
      : Math.min(
          this.currentPage * this.itemsPerPage,
          this.filteredVehicles.length
        );
  }
  onUpdate() {
    if (!this.vehicleObj || !this.vehicleObj.vehicle_id) {
      this.toastr.warning("No vehicle selected for update!", "Warning");
      return;
    }
    (this.vehicleObj = se(se({}, this.vehicleObj), this.useForm.value)),
      console.log("Updating vehicle:", this.vehicleObj),
      this.masterSrv.updateVehicle(this.vehicleObj).subscribe(
        (i) => {
          i && i.status === 200
            ? (this.toastr.success(
                i.message || "Vehicle updated successfully",
                "Success"
              ),
              this.loadVehicles(),
              this.closeModal())
            : this.toastr.warning("Update failed, check data.", "Warning");
        },
        (i) => {
          this.toastr.error("Error updating vehicle", "Error");
        }
      );
  }
  getAllVehicles() {}
  onSearchChange() {
    (this.currentPage = 1), this.filterVehicles();
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = +i.target.value),
      (this.currentPage = 1),
      this.paginateVehicles();
  }
  displayAllVehicles() {
    (this.filteredVehicles = this.vehicleList()), this.paginateVehicles();
  }
  filterVehicles() {
    let i = this.vehicleList();
    if (
      (console.log("\u{1F50D} Raw vehicle list:", i),
      console.log("\u{1F50E} Current search term:", this.searchTerm),
      !this.searchTerm || this.searchTerm.trim() === "")
    )
      console.log("\u{1F4C4} Empty search term. Showing full list."),
        (this.filteredVehicles = i);
    else {
      let e = this.searchTerm.trim().toLowerCase();
      console.log("\u{1F50D} Normalized search term:", e),
        (this.filteredVehicles = i.filter((t) => {
          let o =
            t.vehicle_name?.toLowerCase().includes(e) ||
            t.VIN?.toLowerCase().includes(e) ||
            t.chasis_number?.toLowerCase().includes(e) ||
            t.type?.toLowerCase().includes(e);
          return (
            console.log("\u{1F697} Checking vehicle:", t, "=> Match:", o), o
          );
        })),
        console.log("\u2705 Filtered vehicles:", this.filteredVehicles);
    }
    (this.currentPage = 1), this.paginateVehicles();
  }
  paginateVehicles() {
    (this.totalPages = Math.ceil(
      this.filteredVehicles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updatePaginatedVehicles();
  }
  updatePaginatedVehicles() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedVehicles = this.filteredVehicles.slice(i, e);
  }
  goToPage(i) {
    (this.currentPage = i), this.updatePaginatedVehicles();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updatePaginatedVehicles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updatePaginatedVehicles());
  }
  selectedVehicleForDeletion = null;
  selectVehicleForDeletion(i) {
    (this.selectedVehicleForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  openDeleteModal(i) {
    (this.selectedVehicleForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  deleteVehicleId() {
    let i = this.selectedVehicleForDeletion;
    if (i && i.vehicle_id) {
      let e = i.vehicle_id;
      this.masterSrv.deleteVehicle(e).subscribe(
        (t) => {
          this.toastr.success("Vehicle deleted successfully", "Success"),
            (this.isDeleteModalOpen = !1);
          let o = this.vehicleList().filter((r) => r.vehicle_id !== e);
          this.vehicleList.set(o),
            (this.filteredVehicles = [...o]),
            this.paginateVehicles();
        },
        (t) => {
          this.toastr.error("Server Error", "Error");
        }
      );
    } else alert("No Vehicle selected for deletion");
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  formatDateForInput(i) {
    if (!i) return "";
    let e = new Date(i);
    return isNaN(e.getTime()) ? "" : e.toISOString().split("T")[0];
  }
  onEdit(i) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", i?.vehicle_id),
      (this.vehicleObj = se({}, i)),
      (this.previousValue = i.vehicle_name),
      this.useForm.patchValue({
        vehicle_name: i.vehicle_name,
        VIN: i.VIN,
        type: i.type,
        YOM: this.formatDate(i.YOM),
        chasis_number: i.chasis_number,
        demo_start_date: i.demo_start_date,
        demo_end_date: i.demo_end_date,
      }),
      console.log(
        "vehicleobj.vehicle_id after setting:",
        this.vehicleObj?.vehicle_id
      );
  }
  isVehicleNameChanged() {
    return this.useForm.dirty && this.useForm.value.name !== this.previousValue;
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof St && this.markFormGroupTouched(e);
    });
  }
  formatDate(i) {
    return i ? new Date(i).toISOString().split("T")[0] : "";
  }
  isFieldInvalid(i) {
    let e = this.useForm.get(i);
    return !!(e && e.invalid && (e.dirty || e.touched));
  }
  isVehicleName() {
    return this.useForm.value.vehicle_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || n)(j(it));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-vehicle"]],
    standalone: !0,
    features: [he],
    decls: 82,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", "mt-10"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search Vehicles...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "9", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
      ],
      [1, "modal-dialog", "modal-lg"],
      [
        1,
        "modal-title",
        2,
        "align-items",
        "center",
        "margin-inline",
        "auto",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      [
        "for",
        "vehicle_name",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      ["style", "color: red;", 4, "ngIf"],
      [
        "id",
        "vehicle_name",
        "type",
        "text",
        "placeholder",
        "Vehicle Name",
        "formControlName",
        "vehicle_name",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "form-group", "col-md-6"],
      [
        "for",
        "YOM",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "YOM",
        "type",
        "date",
        "formControlName",
        "YOM",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [
        "for",
        "typeSelect",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "typeSelect",
        "formControlName",
        "type",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "pointer",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "petrol"],
      ["value", "diesel"],
      ["value", "EV"],
      [
        "for",
        "chasis_number",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "chasis_number",
        "type",
        "text",
        "placeholder",
        "Enter Chassis Number",
        "formControlName",
        "chasis_number",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "row", 2, "margin-left", "-3px !important"],
      [
        "for",
        "demo_start_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "demo_start_date",
        "type",
        "date",
        "placeholder",
        "start date",
        "formControlName",
        "demo_start_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "17px"],
      [
        "for",
        "demo_end_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
        "margin-left",
        "-2px",
      ],
      [
        "id",
        "demo_end_date",
        "type",
        "date",
        "placeholder",
        "end date",
        "formControlName",
        "demo_end_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "5px"],
      [
        "for",
        "vin",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "vin",
        "type",
        "text",
        "placeholder",
        "VIN",
        "formControlName",
        "VIN",
        1,
        "form-control",
        "form-control-lg",
        2,
        "margin-left",
        "-5px",
        3,
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [2, "color", "red"],
      [1, "text-danger"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        3,
        "click",
        "disabled",
        "ngClass",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        m(6, "Transaction"),
        d()(),
        u(7, "li", 7)(8, "a", 8),
        m(9, "Vehicle Master"),
        d()()()(),
        u(10, "div", 9)(11, "div", 10)(12, "a", 11),
        z("click", function () {
          return t.openModal();
        }),
        W(13, "i", 12),
        m(14, "Add Vehicle "),
        d()(),
        u(15, "div", 13)(16, "div", 14)(17, "p", 15),
        m(18, "Total Vehicle"),
        d(),
        u(19, "h3", 16),
        m(20),
        d()()()(),
        u(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        W(26, "label", 22),
        u(27, "select", 23),
        z("change", function (r) {
          return t.onItemsPerPageChange(r);
        }),
        u(28, "option", 24),
        m(29, "10"),
        d(),
        u(30, "option", 25),
        m(31, "25"),
        d(),
        u(32, "option", 26),
        m(33, "50"),
        d(),
        u(34, "option", 27),
        m(35, "100"),
        d()(),
        u(36, "label", 28),
        m(37, "records per page"),
        d()(),
        u(38, "div", 29)(39, "div", 30)(40, "input", 31),
        Nt("ngModelChange", function (r) {
          return Ft(t.searchTerm, r) || (t.searchTerm = r), r;
        }),
        z("input", function () {
          return t.onSearchChange();
        }),
        d()()()(),
        u(41, "div", 32)(42, "table", 33)(43, "thead")(44, "tr")(45, "th"),
        m(46, "Sr No"),
        d(),
        u(47, "th"),
        m(48, "Vehicle Name"),
        d(),
        u(49, "th"),
        m(50, "YOM"),
        d(),
        u(51, "th"),
        m(52, "Type"),
        d(),
        u(53, "th"),
        m(54, "VIN"),
        d(),
        u(55, "th"),
        m(56, "Chasis number"),
        d(),
        u(57, "th"),
        m(58, "Demo start date"),
        d(),
        u(59, "th"),
        m(60, "Demo end date"),
        d(),
        u(61, "th"),
        m(62, "Action"),
        d()()(),
        u(63, "tbody"),
        F(64, bM, 4, 0, "tr", 34)(65, vM, 23, 8, "tr", 35),
        d()()(),
        u(66, "div", 36)(67, "div", 37)(68, "div", 38),
        m(69),
        d()(),
        u(70, "div", 37)(71, "div", 39)(72, "ul", 40)(73, "li", 41)(
          74,
          "a",
          42
        ),
        z("click", function () {
          return t.previousPage();
        }),
        m(75, "Previous"),
        d()(),
        F(76, yM, 3, 3, "li", 43),
        u(77, "li", 44)(78, "a", 42),
        z("click", function () {
          return t.nextPage();
        }),
        m(79, "Next"),
        d()()()()()()()()()(),
        F(80, xM, 13, 0, "div", 45)(81, UM, 70, 39, "div", 46),
        d()),
        e & 2 &&
          (g(20),
          oe(" ", t.count(), " "),
          g(20),
          Rt("ngModel", t.searchTerm),
          g(24),
          S("ngIf", t.paginatedVehicles.length === 0),
          g(),
          S("ngForOf", t.paginatedVehicles),
          g(4),
          Mi(
            " Showing ",
            t.getShowingFrom(),
            " to ",
            t.getShowingTo(),
            " of ",
            t.filteredVehicles.length,
            " entries "
          ),
          g(4),
          Ce("disabled", t.currentPage === 1),
          g(3),
          S("ngForOf", t.pages),
          g(),
          Ce("disabled", t.currentPage === t.totalPages),
          g(3),
          S("ngIf", t.isDeleteModalOpen),
          g(),
          S("ngIf", t.isModalOpen));
    },
    dependencies: [
      ke,
      Vt,
      $t,
      Je,
      Ai,
      Ii,
      Pi,
      ni,
      In,
      hi,
      Oi,
      Hi,
      Qr,
      ct,
      dc,
      cr,
      sc,
      ac,
      Qi,
      ji,
      zi,
      x0,
      Ln,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}input[type=text][_ngcontent-%COMP%]::-ms-clear, input[type=text][_ngcontent-%COMP%]::-ms-reveal, input[type=text][_ngcontent-%COMP%]::-webkit-clear-button, input[type=text][_ngcontent-%COMP%]::-webkit-search-cancel-button{display:none;-webkit-appearance:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}",
    ],
  });
};
var ds = class {
  account_id;
  account_type;
  salutation;
  fname;
  lname;
  language;
  employment_status;
  lead_source;
  gender;
  industry;
  occupation;
  cust_journey_stage;
  national_id;
  phone;
  mobile;
  billing_street;
  billing_city;
  billing_state;
  billing_zip_code;
  billing_country;
  account_name;
  parent_account;
  company_fleet_size;
  website;
  account_owner;
  corporate_program_code;
  type;
  annual_revenue;
  email;
  household_income;
  birthdate;
  dealer_code;
  marital_status;
  children;
  no_of_people;
  dealer_id;
  constructor() {
    (this.dealer_code = 0),
      (this.dealer_id = ""),
      (this.account_id = ""),
      (this.account_type = ""),
      (this.salutation = null),
      (this.fname = ""),
      (this.lname = ""),
      (this.language = null),
      (this.employment_status = null),
      (this.lead_source = null),
      (this.gender = null),
      (this.industry = null),
      (this.occupation = null),
      (this.cust_journey_stage = null),
      (this.national_id = null),
      (this.phone = void 0),
      (this.mobile = void 0),
      (this.billing_street = null),
      (this.billing_city = null),
      (this.billing_state = null),
      (this.billing_zip_code = null),
      (this.billing_country = null),
      (this.account_name = ""),
      (this.parent_account = null),
      (this.company_fleet_size = null),
      (this.website = null),
      (this.account_owner = null),
      (this.corporate_program_code = null),
      (this.type = null),
      (this.annual_revenue = null),
      (this.email = ""),
      (this.household_income = null),
      (this.birthdate = null),
      (this.marital_status = null),
      (this.children = null),
      (this.no_of_people = null);
  }
};
var $i = class n {
    static isArray(i, e = !0) {
      return Array.isArray(i) && (e || i.length !== 0);
    }
    static isObject(i, e = !0) {
      return (
        typeof i == "object" &&
        !Array.isArray(i) &&
        i != null &&
        (e || Object.keys(i).length !== 0)
      );
    }
    static equals(i, e, t) {
      return t
        ? this.resolveFieldData(i, t) === this.resolveFieldData(e, t)
        : this.equalsByValue(i, e);
    }
    static equalsByValue(i, e) {
      if (i === e) return !0;
      if (i && e && typeof i == "object" && typeof e == "object") {
        var t = Array.isArray(i),
          o = Array.isArray(e),
          r,
          a,
          s;
        if (t && o) {
          if (((a = i.length), a != e.length)) return !1;
          for (r = a; r-- !== 0; )
            if (!this.equalsByValue(i[r], e[r])) return !1;
          return !0;
        }
        if (t != o) return !1;
        var c = this.isDate(i),
          p = this.isDate(e);
        if (c != p) return !1;
        if (c && p) return i.getTime() == e.getTime();
        var f = i instanceof RegExp,
          y = e instanceof RegExp;
        if (f != y) return !1;
        if (f && y) return i.toString() == e.toString();
        var x = Object.keys(i);
        if (((a = x.length), a !== Object.keys(e).length)) return !1;
        for (r = a; r-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, x[r])) return !1;
        for (r = a; r-- !== 0; )
          if (((s = x[r]), !this.equalsByValue(i[s], e[s]))) return !1;
        return !0;
      }
      return i !== i && e !== e;
    }
    static resolveFieldData(i, e) {
      if (i && e) {
        if (this.isFunction(e)) return e(i);
        if (e.indexOf(".") == -1) return i[e];
        {
          let t = e.split("."),
            o = i;
          for (let r = 0, a = t.length; r < a; ++r) {
            if (o == null) return null;
            o = o[t[r]];
          }
          return o;
        }
      } else return null;
    }
    static isFunction(i) {
      return !!(i && i.constructor && i.call && i.apply);
    }
    static reorderArray(i, e, t) {
      let o;
      i &&
        e !== t &&
        (t >= i.length && ((t %= i.length), (e %= i.length)),
        i.splice(t, 0, i.splice(e, 1)[0]));
    }
    static insertIntoOrderedArray(i, e, t, o) {
      if (t.length > 0) {
        let r = !1;
        for (let a = 0; a < t.length; a++)
          if (this.findIndexInList(t[a], o) > e) {
            t.splice(a, 0, i), (r = !0);
            break;
          }
        r || t.push(i);
      } else t.push(i);
    }
    static findIndexInList(i, e) {
      let t = -1;
      if (e) {
        for (let o = 0; o < e.length; o++)
          if (e[o] == i) {
            t = o;
            break;
          }
      }
      return t;
    }
    static contains(i, e) {
      if (i != null && e && e.length) {
        for (let t of e) if (this.equals(i, t)) return !0;
      }
      return !1;
    }
    static removeAccents(i) {
      return (
        i &&
          (i = i
            .normalize("NFKD")
            .replace(new RegExp("\\p{Diacritic}", "gu"), "")),
        i
      );
    }
    static isDate(i) {
      return Object.prototype.toString.call(i) === "[object Date]";
    }
    static isEmpty(i) {
      return (
        i == null ||
        i === "" ||
        (Array.isArray(i) && i.length === 0) ||
        (!this.isDate(i) && typeof i == "object" && Object.keys(i).length === 0)
      );
    }
    static isNotEmpty(i) {
      return !this.isEmpty(i);
    }
    static compare(i, e, t, o = 1) {
      let r = -1,
        a = this.isEmpty(i),
        s = this.isEmpty(e);
      return (
        a && s
          ? (r = 0)
          : a
          ? (r = o)
          : s
          ? (r = -o)
          : typeof i == "string" && typeof e == "string"
          ? (r = i.localeCompare(e, t, { numeric: !0 }))
          : (r = i < e ? -1 : i > e ? 1 : 0),
        r
      );
    }
    static sort(i, e, t = 1, o, r = 1) {
      let a = n.compare(i, e, o, t),
        s = t;
      return (n.isEmpty(i) || n.isEmpty(e)) && (s = r === 1 ? t : r), s * a;
    }
    static merge(i, e) {
      if (!(i == null && e == null)) {
        {
          if (
            (i == null || typeof i == "object") &&
            (e == null || typeof e == "object")
          )
            return se(se({}, i || {}), e || {});
          if (
            (i == null || typeof i == "string") &&
            (e == null || typeof e == "string")
          )
            return [i || "", e || ""].join(" ");
        }
        return e || i;
      }
    }
    static isPrintableCharacter(i = "") {
      return this.isNotEmpty(i) && i.length === 1 && i.match(/\S| /);
    }
    static getItemValue(i, ...e) {
      return this.isFunction(i) ? i(...e) : i;
    }
    static findLastIndex(i, e) {
      let t = -1;
      if (this.isNotEmpty(i))
        try {
          t = i.findLastIndex(e);
        } catch {
          t = i.lastIndexOf([...i].reverse().find(e));
        }
      return t;
    }
    static findLast(i, e) {
      let t;
      if (this.isNotEmpty(i))
        try {
          t = i.findLast(e);
        } catch {
          t = [...i].reverse().find(e);
        }
      return t;
    }
    static deepEquals(i, e) {
      if (i === e) return !0;
      if (i && e && typeof i == "object" && typeof e == "object") {
        var t = Array.isArray(i),
          o = Array.isArray(e),
          r,
          a,
          s;
        if (t && o) {
          if (((a = i.length), a != e.length)) return !1;
          for (r = a; r-- !== 0; ) if (!this.deepEquals(i[r], e[r])) return !1;
          return !0;
        }
        if (t != o) return !1;
        var c = i instanceof Date,
          p = e instanceof Date;
        if (c != p) return !1;
        if (c && p) return i.getTime() == e.getTime();
        var f = i instanceof RegExp,
          y = e instanceof RegExp;
        if (f != y) return !1;
        if (f && y) return i.toString() == e.toString();
        var x = Object.keys(i);
        if (((a = x.length), a !== Object.keys(e).length)) return !1;
        for (r = a; r-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, x[r])) return !1;
        for (r = a; r-- !== 0; )
          if (((s = x[r]), !this.deepEquals(i[s], e[s]))) return !1;
        return !0;
      }
      return i !== i && e !== e;
    }
  },
  C0 = 0;
function aa(n = "pn_id_") {
  return C0++, `${n}${C0}`;
}
function WM() {
  let n = [],
    i = (r, a) => {
      let s = n.length > 0 ? n[n.length - 1] : { key: r, value: a },
        c = s.value + (s.key === r ? 0 : a) + 2;
      return n.push({ key: r, value: c }), c;
    },
    e = (r) => {
      n = n.filter((a) => a.value !== r);
    },
    t = () => (n.length > 0 ? n[n.length - 1].value : 0),
    o = (r) => (r && parseInt(r.style.zIndex, 10)) || 0;
  return {
    get: o,
    set: (r, a, s) => {
      a && (a.style.zIndex = String(i(r, s)));
    },
    clear: (r) => {
      r && (e(o(r)), (r.style.zIndex = ""));
    },
    getCurrent: () => t(),
  };
}
var us = WM();
var fi = (() => {
  class n {
    static STARTS_WITH = "startsWith";
    static CONTAINS = "contains";
    static NOT_CONTAINS = "notContains";
    static ENDS_WITH = "endsWith";
    static EQUALS = "equals";
    static NOT_EQUALS = "notEquals";
    static IN = "in";
    static LESS_THAN = "lt";
    static LESS_THAN_OR_EQUAL_TO = "lte";
    static GREATER_THAN = "gt";
    static GREATER_THAN_OR_EQUAL_TO = "gte";
    static BETWEEN = "between";
    static IS = "is";
    static IS_NOT = "isNot";
    static BEFORE = "before";
    static AFTER = "after";
    static DATE_IS = "dateIs";
    static DATE_IS_NOT = "dateIsNot";
    static DATE_BEFORE = "dateBefore";
    static DATE_AFTER = "dateAfter";
  }
  return n;
})();
var w0 = (() => {
  class n {
    clickSource = new Ae();
    clickObservable = this.clickSource.asObservable();
    add(e) {
      e && this.clickSource.next(e);
    }
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
  }
  return n;
})();
var hc = (() => {
  class n {
    ripple = !1;
    inputStyle = pe("outlined");
    overlayOptions = {};
    csp = pe({ nonce: void 0 });
    filterMatchModeOptions = {
      text: [
        fi.STARTS_WITH,
        fi.CONTAINS,
        fi.NOT_CONTAINS,
        fi.ENDS_WITH,
        fi.EQUALS,
        fi.NOT_EQUALS,
      ],
      numeric: [
        fi.EQUALS,
        fi.NOT_EQUALS,
        fi.LESS_THAN,
        fi.LESS_THAN_OR_EQUAL_TO,
        fi.GREATER_THAN,
        fi.GREATER_THAN_OR_EQUAL_TO,
      ],
      date: [fi.DATE_IS, fi.DATE_IS_NOT, fi.DATE_BEFORE, fi.DATE_AFTER],
    };
    translation = {
      startsWith: "Starts with",
      contains: "Contains",
      notContains: "Not contains",
      endsWith: "Ends with",
      equals: "Equals",
      notEquals: "Not equals",
      noFilter: "No Filter",
      lt: "Less than",
      lte: "Less than or equal to",
      gt: "Greater than",
      gte: "Greater than or equal to",
      is: "Is",
      isNot: "Is not",
      before: "Before",
      after: "After",
      dateIs: "Date is",
      dateIsNot: "Date is not",
      dateBefore: "Date is before",
      dateAfter: "Date is after",
      clear: "Clear",
      apply: "Apply",
      matchAll: "Match All",
      matchAny: "Match Any",
      addRule: "Add Rule",
      removeRule: "Remove Rule",
      accept: "Yes",
      reject: "No",
      choose: "Choose",
      upload: "Upload",
      cancel: "Cancel",
      pending: "Pending",
      fileSizeTypes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
      dayNames: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ],
      dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      monthNames: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ],
      monthNamesShort: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec",
      ],
      chooseYear: "Choose Year",
      chooseMonth: "Choose Month",
      chooseDate: "Choose Date",
      prevDecade: "Previous Decade",
      nextDecade: "Next Decade",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      prevHour: "Previous Hour",
      nextHour: "Next Hour",
      prevMinute: "Previous Minute",
      nextMinute: "Next Minute",
      prevSecond: "Previous Second",
      nextSecond: "Next Second",
      am: "am",
      pm: "pm",
      dateFormat: "mm/dd/yy",
      firstDayOfWeek: 0,
      today: "Today",
      weekHeader: "Wk",
      weak: "Weak",
      medium: "Medium",
      strong: "Strong",
      passwordPrompt: "Enter a password",
      emptyMessage: "No results found",
      searchMessage: "{0} results are available",
      selectionMessage: "{0} items selected",
      emptySelectionMessage: "No selected item",
      emptySearchMessage: "No results found",
      emptyFilterMessage: "No results found",
      aria: {
        trueLabel: "True",
        falseLabel: "False",
        nullLabel: "Not Selected",
        star: "1 star",
        stars: "{star} stars",
        selectAll: "All items selected",
        unselectAll: "All items unselected",
        close: "Close",
        previous: "Previous",
        next: "Next",
        navigation: "Navigation",
        scrollTop: "Scroll Top",
        moveTop: "Move Top",
        moveUp: "Move Up",
        moveDown: "Move Down",
        moveBottom: "Move Bottom",
        moveToTarget: "Move to Target",
        moveToSource: "Move to Source",
        moveAllToTarget: "Move All to Target",
        moveAllToSource: "Move All to Source",
        pageLabel: "{page}",
        firstPageLabel: "First Page",
        lastPageLabel: "Last Page",
        nextPageLabel: "Next Page",
        prevPageLabel: "Previous Page",
        rowsPerPageLabel: "Rows per page",
        previousPageLabel: "Previous Page",
        jumpToPageDropdownLabel: "Jump to Page Dropdown",
        jumpToPageInputLabel: "Jump to Page Input",
        selectRow: "Row Selected",
        unselectRow: "Row Unselected",
        expandRow: "Row Expanded",
        collapseRow: "Row Collapsed",
        showFilterMenu: "Show Filter Menu",
        hideFilterMenu: "Hide Filter Menu",
        filterOperator: "Filter Operator",
        filterConstraint: "Filter Constraint",
        editRow: "Row Edit",
        saveEdit: "Save Edit",
        cancelEdit: "Cancel Edit",
        listView: "List View",
        gridView: "Grid View",
        slide: "Slide",
        slideNumber: "{slideNumber}",
        zoomImage: "Zoom Image",
        zoomIn: "Zoom In",
        zoomOut: "Zoom Out",
        rotateRight: "Rotate Right",
        rotateLeft: "Rotate Left",
        listLabel: "Option List",
        selectColor: "Select a color",
        removeLabel: "Remove",
        browseFiles: "Browse Files",
        maximizeLabel: "Maximize",
      },
    };
    zIndex = { modal: 1100, overlay: 1e3, menu: 1e3, tooltip: 1100 };
    translationSource = new Ae();
    translationObserver = this.translationSource.asObservable();
    getTranslation(e) {
      return this.translation[e];
    }
    setTranslation(e) {
      (this.translation = se(se({}, this.translation), e)),
        this.translationSource.next(this.translation);
    }
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
  }
  return n;
})();
var hs = (() => {
    class n {
      template;
      type;
      name;
      constructor(e) {
        this.template = e;
      }
      getType() {
        return this.name;
      }
      static ɵfac = function (t) {
        return new (t || n)(j(En));
      };
      static ɵdir = Pe({
        type: n,
        selectors: [["", "pTemplate", ""]],
        inputs: { type: "type", name: [0, "pTemplate", "name"] },
        standalone: !0,
      });
    }
    return n;
  })(),
  gn = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = De({ type: n });
      static ɵinj = we({});
    }
    return n;
  })(),
  _n = (() => {
    class n {
      static STARTS_WITH = "startsWith";
      static CONTAINS = "contains";
      static NOT_CONTAINS = "notContains";
      static ENDS_WITH = "endsWith";
      static EQUALS = "equals";
      static NOT_EQUALS = "notEquals";
      static NO_FILTER = "noFilter";
      static LT = "lt";
      static LTE = "lte";
      static GT = "gt";
      static GTE = "gte";
      static IS = "is";
      static IS_NOT = "isNot";
      static BEFORE = "before";
      static AFTER = "after";
      static CLEAR = "clear";
      static APPLY = "apply";
      static MATCH_ALL = "matchAll";
      static MATCH_ANY = "matchAny";
      static ADD_RULE = "addRule";
      static REMOVE_RULE = "removeRule";
      static ACCEPT = "accept";
      static REJECT = "reject";
      static CHOOSE = "choose";
      static UPLOAD = "upload";
      static CANCEL = "cancel";
      static PENDING = "pending";
      static FILE_SIZE_TYPES = "fileSizeTypes";
      static DAY_NAMES = "dayNames";
      static DAY_NAMES_SHORT = "dayNamesShort";
      static DAY_NAMES_MIN = "dayNamesMin";
      static MONTH_NAMES = "monthNames";
      static MONTH_NAMES_SHORT = "monthNamesShort";
      static FIRST_DAY_OF_WEEK = "firstDayOfWeek";
      static TODAY = "today";
      static WEEK_HEADER = "weekHeader";
      static WEAK = "weak";
      static MEDIUM = "medium";
      static STRONG = "strong";
      static PASSWORD_PROMPT = "passwordPrompt";
      static EMPTY_MESSAGE = "emptyMessage";
      static EMPTY_FILTER_MESSAGE = "emptyFilterMessage";
      static SHOW_FILTER_MENU = "showFilterMenu";
      static HIDE_FILTER_MENU = "hideFilterMenu";
      static SELECTION_MESSAGE = "selectionMessage";
      static ARIA = "aria";
      static SELECT_COLOR = "selectColor";
      static BROWSE_FILES = "browseFiles";
    }
    return n;
  })();
var me = (() => {
    class n {
      static zindex = 1e3;
      static calculatedScrollbarWidth = null;
      static calculatedScrollbarHeight = null;
      static browser;
      static addClass(e, t) {
        e && t && (e.classList ? e.classList.add(t) : (e.className += " " + t));
      }
      static addMultipleClasses(e, t) {
        if (e && t)
          if (e.classList) {
            let o = t.trim().split(" ");
            for (let r = 0; r < o.length; r++) e.classList.add(o[r]);
          } else {
            let o = t.split(" ");
            for (let r = 0; r < o.length; r++) e.className += " " + o[r];
          }
      }
      static removeClass(e, t) {
        e &&
          t &&
          (e.classList
            ? e.classList.remove(t)
            : (e.className = e.className.replace(
                new RegExp(
                  "(^|\\b)" + t.split(" ").join("|") + "(\\b|$)",
                  "gi"
                ),
                " "
              )));
      }
      static removeMultipleClasses(e, t) {
        e &&
          t &&
          [t]
            .flat()
            .filter(Boolean)
            .forEach((o) =>
              o.split(" ").forEach((r) => this.removeClass(e, r))
            );
      }
      static hasClass(e, t) {
        return e && t
          ? e.classList
            ? e.classList.contains(t)
            : new RegExp("(^| )" + t + "( |$)", "gi").test(e.className)
          : !1;
      }
      static siblings(e) {
        return Array.prototype.filter.call(e.parentNode.children, function (t) {
          return t !== e;
        });
      }
      static find(e, t) {
        return Array.from(e.querySelectorAll(t));
      }
      static findSingle(e, t) {
        return this.isElement(e) ? e.querySelector(t) : null;
      }
      static index(e) {
        let t = e.parentNode.childNodes,
          o = 0;
        for (var r = 0; r < t.length; r++) {
          if (t[r] == e) return o;
          t[r].nodeType == 1 && o++;
        }
        return -1;
      }
      static indexWithinGroup(e, t) {
        let o = e.parentNode ? e.parentNode.childNodes : [],
          r = 0;
        for (var a = 0; a < o.length; a++) {
          if (o[a] == e) return r;
          o[a].attributes && o[a].attributes[t] && o[a].nodeType == 1 && r++;
        }
        return -1;
      }
      static appendOverlay(e, t, o = "self") {
        o !== "self" && e && t && this.appendChild(e, t);
      }
      static alignOverlay(e, t, o = "self", r = !0) {
        e &&
          t &&
          (r && (e.style.minWidth = `${n.getOuterWidth(t)}px`),
          o === "self"
            ? this.relativePosition(e, t)
            : this.absolutePosition(e, t));
      }
      static relativePosition(e, t, o = !0) {
        let r = (U) => {
            if (U)
              return getComputedStyle(U).getPropertyValue("position") ===
                "relative"
                ? U
                : r(U.parentElement);
          },
          a = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          s = t.offsetHeight ?? t.getBoundingClientRect().height,
          c = t.getBoundingClientRect(),
          p = this.getWindowScrollTop(),
          f = this.getWindowScrollLeft(),
          y = this.getViewport(),
          C = r(e)?.getBoundingClientRect() || { top: -1 * p, left: -1 * f },
          M,
          k;
        c.top + s + a.height > y.height
          ? ((M = c.top - C.top - a.height),
            (e.style.transformOrigin = "bottom"),
            c.top + M < 0 && (M = -1 * c.top))
          : ((M = s + c.top - C.top), (e.style.transformOrigin = "top"));
        let O = c.left + a.width - y.width,
          P = c.left - C.left;
        a.width > y.width
          ? (k = (c.left - C.left) * -1)
          : O > 0
          ? (k = P - O)
          : (k = c.left - C.left),
          (e.style.top = M + "px"),
          (e.style.left = k + "px"),
          o &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static absolutePosition(e, t, o = !0) {
        let r = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          a = r.height,
          s = r.width,
          c = t.offsetHeight ?? t.getBoundingClientRect().height,
          p = t.offsetWidth ?? t.getBoundingClientRect().width,
          f = t.getBoundingClientRect(),
          y = this.getWindowScrollTop(),
          x = this.getWindowScrollLeft(),
          C = this.getViewport(),
          M,
          k;
        f.top + c + a > C.height
          ? ((M = f.top + y - a),
            (e.style.transformOrigin = "bottom"),
            M < 0 && (M = y))
          : ((M = c + f.top + y), (e.style.transformOrigin = "top")),
          f.left + s > C.width
            ? (k = Math.max(0, f.left + x + p - s))
            : (k = f.left + x),
          (e.style.top = M + "px"),
          (e.style.left = k + "px"),
          o &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static getParents(e, t = []) {
        return e.parentNode === null
          ? t
          : this.getParents(e.parentNode, t.concat([e.parentNode]));
      }
      static getScrollableParents(e) {
        let t = [];
        if (e) {
          let o = this.getParents(e),
            r = /(auto|scroll)/,
            a = (s) => {
              let c = window.getComputedStyle(s, null);
              return (
                r.test(c.getPropertyValue("overflow")) ||
                r.test(c.getPropertyValue("overflowX")) ||
                r.test(c.getPropertyValue("overflowY"))
              );
            };
          for (let s of o) {
            let c = s.nodeType === 1 && s.dataset.scrollselectors;
            if (c) {
              let p = c.split(",");
              for (let f of p) {
                let y = this.findSingle(s, f);
                y && a(y) && t.push(y);
              }
            }
            s.nodeType !== 9 && a(s) && t.push(s);
          }
        }
        return t;
      }
      static getHiddenElementOuterHeight(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let t = e.offsetHeight;
        return (e.style.display = "none"), (e.style.visibility = "visible"), t;
      }
      static getHiddenElementOuterWidth(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let t = e.offsetWidth;
        return (e.style.display = "none"), (e.style.visibility = "visible"), t;
      }
      static getHiddenElementDimensions(e) {
        let t = {};
        return (
          (e.style.visibility = "hidden"),
          (e.style.display = "block"),
          (t.width = e.offsetWidth),
          (t.height = e.offsetHeight),
          (e.style.display = "none"),
          (e.style.visibility = "visible"),
          t
        );
      }
      static scrollInView(e, t) {
        let o = getComputedStyle(e).getPropertyValue("borderTopWidth"),
          r = o ? parseFloat(o) : 0,
          a = getComputedStyle(e).getPropertyValue("paddingTop"),
          s = a ? parseFloat(a) : 0,
          c = e.getBoundingClientRect(),
          f =
            t.getBoundingClientRect().top +
            document.body.scrollTop -
            (c.top + document.body.scrollTop) -
            r -
            s,
          y = e.scrollTop,
          x = e.clientHeight,
          C = this.getOuterHeight(t);
        f < 0
          ? (e.scrollTop = y + f)
          : f + C > x && (e.scrollTop = y + f - x + C);
      }
      static fadeIn(e, t) {
        e.style.opacity = 0;
        let o = +new Date(),
          r = 0,
          a = function () {
            (r =
              +e.style.opacity.replace(",", ".") +
              (new Date().getTime() - o) / t),
              (e.style.opacity = r),
              (o = +new Date()),
              +r < 1 &&
                ((window.requestAnimationFrame && requestAnimationFrame(a)) ||
                  setTimeout(a, 16));
          };
        a();
      }
      static fadeOut(e, t) {
        var o = 1,
          r = 50,
          a = t,
          s = r / a;
        let c = setInterval(() => {
          (o = o - s),
            o <= 0 && ((o = 0), clearInterval(c)),
            (e.style.opacity = o);
        }, r);
      }
      static getWindowScrollTop() {
        let e = document.documentElement;
        return (window.pageYOffset || e.scrollTop) - (e.clientTop || 0);
      }
      static getWindowScrollLeft() {
        let e = document.documentElement;
        return (window.pageXOffset || e.scrollLeft) - (e.clientLeft || 0);
      }
      static matches(e, t) {
        var o = Element.prototype,
          r =
            o.matches ||
            o.webkitMatchesSelector ||
            o.mozMatchesSelector ||
            o.msMatchesSelector ||
            function (a) {
              return [].indexOf.call(document.querySelectorAll(a), this) !== -1;
            };
        return r.call(e, t);
      }
      static getOuterWidth(e, t) {
        let o = e.offsetWidth;
        if (t) {
          let r = getComputedStyle(e);
          o += parseFloat(r.marginLeft) + parseFloat(r.marginRight);
        }
        return o;
      }
      static getHorizontalPadding(e) {
        let t = getComputedStyle(e);
        return parseFloat(t.paddingLeft) + parseFloat(t.paddingRight);
      }
      static getHorizontalMargin(e) {
        let t = getComputedStyle(e);
        return parseFloat(t.marginLeft) + parseFloat(t.marginRight);
      }
      static innerWidth(e) {
        let t = e.offsetWidth,
          o = getComputedStyle(e);
        return (t += parseFloat(o.paddingLeft) + parseFloat(o.paddingRight)), t;
      }
      static width(e) {
        let t = e.offsetWidth,
          o = getComputedStyle(e);
        return (t -= parseFloat(o.paddingLeft) + parseFloat(o.paddingRight)), t;
      }
      static getInnerHeight(e) {
        let t = e.offsetHeight,
          o = getComputedStyle(e);
        return (t += parseFloat(o.paddingTop) + parseFloat(o.paddingBottom)), t;
      }
      static getOuterHeight(e, t) {
        let o = e.offsetHeight;
        if (t) {
          let r = getComputedStyle(e);
          o += parseFloat(r.marginTop) + parseFloat(r.marginBottom);
        }
        return o;
      }
      static getHeight(e) {
        let t = e.offsetHeight,
          o = getComputedStyle(e);
        return (
          (t -=
            parseFloat(o.paddingTop) +
            parseFloat(o.paddingBottom) +
            parseFloat(o.borderTopWidth) +
            parseFloat(o.borderBottomWidth)),
          t
        );
      }
      static getWidth(e) {
        let t = e.offsetWidth,
          o = getComputedStyle(e);
        return (
          (t -=
            parseFloat(o.paddingLeft) +
            parseFloat(o.paddingRight) +
            parseFloat(o.borderLeftWidth) +
            parseFloat(o.borderRightWidth)),
          t
        );
      }
      static getViewport() {
        let e = window,
          t = document,
          o = t.documentElement,
          r = t.getElementsByTagName("body")[0],
          a = e.innerWidth || o.clientWidth || r.clientWidth,
          s = e.innerHeight || o.clientHeight || r.clientHeight;
        return { width: a, height: s };
      }
      static getOffset(e) {
        var t = e.getBoundingClientRect();
        return {
          top:
            t.top +
            (window.pageYOffset ||
              document.documentElement.scrollTop ||
              document.body.scrollTop ||
              0),
          left:
            t.left +
            (window.pageXOffset ||
              document.documentElement.scrollLeft ||
              document.body.scrollLeft ||
              0),
        };
      }
      static replaceElementWith(e, t) {
        let o = e.parentNode;
        if (!o) throw "Can't replace element";
        return o.replaceChild(t, e);
      }
      static getUserAgent() {
        if (navigator && this.isClient()) return navigator.userAgent;
      }
      static isIE() {
        var e = window.navigator.userAgent,
          t = e.indexOf("MSIE ");
        if (t > 0) return !0;
        var o = e.indexOf("Trident/");
        if (o > 0) {
          var r = e.indexOf("rv:");
          return !0;
        }
        var a = e.indexOf("Edge/");
        return a > 0;
      }
      static isIOS() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
      }
      static isAndroid() {
        return /(android)/i.test(navigator.userAgent);
      }
      static isTouchDevice() {
        return "ontouchstart" in window || navigator.maxTouchPoints > 0;
      }
      static appendChild(e, t) {
        if (this.isElement(t)) t.appendChild(e);
        else if (t && t.el && t.el.nativeElement)
          t.el.nativeElement.appendChild(e);
        else throw "Cannot append " + t + " to " + e;
      }
      static removeChild(e, t) {
        if (this.isElement(t)) t.removeChild(e);
        else if (t.el && t.el.nativeElement) t.el.nativeElement.removeChild(e);
        else throw "Cannot remove " + e + " from " + t;
      }
      static removeElement(e) {
        "remove" in Element.prototype
          ? e.remove()
          : e.parentNode.removeChild(e);
      }
      static isElement(e) {
        return typeof HTMLElement == "object"
          ? e instanceof HTMLElement
          : e &&
              typeof e == "object" &&
              e !== null &&
              e.nodeType === 1 &&
              typeof e.nodeName == "string";
      }
      static calculateScrollbarWidth(e) {
        if (e) {
          let t = getComputedStyle(e);
          return (
            e.offsetWidth -
            e.clientWidth -
            parseFloat(t.borderLeftWidth) -
            parseFloat(t.borderRightWidth)
          );
        } else {
          if (this.calculatedScrollbarWidth !== null)
            return this.calculatedScrollbarWidth;
          let t = document.createElement("div");
          (t.className = "p-scrollbar-measure"), document.body.appendChild(t);
          let o = t.offsetWidth - t.clientWidth;
          return (
            document.body.removeChild(t), (this.calculatedScrollbarWidth = o), o
          );
        }
      }
      static calculateScrollbarHeight() {
        if (this.calculatedScrollbarHeight !== null)
          return this.calculatedScrollbarHeight;
        let e = document.createElement("div");
        (e.className = "p-scrollbar-measure"), document.body.appendChild(e);
        let t = e.offsetHeight - e.clientHeight;
        return (
          document.body.removeChild(e), (this.calculatedScrollbarWidth = t), t
        );
      }
      static invokeElementMethod(e, t, o) {
        e[t].apply(e, o);
      }
      static clearSelection() {
        if (window.getSelection)
          window.getSelection().empty
            ? window.getSelection().empty()
            : window.getSelection().removeAllRanges &&
              window.getSelection().rangeCount > 0 &&
              window.getSelection().getRangeAt(0).getClientRects().length > 0 &&
              window.getSelection().removeAllRanges();
        else if (document.selection && document.selection.empty)
          try {
            document.selection.empty();
          } catch {}
      }
      static getBrowser() {
        if (!this.browser) {
          let e = this.resolveUserAgent();
          (this.browser = {}),
            e.browser &&
              ((this.browser[e.browser] = !0),
              (this.browser.version = e.version)),
            this.browser.chrome
              ? (this.browser.webkit = !0)
              : this.browser.webkit && (this.browser.safari = !0);
        }
        return this.browser;
      }
      static resolveUserAgent() {
        let e = navigator.userAgent.toLowerCase(),
          t =
            /(chrome)[ \/]([\w.]+)/.exec(e) ||
            /(webkit)[ \/]([\w.]+)/.exec(e) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) ||
            /(msie) ([\w.]+)/.exec(e) ||
            (e.indexOf("compatible") < 0 &&
              /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)) ||
            [];
        return { browser: t[1] || "", version: t[2] || "0" };
      }
      static isInteger(e) {
        return Number.isInteger
          ? Number.isInteger(e)
          : typeof e == "number" && isFinite(e) && Math.floor(e) === e;
      }
      static isHidden(e) {
        return !e || e.offsetParent === null;
      }
      static isVisible(e) {
        return e && e.offsetParent != null;
      }
      static isExist(e) {
        return e !== null && typeof e < "u" && e.nodeName && e.parentNode;
      }
      static focus(e, t) {
        e && document.activeElement !== e && e.focus(t);
      }
      static getFocusableSelectorString(e = "") {
        return `button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-inputtext:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e}`;
      }
      static getFocusableElements(e, t = "") {
        let o = this.find(e, this.getFocusableSelectorString(t)),
          r = [];
        for (let a of o) {
          let s = getComputedStyle(a);
          this.isVisible(a) &&
            s.display != "none" &&
            s.visibility != "hidden" &&
            r.push(a);
        }
        return r;
      }
      static getFocusableElement(e, t = "") {
        let o = this.findSingle(e, this.getFocusableSelectorString(t));
        if (o) {
          let r = getComputedStyle(o);
          if (
            this.isVisible(o) &&
            r.display != "none" &&
            r.visibility != "hidden"
          )
            return o;
        }
        return null;
      }
      static getFirstFocusableElement(e, t = "") {
        let o = this.getFocusableElements(e, t);
        return o.length > 0 ? o[0] : null;
      }
      static getLastFocusableElement(e, t) {
        let o = this.getFocusableElements(e, t);
        return o.length > 0 ? o[o.length - 1] : null;
      }
      static getNextFocusableElement(e, t = !1) {
        let o = n.getFocusableElements(e),
          r = 0;
        if (o && o.length > 0) {
          let a = o.indexOf(o[0].ownerDocument.activeElement);
          t
            ? a == -1 || a === 0
              ? (r = o.length - 1)
              : (r = a - 1)
            : a != -1 && a !== o.length - 1 && (r = a + 1);
        }
        return o[r];
      }
      static generateZIndex() {
        return (this.zindex = this.zindex || 999), ++this.zindex;
      }
      static getSelection() {
        return window.getSelection
          ? window.getSelection().toString()
          : document.getSelection
          ? document.getSelection().toString()
          : document.selection
          ? document.selection.createRange().text
          : null;
      }
      static getTargetElement(e, t) {
        if (!e) return null;
        switch (e) {
          case "document":
            return document;
          case "window":
            return window;
          case "@next":
            return t?.nextElementSibling;
          case "@prev":
            return t?.previousElementSibling;
          case "@parent":
            return t?.parentElement;
          case "@grandparent":
            return t?.parentElement.parentElement;
          default:
            let o = typeof e;
            if (o === "string") return document.querySelector(e);
            if (o === "object" && e.hasOwnProperty("nativeElement"))
              return this.isExist(e.nativeElement) ? e.nativeElement : void 0;
            let a = ((s) => !!(s && s.constructor && s.call && s.apply))(e)
              ? e()
              : e;
            return (a && a.nodeType === 9) || this.isExist(a) ? a : null;
        }
      }
      static isClient() {
        return !!(
          typeof window < "u" &&
          window.document &&
          window.document.createElement
        );
      }
      static getAttribute(e, t) {
        if (e) {
          let o = e.getAttribute(t);
          return isNaN(o)
            ? o === "true" || o === "false"
              ? o === "true"
              : o
            : +o;
        }
      }
      static calculateBodyScrollbarWidth() {
        return window.innerWidth - document.documentElement.offsetWidth;
      }
      static blockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.setProperty(
          "--scrollbar-width",
          this.calculateBodyScrollbarWidth() + "px"
        ),
          this.addClass(document.body, e);
      }
      static unblockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.removeProperty("--scrollbar-width"),
          this.removeClass(document.body, e);
      }
      static createElement(e, t = {}, ...o) {
        if (e) {
          let r = document.createElement(e);
          return this.setAttributes(r, t), r.append(...o), r;
        }
      }
      static setAttribute(e, t = "", o) {
        this.isElement(e) && o !== null && o !== void 0 && e.setAttribute(t, o);
      }
      static setAttributes(e, t = {}) {
        if (this.isElement(e)) {
          let o = (r, a) => {
            let s = e?.$attrs?.[r] ? [e?.$attrs?.[r]] : [];
            return [a].flat().reduce((c, p) => {
              if (p != null) {
                let f = typeof p;
                if (f === "string" || f === "number") c.push(p);
                else if (f === "object") {
                  let y = Array.isArray(p)
                    ? o(r, p)
                    : Object.entries(p).map(([x, C]) =>
                        r === "style" && (C || C === 0)
                          ? `${x
                              .replace(/([a-z])([A-Z])/g, "$1-$2")
                              .toLowerCase()}:${C}`
                          : C
                          ? x
                          : void 0
                      );
                  c = y.length ? c.concat(y.filter((x) => !!x)) : c;
                }
              }
              return c;
            }, s);
          };
          Object.entries(t).forEach(([r, a]) => {
            if (a != null) {
              let s = r.match(/^on(.+)/);
              s
                ? e.addEventListener(s[1].toLowerCase(), a)
                : r === "pBind"
                ? this.setAttributes(e, a)
                : ((a =
                    r === "class"
                      ? [...new Set(o("class", a))].join(" ").trim()
                      : r === "style"
                      ? o("style", a).join(";").trim()
                      : a),
                  (e.$attrs = e.$attrs || {}) && (e.$attrs[r] = a),
                  e.setAttribute(r, a));
            }
          });
        }
      }
      static isFocusableElement(e, t = "") {
        return this.isElement(e)
          ? e.matches(`button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t}`)
          : !1;
      }
    }
    return n;
  })(),
  pc = class {
    element;
    listener;
    scrollableParents;
    constructor(i, e = () => {}) {
      (this.element = i), (this.listener = e);
    }
    bindScrollListener() {
      this.scrollableParents = me.getScrollableParents(this.element);
      for (let i = 0; i < this.scrollableParents.length; i++)
        this.scrollableParents[i].addEventListener("scroll", this.listener);
    }
    unbindScrollListener() {
      if (this.scrollableParents)
        for (let i = 0; i < this.scrollableParents.length; i++)
          this.scrollableParents[i].removeEventListener(
            "scroll",
            this.listener
          );
    }
    destroy() {
      this.unbindScrollListener(),
        (this.element = null),
        (this.listener = null),
        (this.scrollableParents = null);
    }
  };
var mc = (() => {
    class n {
      autofocus = !1;
      focused = !1;
      platformId = ne(cn);
      document = ne(ze);
      host = ne(Ne);
      ngAfterContentChecked() {
        this.autofocus === !1
          ? this.host.nativeElement.removeAttribute("autofocus")
          : this.host.nativeElement.setAttribute("autofocus", !0),
          this.focused || this.autoFocus();
      }
      ngAfterViewChecked() {
        this.focused || this.autoFocus();
      }
      autoFocus() {
        On(this.platformId) &&
          this.autofocus &&
          setTimeout(() => {
            let e = me.getFocusableElements(this.host?.nativeElement);
            e.length === 0 && this.host.nativeElement.focus(),
              e.length > 0 && e[0].focus(),
              (this.focused = !0);
          });
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵdir = Pe({
        type: n,
        selectors: [["", "pAutoFocus", ""]],
        hostAttrs: [1, "p-element"],
        inputs: { autofocus: [2, "autofocus", "autofocus", Ee] },
        standalone: !0,
        features: [At],
      });
    }
    return n;
  })(),
  S0 = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = De({ type: n });
      static ɵinj = we({});
    }
    return n;
  })();
var GM = ["*"],
  gi = (() => {
    class n {
      label;
      spin = !1;
      styleClass;
      role;
      ariaLabel;
      ariaHidden;
      ngOnInit() {
        this.getAttributes();
      }
      getAttributes() {
        let e = $i.isEmpty(this.label);
        (this.role = e ? void 0 : "img"),
          (this.ariaLabel = e ? void 0 : this.label),
          (this.ariaHidden = e);
      }
      getClassNames() {
        return `p-icon ${this.styleClass ? this.styleClass + " " : ""}${
          this.spin ? "p-icon-spin" : ""
        }`;
      }
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵcmp = le({
        type: n,
        selectors: [["ng-component"]],
        hostAttrs: [1, "p-element", "p-icon-wrapper"],
        inputs: {
          label: "label",
          spin: [2, "spin", "spin", Ee],
          styleClass: "styleClass",
        },
        standalone: !0,
        features: [At, he],
        ngContentSelectors: GM,
        decls: 1,
        vars: 0,
        template: function (t, o) {
          t & 1 && (Ut(), kt(0));
        },
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })();
var M0 = (() => {
  class n extends gi {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + aa() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = gt(n)))(o || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["SpinnerIcon"]],
      standalone: !0,
      features: [qe, he],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (t, o) {
        t & 1 &&
          (pt(),
          u(0, "svg", 0)(1, "g"),
          W(2, "path", 1),
          d(),
          u(3, "defs")(4, "clipPath", 2),
          W(5, "rect", 3),
          d()()()),
          t & 2 &&
            (Ve(o.getClassNames()),
            de("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ),
            g(),
            de("clip-path", o.pathId),
            g(3),
            S("id", o.pathId));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var fc = (() => {
    class n {
      document;
      platformId;
      renderer;
      el;
      zone;
      config;
      constructor(e, t, o, r, a, s) {
        (this.document = e),
          (this.platformId = t),
          (this.renderer = o),
          (this.el = r),
          (this.zone = a),
          (this.config = s);
      }
      animationListener;
      mouseDownListener;
      timeout;
      ngAfterViewInit() {
        On(this.platformId) &&
          this.config &&
          this.config.ripple &&
          this.zone.runOutsideAngular(() => {
            this.create(),
              (this.mouseDownListener = this.renderer.listen(
                this.el.nativeElement,
                "mousedown",
                this.onMouseDown.bind(this)
              ));
          });
      }
      onMouseDown(e) {
        let t = this.getInk();
        if (
          !t ||
          this.document.defaultView?.getComputedStyle(t, null).display ===
            "none"
        )
          return;
        if (
          (me.removeClass(t, "p-ink-active"),
          !me.getHeight(t) && !me.getWidth(t))
        ) {
          let s = Math.max(
            me.getOuterWidth(this.el.nativeElement),
            me.getOuterHeight(this.el.nativeElement)
          );
          (t.style.height = s + "px"), (t.style.width = s + "px");
        }
        let o = me.getOffset(this.el.nativeElement),
          r =
            e.pageX -
            o.left +
            this.document.body.scrollTop -
            me.getWidth(t) / 2,
          a =
            e.pageY -
            o.top +
            this.document.body.scrollLeft -
            me.getHeight(t) / 2;
        this.renderer.setStyle(t, "top", a + "px"),
          this.renderer.setStyle(t, "left", r + "px"),
          me.addClass(t, "p-ink-active"),
          (this.timeout = setTimeout(() => {
            let s = this.getInk();
            s && me.removeClass(s, "p-ink-active");
          }, 401));
      }
      getInk() {
        let e = this.el.nativeElement.children;
        for (let t = 0; t < e.length; t++)
          if (
            typeof e[t].className == "string" &&
            e[t].className.indexOf("p-ink") !== -1
          )
            return e[t];
        return null;
      }
      resetInk() {
        let e = this.getInk();
        e && me.removeClass(e, "p-ink-active");
      }
      onAnimationEnd(e) {
        this.timeout && clearTimeout(this.timeout),
          me.removeClass(e.currentTarget, "p-ink-active");
      }
      create() {
        let e = this.renderer.createElement("span");
        this.renderer.addClass(e, "p-ink"),
          this.renderer.appendChild(this.el.nativeElement, e),
          this.renderer.setAttribute(e, "aria-hidden", "true"),
          this.renderer.setAttribute(e, "role", "presentation"),
          this.animationListener ||
            (this.animationListener = this.renderer.listen(
              e,
              "animationend",
              this.onAnimationEnd.bind(this)
            ));
      }
      remove() {
        let e = this.getInk();
        e &&
          (this.mouseDownListener && this.mouseDownListener(),
          this.animationListener && this.animationListener(),
          (this.mouseDownListener = null),
          (this.animationListener = null),
          me.removeElement(e));
      }
      ngOnDestroy() {
        this.config && this.config.ripple && this.remove();
      }
      static ɵfac = function (t) {
        return new (t || n)(j(ze), j(cn), j(yi), j(Ne), j(He), j(hc, 8));
      };
      static ɵdir = Pe({
        type: n,
        selectors: [["", "pRipple", ""]],
        hostAttrs: [1, "p-ripple", "p-element"],
        standalone: !0,
      });
    }
    return n;
  })(),
  E0 = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = De({ type: n });
      static ɵinj = we({});
    }
    return n;
  })();
var qM = ["*"],
  T0 = (n) => ({ class: n });
function KM(n, i) {
  n & 1 && hn(0);
}
function QM(n, i) {
  if ((n & 1 && W(0, "span", 8), n & 2)) {
    let e = E(3);
    S("ngClass", e.iconClass()),
      de("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function XM(n, i) {
  if ((n & 1 && W(0, "SpinnerIcon", 9), n & 2)) {
    let e = E(3);
    S("styleClass", e.spinnerIconClass())("spin", !0),
      de("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function ZM(n, i) {
  if (
    (n & 1 &&
      ($e(0), F(1, QM, 1, 3, "span", 6)(2, XM, 1, 4, "SpinnerIcon", 7), Ge()),
    n & 2)
  ) {
    let e = E(2);
    g(), S("ngIf", e.loadingIcon), g(), S("ngIf", !e.loadingIcon);
  }
}
function JM(n, i) {}
function e2(n, i) {
  if ((n & 1 && F(0, JM, 0, 0, "ng-template", 10), n & 2)) {
    let e = E(2);
    S("ngIf", e.loadingIconTemplate);
  }
}
function t2(n, i) {
  if (
    (n & 1 &&
      ($e(0), F(1, ZM, 3, 2, "ng-container", 2)(2, e2, 1, 1, null, 5), Ge()),
    n & 2)
  ) {
    let e = E();
    g(),
      S("ngIf", !e.loadingIconTemplate),
      g(),
      S("ngTemplateOutlet", e.loadingIconTemplate)(
        "ngTemplateOutletContext",
        ye(3, T0, e.iconClass())
      );
  }
}
function i2(n, i) {
  if ((n & 1 && W(0, "span", 8), n & 2)) {
    let e = E(2);
    S("ngClass", e.iconClass()), de("data-pc-section", "icon");
  }
}
function n2(n, i) {}
function o2(n, i) {
  if ((n & 1 && F(0, n2, 0, 0, "ng-template", 10), n & 2)) {
    let e = E(2);
    S("ngIf", !e.icon && e.iconTemplate);
  }
}
function r2(n, i) {
  if (
    (n & 1 && ($e(0), F(1, i2, 1, 2, "span", 6)(2, o2, 1, 1, null, 5), Ge()),
    n & 2)
  ) {
    let e = E();
    g(),
      S("ngIf", e.icon && !e.iconTemplate),
      g(),
      S("ngTemplateOutlet", e.iconTemplate)(
        "ngTemplateOutletContext",
        ye(3, T0, e.iconClass())
      );
  }
}
function a2(n, i) {
  if ((n & 1 && (u(0, "span", 11), m(1), d()), n & 2)) {
    let e = E();
    de("aria-hidden", e.icon && !e.label)("data-pc-section", "label"),
      g(),
      B(e.label);
  }
}
function s2(n, i) {
  if ((n & 1 && (u(0, "span", 8), m(1), d()), n & 2)) {
    let e = E();
    Ve(e.badgeClass),
      S("ngClass", e.badgeStyleClass()),
      de("data-pc-section", "badge"),
      g(),
      B(e.badge);
  }
}
var Ao = {
    button: "p-button",
    component: "p-component",
    iconOnly: "p-button-icon-only",
    disabled: "p-disabled",
    loading: "p-button-loading",
    labelOnly: "p-button-loading-label-only",
  },
  k0 = (() => {
    class n {
      el;
      document;
      iconPos = "left";
      loadingIcon;
      get label() {
        return this._label;
      }
      set label(e) {
        (this._label = e),
          this.initialized &&
            (this.updateLabel(), this.updateIcon(), this.setStyleClass());
      }
      get icon() {
        return this._icon;
      }
      set icon(e) {
        (this._icon = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      get loading() {
        return this._loading;
      }
      set loading(e) {
        (this._loading = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      severity;
      raised = !1;
      rounded = !1;
      text = !1;
      outlined = !1;
      size = null;
      plain = !1;
      _label;
      _icon;
      _loading = !1;
      initialized;
      get htmlElement() {
        return this.el.nativeElement;
      }
      _internalClasses = Object.values(Ao);
      constructor(e, t) {
        (this.el = e), (this.document = t);
      }
      ngAfterViewInit() {
        me.addMultipleClasses(this.htmlElement, this.getStyleClass().join(" ")),
          this.createIcon(),
          this.createLabel(),
          (this.initialized = !0);
      }
      getStyleClass() {
        let e = [Ao.button, Ao.component];
        return (
          this.icon &&
            !this.label &&
            $i.isEmpty(this.htmlElement.textContent) &&
            e.push(Ao.iconOnly),
          this.loading &&
            (e.push(Ao.disabled, Ao.loading),
            !this.icon && this.label && e.push(Ao.labelOnly),
            this.icon &&
              !this.label &&
              !$i.isEmpty(this.htmlElement.textContent) &&
              e.push(Ao.iconOnly)),
          this.text && e.push("p-button-text"),
          this.severity && e.push(`p-button-${this.severity}`),
          this.plain && e.push("p-button-plain"),
          this.raised && e.push("p-button-raised"),
          this.size && e.push(`p-button-${this.size}`),
          this.outlined && e.push("p-button-outlined"),
          this.rounded && e.push("p-button-rounded"),
          this.size === "small" && e.push("p-button-sm"),
          this.size === "large" && e.push("p-button-lg"),
          e
        );
      }
      setStyleClass() {
        let e = this.getStyleClass();
        this.htmlElement.classList.remove(...this._internalClasses),
          this.htmlElement.classList.add(...e);
      }
      createLabel() {
        if (!me.findSingle(this.htmlElement, ".p-button-label") && this.label) {
          let t = this.document.createElement("span");
          this.icon && !this.label && t.setAttribute("aria-hidden", "true"),
            (t.className = "p-button-label"),
            t.appendChild(this.document.createTextNode(this.label)),
            this.htmlElement.appendChild(t);
        }
      }
      createIcon() {
        if (
          !me.findSingle(this.htmlElement, ".p-button-icon") &&
          (this.icon || this.loading)
        ) {
          let t = this.document.createElement("span");
          (t.className = "p-button-icon"),
            t.setAttribute("aria-hidden", "true");
          let o = this.label ? "p-button-icon-" + this.iconPos : null;
          o && me.addClass(t, o);
          let r = this.getIconClass();
          r && me.addMultipleClasses(t, r),
            this.htmlElement.insertBefore(t, this.htmlElement.firstChild);
        }
      }
      updateLabel() {
        let e = me.findSingle(this.htmlElement, ".p-button-label");
        if (!this.label) {
          e && this.htmlElement.removeChild(e);
          return;
        }
        e ? (e.textContent = this.label) : this.createLabel();
      }
      updateIcon() {
        let e = me.findSingle(this.htmlElement, ".p-button-icon"),
          t = me.findSingle(this.htmlElement, ".p-button-label");
        e
          ? this.iconPos
            ? (e.className =
                "p-button-icon " +
                (t ? "p-button-icon-" + this.iconPos : "") +
                " " +
                this.getIconClass())
            : (e.className = "p-button-icon " + this.getIconClass())
          : this.createIcon();
      }
      getIconClass() {
        return this.loading
          ? "p-button-loading-icon pi-spin " +
              (this.loadingIcon ?? "pi pi-spinner")
          : this.icon || "p-hidden";
      }
      ngOnDestroy() {
        this.initialized = !1;
      }
      static ɵfac = function (t) {
        return new (t || n)(j(Ne), j(ze));
      };
      static ɵdir = Pe({
        type: n,
        selectors: [["", "pButton", ""]],
        hostAttrs: [1, "p-element"],
        inputs: {
          iconPos: "iconPos",
          loadingIcon: "loadingIcon",
          label: "label",
          icon: "icon",
          loading: "loading",
          severity: "severity",
          raised: [2, "raised", "raised", Ee],
          rounded: [2, "rounded", "rounded", Ee],
          text: [2, "text", "text", Ee],
          outlined: [2, "outlined", "outlined", Ee],
          size: "size",
          plain: [2, "plain", "plain", Ee],
        },
        standalone: !0,
        features: [At],
      });
    }
    return n;
  })(),
  l2 = (() => {
    class n {
      el;
      type = "button";
      iconPos = "left";
      icon;
      badge;
      label;
      disabled;
      loading = !1;
      loadingIcon;
      raised = !1;
      rounded = !1;
      text = !1;
      plain = !1;
      severity;
      outlined = !1;
      link = !1;
      tabindex;
      size;
      style;
      styleClass;
      badgeClass;
      ariaLabel;
      autofocus;
      onClick = new Se();
      onFocus = new Se();
      onBlur = new Se();
      contentTemplate;
      loadingIconTemplate;
      iconTemplate;
      templates;
      constructor(e) {
        this.el = e;
      }
      spinnerIconClass() {
        return Object.entries(this.iconClass())
          .filter(([, e]) => !!e)
          .reduce((e, [t]) => e + ` ${t}`, "p-button-loading-icon");
      }
      iconClass() {
        let e = {
          "p-button-icon": !0,
          "p-button-icon-left": this.iconPos === "left" && this.label,
          "p-button-icon-right": this.iconPos === "right" && this.label,
          "p-button-icon-top": this.iconPos === "top" && this.label,
          "p-button-icon-bottom": this.iconPos === "bottom" && this.label,
        };
        return (
          this.loading
            ? (e[`p-button-loading-icon pi-spin ${this.loadingIcon ?? ""}`] =
                !0)
            : this.icon && (e[this.icon] = !0),
          e
        );
      }
      get buttonClass() {
        return {
          "p-button p-component": !0,
          "p-button-icon-only":
            (this.icon ||
              this.iconTemplate ||
              this.loadingIcon ||
              this.loadingIconTemplate) &&
            !this.label,
          "p-button-vertical":
            (this.iconPos === "top" || this.iconPos === "bottom") && this.label,
          "p-button-loading": this.loading,
          "p-button-loading-label-only":
            this.loading &&
            !this.icon &&
            this.label &&
            !this.loadingIcon &&
            this.iconPos === "left",
          "p-button-link": this.link,
          [`p-button-${this.severity}`]: this.severity,
          "p-button-raised": this.raised,
          "p-button-rounded": this.rounded,
          "p-button-text": this.text,
          "p-button-outlined": this.outlined,
          "p-button-sm": this.size === "small",
          "p-button-lg": this.size === "large",
          "p-button-plain": this.plain,
          [`${this.styleClass}`]: this.styleClass,
        };
      }
      ngAfterContentInit() {
        this.templates?.forEach((e) => {
          switch (e.getType()) {
            case "content":
              this.contentTemplate = e.template;
              break;
            case "icon":
              this.iconTemplate = e.template;
              break;
            case "loadingicon":
              this.loadingIconTemplate = e.template;
              break;
            default:
              this.contentTemplate = e.template;
              break;
          }
        });
      }
      badgeStyleClass() {
        return {
          "p-badge p-component": !0,
          "p-badge-no-gutter": this.badge && String(this.badge).length === 1,
        };
      }
      focus() {
        this.el.nativeElement.firstChild.focus();
      }
      static ɵfac = function (t) {
        return new (t || n)(j(Ne));
      };
      static ɵcmp = le({
        type: n,
        selectors: [["p-button"]],
        contentQueries: function (t, o, r) {
          if ((t & 1 && Tn(r, hs, 4), t & 2)) {
            let a;
            _t((a = bt())) && (o.templates = a);
          }
        },
        hostAttrs: [1, "p-element"],
        hostVars: 2,
        hostBindings: function (t, o) {
          t & 2 && Ce("p-disabled", o.disabled);
        },
        inputs: {
          type: "type",
          iconPos: "iconPos",
          icon: "icon",
          badge: "badge",
          label: "label",
          disabled: [2, "disabled", "disabled", Ee],
          loading: [2, "loading", "loading", Ee],
          loadingIcon: "loadingIcon",
          raised: [2, "raised", "raised", Ee],
          rounded: [2, "rounded", "rounded", Ee],
          text: [2, "text", "text", Ee],
          plain: [2, "plain", "plain", Ee],
          severity: "severity",
          outlined: [2, "outlined", "outlined", Ee],
          link: [2, "link", "link", Ee],
          tabindex: [2, "tabindex", "tabindex", Ki],
          size: "size",
          style: "style",
          styleClass: "styleClass",
          badgeClass: "badgeClass",
          ariaLabel: "ariaLabel",
          autofocus: [2, "autofocus", "autofocus", Ee],
        },
        outputs: { onClick: "onClick", onFocus: "onFocus", onBlur: "onBlur" },
        standalone: !0,
        features: [At, he],
        ngContentSelectors: qM,
        decls: 7,
        vars: 14,
        consts: [
          [
            "pRipple",
            "",
            "pAutoFocus",
            "",
            3,
            "click",
            "focus",
            "blur",
            "ngStyle",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngTemplateOutlet"],
          [4, "ngIf"],
          ["class", "p-button-label", 4, "ngIf"],
          [3, "ngClass", "class", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "ngClass", 4, "ngIf"],
          [3, "styleClass", "spin", 4, "ngIf"],
          [3, "ngClass"],
          [3, "styleClass", "spin"],
          [3, "ngIf"],
          [1, "p-button-label"],
        ],
        template: function (t, o) {
          t & 1 &&
            (Ut(),
            u(0, "button", 0),
            z("click", function (a) {
              return o.onClick.emit(a);
            })("focus", function (a) {
              return o.onFocus.emit(a);
            })("blur", function (a) {
              return o.onBlur.emit(a);
            }),
            kt(1),
            F(2, KM, 1, 0, "ng-container", 1)(3, t2, 3, 5, "ng-container", 2)(
              4,
              r2,
              3,
              5,
              "ng-container",
              2
            )(5, a2, 2, 3, "span", 3)(6, s2, 2, 5, "span", 4),
            d()),
            t & 2 &&
              (S("ngStyle", o.style)("disabled", o.disabled || o.loading)(
                "ngClass",
                o.buttonClass
              )("autofocus", o.autofocus),
              de("type", o.type)("aria-label", o.ariaLabel)(
                "data-pc-name",
                "button"
              )("data-pc-section", "root")("tabindex", o.tabindex),
              g(2),
              S("ngTemplateOutlet", o.contentTemplate),
              g(),
              S("ngIf", o.loading),
              g(),
              S("ngIf", !o.loading),
              g(),
              S("ngIf", !o.contentTemplate && o.label),
              g(),
              S("ngIf", !o.contentTemplate && o.badge));
        },
        dependencies: [Je, Er, Ls, Vt, fc, mc, M0],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })(),
  Kh = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = De({ type: n });
      static ɵinj = we({ imports: [l2, gn] });
    }
    return n;
  })();
var Qh = (() => {
  class n extends gi {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = gt(n)))(o || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["ChevronLeftIcon"]],
      standalone: !0,
      features: [qe, he],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M9.61296 13C9.50997 13.0005 9.40792 12.9804 9.3128 12.9409C9.21767 12.9014 9.13139 12.8433 9.05902 12.7701L3.83313 7.54416C3.68634 7.39718 3.60388 7.19795 3.60388 6.99022C3.60388 6.78249 3.68634 6.58325 3.83313 6.43628L9.05902 1.21039C9.20762 1.07192 9.40416 0.996539 9.60724 1.00012C9.81032 1.00371 10.0041 1.08597 10.1477 1.22959C10.2913 1.37322 10.3736 1.56698 10.3772 1.77005C10.3808 1.97313 10.3054 2.16968 10.1669 2.31827L5.49496 6.99022L10.1669 11.6622C10.3137 11.8091 10.3962 12.0084 10.3962 12.2161C10.3962 12.4238 10.3137 12.6231 10.1669 12.7701C10.0945 12.8433 10.0083 12.9014 9.91313 12.9409C9.81801 12.9804 9.71596 13.0005 9.61296 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, o) {
        t & 1 && (pt(), u(0, "svg", 0), W(1, "path", 1), d()),
          t & 2 &&
            (Ve(o.getClassNames()),
            de("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var ps = (() => {
  class n extends gi {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = gt(n)))(o || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["ChevronRightIcon"]],
      standalone: !0,
      features: [qe, he],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M4.38708 13C4.28408 13.0005 4.18203 12.9804 4.08691 12.9409C3.99178 12.9014 3.9055 12.8433 3.83313 12.7701C3.68634 12.6231 3.60388 12.4238 3.60388 12.2161C3.60388 12.0084 3.68634 11.8091 3.83313 11.6622L8.50507 6.99022L3.83313 2.31827C3.69467 2.16968 3.61928 1.97313 3.62287 1.77005C3.62645 1.56698 3.70872 1.37322 3.85234 1.22959C3.99596 1.08597 4.18972 1.00371 4.3928 1.00012C4.59588 0.996539 4.79242 1.07192 4.94102 1.21039L10.1669 6.43628C10.3137 6.58325 10.3962 6.78249 10.3962 6.99022C10.3962 7.19795 10.3137 7.39718 10.1669 7.54416L4.94102 12.7701C4.86865 12.8433 4.78237 12.9014 4.68724 12.9409C4.59212 12.9804 4.49007 13.0005 4.38708 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, o) {
        t & 1 && (pt(), u(0, "svg", 0), W(1, "path", 1), d()),
          t & 2 &&
            (Ve(o.getClassNames()),
            de("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Xh = (() => {
  class n extends gi {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = gt(n)))(o || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["ChevronUpIcon"]],
      standalone: !0,
      features: [qe, he],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M12.2097 10.4113C12.1057 10.4118 12.0027 10.3915 11.9067 10.3516C11.8107 10.3118 11.7237 10.2532 11.6506 10.1792L6.93602 5.46461L2.22139 10.1476C2.07272 10.244 1.89599 10.2877 1.71953 10.2717C1.54307 10.2556 1.3771 10.1808 1.24822 10.0593C1.11933 9.93766 1.035 9.77633 1.00874 9.6011C0.982477 9.42587 1.0158 9.2469 1.10338 9.09287L6.37701 3.81923C6.52533 3.6711 6.72639 3.58789 6.93602 3.58789C7.14565 3.58789 7.3467 3.6711 7.49502 3.81923L12.7687 9.09287C12.9168 9.24119 13 9.44225 13 9.65187C13 9.8615 12.9168 10.0626 12.7687 10.2109C12.616 10.3487 12.4151 10.4207 12.2097 10.4113Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, o) {
        t & 1 && (pt(), u(0, "svg", 0), W(1, "path", 1), d()),
          t & 2 &&
            (Ve(o.getClassNames()),
            de("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Zh = (() => {
  class n extends gi {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = gt(n)))(o || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["ChevronDownIcon"]],
      standalone: !0,
      features: [qe, he],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, o) {
        t & 1 && (pt(), u(0, "svg", 0), W(1, "path", 1), d()),
          t & 2 &&
            (Ve(o.getClassNames()),
            de("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Jh = (() => {
  class n extends gi {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = gt(n)))(o || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["TimesIcon"]],
      standalone: !0,
      features: [qe, he],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, o) {
        t & 1 && (pt(), u(0, "svg", 0), W(1, "path", 1), d()),
          t & 2 &&
            (Ve(o.getClassNames()),
            de("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var ep = (() => {
  class n extends gi {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = gt(n)))(o || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["CalendarIcon"]],
      standalone: !0,
      features: [qe, he],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M10.7838 1.51351H9.83783V0.567568C9.83783 0.417039 9.77804 0.272676 9.6716 0.166237C9.56516 0.0597971 9.42079 0 9.27027 0C9.11974 0 8.97538 0.0597971 8.86894 0.166237C8.7625 0.272676 8.7027 0.417039 8.7027 0.567568V1.51351H5.29729V0.567568C5.29729 0.417039 5.2375 0.272676 5.13106 0.166237C5.02462 0.0597971 4.88025 0 4.72973 0C4.5792 0 4.43484 0.0597971 4.3284 0.166237C4.22196 0.272676 4.16216 0.417039 4.16216 0.567568V1.51351H3.21621C2.66428 1.51351 2.13494 1.73277 1.74467 2.12305C1.35439 2.51333 1.13513 3.04266 1.13513 3.59459V11.9189C1.13513 12.4709 1.35439 13.0002 1.74467 13.3905C2.13494 13.7807 2.66428 14 3.21621 14H10.7838C11.3357 14 11.865 13.7807 12.2553 13.3905C12.6456 13.0002 12.8649 12.4709 12.8649 11.9189V3.59459C12.8649 3.04266 12.6456 2.51333 12.2553 2.12305C11.865 1.73277 11.3357 1.51351 10.7838 1.51351ZM3.21621 2.64865H4.16216V3.59459C4.16216 3.74512 4.22196 3.88949 4.3284 3.99593C4.43484 4.10237 4.5792 4.16216 4.72973 4.16216C4.88025 4.16216 5.02462 4.10237 5.13106 3.99593C5.2375 3.88949 5.29729 3.74512 5.29729 3.59459V2.64865H8.7027V3.59459C8.7027 3.74512 8.7625 3.88949 8.86894 3.99593C8.97538 4.10237 9.11974 4.16216 9.27027 4.16216C9.42079 4.16216 9.56516 4.10237 9.6716 3.99593C9.77804 3.88949 9.83783 3.74512 9.83783 3.59459V2.64865H10.7838C11.0347 2.64865 11.2753 2.74831 11.4527 2.92571C11.6301 3.10311 11.7297 3.34371 11.7297 3.59459V5.67568H2.27027V3.59459C2.27027 3.34371 2.36993 3.10311 2.54733 2.92571C2.72473 2.74831 2.96533 2.64865 3.21621 2.64865ZM10.7838 12.8649H3.21621C2.96533 12.8649 2.72473 12.7652 2.54733 12.5878C2.36993 12.4104 2.27027 12.1698 2.27027 11.9189V6.81081H11.7297V11.9189C11.7297 12.1698 11.6301 12.4104 11.4527 12.5878C11.2753 12.7652 11.0347 12.8649 10.7838 12.8649Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, o) {
        t & 1 && (pt(), u(0, "svg", 0), W(1, "path", 1), d()),
          t & 2 &&
            (Ve(o.getClassNames()),
            de("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var d2 = ["container"],
  u2 = ["inputfield"],
  h2 = ["contentWrapper"],
  p2 = [[["p-header"]], [["p-footer"]]],
  m2 = ["p-header", "p-footer"],
  f2 = (n, i, e, t, o) => ({
    "p-calendar": !0,
    "p-input-icon-right": n,
    "p-calendar-w-btn": i,
    "p-calendar-timeonly": e,
    "p-calendar-disabled": t,
    "p-focus": o,
  }),
  g2 = (n) => ({ clickCallBack: n }),
  _2 = (n) => ({ "p-datepicker-icon": n }),
  b2 = (n, i, e, t, o, r) => ({
    "p-datepicker p-component": !0,
    "p-datepicker-inline": n,
    "p-disabled": i,
    "p-datepicker-timeonly": e,
    "p-datepicker-multiple-month": t,
    "p-datepicker-monthpicker": o,
    "p-datepicker-touch-ui": r,
  }),
  O0 = (n, i) => ({ showTransitionParams: n, hideTransitionParams: i }),
  v2 = (n) => ({ value: "visibleTouchUI", params: n }),
  y2 = (n) => ({ value: "visible", params: n }),
  tp = (n) => ({ $implicit: n }),
  x2 = (n, i) => ({ "p-datepicker-other-month": n, "p-datepicker-today": i }),
  C2 = (n, i) => ({
    "p-highlight p-datepicker-current-day": n,
    "p-disabled": i,
  }),
  P0 = (n, i) => ({ "p-highlight": n, "p-disabled": i }),
  I0 = (n) => [n];
function w2(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "TimesIcon", 11),
      z("click", function () {
        N(e);
        let o = E(3);
        return V(o.clear());
      }),
      d();
  }
  n & 2 && S("styleClass", "p-calendar-clear-icon");
}
function D2(n, i) {}
function S2(n, i) {
  n & 1 && F(0, D2, 0, 0, "ng-template");
}
function M2(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "span", 12),
      z("click", function () {
        N(e);
        let o = E(3);
        return V(o.clear());
      }),
      F(1, S2, 1, 0, null, 13),
      d();
  }
  if (n & 2) {
    let e = E(3);
    g(), S("ngTemplateOutlet", e.clearIconTemplate);
  }
}
function E2(n, i) {
  if (
    (n & 1 &&
      ($e(0), F(1, w2, 1, 1, "TimesIcon", 9)(2, M2, 2, 1, "span", 10), Ge()),
    n & 2)
  ) {
    let e = E(2);
    g(), S("ngIf", !e.clearIconTemplate), g(), S("ngIf", e.clearIconTemplate);
  }
}
function T2(n, i) {
  if ((n & 1 && W(0, "span", 16), n & 2)) {
    let e = E(3);
    S("ngClass", e.icon);
  }
}
function k2(n, i) {
  n & 1 && W(0, "CalendarIcon");
}
function O2(n, i) {}
function I2(n, i) {
  n & 1 && F(0, O2, 0, 0, "ng-template");
}
function P2(n, i) {
  if (
    (n & 1 &&
      ($e(0), F(1, k2, 1, 0, "CalendarIcon", 7)(2, I2, 1, 0, null, 13), Ge()),
    n & 2)
  ) {
    let e = E(3);
    g(),
      S("ngIf", !e.triggerIconTemplate),
      g(),
      S("ngTemplateOutlet", e.triggerIconTemplate);
  }
}
function A2(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 14),
      z("click", function (o) {
        N(e), E();
        let r = Dt(1),
          a = E();
        return V(a.onButtonClick(o, r));
      }),
      F(1, T2, 1, 1, "span", 15)(2, P2, 3, 2, "ng-container", 7),
      d();
  }
  if (n & 2) {
    let e,
      t = E(2);
    S("disabled", t.disabled),
      de("aria-label", t.iconButtonAriaLabel)(
        "aria-expanded",
        (e = t.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", t.overlayVisible ? t.panelId : null),
      g(),
      S("ngIf", t.icon),
      g(),
      S("ngIf", !t.icon);
  }
}
function R2(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "CalendarIcon", 19),
      z("click", function (o) {
        N(e);
        let r = E(3);
        return V(r.onButtonClick(o));
      }),
      d();
  }
  if (n & 2) {
    let e = E(3);
    S("ngClass", ye(1, _2, e.showOnFocus));
  }
}
function F2(n, i) {
  n & 1 && hn(0);
}
function N2(n, i) {
  if (
    (n & 1 &&
      ($e(0),
      F(1, R2, 1, 3, "CalendarIcon", 17)(2, F2, 1, 0, "ng-container", 18),
      Ge()),
    n & 2)
  ) {
    let e = E(2);
    g(),
      S("ngIf", !e.inputIconTemplate),
      g(),
      S("ngTemplateOutlet", e.inputIconTemplate)(
        "ngTemplateOutletContext",
        ye(3, g2, e.onButtonClick.bind(e))
      );
  }
}
function V2(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "input", 6, 1),
      z("focus", function (o) {
        N(e);
        let r = E();
        return V(r.onInputFocus(o));
      })("keydown", function (o) {
        N(e);
        let r = E();
        return V(r.onInputKeydown(o));
      })("click", function () {
        N(e);
        let o = E();
        return V(o.onInputClick());
      })("blur", function (o) {
        N(e);
        let r = E();
        return V(r.onInputBlur(o));
      })("input", function (o) {
        N(e);
        let r = E();
        return V(r.onUserInput(o));
      }),
      d(),
      F(2, E2, 3, 2, "ng-container", 7)(3, A2, 3, 6, "button", 8)(
        4,
        N2,
        3,
        5,
        "ng-container",
        7
      );
  }
  if (n & 2) {
    let e,
      t = E();
    Ve(t.inputStyleClass),
      S("value", t.inputFieldValue)("readonly", t.readonlyInput)(
        "ngStyle",
        t.inputStyle
      )("placeholder", t.placeholder || "")("disabled", t.disabled)(
        "ngClass",
        t.inputClass
      )("autofocus", t.autofocus),
      de("id", t.inputId)("name", t.name)("required", t.required)(
        "aria-required",
        t.required
      )(
        "aria-expanded",
        (e = t.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", t.overlayVisible ? t.panelId : null)(
        "aria-labelledby",
        t.ariaLabelledBy
      )("aria-label", t.ariaLabel)("tabindex", t.tabindex)(
        "inputmode",
        t.touchUI ? "off" : null
      ),
      g(2),
      S("ngIf", t.showClear && !t.disabled && t.value != null),
      g(),
      S("ngIf", t.showIcon && t.iconDisplay === "button"),
      g(),
      S("ngIf", t.iconDisplay === "input" && t.showIcon);
  }
}
function L2(n, i) {
  n & 1 && hn(0);
}
function B2(n, i) {
  n & 1 && W(0, "ChevronLeftIcon", 40),
    n & 2 && S("styleClass", "p-datepicker-prev-icon");
}
function H2(n, i) {}
function j2(n, i) {
  n & 1 && F(0, H2, 0, 0, "ng-template");
}
function z2(n, i) {
  if ((n & 1 && (u(0, "span", 41), F(1, j2, 1, 0, null, 13), d()), n & 2)) {
    let e = E(5);
    g(), S("ngTemplateOutlet", e.previousIconTemplate);
  }
}
function U2(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 38),
      z("keydown", function (o) {
        N(e);
        let r = E(4);
        return V(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        N(e);
        let r = E(4);
        return V(r.onPrevButtonClick(o));
      }),
      F(1, B2, 1, 1, "ChevronLeftIcon", 35)(2, z2, 2, 1, "span", 39),
      d();
  }
  if (n & 2) {
    let e = E(4);
    de("aria-label", e.prevIconAriaLabel),
      g(),
      S("ngIf", !e.previousIconTemplate),
      g(),
      S("ngIf", e.previousIconTemplate);
  }
}
function W2(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 42),
      z("click", function (o) {
        N(e);
        let r = E(4);
        return V(r.switchToMonthView(o));
      })("keydown", function (o) {
        N(e);
        let r = E(4);
        return V(r.onContainerButtonKeydown(o));
      }),
      m(1),
      d();
  }
  if (n & 2) {
    let e = E().$implicit,
      t = E(3);
    S("disabled", t.switchViewButtonDisabled()),
      de("aria-label", t.getTranslation("chooseMonth")),
      g(),
      oe(" ", t.getMonthName(e.month), " ");
  }
}
function $2(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 43),
      z("click", function (o) {
        N(e);
        let r = E(4);
        return V(r.switchToYearView(o));
      })("keydown", function (o) {
        N(e);
        let r = E(4);
        return V(r.onContainerButtonKeydown(o));
      }),
      m(1),
      d();
  }
  if (n & 2) {
    let e = E().$implicit,
      t = E(3);
    S("disabled", t.switchViewButtonDisabled()),
      de("aria-label", t.getTranslation("chooseYear")),
      g(),
      oe(" ", t.getYear(e), " ");
  }
}
function G2(n, i) {
  if ((n & 1 && ($e(0), m(1), Ge()), n & 2)) {
    let e = E(5);
    g(),
      wa(
        "",
        e.yearPickerValues()[0],
        " - ",
        e.yearPickerValues()[e.yearPickerValues().length - 1],
        ""
      );
  }
}
function Y2(n, i) {
  n & 1 && hn(0);
}
function q2(n, i) {
  if (
    (n & 1 &&
      (u(0, "span", 44),
      F(1, G2, 2, 2, "ng-container", 7)(2, Y2, 1, 0, "ng-container", 18),
      d()),
    n & 2)
  ) {
    let e = E(4);
    g(),
      S("ngIf", !e.decadeTemplate),
      g(),
      S("ngTemplateOutlet", e.decadeTemplate)(
        "ngTemplateOutletContext",
        ye(3, tp, e.yearPickerValues)
      );
  }
}
function K2(n, i) {
  n & 1 && W(0, "ChevronRightIcon", 40),
    n & 2 && S("styleClass", "p-datepicker-next-icon");
}
function Q2(n, i) {}
function X2(n, i) {
  n & 1 && F(0, Q2, 0, 0, "ng-template");
}
function Z2(n, i) {
  if ((n & 1 && (u(0, "span", 45), F(1, X2, 1, 0, null, 13), d()), n & 2)) {
    let e = E(4);
    g(), S("ngTemplateOutlet", e.nextIconTemplate);
  }
}
function J2(n, i) {
  if ((n & 1 && (u(0, "th", 51)(1, "span"), m(2), d()()), n & 2)) {
    let e = E(5);
    g(2), B(e.getTranslation("weekHeader"));
  }
}
function eE(n, i) {
  if ((n & 1 && (u(0, "th", 52)(1, "span"), m(2), d()()), n & 2)) {
    let e = i.$implicit;
    g(2), B(e);
  }
}
function tE(n, i) {
  if ((n & 1 && (u(0, "td", 55)(1, "span", 56), m(2), d()()), n & 2)) {
    let e = E().index,
      t = E(2).$implicit;
    g(2), oe(" ", t.weekNumbers[e], " ");
  }
}
function iE(n, i) {
  if ((n & 1 && ($e(0), m(1), Ge()), n & 2)) {
    let e = E(2).$implicit;
    g(), B(e.day);
  }
}
function nE(n, i) {
  n & 1 && hn(0);
}
function oE(n, i) {
  if ((n & 1 && ($e(0), F(1, nE, 1, 0, "ng-container", 18), Ge()), n & 2)) {
    let e = E(2).$implicit,
      t = E(6);
    g(),
      S("ngTemplateOutlet", t.dateTemplate)(
        "ngTemplateOutletContext",
        ye(2, tp, e)
      );
  }
}
function rE(n, i) {
  n & 1 && hn(0);
}
function aE(n, i) {
  if ((n & 1 && ($e(0), F(1, rE, 1, 0, "ng-container", 18), Ge()), n & 2)) {
    let e = E(2).$implicit,
      t = E(6);
    g(),
      S("ngTemplateOutlet", t.disabledDateTemplate)(
        "ngTemplateOutletContext",
        ye(2, tp, e)
      );
  }
}
function sE(n, i) {
  if ((n & 1 && (u(0, "div", 59), m(1), d()), n & 2)) {
    let e = E(2).$implicit;
    g(), oe(" ", e.day, " ");
  }
}
function lE(n, i) {
  if (n & 1) {
    let e = ce();
    $e(0),
      u(1, "span", 57),
      z("click", function (o) {
        N(e);
        let r = E().$implicit,
          a = E(6);
        return V(a.onDateSelect(o, r));
      })("keydown", function (o) {
        N(e);
        let r = E().$implicit,
          a = E(3).index,
          s = E(3);
        return V(s.onDateCellKeydown(o, r, a));
      }),
      F(2, iE, 2, 1, "ng-container", 7)(3, oE, 2, 4, "ng-container", 7)(
        4,
        aE,
        2,
        4,
        "ng-container",
        7
      ),
      d(),
      F(5, sE, 2, 1, "div", 58),
      Ge();
  }
  if (n & 2) {
    let e = E().$implicit,
      t = E(6);
    g(),
      S("ngClass", kn(6, C2, t.isSelected(e) && e.selectable, !e.selectable)),
      de("data-date", t.formatDateKey(t.formatDateMetaToDate(e))),
      g(),
      S("ngIf", !t.dateTemplate && (e.selectable || !t.disabledDateTemplate)),
      g(),
      S("ngIf", e.selectable || !t.disabledDateTemplate),
      g(),
      S("ngIf", !e.selectable),
      g(),
      S("ngIf", t.isSelected(e));
  }
}
function cE(n, i) {
  if (
    (n & 1 && (u(0, "td", 16), F(1, lE, 6, 9, "ng-container", 7), d()), n & 2)
  ) {
    let e = i.$implicit,
      t = E(6);
    S("ngClass", kn(3, x2, e.otherMonth, e.today)),
      de("aria-label", e.day),
      g(),
      S("ngIf", e.otherMonth ? t.showOtherMonths : !0);
  }
}
function dE(n, i) {
  if (
    (n & 1 &&
      (u(0, "tr"), F(1, tE, 3, 1, "td", 53)(2, cE, 2, 6, "td", 54), d()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = E(5);
    g(), S("ngIf", t.showWeek), g(), S("ngForOf", e);
  }
}
function uE(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 46)(1, "table", 47)(2, "thead")(3, "tr"),
      F(4, J2, 3, 1, "th", 48)(5, eE, 3, 1, "th", 49),
      d()(),
      u(6, "tbody"),
      F(7, dE, 3, 2, "tr", 50),
      d()()()),
    n & 2)
  ) {
    let e = E().$implicit,
      t = E(3);
    g(4),
      S("ngIf", t.showWeek),
      g(),
      S("ngForOf", t.weekDays),
      g(2),
      S("ngForOf", e.dates);
  }
}
function hE(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 27)(1, "div", 28),
      F(2, U2, 3, 3, "button", 29),
      u(3, "div", 30),
      F(4, W2, 2, 3, "button", 31)(5, $2, 2, 3, "button", 32)(
        6,
        q2,
        3,
        5,
        "span",
        33
      ),
      d(),
      u(7, "button", 34),
      z("keydown", function (o) {
        N(e);
        let r = E(3);
        return V(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        N(e);
        let r = E(3);
        return V(r.onNextButtonClick(o));
      }),
      F(8, K2, 1, 1, "ChevronRightIcon", 35)(9, Z2, 2, 1, "span", 36),
      d()(),
      F(10, uE, 8, 3, "div", 37),
      d();
  }
  if (n & 2) {
    let e = i.index,
      t = E(3);
    g(2),
      S("ngIf", e === 0),
      g(2),
      S("ngIf", t.currentView === "date"),
      g(),
      S("ngIf", t.currentView !== "year"),
      g(),
      S("ngIf", t.currentView === "year"),
      g(),
      Si(
        "display",
        t.numberOfMonths === 1 || e === t.numberOfMonths - 1
          ? "inline-flex"
          : "none"
      ),
      de("aria-label", t.nextIconAriaLabel),
      g(),
      S("ngIf", !t.nextIconTemplate),
      g(),
      S("ngIf", t.nextIconTemplate),
      g(),
      S("ngIf", t.currentView === "date");
  }
}
function pE(n, i) {
  if ((n & 1 && (u(0, "div", 59), m(1), d()), n & 2)) {
    let e = E().$implicit;
    g(), oe(" ", e, " ");
  }
}
function mE(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "span", 62),
      z("click", function (o) {
        let r = N(e).index,
          a = E(4);
        return V(a.onMonthSelect(o, r));
      })("keydown", function (o) {
        let r = N(e).index,
          a = E(4);
        return V(a.onMonthCellKeydown(o, r));
      }),
      m(1),
      F(2, pE, 2, 1, "div", 58),
      d();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      o = E(4);
    S("ngClass", kn(3, P0, o.isMonthSelected(t), o.isMonthDisabled(t))),
      g(),
      oe(" ", e, " "),
      g(),
      S("ngIf", o.isMonthSelected(t));
  }
}
function fE(n, i) {
  if ((n & 1 && (u(0, "div", 60), F(1, mE, 3, 6, "span", 61), d()), n & 2)) {
    let e = E(3);
    g(), S("ngForOf", e.monthPickerValues());
  }
}
function gE(n, i) {
  if ((n & 1 && (u(0, "div", 59), m(1), d()), n & 2)) {
    let e = E().$implicit;
    g(), oe(" ", e, " ");
  }
}
function _E(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "span", 65),
      z("click", function (o) {
        let r = N(e).$implicit,
          a = E(4);
        return V(a.onYearSelect(o, r));
      })("keydown", function (o) {
        let r = N(e).$implicit,
          a = E(4);
        return V(a.onYearCellKeydown(o, r));
      }),
      m(1),
      F(2, gE, 2, 1, "div", 58),
      d();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = E(4);
    S("ngClass", kn(3, P0, t.isYearSelected(e), t.isYearDisabled(e))),
      g(),
      oe(" ", e, " "),
      g(),
      S("ngIf", t.isYearSelected(e));
  }
}
function bE(n, i) {
  if ((n & 1 && (u(0, "div", 63), F(1, _E, 3, 6, "span", 64), d()), n & 2)) {
    let e = E(3);
    g(), S("ngForOf", e.yearPickerValues());
  }
}
function vE(n, i) {
  if (
    (n & 1 &&
      ($e(0),
      u(1, "div", 23),
      F(2, hE, 11, 10, "div", 24),
      d(),
      F(3, fE, 2, 1, "div", 25)(4, bE, 2, 1, "div", 26),
      Ge()),
    n & 2)
  ) {
    let e = E(2);
    g(2),
      S("ngForOf", e.months),
      g(),
      S("ngIf", e.currentView === "month"),
      g(),
      S("ngIf", e.currentView === "year");
  }
}
function yE(n, i) {
  n & 1 && W(0, "ChevronUpIcon");
}
function xE(n, i) {}
function CE(n, i) {
  n & 1 && F(0, xE, 0, 0, "ng-template");
}
function wE(n, i) {
  n & 1 && ($e(0), m(1, "0"), Ge());
}
function DE(n, i) {
  n & 1 && W(0, "ChevronDownIcon");
}
function SE(n, i) {}
function ME(n, i) {
  n & 1 && F(0, SE, 0, 0, "ng-template");
}
function EE(n, i) {
  n & 1 && W(0, "ChevronUpIcon");
}
function TE(n, i) {}
function kE(n, i) {
  n & 1 && F(0, TE, 0, 0, "ng-template");
}
function OE(n, i) {
  n & 1 && ($e(0), m(1, "0"), Ge());
}
function IE(n, i) {
  n & 1 && W(0, "ChevronDownIcon");
}
function PE(n, i) {}
function AE(n, i) {
  n & 1 && F(0, PE, 0, 0, "ng-template");
}
function RE(n, i) {
  if ((n & 1 && (u(0, "div", 69)(1, "span"), m(2), d()()), n & 2)) {
    let e = E(3);
    g(2), B(e.timeSeparator);
  }
}
function FE(n, i) {
  n & 1 && W(0, "ChevronUpIcon");
}
function NE(n, i) {}
function VE(n, i) {
  n & 1 && F(0, NE, 0, 0, "ng-template");
}
function LE(n, i) {
  n & 1 && ($e(0), m(1, "0"), Ge());
}
function BE(n, i) {
  n & 1 && W(0, "ChevronDownIcon");
}
function HE(n, i) {}
function jE(n, i) {
  n & 1 && F(0, HE, 0, 0, "ng-template");
}
function zE(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 74)(1, "button", 68),
      z("keydown", function (o) {
        N(e);
        let r = E(3);
        return V(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        N(e);
        let r = E(3);
        return V(r.incrementSecond(o));
      })("keydown.space", function (o) {
        N(e);
        let r = E(3);
        return V(r.incrementSecond(o));
      })("mousedown", function (o) {
        N(e);
        let r = E(3);
        return V(r.onTimePickerElementMouseDown(o, 2, 1));
      })("mouseup", function (o) {
        N(e);
        let r = E(3);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        N(e);
        let r = E(3);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        N(e);
        let r = E(3);
        return V(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        N(e);
        let o = E(3);
        return V(o.onTimePickerElementMouseLeave());
      }),
      F(2, FE, 1, 0, "ChevronUpIcon", 7)(3, VE, 1, 0, null, 13),
      d(),
      u(4, "span"),
      F(5, LE, 2, 0, "ng-container", 7),
      m(6),
      d(),
      u(7, "button", 68),
      z("keydown", function (o) {
        N(e);
        let r = E(3);
        return V(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        N(e);
        let r = E(3);
        return V(r.decrementSecond(o));
      })("keydown.space", function (o) {
        N(e);
        let r = E(3);
        return V(r.decrementSecond(o));
      })("mousedown", function (o) {
        N(e);
        let r = E(3);
        return V(r.onTimePickerElementMouseDown(o, 2, -1));
      })("mouseup", function (o) {
        N(e);
        let r = E(3);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        N(e);
        let r = E(3);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        N(e);
        let r = E(3);
        return V(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        N(e);
        let o = E(3);
        return V(o.onTimePickerElementMouseLeave());
      }),
      F(8, BE, 1, 0, "ChevronDownIcon", 7)(9, jE, 1, 0, null, 13),
      d()();
  }
  if (n & 2) {
    let e = E(3);
    g(),
      de("aria-label", e.getTranslation("nextSecond")),
      g(),
      S("ngIf", !e.incrementIconTemplate),
      g(),
      S("ngTemplateOutlet", e.incrementIconTemplate),
      g(2),
      S("ngIf", e.currentSecond < 10),
      g(),
      B(e.currentSecond),
      g(),
      de("aria-label", e.getTranslation("prevSecond")),
      g(),
      S("ngIf", !e.decrementIconTemplate),
      g(),
      S("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function UE(n, i) {
  n & 1 && W(0, "ChevronUpIcon");
}
function WE(n, i) {}
function $E(n, i) {
  n & 1 && F(0, WE, 0, 0, "ng-template");
}
function GE(n, i) {
  n & 1 && W(0, "ChevronDownIcon");
}
function YE(n, i) {}
function qE(n, i) {
  n & 1 && F(0, YE, 0, 0, "ng-template");
}
function KE(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 75)(1, "button", 76),
      z("keydown", function (o) {
        N(e);
        let r = E(3);
        return V(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        N(e);
        let r = E(3);
        return V(r.toggleAMPM(o));
      })("keydown.enter", function (o) {
        N(e);
        let r = E(3);
        return V(r.toggleAMPM(o));
      }),
      F(2, UE, 1, 0, "ChevronUpIcon", 7)(3, $E, 1, 0, null, 13),
      d(),
      u(4, "span"),
      m(5),
      d(),
      u(6, "button", 76),
      z("keydown", function (o) {
        N(e);
        let r = E(3);
        return V(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        N(e);
        let r = E(3);
        return V(r.toggleAMPM(o));
      })("keydown.enter", function (o) {
        N(e);
        let r = E(3);
        return V(r.toggleAMPM(o));
      }),
      F(7, GE, 1, 0, "ChevronDownIcon", 7)(8, qE, 1, 0, null, 13),
      d()();
  }
  if (n & 2) {
    let e = E(3);
    g(),
      de("aria-label", e.getTranslation("am")),
      g(),
      S("ngIf", !e.incrementIconTemplate),
      g(),
      S("ngTemplateOutlet", e.incrementIconTemplate),
      g(2),
      B(e.pm ? "PM" : "AM"),
      g(),
      de("aria-label", e.getTranslation("pm")),
      g(),
      S("ngIf", !e.decrementIconTemplate),
      g(),
      S("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function QE(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 66)(1, "div", 67)(2, "button", 68),
      z("keydown", function (o) {
        N(e);
        let r = E(2);
        return V(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        N(e);
        let r = E(2);
        return V(r.incrementHour(o));
      })("keydown.space", function (o) {
        N(e);
        let r = E(2);
        return V(r.incrementHour(o));
      })("mousedown", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseDown(o, 0, 1));
      })("mouseup", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        N(e);
        let o = E(2);
        return V(o.onTimePickerElementMouseLeave());
      }),
      F(3, yE, 1, 0, "ChevronUpIcon", 7)(4, CE, 1, 0, null, 13),
      d(),
      u(5, "span"),
      F(6, wE, 2, 0, "ng-container", 7),
      m(7),
      d(),
      u(8, "button", 68),
      z("keydown", function (o) {
        N(e);
        let r = E(2);
        return V(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        N(e);
        let r = E(2);
        return V(r.decrementHour(o));
      })("keydown.space", function (o) {
        N(e);
        let r = E(2);
        return V(r.decrementHour(o));
      })("mousedown", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseDown(o, 0, -1));
      })("mouseup", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        N(e);
        let o = E(2);
        return V(o.onTimePickerElementMouseLeave());
      }),
      F(9, DE, 1, 0, "ChevronDownIcon", 7)(10, ME, 1, 0, null, 13),
      d()(),
      u(11, "div", 69)(12, "span"),
      m(13),
      d()(),
      u(14, "div", 70)(15, "button", 68),
      z("keydown", function (o) {
        N(e);
        let r = E(2);
        return V(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        N(e);
        let r = E(2);
        return V(r.incrementMinute(o));
      })("keydown.space", function (o) {
        N(e);
        let r = E(2);
        return V(r.incrementMinute(o));
      })("mousedown", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseDown(o, 1, 1));
      })("mouseup", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        N(e);
        let o = E(2);
        return V(o.onTimePickerElementMouseLeave());
      }),
      F(16, EE, 1, 0, "ChevronUpIcon", 7)(17, kE, 1, 0, null, 13),
      d(),
      u(18, "span"),
      F(19, OE, 2, 0, "ng-container", 7),
      m(20),
      d(),
      u(21, "button", 68),
      z("keydown", function (o) {
        N(e);
        let r = E(2);
        return V(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        N(e);
        let r = E(2);
        return V(r.decrementMinute(o));
      })("keydown.space", function (o) {
        N(e);
        let r = E(2);
        return V(r.decrementMinute(o));
      })("mousedown", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseDown(o, 1, -1));
      })("mouseup", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        N(e);
        let o = E(2);
        return V(o.onTimePickerElementMouseLeave());
      }),
      F(22, IE, 1, 0, "ChevronDownIcon", 7)(23, AE, 1, 0, null, 13),
      d()(),
      F(24, RE, 3, 1, "div", 71)(25, zE, 10, 8, "div", 72)(
        26,
        KE,
        9,
        7,
        "div",
        73
      ),
      d();
  }
  if (n & 2) {
    let e = E(2);
    g(2),
      de("aria-label", e.getTranslation("nextHour")),
      g(),
      S("ngIf", !e.incrementIconTemplate),
      g(),
      S("ngTemplateOutlet", e.incrementIconTemplate),
      g(2),
      S("ngIf", e.currentHour < 10),
      g(),
      B(e.currentHour),
      g(),
      de("aria-label", e.getTranslation("prevHour")),
      g(),
      S("ngIf", !e.decrementIconTemplate),
      g(),
      S("ngTemplateOutlet", e.decrementIconTemplate),
      g(3),
      B(e.timeSeparator),
      g(2),
      de("aria-label", e.getTranslation("nextMinute")),
      g(),
      S("ngIf", !e.incrementIconTemplate),
      g(),
      S("ngTemplateOutlet", e.incrementIconTemplate),
      g(2),
      S("ngIf", e.currentMinute < 10),
      g(),
      B(e.currentMinute),
      g(),
      de("aria-label", e.getTranslation("prevMinute")),
      g(),
      S("ngIf", !e.decrementIconTemplate),
      g(),
      S("ngTemplateOutlet", e.decrementIconTemplate),
      g(),
      S("ngIf", e.showSeconds),
      g(),
      S("ngIf", e.showSeconds),
      g(),
      S("ngIf", e.hourFormat == "12");
  }
}
function XE(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 77)(1, "button", 78),
      z("keydown", function (o) {
        N(e);
        let r = E(2);
        return V(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        N(e);
        let r = E(2);
        return V(r.onTodayButtonClick(o));
      }),
      d(),
      u(2, "button", 78),
      z("keydown", function (o) {
        N(e);
        let r = E(2);
        return V(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        N(e);
        let r = E(2);
        return V(r.onClearButtonClick(o));
      }),
      d()();
  }
  if (n & 2) {
    let e = E(2);
    g(),
      S("label", e.getTranslation("today"))(
        "ngClass",
        ye(4, I0, e.todayButtonStyleClass)
      ),
      g(),
      S("label", e.getTranslation("clear"))(
        "ngClass",
        ye(6, I0, e.clearButtonStyleClass)
      );
  }
}
function ZE(n, i) {
  n & 1 && hn(0);
}
function JE(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 20, 2),
      z("@overlayAnimation.start", function (o) {
        N(e);
        let r = E();
        return V(r.onOverlayAnimationStart(o));
      })("@overlayAnimation.done", function (o) {
        N(e);
        let r = E();
        return V(r.onOverlayAnimationDone(o));
      })("click", function (o) {
        N(e);
        let r = E();
        return V(r.onOverlayClick(o));
      }),
      kt(2),
      F(3, L2, 1, 0, "ng-container", 13)(4, vE, 5, 3, "ng-container", 7)(
        5,
        QE,
        27,
        20,
        "div",
        21
      )(6, XE, 3, 8, "div", 22),
      kt(7, 1),
      F(8, ZE, 1, 0, "ng-container", 13),
      d();
  }
  if (n & 2) {
    let e = E();
    Ve(e.panelStyleClass),
      S("ngStyle", e.panelStyle)(
        "ngClass",
        tm(
          15,
          b2,
          e.inline,
          e.disabled,
          e.timeOnly,
          e.numberOfMonths > 1,
          e.view === "month",
          e.touchUI
        )
      )(
        "@overlayAnimation",
        e.touchUI
          ? ye(
              25,
              v2,
              kn(22, O0, e.showTransitionOptions, e.hideTransitionOptions)
            )
          : ye(
              30,
              y2,
              kn(27, O0, e.showTransitionOptions, e.hideTransitionOptions)
            )
      )("@.disabled", e.inline === !0),
      de("id", e.panelId)("aria-label", e.getTranslation("chooseDate"))(
        "role",
        e.inline ? null : "dialog"
      )("aria-modal", e.inline ? null : "true"),
      g(3),
      S("ngTemplateOutlet", e.headerTemplate),
      g(),
      S("ngIf", !e.timeOnly),
      g(),
      S("ngIf", (e.showTime || e.timeOnly) && e.currentView === "date"),
      g(),
      S("ngIf", e.showButtonBar),
      g(2),
      S("ngTemplateOutlet", e.footerTemplate);
  }
}
var eT = { provide: Yo, useExisting: di(() => tT), multi: !0 },
  tT = (() => {
    class n {
      document;
      el;
      renderer;
      cd;
      zone;
      config;
      overlayService;
      iconDisplay = "button";
      style;
      styleClass;
      inputStyle;
      inputId;
      name;
      inputStyleClass;
      placeholder;
      ariaLabelledBy;
      ariaLabel;
      iconAriaLabel;
      disabled;
      dateFormat;
      multipleSeparator = ",";
      rangeSeparator = "-";
      inline = !1;
      showOtherMonths = !0;
      selectOtherMonths;
      showIcon;
      icon;
      appendTo;
      readonlyInput;
      shortYearCutoff = "+10";
      monthNavigator;
      yearNavigator;
      hourFormat = "24";
      timeOnly;
      stepYearPicker = 10;
      stepHour = 1;
      stepMinute = 1;
      stepSecond = 1;
      showSeconds = !1;
      required;
      showOnFocus = !0;
      showWeek = !1;
      startWeekFromFirstDayOfYear = !1;
      showClear = !1;
      dataType = "date";
      selectionMode = "single";
      maxDateCount;
      showButtonBar;
      todayButtonStyleClass = "p-button-text";
      clearButtonStyleClass = "p-button-text";
      autofocus;
      autoZIndex = !0;
      baseZIndex = 0;
      panelStyleClass;
      panelStyle;
      keepInvalid = !1;
      hideOnDateTimeSelect = !0;
      touchUI;
      timeSeparator = ":";
      focusTrap = !0;
      showTransitionOptions = ".12s cubic-bezier(0, 0, 0.2, 1)";
      hideTransitionOptions = ".1s linear";
      tabindex;
      variant = "outlined";
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        (this._minDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        (this._maxDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDates() {
        return this._disabledDates;
      }
      set disabledDates(e) {
        (this._disabledDates = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDays() {
        return this._disabledDays;
      }
      set disabledDays(e) {
        (this._disabledDays = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get yearRange() {
        return this._yearRange;
      }
      set yearRange(e) {
        if (((this._yearRange = e), e)) {
          let t = e.split(":"),
            o = parseInt(t[0]),
            r = parseInt(t[1]);
          this.populateYearOptions(o, r);
        }
      }
      get showTime() {
        return this._showTime;
      }
      set showTime(e) {
        (this._showTime = e),
          this.currentHour === void 0 &&
            this.initTime(this.value || new Date()),
          this.updateInputfield();
      }
      get responsiveOptions() {
        return this._responsiveOptions;
      }
      set responsiveOptions(e) {
        (this._responsiveOptions = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get numberOfMonths() {
        return this._numberOfMonths;
      }
      set numberOfMonths(e) {
        (this._numberOfMonths = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get firstDayOfWeek() {
        return this._firstDayOfWeek;
      }
      set firstDayOfWeek(e) {
        (this._firstDayOfWeek = e), this.createWeekDays();
      }
      set locale(e) {
        console.warn(
          "Locale property has no effect, use new i18n API instead."
        );
      }
      get view() {
        return this._view;
      }
      set view(e) {
        (this._view = e), (this.currentView = this._view);
      }
      get defaultDate() {
        return this._defaultDate;
      }
      set defaultDate(e) {
        if (((this._defaultDate = e), this.initialized)) {
          let t = e || new Date();
          (this.currentMonth = t.getMonth()),
            (this.currentYear = t.getFullYear()),
            this.initTime(t),
            this.createMonths(this.currentMonth, this.currentYear);
        }
      }
      get inputClass() {
        return {
          "p-inputtext p-component": !0,
          "p-variant-filled":
            this.variant === "filled" || this.config.inputStyle() === "filled",
        };
      }
      onFocus = new Se();
      onBlur = new Se();
      onClose = new Se();
      onSelect = new Se();
      onClear = new Se();
      onInput = new Se();
      onTodayClick = new Se();
      onClearClick = new Se();
      onMonthChange = new Se();
      onYearChange = new Se();
      onClickOutside = new Se();
      onShow = new Se();
      templates;
      containerViewChild;
      inputfieldViewChild;
      set content(e) {
        (this.contentViewChild = e),
          this.contentViewChild &&
            (this.isMonthNavigate
              ? (Promise.resolve(null).then(() => this.updateFocus()),
                (this.isMonthNavigate = !1))
              : !this.focus && !this.inline && this.initFocusableCell());
      }
      contentViewChild;
      value;
      dates;
      months;
      weekDays;
      currentMonth;
      currentYear;
      currentHour;
      currentMinute;
      currentSecond;
      pm;
      mask;
      maskClickListener;
      overlay;
      responsiveStyleElement;
      overlayVisible;
      onModelChange = () => {};
      onModelTouched = () => {};
      calendarElement;
      timePickerTimer;
      documentClickListener;
      animationEndListener;
      ticksTo1970;
      yearOptions;
      focus;
      isKeydown;
      filled;
      inputFieldValue = null;
      _minDate;
      _maxDate;
      _showTime;
      _yearRange;
      preventDocumentListener;
      dateTemplate;
      headerTemplate;
      footerTemplate;
      disabledDateTemplate;
      decadeTemplate;
      previousIconTemplate;
      nextIconTemplate;
      triggerIconTemplate;
      clearIconTemplate;
      decrementIconTemplate;
      incrementIconTemplate;
      inputIconTemplate;
      _disabledDates;
      _disabledDays;
      selectElement;
      todayElement;
      focusElement;
      scrollHandler;
      documentResizeListener;
      navigationState = null;
      isMonthNavigate;
      initialized;
      translationSubscription;
      _locale;
      _responsiveOptions;
      currentView;
      attributeSelector;
      panelId;
      _numberOfMonths = 1;
      _firstDayOfWeek;
      _view = "date";
      preventFocus;
      _defaultDate;
      _focusKey = null;
      window;
      get locale() {
        return this._locale;
      }
      get iconButtonAriaLabel() {
        return this.iconAriaLabel
          ? this.iconAriaLabel
          : this.getTranslation("chooseDate");
      }
      get prevIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("prevDecade")
          : this.currentView === "month"
          ? this.getTranslation("prevYear")
          : this.getTranslation("prevMonth");
      }
      get nextIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("nextDecade")
          : this.currentView === "month"
          ? this.getTranslation("nextYear")
          : this.getTranslation("nextMonth");
      }
      constructor(e, t, o, r, a, s, c) {
        (this.document = e),
          (this.el = t),
          (this.renderer = o),
          (this.cd = r),
          (this.zone = a),
          (this.config = s),
          (this.overlayService = c),
          (this.window = this.document.defaultView);
      }
      ngOnInit() {
        (this.attributeSelector = aa()),
          (this.panelId = this.attributeSelector + "_panel");
        let e = this.defaultDate || new Date();
        this.createResponsiveStyle(),
          (this.currentMonth = e.getMonth()),
          (this.currentYear = e.getFullYear()),
          (this.yearOptions = []),
          (this.currentView = this.view),
          this.view === "date" &&
            (this.createWeekDays(),
            this.initTime(e),
            this.createMonths(this.currentMonth, this.currentYear),
            (this.ticksTo1970 =
              (1969 * 365 +
                Math.floor(1970 / 4) -
                Math.floor(1970 / 100) +
                Math.floor(1970 / 400)) *
              24 *
              60 *
              60 *
              1e7)),
          (this.translationSubscription =
            this.config.translationObserver.subscribe(() => {
              this.createWeekDays(), this.cd.markForCheck();
            })),
          (this.initialized = !0);
      }
      ngAfterContentInit() {
        this.templates.forEach((e) => {
          switch (e.getType()) {
            case "date":
              this.dateTemplate = e.template;
              break;
            case "decade":
              this.decadeTemplate = e.template;
              break;
            case "disabledDate":
              this.disabledDateTemplate = e.template;
              break;
            case "header":
              this.headerTemplate = e.template;
              break;
            case "inputicon":
              this.inputIconTemplate = e.template;
              break;
            case "previousicon":
              this.previousIconTemplate = e.template;
              break;
            case "nexticon":
              this.nextIconTemplate = e.template;
              break;
            case "triggericon":
              this.triggerIconTemplate = e.template;
              break;
            case "clearicon":
              this.clearIconTemplate = e.template;
              break;
            case "decrementicon":
              this.decrementIconTemplate = e.template;
              break;
            case "incrementicon":
              this.incrementIconTemplate = e.template;
              break;
            case "footer":
              this.footerTemplate = e.template;
              break;
            default:
              this.dateTemplate = e.template;
              break;
          }
        });
      }
      ngAfterViewInit() {
        this.inline &&
          (this.contentViewChild &&
            this.contentViewChild.nativeElement.setAttribute(
              this.attributeSelector,
              ""
            ),
          !this.disabled &&
            !this.inline &&
            (this.initFocusableCell(),
            this.numberOfMonths === 1 &&
              this.contentViewChild &&
              this.contentViewChild.nativeElement &&
              (this.contentViewChild.nativeElement.style.width =
                me.getOuterWidth(this.containerViewChild?.nativeElement) +
                "px")));
      }
      getTranslation(e) {
        return this.config.getTranslation(e);
      }
      populateYearOptions(e, t) {
        this.yearOptions = [];
        for (let o = e; o <= t; o++) this.yearOptions.push(o);
      }
      createWeekDays() {
        this.weekDays = [];
        let e = this.getFirstDateOfWeek(),
          t = this.getTranslation(_n.DAY_NAMES_MIN);
        for (let o = 0; o < 7; o++)
          this.weekDays.push(t[e]), (e = e == 6 ? 0 : ++e);
      }
      monthPickerValues() {
        let e = [];
        for (let t = 0; t <= 11; t++)
          e.push(this.config.getTranslation("monthNamesShort")[t]);
        return e;
      }
      yearPickerValues() {
        let e = [],
          t = this.currentYear - (this.currentYear % this.stepYearPicker);
        for (let o = 0; o < this.stepYearPicker; o++) e.push(t + o);
        return e;
      }
      createMonths(e, t) {
        this.months = this.months = [];
        for (let o = 0; o < this.numberOfMonths; o++) {
          let r = e + o,
            a = t;
          r > 11 && ((r = (r % 11) - 1), (a = t + 1)),
            this.months.push(this.createMonth(r, a));
        }
      }
      getWeekNumber(e) {
        let t = new Date(e.getTime());
        if (this.startWeekFromFirstDayOfYear) {
          let r = +this.getFirstDateOfWeek();
          t.setDate(t.getDate() + 6 + r - t.getDay());
        } else t.setDate(t.getDate() + 4 - (t.getDay() || 7));
        let o = t.getTime();
        return (
          t.setMonth(0),
          t.setDate(1),
          Math.floor(Math.round((o - t.getTime()) / 864e5) / 7) + 1
        );
      }
      createMonth(e, t) {
        let o = [],
          r = this.getFirstDayOfMonthIndex(e, t),
          a = this.getDaysCountInMonth(e, t),
          s = this.getDaysCountInPrevMonth(e, t),
          c = 1,
          p = new Date(),
          f = [],
          y = Math.ceil((a + r) / 7);
        for (let x = 0; x < y; x++) {
          let C = [];
          if (x == 0) {
            for (let k = s - r + 1; k <= s; k++) {
              let O = this.getPreviousMonthAndYear(e, t);
              C.push({
                day: k,
                month: O.month,
                year: O.year,
                otherMonth: !0,
                today: this.isToday(p, k, O.month, O.year),
                selectable: this.isSelectable(k, O.month, O.year, !0),
              });
            }
            let M = 7 - C.length;
            for (let k = 0; k < M; k++)
              C.push({
                day: c,
                month: e,
                year: t,
                today: this.isToday(p, c, e, t),
                selectable: this.isSelectable(c, e, t, !1),
              }),
                c++;
          } else
            for (let M = 0; M < 7; M++) {
              if (c > a) {
                let k = this.getNextMonthAndYear(e, t);
                C.push({
                  day: c - a,
                  month: k.month,
                  year: k.year,
                  otherMonth: !0,
                  today: this.isToday(p, c - a, k.month, k.year),
                  selectable: this.isSelectable(c - a, k.month, k.year, !0),
                });
              } else
                C.push({
                  day: c,
                  month: e,
                  year: t,
                  today: this.isToday(p, c, e, t),
                  selectable: this.isSelectable(c, e, t, !1),
                });
              c++;
            }
          this.showWeek &&
            f.push(
              this.getWeekNumber(new Date(C[0].year, C[0].month, C[0].day))
            ),
            o.push(C);
        }
        return { month: e, year: t, dates: o, weekNumbers: f };
      }
      initTime(e) {
        (this.pm = e.getHours() > 11),
          this.showTime
            ? ((this.currentMinute = e.getMinutes()),
              (this.currentSecond = e.getSeconds()),
              this.setCurrentHourPM(e.getHours()))
            : this.timeOnly &&
              ((this.currentMinute = 0),
              (this.currentHour = 0),
              (this.currentSecond = 0));
      }
      navBackward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.decrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.decrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 0
                ? ((this.currentMonth = 11), this.decrementYear())
                : this.currentMonth--,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      navForward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.incrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.incrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 11
                ? ((this.currentMonth = 0), this.incrementYear())
                : this.currentMonth++,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      decrementYear() {
        this.currentYear--;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear < e[0]) {
          let t = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] - t, e[e.length - 1] - t);
        }
      }
      decrementYearPickerStep() {
        this.currentYear = this.currentYear - this.stepYearPicker;
      }
      incrementYearPickerStep() {
        this.currentYear = this.currentYear + this.stepYearPicker;
      }
      incrementYear() {
        this.currentYear++;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear > e[e.length - 1]) {
          let t = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] + t, e[e.length - 1] + t);
        }
      }
      switchToMonthView(e) {
        this.setCurrentView("month"), e.preventDefault();
      }
      switchToYearView(e) {
        this.setCurrentView("year"), e.preventDefault();
      }
      onDateSelect(e, t) {
        if (this.disabled || !t.selectable) {
          e.preventDefault();
          return;
        }
        this.isMultipleSelection() && this.isSelected(t)
          ? ((this.value = this.value.filter(
              (o, r) => !this.isDateEquals(o, t)
            )),
            this.value.length === 0 && (this.value = null),
            this.updateModel(this.value))
          : this.shouldSelectDate(t) && this.selectDate(t),
          this.hideOnDateTimeSelect &&
            (this.isSingleSelection() ||
              (this.isRangeSelection() && this.value[1])) &&
            setTimeout(() => {
              e.preventDefault(),
                this.hideOverlay(),
                this.mask && this.disableModality(),
                this.cd.markForCheck();
            }, 150),
          this.updateInputfield(),
          e.preventDefault();
      }
      shouldSelectDate(e) {
        return this.isMultipleSelection() && this.maxDateCount != null
          ? this.maxDateCount > (this.value ? this.value.length : 0)
          : !0;
      }
      onMonthSelect(e, t) {
        this.view === "month"
          ? this.onDateSelect(e, {
              year: this.currentYear,
              month: t,
              day: 1,
              selectable: !0,
            })
          : ((this.currentMonth = t),
            this.createMonths(this.currentMonth, this.currentYear),
            this.setCurrentView("date"),
            this.onMonthChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      onYearSelect(e, t) {
        this.view === "year"
          ? this.onDateSelect(e, { year: t, month: 0, day: 1, selectable: !0 })
          : ((this.currentYear = t),
            this.setCurrentView("month"),
            this.onYearChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      updateInputfield() {
        let e = "";
        if (this.value) {
          if (this.isSingleSelection()) e = this.formatDateTime(this.value);
          else if (this.isMultipleSelection())
            for (let t = 0; t < this.value.length; t++) {
              let o = this.formatDateTime(this.value[t]);
              (e += o),
                t !== this.value.length - 1 &&
                  (e += this.multipleSeparator + " ");
            }
          else if (this.isRangeSelection() && this.value && this.value.length) {
            let t = this.value[0],
              o = this.value[1];
            (e = this.formatDateTime(t)),
              o &&
                (e += " " + this.rangeSeparator + " " + this.formatDateTime(o));
          }
        }
        (this.inputFieldValue = e),
          this.updateFilledState(),
          this.inputfieldViewChild &&
            this.inputfieldViewChild.nativeElement &&
            (this.inputfieldViewChild.nativeElement.value =
              this.inputFieldValue);
      }
      formatDateTime(e) {
        let t = this.keepInvalid ? e : null,
          o = this.isValidDateForTimeConstraints(e);
        return (
          this.isValidDate(e)
            ? this.timeOnly
              ? (t = this.formatTime(e))
              : ((t = this.formatDate(e, this.getDateFormat())),
                this.showTime && (t += " " + this.formatTime(e)))
            : this.dataType === "string" && (t = e),
          (t = o ? t : ""),
          t
        );
      }
      formatDateMetaToDate(e) {
        return new Date(e.year, e.month, e.day);
      }
      formatDateKey(e) {
        return `${e.getFullYear()}-${e.getMonth() + 1}-${e.getDate()}`;
      }
      setCurrentHourPM(e) {
        this.hourFormat == "12"
          ? ((this.pm = e > 11),
            e >= 12
              ? (this.currentHour = e == 12 ? 12 : e - 12)
              : (this.currentHour = e == 0 ? 12 : e))
          : (this.currentHour = e);
      }
      setCurrentView(e) {
        (this.currentView = e), this.cd.detectChanges(), this.alignOverlay();
      }
      selectDate(e) {
        let t = this.formatDateMetaToDate(e);
        if (
          (this.showTime &&
            (this.hourFormat == "12"
              ? this.currentHour === 12
                ? t.setHours(this.pm ? 12 : 0)
                : t.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
              : t.setHours(this.currentHour),
            t.setMinutes(this.currentMinute),
            t.setSeconds(this.currentSecond)),
          this.minDate &&
            this.minDate > t &&
            ((t = this.minDate),
            this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds())),
          this.maxDate &&
            this.maxDate < t &&
            ((t = this.maxDate),
            this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds())),
          this.isSingleSelection())
        )
          this.updateModel(t);
        else if (this.isMultipleSelection())
          this.updateModel(this.value ? [...this.value, t] : [t]);
        else if (this.isRangeSelection())
          if (this.value && this.value.length) {
            let o = this.value[0],
              r = this.value[1];
            !r && t.getTime() >= o.getTime() ? (r = t) : ((o = t), (r = null)),
              this.updateModel([o, r]);
          } else this.updateModel([t, null]);
        this.onSelect.emit(t);
      }
      updateModel(e) {
        if (((this.value = e), this.dataType == "date"))
          this.onModelChange(this.value);
        else if (this.dataType == "string")
          if (this.isSingleSelection())
            this.onModelChange(this.formatDateTime(this.value));
          else {
            let t = null;
            Array.isArray(this.value) &&
              (t = this.value.map((o) => this.formatDateTime(o))),
              this.onModelChange(t);
          }
      }
      getFirstDayOfMonthIndex(e, t) {
        let o = new Date();
        o.setDate(1), o.setMonth(e), o.setFullYear(t);
        let r = o.getDay() + this.getSundayIndex();
        return r >= 7 ? r - 7 : r;
      }
      getDaysCountInMonth(e, t) {
        return 32 - this.daylightSavingAdjust(new Date(t, e, 32)).getDate();
      }
      getDaysCountInPrevMonth(e, t) {
        let o = this.getPreviousMonthAndYear(e, t);
        return this.getDaysCountInMonth(o.month, o.year);
      }
      getPreviousMonthAndYear(e, t) {
        let o, r;
        return (
          e === 0 ? ((o = 11), (r = t - 1)) : ((o = e - 1), (r = t)),
          { month: o, year: r }
        );
      }
      getNextMonthAndYear(e, t) {
        let o, r;
        return (
          e === 11 ? ((o = 0), (r = t + 1)) : ((o = e + 1), (r = t)),
          { month: o, year: r }
        );
      }
      getSundayIndex() {
        let e = this.getFirstDateOfWeek();
        return e > 0 ? 7 - e : 0;
      }
      isSelected(e) {
        if (this.value) {
          if (this.isSingleSelection()) return this.isDateEquals(this.value, e);
          if (this.isMultipleSelection()) {
            let t = !1;
            for (let o of this.value)
              if (((t = this.isDateEquals(o, e)), t)) break;
            return t;
          } else if (this.isRangeSelection())
            return this.value[1]
              ? this.isDateEquals(this.value[0], e) ||
                  this.isDateEquals(this.value[1], e) ||
                  this.isDateBetween(this.value[0], this.value[1], e)
              : this.isDateEquals(this.value[0], e);
        } else return !1;
      }
      isComparable() {
        return this.value != null && typeof this.value != "string";
      }
      isMonthSelected(e) {
        if (this.isComparable() && !this.isMultipleSelection()) {
          let [t, o] = this.isRangeSelection()
              ? this.value
              : [this.value, this.value],
            r = new Date(this.currentYear, e, 1);
          return r >= t && r <= (o ?? t);
        }
        return !1;
      }
      isMonthDisabled(e, t) {
        let o = t ?? this.currentYear;
        for (let r = 1; r < this.getDaysCountInMonth(e, o) + 1; r++)
          if (this.isSelectable(r, e, o, !1)) return !1;
        return !0;
      }
      isYearDisabled(e) {
        return Array(12)
          .fill(0)
          .every((t, o) => this.isMonthDisabled(o, e));
      }
      isYearSelected(e) {
        if (!this.isComparable() || this.isMultipleSelection()) return !1;
        let t = this.isRangeSelection() ? this.value[0] : this.value;
        return t ? t.getFullYear() === e : !1;
      }
      isDateEquals(e, t) {
        return e && $i.isDate(e)
          ? e.getDate() === t.day &&
              e.getMonth() === t.month &&
              e.getFullYear() === t.year
          : !1;
      }
      isDateBetween(e, t, o) {
        let r = !1;
        if ($i.isDate(e) && $i.isDate(t)) {
          let a = this.formatDateMetaToDate(o);
          return e.getTime() <= a.getTime() && t.getTime() >= a.getTime();
        }
        return r;
      }
      isSingleSelection() {
        return this.selectionMode === "single";
      }
      isRangeSelection() {
        return this.selectionMode === "range";
      }
      isMultipleSelection() {
        return this.selectionMode === "multiple";
      }
      isToday(e, t, o, r) {
        return e.getDate() === t && e.getMonth() === o && e.getFullYear() === r;
      }
      isSelectable(e, t, o, r) {
        let a = !0,
          s = !0,
          c = !0,
          p = !0;
        return r && !this.selectOtherMonths
          ? !1
          : (this.minDate &&
              (this.minDate.getFullYear() > o ||
                (this.minDate.getFullYear() === o &&
                  this.currentView != "year" &&
                  (this.minDate.getMonth() > t ||
                    (this.minDate.getMonth() === t &&
                      this.minDate.getDate() > e)))) &&
              (a = !1),
            this.maxDate &&
              (this.maxDate.getFullYear() < o ||
                (this.maxDate.getFullYear() === o &&
                  (this.maxDate.getMonth() < t ||
                    (this.maxDate.getMonth() === t &&
                      this.maxDate.getDate() < e)))) &&
              (s = !1),
            this.disabledDates && (c = !this.isDateDisabled(e, t, o)),
            this.disabledDays && (p = !this.isDayDisabled(e, t, o)),
            a && s && c && p);
      }
      isDateDisabled(e, t, o) {
        if (this.disabledDates) {
          for (let r of this.disabledDates)
            if (
              r.getFullYear() === o &&
              r.getMonth() === t &&
              r.getDate() === e
            )
              return !0;
        }
        return !1;
      }
      isDayDisabled(e, t, o) {
        if (this.disabledDays) {
          let a = new Date(o, t, e).getDay();
          return this.disabledDays.indexOf(a) !== -1;
        }
        return !1;
      }
      onInputFocus(e) {
        (this.focus = !0),
          this.showOnFocus && this.showOverlay(),
          this.onFocus.emit(e);
      }
      onInputClick() {
        this.showOnFocus && !this.overlayVisible && this.showOverlay();
      }
      onInputBlur(e) {
        (this.focus = !1),
          this.onBlur.emit(e),
          this.keepInvalid || this.updateInputfield(),
          this.onModelTouched();
      }
      onButtonClick(e, t = this.inputfieldViewChild?.nativeElement) {
        this.overlayVisible
          ? this.hideOverlay()
          : (t.focus(), this.showOverlay());
      }
      clear() {
        (this.inputFieldValue = null),
          (this.value = null),
          this.onModelChange(this.value),
          this.onClear.emit();
      }
      onOverlayClick(e) {
        this.overlayService.add({
          originalEvent: e,
          target: this.el.nativeElement,
        });
      }
      getMonthName(e) {
        return this.config.getTranslation("monthNames")[e];
      }
      getYear(e) {
        return this.currentView === "month" ? this.currentYear : e.year;
      }
      switchViewButtonDisabled() {
        return this.numberOfMonths > 1 || this.disabled;
      }
      onPrevButtonClick(e) {
        (this.navigationState = { backward: !0, button: !0 }),
          this.navBackward(e);
      }
      onNextButtonClick(e) {
        (this.navigationState = { backward: !1, button: !0 }),
          this.navForward(e);
      }
      onContainerButtonKeydown(e) {
        switch (e.which) {
          case 9:
            if ((this.inline || this.trapFocus(e), this.inline)) {
              let t = me.findSingle(
                  this.containerViewChild?.nativeElement,
                  ".p-datepicker-header"
                ),
                o = e.target;
              if (this.timeOnly) return;
              o == t.children[t?.children?.length - 1] &&
                this.initFocusableCell();
            }
            break;
          case 27:
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          default:
            break;
        }
      }
      onInputKeydown(e) {
        (this.isKeydown = !0),
          e.keyCode === 40 && this.contentViewChild
            ? this.trapFocus(e)
            : e.keyCode === 27
            ? this.overlayVisible &&
              (this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault())
            : e.keyCode === 13
            ? this.overlayVisible &&
              ((this.overlayVisible = !1), e.preventDefault())
            : e.keyCode === 9 &&
              this.contentViewChild &&
              (me
                .getFocusableElements(this.contentViewChild.nativeElement)
                .forEach((t) => (t.tabIndex = "-1")),
              this.overlayVisible && (this.overlayVisible = !1));
      }
      onDateCellKeydown(e, t, o) {
        let r = e.currentTarget,
          a = r.parentElement,
          s = this.formatDateMetaToDate(t);
        switch (e.which) {
          case 40: {
            r.tabIndex = "-1";
            let M = me.index(a),
              k = a.parentElement.nextElementSibling;
            if (k) {
              let O = k.children[M].children[0];
              me.hasClass(O, "p-disabled")
                ? ((this.navigationState = { backward: !1 }),
                  this.navForward(e))
                : ((k.children[M].children[0].tabIndex = "0"),
                  k.children[M].children[0].focus());
            } else
              (this.navigationState = { backward: !1 }), this.navForward(e);
            e.preventDefault();
            break;
          }
          case 38: {
            r.tabIndex = "-1";
            let M = me.index(a),
              k = a.parentElement.previousElementSibling;
            if (k) {
              let O = k.children[M].children[0];
              me.hasClass(O, "p-disabled")
                ? ((this.navigationState = { backward: !0 }),
                  this.navBackward(e))
                : ((O.tabIndex = "0"), O.focus());
            } else
              (this.navigationState = { backward: !0 }), this.navBackward(e);
            e.preventDefault();
            break;
          }
          case 37: {
            r.tabIndex = "-1";
            let M = a.previousElementSibling;
            if (M) {
              let k = M.children[0];
              me.hasClass(k, "p-disabled") ||
              me.hasClass(k.parentElement, "p-datepicker-weeknumber")
                ? this.navigateToMonth(!0, o)
                : ((k.tabIndex = "0"), k.focus());
            } else this.navigateToMonth(!0, o);
            e.preventDefault();
            break;
          }
          case 39: {
            r.tabIndex = "-1";
            let M = a.nextElementSibling;
            if (M) {
              let k = M.children[0];
              me.hasClass(k, "p-disabled")
                ? this.navigateToMonth(!1, o)
                : ((k.tabIndex = "0"), k.focus());
            } else this.navigateToMonth(!1, o);
            e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onDateSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          case 33: {
            r.tabIndex = "-1";
            let M = new Date(s.getFullYear(), s.getMonth() - 1, s.getDate()),
              k = this.formatDateKey(M);
            this.navigateToMonth(
              !0,
              o,
              `span[data-date='${k}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 34: {
            r.tabIndex = "-1";
            let M = new Date(s.getFullYear(), s.getMonth() + 1, s.getDate()),
              k = this.formatDateKey(M);
            this.navigateToMonth(
              !1,
              o,
              `span[data-date='${k}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 36:
            r.tabIndex = "-1";
            let c = new Date(s.getFullYear(), s.getMonth(), 1),
              p = this.formatDateKey(c),
              f = me.findSingle(
                r.offsetParent,
                `span[data-date='${p}']:not(.p-disabled):not(.p-ink)`
              );
            f && ((f.tabIndex = "0"), f.focus()), e.preventDefault();
            break;
          case 35:
            r.tabIndex = "-1";
            let y = new Date(s.getFullYear(), s.getMonth() + 1, 0),
              x = this.formatDateKey(y),
              C = me.findSingle(
                r.offsetParent,
                `span[data-date='${x}']:not(.p-disabled):not(.p-ink)`
              );
            y && ((C.tabIndex = "0"), C.focus()), e.preventDefault();
            break;
          default:
            break;
        }
      }
      onMonthCellKeydown(e, t) {
        let o = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            o.tabIndex = "-1";
            var r = o.parentElement.children,
              a = me.index(o);
            let s = r[e.which === 40 ? a + 3 : a - 3];
            s && ((s.tabIndex = "0"), s.focus()), e.preventDefault();
            break;
          }
          case 37: {
            o.tabIndex = "-1";
            let s = o.previousElementSibling;
            s
              ? ((s.tabIndex = "0"), s.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            o.tabIndex = "-1";
            let s = o.nextElementSibling;
            s
              ? ((s.tabIndex = "0"), s.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onMonthSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      onYearCellKeydown(e, t) {
        let o = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            o.tabIndex = "-1";
            var r = o.parentElement.children,
              a = me.index(o);
            let s = r[e.which === 40 ? a + 2 : a - 2];
            s && ((s.tabIndex = "0"), s.focus()), e.preventDefault();
            break;
          }
          case 37: {
            o.tabIndex = "-1";
            let s = o.previousElementSibling;
            s
              ? ((s.tabIndex = "0"), s.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            o.tabIndex = "-1";
            let s = o.nextElementSibling;
            s
              ? ((s.tabIndex = "0"), s.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onYearSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      navigateToMonth(e, t, o) {
        if (e)
          if (this.numberOfMonths === 1 || t === 0)
            (this.navigationState = { backward: !0 }),
              (this._focusKey = o),
              this.navBackward(event);
          else {
            let r = this.contentViewChild.nativeElement.children[t - 1];
            if (o) {
              let a = me.findSingle(r, o);
              (a.tabIndex = "0"), a.focus();
            } else {
              let a = me.find(
                  r,
                  ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                ),
                s = a[a.length - 1];
              (s.tabIndex = "0"), s.focus();
            }
          }
        else if (this.numberOfMonths === 1 || t === this.numberOfMonths - 1)
          (this.navigationState = { backward: !1 }),
            (this._focusKey = o),
            this.navForward(event);
        else {
          let r = this.contentViewChild.nativeElement.children[t + 1];
          if (o) {
            let a = me.findSingle(r, o);
            (a.tabIndex = "0"), a.focus();
          } else {
            let a = me.findSingle(
              r,
              ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
            );
            (a.tabIndex = "0"), a.focus();
          }
        }
      }
      updateFocus() {
        let e;
        if (this.navigationState) {
          if (this.navigationState.button)
            this.initFocusableCell(),
              this.navigationState.backward
                ? me
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-prev"
                    )
                    .focus()
                : me
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-next"
                    )
                    .focus();
          else {
            if (this.navigationState.backward) {
              let t;
              this.currentView === "month"
                ? (t = me.find(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (t = me.find(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (t = me.find(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  )),
                t && t.length > 0 && (e = t[t.length - 1]);
            } else
              this.currentView === "month"
                ? (e = me.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (e = me.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (e = me.findSingle(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  ));
            e && ((e.tabIndex = "0"), e.focus());
          }
          (this.navigationState = null), (this._focusKey = null);
        } else this.initFocusableCell();
        this.alignOverlay();
      }
      initFocusableCell() {
        let e = this.contentViewChild?.nativeElement,
          t;
        if (this.currentView === "month") {
          let o = me.find(
              e,
              ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
            ),
            r = me.findSingle(
              e,
              ".p-monthpicker .p-monthpicker-month.p-highlight"
            );
          o.forEach((a) => (a.tabIndex = -1)),
            (t = r || o[0]),
            o.length === 0 &&
              me
                .find(
                  e,
                  '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = "0"]'
                )
                .forEach((s) => (s.tabIndex = -1));
        } else if (this.currentView === "year") {
          let o = me.find(
              e,
              ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
            ),
            r = me.findSingle(
              e,
              ".p-yearpicker .p-yearpicker-year.p-highlight"
            );
          o.forEach((a) => (a.tabIndex = -1)),
            (t = r || o[0]),
            o.length === 0 &&
              me
                .find(
                  e,
                  '.p-yearpicker .p-yearpicker-year.p-disabled[tabindex = "0"]'
                )
                .forEach((s) => (s.tabIndex = -1));
        } else if (((t = me.findSingle(e, "span.p-highlight")), !t)) {
          let o = me.findSingle(
            e,
            "td.p-datepicker-today span:not(.p-disabled):not(.p-ink)"
          );
          o
            ? (t = o)
            : (t = me.findSingle(
                e,
                ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
              ));
        }
        t &&
          ((t.tabIndex = "0"),
          !this.preventFocus &&
            (!this.navigationState || !this.navigationState.button) &&
            setTimeout(() => {
              this.disabled || t.focus();
            }, 1),
          (this.preventFocus = !1));
      }
      trapFocus(e) {
        let t = me.getFocusableElements(this.contentViewChild.nativeElement);
        if (t && t.length > 0)
          if (!t[0].ownerDocument.activeElement) t[0].focus();
          else {
            let o = t.indexOf(t[0].ownerDocument.activeElement);
            if (e.shiftKey)
              if (o == -1 || o === 0)
                if (this.focusTrap) t[t.length - 1].focus();
                else {
                  if (o === -1) return this.hideOverlay();
                  if (o === 0) return;
                }
              else t[o - 1].focus();
            else if (o == -1)
              if (this.timeOnly) t[0].focus();
              else {
                let r = 0;
                for (let a = 0; a < t.length; a++)
                  t[a].tagName === "SPAN" && (r = a);
                t[r].focus();
              }
            else if (o === t.length - 1) {
              if (!this.focusTrap && o != -1) return this.hideOverlay();
              t[0].focus();
            } else t[o + 1].focus();
          }
        e.preventDefault();
      }
      onMonthDropdownChange(e) {
        (this.currentMonth = parseInt(e)),
          this.onMonthChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      onYearDropdownChange(e) {
        (this.currentYear = parseInt(e)),
          this.onYearChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      convertTo24Hour(e, t) {
        return this.hourFormat == "12"
          ? e === 12
            ? t
              ? 12
              : 0
            : t
            ? e + 12
            : e
          : e;
      }
      constrainTime(e, t, o, r) {
        let a = [e, t, o],
          s,
          c = this.value,
          p = this.convertTo24Hour(e, r),
          f = this.isRangeSelection(),
          y = this.isMultipleSelection();
        (f || y) &&
          (this.value || (this.value = [new Date(), new Date()]),
          f && (c = this.value[1] || this.value[0]),
          y && (c = this.value[this.value.length - 1]));
        let C = c ? c.toDateString() : null,
          M = this.minDate && C && this.minDate.toDateString() === C,
          k = this.maxDate && C && this.maxDate.toDateString() === C;
        switch ((M && (s = this.minDate.getHours() >= 12), !0)) {
          case M &&
            s &&
            this.minDate.getHours() === 12 &&
            this.minDate.getHours() > p:
            a[0] = 11;
          case M &&
            this.minDate.getHours() === p &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case M &&
            this.minDate.getHours() === p &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > o:
            a[2] = this.minDate.getSeconds();
            break;
          case M &&
            !s &&
            this.minDate.getHours() - 1 === p &&
            this.minDate.getHours() > p:
            (a[0] = 11), (this.pm = !0);
          case M &&
            this.minDate.getHours() === p &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case M &&
            this.minDate.getHours() === p &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > o:
            a[2] = this.minDate.getSeconds();
            break;
          case M && s && this.minDate.getHours() > p && p !== 12:
            this.setCurrentHourPM(this.minDate.getHours()),
              (a[0] = this.currentHour);
          case M &&
            this.minDate.getHours() === p &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case M &&
            this.minDate.getHours() === p &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > o:
            a[2] = this.minDate.getSeconds();
            break;
          case M && this.minDate.getHours() > p:
            a[0] = this.minDate.getHours();
          case M &&
            this.minDate.getHours() === p &&
            this.minDate.getMinutes() > t:
            a[1] = this.minDate.getMinutes();
          case M &&
            this.minDate.getHours() === p &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > o:
            a[2] = this.minDate.getSeconds();
            break;
          case k && this.maxDate.getHours() < p:
            a[0] = this.maxDate.getHours();
          case k &&
            this.maxDate.getHours() === p &&
            this.maxDate.getMinutes() < t:
            a[1] = this.maxDate.getMinutes();
          case k &&
            this.maxDate.getHours() === p &&
            this.maxDate.getMinutes() === t &&
            this.maxDate.getSeconds() < o:
            a[2] = this.maxDate.getSeconds();
            break;
        }
        return a;
      }
      incrementHour(e) {
        let t = this.currentHour ?? 0,
          o = (this.currentHour ?? 0) + this.stepHour,
          r = this.pm;
        this.hourFormat == "24"
          ? (o = o >= 24 ? o - 24 : o)
          : this.hourFormat == "12" &&
            (t < 12 && o > 11 && (r = !this.pm), (o = o >= 13 ? o - 12 : o)),
          this.toggleAMPMIfNotMinDate(r),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(o, this.currentMinute, this.currentSecond, r)),
          e.preventDefault();
      }
      toggleAMPMIfNotMinDate(e) {
        let t = this.value;
        (this.selectionMode == "range" || this.selectionMode == "multiple") &&
          Array.isArray(t) &&
          t.length > 0 &&
          (t = t[t.length - 1]);
        let o = t ? t.toDateString() : null;
        this.minDate &&
        o &&
        this.minDate.toDateString() === o &&
        this.minDate.getHours() >= 12
          ? (this.pm = !0)
          : (this.pm = e);
      }
      onTimePickerElementMouseDown(e, t, o) {
        this.disabled || (this.repeat(e, null, t, o), e.preventDefault());
      }
      onTimePickerElementMouseUp(e) {
        this.disabled || (this.clearTimePickerTimer(), this.updateTime());
      }
      onTimePickerElementMouseLeave() {
        !this.disabled &&
          this.timePickerTimer &&
          (this.clearTimePickerTimer(), this.updateTime());
      }
      repeat(e, t, o, r) {
        let a = t || 500;
        switch (
          (this.clearTimePickerTimer(),
          (this.timePickerTimer = setTimeout(() => {
            this.repeat(e, 100, o, r), this.cd.markForCheck();
          }, a)),
          o)
        ) {
          case 0:
            r === 1 ? this.incrementHour(e) : this.decrementHour(e);
            break;
          case 1:
            r === 1 ? this.incrementMinute(e) : this.decrementMinute(e);
            break;
          case 2:
            r === 1 ? this.incrementSecond(e) : this.decrementSecond(e);
            break;
        }
        this.updateInputfield();
      }
      clearTimePickerTimer() {
        this.timePickerTimer &&
          (clearTimeout(this.timePickerTimer), (this.timePickerTimer = null));
      }
      decrementHour(e) {
        let t = (this.currentHour ?? 0) - this.stepHour,
          o = this.pm;
        this.hourFormat == "24"
          ? (t = t < 0 ? 24 + t : t)
          : this.hourFormat == "12" &&
            (this.currentHour === 12 && (o = !this.pm),
            (t = t <= 0 ? 12 + t : t)),
          this.toggleAMPMIfNotMinDate(o),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(t, this.currentMinute, this.currentSecond, o)),
          e.preventDefault();
      }
      incrementMinute(e) {
        let t = (this.currentMinute ?? 0) + this.stepMinute;
        (t = t > 59 ? t - 60 : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              t,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      decrementMinute(e) {
        let t = (this.currentMinute ?? 0) - this.stepMinute;
        (t = t < 0 ? 60 + t : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              t,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      incrementSecond(e) {
        let t = this.currentSecond + this.stepSecond;
        (t = t > 59 ? t - 60 : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              t,
              this.pm
            )),
          e.preventDefault();
      }
      decrementSecond(e) {
        let t = this.currentSecond - this.stepSecond;
        (t = t < 0 ? 60 + t : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              t,
              this.pm
            )),
          e.preventDefault();
      }
      updateTime() {
        let e = this.value;
        this.isRangeSelection() && (e = this.value[1] || this.value[0]),
          this.isMultipleSelection() && (e = this.value[this.value.length - 1]),
          (e = e ? new Date(e.getTime()) : new Date()),
          this.hourFormat == "12"
            ? this.currentHour === 12
              ? e.setHours(this.pm ? 12 : 0)
              : e.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
            : e.setHours(this.currentHour),
          e.setMinutes(this.currentMinute),
          e.setSeconds(this.currentSecond),
          this.isRangeSelection() &&
            (this.value[1] ? (e = [this.value[0], e]) : (e = [e, null])),
          this.isMultipleSelection() && (e = [...this.value.slice(0, -1), e]),
          this.updateModel(e),
          this.onSelect.emit(e),
          this.updateInputfield();
      }
      toggleAMPM(e) {
        let t = !this.pm;
        (this.pm = t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              this.currentSecond,
              t
            )),
          this.updateTime(),
          e.preventDefault();
      }
      onUserInput(e) {
        if (!this.isKeydown) return;
        this.isKeydown = !1;
        let t = e.target.value;
        try {
          let o = this.parseValueFromString(t);
          this.isValidSelection(o)
            ? (this.updateModel(o), this.updateUI())
            : this.keepInvalid && this.updateModel(o);
        } catch {
          let r = this.keepInvalid ? t : null;
          this.updateModel(r);
        }
        (this.filled = t != null && t.length), this.onInput.emit(e);
      }
      isValidSelection(e) {
        if (this.isSingleSelection())
          return this.isSelectable(
            e.getDate(),
            e.getMonth(),
            e.getFullYear(),
            !1
          );
        let t = e.every((o) =>
          this.isSelectable(o.getDate(), o.getMonth(), o.getFullYear(), !1)
        );
        return (
          t &&
            this.isRangeSelection() &&
            (t = e.length === 1 || (e.length > 1 && e[1] >= e[0])),
          t
        );
      }
      parseValueFromString(e) {
        if (!e || e.trim().length === 0) return null;
        let t;
        if (this.isSingleSelection()) t = this.parseDateTime(e);
        else if (this.isMultipleSelection()) {
          let o = e.split(this.multipleSeparator);
          t = [];
          for (let r of o) t.push(this.parseDateTime(r.trim()));
        } else if (this.isRangeSelection()) {
          let o = e.split(" " + this.rangeSeparator + " ");
          t = [];
          for (let r = 0; r < o.length; r++)
            t[r] = this.parseDateTime(o[r].trim());
        }
        return t;
      }
      parseDateTime(e) {
        let t,
          o = e.split(" ");
        if (this.timeOnly) (t = new Date()), this.populateTime(t, o[0], o[1]);
        else {
          let r = this.getDateFormat();
          if (this.showTime) {
            let a = this.hourFormat == "12" ? o.pop() : null,
              s = o.pop();
            (t = this.parseDate(o.join(" "), r)), this.populateTime(t, s, a);
          } else t = this.parseDate(e, r);
        }
        return t;
      }
      populateTime(e, t, o) {
        if (this.hourFormat == "12" && !o) throw "Invalid Time";
        this.pm = o === "PM" || o === "pm";
        let r = this.parseTime(t);
        e.setHours(r.hour), e.setMinutes(r.minute), e.setSeconds(r.second);
      }
      isValidDate(e) {
        return $i.isDate(e) && $i.isNotEmpty(e);
      }
      updateUI() {
        let e = this.value;
        Array.isArray(e) && (e = e[1] || e[0]);
        let t =
          this.defaultDate && this.isValidDate(this.defaultDate) && !this.value
            ? this.defaultDate
            : e && this.isValidDate(e)
            ? e
            : new Date();
        (this.currentMonth = t.getMonth()),
          (this.currentYear = t.getFullYear()),
          this.createMonths(this.currentMonth, this.currentYear),
          (this.showTime || this.timeOnly) &&
            (this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds()));
      }
      showOverlay() {
        this.overlayVisible ||
          (this.updateUI(),
          this.touchUI || (this.preventFocus = !0),
          (this.overlayVisible = !0));
      }
      hideOverlay() {
        this.inputfieldViewChild?.nativeElement.focus(),
          (this.overlayVisible = !1),
          this.clearTimePickerTimer(),
          this.touchUI && this.disableModality(),
          this.cd.markForCheck();
      }
      toggle() {
        this.inline ||
          (this.overlayVisible
            ? this.hideOverlay()
            : (this.showOverlay(),
              this.inputfieldViewChild?.nativeElement.focus()));
      }
      onOverlayAnimationStart(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              ((this.overlay = e.element),
              this.overlay?.setAttribute(this.attributeSelector, ""),
              this.appendOverlay(),
              this.updateFocus(),
              this.autoZIndex &&
                (this.touchUI
                  ? us.set(
                      "modal",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.modal
                    )
                  : us.set(
                      "overlay",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.overlay
                    )),
              this.alignOverlay(),
              this.onShow.emit(e));
            break;
          case "void":
            this.onOverlayHide(), this.onClose.emit(e);
            break;
        }
      }
      onOverlayAnimationDone(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              (this.bindDocumentClickListener(),
              this.bindDocumentResizeListener(),
              this.bindScrollListener());
            break;
          case "void":
            this.autoZIndex && us.clear(e.element);
            break;
        }
      }
      appendOverlay() {
        this.appendTo &&
          (this.appendTo === "body"
            ? this.document.body.appendChild(this.overlay)
            : me.appendChild(this.overlay, this.appendTo));
      }
      restoreOverlayAppend() {
        this.overlay &&
          this.appendTo &&
          this.el.nativeElement.appendChild(this.overlay);
      }
      alignOverlay() {
        this.touchUI
          ? this.enableModality(this.overlay)
          : this.overlay &&
            (this.appendTo
              ? (this.view === "date"
                  ? (this.overlay.style.width ||
                      (this.overlay.style.width =
                        me.getOuterWidth(this.overlay) + "px"),
                    this.overlay.style.minWidth ||
                      (this.overlay.style.minWidth =
                        me.getOuterWidth(
                          this.inputfieldViewChild?.nativeElement
                        ) + "px"))
                  : this.overlay.style.width ||
                    (this.overlay.style.width =
                      me.getOuterWidth(
                        this.inputfieldViewChild?.nativeElement
                      ) + "px"),
                me.absolutePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ))
              : me.relativePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ));
      }
      enableModality(e) {
        !this.mask &&
          this.touchUI &&
          ((this.mask = this.renderer.createElement("div")),
          this.renderer.setStyle(
            this.mask,
            "zIndex",
            String(parseInt(e.style.zIndex) - 1)
          ),
          me.addMultipleClasses(
            this.mask,
            "p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter"
          ),
          (this.maskClickListener = this.renderer.listen(
            this.mask,
            "click",
            (o) => {
              this.disableModality(), (this.overlayVisible = !1);
            }
          )),
          this.renderer.appendChild(this.document.body, this.mask),
          me.blockBodyScroll());
      }
      disableModality() {
        this.mask &&
          (me.addClass(this.mask, "p-component-overlay-leave"),
          this.animationEndListener ||
            (this.animationEndListener = this.renderer.listen(
              this.mask,
              "animationend",
              this.destroyMask.bind(this)
            )));
      }
      destroyMask() {
        if (!this.mask) return;
        this.renderer.removeChild(this.document.body, this.mask);
        let e = this.document.body.children,
          t;
        for (let o = 0; o < e.length; o++) {
          let r = e[o];
          if (me.hasClass(r, "p-datepicker-mask-scrollblocker")) {
            t = !0;
            break;
          }
        }
        t || me.unblockBodyScroll(),
          this.unbindAnimationEndListener(),
          this.unbindMaskClickListener(),
          (this.mask = null);
      }
      unbindMaskClickListener() {
        this.maskClickListener &&
          (this.maskClickListener(), (this.maskClickListener = null));
      }
      unbindAnimationEndListener() {
        this.animationEndListener &&
          this.mask &&
          (this.animationEndListener(), (this.animationEndListener = null));
      }
      writeValue(e) {
        if (((this.value = e), this.value && typeof this.value == "string"))
          try {
            this.value = this.parseValueFromString(this.value);
          } catch {
            this.keepInvalid && (this.value = e);
          }
        this.updateInputfield(), this.updateUI(), this.cd.markForCheck();
      }
      registerOnChange(e) {
        this.onModelChange = e;
      }
      registerOnTouched(e) {
        this.onModelTouched = e;
      }
      setDisabledState(e) {
        (this.disabled = e), this.cd.markForCheck();
      }
      getDateFormat() {
        return this.dateFormat || this.getTranslation("dateFormat");
      }
      getFirstDateOfWeek() {
        return (
          this._firstDayOfWeek || this.getTranslation(_n.FIRST_DAY_OF_WEEK)
        );
      }
      formatDate(e, t) {
        if (!e) return "";
        let o,
          r = (f) => {
            let y = o + 1 < t.length && t.charAt(o + 1) === f;
            return y && o++, y;
          },
          a = (f, y, x) => {
            let C = "" + y;
            if (r(f)) for (; C.length < x; ) C = "0" + C;
            return C;
          },
          s = (f, y, x, C) => (r(f) ? C[y] : x[y]),
          c = "",
          p = !1;
        if (e)
          for (o = 0; o < t.length; o++)
            if (p)
              t.charAt(o) === "'" && !r("'") ? (p = !1) : (c += t.charAt(o));
            else
              switch (t.charAt(o)) {
                case "d":
                  c += a("d", e.getDate(), 2);
                  break;
                case "D":
                  c += s(
                    "D",
                    e.getDay(),
                    this.getTranslation(_n.DAY_NAMES_SHORT),
                    this.getTranslation(_n.DAY_NAMES)
                  );
                  break;
                case "o":
                  c += a(
                    "o",
                    Math.round(
                      (new Date(
                        e.getFullYear(),
                        e.getMonth(),
                        e.getDate()
                      ).getTime() -
                        new Date(e.getFullYear(), 0, 0).getTime()) /
                        864e5
                    ),
                    3
                  );
                  break;
                case "m":
                  c += a("m", e.getMonth() + 1, 2);
                  break;
                case "M":
                  c += s(
                    "M",
                    e.getMonth(),
                    this.getTranslation(_n.MONTH_NAMES_SHORT),
                    this.getTranslation(_n.MONTH_NAMES)
                  );
                  break;
                case "y":
                  c += r("y")
                    ? e.getFullYear()
                    : (e.getFullYear() % 100 < 10 ? "0" : "") +
                      (e.getFullYear() % 100);
                  break;
                case "@":
                  c += e.getTime();
                  break;
                case "!":
                  c += e.getTime() * 1e4 + this.ticksTo1970;
                  break;
                case "'":
                  r("'") ? (c += "'") : (p = !0);
                  break;
                default:
                  c += t.charAt(o);
              }
        return c;
      }
      formatTime(e) {
        if (!e) return "";
        let t = "",
          o = e.getHours(),
          r = e.getMinutes(),
          a = e.getSeconds();
        return (
          this.hourFormat == "12" && o > 11 && o != 12 && (o -= 12),
          this.hourFormat == "12"
            ? (t += o === 0 ? 12 : o < 10 ? "0" + o : o)
            : (t += o < 10 ? "0" + o : o),
          (t += ":"),
          (t += r < 10 ? "0" + r : r),
          this.showSeconds && ((t += ":"), (t += a < 10 ? "0" + a : a)),
          this.hourFormat == "12" && (t += e.getHours() > 11 ? " PM" : " AM"),
          t
        );
      }
      parseTime(e) {
        let t = e.split(":"),
          o = this.showSeconds ? 3 : 2;
        if (t.length !== o) throw "Invalid time";
        let r = parseInt(t[0]),
          a = parseInt(t[1]),
          s = this.showSeconds ? parseInt(t[2]) : null;
        if (
          isNaN(r) ||
          isNaN(a) ||
          r > 23 ||
          a > 59 ||
          (this.hourFormat == "12" && r > 12) ||
          (this.showSeconds && (isNaN(s) || s > 59))
        )
          throw "Invalid time";
        return (
          this.hourFormat == "12" &&
            (r !== 12 && this.pm
              ? (r += 12)
              : !this.pm && r === 12 && (r -= 12)),
          { hour: r, minute: a, second: s }
        );
      }
      parseDate(e, t) {
        if (t == null || e == null) throw "Invalid arguments";
        if (((e = typeof e == "object" ? e.toString() : e + ""), e === ""))
          return null;
        let o,
          r,
          a,
          s = 0,
          c =
            typeof this.shortYearCutoff != "string"
              ? this.shortYearCutoff
              : (new Date().getFullYear() % 100) +
                parseInt(this.shortYearCutoff, 10),
          p = -1,
          f = -1,
          y = -1,
          x = -1,
          C = !1,
          M,
          k = (Q) => {
            let te = o + 1 < t.length && t.charAt(o + 1) === Q;
            return te && o++, te;
          },
          O = (Q) => {
            let te = k(Q),
              Z =
                Q === "@"
                  ? 14
                  : Q === "!"
                  ? 20
                  : Q === "y" && te
                  ? 4
                  : Q === "o"
                  ? 3
                  : 2,
              b = Q === "y" ? Z : 1,
              ge = new RegExp("^\\d{" + b + "," + Z + "}"),
              ee = e.substring(s).match(ge);
            if (!ee) throw "Missing number at position " + s;
            return (s += ee[0].length), parseInt(ee[0], 10);
          },
          P = (Q, te, Z) => {
            let b = -1,
              ge = k(Q) ? Z : te,
              ee = [];
            for (let _e = 0; _e < ge.length; _e++) ee.push([_e, ge[_e]]);
            ee.sort((_e, Re) => -(_e[1].length - Re[1].length));
            for (let _e = 0; _e < ee.length; _e++) {
              let Re = ee[_e][1];
              if (e.substr(s, Re.length).toLowerCase() === Re.toLowerCase()) {
                (b = ee[_e][0]), (s += Re.length);
                break;
              }
            }
            if (b !== -1) return b + 1;
            throw "Unknown name at position " + s;
          },
          U = () => {
            if (e.charAt(s) !== t.charAt(o))
              throw "Unexpected literal at position " + s;
            s++;
          };
        for (this.view === "month" && (y = 1), o = 0; o < t.length; o++)
          if (C) t.charAt(o) === "'" && !k("'") ? (C = !1) : U();
          else
            switch (t.charAt(o)) {
              case "d":
                y = O("d");
                break;
              case "D":
                P(
                  "D",
                  this.getTranslation(_n.DAY_NAMES_SHORT),
                  this.getTranslation(_n.DAY_NAMES)
                );
                break;
              case "o":
                x = O("o");
                break;
              case "m":
                f = O("m");
                break;
              case "M":
                f = P(
                  "M",
                  this.getTranslation(_n.MONTH_NAMES_SHORT),
                  this.getTranslation(_n.MONTH_NAMES)
                );
                break;
              case "y":
                p = O("y");
                break;
              case "@":
                (M = new Date(O("@"))),
                  (p = M.getFullYear()),
                  (f = M.getMonth() + 1),
                  (y = M.getDate());
                break;
              case "!":
                (M = new Date((O("!") - this.ticksTo1970) / 1e4)),
                  (p = M.getFullYear()),
                  (f = M.getMonth() + 1),
                  (y = M.getDate());
                break;
              case "'":
                k("'") ? U() : (C = !0);
                break;
              default:
                U();
            }
        if (s < e.length && ((a = e.substr(s)), !/^\s+/.test(a)))
          throw "Extra/unparsed characters found in date: " + a;
        if (
          (p === -1
            ? (p = new Date().getFullYear())
            : p < 100 &&
              (p +=
                new Date().getFullYear() -
                (new Date().getFullYear() % 100) +
                (p <= c ? 0 : -100)),
          x > -1)
        ) {
          (f = 1), (y = x);
          do {
            if (((r = this.getDaysCountInMonth(p, f - 1)), y <= r)) break;
            f++, (y -= r);
          } while (!0);
        }
        if (
          (this.view === "year" &&
            ((f = f === -1 ? 1 : f), (y = y === -1 ? 1 : y)),
          (M = this.daylightSavingAdjust(new Date(p, f - 1, y))),
          M.getFullYear() !== p || M.getMonth() + 1 !== f || M.getDate() !== y)
        )
          throw "Invalid date";
        return M;
      }
      daylightSavingAdjust(e) {
        return e
          ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
          : null;
      }
      updateFilledState() {
        this.filled = this.inputFieldValue && this.inputFieldValue != "";
      }
      isValidDateForTimeConstraints(e) {
        return this.keepInvalid
          ? !0
          : (!this.minDate || e >= this.minDate) &&
              (!this.maxDate || e <= this.maxDate);
      }
      onTodayButtonClick(e) {
        let t = new Date(),
          o = {
            day: t.getDate(),
            month: t.getMonth(),
            year: t.getFullYear(),
            otherMonth:
              t.getMonth() !== this.currentMonth ||
              t.getFullYear() !== this.currentYear,
            today: !0,
            selectable: !0,
          };
        this.createMonths(t.getMonth(), t.getFullYear()),
          this.onDateSelect(e, o),
          this.onTodayClick.emit(t);
      }
      onClearButtonClick(e) {
        this.updateModel(null),
          this.updateInputfield(),
          this.hideOverlay(),
          this.onClearClick.emit(e);
      }
      createResponsiveStyle() {
        if (this.numberOfMonths > 1 && this.responsiveOptions) {
          this.responsiveStyleElement ||
            ((this.responsiveStyleElement =
              this.renderer.createElement("style")),
            (this.responsiveStyleElement.type = "text/css"),
            me.setAttribute(
              this.responsiveStyleElement,
              "nonce",
              this.config?.csp()?.nonce
            ),
            this.renderer.appendChild(
              this.document.body,
              this.responsiveStyleElement
            ));
          let e = "";
          if (this.responsiveOptions) {
            let t = [...this.responsiveOptions]
              .filter((o) => !!(o.breakpoint && o.numMonths))
              .sort(
                (o, r) =>
                  -1 *
                  o.breakpoint.localeCompare(r.breakpoint, void 0, {
                    numeric: !0,
                  })
              );
            for (let o = 0; o < t.length; o++) {
              let { breakpoint: r, numMonths: a } = t[o],
                s = `
                        .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${a}) .p-datepicker-next {
                            display: inline-flex !important;
                        }
                    `;
              for (let c = a; c < this.numberOfMonths; c++)
                s += `
                            .p-datepicker[${
                              this.attributeSelector
                            }] .p-datepicker-group:nth-child(${c + 1}) {
                                display: none !important;
                            }
                        `;
              e += `
                        @media screen and (max-width: ${r}) {
                            ${s}
                        }
                    `;
            }
          }
          this.responsiveStyleElement.innerHTML = e;
        }
      }
      destroyResponsiveStyleElement() {
        this.responsiveStyleElement &&
          (this.responsiveStyleElement.remove(),
          (this.responsiveStyleElement = null));
      }
      bindDocumentClickListener() {
        this.documentClickListener ||
          this.zone.runOutsideAngular(() => {
            let e = this.el
              ? this.el.nativeElement.ownerDocument
              : this.document;
            this.documentClickListener = this.renderer.listen(
              e,
              "mousedown",
              (t) => {
                this.isOutsideClicked(t) &&
                  this.overlayVisible &&
                  this.zone.run(() => {
                    this.hideOverlay(),
                      this.onClickOutside.emit(t),
                      this.cd.markForCheck();
                  });
              }
            );
          });
      }
      unbindDocumentClickListener() {
        this.documentClickListener &&
          (this.documentClickListener(), (this.documentClickListener = null));
      }
      bindDocumentResizeListener() {
        !this.documentResizeListener &&
          !this.touchUI &&
          (this.documentResizeListener = this.renderer.listen(
            this.window,
            "resize",
            this.onWindowResize.bind(this)
          ));
      }
      unbindDocumentResizeListener() {
        this.documentResizeListener &&
          (this.documentResizeListener(), (this.documentResizeListener = null));
      }
      bindScrollListener() {
        this.scrollHandler ||
          (this.scrollHandler = new pc(
            this.containerViewChild?.nativeElement,
            () => {
              this.overlayVisible && this.hideOverlay();
            }
          )),
          this.scrollHandler.bindScrollListener();
      }
      unbindScrollListener() {
        this.scrollHandler && this.scrollHandler.unbindScrollListener();
      }
      isOutsideClicked(e) {
        return !(
          this.el.nativeElement.isSameNode(e.target) ||
          this.isNavIconClicked(e) ||
          this.el.nativeElement.contains(e.target) ||
          (this.overlay && this.overlay.contains(e.target))
        );
      }
      isNavIconClicked(e) {
        return (
          me.hasClass(e.target, "p-datepicker-prev") ||
          me.hasClass(e.target, "p-datepicker-prev-icon") ||
          me.hasClass(e.target, "p-datepicker-next") ||
          me.hasClass(e.target, "p-datepicker-next-icon")
        );
      }
      onWindowResize() {
        this.overlayVisible && !me.isTouchDevice() && this.hideOverlay();
      }
      onOverlayHide() {
        (this.currentView = this.view),
          this.mask && this.destroyMask(),
          this.unbindDocumentClickListener(),
          this.unbindDocumentResizeListener(),
          this.unbindScrollListener(),
          (this.overlay = null);
      }
      ngOnDestroy() {
        this.scrollHandler &&
          (this.scrollHandler.destroy(), (this.scrollHandler = null)),
          this.translationSubscription &&
            this.translationSubscription.unsubscribe(),
          this.overlay && this.autoZIndex && us.clear(this.overlay),
          this.destroyResponsiveStyleElement(),
          this.clearTimePickerTimer(),
          this.restoreOverlayAppend(),
          this.onOverlayHide();
      }
      static ɵfac = function (t) {
        return new (t || n)(j(ze), j(Ne), j(yi), j(it), j(He), j(hc), j(w0));
      };
      static ɵcmp = le({
        type: n,
        selectors: [["p-calendar"]],
        contentQueries: function (t, o, r) {
          if ((t & 1 && Tn(r, hs, 4), t & 2)) {
            let a;
            _t((a = bt())) && (o.templates = a);
          }
        },
        viewQuery: function (t, o) {
          if ((t & 1 && (Bt(d2, 5), Bt(u2, 5), Bt(h2, 5)), t & 2)) {
            let r;
            _t((r = bt())) && (o.containerViewChild = r.first),
              _t((r = bt())) && (o.inputfieldViewChild = r.first),
              _t((r = bt())) && (o.content = r.first);
          }
        },
        hostAttrs: [1, "p-element", "p-inputwrapper"],
        hostVars: 6,
        hostBindings: function (t, o) {
          t & 2 &&
            Ce("p-inputwrapper-filled", o.filled)(
              "p-inputwrapper-focus",
              o.focus
            )("p-calendar-clearable", o.showClear && !o.disabled);
        },
        inputs: {
          iconDisplay: "iconDisplay",
          style: "style",
          styleClass: "styleClass",
          inputStyle: "inputStyle",
          inputId: "inputId",
          name: "name",
          inputStyleClass: "inputStyleClass",
          placeholder: "placeholder",
          ariaLabelledBy: "ariaLabelledBy",
          ariaLabel: "ariaLabel",
          iconAriaLabel: "iconAriaLabel",
          disabled: [2, "disabled", "disabled", Ee],
          dateFormat: "dateFormat",
          multipleSeparator: "multipleSeparator",
          rangeSeparator: "rangeSeparator",
          inline: [2, "inline", "inline", Ee],
          showOtherMonths: [2, "showOtherMonths", "showOtherMonths", Ee],
          selectOtherMonths: [2, "selectOtherMonths", "selectOtherMonths", Ee],
          showIcon: [2, "showIcon", "showIcon", Ee],
          icon: "icon",
          appendTo: "appendTo",
          readonlyInput: [2, "readonlyInput", "readonlyInput", Ee],
          shortYearCutoff: "shortYearCutoff",
          monthNavigator: [2, "monthNavigator", "monthNavigator", Ee],
          yearNavigator: [2, "yearNavigator", "yearNavigator", Ee],
          hourFormat: "hourFormat",
          timeOnly: [2, "timeOnly", "timeOnly", Ee],
          stepYearPicker: [2, "stepYearPicker", "stepYearPicker", Ki],
          stepHour: [2, "stepHour", "stepHour", Ki],
          stepMinute: [2, "stepMinute", "stepMinute", Ki],
          stepSecond: [2, "stepSecond", "stepSecond", Ki],
          showSeconds: [2, "showSeconds", "showSeconds", Ee],
          required: [2, "required", "required", Ee],
          showOnFocus: [2, "showOnFocus", "showOnFocus", Ee],
          showWeek: [2, "showWeek", "showWeek", Ee],
          startWeekFromFirstDayOfYear: "startWeekFromFirstDayOfYear",
          showClear: [2, "showClear", "showClear", Ee],
          dataType: "dataType",
          selectionMode: "selectionMode",
          maxDateCount: [2, "maxDateCount", "maxDateCount", Ki],
          showButtonBar: [2, "showButtonBar", "showButtonBar", Ee],
          todayButtonStyleClass: "todayButtonStyleClass",
          clearButtonStyleClass: "clearButtonStyleClass",
          autofocus: [2, "autofocus", "autofocus", Ee],
          autoZIndex: [2, "autoZIndex", "autoZIndex", Ee],
          baseZIndex: [2, "baseZIndex", "baseZIndex", Ki],
          panelStyleClass: "panelStyleClass",
          panelStyle: "panelStyle",
          keepInvalid: [2, "keepInvalid", "keepInvalid", Ee],
          hideOnDateTimeSelect: [
            2,
            "hideOnDateTimeSelect",
            "hideOnDateTimeSelect",
            Ee,
          ],
          touchUI: [2, "touchUI", "touchUI", Ee],
          timeSeparator: "timeSeparator",
          focusTrap: [2, "focusTrap", "focusTrap", Ee],
          showTransitionOptions: "showTransitionOptions",
          hideTransitionOptions: "hideTransitionOptions",
          tabindex: [2, "tabindex", "tabindex", Ki],
          variant: "variant",
          minDate: "minDate",
          maxDate: "maxDate",
          disabledDates: "disabledDates",
          disabledDays: "disabledDays",
          yearRange: "yearRange",
          showTime: "showTime",
          responsiveOptions: "responsiveOptions",
          numberOfMonths: "numberOfMonths",
          firstDayOfWeek: "firstDayOfWeek",
          locale: "locale",
          view: "view",
          defaultDate: "defaultDate",
        },
        outputs: {
          onFocus: "onFocus",
          onBlur: "onBlur",
          onClose: "onClose",
          onSelect: "onSelect",
          onClear: "onClear",
          onInput: "onInput",
          onTodayClick: "onTodayClick",
          onClearClick: "onClearClick",
          onMonthChange: "onMonthChange",
          onYearChange: "onYearChange",
          onClickOutside: "onClickOutside",
          onShow: "onShow",
        },
        features: [Ot([eT]), At],
        ngContentSelectors: m2,
        decls: 4,
        vars: 12,
        consts: [
          ["container", ""],
          ["inputfield", ""],
          ["contentWrapper", ""],
          [3, "ngClass", "ngStyle"],
          [3, "ngIf"],
          [3, "class", "ngStyle", "ngClass", "click", 4, "ngIf"],
          [
            "type",
            "text",
            "role",
            "combobox",
            "aria-autocomplete",
            "none",
            "aria-haspopup",
            "dialog",
            "autocomplete",
            "off",
            "pAutoFocus",
            "",
            3,
            "focus",
            "keydown",
            "click",
            "blur",
            "input",
            "value",
            "readonly",
            "ngStyle",
            "placeholder",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "class",
            "p-datepicker-trigger p-button-icon-only",
            "tabindex",
            "0",
            3,
            "disabled",
            "click",
            4,
            "ngIf",
          ],
          [3, "styleClass", "click", 4, "ngIf"],
          ["class", "p-calendar-clear-icon", 3, "click", 4, "ngIf"],
          [3, "click", "styleClass"],
          [1, "p-calendar-clear-icon", 3, "click"],
          [4, "ngTemplateOutlet"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "tabindex",
            "0",
            1,
            "p-datepicker-trigger",
            "p-button-icon-only",
            3,
            "click",
            "disabled",
          ],
          [3, "ngClass", 4, "ngIf"],
          [3, "ngClass"],
          [3, "ngClass", "click", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "click", "ngClass"],
          [3, "click", "ngStyle", "ngClass"],
          ["class", "p-timepicker", 4, "ngIf"],
          ["class", "p-datepicker-buttonbar", 4, "ngIf"],
          [1, "p-datepicker-group-container"],
          ["class", "p-datepicker-group", 4, "ngFor", "ngForOf"],
          ["class", "p-monthpicker", 4, "ngIf"],
          ["class", "p-yearpicker", 4, "ngIf"],
          [1, "p-datepicker-group"],
          [1, "p-datepicker-header"],
          [
            "class",
            "p-datepicker-prev p-link",
            "type",
            "button",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            4,
            "ngIf",
          ],
          [1, "p-datepicker-title"],
          [
            "type",
            "button",
            "class",
            "p-datepicker-month p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          [
            "type",
            "button",
            "class",
            "p-datepicker-year p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          ["class", "p-datepicker-decade", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-next",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          [3, "styleClass", 4, "ngIf"],
          ["class", "p-datepicker-next-icon", 4, "ngIf"],
          ["class", "p-datepicker-calendar-container", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-prev",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          ["class", "p-datepicker-prev-icon", 4, "ngIf"],
          [3, "styleClass"],
          [1, "p-datepicker-prev-icon"],
          [
            "type",
            "button",
            1,
            "p-datepicker-month",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [
            "type",
            "button",
            1,
            "p-datepicker-year",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [1, "p-datepicker-decade"],
          [1, "p-datepicker-next-icon"],
          [1, "p-datepicker-calendar-container"],
          ["role", "grid", 1, "p-datepicker-calendar"],
          ["class", "p-datepicker-weekheader p-disabled", 4, "ngIf"],
          ["scope", "col", 4, "ngFor", "ngForOf"],
          [4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weekheader", "p-disabled"],
          ["scope", "col"],
          ["class", "p-datepicker-weeknumber", 4, "ngIf"],
          [3, "ngClass", 4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weeknumber"],
          [1, "p-disabled"],
          [
            "draggable",
            "false",
            "pRipple",
            "",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          ["class", "p-hidden-accessible", "aria-live", "polite", 4, "ngIf"],
          ["aria-live", "polite", 1, "p-hidden-accessible"],
          [1, "p-monthpicker"],
          [
            "class",
            "p-monthpicker-month",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-monthpicker-month",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-yearpicker"],
          [
            "class",
            "p-yearpicker-year",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-yearpicker-year",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-timepicker"],
          [1, "p-hour-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "keydown.enter",
            "keydown.space",
            "mousedown",
            "mouseup",
            "keyup.enter",
            "keyup.space",
            "mouseleave",
          ],
          [1, "p-separator"],
          [1, "p-minute-picker"],
          ["class", "p-separator", 4, "ngIf"],
          ["class", "p-second-picker", 4, "ngIf"],
          ["class", "p-ampm-picker", 4, "ngIf"],
          [1, "p-second-picker"],
          [1, "p-ampm-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "click",
            "keydown.enter",
          ],
          [1, "p-datepicker-buttonbar"],
          [
            "type",
            "button",
            "pButton",
            "",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            "label",
            "ngClass",
          ],
        ],
        template: function (t, o) {
          t & 1 &&
            (Ut(p2),
            u(0, "span", 3, 0),
            F(2, V2, 5, 22, "ng-template", 4)(3, JE, 9, 32, "div", 5),
            d()),
            t & 2 &&
              (Ve(o.styleClass),
              S(
                "ngClass",
                ud(
                  6,
                  f2,
                  o.showIcon && o.iconDisplay === "input",
                  o.showIcon && o.iconDisplay === "button",
                  o.timeOnly,
                  o.disabled,
                  o.focus || o.overlayVisible
                )
              )("ngStyle", o.style),
              g(2),
              S("ngIf", !o.inline),
              g(),
              S("ngIf", o.inline || o.overlayVisible));
        },
        dependencies: () => [
          Vt,
          $t,
          Je,
          Er,
          Ls,
          k0,
          fc,
          Qh,
          ps,
          Xh,
          Zh,
          Jh,
          ep,
          mc,
        ],
        styles: [
          `@layer primeng{.p-calendar{position:relative;display:inline-flex;max-width:100%}.p-calendar .p-inputtext{flex:1 1 auto;width:1%;text-overflow:ellipsis}.p-calendar-w-btn .p-inputtext{border-top-right-radius:0;border-bottom-right-radius:0}.p-calendar-w-btn .p-datepicker-trigger{border-top-left-radius:0;border-bottom-left-radius:0}.p-fluid .p-calendar{display:flex}.p-fluid .p-calendar .p-inputtext{width:1%}.p-calendar .p-datepicker{min-width:100%}.p-datepicker{width:auto;position:absolute;top:0;left:0}.p-datepicker-inline{display:inline-block;position:static;overflow-x:auto}.p-datepicker-header{display:flex;align-items:center;justify-content:space-between}.p-datepicker-header .p-datepicker-title{margin:0 auto}.p-datepicker-prev,.p-datepicker-next{cursor:pointer;display:inline-flex;justify-content:center;align-items:center;overflow:hidden;position:relative}.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group{flex:1 1 auto}.p-datepicker-multiple-month .p-datepicker-group-container{display:flex}.p-datepicker table{width:100%;border-collapse:collapse}.p-datepicker td>span{display:flex;justify-content:center;align-items:center;cursor:pointer;margin:0 auto;overflow:hidden;position:relative}.p-monthpicker-month{width:33.3%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-datepicker-buttonbar{display:flex;justify-content:space-between;align-items:center}.p-timepicker{display:flex;justify-content:center;align-items:center}.p-timepicker button{display:flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-timepicker>div{display:flex;align-items:center;flex-direction:column}.p-datepicker-touch-ui,.p-calendar .p-datepicker-touch-ui{position:fixed;top:50%;left:50%;min-width:80vw;transform:translate(-50%,-50%)}.p-yearpicker-year{width:50%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-calendar-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-datepicker-icon{pointer-events:none}.p-calendar-clearable{position:relative}}
`,
        ],
        encapsulation: 2,
        data: {
          animation: [
            $o("overlayAnimation", [
              Xn(
                "visibleTouchUI",
                Qt({ transform: "translate(-50%,-50%)", opacity: 1 })
              ),
              Bi("void => visible", [
                Qt({ opacity: 0, transform: "scaleY(0.8)" }),
                Li(
                  "{{showTransitionParams}}",
                  Qt({ opacity: 1, transform: "*" })
                ),
              ]),
              Bi("visible => void", [
                Li("{{hideTransitionParams}}", Qt({ opacity: 0 })),
              ]),
              Bi("void => visibleTouchUI", [
                Qt({
                  opacity: 0,
                  transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                }),
                Li("{{showTransitionParams}}"),
              ]),
              Bi("visibleTouchUI => void", [
                Li(
                  "{{hideTransitionParams}}",
                  Qt({
                    opacity: 0,
                    transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                  })
                ),
              ]),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return n;
  })(),
  A0 = (() => {
    class n {
      static ɵfac = function (t) {
        return new (t || n)();
      };
      static ɵmod = De({ type: n });
      static ɵinj = we({
        imports: [ke, Kh, gn, E0, Qh, ps, Xh, Zh, Jh, ep, S0, Kh, gn],
      });
    }
    return n;
  })();
var R0 = (() => {
  class n extends gi {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + aa() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = gt(n)))(o || n);
      };
    })();
    static ɵcmp = le({
      type: n,
      selectors: [["HomeIcon"]],
      standalone: !0,
      features: [qe, he],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "fill-rule",
          "evenodd",
          "clip-rule",
          "evenodd",
          "d",
          "M13.4175 6.79971C13.2874 6.80029 13.1608 6.75807 13.057 6.67955L12.4162 6.19913V12.6073C12.4141 12.7659 12.3502 12.9176 12.2379 13.0298C12.1257 13.142 11.9741 13.206 11.8154 13.208H8.61206C8.61179 13.208 8.61151 13.208 8.61123 13.2081C8.61095 13.208 8.61068 13.208 8.6104 13.208H5.41076C5.40952 13.208 5.40829 13.2081 5.40705 13.2081C5.40581 13.2081 5.40458 13.208 5.40334 13.208H2.20287C2.04418 13.206 1.89257 13.142 1.78035 13.0298C1.66813 12.9176 1.60416 12.7659 1.60209 12.6073V6.19914L0.961256 6.67955C0.833786 6.77515 0.673559 6.8162 0.515823 6.79367C0.358086 6.77114 0.215762 6.68686 0.120159 6.55939C0.0245566 6.43192 -0.0164931 6.2717 0.00604063 6.11396C0.0285744 5.95622 0.112846 5.8139 0.240316 5.7183L1.83796 4.52007L1.84689 4.51337L6.64868 0.912027C6.75267 0.834032 6.87915 0.79187 7.00915 0.79187C7.13914 0.79187 7.26562 0.834032 7.36962 0.912027L12.1719 4.51372L12.1799 4.51971L13.778 5.7183C13.8943 5.81278 13.9711 5.94732 13.9934 6.09553C14.0156 6.24373 13.9816 6.39489 13.8981 6.51934C13.8471 6.60184 13.7766 6.67054 13.6928 6.71942C13.609 6.76831 13.5144 6.79587 13.4175 6.79971ZM6.00783 12.0065H8.01045V7.60074H6.00783V12.0065ZM9.21201 12.0065V6.99995C9.20994 6.84126 9.14598 6.68965 9.03375 6.57743C8.92153 6.46521 8.76992 6.40124 8.61123 6.39917H5.40705C5.24836 6.40124 5.09675 6.46521 4.98453 6.57743C4.8723 6.68965 4.80834 6.84126 4.80627 6.99995V12.0065H2.80366V5.29836L7.00915 2.14564L11.2146 5.29836V12.0065H9.21201Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (t, o) {
        t & 1 &&
          (pt(),
          u(0, "svg", 0)(1, "g"),
          W(2, "path", 1),
          d(),
          u(3, "defs")(4, "clipPath", 2),
          W(5, "rect", 3),
          d()()()),
          t & 2 &&
            (Ve(o.getClassNames()),
            de("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ),
            g(),
            de("clip-path", o.pathId),
            g(3),
            S("id", o.pathId));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var ms = (() => {
  class n {
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = De({ type: n });
    static ɵinj = we({ imports: [ke] });
  }
  return n;
})();
var F0 = (() => {
  class n {
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = De({ type: n });
    static ɵinj = we({ imports: [ke, ki, ms, ps, R0, gn, ki, ms, gn] });
  }
  return n;
})();
var ur = (n) => ({ "is-invalid": n });
function iT(n, i) {
  n & 1 &&
    (u(0, "tr")(1, "td", 53)(2, "p"), m(3, "No Accounts Found"), d()()());
}
function nT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td"),
      m(6),
      d(),
      u(7, "td"),
      m(8),
      d(),
      u(9, "td"),
      m(10),
      d(),
      u(11, "td", 55)(12, "a", 56),
      z("click", function () {
        let o = N(e).$implicit,
          r = E(2);
        return V(r.onEdit(o.account_id));
      }),
      W(13, "i", 57),
      d(),
      u(14, "a", 58),
      z("click", function () {
        let o = N(e).$implicit,
          r = E(2);
        return V(r.selectCustomerForDeletion(o));
      }),
      W(15, "i", 59),
      d(),
      u(16, "div", 60)(17, "div", 61)(18, "div", 23)(19, "div", 62)(
        20,
        "h5",
        63
      ),
      m(21, "Delete User"),
      d()(),
      u(22, "div", 64),
      m(23, "HEY ARE YOU SURE TO DELETE..!"),
      d(),
      u(24, "div", 50)(25, "button", 65),
      m(26, " Cancel "),
      d(),
      u(27, "button", 66),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.closeModal());
      })("click", function () {
        N(e);
        let o = E(2);
        return V(o.deleteCustomerId());
      }),
      m(28, " Delete "),
      d()()()()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index;
    g(2),
      B(t + 1),
      g(2),
      B(e.fname),
      g(2),
      B(e.lname),
      g(2),
      B(e.email),
      g(2),
      B(e.phone);
  }
}
function oT(n, i) {
  if ((n & 1 && F(0, nT, 29, 5, "tr", 54), n & 2)) {
    let e = E();
    S("ngForOf", e.customerList());
  }
}
function rT(n, i) {
  n & 1 &&
    (u(0, "div", 67)(1, "span"), m(2, "Account Type is required."), d()());
}
function aT(n, i) {
  n & 1 && (u(0, "span"), m(1, "First Name is required."), d());
}
function sT(n, i) {
  n & 1 &&
    (u(0, "span"), m(1, "First Name must be at least 3 characters long."), d());
}
function lT(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 67),
      F(1, aT, 2, 0, "span", 68)(2, sT, 2, 0, "span", 68),
      d()),
    n & 2)
  ) {
    let e,
      t,
      o = E();
    g(),
      S(
        "ngIf",
        (e = o.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      S(
        "ngIf",
        (t = o.useForm.get("fname")) == null || t.errors == null
          ? null
          : t.errors.minlength
      );
  }
}
function cT(n, i) {
  n & 1 && (u(0, "span"), m(1, "Last Name is required."), d());
}
function dT(n, i) {
  n & 1 &&
    (u(0, "span"), m(1, "Last Name must be at least 3 characters long."), d());
}
function uT(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 67),
      F(1, cT, 2, 0, "span", 68)(2, dT, 2, 0, "span", 68),
      d()),
    n & 2)
  ) {
    let e,
      t,
      o = E();
    g(),
      S(
        "ngIf",
        (e = o.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      S(
        "ngIf",
        (t = o.useForm.get("lname")) == null || t.errors == null
          ? null
          : t.errors.minlength
      );
  }
}
function hT(n, i) {
  if ((n & 1 && (u(0, "option", 69), m(1), d()), n & 2)) {
    let e = i.$implicit;
    S("value", e.dealer_code), g(), oe(" ", e.dealer_code, " ");
  }
}
function pT(n, i) {
  if ((n & 1 && (u(0, "option", 69), m(1), d()), n & 2)) {
    let e = i.$implicit;
    S("value", e.dealer_code), g(), oe(" ", e.dealer_code, " ");
  }
}
function mT(n, i) {
  n & 1 && (u(0, "div", 67)(1, "span"), m(2, "Dealer is required."), d()());
}
function fT(n, i) {
  n & 1 && (u(0, "span"), m(1, "Email is required."), d());
}
function gT(n, i) {
  n & 1 && (u(0, "span"), m(1, "Please enter a valid email."), d());
}
function _T(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 67),
      F(1, fT, 2, 0, "span", 68)(2, gT, 2, 0, "span", 68),
      d()),
    n & 2)
  ) {
    let e,
      t,
      o = E();
    g(),
      S(
        "ngIf",
        (e = o.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      S(
        "ngIf",
        (t = o.useForm.get("email")) == null || t.errors == null
          ? null
          : t.errors.email
      );
  }
}
function bT(n, i) {
  n & 1 && (u(0, "span"), m(1, "Phone is required."), d());
}
function vT(n, i) {
  n & 1 &&
    (u(0, "span"), m(1, "Phone must be at least 3 characters long."), d());
}
function yT(n, i) {
  n & 1 && (u(0, "span"), m(1, "Phone must contain only numbers."), d());
}
function xT(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 67),
      F(1, bT, 2, 0, "span", 68)(2, vT, 2, 0, "span", 68)(
        3,
        yT,
        2,
        0,
        "span",
        68
      ),
      d()),
    n & 2)
  ) {
    let e,
      t,
      o,
      r = E();
    g(),
      S(
        "ngIf",
        (e = r.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      S(
        "ngIf",
        (t = r.useForm.get("phone")) == null || t.errors == null
          ? null
          : t.errors.minlength
      ),
      g(),
      S(
        "ngIf",
        (o = r.useForm.get("phone")) == null || o.errors == null
          ? null
          : o.errors.pattern
      );
  }
}
function CT(n, i) {
  n & 1 && (u(0, "span"), m(1, "Mobile is required."), d());
}
function wT(n, i) {
  n & 1 &&
    (u(0, "span"), m(1, "Mobile must be at least 3 characters long."), d());
}
function DT(n, i) {
  n & 1 && (u(0, "span"), m(1, "Mobile must contain only numbers."), d());
}
function ST(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 67),
      F(1, CT, 2, 0, "span", 68)(2, wT, 2, 0, "span", 68)(
        3,
        DT,
        2,
        0,
        "span",
        68
      ),
      d()),
    n & 2)
  ) {
    let e,
      t,
      o,
      r = E();
    g(),
      S(
        "ngIf",
        (e = r.useForm.get("mobile")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      S(
        "ngIf",
        (t = r.useForm.get("mobile")) == null || t.errors == null
          ? null
          : t.errors.minlength
      ),
      g(),
      S(
        "ngIf",
        (o = r.useForm.get("mobile")) == null || o.errors == null
          ? null
          : o.errors.pattern
      );
  }
}
function MT(n, i) {
  if (n & 1) {
    let e = ce();
    $e(0),
      u(1, "button", 70),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.onUpdate());
      }),
      m(2, " Edit "),
      d(),
      Ge();
  }
  if (n & 2) {
    let e = E();
    g(), S("disabled", !e.isCustomerNameChanged());
  }
}
function ET(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 66),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.onSave());
      }),
      m(1, " save "),
      d();
  }
  if (n & 2) {
    let e = E();
    de("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
var gc = class n {
  constructor(i, e) {
    this.modalService = i;
    this.cdRef = e;
    this.initializeForm();
  }
  totalCustomer = pe(0);
  customerList = pe([]);
  dealerList = pe([]);
  masterSrv = ne(Ye);
  toastr = ne(mi);
  previousEmail = "";
  useForm = new St({});
  customerObj = new ds();
  dealerObj = new lo();
  isEditMode = !1;
  previousValue = "";
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  ngOnInit() {
    this.initializeForm(),
      this.loadCustomers(),
      this.loadDealers(),
      this.getAllCustomer();
  }
  isModalVisible = !1;
  initializeForm() {
    this.useForm = new St({
      account_type: new nt("", [Oe.required]),
      fname: new nt("", [Oe.required, Oe.minLength(3)]),
      lname: new nt("", [Oe.required, Oe.minLength(3)]),
      email: new nt("", [Oe.required, Oe.email]),
      phone: new nt("", [Oe.required, Oe.pattern(/^\d+$/)]),
      mobile: new nt("", [Oe.required, Oe.pattern(/^\d+$/)]),
      dealer_code: new nt("", [Oe.required]),
    });
  }
  openModal(i) {
    (this.isEditMode = !1),
      console.log("hello openmodal", i),
      this.useForm.reset(),
      (this.isModalVisible = !0),
      i
        ? (console.log("\u{1F680} Customer Data:", i),
          (this.customerObj = se({}, i)),
          (this.previousValue = i.account_name || ""),
          this.useForm.patchValue({
            account_type: i.account_type || "",
            fname: i.fname || "",
            lname: i.lname || "",
            email: i.email || "",
            phone: i.phone || "",
            mobile: i.mobile || "",
            dealer_code: i.dealer_code || "",
          }),
          (this.previousEmail = i.email || ""),
          console.log("Edit Mode: Customer Object ->", this.customerObj))
        : ((this.customerObj = new ds()),
          (this.customerObj.account_id = ""),
          console.log(
            "New Customer Mode: Reset customerObj",
            this.customerObj
          ));
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalVisible = !1);
  }
  isEmailChange() {
    return this.useForm.value.email !== this.previousValue;
  }
  loadCustomers() {
    this.masterSrv.getAllCustomer().subscribe(
      (i) => {
        console.log("Fetched Accounts:", i),
          this.customerList.set(i.data.rows),
          this.totalCustomer.set(i.data.count);
      },
      (i) => {
        console.error("Error fetching customers:", i),
          this.toastr.error("Failed to load customers", "Error");
      }
    );
  }
  getDealerCode(i) {
    let e = this.dealerList().find((t) => t.dealer_id === i);
    return console.log(this.dealerList), e?.dealer_code?.toString() ?? "N/A";
  }
  onDealerChange() {
    console.log("on dealer chnage func called "),
      console.log("\u{1F4DD} Dealer List:", this.dealerList());
    let i = this.dealerList().find(
      (e) => e.dealer_id === this.customerObj.dealer_id
    );
    console.log("Selected Dealer:", i),
      i &&
        ((this.customerObj.dealer_code = i.dealer_code),
        this.useForm.patchValue({ dealer_code: i.dealer_code }));
  }
  loadDealers() {
    this.masterSrv.getAllDealer().subscribe(
      (i) => {
        this.dealerList.set(i.data.dealer.rows), console.log(i);
      },
      (i) => {
        this.toastr.error("Serverside Error", "Error");
      }
    );
  }
  createCustomer() {
    console.log("create cust called "),
      console.log("\u{1F6E0} Submitting customer data:", this.customerObj),
      console.log("\u{1F6E0} createCustomer() triggered!"),
      this.masterSrv.createCustomer(this.customerObj).subscribe(
        (i) => {
          this.toastr.success("Customerrr created successfully!", "Success"),
            this.getAllCustomer();
        },
        (i) => {
          this.toastr.error("Error creating dealer", "Error");
        }
      );
  }
  selectedCustomerForDeletion = null;
  selectCustomerForDeletion(i) {
    this.selectedCustomerForDeletion = i;
  }
  deleteCustomerId() {
    console.log(
      "this is the select user",
      this.selectCustomerForDeletion,
      this.selectedCustomerForDeletion
    ),
      this.selectedCustomerForDeletion &&
      this.selectedCustomerForDeletion.account_id
        ? this.masterSrv
            .deleteCustomer(this.selectedCustomerForDeletion.account_id)
            .subscribe(
              (i) => {
                this.toastr.success("Accounts deleted successfully", "Success"),
                  this.getAllCustomer(),
                  $("#deleteModal").modal("hide"),
                  $(".modal-backdrop").remove(),
                  $("body").removeClass("modal-open");
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No accounts selected for deletion");
  }
  onUpdate() {
    console.log("onupdate called "),
      this.useForm.valid
        ? ((this.customerObj = se(
            se({}, this.customerObj),
            this.useForm.value
          )),
          console.log(
            "\u{1F680} Updated Payload before API call:",
            this.customerObj
          ),
          this.masterSrv.updateCustomer(this.customerObj).subscribe(
            (i) => {
              console.log("\u2705 API Response:", i),
                i.status === 200
                  ? (this.toastr.success(i.message, "Success"),
                    setTimeout(() => {
                      this.getAllCustomer();
                    }, 500))
                  : this.toastr.error(
                      "Update failed, no data received",
                      "Error"
                    );
            },
            (i) => {
              console.error("\u274C API Error:", i),
                this.toastr.error("Failed to update customer", "Error");
            }
          ))
        : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  getAllCustomer() {
    this.masterSrv.getAllCustomer().subscribe(
      (i) => {
        console.log("Fetched Customers:", i),
          console.log("customer list updated:", i.data.rows),
          this.customerList.set(i.data.rows),
          this.totalCustomer.set(i.data.count);
      },
      (i) => {
        this.toastr.error("Error fetching dealers", "Error");
      }
    );
  }
  onEdit(i) {
    console.log("Edit button clicked. Dealer ID:", i),
      (this.isEditMode = !0),
      this.masterSrv.getCustomerById(i).subscribe(
        (e) => {
          if ((console.log("API Response:", e), e?.data)) {
            let t = e.data;
            (this.customerObj = at(se({}, t), {
              dealer_code: Number(t.dealer_code),
            })),
              this.useForm.patchValue({
                dealer_code: Number(t.dealer_code),
                dealer_name: t.account_name || "",
                account_type: t.account_type || "",
                fname: t.fname || "",
                lname: t.lname || "",
                email: t.email || "",
                phone: t.phone || "",
                mobile: t.mobile || "",
                account_id: t.account_id || "",
              }),
              console.log("Dealer data set, opening modal..."),
              setTimeout(() => {
                $("#exampleModalCenter").modal("show");
              }, 0);
          } else
            console.error("Dealer data is missing in response:", e),
              this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          console.error("Error fetching dealer details:", e),
            this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isCustomerNameChanged() {
    return this.useForm.value.name !== this.previousValue;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let i = this.useForm.value;
    console.log("Form Data being sent to API:", i),
      this.masterSrv.createCustomer(i).subscribe({
        next: () => {
          this.toastr.success("Accounts created successfully!", "Success"),
            this.getAllCustomer(),
            this.closeModal();
        },
        error: (e) => {
          console.error("Accounts creation error:", e),
            this.toastr.error(
              e.message || "Failed to create user",
              "Creation Error"
            );
        },
      });
  }
  createNewCustomer() {
    this.masterSrv.createCustomer(this.customerObj).subscribe(
      (i) => {
        this.toastr.success("customer created successfully!", "Success"),
          this.getAllCustomer();
      },
      (i) => {
        this.toastr.error("Error creating dealer", "Error");
      }
    );
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ln), j(it));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-customer"]],
    standalone: !0,
    features: [he],
    decls: 109,
    vars: 36,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-md-4", "col-sm-4", "mb-4", "mb-xl-0"],
      [
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "col-sm-4", "col-md-4", "mb-4", "mb-xl-0"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [1, "row"],
      [1, "col-lg-12"],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-lg",
        "custom-modal",
      ],
      [1, "modal-dialog", "modal-lg"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", 2, "align-items", "center", "margin-inline", "auto"],
      ["type", "button", "data-dismiss", "modal", 1, "close"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "form-group", "col-md-6"],
      ["for", "account_type", 1, "form-label"],
      [
        "formControlName",
        "account_type",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "Individual"],
      ["value", "Corporate"],
      ["value", "Retailer"],
      ["class", "text-danger", 4, "ngIf"],
      ["for", "fname", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "First Name",
        "formControlName",
        "fname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "name", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Last Name",
        "formControlName",
        "lname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_code", 1, "form-label"],
      [
        "id",
        "dealer_code",
        "formControlName",
        "dealer_code",
        1,
        "form-select",
        "form-control",
        "form-control-lg",
        3,
        "change",
        "disabled",
        "ngClass",
      ],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "email", 1, "form-label"],
      [
        "type",
        "email",
        "placeholder",
        "E-mail",
        "formControlName",
        "email",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "phone", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Phone",
        "formControlName",
        "phone",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "mobile", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Mobile",
        "formControlName",
        "mobile",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      ["colspan", "6", 1, "text-center"],
      [4, "ngFor", "ngForOf"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-toggle",
        "modal",
        "data-target",
        ".bd-example-modal-sm",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-sm",
      ],
      [1, "modal-dialog", "modal-sm"],
      [1, "modal-header", "text-center", 2, "margin-inline", "auto"],
      [1, "modal-title", "text-center"],
      [1, "modal-body"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      [1, "text-danger"],
      [4, "ngIf"],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      if (e & 1) {
        let o = ce();
        u(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
          m(6, "Utils"),
          d()(),
          u(7, "li", 7)(8, "a", 8),
          m(9, "Accounts"),
          d()()()(),
          u(10, "div", 9)(11, "div", 10)(12, "a", 11),
          z("click", function () {
            return N(o), V(t.openModal(t.customerObj));
          }),
          W(13, "i", 12),
          m(14, "Add Account"),
          d()(),
          u(15, "div", 13)(16, "div", 14)(17, "p", 15),
          m(18, "Total Account"),
          d(),
          u(19, "h3", 16),
          m(20),
          d()()()(),
          u(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "table", 20)(
            25,
            "thead"
          )(26, "tr")(27, "th"),
          m(28, "Sr No"),
          d(),
          u(29, "th"),
          m(30, "Account Name"),
          d(),
          u(31, "th"),
          m(32, "Last Name"),
          d(),
          u(33, "th"),
          m(34, "E-mail"),
          d(),
          u(35, "th"),
          m(36, "Phone"),
          d(),
          u(37, "th"),
          m(38, "Action"),
          d()()(),
          u(39, "tbody"),
          F(40, iT, 4, 0, "tr")(41, oT, 1, 1, "tr"),
          d()()()()()()(),
          u(42, "div", 21)(43, "div", 22)(44, "div", 23)(45, "div", 24)(
            46,
            "h5",
            25
          ),
          m(47, " Add New Account "),
          d(),
          u(48, "button", 26)(49, "span", 27),
          m(50, "\xD7"),
          d()()(),
          u(51, "div", 28)(52, "div", 17)(53, "div", 29)(54, "label", 30),
          m(55, "Account Type"),
          d(),
          u(56, "select", 31)(57, "option", 32),
          m(58, "Select Account Type"),
          d(),
          u(59, "option", 33),
          m(60, "Individual"),
          d(),
          u(61, "option", 34),
          m(62, "Corporate"),
          d(),
          u(63, "option", 35),
          m(64, "Retailer"),
          d()(),
          F(65, rT, 3, 0, "div", 36),
          d(),
          u(66, "div", 29)(67, "label", 37),
          m(68, "First Name"),
          d(),
          W(69, "input", 38),
          F(70, lT, 3, 2, "div", 36),
          d()(),
          u(71, "div", 17)(72, "div", 29)(73, "label", 39),
          m(74, "Last Name"),
          d(),
          W(75, "input", 40),
          F(76, uT, 3, 2, "div", 36),
          d(),
          u(77, "div", 29)(78, "label", 41),
          m(79, "Dealer Code"),
          d(),
          u(80, "select", 42),
          z("change", function () {
            return N(o), V(t.onDealerChange());
          }),
          u(81, "option", 32),
          m(82, "Select Dealer"),
          d(),
          F(83, hT, 2, 2, "option", 43)(84, pT, 2, 2, "option", 43),
          d(),
          F(85, mT, 3, 0, "div", 36),
          d()(),
          u(86, "div", 17)(87, "div", 29)(88, "label", 44),
          m(89, "E-mail"),
          d(),
          W(90, "input", 45),
          F(91, _T, 3, 2, "div", 36),
          d(),
          u(92, "div", 29)(93, "label", 46),
          m(94, "Phone"),
          d(),
          W(95, "input", 47),
          F(96, xT, 4, 3, "div", 36),
          d()(),
          u(97, "div", 17)(98, "div", 29)(99, "label", 48),
          m(100, "Mobile"),
          d(),
          W(101, "input", 49),
          F(102, ST, 4, 3, "div", 36),
          d()()(),
          u(103, "div", 50),
          F(104, MT, 3, 1, "ng-container", 51),
          u(105, "button", 52),
          z("click", function () {
            return N(o), V(t.closeModal());
          }),
          m(106, " Close "),
          d(),
          F(107, ET, 2, 1, "ng-template", null, 0, Wt),
          d()()()();
      }
      if (e & 2) {
        let o,
          r,
          a,
          s,
          c,
          p,
          f,
          y,
          x,
          C,
          M,
          k,
          O,
          P,
          U,
          Q = Dt(108);
        g(20),
          oe(" ", t.totalCustomer(), " "),
          g(20),
          un(t.customerList().length === 0 ? 40 : 41),
          g(11),
          S("formGroup", t.useForm),
          g(5),
          S(
            "ngClass",
            ye(
              22,
              ur,
              ((o = t.useForm.get("account_type")) == null
                ? null
                : o.touched) &&
                ((o = t.useForm.get("account_type")) == null ? null : o.invalid)
            )
          ),
          g(9),
          S(
            "ngIf",
            ((r = t.useForm.get("account_type")) == null ? null : r.touched) &&
              ((r = t.useForm.get("account_type")) == null ? null : r.invalid)
          ),
          g(4),
          S(
            "ngClass",
            ye(
              24,
              ur,
              ((a = t.useForm.get("fname")) == null ? null : a.touched) &&
                ((a = t.useForm.get("fname")) == null ? null : a.invalid)
            )
          ),
          g(),
          S(
            "ngIf",
            ((s = t.useForm.get("fname")) == null ? null : s.touched) &&
              ((s = t.useForm.get("fname")) == null ? null : s.invalid)
          ),
          g(5),
          S(
            "ngClass",
            ye(
              26,
              ur,
              ((c = t.useForm.get("lname")) == null ? null : c.touched) &&
                ((c = t.useForm.get("lname")) == null ? null : c.invalid)
            )
          ),
          g(),
          S(
            "ngIf",
            ((p = t.useForm.get("lname")) == null ? null : p.touched) &&
              ((p = t.useForm.get("lname")) == null ? null : p.invalid)
          ),
          g(4),
          S(
            "disabled",
            (f = t.useForm.get("account_id")) == null ? null : f.value
          )(
            "ngClass",
            ye(
              28,
              ur,
              ((y = t.useForm.get("dealer_code")) == null ? null : y.touched) &&
                ((y = t.useForm.get("dealer_code")) == null ? null : y.invalid)
            )
          ),
          g(3),
          S("ngForOf", t.dealerList()),
          g(),
          S("ngForOf", t.staticDealerList),
          g(),
          S(
            "ngIf",
            ((x = t.useForm.get("dealer_code")) == null ? null : x.touched) &&
              ((x = t.useForm.get("dealer_code")) == null ? null : x.invalid)
          ),
          g(5),
          S(
            "ngClass",
            ye(
              30,
              ur,
              ((C = t.useForm.get("email")) == null ? null : C.touched) &&
                ((C = t.useForm.get("email")) == null ? null : C.invalid)
            )
          ),
          g(),
          S(
            "ngIf",
            ((M = t.useForm.get("email")) == null ? null : M.touched) &&
              ((M = t.useForm.get("email")) == null ? null : M.invalid)
          ),
          g(4),
          S(
            "ngClass",
            ye(
              32,
              ur,
              ((k = t.useForm.get("phone")) == null ? null : k.touched) &&
                ((k = t.useForm.get("phone")) == null ? null : k.invalid)
            )
          ),
          g(),
          S(
            "ngIf",
            ((O = t.useForm.get("phone")) == null ? null : O.touched) &&
              ((O = t.useForm.get("phone")) == null ? null : O.invalid)
          ),
          g(5),
          S(
            "ngClass",
            ye(
              34,
              ur,
              ((P = t.useForm.get("mobile")) == null ? null : P.touched) &&
                ((P = t.useForm.get("mobile")) == null ? null : P.invalid)
            )
          ),
          g(),
          S(
            "ngIf",
            ((U = t.useForm.get("mobile")) == null ? null : U.touched) &&
              ((U = t.useForm.get("mobile")) == null ? null : U.invalid)
          ),
          g(2),
          S("ngIf", t.customerObj.account_id)("ngIfElse", Q);
      }
    },
    dependencies: [
      ke,
      Vt,
      $t,
      Je,
      Ai,
      Ii,
      Pi,
      ni,
      In,
      hi,
      Oi,
      ct,
      dc,
      cr,
      sc,
      ac,
      Qi,
      ji,
      zi,
      A0,
      F0,
      ki,
      Ln,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:350px;padding:20px;flex-grow:1}",
    ],
  });
};
var L0 = Kb(V0());
var TT = () => ["/Admin/dealer"],
  kT = (n) => ["/Admin/single-task", n];
function OT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 11)(1, "div", 19)(2, "div", 29)(3, "div", 30)(4, "p", 31),
      m(5),
      d(),
      u(6, "h4", 32),
      m(7, " Dealer Code : "),
      u(8, "span", 33),
      m(9),
      d()()()()(),
      u(10, "div", 19)(11, "div", 34),
      z("click", function () {
        N(e);
        let o = E();
        return (
          o.toggleUsersTable(),
          V(o.getAllUser(o.dealerData.data.dealer.dealer_code))
        );
      }),
      u(12, "div", 30)(13, "p", 31),
      m(14, "Total Users"),
      d(),
      u(15, "h4", 32)(16, "span", 33),
      m(17),
      d(),
      m(18, " User "),
      d()()()(),
      u(19, "div", 19)(20, "div", 35),
      z("click", function () {
        N(e);
        let o = E();
        return (
          o.toggleOpportunityTable(),
          V(o.getAllOpp(o.dealerData.data.dealer.dealer_id))
        );
      }),
      u(21, "p", 31),
      m(22, "Total Opportunities"),
      d(),
      u(23, "h4", 32)(24, "span", 33),
      m(25),
      d(),
      m(26, " Opportunities "),
      d()()(),
      u(27, "div", 19)(28, "div", 34),
      z("click", function () {
        N(e);
        let o = E();
        return (
          o.toggleLeadsTable(),
          V(o.getAllLeads(o.dealerData.data.dealer.dealer_id))
        );
      }),
      u(29, "div", 30)(30, "p", 31),
      m(31, "Total Lead"),
      d(),
      u(32, "h4", 32)(33, "span", 33),
      m(34),
      d(),
      m(35, " Lead "),
      d()()()(),
      u(36, "div", 19)(37, "div", 34),
      z("click", function () {
        N(e);
        let o = E();
        return (
          o.toggleTasksTable(),
          V(o.getAllTasks(o.dealerData.data.dealer.dealer_id))
        );
      }),
      u(38, "div", 30)(39, "p", 31),
      m(40, "Total Tasks"),
      d(),
      u(41, "h4", 32)(42, "span", 33),
      m(43),
      d(),
      m(44, " Tasks "),
      d()()()(),
      u(45, "div", 19)(46, "div", 34),
      z("click", function () {
        N(e);
        let o = E();
        return (
          o.toggleEventTable(),
          V(o.getAllEvent(o.dealerData.data.dealer.dealer_id))
        );
      }),
      u(47, "div", 30)(48, "p", 31),
      m(49, "Total Events"),
      d(),
      u(50, "h4", 32)(51, "span", 33),
      m(52),
      d(),
      m(53, " Events "),
      d()()()()();
  }
  if (n & 2) {
    let e = E();
    g(5),
      oe(" ", e.dealerData.data.dealer.dealer_name, " "),
      g(4),
      B(e.dealerData.data.dealer.dealer_code),
      g(8),
      B(e.dealerData.data.users),
      g(8),
      B(e.dealerData.data.opportunities),
      g(9),
      B(e.dealerData.data.leads),
      g(9),
      B(e.dealerData.data.tasks),
      g(9),
      oe("", e.dealerData.data.events, " ");
  }
}
function IT(n, i) {
  n & 1 &&
    (u(0, "tr")(1, "td", 51)(2, "p", 52),
    m(3, "\u26A0\uFE0F No Users Found!"),
    d()()());
}
function PT(n, i) {
  if (
    (n & 1 &&
      (u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td"),
      m(6),
      d(),
      u(7, "td"),
      m(8),
      d(),
      u(9, "td"),
      m(10),
      d(),
      u(11, "td"),
      m(12),
      d(),
      u(13, "td"),
      m(14),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      o = E(3);
    g(2),
      B((o.currentPage - 1) * o.itemsPerPage + t + 1),
      g(2),
      B(e.user_account_id || "N/A"),
      g(2),
      B(e.name || "N/A"),
      g(2),
      B(e.email || "N/A"),
      g(2),
      B(e.phone || "N/A"),
      g(2),
      B(e.user_role || "N/A"),
      g(2),
      B(e.dealer_code || "N/A");
  }
}
function AT(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 47)(1, "table", 48)(2, "thead")(3, "tr")(4, "th"),
      m(5, "Sr No"),
      d(),
      u(6, "th"),
      m(7, "Account ID"),
      d(),
      u(8, "th"),
      m(9, "Name"),
      d(),
      u(10, "th"),
      m(11, "Email"),
      d(),
      u(12, "th"),
      m(13, "Phone"),
      d(),
      u(14, "th"),
      m(15, "Role"),
      d(),
      u(16, "th"),
      m(17, "Dealer Code"),
      d()()(),
      u(18, "tbody"),
      F(19, IT, 4, 0, "tr", 49)(20, PT, 15, 7, "tr", 50),
      d()()()),
    n & 2)
  ) {
    let e = E(2);
    g(19),
      S("ngIf", !e.paginatedUsers || e.paginatedUsers.length === 0),
      g(),
      S("ngForOf", e.paginatedUsers);
  }
}
function RT(n, i) {
  if ((n & 1 && ($e(0), m(1), Ge()), n & 2)) {
    let e = E(2);
    g(),
      Mi(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalUsers,
        " entries "
      );
  }
}
function FT(n, i) {
  n & 1 && m(0, " No entries available ");
}
function NT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "li", 44)(1, "button", 53),
      z("click", function () {
        let o = N(e).$implicit,
          r = E(2);
        return V(r.goToPage(o));
      }),
      m(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = E(2);
    Ce("active", e === t.currentPage)("disabled", !t.hasDataForPage(e)),
      g(),
      S("disabled", !t.hasDataForPage(e)),
      g(),
      oe(" ", e, " ");
  }
}
function VT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 36),
      F(1, AT, 21, 2, "div", 37),
      u(2, "div", 38)(3, "div", 39)(4, "p", 40),
      F(5, RT, 2, 3, "ng-container", 41)(
        6,
        FT,
        1,
        0,
        "ng-template",
        null,
        0,
        Wt
      ),
      d()(),
      u(8, "div", 39)(9, "nav", 42)(10, "ul", 43)(11, "li", 44)(
        12,
        "button",
        45
      ),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.goToPreviousPage());
      }),
      m(13, "Previous"),
      d()(),
      F(14, NT, 3, 6, "li", 46),
      u(15, "li", 44)(16, "button", 45),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.goToNextPage());
      }),
      m(17, "Next"),
      d()()()()()()();
  }
  if (n & 2) {
    let e = Dt(7),
      t = E();
    g(),
      S("ngIf", t.selectedOption() === "users"),
      g(4),
      S(
        "ngIf",
        t.totalUsers > 0 && (t.currentPage - 1) * t.itemsPerPage < t.totalUsers
      )("ngIfElse", e),
      g(6),
      Ce("disabled", t.currentPage === 1),
      g(3),
      S("ngForOf", t.visiblePageNumbers),
      g(),
      Ce("disabled", t.currentPage === t.totalPages);
  }
}
function LT(n, i) {
  n & 1 &&
    (u(0, "tr")(1, "td", 57)(2, "p", 52),
    m(3, "\u26A0\uFE0F No Leads Found!"),
    d()()());
}
function BT(n, i) {
  if (
    (n & 1 &&
      (u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td"),
      m(6),
      d(),
      u(7, "td"),
      m(8),
      d(),
      u(9, "td"),
      m(10),
      d(),
      u(11, "td"),
      m(12),
      d(),
      u(13, "td"),
      m(14),
      d(),
      u(15, "td"),
      m(16),
      d(),
      u(17, "td"),
      m(18),
      d(),
      u(19, "td"),
      m(20),
      d(),
      u(21, "td"),
      m(22),
      d(),
      u(23, "td"),
      m(24),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      o = E(2);
    g(2),
      B((o.currentPage - 1) * o.itemsPerPage + t + 1),
      g(2),
      B(e.lead_code || "N/A"),
      g(2),
      B(e.dealer_name || "N/A"),
      g(2),
      B(e.status || "N/A"),
      g(2),
      B(e.purchase_type || "N/A"),
      g(2),
      B(e.type || "N/A"),
      g(2),
      B(e.sub_type || "N/A"),
      g(2),
      B(e.brand || "N/A"),
      g(2),
      B(e.PMI || "N/A"),
      g(2),
      B(e.lead_source || "N/A"),
      g(2),
      B(e.lname || "N/A"),
      g(2),
      B(e.mobile || "N/A");
  }
}
function HT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "li", 44)(1, "button", 45),
      z("click", function () {
        let o = N(e).$implicit,
          r = E(2);
        return V(r.goToLeadPage(o));
      }),
      m(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = E(2);
    Ce("active", e === t.currentPage), g(2), oe(" ", e, " ");
  }
}
function jT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(5, "th"),
      m(6, "Sr No"),
      d(),
      u(7, "th"),
      m(8, "Lead"),
      W(9, "br"),
      m(10, " Code"),
      d(),
      u(11, "th"),
      m(12, "Dealer "),
      W(13, "br"),
      m(14, "Name"),
      d(),
      u(15, "th"),
      m(16, "Status"),
      d(),
      u(17, "th"),
      m(18, "Purchase "),
      W(19, "br"),
      m(20, " Type"),
      d(),
      u(21, "th"),
      m(22, "Type"),
      d(),
      u(23, "th"),
      m(24, "Sub "),
      W(25, "br"),
      m(26, "Type"),
      d(),
      u(27, "th"),
      m(28, "Brand"),
      d(),
      u(29, "th"),
      m(30, "PMI"),
      d(),
      u(31, "th"),
      m(32, "Lead"),
      W(33, "br"),
      m(34, " Source"),
      d(),
      u(35, "th"),
      m(36, "Last"),
      W(37, "br"),
      m(38, " Name"),
      d(),
      u(39, "th"),
      m(40, "Mobile"),
      d()()(),
      u(41, "tbody"),
      F(42, LT, 4, 0, "tr", 49)(43, BT, 25, 12, "tr", 50),
      d()()(),
      u(44, "div", 38)(45, "div", 39)(46, "p", 40),
      m(47),
      d()(),
      u(48, "div", 39)(49, "nav", 42)(50, "ul", 43)(51, "li", 44)(
        52,
        "button",
        45
      ),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.goToPreviousLeadPage());
      }),
      m(53, "Previous"),
      d()(),
      F(54, HT, 3, 3, "li", 56),
      u(55, "li", 44)(56, "button", 45),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.goToNextLeadPage());
      }),
      m(57, "Next"),
      d()()()()()()();
  }
  if (n & 2) {
    let e = E();
    g(42),
      S("ngIf", !e.paginatedLeads || e.paginatedLeads.length === 0),
      g(),
      S("ngForOf", e.paginatedLeads),
      g(4),
      Mi(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalLeads,
        " entries "
      ),
      g(4),
      Ce("disabled", e.currentPage === 1),
      g(3),
      S("ngForOf", e.visiblePageNumbers),
      g(),
      Ce("disabled", e.currentPage === e.totalPages);
  }
}
function zT(n, i) {
  n & 1 && (u(0, "tr")(1, "td", 59), m(2, " No Users Found "), d()());
}
function UT(n, i) {
  if (
    (n & 1 &&
      (u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td"),
      m(6),
      d(),
      u(7, "td"),
      m(8),
      d(),
      u(9, "td"),
      m(10),
      d(),
      u(11, "td"),
      m(12),
      d(),
      u(13, "td"),
      m(14),
      d(),
      u(15, "td"),
      m(16),
      d(),
      u(17, "td"),
      m(18),
      d(),
      u(19, "td"),
      m(20),
      d(),
      u(21, "td"),
      m(22),
      d(),
      u(23, "td"),
      m(24),
      d(),
      u(25, "td"),
      m(26),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      o = E(2);
    g(2),
      B((o.currentOpportunityPage - 1) * o.opportunityItemsPerPage + t + 1),
      g(2),
      oe(" ", e.opportunity_name, " "),
      g(2),
      oe(" ", e.stage, " "),
      g(2),
      oe(" ", e.opportunity_record_type, " "),
      g(2),
      oe(" ", e.account_name, " "),
      g(2),
      oe(" ", e.close_date, " "),
      g(2),
      oe(" ", e.VIN, " "),
      g(2),
      oe(" ", e.purchase_type, " "),
      g(2),
      oe(" ", e.type, " "),
      g(2),
      oe(" ", e.sub_type, " "),
      g(2),
      oe(" ", e.brand, " "),
      g(2),
      oe(" ", e.PMI, " "),
      g(2),
      oe(" ", e.description, " ");
  }
}
function WT(n, i) {
  if ((n & 1 && (u(0, "p", 40), m(1), d()), n & 2)) {
    let e = E(2);
    g(),
      Mi(
        " Showing ",
        (e.currentOpportunityPage - 1) * e.opportunityItemsPerPage + 1,
        " \u2013 ",
        e.getOpportunityRangeEnd(),
        " of ",
        e.totalOpportunities,
        " entries "
      );
  }
}
function $T(n, i) {
  n & 1 && (u(0, "p", 40), m(1, " No entries available "), d());
}
function GT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "li", 44)(1, "button", 53),
      z("click", function () {
        let o = N(e).$implicit,
          r = E(2);
        return V(r.goToOpportunityPage(o));
      }),
      m(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = E(2);
    Ce("active", e === t.currentOpportunityPage)(
      "disabled",
      t.totalOpportunities === 0
    ),
      g(),
      S("disabled", t.totalOpportunities === 0),
      g(),
      oe(" ", e, " ");
  }
}
function YT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(5, "th"),
      m(6, "Sr No"),
      d(),
      u(7, "th"),
      m(8, "Opportunity "),
      W(9, "br"),
      m(10, "Name"),
      d(),
      u(11, "th"),
      m(12, "stage"),
      d(),
      u(13, "th"),
      m(14, "Opportunities "),
      W(15, "br"),
      m(16, "Record"),
      d(),
      u(17, "th"),
      m(18, "account"),
      W(19, "br"),
      m(20, " Name"),
      d(),
      u(21, "th"),
      m(22, "close "),
      W(23, "br"),
      m(24, "Date"),
      d(),
      u(25, "th"),
      m(26, "Opportunity "),
      W(27, "br"),
      m(28, "Currency"),
      d(),
      u(29, "th"),
      m(30, "VIN"),
      d(),
      u(31, "th"),
      m(32, "Purchase"),
      W(33, "br"),
      m(34, " Type"),
      d(),
      u(35, "th"),
      m(36, "Sub"),
      W(37, "br"),
      m(38, " Type"),
      d(),
      u(39, "th"),
      m(40, "Brand"),
      d(),
      u(41, "th"),
      m(42, "PMI"),
      d()()(),
      u(43, "tbody"),
      F(44, zT, 3, 0, "tr", 49)(45, UT, 27, 13, "tr", 50),
      d()()(),
      u(46, "div", 38)(47, "div", 39),
      F(48, WT, 2, 3, "p", 58)(49, $T, 2, 0, "p", 58),
      d(),
      u(50, "div", 39)(51, "nav", 42)(52, "ul", 43)(53, "li", 44)(
        54,
        "button",
        53
      ),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.goToPreviousOpportunityPage());
      }),
      m(55, " Previous "),
      d()(),
      F(56, GT, 3, 6, "li", 46),
      u(57, "li", 44)(58, "button", 53),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.goToNextOpportunityPage());
      }),
      m(59, " Next "),
      d()()()()()()();
  }
  if (n & 2) {
    let e = E();
    g(44),
      S("ngIf", !e.OpportunityList || e.OpportunityList.length === 0),
      g(),
      S("ngForOf", e.paginatedOpportunities),
      g(3),
      S("ngIf", e.totalOpportunities > 0),
      g(),
      S("ngIf", e.totalOpportunities === 0),
      g(4),
      Ce(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      g(),
      S(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      g(2),
      S("ngForOf", e.visibleOpportunityPageNumbers),
      g(),
      Ce(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      ),
      g(),
      S(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      );
  }
}
function qT(n, i) {
  n & 1 && (u(0, "tr")(1, "td", 60), m(2, " No Users Found "), d()());
}
function KT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td"),
      m(6),
      d(),
      u(7, "td"),
      m(8),
      d(),
      u(9, "td"),
      m(10),
      d(),
      u(11, "td"),
      m(12),
      d(),
      u(13, "td"),
      m(14),
      d(),
      u(15, "td"),
      m(16),
      d(),
      u(17, "td"),
      m(18),
      d(),
      u(19, "td"),
      m(20),
      d(),
      u(21, "td")(22, "a", 61),
      z("click", function () {
        let o = N(e).$implicit;
        return V(o.task_id);
      }),
      u(23, "span", 62),
      W(24, "i", 63),
      d()()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      o = E(2);
    g(2),
      B((o.currentTaskPage - 1) * o.taskItemsPerPage + t + 1),
      g(2),
      oe(" ", e.subject, " "),
      g(2),
      oe(" ", e.status, " "),
      g(2),
      oe(" ", e.priority, " "),
      g(2),
      oe(" ", e.assigned_to, " "),
      g(2),
      oe(" ", e.due_date, " "),
      g(2),
      oe(" ", e.comments, " "),
      g(2),
      oe(" ", e.lead_name, " "),
      g(2),
      oe(" ", e.lead_email, " "),
      g(2),
      oe(" ", e.lead_code, " "),
      g(2),
      S("routerLink", ye(11, kT, e.task_id));
  }
}
function QT(n, i) {
  if ((n & 1 && (u(0, "p", 40), m(1), d()), n & 2)) {
    let e = E(2);
    g(),
      Mi(
        " Showing ",
        (e.currentTaskPage - 1) * e.taskItemsPerPage + 1,
        " \u2013 ",
        e.getTaskRangeEnd(),
        " of ",
        e.totalTasks,
        " entries "
      );
  }
}
function XT(n, i) {
  n & 1 && (u(0, "p", 40), m(1, " No entries available "), d());
}
function ZT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "li", 44)(1, "button", 53),
      z("click", function () {
        let o = N(e).$implicit,
          r = E(2);
        return V(r.goToTaskPage(o));
      }),
      m(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = E(2);
    Ce("active", e === t.currentTaskPage)("disabled", t.totalTasks === 0),
      g(),
      S("disabled", t.totalTasks === 0),
      g(),
      oe(" ", e, " ");
  }
}
function JT(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(5, "th"),
      m(6, "Sr No"),
      d(),
      u(7, "th"),
      m(8, "Subject"),
      d(),
      u(9, "th"),
      m(10, "Status"),
      d(),
      u(11, "th"),
      m(12, "Priority"),
      d(),
      u(13, "th"),
      m(14, "Assigned"),
      d(),
      u(15, "th"),
      m(16, "Due Date"),
      d(),
      u(17, "th"),
      m(18, "Comments"),
      d(),
      u(19, "th"),
      m(20, "Lead Name"),
      d(),
      u(21, "th"),
      m(22, "Actions"),
      d()()(),
      u(23, "tbody"),
      F(24, qT, 3, 0, "tr", 49)(25, KT, 25, 13, "tr", 50),
      d()()(),
      u(26, "div", 38)(27, "div", 39),
      F(28, QT, 2, 3, "p", 58)(29, XT, 2, 0, "p", 58),
      d(),
      u(30, "div", 39)(31, "nav", 42)(32, "ul", 43)(33, "li", 44)(
        34,
        "button",
        53
      ),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.goToPreviousTaskPage());
      }),
      m(35, " Previous "),
      d()(),
      F(36, ZT, 3, 6, "li", 46),
      u(37, "li", 44)(38, "button", 53),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.goToNextTaskPage());
      }),
      m(39, " Next "),
      d()()()()()()();
  }
  if (n & 2) {
    let e = E();
    g(24),
      S("ngIf", !e.paginatedTasks || e.paginatedTasks.length === 0),
      g(),
      S("ngForOf", e.paginatedTasks),
      g(3),
      S("ngIf", e.totalTasks > 0),
      g(),
      S("ngIf", e.totalOpportunities === 0),
      g(4),
      Ce("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      g(),
      S("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      g(2),
      S("ngForOf", e.visibleOpportunityPageNumbers),
      g(),
      Ce(
        "disabled",
        e.currentTaskPage === e.totalTaskPages || e.totalTasks === 0
      ),
      g(),
      S(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalTasks === 0
      );
  }
}
function ek(n, i) {
  n & 1 && (u(0, "tr")(1, "td", 65), m(2, " No Events Found "), d()());
}
function tk(n, i) {
  if (
    (n & 1 &&
      (u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td"),
      m(6),
      d(),
      u(7, "td"),
      m(8),
      d(),
      u(9, "td"),
      m(10),
      d(),
      u(11, "td"),
      m(12),
      d(),
      u(13, "td"),
      m(14),
      d(),
      u(15, "td"),
      m(16),
      d(),
      u(17, "td"),
      m(18),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      o = E(2);
    g(2),
      B((o.currentEventPage - 1) * o.eventItemsPerPage + t + 1),
      g(2),
      B(e.subject),
      g(2),
      B(e.assigned_to),
      g(2),
      B(e.description),
      g(2),
      B(e.name),
      g(2),
      B(e.start_date),
      g(2),
      B(e.end_date),
      g(2),
      B(e.VIN),
      g(2),
      B(e.location);
  }
}
function ik(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "li", 44)(1, "button", 45),
      z("click", function () {
        let o = N(e).$implicit,
          r = E(3);
        return V(r.goToEventPage(o));
      }),
      m(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = E(3);
    Ce("active", e === t.currentEventPage), g(2), oe(" ", e, " ");
  }
}
function nk(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 38)(1, "div", 39)(2, "p", 40),
      m(3),
      d()(),
      u(4, "div", 39)(5, "nav", 42)(6, "ul", 43)(7, "li", 44)(8, "button", 53),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.goToPreviousEventPage());
      }),
      m(9, " Previous "),
      d()(),
      F(10, ik, 3, 3, "li", 56),
      u(11, "li", 44)(12, "button", 53),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.goToNextEventPage());
      }),
      m(13, " Next "),
      d()()()()()();
  }
  if (n & 2) {
    let e = E(2);
    g(3),
      Mi(
        " Showing ",
        (e.currentEventPage - 1) * e.eventItemsPerPage + 1,
        " \u2013 ",
        e.getEventsRangeEnd(),
        " of ",
        e.totalEvents,
        " entries "
      ),
      g(4),
      Ce("disabled", e.currentEventPage === 1),
      g(),
      S("disabled", e.currentEventPage === 1),
      g(2),
      S("ngForOf", e.visibleEventPageNumbers),
      g(),
      Ce("disabled", e.currentEventPage === e.totalEventPages),
      g(),
      S("disabled", e.currentEventPage === e.totalEventPages);
  }
}
function ok(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(
        5,
        "th"
      ),
      m(6, "Sr No"),
      d(),
      u(7, "th"),
      m(8, "Subject"),
      d(),
      u(9, "th"),
      m(10, "Assigned"),
      d(),
      u(11, "th"),
      m(12, "Description"),
      d(),
      u(13, "th"),
      m(14, "Account Name"),
      d(),
      u(15, "th"),
      m(16, "Start Date"),
      d(),
      u(17, "th"),
      m(18, "End Date"),
      d(),
      u(19, "th"),
      m(20, "VIN"),
      d(),
      u(21, "th"),
      m(22, "Locations"),
      d()()(),
      u(23, "tbody"),
      F(24, ek, 3, 0, "tr", 49)(25, tk, 19, 9, "tr", 50),
      d()()(),
      F(26, nk, 14, 10, "div", 64),
      d()),
    n & 2)
  ) {
    let e = E();
    g(24),
      S("ngIf", !e.EventList || e.EventList.length === 0),
      g(),
      S("ngForOf", e.paginatedEvents),
      g(),
      S("ngIf", e.EventList && e.EventList.length > 0);
  }
}
var fs = class n {
  constructor(i, e, t, o, r) {
    this.route = i;
    this.http = e;
    this.location = t;
    this.cdr = o;
    this.zone = r;
  }
  UserList = [];
  loading = !1;
  leadList = [];
  TaskList = [];
  EventList = [];
  currentPage = 1;
  itemsPerPage = 10;
  currentEventPage = 1;
  eventItemsPerPage = 10;
  OpportunityList = pe([]);
  paginatedUsers = [];
  dealerData;
  masterSrv = ne(Ye);
  showUsersTable = !0;
  showLeadsTable = !1;
  showOpportunityTable = !1;
  showTaskTable = !1;
  showEventTable = !1;
  visiblePageNumbers = [];
  dealer_name = "";
  toastr;
  user;
  apiService;
  paginatedLeads = [];
  opportunityItemsPerPage = 10;
  currentOpportunityPage = 1;
  paginatedOpportunities = [];
  visibleOpportunityPageNumbers = [];
  taskItemsPerPage = 10;
  currentTaskPage = 1;
  paginatedTasks = [];
  visibleTaskPageNumbers = [];
  ngOnInit() {
    console.log("ngOnInit is called"),
      this.handleQueryParams(),
      this.handleRouteData(),
      this.handleDealerId((i) => {
        this.getAllUser(i),
          this.getAllLeads(i),
          this.getAllTasks(i),
          this.getAllEvent(i),
          console.log("API Data:", L0.data),
          console.log("dealerData:", this.dealerData),
          console.log("Fetched UserList:", this.UserList);
      }),
      (this.currentPage = 1),
      this.paginateUsers(),
      this.updateVisiblePages(),
      (this.currentPage = 1),
      this.paginateLeads(),
      this.updateVisibleLeadPages();
  }
  dropdownService = ne(Xi);
  selectedOption = this.dropdownService.getSelectedOption();
  handleSelectionChange(i) {
    let e = i.target.value;
    switch (
      (this.dropdownService.setSelectedOption(e),
      console.log("this is option", this.selectedOption()),
      e)
    ) {
      case "leads":
        console.log("dealerData:", this.dealerData),
          this.dealerData
            ? (this.getAllLeads(this.dealerData.data.dealer.dealer_id),
              this.toggleLeadsTable())
            : console.warn("lead data is not available.");
        break;
      case "users":
        this.dealerData
          ? (this.getAllUser(this.dealerData.data.dealer.dealer_id),
            this.toggleUsersTable())
          : console.warn("Dealer data is not available.");
        break;
      case "opportunities":
        console.log(this.dealerData),
          this.toggleOpportunityTable(),
          this.dealerData &&
            this.getAllOpp(this.dealerData.data.dealer.dealer_id);
        break;
      case "events":
        this.toggleEventTable(),
          this.dealerData &&
            this.getAllEvent(this.dealerData.data.dealer.dealer_id);
        break;
      case "tasks":
        this.toggleTasksTable(),
          this.dealerData &&
            this.getAllTasks(this.dealerData.data.dealer.dealer_id);
        break;
    }
  }
  get totalUsers() {
    return this.UserList?.length || 0;
  }
  get totalPages() {
    return Math.ceil(this.totalUsers / this.itemsPerPage);
  }
  paginateUsers() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedUsers = this.UserList.slice(i, e);
  }
  updateVisiblePages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalPages);
    this.visiblePageNumbers = [];
    for (let o = e; o <= t; o++) this.visiblePageNumbers.push(o);
  }
  hasDataForPage(i) {
    return (i - 1) * this.itemsPerPage < this.totalUsers;
  }
  goToPreviousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateUsers(), this.updateVisiblePages());
  }
  goToNextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateUsers(), this.updateVisiblePages());
  }
  goToPage(i) {
    (i - 1) * this.itemsPerPage >= this.totalUsers ||
      ((this.currentPage = i), this.paginateUsers(), this.updateVisiblePages());
  }
  get totalLeads() {
    return this.leadList?.length || 0;
  }
  get totalLeadPages() {
    return Math.ceil(this.totalLeads / this.itemsPerPage);
  }
  paginateLeads() {
    if (!this.leadList || this.leadList.length === 0) {
      this.paginatedLeads = [];
      return;
    }
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    (this.paginatedLeads = this.leadList.slice(i, e)),
      console.log(
        `Paginating Leads | Page: ${this.currentPage}, Showing: ${
          i + 1
        } to ${Math.min(e, this.leadList.length)} of ${this.leadList.length}`
      ),
      console.table(this.paginatedLeads);
  }
  updateVisibleLeadPages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalLeadPages);
    this.visiblePageNumbers = [];
    for (let o = e; o <= t; o++) this.visiblePageNumbers.push(o);
  }
  goToLeadPage(i) {
    (this.currentPage = i), this.paginateLeads(), this.updateVisibleLeadPages();
  }
  goToPreviousLeadPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  goToNextLeadPage() {
    this.currentPage < this.totalLeadPages &&
      (this.currentPage++, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  get totalOpportunities() {
    return this.OpportunityList?.length || 0;
  }
  get totalOpportunityPages() {
    return Math.ceil(this.totalOpportunities / this.opportunityItemsPerPage);
  }
  paginateOpportunities() {
    let i = (this.currentOpportunityPage - 1) * this.opportunityItemsPerPage,
      e = i + this.opportunityItemsPerPage,
      t = this.OpportunityList();
    this.paginatedOpportunities = t.slice(i, e);
  }
  getOpportunityRangeEnd() {
    let i = this.currentOpportunityPage * this.opportunityItemsPerPage;
    return i > this.totalOpportunities ? this.totalOpportunities : i;
  }
  updateVisibleOpportunityPages() {
    let e = Math.floor((this.currentOpportunityPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalOpportunityPages);
    this.visibleOpportunityPageNumbers = [];
    for (let o = e; o <= t; o++) this.visibleOpportunityPageNumbers.push(o);
  }
  goToOpportunityPage(i) {
    (this.currentOpportunityPage = i),
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages();
  }
  goToPreviousOpportunityPage() {
    this.currentOpportunityPage > 1 &&
      (this.currentOpportunityPage--,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  goToNextOpportunityPage() {
    this.currentOpportunityPage < this.totalOpportunityPages &&
      (this.currentOpportunityPage++,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  get totalTasks() {
    return this.TaskList?.length || 0;
  }
  get totalTaskPages() {
    return Math.ceil(this.totalTasks / this.taskItemsPerPage);
  }
  paginateTasks() {
    let i = (this.currentTaskPage - 1) * this.taskItemsPerPage,
      e = i + this.taskItemsPerPage;
    this.paginatedTasks = this.TaskList.slice(i, e);
  }
  getTaskRangeEnd() {
    let i = this.currentTaskPage * this.taskItemsPerPage;
    return i > this.totalTasks ? this.totalTasks : i;
  }
  updateVisibleTaskPages() {
    let e = Math.floor((this.currentTaskPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalTaskPages);
    this.visibleTaskPageNumbers = [];
    for (let o = e; o <= t; o++) this.visibleTaskPageNumbers.push(o);
  }
  goToPreviousTaskPage() {
    this.currentTaskPage > 1 &&
      (this.currentTaskPage--,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToNextTaskPage() {
    this.currentTaskPage < this.totalTaskPages &&
      (this.currentTaskPage++,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToTaskPage(i) {
    (this.currentTaskPage = i),
      this.paginateTasks(),
      this.updateVisibleTaskPages();
  }
  getRangeEnd() {
    return Math.min(this.currentPage * this.itemsPerPage, this.totalUsers);
  }
  get totalEvents() {
    return this.EventList ? this.EventList.length : 0;
  }
  get paginatedEvents() {
    if (!this.EventList || this.EventList.length === 0) return [];
    let i = (this.currentEventPage - 1) * this.eventItemsPerPage,
      e = i + this.eventItemsPerPage;
    return this.EventList.slice(i, e);
  }
  get totalEventPages() {
    return Math.ceil(this.totalEvents / this.eventItemsPerPage);
  }
  getEventsRangeEnd() {
    let i = this.currentEventPage * this.eventItemsPerPage;
    return i > this.totalEvents ? this.totalEvents : i;
  }
  get visibleEventPageNumbers() {
    let i = this.totalEventPages,
      e = this.currentEventPage,
      t = 5,
      o = Math.floor(t / 2);
    if (i === 0) return [];
    let r = Math.max(1, e - o),
      a = Math.min(i, r + t - 1);
    a - r < t - 1 && (r = Math.max(1, a - t + 1));
    let s = [];
    for (let c = r; c <= a; c++) s.push(c);
    return s;
  }
  goToPreviousEventPage() {
    this.currentEventPage > 1 && this.currentEventPage--;
  }
  goToNextEventPage() {
    this.currentEventPage < this.totalEventPages && this.currentEventPage++;
  }
  goToEventPage(i) {
    i >= 1 && i <= this.totalEventPages && (this.currentEventPage = i);
  }
  toggleUsersTable() {
    (this.showLeadsTable = !1),
      (this.showUsersTable = !0),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleTasksTable() {
    (this.showTaskTable = !0),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showOpportunityTable = !1),
      (this.showEventTable = !1);
  }
  toggleLeadsTable() {
    (this.showLeadsTable = !0),
      (this.showUsersTable = !1),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleOpportunityTable() {
    (this.showOpportunityTable = !0),
      (this.showEventTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  toggleEventTable() {
    (this.showEventTable = !0),
      (this.showOpportunityTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  ngAfterViewInit() {
    console.log("ngOnInit is called"),
      console.log("hello"),
      console.log(typeof $.fn.DataTable),
      this.initializeDataTable();
  }
  initializeDataTable() {
    setTimeout(() => {
      let i = $("#example5").DataTable();
      i && i.destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 100);
  }
  handleQueryParams() {
    this.route.queryParams.subscribe((i) => {
      (this.dealer_name = i.dealer_name),
        console.log("Dealer Name : ", this.dealer_name);
    });
  }
  handleRouteData() {
    this.route.data.subscribe((i) => {
      if (((this.dealerData = i.dealerData), this.dealerData)) {
        let e = this.dealerData.data.dealer.dealer_id;
        this.getAllUser(e);
      } else console.log("Dealer Data not available from resolver");
    });
  }
  handleDealerId(i) {
    this.route.paramMap.subscribe((e) => {
      let t = e.get("dealer_id");
      t
        ? i(t)
        : this.dealerData ||
          console.error("Dealer ID not found in the URL and no resolver data.");
    });
  }
  getAllUser(i) {
    console.log("Calling API with dealerId:", i),
      this.masterSrv.getAllUser(i).subscribe({
        next: (e) => {
          console.log("\u2705 Full API Response:", e),
            console.log("Fetched Users:", e.data),
            e.data && Array.isArray(e.data) && e.data.length > 0
              ? ((this.UserList = e.data),
                (this.currentPage = 1),
                this.paginateUsers(),
                this.updateVisiblePages(),
                console.log("Users List:", this.UserList),
                (this.loading = !1))
              : (console.warn("No users found"),
                (this.UserList = []),
                this.paginateUsers(),
                this.updateVisiblePages()),
            this.zone.run(() => {
              Array.isArray(this.UserList)
                ? (console.log("\u2705 Assigned UserList:", this.UserList),
                  this.cdr.detectChanges(),
                  setTimeout(() => {
                    this.initializeDataTable();
                  }, 500))
                : (console.warn("\u26A0\uFE0F Invalid API Response Format:", e),
                  (this.UserList = []));
            });
        },
        error: (e) => {
          console.error("\u274C API Error:", e),
            (this.UserList = []),
            this.paginateUsers(),
            this.updateVisiblePages(),
            this.cdr.detectChanges();
        },
      });
  }
  reinitializeDataTable() {
    setTimeout(() => {
      $("#example5").DataTable().clear().destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 200);
  }
  getAllLeads(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllLead(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.leadList = e.data),
              console.log("Leads List:", this.leadList),
              (this.currentPage = 1),
              this.paginateLeads(),
              this.updateVisibleLeadPages())
            : (console.warn("No leads found"),
              (this.leadList = []),
              (this.paginatedLeads = []),
              (this.visiblePageNumbers = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e),
          (this.leadList = []),
          (this.paginatedLeads = []),
          (this.visiblePageNumbers = []);
      },
    });
  }
  getAllEvent(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getEventsAll(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.EventList = e.data),
              console.log("Event List:", this.EventList))
            : (console.warn("No events found"), (this.EventList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.EventList = []);
      },
    });
  }
  getAllTasks(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllTask(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.TaskList = e.data),
              console.log("Task List:", this.TaskList))
            : (console.warn("No tasks found"), (this.TaskList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.TaskList = []);
      },
    });
  }
  getAllOpp(i) {
    this.masterSrv.getAllOpportunities(i).subscribe({
      next: (e) => {
        this.OpportunityList.set(e), console.log("Leads data fetched:", e);
      },
      error: (e) => {
        alert(e.message || "An error occurred while fetching leads.");
      },
    });
  }
  router = ne(Ti);
  logUserId(i) {
    console.log("Navigating to user with ID:", i),
      this.dealerData?.data.dealer?.dealer_id
        ? localStorage.setItem(
            "previousRoute",
            this.dealerData.data.dealer.dealer_id
          )
        : console.warn("dealer_id is missing, previousRoute not stored.");
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ei), j(ti), j(Vs), j(it), j(He));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-dealer"]],
    standalone: !0,
    features: [he],
    decls: 46,
    vars: 11,
    consts: [
      ["noEntries", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [2, "cursor", "auto", "color", "#222fb9", 3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [2, "font-weight", "700 !important", "color", "black"],
      [
        "class",
        "col-xl-9",
        "style",
        `
        margin-top: 2em !important;
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
      `,
        4,
        "ngIf",
      ],
      [
        1,
        "col-xl-9",
        2,
        "margin-top",
        "2em !important",
        "display",
        "flex",
        "justify-content",
        "space-between",
        "align-items",
        "center",
        "width",
        "100%",
      ],
      [1, "card"],
      [
        1,
        "card-body",
        "py-9",
        "py-md-2",
        2,
        "margin-left",
        "0.2rem !important",
      ],
      [1, "row", "align-items-start"],
      [1, "mb-md-0"],
      [1, "media", "align-items-end"],
      [1, "media-body"],
      [1, "mb-0", 2, "background-color", "none"],
      [1, "form-group", 2, "margin-inline", "1em"],
      [1, "form-control", "form-control-lg", 3, "change", "value"],
      ["selected", "", "value", "users", 1, "drop"],
      ["value", "leads", 1, "drop"],
      ["value", "opportunities", 1, "drop"],
      ["value", "tasks", 1, "drop"],
      ["value", "events", 1, "drop"],
      [1, "row"],
      [1, "col-lg-12"],
      ["class", "p-3 bg-white rounded shadow-sm", 4, "ngIf"],
      [1, "media", "align-items-center"],
      [1, "media-body", "ml-1"],
      [1, "mb-0", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-22"],
      [1, "span"],
      [1, "media", "align-items-center", 3, "click"],
      [1, "media-body", "ml-1", 3, "click"],
      [1, "p-3", "bg-white", "rounded", "shadow-sm"],
      ["class", "table-responsive", 4, "ngIf"],
      [1, "row", "align-items-center", "mt-3"],
      [1, "col-md-6"],
      [1, "mb-0", "text-muted"],
      [4, "ngIf", "ngIfElse"],
      ["aria-label", "Page navigation"],
      [1, "pagination", "justify-content-end", "mb-0"],
      [1, "page-item"],
      [1, "page-link", 3, "click"],
      ["class", "page-item", 3, "active", "disabled", 4, "ngFor", "ngForOf"],
      [1, "table-responsive"],
      [
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      ["colspan", "7"],
      [2, "color", "red", "text-align", "center"],
      [1, "page-link", 3, "click", "disabled"],
      [1, "table-responsive", 2, "overflow-x", "auto", "width", "100%"],
      [1, "table", "mb-4", "dataTablesCard", "fs-14"],
      ["class", "page-item", 3, "active", 4, "ngFor", "ngForOf"],
      ["colspan", "12"],
      ["class", "mb-0 text-muted", 4, "ngIf"],
      [
        "colspan",
        "13",
        2,
        "text-align",
        "center",
        "color",
        "grey",
        "padding",
        "1rem",
      ],
      [
        "colspan",
        "11",
        2,
        "text-align",
        "center",
        "color",
        "grey",
        "padding",
        "1rem",
      ],
      [3, "click", "routerLink"],
      [1, ""],
      [1, "fa", "fa-eye"],
      ["class", "row align-items-center mt-3", 4, "ngIf"],
      [
        "colspan",
        "12",
        2,
        "text-align",
        "center",
        "color",
        "grey",
        "padding",
        "1rem",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        m(6, "Users"),
        d()(),
        u(7, "li", 5)(8, "a", 7),
        m(9, "Dealer"),
        d()(),
        u(10, "li", 8)(11, "a", 9),
        m(12),
        d()()()(),
        F(13, OT, 54, 7, "div", 10),
        u(14, "div", 11)(15, "div", 12)(16, "div", 13)(17, "div", 14)(
          18,
          "div",
          15
        )(19, "div", 16)(20, "div", 17)(21, "h3", 18),
        m(22),
        d()()()()()()(),
        u(23, "div", 19)(24, "select", 20),
        z("change", function (r) {
          return t.handleSelectionChange(r);
        }),
        u(25, "option", 21),
        m(26, "Users"),
        d(),
        u(27, "option", 22),
        m(28, "Leads"),
        d(),
        u(29, "option", 23),
        m(30, "Opportunities"),
        d(),
        u(31, "option", 24),
        m(32, "Tasks"),
        d(),
        u(33, "option", 25),
        m(34, "Events"),
        d()()()(),
        u(35, "div", 26)(36, "div", 27),
        F(37, VT, 18, 8, "div", 28),
        d(),
        u(38, "div", 27),
        F(39, jT, 58, 10, "div", 28),
        d(),
        u(40, "div", 27),
        F(41, YT, 60, 11, "div", 28),
        u(42, "div", 27),
        F(43, JT, 40, 11, "div", 28),
        u(44, "div", 27),
        F(45, ok, 27, 3, "div", 28),
        d()()()()()()),
        e & 2 &&
          (g(8),
          S("routerLink", ui(10, TT)),
          g(4),
          oe(
            "",
            t.dealerData == null ||
              t.dealerData.data == null ||
              t.dealerData.data.dealer == null
              ? null
              : t.dealerData.data.dealer.dealer_name,
            " "
          ),
          g(),
          S("ngIf", t.dealerData),
          g(9),
          oe(" ", t.selectedOption(), " "),
          g(2),
          S("value", t.selectedOption()),
          g(13),
          S("ngIf", t.selectedOption() === "users"),
          g(2),
          S("ngIf", t.selectedOption() === "leads"),
          g(2),
          S("ngIf", t.selectedOption() === "opportunities"),
          g(2),
          S("ngIf", t.selectedOption() === "tasks"),
          g(2),
          S("ngIf", t.selectedOption() === "events"));
    },
    dependencies: [ct, Ii, Pi, ke, $t, Je, Ai, ii],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.custom-scroll-wrapper[_ngcontent-%COMP%]{overflow-x:auto;display:block;width:100%}.table-scroll-container[_ngcontent-%COMP%]{overflow-x:auto;width:100%}.table-wrapper[_ngcontent-%COMP%]{border:1px solid #ccc;border-radius:20px;background-color:#fff}.bg-white[_ngcontent-%COMP%]{background-color:#fff!important}.shadow-sm[_ngcontent-%COMP%]{box-shadow:0 .125rem .25rem #00000013}.rounded[_ngcontent-%COMP%]{border-radius:.5rem}.table-responsive[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}",
    ],
  });
};
var rk = ["inputElement"];
function ak(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "form", null, 0),
      W(2, "img", 9),
      u(3, "h2", 10),
      m(4, "Login to Smart Assist"),
      d(),
      u(5, "div", 11)(6, "div", 12),
      W(7, "i", 13),
      d(),
      u(8, "div", 14)(9, "h5", 15),
      m(10, "Username"),
      d(),
      u(11, "input", 16, 1),
      Nt("ngModelChange", function (o) {
        N(e);
        let r = E();
        return Ft(r.loginObj.email, o) || (r.loginObj.email = o), V(o);
      }),
      d()()(),
      u(13, "div", 17)(14, "div", 12),
      W(15, "i", 18),
      d(),
      u(16, "div", 14)(17, "h5"),
      m(18, "Password"),
      d(),
      u(19, "input", 19, 1),
      Nt("ngModelChange", function (o) {
        N(e);
        let r = E();
        return Ft(r.loginObj.password, o) || (r.loginObj.password = o), V(o);
      }),
      d(),
      u(21, "i", 20),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.togglePassword("password"));
      }),
      d()()(),
      u(22, "a", 21),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.showVerifyEmail());
      }),
      m(23, "Forgot Password?"),
      d(),
      u(24, "input", 22),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.onLogin());
      }),
      d()();
  }
  if (n & 2) {
    let e = E();
    g(11),
      Rt("ngModel", e.loginObj.email),
      g(8),
      Rt("ngModel", e.loginObj.password),
      S("type", e.showPassword ? "text" : "password"),
      g(2),
      Ve(
        "icon11 absolute right-8 top-1/2 transform -translate-y-1/2 cursor-pointer " +
          (e.showPassword ? "fas fa-eye-slash eye" : "fas fa-eye eye")
      );
  }
}
function sk(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "form", null, 2)(2, "div", 23),
      W(3, "img", 9),
      d(),
      u(4, "h2", 10),
      m(5, " Verify Email "),
      d(),
      u(6, "div", 24)(7, "div", 12),
      W(8, "i", 25),
      d(),
      u(9, "div", 14)(10, "input", 26, 3),
      Nt("ngModelChange", function (o) {
        N(e);
        let r = E();
        return Ft(r.verifyObj.email, o) || (r.verifyObj.email = o), V(o);
      }),
      d()()(),
      u(12, "a", 27),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.backToLogin());
      }),
      m(13, "Back to Login"),
      d(),
      u(14, "input", 28),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.onVerifyEmail());
      }),
      d()();
  }
  if (n & 2) {
    let e = E();
    g(10), Rt("ngModel", e.verifyObj.email);
  }
}
function lk(n, i) {
  if ((n & 1 && (u(0, "div", 37), m(1), d()), n & 2)) {
    let e = E(2);
    g(), oe(" Time remaining: ", e.countdown, "s ");
  }
}
function ck(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "a", 38),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.onVerifyEmail());
      }),
      m(1, "Resend OTP"),
      d();
  }
}
function dk(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "form", null, 4)(2, "div", 23),
      W(3, "img", 9),
      d(),
      u(4, "h2", 10),
      m(5, " Verify OTP "),
      d(),
      F(6, lk, 2, 1, "div", 29),
      u(7, "div", 11)(8, "div", 12),
      W(9, "i", 30),
      d(),
      u(10, "div", 31)(11, "input", 32, 5),
      z("input", function (o) {
        N(e);
        let r = E();
        return V(r.onOtpInput(o));
      }),
      Nt("ngModelChange", function (o) {
        N(e);
        let r = E();
        return Ft(r.loginObj.otp, o) || (r.loginObj.otp = o), V(o);
      }),
      d()()(),
      u(13, "div", 33)(14, "a", 34),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.backToLogin());
      }),
      m(15, "Back to Login"),
      d(),
      F(16, ck, 2, 0, "a", 35),
      d(),
      u(17, "input", 36),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.onVerifyOtp());
      }),
      d()();
  }
  if (n & 2) {
    let e = Dt(1),
      t = E();
    g(6),
      S("ngIf", t.countdown > 0),
      g(5),
      Rt("ngModel", t.loginObj.otp),
      g(5),
      S("ngIf", t.countdown === 0),
      g(),
      S("disabled", e.invalid);
  }
}
function uk(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "form")(1, "h2", 39),
      m(2, "Set New Password"),
      d(),
      u(3, "div", 17)(4, "div", 12),
      W(5, "i", 18),
      d(),
      u(6, "div", 14)(7, "h5"),
      m(8, "New Password"),
      d(),
      u(9, "input", 40, 1),
      Nt("ngModelChange", function (o) {
        N(e);
        let r = E();
        return Ft(r.loginObj.newPwd, o) || (r.loginObj.newPwd = o), V(o);
      }),
      d(),
      u(11, "i", 41),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.togglePassword("password"));
      }),
      d()()(),
      u(12, "div", 17)(13, "div", 42),
      W(14, "i", 18),
      d(),
      u(15, "div", 14)(16, "h5"),
      m(17, "Confirm Password"),
      d(),
      u(18, "input", 43, 1),
      Nt("ngModelChange", function (o) {
        N(e);
        let r = E();
        return (
          Ft(r.loginObj.confirmPassword, o) || (r.loginObj.confirmPassword = o),
          V(o)
        );
      }),
      d(),
      u(20, "i", 41),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.togglePassword("confirmPassword"));
      }),
      d()()(),
      u(21, "div", 44)(22, "a", 34),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.backToLogin());
      }),
      m(23, "Back to Login"),
      d()(),
      u(24, "input", 45),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.onSetNewPassword());
      }),
      d()();
  }
  if (n & 2) {
    let e = E();
    g(9),
      Rt("ngModel", e.loginObj.newPwd),
      S("type", e.showPassword ? "text" : "password"),
      g(2),
      Ve(e.showPassword ? "fas fa-eye-slash" : "fas fa-eye"),
      g(7),
      Rt("ngModel", e.loginObj.confirmPassword),
      S("type", e.showConfirmPassword ? "text" : "password"),
      g(2),
      Ve(e.showConfirmPassword ? "fas fa-eye-slash" : "fas fa-eye");
  }
}
var gs = class n {
  inputElements;
  loginObj = {
    email: "",
    password: "",
    otp: 0,
    confirmPassword: "",
    newPwd: "",
  };
  verifyObj = { email: "" };
  currentStep = "login";
  showPassword = !1;
  showConfirmPassword = !1;
  countdown = 0;
  countdownInterval;
  API_BASE_URL = "https://uat.smartassistapp.in/api/
";
  SESSION_TIMEOUT = 60 * 60 * 1e3;
  http = ne(ti);
  router = ne(Ti);
  toastr = ne(mi);
  renderer = ne(yi);
  constructor() {}
  ngAfterViewInit() {
    this.inputElements &&
      this.inputElements.toArray().forEach((i) => {
        this.renderer.listen(
          i.nativeElement,
          "focus",
          this.addClass.bind(this)
        ),
          this.renderer.listen(
            i.nativeElement,
            "blur",
            this.removeClass.bind(this)
          );
      });
  }
  showVerifyEmail() {
    (this.currentStep = "verifyEmail"), this.resetFormExceptEmail();
  }
  showVerifyOtp() {
    this.currentStep = "verifyOtp";
  }
  showNewPassword() {
    this.currentStep = "newPassword";
  }
  backToLogin() {
    (this.currentStep = "login"),
      window.location.reload(),
      this.resetForm(),
      this.countdownInterval && clearInterval(this.countdownInterval);
  }
  resetForm() {
    this.loginObj = {
      email: "",
      newPwd: "",
      otp: null,
      confirmPassword: "",
      password: "",
    };
  }
  resetFormExceptEmail() {
    let i = this.loginObj.email;
    this.resetForm(), (this.loginObj.email = i);
  }
  togglePassword(i) {
    i === "password"
      ? (this.showPassword = !this.showPassword)
      : (this.showConfirmPassword = !this.showConfirmPassword);
  }
  validateLoginInput() {
    return !this.loginObj.email || !this.loginObj.password
      ? (this.toastr.error(
          "Please enter valid email and password",
          "Validation Error"
        ),
        !1)
      : this.isValidEmail(this.loginObj.email)
      ? !0
      : (this.toastr.error("Please enter a valid password", "Validation Error"),
        !1);
  }
  validateNewPassword() {
    return !this.loginObj.newPwd || !this.loginObj.confirmPassword
      ? (this.toastr.error("Please enter both passwords", "Validation Error"),
        !1)
      : this.loginObj.newPwd !== this.loginObj.confirmPassword
      ? (this.toastr.error("Passwords do not match", "Validation Error"), !1)
      : !0;
  }
  isValidEmail(i) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(i);
  }
  onLogin() {
    this.validateLoginInput() &&
      this.http
        .post(`${this.API_BASE_URL}login/super-admin`, this.loginObj)
        .subscribe({
          next: (i) => {
            i.status === 200 && i.data?.token
              ? this.handleSuccessfulLogin(i.data.token)
              : this.toastr.error(i.message || "Invalid credentials", "Error");
          },
          error: (i) => {
            console.error("Login error:", i);
            let e = i.error?.message || "An error occurred";
            this.toastr.error(e, "Error");
          },
        });
  }
  onVerifyEmail() {
    if (!this.verifyObj.email || !this.isValidEmail(this.verifyObj.email)) {
      this.toastr.error(
        "Please enter a valid email address",
        "Validation Error"
      );
      return;
    }
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-email`, {
        email: this.verifyObj.email,
      })
      .subscribe({
        next: () => {
          this.toastr.success("OTP sent to your email", "Success"),
            this.showVerifyOtp(),
            this.startCountdown();
        },
        error: (i) => {
          console.error("Login error:", i);
          let e = i.error?.message || "An error occurred";
          this.toastr.error(e, "Error");
        },
      });
  }
  onVerifyOtp() {
    if (this.loginObj.otp === null || isNaN(Number(this.loginObj.otp))) {
      this.toastr.error("Please enter a valid OTP", "Validation Error");
      return;
    }
    let i = { otp: Number(this.loginObj.otp), email: this.verifyObj.email };
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-otp`, i)
      .subscribe({
        next: () => {
          this.toastr.success("OTP verified successfully", "Success"),
            this.showNewPassword();
        },
        error: (e) => {
          console.error("OTP verification error:", e);
          let t = e.error.error;
          this.toastr.error(t, "Error");
        },
      });
  }
  onOtpInput(i) {
    let e = i.target,
      t = e.value.replace(/[^0-9]/g, "");
    (this.loginObj.otp = t ? Number(t) : 0), (e.value = t);
  }
  onSetNewPassword() {
    if (!this.validateNewPassword()) return;
    let i = {
      email: this.verifyObj.email,
      newPwd: this.loginObj.newPwd,
      confirmPwd: this.loginObj.confirmPassword,
    };
    this.http
      .put(`${this.API_BASE_URL}login/s-admin/forgot-pwd/new-pwd`, i)
      .subscribe({
        next: (e) => {
          this.toastr.success("Password reset successfully", "Success"),
            window.location.reload(),
            this.backToLogin();
        },
        error: (e) => {
          if ((console.error("Password reset error:", e), e.status === 400))
            this.toastr.error(
              "Invalid request. Please check your inputs.",
              "Error"
            );
          else if (e.status === 404)
            this.toastr.error("User not found", "Error");
          else {
            let t = e.error.error;
            this.toastr.error(t, "Error");
          }
        },
        complete: () => {
          (this.loginObj.newPwd = ""), (this.loginObj.confirmPassword = "");
        },
      });
  }
  handleSuccessfulLogin(i) {
    sessionStorage.setItem("token", i),
      this.router
        .navigate(["/Admin/dashboard"])
        .then(() => {
          window.location.reload();
        })
        .catch((e) => {
          console.error("Navigation error:", e),
            this.toastr.error("Failed to navigate to dashboard", "Error");
        }),
      this.setupAutoLogout();
  }
  setupAutoLogout() {
    setTimeout(() => {
      sessionStorage.removeItem("token"),
        this.router
          .navigateByUrl("/login")
          .then(() => {
            this.toastr.info(
              "Session expired. Please log in again.",
              "Session Expired"
            );
          })
          .catch((i) => {
            console.error("Logout navigation error:", i);
          });
    }, this.SESSION_TIMEOUT);
  }
  startCountdown() {
    (this.countdown = 5 * 60),
      this.countdownInterval && clearInterval(this.countdownInterval),
      (this.countdownInterval = setInterval(() => {
        this.countdown--,
          this.countdown === 0 && clearInterval(this.countdownInterval);
      }, 1e3));
  }
  addClass(i) {
    let e = i.target.parentNode?.parentNode;
    e && e.classList.add("focus");
  }
  removeClass(i) {
    let e = i.target.parentNode?.parentNode;
    e && i.target.value === "" && e.classList.remove("focus");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-login-1"]],
    viewQuery: function (e, t) {
      if ((e & 1 && Bt(rk, 5), e & 2)) {
        let o;
        _t((o = bt())) && (t.inputElements = o);
      }
    },
    standalone: !0,
    features: [he],
    decls: 6,
    vars: 4,
    consts: [
      ["loginForm", "ngForm"],
      ["inputElement", ""],
      ["verifyForm", "ngForm"],
      ["dealerEmail", "ngModel"],
      ["otpForm", "ngForm"],
      ["otp", "ngModel"],
      [1, "custom-container"],
      [1, "login-content"],
      [4, "ngIf"],
      [
        "src",
        "../../../assets/admin-img/jlr logo.svg",
        "alt",
        "Avatar Image",
        1,
        "mx-auto",
        "inline-flex",
        "items-center",
        "justify-center",
      ],
      [
        1,
        "title",
        2,
        "color",
        "#222fb9",
        "font-size",
        "20px",
        "text-transform",
        "capitalize",
        "margin-top",
        "15px",
      ],
      [1, "input-div", "one"],
      [1, "i", "mr-3"],
      [1, "fas", "fa-user"],
      [1, "div", "relative"],
      [1, "absolute", "left-2", "top-1", "text-gray-500", "text-sm"],
      [
        "type",
        "text",
        "name",
        "username",
        "required",
        "",
        1,
        "forms-control",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "input-div", "pass"],
      [1, "fas", "fa-lock"],
      [
        "name",
        "password",
        "required",
        "",
        "autocomplete",
        "new-password",
        1,
        "inputt",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        2,
        "padding-left",
        "1px !important",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [3, "click"],
      ["href", "javascript:void(0)", 1, "forgot-password", 3, "click"],
      ["type", "submit", "value", "Login", 1, "btn", 3, "click"],
      [1, "flex", "justify-center"],
      [1, "input-div"],
      [1, "fas", "fa-envelope"],
      [
        "name",
        "dealer_email",
        "type",
        "email",
        "required",
        "",
        "email",
        "",
        "placeholder",
        "E-mail",
        3,
        "ngModelChange",
        "ngModel",
      ],
      ["href", "javascript:void(0)", 1, "back-to-login", 3, "click"],
      ["type", "submit", "value", "Send OTP", 1, "btn", 3, "click"],
      ["class", "text-center mb-4", 4, "ngIf"],
      [1, "fas", "fa-key", "color"],
      [1, "relative", "z-0", "w-full", "mb-1", "group", "flex", "flex-col"],
      [
        "type",
        "text",
        "name",
        "otp",
        "required",
        "",
        "placeholder",
        "OTP",
        1,
        "",
        3,
        "input",
        "ngModelChange",
        "ngModel",
      ],
      [1, "flex", "justify-end", "text-end", "w-full"],
      [1, "back-to-login", 2, "cursor", "pointer", 3, "click"],
      [
        "style",
        "cursor: pointer",
        "class",
        "resend-otp",
        3,
        "click",
        4,
        "ngIf",
      ],
      [
        "type",
        "submit",
        "value",
        "Verify OTP",
        1,
        "btn",
        3,
        "click",
        "disabled",
      ],
      [1, "text-center", "mb-4"],
      [1, "resend-otp", 2, "cursor", "pointer", 3, "click"],
      [1, "title"],
      [
        "name",
        "password",
        "required",
        "",
        1,
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [
        1,
        "icon11",
        "absolute",
        "right-8",
        "top-1/2",
        "transform",
        "-translate-y-1/2",
        "cursor-pointer",
        3,
        "click",
      ],
      [1, "i"],
      [
        "name",
        "confirm-password",
        "required",
        "",
        1,
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [1, "flex", "justify-between", "w-full"],
      ["type", "submit", "value", "Reset Password", 1, "btn", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 6)(1, "div", 7),
        F(2, ak, 25, 5, "form", 8)(3, sk, 15, 1, "form", 8)(
          4,
          dk,
          18,
          4,
          "form",
          8
        )(5, uk, 25, 8, "form", 8),
        d()()),
        e & 2 &&
          (g(2),
          S("ngIf", t.currentStep === "login"),
          g(),
          S("ngIf", t.currentStep === "verifyEmail"),
          g(),
          S("ngIf", t.currentStep === "verifyOtp"),
          g(),
          S("ngIf", t.currentStep === "newPassword"));
    },
    dependencies: [ke, Je, ct, vo, ni, hi, Oi, Jn, Sd, Hi, wd, Bs],
    styles: [
      '*[_ngcontent-%COMP%]{padding:0;margin:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;overflow:hidden}.inputt[_ngcontent-%COMP%]{width:90%!important}.fas[_ngcontent-%COMP%]{color:#3b86e9!important}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%;margin:0;padding:0}.wave[_ngcontent-%COMP%]{position:fixed;bottom:0;left:0;height:100%;z-index:-1}.container[_ngcontent-%COMP%]{width:100%;grid-gap:7rem;padding:0 2rem}.img[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center}.login-content[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;text-align:center;height:97vh}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:500px}form[_ngcontent-%COMP%]{width:360px}.login-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:15px 0;color:#333;text-transform:uppercase;font-size:2.9rem}.login-content[_ngcontent-%COMP%]   .input-div[_ngcontent-%COMP%]{position:relative;display:grid;grid-template-columns:7% 93%;margin:25px 0;padding:5px 0;border-bottom:2px solid #d9d9d9}.login-content[_ngcontent-%COMP%]   .input-div.one[_ngcontent-%COMP%]{margin-top:0}.i[_ngcontent-%COMP%]{color:#d9d9d9;display:flex;justify-content:center;align-items:center}.i[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{transition:.3s}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;height:45px}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{position:absolute;left:10px;top:50%;transform:translateY(-50%);color:#999;font-size:18px;transition:.3s}.input-div[_ngcontent-%COMP%]:before, .input-div[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-2px;width:0%;height:2px;background-color:#3b86e9;transition:.4s}.input-div[_ngcontent-%COMP%]:before{right:50%}.input-div[_ngcontent-%COMP%]:after{left:50%}.input-div.focus[_ngcontent-%COMP%]:before, .input-div.focus[_ngcontent-%COMP%]:after{width:50%}.input-div.focus[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{top:-5px;font-size:15px}input.forms-control[_ngcontent-%COMP%]{background-color:transparent!important;box-shadow:none!important;transition:background-color 5000s ease-in-out 0s}input[_ngcontent-%COMP%]:-webkit-autofill, input[_ngcontent-%COMP%]:-webkit-autofill:hover, input[_ngcontent-%COMP%]:-webkit-autofill:focus{box-shadow:none!important;color:#000!important;transition:background-color 5000s ease-in-out 0s}.fas[_ngcontent-%COMP%]{color:#222fb9!important}.input-div.focus[_ngcontent-%COMP%] > .i[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{color:#5298ee}.input-div[_ngcontent-%COMP%]   .focus[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{top:-5px;font-size:15px;color:#7e7e7e}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > input[_ngcontent-%COMP%]{position:absolute;left:0;top:0;width:100%;height:100%;outline:none;background:none;font-size:1.2rem;border:none;color:#555;font-family:poppins,sans-serif}.password-toggle[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);cursor:pointer;z-index:10}.width-input[_ngcontent-%COMP%]{width:90%!important}.icon11[_ngcontent-%COMP%]{margin-left:18em;margin-top:.7em}.password-toggle[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#999;font-size:16px}.password-toggle[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{color:#666}.input-div.pass[_ngcontent-%COMP%], .input-div.verify[_ngcontent-%COMP%]{margin-bottom:4px}a[_ngcontent-%COMP%]{display:block;text-align:right;text-decoration:none;color:#999;font-size:.9rem;transition:.3s}a[_ngcontent-%COMP%]:hover{color:#3b86e9}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#3b86e9,#5496e7,#5298ee);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}@media screen and (max-width: 1050px){.container[_ngcontent-%COMP%]{grid-gap:5rem}}@media screen and (max-width: 1000px){form[_ngcontent-%COMP%]{width:290px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2.4rem;margin:8px 0}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:400px}}@media screen and (max-width: 900px){.container[_ngcontent-%COMP%]{grid-template-columns:1fr}.img[_ngcontent-%COMP%], .wave[_ngcontent-%COMP%]{display:none}.login-content[_ngcontent-%COMP%]{justify-content:center}}.eye[_ngcontent-%COMP%]{color:#b9b8b8!important}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (min-width: 1024px) and (max-width: 1366px){.img[_ngcontent-%COMP%]{margin-top:-300px}}@media (min-width: 768px) and (max-width: 1023px){.login-content[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);margin-top:0;justify-content:center}}@media (max-width: 768px){.custom-container[_ngcontent-%COMP%]{margin-left:0!important}}input[type=password][_ngcontent-%COMP%]::-ms-reveal, input[type=password][_ngcontent-%COMP%]::-ms-clear{display:none}input[type=password][_ngcontent-%COMP%]::-webkit-password-toggle-button, input[type=password][_ngcontent-%COMP%]::-webkit-textfield-decoration-container{display:none!important}input[type=password][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-decoration, input[type=password][_ngcontent-%COMP%]::-webkit-search-cancel-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-decoration{display:none!important}input[type=password][_ngcontent-%COMP%]{-moz-appearance:textfield}.new-custom[_ngcontent-%COMP%]{display:flex;justify-content:center}.div[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{position:absolute;top:12px;left:10px;font-size:16px;color:#9ca3af;pointer-events:none;transition:all .2s ease}.div[_ngcontent-%COMP%]   h5.floating[_ngcontent-%COMP%]{top:-10px;left:5px;font-size:12px;color:#3b86e9;background:#fff;padding:0 5px;z-index:10}.icon11[_ngcontent-%COMP%]{z-index:10;position:relative;pointer-events:auto;width:24px;height:24px;display:inline-flex;align-items:center;justify-content:center}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#222fb9);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}.btn[_ngcontent-%COMP%]:hover{background-position:right}',
    ],
  });
};
function hk(n, i) {
  if ((n & 1 && (u(0, "div", 12), m(1), d()), n & 2)) {
    let e = E().ngIf,
      t = E();
    g(), oe(" ", t.getInitials(e.name), " ");
  }
}
function pk(n, i) {
  if ((n & 1 && W(0, "img", 13), n & 2)) {
    let e = E(2);
    S("src", e.profileImageUrl, ld);
  }
}
function mk(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 6)(1, "div", 7),
      F(2, hk, 2, 1, "div", 8)(3, pk, 1, 1, "ng-template", null, 0, Wt),
      d(),
      u(5, "div", 9)(6, "h5", 10),
      m(7),
      d(),
      u(8, "p", 11),
      m(9),
      d()()()),
    n & 2)
  ) {
    let e = i.ngIf,
      t = Dt(4),
      o = E();
    g(2),
      S("ngIf", !o.isCustomProfileImage())("ngIfElse", t),
      g(5),
      B(e.name),
      g(2),
      B(e.email);
  }
}
function fk(n, i) {
  n & 1 && (u(0, "div", 14), m(1, " Loading profile details... "), d());
}
var bc = class n {
  constructor(i, e) {
    this.http = i;
    this.context = e;
  }
  masterSrv = ne(Ye);
  profileImageUrl = "/assets/public/images/profile/default.png";
  profile = pe(null);
  ngOnInit() {
    this.context.onSideBarClick$.next({
      role: "profile",
      pageTitle: "Profile Management",
    }),
      this.getProfileData(),
      this.getProfileImage();
  }
  isCustomProfileImage() {
    return this.profileImageUrl !== "/assets/public/images/profile/default.png";
  }
  getProfileData() {
    this.masterSrv.getProfileData().subscribe({
      next: (i) => {
        console.log("Fetched Profile Data:", i), this.profile.set(i.data);
      },
      error: (i) => {
        console.error("Error fetching profile data:", i),
          alert("Failed to fetch profile data.");
      },
    });
  }
  getProfileImage() {
    this.http
      .get("https://uat.smartassistapp.in/api/
superAdmin/show-profile")
      .subscribe({
        next: (i) => {
          console.log("Fetched Profile Image:", i),
            i?.status === 200 && i.data?.image_url
              ? (this.profileImageUrl = i.data.image_url)
              : (this.profileImageUrl =
                  "/assets/public/images/profile/default.png");
        },
        error: (i) => {
          console.error("Error fetching profile image:", i),
            (this.profileImageUrl =
              "/assets/public/images/profile/default.png");
        },
      });
  }
  getInitials(i) {
    let e = i.trim().split(" ");
    return e.length === 1
      ? e[0].charAt(0).toUpperCase()
      : (e[0].charAt(0) + e[e.length - 1].charAt(0)).toUpperCase();
  }
  static ɵfac = function (e) {
    return new (e || n)(j(ti), j(Xi));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-profile"]],
    standalone: !0,
    features: [he],
    decls: 5,
    vars: 2,
    consts: [
      ["profilePic", ""],
      [1, "container-fluid"],
      [
        1,
        "d-flex",
        "justify-content-center",
        "align-items-center",
        2,
        "min-height",
        "80vh",
      ],
      [1, "card", "rounded-4", "p-4", 2, "width", "100%"],
      ["class", "row g-3 align-items-center", 4, "ngIf"],
      ["class", "text-muted text-center py-3", 4, "ngIf"],
      [1, "row", "g-3", "align-items-center"],
      [1, "col-auto"],
      ["class", "avatar-circle shadow-sm", 4, "ngIf", "ngIfElse"],
      [1, "col"],
      [1, "text-dark", "mb-1", 2, "font-size", "22px"],
      [1, "text-muted", "mb-2", 2, "font-size", "17px"],
      [1, "avatar-circle", "shadow-sm"],
      ["alt", "Profile Photo", 1, "avatar-img", "shadow-sm", 3, "src"],
      [1, "text-muted", "text-center", "py-3"],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 1)(1, "div", 2)(2, "div", 3),
        F(3, mk, 10, 4, "div", 4)(4, fk, 2, 0, "div", 5),
        d()()()),
        e & 2 && (g(3), S("ngIf", t.profile()), g(), S("ngIf", !t.profile()));
    },
    dependencies: [ke, Je],
    styles: [
      ".avatar-circle[_ngcontent-%COMP%]{width:90px;height:90px;background-color:#dce3fa;color:#3b4cca;font-size:42px;font-weight:600;border-radius:50%;display:flex;align-items:center;justify-content:center;text-transform:uppercase}.avatar-img[_ngcontent-%COMP%]{width:80px;height:80px;border-radius:50%;object-fit:cover}",
    ],
  });
};
var _s = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.getDealerById(t) : Et(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(Ye));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var bs = class n {
  user_id;
  account_id;
  name;
  email;
  phone;
  user_role;
  password;
  otp_validated;
  otp;
  otp_expiration;
  corporate_id;
  dealer_code;
  dealer_id;
  role_id;
  role_name;
  team_id;
  team_name;
  fname;
  lname;
  team;
  role;
  constructor() {
    (this.user_id = ""),
      (this.account_id = ""),
      (this.name = ""),
      (this.phone = void 0),
      (this.email = ""),
      (this.user_role = ""),
      (this.password = ""),
      (this.otp_validated = ""),
      (this.otp = ""),
      (this.otp_expiration = ""),
      (this.dealer_code = void 0),
      (this.corporate_id = ""),
      (this.dealer_id = ""),
      (this.role_id = ""),
      (this.role_name = ""),
      (this.team_id = ""),
      (this.team_name = ""),
      (this.fname = ""),
      (this.lname = ""),
      (this.role = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var B0 = (() => {
  class n {
    static ɵfac = function (t) {
      return new (t || n)();
    };
    static ɵmod = De({ type: n });
    static ɵinj = we({ imports: [ke, gn, ki, gn] });
  }
  return n;
})();
var _5 = new Ze("RowDef"),
  b5 = new Ze("DatatableComponentToken");
var H0 = (() => {
  class n {
    static forRoot(e) {
      return {
        ngModule: n,
        providers: [{ provide: "configuration", useValue: e }],
      };
    }
    static {
      this.ɵfac = function (t) {
        return new (t || n)();
      };
    }
    static {
      this.ɵmod = De({ type: n });
    }
    static {
      this.ɵinj = we({});
    }
  }
  return n;
})();
var sa = class n {
  confirmationSubject = new Ae();
  confirm(i) {
    let e = window.confirm(i);
    return (
      this.confirmationSubject.next(e), this.confirmationSubject.asObservable()
    );
  }
  showAlert(i, e) {
    let t = document.createElement("div");
    (t.className = `alert alert-${i} alert-dismissible fade show fixed-top m-3`),
      (t.innerHTML = `
      <span class="alert-icon">
        <svg viewBox="0 0 24 24" width="24" height="24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 11 12 14 22 4"></polyline>
        </svg>
      </span>
      <strong>${i.charAt(0).toUpperCase() + i.slice(1)}!</strong> ${e}
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span>&times;</span>
      </button>
    `),
      document.body.appendChild(t),
      setTimeout(() => {
        t.classList.remove("show"), t.remove();
      }, 1e3);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var hr = (n) => ({ "is-invalid": n });
function gk(n, i) {
  n & 1 && (u(0, "tr")(1, "td", 45), m(2, "No Users found"), d()());
}
function _k(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td"),
      m(6),
      d(),
      u(7, "td"),
      m(8),
      d(),
      u(9, "td", 46)(10, "a", 47),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.onEdit(o));
      }),
      W(11, "i", 48),
      d(),
      u(12, "a", 49),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.openDeleteModal(o));
      }),
      W(13, "i", 50),
      d()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      o = E();
    g(2),
      B((o.currentPage - 1) * o.itemsPerPage + t + 1),
      g(2),
      B(e.name),
      g(2),
      B(e.email),
      g(2),
      B(e.user_role);
  }
}
function bk(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "li", 51)(1, "a", 41),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.goToPage(o));
      }),
      m(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = E();
    Ce("active", e === t.currentPage), g(2), B(e);
  }
}
function vk(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 52)(1, "div", 53)(2, "div", 54)(3, "div", 55)(4, "h5", 56),
      m(5, "Delete User"),
      d()(),
      u(6, "div", 57),
      m(7, "Are you sure you want to delete this user?"),
      d(),
      u(8, "div", 58)(9, "button", 59),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeDeleteModal());
      }),
      m(10, "Cancel"),
      d(),
      u(11, "button", 60),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.deleteUserId());
      }),
      m(12, "Delete"),
      d()()()()();
  }
}
function yk(n, i) {
  n & 1 && (u(0, "span"), m(1, "First name is required."), d());
}
function xk(n, i) {
  if ((n & 1 && (u(0, "div", 72), F(1, yk, 2, 0, "span", 33), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Ck(n, i) {
  n & 1 && (u(0, "span"), m(1, "Last name is required."), d());
}
function wk(n, i) {
  if ((n & 1 && (u(0, "div", 72), F(1, Ck, 2, 0, "span", 33), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Dk(n, i) {
  if ((n & 1 && (u(0, "option", 86), m(1), d()), n & 2)) {
    let e = i.$implicit;
    S("value", e.dealer_id), g(), oe(" ", e.dealer_code, " ");
  }
}
function Sk(n, i) {
  n & 1 && (u(0, "span"), m(1, " Dealer Code is required. "), d());
}
function Mk(n, i) {
  if ((n & 1 && (u(0, "div", 72), F(1, Sk, 2, 0, "span", 33), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("dealer_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Ek(n, i) {
  if ((n & 1 && (u(0, "option", 86), m(1), d()), n & 2)) {
    let e = i.$implicit;
    S("value", e.role_id), g(), oe(" ", e.role_name, " ");
  }
}
function Tk(n, i) {
  n & 1 && (u(0, "span"), m(1, " Role name is required. "), d());
}
function kk(n, i) {
  if ((n & 1 && (u(0, "div", 72), F(1, Tk, 2, 0, "span", 33), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("role_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Ok(n, i) {
  n & 1 && (u(0, "span"), m(1, "Email is required."), d());
}
function Ik(n, i) {
  n & 1 && (u(0, "span"), m(1, "Please enter a valid email address."), d());
}
function Pk(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 72),
      F(1, Ok, 2, 0, "span", 33)(2, Ik, 2, 0, "span", 33),
      d()),
    n & 2)
  ) {
    let e,
      t,
      o = E(2);
    g(),
      S(
        "ngIf",
        (e = o.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      S(
        "ngIf",
        (t = o.useForm.get("email")) == null || t.errors == null
          ? null
          : t.errors.email
      );
  }
}
function Ak(n, i) {
  if ((n & 1 && (u(0, "option", 86), m(1), d()), n & 2)) {
    let e = i.$implicit;
    S("value", e.team_id), g(), oe(" ", e.team_name, " ");
  }
}
function Rk(n, i) {
  n & 1 && (u(0, "div", 72)(1, "span"), m(2, "Team name is required."), d()());
}
function Fk(n, i) {
  n & 1 && (u(0, "span"), m(1, " Phone is required. "), d());
}
function Nk(n, i) {
  n & 1 && (u(0, "span"), m(1, " Must not exceed 10 characters. "), d());
}
function Vk(n, i) {
  n & 1 && (u(0, "span"), m(1, " Only numbers are allowed. "), d());
}
function Lk(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 72),
      F(1, Fk, 2, 0, "span", 33)(2, Nk, 2, 0, "span", 33)(
        3,
        Vk,
        2,
        0,
        "span",
        33
      ),
      d()),
    n & 2)
  ) {
    let e,
      t,
      o,
      r = E(2);
    g(),
      S(
        "ngIf",
        (e = r.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      g(),
      S(
        "ngIf",
        (t = r.useForm.get("phone")) == null || t.errors == null
          ? null
          : t.errors.maxlength
      ),
      g(),
      S(
        "ngIf",
        (o = r.useForm.get("phone")) == null || o.errors == null
          ? null
          : o.errors.pattern
      );
  }
}
function Bk(n, i) {
  if (n & 1) {
    let e = ce();
    $e(0),
      u(1, "button", 87),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.onUpdate());
      }),
      m(2, " Edit "),
      d(),
      Ge();
  }
  if (n & 2) {
    let e = E(2);
    g(), S("disabled", !e.isUserNameChanged());
  }
}
function Hk(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 59),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.onSave());
      }),
      m(1, " Save "),
      d();
  }
  if (n & 2) {
    let e = E(2);
    de("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function jk(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 52)(1, "div", 61)(2, "div", 54)(3, "div", 55)(4, "h5", 62),
      m(5),
      d(),
      u(6, "button", 63),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeModal());
      }),
      u(7, "span", 64),
      m(8, "\xD7"),
      d()()(),
      u(9, "div", 65)(10, "form", 66)(11, "div", 67)(12, "div", 68)(
        13,
        "label",
        69
      ),
      m(14, "First Name"),
      d(),
      W(15, "input", 70),
      F(16, xk, 2, 1, "div", 71),
      d(),
      u(17, "div", 68)(18, "label", 69),
      m(19, " Last Name "),
      u(20, "span", 72),
      m(21, "*"),
      d()(),
      W(22, "input", 73),
      F(23, wk, 2, 1, "div", 71),
      d(),
      u(24, "div", 68)(25, "label", 74),
      m(26, " Dealer Code "),
      u(27, "span", 72),
      m(28, "*"),
      d()(),
      u(29, "select", 75)(30, "option", 76),
      m(31, "Select Dealer code"),
      d(),
      F(32, Dk, 2, 2, "option", 77),
      d(),
      F(33, Mk, 2, 1, "div", 71),
      d(),
      u(34, "div", 68)(35, "label", 78),
      m(36, " Role Name "),
      u(37, "span", 72),
      m(38, "*"),
      d()(),
      u(39, "select", 79)(40, "option", 76),
      m(41, "Select Role"),
      d(),
      F(42, Ek, 2, 2, "option", 77),
      d(),
      F(43, kk, 2, 1, "div", 71),
      d(),
      u(44, "div", 68)(45, "label", 69),
      m(46, " Email "),
      u(47, "span", 72),
      m(48, "*"),
      d()(),
      W(49, "input", 80),
      F(50, Pk, 3, 2, "div", 71),
      d(),
      u(51, "div", 68)(52, "label", 81),
      m(53, " Team name "),
      u(54, "span", 72),
      m(55, "*"),
      d()(),
      u(56, "select", 82),
      z("change", function () {
        N(e);
        let o = E();
        return V(o.onTeamChange());
      }),
      u(57, "option", 76),
      m(58, "Select team name"),
      d(),
      F(59, Ak, 2, 2, "option", 77),
      d(),
      F(60, Rk, 3, 0, "div", 71),
      d(),
      u(61, "div", 68)(62, "label", 69),
      m(63, " Phone "),
      u(64, "span", 72),
      m(65, "*"),
      d()(),
      u(66, "input", 83),
      z("keypress", function (o) {
        N(e);
        let r = E();
        return V(r.restrictToNumbers(o));
      }),
      d(),
      F(67, Lk, 4, 3, "div", 71),
      d()()()(),
      u(68, "div", 58),
      F(69, Bk, 3, 1, "ng-container", 84),
      u(70, "button", 85),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeModal());
      }),
      m(71, " Close "),
      d(),
      F(72, Hk, 2, 1, "ng-template", null, 0, Wt),
      d()()()();
  }
  if (n & 2) {
    let e,
      t,
      o,
      r,
      a,
      s,
      c,
      p,
      f,
      y,
      x,
      C,
      M,
      k,
      O = Dt(73),
      P = E();
    g(5),
      oe(" ", P.userObj.user_id ? "Edit User" : "Add New User", " "),
      g(5),
      S("formGroup", P.useForm),
      g(5),
      S(
        "ngClass",
        ye(
          24,
          hr,
          ((e = P.useForm.get("fname")) == null ? null : e.touched) &&
            ((e = P.useForm.get("fname")) == null ? null : e.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        ((t = P.useForm.get("fname")) == null ? null : t.invalid) &&
          ((t = P.useForm.get("fname")) == null ? null : t.touched)
      ),
      g(6),
      S(
        "ngClass",
        ye(
          26,
          hr,
          ((o = P.useForm.get("lname")) == null ? null : o.touched) &&
            ((o = P.useForm.get("lname")) == null ? null : o.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        ((r = P.useForm.get("lname")) == null ? null : r.invalid) &&
          ((r = P.useForm.get("lname")) == null ? null : r.touched)
      ),
      g(6),
      S(
        "ngClass",
        ye(
          28,
          hr,
          ((a = P.useForm.get("dealer_id")) == null ? null : a.touched) &&
            ((a = P.useForm.get("dealer_id")) == null ? null : a.invalid)
        )
      ),
      g(),
      S("ngValue", null),
      g(2),
      S("ngForOf", P.dealerList()),
      g(),
      S(
        "ngIf",
        ((s = P.useForm.get("dealer_id")) == null ? null : s.touched) &&
          ((s = P.useForm.get("dealer_id")) == null ? null : s.invalid)
      ),
      g(6),
      S(
        "ngClass",
        ye(
          30,
          hr,
          ((c = P.useForm.get("role_id")) == null ? null : c.touched) &&
            ((c = P.useForm.get("role_id")) == null ? null : c.invalid)
        )
      ),
      g(),
      S("ngValue", null),
      g(2),
      S("ngForOf", P.roleList()),
      g(),
      S(
        "ngIf",
        ((p = P.useForm.get("role_id")) == null ? null : p.touched) &&
          ((p = P.useForm.get("role_id")) == null ? null : p.invalid)
      ),
      g(6),
      S(
        "ngClass",
        ye(
          32,
          hr,
          ((f = P.useForm.get("email")) == null ? null : f.touched) &&
            ((f = P.useForm.get("email")) == null ? null : f.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        ((y = P.useForm.get("email")) == null ? null : y.invalid) &&
          ((y = P.useForm.get("email")) == null ? null : y.touched)
      ),
      g(6),
      S(
        "ngClass",
        ye(
          34,
          hr,
          ((x = P.useForm.get("team_id")) == null ? null : x.touched) &&
            ((x = P.useForm.get("team_id")) == null ? null : x.invalid)
        )
      ),
      g(),
      S("ngValue", null),
      g(2),
      S("ngForOf", P.teamList()),
      g(),
      S(
        "ngIf",
        ((C = P.useForm.get("team_id")) == null ? null : C.touched) &&
          ((C = P.useForm.get("team_id")) == null ? null : C.invalid)
      ),
      g(6),
      S(
        "ngClass",
        ye(
          36,
          hr,
          ((M = P.useForm.get("phone")) == null ? null : M.touched) &&
            ((M = P.useForm.get("phone")) == null ? null : M.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        ((k = P.useForm.get("phone")) == null ? null : k.touched) &&
          ((k = P.useForm.get("phone")) == null ? null : k.invalid)
      ),
      g(2),
      S("ngIf", P.userObj == null ? null : P.userObj.user_id)("ngIfElse", O);
  }
}
var vc = class n {
  constructor(i, e) {
    this.aleartsrv = i;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = pe(0);
  userList = pe([]);
  dealerList = pe([]);
  totalDealer = pe(0);
  isModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  teamList = pe([]);
  totalteam = pe(0);
  dealerObj = new lo();
  roleList = pe([]);
  masterSrv = ne(Ye);
  toastr = ne(mi);
  currentPage = 1;
  itemsPerPage = 10;
  searchTerm = "";
  filteredUsers = [];
  paginatedUsers = [];
  useForm = new St({});
  userObj = new bs();
  previousEmail = "";
  isEditMode = !1;
  count;
  Role;
  totalrole;
  previousValue;
  user_id = "";
  dataTable;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  columns = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.displayAllUser(),
      console.log("\u{1F4E6} Loaded Dealer List:", this.dealerList()),
      this.dealerList().length &&
        this.dealerList()[0] &&
        console.log("\u{1F50D} Sample dealer:", this.dealerList()[0]),
      this.displayAllUser(),
      this.getAllTeams(),
      this.loadRole(),
      (this.filteredUsers = this.userList()),
      this.paginateUsers(),
      this.getAllDealer(),
      this.useForm.get("role_id")?.valueChanges.subscribe((i) => {
        if (i) {
          let t = this.roleList().find((o) => o.role_id === i);
          t &&
            (console.log("Role ID:", i),
            console.log("Role Name:", t.role_name),
            this.useForm.patchValue({ user_role: t.role_name }));
        }
      });
  }
  initializeForm() {
    this.useForm = new St({
      fname: new nt("", [Oe.required, Oe.minLength(2), Oe.maxLength(50)]),
      lname: new nt("", [Oe.required, Oe.minLength(2), Oe.maxLength(50)]),
      email: new nt("", [Oe.required, Oe.email, Oe.maxLength(100)]),
      phone: new nt(Number, [
        Oe.required,
        Oe.pattern(/^\d{10}$/),
        Oe.maxLength(10),
      ]),
      dealer_id: new nt(null, [Oe.required]),
      team_id: new nt(null, [Oe.required]),
      user_role: new nt(null, [Oe.required]),
      role_id: new nt(null, [Oe.required]),
    });
  }
  restrictToNumbers(i) {
    let e = i.key;
    /^\d$/.test(e) || i.preventDefault();
  }
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe({
      next: (i) => {
        console.log("\u{1F310} Full Dealer API Response:", i),
          i && i.data?.dealer?.rows?.length > 0
            ? (this.dealerList.set(i.data.dealer.rows),
              this.totalDealer.set(i.data.dealer.count),
              console.log("\u2705 Loaded Dealers:", this.dealerList()))
            : (console.warn(
                "\u26A0\uFE0F Dealer list empty or improperly structured"
              ),
              this.toastr.warning("No dealers found", "Information"));
      },
      error: (i) => {
        console.error("\u274C Dealer fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch dealers", "Error");
      },
    });
  }
  getAllTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (i) => {
        i && i.data.rows && i.data.rows
          ? (this.teamList.set(i.data.rows),
            console.log("Fetched teams:", this.teamList()),
            this.totalteam.set(i.data.count))
          : this.toastr.warning("No teams found", "Information");
      },
      error: (i) => {
        console.error("teams fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch teams", "Error");
      },
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (i) => {
        i && i.data && Array.isArray(i.data)
          ? (this.roleList.set(i.data),
            console.log("Fetched roles:", this.roleList()),
            this.totalrole.set(i.data.length))
          : this.toastr.warning("No roles found", "Information");
      },
      error: (i) => {
        console.error("Error fetching roles:", i),
          this.toastr.error(i.error?.error || "Error fetching roles", "Error");
      },
    });
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateUsers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredUsers = this.userList();
    else {
      let i = this.searchTerm.toLowerCase();
      this.filteredUsers = this.userList().filter(
        (e) =>
          e.name.toLowerCase().includes(i) ||
          e.email.toLowerCase().includes(i) ||
          (e.user_role?.toLowerCase().includes(i) ?? !1)
      );
    }
    (this.currentPage = 1), this.paginateUsers();
  }
  paginateUsers() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    (this.paginatedUsers = this.filteredUsers.slice(i, e)),
      (this.totalPages = Math.ceil(
        this.filteredUsers.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (t, o) => o + 1));
  }
  updatePages() {
    (this.totalPages = Math.ceil(
      this.filteredUsers.length / this.itemsPerPage
    )),
      (this.pages = Array(this.totalPages)
        .fill(0)
        .map((i, e) => e + 1));
  }
  initializeUsers() {
    let i = this.filteredUsers.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateUsers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateUsers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateUsers());
  }
  expand(i) {
    i.target.size = 6;
  }
  collapse(i) {
    i.target.size = 0;
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  openModal(i) {
    console.log("\u2705 openModal() function calledm of user"),
      console.log("User object received in openModal:", i),
      (this.isModalOpen = !0),
      i || (this.userObj = {}),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      i
        ? (this.useForm.patchValue({
            user_id: i.user_id,
            name: i.name || "",
            account_id: i.account_id || "",
            email: i.email || "",
            phone: i.phone || "",
            role_id: i.role_id || "",
            user_role: i.role_name || "",
            team_id: i.team_id || null,
            team_name: i.team_name || "",
            fname: i.fname || "",
            lname: i.lname || "",
          }),
          (this.previousEmail = i.email || ""),
          console.log("User team info:", i.team),
          console.log("Form team values:", {
            team_id: this.useForm.get("team_id")?.value,
            team_name: this.useForm.get("team_name")?.value,
          }),
          (this.userObj = se({}, i)))
        : (this.userObj = {});
  }
  onDealerChange() {
    let i = this.useForm.get("dealer_code"),
      e = this.useForm.get("dealer_id");
    if (i && e) {
      let t = this.dealerList().find((o) => o.dealer_code === i.value);
      t && e.setValue(t.dealer_id);
    }
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let i = this.useForm.get("team_name"),
      e = this.useForm.get("team_id");
    if (i && e && i.value) {
      console.log("Team name value:", i.value),
        console.log("Available teams:", this.teamList());
      let t = this.teamList().find((o) => o.team_name === i.value);
      t
        ? (console.log("Selected Team:", t), e.setValue(t.team_id))
        : console.warn("Team not found:", i.value);
    }
  }
  displayAllUser() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.totalUser.set(i.data.count),
            this.userList.set(i.data.rows),
            (this.filteredUsers = i.data.rows),
            this.initializeUsers())
          : (this.userList.set([]),
            (this.filteredUsers = []),
            this.toastr.warning("No users found", "Information"),
            this.initializeUsers());
      },
      error: (i) => {
        console.error("Users fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch users", "Error"),
          this.userList.set([]),
          (this.filteredUsers = []),
          this.initializeUsers();
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let i = this.useForm.value,
      e = this.roleList().find((t) => t.role_id === i.role_id);
    (i.user_role = e?.role_name || ""),
      this.masterSrv.createNewUser(i).subscribe({
        next: () => {
          this.toastr.success("User created successfully!", "Success"),
            this.displayAllUser(),
            this.useForm.reset(),
            (this.userObj = new bs()),
            this.closeModal();
        },
        error: (t) => {
          let o = t.error?.message || "Failed to create user";
          this.toastr.error(o, "Creation Error");
        },
      });
  }
  onSaveAndClose() {
    this.useForm.valid && (this.onSave(), this.closeModal());
  }
  onUpdate() {
    if (
      (console.log("on update"),
      console.log("Form Values:", this.useForm.value),
      this.useForm.valid)
    ) {
      let i = this.useForm.value,
        e = `${(i.fname || "").trim()} ${(i.lname || "").trim()}`.replace(
          /\s+/g,
          " "
        );
      (i.name = e),
        (this.userObj = se(se({}, this.userObj), i)),
        console.log("\u{1F4E4} Payload sent to backend:", this.userObj),
        console.log("\u{1F50D} Form Status:", this.useForm.status),
        console.log("\u{1F680} Updated Payload before API call:", this.userObj),
        this.masterSrv.updateUser(this.userObj).subscribe(
          (t) => {
            t.status === 200
              ? (console.log("API Response:", t),
                console.log("\u2705 Update Success:", t),
                this.toastr.success(t.message, "Success"),
                this.userList.set(
                  this.userList().map((o) =>
                    o.user_id === this.userObj.user_id
                      ? at(se(se({}, o), this.userObj), { name: e })
                      : o
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0),
                this.displayAllUser(),
                this.closeModal(),
                this.useForm.reset())
              : this.toastr.error("Update failed", "Error");
          },
          (t) => {
            console.error("\u274C API Error:", t),
              t.response
                ? this.toastr.error(t.response.data.message, "Error")
                : this.toastr.error("Failed to update user", "Error");
          }
        );
    } else
      this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(i) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", i?.user_id),
      (this.userObj = se({}, i)),
      (this.previousValue = i.name);
    let e = `${i.fname || ""} ${i.lname || ""}`.trim().replace(/\s+/g, " ");
    console.log("Formatted name onEdit:", e),
      this.useForm.patchValue({
        user_id: i.user_id,
        name: e,
        account_id: i.account_id || "",
        email: i.email || "",
        phone: i.phone || "",
        role_id: i.role_id || "",
        team_id: i.team_id || null,
        team_name: i.team_name || "",
        fname: i.fname || "",
        lname: i.lname || "",
        user_role: i.user_role || "",
        dealer_id: i.dealer_id || null,
      }),
      console.log("userObj.user_id after setting:", this.userObj?.user_id),
      setTimeout(() => {
        $("#myModal").modal({ backdrop: !1 });
      }, 100);
  }
  isUserNameChanged() {
    return (
      this.useForm.dirty &&
      (this.useForm.value.name !== this.previousValue ||
        this.useForm.value.email !== this.userObj.email ||
        this.useForm.value.phone !== this.userObj.phone ||
        this.useForm.value.role_id !== this.userObj.role_id ||
        this.useForm.value.team_id !== this.userObj.team_id ||
        this.useForm.value.fname !== this.userObj.fname ||
        this.useForm.value.lname !== this.userObj.lname)
    );
  }
  selectedUserForDeletion = null;
  selectUserForDeletion(i) {
    (this.selectedUserForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  setUserToDelete(i) {
    this.selectedUserForDeletion = i;
  }
  openDeleteModal(i) {
    (this.selectedUserForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  deleteUserId() {
    console.log("Deleting User ID:", this.selectedUserForDeletion?.user_id),
      this.selectedUserForDeletion && this.selectedUserForDeletion.user_id
        ? this.masterSrv
            .deleteUser(this.selectedUserForDeletion.user_id)
            .subscribe(
              (i) => {
                this.toastr.success("User deleted successfully", "Success"),
                  this.displayAllUser(),
                  (this.isDeleteModalOpen = !1);
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No users selected for deletion");
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof St && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  static ɵfac = function (e) {
    return new (e || n)(j(sa), j(it));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-users"]],
    standalone: !0,
    features: [he],
    decls: 74,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      ["id", "user", 1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search users...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "colspan",
        "3",
        1,
        "text-center",
        2,
        "display",
        "flex",
        "margin-left",
        "120%",
        "white-space",
        "nowrap",
      ],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
        2,
        "top",
        "6%",
      ],
      [1, "modal-title", "text-center", "w-100", 2, "font-size", "18px"],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "fname", 1, "form-label"],
      [
        "id",
        "fname",
        "type",
        "text",
        "formControlName",
        "fname",
        "placeholder",
        "First Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "text-danger"],
      [
        "id",
        "lname",
        "type",
        "text",
        "formControlName",
        "lname",
        "placeholder",
        "Last Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_id", 1, "form-label"],
      [
        "id",
        "dealer_id",
        "formControlName",
        "dealer_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "role_id", 1, "form-label"],
      [
        "id",
        "role_id",
        "formControlName",
        "role_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [
        "id",
        "email",
        "type",
        "email",
        "formControlName",
        "email",
        "placeholder",
        "E-mail",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "team_name", 1, "form-label"],
      [
        "id",
        "team_name",
        "formControlName",
        "team_id",
        "placeholder",
        "team name",
        1,
        "form-control",
        "form-control-lg",
        3,
        "change",
        "ngClass",
      ],
      [
        "id",
        "phone",
        "formControlName",
        "phone",
        "placeholder",
        "Phone",
        "maxlength",
        "10",
        1,
        "form-control",
        "form-control-lg",
        3,
        "keypress",
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        m(6, "Users"),
        d()(),
        u(7, "li", 7)(8, "a", 8),
        m(9, "User Master"),
        d()()()(),
        u(10, "div", 9)(11, "div", 10)(12, "a", 11),
        z("click", function () {
          return t.openModal();
        }),
        W(13, "i", 12),
        m(14, "Add Users "),
        d()(),
        u(15, "div", 10)(16, "div", 13)(17, "p", 14),
        m(18, "Total User"),
        d(),
        u(19, "h3", 15),
        m(20),
        d()()()(),
        u(21, "div", 16)(22, "div", 17)(23, "div", 18)(24, "div", 19)(
          25,
          "div",
          20
        ),
        W(26, "label", 21),
        u(27, "select", 22),
        z("change", function (r) {
          return t.onItemsPerPageChange(r);
        }),
        u(28, "option", 23),
        m(29, "10"),
        d(),
        u(30, "option", 24),
        m(31, "25"),
        d(),
        u(32, "option", 25),
        m(33, "50"),
        d(),
        u(34, "option", 26),
        m(35, "100"),
        d()(),
        u(36, "label", 27),
        m(37, "records per page"),
        d()(),
        u(38, "div", 28)(39, "div", 29)(40, "input", 30),
        Nt("ngModelChange", function (r) {
          return Ft(t.searchTerm, r) || (t.searchTerm = r), r;
        }),
        z("input", function () {
          return t.onSearchChange();
        }),
        d()()()(),
        u(41, "div", 31)(42, "table", 32)(43, "thead")(44, "tr")(45, "th"),
        m(46, "Sr No"),
        d(),
        u(47, "th"),
        m(48, "Name"),
        d(),
        u(49, "th"),
        m(50, "Email"),
        d(),
        u(51, "th"),
        m(52, "Role"),
        d(),
        u(53, "th"),
        m(54, "Action"),
        d()()(),
        u(55, "tbody"),
        F(56, gk, 3, 0, "tr", 33)(57, _k, 14, 4, "tr", 34),
        d()()(),
        u(58, "div", 35)(59, "div", 36)(60, "div", 37),
        m(61),
        d()(),
        u(62, "div", 36)(63, "div", 38)(64, "ul", 39)(65, "li", 40)(
          66,
          "a",
          41
        ),
        z("click", function () {
          return t.previousPage();
        }),
        m(67, "Previous"),
        d()(),
        F(68, bk, 3, 3, "li", 42),
        u(69, "li", 43)(70, "a", 41),
        z("click", function () {
          return t.nextPage();
        }),
        m(71, "Next"),
        d()()()()()()()()()()(),
        F(72, vk, 13, 0, "div", 44)(73, jk, 74, 38, "div", 44)),
        e & 2 &&
          (g(20),
          oe(" ", t.totalUser(), " "),
          g(20),
          Rt("ngModel", t.searchTerm),
          g(16),
          S("ngIf", t.paginatedUsers.length === 0),
          g(),
          S("ngForOf", t.paginatedUsers),
          g(4),
          Mi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.currentPage * t.itemsPerPage < t.teamList().length
              ? t.currentPage * t.itemsPerPage
              : t.teamList().length,
            " of ",
            t.teamList().length,
            " entries "
          ),
          g(4),
          Ce("disabled", t.currentPage === 1),
          g(3),
          S("ngForOf", t.visiblePages),
          g(),
          Ce("disabled", t.currentPage === t.totalPages),
          g(3),
          S("ngIf", t.isDeleteModalOpen),
          g(),
          S("ngIf", t.isModalOpen));
    },
    dependencies: [
      ke,
      Vt,
      $t,
      Je,
      Ai,
      vo,
      Ii,
      Pi,
      ni,
      In,
      hi,
      Oi,
      Jn,
      Md,
      Hi,
      ct,
      ms,
      B0,
      Qi,
      ji,
      zi,
      Ln,
      H0,
    ],
    styles: [
      "body[_ngcontent-%COMP%]{display:flex;min-height:100vh;margin:0;padding:0}.custom-modal-position[_ngcontent-%COMP%]{top:18%}@media (max-width: 767px){.custom-modal-position[_ngcontent-%COMP%]{top:7%;border:2px solid red}}#user[_ngcontent-%COMP%]{margin-left:-2rem}.sidebar[_ngcontent-%COMP%]{width:250px;flex-shrink:0;background-color:#f8f9fa;z-index:1000}.content-body[_ngcontent-%COMP%]{flex-grow:1;padding:20px;box-sizing:border-box;overflow-x:hidden}@media (max-width: 768px){body[_ngcontent-%COMP%]{flex-direction:column}.sidebar[_ngcontent-%COMP%]{width:100%;height:auto;position:static}.content-body[_ngcontent-%COMP%]{margin-left:0;width:100%;padding:10px}}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (max-width: 576px){.search-input[_ngcontent-%COMP%]{margin-left:0!important;width:100%!important}}.card-box[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 0 15px #00000014;border-radius:10px}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.modal-backdrop[_ngcontent-%COMP%]{z-index:1040!important}.modal[_ngcontent-%COMP%]{z-index:1051!important;position:fixed!important;pointer-events:auto!important}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}@media (max-width: 991.98px){.search-input[_ngcontent-%COMP%]{width:100%;margin-top:10px}}@media only screen and (max-width: 1600px){.content-body[_ngcontent-%COMP%]{margin-left:0}}.searchbar[_ngcontent-%COMP%]{display:flex;float:right}input.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}@media (min-width: 760px) and (max-width: 820px){.delete-btn-ipad[_ngcontent-%COMP%]{margin-top:5px!important}}",
    ],
  });
};
var zk = () => ["/Admin/dealer"],
  z0 = (n) => ["/Admin/singleUser", n];
function Uk(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      m(4, "Subject"),
      d(),
      u(5, "h5", 17),
      m(6),
      d()(),
      u(7, "div", 15)(8, "h4", 16),
      m(9, "Assigned"),
      d(),
      u(10, "h5", 17),
      m(11),
      d()(),
      u(12, "div", 15)(13, "h4", 16),
      m(14, "Description"),
      d(),
      u(15, "h5", 17),
      m(16),
      d()(),
      u(17, "div", 15)(18, "h4", 16),
      m(19, "account Name"),
      d(),
      u(20, "h5", 17),
      m(21),
      d()()(),
      u(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      m(25, "start Date"),
      d(),
      u(26, "h5", 17),
      m(27),
      d()(),
      u(28, "div", 15)(29, "h4", 16),
      m(30, "End Date"),
      d(),
      u(31, "h5", 17),
      m(32),
      d()(),
      u(33, "div", 15)(34, "h4", 16),
      m(35, "Name"),
      d(),
      u(36, "h5", 17),
      m(37),
      d()(),
      u(38, "div", 15)(39, "h4", 16),
      m(40, "Lead Code"),
      d(),
      u(41, "h5", 17),
      m(42),
      d()()(),
      W(43, "div", 18),
      u(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      m(47, "Lead Email"),
      d(),
      u(48, "h5", 17),
      m(49),
      d()(),
      u(50, "div", 15)(51, "h4", 16),
      m(52, "Flag"),
      d(),
      u(53, "h5", 17),
      m(54),
      d()()(),
      u(55, "div", 19)(56, "a", 20),
      m(57, "Go Back"),
      d()()()),
    n & 2)
  ) {
    let e,
      t,
      o,
      r,
      a,
      s,
      c,
      p,
      f,
      y,
      x = E();
    g(6),
      oe(" ", (e = x.eventList()) == null ? null : e.subject, ""),
      g(5),
      B((t = x.eventList()) == null ? null : t.assigned_to),
      g(5),
      B((o = x.eventList()) == null ? null : o.description),
      g(5),
      B((r = x.eventList()) == null ? null : r.name),
      g(6),
      oe(" ", (a = x.eventList()) == null ? null : a.start_date, ""),
      g(5),
      oe(" ", (s = x.eventList()) == null ? null : s.end_date, ""),
      g(5),
      oe(" ", (c = x.eventList()) == null ? null : c.name, ""),
      g(5),
      B((p = x.eventList()) == null ? null : p.lead_code),
      g(7),
      oe(" ", (f = x.eventList()) == null ? null : f.lead_email, ""),
      g(5),
      oe(" ", (y = x.eventList()) == null ? null : y.flag, ""),
      g(2),
      S("routerLink", ye(11, z0, x.previousRoute));
  }
}
var yc = class n {
  constructor(i) {
    this.route = i;
  }
  eventList = pe(null);
  masterSrv = ne(Ye);
  eventData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.eventData = i.leadData),
          this.eventData
            ? this.eventById(this.eventData.event_id)
            : console.warn("event data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("eventId");
        e
          ? this.eventById(e)
          : this.eventData ||
            console.error(
              "event ID not found in the URL and no resolver data."
            );
      });
  }
  eventById(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.eventById(i).subscribe({
        next: (e) => {
          this.eventList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ei));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-event"]],
    standalone: !0,
    features: [he],
    decls: 21,
    vars: 6,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "row", "mb-4", "text-center"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
          5,
          "a",
          5
        ),
        m(6, "Utils"),
        d()(),
        u(7, "li", 4)(8, "a", 6),
        m(9, "Dealer"),
        d()(),
        u(10, "li", 4)(11, "a", 6),
        m(12, "Single Dealer"),
        d()(),
        u(13, "li", 7)(14, "a", 8),
        m(15, "Single Event"),
        d()()()(),
        u(16, "div", 9)(17, "div", 10)(18, "h5", 11),
        m(19, "User Details"),
        d()(),
        F(20, Uk, 58, 13, "div", 12),
        d()()()),
        e & 2 &&
          (g(8),
          S("routerLink", ui(3, zk)),
          g(3),
          S("routerLink", ye(4, z0, t.previousRoute)),
          g(9),
          S("ngIf", t.eventList()));
    },
    dependencies: [ke, Je, ct, ii],
  });
};
var Wk = () => ["/Admin/dealer"],
  U0 = (n) => ["/Admin/singleUser", n];
function $k(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      m(4, "Lead Code"),
      d(),
      u(5, "h5", 17),
      m(6),
      d()(),
      u(7, "div", 15)(8, "h4", 16),
      m(9, "Status"),
      d(),
      u(10, "h5", 17),
      m(11),
      d()(),
      u(12, "div", 15)(13, "h4", 16),
      m(14, "Purchase Type"),
      d(),
      u(15, "h5", 17),
      m(16),
      d()(),
      u(17, "div", 15)(18, "h4", 16),
      m(19, "Sub Type"),
      d(),
      u(20, "h5", 17),
      m(21),
      d()()(),
      u(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      m(25, "Type"),
      d(),
      u(26, "h5", 17),
      m(27),
      d()(),
      u(28, "div", 15)(29, "h4", 16),
      m(30, "Sub Type"),
      d(),
      u(31, "h5", 17),
      m(32),
      d()(),
      u(33, "div", 15)(34, "h4", 16),
      m(35, "Brand"),
      d(),
      u(36, "h5", 17),
      m(37),
      d()(),
      u(38, "div", 15)(39, "h4", 16),
      m(40, "PMI"),
      d(),
      u(41, "h5", 17),
      m(42),
      d()()(),
      u(43, "div", 14)(44, "div", 15)(45, "h4", 16),
      m(46, "Lead Source"),
      d(),
      u(47, "h5", 17),
      m(48),
      d()(),
      u(49, "div", 15)(50, "h4", 16),
      m(51, "Last Name"),
      d(),
      u(52, "h5", 17),
      m(53),
      d()(),
      u(54, "div", 15)(55, "h4", 16),
      m(56, "Mobile"),
      d(),
      u(57, "h5", 17),
      m(58),
      d()(),
      u(59, "div", 15)(60, "h4", 16),
      m(61, "Email"),
      d(),
      u(62, "h5", 17),
      m(63),
      d()()(),
      u(64, "div", 14)(65, "div", 15)(66, "h4", 16),
      m(67, "Lead Owner"),
      d(),
      u(68, "h5", 17),
      m(69),
      d()(),
      u(70, "div", 15)(71, "h4", 16),
      m(72, "Flag"),
      d(),
      u(73, "h5", 17),
      m(74),
      d()()(),
      u(75, "div", 18)(76, "a", 19),
      m(77, "Go Back"),
      d()()()),
    n & 2)
  ) {
    let e,
      t,
      o,
      r,
      a,
      s,
      c,
      p,
      f,
      y,
      x,
      C,
      M,
      k,
      O = E();
    g(6),
      B((e = O.leadList()) == null ? null : e.lead_code),
      g(5),
      B((t = O.leadList()) == null ? null : t.status),
      g(5),
      B((o = O.leadList()) == null ? null : o.status),
      g(5),
      B((r = O.leadList()) == null ? null : r.purchase_type),
      g(6),
      B((a = O.leadList()) == null ? null : a.type),
      g(5),
      B((s = O.leadList()) == null ? null : s.sub_type),
      g(5),
      B((c = O.leadList()) == null ? null : c.brand),
      g(5),
      B((p = O.leadList()) == null ? null : p.PMI),
      g(6),
      B((f = O.leadList()) == null ? null : f.lead_source),
      g(5),
      B((y = O.leadList()) == null ? null : y.lname),
      g(5),
      B((x = O.leadList()) == null ? null : x.mobile),
      g(5),
      B((C = O.leadList()) == null ? null : C.email),
      g(6),
      B((M = O.leadList()) == null ? null : M.lead_owner),
      g(5),
      B((k = O.leadList()) == null ? null : k.flag),
      g(2),
      S("routerLink", ye(15, U0, O.previousRoute));
  }
}
var xc = class n {
  constructor(i) {
    this.route = i;
  }
  leadList = pe(null);
  masterSrv = ne(Ye);
  leadData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.leadData = i.leadData),
          this.leadData
            ? this.singleLeadData(this.leadData.lead_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("leadId");
        e
          ? this.singleLeadData(e)
          : this.leadData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleLeadData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.leadById(i).subscribe({
        next: (e) => {
          this.leadList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ei));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-lead"]],
    standalone: !0,
    features: [he],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (u(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          m(6, "Utils"),
          d()(),
          u(7, "li", 4)(8, "a", 6),
          m(9, "Dealer"),
          d()(),
          u(10, "li", 4)(11, "a", 6),
          m(12, "Single Dealer"),
          d()(),
          u(13, "li", 7)(14, "a", 8),
          m(15),
          d()()()(),
          u(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          m(19, "Leads Details"),
          d()(),
          F(20, $k, 78, 17, "div", 12),
          d()()()),
        e & 2)
      ) {
        let o;
        g(8),
          S("routerLink", ui(4, Wk)),
          g(3),
          S("routerLink", ye(5, U0, t.previousRoute)),
          g(4),
          B((o = t.leadList()) == null ? null : o.lead_owner),
          g(5),
          S("ngIf", t.leadList());
      }
    },
    dependencies: [ke, Je, ct, ii],
  });
};
var Cc = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.leadById(t) : Et(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(Ye));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var wc = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("eventId");
    return console.log(t), t ? this.masterSrv.eventById(t) : Et(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(Ye));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Dc = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.userById(t) : Et(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(Ye));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Gk = () => ["/Admin/dealer"],
  W0 = (n) => ["/Admin/singleUser", n];
function Yk(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      m(4, "Name"),
      d(),
      u(5, "h5", 17),
      m(6),
      d()(),
      u(7, "div", 15)(8, "h4", 16),
      m(9, "Account ID"),
      d(),
      u(10, "h5", 17),
      m(11),
      d()()(),
      u(12, "div", 14)(13, "div", 15)(14, "h4", 16),
      m(15, "Email"),
      d(),
      u(16, "h5", 17),
      m(17),
      d()(),
      u(18, "div", 15)(19, "h4", 16),
      m(20, "Phone"),
      d(),
      u(21, "h5", 17),
      m(22),
      d()()(),
      u(23, "div", 14)(24, "div", 15)(25, "h4", 16),
      m(26, "Role"),
      d(),
      u(27, "h5", 17),
      m(28),
      d()(),
      u(29, "div", 15)(30, "h4", 16),
      m(31, "Dealer Code"),
      d(),
      u(32, "h5", 17),
      m(33),
      d()()(),
      u(34, "div", 18)(35, "a", 19),
      m(36, "Go Back"),
      d()()()),
    n & 2)
  ) {
    let e,
      t,
      o,
      r,
      a,
      s,
      c = E();
    g(6),
      B((e = c.userList()) == null ? null : e.name),
      g(5),
      B((t = c.userList()) == null ? null : t.account_id),
      g(6),
      B((o = c.userList()) == null ? null : o.email),
      g(5),
      B((r = c.userList()) == null ? null : r.phone),
      g(6),
      B((a = c.userList()) == null ? null : a.user_role),
      g(5),
      B((s = c.userList()) == null ? null : s.dealer_code),
      g(2),
      S("routerLink", ye(7, W0, c.previousRoute));
  }
}
var Sc = class n {
  constructor(i) {
    this.route = i;
  }
  masterSrv = ne(Ye);
  userData;
  previousRoute;
  userList = pe(null);
  ngOnInit() {
    this.previousRoute = localStorage.getItem("previousRoute");
    debugger;
    this.route.data.subscribe((i) => {
      console.log("Resolved userData:", i.userData),
        i.userData &&
        Array.isArray(i.userData.data) &&
        i.userData.data.length > 0
          ? (this.userData = i.userData.data[0])
          : console.warn("User data not available.");
    }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("user_id");
        e && this.fetchSingleUser(e);
      });
  }
  fetchSingleUser(i) {
    console.log("Calling fetchSingleUser with ID:", i),
      this.masterSrv.userById(i).subscribe({
        next: (e) => {
          console.log("API Response:", e);
          debugger;
          e &&
          e.status === 200 &&
          e.data &&
          Array.isArray(e.data) &&
          e.data.length > 0
            ? (console.log("User found:", e.data[0]),
              this.userList.set(e.data[0]),
              console.log("UserList signal after setting:", this.userList()))
            : console.error("Invalid or empty response:", e);
        },
        error: (e) => {
          console.error("API Error:", e),
            e.error && console.error("Error details:", e.error),
            e.message && console.error("Error message:", e.message),
            e.status && console.error("Error status:", e.status);
        },
        complete: () => {
          console.log("API call completed");
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ei));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-user"]],
    standalone: !0,
    features: [he],
    decls: 21,
    vars: 8,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4"],
      [1, "col-md-6", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (u(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          m(6, "Utils"),
          d()(),
          u(7, "li", 4)(8, "a", 6),
          m(9, "Dealer"),
          d()(),
          u(10, "li", 4)(11, "a", 6),
          m(12, "Single Dealer"),
          d()(),
          u(13, "li", 7)(14, "a", 8),
          m(15),
          d()()()(),
          u(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          m(19),
          d()(),
          F(20, Yk, 37, 9, "div", 12),
          d()()()),
        e & 2)
      ) {
        let o, r;
        g(8),
          S("routerLink", ui(5, Gk)),
          g(3),
          S("routerLink", ye(6, W0, t.previousRoute)),
          g(4),
          B((o = t.userList()) == null ? null : o.name),
          g(4),
          oe(" ", (r = t.userList()) == null ? null : r.name, " Details "),
          g(),
          S("ngIf", t.userList());
      }
    },
    dependencies: [ki, ii, ke, Je],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}",
    ],
  });
};
var Mc = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.taskById(t) : Et(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(Ye));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var qk = () => ["/Admin/dealer"],
  $0 = (n) => ["/Admin/singleUser", n];
function Kk(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      m(4, "Subject"),
      d(),
      u(5, "h5", 17),
      m(6),
      d()(),
      u(7, "div", 15)(8, "h4", 16),
      m(9, "Status"),
      d(),
      u(10, "h5", 17),
      m(11),
      d()(),
      u(12, "div", 15)(13, "h4", 16),
      m(14, "Assigned"),
      d(),
      u(15, "h5", 17),
      m(16),
      d()()(),
      u(17, "div", 14)(18, "div", 15)(19, "h4", 16),
      m(20, "Due Date"),
      d(),
      u(21, "h5", 17),
      m(22),
      d()(),
      u(23, "div", 15)(24, "h4", 16),
      m(25, "Comments"),
      d(),
      u(26, "h5", 17),
      m(27),
      d()(),
      u(28, "div", 15)(29, "h4", 16),
      m(30, "Lead Name"),
      d(),
      u(31, "h5", 17),
      m(32),
      d()()(),
      u(33, "div", 14)(34, "div", 15)(35, "h4", 16),
      m(36, "Lead Email"),
      d(),
      u(37, "h5", 17),
      m(38),
      d()(),
      u(39, "div", 15)(40, "h4", 16),
      m(41, "Lead Code"),
      d(),
      u(42, "h5", 17),
      m(43),
      d()()(),
      u(44, "div", 18)(45, "a", 19),
      m(46, "Go Back"),
      d()()()),
    n & 2)
  ) {
    let e,
      t,
      o,
      r,
      a,
      s,
      c,
      p,
      f = E();
    g(6),
      B((e = f.taskList()) == null ? null : e.subject),
      g(5),
      B((t = f.taskList()) == null ? null : t.status),
      g(5),
      B((o = f.taskList()) == null ? null : o.assigned_to),
      g(6),
      B((r = f.taskList()) == null ? null : r.due_date),
      g(5),
      B((a = f.taskList()) == null ? null : a.comments),
      g(5),
      B((s = f.taskList()) == null ? null : s.lead_name),
      g(6),
      B((c = f.taskList()) == null ? null : c.lead_email),
      g(5),
      B((p = f.taskList()) == null ? null : p.lead_code),
      g(2),
      S("routerLink", ye(9, $0, f.previousRoute));
  }
}
var Ec = class n {
  constructor(i) {
    this.route = i;
  }
  taskList = pe(null);
  masterSrv = ne(Ye);
  taskData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.taskData = i.taskData),
          this.taskData
            ? this.singleTaskData(this.taskData.task_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("taskId");
        e
          ? this.singleTaskData(e)
          : this.taskData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleTaskData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.taskById(i).subscribe({
        next: (e) => {
          this.taskList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ei));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-task"]],
    standalone: !0,
    features: [he],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-4", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (u(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          m(6, "Utils"),
          d()(),
          u(7, "li", 4)(8, "a", 6),
          m(9, "Dealer"),
          d()(),
          u(10, "li", 4)(11, "a", 6),
          m(12, "Single Dealer"),
          d()(),
          u(13, "li", 7)(14, "a", 8),
          m(15),
          d()()()(),
          u(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          m(19, "Task Details"),
          d()(),
          F(20, Kk, 47, 11, "div", 12),
          d()()()),
        e & 2)
      ) {
        let o;
        g(8),
          S("routerLink", ui(4, qk)),
          g(3),
          S("routerLink", ye(5, $0, t.previousRoute)),
          g(4),
          B((o = t.taskList()) == null ? null : o.assigned_to),
          g(5),
          S("ngIf", t.taskList());
      }
    },
    dependencies: [ke, Je, ct, ii],
  });
};
var Tc = class n {
  constructor(i) {
    this.router = i;
    this.initRouteTracking();
  }
  previousIdSubject = new Yn(null);
  previousId$ = this.previousIdSubject.asObservable();
  currentId = null;
  initRouteTracking() {
    this.router.events.pipe(vi((i) => i instanceof Tr)).subscribe(() => {
      let t = this.router.url.split("/")[3] || null;
      this.currentId && this.setPreviousId(this.currentId),
        (this.currentId = t);
    });
  }
  setPreviousId(i) {
    localStorage.setItem("previousId", i), this.previousIdSubject.next(i);
  }
  getPreviousId() {
    return localStorage.getItem("previousId");
  }
  clearPreviousId() {
    localStorage.removeItem("previousId"), this.previousIdSubject.next(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(Ti));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Xk = () => ["/Admin/dealer"],
  Zk = (n) => ["/Admin/singleUser", n];
function Jk(n, i) {
  if (
    (n & 1 &&
      (u(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      m(4, "Opportunity Name"),
      d(),
      u(5, "h5", 17),
      m(6),
      d()(),
      u(7, "div", 15)(8, "h4", 16),
      m(9, "stage"),
      d(),
      u(10, "h5", 17),
      m(11),
      d()(),
      u(12, "div", 15)(13, "h4", 16),
      m(14, "Opportunities Record"),
      d(),
      u(15, "h5", 17),
      m(16),
      d()(),
      u(17, "div", 15)(18, "h4", 16),
      m(19, "account Name"),
      d(),
      u(20, "h5", 17),
      m(21),
      d()()(),
      u(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      m(25, "close Date"),
      d(),
      u(26, "h5", 17),
      m(27),
      d()(),
      u(28, "div", 15)(29, "h4", 16),
      m(30, "Opportunity Currency"),
      d(),
      u(31, "h5", 17),
      m(32),
      d()(),
      u(33, "div", 15)(34, "h4", 16),
      m(35, "VIN"),
      d(),
      u(36, "h5", 17),
      m(37),
      d()(),
      u(38, "div", 15)(39, "h4", 16),
      m(40, "Purchase Type"),
      d(),
      u(41, "h5", 17),
      m(42),
      d()()(),
      W(43, "div", 14),
      u(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      m(47, "Sub Type"),
      d(),
      u(48, "h5", 17),
      m(49),
      d()(),
      u(50, "div", 15)(51, "h4", 16),
      m(52, "Brand"),
      d(),
      u(53, "h5", 17),
      m(54),
      d()(),
      u(55, "div", 15)(56, "h4", 16),
      m(57, "PMI"),
      d(),
      u(58, "h5", 17),
      m(59),
      d()(),
      u(60, "div", 15)(61, "h4", 16),
      m(62, "Description"),
      d(),
      u(63, "h5", 17),
      m(64),
      d()()(),
      u(65, "div", 14)(66, "div", 15)(67, "h4", 16),
      m(68, "Mobile"),
      d(),
      u(69, "h5", 17),
      m(70),
      d()(),
      u(71, "div", 15)(72, "h4", 16),
      m(73, "Phone"),
      d(),
      u(74, "h5", 17),
      m(75),
      d()(),
      u(76, "div", 15)(77, "h4", 16),
      m(78, "E-mail"),
      d(),
      u(79, "h5", 17),
      m(80),
      d()(),
      u(81, "div", 15)(82, "h4", 16),
      m(83, "Enquiry Type"),
      d(),
      u(84, "h5", 17),
      m(85),
      d()()(),
      u(86, "div", 18)(87, "a", 19),
      m(88, "Go Back"),
      d()()()),
    n & 2)
  ) {
    let e,
      t,
      o,
      r,
      a,
      s,
      c,
      p,
      f,
      y,
      x,
      C,
      M,
      k,
      O,
      P,
      U = E();
    g(6),
      B((e = U.oppList()) == null ? null : e.opportunity_name),
      g(5),
      B((t = U.oppList()) == null ? null : t.stage),
      g(5),
      B((o = U.oppList()) == null ? null : o.opportunity_record_type),
      g(5),
      B((r = U.oppList()) == null ? null : r.account_name),
      g(6),
      B((a = U.oppList()) == null ? null : a.close_date),
      g(5),
      B((s = U.oppList()) == null ? null : s.opportunity_currency),
      g(5),
      B((c = U.oppList()) == null ? null : c.purchase_type),
      g(5),
      B((p = U.oppList()) == null ? null : p.type),
      g(7),
      B((f = U.oppList()) == null ? null : f.sub_type),
      g(5),
      B((y = U.oppList()) == null ? null : y.brand),
      g(5),
      B((x = U.oppList()) == null ? null : x.PMI),
      g(5),
      B((C = U.oppList()) == null ? null : C.description),
      g(6),
      B((M = U.oppList()) == null ? null : M.mobile),
      g(5),
      B((k = U.oppList()) == null ? null : k.phone),
      g(5),
      B((O = U.oppList()) == null ? null : O.email),
      g(5),
      B((P = U.oppList()) == null ? null : P.enquiry_type);
  }
}
var kc = class n {
  constructor(i, e) {
    this.route = i;
    this.routeTrackingService = e;
  }
  oppList = pe(null);
  masterSrv = ne(Ye);
  oppData;
  previousRoutes;
  previousRoute = null;
  previousId = null;
  ngOnInit() {
    this.routeTrackingService.previousId$.subscribe((i) => {
      this.previousId = i;
    }),
      (this.previousId = this.routeTrackingService.getPreviousId()),
      this.route.data.subscribe((i) => {
        (this.oppData = i.oppData),
          this.oppData
            ? this.singleoppData(this.oppData.opportunity_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("oppId");
        e
          ? this.singleoppData(e)
          : this.oppData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleoppData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.oppById(i).subscribe({
        next: (e) => {
          this.oppList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(Ei), j(Tc));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-single-opp"]],
    standalone: !0,
    features: [he],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-start",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        "href",
        "/Admin/dealer",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (u(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          m(6, "Utils"),
          d()(),
          u(7, "li", 4)(8, "a", 6),
          m(9, "Dealer"),
          d()(),
          u(10, "li", 4)(11, "a", 6),
          m(12, "Single Dealer"),
          d()(),
          u(13, "li", 7)(14, "a", 8),
          m(15),
          d()()()(),
          u(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          m(19, " Opportunities Details "),
          d()(),
          F(20, Jk, 89, 16, "div", 12),
          d()()()),
        e & 2)
      ) {
        let o;
        g(8),
          S("routerLink", ui(4, Xk)),
          g(3),
          S("routerLink", ye(5, Zk, t.previousId)),
          g(4),
          B((o = t.oppList()) == null ? null : o.opportunity_name),
          g(5),
          S("ngIf", t.oppList());
      }
    },
    dependencies: [ct, ke, Je, ii],
  });
};
var Oc = class n {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.oppById(t) : Et(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(Ye));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Jt = class n {
  constructor(i, e) {
    this.router = i;
    this.platformId = e;
  }
  canActivate(i, e) {
    if (!On(this.platformId)) return !1;
    let t = this.getToken();
    if (!t) return this.router.navigate([""]), !1;
    try {
      let o = this.decodeToken(t);
      if (o.exp * 1e3 < Date.now())
        return this.removeToken(), this.router.navigate([""]), !1;
      if (i.data.roles) {
        let a = o.roles || [],
          s = i.data.roles;
        if (!this.checkRoles(a, s)) return this.router.navigate([""]), !1;
      }
      return !0;
    } catch (o) {
      return (
        console.error("Token validation error:", o),
        this.removeToken(),
        this.router.navigate([""]),
        !1
      );
    }
  }
  getToken() {
    try {
      return typeof sessionStorage < "u"
        ? sessionStorage.getItem("token")
        : null;
    } catch (i) {
      return console.error("Error accessing token:", i), null;
    }
  }
  removeToken() {
    try {
      typeof sessionStorage < "u" && sessionStorage.removeItem("token");
    } catch (i) {
      console.error("Error removing token:", i);
    }
  }
  decodeToken(i) {
    try {
      let e = i.split(".")[1];
      return JSON.parse(atob(e));
    } catch (e) {
      throw (console.error("Token decoding error:", e), e);
    }
  }
  checkRoles(i, e) {
    return e.some((t) => i.includes(t));
  }
  static ɵfac = function (e) {
    return new (e || n)(ie(Ti), ie(cn));
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var vs = class n {
  role_id;
  role_name;
  description;
  constructor() {
    (this.role_id = ""), (this.role_name = ""), (this.description = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var eO = (n) => ({ "is-invalid": n });
function tO(n, i) {
  n & 1 && (u(0, "tr")(1, "td", 29), m(2, "No Roles Found"), d()());
}
function iO(n, i) {
  if (
    (n & 1 &&
      (u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td"),
      m(6),
      d(),
      u(7, "td"),
      W(8, "div", 30),
      d()()),
    n & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      o = E();
    g(2),
      B((o.currentPage - 1) * o.itemsPerPage + t + 1),
      g(2),
      B(e.role_name),
      g(2),
      B(e.description);
  }
}
function nO(n, i) {
  if ((n & 1 && (u(0, "option", 52), m(1), d()), n & 2)) {
    let e = i.$implicit;
    S("value", e.dealer_code), g(), oe(" ", e.dealer_code, " ");
  }
}
function oO(n, i) {
  n & 1 && (u(0, "span"), m(1, " Role Name is required. "), d());
}
function rO(n, i) {
  if ((n & 1 && (u(0, "div", 43), F(1, oO, 2, 0, "span", 24), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("role_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function aO(n, i) {
  if (
    (n & 1 && ($e(0), u(1, "button", 53), m(2, " Edit "), d(), Ge()), n & 2)
  ) {
    let e = E(2);
    g(), S("disabled", !e.isRoleNameChanged());
  }
}
function sO(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 54),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.onSave());
      }),
      m(1, " Save "),
      d();
  }
}
function lO(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 31)(1, "div", 32)(2, "div", 33)(3, "div", 34)(4, "h5", 35),
      m(5),
      d(),
      u(6, "button", 36),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeModal());
      }),
      u(7, "span", 37),
      m(8, "\xD7"),
      d()()(),
      u(9, "div", 38)(10, "form", 39)(11, "div", 40)(12, "div", 41)(
        13,
        "label",
        42
      ),
      m(14, " Role Name "),
      u(15, "span", 43),
      m(16, "*"),
      d()(),
      u(17, "select", 44)(18, "option", 45),
      m(19, "Select Role"),
      d(),
      F(20, nO, 2, 2, "option", 46),
      d(),
      F(21, rO, 2, 1, "div", 47),
      d(),
      u(22, "div", 41)(23, "label", 42),
      m(24, " Description "),
      d(),
      W(25, "input", 48),
      d()(),
      u(26, "div", 49),
      F(27, aO, 3, 1, "ng-container", 50),
      u(28, "button", 51),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeModal());
      }),
      m(29, " Close "),
      d(),
      F(30, sO, 2, 0, "ng-template", null, 0, Wt),
      d()()()()()();
  }
  if (n & 2) {
    let e,
      t,
      o = Dt(31),
      r = E();
    g(5),
      oe(
        " ",
        r.roleObj.role_name || r.roleObj.description
          ? "Edit User"
          : "Add New Role",
        " "
      ),
      g(5),
      S("formGroup", r.useForm),
      g(7),
      S(
        "ngClass",
        ye(
          8,
          eO,
          ((e = r.useForm.get("role_name")) == null ? null : e.touched) &&
            ((e = r.useForm.get("role_name")) == null ? null : e.invalid)
        )
      ),
      g(),
      S("ngValue", null),
      g(2),
      S("ngForOf", r.staticDealerList),
      g(),
      S(
        "ngIf",
        ((t = r.useForm.get("role_name")) == null ? null : t.invalid) &&
          ((t = r.useForm.get("role_name")) == null ? null : t.touched)
      ),
      g(6),
      S("ngIf", r.roleObj.role_id)("ngIfElse", o);
  }
}
var Ic = class n {
  constructor(i) {
    this.cdr = i;
    console.log("Constructor called"), this.initializeForm();
  }
  http = ne(ti);
  useForm = new St({});
  roleList = pe([]);
  count = pe(0);
  totalRoles = pe(0);
  isModalOpen = !1;
  roleObj = new vs();
  previousValue = "";
  isEditMode = !1;
  isSubmitting = !1;
  roleListAll = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  pages = [];
  totalPages = 1;
  filteredRoles = [];
  paginatedRoles = [];
  masterSrv = ne(Ye);
  toastr = ne(mi);
  staticDealerList = [
    { dealer_code: "Admin" },
    { dealer_code: "SM" },
    { dealer_code: "PS" },
    { dealer_code: "GM" },
    { dealer_code: "DP" },
  ];
  ngOnInit() {
    console.log("ngOnInit triggered"), this.loadRole();
  }
  initializeForm() {
    console.log("Initializing form..."),
      (this.useForm = new St({
        role_name: new nt("", [Oe.required]),
        description: new nt(""),
      }));
  }
  openModal(i) {
    this.useForm.reset(),
      (this.isModalOpen = !0),
      (this.isSubmitting = !1),
      document.body.classList.add("modal-open"),
      (this.isEditMode = !!i),
      i
        ? (this.useForm.patchValue({
            role_name: i.role_name || "",
            description: i.description || "",
          }),
          (this.roleObj = se({}, i)))
        : (this.roleObj = new vs());
  }
  onSaveAndClose() {
    this.useForm.valid && this.onSave();
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e.controls && this.markFormGroupTouched(e);
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (i) => {
        this.roleList.set(i.data),
          this.count.set(i.data.length),
          (this.filteredRoles = i.data),
          this.applyFilterAndPagination();
      },
      error: (i) => {
        this.toastr.error("Failed to load role", "Error"),
          console.error("role load error:", i);
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    if (!this.isSubmitting) {
      if (
        (this.markFormGroupTouched(this.useForm),
        console.log("Save button clicked"),
        this.useForm.invalid)
      ) {
        console.warn("Form is invalid:", this.useForm.value),
          this.useForm.markAllAsTouched();
        return;
      }
      console.log("Form is valid. Submitting:", this.useForm.value),
        (this.isSubmitting = !0),
        this.masterSrv.createRole(this.useForm.value).subscribe({
          next: (i) => {
            console.log("Role created successfully", i),
              this.toastr.success("Role created successfully!", "Success"),
              this.loadRole(),
              console.log("closing from next"),
              this.closeModal();
          },
          error: (i) => {
            console.error("Create role error:", i), (this.isSubmitting = !1);
            let e =
              i.error?.error || i.error?.message || "Failed to create role.";
            this.toastr.error(e, "Error"),
              this.closeModal(),
              console.log("closing from error");
          },
          complete: () => {
            this.isSubmitting = !1;
          },
        });
    }
  }
  onSearchChange() {
    (this.currentPage = 1), this.applyFilterAndPagination();
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      this.applyFilterAndPagination();
  }
  applyFilterAndPagination() {
    let i = this.roleList(),
      e = (this.searchTerm ?? "").toLowerCase();
    (this.filteredRoles = i.filter(
      (t) =>
        (t.role_name ?? "").toLowerCase().includes(e) ||
        (t.description ?? "").toLowerCase().includes(e)
    )),
      (this.totalPages = Math.ceil(
        this.filteredRoles.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (t, o) => o + 1)),
      this.paginateRoles();
  }
  closeModal() {
    (this.isModalOpen = !1),
      document.body.classList.remove("modal-open"),
      console.log("Modal closed");
  }
  paginateRoles() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedRoles = this.filteredRoles.slice(i, e);
  }
  goToPage(i) {
    (this.currentPage = i), this.paginateRoles();
  }
  previousPage() {
    this.currentPage > 1 && (this.currentPage--, this.paginateRoles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateRoles());
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredRoles.length
    );
  }
  min(i, e) {
    return Math.min(i, e);
  }
  updatePagination() {
    (this.totalPages = Math.ceil(
      this.filteredRoles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      (this.paginatedRoles = this.filteredRoles.slice(
        (this.currentPage - 1) * this.itemsPerPage,
        this.currentPage * this.itemsPerPage
      ));
  }
  isRoleNameChanged() {
    return this.useForm.value.role_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || n)(j(it));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-role"]],
    standalone: !0,
    features: [he],
    decls: 42,
    vars: 4,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3"],
      [1, "col-md-6"],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "4", 1, "text-center"],
      [1, "d-flex"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "role_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "role_name",
        "formControlName",
        "role_name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["class", "text-danger", 4, "ngIf"],
      [
        "id",
        "description",
        "type",
        "text",
        "formControlName",
        "description",
        "placeholder",
        "Description",
        1,
        "form-control",
        "form-control-lg",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "disabled",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        m(6, "Users"),
        d()(),
        u(7, "li", 7)(8, "a", 8),
        m(9, "Role Master"),
        d()()()(),
        u(10, "div", 9)(11, "div", 10)(12, "a", 11),
        z("click", function () {
          return t.openModal();
        }),
        W(13, "i", 12),
        m(14, "Add Roles "),
        d()(),
        u(15, "div", 13)(16, "div", 14)(17, "p", 15),
        m(18, "Total Roles"),
        d(),
        u(19, "h3", 16),
        m(20),
        d()()()(),
        u(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20),
        W(25, "div", 21),
        d()()(),
        u(26, "div", 22)(27, "table", 23)(28, "thead")(29, "tr")(30, "th"),
        m(31, "Sr No"),
        d(),
        u(32, "th"),
        m(33, "Role Name"),
        d(),
        u(34, "th"),
        m(35, "Description"),
        d()()(),
        u(36, "tbody"),
        F(37, tO, 3, 0, "tr", 24)(38, iO, 9, 3, "tr", 25),
        d()()(),
        u(39, "div", 26),
        W(40, "div", 27),
        d()()(),
        F(41, lO, 32, 10, "div", 28),
        d()),
        e & 2 &&
          (g(20),
          oe(" ", t.filteredRoles.length, " "),
          g(17),
          S("ngIf", t.paginatedRoles.length === 0),
          g(),
          S("ngForOf", t.paginatedRoles),
          g(3),
          S("ngIf", t.isModalOpen));
    },
    dependencies: [
      ct,
      vo,
      Ii,
      Pi,
      ni,
      In,
      hi,
      Oi,
      Jn,
      Qi,
      ji,
      zi,
      ke,
      Vt,
      $t,
      Je,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.table-responsive[_ngcontent-%COMP%]{width:100%;overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}body[_ngcontent-%COMP%]{overflow-x:hidden}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.toast-warning[_ngcontent-%COMP%]{background-color:#ff9800!important;color:#fff!important}.toast-info[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}",
    ],
  });
};
var Pc = class n {
  dtOptions = {};
  ngOnInit() {
    this.dtOptions = { pagingType: "full_numbers" };
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-datatable"]],
    standalone: !0,
    features: [he],
    decls: 94,
    vars: 1,
    consts: [["datatable", "", 1, "row-border", "hover", 3, "dtOptions"]],
    template: function (e, t) {
      e & 1 &&
        (u(0, "table", 0)(1, "thead")(2, "tr")(3, "th"),
        m(4, "ID"),
        d(),
        u(5, "th"),
        m(6, "First name"),
        d(),
        u(7, "th"),
        m(8, "Last name"),
        d()()(),
        u(9, "tbody")(10, "tr")(11, "td"),
        m(12, "1"),
        d(),
        u(13, "td"),
        m(14, "Foo"),
        d(),
        u(15, "td"),
        m(16, "Bar"),
        d()(),
        u(17, "tr")(18, "td"),
        m(19, "2"),
        d(),
        u(20, "td"),
        m(21, "Someone"),
        d(),
        u(22, "td"),
        m(23, "Youknow"),
        d()(),
        u(24, "tr")(25, "td"),
        m(26, "3"),
        d(),
        u(27, "td"),
        m(28, "Iamout"),
        d(),
        u(29, "td"),
        m(30, "Ofinspiration"),
        d()(),
        u(31, "tr")(32, "td"),
        m(33, "4"),
        d(),
        u(34, "td"),
        m(35, "Yoda"),
        d(),
        u(36, "td"),
        m(37, "Skywalker"),
        d()(),
        u(38, "tr")(39, "td"),
        m(40, "5"),
        d(),
        u(41, "td"),
        m(42, "Patrick"),
        d(),
        u(43, "td"),
        m(44, "Dupont"),
        d()(),
        u(45, "tr")(46, "td"),
        m(47, "6"),
        d(),
        u(48, "td"),
        m(49, "Barack"),
        d(),
        u(50, "td"),
        m(51, "Obama"),
        d()(),
        u(52, "tr")(53, "td"),
        m(54, "7"),
        d(),
        u(55, "td"),
        m(56, "Fran\xE7ois"),
        d(),
        u(57, "td"),
        m(58, "Holland"),
        d()(),
        u(59, "tr")(60, "td"),
        m(61, "8"),
        d(),
        u(62, "td"),
        m(63, "Michel"),
        d(),
        u(64, "td"),
        m(65, "Popo"),
        d()(),
        u(66, "tr")(67, "td"),
        m(68, "9"),
        d(),
        u(69, "td"),
        m(70, "Chuck"),
        d(),
        u(71, "td"),
        m(72, "Norris"),
        d()(),
        u(73, "tr")(74, "td"),
        m(75, "10"),
        d(),
        u(76, "td"),
        m(77, "Simon"),
        d(),
        u(78, "td"),
        m(79, "Robin"),
        d()(),
        u(80, "tr")(81, "td"),
        m(82, "11"),
        d(),
        u(83, "td"),
        m(84, "Louis"),
        d(),
        u(85, "td"),
        m(86, "Lin"),
        d()(),
        u(87, "tr")(88, "td"),
        m(89, "12"),
        d(),
        u(90, "td"),
        m(91, "Zelda"),
        d(),
        u(92, "td"),
        m(93, "Link"),
        d()()()()),
        e & 2 && S("dtOptions", t.dtOptions);
    },
    dependencies: [Qr, v_],
  });
};
var la = class n {
  team_id;
  team_name;
  team_lead_id;
  team_lead_email;
  total_teams;
  constructor() {
    (this.team_id = ""),
      (this.team_name = ""),
      (this.team_lead_id = ""),
      (this.team_lead_email = ""),
      (this.total_teams = 0);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ae({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var cO = (n) => ({ "is-invalid": n });
function dO(n, i) {
  n & 1 && (u(0, "tr")(1, "td", 47), m(2, "No Teams Found"), d()());
}
function uO(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "tr")(1, "td"),
      m(2),
      d(),
      u(3, "td"),
      m(4),
      d(),
      u(5, "td", 48)(6, "a", 49),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.onEdit(o));
      }),
      W(7, "i", 50),
      d(),
      u(8, "a", 51),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.openDeleteModal(o));
      }),
      W(9, "i", 52),
      d()()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = i.index,
      o = E();
    g(2), B((o.currentPage - 1) * o.itemsPerPage + t + 1), g(2), B(e.team_name);
  }
}
function hO(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "li", 53)(1, "a", 42),
      z("click", function () {
        let o = N(e).$implicit,
          r = E();
        return V(r.goToPage(o));
      }),
      m(2),
      d()();
  }
  if (n & 2) {
    let e = i.$implicit,
      t = E();
    Ce("active", e === t.currentPage), g(2), B(e);
  }
}
function pO(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 54)(1, "div", 55)(2, "div", 56)(3, "div", 57)(4, "h5", 58),
      m(5, "Delete User"),
      d()(),
      u(6, "div", 59),
      m(7, "Are you sure you want to delete this user?"),
      d(),
      u(8, "div", 60)(9, "button", 61),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeDeleteModal());
      }),
      m(10, "Cancel"),
      d(),
      u(11, "button", 62),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.deleteTeamid());
      }),
      m(12, "Delete"),
      d()()()()();
  }
}
function mO(n, i) {
  n & 1 && (u(0, "span"), m(1, "Team Name is required."), d());
}
function fO(n, i) {
  if ((n & 1 && (u(0, "div", 73), F(1, mO, 2, 0, "span", 34), d()), n & 2)) {
    let e,
      t = E(2);
    g(),
      S(
        "ngIf",
        (e = t.useForm.get("team_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function gO(n, i) {
  if (n & 1) {
    let e = ce();
    $e(0),
      u(1, "button", 78),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.onUpdate());
      }),
      m(2, " Edit "),
      d(),
      Ge();
  }
  if (n & 2) {
    let e = E(2);
    g(), S("disabled", !e.isTeamNameChanged());
  }
}
function _O(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "button", 61),
      z("click", function () {
        N(e);
        let o = E(2);
        return V(o.onSave());
      }),
      m(1, " save "),
      d();
  }
  if (n & 2) {
    let e = E(2);
    de("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function bO(n, i) {
  if (n & 1) {
    let e = ce();
    u(0, "div", 63)(1, "div", 64)(2, "div", 56)(3, "div", 57)(4, "h5", 65),
      m(5),
      d(),
      u(6, "button", 66),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeModal());
      }),
      u(7, "span", 67),
      m(8, "\xD7"),
      d()()(),
      u(9, "div", 68)(10, "form", 69)(11, "div", 70)(12, "div", 71)(
        13,
        "label",
        72
      ),
      m(14, " Team Name "),
      u(15, "span", 73),
      m(16, "*"),
      d()(),
      W(17, "input", 74),
      F(18, fO, 2, 1, "div", 75),
      d()()()(),
      u(19, "div", 60),
      F(20, gO, 3, 1, "ng-container", 76),
      u(21, "button", 77),
      z("click", function () {
        N(e);
        let o = E();
        return V(o.closeModal());
      }),
      m(22, " Close "),
      d(),
      F(23, _O, 2, 1, "ng-template", null, 0, Wt),
      d()()()();
  }
  if (n & 2) {
    let e,
      t,
      o = Dt(24),
      r = E();
    g(5),
      oe(
        " ",
        r.userObj.team_name || r.userObj.team_lead_email
          ? "Edit User"
          : "Add New Team",
        " "
      ),
      g(5),
      S("formGroup", r.useForm),
      g(7),
      S(
        "ngClass",
        ye(
          6,
          cO,
          ((e = r.useForm.get("team_name")) == null ? null : e.touched) &&
            ((e = r.useForm.get("team_name")) == null ? null : e.invalid)
        )
      ),
      g(),
      S(
        "ngIf",
        ((t = r.useForm.get("team_name")) == null ? null : t.invalid) &&
          ((t = r.useForm.get("team_name")) == null ? null : t.touched)
      ),
      g(2),
      S("ngIf", r.teamObj.team_id)("ngIfElse", o);
  }
}
var Ac = class n {
  constructor(i, e) {
    this.aleartsrv = i;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = pe(0);
  teamList = pe([]);
  totalteam = pe(0);
  userList = pe([]);
  teamObj = new la();
  count = pe(0);
  userObj = new la();
  previousValue = "";
  totalPages = 0;
  isModalOpen = !1;
  masterSrv = ne(Ye);
  toastr = ne(mi);
  useForm = new St({});
  isEditMode = !1;
  previousEmail = "";
  allUsers = [];
  pages = [];
  filteredTeams = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  filteredTeam = [];
  isDeleteModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  paginatedTeams = [];
  filteredTeamList = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllTeams(),
      this.getAllTeams(),
      this.displayAllTeams(),
      (this.filteredTeams = this.teamList()),
      this.paginateTeams(),
      this.filterTeams();
  }
  initializeForm() {
    this.useForm = new St({
      team_name: new nt("", [Oe.required, Oe.minLength(2), Oe.maxLength(50)]),
    });
  }
  openModal(i) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      i
        ? ((this.teamObj = se({}, i)),
          this.useForm.patchValue({
            team_name: i.team_name,
            team_lead_email: i.team_lead_email,
            team_lead_id: i.team_lead_id,
          }),
          console.log("fhgir"),
          console.log("\u{1F539} Edit Mode: team Object ->", this.teamObj),
          console.log("\u{1F539} teamobj.team_id ->", this.teamObj.team_id))
        : ((this.teamObj = new la()),
          (this.teamObj.team_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.teamObj
          ));
  }
  onEdit(i) {
    console.log("Edit button clicked. Team ID:", i?.team_id),
      (this.isEditMode = !0),
      (this.isModalOpen = !0),
      (this.teamObj = se({}, i)),
      this.masterSrv.getTeamById(i.team_id).subscribe(
        (e) => {
          if (e?.status === 200) {
            let t = e.data?.TeamDetails;
            t
              ? (console.log("Team Details:", t),
                this.useForm.patchValue({
                  team_name: t.team_name,
                  team_lead_email: t.team_lead_email,
                  team_lead_id: t.team_lead_id,
                }),
                console.log("Form data patched, opening modal..."),
                setTimeout(() => {
                  $("#exampleModalCenter").modal("show");
                }, 0))
              : (console.error("No team details found"),
                this.toastr.error("Team details not found", "Error"));
          }
        },
        (e) => {
          console.error("Error fetching team details:", e),
            this.toastr.error("Error fetching team details", "Error");
        }
      );
  }
  isTeamNameChanged() {
    return (
      this.useForm.dirty && this.useForm.value.team_name !== this.previousValue
    );
  }
  selectedteamForDeletion = null;
  selectteamForDeletion(i) {
    (this.selectedteamForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let i = this.useForm.get("team_name"),
      e = this.useForm.get("team_lead_email"),
      t = this.useForm.get("team_id");
    if (i && t && i.value) {
      console.log("Team name value:", i.value),
        console.log("Available teams:", this.teamList());
      let o = this.teamList().find((r) => r.team_name === i.value);
      o
        ? (console.log("Selected Team:", o),
          t.setValue(o.team_id),
          e?.setValue(o.team_lead_email))
        : console.warn("Team not found:", i.value);
    }
  }
  openDeleteModal(i) {
    (this.selectedteamForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  getAllTeams() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.allUsers = i.data.rows)
          : this.toastr.warning("No teams found", "Information");
      },
      error: (i) => {
        console.error("teams fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch users", "Error");
      },
    });
  }
  updatePagination() {
    let i = this.filteredTeams,
      e = (this.currentPage - 1) * this.itemsPerPage,
      t = e + this.itemsPerPage;
    (this.paginatedTeams = i.slice(e, t)),
      (this.totalPages = Math.ceil(i.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (o, r) => r + 1));
  }
  onSearchChange() {
    (this.currentPage = 1), this.filterTeams();
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredTeam.length
    );
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = +i.target.value),
      (this.currentPage = 1),
      this.filterTeams();
  }
  filterTeams() {
    (this.filteredTeams = this.teamList().filter((i) =>
      i.team_name.toLowerCase().includes(this.searchTerm.toLowerCase())
    )),
      this.paginateTeams();
  }
  paginateTeams() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedTeams = this.filteredTeams.slice(i, e);
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateTeams();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateTeams());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateTeams());
  }
  deleteTeamid() {
    console.log(
      "this is the select user",
      this.selectteamForDeletion,
      this.selectedteamForDeletion
    ),
      this.selectedteamForDeletion && this.selectedteamForDeletion.team_id
        ? this.masterSrv
            .deleteTeam(this.selectedteamForDeletion.team_id)
            .subscribe(
              (i) => {
                this.toastr.success("Team deleted successfully", "Success"),
                  (this.isDeleteModalOpen = !1),
                  this.displayAllTeams();
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No Team selected for deletion");
  }
  displayAllTeams() {
    console.log("Fetching all teams..."),
      this.masterSrv.getMultipleTeams().subscribe({
        next: (i) => {
          i && i.data.rows
            ? (this.teamList.set(i.data.rows),
              (this.filteredTeams = i.data.rows),
              this.totalteam.set(i.data.rows.length),
              this.initializeTeamPagination())
            : (this.teamList.set([]),
              (this.filteredTeams = []),
              this.toastr.warning("No team found", "Information"),
              this.totalteam.set(0),
              this.initializeTeamPagination());
        },
        error: (i) => {
          console.error("team fetch error:", i),
            this.toastr.error(i.message || "Failed to fetch team", "Error"),
            this.teamList.set([]),
            (this.filteredTeams = []),
            this.totalteam.set(0),
            this.initializeTeamPagination();
        },
      });
  }
  initializeTeamPagination() {
    let i = this.filteredTeams.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateTeams();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.teamObj = se(se({}, this.teamObj), this.useForm.value)),
        console.log("\u{1F680} Updated Payload before API call:", this.teamObj),
        this.masterSrv.updateTeam(this.teamObj).subscribe(
          (i) => {
            i.status === 200
              ? (console.log("\u2705 Update Success:", i),
                this.toastr.success(i.message, "Success"),
                this.displayAllTeams(),
                this.closeModal(),
                this.userList.set(
                  this.userList().map((e) =>
                    e.team_id === this.teamObj.team_id
                      ? se(se({}, e), this.teamObj)
                      : e
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0))
              : this.toastr.error("Update failed", "Error");
          },
          (i) => {
            console.error("\u274C API Error:", i),
              this.toastr.error("Failed to update team", "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  closeModal() {
    this.isModalOpen = !1;
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof St && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let i = this.useForm.value;
    console.log("Form Data being sent to API:", i),
      this.masterSrv.createNewTeam(i).subscribe({
        next: (e) => {
          this.toastr.success("Team created successfully!", "Success"),
            this.displayAllTeams(),
            this.closeModal(),
            setTimeout(() => {
              this.cdr.detectChanges(), this.cdr.markForCheck();
            }, 0);
        },
        error: (e) => {
          console.error("Team creation error:", e);
          let t = e?.error?.message || "Failed to create team";
          this.toastr.error(t, "Creation Error");
        },
      });
  }
  loadTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (i) => {
        this.count.set(i.data.count), this.teamList.set(i.data.rows);
      },
      error: (i) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", i);
      },
    });
  }
  static ɵfac = function (e) {
    return new (e || n)(j(sa), j(it));
  };
  static ɵcmp = le({
    type: n,
    selectors: [["app-team"]],
    standalone: !0,
    features: [he],
    decls: 71,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search teams...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "3", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "team_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "team_name",
        "type",
        "text",
        "formControlName",
        "team_name",
        "placeholder",
        "Team Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (u(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        m(6, "Utils"),
        d()(),
        u(7, "li", 7)(8, "a", 8),
        m(9, "Team Master"),
        d()()()(),
        u(10, "div", 9)(11, "div", 10)(12, "a", 11),
        z("click", function () {
          return t.openModal();
        }),
        W(13, "i", 12),
        m(14, "Add Team "),
        d()(),
        u(15, "div", 13)(16, "div", 14)(17, "p", 15),
        m(18, "Total Team"),
        d(),
        u(19, "h3", 16),
        m(20),
        d()()()(),
        u(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        W(26, "label", 22),
        u(27, "select", 23),
        z("change", function (r) {
          return t.onItemsPerPageChange(r);
        }),
        u(28, "option", 24),
        m(29, "10"),
        d(),
        u(30, "option", 25),
        m(31, "25"),
        d(),
        u(32, "option", 26),
        m(33, "50"),
        d(),
        u(34, "option", 27),
        m(35, "100"),
        d()(),
        u(36, "label", 28),
        m(37, "records per page"),
        d()(),
        u(38, "div", 29)(39, "div", 30)(40, "input", 31),
        Nt("ngModelChange", function (r) {
          return Ft(t.searchTerm, r) || (t.searchTerm = r), r;
        }),
        z("input", function () {
          return t.onSearchChange();
        }),
        d()()()(),
        m(41, " \xA0\xA0 "),
        d(),
        u(42, "div", 32)(43, "table", 33)(44, "thead")(45, "tr")(46, "th"),
        m(47, "Sr No"),
        d(),
        u(48, "th"),
        m(49, "Team Name"),
        d(),
        u(50, "th"),
        m(51, "Action"),
        d()()(),
        u(52, "tbody"),
        F(53, dO, 3, 0, "tr", 34)(54, uO, 10, 2, "tr", 35),
        d()()(),
        u(55, "div", 36)(56, "div", 37)(57, "div", 38),
        m(58),
        d()(),
        u(59, "div", 37)(60, "div", 39)(61, "ul", 40)(62, "li", 41)(
          63,
          "a",
          42
        ),
        z("click", function () {
          return t.previousPage();
        }),
        m(64, "Previous"),
        d()(),
        F(65, hO, 3, 3, "li", 43),
        u(66, "li", 44)(67, "a", 42),
        z("click", function () {
          return t.nextPage();
        }),
        m(68, "Next"),
        d()()()()()()()()()(),
        F(69, pO, 13, 0, "div", 45)(70, bO, 25, 8, "div", 46)),
        e & 2 &&
          (g(20),
          oe(" ", t.totalteam(), " "),
          g(20),
          Rt("ngModel", t.searchTerm),
          g(13),
          S("ngIf", t.paginatedTeams.length === 0),
          g(),
          S("ngForOf", t.paginatedTeams),
          g(4),
          Mi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.currentPage * t.itemsPerPage < t.teamList().length
              ? t.currentPage * t.itemsPerPage
              : t.teamList().length,
            " of ",
            t.teamList().length,
            " entries "
          ),
          g(4),
          Ce("disabled", t.currentPage === 1),
          g(3),
          S("ngForOf", t.visiblePages),
          g(),
          Ce("disabled", t.currentPage === t.totalPages),
          g(3),
          S("ngIf", t.isDeleteModalOpen),
          g(),
          S("ngIf", t.isModalOpen));
    },
    dependencies: [
      ke,
      Vt,
      $t,
      Je,
      ct,
      vo,
      Ii,
      Pi,
      ni,
      hi,
      Oi,
      Jn,
      Hi,
      Qi,
      ji,
      zi,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}",
    ],
  });
};
var G0 = [
  { path: "dataTable", component: Pc },
  { path: "", component: gs, pathMatch: "full" },
  { path: "login", component: gs },
  {
    path: "Admin",
    component: ol,
    canActivate: [Jt],
    children: [
      { path: "", redirectTo: "dashboard", pathMatch: "full" },
      {
        path: "dashboard",
        component: Wl,
        data: { title: "Dashboard" },
        canActivate: [Jt],
      },
      {
        path: "dealer",
        component: ql,
        data: { title: "Dealer" },
        canActivate: [Jt],
      },
      {
        path: "team",
        component: Ac,
        data: { title: "team" },
        canActivate: [Jt],
      },
      {
        path: "vehicle",
        component: uc,
        data: { title: "Vehicle" },
        canActivate: [Jt],
      },
      {
        path: "role",
        component: Ic,
        data: { title: "Role" },
        canActivate: [Jt],
      },
      {
        path: "user-all",
        component: vc,
        data: { title: "Users-All" },
        canActivate: [Jt],
      },
      {
        path: "customer",
        component: gc,
        data: { title: "Customer" },
        canActivate: [Jt],
      },
      {
        path: "profile",
        component: bc,
        data: { title: "Profile" },
        canActivate: [Jt],
      },
      {
        path: "singleUser/:dealer_id",
        component: fs,
        resolve: { dealerData: _s },
        data: { title: "Multiple" },
        canActivate: [Jt],
      },
      {
        path: "single-events/:eventId",
        component: yc,
        resolve: { eventData: wc },
        data: { title: "Single events" },
        canActivate: [Jt],
      },
      {
        path: "single-lead/:dealerId/:leadId",
        component: xc,
        resolve: { leadData: Cc },
        data: { title: "Single Lead Data" },
        canActivate: [Jt],
      },
      {
        path: "single-user/:user_id",
        component: Sc,
        resolve: { userData: Dc },
        data: { title: "Single user Data" },
        canActivate: [Jt],
      },
      {
        path: "single-task/:taskId",
        component: Ec,
        resolve: { taskData: Mc },
        data: { title: "Single Task Data" },
        canActivate: [Jt],
      },
      {
        path: "single-opportunities/:oppId",
        component: kc,
        resolve: { oppData: Oc },
        data: { title: "Single Opportunities Data" },
        canActivate: [Jt],
      },
      {
        path: "admin/singleDealer/:id",
        component: fs,
        resolve: { dealerData: _s },
        data: { title: "Single dealer Data" },
        canActivate: [Jt],
      },
    ],
  },
];
var vO = "@",
  yO = (() => {
    class n {
      constructor(e, t, o, r, a) {
        (this.doc = e),
          (this.delegate = t),
          (this.zone = o),
          (this.animationType = r),
          (this.moduleImpl = a),
          (this._rendererFactoryPromise = null),
          (this.scheduler = ne(Xp, { optional: !0 })),
          (this.loadingSchedulerFn = ne(xO, { optional: !0 }));
      }
      ngOnDestroy() {
        this._engine?.flush();
      }
      loadImpl() {
        let e = () =>
            this.moduleImpl ?? import("./chunk-ZV2LH3BP.mjs").then((o) => o),
          t;
        return (
          this.loadingSchedulerFn
            ? (t = this.loadingSchedulerFn(e))
            : (t = e()),
          t
            .catch((o) => {
              throw new wr(5300, !1);
            })
            .then(({ ɵcreateEngine: o, ɵAnimationRendererFactory: r }) => {
              this._engine = o(this.animationType, this.doc);
              let a = new r(this.delegate, this._engine, this.zone);
              return (this.delegate = a), a;
            })
        );
      }
      createRenderer(e, t) {
        let o = this.delegate.createRenderer(e, t);
        if (o.ɵtype === 0) return o;
        typeof o.throwOnSyntheticProps == "boolean" &&
          (o.throwOnSyntheticProps = !1);
        let r = new ip(o);
        return (
          t?.data?.animation &&
            !this._rendererFactoryPromise &&
            (this._rendererFactoryPromise = this.loadImpl()),
          this._rendererFactoryPromise
            ?.then((a) => {
              let s = a.createRenderer(e, t);
              r.use(s), this.scheduler?.notify(10);
            })
            .catch((a) => {
              r.use(o);
            }),
          r
        );
      }
      begin() {
        this.delegate.begin?.();
      }
      end() {
        this.delegate.end?.();
      }
      whenRenderingDone() {
        return this.delegate.whenRenderingDone?.() ?? Promise.resolve();
      }
      static {
        this.ɵfac = function (t) {
          Dr();
        };
      }
      static {
        this.ɵprov = ae({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  ip = class {
    constructor(i) {
      (this.delegate = i), (this.replay = []), (this.ɵtype = 1);
    }
    use(i) {
      if (((this.delegate = i), this.replay !== null)) {
        for (let e of this.replay) e(i);
        this.replay = null;
      }
    }
    get data() {
      return this.delegate.data;
    }
    destroy() {
      (this.replay = null), this.delegate.destroy();
    }
    createElement(i, e) {
      return this.delegate.createElement(i, e);
    }
    createComment(i) {
      return this.delegate.createComment(i);
    }
    createText(i) {
      return this.delegate.createText(i);
    }
    get destroyNode() {
      return this.delegate.destroyNode;
    }
    appendChild(i, e) {
      this.delegate.appendChild(i, e);
    }
    insertBefore(i, e, t, o) {
      this.delegate.insertBefore(i, e, t, o);
    }
    removeChild(i, e, t) {
      this.delegate.removeChild(i, e, t);
    }
    selectRootElement(i, e) {
      return this.delegate.selectRootElement(i, e);
    }
    parentNode(i) {
      return this.delegate.parentNode(i);
    }
    nextSibling(i) {
      return this.delegate.nextSibling(i);
    }
    setAttribute(i, e, t, o) {
      this.delegate.setAttribute(i, e, t, o);
    }
    removeAttribute(i, e, t) {
      this.delegate.removeAttribute(i, e, t);
    }
    addClass(i, e) {
      this.delegate.addClass(i, e);
    }
    removeClass(i, e) {
      this.delegate.removeClass(i, e);
    }
    setStyle(i, e, t, o) {
      this.delegate.setStyle(i, e, t, o);
    }
    removeStyle(i, e, t) {
      this.delegate.removeStyle(i, e, t);
    }
    setProperty(i, e, t) {
      this.shouldReplay(e) && this.replay.push((o) => o.setProperty(i, e, t)),
        this.delegate.setProperty(i, e, t);
    }
    setValue(i, e) {
      this.delegate.setValue(i, e);
    }
    listen(i, e, t) {
      return (
        this.shouldReplay(e) && this.replay.push((o) => o.listen(i, e, t)),
        this.delegate.listen(i, e, t)
      );
    }
    shouldReplay(i) {
      return this.replay !== null && i.startsWith(vO);
    }
  },
  xO = new Ze("");
function Y0(n = "animations") {
  return (
    Jp("NgAsyncAnimations"),
    As([
      {
        provide: Zp,
        useFactory: (i, e, t) => new yO(i, e, t, n),
        deps: [ze, sm, He],
      },
      {
        provide: Mn,
        useValue: n === "noop" ? "NoopAnimations" : "BrowserAnimations",
      },
    ])
  );
}
var q0 = {
  providers: [
    nm({ eventCoalescing: !0 }),
    hm(G0),
    Qr,
    dm(),
    am(),
    Y0(),
    qp(
      h_.forRoot({
        timeOut: 3e3,
        positionClass: "toast-top-right",
        preventDuplicates: !0,
        progressBar: !0,
      })
    ),
  ],
};
var CO = { providers: [um()] },
  K0 = om(q0, CO);
var wO = () => lm(js, K0),
  x6 = wO;
export { x6 as a };
