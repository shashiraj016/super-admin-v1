import "./polyfills.server.mjs";
import {
  a as Yt,
  b as Zs,
  c as St,
  d as Vd,
  e as Xo,
  f as Nd,
  g as Ld,
  h as Bd,
  i as Hd,
  l as jd,
  p as Sn,
  q as Mi,
  r as xr,
  t as Lt,
  u as Bt,
  v as zd,
  w as Ud,
  x as ai,
} from "./chunk-4SP7HFKU.mjs";
import {
  $a as d,
  $b as Xe,
  $c as Qo,
  A as zo,
  Aa as ht,
  Ab as br,
  Ac as qe,
  B as Bs,
  Ba as Pe,
  Bb as a,
  Cb as s,
  Db as R,
  E as Hs,
  Eb as Me,
  Fa as Vi,
  Fb as Oe,
  Fc as ye,
  G as Hn,
  Ga as Zi,
  Gb as Bi,
  Gc as Di,
  Ha as yd,
  Hb as J,
  Hc as Un,
  I as Uo,
  Ib as Go,
  Ic as Hi,
  J as gd,
  Jb as O,
  Jc as qo,
  Kb as Od,
  Lb as _,
  Lc as Id,
  Mb as Pt,
  Mc as Qs,
  Nb as xt,
  Ob as Ji,
  P as Zr,
  Pb as at,
  Pc as Le,
  Q as Cn,
  Qb as tt,
  R as js,
  Rb as it,
  S as kt,
  Sb as Td,
  T as zs,
  Tb as Ys,
  U as Us,
  Ua as Cd,
  Ub as rt,
  V as fr,
  Va as Jr,
  Vb as c,
  W as Gt,
  Wa as Ws,
  Wb as E,
  Wc as Ko,
  X as re,
  Xb as K,
  Y as _e,
  Ya as eo,
  Yb as di,
  Yc as ft,
  Za as wn,
  Zb as oi,
  Zc as gt,
  _ as $e,
  _b as Ze,
  _c as Be,
  a as Ai,
  aa as ie,
  ab as F,
  ac as Je,
  ad as Zo,
  ba as te,
  bb as gr,
  bc as yt,
  bd as Dn,
  c as Bn,
  ca as _d,
  cb as Xi,
  cc as le,
  cd as vr,
  da as bd,
  db as wd,
  dc as Ut,
  dd as Ad,
  eb as zn,
  ec as ce,
  ed as Fd,
  f as Ee,
  fa as oe,
  fb as Dd,
  fc as wi,
  fd as Rd,
  g as Fi,
  ga as be,
  gb as Jt,
  gc as to,
  gd as De,
  h as Ns,
  ha as ke,
  hb as Ni,
  hc as kd,
  i as dd,
  ia as Wo,
  ib as Sd,
  ic as ei,
  j as pd,
  ja as vd,
  jb as pe,
  jc as pn,
  jd as Si,
  k as bt,
  kb as Md,
  kc as Yo,
  la as Xr,
  lb as ze,
  lc as qs,
  mb as Dt,
  mc as lt,
  na as wt,
  o as cn,
  oa as w,
  od as Wn,
  p as Ls,
  pa as D,
  pb as M,
  pd as pi,
  qa as ct,
  qb as $s,
  qc as Pd,
  qd as Nt,
  ra as jn,
  rb as Gs,
  rd as hn,
  s as ud,
  sa as pt,
  sb as dn,
  sd as Xs,
  ta as $o,
  tb as se,
  tc as un,
  td as ui,
  u as hd,
  ua as vt,
  ub as g,
  v as Ri,
  vb as ut,
  w as md,
  wa as xe,
  wb as X,
  wc as Ed,
  x as mr,
  xa as Ie,
  xb as Fe,
  xc as Ks,
  y as zt,
  yb as Li,
  z as fd,
  za as xd,
  zb as _r,
} from "./chunk-2ZDBAKMQ.mjs";
import {
  a as ee,
  b as Ne,
  e as bm,
  g as vm,
  h as Vs,
} from "./chunk-5XUXGTUW.mjs";
var th = bm((eh, Ya) => {
  "use strict";
  (function (r, i) {
    "use strict";
    typeof Ya == "object" && typeof Ya.exports == "object"
      ? (Ya.exports = r.document
          ? i(r, !0)
          : function (e) {
              if (!e.document)
                throw new Error("jQuery requires a window with a document");
              return i(e);
            })
      : i(r);
  })(typeof window < "u" ? window : eh, function (r, i) {
    "use strict";
    var e = [],
      t = Object.getPrototypeOf,
      n = e.slice,
      o = e.flat
        ? function (l) {
            return e.flat.call(l);
          }
        : function (l) {
            return e.concat.apply([], l);
          },
      u = e.push,
      b = e.indexOf,
      C = {},
      T = C.toString,
      k = C.hasOwnProperty,
      V = k.toString,
      B = V.call(Object),
      L = {},
      H = function (p) {
        return (
          typeof p == "function" &&
          typeof p.nodeType != "number" &&
          typeof p.item != "function"
        );
      },
      U = function (p) {
        return p != null && p === p.window;
      },
      j = r.document,
      Y = { type: !0, src: !0, nonce: !0, noModule: !0 };
    function ge(l, p, h) {
      h = h || j;
      var m,
        v,
        x = h.createElement("script");
      if (((x.text = l), p))
        for (m in Y)
          (v = p[m] || (p.getAttribute && p.getAttribute(m))),
            v && x.setAttribute(m, v);
      h.head.appendChild(x).parentNode.removeChild(x);
    }
    function Ce(l) {
      return l == null
        ? l + ""
        : typeof l == "object" || typeof l == "function"
        ? C[T.call(l)] || "object"
        : typeof l;
    }
    var ae = "3.7.1",
      vi = /HTML$/i,
      f = function (l, p) {
        return new f.fn.init(l, p);
      };
    (f.fn = f.prototype =
      {
        jquery: ae,
        constructor: f,
        length: 0,
        toArray: function () {
          return n.call(this);
        },
        get: function (l) {
          return l == null
            ? n.call(this)
            : l < 0
            ? this[l + this.length]
            : this[l];
        },
        pushStack: function (l) {
          var p = f.merge(this.constructor(), l);
          return (p.prevObject = this), p;
        },
        each: function (l) {
          return f.each(this, l);
        },
        map: function (l) {
          return this.pushStack(
            f.map(this, function (p, h) {
              return l.call(p, h, p);
            })
          );
        },
        slice: function () {
          return this.pushStack(n.apply(this, arguments));
        },
        first: function () {
          return this.eq(0);
        },
        last: function () {
          return this.eq(-1);
        },
        even: function () {
          return this.pushStack(
            f.grep(this, function (l, p) {
              return (p + 1) % 2;
            })
          );
        },
        odd: function () {
          return this.pushStack(
            f.grep(this, function (l, p) {
              return p % 2;
            })
          );
        },
        eq: function (l) {
          var p = this.length,
            h = +l + (l < 0 ? p : 0);
          return this.pushStack(h >= 0 && h < p ? [this[h]] : []);
        },
        end: function () {
          return this.prevObject || this.constructor();
        },
        push: u,
        sort: e.sort,
        splice: e.splice,
      }),
      (f.extend = f.fn.extend =
        function () {
          var l,
            p,
            h,
            m,
            v,
            x,
            y = arguments[0] || {},
            I = 1,
            P = arguments.length,
            N = !1;
          for (
            typeof y == "boolean" && ((N = y), (y = arguments[I] || {}), I++),
              typeof y != "object" && !H(y) && (y = {}),
              I === P && ((y = this), I--);
            I < P;
            I++
          )
            if ((l = arguments[I]) != null)
              for (p in l)
                (m = l[p]),
                  !(p === "__proto__" || y === m) &&
                    (N && m && (f.isPlainObject(m) || (v = Array.isArray(m)))
                      ? ((h = y[p]),
                        v && !Array.isArray(h)
                          ? (x = [])
                          : !v && !f.isPlainObject(h)
                          ? (x = {})
                          : (x = h),
                        (v = !1),
                        (y[p] = f.extend(N, x, m)))
                      : m !== void 0 && (y[p] = m));
          return y;
        }),
      f.extend({
        expando: "jQuery" + (ae + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function (l) {
          throw new Error(l);
        },
        noop: function () {},
        isPlainObject: function (l) {
          var p, h;
          return !l || T.call(l) !== "[object Object]"
            ? !1
            : ((p = t(l)),
              p
                ? ((h = k.call(p, "constructor") && p.constructor),
                  typeof h == "function" && V.call(h) === B)
                : !0);
        },
        isEmptyObject: function (l) {
          var p;
          for (p in l) return !1;
          return !0;
        },
        globalEval: function (l, p, h) {
          ge(l, { nonce: p && p.nonce }, h);
        },
        each: function (l, p) {
          var h,
            m = 0;
          if (bn(l))
            for (h = l.length; m < h && p.call(l[m], m, l[m]) !== !1; m++);
          else for (m in l) if (p.call(l[m], m, l[m]) === !1) break;
          return l;
        },
        text: function (l) {
          var p,
            h = "",
            m = 0,
            v = l.nodeType;
          if (!v) for (; (p = l[m++]); ) h += f.text(p);
          return v === 1 || v === 11
            ? l.textContent
            : v === 9
            ? l.documentElement.textContent
            : v === 3 || v === 4
            ? l.nodeValue
            : h;
        },
        makeArray: function (l, p) {
          var h = p || [];
          return (
            l != null &&
              (bn(Object(l))
                ? f.merge(h, typeof l == "string" ? [l] : l)
                : u.call(h, l)),
            h
          );
        },
        inArray: function (l, p, h) {
          return p == null ? -1 : b.call(p, l, h);
        },
        isXMLDoc: function (l) {
          var p = l && l.namespaceURI,
            h = l && (l.ownerDocument || l).documentElement;
          return !vi.test(p || (h && h.nodeName) || "HTML");
        },
        merge: function (l, p) {
          for (var h = +p.length, m = 0, v = l.length; m < h; m++)
            l[v++] = p[m];
          return (l.length = v), l;
        },
        grep: function (l, p, h) {
          for (var m, v = [], x = 0, y = l.length, I = !h; x < y; x++)
            (m = !p(l[x], x)), m !== I && v.push(l[x]);
          return v;
        },
        map: function (l, p, h) {
          var m,
            v,
            x = 0,
            y = [];
          if (bn(l))
            for (m = l.length; x < m; x++)
              (v = p(l[x], x, h)), v != null && y.push(v);
          else for (x in l) (v = p(l[x], x, h)), v != null && y.push(v);
          return o(y);
        },
        guid: 1,
        support: L,
      }),
      typeof Symbol == "function" &&
        (f.fn[Symbol.iterator] = e[Symbol.iterator]),
      f.each(
        "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
          " "
        ),
        function (l, p) {
          C["[object " + p + "]"] = p.toLowerCase();
        }
      );
    function bn(l) {
      var p = !!l && "length" in l && l.length,
        h = Ce(l);
      return H(l) || U(l)
        ? !1
        : h === "array" ||
            p === 0 ||
            (typeof p == "number" && p > 0 && p - 1 in l);
    }
    function Qe(l, p) {
      return l.nodeName && l.nodeName.toLowerCase() === p.toLowerCase();
    }
    var ci = e.pop,
      An = e.sort,
      mh = e.splice,
      st = "[\\x20\\t\\r\\n\\f]",
      Br = new RegExp(
        "^" + st + "+|((?:^|[^\\\\])(?:\\\\.)*)" + st + "+$",
        "g"
      );
    f.contains = function (l, p) {
      var h = p && p.parentNode;
      return (
        l === h ||
        !!(
          h &&
          h.nodeType === 1 &&
          (l.contains
            ? l.contains(h)
            : l.compareDocumentPosition && l.compareDocumentPosition(h) & 16)
        )
      );
    };
    var fh = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function gh(l, p) {
      return p
        ? l === "\0"
          ? "\uFFFD"
          : l.slice(0, -1) +
            "\\" +
            l.charCodeAt(l.length - 1).toString(16) +
            " "
        : "\\" + l;
    }
    f.escapeSelector = function (l) {
      return (l + "").replace(fh, gh);
    };
    var rn = j,
      us = u;
    (function () {
      var l,
        p,
        h,
        m,
        v,
        x = us,
        y,
        I,
        P,
        N,
        q,
        Z = f.expando,
        W = 0,
        ne = 0,
        Re = Lo(),
        et = Lo(),
        He = Lo(),
        jt = Lo(),
        Vt = function (S, A) {
          return S === A && (v = !0), 0;
        },
        Gi =
          "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        Yi =
          "(?:\\\\[\\da-fA-F]{1,6}" +
          st +
          "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
        Ye =
          "\\[" +
          st +
          "*(" +
          Yi +
          ")(?:" +
          st +
          "*([*^$|!~]?=)" +
          st +
          `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` +
          Yi +
          "))|)" +
          st +
          "*\\]",
        Nn =
          ":(" +
          Yi +
          `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` +
          Ye +
          ")*)|.*)\\)|)",
        nt = new RegExp(st + "+", "g"),
        Ct = new RegExp("^" + st + "*," + st + "*"),
        qr = new RegExp("^" + st + "*([>+~]|" + st + ")" + st + "*"),
        ks = new RegExp(st + "|>"),
        qi = new RegExp(Nn),
        Kr = new RegExp("^" + Yi + "$"),
        Ki = {
          ID: new RegExp("^#(" + Yi + ")"),
          CLASS: new RegExp("^\\.(" + Yi + ")"),
          TAG: new RegExp("^(" + Yi + "|[*])"),
          ATTR: new RegExp("^" + Ye),
          PSEUDO: new RegExp("^" + Nn),
          CHILD: new RegExp(
            "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
              st +
              "*(even|odd|(([+-]|)(\\d*)n|)" +
              st +
              "*(?:([+-]|)" +
              st +
              "*(\\d+)|))" +
              st +
              "*\\)|)",
            "i"
          ),
          bool: new RegExp("^(?:" + Gi + ")$", "i"),
          needsContext: new RegExp(
            "^" +
              st +
              "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
              st +
              "*((?:-\\d)?\\d*)" +
              st +
              "*\\)|)(?=[^-]|$)",
            "i"
          ),
        },
        vn = /^(?:input|select|textarea|button)$/i,
        xn = /^h\d$/i,
        yi = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        Ps = /[+~]/,
        sn = new RegExp(
          "\\\\[\\da-fA-F]{1,6}" + st + "?|\\\\([^\\r\\n\\f])",
          "g"
        ),
        ln = function (S, A) {
          var z = "0x" + S.slice(1) - 65536;
          return (
            A ||
            (z < 0
              ? String.fromCharCode(z + 65536)
              : String.fromCharCode((z >> 10) | 55296, (z & 1023) | 56320))
          );
        },
        pm = function () {
          yn();
        },
        um = Ho(
          function (S) {
            return S.disabled === !0 && Qe(S, "fieldset");
          },
          { dir: "parentNode", next: "legend" }
        );
      function hm() {
        try {
          return y.activeElement;
        } catch {}
      }
      try {
        x.apply((e = n.call(rn.childNodes)), rn.childNodes),
          e[rn.childNodes.length].nodeType;
      } catch {
        x = {
          apply: function (A, z) {
            us.apply(A, n.call(z));
          },
          call: function (A) {
            us.apply(A, n.call(arguments, 1));
          },
        };
      }
      function ot(S, A, z, G) {
        var Q,
          de,
          me,
          ve,
          fe,
          Ue,
          Ae,
          Ve = A && A.ownerDocument,
          We = A ? A.nodeType : 9;
        if (
          ((z = z || []),
          typeof S != "string" || !S || (We !== 1 && We !== 9 && We !== 11))
        )
          return z;
        if (!G && (yn(A), (A = A || y), P)) {
          if (We !== 11 && (fe = yi.exec(S)))
            if ((Q = fe[1])) {
              if (We === 9)
                if ((me = A.getElementById(Q))) {
                  if (me.id === Q) return x.call(z, me), z;
                } else return z;
              else if (
                Ve &&
                (me = Ve.getElementById(Q)) &&
                ot.contains(A, me) &&
                me.id === Q
              )
                return x.call(z, me), z;
            } else {
              if (fe[2]) return x.apply(z, A.getElementsByTagName(S)), z;
              if ((Q = fe[3]) && A.getElementsByClassName)
                return x.apply(z, A.getElementsByClassName(Q)), z;
            }
          if (!jt[S + " "] && (!N || !N.test(S))) {
            if (((Ae = S), (Ve = A), We === 1 && (ks.test(S) || qr.test(S)))) {
              for (
                Ve = (Ps.test(S) && Es(A.parentNode)) || A,
                  (Ve != A || !L.scope) &&
                    ((ve = A.getAttribute("id"))
                      ? (ve = f.escapeSelector(ve))
                      : A.setAttribute("id", (ve = Z))),
                  Ue = Qr(S),
                  de = Ue.length;
                de--;

              )
                Ue[de] = (ve ? "#" + ve : ":scope") + " " + Bo(Ue[de]);
              Ae = Ue.join(",");
            }
            try {
              return x.apply(z, Ve.querySelectorAll(Ae)), z;
            } catch {
              jt(S, !0);
            } finally {
              ve === Z && A.removeAttribute("id");
            }
          }
        }
        return cd(S.replace(Br, "$1"), A, z, G);
      }
      function Lo() {
        var S = [];
        function A(z, G) {
          return (
            S.push(z + " ") > p.cacheLength && delete A[S.shift()],
            (A[z + " "] = G)
          );
        }
        return A;
      }
      function Ii(S) {
        return (S[Z] = !0), S;
      }
      function ur(S) {
        var A = y.createElement("fieldset");
        try {
          return !!S(A);
        } catch {
          return !1;
        } finally {
          A.parentNode && A.parentNode.removeChild(A), (A = null);
        }
      }
      function mm(S) {
        return function (A) {
          return Qe(A, "input") && A.type === S;
        };
      }
      function fm(S) {
        return function (A) {
          return (Qe(A, "input") || Qe(A, "button")) && A.type === S;
        };
      }
      function sd(S) {
        return function (A) {
          return "form" in A
            ? A.parentNode && A.disabled === !1
              ? "label" in A
                ? "label" in A.parentNode
                  ? A.parentNode.disabled === S
                  : A.disabled === S
                : A.isDisabled === S || (A.isDisabled !== !S && um(A) === S)
              : A.disabled === S
            : "label" in A
            ? A.disabled === S
            : !1;
        };
      }
      function Ln(S) {
        return Ii(function (A) {
          return (
            (A = +A),
            Ii(function (z, G) {
              for (var Q, de = S([], z.length, A), me = de.length; me--; )
                z[(Q = de[me])] && (z[Q] = !(G[Q] = z[Q]));
            })
          );
        });
      }
      function Es(S) {
        return S && typeof S.getElementsByTagName < "u" && S;
      }
      function yn(S) {
        var A,
          z = S ? S.ownerDocument || S : rn;
        return (
          z == y ||
            z.nodeType !== 9 ||
            !z.documentElement ||
            ((y = z),
            (I = y.documentElement),
            (P = !f.isXMLDoc(y)),
            (q = I.matches || I.webkitMatchesSelector || I.msMatchesSelector),
            I.msMatchesSelector &&
              rn != y &&
              (A = y.defaultView) &&
              A.top !== A &&
              A.addEventListener("unload", pm),
            (L.getById = ur(function (G) {
              return (
                (I.appendChild(G).id = f.expando),
                !y.getElementsByName || !y.getElementsByName(f.expando).length
              );
            })),
            (L.disconnectedMatch = ur(function (G) {
              return q.call(G, "*");
            })),
            (L.scope = ur(function () {
              return y.querySelectorAll(":scope");
            })),
            (L.cssHas = ur(function () {
              try {
                return y.querySelector(":has(*,:jqfake)"), !1;
              } catch {
                return !0;
              }
            })),
            L.getById
              ? ((p.filter.ID = function (G) {
                  var Q = G.replace(sn, ln);
                  return function (de) {
                    return de.getAttribute("id") === Q;
                  };
                }),
                (p.find.ID = function (G, Q) {
                  if (typeof Q.getElementById < "u" && P) {
                    var de = Q.getElementById(G);
                    return de ? [de] : [];
                  }
                }))
              : ((p.filter.ID = function (G) {
                  var Q = G.replace(sn, ln);
                  return function (de) {
                    var me =
                      typeof de.getAttributeNode < "u" &&
                      de.getAttributeNode("id");
                    return me && me.value === Q;
                  };
                }),
                (p.find.ID = function (G, Q) {
                  if (typeof Q.getElementById < "u" && P) {
                    var de,
                      me,
                      ve,
                      fe = Q.getElementById(G);
                    if (fe) {
                      if (
                        ((de = fe.getAttributeNode("id")), de && de.value === G)
                      )
                        return [fe];
                      for (
                        ve = Q.getElementsByName(G), me = 0;
                        (fe = ve[me++]);

                      )
                        if (
                          ((de = fe.getAttributeNode("id")),
                          de && de.value === G)
                        )
                          return [fe];
                    }
                    return [];
                  }
                })),
            (p.find.TAG = function (G, Q) {
              return typeof Q.getElementsByTagName < "u"
                ? Q.getElementsByTagName(G)
                : Q.querySelectorAll(G);
            }),
            (p.find.CLASS = function (G, Q) {
              if (typeof Q.getElementsByClassName < "u" && P)
                return Q.getElementsByClassName(G);
            }),
            (N = []),
            ur(function (G) {
              var Q;
              (I.appendChild(G).innerHTML =
                "<a id='" +
                Z +
                "' href='' disabled='disabled'></a><select id='" +
                Z +
                "-\r\\' disabled='disabled'><option selected=''></option></select>"),
                G.querySelectorAll("[selected]").length ||
                  N.push("\\[" + st + "*(?:value|" + Gi + ")"),
                G.querySelectorAll("[id~=" + Z + "-]").length || N.push("~="),
                G.querySelectorAll("a#" + Z + "+*").length ||
                  N.push(".#.+[+~]"),
                G.querySelectorAll(":checked").length || N.push(":checked"),
                (Q = y.createElement("input")),
                Q.setAttribute("type", "hidden"),
                G.appendChild(Q).setAttribute("name", "D"),
                (I.appendChild(G).disabled = !0),
                G.querySelectorAll(":disabled").length !== 2 &&
                  N.push(":enabled", ":disabled"),
                (Q = y.createElement("input")),
                Q.setAttribute("name", ""),
                G.appendChild(Q),
                G.querySelectorAll("[name='']").length ||
                  N.push("\\[" + st + "*name" + st + "*=" + st + `*(?:''|"")`);
            }),
            L.cssHas || N.push(":has"),
            (N = N.length && new RegExp(N.join("|"))),
            (Vt = function (G, Q) {
              if (G === Q) return (v = !0), 0;
              var de = !G.compareDocumentPosition - !Q.compareDocumentPosition;
              return (
                de ||
                ((de =
                  (G.ownerDocument || G) == (Q.ownerDocument || Q)
                    ? G.compareDocumentPosition(Q)
                    : 1),
                de & 1 ||
                (!L.sortDetached && Q.compareDocumentPosition(G) === de)
                  ? G === y || (G.ownerDocument == rn && ot.contains(rn, G))
                    ? -1
                    : Q === y || (Q.ownerDocument == rn && ot.contains(rn, Q))
                    ? 1
                    : m
                    ? b.call(m, G) - b.call(m, Q)
                    : 0
                  : de & 4
                  ? -1
                  : 1)
              );
            })),
          y
        );
      }
      (ot.matches = function (S, A) {
        return ot(S, null, null, A);
      }),
        (ot.matchesSelector = function (S, A) {
          if ((yn(S), P && !jt[A + " "] && (!N || !N.test(A))))
            try {
              var z = q.call(S, A);
              if (
                z ||
                L.disconnectedMatch ||
                (S.document && S.document.nodeType !== 11)
              )
                return z;
            } catch {
              jt(A, !0);
            }
          return ot(A, y, null, [S]).length > 0;
        }),
        (ot.contains = function (S, A) {
          return (S.ownerDocument || S) != y && yn(S), f.contains(S, A);
        }),
        (ot.attr = function (S, A) {
          (S.ownerDocument || S) != y && yn(S);
          var z = p.attrHandle[A.toLowerCase()],
            G =
              z && k.call(p.attrHandle, A.toLowerCase()) ? z(S, A, !P) : void 0;
          return G !== void 0 ? G : S.getAttribute(A);
        }),
        (ot.error = function (S) {
          throw new Error("Syntax error, unrecognized expression: " + S);
        }),
        (f.uniqueSort = function (S) {
          var A,
            z = [],
            G = 0,
            Q = 0;
          if (
            ((v = !L.sortStable),
            (m = !L.sortStable && n.call(S, 0)),
            An.call(S, Vt),
            v)
          ) {
            for (; (A = S[Q++]); ) A === S[Q] && (G = z.push(Q));
            for (; G--; ) mh.call(S, z[G], 1);
          }
          return (m = null), S;
        }),
        (f.fn.uniqueSort = function () {
          return this.pushStack(f.uniqueSort(n.apply(this)));
        }),
        (p = f.expr =
          {
            cacheLength: 50,
            createPseudo: Ii,
            match: Ki,
            attrHandle: {},
            find: {},
            relative: {
              ">": { dir: "parentNode", first: !0 },
              " ": { dir: "parentNode" },
              "+": { dir: "previousSibling", first: !0 },
              "~": { dir: "previousSibling" },
            },
            preFilter: {
              ATTR: function (S) {
                return (
                  (S[1] = S[1].replace(sn, ln)),
                  (S[3] = (S[3] || S[4] || S[5] || "").replace(sn, ln)),
                  S[2] === "~=" && (S[3] = " " + S[3] + " "),
                  S.slice(0, 4)
                );
              },
              CHILD: function (S) {
                return (
                  (S[1] = S[1].toLowerCase()),
                  S[1].slice(0, 3) === "nth"
                    ? (S[3] || ot.error(S[0]),
                      (S[4] = +(S[4]
                        ? S[5] + (S[6] || 1)
                        : 2 * (S[3] === "even" || S[3] === "odd"))),
                      (S[5] = +(S[7] + S[8] || S[3] === "odd")))
                    : S[3] && ot.error(S[0]),
                  S
                );
              },
              PSEUDO: function (S) {
                var A,
                  z = !S[6] && S[2];
                return Ki.CHILD.test(S[0])
                  ? null
                  : (S[3]
                      ? (S[2] = S[4] || S[5] || "")
                      : z &&
                        qi.test(z) &&
                        (A = Qr(z, !0)) &&
                        (A = z.indexOf(")", z.length - A) - z.length) &&
                        ((S[0] = S[0].slice(0, A)), (S[2] = z.slice(0, A))),
                    S.slice(0, 3));
              },
            },
            filter: {
              TAG: function (S) {
                var A = S.replace(sn, ln).toLowerCase();
                return S === "*"
                  ? function () {
                      return !0;
                    }
                  : function (z) {
                      return Qe(z, A);
                    };
              },
              CLASS: function (S) {
                var A = Re[S + " "];
                return (
                  A ||
                  ((A = new RegExp("(^|" + st + ")" + S + "(" + st + "|$)")) &&
                    Re(S, function (z) {
                      return A.test(
                        (typeof z.className == "string" && z.className) ||
                          (typeof z.getAttribute < "u" &&
                            z.getAttribute("class")) ||
                          ""
                      );
                    }))
                );
              },
              ATTR: function (S, A, z) {
                return function (G) {
                  var Q = ot.attr(G, S);
                  return Q == null
                    ? A === "!="
                    : A
                    ? ((Q += ""),
                      A === "="
                        ? Q === z
                        : A === "!="
                        ? Q !== z
                        : A === "^="
                        ? z && Q.indexOf(z) === 0
                        : A === "*="
                        ? z && Q.indexOf(z) > -1
                        : A === "$="
                        ? z && Q.slice(-z.length) === z
                        : A === "~="
                        ? (" " + Q.replace(nt, " ") + " ").indexOf(z) > -1
                        : A === "|="
                        ? Q === z || Q.slice(0, z.length + 1) === z + "-"
                        : !1)
                    : !0;
                };
              },
              CHILD: function (S, A, z, G, Q) {
                var de = S.slice(0, 3) !== "nth",
                  me = S.slice(-4) !== "last",
                  ve = A === "of-type";
                return G === 1 && Q === 0
                  ? function (fe) {
                      return !!fe.parentNode;
                    }
                  : function (fe, Ue, Ae) {
                      var Ve,
                        We,
                        Te,
                        dt,
                        ri,
                        $t = de !== me ? "nextSibling" : "previousSibling",
                        Ci = fe.parentNode,
                        Qi = ve && fe.nodeName.toLowerCase(),
                        hr = !Ae && !ve,
                        Xt = !1;
                      if (Ci) {
                        if (de) {
                          for (; $t; ) {
                            for (Te = fe; (Te = Te[$t]); )
                              if (ve ? Qe(Te, Qi) : Te.nodeType === 1)
                                return !1;
                            ri = $t = S === "only" && !ri && "nextSibling";
                          }
                          return !0;
                        }
                        if (
                          ((ri = [me ? Ci.firstChild : Ci.lastChild]), me && hr)
                        ) {
                          for (
                            We = Ci[Z] || (Ci[Z] = {}),
                              Ve = We[S] || [],
                              dt = Ve[0] === W && Ve[1],
                              Xt = dt && Ve[2],
                              Te = dt && Ci.childNodes[dt];
                            (Te =
                              (++dt && Te && Te[$t]) ||
                              (Xt = dt = 0) ||
                              ri.pop());

                          )
                            if (Te.nodeType === 1 && ++Xt && Te === fe) {
                              We[S] = [W, dt, Xt];
                              break;
                            }
                        } else if (
                          (hr &&
                            ((We = fe[Z] || (fe[Z] = {})),
                            (Ve = We[S] || []),
                            (dt = Ve[0] === W && Ve[1]),
                            (Xt = dt)),
                          Xt === !1)
                        )
                          for (
                            ;
                            (Te =
                              (++dt && Te && Te[$t]) ||
                              (Xt = dt = 0) ||
                              ri.pop()) &&
                            !(
                              (ve ? Qe(Te, Qi) : Te.nodeType === 1) &&
                              ++Xt &&
                              (hr &&
                                ((We = Te[Z] || (Te[Z] = {})),
                                (We[S] = [W, Xt])),
                              Te === fe)
                            );

                          );
                        return (
                          (Xt -= Q), Xt === G || (Xt % G === 0 && Xt / G >= 0)
                        );
                      }
                    };
              },
              PSEUDO: function (S, A) {
                var z,
                  G =
                    p.pseudos[S] ||
                    p.setFilters[S.toLowerCase()] ||
                    ot.error("unsupported pseudo: " + S);
                return G[Z]
                  ? G(A)
                  : G.length > 1
                  ? ((z = [S, S, "", A]),
                    p.setFilters.hasOwnProperty(S.toLowerCase())
                      ? Ii(function (Q, de) {
                          for (var me, ve = G(Q, A), fe = ve.length; fe--; )
                            (me = b.call(Q, ve[fe])),
                              (Q[me] = !(de[me] = ve[fe]));
                        })
                      : function (Q) {
                          return G(Q, 0, z);
                        })
                  : G;
              },
            },
            pseudos: {
              not: Ii(function (S) {
                var A = [],
                  z = [],
                  G = Rs(S.replace(Br, "$1"));
                return G[Z]
                  ? Ii(function (Q, de, me, ve) {
                      for (
                        var fe, Ue = G(Q, null, ve, []), Ae = Q.length;
                        Ae--;

                      )
                        (fe = Ue[Ae]) && (Q[Ae] = !(de[Ae] = fe));
                    })
                  : function (Q, de, me) {
                      return (
                        (A[0] = Q), G(A, null, me, z), (A[0] = null), !z.pop()
                      );
                    };
              }),
              has: Ii(function (S) {
                return function (A) {
                  return ot(S, A).length > 0;
                };
              }),
              contains: Ii(function (S) {
                return (
                  (S = S.replace(sn, ln)),
                  function (A) {
                    return (A.textContent || f.text(A)).indexOf(S) > -1;
                  }
                );
              }),
              lang: Ii(function (S) {
                return (
                  Kr.test(S || "") || ot.error("unsupported lang: " + S),
                  (S = S.replace(sn, ln).toLowerCase()),
                  function (A) {
                    var z;
                    do
                      if (
                        (z = P
                          ? A.lang
                          : A.getAttribute("xml:lang") ||
                            A.getAttribute("lang"))
                      )
                        return (
                          (z = z.toLowerCase()),
                          z === S || z.indexOf(S + "-") === 0
                        );
                    while ((A = A.parentNode) && A.nodeType === 1);
                    return !1;
                  }
                );
              }),
              target: function (S) {
                var A = r.location && r.location.hash;
                return A && A.slice(1) === S.id;
              },
              root: function (S) {
                return S === I;
              },
              focus: function (S) {
                return (
                  S === hm() &&
                  y.hasFocus() &&
                  !!(S.type || S.href || ~S.tabIndex)
                );
              },
              enabled: sd(!1),
              disabled: sd(!0),
              checked: function (S) {
                return (
                  (Qe(S, "input") && !!S.checked) ||
                  (Qe(S, "option") && !!S.selected)
                );
              },
              selected: function (S) {
                return (
                  S.parentNode && S.parentNode.selectedIndex, S.selected === !0
                );
              },
              empty: function (S) {
                for (S = S.firstChild; S; S = S.nextSibling)
                  if (S.nodeType < 6) return !1;
                return !0;
              },
              parent: function (S) {
                return !p.pseudos.empty(S);
              },
              header: function (S) {
                return xn.test(S.nodeName);
              },
              input: function (S) {
                return vn.test(S.nodeName);
              },
              button: function (S) {
                return (
                  (Qe(S, "input") && S.type === "button") || Qe(S, "button")
                );
              },
              text: function (S) {
                var A;
                return (
                  Qe(S, "input") &&
                  S.type === "text" &&
                  ((A = S.getAttribute("type")) == null ||
                    A.toLowerCase() === "text")
                );
              },
              first: Ln(function () {
                return [0];
              }),
              last: Ln(function (S, A) {
                return [A - 1];
              }),
              eq: Ln(function (S, A, z) {
                return [z < 0 ? z + A : z];
              }),
              even: Ln(function (S, A) {
                for (var z = 0; z < A; z += 2) S.push(z);
                return S;
              }),
              odd: Ln(function (S, A) {
                for (var z = 1; z < A; z += 2) S.push(z);
                return S;
              }),
              lt: Ln(function (S, A, z) {
                var G;
                for (
                  z < 0 ? (G = z + A) : z > A ? (G = A) : (G = z);
                  --G >= 0;

                )
                  S.push(G);
                return S;
              }),
              gt: Ln(function (S, A, z) {
                for (var G = z < 0 ? z + A : z; ++G < A; ) S.push(G);
                return S;
              }),
            },
          }),
        (p.pseudos.nth = p.pseudos.eq);
      for (l in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })
        p.pseudos[l] = mm(l);
      for (l in { submit: !0, reset: !0 }) p.pseudos[l] = fm(l);
      function ld() {}
      (ld.prototype = p.filters = p.pseudos), (p.setFilters = new ld());
      function Qr(S, A) {
        var z,
          G,
          Q,
          de,
          me,
          ve,
          fe,
          Ue = et[S + " "];
        if (Ue) return A ? 0 : Ue.slice(0);
        for (me = S, ve = [], fe = p.preFilter; me; ) {
          (!z || (G = Ct.exec(me))) &&
            (G && (me = me.slice(G[0].length) || me), ve.push((Q = []))),
            (z = !1),
            (G = qr.exec(me)) &&
              ((z = G.shift()),
              Q.push({ value: z, type: G[0].replace(Br, " ") }),
              (me = me.slice(z.length)));
          for (de in p.filter)
            (G = Ki[de].exec(me)) &&
              (!fe[de] || (G = fe[de](G))) &&
              ((z = G.shift()),
              Q.push({ value: z, type: de, matches: G }),
              (me = me.slice(z.length)));
          if (!z) break;
        }
        return A ? me.length : me ? ot.error(S) : et(S, ve).slice(0);
      }
      function Bo(S) {
        for (var A = 0, z = S.length, G = ""; A < z; A++) G += S[A].value;
        return G;
      }
      function Ho(S, A, z) {
        var G = A.dir,
          Q = A.next,
          de = Q || G,
          me = z && de === "parentNode",
          ve = ne++;
        return A.first
          ? function (fe, Ue, Ae) {
              for (; (fe = fe[G]); )
                if (fe.nodeType === 1 || me) return S(fe, Ue, Ae);
              return !1;
            }
          : function (fe, Ue, Ae) {
              var Ve,
                We,
                Te = [W, ve];
              if (Ae) {
                for (; (fe = fe[G]); )
                  if ((fe.nodeType === 1 || me) && S(fe, Ue, Ae)) return !0;
              } else
                for (; (fe = fe[G]); )
                  if (fe.nodeType === 1 || me)
                    if (((We = fe[Z] || (fe[Z] = {})), Q && Qe(fe, Q)))
                      fe = fe[G] || fe;
                    else {
                      if ((Ve = We[de]) && Ve[0] === W && Ve[1] === ve)
                        return (Te[2] = Ve[2]);
                      if (((We[de] = Te), (Te[2] = S(fe, Ue, Ae)))) return !0;
                    }
              return !1;
            };
      }
      function Is(S) {
        return S.length > 1
          ? function (A, z, G) {
              for (var Q = S.length; Q--; ) if (!S[Q](A, z, G)) return !1;
              return !0;
            }
          : S[0];
      }
      function gm(S, A, z) {
        for (var G = 0, Q = A.length; G < Q; G++) ot(S, A[G], z);
        return z;
      }
      function jo(S, A, z, G, Q) {
        for (
          var de, me = [], ve = 0, fe = S.length, Ue = A != null;
          ve < fe;
          ve++
        )
          (de = S[ve]) &&
            (!z || z(de, G, Q)) &&
            (me.push(de), Ue && A.push(ve));
        return me;
      }
      function As(S, A, z, G, Q, de) {
        return (
          G && !G[Z] && (G = As(G)),
          Q && !Q[Z] && (Q = As(Q, de)),
          Ii(function (me, ve, fe, Ue) {
            var Ae,
              Ve,
              We,
              Te,
              dt = [],
              ri = [],
              $t = ve.length,
              Ci = me || gm(A || "*", fe.nodeType ? [fe] : fe, []),
              Qi = S && (me || !A) ? jo(Ci, dt, S, fe, Ue) : Ci;
            if (
              (z
                ? ((Te = Q || (me ? S : $t || G) ? [] : ve), z(Qi, Te, fe, Ue))
                : (Te = Qi),
              G)
            )
              for (Ae = jo(Te, ri), G(Ae, [], fe, Ue), Ve = Ae.length; Ve--; )
                (We = Ae[Ve]) && (Te[ri[Ve]] = !(Qi[ri[Ve]] = We));
            if (me) {
              if (Q || S) {
                if (Q) {
                  for (Ae = [], Ve = Te.length; Ve--; )
                    (We = Te[Ve]) && Ae.push((Qi[Ve] = We));
                  Q(null, (Te = []), Ae, Ue);
                }
                for (Ve = Te.length; Ve--; )
                  (We = Te[Ve]) &&
                    (Ae = Q ? b.call(me, We) : dt[Ve]) > -1 &&
                    (me[Ae] = !(ve[Ae] = We));
              }
            } else (Te = jo(Te === ve ? Te.splice($t, Te.length) : Te)), Q ? Q(null, ve, Te, Ue) : x.apply(ve, Te);
          })
        );
      }
      function Fs(S) {
        for (
          var A,
            z,
            G,
            Q = S.length,
            de = p.relative[S[0].type],
            me = de || p.relative[" "],
            ve = de ? 1 : 0,
            fe = Ho(
              function (Ve) {
                return Ve === A;
              },
              me,
              !0
            ),
            Ue = Ho(
              function (Ve) {
                return b.call(A, Ve) > -1;
              },
              me,
              !0
            ),
            Ae = [
              function (Ve, We, Te) {
                var dt =
                  (!de && (Te || We != h)) ||
                  ((A = We).nodeType ? fe(Ve, We, Te) : Ue(Ve, We, Te));
                return (A = null), dt;
              },
            ];
          ve < Q;
          ve++
        )
          if ((z = p.relative[S[ve].type])) Ae = [Ho(Is(Ae), z)];
          else {
            if (((z = p.filter[S[ve].type].apply(null, S[ve].matches)), z[Z])) {
              for (G = ++ve; G < Q && !p.relative[S[G].type]; G++);
              return As(
                ve > 1 && Is(Ae),
                ve > 1 &&
                  Bo(
                    S.slice(0, ve - 1).concat({
                      value: S[ve - 2].type === " " ? "*" : "",
                    })
                  ).replace(Br, "$1"),
                z,
                ve < G && Fs(S.slice(ve, G)),
                G < Q && Fs((S = S.slice(G))),
                G < Q && Bo(S)
              );
            }
            Ae.push(z);
          }
        return Is(Ae);
      }
      function _m(S, A) {
        var z = A.length > 0,
          G = S.length > 0,
          Q = function (de, me, ve, fe, Ue) {
            var Ae,
              Ve,
              We,
              Te = 0,
              dt = "0",
              ri = de && [],
              $t = [],
              Ci = h,
              Qi = de || (G && p.find.TAG("*", Ue)),
              hr = (W += Ci == null ? 1 : Math.random() || 0.1),
              Xt = Qi.length;
            for (
              Ue && (h = me == y || me || Ue);
              dt !== Xt && (Ae = Qi[dt]) != null;
              dt++
            ) {
              if (G && Ae) {
                for (
                  Ve = 0, !me && Ae.ownerDocument != y && (yn(Ae), (ve = !P));
                  (We = S[Ve++]);

                )
                  if (We(Ae, me || y, ve)) {
                    x.call(fe, Ae);
                    break;
                  }
                Ue && (W = hr);
              }
              z && ((Ae = !We && Ae) && Te--, de && ri.push(Ae));
            }
            if (((Te += dt), z && dt !== Te)) {
              for (Ve = 0; (We = A[Ve++]); ) We(ri, $t, me, ve);
              if (de) {
                if (Te > 0)
                  for (; dt--; ) ri[dt] || $t[dt] || ($t[dt] = ci.call(fe));
                $t = jo($t);
              }
              x.apply(fe, $t),
                Ue &&
                  !de &&
                  $t.length > 0 &&
                  Te + A.length > 1 &&
                  f.uniqueSort(fe);
            }
            return Ue && ((W = hr), (h = Ci)), ri;
          };
        return z ? Ii(Q) : Q;
      }
      function Rs(S, A) {
        var z,
          G = [],
          Q = [],
          de = He[S + " "];
        if (!de) {
          for (A || (A = Qr(S)), z = A.length; z--; )
            (de = Fs(A[z])), de[Z] ? G.push(de) : Q.push(de);
          (de = He(S, _m(Q, G))), (de.selector = S);
        }
        return de;
      }
      function cd(S, A, z, G) {
        var Q,
          de,
          me,
          ve,
          fe,
          Ue = typeof S == "function" && S,
          Ae = !G && Qr((S = Ue.selector || S));
        if (((z = z || []), Ae.length === 1)) {
          if (
            ((de = Ae[0] = Ae[0].slice(0)),
            de.length > 2 &&
              (me = de[0]).type === "ID" &&
              A.nodeType === 9 &&
              P &&
              p.relative[de[1].type])
          ) {
            if (
              ((A = (p.find.ID(me.matches[0].replace(sn, ln), A) || [])[0]), A)
            )
              Ue && (A = A.parentNode);
            else return z;
            S = S.slice(de.shift().value.length);
          }
          for (
            Q = Ki.needsContext.test(S) ? 0 : de.length;
            Q-- && ((me = de[Q]), !p.relative[(ve = me.type)]);

          )
            if (
              (fe = p.find[ve]) &&
              (G = fe(
                me.matches[0].replace(sn, ln),
                (Ps.test(de[0].type) && Es(A.parentNode)) || A
              ))
            ) {
              if ((de.splice(Q, 1), (S = G.length && Bo(de)), !S))
                return x.apply(z, G), z;
              break;
            }
        }
        return (
          (Ue || Rs(S, Ae))(
            G,
            A,
            !P,
            z,
            !A || (Ps.test(S) && Es(A.parentNode)) || A
          ),
          z
        );
      }
      (L.sortStable = Z.split("").sort(Vt).join("") === Z),
        yn(),
        (L.sortDetached = ur(function (S) {
          return S.compareDocumentPosition(y.createElement("fieldset")) & 1;
        })),
        (f.find = ot),
        (f.expr[":"] = f.expr.pseudos),
        (f.unique = f.uniqueSort),
        (ot.compile = Rs),
        (ot.select = cd),
        (ot.setDocument = yn),
        (ot.tokenize = Qr),
        (ot.escape = f.escapeSelector),
        (ot.getText = f.text),
        (ot.isXML = f.isXMLDoc),
        (ot.selectors = f.expr),
        (ot.support = f.support),
        (ot.uniqueSort = f.uniqueSort);
    })();
    var rr = function (l, p, h) {
        for (var m = [], v = h !== void 0; (l = l[p]) && l.nodeType !== 9; )
          if (l.nodeType === 1) {
            if (v && f(l).is(h)) break;
            m.push(l);
          }
        return m;
      },
      Dc = function (l, p) {
        for (var h = []; l; l = l.nextSibling)
          l.nodeType === 1 && l !== p && h.push(l);
        return h;
      },
      Sc = f.expr.match.needsContext,
      Mc = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function hs(l, p, h) {
      return H(p)
        ? f.grep(l, function (m, v) {
            return !!p.call(m, v, m) !== h;
          })
        : p.nodeType
        ? f.grep(l, function (m) {
            return (m === p) !== h;
          })
        : typeof p != "string"
        ? f.grep(l, function (m) {
            return b.call(p, m) > -1 !== h;
          })
        : f.filter(p, l, h);
    }
    (f.filter = function (l, p, h) {
      var m = p[0];
      return (
        h && (l = ":not(" + l + ")"),
        p.length === 1 && m.nodeType === 1
          ? f.find.matchesSelector(m, l)
            ? [m]
            : []
          : f.find.matches(
              l,
              f.grep(p, function (v) {
                return v.nodeType === 1;
              })
            )
      );
    }),
      f.fn.extend({
        find: function (l) {
          var p,
            h,
            m = this.length,
            v = this;
          if (typeof l != "string")
            return this.pushStack(
              f(l).filter(function () {
                for (p = 0; p < m; p++) if (f.contains(v[p], this)) return !0;
              })
            );
          for (h = this.pushStack([]), p = 0; p < m; p++) f.find(l, v[p], h);
          return m > 1 ? f.uniqueSort(h) : h;
        },
        filter: function (l) {
          return this.pushStack(hs(this, l || [], !1));
        },
        not: function (l) {
          return this.pushStack(hs(this, l || [], !0));
        },
        is: function (l) {
          return !!hs(
            this,
            typeof l == "string" && Sc.test(l) ? f(l) : l || [],
            !1
          ).length;
        },
      });
    var Oc,
      _h = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
      bh = (f.fn.init = function (l, p, h) {
        var m, v;
        if (!l) return this;
        if (((h = h || Oc), typeof l == "string"))
          if (
            (l[0] === "<" && l[l.length - 1] === ">" && l.length >= 3
              ? (m = [null, l, null])
              : (m = _h.exec(l)),
            m && (m[1] || !p))
          )
            if (m[1]) {
              if (
                ((p = p instanceof f ? p[0] : p),
                f.merge(
                  this,
                  f.parseHTML(
                    m[1],
                    p && p.nodeType ? p.ownerDocument || p : j,
                    !0
                  )
                ),
                Mc.test(m[1]) && f.isPlainObject(p))
              )
                for (m in p) H(this[m]) ? this[m](p[m]) : this.attr(m, p[m]);
              return this;
            } else
              return (
                (v = j.getElementById(m[2])),
                v && ((this[0] = v), (this.length = 1)),
                this
              );
          else
            return !p || p.jquery
              ? (p || h).find(l)
              : this.constructor(p).find(l);
        else {
          if (l.nodeType) return (this[0] = l), (this.length = 1), this;
          if (H(l)) return h.ready !== void 0 ? h.ready(l) : l(f);
        }
        return f.makeArray(l, this);
      });
    (bh.prototype = f.fn), (Oc = f(j));
    var vh = /^(?:parents|prev(?:Until|All))/,
      xh = { children: !0, contents: !0, next: !0, prev: !0 };
    f.fn.extend({
      has: function (l) {
        var p = f(l, this),
          h = p.length;
        return this.filter(function () {
          for (var m = 0; m < h; m++) if (f.contains(this, p[m])) return !0;
        });
      },
      closest: function (l, p) {
        var h,
          m = 0,
          v = this.length,
          x = [],
          y = typeof l != "string" && f(l);
        if (!Sc.test(l)) {
          for (; m < v; m++)
            for (h = this[m]; h && h !== p; h = h.parentNode)
              if (
                h.nodeType < 11 &&
                (y
                  ? y.index(h) > -1
                  : h.nodeType === 1 && f.find.matchesSelector(h, l))
              ) {
                x.push(h);
                break;
              }
        }
        return this.pushStack(x.length > 1 ? f.uniqueSort(x) : x);
      },
      index: function (l) {
        return l
          ? typeof l == "string"
            ? b.call(f(l), this[0])
            : b.call(this, l.jquery ? l[0] : l)
          : this[0] && this[0].parentNode
          ? this.first().prevAll().length
          : -1;
      },
      add: function (l, p) {
        return this.pushStack(f.uniqueSort(f.merge(this.get(), f(l, p))));
      },
      addBack: function (l) {
        return this.add(
          l == null ? this.prevObject : this.prevObject.filter(l)
        );
      },
    });
    function Tc(l, p) {
      for (; (l = l[p]) && l.nodeType !== 1; );
      return l;
    }
    f.each(
      {
        parent: function (l) {
          var p = l.parentNode;
          return p && p.nodeType !== 11 ? p : null;
        },
        parents: function (l) {
          return rr(l, "parentNode");
        },
        parentsUntil: function (l, p, h) {
          return rr(l, "parentNode", h);
        },
        next: function (l) {
          return Tc(l, "nextSibling");
        },
        prev: function (l) {
          return Tc(l, "previousSibling");
        },
        nextAll: function (l) {
          return rr(l, "nextSibling");
        },
        prevAll: function (l) {
          return rr(l, "previousSibling");
        },
        nextUntil: function (l, p, h) {
          return rr(l, "nextSibling", h);
        },
        prevUntil: function (l, p, h) {
          return rr(l, "previousSibling", h);
        },
        siblings: function (l) {
          return Dc((l.parentNode || {}).firstChild, l);
        },
        children: function (l) {
          return Dc(l.firstChild);
        },
        contents: function (l) {
          return l.contentDocument != null && t(l.contentDocument)
            ? l.contentDocument
            : (Qe(l, "template") && (l = l.content || l),
              f.merge([], l.childNodes));
        },
      },
      function (l, p) {
        f.fn[l] = function (h, m) {
          var v = f.map(this, p, h);
          return (
            l.slice(-5) !== "Until" && (m = h),
            m && typeof m == "string" && (v = f.filter(m, v)),
            this.length > 1 &&
              (xh[l] || f.uniqueSort(v), vh.test(l) && v.reverse()),
            this.pushStack(v)
          );
        };
      }
    );
    var Wi = /[^\x20\t\r\n\f]+/g;
    function yh(l) {
      var p = {};
      return (
        f.each(l.match(Wi) || [], function (h, m) {
          p[m] = !0;
        }),
        p
      );
    }
    f.Callbacks = function (l) {
      l = typeof l == "string" ? yh(l) : f.extend({}, l);
      var p,
        h,
        m,
        v,
        x = [],
        y = [],
        I = -1,
        P = function () {
          for (v = v || l.once, m = p = !0; y.length; I = -1)
            for (h = y.shift(); ++I < x.length; )
              x[I].apply(h[0], h[1]) === !1 &&
                l.stopOnFalse &&
                ((I = x.length), (h = !1));
          l.memory || (h = !1), (p = !1), v && (h ? (x = []) : (x = ""));
        },
        N = {
          add: function () {
            return (
              x &&
                (h && !p && ((I = x.length - 1), y.push(h)),
                (function q(Z) {
                  f.each(Z, function (W, ne) {
                    H(ne)
                      ? (!l.unique || !N.has(ne)) && x.push(ne)
                      : ne && ne.length && Ce(ne) !== "string" && q(ne);
                  });
                })(arguments),
                h && !p && P()),
              this
            );
          },
          remove: function () {
            return (
              f.each(arguments, function (q, Z) {
                for (var W; (W = f.inArray(Z, x, W)) > -1; )
                  x.splice(W, 1), W <= I && I--;
              }),
              this
            );
          },
          has: function (q) {
            return q ? f.inArray(q, x) > -1 : x.length > 0;
          },
          empty: function () {
            return x && (x = []), this;
          },
          disable: function () {
            return (v = y = []), (x = h = ""), this;
          },
          disabled: function () {
            return !x;
          },
          lock: function () {
            return (v = y = []), !h && !p && (x = h = ""), this;
          },
          locked: function () {
            return !!v;
          },
          fireWith: function (q, Z) {
            return (
              v ||
                ((Z = Z || []),
                (Z = [q, Z.slice ? Z.slice() : Z]),
                y.push(Z),
                p || P()),
              this
            );
          },
          fire: function () {
            return N.fireWith(this, arguments), this;
          },
          fired: function () {
            return !!m;
          },
        };
      return N;
    };
    function or(l) {
      return l;
    }
    function Eo(l) {
      throw l;
    }
    function kc(l, p, h, m) {
      var v;
      try {
        l && H((v = l.promise))
          ? v.call(l).done(p).fail(h)
          : l && H((v = l.then))
          ? v.call(l, p, h)
          : p.apply(void 0, [l].slice(m));
      } catch (x) {
        h.apply(void 0, [x]);
      }
    }
    f.extend({
      Deferred: function (l) {
        var p = [
            [
              "notify",
              "progress",
              f.Callbacks("memory"),
              f.Callbacks("memory"),
              2,
            ],
            [
              "resolve",
              "done",
              f.Callbacks("once memory"),
              f.Callbacks("once memory"),
              0,
              "resolved",
            ],
            [
              "reject",
              "fail",
              f.Callbacks("once memory"),
              f.Callbacks("once memory"),
              1,
              "rejected",
            ],
          ],
          h = "pending",
          m = {
            state: function () {
              return h;
            },
            always: function () {
              return v.done(arguments).fail(arguments), this;
            },
            catch: function (x) {
              return m.then(null, x);
            },
            pipe: function () {
              var x = arguments;
              return f
                .Deferred(function (y) {
                  f.each(p, function (I, P) {
                    var N = H(x[P[4]]) && x[P[4]];
                    v[P[1]](function () {
                      var q = N && N.apply(this, arguments);
                      q && H(q.promise)
                        ? q
                            .promise()
                            .progress(y.notify)
                            .done(y.resolve)
                            .fail(y.reject)
                        : y[P[0] + "With"](this, N ? [q] : arguments);
                    });
                  }),
                    (x = null);
                })
                .promise();
            },
            then: function (x, y, I) {
              var P = 0;
              function N(q, Z, W, ne) {
                return function () {
                  var Re = this,
                    et = arguments,
                    He = function () {
                      var Vt, Gi;
                      if (!(q < P)) {
                        if (((Vt = W.apply(Re, et)), Vt === Z.promise()))
                          throw new TypeError("Thenable self-resolution");
                        (Gi =
                          Vt &&
                          (typeof Vt == "object" || typeof Vt == "function") &&
                          Vt.then),
                          H(Gi)
                            ? ne
                              ? Gi.call(Vt, N(P, Z, or, ne), N(P, Z, Eo, ne))
                              : (P++,
                                Gi.call(
                                  Vt,
                                  N(P, Z, or, ne),
                                  N(P, Z, Eo, ne),
                                  N(P, Z, or, Z.notifyWith)
                                ))
                            : (W !== or && ((Re = void 0), (et = [Vt])),
                              (ne || Z.resolveWith)(Re, et));
                      }
                    },
                    jt = ne
                      ? He
                      : function () {
                          try {
                            He();
                          } catch (Vt) {
                            f.Deferred.exceptionHook &&
                              f.Deferred.exceptionHook(Vt, jt.error),
                              q + 1 >= P &&
                                (W !== Eo && ((Re = void 0), (et = [Vt])),
                                Z.rejectWith(Re, et));
                          }
                        };
                  q
                    ? jt()
                    : (f.Deferred.getErrorHook
                        ? (jt.error = f.Deferred.getErrorHook())
                        : f.Deferred.getStackHook &&
                          (jt.error = f.Deferred.getStackHook()),
                      r.setTimeout(jt));
                };
              }
              return f
                .Deferred(function (q) {
                  p[0][3].add(N(0, q, H(I) ? I : or, q.notifyWith)),
                    p[1][3].add(N(0, q, H(x) ? x : or)),
                    p[2][3].add(N(0, q, H(y) ? y : Eo));
                })
                .promise();
            },
            promise: function (x) {
              return x != null ? f.extend(x, m) : m;
            },
          },
          v = {};
        return (
          f.each(p, function (x, y) {
            var I = y[2],
              P = y[5];
            (m[y[1]] = I.add),
              P &&
                I.add(
                  function () {
                    h = P;
                  },
                  p[3 - x][2].disable,
                  p[3 - x][3].disable,
                  p[0][2].lock,
                  p[0][3].lock
                ),
              I.add(y[3].fire),
              (v[y[0]] = function () {
                return (
                  v[y[0] + "With"](this === v ? void 0 : this, arguments), this
                );
              }),
              (v[y[0] + "With"] = I.fireWith);
          }),
          m.promise(v),
          l && l.call(v, v),
          v
        );
      },
      when: function (l) {
        var p = arguments.length,
          h = p,
          m = Array(h),
          v = n.call(arguments),
          x = f.Deferred(),
          y = function (I) {
            return function (P) {
              (m[I] = this),
                (v[I] = arguments.length > 1 ? n.call(arguments) : P),
                --p || x.resolveWith(m, v);
            };
          };
        if (
          p <= 1 &&
          (kc(l, x.done(y(h)).resolve, x.reject, !p),
          x.state() === "pending" || H(v[h] && v[h].then))
        )
          return x.then();
        for (; h--; ) kc(v[h], y(h), x.reject);
        return x.promise();
      },
    });
    var Ch = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    (f.Deferred.exceptionHook = function (l, p) {
      r.console &&
        r.console.warn &&
        l &&
        Ch.test(l.name) &&
        r.console.warn("jQuery.Deferred exception: " + l.message, l.stack, p);
    }),
      (f.readyException = function (l) {
        r.setTimeout(function () {
          throw l;
        });
      });
    var ms = f.Deferred();
    (f.fn.ready = function (l) {
      return (
        ms.then(l).catch(function (p) {
          f.readyException(p);
        }),
        this
      );
    }),
      f.extend({
        isReady: !1,
        readyWait: 1,
        ready: function (l) {
          (l === !0 ? --f.readyWait : f.isReady) ||
            ((f.isReady = !0),
            !(l !== !0 && --f.readyWait > 0) && ms.resolveWith(j, [f]));
        },
      }),
      (f.ready.then = ms.then);
    function Io() {
      j.removeEventListener("DOMContentLoaded", Io),
        r.removeEventListener("load", Io),
        f.ready();
    }
    j.readyState === "complete" ||
    (j.readyState !== "loading" && !j.documentElement.doScroll)
      ? r.setTimeout(f.ready)
      : (j.addEventListener("DOMContentLoaded", Io),
        r.addEventListener("load", Io));
    var on = function (l, p, h, m, v, x, y) {
        var I = 0,
          P = l.length,
          N = h == null;
        if (Ce(h) === "object") {
          v = !0;
          for (I in h) on(l, p, I, h[I], !0, x, y);
        } else if (
          m !== void 0 &&
          ((v = !0),
          H(m) || (y = !0),
          N &&
            (y
              ? (p.call(l, m), (p = null))
              : ((N = p),
                (p = function (q, Z, W) {
                  return N.call(f(q), W);
                }))),
          p)
        )
          for (; I < P; I++) p(l[I], h, y ? m : m.call(l[I], I, p(l[I], h)));
        return v ? l : N ? p.call(l) : P ? p(l[0], h) : x;
      },
      wh = /^-ms-/,
      Dh = /-([a-z])/g;
    function Sh(l, p) {
      return p.toUpperCase();
    }
    function $i(l) {
      return l.replace(wh, "ms-").replace(Dh, Sh);
    }
    var Hr = function (l) {
      return l.nodeType === 1 || l.nodeType === 9 || !+l.nodeType;
    };
    function jr() {
      this.expando = f.expando + jr.uid++;
    }
    (jr.uid = 1),
      (jr.prototype = {
        cache: function (l) {
          var p = l[this.expando];
          return (
            p ||
              ((p = {}),
              Hr(l) &&
                (l.nodeType
                  ? (l[this.expando] = p)
                  : Object.defineProperty(l, this.expando, {
                      value: p,
                      configurable: !0,
                    }))),
            p
          );
        },
        set: function (l, p, h) {
          var m,
            v = this.cache(l);
          if (typeof p == "string") v[$i(p)] = h;
          else for (m in p) v[$i(m)] = p[m];
          return v;
        },
        get: function (l, p) {
          return p === void 0
            ? this.cache(l)
            : l[this.expando] && l[this.expando][$i(p)];
        },
        access: function (l, p, h) {
          return p === void 0 || (p && typeof p == "string" && h === void 0)
            ? this.get(l, p)
            : (this.set(l, p, h), h !== void 0 ? h : p);
        },
        remove: function (l, p) {
          var h,
            m = l[this.expando];
          if (m !== void 0) {
            if (p !== void 0)
              for (
                Array.isArray(p)
                  ? (p = p.map($i))
                  : ((p = $i(p)), (p = (p in m) ? [p] : p.match(Wi) || [])),
                  h = p.length;
                h--;

              )
                delete m[p[h]];
            (p === void 0 || f.isEmptyObject(m)) &&
              (l.nodeType
                ? (l[this.expando] = void 0)
                : delete l[this.expando]);
          }
        },
        hasData: function (l) {
          var p = l[this.expando];
          return p !== void 0 && !f.isEmptyObject(p);
        },
      });
    var we = new jr(),
      ti = new jr(),
      Mh = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      Oh = /[A-Z]/g;
    function Th(l) {
      return l === "true"
        ? !0
        : l === "false"
        ? !1
        : l === "null"
        ? null
        : l === +l + ""
        ? +l
        : Mh.test(l)
        ? JSON.parse(l)
        : l;
    }
    function Pc(l, p, h) {
      var m;
      if (h === void 0 && l.nodeType === 1)
        if (
          ((m = "data-" + p.replace(Oh, "-$&").toLowerCase()),
          (h = l.getAttribute(m)),
          typeof h == "string")
        ) {
          try {
            h = Th(h);
          } catch {}
          ti.set(l, p, h);
        } else h = void 0;
      return h;
    }
    f.extend({
      hasData: function (l) {
        return ti.hasData(l) || we.hasData(l);
      },
      data: function (l, p, h) {
        return ti.access(l, p, h);
      },
      removeData: function (l, p) {
        ti.remove(l, p);
      },
      _data: function (l, p, h) {
        return we.access(l, p, h);
      },
      _removeData: function (l, p) {
        we.remove(l, p);
      },
    }),
      f.fn.extend({
        data: function (l, p) {
          var h,
            m,
            v,
            x = this[0],
            y = x && x.attributes;
          if (l === void 0) {
            if (
              this.length &&
              ((v = ti.get(x)), x.nodeType === 1 && !we.get(x, "hasDataAttrs"))
            ) {
              for (h = y.length; h--; )
                y[h] &&
                  ((m = y[h].name),
                  m.indexOf("data-") === 0 &&
                    ((m = $i(m.slice(5))), Pc(x, m, v[m])));
              we.set(x, "hasDataAttrs", !0);
            }
            return v;
          }
          return typeof l == "object"
            ? this.each(function () {
                ti.set(this, l);
              })
            : on(
                this,
                function (I) {
                  var P;
                  if (x && I === void 0)
                    return (
                      (P = ti.get(x, l)),
                      P !== void 0 || ((P = Pc(x, l)), P !== void 0)
                        ? P
                        : void 0
                    );
                  this.each(function () {
                    ti.set(this, l, I);
                  });
                },
                null,
                p,
                arguments.length > 1,
                null,
                !0
              );
        },
        removeData: function (l) {
          return this.each(function () {
            ti.remove(this, l);
          });
        },
      }),
      f.extend({
        queue: function (l, p, h) {
          var m;
          if (l)
            return (
              (p = (p || "fx") + "queue"),
              (m = we.get(l, p)),
              h &&
                (!m || Array.isArray(h)
                  ? (m = we.access(l, p, f.makeArray(h)))
                  : m.push(h)),
              m || []
            );
        },
        dequeue: function (l, p) {
          p = p || "fx";
          var h = f.queue(l, p),
            m = h.length,
            v = h.shift(),
            x = f._queueHooks(l, p),
            y = function () {
              f.dequeue(l, p);
            };
          v === "inprogress" && ((v = h.shift()), m--),
            v &&
              (p === "fx" && h.unshift("inprogress"),
              delete x.stop,
              v.call(l, y, x)),
            !m && x && x.empty.fire();
        },
        _queueHooks: function (l, p) {
          var h = p + "queueHooks";
          return (
            we.get(l, h) ||
            we.access(l, h, {
              empty: f.Callbacks("once memory").add(function () {
                we.remove(l, [p + "queue", h]);
              }),
            })
          );
        },
      }),
      f.fn.extend({
        queue: function (l, p) {
          var h = 2;
          return (
            typeof l != "string" && ((p = l), (l = "fx"), h--),
            arguments.length < h
              ? f.queue(this[0], l)
              : p === void 0
              ? this
              : this.each(function () {
                  var m = f.queue(this, l, p);
                  f._queueHooks(this, l),
                    l === "fx" && m[0] !== "inprogress" && f.dequeue(this, l);
                })
          );
        },
        dequeue: function (l) {
          return this.each(function () {
            f.dequeue(this, l);
          });
        },
        clearQueue: function (l) {
          return this.queue(l || "fx", []);
        },
        promise: function (l, p) {
          var h,
            m = 1,
            v = f.Deferred(),
            x = this,
            y = this.length,
            I = function () {
              --m || v.resolveWith(x, [x]);
            };
          for (
            typeof l != "string" && ((p = l), (l = void 0)), l = l || "fx";
            y--;

          )
            (h = we.get(x[y], l + "queueHooks")),
              h && h.empty && (m++, h.empty.add(I));
          return I(), v.promise(p);
        },
      });
    var Ec = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
      zr = new RegExp("^(?:([+-])=|)(" + Ec + ")([a-z%]*)$", "i"),
      an = ["Top", "Right", "Bottom", "Left"],
      Fn = j.documentElement,
      ar = function (l) {
        return f.contains(l.ownerDocument, l);
      },
      kh = { composed: !0 };
    Fn.getRootNode &&
      (ar = function (l) {
        return (
          f.contains(l.ownerDocument, l) ||
          l.getRootNode(kh) === l.ownerDocument
        );
      });
    var Ao = function (l, p) {
      return (
        (l = p || l),
        l.style.display === "none" ||
          (l.style.display === "" && ar(l) && f.css(l, "display") === "none")
      );
    };
    function Ic(l, p, h, m) {
      var v,
        x,
        y = 20,
        I = m
          ? function () {
              return m.cur();
            }
          : function () {
              return f.css(l, p, "");
            },
        P = I(),
        N = (h && h[3]) || (f.cssNumber[p] ? "" : "px"),
        q =
          l.nodeType &&
          (f.cssNumber[p] || (N !== "px" && +P)) &&
          zr.exec(f.css(l, p));
      if (q && q[3] !== N) {
        for (P = P / 2, N = N || q[3], q = +P || 1; y--; )
          f.style(l, p, q + N),
            (1 - x) * (1 - (x = I() / P || 0.5)) <= 0 && (y = 0),
            (q = q / x);
        (q = q * 2), f.style(l, p, q + N), (h = h || []);
      }
      return (
        h &&
          ((q = +q || +P || 0),
          (v = h[1] ? q + (h[1] + 1) * h[2] : +h[2]),
          m && ((m.unit = N), (m.start = q), (m.end = v))),
        v
      );
    }
    var Ac = {};
    function Ph(l) {
      var p,
        h = l.ownerDocument,
        m = l.nodeName,
        v = Ac[m];
      return (
        v ||
        ((p = h.body.appendChild(h.createElement(m))),
        (v = f.css(p, "display")),
        p.parentNode.removeChild(p),
        v === "none" && (v = "block"),
        (Ac[m] = v),
        v)
      );
    }
    function sr(l, p) {
      for (var h, m, v = [], x = 0, y = l.length; x < y; x++)
        (m = l[x]),
          m.style &&
            ((h = m.style.display),
            p
              ? (h === "none" &&
                  ((v[x] = we.get(m, "display") || null),
                  v[x] || (m.style.display = "")),
                m.style.display === "" && Ao(m) && (v[x] = Ph(m)))
              : h !== "none" && ((v[x] = "none"), we.set(m, "display", h)));
      for (x = 0; x < y; x++) v[x] != null && (l[x].style.display = v[x]);
      return l;
    }
    f.fn.extend({
      show: function () {
        return sr(this, !0);
      },
      hide: function () {
        return sr(this);
      },
      toggle: function (l) {
        return typeof l == "boolean"
          ? l
            ? this.show()
            : this.hide()
          : this.each(function () {
              Ao(this) ? f(this).show() : f(this).hide();
            });
      },
    });
    var Ur = /^(?:checkbox|radio)$/i,
      Fc = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
      Rc = /^$|^module$|\/(?:java|ecma)script/i;
    (function () {
      var l = j.createDocumentFragment(),
        p = l.appendChild(j.createElement("div")),
        h = j.createElement("input");
      h.setAttribute("type", "radio"),
        h.setAttribute("checked", "checked"),
        h.setAttribute("name", "t"),
        p.appendChild(h),
        (L.checkClone = p.cloneNode(!0).cloneNode(!0).lastChild.checked),
        (p.innerHTML = "<textarea>x</textarea>"),
        (L.noCloneChecked = !!p.cloneNode(!0).lastChild.defaultValue),
        (p.innerHTML = "<option></option>"),
        (L.option = !!p.lastChild);
    })();
    var xi = {
      thead: [1, "<table>", "</table>"],
      col: [2, "<table><colgroup>", "</colgroup></table>"],
      tr: [2, "<table><tbody>", "</tbody></table>"],
      td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
      _default: [0, "", ""],
    };
    (xi.tbody = xi.tfoot = xi.colgroup = xi.caption = xi.thead),
      (xi.th = xi.td),
      L.option ||
        (xi.optgroup = xi.option =
          [1, "<select multiple='multiple'>", "</select>"]);
    function ii(l, p) {
      var h;
      return (
        typeof l.getElementsByTagName < "u"
          ? (h = l.getElementsByTagName(p || "*"))
          : typeof l.querySelectorAll < "u"
          ? (h = l.querySelectorAll(p || "*"))
          : (h = []),
        p === void 0 || (p && Qe(l, p)) ? f.merge([l], h) : h
      );
    }
    function fs(l, p) {
      for (var h = 0, m = l.length; h < m; h++)
        we.set(l[h], "globalEval", !p || we.get(p[h], "globalEval"));
    }
    var Eh = /<|&#?\w+;/;
    function Vc(l, p, h, m, v) {
      for (
        var x,
          y,
          I,
          P,
          N,
          q,
          Z = p.createDocumentFragment(),
          W = [],
          ne = 0,
          Re = l.length;
        ne < Re;
        ne++
      )
        if (((x = l[ne]), x || x === 0))
          if (Ce(x) === "object") f.merge(W, x.nodeType ? [x] : x);
          else if (!Eh.test(x)) W.push(p.createTextNode(x));
          else {
            for (
              y = y || Z.appendChild(p.createElement("div")),
                I = (Fc.exec(x) || ["", ""])[1].toLowerCase(),
                P = xi[I] || xi._default,
                y.innerHTML = P[1] + f.htmlPrefilter(x) + P[2],
                q = P[0];
              q--;

            )
              y = y.lastChild;
            f.merge(W, y.childNodes), (y = Z.firstChild), (y.textContent = "");
          }
      for (Z.textContent = "", ne = 0; (x = W[ne++]); ) {
        if (m && f.inArray(x, m) > -1) {
          v && v.push(x);
          continue;
        }
        if (((N = ar(x)), (y = ii(Z.appendChild(x), "script")), N && fs(y), h))
          for (q = 0; (x = y[q++]); ) Rc.test(x.type || "") && h.push(x);
      }
      return Z;
    }
    var Nc = /^([^.]*)(?:\.(.+)|)/;
    function lr() {
      return !0;
    }
    function cr() {
      return !1;
    }
    function gs(l, p, h, m, v, x) {
      var y, I;
      if (typeof p == "object") {
        typeof h != "string" && ((m = m || h), (h = void 0));
        for (I in p) gs(l, I, h, m, p[I], x);
        return l;
      }
      if (
        (m == null && v == null
          ? ((v = h), (m = h = void 0))
          : v == null &&
            (typeof h == "string"
              ? ((v = m), (m = void 0))
              : ((v = m), (m = h), (h = void 0))),
        v === !1)
      )
        v = cr;
      else if (!v) return l;
      return (
        x === 1 &&
          ((y = v),
          (v = function (P) {
            return f().off(P), y.apply(this, arguments);
          }),
          (v.guid = y.guid || (y.guid = f.guid++))),
        l.each(function () {
          f.event.add(this, p, v, m, h);
        })
      );
    }
    f.event = {
      global: {},
      add: function (l, p, h, m, v) {
        var x,
          y,
          I,
          P,
          N,
          q,
          Z,
          W,
          ne,
          Re,
          et,
          He = we.get(l);
        if (Hr(l))
          for (
            h.handler && ((x = h), (h = x.handler), (v = x.selector)),
              v && f.find.matchesSelector(Fn, v),
              h.guid || (h.guid = f.guid++),
              (P = He.events) || (P = He.events = Object.create(null)),
              (y = He.handle) ||
                (y = He.handle =
                  function (jt) {
                    return typeof f < "u" && f.event.triggered !== jt.type
                      ? f.event.dispatch.apply(l, arguments)
                      : void 0;
                  }),
              p = (p || "").match(Wi) || [""],
              N = p.length;
            N--;

          )
            (I = Nc.exec(p[N]) || []),
              (ne = et = I[1]),
              (Re = (I[2] || "").split(".").sort()),
              ne &&
                ((Z = f.event.special[ne] || {}),
                (ne = (v ? Z.delegateType : Z.bindType) || ne),
                (Z = f.event.special[ne] || {}),
                (q = f.extend(
                  {
                    type: ne,
                    origType: et,
                    data: m,
                    handler: h,
                    guid: h.guid,
                    selector: v,
                    needsContext: v && f.expr.match.needsContext.test(v),
                    namespace: Re.join("."),
                  },
                  x
                )),
                (W = P[ne]) ||
                  ((W = P[ne] = []),
                  (W.delegateCount = 0),
                  (!Z.setup || Z.setup.call(l, m, Re, y) === !1) &&
                    l.addEventListener &&
                    l.addEventListener(ne, y)),
                Z.add &&
                  (Z.add.call(l, q),
                  q.handler.guid || (q.handler.guid = h.guid)),
                v ? W.splice(W.delegateCount++, 0, q) : W.push(q),
                (f.event.global[ne] = !0));
      },
      remove: function (l, p, h, m, v) {
        var x,
          y,
          I,
          P,
          N,
          q,
          Z,
          W,
          ne,
          Re,
          et,
          He = we.hasData(l) && we.get(l);
        if (!(!He || !(P = He.events))) {
          for (p = (p || "").match(Wi) || [""], N = p.length; N--; ) {
            if (
              ((I = Nc.exec(p[N]) || []),
              (ne = et = I[1]),
              (Re = (I[2] || "").split(".").sort()),
              !ne)
            ) {
              for (ne in P) f.event.remove(l, ne + p[N], h, m, !0);
              continue;
            }
            for (
              Z = f.event.special[ne] || {},
                ne = (m ? Z.delegateType : Z.bindType) || ne,
                W = P[ne] || [],
                I =
                  I[2] &&
                  new RegExp("(^|\\.)" + Re.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                y = x = W.length;
              x--;

            )
              (q = W[x]),
                (v || et === q.origType) &&
                  (!h || h.guid === q.guid) &&
                  (!I || I.test(q.namespace)) &&
                  (!m || m === q.selector || (m === "**" && q.selector)) &&
                  (W.splice(x, 1),
                  q.selector && W.delegateCount--,
                  Z.remove && Z.remove.call(l, q));
            y &&
              !W.length &&
              ((!Z.teardown || Z.teardown.call(l, Re, He.handle) === !1) &&
                f.removeEvent(l, ne, He.handle),
              delete P[ne]);
          }
          f.isEmptyObject(P) && we.remove(l, "handle events");
        }
      },
      dispatch: function (l) {
        var p,
          h,
          m,
          v,
          x,
          y,
          I = new Array(arguments.length),
          P = f.event.fix(l),
          N = (we.get(this, "events") || Object.create(null))[P.type] || [],
          q = f.event.special[P.type] || {};
        for (I[0] = P, p = 1; p < arguments.length; p++) I[p] = arguments[p];
        if (
          ((P.delegateTarget = this),
          !(q.preDispatch && q.preDispatch.call(this, P) === !1))
        ) {
          for (
            y = f.event.handlers.call(this, P, N), p = 0;
            (v = y[p++]) && !P.isPropagationStopped();

          )
            for (
              P.currentTarget = v.elem, h = 0;
              (x = v.handlers[h++]) && !P.isImmediatePropagationStopped();

            )
              (!P.rnamespace ||
                x.namespace === !1 ||
                P.rnamespace.test(x.namespace)) &&
                ((P.handleObj = x),
                (P.data = x.data),
                (m = (
                  (f.event.special[x.origType] || {}).handle || x.handler
                ).apply(v.elem, I)),
                m !== void 0 &&
                  (P.result = m) === !1 &&
                  (P.preventDefault(), P.stopPropagation()));
          return q.postDispatch && q.postDispatch.call(this, P), P.result;
        }
      },
      handlers: function (l, p) {
        var h,
          m,
          v,
          x,
          y,
          I = [],
          P = p.delegateCount,
          N = l.target;
        if (P && N.nodeType && !(l.type === "click" && l.button >= 1)) {
          for (; N !== this; N = N.parentNode || this)
            if (
              N.nodeType === 1 &&
              !(l.type === "click" && N.disabled === !0)
            ) {
              for (x = [], y = {}, h = 0; h < P; h++)
                (m = p[h]),
                  (v = m.selector + " "),
                  y[v] === void 0 &&
                    (y[v] = m.needsContext
                      ? f(v, this).index(N) > -1
                      : f.find(v, this, null, [N]).length),
                  y[v] && x.push(m);
              x.length && I.push({ elem: N, handlers: x });
            }
        }
        return (
          (N = this),
          P < p.length && I.push({ elem: N, handlers: p.slice(P) }),
          I
        );
      },
      addProp: function (l, p) {
        Object.defineProperty(f.Event.prototype, l, {
          enumerable: !0,
          configurable: !0,
          get: H(p)
            ? function () {
                if (this.originalEvent) return p(this.originalEvent);
              }
            : function () {
                if (this.originalEvent) return this.originalEvent[l];
              },
          set: function (h) {
            Object.defineProperty(this, l, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: h,
            });
          },
        });
      },
      fix: function (l) {
        return l[f.expando] ? l : new f.Event(l);
      },
      special: {
        load: { noBubble: !0 },
        click: {
          setup: function (l) {
            var p = this || l;
            return (
              Ur.test(p.type) &&
                p.click &&
                Qe(p, "input") &&
                Fo(p, "click", !0),
              !1
            );
          },
          trigger: function (l) {
            var p = this || l;
            return (
              Ur.test(p.type) && p.click && Qe(p, "input") && Fo(p, "click"), !0
            );
          },
          _default: function (l) {
            var p = l.target;
            return (
              (Ur.test(p.type) &&
                p.click &&
                Qe(p, "input") &&
                we.get(p, "click")) ||
              Qe(p, "a")
            );
          },
        },
        beforeunload: {
          postDispatch: function (l) {
            l.result !== void 0 &&
              l.originalEvent &&
              (l.originalEvent.returnValue = l.result);
          },
        },
      },
    };
    function Fo(l, p, h) {
      if (!h) {
        we.get(l, p) === void 0 && f.event.add(l, p, lr);
        return;
      }
      we.set(l, p, !1),
        f.event.add(l, p, {
          namespace: !1,
          handler: function (m) {
            var v,
              x = we.get(this, p);
            if (m.isTrigger & 1 && this[p]) {
              if (x)
                (f.event.special[p] || {}).delegateType && m.stopPropagation();
              else if (
                ((x = n.call(arguments)),
                we.set(this, p, x),
                this[p](),
                (v = we.get(this, p)),
                we.set(this, p, !1),
                x !== v)
              )
                return m.stopImmediatePropagation(), m.preventDefault(), v;
            } else
              x &&
                (we.set(this, p, f.event.trigger(x[0], x.slice(1), this)),
                m.stopPropagation(),
                (m.isImmediatePropagationStopped = lr));
          },
        });
    }
    (f.removeEvent = function (l, p, h) {
      l.removeEventListener && l.removeEventListener(p, h);
    }),
      (f.Event = function (l, p) {
        if (!(this instanceof f.Event)) return new f.Event(l, p);
        l && l.type
          ? ((this.originalEvent = l),
            (this.type = l.type),
            (this.isDefaultPrevented =
              l.defaultPrevented ||
              (l.defaultPrevented === void 0 && l.returnValue === !1)
                ? lr
                : cr),
            (this.target =
              l.target && l.target.nodeType === 3
                ? l.target.parentNode
                : l.target),
            (this.currentTarget = l.currentTarget),
            (this.relatedTarget = l.relatedTarget))
          : (this.type = l),
          p && f.extend(this, p),
          (this.timeStamp = (l && l.timeStamp) || Date.now()),
          (this[f.expando] = !0);
      }),
      (f.Event.prototype = {
        constructor: f.Event,
        isDefaultPrevented: cr,
        isPropagationStopped: cr,
        isImmediatePropagationStopped: cr,
        isSimulated: !1,
        preventDefault: function () {
          var l = this.originalEvent;
          (this.isDefaultPrevented = lr),
            l && !this.isSimulated && l.preventDefault();
        },
        stopPropagation: function () {
          var l = this.originalEvent;
          (this.isPropagationStopped = lr),
            l && !this.isSimulated && l.stopPropagation();
        },
        stopImmediatePropagation: function () {
          var l = this.originalEvent;
          (this.isImmediatePropagationStopped = lr),
            l && !this.isSimulated && l.stopImmediatePropagation(),
            this.stopPropagation();
        },
      }),
      f.each(
        {
          altKey: !0,
          bubbles: !0,
          cancelable: !0,
          changedTouches: !0,
          ctrlKey: !0,
          detail: !0,
          eventPhase: !0,
          metaKey: !0,
          pageX: !0,
          pageY: !0,
          shiftKey: !0,
          view: !0,
          char: !0,
          code: !0,
          charCode: !0,
          key: !0,
          keyCode: !0,
          button: !0,
          buttons: !0,
          clientX: !0,
          clientY: !0,
          offsetX: !0,
          offsetY: !0,
          pointerId: !0,
          pointerType: !0,
          screenX: !0,
          screenY: !0,
          targetTouches: !0,
          toElement: !0,
          touches: !0,
          which: !0,
        },
        f.event.addProp
      ),
      f.each({ focus: "focusin", blur: "focusout" }, function (l, p) {
        function h(m) {
          if (j.documentMode) {
            var v = we.get(this, "handle"),
              x = f.event.fix(m);
            (x.type = m.type === "focusin" ? "focus" : "blur"),
              (x.isSimulated = !0),
              v(m),
              x.target === x.currentTarget && v(x);
          } else f.event.simulate(p, m.target, f.event.fix(m));
        }
        (f.event.special[l] = {
          setup: function () {
            var m;
            if ((Fo(this, l, !0), j.documentMode))
              (m = we.get(this, p)),
                m || this.addEventListener(p, h),
                we.set(this, p, (m || 0) + 1);
            else return !1;
          },
          trigger: function () {
            return Fo(this, l), !0;
          },
          teardown: function () {
            var m;
            if (j.documentMode)
              (m = we.get(this, p) - 1),
                m
                  ? we.set(this, p, m)
                  : (this.removeEventListener(p, h), we.remove(this, p));
            else return !1;
          },
          _default: function (m) {
            return we.get(m.target, l);
          },
          delegateType: p,
        }),
          (f.event.special[p] = {
            setup: function () {
              var m = this.ownerDocument || this.document || this,
                v = j.documentMode ? this : m,
                x = we.get(v, p);
              x ||
                (j.documentMode
                  ? this.addEventListener(p, h)
                  : m.addEventListener(l, h, !0)),
                we.set(v, p, (x || 0) + 1);
            },
            teardown: function () {
              var m = this.ownerDocument || this.document || this,
                v = j.documentMode ? this : m,
                x = we.get(v, p) - 1;
              x
                ? we.set(v, p, x)
                : (j.documentMode
                    ? this.removeEventListener(p, h)
                    : m.removeEventListener(l, h, !0),
                  we.remove(v, p));
            },
          });
      }),
      f.each(
        {
          mouseenter: "mouseover",
          mouseleave: "mouseout",
          pointerenter: "pointerover",
          pointerleave: "pointerout",
        },
        function (l, p) {
          f.event.special[l] = {
            delegateType: p,
            bindType: p,
            handle: function (h) {
              var m,
                v = this,
                x = h.relatedTarget,
                y = h.handleObj;
              return (
                (!x || (x !== v && !f.contains(v, x))) &&
                  ((h.type = y.origType),
                  (m = y.handler.apply(this, arguments)),
                  (h.type = p)),
                m
              );
            },
          };
        }
      ),
      f.fn.extend({
        on: function (l, p, h, m) {
          return gs(this, l, p, h, m);
        },
        one: function (l, p, h, m) {
          return gs(this, l, p, h, m, 1);
        },
        off: function (l, p, h) {
          var m, v;
          if (l && l.preventDefault && l.handleObj)
            return (
              (m = l.handleObj),
              f(l.delegateTarget).off(
                m.namespace ? m.origType + "." + m.namespace : m.origType,
                m.selector,
                m.handler
              ),
              this
            );
          if (typeof l == "object") {
            for (v in l) this.off(v, p, l[v]);
            return this;
          }
          return (
            (p === !1 || typeof p == "function") && ((h = p), (p = void 0)),
            h === !1 && (h = cr),
            this.each(function () {
              f.event.remove(this, l, h, p);
            })
          );
        },
      });
    var Ih = /<script|<style|<link/i,
      Ah = /checked\s*(?:[^=]|=\s*.checked.)/i,
      Fh = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function Lc(l, p) {
      return (
        (Qe(l, "table") &&
          Qe(p.nodeType !== 11 ? p : p.firstChild, "tr") &&
          f(l).children("tbody")[0]) ||
        l
      );
    }
    function Rh(l) {
      return (l.type = (l.getAttribute("type") !== null) + "/" + l.type), l;
    }
    function Vh(l) {
      return (
        (l.type || "").slice(0, 5) === "true/"
          ? (l.type = l.type.slice(5))
          : l.removeAttribute("type"),
        l
      );
    }
    function Bc(l, p) {
      var h, m, v, x, y, I, P;
      if (p.nodeType === 1) {
        if (we.hasData(l) && ((x = we.get(l)), (P = x.events), P)) {
          we.remove(p, "handle events");
          for (v in P)
            for (h = 0, m = P[v].length; h < m; h++) f.event.add(p, v, P[v][h]);
        }
        ti.hasData(l) &&
          ((y = ti.access(l)), (I = f.extend({}, y)), ti.set(p, I));
      }
    }
    function Nh(l, p) {
      var h = p.nodeName.toLowerCase();
      h === "input" && Ur.test(l.type)
        ? (p.checked = l.checked)
        : (h === "input" || h === "textarea") &&
          (p.defaultValue = l.defaultValue);
    }
    function dr(l, p, h, m) {
      p = o(p);
      var v,
        x,
        y,
        I,
        P,
        N,
        q = 0,
        Z = l.length,
        W = Z - 1,
        ne = p[0],
        Re = H(ne);
      if (
        Re ||
        (Z > 1 && typeof ne == "string" && !L.checkClone && Ah.test(ne))
      )
        return l.each(function (et) {
          var He = l.eq(et);
          Re && (p[0] = ne.call(this, et, He.html())), dr(He, p, h, m);
        });
      if (
        Z &&
        ((v = Vc(p, l[0].ownerDocument, !1, l, m)),
        (x = v.firstChild),
        v.childNodes.length === 1 && (v = x),
        x || m)
      ) {
        for (y = f.map(ii(v, "script"), Rh), I = y.length; q < Z; q++)
          (P = v),
            q !== W &&
              ((P = f.clone(P, !0, !0)), I && f.merge(y, ii(P, "script"))),
            h.call(l[q], P, q);
        if (I)
          for (
            N = y[y.length - 1].ownerDocument, f.map(y, Vh), q = 0;
            q < I;
            q++
          )
            (P = y[q]),
              Rc.test(P.type || "") &&
                !we.access(P, "globalEval") &&
                f.contains(N, P) &&
                (P.src && (P.type || "").toLowerCase() !== "module"
                  ? f._evalUrl &&
                    !P.noModule &&
                    f._evalUrl(
                      P.src,
                      { nonce: P.nonce || P.getAttribute("nonce") },
                      N
                    )
                  : ge(P.textContent.replace(Fh, ""), P, N));
      }
      return l;
    }
    function Hc(l, p, h) {
      for (var m, v = p ? f.filter(p, l) : l, x = 0; (m = v[x]) != null; x++)
        !h && m.nodeType === 1 && f.cleanData(ii(m)),
          m.parentNode &&
            (h && ar(m) && fs(ii(m, "script")), m.parentNode.removeChild(m));
      return l;
    }
    f.extend({
      htmlPrefilter: function (l) {
        return l;
      },
      clone: function (l, p, h) {
        var m,
          v,
          x,
          y,
          I = l.cloneNode(!0),
          P = ar(l);
        if (
          !L.noCloneChecked &&
          (l.nodeType === 1 || l.nodeType === 11) &&
          !f.isXMLDoc(l)
        )
          for (y = ii(I), x = ii(l), m = 0, v = x.length; m < v; m++)
            Nh(x[m], y[m]);
        if (p)
          if (h)
            for (
              x = x || ii(l), y = y || ii(I), m = 0, v = x.length;
              m < v;
              m++
            )
              Bc(x[m], y[m]);
          else Bc(l, I);
        return (
          (y = ii(I, "script")), y.length > 0 && fs(y, !P && ii(l, "script")), I
        );
      },
      cleanData: function (l) {
        for (
          var p, h, m, v = f.event.special, x = 0;
          (h = l[x]) !== void 0;
          x++
        )
          if (Hr(h)) {
            if ((p = h[we.expando])) {
              if (p.events)
                for (m in p.events)
                  v[m] ? f.event.remove(h, m) : f.removeEvent(h, m, p.handle);
              h[we.expando] = void 0;
            }
            h[ti.expando] && (h[ti.expando] = void 0);
          }
      },
    }),
      f.fn.extend({
        detach: function (l) {
          return Hc(this, l, !0);
        },
        remove: function (l) {
          return Hc(this, l);
        },
        text: function (l) {
          return on(
            this,
            function (p) {
              return p === void 0
                ? f.text(this)
                : this.empty().each(function () {
                    (this.nodeType === 1 ||
                      this.nodeType === 11 ||
                      this.nodeType === 9) &&
                      (this.textContent = p);
                  });
            },
            null,
            l,
            arguments.length
          );
        },
        append: function () {
          return dr(this, arguments, function (l) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var p = Lc(this, l);
              p.appendChild(l);
            }
          });
        },
        prepend: function () {
          return dr(this, arguments, function (l) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var p = Lc(this, l);
              p.insertBefore(l, p.firstChild);
            }
          });
        },
        before: function () {
          return dr(this, arguments, function (l) {
            this.parentNode && this.parentNode.insertBefore(l, this);
          });
        },
        after: function () {
          return dr(this, arguments, function (l) {
            this.parentNode &&
              this.parentNode.insertBefore(l, this.nextSibling);
          });
        },
        empty: function () {
          for (var l, p = 0; (l = this[p]) != null; p++)
            l.nodeType === 1 && (f.cleanData(ii(l, !1)), (l.textContent = ""));
          return this;
        },
        clone: function (l, p) {
          return (
            (l = l ?? !1),
            (p = p ?? l),
            this.map(function () {
              return f.clone(this, l, p);
            })
          );
        },
        html: function (l) {
          return on(
            this,
            function (p) {
              var h = this[0] || {},
                m = 0,
                v = this.length;
              if (p === void 0 && h.nodeType === 1) return h.innerHTML;
              if (
                typeof p == "string" &&
                !Ih.test(p) &&
                !xi[(Fc.exec(p) || ["", ""])[1].toLowerCase()]
              ) {
                p = f.htmlPrefilter(p);
                try {
                  for (; m < v; m++)
                    (h = this[m] || {}),
                      h.nodeType === 1 &&
                        (f.cleanData(ii(h, !1)), (h.innerHTML = p));
                  h = 0;
                } catch {}
              }
              h && this.empty().append(p);
            },
            null,
            l,
            arguments.length
          );
        },
        replaceWith: function () {
          var l = [];
          return dr(
            this,
            arguments,
            function (p) {
              var h = this.parentNode;
              f.inArray(this, l) < 0 &&
                (f.cleanData(ii(this)), h && h.replaceChild(p, this));
            },
            l
          );
        },
      }),
      f.each(
        {
          appendTo: "append",
          prependTo: "prepend",
          insertBefore: "before",
          insertAfter: "after",
          replaceAll: "replaceWith",
        },
        function (l, p) {
          f.fn[l] = function (h) {
            for (var m, v = [], x = f(h), y = x.length - 1, I = 0; I <= y; I++)
              (m = I === y ? this : this.clone(!0)),
                f(x[I])[p](m),
                u.apply(v, m.get());
            return this.pushStack(v);
          };
        }
      );
    var _s = new RegExp("^(" + Ec + ")(?!px)[a-z%]+$", "i"),
      bs = /^--/,
      Ro = function (l) {
        var p = l.ownerDocument.defaultView;
        return (!p || !p.opener) && (p = r), p.getComputedStyle(l);
      },
      jc = function (l, p, h) {
        var m,
          v,
          x = {};
        for (v in p) (x[v] = l.style[v]), (l.style[v] = p[v]);
        m = h.call(l);
        for (v in p) l.style[v] = x[v];
        return m;
      },
      Lh = new RegExp(an.join("|"), "i");
    (function () {
      function l() {
        if (N) {
          (P.style.cssText =
            "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
            (N.style.cssText =
              "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
            Fn.appendChild(P).appendChild(N);
          var q = r.getComputedStyle(N);
          (h = q.top !== "1%"),
            (I = p(q.marginLeft) === 12),
            (N.style.right = "60%"),
            (x = p(q.right) === 36),
            (m = p(q.width) === 36),
            (N.style.position = "absolute"),
            (v = p(N.offsetWidth / 3) === 12),
            Fn.removeChild(P),
            (N = null);
        }
      }
      function p(q) {
        return Math.round(parseFloat(q));
      }
      var h,
        m,
        v,
        x,
        y,
        I,
        P = j.createElement("div"),
        N = j.createElement("div");
      N.style &&
        ((N.style.backgroundClip = "content-box"),
        (N.cloneNode(!0).style.backgroundClip = ""),
        (L.clearCloneStyle = N.style.backgroundClip === "content-box"),
        f.extend(L, {
          boxSizingReliable: function () {
            return l(), m;
          },
          pixelBoxStyles: function () {
            return l(), x;
          },
          pixelPosition: function () {
            return l(), h;
          },
          reliableMarginLeft: function () {
            return l(), I;
          },
          scrollboxSize: function () {
            return l(), v;
          },
          reliableTrDimensions: function () {
            var q, Z, W, ne;
            return (
              y == null &&
                ((q = j.createElement("table")),
                (Z = j.createElement("tr")),
                (W = j.createElement("div")),
                (q.style.cssText =
                  "position:absolute;left:-11111px;border-collapse:separate"),
                (Z.style.cssText = "box-sizing:content-box;border:1px solid"),
                (Z.style.height = "1px"),
                (W.style.height = "9px"),
                (W.style.display = "block"),
                Fn.appendChild(q).appendChild(Z).appendChild(W),
                (ne = r.getComputedStyle(Z)),
                (y =
                  parseInt(ne.height, 10) +
                    parseInt(ne.borderTopWidth, 10) +
                    parseInt(ne.borderBottomWidth, 10) ===
                  Z.offsetHeight),
                Fn.removeChild(q)),
              y
            );
          },
        }));
    })();
    function Wr(l, p, h) {
      var m,
        v,
        x,
        y,
        I = bs.test(p),
        P = l.style;
      return (
        (h = h || Ro(l)),
        h &&
          ((y = h.getPropertyValue(p) || h[p]),
          I && y && (y = y.replace(Br, "$1") || void 0),
          y === "" && !ar(l) && (y = f.style(l, p)),
          !L.pixelBoxStyles() &&
            _s.test(y) &&
            Lh.test(p) &&
            ((m = P.width),
            (v = P.minWidth),
            (x = P.maxWidth),
            (P.minWidth = P.maxWidth = P.width = y),
            (y = h.width),
            (P.width = m),
            (P.minWidth = v),
            (P.maxWidth = x))),
        y !== void 0 ? y + "" : y
      );
    }
    function zc(l, p) {
      return {
        get: function () {
          if (l()) {
            delete this.get;
            return;
          }
          return (this.get = p).apply(this, arguments);
        },
      };
    }
    var Uc = ["Webkit", "Moz", "ms"],
      Wc = j.createElement("div").style,
      $c = {};
    function Bh(l) {
      for (var p = l[0].toUpperCase() + l.slice(1), h = Uc.length; h--; )
        if (((l = Uc[h] + p), l in Wc)) return l;
    }
    function vs(l) {
      var p = f.cssProps[l] || $c[l];
      return p || (l in Wc ? l : ($c[l] = Bh(l) || l));
    }
    var Hh = /^(none|table(?!-c[ea]).+)/,
      jh = { position: "absolute", visibility: "hidden", display: "block" },
      Gc = { letterSpacing: "0", fontWeight: "400" };
    function Yc(l, p, h) {
      var m = zr.exec(p);
      return m ? Math.max(0, m[2] - (h || 0)) + (m[3] || "px") : p;
    }
    function xs(l, p, h, m, v, x) {
      var y = p === "width" ? 1 : 0,
        I = 0,
        P = 0,
        N = 0;
      if (h === (m ? "border" : "content")) return 0;
      for (; y < 4; y += 2)
        h === "margin" && (N += f.css(l, h + an[y], !0, v)),
          m
            ? (h === "content" && (P -= f.css(l, "padding" + an[y], !0, v)),
              h !== "margin" &&
                (P -= f.css(l, "border" + an[y] + "Width", !0, v)))
            : ((P += f.css(l, "padding" + an[y], !0, v)),
              h !== "padding"
                ? (P += f.css(l, "border" + an[y] + "Width", !0, v))
                : (I += f.css(l, "border" + an[y] + "Width", !0, v)));
      return (
        !m &&
          x >= 0 &&
          (P +=
            Math.max(
              0,
              Math.ceil(
                l["offset" + p[0].toUpperCase() + p.slice(1)] - x - P - I - 0.5
              )
            ) || 0),
        P + N
      );
    }
    function qc(l, p, h) {
      var m = Ro(l),
        v = !L.boxSizingReliable() || h,
        x = v && f.css(l, "boxSizing", !1, m) === "border-box",
        y = x,
        I = Wr(l, p, m),
        P = "offset" + p[0].toUpperCase() + p.slice(1);
      if (_s.test(I)) {
        if (!h) return I;
        I = "auto";
      }
      return (
        ((!L.boxSizingReliable() && x) ||
          (!L.reliableTrDimensions() && Qe(l, "tr")) ||
          I === "auto" ||
          (!parseFloat(I) && f.css(l, "display", !1, m) === "inline")) &&
          l.getClientRects().length &&
          ((x = f.css(l, "boxSizing", !1, m) === "border-box"),
          (y = P in l),
          y && (I = l[P])),
        (I = parseFloat(I) || 0),
        I + xs(l, p, h || (x ? "border" : "content"), y, m, I) + "px"
      );
    }
    f.extend({
      cssHooks: {
        opacity: {
          get: function (l, p) {
            if (p) {
              var h = Wr(l, "opacity");
              return h === "" ? "1" : h;
            }
          },
        },
      },
      cssNumber: {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageSlice: !0,
        columnCount: !0,
        flexGrow: !0,
        flexShrink: !0,
        fontWeight: !0,
        gridArea: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnStart: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowStart: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        scale: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
      },
      cssProps: {},
      style: function (l, p, h, m) {
        if (!(!l || l.nodeType === 3 || l.nodeType === 8 || !l.style)) {
          var v,
            x,
            y,
            I = $i(p),
            P = bs.test(p),
            N = l.style;
          if (
            (P || (p = vs(I)),
            (y = f.cssHooks[p] || f.cssHooks[I]),
            h !== void 0)
          ) {
            if (
              ((x = typeof h),
              x === "string" &&
                (v = zr.exec(h)) &&
                v[1] &&
                ((h = Ic(l, p, v)), (x = "number")),
              h == null || h !== h)
            )
              return;
            x === "number" &&
              !P &&
              (h += (v && v[3]) || (f.cssNumber[I] ? "" : "px")),
              !L.clearCloneStyle &&
                h === "" &&
                p.indexOf("background") === 0 &&
                (N[p] = "inherit"),
              (!y || !("set" in y) || (h = y.set(l, h, m)) !== void 0) &&
                (P ? N.setProperty(p, h) : (N[p] = h));
          } else
            return y && "get" in y && (v = y.get(l, !1, m)) !== void 0
              ? v
              : N[p];
        }
      },
      css: function (l, p, h, m) {
        var v,
          x,
          y,
          I = $i(p),
          P = bs.test(p);
        return (
          P || (p = vs(I)),
          (y = f.cssHooks[p] || f.cssHooks[I]),
          y && "get" in y && (v = y.get(l, !0, h)),
          v === void 0 && (v = Wr(l, p, m)),
          v === "normal" && p in Gc && (v = Gc[p]),
          h === "" || h
            ? ((x = parseFloat(v)), h === !0 || isFinite(x) ? x || 0 : v)
            : v
        );
      },
    }),
      f.each(["height", "width"], function (l, p) {
        f.cssHooks[p] = {
          get: function (h, m, v) {
            if (m)
              return Hh.test(f.css(h, "display")) &&
                (!h.getClientRects().length || !h.getBoundingClientRect().width)
                ? jc(h, jh, function () {
                    return qc(h, p, v);
                  })
                : qc(h, p, v);
          },
          set: function (h, m, v) {
            var x,
              y = Ro(h),
              I = !L.scrollboxSize() && y.position === "absolute",
              P = I || v,
              N = P && f.css(h, "boxSizing", !1, y) === "border-box",
              q = v ? xs(h, p, v, N, y) : 0;
            return (
              N &&
                I &&
                (q -= Math.ceil(
                  h["offset" + p[0].toUpperCase() + p.slice(1)] -
                    parseFloat(y[p]) -
                    xs(h, p, "border", !1, y) -
                    0.5
                )),
              q &&
                (x = zr.exec(m)) &&
                (x[3] || "px") !== "px" &&
                ((h.style[p] = m), (m = f.css(h, p))),
              Yc(h, m, q)
            );
          },
        };
      }),
      (f.cssHooks.marginLeft = zc(L.reliableMarginLeft, function (l, p) {
        if (p)
          return (
            (parseFloat(Wr(l, "marginLeft")) ||
              l.getBoundingClientRect().left -
                jc(l, { marginLeft: 0 }, function () {
                  return l.getBoundingClientRect().left;
                })) + "px"
          );
      })),
      f.each({ margin: "", padding: "", border: "Width" }, function (l, p) {
        (f.cssHooks[l + p] = {
          expand: function (h) {
            for (
              var m = 0, v = {}, x = typeof h == "string" ? h.split(" ") : [h];
              m < 4;
              m++
            )
              v[l + an[m] + p] = x[m] || x[m - 2] || x[0];
            return v;
          },
        }),
          l !== "margin" && (f.cssHooks[l + p].set = Yc);
      }),
      f.fn.extend({
        css: function (l, p) {
          return on(
            this,
            function (h, m, v) {
              var x,
                y,
                I = {},
                P = 0;
              if (Array.isArray(m)) {
                for (x = Ro(h), y = m.length; P < y; P++)
                  I[m[P]] = f.css(h, m[P], !1, x);
                return I;
              }
              return v !== void 0 ? f.style(h, m, v) : f.css(h, m);
            },
            l,
            p,
            arguments.length > 1
          );
        },
      });
    function ni(l, p, h, m, v) {
      return new ni.prototype.init(l, p, h, m, v);
    }
    (f.Tween = ni),
      (ni.prototype = {
        constructor: ni,
        init: function (l, p, h, m, v, x) {
          (this.elem = l),
            (this.prop = h),
            (this.easing = v || f.easing._default),
            (this.options = p),
            (this.start = this.now = this.cur()),
            (this.end = m),
            (this.unit = x || (f.cssNumber[h] ? "" : "px"));
        },
        cur: function () {
          var l = ni.propHooks[this.prop];
          return l && l.get ? l.get(this) : ni.propHooks._default.get(this);
        },
        run: function (l) {
          var p,
            h = ni.propHooks[this.prop];
          return (
            this.options.duration
              ? (this.pos = p =
                  f.easing[this.easing](
                    l,
                    this.options.duration * l,
                    0,
                    1,
                    this.options.duration
                  ))
              : (this.pos = p = l),
            (this.now = (this.end - this.start) * p + this.start),
            this.options.step &&
              this.options.step.call(this.elem, this.now, this),
            h && h.set ? h.set(this) : ni.propHooks._default.set(this),
            this
          );
        },
      }),
      (ni.prototype.init.prototype = ni.prototype),
      (ni.propHooks = {
        _default: {
          get: function (l) {
            var p;
            return l.elem.nodeType !== 1 ||
              (l.elem[l.prop] != null && l.elem.style[l.prop] == null)
              ? l.elem[l.prop]
              : ((p = f.css(l.elem, l.prop, "")), !p || p === "auto" ? 0 : p);
          },
          set: function (l) {
            f.fx.step[l.prop]
              ? f.fx.step[l.prop](l)
              : l.elem.nodeType === 1 &&
                (f.cssHooks[l.prop] || l.elem.style[vs(l.prop)] != null)
              ? f.style(l.elem, l.prop, l.now + l.unit)
              : (l.elem[l.prop] = l.now);
          },
        },
      }),
      (ni.propHooks.scrollTop = ni.propHooks.scrollLeft =
        {
          set: function (l) {
            l.elem.nodeType && l.elem.parentNode && (l.elem[l.prop] = l.now);
          },
        }),
      (f.easing = {
        linear: function (l) {
          return l;
        },
        swing: function (l) {
          return 0.5 - Math.cos(l * Math.PI) / 2;
        },
        _default: "swing",
      }),
      (f.fx = ni.prototype.init),
      (f.fx.step = {});
    var pr,
      Vo,
      zh = /^(?:toggle|show|hide)$/,
      Uh = /queueHooks$/;
    function ys() {
      Vo &&
        (j.hidden === !1 && r.requestAnimationFrame
          ? r.requestAnimationFrame(ys)
          : r.setTimeout(ys, f.fx.interval),
        f.fx.tick());
    }
    function Kc() {
      return (
        r.setTimeout(function () {
          pr = void 0;
        }),
        (pr = Date.now())
      );
    }
    function No(l, p) {
      var h,
        m = 0,
        v = { height: l };
      for (p = p ? 1 : 0; m < 4; m += 2 - p)
        (h = an[m]), (v["margin" + h] = v["padding" + h] = l);
      return p && (v.opacity = v.width = l), v;
    }
    function Qc(l, p, h) {
      for (
        var m,
          v = (Ei.tweeners[p] || []).concat(Ei.tweeners["*"]),
          x = 0,
          y = v.length;
        x < y;
        x++
      )
        if ((m = v[x].call(h, p, l))) return m;
    }
    function Wh(l, p, h) {
      var m,
        v,
        x,
        y,
        I,
        P,
        N,
        q,
        Z = "width" in p || "height" in p,
        W = this,
        ne = {},
        Re = l.style,
        et = l.nodeType && Ao(l),
        He = we.get(l, "fxshow");
      h.queue ||
        ((y = f._queueHooks(l, "fx")),
        y.unqueued == null &&
          ((y.unqueued = 0),
          (I = y.empty.fire),
          (y.empty.fire = function () {
            y.unqueued || I();
          })),
        y.unqueued++,
        W.always(function () {
          W.always(function () {
            y.unqueued--, f.queue(l, "fx").length || y.empty.fire();
          });
        }));
      for (m in p)
        if (((v = p[m]), zh.test(v))) {
          if (
            (delete p[m],
            (x = x || v === "toggle"),
            v === (et ? "hide" : "show"))
          )
            if (v === "show" && He && He[m] !== void 0) et = !0;
            else continue;
          ne[m] = (He && He[m]) || f.style(l, m);
        }
      if (((P = !f.isEmptyObject(p)), !(!P && f.isEmptyObject(ne)))) {
        Z &&
          l.nodeType === 1 &&
          ((h.overflow = [Re.overflow, Re.overflowX, Re.overflowY]),
          (N = He && He.display),
          N == null && (N = we.get(l, "display")),
          (q = f.css(l, "display")),
          q === "none" &&
            (N
              ? (q = N)
              : (sr([l], !0),
                (N = l.style.display || N),
                (q = f.css(l, "display")),
                sr([l]))),
          (q === "inline" || (q === "inline-block" && N != null)) &&
            f.css(l, "float") === "none" &&
            (P ||
              (W.done(function () {
                Re.display = N;
              }),
              N == null && ((q = Re.display), (N = q === "none" ? "" : q))),
            (Re.display = "inline-block"))),
          h.overflow &&
            ((Re.overflow = "hidden"),
            W.always(function () {
              (Re.overflow = h.overflow[0]),
                (Re.overflowX = h.overflow[1]),
                (Re.overflowY = h.overflow[2]);
            })),
          (P = !1);
        for (m in ne)
          P ||
            (He
              ? "hidden" in He && (et = He.hidden)
              : (He = we.access(l, "fxshow", { display: N })),
            x && (He.hidden = !et),
            et && sr([l], !0),
            W.done(function () {
              et || sr([l]), we.remove(l, "fxshow");
              for (m in ne) f.style(l, m, ne[m]);
            })),
            (P = Qc(et ? He[m] : 0, m, W)),
            m in He ||
              ((He[m] = P.start), et && ((P.end = P.start), (P.start = 0)));
      }
    }
    function $h(l, p) {
      var h, m, v, x, y;
      for (h in l)
        if (
          ((m = $i(h)),
          (v = p[m]),
          (x = l[h]),
          Array.isArray(x) && ((v = x[1]), (x = l[h] = x[0])),
          h !== m && ((l[m] = x), delete l[h]),
          (y = f.cssHooks[m]),
          y && "expand" in y)
        ) {
          (x = y.expand(x)), delete l[m];
          for (h in x) h in l || ((l[h] = x[h]), (p[h] = v));
        } else p[m] = v;
    }
    function Ei(l, p, h) {
      var m,
        v,
        x = 0,
        y = Ei.prefilters.length,
        I = f.Deferred().always(function () {
          delete P.elem;
        }),
        P = function () {
          if (v) return !1;
          for (
            var Z = pr || Kc(),
              W = Math.max(0, N.startTime + N.duration - Z),
              ne = W / N.duration || 0,
              Re = 1 - ne,
              et = 0,
              He = N.tweens.length;
            et < He;
            et++
          )
            N.tweens[et].run(Re);
          return (
            I.notifyWith(l, [N, Re, W]),
            Re < 1 && He
              ? W
              : (He || I.notifyWith(l, [N, 1, 0]), I.resolveWith(l, [N]), !1)
          );
        },
        N = I.promise({
          elem: l,
          props: f.extend({}, p),
          opts: f.extend(
            !0,
            { specialEasing: {}, easing: f.easing._default },
            h
          ),
          originalProperties: p,
          originalOptions: h,
          startTime: pr || Kc(),
          duration: h.duration,
          tweens: [],
          createTween: function (Z, W) {
            var ne = f.Tween(
              l,
              N.opts,
              Z,
              W,
              N.opts.specialEasing[Z] || N.opts.easing
            );
            return N.tweens.push(ne), ne;
          },
          stop: function (Z) {
            var W = 0,
              ne = Z ? N.tweens.length : 0;
            if (v) return this;
            for (v = !0; W < ne; W++) N.tweens[W].run(1);
            return (
              Z
                ? (I.notifyWith(l, [N, 1, 0]), I.resolveWith(l, [N, Z]))
                : I.rejectWith(l, [N, Z]),
              this
            );
          },
        }),
        q = N.props;
      for ($h(q, N.opts.specialEasing); x < y; x++)
        if (((m = Ei.prefilters[x].call(N, l, q, N.opts)), m))
          return (
            H(m.stop) &&
              (f._queueHooks(N.elem, N.opts.queue).stop = m.stop.bind(m)),
            m
          );
      return (
        f.map(q, Qc, N),
        H(N.opts.start) && N.opts.start.call(l, N),
        N.progress(N.opts.progress)
          .done(N.opts.done, N.opts.complete)
          .fail(N.opts.fail)
          .always(N.opts.always),
        f.fx.timer(f.extend(P, { elem: l, anim: N, queue: N.opts.queue })),
        N
      );
    }
    (f.Animation = f.extend(Ei, {
      tweeners: {
        "*": [
          function (l, p) {
            var h = this.createTween(l, p);
            return Ic(h.elem, l, zr.exec(p), h), h;
          },
        ],
      },
      tweener: function (l, p) {
        H(l) ? ((p = l), (l = ["*"])) : (l = l.match(Wi));
        for (var h, m = 0, v = l.length; m < v; m++)
          (h = l[m]),
            (Ei.tweeners[h] = Ei.tweeners[h] || []),
            Ei.tweeners[h].unshift(p);
      },
      prefilters: [Wh],
      prefilter: function (l, p) {
        p ? Ei.prefilters.unshift(l) : Ei.prefilters.push(l);
      },
    })),
      (f.speed = function (l, p, h) {
        var m =
          l && typeof l == "object"
            ? f.extend({}, l)
            : {
                complete: h || (!h && p) || (H(l) && l),
                duration: l,
                easing: (h && p) || (p && !H(p) && p),
              };
        return (
          f.fx.off
            ? (m.duration = 0)
            : typeof m.duration != "number" &&
              (m.duration in f.fx.speeds
                ? (m.duration = f.fx.speeds[m.duration])
                : (m.duration = f.fx.speeds._default)),
          (m.queue == null || m.queue === !0) && (m.queue = "fx"),
          (m.old = m.complete),
          (m.complete = function () {
            H(m.old) && m.old.call(this), m.queue && f.dequeue(this, m.queue);
          }),
          m
        );
      }),
      f.fn.extend({
        fadeTo: function (l, p, h, m) {
          return this.filter(Ao)
            .css("opacity", 0)
            .show()
            .end()
            .animate({ opacity: p }, l, h, m);
        },
        animate: function (l, p, h, m) {
          var v = f.isEmptyObject(l),
            x = f.speed(p, h, m),
            y = function () {
              var I = Ei(this, f.extend({}, l), x);
              (v || we.get(this, "finish")) && I.stop(!0);
            };
          return (
            (y.finish = y),
            v || x.queue === !1 ? this.each(y) : this.queue(x.queue, y)
          );
        },
        stop: function (l, p, h) {
          var m = function (v) {
            var x = v.stop;
            delete v.stop, x(h);
          };
          return (
            typeof l != "string" && ((h = p), (p = l), (l = void 0)),
            p && this.queue(l || "fx", []),
            this.each(function () {
              var v = !0,
                x = l != null && l + "queueHooks",
                y = f.timers,
                I = we.get(this);
              if (x) I[x] && I[x].stop && m(I[x]);
              else for (x in I) I[x] && I[x].stop && Uh.test(x) && m(I[x]);
              for (x = y.length; x--; )
                y[x].elem === this &&
                  (l == null || y[x].queue === l) &&
                  (y[x].anim.stop(h), (v = !1), y.splice(x, 1));
              (v || !h) && f.dequeue(this, l);
            })
          );
        },
        finish: function (l) {
          return (
            l !== !1 && (l = l || "fx"),
            this.each(function () {
              var p,
                h = we.get(this),
                m = h[l + "queue"],
                v = h[l + "queueHooks"],
                x = f.timers,
                y = m ? m.length : 0;
              for (
                h.finish = !0,
                  f.queue(this, l, []),
                  v && v.stop && v.stop.call(this, !0),
                  p = x.length;
                p--;

              )
                x[p].elem === this &&
                  x[p].queue === l &&
                  (x[p].anim.stop(!0), x.splice(p, 1));
              for (p = 0; p < y; p++)
                m[p] && m[p].finish && m[p].finish.call(this);
              delete h.finish;
            })
          );
        },
      }),
      f.each(["toggle", "show", "hide"], function (l, p) {
        var h = f.fn[p];
        f.fn[p] = function (m, v, x) {
          return m == null || typeof m == "boolean"
            ? h.apply(this, arguments)
            : this.animate(No(p, !0), m, v, x);
        };
      }),
      f.each(
        {
          slideDown: No("show"),
          slideUp: No("hide"),
          slideToggle: No("toggle"),
          fadeIn: { opacity: "show" },
          fadeOut: { opacity: "hide" },
          fadeToggle: { opacity: "toggle" },
        },
        function (l, p) {
          f.fn[l] = function (h, m, v) {
            return this.animate(p, h, m, v);
          };
        }
      ),
      (f.timers = []),
      (f.fx.tick = function () {
        var l,
          p = 0,
          h = f.timers;
        for (pr = Date.now(); p < h.length; p++)
          (l = h[p]), !l() && h[p] === l && h.splice(p--, 1);
        h.length || f.fx.stop(), (pr = void 0);
      }),
      (f.fx.timer = function (l) {
        f.timers.push(l), f.fx.start();
      }),
      (f.fx.interval = 13),
      (f.fx.start = function () {
        Vo || ((Vo = !0), ys());
      }),
      (f.fx.stop = function () {
        Vo = null;
      }),
      (f.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
      (f.fn.delay = function (l, p) {
        return (
          (l = (f.fx && f.fx.speeds[l]) || l),
          (p = p || "fx"),
          this.queue(p, function (h, m) {
            var v = r.setTimeout(h, l);
            m.stop = function () {
              r.clearTimeout(v);
            };
          })
        );
      }),
      (function () {
        var l = j.createElement("input"),
          p = j.createElement("select"),
          h = p.appendChild(j.createElement("option"));
        (l.type = "checkbox"),
          (L.checkOn = l.value !== ""),
          (L.optSelected = h.selected),
          (l = j.createElement("input")),
          (l.value = "t"),
          (l.type = "radio"),
          (L.radioValue = l.value === "t");
      })();
    var Zc,
      $r = f.expr.attrHandle;
    f.fn.extend({
      attr: function (l, p) {
        return on(this, f.attr, l, p, arguments.length > 1);
      },
      removeAttr: function (l) {
        return this.each(function () {
          f.removeAttr(this, l);
        });
      },
    }),
      f.extend({
        attr: function (l, p, h) {
          var m,
            v,
            x = l.nodeType;
          if (!(x === 3 || x === 8 || x === 2)) {
            if (typeof l.getAttribute > "u") return f.prop(l, p, h);
            if (
              ((x !== 1 || !f.isXMLDoc(l)) &&
                (v =
                  f.attrHooks[p.toLowerCase()] ||
                  (f.expr.match.bool.test(p) ? Zc : void 0)),
              h !== void 0)
            ) {
              if (h === null) {
                f.removeAttr(l, p);
                return;
              }
              return v && "set" in v && (m = v.set(l, h, p)) !== void 0
                ? m
                : (l.setAttribute(p, h + ""), h);
            }
            return v && "get" in v && (m = v.get(l, p)) !== null
              ? m
              : ((m = f.find.attr(l, p)), m ?? void 0);
          }
        },
        attrHooks: {
          type: {
            set: function (l, p) {
              if (!L.radioValue && p === "radio" && Qe(l, "input")) {
                var h = l.value;
                return l.setAttribute("type", p), h && (l.value = h), p;
              }
            },
          },
        },
        removeAttr: function (l, p) {
          var h,
            m = 0,
            v = p && p.match(Wi);
          if (v && l.nodeType === 1)
            for (; (h = v[m++]); ) l.removeAttribute(h);
        },
      }),
      (Zc = {
        set: function (l, p, h) {
          return p === !1 ? f.removeAttr(l, h) : l.setAttribute(h, h), h;
        },
      }),
      f.each(f.expr.match.bool.source.match(/\w+/g), function (l, p) {
        var h = $r[p] || f.find.attr;
        $r[p] = function (m, v, x) {
          var y,
            I,
            P = v.toLowerCase();
          return (
            x ||
              ((I = $r[P]),
              ($r[P] = y),
              (y = h(m, v, x) != null ? P : null),
              ($r[P] = I)),
            y
          );
        };
      });
    var Gh = /^(?:input|select|textarea|button)$/i,
      Yh = /^(?:a|area)$/i;
    f.fn.extend({
      prop: function (l, p) {
        return on(this, f.prop, l, p, arguments.length > 1);
      },
      removeProp: function (l) {
        return this.each(function () {
          delete this[f.propFix[l] || l];
        });
      },
    }),
      f.extend({
        prop: function (l, p, h) {
          var m,
            v,
            x = l.nodeType;
          if (!(x === 3 || x === 8 || x === 2))
            return (
              (x !== 1 || !f.isXMLDoc(l)) &&
                ((p = f.propFix[p] || p), (v = f.propHooks[p])),
              h !== void 0
                ? v && "set" in v && (m = v.set(l, h, p)) !== void 0
                  ? m
                  : (l[p] = h)
                : v && "get" in v && (m = v.get(l, p)) !== null
                ? m
                : l[p]
            );
        },
        propHooks: {
          tabIndex: {
            get: function (l) {
              var p = f.find.attr(l, "tabindex");
              return p
                ? parseInt(p, 10)
                : Gh.test(l.nodeName) || (Yh.test(l.nodeName) && l.href)
                ? 0
                : -1;
            },
          },
        },
        propFix: { for: "htmlFor", class: "className" },
      }),
      L.optSelected ||
        (f.propHooks.selected = {
          get: function (l) {
            var p = l.parentNode;
            return p && p.parentNode && p.parentNode.selectedIndex, null;
          },
          set: function (l) {
            var p = l.parentNode;
            p && (p.selectedIndex, p.parentNode && p.parentNode.selectedIndex);
          },
        }),
      f.each(
        [
          "tabIndex",
          "readOnly",
          "maxLength",
          "cellSpacing",
          "cellPadding",
          "rowSpan",
          "colSpan",
          "useMap",
          "frameBorder",
          "contentEditable",
        ],
        function () {
          f.propFix[this.toLowerCase()] = this;
        }
      );
    function Rn(l) {
      var p = l.match(Wi) || [];
      return p.join(" ");
    }
    function Vn(l) {
      return (l.getAttribute && l.getAttribute("class")) || "";
    }
    function Cs(l) {
      return Array.isArray(l)
        ? l
        : typeof l == "string"
        ? l.match(Wi) || []
        : [];
    }
    f.fn.extend({
      addClass: function (l) {
        var p, h, m, v, x, y;
        return H(l)
          ? this.each(function (I) {
              f(this).addClass(l.call(this, I, Vn(this)));
            })
          : ((p = Cs(l)),
            p.length
              ? this.each(function () {
                  if (
                    ((m = Vn(this)),
                    (h = this.nodeType === 1 && " " + Rn(m) + " "),
                    h)
                  ) {
                    for (x = 0; x < p.length; x++)
                      (v = p[x]),
                        h.indexOf(" " + v + " ") < 0 && (h += v + " ");
                    (y = Rn(h)), m !== y && this.setAttribute("class", y);
                  }
                })
              : this);
      },
      removeClass: function (l) {
        var p, h, m, v, x, y;
        return H(l)
          ? this.each(function (I) {
              f(this).removeClass(l.call(this, I, Vn(this)));
            })
          : arguments.length
          ? ((p = Cs(l)),
            p.length
              ? this.each(function () {
                  if (
                    ((m = Vn(this)),
                    (h = this.nodeType === 1 && " " + Rn(m) + " "),
                    h)
                  ) {
                    for (x = 0; x < p.length; x++)
                      for (v = p[x]; h.indexOf(" " + v + " ") > -1; )
                        h = h.replace(" " + v + " ", " ");
                    (y = Rn(h)), m !== y && this.setAttribute("class", y);
                  }
                })
              : this)
          : this.attr("class", "");
      },
      toggleClass: function (l, p) {
        var h,
          m,
          v,
          x,
          y = typeof l,
          I = y === "string" || Array.isArray(l);
        return H(l)
          ? this.each(function (P) {
              f(this).toggleClass(l.call(this, P, Vn(this), p), p);
            })
          : typeof p == "boolean" && I
          ? p
            ? this.addClass(l)
            : this.removeClass(l)
          : ((h = Cs(l)),
            this.each(function () {
              if (I)
                for (x = f(this), v = 0; v < h.length; v++)
                  (m = h[v]), x.hasClass(m) ? x.removeClass(m) : x.addClass(m);
              else
                (l === void 0 || y === "boolean") &&
                  ((m = Vn(this)),
                  m && we.set(this, "__className__", m),
                  this.setAttribute &&
                    this.setAttribute(
                      "class",
                      m || l === !1 ? "" : we.get(this, "__className__") || ""
                    ));
            }));
      },
      hasClass: function (l) {
        var p,
          h,
          m = 0;
        for (p = " " + l + " "; (h = this[m++]); )
          if (h.nodeType === 1 && (" " + Rn(Vn(h)) + " ").indexOf(p) > -1)
            return !0;
        return !1;
      },
    });
    var qh = /\r/g;
    f.fn.extend({
      val: function (l) {
        var p,
          h,
          m,
          v = this[0];
        return arguments.length
          ? ((m = H(l)),
            this.each(function (x) {
              var y;
              this.nodeType === 1 &&
                (m ? (y = l.call(this, x, f(this).val())) : (y = l),
                y == null
                  ? (y = "")
                  : typeof y == "number"
                  ? (y += "")
                  : Array.isArray(y) &&
                    (y = f.map(y, function (I) {
                      return I == null ? "" : I + "";
                    })),
                (p =
                  f.valHooks[this.type] ||
                  f.valHooks[this.nodeName.toLowerCase()]),
                (!p || !("set" in p) || p.set(this, y, "value") === void 0) &&
                  (this.value = y));
            }))
          : v
          ? ((p = f.valHooks[v.type] || f.valHooks[v.nodeName.toLowerCase()]),
            p && "get" in p && (h = p.get(v, "value")) !== void 0
              ? h
              : ((h = v.value),
                typeof h == "string" ? h.replace(qh, "") : h ?? ""))
          : void 0;
      },
    }),
      f.extend({
        valHooks: {
          option: {
            get: function (l) {
              var p = f.find.attr(l, "value");
              return p ?? Rn(f.text(l));
            },
          },
          select: {
            get: function (l) {
              var p,
                h,
                m,
                v = l.options,
                x = l.selectedIndex,
                y = l.type === "select-one",
                I = y ? null : [],
                P = y ? x + 1 : v.length;
              for (x < 0 ? (m = P) : (m = y ? x : 0); m < P; m++)
                if (
                  ((h = v[m]),
                  (h.selected || m === x) &&
                    !h.disabled &&
                    (!h.parentNode.disabled || !Qe(h.parentNode, "optgroup")))
                ) {
                  if (((p = f(h).val()), y)) return p;
                  I.push(p);
                }
              return I;
            },
            set: function (l, p) {
              for (
                var h, m, v = l.options, x = f.makeArray(p), y = v.length;
                y--;

              )
                (m = v[y]),
                  (m.selected = f.inArray(f.valHooks.option.get(m), x) > -1) &&
                    (h = !0);
              return h || (l.selectedIndex = -1), x;
            },
          },
        },
      }),
      f.each(["radio", "checkbox"], function () {
        (f.valHooks[this] = {
          set: function (l, p) {
            if (Array.isArray(p))
              return (l.checked = f.inArray(f(l).val(), p) > -1);
          },
        }),
          L.checkOn ||
            (f.valHooks[this].get = function (l) {
              return l.getAttribute("value") === null ? "on" : l.value;
            });
      });
    var Gr = r.location,
      Xc = { guid: Date.now() },
      ws = /\?/;
    f.parseXML = function (l) {
      var p, h;
      if (!l || typeof l != "string") return null;
      try {
        p = new r.DOMParser().parseFromString(l, "text/xml");
      } catch {}
      return (
        (h = p && p.getElementsByTagName("parsererror")[0]),
        (!p || h) &&
          f.error(
            "Invalid XML: " +
              (h
                ? f.map(h.childNodes, function (m) {
                    return m.textContent;
                  }).join(`
`)
                : l)
          ),
        p
      );
    };
    var Jc = /^(?:focusinfocus|focusoutblur)$/,
      ed = function (l) {
        l.stopPropagation();
      };
    f.extend(f.event, {
      trigger: function (l, p, h, m) {
        var v,
          x,
          y,
          I,
          P,
          N,
          q,
          Z,
          W = [h || j],
          ne = k.call(l, "type") ? l.type : l,
          Re = k.call(l, "namespace") ? l.namespace.split(".") : [];
        if (
          ((x = Z = y = h = h || j),
          !(h.nodeType === 3 || h.nodeType === 8) &&
            !Jc.test(ne + f.event.triggered) &&
            (ne.indexOf(".") > -1 &&
              ((Re = ne.split(".")), (ne = Re.shift()), Re.sort()),
            (P = ne.indexOf(":") < 0 && "on" + ne),
            (l = l[f.expando] ? l : new f.Event(ne, typeof l == "object" && l)),
            (l.isTrigger = m ? 2 : 3),
            (l.namespace = Re.join(".")),
            (l.rnamespace = l.namespace
              ? new RegExp("(^|\\.)" + Re.join("\\.(?:.*\\.|)") + "(\\.|$)")
              : null),
            (l.result = void 0),
            l.target || (l.target = h),
            (p = p == null ? [l] : f.makeArray(p, [l])),
            (q = f.event.special[ne] || {}),
            !(!m && q.trigger && q.trigger.apply(h, p) === !1)))
        ) {
          if (!m && !q.noBubble && !U(h)) {
            for (
              I = q.delegateType || ne, Jc.test(I + ne) || (x = x.parentNode);
              x;
              x = x.parentNode
            )
              W.push(x), (y = x);
            y === (h.ownerDocument || j) &&
              W.push(y.defaultView || y.parentWindow || r);
          }
          for (v = 0; (x = W[v++]) && !l.isPropagationStopped(); )
            (Z = x),
              (l.type = v > 1 ? I : q.bindType || ne),
              (N =
                (we.get(x, "events") || Object.create(null))[l.type] &&
                we.get(x, "handle")),
              N && N.apply(x, p),
              (N = P && x[P]),
              N &&
                N.apply &&
                Hr(x) &&
                ((l.result = N.apply(x, p)),
                l.result === !1 && l.preventDefault());
          return (
            (l.type = ne),
            !m &&
              !l.isDefaultPrevented() &&
              (!q._default || q._default.apply(W.pop(), p) === !1) &&
              Hr(h) &&
              P &&
              H(h[ne]) &&
              !U(h) &&
              ((y = h[P]),
              y && (h[P] = null),
              (f.event.triggered = ne),
              l.isPropagationStopped() && Z.addEventListener(ne, ed),
              h[ne](),
              l.isPropagationStopped() && Z.removeEventListener(ne, ed),
              (f.event.triggered = void 0),
              y && (h[P] = y)),
            l.result
          );
        }
      },
      simulate: function (l, p, h) {
        var m = f.extend(new f.Event(), h, { type: l, isSimulated: !0 });
        f.event.trigger(m, null, p);
      },
    }),
      f.fn.extend({
        trigger: function (l, p) {
          return this.each(function () {
            f.event.trigger(l, p, this);
          });
        },
        triggerHandler: function (l, p) {
          var h = this[0];
          if (h) return f.event.trigger(l, p, h, !0);
        },
      });
    var Kh = /\[\]$/,
      td = /\r?\n/g,
      Qh = /^(?:submit|button|image|reset|file)$/i,
      Zh = /^(?:input|select|textarea|keygen)/i;
    function Ds(l, p, h, m) {
      var v;
      if (Array.isArray(p))
        f.each(p, function (x, y) {
          h || Kh.test(l)
            ? m(l, y)
            : Ds(
                l + "[" + (typeof y == "object" && y != null ? x : "") + "]",
                y,
                h,
                m
              );
        });
      else if (!h && Ce(p) === "object")
        for (v in p) Ds(l + "[" + v + "]", p[v], h, m);
      else m(l, p);
    }
    (f.param = function (l, p) {
      var h,
        m = [],
        v = function (x, y) {
          var I = H(y) ? y() : y;
          m[m.length] =
            encodeURIComponent(x) + "=" + encodeURIComponent(I ?? "");
        };
      if (l == null) return "";
      if (Array.isArray(l) || (l.jquery && !f.isPlainObject(l)))
        f.each(l, function () {
          v(this.name, this.value);
        });
      else for (h in l) Ds(h, l[h], p, v);
      return m.join("&");
    }),
      f.fn.extend({
        serialize: function () {
          return f.param(this.serializeArray());
        },
        serializeArray: function () {
          return this.map(function () {
            var l = f.prop(this, "elements");
            return l ? f.makeArray(l) : this;
          })
            .filter(function () {
              var l = this.type;
              return (
                this.name &&
                !f(this).is(":disabled") &&
                Zh.test(this.nodeName) &&
                !Qh.test(l) &&
                (this.checked || !Ur.test(l))
              );
            })
            .map(function (l, p) {
              var h = f(this).val();
              return h == null
                ? null
                : Array.isArray(h)
                ? f.map(h, function (m) {
                    return {
                      name: p.name,
                      value: m.replace(
                        td,
                        `\r
`
                      ),
                    };
                  })
                : {
                    name: p.name,
                    value: h.replace(
                      td,
                      `\r
`
                    ),
                  };
            })
            .get();
        },
      });
    var Xh = /%20/g,
      Jh = /#.*$/,
      em = /([?&])_=[^&]*/,
      tm = /^(.*?):[ \t]*([^\r\n]*)$/gm,
      im = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      nm = /^(?:GET|HEAD)$/,
      rm = /^\/\//,
      id = {},
      Ss = {},
      nd = "*/".concat("*"),
      Ms = j.createElement("a");
    Ms.href = Gr.href;
    function rd(l) {
      return function (p, h) {
        typeof p != "string" && ((h = p), (p = "*"));
        var m,
          v = 0,
          x = p.toLowerCase().match(Wi) || [];
        if (H(h))
          for (; (m = x[v++]); )
            m[0] === "+"
              ? ((m = m.slice(1) || "*"), (l[m] = l[m] || []).unshift(h))
              : (l[m] = l[m] || []).push(h);
      };
    }
    function od(l, p, h, m) {
      var v = {},
        x = l === Ss;
      function y(I) {
        var P;
        return (
          (v[I] = !0),
          f.each(l[I] || [], function (N, q) {
            var Z = q(p, h, m);
            if (typeof Z == "string" && !x && !v[Z])
              return p.dataTypes.unshift(Z), y(Z), !1;
            if (x) return !(P = Z);
          }),
          P
        );
      }
      return y(p.dataTypes[0]) || (!v["*"] && y("*"));
    }
    function Os(l, p) {
      var h,
        m,
        v = f.ajaxSettings.flatOptions || {};
      for (h in p) p[h] !== void 0 && ((v[h] ? l : m || (m = {}))[h] = p[h]);
      return m && f.extend(!0, l, m), l;
    }
    function om(l, p, h) {
      for (var m, v, x, y, I = l.contents, P = l.dataTypes; P[0] === "*"; )
        P.shift(),
          m === void 0 &&
            (m = l.mimeType || p.getResponseHeader("Content-Type"));
      if (m) {
        for (v in I)
          if (I[v] && I[v].test(m)) {
            P.unshift(v);
            break;
          }
      }
      if (P[0] in h) x = P[0];
      else {
        for (v in h) {
          if (!P[0] || l.converters[v + " " + P[0]]) {
            x = v;
            break;
          }
          y || (y = v);
        }
        x = x || y;
      }
      if (x) return x !== P[0] && P.unshift(x), h[x];
    }
    function am(l, p, h, m) {
      var v,
        x,
        y,
        I,
        P,
        N = {},
        q = l.dataTypes.slice();
      if (q[1]) for (y in l.converters) N[y.toLowerCase()] = l.converters[y];
      for (x = q.shift(); x; )
        if (
          (l.responseFields[x] && (h[l.responseFields[x]] = p),
          !P && m && l.dataFilter && (p = l.dataFilter(p, l.dataType)),
          (P = x),
          (x = q.shift()),
          x)
        ) {
          if (x === "*") x = P;
          else if (P !== "*" && P !== x) {
            if (((y = N[P + " " + x] || N["* " + x]), !y)) {
              for (v in N)
                if (
                  ((I = v.split(" ")),
                  I[1] === x && ((y = N[P + " " + I[0]] || N["* " + I[0]]), y))
                ) {
                  y === !0
                    ? (y = N[v])
                    : N[v] !== !0 && ((x = I[0]), q.unshift(I[1]));
                  break;
                }
            }
            if (y !== !0)
              if (y && l.throws) p = y(p);
              else
                try {
                  p = y(p);
                } catch (Z) {
                  return {
                    state: "parsererror",
                    error: y ? Z : "No conversion from " + P + " to " + x,
                  };
                }
          }
        }
      return { state: "success", data: p };
    }
    f.extend({
      active: 0,
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: Gr.href,
        type: "GET",
        isLocal: im.test(Gr.protocol),
        global: !0,
        processData: !0,
        async: !0,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        accepts: {
          "*": nd,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript",
        },
        contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON",
        },
        converters: {
          "* text": String,
          "text html": !0,
          "text json": JSON.parse,
          "text xml": f.parseXML,
        },
        flatOptions: { url: !0, context: !0 },
      },
      ajaxSetup: function (l, p) {
        return p ? Os(Os(l, f.ajaxSettings), p) : Os(f.ajaxSettings, l);
      },
      ajaxPrefilter: rd(id),
      ajaxTransport: rd(Ss),
      ajax: function (l, p) {
        typeof l == "object" && ((p = l), (l = void 0)), (p = p || {});
        var h,
          m,
          v,
          x,
          y,
          I,
          P,
          N,
          q,
          Z,
          W = f.ajaxSetup({}, p),
          ne = W.context || W,
          Re = W.context && (ne.nodeType || ne.jquery) ? f(ne) : f.event,
          et = f.Deferred(),
          He = f.Callbacks("once memory"),
          jt = W.statusCode || {},
          Vt = {},
          Gi = {},
          Yi = "canceled",
          Ye = {
            readyState: 0,
            getResponseHeader: function (nt) {
              var Ct;
              if (P) {
                if (!x)
                  for (x = {}; (Ct = tm.exec(v)); )
                    x[Ct[1].toLowerCase() + " "] = (
                      x[Ct[1].toLowerCase() + " "] || []
                    ).concat(Ct[2]);
                Ct = x[nt.toLowerCase() + " "];
              }
              return Ct == null ? null : Ct.join(", ");
            },
            getAllResponseHeaders: function () {
              return P ? v : null;
            },
            setRequestHeader: function (nt, Ct) {
              return (
                P == null &&
                  ((nt = Gi[nt.toLowerCase()] = Gi[nt.toLowerCase()] || nt),
                  (Vt[nt] = Ct)),
                this
              );
            },
            overrideMimeType: function (nt) {
              return P == null && (W.mimeType = nt), this;
            },
            statusCode: function (nt) {
              var Ct;
              if (nt)
                if (P) Ye.always(nt[Ye.status]);
                else for (Ct in nt) jt[Ct] = [jt[Ct], nt[Ct]];
              return this;
            },
            abort: function (nt) {
              var Ct = nt || Yi;
              return h && h.abort(Ct), Nn(0, Ct), this;
            },
          };
        if (
          (et.promise(Ye),
          (W.url = ((l || W.url || Gr.href) + "").replace(
            rm,
            Gr.protocol + "//"
          )),
          (W.type = p.method || p.type || W.method || W.type),
          (W.dataTypes = (W.dataType || "*").toLowerCase().match(Wi) || [""]),
          W.crossDomain == null)
        ) {
          I = j.createElement("a");
          try {
            (I.href = W.url),
              (I.href = I.href),
              (W.crossDomain =
                Ms.protocol + "//" + Ms.host != I.protocol + "//" + I.host);
          } catch {
            W.crossDomain = !0;
          }
        }
        if (
          (W.data &&
            W.processData &&
            typeof W.data != "string" &&
            (W.data = f.param(W.data, W.traditional)),
          od(id, W, p, Ye),
          P)
        )
          return Ye;
        (N = f.event && W.global),
          N && f.active++ === 0 && f.event.trigger("ajaxStart"),
          (W.type = W.type.toUpperCase()),
          (W.hasContent = !nm.test(W.type)),
          (m = W.url.replace(Jh, "")),
          W.hasContent
            ? W.data &&
              W.processData &&
              (W.contentType || "").indexOf(
                "application/x-www-form-urlencoded"
              ) === 0 &&
              (W.data = W.data.replace(Xh, "+"))
            : ((Z = W.url.slice(m.length)),
              W.data &&
                (W.processData || typeof W.data == "string") &&
                ((m += (ws.test(m) ? "&" : "?") + W.data), delete W.data),
              W.cache === !1 &&
                ((m = m.replace(em, "$1")),
                (Z = (ws.test(m) ? "&" : "?") + "_=" + Xc.guid++ + Z)),
              (W.url = m + Z)),
          W.ifModified &&
            (f.lastModified[m] &&
              Ye.setRequestHeader("If-Modified-Since", f.lastModified[m]),
            f.etag[m] && Ye.setRequestHeader("If-None-Match", f.etag[m])),
          ((W.data && W.hasContent && W.contentType !== !1) || p.contentType) &&
            Ye.setRequestHeader("Content-Type", W.contentType),
          Ye.setRequestHeader(
            "Accept",
            W.dataTypes[0] && W.accepts[W.dataTypes[0]]
              ? W.accepts[W.dataTypes[0]] +
                  (W.dataTypes[0] !== "*" ? ", " + nd + "; q=0.01" : "")
              : W.accepts["*"]
          );
        for (q in W.headers) Ye.setRequestHeader(q, W.headers[q]);
        if (W.beforeSend && (W.beforeSend.call(ne, Ye, W) === !1 || P))
          return Ye.abort();
        if (
          ((Yi = "abort"),
          He.add(W.complete),
          Ye.done(W.success),
          Ye.fail(W.error),
          (h = od(Ss, W, p, Ye)),
          !h)
        )
          Nn(-1, "No Transport");
        else {
          if (((Ye.readyState = 1), N && Re.trigger("ajaxSend", [Ye, W]), P))
            return Ye;
          W.async &&
            W.timeout > 0 &&
            (y = r.setTimeout(function () {
              Ye.abort("timeout");
            }, W.timeout));
          try {
            (P = !1), h.send(Vt, Nn);
          } catch (nt) {
            if (P) throw nt;
            Nn(-1, nt);
          }
        }
        function Nn(nt, Ct, qr, ks) {
          var qi,
            Kr,
            Ki,
            vn,
            xn,
            yi = Ct;
          P ||
            ((P = !0),
            y && r.clearTimeout(y),
            (h = void 0),
            (v = ks || ""),
            (Ye.readyState = nt > 0 ? 4 : 0),
            (qi = (nt >= 200 && nt < 300) || nt === 304),
            qr && (vn = om(W, Ye, qr)),
            !qi &&
              f.inArray("script", W.dataTypes) > -1 &&
              f.inArray("json", W.dataTypes) < 0 &&
              (W.converters["text script"] = function () {}),
            (vn = am(W, vn, Ye, qi)),
            qi
              ? (W.ifModified &&
                  ((xn = Ye.getResponseHeader("Last-Modified")),
                  xn && (f.lastModified[m] = xn),
                  (xn = Ye.getResponseHeader("etag")),
                  xn && (f.etag[m] = xn)),
                nt === 204 || W.type === "HEAD"
                  ? (yi = "nocontent")
                  : nt === 304
                  ? (yi = "notmodified")
                  : ((yi = vn.state),
                    (Kr = vn.data),
                    (Ki = vn.error),
                    (qi = !Ki)))
              : ((Ki = yi),
                (nt || !yi) && ((yi = "error"), nt < 0 && (nt = 0))),
            (Ye.status = nt),
            (Ye.statusText = (Ct || yi) + ""),
            qi
              ? et.resolveWith(ne, [Kr, yi, Ye])
              : et.rejectWith(ne, [Ye, yi, Ki]),
            Ye.statusCode(jt),
            (jt = void 0),
            N &&
              Re.trigger(qi ? "ajaxSuccess" : "ajaxError", [
                Ye,
                W,
                qi ? Kr : Ki,
              ]),
            He.fireWith(ne, [Ye, yi]),
            N &&
              (Re.trigger("ajaxComplete", [Ye, W]),
              --f.active || f.event.trigger("ajaxStop")));
        }
        return Ye;
      },
      getJSON: function (l, p, h) {
        return f.get(l, p, h, "json");
      },
      getScript: function (l, p) {
        return f.get(l, void 0, p, "script");
      },
    }),
      f.each(["get", "post"], function (l, p) {
        f[p] = function (h, m, v, x) {
          return (
            H(m) && ((x = x || v), (v = m), (m = void 0)),
            f.ajax(
              f.extend(
                { url: h, type: p, dataType: x, data: m, success: v },
                f.isPlainObject(h) && h
              )
            )
          );
        };
      }),
      f.ajaxPrefilter(function (l) {
        var p;
        for (p in l.headers)
          p.toLowerCase() === "content-type" &&
            (l.contentType = l.headers[p] || "");
      }),
      (f._evalUrl = function (l, p, h) {
        return f.ajax({
          url: l,
          type: "GET",
          dataType: "script",
          cache: !0,
          async: !1,
          global: !1,
          converters: { "text script": function () {} },
          dataFilter: function (m) {
            f.globalEval(m, p, h);
          },
        });
      }),
      f.fn.extend({
        wrapAll: function (l) {
          var p;
          return (
            this[0] &&
              (H(l) && (l = l.call(this[0])),
              (p = f(l, this[0].ownerDocument).eq(0).clone(!0)),
              this[0].parentNode && p.insertBefore(this[0]),
              p
                .map(function () {
                  for (var h = this; h.firstElementChild; )
                    h = h.firstElementChild;
                  return h;
                })
                .append(this)),
            this
          );
        },
        wrapInner: function (l) {
          return H(l)
            ? this.each(function (p) {
                f(this).wrapInner(l.call(this, p));
              })
            : this.each(function () {
                var p = f(this),
                  h = p.contents();
                h.length ? h.wrapAll(l) : p.append(l);
              });
        },
        wrap: function (l) {
          var p = H(l);
          return this.each(function (h) {
            f(this).wrapAll(p ? l.call(this, h) : l);
          });
        },
        unwrap: function (l) {
          return (
            this.parent(l)
              .not("body")
              .each(function () {
                f(this).replaceWith(this.childNodes);
              }),
            this
          );
        },
      }),
      (f.expr.pseudos.hidden = function (l) {
        return !f.expr.pseudos.visible(l);
      }),
      (f.expr.pseudos.visible = function (l) {
        return !!(l.offsetWidth || l.offsetHeight || l.getClientRects().length);
      }),
      (f.ajaxSettings.xhr = function () {
        try {
          return new r.XMLHttpRequest();
        } catch {}
      });
    var sm = { 0: 200, 1223: 204 },
      Yr = f.ajaxSettings.xhr();
    (L.cors = !!Yr && "withCredentials" in Yr),
      (L.ajax = Yr = !!Yr),
      f.ajaxTransport(function (l) {
        var p, h;
        if (L.cors || (Yr && !l.crossDomain))
          return {
            send: function (m, v) {
              var x,
                y = l.xhr();
              if (
                (y.open(l.type, l.url, l.async, l.username, l.password),
                l.xhrFields)
              )
                for (x in l.xhrFields) y[x] = l.xhrFields[x];
              l.mimeType &&
                y.overrideMimeType &&
                y.overrideMimeType(l.mimeType),
                !l.crossDomain &&
                  !m["X-Requested-With"] &&
                  (m["X-Requested-With"] = "XMLHttpRequest");
              for (x in m) y.setRequestHeader(x, m[x]);
              (p = function (I) {
                return function () {
                  p &&
                    ((p =
                      h =
                      y.onload =
                      y.onerror =
                      y.onabort =
                      y.ontimeout =
                      y.onreadystatechange =
                        null),
                    I === "abort"
                      ? y.abort()
                      : I === "error"
                      ? typeof y.status != "number"
                        ? v(0, "error")
                        : v(y.status, y.statusText)
                      : v(
                          sm[y.status] || y.status,
                          y.statusText,
                          (y.responseType || "text") !== "text" ||
                            typeof y.responseText != "string"
                            ? { binary: y.response }
                            : { text: y.responseText },
                          y.getAllResponseHeaders()
                        ));
                };
              }),
                (y.onload = p()),
                (h = y.onerror = y.ontimeout = p("error")),
                y.onabort !== void 0
                  ? (y.onabort = h)
                  : (y.onreadystatechange = function () {
                      y.readyState === 4 &&
                        r.setTimeout(function () {
                          p && h();
                        });
                    }),
                (p = p("abort"));
              try {
                y.send((l.hasContent && l.data) || null);
              } catch (I) {
                if (p) throw I;
              }
            },
            abort: function () {
              p && p();
            },
          };
      }),
      f.ajaxPrefilter(function (l) {
        l.crossDomain && (l.contents.script = !1);
      }),
      f.ajaxSetup({
        accepts: {
          script:
            "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
        },
        contents: { script: /\b(?:java|ecma)script\b/ },
        converters: {
          "text script": function (l) {
            return f.globalEval(l), l;
          },
        },
      }),
      f.ajaxPrefilter("script", function (l) {
        l.cache === void 0 && (l.cache = !1), l.crossDomain && (l.type = "GET");
      }),
      f.ajaxTransport("script", function (l) {
        if (l.crossDomain || l.scriptAttrs) {
          var p, h;
          return {
            send: function (m, v) {
              (p = f("<script>")
                .attr(l.scriptAttrs || {})
                .prop({ charset: l.scriptCharset, src: l.url })
                .on(
                  "load error",
                  (h = function (x) {
                    p.remove(),
                      (h = null),
                      x && v(x.type === "error" ? 404 : 200, x.type);
                  })
                )),
                j.head.appendChild(p[0]);
            },
            abort: function () {
              h && h();
            },
          };
        }
      });
    var ad = [],
      Ts = /(=)\?(?=&|$)|\?\?/;
    f.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function () {
        var l = ad.pop() || f.expando + "_" + Xc.guid++;
        return (this[l] = !0), l;
      },
    }),
      f.ajaxPrefilter("json jsonp", function (l, p, h) {
        var m,
          v,
          x,
          y =
            l.jsonp !== !1 &&
            (Ts.test(l.url)
              ? "url"
              : typeof l.data == "string" &&
                (l.contentType || "").indexOf(
                  "application/x-www-form-urlencoded"
                ) === 0 &&
                Ts.test(l.data) &&
                "data");
        if (y || l.dataTypes[0] === "jsonp")
          return (
            (m = l.jsonpCallback =
              H(l.jsonpCallback) ? l.jsonpCallback() : l.jsonpCallback),
            y
              ? (l[y] = l[y].replace(Ts, "$1" + m))
              : l.jsonp !== !1 &&
                (l.url += (ws.test(l.url) ? "&" : "?") + l.jsonp + "=" + m),
            (l.converters["script json"] = function () {
              return x || f.error(m + " was not called"), x[0];
            }),
            (l.dataTypes[0] = "json"),
            (v = r[m]),
            (r[m] = function () {
              x = arguments;
            }),
            h.always(function () {
              v === void 0 ? f(r).removeProp(m) : (r[m] = v),
                l[m] && ((l.jsonpCallback = p.jsonpCallback), ad.push(m)),
                x && H(v) && v(x[0]),
                (x = v = void 0);
            }),
            "script"
          );
      }),
      (L.createHTMLDocument = (function () {
        var l = j.implementation.createHTMLDocument("").body;
        return (
          (l.innerHTML = "<form></form><form></form>"),
          l.childNodes.length === 2
        );
      })()),
      (f.parseHTML = function (l, p, h) {
        if (typeof l != "string") return [];
        typeof p == "boolean" && ((h = p), (p = !1));
        var m, v, x;
        return (
          p ||
            (L.createHTMLDocument
              ? ((p = j.implementation.createHTMLDocument("")),
                (m = p.createElement("base")),
                (m.href = j.location.href),
                p.head.appendChild(m))
              : (p = j)),
          (v = Mc.exec(l)),
          (x = !h && []),
          v
            ? [p.createElement(v[1])]
            : ((v = Vc([l], p, x)),
              x && x.length && f(x).remove(),
              f.merge([], v.childNodes))
        );
      }),
      (f.fn.load = function (l, p, h) {
        var m,
          v,
          x,
          y = this,
          I = l.indexOf(" ");
        return (
          I > -1 && ((m = Rn(l.slice(I))), (l = l.slice(0, I))),
          H(p)
            ? ((h = p), (p = void 0))
            : p && typeof p == "object" && (v = "POST"),
          y.length > 0 &&
            f
              .ajax({ url: l, type: v || "GET", dataType: "html", data: p })
              .done(function (P) {
                (x = arguments),
                  y.html(m ? f("<div>").append(f.parseHTML(P)).find(m) : P);
              })
              .always(
                h &&
                  function (P, N) {
                    y.each(function () {
                      h.apply(this, x || [P.responseText, N, P]);
                    });
                  }
              ),
          this
        );
      }),
      (f.expr.pseudos.animated = function (l) {
        return f.grep(f.timers, function (p) {
          return l === p.elem;
        }).length;
      }),
      (f.offset = {
        setOffset: function (l, p, h) {
          var m,
            v,
            x,
            y,
            I,
            P,
            N,
            q = f.css(l, "position"),
            Z = f(l),
            W = {};
          q === "static" && (l.style.position = "relative"),
            (I = Z.offset()),
            (x = f.css(l, "top")),
            (P = f.css(l, "left")),
            (N =
              (q === "absolute" || q === "fixed") &&
              (x + P).indexOf("auto") > -1),
            N
              ? ((m = Z.position()), (y = m.top), (v = m.left))
              : ((y = parseFloat(x) || 0), (v = parseFloat(P) || 0)),
            H(p) && (p = p.call(l, h, f.extend({}, I))),
            p.top != null && (W.top = p.top - I.top + y),
            p.left != null && (W.left = p.left - I.left + v),
            "using" in p ? p.using.call(l, W) : Z.css(W);
        },
      }),
      f.fn.extend({
        offset: function (l) {
          if (arguments.length)
            return l === void 0
              ? this
              : this.each(function (v) {
                  f.offset.setOffset(this, l, v);
                });
          var p,
            h,
            m = this[0];
          if (m)
            return m.getClientRects().length
              ? ((p = m.getBoundingClientRect()),
                (h = m.ownerDocument.defaultView),
                { top: p.top + h.pageYOffset, left: p.left + h.pageXOffset })
              : { top: 0, left: 0 };
        },
        position: function () {
          if (this[0]) {
            var l,
              p,
              h,
              m = this[0],
              v = { top: 0, left: 0 };
            if (f.css(m, "position") === "fixed") p = m.getBoundingClientRect();
            else {
              for (
                p = this.offset(),
                  h = m.ownerDocument,
                  l = m.offsetParent || h.documentElement;
                l &&
                (l === h.body || l === h.documentElement) &&
                f.css(l, "position") === "static";

              )
                l = l.parentNode;
              l &&
                l !== m &&
                l.nodeType === 1 &&
                ((v = f(l).offset()),
                (v.top += f.css(l, "borderTopWidth", !0)),
                (v.left += f.css(l, "borderLeftWidth", !0)));
            }
            return {
              top: p.top - v.top - f.css(m, "marginTop", !0),
              left: p.left - v.left - f.css(m, "marginLeft", !0),
            };
          }
        },
        offsetParent: function () {
          return this.map(function () {
            for (
              var l = this.offsetParent;
              l && f.css(l, "position") === "static";

            )
              l = l.offsetParent;
            return l || Fn;
          });
        },
      }),
      f.each(
        { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
        function (l, p) {
          var h = p === "pageYOffset";
          f.fn[l] = function (m) {
            return on(
              this,
              function (v, x, y) {
                var I;
                if (
                  (U(v) ? (I = v) : v.nodeType === 9 && (I = v.defaultView),
                  y === void 0)
                )
                  return I ? I[p] : v[x];
                I
                  ? I.scrollTo(h ? I.pageXOffset : y, h ? y : I.pageYOffset)
                  : (v[x] = y);
              },
              l,
              m,
              arguments.length
            );
          };
        }
      ),
      f.each(["top", "left"], function (l, p) {
        f.cssHooks[p] = zc(L.pixelPosition, function (h, m) {
          if (m)
            return (m = Wr(h, p)), _s.test(m) ? f(h).position()[p] + "px" : m;
        });
      }),
      f.each({ Height: "height", Width: "width" }, function (l, p) {
        f.each(
          { padding: "inner" + l, content: p, "": "outer" + l },
          function (h, m) {
            f.fn[m] = function (v, x) {
              var y = arguments.length && (h || typeof v != "boolean"),
                I = h || (v === !0 || x === !0 ? "margin" : "border");
              return on(
                this,
                function (P, N, q) {
                  var Z;
                  return U(P)
                    ? m.indexOf("outer") === 0
                      ? P["inner" + l]
                      : P.document.documentElement["client" + l]
                    : P.nodeType === 9
                    ? ((Z = P.documentElement),
                      Math.max(
                        P.body["scroll" + l],
                        Z["scroll" + l],
                        P.body["offset" + l],
                        Z["offset" + l],
                        Z["client" + l]
                      ))
                    : q === void 0
                    ? f.css(P, N, I)
                    : f.style(P, N, q, I);
                },
                p,
                y ? v : void 0,
                y
              );
            };
          }
        );
      }),
      f.each(
        [
          "ajaxStart",
          "ajaxStop",
          "ajaxComplete",
          "ajaxError",
          "ajaxSuccess",
          "ajaxSend",
        ],
        function (l, p) {
          f.fn[p] = function (h) {
            return this.on(p, h);
          };
        }
      ),
      f.fn.extend({
        bind: function (l, p, h) {
          return this.on(l, null, p, h);
        },
        unbind: function (l, p) {
          return this.off(l, null, p);
        },
        delegate: function (l, p, h, m) {
          return this.on(p, l, h, m);
        },
        undelegate: function (l, p, h) {
          return arguments.length === 1
            ? this.off(l, "**")
            : this.off(p, l || "**", h);
        },
        hover: function (l, p) {
          return this.on("mouseenter", l).on("mouseleave", p || l);
        },
      }),
      f.each(
        "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(
          " "
        ),
        function (l, p) {
          f.fn[p] = function (h, m) {
            return arguments.length > 0
              ? this.on(p, null, h, m)
              : this.trigger(p);
          };
        }
      );
    var lm = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    (f.proxy = function (l, p) {
      var h, m, v;
      if ((typeof p == "string" && ((h = l[p]), (p = l), (l = h)), !!H(l)))
        return (
          (m = n.call(arguments, 2)),
          (v = function () {
            return l.apply(p || this, m.concat(n.call(arguments)));
          }),
          (v.guid = l.guid = l.guid || f.guid++),
          v
        );
    }),
      (f.holdReady = function (l) {
        l ? f.readyWait++ : f.ready(!0);
      }),
      (f.isArray = Array.isArray),
      (f.parseJSON = JSON.parse),
      (f.nodeName = Qe),
      (f.isFunction = H),
      (f.isWindow = U),
      (f.camelCase = $i),
      (f.type = Ce),
      (f.now = Date.now),
      (f.isNumeric = function (l) {
        var p = f.type(l);
        return (p === "number" || p === "string") && !isNaN(l - parseFloat(l));
      }),
      (f.trim = function (l) {
        return l == null ? "" : (l + "").replace(lm, "$1");
      }),
      typeof define == "function" &&
        define.amd &&
        define("jquery", [], function () {
          return f;
        });
    var cm = r.jQuery,
      dm = r.$;
    return (
      (f.noConflict = function (l) {
        return (
          r.$ === f && (r.$ = dm), l && r.jQuery === f && (r.jQuery = cm), f
        );
      }),
      typeof i > "u" && (r.jQuery = r.$ = f),
      f
    );
  });
});
var Jo = class r {
  constructor(i) {
    this.router = i;
  }
  logout() {
    localStorage.removeItem("token"),
      sessionStorage.clear(),
      this.router.navigate(["/login"]);
  }
  static ɵfac = function (e) {
    return new (e || r)(F(Lt));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-root"]],
    standalone: !0,
    features: [le],
    decls: 1,
    vars: 0,
    template: function (e, t) {
      e & 1 && R(0, "router-outlet");
    },
    dependencies: [xr],
  });
};
var Xd = (() => {
    class r {
      constructor(e, t) {
        (this._renderer = e),
          (this._elementRef = t),
          (this.onChange = (n) => {}),
          (this.onTouched = () => {});
      }
      setProperty(e, t) {
        this._renderer.setProperty(this._elementRef.nativeElement, e, t);
      }
      registerOnTouched(e) {
        this.onTouched = e;
      }
      registerOnChange(e) {
        this.onChange = e;
      }
      setDisabledState(e) {
        this.setProperty("disabled", e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Jt), F(Pe));
        };
      }
      static {
        this.ɵdir = ke({ type: r });
      }
    }
    return r;
  })(),
  il = (() => {
    class r extends Xd {
      static {
        this.ɵfac = (() => {
          let e;
          return function (n) {
            return (e || (e = pt(r)))(n || r);
          };
        })();
      }
      static {
        this.ɵdir = ke({ type: r, features: [ze] });
      }
    }
    return r;
  })(),
  Gn = new $e("");
var ym = { provide: Gn, useExisting: Gt(() => Mt), multi: !0 };
function Cm() {
  let r = Qs() ? Qs().getUserAgent() : "";
  return /android (\d+)/.test(r.toLowerCase());
}
var wm = new $e(""),
  Mt = (() => {
    class r extends Xd {
      constructor(e, t, n) {
        super(e, t),
          (this._compositionMode = n),
          (this._composing = !1),
          this._compositionMode == null && (this._compositionMode = !Cm());
      }
      writeValue(e) {
        let t = e ?? "";
        this.setProperty("value", t);
      }
      _handleInput(e) {
        (!this._compositionMode ||
          (this._compositionMode && !this._composing)) &&
          this.onChange(e);
      }
      _compositionStart() {
        this._composing = !0;
      }
      _compositionEnd(e) {
        (this._composing = !1), this._compositionMode && this.onChange(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Jt), F(Pe), F(wm, 8));
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["input", "formControlName", "", 3, "type", "checkbox"],
            ["textarea", "formControlName", ""],
            ["input", "formControl", "", 3, "type", "checkbox"],
            ["textarea", "formControl", ""],
            ["input", "ngModel", "", 3, "type", "checkbox"],
            ["textarea", "ngModel", ""],
            ["", "ngDefaultControl", ""],
          ],
          hostBindings: function (t, n) {
            t & 1 &&
              O("input", function (u) {
                return n._handleInput(u.target.value);
              })("blur", function () {
                return n.onTouched();
              })("compositionstart", function () {
                return n._compositionStart();
              })("compositionend", function (u) {
                return n._compositionEnd(u.target.value);
              });
          },
          features: [yt([ym]), ze],
        });
      }
    }
    return r;
  })();
function Mn(r) {
  return (
    r == null || ((typeof r == "string" || Array.isArray(r)) && r.length === 0)
  );
}
function Jd(r) {
  return r != null && typeof r.length == "number";
}
var Yn = new $e(""),
  da = new $e(""),
  Dm =
    /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
  Se = class {
    static min(i) {
      return Sm(i);
    }
    static max(i) {
      return Mm(i);
    }
    static required(i) {
      return ep(i);
    }
    static requiredTrue(i) {
      return Om(i);
    }
    static email(i) {
      return tp(i);
    }
    static minLength(i) {
      return Tm(i);
    }
    static maxLength(i) {
      return ip(i);
    }
    static pattern(i) {
      return km(i);
    }
    static nullValidator(i) {
      return ta(i);
    }
    static compose(i) {
      return lp(i);
    }
    static composeAsync(i) {
      return cp(i);
    }
  };
function Sm(r) {
  return (i) => {
    if (Mn(i.value) || Mn(r)) return null;
    let e = parseFloat(i.value);
    return !isNaN(e) && e < r ? { min: { min: r, actual: i.value } } : null;
  };
}
function Mm(r) {
  return (i) => {
    if (Mn(i.value) || Mn(r)) return null;
    let e = parseFloat(i.value);
    return !isNaN(e) && e > r ? { max: { max: r, actual: i.value } } : null;
  };
}
function ep(r) {
  return Mn(r.value) ? { required: !0 } : null;
}
function Om(r) {
  return r.value === !0 ? null : { required: !0 };
}
function tp(r) {
  return Mn(r.value) || Dm.test(r.value) ? null : { email: !0 };
}
function Tm(r) {
  return (i) =>
    Mn(i.value) || !Jd(i.value)
      ? null
      : i.value.length < r
      ? { minlength: { requiredLength: r, actualLength: i.value.length } }
      : null;
}
function ip(r) {
  return (i) =>
    Jd(i.value) && i.value.length > r
      ? { maxlength: { requiredLength: r, actualLength: i.value.length } }
      : null;
}
function km(r) {
  if (!r) return ta;
  let i, e;
  return (
    typeof r == "string"
      ? ((e = ""),
        r.charAt(0) !== "^" && (e += "^"),
        (e += r),
        r.charAt(r.length - 1) !== "$" && (e += "$"),
        (i = new RegExp(e)))
      : ((e = r.toString()), (i = r)),
    (t) => {
      if (Mn(t.value)) return null;
      let n = t.value;
      return i.test(n)
        ? null
        : { pattern: { requiredPattern: e, actualValue: n } };
    }
  );
}
function ta(r) {
  return null;
}
function np(r) {
  return r != null;
}
function rp(r) {
  return Pd(r) ? pd(r) : r;
}
function op(r) {
  let i = {};
  return (
    r.forEach((e) => {
      i = e != null ? ee(ee({}, i), e) : i;
    }),
    Object.keys(i).length === 0 ? null : i
  );
}
function ap(r, i) {
  return i.map((e) => e(r));
}
function Pm(r) {
  return !r.validate;
}
function sp(r) {
  return r.map((i) => (Pm(i) ? i : (e) => i.validate(e)));
}
function lp(r) {
  if (!r) return null;
  let i = r.filter(np);
  return i.length == 0
    ? null
    : function (e) {
        return op(ap(e, i));
      };
}
function nl(r) {
  return r != null ? lp(sp(r)) : null;
}
function cp(r) {
  if (!r) return null;
  let i = r.filter(np);
  return i.length == 0
    ? null
    : function (e) {
        let t = ap(e, i).map(rp);
        return hd(t).pipe(cn(op));
      };
}
function rl(r) {
  return r != null ? cp(sp(r)) : null;
}
function Wd(r, i) {
  return r === null ? [i] : Array.isArray(r) ? [...r, i] : [r, i];
}
function dp(r) {
  return r._rawValidators;
}
function pp(r) {
  return r._rawAsyncValidators;
}
function Js(r) {
  return r ? (Array.isArray(r) ? r : [r]) : [];
}
function ia(r, i) {
  return Array.isArray(r) ? r.includes(i) : r === i;
}
function $d(r, i) {
  let e = Js(i);
  return (
    Js(r).forEach((n) => {
      ia(e, n) || e.push(n);
    }),
    e
  );
}
function Gd(r, i) {
  return Js(i).filter((e) => !ia(r, e));
}
var na = class {
    constructor() {
      (this._rawValidators = []),
        (this._rawAsyncValidators = []),
        (this._onDestroyCallbacks = []);
    }
    get value() {
      return this.control ? this.control.value : null;
    }
    get valid() {
      return this.control ? this.control.valid : null;
    }
    get invalid() {
      return this.control ? this.control.invalid : null;
    }
    get pending() {
      return this.control ? this.control.pending : null;
    }
    get disabled() {
      return this.control ? this.control.disabled : null;
    }
    get enabled() {
      return this.control ? this.control.enabled : null;
    }
    get errors() {
      return this.control ? this.control.errors : null;
    }
    get pristine() {
      return this.control ? this.control.pristine : null;
    }
    get dirty() {
      return this.control ? this.control.dirty : null;
    }
    get touched() {
      return this.control ? this.control.touched : null;
    }
    get status() {
      return this.control ? this.control.status : null;
    }
    get untouched() {
      return this.control ? this.control.untouched : null;
    }
    get statusChanges() {
      return this.control ? this.control.statusChanges : null;
    }
    get valueChanges() {
      return this.control ? this.control.valueChanges : null;
    }
    get path() {
      return null;
    }
    _setValidators(i) {
      (this._rawValidators = i || []),
        (this._composedValidatorFn = nl(this._rawValidators));
    }
    _setAsyncValidators(i) {
      (this._rawAsyncValidators = i || []),
        (this._composedAsyncValidatorFn = rl(this._rawAsyncValidators));
    }
    get validator() {
      return this._composedValidatorFn || null;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn || null;
    }
    _registerOnDestroy(i) {
      this._onDestroyCallbacks.push(i);
    }
    _invokeOnDestroyCallbacks() {
      this._onDestroyCallbacks.forEach((i) => i()),
        (this._onDestroyCallbacks = []);
    }
    reset(i = void 0) {
      this.control && this.control.reset(i);
    }
    hasError(i, e) {
      return this.control ? this.control.hasError(i, e) : !1;
    }
    getError(i, e) {
      return this.control ? this.control.getError(i, e) : null;
    }
  },
  mn = class extends na {
    get formDirective() {
      return null;
    }
    get path() {
      return null;
    }
  },
  $n = class extends na {
    constructor() {
      super(...arguments),
        (this._parent = null),
        (this.name = null),
        (this.valueAccessor = null);
    }
  },
  ra = class {
    constructor(i) {
      this._cd = i;
    }
    get isTouched() {
      return this._cd?.control?._touched?.(), !!this._cd?.control?.touched;
    }
    get isUntouched() {
      return !!this._cd?.control?.untouched;
    }
    get isPristine() {
      return this._cd?.control?._pristine?.(), !!this._cd?.control?.pristine;
    }
    get isDirty() {
      return !!this._cd?.control?.dirty;
    }
    get isValid() {
      return this._cd?.control?._status?.(), !!this._cd?.control?.valid;
    }
    get isInvalid() {
      return !!this._cd?.control?.invalid;
    }
    get isPending() {
      return !!this._cd?.control?.pending;
    }
    get isSubmitted() {
      return this._cd?._submitted?.(), !!this._cd?.submitted;
    }
  },
  Em = {
    "[class.ng-untouched]": "isUntouched",
    "[class.ng-touched]": "isTouched",
    "[class.ng-pristine]": "isPristine",
    "[class.ng-dirty]": "isDirty",
    "[class.ng-valid]": "isValid",
    "[class.ng-invalid]": "isInvalid",
    "[class.ng-pending]": "isPending",
  },
  $C = Ne(ee({}, Em), { "[class.ng-submitted]": "isSubmitted" }),
  It = (() => {
    class r extends ra {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F($n, 2));
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["", "formControlName", ""],
            ["", "ngModel", ""],
            ["", "formControl", ""],
          ],
          hostVars: 14,
          hostBindings: function (t, n) {
            t & 2 &&
              X("ng-untouched", n.isUntouched)("ng-touched", n.isTouched)(
                "ng-pristine",
                n.isPristine
              )("ng-dirty", n.isDirty)("ng-valid", n.isValid)(
                "ng-invalid",
                n.isInvalid
              )("ng-pending", n.isPending);
          },
          features: [ze],
        });
      }
    }
    return r;
  })(),
  si = (() => {
    class r extends ra {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(mn, 10));
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["", "formGroupName", ""],
            ["", "formArrayName", ""],
            ["", "ngModelGroup", ""],
            ["", "formGroup", ""],
            ["form", 3, "ngNoForm", ""],
            ["", "ngForm", ""],
          ],
          hostVars: 16,
          hostBindings: function (t, n) {
            t & 2 &&
              X("ng-untouched", n.isUntouched)("ng-touched", n.isTouched)(
                "ng-pristine",
                n.isPristine
              )("ng-dirty", n.isDirty)("ng-valid", n.isValid)(
                "ng-invalid",
                n.isInvalid
              )("ng-pending", n.isPending)("ng-submitted", n.isSubmitted);
          },
          features: [ze],
        });
      }
    }
    return r;
  })();
var io = "VALID",
  ea = "INVALID",
  yr = "PENDING",
  no = "DISABLED",
  On = class {},
  oa = class extends On {
    constructor(i, e) {
      super(), (this.value = i), (this.source = e);
    }
  },
  oo = class extends On {
    constructor(i, e) {
      super(), (this.pristine = i), (this.source = e);
    }
  },
  ao = class extends On {
    constructor(i, e) {
      super(), (this.touched = i), (this.source = e);
    }
  },
  Cr = class extends On {
    constructor(i, e) {
      super(), (this.status = i), (this.source = e);
    }
  },
  el = class extends On {
    constructor(i) {
      super(), (this.source = i);
    }
  },
  tl = class extends On {
    constructor(i) {
      super(), (this.source = i);
    }
  };
function up(r) {
  return (pa(r) ? r.validators : r) || null;
}
function Im(r) {
  return Array.isArray(r) ? nl(r) : r || null;
}
function hp(r, i) {
  return (pa(i) ? i.asyncValidators : r) || null;
}
function Am(r) {
  return Array.isArray(r) ? rl(r) : r || null;
}
function pa(r) {
  return r != null && !Array.isArray(r) && typeof r == "object";
}
function Fm(r, i, e) {
  let t = r.controls;
  if (!(i ? Object.keys(t) : t).length) throw new fr(1e3, "");
  if (!t[e]) throw new fr(1001, "");
}
function Rm(r, i, e) {
  r._forEachChild((t, n) => {
    if (e[n] === void 0) throw new fr(1002, "");
  });
}
var aa = class {
    constructor(i, e) {
      (this._pendingDirty = !1),
        (this._hasOwnPendingAsyncValidator = null),
        (this._pendingTouched = !1),
        (this._onCollectionChange = () => {}),
        (this._parent = null),
        (this._status = Un(() => this.statusReactive())),
        (this.statusReactive = pe(void 0)),
        (this._pristine = Un(() => this.pristineReactive())),
        (this.pristineReactive = pe(!0)),
        (this._touched = Un(() => this.touchedReactive())),
        (this.touchedReactive = pe(!1)),
        (this._events = new Ee()),
        (this.events = this._events.asObservable()),
        (this._onDisabledChange = []),
        this._assignValidators(i),
        this._assignAsyncValidators(e);
    }
    get validator() {
      return this._composedValidatorFn;
    }
    set validator(i) {
      this._rawValidators = this._composedValidatorFn = i;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn;
    }
    set asyncValidator(i) {
      this._rawAsyncValidators = this._composedAsyncValidatorFn = i;
    }
    get parent() {
      return this._parent;
    }
    get status() {
      return Hi(this.statusReactive);
    }
    set status(i) {
      Hi(() => this.statusReactive.set(i));
    }
    get valid() {
      return this.status === io;
    }
    get invalid() {
      return this.status === ea;
    }
    get pending() {
      return this.status == yr;
    }
    get disabled() {
      return this.status === no;
    }
    get enabled() {
      return this.status !== no;
    }
    get pristine() {
      return Hi(this.pristineReactive);
    }
    set pristine(i) {
      Hi(() => this.pristineReactive.set(i));
    }
    get dirty() {
      return !this.pristine;
    }
    get touched() {
      return Hi(this.touchedReactive);
    }
    set touched(i) {
      Hi(() => this.touchedReactive.set(i));
    }
    get untouched() {
      return !this.touched;
    }
    get updateOn() {
      return this._updateOn
        ? this._updateOn
        : this.parent
        ? this.parent.updateOn
        : "change";
    }
    setValidators(i) {
      this._assignValidators(i);
    }
    setAsyncValidators(i) {
      this._assignAsyncValidators(i);
    }
    addValidators(i) {
      this.setValidators($d(i, this._rawValidators));
    }
    addAsyncValidators(i) {
      this.setAsyncValidators($d(i, this._rawAsyncValidators));
    }
    removeValidators(i) {
      this.setValidators(Gd(i, this._rawValidators));
    }
    removeAsyncValidators(i) {
      this.setAsyncValidators(Gd(i, this._rawAsyncValidators));
    }
    hasValidator(i) {
      return ia(this._rawValidators, i);
    }
    hasAsyncValidator(i) {
      return ia(this._rawAsyncValidators, i);
    }
    clearValidators() {
      this.validator = null;
    }
    clearAsyncValidators() {
      this.asyncValidator = null;
    }
    markAsTouched(i = {}) {
      let e = this.touched === !1;
      this.touched = !0;
      let t = i.sourceControl ?? this;
      this._parent &&
        !i.onlySelf &&
        this._parent.markAsTouched(Ne(ee({}, i), { sourceControl: t })),
        e && i.emitEvent !== !1 && this._events.next(new ao(!0, t));
    }
    markAllAsTouched(i = {}) {
      this.markAsTouched({
        onlySelf: !0,
        emitEvent: i.emitEvent,
        sourceControl: this,
      }),
        this._forEachChild((e) => e.markAllAsTouched(i));
    }
    markAsUntouched(i = {}) {
      let e = this.touched === !0;
      (this.touched = !1), (this._pendingTouched = !1);
      let t = i.sourceControl ?? this;
      this._forEachChild((n) => {
        n.markAsUntouched({
          onlySelf: !0,
          emitEvent: i.emitEvent,
          sourceControl: t,
        });
      }),
        this._parent && !i.onlySelf && this._parent._updateTouched(i, t),
        e && i.emitEvent !== !1 && this._events.next(new ao(!1, t));
    }
    markAsDirty(i = {}) {
      let e = this.pristine === !0;
      this.pristine = !1;
      let t = i.sourceControl ?? this;
      this._parent &&
        !i.onlySelf &&
        this._parent.markAsDirty(Ne(ee({}, i), { sourceControl: t })),
        e && i.emitEvent !== !1 && this._events.next(new oo(!1, t));
    }
    markAsPristine(i = {}) {
      let e = this.pristine === !1;
      (this.pristine = !0), (this._pendingDirty = !1);
      let t = i.sourceControl ?? this;
      this._forEachChild((n) => {
        n.markAsPristine({ onlySelf: !0, emitEvent: i.emitEvent });
      }),
        this._parent && !i.onlySelf && this._parent._updatePristine(i, t),
        e && i.emitEvent !== !1 && this._events.next(new oo(!0, t));
    }
    markAsPending(i = {}) {
      this.status = yr;
      let e = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new Cr(this.status, e)),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !i.onlySelf &&
          this._parent.markAsPending(Ne(ee({}, i), { sourceControl: e }));
    }
    disable(i = {}) {
      let e = this._parentMarkedDirty(i.onlySelf);
      (this.status = no),
        (this.errors = null),
        this._forEachChild((n) => {
          n.disable(Ne(ee({}, i), { onlySelf: !0 }));
        }),
        this._updateValue();
      let t = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new oa(this.value, t)),
        this._events.next(new Cr(this.status, t)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._updateAncestors(Ne(ee({}, i), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((n) => n(!0));
    }
    enable(i = {}) {
      let e = this._parentMarkedDirty(i.onlySelf);
      (this.status = io),
        this._forEachChild((t) => {
          t.enable(Ne(ee({}, i), { onlySelf: !0 }));
        }),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: i.emitEvent }),
        this._updateAncestors(Ne(ee({}, i), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((t) => t(!1));
    }
    _updateAncestors(i, e) {
      this._parent &&
        !i.onlySelf &&
        (this._parent.updateValueAndValidity(i),
        i.skipPristineCheck || this._parent._updatePristine({}, e),
        this._parent._updateTouched({}, e));
    }
    setParent(i) {
      this._parent = i;
    }
    getRawValue() {
      return this.value;
    }
    updateValueAndValidity(i = {}) {
      if ((this._setInitialStatus(), this._updateValue(), this.enabled)) {
        let t = this._cancelExistingSubscription();
        (this.errors = this._runValidator()),
          (this.status = this._calculateStatus()),
          (this.status === io || this.status === yr) &&
            this._runAsyncValidator(t, i.emitEvent);
      }
      let e = i.sourceControl ?? this;
      i.emitEvent !== !1 &&
        (this._events.next(new oa(this.value, e)),
        this._events.next(new Cr(this.status, e)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !i.onlySelf &&
          this._parent.updateValueAndValidity(
            Ne(ee({}, i), { sourceControl: e })
          );
    }
    _updateTreeValidity(i = { emitEvent: !0 }) {
      this._forEachChild((e) => e._updateTreeValidity(i)),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: i.emitEvent });
    }
    _setInitialStatus() {
      this.status = this._allControlsDisabled() ? no : io;
    }
    _runValidator() {
      return this.validator ? this.validator(this) : null;
    }
    _runAsyncValidator(i, e) {
      if (this.asyncValidator) {
        (this.status = yr),
          (this._hasOwnPendingAsyncValidator = { emitEvent: e !== !1 });
        let t = rp(this.asyncValidator(this));
        this._asyncValidationSubscription = t.subscribe((n) => {
          (this._hasOwnPendingAsyncValidator = null),
            this.setErrors(n, { emitEvent: e, shouldHaveEmitted: i });
        });
      }
    }
    _cancelExistingSubscription() {
      if (this._asyncValidationSubscription) {
        this._asyncValidationSubscription.unsubscribe();
        let i = this._hasOwnPendingAsyncValidator?.emitEvent ?? !1;
        return (this._hasOwnPendingAsyncValidator = null), i;
      }
      return !1;
    }
    setErrors(i, e = {}) {
      (this.errors = i),
        this._updateControlsErrors(
          e.emitEvent !== !1,
          this,
          e.shouldHaveEmitted
        );
    }
    get(i) {
      let e = i;
      return e == null ||
        (Array.isArray(e) || (e = e.split(".")), e.length === 0)
        ? null
        : e.reduce((t, n) => t && t._find(n), this);
    }
    getError(i, e) {
      let t = e ? this.get(e) : this;
      return t && t.errors ? t.errors[i] : null;
    }
    hasError(i, e) {
      return !!this.getError(i, e);
    }
    get root() {
      let i = this;
      for (; i._parent; ) i = i._parent;
      return i;
    }
    _updateControlsErrors(i, e, t) {
      (this.status = this._calculateStatus()),
        i && this.statusChanges.emit(this.status),
        (i || t) && this._events.next(new Cr(this.status, e)),
        this._parent && this._parent._updateControlsErrors(i, e, t);
    }
    _initObservables() {
      (this.valueChanges = new xe()), (this.statusChanges = new xe());
    }
    _calculateStatus() {
      return this._allControlsDisabled()
        ? no
        : this.errors
        ? ea
        : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(yr)
        ? yr
        : this._anyControlsHaveStatus(ea)
        ? ea
        : io;
    }
    _anyControlsHaveStatus(i) {
      return this._anyControls((e) => e.status === i);
    }
    _anyControlsDirty() {
      return this._anyControls((i) => i.dirty);
    }
    _anyControlsTouched() {
      return this._anyControls((i) => i.touched);
    }
    _updatePristine(i, e) {
      let t = !this._anyControlsDirty(),
        n = this.pristine !== t;
      (this.pristine = t),
        this._parent && !i.onlySelf && this._parent._updatePristine(i, e),
        n && this._events.next(new oo(this.pristine, e));
    }
    _updateTouched(i = {}, e) {
      (this.touched = this._anyControlsTouched()),
        this._events.next(new ao(this.touched, e)),
        this._parent && !i.onlySelf && this._parent._updateTouched(i, e);
    }
    _registerOnCollectionChange(i) {
      this._onCollectionChange = i;
    }
    _setUpdateStrategy(i) {
      pa(i) && i.updateOn != null && (this._updateOn = i.updateOn);
    }
    _parentMarkedDirty(i) {
      let e = this._parent && this._parent.dirty;
      return !i && !!e && !this._parent._anyControlsDirty();
    }
    _find(i) {
      return null;
    }
    _assignValidators(i) {
      (this._rawValidators = Array.isArray(i) ? i.slice() : i),
        (this._composedValidatorFn = Im(this._rawValidators));
    }
    _assignAsyncValidators(i) {
      (this._rawAsyncValidators = Array.isArray(i) ? i.slice() : i),
        (this._composedAsyncValidatorFn = Am(this._rawAsyncValidators));
    }
  },
  _t = class extends aa {
    constructor(i, e, t) {
      super(up(e), hp(t, e)),
        (this.controls = i),
        this._initObservables(),
        this._setUpdateStrategy(e),
        this._setUpControls(),
        this.updateValueAndValidity({
          onlySelf: !0,
          emitEvent: !!this.asyncValidator,
        });
    }
    registerControl(i, e) {
      return this.controls[i]
        ? this.controls[i]
        : ((this.controls[i] = e),
          e.setParent(this),
          e._registerOnCollectionChange(this._onCollectionChange),
          e);
    }
    addControl(i, e, t = {}) {
      this.registerControl(i, e),
        this.updateValueAndValidity({ emitEvent: t.emitEvent }),
        this._onCollectionChange();
    }
    removeControl(i, e = {}) {
      this.controls[i] &&
        this.controls[i]._registerOnCollectionChange(() => {}),
        delete this.controls[i],
        this.updateValueAndValidity({ emitEvent: e.emitEvent }),
        this._onCollectionChange();
    }
    setControl(i, e, t = {}) {
      this.controls[i] &&
        this.controls[i]._registerOnCollectionChange(() => {}),
        delete this.controls[i],
        e && this.registerControl(i, e),
        this.updateValueAndValidity({ emitEvent: t.emitEvent }),
        this._onCollectionChange();
    }
    contains(i) {
      return this.controls.hasOwnProperty(i) && this.controls[i].enabled;
    }
    setValue(i, e = {}) {
      Rm(this, !0, i),
        Object.keys(i).forEach((t) => {
          Fm(this, !0, t),
            this.controls[t].setValue(i[t], {
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }),
        this.updateValueAndValidity(e);
    }
    patchValue(i, e = {}) {
      i != null &&
        (Object.keys(i).forEach((t) => {
          let n = this.controls[t];
          n && n.patchValue(i[t], { onlySelf: !0, emitEvent: e.emitEvent });
        }),
        this.updateValueAndValidity(e));
    }
    reset(i = {}, e = {}) {
      this._forEachChild((t, n) => {
        t.reset(i ? i[n] : null, { onlySelf: !0, emitEvent: e.emitEvent });
      }),
        this._updatePristine(e, this),
        this._updateTouched(e, this),
        this.updateValueAndValidity(e);
    }
    getRawValue() {
      return this._reduceChildren(
        {},
        (i, e, t) => ((i[t] = e.getRawValue()), i)
      );
    }
    _syncPendingControls() {
      let i = this._reduceChildren(!1, (e, t) =>
        t._syncPendingControls() ? !0 : e
      );
      return i && this.updateValueAndValidity({ onlySelf: !0 }), i;
    }
    _forEachChild(i) {
      Object.keys(this.controls).forEach((e) => {
        let t = this.controls[e];
        t && i(t, e);
      });
    }
    _setUpControls() {
      this._forEachChild((i) => {
        i.setParent(this),
          i._registerOnCollectionChange(this._onCollectionChange);
      });
    }
    _updateValue() {
      this.value = this._reduceValue();
    }
    _anyControls(i) {
      for (let [e, t] of Object.entries(this.controls))
        if (this.contains(e) && i(t)) return !0;
      return !1;
    }
    _reduceValue() {
      let i = {};
      return this._reduceChildren(
        i,
        (e, t, n) => ((t.enabled || this.disabled) && (e[n] = t.value), e)
      );
    }
    _reduceChildren(i, e) {
      let t = i;
      return (
        this._forEachChild((n, o) => {
          t = e(t, n, o);
        }),
        t
      );
    }
    _allControlsDisabled() {
      for (let i of Object.keys(this.controls))
        if (this.controls[i].enabled) return !1;
      return Object.keys(this.controls).length > 0 || this.disabled;
    }
    _find(i) {
      return this.controls.hasOwnProperty(i) ? this.controls[i] : null;
    }
  };
var so = new $e("CallSetDisabledState", {
    providedIn: "root",
    factory: () => ua,
  }),
  ua = "always";
function mp(r, i) {
  return [...i.path, r];
}
function sa(r, i, e = ua) {
  ol(r, i),
    i.valueAccessor.writeValue(r.value),
    (r.disabled || e === "always") &&
      i.valueAccessor.setDisabledState?.(r.disabled),
    Nm(r, i),
    Bm(r, i),
    Lm(r, i),
    Vm(r, i);
}
function Yd(r, i, e = !0) {
  let t = () => {};
  i.valueAccessor &&
    (i.valueAccessor.registerOnChange(t), i.valueAccessor.registerOnTouched(t)),
    ca(r, i),
    r &&
      (i._invokeOnDestroyCallbacks(), r._registerOnCollectionChange(() => {}));
}
function la(r, i) {
  r.forEach((e) => {
    e.registerOnValidatorChange && e.registerOnValidatorChange(i);
  });
}
function Vm(r, i) {
  if (i.valueAccessor.setDisabledState) {
    let e = (t) => {
      i.valueAccessor.setDisabledState(t);
    };
    r.registerOnDisabledChange(e),
      i._registerOnDestroy(() => {
        r._unregisterOnDisabledChange(e);
      });
  }
}
function ol(r, i) {
  let e = dp(r);
  i.validator !== null
    ? r.setValidators(Wd(e, i.validator))
    : typeof e == "function" && r.setValidators([e]);
  let t = pp(r);
  i.asyncValidator !== null
    ? r.setAsyncValidators(Wd(t, i.asyncValidator))
    : typeof t == "function" && r.setAsyncValidators([t]);
  let n = () => r.updateValueAndValidity();
  la(i._rawValidators, n), la(i._rawAsyncValidators, n);
}
function ca(r, i) {
  let e = !1;
  if (r !== null) {
    if (i.validator !== null) {
      let n = dp(r);
      if (Array.isArray(n) && n.length > 0) {
        let o = n.filter((u) => u !== i.validator);
        o.length !== n.length && ((e = !0), r.setValidators(o));
      }
    }
    if (i.asyncValidator !== null) {
      let n = pp(r);
      if (Array.isArray(n) && n.length > 0) {
        let o = n.filter((u) => u !== i.asyncValidator);
        o.length !== n.length && ((e = !0), r.setAsyncValidators(o));
      }
    }
  }
  let t = () => {};
  return la(i._rawValidators, t), la(i._rawAsyncValidators, t), e;
}
function Nm(r, i) {
  i.valueAccessor.registerOnChange((e) => {
    (r._pendingValue = e),
      (r._pendingChange = !0),
      (r._pendingDirty = !0),
      r.updateOn === "change" && fp(r, i);
  });
}
function Lm(r, i) {
  i.valueAccessor.registerOnTouched(() => {
    (r._pendingTouched = !0),
      r.updateOn === "blur" && r._pendingChange && fp(r, i),
      r.updateOn !== "submit" && r.markAsTouched();
  });
}
function fp(r, i) {
  r._pendingDirty && r.markAsDirty(),
    r.setValue(r._pendingValue, { emitModelToViewChange: !1 }),
    i.viewToModelUpdate(r._pendingValue),
    (r._pendingChange = !1);
}
function Bm(r, i) {
  let e = (t, n) => {
    i.valueAccessor.writeValue(t), n && i.viewToModelUpdate(t);
  };
  r.registerOnChange(e),
    i._registerOnDestroy(() => {
      r._unregisterOnChange(e);
    });
}
function gp(r, i) {
  r == null, ol(r, i);
}
function Hm(r, i) {
  return ca(r, i);
}
function _p(r, i) {
  if (!r.hasOwnProperty("model")) return !1;
  let e = r.model;
  return e.isFirstChange() ? !0 : !Object.is(i, e.currentValue);
}
function jm(r) {
  return Object.getPrototypeOf(r.constructor) === il;
}
function bp(r, i) {
  r._syncPendingControls(),
    i.forEach((e) => {
      let t = e.control;
      t.updateOn === "submit" &&
        t._pendingChange &&
        (e.viewToModelUpdate(t._pendingValue), (t._pendingChange = !1));
    });
}
function vp(r, i) {
  if (!i) return null;
  Array.isArray(i);
  let e, t, n;
  return (
    i.forEach((o) => {
      o.constructor === Mt ? (e = o) : jm(o) ? (t = o) : (n = o);
    }),
    n || t || e || null
  );
}
function zm(r, i) {
  let e = r.indexOf(i);
  e > -1 && r.splice(e, 1);
}
var Um = { provide: mn, useExisting: Gt(() => al) },
  ro = Promise.resolve(),
  al = (() => {
    class r extends mn {
      get submitted() {
        return Hi(this.submittedReactive);
      }
      constructor(e, t, n) {
        super(),
          (this.callSetDisabledState = n),
          (this._submitted = Un(() => this.submittedReactive())),
          (this.submittedReactive = pe(!1)),
          (this._directives = new Set()),
          (this.ngSubmit = new xe()),
          (this.form = new _t({}, nl(e), rl(t)));
      }
      ngAfterViewInit() {
        this._setUpdateStrategy();
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      get controls() {
        return this.form.controls;
      }
      addControl(e) {
        ro.then(() => {
          let t = this._findContainer(e.path);
          (e.control = t.registerControl(e.name, e.control)),
            sa(e.control, e, this.callSetDisabledState),
            e.control.updateValueAndValidity({ emitEvent: !1 }),
            this._directives.add(e);
        });
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        ro.then(() => {
          let t = this._findContainer(e.path);
          t && t.removeControl(e.name), this._directives.delete(e);
        });
      }
      addFormGroup(e) {
        ro.then(() => {
          let t = this._findContainer(e.path),
            n = new _t({});
          gp(n, e),
            t.registerControl(e.name, n),
            n.updateValueAndValidity({ emitEvent: !1 });
        });
      }
      removeFormGroup(e) {
        ro.then(() => {
          let t = this._findContainer(e.path);
          t && t.removeControl(e.name);
        });
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      updateModel(e, t) {
        ro.then(() => {
          this.form.get(e.path).setValue(t);
        });
      }
      setValue(e) {
        this.control.setValue(e);
      }
      onSubmit(e) {
        return (
          this.submittedReactive.set(!0),
          bp(this.form, this._directives),
          this.ngSubmit.emit(e),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e), this.submittedReactive.set(!1);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.form._updateOn = this.options.updateOn);
      }
      _findContainer(e) {
        return e.pop(), e.length ? this.form.get(e) : this.form;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Yn, 10), F(da, 10), F(so, 8));
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
            ["ng-form"],
            ["", "ngForm", ""],
          ],
          hostBindings: function (t, n) {
            t & 1 &&
              O("submit", function (u) {
                return n.onSubmit(u);
              })("reset", function () {
                return n.onReset();
              });
          },
          inputs: { options: [0, "ngFormOptions", "options"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [yt([Um]), ze],
        });
      }
    }
    return r;
  })();
function qd(r, i) {
  let e = r.indexOf(i);
  e > -1 && r.splice(e, 1);
}
function Kd(r) {
  return (
    typeof r == "object" &&
    r !== null &&
    Object.keys(r).length === 2 &&
    "value" in r &&
    "disabled" in r
  );
}
var Ke = class extends aa {
  constructor(i = null, e, t) {
    super(up(e), hp(t, e)),
      (this.defaultValue = null),
      (this._onChange = []),
      (this._pendingChange = !1),
      this._applyFormState(i),
      this._setUpdateStrategy(e),
      this._initObservables(),
      this.updateValueAndValidity({
        onlySelf: !0,
        emitEvent: !!this.asyncValidator,
      }),
      pa(e) &&
        (e.nonNullable || e.initialValueIsDefault) &&
        (Kd(i) ? (this.defaultValue = i.value) : (this.defaultValue = i));
  }
  setValue(i, e = {}) {
    (this.value = this._pendingValue = i),
      this._onChange.length &&
        e.emitModelToViewChange !== !1 &&
        this._onChange.forEach((t) =>
          t(this.value, e.emitViewToModelChange !== !1)
        ),
      this.updateValueAndValidity(e);
  }
  patchValue(i, e = {}) {
    this.setValue(i, e);
  }
  reset(i = this.defaultValue, e = {}) {
    this._applyFormState(i),
      this.markAsPristine(e),
      this.markAsUntouched(e),
      this.setValue(this.value, e),
      (this._pendingChange = !1);
  }
  _updateValue() {}
  _anyControls(i) {
    return !1;
  }
  _allControlsDisabled() {
    return this.disabled;
  }
  registerOnChange(i) {
    this._onChange.push(i);
  }
  _unregisterOnChange(i) {
    qd(this._onChange, i);
  }
  registerOnDisabledChange(i) {
    this._onDisabledChange.push(i);
  }
  _unregisterOnDisabledChange(i) {
    qd(this._onDisabledChange, i);
  }
  _forEachChild(i) {}
  _syncPendingControls() {
    return this.updateOn === "submit" &&
      (this._pendingDirty && this.markAsDirty(),
      this._pendingTouched && this.markAsTouched(),
      this._pendingChange)
      ? (this.setValue(this._pendingValue, {
          onlySelf: !0,
          emitModelToViewChange: !1,
        }),
        !0)
      : !1;
  }
  _applyFormState(i) {
    Kd(i)
      ? ((this.value = this._pendingValue = i.value),
        i.disabled
          ? this.disable({ onlySelf: !0, emitEvent: !1 })
          : this.enable({ onlySelf: !0, emitEvent: !1 }))
      : (this.value = this._pendingValue = i);
  }
};
var Wm = (r) => r instanceof Ke;
var $m = { provide: $n, useExisting: Gt(() => Wt) },
  Qd = Promise.resolve(),
  Wt = (() => {
    class r extends $n {
      constructor(e, t, n, o, u, b) {
        super(),
          (this._changeDetectorRef = u),
          (this.callSetDisabledState = b),
          (this.control = new Ke()),
          (this._registered = !1),
          (this.name = ""),
          (this.update = new xe()),
          (this._parent = e),
          this._setValidators(t),
          this._setAsyncValidators(n),
          (this.valueAccessor = vp(this, o));
      }
      ngOnChanges(e) {
        if ((this._checkForErrors(), !this._registered || "name" in e)) {
          if (this._registered && (this._checkName(), this.formDirective)) {
            let t = e.name.previousValue;
            this.formDirective.removeControl({
              name: t,
              path: this._getPath(t),
            });
          }
          this._setUpControl();
        }
        "isDisabled" in e && this._updateDisabled(e),
          _p(e, this.viewModel) &&
            (this._updateValue(this.model), (this.viewModel = this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      get path() {
        return this._getPath(this.name);
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      _setUpControl() {
        this._setUpdateStrategy(),
          this._isStandalone()
            ? this._setUpStandalone()
            : this.formDirective.addControl(this),
          (this._registered = !0);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.control._updateOn = this.options.updateOn);
      }
      _isStandalone() {
        return !this._parent || !!(this.options && this.options.standalone);
      }
      _setUpStandalone() {
        sa(this.control, this, this.callSetDisabledState),
          this.control.updateValueAndValidity({ emitEvent: !1 });
      }
      _checkForErrors() {
        this._isStandalone() || this._checkParentType(), this._checkName();
      }
      _checkParentType() {}
      _checkName() {
        this.options && this.options.name && (this.name = this.options.name),
          !this._isStandalone() && this.name;
      }
      _updateValue(e) {
        Qd.then(() => {
          this.control.setValue(e, { emitViewToModelChange: !1 }),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _updateDisabled(e) {
        let t = e.isDisabled.currentValue,
          n = t !== 0 && ye(t);
        Qd.then(() => {
          n && !this.control.disabled
            ? this.control.disable()
            : !n && this.control.disabled && this.control.enable(),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _getPath(e) {
        return this._parent ? mp(e, this._parent) : [e];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(
            F(mn, 9),
            F(Yn, 10),
            F(da, 10),
            F(Gn, 10),
            F(qe, 8),
            F(so, 8)
          );
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""],
          ],
          inputs: {
            name: "name",
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
            options: [0, "ngModelOptions", "options"],
          },
          outputs: { update: "ngModelChange" },
          exportAs: ["ngModel"],
          features: [yt([$m]), ze, wt],
        });
      }
    }
    return r;
  })(),
  Tn = (() => {
    class r {
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]],
          hostAttrs: ["novalidate", ""],
        });
      }
    }
    return r;
  })();
var xp = new $e("");
var Gm = { provide: mn, useExisting: Gt(() => mi) },
  mi = (() => {
    class r extends mn {
      get submitted() {
        return Hi(this._submittedReactive);
      }
      set submitted(e) {
        this._submittedReactive.set(e);
      }
      constructor(e, t, n) {
        super(),
          (this.callSetDisabledState = n),
          (this._submitted = Un(() => this._submittedReactive())),
          (this._submittedReactive = pe(!1)),
          (this._onCollectionChange = () => this._updateDomValue()),
          (this.directives = []),
          (this.form = null),
          (this.ngSubmit = new xe()),
          this._setValidators(e),
          this._setAsyncValidators(t);
      }
      ngOnChanges(e) {
        this._checkFormPresent(),
          e.hasOwnProperty("form") &&
            (this._updateValidators(),
            this._updateDomValue(),
            this._updateRegistrations(),
            (this._oldForm = this.form));
      }
      ngOnDestroy() {
        this.form &&
          (ca(this.form, this),
          this.form._onCollectionChange === this._onCollectionChange &&
            this.form._registerOnCollectionChange(() => {}));
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      addControl(e) {
        let t = this.form.get(e.path);
        return (
          sa(t, e, this.callSetDisabledState),
          t.updateValueAndValidity({ emitEvent: !1 }),
          this.directives.push(e),
          t
        );
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        Yd(e.control || null, e, !1), zm(this.directives, e);
      }
      addFormGroup(e) {
        this._setUpFormContainer(e);
      }
      removeFormGroup(e) {
        this._cleanUpFormContainer(e);
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      addFormArray(e) {
        this._setUpFormContainer(e);
      }
      removeFormArray(e) {
        this._cleanUpFormContainer(e);
      }
      getFormArray(e) {
        return this.form.get(e.path);
      }
      updateModel(e, t) {
        this.form.get(e.path).setValue(t);
      }
      onSubmit(e) {
        return (
          this._submittedReactive.set(!0),
          bp(this.form, this.directives),
          this.ngSubmit.emit(e),
          this.form._events.next(new el(this.control)),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e),
          this._submittedReactive.set(!1),
          this.form._events.next(new tl(this.form));
      }
      _updateDomValue() {
        this.directives.forEach((e) => {
          let t = e.control,
            n = this.form.get(e.path);
          t !== n &&
            (Yd(t || null, e),
            Wm(n) && (sa(n, e, this.callSetDisabledState), (e.control = n)));
        }),
          this.form._updateTreeValidity({ emitEvent: !1 });
      }
      _setUpFormContainer(e) {
        let t = this.form.get(e.path);
        gp(t, e), t.updateValueAndValidity({ emitEvent: !1 });
      }
      _cleanUpFormContainer(e) {
        if (this.form) {
          let t = this.form.get(e.path);
          t && Hm(t, e) && t.updateValueAndValidity({ emitEvent: !1 });
        }
      }
      _updateRegistrations() {
        this.form._registerOnCollectionChange(this._onCollectionChange),
          this._oldForm && this._oldForm._registerOnCollectionChange(() => {});
      }
      _updateValidators() {
        ol(this.form, this), this._oldForm && ca(this._oldForm, this);
      }
      _checkFormPresent() {
        this.form;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Yn, 10), F(da, 10), F(so, 8));
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [["", "formGroup", ""]],
          hostBindings: function (t, n) {
            t & 1 &&
              O("submit", function (u) {
                return n.onSubmit(u);
              })("reset", function () {
                return n.onReset();
              });
          },
          inputs: { form: [0, "formGroup", "form"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [yt([Gm]), ze, wt],
        });
      }
    }
    return r;
  })();
var Ym = { provide: $n, useExisting: Gt(() => fi) },
  fi = (() => {
    class r extends $n {
      set isDisabled(e) {}
      static {
        this._ngModelWarningSentOnce = !1;
      }
      constructor(e, t, n, o, u) {
        super(),
          (this._ngModelWarningConfig = u),
          (this._added = !1),
          (this.name = null),
          (this.update = new xe()),
          (this._ngModelWarningSent = !1),
          (this._parent = e),
          this._setValidators(t),
          this._setAsyncValidators(n),
          (this.valueAccessor = vp(this, o));
      }
      ngOnChanges(e) {
        this._added || this._setUpControl(),
          _p(e, this.viewModel) &&
            ((this.viewModel = this.model),
            this.formDirective.updateModel(this, this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      get path() {
        return mp(
          this.name == null ? this.name : this.name.toString(),
          this._parent
        );
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      _checkParentType() {}
      _setUpControl() {
        this._checkParentType(),
          (this.control = this.formDirective.addControl(this)),
          (this._added = !0);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(
            F(mn, 13),
            F(Yn, 10),
            F(da, 10),
            F(Gn, 10),
            F(xp, 8)
          );
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [["", "formControlName", ""]],
          inputs: {
            name: [0, "formControlName", "name"],
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
          },
          outputs: { update: "ngModelChange" },
          features: [yt([Ym]), ze, wt],
        });
      }
    }
    return r;
  })(),
  qm = { provide: Gn, useExisting: Gt(() => qt), multi: !0 };
function yp(r, i) {
  return r == null
    ? `${i}`
    : (i && typeof i == "object" && (i = "Object"), `${r}: ${i}`.slice(0, 50));
}
function Km(r) {
  return r.split(":")[0];
}
var qt = (() => {
    class r extends il {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let t = this._getOptionId(e),
          n = yp(t, e);
        this.setProperty("value", n);
      }
      registerOnChange(e) {
        this.onChange = (t) => {
          (this.value = this._getOptionValue(t)), e(this.value);
        };
      }
      _registerOption() {
        return (this._idCounter++).toString();
      }
      _getOptionId(e) {
        for (let t of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(t), e)) return t;
        return null;
      }
      _getOptionValue(e) {
        let t = Km(e);
        return this._optionMap.has(t) ? this._optionMap.get(t) : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (n) {
            return (e || (e = pt(r)))(n || r);
          };
        })();
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["select", "formControlName", "", 3, "multiple", ""],
            ["select", "formControl", "", 3, "multiple", ""],
            ["select", "ngModel", "", 3, "multiple", ""],
          ],
          hostBindings: function (t, n) {
            t & 1 &&
              O("change", function (u) {
                return n.onChange(u.target.value);
              })("blur", function () {
                return n.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [yt([qm]), ze],
        });
      }
    }
    return r;
  })(),
  At = (() => {
    class r {
      constructor(e, t, n) {
        (this._element = e),
          (this._renderer = t),
          (this._select = n),
          this._select && (this.id = this._select._registerOption());
      }
      set ngValue(e) {
        this._select != null &&
          (this._select._optionMap.set(this.id, e),
          this._setElementValue(yp(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._setElementValue(e),
          this._select && this._select.writeValue(this._select.value);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Pe), F(Jt), F(qt, 9));
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return r;
  })(),
  Qm = { provide: Gn, useExisting: Gt(() => Cp), multi: !0 };
function Zd(r, i) {
  return r == null
    ? `${i}`
    : (typeof i == "string" && (i = `'${i}'`),
      i && typeof i == "object" && (i = "Object"),
      `${r}: ${i}`.slice(0, 50));
}
function Zm(r) {
  return r.split(":")[0];
}
var Cp = (() => {
    class r extends il {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let t;
        if (Array.isArray(e)) {
          let n = e.map((o) => this._getOptionId(o));
          t = (o, u) => {
            o._setSelected(n.indexOf(u.toString()) > -1);
          };
        } else
          t = (n, o) => {
            n._setSelected(!1);
          };
        this._optionMap.forEach(t);
      }
      registerOnChange(e) {
        this.onChange = (t) => {
          let n = [],
            o = t.selectedOptions;
          if (o !== void 0) {
            let u = o;
            for (let b = 0; b < u.length; b++) {
              let C = u[b],
                T = this._getOptionValue(C.value);
              n.push(T);
            }
          } else {
            let u = t.options;
            for (let b = 0; b < u.length; b++) {
              let C = u[b];
              if (C.selected) {
                let T = this._getOptionValue(C.value);
                n.push(T);
              }
            }
          }
          (this.value = n), e(n);
        };
      }
      _registerOption(e) {
        let t = (this._idCounter++).toString();
        return this._optionMap.set(t, e), t;
      }
      _getOptionId(e) {
        for (let t of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(t)._value, e)) return t;
        return null;
      }
      _getOptionValue(e) {
        let t = Zm(e);
        return this._optionMap.has(t) ? this._optionMap.get(t)._value : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (n) {
            return (e || (e = pt(r)))(n || r);
          };
        })();
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["select", "multiple", "", "formControlName", ""],
            ["select", "multiple", "", "formControl", ""],
            ["select", "multiple", "", "ngModel", ""],
          ],
          hostBindings: function (t, n) {
            t & 1 &&
              O("change", function (u) {
                return n.onChange(u.target);
              })("blur", function () {
                return n.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [yt([Qm]), ze],
        });
      }
    }
    return r;
  })(),
  Ft = (() => {
    class r {
      constructor(e, t, n) {
        (this._element = e),
          (this._renderer = t),
          (this._select = n),
          this._select && (this.id = this._select._registerOption(this));
      }
      set ngValue(e) {
        this._select != null &&
          ((this._value = e),
          this._setElementValue(Zd(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._select
          ? ((this._value = e),
            this._setElementValue(Zd(this.id, e)),
            this._select.writeValue(this._select.value))
          : this._setElementValue(e);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      _setSelected(e) {
        this._renderer.setProperty(this._element.nativeElement, "selected", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Pe), F(Jt), F(Cp, 9));
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return r;
  })();
function Xm(r) {
  return typeof r == "number" ? r : parseInt(r, 10);
}
var sl = (() => {
  class r {
    constructor() {
      this._validator = ta;
    }
    ngOnChanges(e) {
      if (this.inputName in e) {
        let t = this.normalizeInput(e[this.inputName].currentValue);
        (this._enabled = this.enabled(t)),
          (this._validator = this._enabled ? this.createValidator(t) : ta),
          this._onChange && this._onChange();
      }
    }
    validate(e) {
      return this._validator(e);
    }
    registerOnValidatorChange(e) {
      this._onChange = e;
    }
    enabled(e) {
      return e != null;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵdir = ke({ type: r, features: [wt] });
    }
  }
  return r;
})();
var Jm = { provide: Yn, useExisting: Gt(() => fn), multi: !0 };
var fn = (() => {
  class r extends sl {
    constructor() {
      super(...arguments),
        (this.inputName = "required"),
        (this.normalizeInput = ye),
        (this.createValidator = (e) => ep);
    }
    enabled(e) {
      return e;
    }
    static {
      this.ɵfac = (() => {
        let e;
        return function (n) {
          return (e || (e = pt(r)))(n || r);
        };
      })();
    }
    static {
      this.ɵdir = ke({
        type: r,
        selectors: [
          ["", "required", "", "formControlName", "", 3, "type", "checkbox"],
          ["", "required", "", "formControl", "", 3, "type", "checkbox"],
          ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
        ],
        hostVars: 1,
        hostBindings: function (t, n) {
          t & 2 && se("required", n._enabled ? "" : null);
        },
        inputs: { required: "required" },
        features: [yt([Jm]), ze],
      });
    }
  }
  return r;
})();
var ef = { provide: Yn, useExisting: Gt(() => ll), multi: !0 },
  ll = (() => {
    class r extends sl {
      constructor() {
        super(...arguments),
          (this.inputName = "email"),
          (this.normalizeInput = ye),
          (this.createValidator = (e) => tp);
      }
      enabled(e) {
        return e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (n) {
            return (e || (e = pt(r)))(n || r);
          };
        })();
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["", "email", "", "formControlName", ""],
            ["", "email", "", "formControl", ""],
            ["", "email", "", "ngModel", ""],
          ],
          inputs: { email: "email" },
          features: [yt([ef]), ze],
        });
      }
    }
    return r;
  })();
var tf = { provide: Yn, useExisting: Gt(() => cl), multi: !0 },
  cl = (() => {
    class r extends sl {
      constructor() {
        super(...arguments),
          (this.inputName = "maxlength"),
          (this.normalizeInput = (e) => Xm(e)),
          (this.createValidator = (e) => ip(e));
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (n) {
            return (e || (e = pt(r)))(n || r);
          };
        })();
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["", "maxlength", "", "formControlName", ""],
            ["", "maxlength", "", "formControl", ""],
            ["", "maxlength", "", "ngModel", ""],
          ],
          hostVars: 1,
          hostBindings: function (t, n) {
            t & 2 && se("maxlength", n._enabled ? n.maxlength : null);
          },
          inputs: { maxlength: "maxlength" },
          features: [yt([tf]), ze],
        });
      }
    }
    return r;
  })();
var wp = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({});
    }
  }
  return r;
})();
var Ge = (() => {
    class r {
      static withConfig(e) {
        return {
          ngModule: r,
          providers: [{ provide: so, useValue: e.callSetDisabledState ?? ua }],
        };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵmod = be({ type: r });
      }
      static {
        this.ɵinj = _e({ imports: [wp] });
      }
    }
    return r;
  })(),
  Oi = (() => {
    class r {
      static withConfig(e) {
        return {
          ngModule: r,
          providers: [
            {
              provide: xp,
              useValue: e.warnOnNgModelWithFormControl ?? "always",
            },
            { provide: so, useValue: e.callSetDisabledState ?? ua },
          ],
        };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵmod = be({ type: r });
      }
      static {
        this.ɵinj = _e({ imports: [wp] });
      }
    }
    return r;
  })();
var en = class r {
  onSideBarClick$ = new Ee();
  selectedOption = pe("users");
  getSelectedOption() {
    return this.selectedOption;
  }
  setSelectedOption(i) {
    this.selectedOption.set(i);
  }
  pageTitleSubject = new Fi("Dashboard");
  pageTitle$ = this.pageTitleSubject.asObservable();
  setPageTitle(i) {
    this.pageTitleSubject.next(i);
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var kn = class r {
  isOpen = new Fi(!0);
  isOpen$ = this.isOpen.asObservable();
  toggleSidebar() {
    this.isOpen.next(!this.isOpen.value);
  }
  setSidebar(i) {
    this.isOpen.next(i);
  }
  get currentState() {
    return this.isOpen.value;
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var nf = (r) => ({ "collapsed-sidebar": r }),
  rf = (r) => ({ collapsed: r });
function of(r, i) {
  if (
    (r & 1 &&
      (a(0, "li", 4)(1, "a", 5), R(2, "i", 6), a(3, "span", 7), c(4), s()()()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = _();
    X("active", t.isActive(e.key)),
      d(),
      g("routerLink", e.route),
      d(),
      g("ngClass", e.icon),
      d(2),
      E(e.label);
  }
}
var ha = class r {
  constructor(i, e, t) {
    this.router = i;
    this.context = e;
    this.sidebarService = t;
  }
  activeMenu = "";
  isSidebarOpen = !0;
  sidebarSub;
  routerSub;
  menuItems = [
    {
      key: "dashboard",
      label: "Dashboard",
      route: "/Admin/dashboard",
      icon: "fas fa-tachometer-alt",
    },
  ];
  ngOnInit() {
    (this.sidebarSub = this.sidebarService.isOpen$.subscribe((i) => {
      this.isSidebarOpen = i;
    })),
      this.updateActiveFromUrl(this.router.url),
      (this.routerSub = this.router.events.subscribe((i) => {
        i instanceof Sn && this.updateActiveFromUrl(i.urlAfterRedirects);
      }));
  }
  ngOnDestroy() {
    this.sidebarSub?.unsubscribe(), this.routerSub?.unsubscribe();
  }
  updateActiveFromUrl(i) {
    console.log("Updating active from URL:", i);
    let e = this.menuItems.find((t) => i.includes(t.route));
    e &&
      this.activeMenu !== e.key &&
      (console.log("Setting active menu to:", e.key),
      (this.activeMenu = e.key),
      this.context.setPageTitle(e.label),
      this.context.onSideBarClick$.next({ role: e.key, pageTitle: e.label }));
  }
  isActive(i) {
    return this.activeMenu === i;
  }
  static ɵfac = function (e) {
    return new (e || r)(F(Lt), F(en), F(kn));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-sidebar"]],
    standalone: !0,
    features: [le],
    decls: 5,
    vars: 7,
    consts: [
      [1, "deznav", 2, "background-color", "#222fb9", 3, "ngClass"],
      ["id", "menu", 1, "metismenu", 3, "ngClass"],
      ["style", "margin-bottom:10px;", 3, "active", 4, "ngFor", "ngForOf"],
      [1, "copyright", 2, "margin-top", "280px"],
      [2, "margin-bottom", "10px"],
      [3, "routerLink"],
      [3, "ngClass"],
      [1, "nav-text", 2, "font-size", "11px", "white-space", "nowrap"],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 0)(1, "div")(2, "ul", 1),
        M(3, of, 5, 5, "li", 2),
        s(),
        R(4, "div", 3),
        s()()),
        e & 2 &&
          (g("ngClass", ce(3, nf, !t.isSidebarOpen)),
          d(2),
          g("ngClass", ce(5, rf, !t.isSidebarOpen)),
          d(),
          g("ngForOf", t.menuItems));
    },
    dependencies: [Ge, Bt, ai, De, ft, gt],
    styles: [
      ".metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{background:#fff3!important;color:#fff!important;border-radius:50px;align-items:center;gap:8px;transition:none!important}.deznav[_ngcontent-%COMP%]:not(.collapsed-sidebar)   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:#fff!important;color:#222fb9!important}.collapsed-sidebar[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:transparent!important;color:#fff!important}.metismenu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{background-color:inherit!important;color:inherit!important}.deznav[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{font-size:1.5rem}.nav-text[_ngcontent-%COMP%]{font-size:15px}",
    ],
  });
};
var Kt = class r {
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵmod = be({ type: r });
  static ɵinj = _e({ imports: [De, Ge, ai, ha, De, Ge, ai] });
};
var af = ["userDropdownWrapper"],
  Dp = () => ({ exact: !0 });
function sf(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 21)(1, "ul")(2, "li", 22),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.logout());
      }),
      ct(),
      a(3, "svg", 23),
      R(4, "path", 24),
      s(),
      c(5, " Logout "),
      s()()();
  }
}
function lf(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 25)(1, "div", 26)(2, "h3"),
      c(3, "Confirm Logout"),
      s(),
      a(4, "p"),
      c(5, "Are you sure you want to logout?"),
      s(),
      a(6, "div", 27)(7, "button", 28),
      O("click", function () {
        w(e);
        let n = _();
        return D((n.showLogoutModal = !1));
      }),
      c(8, "Cancel"),
      s(),
      a(9, "button", 29),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.confirmLogout());
      }),
      c(10, "Logout"),
      s()()()();
  }
}
function cf(r, i) {
  r & 1 &&
    (a(0, "div")(1, "h1", 30),
    c(2, "Dealer Performance Dashboard"),
    s(),
    a(3, "p", 31),
    c(4, "Track users, leads, follow-ups, test drives & calls."),
    s()());
}
function df(r, i) {
  r & 1 && (a(0, "div")(1, "h1", 30), c(2, "SA Summary Dashboard"), s()());
}
var ma = class r {
  constructor(i, e, t, n) {
    this.sidebarService = i;
    this.router = e;
    this.http = t;
    this.eRef = n;
  }
  selectedTab = "dashboard";
  isSidebarOpen = !0;
  selectedDealer = "all";
  selectedPS = "all";
  models = [];
  isUserDropdownOpen = !1;
  mobileMenuOpen = !1;
  userDropdownOpen = !1;
  selectedFilter = "DAY";
  newInquiryKpi = null;
  aggregatedMetrics = null;
  efforts = {};
  productivity = {};
  activePS = {};
  otherKpis = {};
  overallEfforts = 0;
  showLogoutConfirm = !1;
  overallProductivity = 0;
  selectedModel = "all";
  showUserDropdown = !1;
  showLogoutModal = !1;
  userDropdownWrapper;
  dealers = [];
  users = [];
  menuOpen = !1;
  ngOnInit() {
    this.sidebarService.isOpen$.subscribe((e) => {
      this.isSidebarOpen = e;
    });
    let i = this.router.url;
    i.includes("/Admin/dashboard")
      ? (this.selectedTab = "dashboard")
      : i.includes("/Admin/summary")
      ? (this.selectedTab = "summary")
      : i.includes("/Admin/trend-chart") && (this.selectedTab = "trend-chart"),
      this.router.events.pipe(zt((e) => e instanceof Sn)).subscribe((e) => {
        e.urlAfterRedirects.includes("/Admin/dashboard")
          ? (this.selectedTab = "dashboard")
          : e.urlAfterRedirects.includes("/Admin/summary")
          ? (this.selectedTab = "summary")
          : e.urlAfterRedirects.includes("/Admin/trend-chart") &&
            (this.selectedTab = "trend-chart");
      });
  }
  onFilterChange(i) {
    this.selectedFilter = i;
  }
  toggleSidebar() {
    this.sidebarService.toggleSidebar();
  }
  selectTab(i) {
    this.selectedTab = i;
  }
  isActive(i) {
    return this.router.url.includes(`/Admin/${i}`);
  }
  toggleUserDropdown() {
    this.userDropdownOpen = !this.userDropdownOpen;
  }
  navigateTo(i) {
    this.router.navigate(["/Admin", i]);
  }
  confirmLogout() {
    (this.showLogoutModal = !1),
      localStorage.removeItem("token"),
      this.router.navigate(["/login"]);
  }
  clickOutside(i) {
    this.userDropdownOpen &&
      this.userDropdownWrapper &&
      !this.userDropdownWrapper.nativeElement.contains(i.target) &&
      (this.userDropdownOpen = !1);
  }
  navigateToSingleDealer(i) {
    this.router.navigate(["/Admin/singleDealer", i]);
  }
  resetFilters() {
    (this.selectedFilter = "all"),
      (this.selectedDealer = "all"),
      (this.selectedPS = "all"),
      (this.selectedModel = "all");
  }
  getKpiByName(i, e, t) {
    if (!i) return null;
    let n = i[e] || i.aggregatedMetrics?.[e];
    if (!n) return console.warn(`No KPIs found for category "${e}"`, i), null;
    let o = n[t];
    return (
      o || (console.warn(`KPI "${t}" not found in category "${e}"`, n), null)
    );
  }
  loadDashboard(i) {
    let e = "https://uat.smartassistapp.in/api/superAdmin/dashboard/summary",
      t = localStorage.getItem("token");
    this.http
      .get(e, {
        headers: { Authorization: `Bearer ${t}` },
        params: { type: i },
      })
      .subscribe({
        next: (n) => {
          if (n.success && n.data?.aggregatedMetrics) {
            let o = n.data.aggregatedMetrics;
            if (
              ((this.efforts = o.efforts || {}),
              (this.productivity = o.productivity || {}),
              (this.activePS = o.activePS || {}),
              (this.otherKpis = o.otherKpis || {}),
              this.efforts)
            ) {
              let u = Object.values(this.efforts);
              this.overallEfforts = u.length
                ? Math.round(u.reduce((b, C) => b + C.progress, 0) / u.length)
                : 0;
            }
            if (this.productivity) {
              let u = Object.values(this.productivity);
              this.overallProductivity = u.length
                ? Math.round(u.reduce((b, C) => b + C.progress, 0) / u.length)
                : 0;
            }
          }
        },
        error: (n) => console.error("Error loading dashboard", n),
      });
  }
  toggleMenu() {
    this.menuOpen = !this.menuOpen;
  }
  logout() {
    this.showLogoutModal = !0;
  }
  static ɵfac = function (e) {
    return new (e || r)(F(kn), F(Lt), F(St), F(Pe));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-overview"]],
    viewQuery: function (e, t) {
      if ((e & 1 && at(af, 5), e & 2)) {
        let n;
        tt((n = it())) && (t.userDropdownWrapper = n.first);
      }
    },
    hostBindings: function (e, t) {
      e & 1 &&
        O(
          "click",
          function (o) {
            return t.clickOutside(o);
          },
          !1,
          wn
        );
    },
    standalone: !0,
    features: [le],
    decls: 26,
    vars: 13,
    consts: [
      ["userDropdownWrapper", ""],
      ["id", "main-wrapper"],
      [1, "content-body"],
      [1, "container-fluid"],
      [
        1,
        "sticky",
        "top-0",
        "z-20",
        "bg-white/90",
        "backdrop-blur",
        "border-b",
        "border-slate-200",
        "super-header",
      ],
      [1, "max-w-7xl", "mx-auto", "py-1"],
      [
        1,
        "flex",
        "flex-col",
        "sm:flex-row",
        "sm:items-center",
        "sm:justify-between",
        "gap-4",
        "mb-2",
        "media",
        "w-full",
        2,
        "background-color",
        "white",
      ],
      [1, "nav-button-sa"],
      [
        1,
        "inline-flex",
        "bg-gray-100",
        "p-1",
        "rounded-full",
        "overflow-x-auto",
      ],
      [
        "routerLink",
        "/Admin/dashboard",
        "routerLinkActive",
        "active-tab",
        1,
        "tab-btn",
        "whitespace-nowrap",
        "flex-shrink-0",
        "text-sm",
        "px-4",
        3,
        "routerLinkActiveOptions",
      ],
      [
        "routerLink",
        "/Admin/trend-chart",
        "routerLinkActive",
        "active-tab",
        1,
        "tab-btn",
        "whitespace-nowrap",
        "flex-shrink-0",
        "text-sm",
        "px-4",
        3,
        "routerLinkActiveOptions",
      ],
      [1, "user-icon-wrapper", 3, "click"],
      [1, "user-icon", "flex-shrink-0", "ml-auto"],
      [
        "width",
        "32",
        "height",
        "32",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "xmlns",
        "http://www.w3.org/2000/svg",
      ],
      [
        "cx",
        "12",
        "cy",
        "12",
        "r",
        "10",
        "stroke",
        "#6B7280",
        "stroke-width",
        "2",
      ],
      [
        "cx",
        "12",
        "cy",
        "8",
        "r",
        "3",
        "stroke",
        "#6B7280",
        "stroke-width",
        "2",
      ],
      [
        "d",
        "M6 20c0-4 2.5-6 6-6s6 2 6 6",
        "stroke",
        "#6B7280",
        "stroke-width",
        "2",
      ],
      ["class", "user-dropdown", 4, "ngIf"],
      ["class", "logout-modal-backdrop", 4, "ngIf"],
      [3, "ngSwitch"],
      [4, "ngSwitchCase"],
      [1, "user-dropdown"],
      [3, "click"],
      [
        "width",
        "16",
        "height",
        "16",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "xmlns",
        "http://www.w3.org/2000/svg",
        2,
        "margin-right",
        "6px",
      ],
      [
        "d",
        "M16 17l5-5-5-5M21 12H9M13 5v-2H5v18h8v-2",
        "stroke",
        "#374151",
        "stroke-width",
        "2",
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
      ],
      [1, "logout-modal-backdrop"],
      [1, "logout-modal"],
      [1, "modal-actions"],
      [1, "btn", "btn-cancel", 3, "click"],
      [1, "btn", "btn-logout", 3, "click"],
      [1, "text-2xl", "font-bold", "tracking-tight"],
      [1, "text-slate-500", "text-sm"],
    ],
    template: function (e, t) {
      if (e & 1) {
        let n = J();
        a(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "header", 4)(4, "div", 5)(
          5,
          "div",
          6
        )(
          6,
          "div",
          7
        )(7, "div")(8, "nav", 8)(9, "a", 9),
          c(10, " Dashboard "),
          s(),
          a(11, "a", 10),
          c(12, " Trend chart "),
          s()()()(),
          a(13, "div", 11, 0),
          O("click", function () {
            return w(n), D(t.toggleUserDropdown());
          }),
          a(15, "div", 12),
          ct(),
          a(16, "svg", 13),
          R(17, "circle", 14)(18, "circle", 15)(19, "path", 16),
          s()(),
          M(20, sf, 6, 0, "div", 17),
          s()(),
          M(21, lf, 11, 0, "div", 18),
          jn(),
          a(22, "div", 19),
          M(23, cf, 5, 0, "div", 20)(24, df, 3, 0, "div", 20),
          s()()(),
          R(25, "router-outlet"),
          s()()();
      }
      e & 2 &&
        (X("menu-toggle", !t.isSidebarOpen),
        d(9),
        g("routerLinkActiveOptions", Ut(11, Dp)),
        d(2),
        g("routerLinkActiveOptions", Ut(12, Dp)),
        d(2),
        X("open", t.userDropdownOpen),
        d(7),
        g("ngIf", t.userDropdownOpen),
        d(),
        g("ngIf", t.showLogoutModal),
        d(),
        g("ngSwitch", t.selectedTab),
        d(),
        g("ngSwitchCase", "dashboard"),
        d(),
        g("ngSwitchCase", "summary"));
    },
    dependencies: [Kt, Be, Qo, Zo, xr, Bt, zd, Ge],
    styles: [
      '.logout-modal-backdrop[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background:#00000080;display:flex;justify-content:center;align-items:center;z-index:5000}.logout-modal[_ngcontent-%COMP%]{background:#fff;padding:20px;border-radius:12px;box-shadow:0 4px 12px #0003;z-index:6000}.card-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:15px;margin:0;letter-spacing:.2px}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;color:#2563eb;border:1px solid #ccc;background:var(--chip);border-radius:999px;padding:6px 10px;font-size:12px}.chip[_ngcontent-%COMP%]   .dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:#2563eb}.nav-button-container[_ngcontent-%COMP%]{display:inline-flex!important;padding:6px!important;border-radius:50px!important;border:1px solid #e2e8f0!important;background-color:#f8fafc!important;box-shadow:0 1px 3px #0000001a!important}.nav-button-sa[_ngcontent-%COMP%]{border-radius:30px;object-fit:contain;width:100%;max-width:380px}.nav-tab-button[_ngcontent-%COMP%]{display:flex!important;align-items:center!important;justify-content:center!important;gap:8px!important;padding:10px 20px!important;font-size:14px!important;font-weight:500!important;border-radius:50px!important;transition:all .2s ease-in-out!important;cursor:pointer!important;border:none!important;outline:none!important;background:transparent!important;color:#64748b!important;white-space:nowrap!important}.nav-tab-button.active[_ngcontent-%COMP%]{background:#2563eb!important;color:#fff!important;box-shadow:0 2px 4px -1px #0003!important}.nav-tab-button[_ngcontent-%COMP%]:not(.active):hover{color:#475569!important;background:#3b82f614!important}.nav-tab-button[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:16px!important;height:16px!important;opacity:.8!important}.nav-tab-button.active[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{opacity:1!important}.tab-btn[_ngcontent-%COMP%]{padding:.5rem 1.5rem;border-radius:9999px;font-size:14px;font-weight:500;display:inline-flex;align-items:center;gap:.5rem;color:#475569;transition:all .2s ease-in-out}.tab-btn[_ngcontent-%COMP%]:hover{color:#1f2937}.active-tab[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff!important;box-shadow:0 2px 6px #0003}.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:7rem}@media (min-width: 768px) and (max-width: 819px){.content-body[_ngcontent-%COMP%]{margin-left:42px!important}}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .deznav[_ngcontent-%COMP%]{width:80px}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .nav-text[_ngcontent-%COMP%]{display:none}@media (min-width: 2560px){.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:336px!important}}@media screen and (min-width: 1920px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:336px}}#main-wrapper[_ngcontent-%COMP%]{display:flex}.content-body[_ngcontent-%COMP%]{transition:margin-left .3s ease;width:100%}.media[_ngcontent-%COMP%]{padding:.75rem}@media (max-width: 768px){.media[_ngcontent-%COMP%]{padding:0}.text1[_ngcontent-%COMP%]{font-size:11px}}.content-section[_ngcontent-%COMP%]{padding:20px;margin-top:70px}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:2rem;margin-top:20px}.performance-panel[_ngcontent-%COMP%]{flex:1;background:#f9f9f9;border-radius:8px;padding:20px;height:300px}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px}.metric-box[_ngcontent-%COMP%]{background:#fff;padding:1rem;border-radius:8px;text-align:center;box-shadow:0 2px 4px #0000001a}.super-header[_ngcontent-ng-c3749377617][_ngcontent-%COMP%]{background-color:#fff;margin-top:15px}.content-body[_ngcontent-%COMP%]   .container-fluid[_ngcontent-%COMP%], .content-body[_ngcontent-%COMP%]{padding-top:0}.tracking-tight[_ngcontent-%COMP%]{letter-spacing:-.025em}.font-bold[_ngcontent-%COMP%]{font-weight:700}@media (max-width: 768px){.tracking-tight[_ngcontent-%COMP%]{font-size:1.125rem}}[_ngcontent-%COMP%]:root{--bg: #0b1020;--bg-soft: #0e1428;--card: rgba(255, 255, 255, .06);--card-border: rgba(255, 255, 255, .14);--text: #e8edf6;--muted: #a6b0c3;--brand: #7aa2ff;--brand-2: #6ae3ff;--success: #34d399;--danger: #ef4444;--warn: #f59e0b;--ring: rgba(122, 162, 255, .35);--chip: #1b223a;--select: #111832;--grid-line: rgba(255, 255, 255, .06);--shadow: 0 10px 30px rgba(0, 0, 0, .35), 0 2px 8px rgba(0, 0, 0, .25);--radius: 16px;--radius-sm: 12px;--radius-xs: 8px;--blur: 12px;--fw-600: 600;--fw-700: 700}[data-theme=light][_ngcontent-%COMP%]{--bg: #f7f9fc;--bg-soft: #eef2fb;--card: #ffffff;--card-border: #e7e9f2;--text: #1a2234;--muted: #5b657a;--brand: #2563eb;--brand-2: #60a5fa;--success: #10b981;--danger: #ef4444;--warn: #d97706;--ring: rgba(37, 99, 235, .2);--chip: #f1f5ff;--select: #ffffff;--grid-line: rgba(26, 34, 52, .06);--shadow: 0 10px 30px rgba(16, 24, 40, .08), 0 2px 8px rgba(16, 24, 40, .06)}*[_ngcontent-%COMP%]{box-sizing:border-box}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}.dashboard-header[_ngcontent-%COMP%]{background-color:#fff!important;padding:15px;box-shadow:0 4px 6px #0000001a}body[_ngcontent-%COMP%]{margin:0;font-family:Inter,ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Helvetica Neue,Arial,"Apple Color Emoji","Segoe UI Emoji";color:var(--text);background:radial-gradient(1200px 800px at 10% -10%,var(--brand-2) 0%,transparent 35%),radial-gradient(1000px 700px at 120% 10%,var(--brand) 0%,transparent 30%),linear-gradient(180deg,var(--bg-soft),var(--bg));background-attachment:fixed;line-height:1.6}.grid-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;pointer-events:none;background:linear-gradient(var(--grid-line) 1px,transparent 1px) 0 0/ 100% 48px,linear-gradient(90deg,var(--grid-line) 1px,transparent 1px) 0 0/ 48px 100%;mask-image:radial-gradient(1200px 800px at 40% 0%,rgba(0,0,0,.35),transparent 70%)}.container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:28px 20px 56px}.header[_ngcontent-%COMP%]{position:relative;margin-bottom:20px;padding:24px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);overflow:hidden}.header[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;background:radial-gradient(600px 150px at 20% 0%,rgba(255,255,255,.12),transparent 40%);pointer-events:none}.header-top[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px;justify-content:space-between;margin-bottom:10px}.brand-chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:10px;background:var(--chip);border:1px solid var(--card-border);padding:8px 12px;border-radius:999px;font-size:12px;color:var(--muted)}.brand-dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background:linear-gradient(135deg,var(--brand),var(--brand-2));box-shadow:0 0 0 6px var(--ring)}.theme-toggle[_ngcontent-%COMP%]{border:1px solid var(--card-border);background:var(--chip);color:var(--text);border-radius:999px;padding:8px 12px;cursor:pointer;transition:transform .15s ease}.theme-toggle[_ngcontent-%COMP%]:hover{transform:translateY(-1px)}.main-title[_ngcontent-%COMP%]{margin:6px 0 4px;font-weight:var(--fw-700);letter-spacing:.2px;font-size:clamp(22px,3.4vw,32px);background:linear-gradient(90deg,var(--text),var(--brand));-webkit-background-clip:text;background-clip:text;color:#000!important}.subtitle[_ngcontent-%COMP%]{color:var(--muted);font-size:14px}[_ngcontent-%COMP%]:root{--brand: #4f46e5;--brand-2: #06b6d4}.progress[_ngcontent-%COMP%]{width:100%;height:10px;background:#f0f0f0;border-radius:6px;overflow:hidden;margin-top:6px}.bar[_ngcontent-%COMP%]{height:100%;border-radius:6px;background-color:#87cefa!important;transition:width .4s ease}.filters-wrap[_ngcontent-%COMP%]{position:sticky;top:10px;z-index:5;margin:18px 0 28px;background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:14px;align-items:center}.filters[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:14px;font-weight:var(--fw-600);color:var(--muted);margin:0 6px 0 2px;display:flex;align-items:center;gap:8px}.select[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;background:var(--select);border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px;min-width:230px;transition:box-shadow .2s ease,border-color .2s ease}.select[_ngcontent-%COMP%]:focus-within{box-shadow:0 0 0 6px var(--ring);border-color:var(--brand)}.select[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:18px;height:18px;opacity:.7}.select[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{border:0;background:transparent;color:var(--text);width:100%;padding:6px 6px 6px 2px;outline:none;font-size:14px;appearance:none}.filter-actions[_ngcontent-%COMP%]{margin-left:auto;display:flex;gap:10px;flex-wrap:wrap}.filter-container[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center;width:100%;gap:10px}.filter-actions[_ngcontent-%COMP%]{display:flex;gap:10px;flex-wrap:wrap}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip, #f3f4f6);color:var(--text, #111);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:600;cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip);color:var(--text);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:var(--fw-600);cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[_ngcontent-%COMP%]:hover{transform:translateY(-1px);box-shadow:var(--shadow)}.btn.primary[_ngcontent-%COMP%]{background:linear-gradient(135deg,var(--brand),var(--brand-2));color:#fff;border-color:transparent}.kpi-grid[_ngcontent-%COMP%]{display:grid;gap:22px;grid-template-columns:repeat(12,1fr)}.kpi-card[_ngcontent-%COMP%]{background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a;grid-column:span 6;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);padding:18px 18px 16px;overflow:hidden;position:relative}.kpi-card[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;pointer-events:none;background:radial-gradient(450px 120px at 95% -10%,rgba(122,162,255,.13),transparent 45%)}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);transition:transform .2s ease}.card-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:10px;margin-bottom:12px}.card-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:15px;margin-left:-15px;letter-spacing:.2px}#chipdot[_ngcontent-%COMP%]{margin-left:80px}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;border:1px solid #ccc;background:var(--chip);border-radius:999px;padding:6px 10px;font-size:12px;color:var(--muted)}.chip[_ngcontent-%COMP%]   .dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:#add8e6}.kpi-items[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px}.kpi-item[_ngcontent-%COMP%]{border:1px solid #e2e8f0;border-radius:15px!important;background:linear-gradient(180deg,rgba(255,255,255,.04),transparent);padding:10px 12px;transition:border-color .2s ease,background .2s ease}.kpi-item[_ngcontent-%COMP%]:hover{border-color:var(--ring);background:linear-gradient(180deg,rgba(122,162,255,.08),transparent)}.kpi-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:12px;font-size:13px;margin-bottom:8px}.kpi-label[_ngcontent-%COMP%]{color:var(--muted)}.kpi-values[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;font-weight:var(--fw-600)}.kpi-actual[_ngcontent-%COMP%]{color:var(--text)}.trend-icon[_ngcontent-%COMP%]{width:16px;height:16px}.progress[_ngcontent-%COMP%]{position:relative;height:10px;border-radius:999px;overflow:hidden;background:linear-gradient(0deg,#ffffff14,#ffffff0a);border:1px solid #e2e8f0}.bar[_ngcontent-%COMP%]{height:100%;background:linear-gradient(90deg,var(--brand),var(--brand-2));border-radius:inherit;width:0%;transition:width .9s cubic-bezier(.2,.8,.2,1);position:relative;mask-image:linear-gradient(90deg,#0003 0 10px,#000 40px)}.bar.down[_ngcontent-%COMP%]{background:linear-gradient(90deg,var(--danger),#fda4af)}.growth[_ngcontent-%COMP%]{grid-column:span 12;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:18px;background-color:#fff!important;box-shadow:0 4px 6px #0000001a}.growth-head[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;margin-bottom:8px}.growth-head[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:15px}.growth-note[_ngcontent-%COMP%]{color:var(--muted);font-size:12px;margin-top:6px}.sparkline[_ngcontent-%COMP%]{width:100%;height:140px;border-radius:var(--radius);border:1px dashed var(--card-border);display:grid;place-items:center;color:var(--muted);font-size:13px}@media (max-width: 1024px){.kpi-card[_ngcontent-%COMP%]{grid-column:span 12}}@media (max-width: 640px){.filters[_ngcontent-%COMP%]{gap:10px}.select[_ngcontent-%COMP%]{min-width:100%}.filter-actions[_ngcontent-%COMP%]{width:100%;justify-content:flex-end}}@keyframes _ngcontent-%COMP%_pop{0%{transform:scale(.98);opacity:0}to{transform:scale(1);opacity:1}}.kpi-card[_ngcontent-%COMP%], .growth[_ngcontent-%COMP%], .header[_ngcontent-%COMP%], .filters[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pop .35s ease both;border-radius:10px!important}.ring[_ngcontent-%COMP%]{box-shadow:0 0 0 6px var(--ring);transition:box-shadow .3s ease}.trend-icon[_ngcontent-%COMP%]{width:18px;height:18px;stroke-width:2.25;vertical-align:middle;flex-shrink:0;display:inline-block}.kpi-values[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;line-height:1}.trend-up[_ngcontent-%COMP%]{color:var(--success)}.trend-down[_ngcontent-%COMP%]{color:var(--danger)}.kpi-item[_ngcontent-%COMP%]{flex:1}.kpi-item-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:20px;border-radius:14px;margin-bottom:16px}.kpi-item[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;justify-content:center}.growth-box[_ngcontent-%COMP%]{background:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;width:90px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:flex;flex-direction:column;align-items:center}.growth-box[_ngcontent-%COMP%]{background:linear-gradient(135deg,#10b981,#059669);color:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:inline-flex;flex-direction:column;align-items:flex-start;width:70px;height:70px}.growth-header[_ngcontent-%COMP%]{display:flex;color:#fff;justify-content:flex-start;align-items:baseline;gap:4px;margin-bottom:6px}.growth-title[_ngcontent-%COMP%]{font-size:11px;color:#fff;font-weight:500}.growth-value[_ngcontent-%COMP%]{font-size:13px;font-weight:700;color:#fff}.growth-bars[_ngcontent-%COMP%]{display:flex;align-items:flex-end;gap:2px;color:#fff;height:25px;justify-content:flex-start;width:fit-content}.bar-segment[_ngcontent-%COMP%]{width:3px;background:#fff;border-radius:2px}@media (max-width: 844px){.user-icon-wrapper[_ngcontent-%COMP%]{margin-top:-10px!important}#track[_ngcontent-%COMP%]{white-space:break-spaces!important}}.user-dropdown-container[_ngcontent-%COMP%]{position:relative;margin-left:auto}.user-icon-btn[_ngcontent-%COMP%]{width:40px;height:40px;background:#fff;border:1px solid #e2e8f0;border-radius:50%;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:all .2s ease;box-shadow:0 2px 4px #0000001a}.user-icon-btn[_ngcontent-%COMP%]:hover{box-shadow:0 4px 12px #00000026;transform:translateY(-1px)}.user-icon[_ngcontent-%COMP%]{width:20px;height:20px;color:#6b7280;margin-top:7px;margin-right:10px}.logout-btn[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;gap:8px;padding:8px 12px;background:none;border:none;text-align:left;cursor:pointer;font-size:14px;color:#374151;transition:background-color .2s ease}.logout-btn[_ngcontent-%COMP%]:hover{background-color:#f3f4f6}.user-dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;right:0;z-index:999}.logout-confirm-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background:#00000080;display:flex;justify-content:center;align-items:center;z-index:999}.logout-confirm-card[_ngcontent-%COMP%]{background:#fff;border:1px solid #ccc;padding:20px 25px;border-radius:8px;box-shadow:0 4px 12px #0000004d;text-align:center;min-width:250px}.logout-confirm-card[_ngcontent-%COMP%]   .buttons[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin-top:15px}.confirm-btn[_ngcontent-%COMP%]{background-color:#d9534f;color:#fff;border:none;padding:7px 15px;border-radius:4px;cursor:pointer}.cancel-btn[_ngcontent-%COMP%]{background-color:#ccc;color:#000;border:none;padding:7px 15px;border-radius:4px;cursor:pointer}.confirm-btn[_ngcontent-%COMP%]:hover{background-color:#c9302c}.cancel-btn[_ngcontent-%COMP%]:hover{background-color:#b3b3b3}@media (max-width: 640px){.tab-btn[_ngcontent-%COMP%]{font-size:12px!important;padding:8px 12px!important}.nav-button-sa[_ngcontent-%COMP%]   nav[_ngcontent-%COMP%]{min-width:100%}}.overflow-x-auto[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}.overflow-x-auto[_ngcontent-%COMP%]{-ms-overflow-style:none;scrollbar-width:none}.user-icon-wrapper[_ngcontent-%COMP%]{position:relative;display:flex;width:100%;align-items:center;cursor:pointer}.user-icon[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:48px;height:48px}.user-dropdown[_ngcontent-%COMP%]{position:absolute;top:100%;right:0;margin-top:5px;background:#fff;border:1px solid #e5e7eb;border-radius:6px;box-shadow:0 2px 10px #0000001a;width:120px;z-index:9999}.user-dropdown[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;margin:0;padding:0}.user-dropdown[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:8px 12px;cursor:pointer;font-size:14px;color:#374151}.user-dropdown[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#f3f4f6}.logout-modal-backdrop[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#0006;display:flex;justify-content:center;align-items:center;z-index:9999}.logout-modal[_ngcontent-%COMP%]{background:#fff;padding:24px;border-radius:8px;max-width:320px;width:90%;text-align:center;box-shadow:0 4px 20px #0003}.logout-modal[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-bottom:12px;font-size:18px}.logout-modal[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:20px;font-size:14px}.modal-actions[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:10px}.btn-cancel[_ngcontent-%COMP%]{background-color:#e5e7eb;color:#374151;padding:6px 12px;border-radius:4px;cursor:pointer;border:none}.btn-logout[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;padding:6px 12px;border-radius:4px;cursor:pointer;border:none}',
    ],
  });
};
var pf = ["chart"],
  fa = (() => {
    class r {
      constructor() {
        (this.chart = ht()),
          (this.annotations = ht()),
          (this.colors = ht()),
          (this.dataLabels = ht()),
          (this.series = ht()),
          (this.stroke = ht()),
          (this.labels = ht()),
          (this.legend = ht()),
          (this.markers = ht()),
          (this.noData = ht()),
          (this.parsing = ht()),
          (this.fill = ht()),
          (this.tooltip = ht()),
          (this.plotOptions = ht()),
          (this.responsive = ht()),
          (this.xaxis = ht()),
          (this.yaxis = ht()),
          (this.forecastDataPoints = ht()),
          (this.grid = ht()),
          (this.states = ht()),
          (this.title = ht()),
          (this.subtitle = ht()),
          (this.theme = ht()),
          (this.autoUpdateSeries = ht(!0)),
          (this.chartReady = xd()),
          (this.chartInstance = pe(null)),
          (this.chartElement = Md.required("chart")),
          (this.ngZone = te(Ie)),
          (this.isBrowser = Si(te(Vi)));
      }
      ngOnChanges(e) {
        this.isBrowser &&
          this.ngZone.runOutsideAngular(() => {
            Ns.schedule(() => this.hydrate(e));
          });
      }
      ngOnDestroy() {
        this.destroy();
      }
      hydrate(e) {
        if (
          this.autoUpdateSeries() &&
          Object.keys(e).filter((n) => n !== "series").length === 0
        ) {
          this.updateSeries(this.series(), !0);
          return;
        }
        this.createElement();
      }
      createElement() {
        return Vs(this, null, function* () {
          let { default: e } = yield import("./chunk-A3I5K2VQ.mjs");
          window.ApexCharts ||= e;
          let t = {};
          [
            "annotations",
            "chart",
            "colors",
            "dataLabels",
            "series",
            "stroke",
            "labels",
            "legend",
            "fill",
            "tooltip",
            "plotOptions",
            "responsive",
            "markers",
            "noData",
            "parsing",
            "xaxis",
            "yaxis",
            "forecastDataPoints",
            "grid",
            "states",
            "title",
            "subtitle",
            "theme",
          ].forEach((u) => {
            let b = this[u]();
            b && (t[u] = b);
          }),
            this.destroy();
          let o = this.ngZone.runOutsideAngular(
            () => new e(this.chartElement().nativeElement, t)
          );
          this.chartInstance.set(o),
            this.render(),
            this.chartReady.emit({ chartObj: o });
        });
      }
      render() {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.render()
        );
      }
      updateOptions(e, t, n, o) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.updateOptions(e, t, n, o)
        );
      }
      updateSeries(e, t) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.updateSeries(e, t)
        );
      }
      appendSeries(e, t) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.appendSeries(e, t)
        );
      }
      appendData(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.appendData(e)
        );
      }
      highlightSeries(e) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.highlightSeries(e)
        );
      }
      toggleSeries(e) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.toggleSeries(e)
        );
      }
      showSeries(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.showSeries(e)
        );
      }
      hideSeries(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.hideSeries(e)
        );
      }
      resetSeries() {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.resetSeries()
        );
      }
      zoomX(e, t) {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.zoomX(e, t));
      }
      toggleDataPointSelection(e, t) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.toggleDataPointSelection(e, t)
        );
      }
      destroy() {
        this.chartInstance()?.destroy(), this.chartInstance.set(null);
      }
      setLocale(e) {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.setLocale(e));
      }
      paper() {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.paper());
      }
      addXaxisAnnotation(e, t, n) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addXaxisAnnotation(e, t, n)
        );
      }
      addYaxisAnnotation(e, t, n) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addYaxisAnnotation(e, t, n)
        );
      }
      addPointAnnotation(e, t, n) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addPointAnnotation(e, t, n)
        );
      }
      removeAnnotation(e, t) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.removeAnnotation(e, t)
        );
      }
      clearAnnotations(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.clearAnnotations(e)
        );
      }
      dataURI(e) {
        return this.chartInstance()?.dataURI(e);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["apx-chart"]],
          viewQuery: function (t, n) {
            t & 1 && Td(n.chartElement, pf, 5), t & 2 && Ys();
          },
          inputs: {
            chart: [1, "chart"],
            annotations: [1, "annotations"],
            colors: [1, "colors"],
            dataLabels: [1, "dataLabels"],
            series: [1, "series"],
            stroke: [1, "stroke"],
            labels: [1, "labels"],
            legend: [1, "legend"],
            markers: [1, "markers"],
            noData: [1, "noData"],
            parsing: [1, "parsing"],
            fill: [1, "fill"],
            tooltip: [1, "tooltip"],
            plotOptions: [1, "plotOptions"],
            responsive: [1, "responsive"],
            xaxis: [1, "xaxis"],
            yaxis: [1, "yaxis"],
            forecastDataPoints: [1, "forecastDataPoints"],
            grid: [1, "grid"],
            states: [1, "states"],
            title: [1, "title"],
            subtitle: [1, "subtitle"],
            theme: [1, "theme"],
            autoUpdateSeries: [1, "autoUpdateSeries"],
          },
          outputs: { chartReady: "chartReady" },
          standalone: !0,
          features: [wt, le],
          decls: 2,
          vars: 0,
          consts: [["chart", ""]],
          template: function (t, n) {
            t & 1 && R(0, "div", null, 0);
          },
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return r;
  })();
var ga = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({});
    }
  }
  return r;
})();
var ul = class {
  constructor() {
    (this.class = ""),
      (this.backgroundGradient = !1),
      (this.backgroundColor = "transparent"),
      (this.backgroundGradientStopColor = "transparent"),
      (this.backgroundOpacity = 1),
      (this.backgroundStroke = "transparent"),
      (this.backgroundStrokeWidth = 0),
      (this.backgroundPadding = 5),
      (this.percent = 0),
      (this.radius = 90),
      (this.space = 4),
      (this.toFixed = 0),
      (this.maxPercent = 1e3),
      (this.renderOnClick = !0),
      (this.units = "%"),
      (this.unitsFontSize = "10"),
      (this.unitsFontWeight = "normal"),
      (this.unitsColor = "#444444"),
      (this.outerStrokeGradient = !1),
      (this.outerStrokeWidth = 8),
      (this.outerStrokeColor = "#78C000"),
      (this.outerStrokeGradientStopColor = "transparent"),
      (this.outerStrokeLinecap = "round"),
      (this.innerStrokeColor = "#C7E596"),
      (this.innerStrokeWidth = 4),
      (this.titleFormat = void 0),
      (this.title = "auto"),
      (this.titleColor = "#444444"),
      (this.titleFontSize = "20"),
      (this.titleFontWeight = "normal"),
      (this.subtitleFormat = void 0),
      (this.subtitle = "progress"),
      (this.subtitleColor = "#A9A9A9"),
      (this.subtitleFontSize = "10"),
      (this.subtitleFontWeight = "normal"),
      (this.imageSrc = void 0),
      (this.imageHeight = 0),
      (this.imageWidth = 0),
      (this.animation = !0),
      (this.animateTitle = !0),
      (this.animateSubtitle = !1),
      (this.animationDuration = 500),
      (this.showTitle = !0),
      (this.showSubtitle = !0),
      (this.showUnits = !0),
      (this.showImage = !1),
      (this.showBackground = !0),
      (this.showInnerStroke = !0),
      (this.clockwise = !0),
      (this.responsive = !1),
      (this.startFromZero = !0),
      (this.showZeroOuterStroke = !0),
      (this.lazy = !1);
  }
};
var _a = (() => {
  class r {
    static forRoot(e = {}) {
      return { ngModule: r, providers: [{ provide: ul, useValue: e }] };
    }
  }
  return (
    (r.ɵfac = function (e) {
      return new (e || r)();
    }),
    (r.ɵmod = be({ type: r })),
    (r.ɵinj = _e({ imports: [De] })),
    r
  );
})();
var ba = class r {
  constructor(i) {
    this.http = i;
  }
  baseUrl = "https://uat.smartassistapp.in/api/superAdmin/dashboard";
  getDealerActivities(i) {
    let e = sessionStorage.getItem("token"),
      t = new Yt({ Authorization: `Bearer ${e}` }),
      n = `${this.baseUrl}/NoSM?type=${i}`;
    return this.http.get(n, { headers: t });
  }
  getDealerActivitiesCustom(i, e, t) {
    let n = sessionStorage.getItem("token"),
      o = new Yt({ Authorization: `Bearer ${n}` }),
      u = t || "MTD",
      b = `${this.baseUrl}/NoSM?type=${u}&start_date=${i}&end_date=${e}`;
    return this.http.get(b, { headers: o });
  }
  getNoSMUsers(i, e = "MTD", t, n) {
    let o = sessionStorage.getItem("token"),
      u = new Yt({ Authorization: `Bearer ${o}` }),
      b = `${this.baseUrl}/NoSM?dealer_id=${i}&type=${e}`;
    return (
      e === "CUSTOM" && t && n && (b += `&start_date=${t}&end_date=${n}`),
      this.http.get(b, { headers: u })
    );
  }
  getDealers(i, e) {
    return this.http.get(
      `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${i}`,
      { headers: { Authorization: `Bearer ${e}` } }
    );
  }
  getDealersByCustomDate(i, e, t, n) {
    let o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?start_date=${i}&end_date=${e}`;
    return (
      n &&
        (o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${n}&start_date=${i}&end_date=${e}`),
      this.http.get(o, { headers: { Authorization: `Bearer ${t}` } })
    );
  }
  getDealerUsers(i, e, t) {
    let n = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&type=${e}`;
    return this.http.get(n, { headers: { Authorization: `Bearer ${t}` } });
  }
  getCustomUsers(i, e, t, n) {
    let o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&start_date=${e}&end_date=${t}`;
    return this.http.get(o, { headers: { Authorization: `Bearer ${n}` } });
  }
  getKpiData(i, e = "MTD") {
    let t = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${e}`;
    return this.http.get(t, { headers: { Authorization: `Bearer ${i}` } });
  }
  static ɵfac = function (e) {
    return new (e || r)(ie(St));
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var va = class r {
  selectedDealerSource = new Fi(null);
  selectedDealer$ = this.selectedDealerSource.asObservable();
  setSelectedDealer(i) {
    this.selectedDealerSource.next(i);
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var Mp = ["toast-component", ""];
function mf(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 5),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.remove());
      }),
      a(1, "span", 6),
      c(2, "\xD7"),
      s()();
  }
}
function ff(r, i) {
  if ((r & 1 && (Me(0), c(1), Oe()), r & 2)) {
    let e = _(2);
    d(), K("[", e.duplicatesCount + 1, "]");
  }
}
function gf(r, i) {
  if (
    (r & 1 && (a(0, "div"), c(1), M(2, ff, 2, 1, "ng-container", 4), s()),
    r & 2)
  ) {
    let e = _();
    Fe(e.options.titleClass),
      se("aria-label", e.title),
      d(),
      K(" ", e.title, " "),
      d(),
      g("ngIf", e.duplicatesCount);
  }
}
function _f(r, i) {
  if ((r & 1 && R(0, "div", 7), r & 2)) {
    let e = _();
    Fe(e.options.messageClass), g("innerHTML", e.message, Jr);
  }
}
function bf(r, i) {
  if ((r & 1 && (a(0, "div", 8), c(1), s()), r & 2)) {
    let e = _();
    Fe(e.options.messageClass),
      se("aria-label", e.message),
      d(),
      K(" ", e.message, " ");
  }
}
function vf(r, i) {
  if ((r & 1 && (a(0, "div"), R(1, "div", 9), s()), r & 2)) {
    let e = _();
    d(), ut("width", e.width() + "%");
  }
}
function xf(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 5),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.remove());
      }),
      a(1, "span", 6),
      c(2, "\xD7"),
      s()();
  }
}
function yf(r, i) {
  if ((r & 1 && (Me(0), c(1), Oe()), r & 2)) {
    let e = _(2);
    d(), K("[", e.duplicatesCount + 1, "]");
  }
}
function Cf(r, i) {
  if (
    (r & 1 && (a(0, "div"), c(1), M(2, yf, 2, 1, "ng-container", 4), s()),
    r & 2)
  ) {
    let e = _();
    Fe(e.options.titleClass),
      se("aria-label", e.title),
      d(),
      K(" ", e.title, " "),
      d(),
      g("ngIf", e.duplicatesCount);
  }
}
function wf(r, i) {
  if ((r & 1 && R(0, "div", 7), r & 2)) {
    let e = _();
    Fe(e.options.messageClass), g("innerHTML", e.message, Jr);
  }
}
function Df(r, i) {
  if ((r & 1 && (a(0, "div", 8), c(1), s()), r & 2)) {
    let e = _();
    Fe(e.options.messageClass),
      se("aria-label", e.message),
      d(),
      K(" ", e.message, " ");
  }
}
function Sf(r, i) {
  if ((r & 1 && (a(0, "div"), R(1, "div", 9), s()), r & 2)) {
    let e = _();
    d(), ut("width", e.width() + "%");
  }
}
var hl = class {
    _attachedHost;
    component;
    viewContainerRef;
    injector;
    constructor(i, e) {
      (this.component = i), (this.injector = e);
    }
    attach(i, e) {
      return (this._attachedHost = i), i.attach(this, e);
    }
    detach() {
      let i = this._attachedHost;
      if (i) return (this._attachedHost = void 0), i.detach();
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(i) {
      this._attachedHost = i;
    }
  },
  ml = class {
    _attachedPortal;
    _disposeFn;
    attach(i, e) {
      return (this._attachedPortal = i), this.attachComponentPortal(i, e);
    }
    detach() {
      this._attachedPortal && this._attachedPortal.setAttachedHost(),
        (this._attachedPortal = void 0),
        this._disposeFn && (this._disposeFn(), (this._disposeFn = void 0));
    }
    setDisposeFn(i) {
      this._disposeFn = i;
    }
  },
  fl = class {
    _overlayRef;
    componentInstance;
    duplicatesCount = 0;
    _afterClosed = new Ee();
    _activate = new Ee();
    _manualClose = new Ee();
    _resetTimeout = new Ee();
    _countDuplicate = new Ee();
    constructor(i) {
      this._overlayRef = i;
    }
    manualClose() {
      this._manualClose.next(), this._manualClose.complete();
    }
    manualClosed() {
      return this._manualClose.asObservable();
    }
    timeoutReset() {
      return this._resetTimeout.asObservable();
    }
    countDuplicate() {
      return this._countDuplicate.asObservable();
    }
    close() {
      this._overlayRef.detach(),
        this._afterClosed.next(),
        this._manualClose.next(),
        this._afterClosed.complete(),
        this._manualClose.complete(),
        this._activate.complete(),
        this._resetTimeout.complete(),
        this._countDuplicate.complete();
    }
    afterClosed() {
      return this._afterClosed.asObservable();
    }
    isInactive() {
      return this._activate.isStopped;
    }
    activate() {
      this._activate.next(), this._activate.complete();
    }
    afterActivate() {
      return this._activate.asObservable();
    }
    onDuplicate(i, e) {
      i && this._resetTimeout.next(),
        e && this._countDuplicate.next(++this.duplicatesCount);
    }
  },
  wr = class {
    toastId;
    config;
    message;
    title;
    toastType;
    toastRef;
    _onTap = new Ee();
    _onAction = new Ee();
    constructor(i, e, t, n, o, u) {
      (this.toastId = i),
        (this.config = e),
        (this.message = t),
        (this.title = n),
        (this.toastType = o),
        (this.toastRef = u),
        this.toastRef.afterClosed().subscribe(() => {
          this._onAction.complete(), this._onTap.complete();
        });
    }
    triggerTap() {
      this._onTap.next(), this.config.tapToDismiss && this._onTap.complete();
    }
    onTap() {
      return this._onTap.asObservable();
    }
    triggerAction(i) {
      this._onAction.next(i);
    }
    onAction() {
      return this._onAction.asObservable();
    }
  },
  Op = {
    maxOpened: 0,
    autoDismiss: !1,
    newestOnTop: !0,
    preventDuplicates: !1,
    countDuplicates: !1,
    resetTimeoutOnDuplicate: !1,
    includeTitleDuplicates: !1,
    iconClasses: {
      error: "toast-error",
      info: "toast-info",
      success: "toast-success",
      warning: "toast-warning",
    },
    closeButton: !1,
    disableTimeOut: !1,
    timeOut: 5e3,
    extendedTimeOut: 1e3,
    enableHtml: !1,
    progressBar: !1,
    toastClass: "ngx-toastr",
    positionClass: "toast-top-right",
    titleClass: "toast-title",
    messageClass: "toast-message",
    easing: "ease-in",
    easeTime: 300,
    tapToDismiss: !0,
    onActivateTick: !1,
    progressAnimation: "decreasing",
  },
  Tp = new $e("ToastConfig"),
  gl = class extends ml {
    _hostDomElement;
    _componentFactoryResolver;
    _appRef;
    constructor(i, e, t) {
      super(),
        (this._hostDomElement = i),
        (this._componentFactoryResolver = e),
        (this._appRef = t);
    }
    attachComponentPortal(i, e) {
      let t = this._componentFactoryResolver.resolveComponentFactory(
          i.component
        ),
        n;
      return (
        (n = t.create(i.injector)),
        this._appRef.attachView(n.hostView),
        this.setDisposeFn(() => {
          this._appRef.detachView(n.hostView), n.destroy();
        }),
        e
          ? this._hostDomElement.insertBefore(
              this._getComponentRootNode(n),
              this._hostDomElement.firstChild
            )
          : this._hostDomElement.appendChild(this._getComponentRootNode(n)),
        n
      );
    }
    _getComponentRootNode(i) {
      return i.hostView.rootNodes[0];
    }
  },
  Mf = (() => {
    class r {
      _document = te(Le);
      _containerElement;
      ngOnDestroy() {
        this._containerElement &&
          this._containerElement.parentNode &&
          this._containerElement.parentNode.removeChild(this._containerElement);
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = this._document.createElement("div");
        e.classList.add("overlay-container"),
          e.setAttribute("aria-live", "polite"),
          this._document.body.appendChild(e),
          (this._containerElement = e);
      }
      static ɵfac = function (t) {
        return new (t || r)();
      };
      static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
    }
    return r;
  })(),
  _l = class {
    _portalHost;
    constructor(i) {
      this._portalHost = i;
    }
    attach(i, e = !0) {
      return this._portalHost.attach(i, e);
    }
    detach() {
      return this._portalHost.detach();
    }
  },
  Of = (() => {
    class r {
      _overlayContainer = te(Mf);
      _componentFactoryResolver = te(zn);
      _appRef = te(un);
      _document = te(Le);
      _paneElements = new Map();
      create(e, t) {
        return this._createOverlayRef(this.getPaneElement(e, t));
      }
      getPaneElement(e = "", t) {
        return (
          this._paneElements.get(t) || this._paneElements.set(t, {}),
          this._paneElements.get(t)[e] ||
            (this._paneElements.get(t)[e] = this._createPaneElement(e, t)),
          this._paneElements.get(t)[e]
        );
      }
      _createPaneElement(e, t) {
        let n = this._document.createElement("div");
        return (
          (n.id = "toast-container"),
          n.classList.add(e),
          n.classList.add("toast-container"),
          t
            ? t.getContainerElement().appendChild(n)
            : this._overlayContainer.getContainerElement().appendChild(n),
          n
        );
      }
      _createPortalHost(e) {
        return new gl(e, this._componentFactoryResolver, this._appRef);
      }
      _createOverlayRef(e) {
        return new _l(this._createPortalHost(e));
      }
      static ɵfac = function (t) {
        return new (t || r)();
      };
      static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
    }
    return r;
  })(),
  Ht = (() => {
    class r {
      overlay;
      _injector;
      sanitizer;
      ngZone;
      toastrConfig;
      currentlyActive = 0;
      toasts = [];
      overlayContainer;
      previousToastMessage;
      index = 0;
      constructor(e, t, n, o, u) {
        (this.overlay = t),
          (this._injector = n),
          (this.sanitizer = o),
          (this.ngZone = u),
          (this.toastrConfig = ee(ee({}, e.default), e.config)),
          e.config.iconClasses &&
            (this.toastrConfig.iconClasses = ee(
              ee({}, e.default.iconClasses),
              e.config.iconClasses
            ));
      }
      show(e, t, n = {}, o = "") {
        return this._preBuildNotification(o, e, t, this.applyConfig(n));
      }
      success(e, t, n = {}) {
        let o = this.toastrConfig.iconClasses.success || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(n));
      }
      error(e, t, n = {}) {
        let o = this.toastrConfig.iconClasses.error || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(n));
      }
      info(e, t, n = {}) {
        let o = this.toastrConfig.iconClasses.info || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(n));
      }
      warning(e, t, n = {}) {
        let o = this.toastrConfig.iconClasses.warning || "";
        return this._preBuildNotification(o, e, t, this.applyConfig(n));
      }
      clear(e) {
        for (let t of this.toasts)
          if (e !== void 0) {
            if (t.toastId === e) {
              t.toastRef.manualClose();
              return;
            }
          } else t.toastRef.manualClose();
      }
      remove(e) {
        let t = this._findToast(e);
        if (
          !t ||
          (t.activeToast.toastRef.close(),
          this.toasts.splice(t.index, 1),
          (this.currentlyActive = this.currentlyActive - 1),
          !this.toastrConfig.maxOpened || !this.toasts.length)
        )
          return !1;
        if (
          this.currentlyActive < this.toastrConfig.maxOpened &&
          this.toasts[this.currentlyActive]
        ) {
          let n = this.toasts[this.currentlyActive].toastRef;
          n.isInactive() ||
            ((this.currentlyActive = this.currentlyActive + 1), n.activate());
        }
        return !0;
      }
      findDuplicate(e = "", t = "", n, o) {
        let { includeTitleDuplicates: u } = this.toastrConfig;
        for (let b of this.toasts) {
          let C = u && b.title === e;
          if ((!u || C) && b.message === t)
            return b.toastRef.onDuplicate(n, o), b;
        }
        return null;
      }
      applyConfig(e = {}) {
        return ee(ee({}, this.toastrConfig), e);
      }
      _findToast(e) {
        for (let t = 0; t < this.toasts.length; t++)
          if (this.toasts[t].toastId === e)
            return { index: t, activeToast: this.toasts[t] };
        return null;
      }
      _preBuildNotification(e, t, n, o) {
        return o.onActivateTick
          ? this.ngZone.run(() => this._buildNotification(e, t, n, o))
          : this._buildNotification(e, t, n, o);
      }
      _buildNotification(e, t, n, o) {
        if (!o.toastComponent) throw new Error("toastComponent required");
        let u = this.findDuplicate(
          n,
          t,
          this.toastrConfig.resetTimeoutOnDuplicate && o.timeOut > 0,
          this.toastrConfig.countDuplicates
        );
        if (
          ((this.toastrConfig.includeTitleDuplicates && n) || t) &&
          this.toastrConfig.preventDuplicates &&
          u !== null
        )
          return u;
        this.previousToastMessage = t;
        let b = !1;
        this.toastrConfig.maxOpened &&
          this.currentlyActive >= this.toastrConfig.maxOpened &&
          ((b = !0),
          this.toastrConfig.autoDismiss && this.clear(this.toasts[0].toastId));
        let C = this.overlay.create(o.positionClass, this.overlayContainer);
        this.index = this.index + 1;
        let T = t;
        t && o.enableHtml && (T = this.sanitizer.sanitize(Cd.HTML, t));
        let k = new fl(C),
          V = new wr(this.index, o, T, n, e, k),
          B = [{ provide: wr, useValue: V }],
          L = vt.create({ providers: B, parent: this._injector }),
          H = new hl(o.toastComponent, L),
          U = C.attach(H, o.newestOnTop);
        k.componentInstance = U.instance;
        let j = {
          toastId: this.index,
          title: n || "",
          message: t || "",
          toastRef: k,
          onShown: k.afterActivate(),
          onHidden: k.afterClosed(),
          onTap: V.onTap(),
          onAction: V.onAction(),
          portal: U,
        };
        return (
          b ||
            ((this.currentlyActive = this.currentlyActive + 1),
            setTimeout(() => {
              j.toastRef.activate();
            })),
          this.toasts.push(j),
          j
        );
      }
      static ɵfac = function (t) {
        return new (t || r)(ie(Tp), ie(Of), ie(vt), ie(Bd), ie(Ie));
      };
      static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
    }
    return r;
  })(),
  Tf = (() => {
    class r {
      toastrService;
      toastPackage;
      ngZone;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = pe(-1);
      toastClasses = "";
      state;
      get _state() {
        return this.state();
      }
      get displayStyle() {
        if (this.state().value === "inactive") return "none";
      }
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, t, n) {
        (this.toastrService = e),
          (this.toastPackage = t),
          (this.ngZone = n),
          (this.message = t.message),
          (this.title = t.title),
          (this.options = t.config),
          (this.originalTimeout = t.config.timeOut),
          (this.toastClasses = `${t.toastType} ${t.config.toastClass}`),
          (this.sub = t.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = t.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = t.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = t.toastRef.countDuplicate().subscribe((o) => {
            this.duplicatesCount = o;
          })),
          (this.state = pe({
            value: "inactive",
            params: {
              easeTime: this.toastPackage.config.easeTime,
              easing: "ease-in",
            },
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.update((e) => Ne(ee({}, e), { value: "active" })),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            (this.outsideTimeout(() => this.remove(), this.options.timeOut),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              this.outsideInterval(() => this.updateProgress(), 10));
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          t = this.hideTime - e;
        this.width.set((t / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((n) => 100 - n),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.update((e) => Ne(ee({}, e), { value: "active" })),
          this.outsideTimeout(() => this.remove(), this.originalTimeout),
          (this.options.timeOut = this.originalTimeout),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10);
      }
      remove() {
        this.state().value !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.update((e) => Ne(ee({}, e), { value: "removed" })),
          this.outsideTimeout(
            () => this.toastrService.remove(this.toastPackage.toastId),
            +this.toastPackage.config.easeTime
          ));
      }
      tapToast() {
        this.state().value !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state().value !== "removed" &&
          this.options.disableTimeOut !== "extendedTimeOut" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state().value === "removed" ||
          (this.outsideTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          ),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10));
      }
      outsideTimeout(e, t) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.timeout = setTimeout(() => this.runInsideAngular(e), t))
            )
          : (this.timeout = setTimeout(() => e(), t));
      }
      outsideInterval(e, t) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.intervalId = setInterval(
                  () => this.runInsideAngular(e),
                  t
                ))
            )
          : (this.intervalId = setInterval(() => e(), t));
      }
      runInsideAngular(e) {
        this.ngZone ? this.ngZone.run(() => e()) : e();
      }
      static ɵfac = function (t) {
        return new (t || r)(F(Ht), F(wr), F(Ie));
      };
      static ɵcmp = oe({
        type: r,
        selectors: [["", "toast-component", ""]],
        hostVars: 5,
        hostBindings: function (t, n) {
          t & 1 &&
            O("click", function () {
              return n.tapToast();
            })("mouseenter", function () {
              return n.stickAround();
            })("mouseleave", function () {
              return n.delayedHideToast();
            }),
            t & 2 &&
              (Go("@flyInOut", n._state),
              Fe(n.toastClasses),
              ut("display", n.displayStyle));
        },
        standalone: !0,
        features: [le],
        attrs: Mp,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (t, n) {
          t & 1 &&
            M(0, mf, 3, 0, "button", 0)(1, gf, 3, 5, "div", 1)(
              2,
              _f,
              1,
              3,
              "div",
              2
            )(3, bf, 2, 4, "div", 3)(4, vf, 2, 2, "div", 4),
            t & 2 &&
              (g("ngIf", n.options.closeButton),
              d(),
              g("ngIf", n.title),
              d(),
              g("ngIf", n.message && n.options.enableHtml),
              d(),
              g("ngIf", n.message && !n.options.enableHtml),
              d(),
              g("ngIf", n.options.progressBar));
        },
        dependencies: [Be],
        encapsulation: 2,
        data: {
          animation: [
            Wn("flyInOut", [
              hn("inactive", Nt({ opacity: 0 })),
              hn("active", Nt({ opacity: 1 })),
              hn("removed", Nt({ opacity: 0 })),
              ui("inactive => active", pi("{{ easeTime }}ms {{ easing }}")),
              ui("active => removed", pi("{{ easeTime }}ms {{ easing }}")),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return r;
  })(),
  kf = Ne(ee({}, Op), { toastComponent: Tf }),
  Pf = (r = {}) => Wo([{ provide: Tp, useValue: { default: kf, config: r } }]),
  kp = (() => {
    class r {
      static forRoot(e = {}) {
        return { ngModule: r, providers: [Pf(e)] };
      }
      static ɵfac = function (t) {
        return new (t || r)();
      };
      static ɵmod = be({ type: r });
      static ɵinj = _e({});
    }
    return r;
  })();
var Ef = (() => {
    class r {
      toastrService;
      toastPackage;
      appRef;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = pe(-1);
      toastClasses = "";
      get displayStyle() {
        return this.state() === "inactive" ? "none" : null;
      }
      state = pe("inactive");
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, t, n) {
        (this.toastrService = e),
          (this.toastPackage = t),
          (this.appRef = n),
          (this.message = t.message),
          (this.title = t.title),
          (this.options = t.config),
          (this.originalTimeout = t.config.timeOut),
          (this.toastClasses = `${t.toastType} ${t.config.toastClass}`),
          (this.sub = t.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = t.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = t.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = t.toastRef.countDuplicate().subscribe((o) => {
            this.duplicatesCount = o;
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.set("active"),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            ((this.timeout = setTimeout(() => {
              this.remove();
            }, this.options.timeOut)),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              (this.intervalId = setInterval(() => this.updateProgress(), 10))),
          this.options.onActivateTick && this.appRef.tick();
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          t = this.hideTime - e;
        this.width.set((t / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((n) => 100 - n),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.set("active"),
          (this.options.timeOut = this.originalTimeout),
          (this.timeout = setTimeout(
            () => this.remove(),
            this.originalTimeout
          )),
          (this.hideTime = new Date().getTime() + (this.originalTimeout || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10));
      }
      remove() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.set("removed"),
          (this.timeout = setTimeout(() =>
            this.toastrService.remove(this.toastPackage.toastId)
          )));
      }
      tapToast() {
        this.state() !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state() === "removed" ||
          ((this.timeout = setTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          )),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10)));
      }
      static ɵfac = function (t) {
        return new (t || r)(F(Ht), F(wr), F(un));
      };
      static ɵcmp = oe({
        type: r,
        selectors: [["", "toast-component", ""]],
        hostVars: 4,
        hostBindings: function (t, n) {
          t & 1 &&
            O("click", function () {
              return n.tapToast();
            })("mouseenter", function () {
              return n.stickAround();
            })("mouseleave", function () {
              return n.delayedHideToast();
            }),
            t & 2 && (Fe(n.toastClasses), ut("display", n.displayStyle));
        },
        standalone: !0,
        features: [le],
        attrs: Mp,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (t, n) {
          t & 1 &&
            M(0, xf, 3, 0, "button", 0)(1, Cf, 3, 5, "div", 1)(
              2,
              wf,
              1,
              3,
              "div",
              2
            )(3, Df, 2, 4, "div", 3)(4, Sf, 2, 2, "div", 4),
            t & 2 &&
              (g("ngIf", n.options.closeButton),
              d(),
              g("ngIf", n.title),
              d(),
              g("ngIf", n.message && n.options.enableHtml),
              d(),
              g("ngIf", n.message && !n.options.enableHtml),
              d(),
              g("ngIf", n.options.progressBar));
        },
        dependencies: [Be],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return r;
  })(),
  Bw = Ne(ee({}, Op), { toastComponent: Ef });
var Af = ["chart"],
  Ff = (r, i, e, t, n) => ({
    "with-zindex": r,
    "no-zindex": i,
    fixed: e,
    "sidebar-open": t,
    "sidebar-closed": n,
  }),
  Pp = (r) => ({ active: r }),
  Rf = (r) => ({ "sticky-col-header": r }),
  bl = (r) => ({ color: r }),
  Vf = (r, i) => ({ "row-alt": r, "row-normal": i }),
  Nf = (r) => ({
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    width: "16px",
    height: "16px",
    borderRadius: "50%",
    backgroundColor: r,
    color: "white",
    fontSize: "10px",
    marginRight: "8px",
  }),
  Lf = (r) => ({
    color: r,
    marginLeft: "4px",
    display: "inline-block",
    width: "36px",
    textAlign: "left",
    fontSize: "12px",
  }),
  Ep = (r) => ({ color: r });
function Bf(r, i) {
  r & 1 && (a(0, "div", 72), R(1, "div", 73), s());
}
function Hf(r, i) {
  if (
    (r & 1 && (a(0, "span"), c(1), ei(2, "date"), ei(3, "date"), s()), r & 2)
  ) {
    let e = _(3);
    d(),
      di(
        " ",
        Yo(2, 2, e.customStartDate, "shortDate"),
        " - ",
        Yo(3, 5, e.customEndDate, "shortDate"),
        " "
      );
  }
}
function jf(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 74),
      c(1, " Showing results for: "),
      M(2, Hf, 4, 8, "span", 1),
      s()),
    r & 2)
  ) {
    let e = _(2);
    d(2), g("ngIf", e.selectedFilter === "CUSTOM");
  }
}
function zf(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 75)(1, "input", 76),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _(2);
        return Xe(o.customStartDate, n) || (o.customStartDate = n), D(n);
      }),
      O("change", function () {
        w(e);
        let n = _(2);
        return D(n.validateCustomDates());
      }),
      s(),
      a(2, "input", 76),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _(2);
        return Xe(o.customEndDate, n) || (o.customEndDate = n), D(n);
      }),
      O("change", function () {
        w(e);
        let n = _(2);
        return D(n.validateCustomDates());
      }),
      s(),
      a(3, "button", 77),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.applyCustomDate());
      }),
      c(4, "Apply"),
      s(),
      a(5, "button", 78),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.resetCustomDate());
      }),
      c(6, "Reset"),
      s()();
  }
  if (r & 2) {
    let e = _(2);
    d(), Ze("ngModel", e.customStartDate), d(), Ze("ngModel", e.customEndDate);
  }
}
function Uf(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 88)(1, "input", 89),
      O("change", function (n) {
        let o = w(e).$implicit;
        return _(4).toggleDealerSelection(o), D(n.stopPropagation());
      }),
      s(),
      a(2, "span", 90),
      O("click", function (n) {
        let o = w(e).$implicit;
        return _(4).toggleDealerSelection(o), D(n.stopPropagation());
      }),
      c(3),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(4);
    d(), g("checked", t.isDealerSelected(e)), d(2), K(" ", e.dealerName, " ");
  }
}
function Wf(r, i) {
  if ((r & 1 && (Me(0), M(1, Uf, 4, 2, "div", 87), Oe()), r & 2)) {
    let e = _(3);
    d(), g("ngForOf", e.filteredDealers)("ngForTrackBy", e.trackByDealerId);
  }
}
function $f(r, i) {
  r & 1 && (a(0, "div", 91), c(1, " No dealers found "), s());
}
function Gf(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 79)(1, "div", 80)(2, "input", 81),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _(2);
        return Xe(o.dealerSearch, n) || (o.dealerSearch = n), D(n);
      }),
      O("input", function () {
        w(e);
        let n = _(2);
        return D(n.filterDealers());
      })("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      s()(),
      a(3, "div", 82)(4, "label", 83),
      O("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      a(5, "input", 84),
      O("change", function (n) {
        return w(e), _(2).toggleSelectAll(n), D(n.stopPropagation());
      }),
      s(),
      c(6, " Select All "),
      s(),
      a(7, "button", 85),
      O("click", function (n) {
        return w(e), _(2).clearSelection(), D(n.stopPropagation());
      }),
      c(8, " Clear "),
      s()(),
      M(9, Wf, 2, 2, "ng-container", 86)(
        10,
        $f,
        2,
        0,
        "ng-template",
        null,
        0,
        lt
      ),
      s();
  }
  if (r & 2) {
    let e = rt(11),
      t = _(2);
    d(2),
      Ze("ngModel", t.dealerSearch),
      d(3),
      g("checked", t.areAllSelected()),
      d(4),
      g("ngIf", t.filteredDealers.length > 0)("ngIfElse", e);
  }
}
function Yf(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "tr", 94)(1, "td", 95)(2, "button", 96),
      O("click", function (n) {
        w(e);
        let o = _().$implicit,
          u = _(2);
        return D(u.toggleSummaryRow(n, o));
      }),
      R(3, "i", 97),
      a(4, "span"),
      c(5),
      s()()(),
      a(6, "td", 98),
      c(7),
      s(),
      a(8, "td", 98),
      c(9),
      s(),
      a(10, "td", 98),
      c(11),
      s(),
      a(12, "td", 99),
      c(13),
      s(),
      a(14, "td", 98),
      c(15),
      s(),
      a(16, "td", 100),
      c(17),
      s(),
      a(18, "td", 98),
      c(19),
      s(),
      a(20, "td", 99),
      c(21),
      s(),
      a(22, "td", 101),
      c(23),
      s(),
      a(24, "td", 101),
      c(25),
      s(),
      a(26, "td", 100),
      c(27),
      s(),
      a(28, "td", 98),
      c(29),
      s(),
      a(30, "td", 98),
      c(31),
      s(),
      a(32, "td", 98),
      c(33),
      s(),
      a(34, "td", 98),
      c(35),
      s(),
      a(36, "td", 100),
      c(37),
      s(),
      a(38, "td", 98),
      c(39),
      s(),
      a(40, "td", 102),
      c(41),
      s(),
      a(42, "td", 98),
      c(43),
      s(),
      a(44, "td", 98),
      c(45),
      s(),
      a(46, "td", 98),
      c(47),
      s()();
  }
  if (r & 2) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C,
      T,
      k,
      V,
      B,
      L,
      H,
      U,
      j,
      Y,
      ge,
      Ce,
      ae = _().$implicit,
      vi = _(2);
    d(),
      g("ngClass", ce(27, Rf, vi.expandedSummaryRow !== ae.dealerId)),
      d(2),
      g(
        "ngClass",
        vi.expandedSummaryRow === ae.dealerId
          ? "fa-chevron-down"
          : "fa-chevron-right"
      ),
      d(2),
      E(ae.dealerName),
      d(2),
      E((e = ae.totalUsers) !== null && e !== void 0 ? e : 0),
      d(2),
      E((t = ae.registerUsers) !== null && t !== void 0 ? t : 0),
      d(2),
      E((n = ae.activeUsers) !== null && n !== void 0 ? n : 0),
      d(2),
      E((o = ae.saLeads) !== null && o !== void 0 ? o : 0),
      d(2),
      E((u = ae.manuallyEnteredLeads) !== null && u !== void 0 ? u : 0),
      d(),
      g("ngStyle", ce(29, bl, ae.cxpLeads < ae.saLeads ? "red" : "black")),
      d(),
      K(" ", (b = ae.cxpLeads) !== null && b !== void 0 ? b : 0, " "),
      d(2),
      E((C = ae.icsLeads) !== null && C !== void 0 ? C : 0),
      d(2),
      E((T = ae.saFollowUps) !== null && T !== void 0 ? T : 0),
      d(2),
      E((ae.enquiriesCalls == null ? null : ae.enquiriesCalls.totalCalls) || 0),
      d(2),
      E(
        (ae.enquiriesCalls == null ? null : ae.enquiriesCalls.connectedCalls) ||
          0
      ),
      d(),
      g(
        "ngStyle",
        ce(31, bl, ae.cxpFollowUps < ae.saFollowUps ? "red" : "black")
      ),
      d(),
      K(" ", (k = ae.cxpFollowUps) !== null && k !== void 0 ? k : 0, " "),
      d(2),
      E((V = ae.completedFollowUps) !== null && V !== void 0 ? V : 0),
      d(2),
      E((B = ae.openFollowUps) !== null && B !== void 0 ? B : 0),
      d(2),
      E((L = ae.closedFollowUps) !== null && L !== void 0 ? L : 0),
      d(2),
      E(ae.totalTestDrives),
      d(),
      g(
        "ngStyle",
        ce(33, bl, ae.cxpTestDrives < ae.saTestDrives ? "red" : "black")
      ),
      d(),
      K(" ", (H = ae.cxpTestDrives) !== null && H !== void 0 ? H : 0, " "),
      d(2),
      E((U = ae.completedTestDrives) !== null && U !== void 0 ? U : 0),
      d(2),
      E((j = ae.uniqueTestDrives) !== null && j !== void 0 ? j : 0),
      d(2),
      E((Y = ae.upcomingTestDrives) !== null && Y !== void 0 ? Y : 0),
      d(2),
      E((ge = ae.closedTestDrives) !== null && ge !== void 0 ? ge : 0),
      d(2),
      E((Ce = ae.opportunitiesConverted) !== null && Ce !== void 0 ? Ce : 0);
  }
}
function qf(r, i) {
  r & 1 && (a(0, "tr")(1, "td", 113), c(2, "Loading..."), s()());
}
function Kf(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr", 114)(1, "td", 111),
      c(2),
      s(),
      a(3, "td", 115),
      c(4),
      s(),
      a(5, "td", 102),
      c(6),
      s(),
      a(7, "td", 116)(8, "span", 117),
      c(9),
      s()(),
      a(10, "td", 102),
      c(11),
      ei(12, "date"),
      s(),
      a(13, "td", 98),
      c(14),
      s(),
      a(15, "td", 98),
      c(16),
      s(),
      a(17, "td", 98),
      c(18),
      s(),
      a(19, "td", 98),
      c(20),
      s(),
      a(21, "td", 98),
      c(22),
      s(),
      a(23, "td", 98),
      c(24),
      s(),
      a(25, "td", 98),
      c(26),
      s(),
      a(27, "td", 98),
      c(28),
      s(),
      a(29, "td", 98),
      c(30),
      s(),
      a(31, "td", 98),
      c(32),
      s(),
      a(33, "td", 98),
      c(34),
      s(),
      a(35, "td", 98),
      c(36),
      s(),
      a(37, "td", 98),
      c(38),
      s(),
      a(39, "td", 98),
      c(40),
      s(),
      a(41, "td", 102),
      c(42),
      s(),
      a(43, "td", 98),
      c(44),
      s(),
      a(45, "td", 98),
      c(46),
      s(),
      a(47, "td", 98),
      c(48),
      s()()),
    r & 2)
  ) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C,
      T,
      k,
      V,
      B,
      L,
      H,
      U,
      j,
      Y,
      ge,
      Ce,
      ae = i.$implicit,
      vi = i.index;
    g("ngClass", wi(28, Vf, vi % 2 === 0, vi % 2 !== 0)),
      d(2),
      K(" ", ae.user, " "),
      d(2),
      E(ae.user_role),
      d(2),
      E(ae.registerUser ? "Yes" : "No"),
      d(2),
      g("ngClass", ae.active ? "chip-success" : "chip-inactive"),
      d(),
      K(" ", ae.active ? "Active" : "Inactive", " "),
      d(2),
      K(
        " ",
        ae.last_login ? Yo(12, 25, ae.last_login, "dd-MM-yyyy HH:mm") : "-",
        " "
      ),
      d(3),
      E(
        (e = ae.leads == null ? null : ae.leads.sa) !== null && e !== void 0
          ? e
          : 0
      ),
      d(2),
      E(
        (t = ae.leads == null ? null : ae.leads.manuallyEntered) !== null &&
          t !== void 0
          ? t
          : 0
      ),
      d(2),
      E(
        (n = ae.leads == null ? null : ae.leads.cxp) !== null && n !== void 0
          ? n
          : 0
      ),
      d(2),
      E(
        (o = ae.leads == null ? null : ae.leads.ics) !== null && o !== void 0
          ? o
          : 0
      ),
      d(2),
      E(
        (u = ae.followups == null ? null : ae.followups.sa) !== null &&
          u !== void 0
          ? u
          : 0
      ),
      d(2),
      K(
        " ",
        (b =
          ae.enquiriesCalls == null ? null : ae.enquiriesCalls.totalCalls) !==
          null && b !== void 0
          ? b
          : 0,
        " "
      ),
      d(2),
      K(
        " ",
        (C =
          ae.enquiriesCalls == null
            ? null
            : ae.enquiriesCalls.connectedCalls) !== null && C !== void 0
          ? C
          : 0,
        " "
      ),
      d(2),
      E(
        (T = ae.followups == null ? null : ae.followups.cxp) !== null &&
          T !== void 0
          ? T
          : 0
      ),
      d(2),
      E(
        (k = ae.followups == null ? null : ae.followups.completed) !== null &&
          k !== void 0
          ? k
          : 0
      ),
      d(2),
      E(
        (V = ae.followups == null ? null : ae.followups.open) !== null &&
          V !== void 0
          ? V
          : 0
      ),
      d(2),
      E(
        (B = ae.followups == null ? null : ae.followups.closed) !== null &&
          B !== void 0
          ? B
          : 0
      ),
      d(2),
      E(
        (L = ae.testdrives == null ? null : ae.testdrives.sa) !== null &&
          L !== void 0
          ? L
          : 0
      ),
      d(2),
      E(
        (H = ae.testdrives == null ? null : ae.testdrives.cxp) !== null &&
          H !== void 0
          ? H
          : 0
      ),
      d(2),
      E(
        (U = ae.testdrives == null ? null : ae.testdrives.completed) !== null &&
          U !== void 0
          ? U
          : 0
      ),
      d(2),
      E(
        (j = ae.testdrives == null ? null : ae.testdrives.unique) !== null &&
          j !== void 0
          ? j
          : 0
      ),
      d(2),
      E(
        (Y = ae.testdrives == null ? null : ae.testdrives.upcoming) !== null &&
          Y !== void 0
          ? Y
          : 0
      ),
      d(2),
      E(
        (ge = ae.testdrives == null ? null : ae.testdrives.closed) !== null &&
          ge !== void 0
          ? ge
          : 0
      ),
      d(2),
      E((Ce = ae.opportunitiesConverted) !== null && Ce !== void 0 ? Ce : 0);
  }
}
function Qf(r, i) {
  r & 1 && (a(0, "tr")(1, "td", 113), c(2, "No Users Found"), s()());
}
function Zf(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr", 103)(1, "td", 104)(2, "div", 105)(3, "div", 106),
      c(4),
      s(),
      a(5, "div", 107)(6, "table", 108)(7, "thead", 109)(8, "tr", 110)(
        9,
        "th",
        111
      ),
      c(10, "User"),
      s(),
      a(11, "th"),
      c(12, "Role"),
      s(),
      a(13, "th"),
      c(14, "Registered"),
      s(),
      a(15, "th"),
      c(16, "Status"),
      s(),
      a(17, "th"),
      c(18, "Last login"),
      s(),
      a(19, "th"),
      c(20, "SA Leads"),
      s(),
      a(21, "th"),
      c(22, "Digital Leads"),
      s(),
      a(23, "th"),
      c(24, "Sync with CXP"),
      s(),
      a(25, "th"),
      c(26, "Sync with ICS"),
      s(),
      a(27, "th"),
      c(28, "SA Follow-ups"),
      s(),
      a(29, "th"),
      c(30, "Calls"),
      s(),
      a(31, "th"),
      c(32, "Connected Calls"),
      s(),
      a(33, "th"),
      c(34, "Sync with CXP"),
      s(),
      a(35, "th"),
      c(36, "Completed"),
      s(),
      a(37, "th"),
      c(38, "Upcoming"),
      s(),
      a(39, "th"),
      c(40, "Overdue"),
      s(),
      a(41, "th"),
      c(42, "SA Test Drives"),
      s(),
      a(43, "th"),
      c(44, "Sync with CXP"),
      s(),
      a(45, "th"),
      c(46, "Completed"),
      s(),
      a(47, "th"),
      c(48, "Unique"),
      s(),
      a(49, "th"),
      c(50, "Upcoming "),
      s(),
      a(51, "th"),
      c(52, "Overdue"),
      s(),
      a(53, "th"),
      c(54, "Opportunities Converted"),
      s()()(),
      a(55, "tbody"),
      M(56, qf, 3, 0, "tr", 1)(57, Kf, 49, 31, "tr", 112)(
        58,
        Qf,
        3,
        0,
        "tr",
        1
      ),
      s()()()()()()),
    r & 2)
  ) {
    let e = _().$implicit,
      t = _(2);
    d(4),
      K(" User-wise details \u2014 ", e.dealerName, " "),
      d(52),
      g("ngIf", t.loadingUsers[e.dealerId]),
      d(),
      g("ngForOf", t.getSortedUsers(e.dealerId))(
        "ngForTrackBy",
        t.trackByUserId
      ),
      d(),
      g(
        "ngIf",
        !t.loadingUsers[e.dealerId] &&
          t.dealerUsers[e.dealerId] &&
          t.dealerUsers[e.dealerId].length === 0
      );
  }
}
function Xf(r, i) {
  if (
    (r & 1 && (Me(0), M(1, Yf, 48, 35, "tr", 92)(2, Zf, 59, 5, "tr", 93), Oe()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = _(2);
    d(),
      g("ngIf", e),
      d(),
      g(
        "ngIf",
        t.expandedSummaryRow === e.dealerId &&
          (t.dealerUsers[e.dealerId] == null
            ? null
            : t.dealerUsers[e.dealerId].length)
      );
  }
}
function Jf(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 118),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.showMoreTable1());
      }),
      c(1, " Show More "),
      s();
  }
}
function eg(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 119),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.showLessTable1());
      }),
      c(1, " Show Less "),
      s();
  }
}
function tg(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr")(1, "td", 144),
      c(2),
      s(),
      a(3, "td", 136),
      c(4),
      s(),
      a(5, "td", 145),
      c(6),
      s(),
      a(7, "td", 145),
      c(8),
      s(),
      a(9, "td", 136),
      c(10),
      s(),
      a(11, "td", 146),
      c(12),
      s(),
      a(13, "td", 147),
      c(14),
      s()()),
    r & 2)
  ) {
    let e = i.$implicit;
    d(2),
      E(e.name),
      d(),
      g("ngStyle", ce(9, Ep, e.calls.total < 60 ? "red" : "black")),
      d(),
      E(e.calls.total),
      d(2),
      E(e.calls.outgoing),
      d(2),
      E(e.calls.incoming),
      d(),
      g("ngStyle", ce(11, Ep, e.calls.connected < 30 ? "red" : "#007bff")),
      d(),
      K("", e.calls.connected, " "),
      d(2),
      E(e.calls.declined),
      d(2),
      E(e.calls.duration);
  }
}
function ig(r, i) {
  r & 1 && (a(0, "tr")(1, "td", 148), c(2, "No Users Found"), s()());
}
function ng(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr", 103)(1, "td", 139)(2, "div", 140)(3, "div", 141),
      c(4),
      s(),
      a(5, "div", 107)(6, "table", 142)(7, "thead")(8, "tr")(9, "th", 143),
      c(10, "User"),
      s(),
      a(11, "th"),
      c(12, "Total"),
      s(),
      a(13, "th"),
      c(14, "Outgoing"),
      s(),
      a(15, "th"),
      c(16, "Incoming"),
      s(),
      a(17, "th"),
      c(18, "Connected"),
      s(),
      a(19, "th"),
      c(20, "Declined"),
      s(),
      a(21, "th"),
      c(22, "Duration"),
      s()()(),
      a(23, "tbody"),
      M(24, tg, 15, 13, "tr", 56)(25, ig, 3, 0, "tr", 1),
      s()()()()()()),
    r & 2)
  ) {
    let e = _().$implicit,
      t = _(3);
    d(4),
      K(" User-wise Call Logs \u2014 ", e.dealerName, " "),
      d(20),
      g("ngForOf", t.getSortedCallLogs(e.dealerId))(
        "ngForTrackBy",
        t.trackByUserId
      ),
      d(),
      g(
        "ngIf",
        !t.loadingUsers[e.dealerId] &&
          (!t.userCallLogs[e.dealerId] ||
            (t.userCallLogs[e.dealerId] == null
              ? null
              : t.userCallLogs[e.dealerId].length) === 0)
      );
  }
}
function rg(r, i) {
  if (r & 1) {
    let e = J();
    Me(0),
      a(1, "tr")(2, "td", 128)(3, "button", 96),
      O("click", function (n) {
        let o = w(e).$implicit,
          u = _(3);
        return D(u.toggleCallLogsRow(n, o));
      }),
      R(4, "i", 97),
      a(5, "span"),
      c(6),
      s()()(),
      a(7, "td")(8, "div", 129),
      R(9, "i", 130),
      a(10, "span", 131),
      c(11),
      s()()(),
      a(12, "td")(13, "div", 132)(14, "span", 133),
      c(15, "\u2191"),
      s(),
      a(16, "span", 134),
      c(17),
      s()()(),
      a(18, "td")(19, "div", 132)(20, "span", 133),
      c(21, "\u2193"),
      s(),
      a(22, "span", 135),
      c(23),
      s()()(),
      a(24, "td")(25, "div", 132)(26, "span", 136),
      c(27, " \u2713 "),
      s(),
      a(28, "span", 136),
      c(29),
      s()()(),
      a(30, "td")(31, "div", 132)(32, "span", 137),
      c(33, " \xD7 "),
      s(),
      a(34, "span", 138),
      c(35),
      s()()(),
      a(36, "td"),
      c(37),
      s()(),
      M(38, ng, 26, 4, "tr", 93),
      Oe();
  }
  if (r & 2) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C,
      T,
      k = i.$implicit,
      V = _(3);
    d(4),
      g(
        "ngClass",
        V.expandedRow === k.dealerId ? "fa-chevron-down" : "fa-chevron-right"
      ),
      d(2),
      E(k.dealerName),
      d(2),
      g(
        "ngClass",
        (k.callLogs == null ? null : k.callLogs.totalCalls) < 60
          ? "highlight-red"
          : "normal"
      ),
      d(),
      g(
        "ngClass",
        (k.callLogs == null ? null : k.callLogs.totalCalls) < 60
          ? "highlight-red"
          : "normal"
      ),
      d(),
      g(
        "ngClass",
        (k.callLogs == null ? null : k.callLogs.totalCalls) < 60
          ? "highlight-red"
          : "normal"
      ),
      d(),
      K(
        " ",
        ((e = V.getDealerCalls(k)) == null ? null : e.totalCalls) || 0,
        " "
      ),
      d(6),
      K(" ", ((t = V.getDealerCalls(k)) == null ? null : t.outgoing) || 0, " "),
      d(6),
      K(" ", ((n = V.getDealerCalls(k)) == null ? null : n.incoming) || 0, " "),
      d(3),
      g(
        "ngStyle",
        ce(
          14,
          Nf,
          ((o = V.getDealerCalls(k)) == null ? null : o.connectedCalls) < 30
            ? "red"
            : "#007bff"
        )
      ),
      d(2),
      g(
        "ngStyle",
        ce(
          16,
          Lf,
          ((u = V.getDealerCalls(k)) == null ? null : u.connectedCalls) < 30
            ? "red"
            : "#007bff"
        )
      ),
      d(),
      K(
        " ",
        ((b = V.getDealerCalls(k)) == null ? null : b.connectedCalls) || 0,
        " "
      ),
      d(6),
      K(" ", ((C = V.getDealerCalls(k)) == null ? null : C.declined) || 0, " "),
      d(2),
      K(
        " ",
        ((T = V.getDealerCalls(k)) == null ? null : T.duration) || "00:00:00",
        " "
      ),
      d(),
      g(
        "ngIf",
        V.expandedRow === k.dealerId &&
          (V.userCallLogs[k.dealerId] == null
            ? null
            : V.userCallLogs[k.dealerId].length)
      );
  }
}
function og(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 149),
      O("click", function () {
        w(e);
        let n = _(3);
        return D(n.showMoreTable2());
      }),
      c(1, " Show More "),
      s();
  }
}
function ag(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 150),
      O("click", function () {
        w(e);
        let n = _(3);
        return D(n.showLessTable2());
      }),
      c(1, " Show Less "),
      s();
  }
}
function sg(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 41)(1, "div", 42)(2, "table", 120)(3, "thead", 44)(4, "tr")(
        5,
        "th",
        121
      ),
      c(6, "Dealer"),
      s(),
      a(7, "th", 122),
      c(8, "Total Calls"),
      s(),
      a(9, "th", 122),
      c(10, "Outgoing"),
      s(),
      a(11, "th", 122),
      c(12, "Incoming"),
      s(),
      a(13, "th", 122),
      c(14, "Connected"),
      s(),
      a(15, "th", 122),
      c(16, "Declined"),
      s(),
      a(17, "th", 122),
      c(18, "Duration"),
      s()()(),
      a(19, "tbody", 123),
      M(20, rg, 39, 18, "ng-container", 124),
      ei(21, "slice"),
      s()()(),
      a(22, "div", 125),
      M(23, og, 2, 0, "button", 126)(24, ag, 2, 0, "button", 127),
      s()()),
    r & 2)
  ) {
    let e = _(2);
    d(20),
      g(
        "ngForOf",
        qs(21, 3, e.getSortedDealersForCallLogs(), 0, e.table2Length)
      ),
      d(3),
      g("ngIf", e.table2Length < e.dealers.length),
      d(),
      g("ngIf", e.table2Length > 10 && e.dealers.length > 10);
  }
}
function lg(r, i) {
  if (
    (r & 1 && (a(0, "div", 151)(1, "div", 152), R(2, "apx-chart", 153), s()()),
    r & 2)
  ) {
    let e = _(2);
    d(2),
      g("series", e.chartOptions.series)("chart", e.chartOptions.chart)(
        "xaxis",
        e.chartOptions.xaxis
      )("plotOptions", e.chartOptions.plotOptions)(
        "stroke",
        e.chartOptions.stroke
      )("dataLabels", e.chartOptions.dataLabels)("title", e.chartOptions.title);
  }
}
function cg(r, i) {
  if (r & 1) {
    let e = J();
    Me(0),
      M(1, Bf, 2, 0, "div", 2),
      a(2, "div", 3),
      M(3, jf, 3, 1, "div", 4),
      a(4, "div", 5)(5, "div", 6)(6, "select", 7),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.selectedFilter, n) || (o.selectedFilter = n), D(n);
      }),
      O("change", function () {
        w(e);
        let n = _();
        return D(n.onFilterChange(n.selectedFilter));
      }),
      a(7, "option", 8),
      c(8, "Today"),
      s(),
      a(9, "option", 9),
      c(10, "Yesterday"),
      s(),
      a(11, "option", 10),
      c(12, "This Week"),
      s(),
      a(13, "option", 11),
      c(14, "Last Week"),
      s(),
      a(15, "option", 12),
      c(16, "This Month"),
      s(),
      a(17, "option", 13),
      c(18, "Last Month"),
      s(),
      a(19, "option", 14),
      c(20, "This Quarter"),
      s(),
      a(21, "option", 15),
      c(22, "Last Quarter"),
      s(),
      a(23, "option", 16),
      c(24, "Last 6 Months"),
      s(),
      a(25, "option", 17),
      c(26, "This Year"),
      s(),
      a(27, "option", 18),
      c(28, "Lifetime"),
      s(),
      a(29, "option", 19),
      c(30, "Custom"),
      s()(),
      M(31, zf, 7, 2, "div", 20),
      a(32, "div", 21)(33, "button", 22),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.toggleDropdown());
      }),
      c(34),
      s(),
      M(35, Gf, 12, 4, "div", 23),
      s()(),
      a(36, "div")(37, "button", 24),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.refreshSuperAdminDealers());
      }),
      R(38, "i", 25),
      c(39, " Refresh "),
      s()()()(),
      a(40, "div", 26)(41, "main", 27)(42, "section", 28)(43, "div", 29)(
        44,
        "div",
        30
      ),
      c(45, "Active Dealers:"),
      s(),
      a(46, "div", 31),
      c(47),
      s(),
      a(48, "div", 32),
      c(49, "All Dealers: "),
      a(50, "span", 33),
      c(51),
      s()()(),
      a(52, "div", 29)(53, "div", 30),
      c(54, "Active Users"),
      s(),
      a(55, "div", 31),
      c(56),
      s(),
      a(57, "div", 32),
      c(58, "Total Users: "),
      a(59, "span", 33),
      c(60),
      s()()(),
      a(61, "div", 29)(62, "div", 30),
      c(63, "Leads"),
      s(),
      a(64, "div", 31),
      c(65),
      s(),
      a(66, "div", 32),
      c(67, "Across all dealers"),
      s()(),
      a(68, "div", 29)(69, "div", 30),
      c(70, "Calls"),
      s(),
      a(71, "div", 31),
      c(72),
      s(),
      a(73, "div", 32),
      c(74, "Total volume"),
      s()(),
      a(75, "div", 29)(76, "div", 30),
      c(77, "Total Followups"),
      s(),
      a(78, "div", 31),
      c(79),
      s()(),
      a(80, "div", 29)(81, "div", 30),
      c(82, "Unique / Completed Test Drives"),
      s(),
      a(83, "div", 31),
      c(84),
      s()()(),
      a(85, "div", 34)(86, "div", 35)(87, "div")(88, "h2", 36),
      c(89, "Dealer Summary \u2014 Engagement"),
      s(),
      a(90, "p", 37),
      c(91, "Users, Leads, Follow-ups, Test Drives (with CXP/ICS sync)"),
      s()(),
      a(92, "div", 38)(93, "button", 39),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.exportToCSV());
      }),
      R(94, "i", 40),
      c(95, " Export CSV "),
      s()()(),
      a(96, "div", 41)(97, "div", 42)(98, "table", 43)(99, "thead", 44)(
        100,
        "tr"
      )(101, "th", 45),
      c(102, "Dealer"),
      s(),
      a(103, "th", 46),
      c(104, "Users"),
      s(),
      a(105, "th", 47),
      c(106, "Leads"),
      s(),
      a(107, "th", 48),
      c(108, "Follow-ups"),
      s(),
      a(109, "th", 49),
      c(110, "Test Drives"),
      s()(),
      a(111, "tr")(112, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("totalUsers"));
      }),
      c(113, " Total "),
      a(114, "span", 51)(115, "span", 52),
      c(116, "\u25B2"),
      s(),
      a(117, "span", 53),
      c(118, "\u25BC"),
      s()()(),
      a(119, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("registerUsers"));
      }),
      c(120, " Registered "),
      a(121, "span", 51)(122, "span", 52),
      c(123, "\u25B2"),
      s(),
      a(124, "span", 53),
      c(125, "\u25BC"),
      s()()(),
      a(126, "th", 54),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("activeUsers"));
      }),
      c(127, " Active "),
      a(128, "span", 51)(129, "span", 52),
      c(130, "\u25B2"),
      s(),
      a(131, "span", 53),
      c(132, "\u25BC"),
      s()()(),
      a(133, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("saLeads"));
      }),
      c(134, " SA "),
      a(135, "span", 51)(136, "span", 52),
      c(137, "\u25B2"),
      s(),
      a(138, "span", 53),
      c(139, "\u25BC"),
      s()()(),
      a(140, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("manuallyEnteredLeads"));
      }),
      c(141, " Digital Leads "),
      a(142, "span", 51)(143, "span", 52),
      c(144, "\u25B2"),
      s(),
      a(145, "span", 53),
      c(146, "\u25BC"),
      s()()(),
      a(147, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("cxpLeads"));
      }),
      c(148, " Sync with CXP "),
      a(149, "span", 51)(150, "span", 52),
      c(151, "\u25B2"),
      s(),
      a(152, "span", 53),
      c(153, "\u25BC"),
      s()()(),
      a(154, "th", 54),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("icsLeads"));
      }),
      c(155, " Sync with ICS "),
      a(156, "span", 51)(157, "span", 52),
      c(158, "\u25B2"),
      s(),
      a(159, "span", 53),
      c(160, "\u25BC"),
      s()()(),
      a(161, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("saFollowUps"));
      }),
      c(162, " SA "),
      a(163, "span", 51)(164, "span", 52),
      c(165, "\u25B2"),
      s(),
      a(166, "span", 53),
      c(167, "\u25BC"),
      s()()(),
      a(168, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("enquiriesCalls"));
      }),
      c(169, " Calls "),
      a(170, "span", 51)(171, "span", 52),
      c(172, "\u25B2"),
      s(),
      a(173, "span", 53),
      c(174, "\u25BC"),
      s()()(),
      a(175, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("enquiriesConnectedCalls"));
      }),
      c(176, " Connected Calls "),
      a(177, "span", 51)(178, "span", 52),
      c(179, "\u25B2"),
      s(),
      a(180, "span", 53),
      c(181, "\u25BC"),
      s()()(),
      a(182, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("cxpFollowUps"));
      }),
      c(183, " Sync with CXP "),
      a(184, "span", 51)(185, "span", 52),
      c(186, "\u25B2"),
      s(),
      a(187, "span", 53),
      c(188, "\u25BC"),
      s()()(),
      a(189, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("completedFollowUps"));
      }),
      c(190, " Completed "),
      a(191, "span", 51)(192, "span", 52),
      c(193, "\u25B2"),
      s(),
      a(194, "span", 53),
      c(195, "\u25BC"),
      s()()(),
      a(196, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("openFollowUps"));
      }),
      c(197, " Upcoming "),
      a(198, "span", 51)(199, "span", 52),
      c(200, "\u25B2"),
      s(),
      a(201, "span", 53),
      c(202, "\u25BC"),
      s()()(),
      a(203, "th", 54),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("closedFollowUps"));
      }),
      c(204, " Overdue "),
      a(205, "span", 51)(206, "span", 52),
      c(207, "\u25B2"),
      s(),
      a(208, "span", 53),
      c(209, "\u25BC"),
      s()()(),
      a(210, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("totalTestDrives"));
      }),
      c(211, " SA "),
      a(212, "span", 51)(213, "span", 52),
      c(214, "\u25B2"),
      s(),
      a(215, "span", 53),
      c(216, "\u25BC"),
      s()()(),
      a(217, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("cxpTestDrives"));
      }),
      c(218, " Sync with CXP "),
      a(219, "span", 51)(220, "span", 52),
      c(221, "\u25B2"),
      s(),
      a(222, "span", 53),
      c(223, "\u25BC"),
      s()()(),
      a(224, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("completedTestDrives"));
      }),
      c(225, " Completed "),
      a(226, "span", 51)(227, "span", 52),
      c(228, "\u25B2"),
      s(),
      a(229, "span", 53),
      c(230, "\u25BC"),
      s()()(),
      a(231, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("uniqueTestDrives"));
      }),
      c(232, " Unique "),
      a(233, "span", 51)(234, "span", 52),
      c(235, "\u25B2"),
      s(),
      a(236, "span", 53),
      c(237, "\u25BC"),
      s()()(),
      a(238, "th", 50),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("upcomingTestDrives"));
      }),
      c(239, " Upcoming "),
      a(240, "span", 51)(241, "span", 52),
      c(242, "\u25B2"),
      s(),
      a(243, "span", 53),
      c(244, "\u25BC"),
      s()()(),
      a(245, "th", 54),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("closedTestDrives"));
      }),
      c(246, " Overdue "),
      a(247, "span", 51)(248, "span", 52),
      c(249, "\u25B2"),
      s(),
      a(250, "span", 53),
      c(251, "\u25BC"),
      s()()(),
      a(252, "th", 55),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.sortData("opportunitiesConverted"));
      }),
      c(253, " Opportunities Converted "),
      a(254, "span", 51)(255, "span", 52),
      c(256, "\u25B2"),
      s(),
      a(257, "span", 53),
      c(258, "\u25BC"),
      s()()()()(),
      a(259, "tbody"),
      M(260, Xf, 3, 2, "ng-container", 56),
      ei(261, "slice"),
      s()()(),
      M(262, Jf, 2, 0, "button", 57)(263, eg, 2, 0, "button", 58),
      s()(),
      a(264, "div", 34)(265, "div", 35)(266, "div")(267, "h2", 59),
      c(268, "Dealer Summary \u2014 Calls"),
      s(),
      a(269, "p", 37),
      c(270, "Call volumes and outcomes"),
      s()(),
      a(271, "div", 60)(272, "div", 61)(273, "div", 62)(274, "button", 63),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.dealerEngagementView("table"));
      }),
      R(275, "i", 64),
      c(276, " Table "),
      s(),
      a(277, "button", 63),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.dealerEngagementView("chart"));
      }),
      R(278, "i", 65),
      c(279, " Bar Chart "),
      s()(),
      a(280, "div", 66)(281, "select", 7),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return (
          Xe(o.dealerSummaryCallsDataType, n) ||
            (o.dealerSummaryCallsDataType = n),
          D(n)
        );
      }),
      O("change", function () {
        w(e);
        let n = _();
        return D(n.dealerEngagementView(n.dealerSummaryCallsDataType));
      }),
      a(282, "option", 67),
      c(283, "Enquiries"),
      s(),
      a(284, "option", 68),
      c(285, "Cold Calls"),
      s()()()(),
      a(286, "button", 69),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.exportDealerCalllogstocxp());
      }),
      R(287, "i", 40),
      c(288, " Export CSV "),
      s()()(),
      M(289, sg, 25, 7, "div", 70)(290, lg, 3, 7, "div", 71),
      s()()(),
      Oe();
  }
  if (r & 2) {
    let e = _();
    d(),
      g("ngIf", e.isLoading),
      d(),
      g(
        "ngClass",
        to(
          117,
          Ff,
          !e.showLogoutModal,
          e.showLogoutModal,
          e.isSticky,
          e.isSidebarOpen,
          !e.isSidebarOpen
        )
      ),
      d(),
      g("ngIf", e.selectedFilter),
      d(3),
      Ze("ngModel", e.selectedFilter),
      d(25),
      g("ngIf", e.selectedFilter === "CUSTOM"),
      d(),
      X("show", e.dropdownOpen),
      d(),
      g("disabled", e.selectedFilter === "CUSTOM" && e.invalidDateRange),
      d(),
      K(
        " ",
        e.selectedDealers.length > 0
          ? "Dealers Selected (" + e.selectedDealers.length + ")"
          : "Select Dealers",
        " "
      ),
      d(),
      g("ngIf", e.dropdownOpen),
      d(12),
      E(e.kpiData == null ? null : e.kpiData.activeNetwork),
      d(4),
      E(e.kpiData == null ? null : e.kpiData.dealers),
      d(5),
      E(e.kpiData == null ? null : e.kpiData.activeUsers),
      d(4),
      E(e.kpiData == null ? null : e.kpiData.users),
      d(5),
      E(e.kpiData == null ? null : e.kpiData.leads),
      d(7),
      E(e.kpiData == null ? null : e.kpiData.calls),
      d(7),
      E(e.kpiData == null ? null : e.kpiData.totalFollowUps),
      d(5),
      di(
        " ",
        e.kpiData == null ? null : e.kpiData.uniqueTestDrives,
        " / ",
        e.kpiData == null ? null : e.kpiData.completedTestDrives,
        " "
      ),
      d(31),
      X("active", e.sortColumn === "totalUsers" && e.sortDirection === "asc"),
      d(2),
      X("active", e.sortColumn === "totalUsers" && e.sortDirection === "desc"),
      d(5),
      X(
        "active",
        e.sortColumn === "registerUsers" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "registerUsers" && e.sortDirection === "desc"
      ),
      d(5),
      X("active", e.sortColumn === "activeUsers" && e.sortDirection === "asc"),
      d(2),
      X("active", e.sortColumn === "activeUsers" && e.sortDirection === "desc"),
      d(5),
      X("active", e.sortColumn === "saLeads" && e.sortDirection === "asc"),
      d(2),
      X("active", e.sortColumn === "saLeads" && e.sortDirection === "desc"),
      d(5),
      X(
        "active",
        e.sortColumn === "manuallyEnteredLeads" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "manuallyEnteredLeads" && e.sortDirection === "desc"
      ),
      d(5),
      X("active", e.sortColumn === "cxpLeads" && e.sortDirection === "asc"),
      d(2),
      X("active", e.sortColumn === "cxpLeads" && e.sortDirection === "desc"),
      d(5),
      X("active", e.sortColumn === "icsLeads" && e.sortDirection === "asc"),
      d(2),
      X("active", e.sortColumn === "icsLeads" && e.sortDirection === "desc"),
      d(5),
      X("active", e.sortColumn === "saFollowUps" && e.sortDirection === "asc"),
      d(2),
      X("active", e.sortColumn === "saFollowUps" && e.sortDirection === "desc"),
      d(5),
      X(
        "active",
        e.sortColumn === "enquiriesCalls" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "enquiriesCalls" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "enquiriesConnectedCalls" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "enquiriesConnectedCalls" && e.sortDirection === "desc"
      ),
      d(5),
      X("active", e.sortColumn === "cxpFollowUps" && e.sortDirection === "asc"),
      d(2),
      X(
        "active",
        e.sortColumn === "cxpFollowUps" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "completedFollowUps" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "completedFollowUps" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "openFollowUps" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "openFollowUps" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "closedFollowUps" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "closedFollowUps" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "totalTestDrives" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "totalTestDrives" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "cxpTestDrives" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "cxpTestDrives" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "completedTestDrives" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "completedTestDrives" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "uniqueTestDrives" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "uniqueTestDrives" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "upcomingTestDrives" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "upcomingTestDrives" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "closedTestDrives" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "closedTestDrives" && e.sortDirection === "desc"
      ),
      d(5),
      X(
        "active",
        e.sortColumn === "opportunitiesConverted" && e.sortDirection === "asc"
      ),
      d(2),
      X(
        "active",
        e.sortColumn === "opportunitiesConverted" && e.sortDirection === "desc"
      ),
      d(3),
      g(
        "ngForOf",
        qs(261, 113, e.getSortedDealersForSummary(), 0, e.table1Length)
      )("ngForTrackBy", e.trackByDealerId),
      d(2),
      g(
        "ngIf",
        e.table1Length <
          (e.selectedDealers.length > 0
            ? e.selectedDealers.length
            : e.dealers.length)
      ),
      d(),
      g(
        "ngIf",
        e.table1Length > 10 &&
          (e.selectedDealers.length > 0
            ? e.selectedDealers.length
            : e.dealers.length) > 10
      ),
      d(11),
      g("ngClass", ce(123, Pp, e.dealerSummaryCallsViewType === "table")),
      d(3),
      g("ngClass", ce(125, Pp, e.dealerSummaryCallsViewType === "chart")),
      d(4),
      Ze("ngModel", e.dealerSummaryCallsDataType),
      d(5),
      g("hidden", e.dealerSummaryCallsViewType === "chart"),
      d(3),
      g("ngIf", e.dealerSummaryCallsViewType === "table"),
      d(),
      g("ngIf", e.dealerSummaryCallsViewType === "chart");
  }
}
var xa = class r {
  constructor(i, e, t, n, o, u, b, C, T, k) {
    this.http = i;
    this.cdr = e;
    this.context = t;
    this.router = n;
    this.dashboardService = o;
    this.sharedService = u;
    this.ngZone = b;
    this.cd = C;
    this.eRef = T;
    this.toastr = k;
  }
  dashboardMetrics = {
    totalLeads: 0,
    totalTestDrives: 0,
    totalOrders: 0,
    lostLeads: 0,
    cancellations: 0,
    netOrders: 0,
    retail: 0,
  };
  callLogs = {
    totalCalls: 120,
    outgoing: 50,
    incoming: 40,
    connected: 20,
    declined: 10,
    durationSec: 500,
  };
  expandedDealer = null;
  chart;
  chartOptions;
  sortColumn = "saLeads";
  sortDirection = "desc";
  skipDefaultSelection = !1;
  loadingUsers = {};
  filteredDealerData = [];
  showLogoutModal = !1;
  currentPageMap = {};
  showAllSMs = {};
  showCustomDatePicker = !1;
  customStartDate = "";
  customEndDate = "";
  isAllSelected = !1;
  displayedDealers = [];
  itemsToShow = 10;
  expandedRow = null;
  filteredDealers = [];
  totalLeads = pe(0);
  totalTestDrives = pe(0);
  totalOrders = pe(0);
  prevLeads = pe(0);
  prevTestDrives = pe(0);
  prevOrders = pe(0);
  selectedOption = "leads-MTD";
  testDrives = 0;
  displayedData = [];
  filteredData = [];
  mtdTestDrives = pe(0);
  qtdTestDrives = pe(0);
  hoveredSM = null;
  callLogDealers = [];
  isInitialLoad = !0;
  invalidDateRange = !1;
  expandedSummaryRow = null;
  dealersData = [];
  refreshingSA = !1;
  showQuickActionBtn = !0;
  lastScrollTop = 0;
  isSticky = !1;
  originalHeaderOffsetTop = 0;
  loading = !1;
  selectedDealer = null;
  ps1Data = [];
  ps2Data = [];
  pageSize = 20;
  ytdTestDrives = pe(0);
  loadingSM = !1;
  psData = {};
  showDetails = !1;
  paginatedDealers = [];
  dealerCallData = [];
  dropdownOpen = !1;
  selectedDealers = [];
  dealerPSL = null;
  userCallLogs = {};
  callLogsItemsToShow = 10;
  displayedCallLogs = [];
  showMoreCallLogsVisible = !0;
  mtdOrders = pe(0);
  qtdOrders = pe(0);
  ytdOrders = pe(0);
  table1Length = 10;
  table2Length = 10;
  isLoading = !1;
  overallData = {};
  dealerSummaryCallsViewType = "table";
  dealerSummaryCallsDataType = "enquiries";
  selectedFilter;
  dealerColors = ["#e6f2ff", "#f9f2ec", "#eaf7ea", "#f3e8ff"];
  appliedStartDate = null;
  appliedEndDate = null;
  usersItemsToShow = 10;
  userItemsToShow = 10;
  displayedUsers = [];
  showMoreUsersVisible = !1;
  mtdLeads = pe(0);
  qtdLeads = pe(0);
  currentLeads = 0;
  previousLeads = 0;
  changeLeads = 0;
  testDriveChange = 0;
  testDriveProgressValue = 0;
  testDriveStrokeColor = "#4CAF50";
  selectedCategory = "leads";
  selectedDuration = "MTD";
  orderChange = 0;
  orderProgressValue = 0;
  loadingPS = !1;
  activeAccordion = null;
  dealerUsers = {};
  dealerCallLogs = {};
  showAll = !1;
  orderStrokeColor = "#4CAF50";
  currentTestDrives = 0;
  previousTestDrives = 0;
  selectedDealerId = null;
  dealerSMS = {};
  salesManagers = {};
  loadingSMs = {};
  Math = Math;
  itemsPerPagedeal = 10;
  currentDisplayCount = 10;
  kpiData = {
    dealers: 0,
    activeNetwork: 0,
    users: 0,
    activeUsers: 0,
    leads: 0,
    calls: 0,
    totalFollowUps: 0,
    uniqueTestDrives: 0,
    completedTestDrives: 0,
  };
  orders = 0;
  currentOrders = 0;
  previousOrders = 0;
  ytdLeads = pe(0);
  selectedPeriod = "MTD";
  dashboardData = {};
  leads = 0;
  selectedSM = null;
  isSidebarOpen = !0;
  paginatedDealerskpis = [];
  currentIndex = 0;
  displayedDealerUsers = [];
  currentDealerPage = 1;
  dealersPerPage = 5;
  expandedItems = {};
  filterOptions = ["MTD", "QTD", "YTD"];
  expandedRows = [!1, !1, !1, !1, !1, !1];
  showMoreActive = !1;
  originalDealers = [];
  rankings = {};
  sidebarTestDrives = pe(0);
  sidebarOrders = pe(0);
  sidebarLeads = pe(0);
  pieChartInstance;
  leadsData = {};
  miniChart;
  hoveredPS = null;
  activeDealer = null;
  activeSM = null;
  activePS = null;
  incrementSize = 10;
  selectedTime = "1M";
  graphPath = "";
  leadsChange = 0;
  testDrivesChange = 0;
  ordersChange = 0;
  change = 0;
  doughnutChart;
  dealerSearch = "";
  animatedValue = 0;
  currentPage = 1;
  itemsPerPage = 10;
  paginatedData = [];
  activeFilter = "MTD";
  dealers = [];
  currentdealerPage = 1;
  itemsPerdealerPage = 5;
  maxValue = 0;
  selectedFilterPS = "MTD";
  changeDisplay = 0;
  progressValue = 0;
  strokeColor = "red";
  data;
  apiUrl = "https://uat.smartassistapp.in/api/superAdmin/dashbaordNew";
  ngOnInit() {
    let i = localStorage.getItem("selectedFilter");
    if (
      ((this.selectedFilter = i ?? "DAY"), this.selectedFilter !== "CUSTOM")
    ) {
      let t = this.mapFilterToApi(this.selectedFilter);
      this.fetchSuperAdminDashboard(t);
    }
    let e = localStorage.getItem("kpiData");
    e && (this.kpiData = ee({}, JSON.parse(e))),
      (this.currentDisplayCount = this.itemsPerPage),
      this.context.onSideBarClick$.next({
        role: "dashboard",
        pageTitle: "Dashboard",
      });
  }
  initializeDisplay() {
    this.currentDisplayCount = this.itemsPerPage;
  }
  toggleShow() {
    this.currentDisplayCount >= this.dealers.length
      ? (this.currentDisplayCount = this.itemsPerPage)
      : (this.currentDisplayCount = Math.min(
          this.dealers.length,
          this.currentDisplayCount + this.incrementSize
        ));
  }
  showLess() {
    this.currentDisplayCount = this.itemsPerPage;
  }
  get canShowMore() {
    return this.currentDisplayCount < this.dealers.length;
  }
  get canShowLess() {
    return this.currentDisplayCount > this.itemsPerPage;
  }
  get isShowingAll() {
    return this.currentDisplayCount >= this.dealers.length;
  }
  get showButtonText() {
    return this.currentDisplayCount >= this.dealers.length
      ? "Show Less"
      : "Show More";
  }
  toggleExpand(i) {
    this.expandedRows[i] = !this.expandedRows[i];
  }
  getStrokeColor(i) {
    let e = Number(i);
    return e > 0 ? "#4CAF50" : e < 0 ? "#F44336" : "#9E9E9E";
  }
  toggleCustomDatePicker() {
    this.showCustomDatePicker ||
      ((this.customStartDate = ""), (this.customEndDate = "")),
      (this.showCustomDatePicker = !this.showCustomDatePicker);
  }
  getFilterLabel(i) {
    return (
      {
        DAY: "Today",
        YESTERDAY: "Yesterday",
        WEEK: "This Week",
        LAST_WEEK: "Last Week",
        MTD: "This Month",
        LAST_MONTH: "Last Month",
        QTD: "This Quarter",
        LAST_QUARTER: "Last Quarter",
        SIX_MONTH: "Last 6 Months",
        YTD: "This Year",
        LIFETIME: "Lifetime",
      }[i] || i
    );
  }
  getDealerBackground(i) {
    let e = [
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
      "linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)",
      "linear-gradient(135deg, #fa709a 0%, #fee140 100%)",
      "linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)",
      "linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)",
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
    ];
    return e[i % e.length];
  }
  getSortedUsers(i) {
    return [...(this.dealerUsers[i] ?? [])].sort((t, n) => {
      let o = t.leads?.sa ?? 0,
        u = n.leads?.sa ?? 0;
      return u !== o
        ? u - o
        : t.active && !n.active
        ? -1
        : !t.active && n.active
        ? 1
        : t.user.toLowerCase().localeCompare(n.user.toLowerCase());
    });
  }
  getSortedCallLogs(i) {
    return [...(this.userCallLogs[i] ?? [])].sort((t, n) => {
      let o = t.calls?.total ?? 0;
      return (n.calls?.total ?? 0) - o;
    });
  }
  getSortedDealersForCallLogs() {
    let i =
      this.selectedDealers.length > 0 ? this.selectedDealers : this.dealers;
    return i
      ? [...i].sort((e, t) => {
          let n = this.getDealerCalls(e)?.totalCalls ?? 0;
          return (this.getDealerCalls(t)?.totalCalls ?? 0) - n;
        })
      : [];
  }
  getSortedDealersForSummary() {
    let i =
      this.selectedDealers.length > 0
        ? [...this.selectedDealers]
        : [...this.dealers];
    if (!this.sortColumn || this.sortDirection === "default") return i;
    let e = this.sortColumn;
    return (
      i.sort((t, n) => {
        let o = t[e] ?? 0,
          u = n[e] ?? 0;
        return this.sortDirection === "asc" ? o - u : u - o;
      }),
      i
    );
  }
  mapTimeToApi(i) {
    switch (i) {
      case "1M":
        return "MTD";
      case "QTD":
        return "QTD";
      case "1Y":
        return "YTD";
      default:
        return "MTD";
    }
  }
  onTimeChange(i) {
    this.selectedTime = i;
    let e = localStorage.getItem("token");
    if (!e) return;
    let t = this.mapTimeToApi(i);
    this.dashboardService.getDealers(t, e).subscribe((n) => {
      n.status === 200 && n.data?.dealers
        ? ((this.dealers = n.data.dealers),
          (this.expandedDealer = null),
          (this.selectedDealerId = null))
        : (this.dealers = []);
    });
  }
  ngAfterViewInit() {
    this.totalTestDrives() &&
      this.totalOrders() &&
      this.doughnutChart(this.totalTestDrives(), this.totalOrders());
    let i = document.querySelector(".sticky-header");
    i && (this.originalHeaderOffsetTop = i.offsetTop);
  }
  onFilterClick(i) {}
  toggleShowAllSMs(i) {
    this.showAllSMs[i] = !this.showAllSMs[i];
  }
  mapFilterToApi(i) {
    switch (i) {
      case "DAY":
        return "DAY";
      case "YESTERDAY":
        return "YESTERDAY";
      case "WEEK":
        return "WEEK";
      case "LAST_WEEK":
        return "LAST_WEEK";
      case "MTD":
        return "MTD";
      case "LAST_MONTH":
        return "LAST_MONTH";
      case "QTD":
        return "QTD";
      case "LAST_QUARTER":
        return "LAST_QUARTER";
      case "SIX_MONTH":
        return "SIX_MONTH";
      case "YTD":
        return "YTD";
      case "LIFETIME":
        return "LIFETIME";
      case "CUSTOM":
        return "CUSTOM";
    }
  }
  toggleNameSelection(i) {
    (this.isLoading = !0),
      this.isDealerSelected(i)
        ? (this.selectedDealers = this.selectedDealers.filter(
            (e) => e.dealerName !== i.dealerName
          ))
        : this.selectedDealers.push(i),
      this.fetchSuperAdminDashboard(this.selectedFilter);
  }
  onFilterChange(i) {
    if (
      ((this.expandedSummaryRow = null),
      (this.expandedRow = null),
      (this.dealerUsers = {}),
      (this.userCallLogs = {}),
      (this.dealerCallLogs = {}),
      this.cd.detectChanges(),
      (this.selectedFilter = i),
      localStorage.setItem("selectedFilter", i),
      i === "CUSTOM")
    )
      return;
    let e = this.mapFilterToApi(i);
    this.fetchSuperAdminDashboard(e);
  }
  fetchDealerSMs(i, e, t) {
    let n = localStorage.getItem("token");
    if (!n) return;
    let o = new Yt({ Authorization: `Bearer ${n}` }),
      u = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&type=${e}`;
    this.http.get(u, { headers: o }).subscribe({
      next: (b) => {
        (this.dealerSMS[i] =
          b?.status === 200 && b.data?.dealers?.[0]?.user_list
            ? b.data.dealers[0].user_list
            : []),
          t && this.dealerSMS[i].some((C) => C.user_id === t)
            ? (this.activeSM = t)
            : (this.activeSM = null);
      },
      error: (b) => {
        (this.dealerSMS[i] = []), (this.activeSM = null);
      },
    });
  }
  fetchPS(i, e) {
    let t = localStorage.getItem("token");
    if (!t) return;
    let n = new Yt({ Authorization: `Bearer ${t}` }),
      o = `https://uat.smartassistapp.in/api/superAdmin/dashbaordNew?type=${this.selectedFilter}&dealer_id=${e}&sm_id=${i}`;
    this.http.get(o, { headers: n }).subscribe({
      next: (u) => {
        this.psData[i] = u?.data?.ps || [];
      },
      error: (u) => {
        this.psData[i] = [];
      },
    });
  }
  updateProgressAndColor(i) {
    (this.changeDisplay = i),
      (this.progressValue = this.getProgressFromChange(i)),
      (this.strokeColor = this.getStrokeColor(i)),
      this.cdr.detectChanges();
  }
  getProgressFromChange(i) {
    return Math.min((Math.abs(i) / 500) * 100, 100);
  }
  isDealerDataAvailable(i) {
    return i?.dealer_id && this.dealerSMS[i.dealer_id]?.length > 0;
  }
  getDashOffset(i) {
    return 100 - i;
  }
  get totalDealerPages() {
    return Math.ceil(this.dealers.length / this.itemsPerdealerPage);
  }
  goToPage(i) {
    i >= 1 && i <= this.totalDealerPages && (this.currentdealerPage = i);
  }
  getShowingRange() {
    let i = (this.currentdealerPage - 1) * this.itemsPerdealerPage + 1,
      e = Math.min(
        this.currentdealerPage * this.itemsPerdealerPage,
        this.dealers.length
      );
    return `Showing ${i} \u2013 ${e} of ${this.dealers.length} dealers`;
  }
  goBack() {
    (this.selectedSM = null),
      (this.selectedDealer = null),
      (this.selectedDealerId = null);
  }
  getDealerColor(i) {
    return this.dealerColors[i % this.dealerColors.length];
  }
  toggleAccordion(i) {
    this.activeAccordion === i
      ? (this.activeAccordion = null)
      : (this.activeAccordion = i);
  }
  get totalPagesdealer() {
    return Math.ceil(this.dealers.length / this.dealersPerPage);
  }
  loadKpiData(i = "DAY") {
    let t = { Authorization: `Bearer ${localStorage.getItem("token")}` };
    this.http
      .get(
        `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${i}`,
        { headers: t }
      )
      .subscribe({
        next: (n) => {
          n.status === 200 &&
            n.data &&
            ((this.kpiData = ee({}, n.data)),
            localStorage.setItem("kpiData", JSON.stringify(this.kpiData)),
            this.cd.detectChanges());
        },
        error: (n) => console.error("Error fetching KPI data:", n),
      });
  }
  prevPage() {
    this.currentPage > 1 && this.currentPage--;
  }
  get paginatedDealerskpi() {
    let i = (this.currentPage - 1) * this.dealersPerPage;
    return this.dealers.slice(i, i + this.dealersPerPage);
  }
  get startEntry() {
    return (this.currentPage - 1) * this.dealersPerPage + 1;
  }
  get endEntry() {
    return Math.min(
      this.currentPage * this.dealersPerPage,
      this.dealers.length
    );
  }
  nextPage() {
    this.currentPage < this.totalPagesdealer && this.currentPage++;
  }
  onPageChange(i) {
    let e = Math.ceil(this.dealers.length / this.itemsPerPage);
    i >= 1 && i <= e && (this.currentPage = i);
  }
  togglePS(i) {
    this.activePS = this.activePS === i ? null : i;
  }
  onDropdownChange() {
    this.selectedCategory &&
      this.selectedDuration &&
      (this.selectedOption = `${this.selectedCategory}-${this.selectedDuration}`);
  }
  onSMClick(i) {
    (this.selectedSM = i),
      (this.selectedDealer = null),
      (this.currentPage = 1),
      (this.ps1Data = []);
  }
  changeDealerPage(i) {
    let e = this.currentDealerPage + i;
    e >= 1 && e <= this.totalDealerPages && this.goToDealerPage(e);
  }
  goToDealerPage(i) {
    i >= 1 &&
      i <= this.totalDealerPages &&
      ((this.currentDealerPage = i),
      this.updateDealerPagination(),
      this.loadDealersForPage(i));
  }
  updateDealerPagination() {
    let i = (this.currentDealerPage - 1) * this.dealersPerPage + 1,
      e = Math.min(this.currentDealerPage * this.dealersPerPage, 23),
      t = document.getElementById("dealer-range");
    t && (t.textContent = `${i}-${e}`),
      document.querySelectorAll(".pagination-btn").forEach((o, u) => {
        o.textContent === "Previous"
          ? (o.disabled = this.currentDealerPage === 1)
          : o.textContent === "Next"
          ? (o.disabled = this.currentDealerPage === this.totalDealerPages)
          : o.textContent &&
            !isNaN(parseInt(o.textContent)) &&
            o.classList.toggle(
              "active",
              parseInt(o.textContent) === this.currentDealerPage
            );
      });
  }
  loadDealersForPage(i) {
    let e = document.querySelectorAll(".accordion.level-1");
    e.forEach((t) => {
      t.style.opacity = "0.5";
    }),
      setTimeout(() => {
        e.forEach((t) => {
          t.style.opacity = "1";
        });
      }, 300);
  }
  changeTablePage(i, e) {}
  searchDealer(i) {}
  autoCollapseOthers(i) {
    document.querySelectorAll(".accordion-content.active").forEach((t) => {
      if (t.id !== `content-${i}`) {
        let n = t.id.replace("content-", "toggle-"),
          o = document.getElementById(n);
        o &&
          o.parentElement &&
          (t.classList.remove("active"),
          o.parentElement.classList.remove("active"),
          (o.textContent = "\u25BC"));
      }
    });
  }
  initializeFilters() {
    document.querySelectorAll('select, input[type="date"]').forEach((e) => {
      e.addEventListener("change", (t) => {
        let n = t.target;
        this.handleFilterChange(n.value);
      });
    });
  }
  handleFilterChange(i) {}
  onSearchChange(i) {
    let e = i.target;
    this.searchDealer(e.value);
  }
  fetchSuperAdminDashboard(i) {
    this.isLoading = !0;
    let e = "",
      t =
        this.selectedFilter === "CUSTOM" &&
        this.customStartDate &&
        this.customEndDate;
    if (!this.selectedDealers?.length)
      e = t
        ? `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?start_date=${this.customStartDate}&end_date=${this.customEndDate}`
        : `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${i}`;
    else if (this.selectedDealers.length === 1)
      e = t
        ? `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${this.selectedDealers[0].dealerId}&start_date=${this.customStartDate}&end_date=${this.customEndDate}`
        : `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${this.selectedDealers[0].dealerId}&type=${i}`;
    else {
      let u = this.selectedDealers.map((b) => b.dealerId).join(",");
      e = t
        ? `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealerIds=${u}&start_date=${this.customStartDate}&end_date=${this.customEndDate}`
        : `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealerIds=${u}&type=${i}`;
    }
    let n = localStorage.getItem("token");
    if (!n) {
      this.isLoading = !1;
      return;
    }
    let o = new Yt({ Authorization: `Bearer ${n}` });
    this.http.get(e, { headers: o }).subscribe({
      next: (u) => {
        if (((this.isLoading = !1), u?.status === 200 && u.data)) {
          let b = u.data.dealers ?? 0,
            C = u.data.activeNetwork ?? 0,
            T = {
              dealers: b,
              activeNetwork: C,
              users: u.data.users ?? 0,
              activeUsers: u.data.activeUsers ?? 0,
              leads: u.data.leads ?? 0,
              calls: u.data.calls ?? 0,
              totalFollowUps: u.data.totalFollowUps ?? 0,
              uniqueTestDrives: u.data.uniqueTestDrives ?? 0,
              completedTestDrives: u.data.completedTestDrives ?? 0,
            },
            k = u.data.dealerData ?? [];
          if (
            ((this.dealers = [...k]),
            this.dealers.forEach((B) => {
              B.callLogs
                ? B.callLogs.totalCalls || (B.callLogs.totalCalls = 0)
                : (B.callLogs = {
                    totalCalls: 0,
                    outgoing: 0,
                    incoming: 0,
                    connected: 0,
                    declined: 0,
                    durationSec: 0,
                  });
            }),
            this.dealers.sort(
              (B, L) => Number(L.saLeads ?? 0) - Number(B.saLeads ?? 0)
            ),
            (this.originalDealers = [...this.dealers]),
            (this.filteredDealers = [...this.dealers]),
            this.dealers.forEach((B) => {
              let H = [...(B.users ?? [])].map((U) => ({
                userId: U.user_id,
                user: U.user,
                calls: U.calls ?? {},
                enquiriesCalls: U.enquiriesCalls ?? {},
                coldCalls: U.coldCalls ?? {},
              }));
              (B.users = H), (this.userCallLogs[B.dealerId] = H);
            }),
            this.isInitialLoad
              ? (this.dealers.length > 0 &&
                  ((this.selectedDealers = [...this.dealers]),
                  (this.isAllSelected = !0)),
                (this.isInitialLoad = !1))
              : this.selectedDealers?.length > 0 &&
                (this.selectedDealers = this.selectedDealers
                  .map((B) =>
                    this.dealers.find((L) => L.dealerId === B.dealerId)
                  )
                  .filter(Boolean)),
            (this.isAllSelected =
              this.selectedDealers.length === this.dealers.length),
            this.selectedDealers.sort(
              (B, L) =>
                Number(L.callLogs?.totalCalls ?? 0) -
                Number(B.callLogs?.totalCalls ?? 0)
            ),
            this.isAllSelected)
          )
            T = {
              dealers: b,
              activeNetwork: C,
              users: u.data.users ?? 0,
              activeUsers: u.data.activeUsers ?? 0,
              leads: u.data.leads ?? 0,
              calls: u.data.calls ?? 0,
              totalFollowUps: u.data.totalFollowUps ?? 0,
              uniqueTestDrives: u.data.uniqueTestDrives ?? 0,
              completedTestDrives: u.data.completedTestDrives ?? 0,
            };
          else if (this.selectedDealers?.length === 1) {
            let B = this.dealers.find(
              (L) => L.dealerId === this.selectedDealers[0].dealerId
            );
            B &&
              (T = {
                dealers: b,
                activeNetwork: C,
                users: B.totalUsers ?? 0,
                activeUsers: B.activeUsers ?? 0,
                leads: B.saLeads ?? B.totalLeads ?? 0,
                calls: B.callLogs?.totalCalls ?? 0,
                totalFollowUps: B.saFollowUps ?? B.totalFollowUps ?? 0,
                uniqueTestDrives: B.uniqueTestDrives ?? 0,
                completedTestDrives: B.completedTestDrives ?? 0,
              });
          } else if (this.selectedDealers?.length > 1) {
            let B = this.selectedDealers.reduce(
              (L, H) => {
                let U = this.dealers.find((j) => j.dealerId === H.dealerId);
                return (
                  U &&
                    ((L.users += U.totalUsers ?? 0),
                    (L.activeUsers += U.activeUsers ?? 0),
                    (L.leads += U.saLeads ?? U.totalLeads ?? 0),
                    (L.calls += U.callLogs?.totalCalls ?? 0),
                    (L.totalFollowUps +=
                      U.saFollowUps ?? U.totalFollowUps ?? 0),
                    (L.uniqueTestDrives += U.uniqueTestDrives ?? 0),
                    (L.completedTestDrives += U.completedTestDrives ?? 0)),
                  L
                );
              },
              {
                users: 0,
                activeUsers: 0,
                leads: 0,
                calls: 0,
                totalFollowUps: 0,
                uniqueTestDrives: 0,
                completedTestDrives: 0,
              }
            );
            T = ee({ dealers: b, activeNetwork: C }, B);
          }
          (this.kpiData = ee({}, T)), this.cdr.detectChanges();
          let V =
            this.selectedDealers.length > 0
              ? this.selectedDealers
              : this.dealers;
          this.chartOptions = {
            series: [
              {
                name: "Total Calls",
                data: V.map((B) => this.getDealerCalls(B)?.totalCalls ?? 0),
              },
              {
                name: "Incoming",
                data: V.map((B) => this.getDealerCalls(B)?.incoming ?? 0),
              },
              {
                name: "Outgoing",
                data: V.map((B) => this.getDealerCalls(B)?.outgoing ?? 0),
              },
              {
                name: "Connected",
                data: V.map((B) => this.getDealerCalls(B)?.connected ?? 0),
              },
              {
                name: "Declined",
                data: V.map((B) => this.getDealerCalls(B)?.declined ?? 0),
              },
            ],
            chart: { type: "bar", height: 430, stacked: !0 },
            plotOptions: {
              bar: { horizontal: !0, dataLabels: { position: "center" } },
            },
            dataLabels: {
              enabled: !0,
              style: { fontSize: "12px", colors: ["#fff"] },
            },
            stroke: { show: !0, width: 1, colors: ["#fff"] },
            tooltip: {
              shared: !0,
              intersect: !1,
              y: {
                formatter: (B, L) => {
                  let H = L?.w?.globals?.labels[L.dataPointIndex],
                    U = L?.w?.config?.series,
                    j = `${H}<br/>`;
                  return (
                    U.forEach((Y) => {
                      let ge = Y.data[L.dataPointIndex];
                      j += `${Y.name}: ${ge}<br/>`;
                    }),
                    j
                  );
                },
              },
            },
            xaxis: { categories: V.map((B) => B.dealerName) },
            title: { text: "Dealer-wise Calls Analysis", align: "left" },
            legend: {
              show: !0,
              position: "bottom",
              horizontalAlign: "center",
              markers: { size: 12 },
            },
            responsive: [
              {
                breakpoint: 768,
                options: {
                  xaxis: {
                    labels: { rotate: -60, style: { fontSize: "9px" } },
                  },
                  legend: { position: "bottom", fontSize: "10px" },
                },
              },
              {
                breakpoint: 480,
                options: {
                  xaxis: {
                    labels: {
                      show: !0,
                      rotate: -75,
                      style: { fontSize: "8px" },
                    },
                  },
                  legend: { position: "bottom", fontSize: "8px" },
                },
              },
            ],
          };
        } else
          (this.dealers = []),
            (this.filteredDealers = []),
            (this.userCallLogs = {}),
            (this.kpiData = {
              dealers: 0,
              activeNetwork: 0,
              users: 0,
              activeUsers: 0,
              leads: 0,
              calls: 0,
              totalFollowUps: 0,
              uniqueTestDrives: 0,
              completedTestDrives: 0,
            }),
            this.cdr.detectChanges();
      },
      error: (u) => {
        (this.isLoading = !1),
          (this.dealers = []),
          (this.filteredDealers = []),
          (this.userCallLogs = {}),
          (this.kpiData = {
            dealers: 0,
            activeNetwork: 0,
            users: 0,
            activeUsers: 0,
            leads: 0,
            calls: 0,
            totalFollowUps: 0,
            uniqueTestDrives: 0,
            completedTestDrives: 0,
          });
      },
    });
  }
  aggregateDealerData(i) {
    let e = {
      dealers: i.length,
      activeNetwork: i.length,
      users: 0,
      activeUsers: 0,
      leads: 0,
      calls: 0,
      totalFollowUps: 0,
      uniqueTestDrives: 0,
      completedTestDrives: 0,
    };
    return (
      i.forEach((t) => {
        (e.users += t.totalUsers || 0),
          (e.activeUsers += t.activeUsers || 0),
          (e.leads += t.saLeads || 0),
          (e.calls += t.calls || 0),
          (e.totalFollowUps += t.totalFollowUps || 0),
          (e.uniqueTestDrives += t.uniqueTestDrives || 0),
          (e.completedTestDrives += t.completedTestDrives || 0);
      }),
      e
    );
  }
  buildUserCallLogs() {
    this.dealers.forEach((i) => {
      let e = i.users ?? [];
      this.userCallLogs[i.dealerId] = e.map((t) => ({
        userId: t.user_id,
        name: t.user,
        calls: {
          total: t.calls?.totalCalls ?? 0,
          outgoing: t.calls?.outgoing ?? 0,
          incoming: t.calls?.incoming ?? 0,
          connected: t.calls?.connected ?? 0,
          declined: t.calls?.declined ?? 0,
          durationSec: t.calls?.durationSec ?? 0,
        },
      }));
    });
  }
  fetchDealers(i) {
    let e = localStorage.getItem("token"),
      t = new Yt({ Authorization: `Bearer ${e}` }),
      n = `https://uat.smartassistapp.in/api/superAdmin/dashboard/view-activities?type=${i}`;
    this.http.get(n, { headers: t }).subscribe(
      (o) => {
        o?.status === 200 && o.data?.dealerData
          ? ((this.dealers = o.data.dealerData),
            this.dealers.forEach((u) => {
              this.dealerSMS[u.dealer_id] || (this.dealerSMS[u.dealer_id] = []);
            }))
          : (this.dealers = []);
      },
      (o) => {
        this.dealers = [];
      }
    );
  }
  applyCustomDate() {
    if (!this.customStartDate || !this.customEndDate) {
      this.toastr.warning("Please select both start and end dates", "Warning");
      return;
    }
    if (new Date(this.customEndDate) < new Date(this.customStartDate)) {
      this.toastr.error("End date cannot be earlier than start date", "Error");
      return;
    }
    (this.isLoading = !0),
      (this.selectedFilter = "CUSTOM"),
      this.fetchSuperAdminDashboard("CUSTOM");
  }
  resetCustomDate() {
    (this.customStartDate = ""),
      (this.customEndDate = ""),
      (this.selectedFilter = "DAY"),
      (this.invalidDateRange = !1),
      (this.isLoading = !0),
      this.onFilterChange(this.selectedFilter);
    let i = document.querySelector(".custom-inputs");
    i && i.classList.remove("applied");
  }
  validateCustomDates() {
    if (this.customStartDate && this.customEndDate) {
      let i = new Date(this.customStartDate),
        e = new Date(this.customEndDate);
      this.invalidDateRange = i > e;
    } else this.invalidDateRange = !1;
  }
  formatDuration(i) {
    let e = Math.floor(i / 3600)
        .toString()
        .padStart(2, "0"),
      t = Math.floor((i % 3600) / 60)
        .toString()
        .padStart(2, "0"),
      n = (i % 60).toString().padStart(2, "0");
    return `${e}:${t}:${n}`;
  }
  toggleRow(i, e) {
    let t = e.dealerId;
    if (!t) return;
    this.expandedRow = this.expandedRow === t ? null : t;
    let n = localStorage.getItem("token");
    if (!n) return;
    this.loadingUsers[t] = !0;
    let o;
    this.selectedFilter === "CUSTOM" &&
    this.customStartDate &&
    this.customEndDate
      ? (o = this.dashboardService.getDealersByCustomDate(
          this.customStartDate,
          this.customEndDate,
          n,
          t
        ))
      : (o = this.dashboardService.getDealerUsers(t, this.selectedFilter, n)),
      o.subscribe({
        next: (u) => {
          this.loadingUsers[t] = !1;
          let b = Array.isArray(u?.data?.dealerData)
            ? u.data.dealerData.find((C) => C.dealerId === t)
            : u?.data?.dealerData;
          if (!b) {
            this.dealerUsers[t] = [];
            return;
          }
          (this.dealerUsers[t] = b.users || []), this.cd.detectChanges();
        },
        error: (u) => {
          (this.loadingUsers[t] = !1), (this.dealerUsers[t] = []);
        },
      });
  }
  fetchDealersWithCustomDate(i, e) {
    let t = localStorage.getItem("token"),
      n;
    this.selectedDealers?.length === 1 &&
      (n = this.selectedDealers[0].dealerId),
      this.dashboardService.getDealersByCustomDate(i, e, t, n).subscribe({
        next: (o) => {
          this.ngZone.run(() => {
            if (o?.status === 200 && o.data) {
              let u = o.data.dealers ?? 0,
                b = o.data.activeNetwork ?? 0,
                C = {
                  dealers: u,
                  activeNetwork: b,
                  users: o.data.users ?? 0,
                  activeUsers: o.data.activeUsers ?? 0,
                  leads: o.data.leads ?? 0,
                  calls: o.data.calls ?? 0,
                  totalFollowUps: o.data.totalFollowUps ?? 0,
                  uniqueTestDrives: o.data.uniqueTestDrives ?? 0,
                  completedTestDrives: o.data.completedTestDrives ?? 0,
                };
              if (
                ((this.dealers = o.data.dealerData ?? []),
                (this.filteredDealers = [...this.dealers]),
                this.selectedDealers?.length > 0 &&
                  (this.selectedDealers = this.selectedDealers.map(
                    (j) =>
                      this.dealers.find((ge) => ge.dealerId === j.dealerId) || j
                  )),
                this.selectedDealers?.length === 1)
              ) {
                let j = this.dealers.find(
                  (Y) => Y.dealerId === this.selectedDealers[0].dealerId
                );
                j &&
                  (C = {
                    dealers: u,
                    activeNetwork: b,
                    users: j.totalUsers ?? 0,
                    activeUsers: j.activeUsers ?? 0,
                    leads: j.saLeads ?? j.totalLeads ?? 0,
                    calls: j.callLogs?.totalCalls ?? 0,
                    totalFollowUps: j.saFollowUps ?? j.totalFollowUps ?? 0,
                    uniqueTestDrives: j.uniqueTestDrives ?? 0,
                    completedTestDrives: j.completedTestDrives ?? 0,
                  });
              } else if (this.selectedDealers?.length > 1) {
                let j = {
                  users: 0,
                  activeUsers: 0,
                  leads: 0,
                  calls: 0,
                  totalFollowUps: 0,
                  uniqueTestDrives: 0,
                  completedTestDrives: 0,
                };
                this.selectedDealers.forEach((Y) => {
                  let ge = this.dealers.find(
                    (Ce) => Ce.dealerId === Y.dealerId
                  );
                  ge &&
                    ((j.users += ge.totalUsers ?? 0),
                    (j.activeUsers += ge.activeUsers ?? 0),
                    (j.leads += ge.saLeads ?? ge.totalLeads ?? 0),
                    (j.calls += ge.callLogs?.totalCalls ?? 0),
                    (j.totalFollowUps +=
                      ge.saFollowUps ?? ge.totalFollowUps ?? 0),
                    (j.uniqueTestDrives += ge.uniqueTestDrives ?? 0),
                    (j.completedTestDrives += ge.completedTestDrives ?? 0));
                }),
                  (C = ee({ dealers: u, activeNetwork: b }, j));
              }
              (this.kpiData = ee({}, C)),
                this.dealers.sort((j, Y) => {
                  let ge =
                    (j.saLeads || 0) +
                    (j.cxpLeads || 0) +
                    (j.icsLeads || 0) +
                    (j.manuallyEnteredLeads || 0);
                  return (
                    (Y.saLeads || 0) +
                    (Y.cxpLeads || 0) +
                    (Y.icsLeads || 0) +
                    (Y.manuallyEnteredLeads || 0) -
                    ge
                  );
                });
              let T = this.dealers.map((j) => j.dealerName),
                k = this.dealers.map((j) => j.callLogs?.connected ?? 0),
                V = this.dealers.map((j) => j.callLogs?.declined ?? 0),
                B = this.dealers.map((j) => j.callLogs?.durationSec ?? 0),
                L = this.dealers.map((j) => j.callLogs?.incoming ?? 0),
                H = this.dealers.map((j) => j.callLogs?.outgoing ?? 0),
                U = this.dealers.map((j) => j.callLogs?.totalCalls ?? 0);
              (this.chartOptions = {
                series: [
                  { name: "Total Calls", data: U },
                  { name: "Outgoing Calls", data: H },
                  { name: "Incoming Calls", data: L },
                  { name: "Duration Sec", data: B },
                  { name: "Declined Calls", data: V },
                  { name: "Connected Calls", data: k },
                ],
                chart: { type: "bar", height: 430 },
                plotOptions: {
                  bar: { horizontal: !0, dataLabels: { position: "top" } },
                },
                dataLabels: {
                  enabled: !0,
                  offsetX: -6,
                  style: { fontSize: "12px", colors: ["#fff"] },
                },
                stroke: { show: !0, width: 1, colors: ["#fff"] },
                tooltip: { shared: !0, intersect: !1 },
                xaxis: { categories: T },
                title: { text: "Dealer-wise Calls Analysis", align: "left" },
                legend: {
                  show: !0,
                  position: "bottom",
                  horizontalAlign: "center",
                },
              }),
                this.cdr.detectChanges();
            } else
              (this.dealers = []),
                (this.kpiData = {
                  dealers: 0,
                  activeNetwork: 0,
                  users: 0,
                  activeUsers: 0,
                  leads: 0,
                  calls: 0,
                  totalFollowUps: 0,
                  uniqueTestDrives: 0,
                  completedTestDrives: 0,
                });
            this.isLoading = !1;
          });
        },
        error: (o) => {
          this.ngZone.run(() => {
            (this.dealers = []),
              (this.kpiData = {
                dealers: 0,
                activeNetwork: 0,
                users: 0,
                activeUsers: 0,
                leads: 0,
                calls: 0,
                totalFollowUps: 0,
                uniqueTestDrives: 0,
                completedTestDrives: 0,
              }),
              (this.isLoading = !1);
          });
        },
      });
  }
  updatePaginatedDealers() {
    this.paginatedDealers = this.dealers.slice(0, this.currentDisplayCount);
  }
  onDealerSelectionChange() {
    if (
      this.selectedFilter === "CUSTOM" &&
      this.customStartDate &&
      this.customEndDate
    )
      this.fetchDealersWithCustomDate(this.customStartDate, this.customEndDate);
    else {
      let i = this.mapFilterToApi(this.selectedFilter);
      this.fetchSuperAdminDashboard(i);
    }
  }
  onDealerClick(i, e) {
    let t = localStorage.getItem("token");
    if (
      this.selectedFilter === "CUSTOM" &&
      this.customStartDate &&
      this.customEndDate
    ) {
      let n = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&start_date=${this.customStartDate}&end_date=${this.customEndDate}`;
      this.http
        .get(n, { headers: { Authorization: `Bearer ${t}` } })
        .subscribe((o) => {});
    } else {
      let n = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${i}&type=${e}`;
      this.http
        .get(n, { headers: { Authorization: `Bearer ${t}` } })
        .subscribe((o) => {});
    }
  }
  avatarColors = [
    { background: "#E2E0F5", color: "#4B3C9B" },
    { background: "#D1F8F2", color: "#008B7F" },
    { background: "#FFD6D6", color: "#C62828" },
    { background: "#D6FFD6", color: "#2E7D32" },
    { background: "#D6E6FF", color: "#2962FF" },
    { background: "#FFE6FF", color: "#AD1457" },
  ];
  getAvatarStyle(i) {
    let e = this.avatarColors[i % this.avatarColors.length];
    return {
      width: "60px",
      height: "60px",
      margin: "0 auto 12px auto",
      borderRadius: "50%",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      fontWeight: "600",
      fontSize: "24px",
      background: e.background,
      color: e.color,
    };
  }
  isLastRow(i) {
    let e = Math.floor(window.innerWidth / 160),
      t = Math.ceil(this.ps1Data.length / e);
    return Math.floor(i / e) + 1 === t;
  }
  getAvatarColor(i) {
    let e = [
      { background: "#E2E0F5", text: "#4B3C9B" },
      { background: "#C4FEFB", text: "#007A78" },
      { background: "#FED1CF", text: "#C9302C" },
      { background: "#E3FFDF", text: "#3E8E41" },
      { background: "#CFDFFE", text: "#2C4DB2" },
      { background: "#FFEDFE", text: "#AF4C96" },
      { background: "#EAD1DC", text: "#9C2550" },
      { background: "#FFF2CC", text: "#B58900" },
      { background: "#D9EAD3", text: "#3B7A2A" },
      { background: "#F4CCCC", text: "#990000" },
      { background: "#F3F3F3", text: "#4D4D4D" },
      { background: "#FFE6F0", text: "#C2185B" },
    ];
    return e[i % e.length];
  }
  onPSCardClick(i) {}
  fetchPS1Data() {
    if (!this.selectedSM || !this.selectedDealerId) return;
    this.loadingPS = !0;
    let i = this.selectedFilter,
      e = "https://uat.smartassistapp.in/api/superAdmin/dashbaordNew",
      t = this.selectedDealerId,
      n = this.selectedSM.sm_id,
      o = `${e}?type=${i}&dealer_id=${t}&sm_id=${n}`,
      u = localStorage.getItem("token");
    if (!u) {
      this.loadingPS = !1;
      return;
    }
    let b = new Yt().set("Authorization", `Bearer ${u}`);
    this.http.get(o, { headers: b }).subscribe({
      next: (C) => {
        let T = C?.data?.ps;
        Array.isArray(T)
          ? (this.ps1Data = T.map((k) => ({
              ps_id: k.ps_id,
              ps_name: `${k.ps_fname} ${k.ps_lname}`,
              enquiries: k.enquiries,
              testDrives: k.testDrives,
              orders: k.orders,
              cancellations: k.cancellation,
              netOrders: k.net_orders,
              retail: k.retail,
            })))
          : (this.ps1Data = []),
          (this.loadingPS = !1);
      },
      error: (C) => {
        (this.ps1Data = []), (this.loadingPS = !1);
      },
    });
  }
  get paginatedPs1Data() {
    let i = (this.currentPage - 1) * this.pageSize,
      e = i + this.pageSize;
    return this.ps1Data.slice(i, e);
  }
  get totalPs1Pages() {
    return Math.ceil(this.ps1Data.length / this.pageSize);
  }
  formatChangeValue(i) {
    return i === 0 || Object.is(i, -0) ? "0%" : i > 0 ? `+${i}%` : `${i}%`;
  }
  getChangeColor(i) {
    return i > 0 ? "text-success" : (i < 0, "text-danger");
  }
  showMore() {
    (this.currentDisplayCount += this.itemsPerPage),
      this.updateDisplayedDealers();
  }
  showMoreVisible = !0;
  showMoreTable1() {
    let i =
      this.selectedDealers.length > 0 ? this.selectedDealers : this.dealers;
    this.table1Length < i.length && (this.table1Length += 10);
  }
  showLessTable1() {
    this.table1Length = 10;
  }
  showMoreTable2() {
    let i = this.dealers;
    this.table2Length < i.length && (this.table2Length += 10);
  }
  showLessTable2() {
    this.table2Length = 10;
  }
  dealerEngagementView(i) {
    i === "table" || i === "chart"
      ? (this.dealerSummaryCallsViewType = i)
      : ((this.dealerSummaryCallsDataType = i),
        (this.expandedRow = null),
        this.updateDealerChart()),
      this.loadDealerData(
        this.dealerSummaryCallsDataType,
        this.dealerSummaryCallsViewType
      ),
      this.refreshUserCallLogsForFilterChange();
  }
  refreshUserCallLogs(i) {
    let e = i.dealerId,
      t = this.userCallLogs[e] ?? [];
    this.userCallLogs[e] = [
      ...t.map((n) => {
        let o = i.users?.find((C) => C.user_id === n.userId) || {},
          u = this.getUserCalls(o),
          b = Number(u?.durationSec ?? u?.duration ?? 0);
        return {
          userId: o.user_id || n.userId,
          name: o.user || n.name,
          calls: {
            total: Number(u?.totalCalls ?? 0),
            outgoing: Number(u?.outgoing ?? 0),
            incoming: Number(u?.incoming ?? 0),
            connected: Number(u?.connected ?? 0),
            declined: Number(u?.declined ?? 0),
            duration: this.formatDuration(b),
            durationSec: b,
          },
        };
      }),
    ];
  }
  refreshUserCallLogsForFilterChange() {
    if (!this.expandedRow) return;
    let i = this.dealersData.find((t) => t.dealerId === this.expandedRow);
    if (!i) return;
    let e = i.dealerId;
    this.userCallLogs[e] =
      i.users?.map((t) => {
        let n = this.getUserCalls(t),
          o = Number(n?.durationSec ?? n?.duration ?? 0);
        return {
          userId: t.user_id,
          name: t.user,
          calls: {
            total: Number(n?.totalCalls ?? 0),
            outgoing: Number(n?.outgoing ?? 0),
            incoming: Number(n?.incoming ?? 0),
            connected: Number(n?.connected ?? 0),
            declined: Number(n?.declined ?? 0),
            duration: this.formatDuration(o),
            durationSec: o,
          },
        };
      }) || [];
  }
  loadDealerData(i, e) {
    this.filteredDealerData = this.dealersData.map((t) => ({
      dealerId: t.dealerId,
      dealerName: t.dealerName,
      totalCalls:
        i === "enquiries"
          ? t.enquiriesCalls.totalCalls
          : t.coldCalls.totalCalls,
      connectedCalls:
        i === "enquiries"
          ? t.enquiriesCalls.connectedCalls
          : t.coldCalls.connectedCalls,
    }));
  }
  updateDisplayedDealers() {
    (this.displayedDealers = this.dealers.slice(0, this.itemsToShow)),
      (this.showMoreVisible = this.itemsToShow < this.dealers.length);
  }
  fetchDashboardData(i = "MTD") {
    let e = localStorage.getItem("token");
    if (!e) return;
    let t = new Yt().set("Authorization", `Bearer ${e}`),
      n = `https://uat.smartassistapp.in/api/superAdmin/dashboard/view-activities?type=${i}`;
    this.http.get(n, { headers: t }).subscribe({
      next: (o) => {
        let u = o?.data || {},
          b = (C) =>
            typeof C == "string"
              ? parseFloat(C.replace("%", "").trim())
              : Number(C) || 0;
        if (
          ((this.currentLeads = Number(u.current) || 0),
          (this.previousLeads = Number(u.previous) || 0),
          (this.changeDisplay = b(u.change)),
          (this.currentTestDrives = Number(u.currentTestDrives) || 0),
          (this.previousTestDrives = Number(u.previousTestDrives) || 0),
          (this.testDriveChange = b(u.testDriveChange)),
          (this.currentOrders = Number(u.currentOrders) || 0),
          (this.previousOrders = Number(u.previousOrders) || 0),
          (this.orderChange = b(u.orderChange)),
          (this.progressValue = Math.abs(this.changeDisplay)),
          (this.strokeColor = this.getStrokeColor(this.changeDisplay)),
          (this.testDriveProgressValue = Math.abs(this.testDriveChange)),
          (this.testDriveStrokeColor = this.getStrokeColor(
            this.testDriveChange
          )),
          (this.orderProgressValue = Math.abs(this.orderChange)),
          (this.orderStrokeColor = this.getStrokeColor(this.orderChange)),
          u.kpi)
        ) {
          let C = Number(u.kpi.totalTestDrives) || 0,
            T = Number(u.kpi.totalOrders) || 0;
          C > 0 || T > 0;
        }
      },
      error: (o) => {},
    });
  }
  fetchData() {
    this.http
      .get("https://uat.smartassistapp.in/api/superAdmin/dashbaordNew")
      .subscribe(
        (i) => {
          i?.data && (this.data = i.data);
        },
        (i) => {}
      );
  }
  getLeadChange() {
    return this.data?.leads?.change ? this.data.leads.change : 0;
  }
  trackByDealerId(i, e) {
    return e.dealer_id;
  }
  getChangePercentage() {
    return this.data?.leads?.change || 0;
  }
  getLeadPercentageChange() {
    return this.dashboardData?.leads?.change || 0;
  }
  sortData(i) {
    this.sortColumn === i
      ? (this.sortDirection =
          this.sortDirection === "asc"
            ? "desc"
            : this.sortDirection === "desc"
            ? "default"
            : "asc")
      : ((this.sortColumn = i), (this.sortDirection = "asc")),
      this.sortDirection !== "default" &&
        this.selectedDealers?.length &&
        this.selectedDealers.sort((e, t) => {
          let n = e[i] ?? 0,
            o = t[i] ?? 0;
          return this.sortDirection === "asc" ? n - o : o - n;
        });
  }
  fetchDashboardDataForTopCards(i) {
    let e = localStorage.getItem("token") || "",
      t = "https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM";
    i === "CUSTOM" && this.customStartDate && this.customEndDate
      ? (t += `?startDate=${this.customStartDate}&endDate=${this.customEndDate}`)
      : i !== "CUSTOM" && (t += `?type=${i}`),
      this.http
        .get(t, { headers: { Authorization: `Bearer ${e}` } })
        .subscribe({
          next: (n) => {
            n.status === 200 &&
              ((this.kpiData = n.data), (this.dealers = n.data.dealerData));
          },
          error: (n) => {
            this.dealers = [];
          },
        });
  }
  filterDealers() {
    let i = this.dealerSearch.toLowerCase();
    if (!i) {
      this.filteredDealers = [...this.dealers];
      return;
    }
    this.filteredDealers = this.dealers.filter((e) =>
      e.dealerName?.toLowerCase().includes(i)
    );
  }
  toggleDropdown() {
    (this.dropdownOpen = !this.dropdownOpen),
      this.dropdownOpen && (this.filteredDealers = [...this.dealers]);
  }
  toggleSelectAll(i) {
    i.target.checked
      ? ((this.selectedDealers = [...this.filteredDealers]),
        (this.isAllSelected = !0))
      : ((this.selectedDealers = []), (this.isAllSelected = !1)),
      this.fetchSuperAdminDashboard(this.selectedFilter);
  }
  clearSelection() {
    (this.selectedDealers = []), this.cdr.detectChanges();
  }
  selectDealer(i) {
    (this.selectedDealer = i),
      (this.dealerSearch = ""),
      (this.dropdownOpen = !1),
      this.fetchSuperAdminDashboard("MTD");
  }
  clickOutside(i) {
    this.dropdownOpen &&
      (i.target.closest(".dropdown-toggle") || (this.dropdownOpen = !1));
  }
  isDealerSelected(i) {
    return this.selectedDealers.some((e) => e.dealerId === i.dealerId);
  }
  toggleDealerSelection(i) {
    let e = this.selectedDealers.findIndex((t) => t.dealerId === i.dealerId);
    e > -1 ? this.selectedDealers.splice(e, 1) : this.selectedDealers.push(i),
      this.fetchSuperAdminDashboard(this.selectedFilter);
  }
  areAllSelected() {
    return !this.filteredDealers ||
      this.filteredDealers.length === 0 ||
      !this.selectedDealers ||
      this.selectedDealers.length === 0
      ? !1
      : this.filteredDealers.every((i) =>
          this.selectedDealers.some((e) => e.dealerId === i.dealerId)
        );
  }
  exportToCSV() {
    let i = this.getSortedDealersForSummary();
    if (!i || i.length === 0) return;
    let e = [
        "Dealer",
        "Total Users",
        "registerUsers",
        "Active Users",
        "Leads SA",
        "Leads Sync with CXP",
        "Leads Sync with ICS",
        "Digital Leads",
        "Follow-ups SA",
        "Follow-ups Sync with CXP",
        "Follow-ups Completed",
        "Follow-ups Upcoming",
        "Follow-ups Overdue",
        "Test Drives SA",
        "Test Drives Sync with CXP",
        "Test Drives Completed",
        "Test Drives Unique",
        "Test Drives Upcoming",
        "Test Drives Overdue",
        "Opportunities Converted",
      ],
      t = i.map((C) => [
        `"${C.dealerName}"`,
        C.totalUsers || 0,
        C.registerUsers || 0,
        C.activeUsers || 0,
        C.saLeads || 0,
        C.cxpLeads || 0,
        C.icsLeads || 0,
        C.manuallyEnteredLeads || 0,
        C.saFollowUps || 0,
        C.cxpFollowUps || 0,
        C.completedFollowUps || 0,
        C.openFollowUps || 0,
        C.closedFollowUps || 0,
        C.saTestDrives || 0,
        C.cxpTestDrives || 0,
        C.completedTestDrives || 0,
        C.uniqueTestDrives || 0,
        C.upcomingTestDrives || 0,
        C.closedTestDrives || 0,
        C.opportunitiesConverted || 0,
      ]),
      n = [e.join(","), ...t.map((C) => C.join(","))].join(`
`),
      o = new Blob([n], { type: "text/csv;charset=utf-8;" }),
      u = URL.createObjectURL(o),
      b = document.createElement("a");
    (b.href = u),
      (b.download = "dealer_summary.csv"),
      (b.style.display = "none"),
      document.body.appendChild(b),
      b.click(),
      document.body.removeChild(b),
      URL.revokeObjectURL(u);
  }
  trackByUserId(i, e) {
    return e.user_id;
  }
  exportDealerCalllogstocxp() {
    let i =
      this.displayedDealers?.length > 0
        ? [...this.displayedDealers]
        : this.selectedDealers.length > 0
        ? [...this.selectedDealers]
        : [...this.dealers];
    if (!i || i.length === 0) return;
    i.sort((C, T) => {
      let k = this.getDealerCalls(C)?.totalCalls || 0;
      return (this.getDealerCalls(T)?.totalCalls || 0) - k;
    });
    let e = [
        "Dealer",
        "Total Calls",
        "Outgoing",
        "Incoming",
        "Connected",
        "Declined",
        "Duration",
      ],
      t = i.map((C) => {
        let T = this.getDealerCalls(C);
        return [
          `"${C.dealerName}"`,
          T.totalCalls || 0,
          T.outgoing || 0,
          T.incoming || 0,
          T.connected || 0,
          T.declined || 0,
          T.duration || "00:00:00",
        ];
      }),
      n = [e.join(","), ...t.map((C) => C.join(","))].join(`
`),
      o = new Blob([n], { type: "text/csv;charset=utf-8;" }),
      u = URL.createObjectURL(o),
      b = document.createElement("a");
    (b.href = u),
      (b.download = "dealer_summary_calls.csv"),
      (b.style.display = "none"),
      document.body.appendChild(b),
      b.click(),
      document.body.removeChild(b),
      URL.revokeObjectURL(u);
  }
  toggleSummaryRow(i, e) {
    i.stopPropagation();
    let t = e.dealerId;
    if (
      ((this.expandedSummaryRow = this.expandedSummaryRow === t ? null : t),
      this.dealerUsers[t]?.length)
    )
      return;
    let n = localStorage.getItem("token");
    if (!n) return;
    this.loadingUsers[t] = !0;
    let o;
    this.selectedFilter === "CUSTOM" &&
    this.customStartDate &&
    this.customEndDate
      ? (o = this.dashboardService.getDealersByCustomDate(
          this.customStartDate,
          this.customEndDate,
          n,
          t
        ))
      : (o = this.dashboardService.getDealerUsers(t, this.selectedFilter, n)),
      o.subscribe({
        next: (u) => {
          this.loadingUsers[t] = !1;
          let b = Array.isArray(u?.data?.dealerData)
            ? u.data.dealerData.find((C) => C.dealerId === t)
            : u?.data?.dealerData;
          (this.dealerUsers[t] = b?.users || []),
            (this.dealerCallLogs[t] = b?.callLogs ?? null),
            (this.userCallLogs[t] =
              b?.users?.map((C) => ({
                userId: C.user_id,
                name: C.user,
                role: C.user_role,
                active: C.active,
                calls: {
                  total: Number(C.calls?.totalCalls ?? 0),
                  outgoing: Number(C.calls?.outgoing ?? 0),
                  incoming: Number(C.calls?.incoming ?? 0),
                  connected: Number(C.calls?.connected ?? 0),
                  declined: Number(C.calls?.declined ?? 0),
                  duration: this.formatDuration(
                    Number(C.calls?.durationSec ?? 0)
                  ),
                  durationSec: Number(C.calls?.durationSec ?? 0),
                },
              })) || []),
            this.cd.detectChanges();
        },
        error: () => {
          (this.loadingUsers[t] = !1),
            (this.dealerUsers[t] = []),
            (this.dealerCallLogs[t] = null),
            (this.userCallLogs[t] = []);
        },
      });
  }
  toggleCallLogsRow(i, e) {
    i.stopPropagation();
    let t = e.dealerId;
    (this.expandedRow = this.expandedRow === t ? null : t),
      this.expandedRow && this.fetchDealerUsers(e);
  }
  fetchDealerUsers(i) {
    let e = i.dealerId,
      t = localStorage.getItem("token");
    if (!t) return;
    (this.loadingUsers[e] = !0),
      (this.selectedFilter === "CUSTOM" &&
      this.customStartDate &&
      this.customEndDate
        ? this.dashboardService.getDealersByCustomDate(
            this.customStartDate,
            this.customEndDate,
            t,
            e
          )
        : this.dashboardService.getDealerUsers(e, this.selectedFilter, t)
      ).subscribe({
        next: (o) => {
          this.loadingUsers[e] = !1;
          let u = Array.isArray(o?.data?.dealerData)
            ? o.data.dealerData.find((b) => b.dealerId === e)
            : o?.data?.dealerData;
          if (!u) {
            this.userCallLogs[e] = [];
            return;
          }
          this.userCallLogs[e] =
            u.users?.map((b) => {
              let C = this.getUserCalls(b),
                T = Number(C?.durationSec ?? C?.duration ?? 0);
              return {
                userId: b.user_id,
                name: b.user,
                calls: {
                  total: Number(C?.totalCalls ?? 0),
                  outgoing: Number(C?.outgoing ?? 0),
                  incoming: Number(C?.incoming ?? 0),
                  connected: Number(C?.connected ?? 0),
                  declined: Number(C?.declined ?? 0),
                  duration: this.formatDuration(T),
                  durationSec: T,
                },
              };
            }) || [];
        },
        error: () => {
          (this.loadingUsers[e] = !1), (this.userCallLogs[e] = []);
        },
      });
  }
  getDealerCalls(i) {
    let e = {};
    this.dealerSummaryCallsDataType === "enquiries"
      ? (e = i.enquiriesCalls || {})
      : this.dealerSummaryCallsDataType === "coldcalls"
      ? (e = i.coldCalls || {})
      : (e = i.callLogs || {});
    let t = e.durationSec ?? e.duration ?? 0;
    return Ne(ee({}, e), { duration: this.formatDuration(Number(t)) });
  }
  getUserCalls(i) {
    return this.dealerSummaryCallsDataType === "enquiries"
      ? i.enquiriesCalls ?? i.calls ?? {}
      : this.dealerSummaryCallsDataType === "coldcalls"
      ? i.coldCalls ?? i.calls ?? {}
      : i.calls ?? {};
  }
  updateDealerChart() {
    this.chartOptions = Ne(ee({}, this.chartOptions), {
      series: [
        {
          name: "Total Calls",
          data: this.dealers.map(
            (i) => this.getDealerCalls(i)?.totalCalls ?? 0
          ),
        },
        {
          name: "Incoming",
          data: this.dealers.map((i) => this.getDealerCalls(i)?.incoming ?? 0),
        },
        {
          name: "Outgoing",
          data: this.dealers.map((i) => this.getDealerCalls(i)?.outgoing ?? 0),
        },
        {
          name: "Connected",
          data: this.dealers.map((i) => this.getDealerCalls(i)?.connected ?? 0),
        },
        {
          name: "Declined",
          data: this.dealers.map((i) => this.getDealerCalls(i)?.declined ?? 0),
        },
        {
          name: "Duration",
          data: this.dealers.map(
            (i) => this.getDealerCalls(i)?.durationSec ?? 0
          ),
        },
      ],
      xaxis: { categories: this.dealers.map((i) => i.dealerName) },
    });
  }
  onWindowScroll() {
    let i = window.scrollY || document.documentElement.scrollTop;
    (this.showQuickActionBtn = i < this.lastScrollTop),
      (this.lastScrollTop = i <= 0 ? 0 : i),
      (this.isSticky = i >= this.originalHeaderOffsetTop);
  }
  refreshSuperAdminDealers() {
    (this.refreshingSA = !0),
      (this.expandedSummaryRow = null),
      this.fetchSuperAdminDashboard(this.selectedFilter),
      setTimeout(() => {
        this.refreshingSA = !1;
      }, 1500);
  }
  static ɵfac = function (e) {
    return new (e || r)(
      F(St),
      F(qe),
      F(en),
      F(Lt),
      F(ba),
      F(va),
      F(Ie),
      F(qe),
      F(Pe),
      F(Ht)
    );
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-dashboard"]],
    viewQuery: function (e, t) {
      if ((e & 1 && at(Af, 5), e & 2)) {
        let n;
        tt((n = it())) && (t.chart = n.first);
      }
    },
    hostBindings: function (e, t) {
      e & 1 &&
        O(
          "click",
          function (o) {
            return t.clickOutside(o);
          },
          !1,
          wn
        )(
          "scroll",
          function () {
            return t.onWindowScroll();
          },
          !1,
          eo
        );
    },
    standalone: !0,
    features: [le],
    decls: 1,
    vars: 1,
    consts: [
      ["noDealers", ""],
      [4, "ngIf"],
      ["class", "loader-overlay", 4, "ngIf"],
      [1, "header2", "sticky-header", 3, "ngClass"],
      [
        "class",
        "filter-message",
        "style",
        "margin:0;white-space: nowrap;",
        4,
        "ngIf",
      ],
      [
        1,
        "fltt",
        2,
        "display",
        "flex",
        "justify-content",
        "space-between",
        "align-items",
        "center",
        "width",
        "100%",
      ],
      [2, "display", "flex", "align-items", "center", "gap", "0.5rem"],
      [1, "time-dropdown", "flt1", 3, "ngModelChange", "change", "ngModel"],
      ["value", "DAY"],
      ["value", "YESTERDAY"],
      ["value", "WEEK"],
      ["value", "LAST_WEEK"],
      ["value", "MTD"],
      ["value", "LAST_MONTH"],
      ["value", "QTD"],
      ["value", "LAST_QUARTER"],
      ["value", "SIX_MONTH"],
      ["value", "YTD"],
      ["value", "LIFETIME"],
      ["value", "CUSTOM"],
      [
        "class",
        "custom-inputs flt1",
        "style",
        "display:flex; gap:0.25rem;",
        4,
        "ngIf",
      ],
      [1, "dropdown", "flt1", 2, "margin-right", "5px"],
      [
        "type",
        "button",
        1,
        "time-dropdown",
        "dropdown-toggle",
        3,
        "click",
        "disabled",
      ],
      ["class", "dropdown-menu show", 4, "ngIf"],
      [
        "id",
        "refresh",
        1,
        "btn",
        "btn-sm",
        "btn-outline-primary",
        2,
        "border",
        "1px solid #ccc",
        "border-radius",
        "11px",
        3,
        "click",
      ],
      [1, "fa", "fa-refresh"],
      [1, "content-section", "active", 2, "margin-bottom", "2rem"],
      [1, "main-content"],
      [1, "kpi-section"],
      [1, "kpi-card"],
      [1, "kpi-label"],
      [1, "kpi-value", 2, "color", "black"],
      [1, "kpi-secondary"],
      [1, "kpi-highlight"],
      [1, "table-section"],
      [1, "table-header"],
      [1, "table-title"],
      [1, "table-subtitle"],
      [1, "table-actions", "flex", "items-center", "gap-2"],
      [
        "type",
        "button",
        "id",
        "exportsummary",
        1,
        "btn",
        "btn-small",
        "btn-secondary",
        3,
        "click",
      ],
      [1, "icon-download"],
      [1, "table-container"],
      [1, "table-scroll"],
      [1, "data-table"],
      [1, "table-thead"],
      ["rowspan", "2", 1, "sticky-col-header", "th-left", "group-divider"],
      ["colspan", "3", 1, "th-right", "group-divider"],
      ["colspan", "4", 1, "th-right", "group-divider"],
      ["colspan", "7", 1, "th-right", "group-divider"],
      ["colspan", "6", 1, "th-right", "group-divider"],
      [1, "th-right", "sortable-header", 2, "cursor", "pointer", 3, "click"],
      [1, "sort-arrows"],
      [1, "arrow-up"],
      [1, "arrow-down"],
      [
        1,
        "th-right",
        "group-divider",
        "sortable-header",
        2,
        "cursor",
        "pointer",
        3,
        "click",
      ],
      [
        1,
        "th-right",
        "sortable-header",
        2,
        "cursor",
        "pointer",
        "white-space",
        "normal",
        3,
        "click",
      ],
      [4, "ngFor", "ngForOf", "ngForTrackBy"],
      [
        "type",
        "button",
        "style",
        "margin: 0.5rem; float: right;",
        "class",
        "btn btn-primary",
        3,
        "click",
        4,
        "ngIf",
      ],
      [
        "type",
        "button",
        "style",
        "margin: 0.5rem; float: right;",
        "class",
        "btn btn-secondary",
        3,
        "click",
        4,
        "ngIf",
      ],
      ["id", "ds", 1, "table-title"],
      [1, "table-actions"],
      [
        "id",
        "tabs",
        2,
        "display",
        "flex",
        "gap",
        "12px",
        "margin-left",
        "10px",
      ],
      [1, "nav-button-group"],
      [1, "nav-button", 3, "click", "ngClass"],
      [1, "fas", "fa-table", 2, "margin-right", "6px", "font-size", "15px"],
      [1, "fas", "fa-chart-line", 2, "margin-right", "8px"],
      [1, "nav-button-group", 2, "border", "none !important"],
      ["value", "enquiries"],
      ["value", "coldcalls"],
      [1, "btn", "btn-small", "btn-secondary", 3, "click", "hidden"],
      ["class", "table-container", 4, "ngIf"],
      [
        "class",
        "chart-container",
        "style",
        "min-height:400px; padding:20px; background:white; border-radius:10px;",
        4,
        "ngIf",
      ],
      [1, "loader-overlay"],
      [1, "spinner"],
      [1, "filter-message", 2, "margin", "0", "white-space", "nowrap"],
      [1, "custom-inputs", "flt1", 2, "display", "flex", "gap", "0.25rem"],
      [
        "type",
        "date",
        1,
        "custom-date",
        3,
        "ngModelChange",
        "change",
        "ngModel",
      ],
      [1, "apply-btn", "flt2", 3, "click"],
      [1, "reset-btn", "flt2", 3, "click"],
      [1, "dropdown-menu", "show"],
      [1, "px-2", "py-1"],
      [
        "type",
        "text",
        "placeholder",
        "Search dealers...",
        1,
        "form-control",
        3,
        "ngModelChange",
        "input",
        "click",
        "ngModel",
      ],
      [
        1,
        "d-flex",
        "justify-content-between",
        "align-items-center",
        "px-2",
        "py-1",
        "border-bottom",
        2,
        "display",
        "flex",
      ],
      [
        "id",
        "selectall",
        1,
        "mb-0",
        "d-flex",
        "align-items-center",
        3,
        "click",
      ],
      ["type", "checkbox", 1, "me-2", 3, "change", "checked"],
      [
        "type",
        "button",
        "id",
        "clearbtn",
        1,
        "btn",
        "btn-link",
        "btn-sm",
        "text-danger",
        "p-0",
        "ms-auto",
        3,
        "click",
      ],
      [4, "ngIf", "ngIfElse"],
      ["class", "dropdown-item", 4, "ngFor", "ngForOf", "ngForTrackBy"],
      [1, "dropdown-item"],
      [
        "type",
        "checkbox",
        1,
        "me-2",
        2,
        "border",
        "1px solid black",
        3,
        "change",
        "checked",
      ],
      [3, "click"],
      [1, "dropdown-item", "text-muted", "text-center"],
      ["class", "table-row", 4, "ngIf"],
      ["class", "sub-row", 4, "ngIf"],
      [1, "table-row"],
      [1, "td-left", 3, "ngClass"],
      [
        1,
        "expand-btn",
        2,
        "color",
        "rgb(15 95 184 / var(--tw-text-opacity, 1))",
        3,
        "click",
      ],
      [1, "fa", 3, "ngClass"],
      [1, "td-right"],
      [1, "td-right", 2, "color", "#222fb9"],
      [1, "td-right", 3, "ngStyle"],
      [1, "td-right", 2, "color", "black"],
      [1, "td-rigth"],
      [1, "sub-row"],
      ["colspan", "25", 1, "sub-row-content"],
      [1, "sub-row-inner"],
      [1, "sub-row-title", 2, "text-align", "left"],
      [1, "sub-table-container"],
      [1, "sub-table", "bordered-table"],
      [1, "sub-table-thead", 2, "border-radius", "20px !important"],
      [2, "border-radius", "20px !important"],
      [2, "text-align", "left"],
      [3, "ngClass", 4, "ngFor", "ngForOf", "ngForTrackBy"],
      ["colspan", "20", 1, "td-center"],
      [3, "ngClass"],
      ["style-", "td-right"],
      [1, "td-center"],
      [1, "chip", 3, "ngClass"],
      [
        "type",
        "button",
        1,
        "btn",
        "btn-primary",
        2,
        "margin",
        "0.5rem",
        "float",
        "right",
        3,
        "click",
      ],
      [
        "type",
        "button",
        1,
        "btn",
        "btn-secondary",
        2,
        "margin",
        "0.5rem",
        "float",
        "right",
        3,
        "click",
      ],
      [1, "data-table", "calls-table"],
      [1, "sticky-col-header", "th-left", 2, "width", "18%"],
      [1, "th-right"],
      [1, "call-logs-table"],
      [4, "ngFor", "ngForOf"],
      [
        2,
        "display",
        "flex",
        "justify-content",
        "flex-end",
        "gap",
        "0.5rem",
        "margin-top",
        "0.5rem",
      ],
      ["type", "button", "class", "btn btn-primary", 3, "click", 4, "ngIf"],
      ["type", "button", "class", "btn btn-secondary", 3, "click", 4, "ngIf"],
      [1, "sticky-col", "td-font-medium"],
      [
        2,
        "display",
        "flex",
        "align-items",
        "center",
        "justify-content",
        "center !important",
        3,
        "ngClass",
      ],
      [1, "fa", "fa-phone", 2, "margin-right", "8px", 3, "ngClass"],
      [
        2,
        "margin-left",
        "4px",
        "display",
        "inline-block",
        "width",
        "36px",
        "text-align",
        "left",
        "font-size",
        "12px",
        3,
        "ngClass",
      ],
      [
        2,
        "display",
        "flex",
        "align-items",
        "center",
        "justify-content",
        "center !important",
      ],
      [2, "color", "green", "font-size", "18px", "margin-right", "8px"],
      [
        2,
        "color",
        "green",
        "margin-left",
        "4px",
        "display",
        "inline-block",
        "width",
        "36px",
        "text-align",
        "left",
        "font-size",
        "12px",
      ],
      [
        2,
        "color",
        "green",
        "margin-left",
        "4px",
        "display",
        "inline-block",
        "width",
        "36px",
        "text-align",
        "left",
        "font-size",
        "13px",
      ],
      [3, "ngStyle"],
      [
        2,
        "display",
        "inline-flex",
        "justify-content",
        "center",
        "align-items",
        "center",
        "width",
        "16px",
        "height",
        "16px",
        "border-radius",
        "50%",
        "background-color",
        "red",
        "color",
        "white",
        "font-size",
        "10px",
        "margin-right",
        "8px",
      ],
      [
        2,
        "color",
        "red",
        "margin-left",
        "4px",
        "display",
        "inline-block",
        "width",
        "36px",
        "text-align",
        "left",
        "font-size",
        "12px",
      ],
      ["colspan", "10", 1, "sub-row-content", 2, "padding", "0"],
      [1, "sub-row-inner", 2, "padding-left", "13px !important"],
      [
        1,
        "sub-row-title",
        2,
        "text-align",
        "left !important",
        "font-weight",
        "600",
        "padding",
        "4px 8px",
      ],
      [1, "sub-table"],
      [2, "text-align", "left !important"],
      [2, "text-align", "left !important", "width", "90px !important"],
      [2, "color", "green"],
      [2, "color", "red"],
      [2, "color", "black"],
      ["colspan", "7", 1, "td-center"],
      ["type", "button", 1, "btn", "btn-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-secondary", 3, "click"],
      [
        1,
        "chart-container",
        2,
        "min-height",
        "400px",
        "padding",
        "20px",
        "background",
        "white",
        "border-radius",
        "10px",
      ],
      ["id", "chart"],
      [
        3,
        "series",
        "chart",
        "xaxis",
        "plotOptions",
        "stroke",
        "dataLabels",
        "title",
      ],
    ],
    template: function (e, t) {
      e & 1 && M(0, cg, 291, 127, "ng-container", 1),
        e & 2 && g("ngIf", !t.selectedDealer && !t.selectedSM);
    },
    dependencies: [
      De,
      ft,
      gt,
      Be,
      Dn,
      Rd,
      Ad,
      Xo,
      Ge,
      At,
      Ft,
      Mt,
      qt,
      It,
      Wt,
      _a,
      ga,
      fa,
    ],
    styles: [
      '.wrapper[_ngcontent-%COMP%]{display:flex}input[type=password][_ngcontent-%COMP%]::-ms-reveal, input[type=password][_ngcontent-%COMP%]::-ms-clear{display:none!important}input[type=password][_ngcontent-%COMP%]::-webkit-credentials-auto-fill-button, input[type=password][_ngcontent-%COMP%]::-webkit-password-toggle-button{display:none!important}.sticky-header.with-zindex[_ngcontent-%COMP%]{z-index:2000!important}.sticky-header.no-zindex[_ngcontent-%COMP%]{z-index:auto}.sticky-header[_ngcontent-%COMP%]{position:relative;width:100%;z-index:9999;background:#fff;padding:1rem;transition:all .3s ease;border-radius:7px}.sticky-header.fixed[_ngcontent-%COMP%]{position:fixed;top:0;left:0;right:0;width:100%;box-shadow:0 2px 5px #0000001a}.table-responsive[_ngcontent-%COMP%]{overflow-x:auto}#refresh[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], #refresh[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus, #refresh[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active, #refresh[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus-visible{outline:none!important;box-shadow:none!important;border:1px solid #ccc!important}#refresh[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none;box-shadow:none}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}.content-body[_ngcontent-%COMP%]{overflow-x:auto;padding:20px;flex-grow:1}.card-header[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;align-items:center}.card-header[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%]{margin-left:10px}.card[_ngcontent-%COMP%]{border-radius:6px!important}.custom-btn[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;border:none;padding:8px 16px;font-size:14px;border-radius:4px;transition:background-color .3s,color .3s}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#007bff;color:#fff}#dataTable[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border:none!important}#doughnutChart[_ngcontent-%COMP%]{max-width:100%;max-height:100%}.progress-circle[_ngcontent-%COMP%]{--size: 50px;--progress: 70%;--color: #28a745;width:var(--size);height:var(--size);border-radius:50%;background:conic-gradient(var(--color) var(--progress),#e6e6e6 0);display:flex;align-items:center;justify-content:center;position:relative}.custom-btn[_ngcontent-%COMP%]{border:none;background-color:#f0f0f0;padding:8px 20px;border-radius:20px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#dcdcdc}.selected-btn[_ngcontent-%COMP%]{background-color:#1e88e5!important;color:#fff!important}.circle-text[_ngcontent-%COMP%]{font-weight:700;color:#333}.position-absolute[_ngcontent-%COMP%]{position:absolute}.circular-chart[_ngcontent-%COMP%]{transition:transform .3s ease}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.5rem;font-weight:700;color:#4caf50;opacity:1}.circular-chart[_ngcontent-%COMP%]   .circle-fill[_ngcontent-%COMP%]{transition:stroke-dasharray 1s ease-out}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.2rem;font-weight:700}.tooltip-content[_ngcontent-%COMP%]{position:absolute;bottom:110%;left:50%;transform:translate(-50%);background-color:#333;color:#fff;padding:6px 10px;border-radius:5px;white-space:nowrap;font-size:13px;z-index:10;opacity:0;pointer-events:none;transition:opacity .3s ease}.tooltip-content[_ngcontent-%COMP%]:after{content:"";position:absolute;top:100%;left:50%;transform:translate(-50%);border-width:5px;border-style:solid;border-color:#333 transparent transparent transparent}.tooltip-container[_ngcontent-%COMP%]:hover   .tooltip-content[_ngcontent-%COMP%]{opacity:1}.no-scrollbar[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch;scrollbar-width:none}.no-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}@media (min-width: 992px) and (max-width: 1250px){.tooltip-container[_ngcontent-%COMP%]{right:15px!important;width:83px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:80px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   .tooltip-content[_ngcontent-%COMP%]{font-size:.85rem}#num[_ngcontent-%COMP%]{right:-53px}.tooltip-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{font-size:1.1rem;padding:10px!important}}@media screen and (width: 1024px) and (height: 1366px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:0!important}}.tooltip-container[_ngcontent-%COMP%]{top:18%}@media screen and (min-width: 1024px) and (max-width: 1366px){#first[_ngcontent-%COMP%]{top:10px!important}#sec[_ngcontent-%COMP%], #third[_ngcontent-%COMP%]{top:49%!important}}.custom-btn[_ngcontent-%COMP%]{background:transparent;border:none;padding:6px 16px;font-weight:500;cursor:pointer;transition:all .2s ease-in-out}.custom-btn[_ngcontent-%COMP%]:hover{color:#222fb9}.selected-btn[_ngcontent-%COMP%]{background:#222fb9;color:#fff;border-radius:6px}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:6px;margin-top:20px;font-family:Poppins,sans-serif}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;background-color:#fff;border:1px solid #d4d4d8;border-radius:6px;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 3px #0000000d}.back-arrow[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:24px;cursor:pointer;color:#333;transition:transform .2s ease}.back-arrow[_ngcontent-%COMP%]:hover{transform:scale(1.1);color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:600;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{background-color:#f1f1f1;color:#ccc;border-color:#e5e5e5;cursor:not-allowed}.sm-card[_ngcontent-%COMP%]{background:#fff;border-radius:12px;box-shadow:0 2px 8px #00000014;padding:20px 16px;text-align:center;font-family:Poppins,sans-serif;transition:transform .2s ease,box-shadow .2s ease}.sm-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 4px 12px #0000001f}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:none!important;border-bottom:1px solid #ccc!important}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto;font-family:Poppins,sans-serif}.header[_ngcontent-%COMP%]{background-color:#fff;color:#000;padding:1rem;display:flex;justify-content:space-between;align-items:center;margin-top:50px!important}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:1rem}.nav-button[_ngcontent-%COMP%]{background:none;border:none;color:#fff;padding:5px 11px!important;border-radius:4px;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#fff;color:#06c;font-weight:500}.nav-button[_ngcontent-%COMP%]:hover{background-color:#fff;color:#06c}.nav-button[_ngcontent-%COMP%]{color:#000}.nav-button[_ngcontent-%COMP%]:hover{background-color:#00f;color:#fff}.metrics-container[_ngcontent-%COMP%]{background-color:#e6e6e6;padding:1.5rem;border-radius:8px;box-shadow:0 2px 4px #0000000d;margin-bottom:1.5rem;position:relative}.dashboard-section[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;width:100%;max-width:100%}@media (max-width: 768px){.apexcharts-title-text[_ngcontent-%COMP%]{text-anchor:start!important;x:0!important}}.card[_ngcontent-%COMP%]{width:100%;box-shadow:0 1px 5px #0000001a;border-radius:8px;padding:16px;background:#fff}.metrics-grid[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:20px;align-items:flex-start}.filters-container[_ngcontent-%COMP%]{width:290px;min-width:200px;flex-shrink:0;margin-left:30px}.filter-section[_ngcontent-%COMP%]{background-color:#fff}.dealer-block[_ngcontent-%COMP%]{background:transparent!important;margin-bottom:10px}.dashboard-container[_ngcontent-%COMP%]{background:transparent!important}.metric-box[_ngcontent-%COMP%]{background-color:#fff;padding:1rem;border-radius:15px;text-align:center;box-shadow:0 1px 3px #0000001a;height:130px;display:flex;width:150px;flex-direction:column;justify-content:center;align-items:center}.metric-value[_ngcontent-%COMP%]{font-size:2rem;font-weight:700;color:#06c;margin-bottom:.5rem}.metric-label[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.filters-panel[_ngcontent-%COMP%]{background-color:#e5e5e5;padding:.75rem;border-radius:8px}.filters-title[_ngcontent-%COMP%]{text-align:center;font-size:.9rem;font-weight:600}.time-filters[_ngcontent-%COMP%]{display:flex;margin-bottom:.5rem}.select-container[_ngcontent-%COMP%]{position:relative}.sm-select[_ngcontent-%COMP%]{width:100%;padding:.35rem .75rem;border:1px solid #ccc;border-radius:4px;appearance:none;font-size:.85rem}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:.6rem;color:#666}.performance-panels[_ngcontent-%COMP%]{gap:1.5rem}.person-info[_ngcontent-%COMP%]{background-color:#f9f9f9;padding:14px;border-radius:6px;box-shadow:0 2px 5px #0000001a;width:fit-content;margin-bottom:16px}.person-n[_ngcontent-%COMP%]   .panel-title[_ngcontent-%COMP%]{text-align:center;font-size:1.8rem;font-weight:500;margin-bottom:1rem;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{margin-top:-190px;display:flex;align-items:center;justify-content:center;color:#999}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:3.5rem;box-sizing:border-box}@media (max-width: 1024px) and (min-width: 768px){.performance-panels[_ngcontent-%COMP%]{display:block!important;gap:0!important}}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{pointer-events:none;display:none;position:fixed;left:-100%}.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)!important}}.performance-panel[_ngcontent-%COMP%]{flex:1;background-color:#e6e6e6}.avatar[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:50%;background-color:#e0e0e0;display:flex;align-items:center;justify-content:center;font-size:24px;color:#888}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;margin:0;padding:0}.dashboard-container[_ngcontent-%COMP%]{width:100%;margin:0 auto;position:relative}.header[_ngcontent-%COMP%]{background-color:#f5f5f5;padding:15px;top:0;width:100%;max-width:1540px;z-index:100;box-shadow:0 2px 5px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#eee;cursor:pointer;border-radius:4px}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{vertical-align:middle}.content-section[_ngcontent-%COMP%]{margin-top:20px}.nav-button[_ngcontent-%COMP%]:hover{background-color:gray}.main-content[_ngcontent-%COMP%]{background-color:#f9f9f9}[_nghost-%COMP%]     .header{position:static!important}[_nghost-%COMP%]     .header{width:100%!important;max-width:100%!important;transition:width .3s ease,margin-left .3s ease!important;z-index:auto!important}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:24px;font-weight:700;color:#fff}.header[_ngcontent-%COMP%]{transition:width .3s ease!important;transition:width .3s ease,margin-left .3s ease!important}.metric-label[_ngcontent-%COMP%]{font-size:14px;color:#666;margin-top:5px}.filters-container[_ngcontent-%COMP%]{grid-column:1 / -1;margin-top:15px}.filters-panel[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a}.filters-title[_ngcontent-%COMP%]{font-weight:700}.time-filters[_ngcontent-%COMP%]{display:flex;gap:0px;margin-bottom:10px}.filter-button[_ngcontent-%COMP%]{padding:5px 10px;border:none;background-color:#fff;border-radius:4px;cursor:pointer}.filter-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;border-color:#222fb9}.select-container[_ngcontent-%COMP%]{position:relative;width:200px}.sm-select[_ngcontent-%COMP%]{width:100%;padding:8px;border-radius:4px;border:1px solid #ddd;appearance:none}.performance-panels[_ngcontent-%COMP%]{margin-top:20px}.performance-panel[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;box-shadow:0 2px 5px #0000001a;padding:15px}.panel-title[_ngcontent-%COMP%]{font-size:30px!important;margin-top:0;margin-bottom:15px;padding-bottom:10px;font-weight:500;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{min-height:300px}table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.content-section[_ngcontent-%COMP%]{display:none}.content-section.active[_ngcontent-%COMP%]{display:block}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#f0f0f0;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-of-type(odd){--bs-table-accent-bg: transparent !important}table.table-striped[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd){background-color:red!important}.team-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;background-color:#fff;border-radius:10px;padding:15px 25px;gap:15px}.team-name[_ngcontent-%COMP%]{font-size:17px;color:#000;white-space:nowrap;font-weight:500;font-family:Poppins,sans-serif}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:8px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:4px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.metrics-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;justify-content:flex-end;flex:1}.metric-card[_ngcontent-%COMP%]{display:flex;align-items:center;padding:8px 12px;border-radius:22px;font-size:.85em;font-weight:600;color:#333;text-align:center;box-shadow:0 0 12px #0000001a;flex-shrink:0;height:50px}.metric-card[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:6px;font-size:1em}.metric-value[_ngcontent-%COMP%]{font-weight:700;margin-left:10px}@media (max-width: 768px){.team-container[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.metrics-wrapper[_ngcontent-%COMP%]{justify-content:flex-start}}.back-button[_ngcontent-%COMP%]{margin-right:15px;cursor:pointer;color:#fff;font-size:20px}.nav-button[_ngcontent-%COMP%]{background-color:#fff;color:#000;border:none;border-radius:4px;padding:5px 15px;margin-right:10px;font-weight:700;cursor:pointer}.nav-tab[_ngcontent-%COMP%]{color:#fff;margin-left:20px;font-size:16px}.container[_ngcontent-%COMP%]{margin:0;padding:20px 0}.card[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:20px;margin-bottom:20px;box-shadow:0 1px 3px #0000001a}.card-title[_ngcontent-%COMP%]{font-size:18px;font-weight:700;margin-bottom:15px}.profiles[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;gap:25px;margin-bottom:20px;flex-wrap:wrap}.profile[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:70px}.avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#e0e0e0;margin-bottom:8px}.name[_ngcontent-%COMP%]{font-size:12px;text-align:center;line-height:1.2}.actions[_ngcontent-%COMP%]{margin-top:20px}.action-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:10px}.person-info[_ngcontent-%COMP%]{display:flex;flex-direction:column}.person-name[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px}.person-role[_ngcontent-%COMP%]{color:#666;font-size:14px}.action-button[_ngcontent-%COMP%]{background-color:#1e88e5;color:#fff;border:none;border-radius:15px;padding:5px 15px;cursor:pointer}.test-drive[_ngcontent-%COMP%], .follow-up[_ngcontent-%COMP%]{background-color:#1e88e5}.show-more[_ngcontent-%COMP%]{text-align:center;margin-top:10px;color:#333;font-size:14px}.metrics-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;margin-left:-10px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:15px;min-width:120px;flex:1;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:20px;font-weight:700;color:#fff;margin-bottom:5px}.metric-label[_ngcontent-%COMP%]{color:#666;font-size:14px}.filters-row[_ngcontent-%COMP%]{display:flex;background-color:#fff;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a;align-items:center}.filters-title[_ngcontent-%COMP%]{font-weight:700;padding-top:10px}.time-filters[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-button[_ngcontent-%COMP%]{padding:6px 12px;cursor:pointer;font-size:14px}.select-container[_ngcontent-%COMP%]{position:relative;margin-left:auto}.sm-select[_ngcontent-%COMP%]{padding:6px 30px 6px 10px;border:1px solid #ddd;border-radius:4px;appearance:none;background-color:#fff;font-size:14px;cursor:pointer}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:12px}select[_ngcontent-%COMP%]{position:relative;z-index:1000}.dropdown-row[_ngcontent-%COMP%]{margin-bottom:150px}.modal[_ngcontent-%COMP%]{display:flex;position:fixed;z-index:1000;left:0;top:0;width:100%;height:100%;background-color:#00000080;justify-content:center;align-items:center}.modal-content[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:6px;max-width:400px;width:90%;box-shadow:0 5px 15px #0000004d;position:relative}.close[_ngcontent-%COMP%]{position:absolute;right:12px;top:8px;font-size:24px;font-weight:700;cursor:pointer}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0}[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}[_ngcontent-%COMP%]::-webkit-scrollbar-button:single-button{display:none;width:0;height:0}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0;width:0}.selected-user[_ngcontent-%COMP%]{background-color:#cce5ff;border:2px solid #3399ff;border-radius:8px;padding:5px;width:90px}.container-fluid[_ngcontent-%COMP%]{width:100%;padding:0 20px;margin:0 auto;box-sizing:border-box}@media only screen and (max-width: 600px){.metrics-row[_ngcontent-%COMP%]{width:100%!important;flex-direction:column!important;gap:10px!important}.metric-box[_ngcontent-%COMP%]{width:100%!important;box-sizing:border-box}.metric-box[_ngcontent-%COMP%]:last-child{width:100%!important}}@media (max-width: 600px){.performance-panels[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;margin-left:0!important;width:100%!important}.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%]{flex-direction:column!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{min-width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   h2.panel-title[_ngcontent-%COMP%]{text-align:center}}.table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{margin-top:20px!important;padding:10px!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px!important;font-size:14px}}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;padding:0 10px;margin-left:0!important;height:200px!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%!important;margin-top:20px!important;padding:0!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px 4px!important;font-size:14px}.performance-panel[_ngcontent-%COMP%]   .table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media screen and (max-width: 767px){.header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{box-sizing:border-box;max-width:100vw;overflow-x:hidden;padding-left:10px;padding-right:10px}.nav-buttons[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:10px;align-items:stretch;width:100%}.nav-button[_ngcontent-%COMP%]{width:100%;font-size:1rem;box-sizing:border-box}}  table.highlight-alt-rows tbody tr:nth-child(2n){background-color:#f3f9ff!important}  table.highlight-alt-rows tbody tr:nth-child(2n) td{background-color:#f3f9ff!important}  .highlight-alt-rows tbody tr:nth-child(1){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(1) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5) td{background-color:transparent!important}@media (max-width: 768px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important;margin-bottom:20px!important}.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;word-wrap:break-word;white-space:normal;margin-top:5px}.container[_ngcontent-%COMP%]{max-width:100%;padding-left:15px;padding-right:15px;margin-left:auto;margin-right:auto}}@media (max-width: 400px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, .profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{grid-template-columns:repeat(2,1fr)!important}}.user-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(15,1fr);gap:30px;margin-bottom:20px}@media (max-width: 768px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;margin-top:5px;word-wrap:break-word;white-space:normal}}@media (max-width: 400px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)!important}}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .dashboard-content[_ngcontent-%COMP%]{transition:margin-left .3s ease}.sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-container[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .header2[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-content[_ngcontent-%COMP%]{margin-left:7rem}.header2[_ngcontent-%COMP%]{display:flex;align-items:center;background:#fff;padding:1rem;box-shadow:0 2px 4px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f5f5f5;padding:4px;border-radius:6px}.nav-button[_ngcontent-%COMP%]{background:#fff;border:none;font-weight:700;padding:8px 16px;cursor:pointer;border-radius:4px}@media (max-width: 768px){.nav-buttons[_ngcontent-%COMP%]{align-items:stretch}.nav-button[_ngcontent-%COMP%]{width:100%}}.filter-btn[_ngcontent-%COMP%]{padding:5px 12px;font-size:14px;border-radius:4px;border:1px solid #ccc;background-color:#fff;transition:all .3s ease;cursor:pointer;color:#333}.filter-btn[_ngcontent-%COMP%]:hover{background-color:#f2f2f2}.active-filter-today[_ngcontent-%COMP%], .active-filter-upcoming[_ngcontent-%COMP%]{background:linear-gradient(#222fb9);color:#fff}.avatar-color-1[_ngcontent-%COMP%]{background-color:#ffd3b6}.avatar-color-2[_ngcontent-%COMP%]{background-color:#caffbf}.avatar-color-3[_ngcontent-%COMP%]{background-color:#9bf6ff}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:9999!important}.header2-right[_ngcontent-%COMP%]   .header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{padding:15px 0;min-width:12.5rem;z-index:9999;position:absolute}.nav-buttons[_ngcontent-%COMP%]{z-index:1000}.header2-profile[_ngcontent-%COMP%]{position:relative;z-index:9999}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:99999!important;top:100%;right:0;display:block}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.user-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin:8px;width:80px}.user-avatar[_ngcontent-%COMP%]{width:50px;height:50px;background-color:#f0f0f0;color:#126893;border-radius:50%;display:flex;align-items:center;justify-content:center;font-weight:700;font-size:18px;box-shadow:0 2px 6px #0000001a}.user-name[_ngcontent-%COMP%]{font-size:12px;text-align:center;margin-top:4px;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{background-color:#fff;border-radius:12px;padding:16px;box-shadow:0 4px 10px #00000014;text-align:center;margin-bottom:12px}.user-avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#c4fefb;color:#26eee4;font-weight:700;display:flex;align-items:center;justify-content:center;margin:0 auto 8px;font-size:25px}.user-name[_ngcontent-%COMP%]{font-size:14px;font-weight:500;color:#333}.header-box[_ngcontent-%COMP%]{background-color:#f4f6fb;padding:6px 10px;border-radius:8px;display:inline-flex;align-items:center;gap:6px;font-weight:600;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:max-content;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse;outline:none!important}.header-box1[_ngcontent-%COMP%], .header-box2[_ngcontent-%COMP%], .header-box3[_ngcontent-%COMP%], .header-box4[_ngcontent-%COMP%], .header-box5[_ngcontent-%COMP%], .header-box6[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:6px;padding:6px 8px;border-radius:12px;font-weight:400;color:#000;text-align:center;font-family:Poppins,sans-serif;white-space:normal}.pagination-container[_ngcontent-%COMP%]{margin-top:20px;display:flex;justify-content:center;align-items:center;gap:6px;flex-wrap:wrap}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ccc;background-color:#fff;color:#333;cursor:pointer;border-radius:6px;font-size:14px;transition:all .2s ease-in-out}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#222fb9;color:#fff;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.pagination-container[_ngcontent-%COMP%]   button.active-page[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:700;border-color:#222fb9}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:10px;border:none}.header-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:wrap;width:100%;margin-bottom:15px}.panel-title[_ngcontent-%COMP%]{font-size:25px;color:#313131;font-family:Poppins,sans-serif;font-weight:600;border-radius:20px;margin:0}.panel-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#000;font-weight:400;font-size:16px;margin:0}.dealer-select[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;border-radius:6px;border:1px solid #ccc;height:fit-content;margin-top:5px}.dropdown-wrapper[_ngcontent-%COMP%]{width:250px;border:1px solid #ccc;border-radius:6px;position:relative;background:#fff;cursor:pointer}.selected-value[_ngcontent-%COMP%]{padding:10px;display:flex;justify-content:space-between;align-items:center}.arrow[_ngcontent-%COMP%]{font-size:12px}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;width:110%;top:100%;left:4px;right:0;border:1px solid #ccc;z-index:1000;border-radius:10px;box-shadow:0 2px 6px #00000026;max-height:240px;overflow-y:auto;padding:0;margin:0;max-width:300px}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:none;padding:10px 12px;transition:background .2s;cursor:pointer}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#f0f0f0}.user-dropdown[_ngcontent-%COMP%]{width:100%;max-width:300px;padding:10px 16px;border:none;border-radius:20px;background-color:#ebedf0;color:#333;font-size:16px;appearance:none;outline:none;cursor:pointer;box-shadow:0 2px 6px #0000001a;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{padding:8px;font-size:14px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-height:200px}  .custom-ng-select .ng-dropdown-panel{max-height:200px!important;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]{max-height:200px;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{white-space:nowrap}.radio-circle[_ngcontent-%COMP%]{width:16px;height:16px;border-radius:50%;border:2px solid currentColor;display:flex;align-items:center;justify-content:center}.radio-circle-inner[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:currentColor}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(1)   th[_ngcontent-%COMP%]{background-color:#fff!important}.table-wrapper[_ngcontent-%COMP%]{padding:20px}table[_ngcontent-%COMP%]{width:100%;border-collapse:separate;border-spacing:0 12px}th[_ngcontent-%COMP%]{color:#000}td[_ngcontent-%COMP%]{background-color:#f9f9fb;text-align:center;font-weight:500;border:none;padding:30px;transition:all .3s ease}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child{border-top-left-radius:12px;border-bottom-left-radius:12px}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child{border-top-right-radius:12px;border-bottom-right-radius:12px}.badge[_ngcontent-%COMP%]{padding:6px 14px;border-radius:8px;font-size:14px;font-weight:500;display:inline-block}.badge-upcoming[_ngcontent-%COMP%], .badge-enquiry[_ngcontent-%COMP%]{background-color:#d9f2e7;color:#177a47}.badge-coldcalls[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.badge-completed[_ngcontent-%COMP%]{background-color:#fef3c7;color:#b45309}.badge-overdue[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.nav-button[_ngcontent-%COMP%]{font-family:Poppins,sans-serif}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#1f2937}.filter-wrapper[_ngcontent-%COMP%]{background-color:#fff;border-radius:16px;box-shadow:0 4px 12px #0000000d;padding:15px 20px;width:fit-content;margin:20px}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f2f2f2;border-radius:50px;padding:5px 10px}.filter-btn[_ngcontent-%COMP%]{border:none;background:transparent;padding:6px 14px;border-radius:50px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.filter-btn.active[_ngcontent-%COMP%]{background-color:#fff;color:#2b45c7;border:2px solid #2b45c7}.filter-wrapper[_ngcontent-%COMP%]{margin-top:20px;background:#fff;padding:10px;border-radius:8px;width:fit-content}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-btn[_ngcontent-%COMP%]{padding:6px 10px;border:none;background:#f0f0f0;border-radius:4px;cursor:pointer}.filter-btn.active[_ngcontent-%COMP%]{background-color:#126893;color:#fff}.no-bottom-border[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:none!important}.back-button[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:35px;color:#333;cursor:pointer;padding:4px 10px;transition:transform .2s ease,color .2s ease}.back-button[_ngcontent-%COMP%]:hover{transform:translate(-3px);color:#126893}.nav-button[_ngcontent-%COMP%]{background-color:transparent;color:#000;border:none;padding:10px 16px;font-weight:500;border-radius:6px;cursor:pointer;transition:background-color .2s ease-in-out}.nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb926;color:#000}.nav-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:100%;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}.active-filter[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}.pill-button[_ngcontent-%COMP%]{padding:6px 16px;border:none;border-radius:999px;font-family:Poppins,sans-serif;background-color:transparent;color:#000;font-weight:500;cursor:pointer;transition:background-color .3s ease}.pill-active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}@media (min-width: 768px) and (max-width: 1080px){.dashboard-container[_ngcontent-%COMP%]{padding:20px}}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:6px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f1f1;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#999}.user-card[_ngcontent-%COMP%]{flex:0 0 auto;min-width:80px;cursor:pointer}.user-row[_ngcontent-%COMP%]{position:relative}.user-row[_ngcontent-%COMP%]:after{content:"";position:absolute;right:0;top:0;bottom:0;width:20px;background:linear-gradient(to right,transparent,rgba(255,255,255,.8));pointer-events:none;z-index:1}.dashboard-container[_ngcontent-%COMP%]{padding:10px}@media (max-width: 991.98px){.performance-panels[_ngcontent-%COMP%]{flex-direction:column}}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{padding:10px!important;margin:0 auto}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:#fff;font-size:1.2rem;border:none!important;font-weight:700;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:#fff;box-shadow:0 4px 6px #0000001a}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;font-family:Poppins,sans-serif;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4;font-family:Poppins,sans-serif}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#cfe8fc,#a0cfff);font-family:Poppins,sans-serif;font-size:1rem;font-weight:500;padding-left:60px;color:#000;border-radius:5px;transition:background .3s ease}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:linear-gradient(135deg,#b6dcf8,#87c5f5);cursor:pointer}.accordion-header[_ngcontent-%COMP%]:hover{transform:translateY(-2px)}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;transition:max-height .4s ease;background:#fffffff2;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background:#f8f9fa}*[_ngcontent-%COMP%]{margin:0;padding:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;background:linear-gradient(135deg,#667eea,#764ba2);min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto}.dashboard-header[_ngcontent-%COMP%]{text-align:center;color:#fff;margin-bottom:30px}.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:300;text-shadow:0 2px 4px rgba(0,0,0,.3)}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;padding:15px 20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.pagination-info[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.pagination-controls[_ngcontent-%COMP%]{display:flex;gap:10px}.pagination-btn[_ngcontent-%COMP%]{padding:8px 15px;background:#fff3;border:1px solid rgba(255,255,255,.3);border-radius:5px;color:#fff;cursor:pointer;transition:all .3s ease}.pagination-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:#ffffff4d}.pagination-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.pagination-btn.active[_ngcontent-%COMP%]{background:#fff6;font-weight:700}.accordion[_ngcontent-%COMP%]{margin-bottom:15px;border-radius:12px;overflow:hidden;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);border:1px solid rgba(255,255,255,.2)}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:700;color:#036;border:1px solid #b3d4ff;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{cursor:pointer}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif;box-shadow:0 8px 32px #0000001a}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4}.accordion-header[_ngcontent-%COMP%]{padding:20px 30px;cursor:pointer;display:flex;justify-content:space-between;align-items:center;color:#fff;transition:all .3s ease;position:relative}.accordion-header.active[_ngcontent-%COMP%]{box-shadow:inset 0 2px 4px #0003}.accordion-toggle[_ngcontent-%COMP%]{background:#fff3;border:none;width:30px;height:30px;border-radius:50%;color:#fff;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .3s ease}.accordion-toggle[_ngcontent-%COMP%]:hover{background:#ffffff4d}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;box-shadow:0 8px 32px #0000001a;transition:max-height .4s ease;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px;box-shadow:0 8px 32px #0000001a}.content-wrapper[_ngcontent-%COMP%]{padding:30px}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px 8px;background:#fff3;border-radius:12px;font-size:.75rem;font-weight:500;margin-right:10px}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:15px;margin-bottom:25px;padding:20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.filter-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:5px}.filter-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.85rem;color:#666;font-weight:500}.filter-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .filter-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:8px 12px;border:1px solid #ddd;border-radius:6px;font-size:.9rem;min-width:120px}.table-container[_ngcontent-%COMP%]{overflow-x:auto;border-radius:10px;box-shadow:0 4px 15px #0000001a;margin-bottom:20px}.call-logs-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background:#fff}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .call-logs-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:left;border-bottom:1px solid #eee}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background:linear-gradient(135deg,#f8f9fa,#e9ecef);font-weight:600;color:#495057;font-size:.9rem;position:sticky;top:0}.call-logs-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.status-badge[_ngcontent-%COMP%]{padding:4px 10px;border-radius:20px;font-size:.8rem;font-weight:500}.status-connected[_ngcontent-%COMP%]{background:#d4edda;color:#155724}.status-missed[_ngcontent-%COMP%]{background:#f8d7da;color:#721c24}.status-rejected[_ngcontent-%COMP%]{background:#f1f3f4;color:#5f6368}.status-enquiry[_ngcontent-%COMP%]{background:#e7f3ff;color:#06c}.status-cold[_ngcontent-%COMP%]{background:#fff3cd;color:#856404}.duration[_ngcontent-%COMP%]{font-family:monospace;font-weight:500}.table-pagination[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:10px;padding:15px;background:#fff;border-top:1px solid #eee}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ddd;background:#fff;border-radius:4px;cursor:pointer;font-size:.85rem}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.table-pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background:#007bff;color:#fff;border-color:#007bff}@media (max-width: 768px){.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2rem}.accordion-header[_ngcontent-%COMP%]{padding:15px 20px;font-size:.95rem}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%], .accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{padding-left:30px}.content-wrapper[_ngcontent-%COMP%]{padding:20px}.kpi-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(auto-fit,minmax(140px,1fr));gap:12px}.filters[_ngcontent-%COMP%]{flex-direction:column}.pagination-container[_ngcontent-%COMP%]{flex-direction:column;gap:10px;text-align:center}}.loading[_ngcontent-%COMP%]{display:inline-block;width:20px;height:20px;border:2px solid rgba(255,255,255,.3);border-radius:50%;border-top-color:#fff;animation:_ngcontent-%COMP%_spin 1s ease-in-out infinite}@keyframes _ngcontent-%COMP%_spin{to{transform:rotate(360deg)}}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(7,1fr);gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease;min-width:0}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px;background-color:#fff;border:2px solid #222fb9;border-radius:15px;font-size:12px;font-weight:600;color:#222fb9}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-3px)}.kpi-value[_ngcontent-%COMP%]{font-size:1.8rem;font-weight:700;margin-bottom:5px}.kpi-label[_ngcontent-%COMP%]{font-size:.85rem;opacity:.9}@media (max-width: 1366px){.kpi-card[_ngcontent-%COMP%]{padding:12px 8px}.kpi-value[_ngcontent-%COMP%]{font-size:1.5rem}.kpi-label[_ngcontent-%COMP%]{font-size:.75rem}}@media (max-width: 1024px){.kpi-grid[_ngcontent-%COMP%]{gap:8px}.kpi-card[_ngcontent-%COMP%]{padding:10px 6px}.kpi-value[_ngcontent-%COMP%]{font-size:1.3rem}.kpi-label[_ngcontent-%COMP%]{font-size:.7rem}}.shadow-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;margin-top:10px;background-color:#fff;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .shadow-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f4f4f4;font-weight:700}.dealer-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden;background:linear-gradient(135deg,#f8f9fa,#e9ecef);margin-top:15px;font-family:Arial,sans-serif}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .dealer-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:center}.dealer-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{background-color:#f0f0f0}.dealer-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#333}.show-more-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:15px 0}.show-more-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;border:none;padding:8px 20px;border-radius:8px;cursor:pointer;font-size:14px;font-weight:500;transition:background-color .3s ease,transform .2s ease}.show-more-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}.pagination-center[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:8px;margin-top:15px}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #007bff;background-color:#fff;color:#007bff;cursor:pointer;border-radius:4px;transition:all .2s}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#007bff;color:#fff}.pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;font-weight:700}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.expand-row[_ngcontent-%COMP%]{background-color:#f8f9fa}.expanded-content[_ngcontent-%COMP%]{padding:20px;border-left:4px solid #007bff;margin:10px;background-color:#fff;border-radius:6px;box-shadow:0 2px 4px #0000000d}.expanded-content[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin:0}.expanded-content[_ngcontent-%COMP%]   .col-md-4[_ngcontent-%COMP%]{margin-bottom:15px}.expanded-content[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:#495057;font-size:13px}.orders-table-container[_ngcontent-%COMP%]{border-radius:8px;overflow:hidden;margin:20px 0;max-width:100%}.table[_ngcontent-%COMP%]{margin-bottom:0;font-size:14px}.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;font-weight:600;font-size:12px;text-transform:uppercase;letter-spacing:.5px;border-bottom:1px solid #dee2e6;padding:16px 12px;white-space:nowrap}.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:16px 12px;vertical-align:middle}.order-id[_ngcontent-%COMP%]{font-weight:600;color:#495057}.created-time[_ngcontent-%COMP%]{color:#6c757d}.customer-name[_ngcontent-%COMP%]{font-weight:500;color:#212529}.total-amount[_ngcontent-%COMP%], .profit-amount[_ngcontent-%COMP%]{font-weight:600;color:#212529}.status-badge[_ngcontent-%COMP%]{padding:6px 12px;border-radius:20px;font-size:12px;font-weight:500;text-transform:capitalize}.status-pending[_ngcontent-%COMP%]{background-color:#fff3cd;color:#856404}.status-confirmed[_ngcontent-%COMP%]{background-color:#cce5ff;color:#06c}.status-shipped[_ngcontent-%COMP%]{background-color:#d4edda;color:#155724}.status-rejected[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24}.btn-plus[_ngcontent-%COMP%]{background:none;border:none;color:#6c757d;font-size:16px;cursor:pointer;padding:8px;border-radius:50%;transition:all .2s ease;display:flex;align-items:center;justify-content:center;width:32px;height:32px}.btn-plus[_ngcontent-%COMP%]:hover{background-color:#e9ecef;color:#495057}.btn-plus[_ngcontent-%COMP%]:focus{outline:2px solid #007bff;outline-offset:2px}.action-cell[_ngcontent-%COMP%]{text-align:center;width:60px}.table-hover[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{transition:background-color .2s ease}.clickable-row[_ngcontent-%COMP%]:hover{transform:translateY(-1px);box-shadow:0 2px 4px #0000001a;transition:all .2s ease}.back-arrow[_ngcontent-%COMP%]{display:inline-block;transition:transform .2s ease}.back-arrow[_ngcontent-%COMP%]:hover{transform:translate(-3px)}.time-filter[_ngcontent-%COMP%]{gap:10px}.time-btn[_ngcontent-%COMP%]{border:1px solid #222fb9;background:#fff;color:#222fb9;font-weight:500;font-size:14px;padding:8px 18px;border-radius:20px;cursor:pointer;transition:all .2s ease-in-out}.time-btn[_ngcontent-%COMP%]:hover{background:#f1f5ff}.time-filter-container[_ngcontent-%COMP%]{padding:8px 12px;display:inline-block;border-radius:6px}.time-filter-container[_ngcontent-%COMP%]   .time-btn[_ngcontent-%COMP%]{border:none!important;border-radius:0!important;background:none!important;padding:0 6px;font-size:20px;cursor:pointer}.time-filter-container[_ngcontent-%COMP%]   .time-btn.active[_ngcontent-%COMP%]{font-weight:900;color:#222fb9}.time-filter-container[_ngcontent-%COMP%]   .separator[_ngcontent-%COMP%]{margin:0 6px;color:#555;-webkit-user-select:none;user-select:none}.custom-table[_ngcontent-%COMP%]{border-radius:15px;border-collapse:separate;overflow:hidden;background-color:#fff;box-shadow:0 4px 12px #0000001a}.custom-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:8px 12px;color:#555}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{cursor:pointer}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:transparent!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd){background-color:transparent!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:transparent!important}.custom-table[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f5f9!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f5ff}.custom-table[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#fff!important;border-bottom:1px solid #dee2e6}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd){background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f8f9fa!important}.time-filter-container[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;padding:8px 12px;border-radius:8px;margin-top:10px}.time-dropdown[_ngcontent-%COMP%]{min-width:200px;padding:6px 10px;font-size:14px;border-radius:6px;margin-left:8px;border:1px solid #ccc;background:#f9f9f9;cursor:pointer}.time-dropdown[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff;box-shadow:0 0 0 2px #007bff33}.custom-inputs[_ngcontent-%COMP%]{display:flex;gap:8px;align-items:center}.custom-date[_ngcontent-%COMP%]{padding:5px 10px;border-radius:6px;border:1px solid #ccc;font-size:14px}.custom-date[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff;box-shadow:0 0 0 2px #007bff33}.apply-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:5px 12px;border:none;border-radius:6px;cursor:pointer;font-size:14px}.apply-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3}.reset-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:5px 12px;border:none;border-radius:6px;cursor:pointer;font-size:14px}.reset-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3}.custom-inputs.applied[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-color:#222fb9;box-shadow:0 0 4px #222fb980}.table-primary[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-size:18px!important}.stats-container[_ngcontent-%COMP%]{margin-top:20px;gap:20px}.stats-card[_ngcontent-%COMP%]{background:#fff;padding:20px;border-radius:12px;box-shadow:0 2px 6px #00000014;text-align:left;width:220px;min-height:120px;flex:0 0 auto}.stats-card[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{font-size:14px;color:#666;margin-bottom:8px}.stats-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:28px;font-weight:700;color:#14213d;margin-bottom:6px}.stats-card[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{font-size:13px;color:#7d7d7d}.dashboard-header[_ngcontent-%COMP%]{position:sticky;top:0;z-index:20;background:#ffffffe6;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);border-bottom:1px solid #e2e8f0}.header-container[_ngcontent-%COMP%]{max-width:80rem;margin:0 auto;padding:0 1rem}@media (min-width: 640px){.header-container[_ngcontent-%COMP%]{padding:0 1.5rem}}@media (min-width: 1024px){.header-container[_ngcontent-%COMP%]{padding:0 2rem}}.header-content[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:1rem;padding:1rem 0}.main-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700;letter-spacing:-.025em;color:#0f172a;margin:0}.subtitle[_ngcontent-%COMP%]{color:#64748b;font-size:.875rem;margin:0}.header-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.main-content[_ngcontent-%COMP%]{margin:0 auto;display:flex;flex-direction:column;gap:1.5rem}.filter-section[_ngcontent-%COMP%]{background:#fff;border-radius:1rem;box-shadow:0 1px 3px #0000001a,0 1px 2px #0000000f;border:1px solid #e2e8f0;padding:1rem}@media (min-width: 640px){.filter-section[_ngcontent-%COMP%]{padding:1.5rem}}.filter-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem}@media (min-width: 768px){.filter-container[_ngcontent-%COMP%]{flex-direction:row;align-items:end;justify-content:space-between}}.filter-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;gap:1rem;width:100%}@media (min-width: 640px){.filter-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)}}.form-group[_ngcontent-%COMP%]{display:flex;flex-direction:column}.form-label[_ngcontent-%COMP%]{display:block;font-size:.875rem;font-weight:500;color:#475569;margin-bottom:.25rem}.form-select[_ngcontent-%COMP%], .form-input[_ngcontent-%COMP%]{width:100%;border-radius:.75rem;padding:.5rem .75rem;font-size:.875rem;background:#fff}.form-select[_ngcontent-%COMP%]:focus, .form-input[_ngcontent-%COMP%]:focus{outline:none}.filter-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:.5rem;padding:.5rem 1rem;border-radius:.75rem;font-size:.875rem;font-weight:600;border:1px solid transparent;cursor:pointer;transition:all .15s ease}.btn-primary[_ngcontent-%COMP%]{background:#2563eb;color:#fff}.btn-primary[_ngcontent-%COMP%]:hover{background:#1d4ed8}.btn-secondary[_ngcontent-%COMP%]{border-color:#e2e8f0;background:#fff;color:#374151}.btn-secondary[_ngcontent-%COMP%]:hover{background:#f8fafc}.btn-small[_ngcontent-%COMP%]{padding:.375rem .75rem;font-size:.75rem}.kpi-section[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(6,1fr);gap:12px}.kpi-card[_ngcontent-%COMP%]{background:#fff;border-radius:8px;padding:12px;box-shadow:0 2px 4px #0000001a}.kpi-section[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(2,1fr);gap:1rem}@media (min-width: 768px){.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(6,1fr)}}.kpi-card[_ngcontent-%COMP%]{border-radius:1rem;border:1px solid #e2e8f0;background:#fff;padding:1rem}.kpi-label[_ngcontent-%COMP%]{color:#64748b;font-size:.75rem}.kpi-value-container[_ngcontent-%COMP%]{margin-top:.25rem;display:flex;align-items:baseline;gap:.5rem}.kpi-value[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700}.kpi-secondary[_ngcontent-%COMP%]{font-size:.75rem;color:#64748b}.kpi-highlight[_ngcontent-%COMP%]{font-weight:600;color:#374151}.table-section[_ngcontent-%COMP%]{background:#fff;border-radius:1rem;box-shadow:0 1px 3px #0000001a,0 1px 2px #0000000f;border:1px solid #e2e8f0}.table-header[_ngcontent-%COMP%]{padding:1rem 1.5rem;border-bottom:1px solid #e2e8f0;display:flex;align-items:center;justify-content:space-between}.table-title[_ngcontent-%COMP%]{font-size:1.125rem;font-weight:600;margin:0}.table-subtitle[_ngcontent-%COMP%]{color:#64748b;font-size:.875rem;margin:0}.table-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.table-container[_ngcontent-%COMP%]{padding:.75rem;overflow-x:auto;margin-bottom:0}.data-table[_ngcontent-%COMP%]{min-width:960px;width:100%;font-size:.875rem}.calls-table[_ngcontent-%COMP%]{min-width:800px}.table-thead[_ngcontent-%COMP%]{font-size:15px;color:#1f2937;font-weight:600;background:#f8fafc}.th-left[_ngcontent-%COMP%]{text-align:left;padding:.75rem;border-top-left-radius:.75rem;border-bottom-left-radius:.75rem}.th-right[_ngcontent-%COMP%]{text-align:right;padding:.75rem}.th-center[_ngcontent-%COMP%]{text-align:center;padding:.75rem}.th-rounded-right[_ngcontent-%COMP%]{border-top-right-radius:.75rem;border-bottom-right-radius:.75rem}.th-rounded-left[_ngcontent-%COMP%]{border-top-left-radius:.75rem;border-bottom-left-radius:.75rem}.table-row[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{transition:background-color .3s}.table-row[_ngcontent-%COMP%]:hover   td[_ngcontent-%COMP%]{background-color:#eef7ff}.table-row[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:transparent;border:none}.table-row[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none;box-shadow:none}.call-logs-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n)   td[_ngcontent-%COMP%]{background-color:#f9fafb}.call-logs-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover   td[_ngcontent-%COMP%]{background-color:#eef7ff!important;transition:background-color .3s}.call-logs-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:transparent;border:none}.call-logs-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none;box-shadow:none}.td-font-medium[_ngcontent-%COMP%]{font-weight:500;padding:.75rem}.td-right[_ngcontent-%COMP%]{text-align:right;padding:.75rem}.td-center[_ngcontent-%COMP%]{text-align:center;padding:.75rem}.sticky-col[_ngcontent-%COMP%], .sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff}.sticky-col-header[_ngcontent-%COMP%]{z-index:3;background:#f8fafc}.sticky-col[_ngcontent-%COMP%]{z-index:2}.expand-btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:.5rem;color:#1d4ed8;font-weight:600;background:none;border:none;cursor:pointer}.expand-btn[_ngcontent-%COMP%]:hover{color:#1e40af}.sub-row[_ngcontent-%COMP%]{background:#fbfdff}.sub-row-content[_ngcontent-%COMP%]{padding:0}.sub-row-inner[_ngcontent-%COMP%]{padding:1rem 1.5rem;border-top:1px solid #e2e8f0;border-radius:10px}.sub-row-title[_ngcontent-%COMP%]{font-size:.75rem;font-weight:600;color:#64748b;margin-bottom:.5rem}.sub-table-container[_ngcontent-%COMP%]{overflow-x:auto}.sub-table[_ngcontent-%COMP%]{min-width:940px;width:100%;font-size:.75rem}.calls-sub-table[_ngcontent-%COMP%]{min-width:720px}.sub-table-thead[_ngcontent-%COMP%]{background:#f8fafc;color:#475569}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;padding:.15rem .5rem;border-radius:999px;font-size:.75rem;line-height:1rem;border:1px solid rgba(0,0,0,.05);background:#f1f5f9;color:#475569}.chip-success[_ngcontent-%COMP%]{background:#ecfdf5;color:#047857;border-radius:10px}.chip-inactive[_ngcontent-%COMP%]{background:#f1f5f9;color:#64748b;border-radius:999px}.icon-refresh[_ngcontent-%COMP%]:before{content:"\\21bb"}.icon-filter[_ngcontent-%COMP%]:before{content:"\\2699"}.icon-reset[_ngcontent-%COMP%]:before{content:"\\21ba"}.icon-download[_ngcontent-%COMP%]:before{content:"\\2193"}.icon-chevron-right[_ngcontent-%COMP%]:before{content:"\\2192"}.icon-chevron-down[_ngcontent-%COMP%]:before{content:"\\2193"}.hidden[_ngcontent-%COMP%]{display:none!important}[_nghost-%COMP%]{background:#f8fafc;color:#1e293b;font-family:system-ui,-apple-system,sans-serif}.arrow[_ngcontent-%COMP%]{display:inline-block;transition:transform .2s ease;margin-right:8px}.expand-btn.expanded[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{transform:rotate(90deg)}.expand-btn[_ngcontent-%COMP%]{background:none;border:none;cursor:pointer;display:flex;align-items:center;gap:8px;font-size:14px;font-weight:500;color:#1e293b;padding:0;transition:all .2s}.expand-btn[_ngcontent-%COMP%]:hover{color:#3b82f6}.chip-success[_ngcontent-%COMP%]{@apply text-[#047857];background-color:#d1fae5;padding:2px 6px;border-radius:10px}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{color:#475569;text-align:left;font-weight:600}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .sub-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:not(.td-center   .chip)[_ngcontent-%COMP%]{color:#475569}.sub-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n)   td[_ngcontent-%COMP%]{background-color:#f0f8ff!important;padding:10px!important}.chip-inactive[_ngcontent-%COMP%]{@apply text-gray-500;background-color:#f3f4f6;padding:2px 6px;border-radius:10px}@media (min-width: 1200px) and (max-width: 1366px){.dashboard-container[_ngcontent-%COMP%]{margin-left:-20px}}@media (min-width: 1200px) and (max-width: 1300px){.main-content[_ngcontent-%COMP%]{margin-left:-15px}}[_ngcontent-%COMP%]::-webkit-scrollbar{height:12px}.table-scroll[_ngcontent-%COMP%]{overflow-y:auto;position:relative;scrollbar-width:thin}.fltt[_ngcontent-%COMP%]{display:inline-flex}@media (max-width: 844px){#selectall[_ngcontent-%COMP%]{white-space:nowrap}.header2[_ngcontent-%COMP%]{display:block!important}.fltt[_ngcontent-%COMP%]{display:ruby!important}.time-dropdown[_ngcontent-%COMP%]{width:100%!important;margin-top:8px}.dropdown-menu[_ngcontent-%COMP%]{z-index:99999!important;width:100%!important}#tabs[_ngcontent-%COMP%]{display:contents!important}.custom-inputs[_ngcontent-%COMP%]{display:ruby!important;width:100%!important}.custom-inputs[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%!important;margin-bottom:10px!important}.custom-inputs[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:10px!important}.content-body[_ngcontent-%COMP%]{margin-left:0!important}.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)!important}.time-dropdown[_ngcontent-%COMP%]{min-width:0px!important;margin-left:0!important}.table-actions[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-end;gap:6px}.btn-small[_ngcontent-%COMP%]{align-items:flex-end;margin-top:6px}#clearbtn[_ngcontent-%COMP%]{margin-left:160px!important}#exportsummary[_ngcontent-%COMP%]{align-items:center!important;margin-top:-40%!important}.kpi-label[_ngcontent-%COMP%], .table-header[_ngcontent-%COMP%]{white-space:break-spaces!important}}.clickable[_ngcontent-%COMP%]{cursor:pointer}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:first-child   th[_ngcontent-%COMP%]{z-index:20}.sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff;z-index:50!important}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:first-child   th[_ngcontent-%COMP%]{position:sticky;top:10px!important;background:#fff;z-index:30}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2)   th[_ngcontent-%COMP%]{position:sticky;top:40px;background:#fff;z-index:25}.table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:5;box-shadow:0 2px 2px -1px #0000001a}.sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff;z-index:10}.sub-table-scroll[_ngcontent-%COMP%]{max-height:300px;overflow-y:auto;position:relative;z-index:0}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:15;box-shadow:0 2px 2px -1px #0000001a}.sub-table-scroll[_ngcontent-%COMP%], .sub-user-table-scroll[_ngcontent-%COMP%]{max-height:250px;overflow-y:auto;border:1px solid #e0e0e0}.sub-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background-color:#f9f9f9;z-index:2;box-shadow:0 2px 2px -1px #0000001a}.data-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .data-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:8px;text-align:center;font-size:14px}.sticky-col-header[_ngcontent-%COMP%], .sticky-col[_ngcontent-%COMP%]{position:sticky;left:0;background:#f9f9f9;z-index:2}.sub-table-container[_ngcontent-%COMP%]{max-height:900px;overflow-y:auto;overflow-x:auto}.sub-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:2}.table-thead[_ngcontent-%COMP%]   th.th-center[_ngcontent-%COMP%]{background-color:#e6f2ff;font-weight:600;border-bottom:2px solid #000}.dropdown-item[_ngcontent-%COMP%]{cursor:pointer}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2)   th[_ngcontent-%COMP%]{font-weight:500;background-color:#fff!important}.data-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.expand-btn[_ngcontent-%COMP%]{border:none;background:none;cursor:pointer;font-weight:500}.arrow[_ngcontent-%COMP%]{display:inline-block;width:12px}.data-table[_ngcontent-%COMP%]   th.group-header[_ngcontent-%COMP%]{border:2px solid #000;text-align:center;background-color:#f0f0f0}.data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .data-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:6px 10px}.bordered-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .bordered-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:8px 12px;text-align:left}.bordered-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f5f5f5}.table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{top:0;z-index:3;background-color:#f5f5f5}.bordered-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.data-table[_ngcontent-%COMP%]{border-collapse:separate;border-spacing:0 10px}.table-row[_ngcontent-%COMP%]{background:#fff;border-radius:8px}.group-divider[_ngcontent-%COMP%]{border-right:2px solid #e2e8f0!important}.loader-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;background:#ffffffb3;display:flex;align-items:center;justify-content:center;z-index:1050}.spinner[_ngcontent-%COMP%]{width:40px;height:40px;border:4px solid #e8e8e8;border-top:4px solid #555;border-radius:50%;animation:_ngcontent-%COMP%_spin .8s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}input[_ngcontent-%COMP%]:focus{outline:none!important;box-shadow:none!important}.sub-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.sub-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .sub-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:none;padding:4px 8px}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:none;background:transparent}.highlight-red[_ngcontent-%COMP%]{color:red!important;font-weight:700}.normal[_ngcontent-%COMP%]{color:#000}.charts-container[_ngcontent-%COMP%]{display:flex;gap:20px}.chart-card[_ngcontent-%COMP%]{flex:1;background:#fff;border:1px solid #e0e0e0;border-radius:8px;padding:20px;box-shadow:0 2px 4px #0000001a}.chart-title[_ngcontent-%COMP%]{font-size:18px;font-weight:700;margin-bottom:20px;color:#333}.chart-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:15px}.chart-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between}.chart-label[_ngcontent-%COMP%]{font-size:14px;color:#666;min-width:80px}.chart-bar-container[_ngcontent-%COMP%]{flex:1;margin:0 15px;position:relative;height:20px;background:#036;border-radius:10px;overflow:hidden}.chart-bar[_ngcontent-%COMP%]{height:100%;background:#036;border-radius:10px;position:relative;transition:width .3s ease}.chart-value[_ngcontent-%COMP%]{font-size:14px;font-weight:700;color:#333;min-width:30px;text-align:right}.chart-target[_ngcontent-%COMP%]{position:absolute;top:0;height:100%;width:3px;background:#dc3545;border-radius:2px}.chart-target[_ngcontent-%COMP%]:after{content:attr(data-value);position:absolute;top:-25px;left:50%;transform:translate(-50%);font-size:12px;color:#dc3545;font-weight:700}@media (max-width: 768px){.charts-container[_ngcontent-%COMP%]{flex-direction:column;padding:0 10px}.chart-card[_ngcontent-%COMP%]{margin-bottom:15px}}.sortable-header[_ngcontent-%COMP%]{position:relative;-webkit-user-select:none;user-select:none}.sort-arrows[_ngcontent-%COMP%]{display:inline-flex;flex-direction:column;align-items:center;margin-left:8px;line-height:1;gap:2px;vertical-align:top}.arrow-up[_ngcontent-%COMP%], .arrow-down[_ngcontent-%COMP%]{font-size:10px;color:#ccc;transition:color .2s ease;display:block;margin:0;padding:0}.arrow-up.active[_ngcontent-%COMP%], .arrow-down.active[_ngcontent-%COMP%]{color:#333}.sort-arrows-spaced[_ngcontent-%COMP%]{display:inline-flex;flex-direction:column;align-items:center;margin-left:8px;gap:4px}.sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-up[_ngcontent-%COMP%], .sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-down[_ngcontent-%COMP%]{font-size:8px;color:#bbb}.sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-up.active[_ngcontent-%COMP%], .sort-arrows-spaced[_ngcontent-%COMP%]   .arrow-down.active[_ngcontent-%COMP%]{color:#555}.bordered-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.bordered-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .bordered-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:8px;text-align:center}.bordered-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f5f5f5;font-weight:700}.bordered-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.table-scroll[_ngcontent-%COMP%]{max-height:500px;overflow:auto;position:relative}.sub-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%;border:1px solid #ccc}.sub-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .sub-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:6px 8px;text-align:center}.sub-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f5f5f5;font-weight:600}.data-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;box-shadow:0 2px 2px -1px #0003}.sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;z-index:25}.data-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2)   th[_ngcontent-%COMP%]{position:sticky;top:35px;z-index:21;background:#fff}.sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;z-index:22;background:#fff}.sub-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#f7f7f7;z-index:15}.sub-table-container[_ngcontent-%COMP%]{max-height:400px;overflow-y:auto;overflow-x:auto;border:1px solid #ccc}.sub-table[_ngcontent-%COMP%]{border-collapse:separate;border-spacing:0;width:100%;min-width:max-content}.sub-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .sub-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:6px 8px;text-align:center;white-space:nowrap;background:#fff}.sub-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;z-index:2;background:#f9f9f9;font-weight:600}.sub-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{display:table-row;border:1px solid #ccc}.sub-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr.row-alt[_ngcontent-%COMP%]{background-color:#f9f9f9}.sub-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr.row-normal[_ngcontent-%COMP%]{background-color:#fff}.td-center[_ngcontent-%COMP%]{text-align:center}.td-left[_ngcontent-%COMP%]{text-align:left}.td-right[_ngcontent-%COMP%]{text-align:right}.sub-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:2px solid #ccc}',
    ],
  });
};
var ya = class r {
  isSessionStorageAvailable() {
    return typeof window < "u" && typeof sessionStorage < "u";
  }
  getItem(i) {
    return this.isSessionStorageAvailable() ? sessionStorage.getItem(i) : null;
  }
  setItem(i, e) {
    this.isSessionStorageAvailable() && sessionStorage.setItem(i, e);
  }
  removeItem(i) {
    this.isSessionStorageAvailable() && sessionStorage.removeItem(i);
  }
  clear() {
    this.isSessionStorageAvailable() && sessionStorage.clear();
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var je = class r {
  constructor(i, e) {
    this.http = i;
    this.storageService = e;
  }
  apiUrl = "https://uat.smartassistapp.in/api/superadmin/";
  getAuthHeaders() {
    let i = this.storageService.getItem("token");
    return new Yt()
      .set("authorization", `Bearer ${i}`)
      .set("accept", "application/json");
  }
  getAllDealer() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "dealers/all", { headers: i });
  }
  getDealerById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}`, { headers: e });
  }
  getCustomerById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}accounts/${i}`, { headers: e });
  }
  getTeamById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}teams/${i}`, { headers: e });
  }
  getVehicleById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}vehicles/${i}`, { headers: e });
  }
  getUserById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}users/${i}`, { headers: e });
  }
  getAllUser(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/users/all`, {
      headers: e,
    });
  }
  getAllLead(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/leads/all`, {
      headers: e,
    });
  }
  getAllTask(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/tasks/all`, {
      headers: e,
    });
  }
  getEventsAll(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/events/t-drives/all`, {
      headers: e,
    });
  }
  getAllOpportunities(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/opportunities/all`, {
      headers: e,
    });
  }
  updateDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}dealers/${i.dealer_id}/update`, i, {
      headers: e,
    });
  }
  createDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "dealers/create", i, { headers: e });
  }
  deleteDealer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}dealers/${i}/delete`,
      {},
      { headers: e }
    );
  }
  getAllVehicle() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "vehicles/all", { headers: i });
  }
  getSingleVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/vehicles/${i}`, { headers: e });
  }
  createNewVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "vehicles/create", i, { headers: e });
  }
  deleteVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}vehicles/${i}/delete`,
      {},
      { headers: e }
    );
  }
  updateVehicle(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}vehicles/${i.vehicle_id}/update`, i, {
      headers: e,
    });
  }
  eventById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}events/${i}`, { headers: e });
  }
  leadById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}leads/${i}`, { headers: e });
  }
  userById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${i}/users/all`, {
      headers: e,
    });
  }
  oppById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}opportunities/${i}`, { headers: e });
  }
  taskById(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}tasks/${i}`, { headers: e });
  }
  getMultipleUser() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "users/all", { headers: i });
  }
  getMultipleTeams() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: i });
  }
  createNewUser(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "users/create", i, { headers: e });
  }
  createNewTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "teams/new", i, { headers: e });
  }
  updateUser(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${i.user_id}/update`, i, {
      headers: e,
    });
  }
  updateTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${i.team_id}/update`, i, {
      headers: e,
    });
  }
  getSingleUser(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/users/${i}`, { headers: e });
  }
  getAllTeams() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: i });
  }
  deleteUser(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${i}/delete`, {}, { headers: e });
  }
  deleteTeam(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${i}/delete`, {}, { headers: e });
  }
  getAllCustomer() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "accounts/all", { headers: i });
  }
  getSingleAccount(i) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/accounts/${i}`, { headers: e });
  }
  createCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.post(`${this.apiUrl}accounts/create`, i, { headers: e });
  }
  updateCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}accounts/${i.account_id}/update`, i, {
      headers: e,
    });
  }
  deleteCustomer(i) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}accounts/${i}/delete`,
      {},
      { headers: e }
    );
  }
  getProfileData() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "show-profile", { headers: i });
  }
  getAllRole() {
    let i = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "role/all", { headers: i });
  }
  createRole(i) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "roles/new", i, { headers: e });
  }
  static ɵfac = function (e) {
    return new (e || r)(ie(St), ie(ya));
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var gn = class r {
  dealer_id;
  dealer_name;
  dealer_code;
  dealer_email;
  corporate_id;
  constructor() {
    (this.dealer_id = ""),
      (this.dealer_name = ""),
      (this.dealer_code = null),
      (this.corporate_id = ""),
      (this.dealer_email = "");
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var ug = ["*"];
var hg = ["dialog"];
var Ip = { animation: !0, transitionTimerDelayMs: 5 },
  mg = (() => {
    class r {
      constructor() {
        this.animation = Ip.animation;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })();
function fg(r) {
  let { transitionDelay: i, transitionDuration: e } =
      window.getComputedStyle(r),
    t = parseFloat(i),
    n = parseFloat(e);
  return (t + n) * 1e3;
}
function Ap(r) {
  return typeof r == "string";
}
function vl(r) {
  return r != null;
}
function gg(r) {
  return r && r.then;
}
function Fp(r) {
  return (r || document.body).getBoundingClientRect();
}
function _g(r) {
  return (i) =>
    new Bn((e) => {
      let t = (u) => r.run(() => e.next(u)),
        n = (u) => r.run(() => e.error(u)),
        o = () => r.run(() => e.complete());
      return i.subscribe({ next: t, error: n, complete: o });
    });
}
var bg = () => {},
  { transitionTimerDelayMs: vg } = Ip,
  Ca = new Map(),
  Kn = (r, i, e, t) => {
    let n = t.context || {},
      o = Ca.get(i);
    if (o)
      switch (t.runningTransition) {
        case "continue":
          return dd;
        case "stop":
          r.run(() => o.transition$.complete()),
            (n = Object.assign(o.context, n)),
            Ca.delete(i);
      }
    let u = e(i, t.animation, n) || bg;
    if (
      !t.animation ||
      window.getComputedStyle(i).transitionProperty === "none"
    )
      return r.run(() => u()), bt(void 0).pipe(_g(r));
    let b = new Ee(),
      C = new Ee(),
      T = b.pipe(gd(!0));
    Ca.set(i, {
      transition$: b,
      complete: () => {
        C.next(), C.complete();
      },
      context: n,
    });
    let k = fg(i);
    return (
      r.runOutsideAngular(() => {
        let V = Ri(i, "transitionend").pipe(
            kt(T),
            zt(({ target: L }) => L === i)
          ),
          B = md(k + vg).pipe(kt(T));
        fd(B, V, C)
          .pipe(kt(T))
          .subscribe(() => {
            Ca.delete(i),
              r.run(() => {
                u(), b.next(), b.complete();
              });
          });
      }),
      b.asObservable()
    );
  };
var B2 = (() => {
  let r = () =>
      /iPad|iPhone|iPod/.test(navigator.userAgent) ||
      (/Macintosh/.test(navigator.userAgent) &&
        navigator.maxTouchPoints &&
        navigator.maxTouchPoints > 2),
    i = () => /Android/.test(navigator.userAgent);
  return typeof navigator < "u" ? !!navigator.userAgent && (r() || i()) : !1;
})();
var xg = [
  "a[href]",
  "button:not([disabled])",
  'input:not([disabled]):not([type="hidden"])',
  "select:not([disabled])",
  "textarea:not([disabled])",
  "[contenteditable]",
  '[tabindex]:not([tabindex="-1"])',
].join(", ");
function Rp(r) {
  let i = Array.from(r.querySelectorAll(xg)).filter((e) => e.tabIndex !== -1);
  return [i[0], i[i.length - 1]];
}
var yg = (r, i, e, t = !1) => {
  r.runOutsideAngular(() => {
    let n = Ri(i, "focusin").pipe(
      kt(e),
      cn((o) => o.target)
    );
    Ri(i, "keydown")
      .pipe(
        kt(e),
        zt((o) => o.key === "Tab"),
        Us(n)
      )
      .subscribe(([o, u]) => {
        let [b, C] = Rp(i);
        (u === b || u === i) && o.shiftKey && (C.focus(), o.preventDefault()),
          u === C && !o.shiftKey && (b.focus(), o.preventDefault());
      }),
      t &&
        Ri(i, "click")
          .pipe(
            kt(e),
            Us(n),
            cn((o) => o[1])
          )
          .subscribe((o) => o.focus());
  });
};
var H2 = new Date(1882, 10, 12),
  j2 = new Date(2174, 10, 25);
var z2 = 1e3 * 60 * 60 * 24;
var Cl = 1080,
  Cg = 24 * Cl,
  wg = 12 * Cl + 793,
  U2 = 29 * Cg + wg,
  W2 = 11 * Cl + 204;
var Dg = (() => {
    class r {
      constructor() {
        (this._ngbConfig = te(mg)),
          (this.backdrop = !0),
          (this.fullscreen = !1),
          (this.keyboard = !0);
      }
      get animation() {
        return this._animation ?? this._ngbConfig.animation;
      }
      set animation(e) {
        this._animation = e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  Sr = class {
    constructor(i, e, t) {
      (this.nodes = i), (this.viewRef = e), (this.componentRef = t);
    }
  };
var Sg = (() => {
    class r {
      constructor() {
        this._document = te(Le);
      }
      hide() {
        let e = Math.abs(
            window.innerWidth - this._document.documentElement.clientWidth
          ),
          t = this._document.body,
          n = t.style,
          { overflow: o, paddingRight: u } = n;
        if (e > 0) {
          let b = parseFloat(window.getComputedStyle(t).paddingRight);
          n.paddingRight = `${b + e}px`;
        }
        return (
          (n.overflow = "hidden"),
          () => {
            e > 0 && (n.paddingRight = u), (n.overflow = o);
          }
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  Mg = (() => {
    class r {
      constructor() {
        (this._nativeElement = te(Pe).nativeElement),
          (this._zone = te(Ie)),
          (this._injector = te(vt));
      }
      ngOnInit() {
        dn(
          () =>
            Kn(
              this._zone,
              this._nativeElement,
              (e, t) => {
                t && Fp(e), e.classList.add("show");
              },
              { animation: this.animation, runningTransition: "continue" }
            ),
          { injector: this._injector, phase: $s.MixedReadWrite }
        );
      }
      hide() {
        return Kn(
          this._zone,
          this._nativeElement,
          ({ classList: e }) => e.remove("show"),
          { animation: this.animation, runningTransition: "stop" }
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["ngb-modal-backdrop"]],
          hostAttrs: [2, "z-index", "1055"],
          hostVars: 6,
          hostBindings: function (t, n) {
            t & 2 &&
              (Fe(
                "modal-backdrop" +
                  (n.backdropClass ? " " + n.backdropClass : "")
              ),
              X("show", !n.animation)("fade", n.animation));
          },
          inputs: { animation: "animation", backdropClass: "backdropClass" },
          standalone: !0,
          features: [le],
          decls: 0,
          vars: 0,
          template: function (t, n) {},
          encapsulation: 2,
        });
      }
    }
    return r;
  })(),
  wa = class {
    update(i) {}
    close(i) {}
    dismiss(i) {}
  },
  Og = [
    "animation",
    "ariaLabelledBy",
    "ariaDescribedBy",
    "backdrop",
    "centered",
    "fullscreen",
    "keyboard",
    "scrollable",
    "size",
    "windowClass",
    "modalDialogClass",
  ],
  Tg = ["animation", "backdropClass"],
  xl = class {
    _applyWindowOptions(i, e) {
      Og.forEach((t) => {
        vl(e[t]) && (i[t] = e[t]);
      });
    }
    _applyBackdropOptions(i, e) {
      Tg.forEach((t) => {
        vl(e[t]) && (i[t] = e[t]);
      });
    }
    update(i) {
      this._applyWindowOptions(this._windowCmptRef.instance, i),
        this._backdropCmptRef &&
          this._backdropCmptRef.instance &&
          this._applyBackdropOptions(this._backdropCmptRef.instance, i);
    }
    get componentInstance() {
      if (this._contentRef && this._contentRef.componentRef)
        return this._contentRef.componentRef.instance;
    }
    get closed() {
      return this._closed.asObservable().pipe(kt(this._hidden));
    }
    get dismissed() {
      return this._dismissed.asObservable().pipe(kt(this._hidden));
    }
    get hidden() {
      return this._hidden.asObservable();
    }
    get shown() {
      return this._windowCmptRef.instance.shown.asObservable();
    }
    constructor(i, e, t, n) {
      (this._windowCmptRef = i),
        (this._contentRef = e),
        (this._backdropCmptRef = t),
        (this._beforeDismiss = n),
        (this._closed = new Ee()),
        (this._dismissed = new Ee()),
        (this._hidden = new Ee()),
        i.instance.dismissEvent.subscribe((o) => {
          this.dismiss(o);
        }),
        (this.result = new Promise((o, u) => {
          (this._resolve = o), (this._reject = u);
        })),
        this.result.then(null, () => {});
    }
    close(i) {
      this._windowCmptRef &&
        (this._closed.next(i), this._resolve(i), this._removeModalElements());
    }
    _dismiss(i) {
      this._dismissed.next(i), this._reject(i), this._removeModalElements();
    }
    dismiss(i) {
      if (this._windowCmptRef)
        if (!this._beforeDismiss) this._dismiss(i);
        else {
          let e = this._beforeDismiss();
          gg(e)
            ? e.then(
                (t) => {
                  t !== !1 && this._dismiss(i);
                },
                () => {}
              )
            : e !== !1 && this._dismiss(i);
        }
    }
    _removeModalElements() {
      let i = this._windowCmptRef.instance.hide(),
        e = this._backdropCmptRef
          ? this._backdropCmptRef.instance.hide()
          : bt(void 0);
      i.subscribe(() => {
        let { nativeElement: t } = this._windowCmptRef.location;
        t.parentNode.removeChild(t),
          this._windowCmptRef.destroy(),
          this._contentRef?.viewRef?.destroy(),
          (this._windowCmptRef = null),
          (this._contentRef = null);
      }),
        e.subscribe(() => {
          if (this._backdropCmptRef) {
            let { nativeElement: t } = this._backdropCmptRef.location;
            t.parentNode.removeChild(t),
              this._backdropCmptRef.destroy(),
              (this._backdropCmptRef = null);
          }
        }),
        zo(i, e).subscribe(() => {
          this._hidden.next(), this._hidden.complete();
        });
    }
  },
  yl = (function (r) {
    return (
      (r[(r.BACKDROP_CLICK = 0)] = "BACKDROP_CLICK"),
      (r[(r.ESC = 1)] = "ESC"),
      r
    );
  })(yl || {}),
  kg = (() => {
    class r {
      constructor() {
        (this._document = te(Le)),
          (this._elRef = te(Pe)),
          (this._zone = te(Ie)),
          (this._injector = te(vt)),
          (this._closed$ = new Ee()),
          (this._elWithFocus = null),
          (this.backdrop = !0),
          (this.keyboard = !0),
          (this.dismissEvent = new xe()),
          (this.shown = new Ee()),
          (this.hidden = new Ee());
      }
      get fullscreenClass() {
        return this.fullscreen === !0
          ? " modal-fullscreen"
          : Ap(this.fullscreen)
          ? ` modal-fullscreen-${this.fullscreen}-down`
          : "";
      }
      dismiss(e) {
        this.dismissEvent.emit(e);
      }
      ngOnInit() {
        (this._elWithFocus = this._document.activeElement),
          dn(() => this._show(), {
            injector: this._injector,
            phase: $s.MixedReadWrite,
          });
      }
      ngOnDestroy() {
        this._disableEventHandling();
      }
      hide() {
        let { nativeElement: e } = this._elRef,
          t = { animation: this.animation, runningTransition: "stop" },
          n = Kn(this._zone, e, () => e.classList.remove("show"), t),
          o = Kn(this._zone, this._dialogEl.nativeElement, () => {}, t),
          u = zo(n, o);
        return (
          u.subscribe(() => {
            this.hidden.next(), this.hidden.complete();
          }),
          this._disableEventHandling(),
          this._restoreFocus(),
          u
        );
      }
      _show() {
        let e = { animation: this.animation, runningTransition: "continue" },
          t = Kn(
            this._zone,
            this._elRef.nativeElement,
            (o, u) => {
              u && Fp(o), o.classList.add("show");
            },
            e
          ),
          n = Kn(this._zone, this._dialogEl.nativeElement, () => {}, e);
        zo(t, n).subscribe(() => {
          this.shown.next(), this.shown.complete();
        }),
          this._enableEventHandling(),
          this._setFocus();
      }
      _enableEventHandling() {
        let { nativeElement: e } = this._elRef;
        this._zone.runOutsideAngular(() => {
          Ri(e, "keydown")
            .pipe(
              kt(this._closed$),
              zt((n) => n.key === "Escape")
            )
            .subscribe((n) => {
              this.keyboard
                ? requestAnimationFrame(() => {
                    n.defaultPrevented ||
                      this._zone.run(() => this.dismiss(yl.ESC));
                  })
                : this.backdrop === "static" && this._bumpBackdrop();
            });
          let t = !1;
          Ri(this._dialogEl.nativeElement, "mousedown")
            .pipe(
              kt(this._closed$),
              zs(() => (t = !1)),
              js(() => Ri(e, "mouseup").pipe(kt(this._closed$), Hn(1))),
              zt(({ target: n }) => e === n)
            )
            .subscribe(() => {
              t = !0;
            }),
            Ri(e, "click")
              .pipe(kt(this._closed$))
              .subscribe(({ target: n }) => {
                e === n &&
                  (this.backdrop === "static"
                    ? this._bumpBackdrop()
                    : this.backdrop === !0 &&
                      !t &&
                      this._zone.run(() => this.dismiss(yl.BACKDROP_CLICK))),
                  (t = !1);
              });
        });
      }
      _disableEventHandling() {
        this._closed$.next();
      }
      _setFocus() {
        let { nativeElement: e } = this._elRef;
        if (!e.contains(document.activeElement)) {
          let t = e.querySelector("[ngbAutofocus]"),
            n = Rp(e)[0];
          (t || n || e).focus();
        }
      }
      _restoreFocus() {
        let e = this._document.body,
          t = this._elWithFocus,
          n;
        t && t.focus && e.contains(t) ? (n = t) : (n = e),
          this._zone.runOutsideAngular(() => {
            setTimeout(() => n.focus()), (this._elWithFocus = null);
          });
      }
      _bumpBackdrop() {
        this.backdrop === "static" &&
          Kn(
            this._zone,
            this._elRef.nativeElement,
            ({ classList: e }) => (
              e.add("modal-static"), () => e.remove("modal-static")
            ),
            { animation: this.animation, runningTransition: "continue" }
          );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["ngb-modal-window"]],
          viewQuery: function (t, n) {
            if ((t & 1 && at(hg, 7), t & 2)) {
              let o;
              tt((o = it())) && (n._dialogEl = o.first);
            }
          },
          hostAttrs: ["role", "dialog", "tabindex", "-1"],
          hostVars: 7,
          hostBindings: function (t, n) {
            t & 2 &&
              (se("aria-modal", !0)("aria-labelledby", n.ariaLabelledBy)(
                "aria-describedby",
                n.ariaDescribedBy
              ),
              Fe("modal d-block" + (n.windowClass ? " " + n.windowClass : "")),
              X("fade", n.animation));
          },
          inputs: {
            animation: "animation",
            ariaLabelledBy: "ariaLabelledBy",
            ariaDescribedBy: "ariaDescribedBy",
            backdrop: "backdrop",
            centered: "centered",
            fullscreen: "fullscreen",
            keyboard: "keyboard",
            scrollable: "scrollable",
            size: "size",
            windowClass: "windowClass",
            modalDialogClass: "modalDialogClass",
          },
          outputs: { dismissEvent: "dismiss" },
          standalone: !0,
          features: [le],
          ngContentSelectors: ug,
          decls: 4,
          vars: 2,
          consts: [
            ["dialog", ""],
            ["role", "document"],
            [1, "modal-content"],
          ],
          template: function (t, n) {
            t & 1 && (Pt(), a(0, "div", 1, 0)(2, "div", 2), xt(3), s()()),
              t & 2 &&
                Fe(
                  "modal-dialog" +
                    (n.size ? " modal-" + n.size : "") +
                    (n.centered ? " modal-dialog-centered" : "") +
                    n.fullscreenClass +
                    (n.scrollable ? " modal-dialog-scrollable" : "") +
                    (n.modalDialogClass ? " " + n.modalDialogClass : "")
                );
          },
          styles: [
            `ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}
`,
          ],
          encapsulation: 2,
        });
      }
    }
    return r;
  })(),
  Pg = (() => {
    class r {
      constructor() {
        (this._applicationRef = te(un)),
          (this._injector = te(vt)),
          (this._environmentInjector = te(Xr)),
          (this._document = te(Le)),
          (this._scrollBar = te(Sg)),
          (this._activeWindowCmptHasChanged = new Ee()),
          (this._ariaHiddenValues = new Map()),
          (this._scrollBarRestoreFn = null),
          (this._modalRefs = []),
          (this._windowCmpts = []),
          (this._activeInstances = new xe());
        let e = te(Ie);
        this._activeWindowCmptHasChanged.subscribe(() => {
          if (this._windowCmpts.length) {
            let t = this._windowCmpts[this._windowCmpts.length - 1];
            yg(e, t.location.nativeElement, this._activeWindowCmptHasChanged),
              this._revertAriaHidden(),
              this._setAriaHidden(t.location.nativeElement);
          }
        });
      }
      _restoreScrollBar() {
        let e = this._scrollBarRestoreFn;
        e && ((this._scrollBarRestoreFn = null), e());
      }
      _hideScrollBar() {
        this._scrollBarRestoreFn ||
          (this._scrollBarRestoreFn = this._scrollBar.hide());
      }
      open(e, t, n) {
        let o =
          n.container instanceof HTMLElement
            ? n.container
            : vl(n.container)
            ? this._document.querySelector(n.container)
            : this._document.body;
        if (!o)
          throw new Error(
            `The specified modal container "${
              n.container || "body"
            }" was not found in the DOM.`
          );
        this._hideScrollBar();
        let u = new wa();
        e = n.injector || e;
        let b = e.get(Xr, null) || this._environmentInjector,
          C = this._getContentRef(e, b, t, u, n),
          T = n.backdrop !== !1 ? this._attachBackdrop(o) : void 0,
          k = this._attachWindowComponent(o, C.nodes),
          V = new xl(k, C, T, n.beforeDismiss);
        return (
          this._registerModalRef(V),
          this._registerWindowCmpt(k),
          V.hidden.pipe(Hn(1)).subscribe(() =>
            Promise.resolve(!0).then(() => {
              this._modalRefs.length ||
                (this._document.body.classList.remove("modal-open"),
                this._restoreScrollBar(),
                this._revertAriaHidden());
            })
          ),
          (u.close = (B) => {
            V.close(B);
          }),
          (u.dismiss = (B) => {
            V.dismiss(B);
          }),
          (u.update = (B) => {
            V.update(B);
          }),
          V.update(n),
          this._modalRefs.length === 1 &&
            this._document.body.classList.add("modal-open"),
          T && T.instance && T.changeDetectorRef.detectChanges(),
          k.changeDetectorRef.detectChanges(),
          V
        );
      }
      get activeInstances() {
        return this._activeInstances;
      }
      dismissAll(e) {
        this._modalRefs.forEach((t) => t.dismiss(e));
      }
      hasOpenModals() {
        return this._modalRefs.length > 0;
      }
      _attachBackdrop(e) {
        let t = qo(Mg, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
        });
        return (
          this._applicationRef.attachView(t.hostView),
          e.appendChild(t.location.nativeElement),
          t
        );
      }
      _attachWindowComponent(e, t) {
        let n = qo(kg, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
          projectableNodes: t,
        });
        return (
          this._applicationRef.attachView(n.hostView),
          e.appendChild(n.location.nativeElement),
          n
        );
      }
      _getContentRef(e, t, n, o, u) {
        return n
          ? n instanceof Xi
            ? this._createFromTemplateRef(n, o)
            : Ap(n)
            ? this._createFromString(n)
            : this._createFromComponent(e, t, n, o, u)
          : new Sr([]);
      }
      _createFromTemplateRef(e, t) {
        let n = {
            $implicit: t,
            close(u) {
              t.close(u);
            },
            dismiss(u) {
              t.dismiss(u);
            },
          },
          o = e.createEmbeddedView(n);
        return this._applicationRef.attachView(o), new Sr([o.rootNodes], o);
      }
      _createFromString(e) {
        let t = this._document.createTextNode(`${e}`);
        return new Sr([[t]]);
      }
      _createFromComponent(e, t, n, o, u) {
        let b = vt.create({
            providers: [{ provide: wa, useValue: o }],
            parent: e,
          }),
          C = qo(n, { environmentInjector: t, elementInjector: b }),
          T = C.location.nativeElement;
        return (
          u.scrollable && T.classList.add("component-host-scrollable"),
          this._applicationRef.attachView(C.hostView),
          new Sr([[T]], C.hostView, C)
        );
      }
      _setAriaHidden(e) {
        let t = e.parentElement;
        t &&
          e !== this._document.body &&
          (Array.from(t.children).forEach((n) => {
            n !== e &&
              n.nodeName !== "SCRIPT" &&
              (this._ariaHiddenValues.set(n, n.getAttribute("aria-hidden")),
              n.setAttribute("aria-hidden", "true"));
          }),
          this._setAriaHidden(t));
      }
      _revertAriaHidden() {
        this._ariaHiddenValues.forEach((e, t) => {
          e
            ? t.setAttribute("aria-hidden", e)
            : t.removeAttribute("aria-hidden");
        }),
          this._ariaHiddenValues.clear();
      }
      _registerModalRef(e) {
        let t = () => {
          let n = this._modalRefs.indexOf(e);
          n > -1 &&
            (this._modalRefs.splice(n, 1),
            this._activeInstances.emit(this._modalRefs));
        };
        this._modalRefs.push(e),
          this._activeInstances.emit(this._modalRefs),
          e.result.then(t, t);
      }
      _registerWindowCmpt(e) {
        this._windowCmpts.push(e),
          this._activeWindowCmptHasChanged.next(),
          e.onDestroy(() => {
            let t = this._windowCmpts.indexOf(e);
            t > -1 &&
              (this._windowCmpts.splice(t, 1),
              this._activeWindowCmptHasChanged.next());
          });
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  co = (() => {
    class r {
      constructor() {
        (this._injector = te(vt)),
          (this._modalStack = te(Pg)),
          (this._config = te(Dg));
      }
      open(e, t = {}) {
        let n = ee(
          Ne(ee({}, this._config), { animation: this._config.animation }),
          t
        );
        return this._modalStack.open(this._injector, e, n);
      }
      get activeInstances() {
        return this._modalStack.activeInstances;
      }
      dismissAll(e) {
        this._modalStack.dismissAll(e);
      }
      hasOpenModals() {
        return this._modalStack.hasOpenModals();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  tn = (() => {
    class r {
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵmod = be({ type: r });
      }
      static {
        this.ɵinj = _e({ providers: [co] });
      }
    }
    return r;
  })();
var $2 = new $e("live announcer delay", {
  providedIn: "root",
  factory: () => 100,
});
var Eg = (r) => ["/Admin/singleUser", r],
  wl = (r) => ({ "is-invalid": r });
function Ig(r, i) {
  r & 1 && (a(0, "tr")(1, "td", 48)(2, "p"), c(3, "No Dealers Found"), s()()());
}
function Ag(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "tr")(1, "td", 34),
      c(2),
      s(),
      a(3, "td", 34),
      c(4),
      s(),
      a(5, "td", 34),
      c(6),
      s(),
      a(7, "td", 34),
      c(8),
      s(),
      a(9, "td")(10, "div", 49)(11, "a", 50),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.onEdit(n.dealer_id));
      }),
      R(12, "i", 51),
      s(),
      a(13, "a", 52),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.openDeleteModal(n));
      }),
      R(14, "i", 53),
      s(),
      a(15, "a", 54)(16, "span", 55),
      R(17, "i", 56),
      s()()()()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = i.index,
      n = _();
    d(2),
      E((n.currentPage - 1) * n.itemsPerPage + t + 1),
      d(2),
      E(e.dealer_name),
      d(2),
      E(e.dealer_code),
      d(2),
      E(e.dealer_email),
      d(7),
      g("routerLink", ce(5, Eg, e.dealer_id));
  }
}
function Fg(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "li", 57)(1, "a", 43),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.goToPage(n));
      }),
      c(2),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _();
    X("active", e === t.currentPage), d(2), E(e);
  }
}
function Rg(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 58)(1, "div", 59)(2, "div", 60)(3, "div", 61)(4, "h5", 62),
      c(5, "Delete Dealer"),
      s()(),
      a(6, "div", 63),
      c(7, "Are you sure you want to delete this dealer?"),
      s(),
      a(8, "div", 64)(9, "button", 65),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeDeleteModal());
      }),
      c(10, "Cancel"),
      s(),
      a(11, "button", 66),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.deleteDealerId());
      }),
      c(12, "Delete"),
      s()()()()();
  }
}
function Vg(r, i) {
  r & 1 && (a(0, "span", 88), c(1, "*"), s());
}
function Ng(r, i) {
  r & 1 &&
    (a(0, "div", 89)(1, "span"), c(2, "Dealer name is required."), s()());
}
function Lg(r, i) {
  r & 1 && (a(0, "span", 89), c(1, "*"), s());
}
function Bg(r, i) {
  r & 1 && (a(0, "span"), c(1, "Dealer code is required."), s());
}
function Hg(r, i) {
  if ((r & 1 && (a(0, "div", 89), M(1, Bg, 2, 0, "span", 35), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("dealer_code")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function jg(r, i) {
  r & 1 && (a(0, "span", 88), c(1, "*"), s());
}
function zg(r, i) {
  r & 1 &&
    (a(0, "div", 89)(1, "span"), c(2, "Dealer email is required."), s()());
}
function Ug(r, i) {
  if (r & 1) {
    let e = J();
    Me(0),
      a(1, "button", 90),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.onUpdate());
      }),
      c(2, " Edit "),
      s(),
      Oe();
  }
  if (r & 2) {
    let e = _(2);
    d(), g("disabled", !e.isFormChanged());
  }
}
function Wg(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 65),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.onSave());
      }),
      c(1, " save "),
      s();
  }
  if (r & 2) {
    let e = _(2);
    se("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function $g(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 67)(1, "div", 68)(2, "div", 69)(3, "div", 60)(4, "div", 61)(
      5,
      "h5",
      70
    ),
      c(6),
      s(),
      a(7, "button", 71),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeModal());
      }),
      a(8, "span", 72),
      c(9, "\xD7"),
      s()()(),
      a(10, "div", 73)(11, "div", 74)(12, "div", 75)(13, "label", 76),
      c(14, " Dealer Name "),
      M(15, Vg, 2, 0, "span", 77),
      s(),
      R(16, "input", 78),
      M(17, Ng, 3, 0, "div", 79),
      s(),
      a(18, "div", 80)(19, "label", 81),
      c(20, " Dealer Code "),
      M(21, Lg, 2, 0, "span", 79),
      s(),
      R(22, "input", 82),
      M(23, Hg, 2, 1, "div", 79),
      s()(),
      a(24, "div", 74)(25, "div", 75)(26, "label", 83),
      c(27, " Dealer Email "),
      M(28, jg, 2, 0, "span", 77),
      s(),
      R(29, "input", 84),
      M(30, zg, 3, 0, "div", 79),
      s(),
      R(31, "div", 85),
      s()(),
      a(32, "div", 64),
      M(33, Ug, 3, 1, "ng-container", 86),
      a(34, "button", 87),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeModal());
      }),
      c(35, " Close "),
      s(),
      M(36, Wg, 2, 1, "ng-template", null, 0, lt),
      s()()()()();
  }
  if (r & 2) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C = rt(37),
      T = _();
    d(6),
      K(" ", T.dealerObj.dealer_id ? "Edit Vehicle" : "Add New Dealer", " "),
      d(4),
      g("formGroup", T.useForm),
      d(5),
      g("ngIf", !T.isEditMode),
      d(),
      g(
        "ngClass",
        ce(
          13,
          wl,
          !T.isEditMode &&
            ((e = T.useForm.get("dealer_name")) == null ? null : e.touched) &&
            ((e = T.useForm.get("dealer_name")) == null ? null : e.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        !T.isEditMode &&
          ((t = T.useForm.get("dealer_name")) == null ? null : t.touched) &&
          ((t = T.useForm.get("dealer_name")) == null ? null : t.invalid)
      ),
      d(4),
      g("ngIf", !T.isEditMode),
      d(),
      g(
        "ngClass",
        ce(
          15,
          wl,
          !T.isEditMode &&
            ((n = T.useForm.get("dealer_code")) == null ? null : n.touched) &&
            ((n = T.useForm.get("dealer_code")) == null ? null : n.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        !T.isEditMode &&
          ((o = T.useForm.get("dealer_code")) == null ? null : o.touched) &&
          ((o = T.useForm.get("dealer_code")) == null ? null : o.invalid)
      ),
      d(5),
      g("ngIf", !T.isEditMode),
      d(),
      g(
        "ngClass",
        ce(
          17,
          wl,
          !T.isEditMode &&
            ((u = T.useForm.get("dealer_email")) == null ? null : u.touched) &&
            ((u = T.useForm.get("dealer_email")) == null ? null : u.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        !T.isEditMode &&
          ((b = T.useForm.get("dealer_email")) == null ? null : b.touched) &&
          ((b = T.useForm.get("dealer_email")) == null ? null : b.invalid)
      ),
      d(3),
      g("ngIf", T.dealerObj == null ? null : T.dealerObj.dealer_id)(
        "ngIfElse",
        C
      );
  }
}
var Da = class r {
  constructor(i) {
    this.modalService = i;
    this.useForm = new _t({
      dealer_name: new Ke(null, [Se.required, Se.minLength(2)]),
      dealer_code: new Ke(null, [Se.required, Se.minLength(5)]),
      dealer_email: new Ke(null, [Se.required, Se.email]),
    });
  }
  http = te(St);
  dealerList = pe([]);
  totalDealer = pe(0);
  masterSrv = te(je);
  dealerObj = new gn();
  selectedRowCount = 3;
  isLoading = !1;
  isModalVisible = !1;
  isModalOpen = !1;
  isEditMode = !1;
  useForm;
  previousValue = "";
  isDeleteModalOpen = !1;
  itemsPerPage = 10;
  originalDealerName = "";
  originalDealerC = "";
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  currentPage = 1;
  originalFormValue;
  searchTerm = "";
  filteredDealers = [];
  paginatedDealers = [];
  totalPages = 0;
  pages = [];
  toastr = te(Ht);
  openModal(i) {
    (this.isModalOpen = !0),
      console.log("open modal called"),
      this.useForm.reset({
        dealer_name: null,
        dealer_code: null,
        dealer_email: null,
      }),
      (this.isModalVisible = !0),
      i
        ? ((this.previousValue = i.dealer_name),
          this.useForm.patchValue({
            dealer_name: i.dealer_name,
            dealer_code: i.dealer_code,
            dealer_email: i.dealer_email,
          }),
          (this.dealerObj = ee({}, i)))
        : (this.dealerObj = new gn());
  }
  isDealerNameChanged() {
    return this.useForm.get("dealer_name")?.value !== this.originalDealerName;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllDealer(),
      this.getAllDealer();
  }
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe(
      (i) => {
        console.log("Dealer list updated:", i.data.dealer.rows),
          this.dealerList.set(i.data.dealer.rows),
          (this.filteredDealers = i.data.dealer.rows),
          this.totalDealer.set(i.data.dealer.count),
          this.initializeDealerPagination();
      },
      (i) => {
        this.toastr.error("Error fetching dealers", "Error"),
          console.error("Error fetching dealers:", i),
          this.dealerList.set([]),
          (this.filteredDealers = []),
          this.totalDealer.set(0),
          this.initializeDealerPagination();
      }
    );
  }
  initializeDealerPagination() {
    let i = this.filteredDealers.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateDealers();
  }
  applyFilterAndPagination() {
    let e = this.dealerList().filter(
      (o) =>
        o.dealer_name?.toLowerCase().includes(this.searchTerm.toLowerCase()) ||
        o.dealer_code
          ?.toString()
          .toLowerCase()
          .includes(this.searchTerm.toLowerCase())
    );
    (this.filteredDealers = e),
      (this.totalPages = Math.ceil(e.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (o, u) => u + 1));
    let t = (this.currentPage - 1) * this.itemsPerPage,
      n = t + this.itemsPerPage;
    this.paginatedDealers = e.slice(t, n);
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateDealers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredDealers = this.dealerList();
    else {
      let i = this.searchTerm.toLowerCase();
      this.filteredDealers = this.dealerList().filter((e) =>
        e.dealer_name.toLowerCase().includes(i)
      );
    }
    (this.currentPage = 1), this.paginateDealers();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateDealers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateDealers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateDealers());
  }
  paginateDealers() {
    let e = this.dealerList().filter(
        (o) =>
          o.dealer_name
            ?.toLowerCase()
            .includes(this.searchTerm.toLowerCase()) ||
          o.dealer_code
            ?.toString()
            .toLowerCase()
            .includes(this.searchTerm.toLowerCase())
      ),
      t = (this.currentPage - 1) * this.itemsPerPage,
      n = t + this.itemsPerPage;
    this.paginatedDealers = e.slice(t, n);
  }
  openDeleteModal(i) {
    console.log("\u{1F5D1}\uFE0F Delete button clicked", i),
      (this.selectedDealerForDeletion = i),
      (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("Form Values on Save:", this.useForm.value),
      this.isEditMode ? this.onUpdate() : this.createNewDealer(),
      this.closeModal();
  }
  createNewDealer() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let i = this.useForm.value;
    console.log("Final Payload sent to API:", i),
      this.masterSrv.createDealer(i).subscribe(
        (e) => {
          this.toastr.success("Dealer created successfully!", "Success"),
            this.getAllDealer();
        },
        (e) => {
          console.error("Error creating dealer:", e),
            this.toastr.error("Error creating dealer", "Error");
        }
      );
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      console.log("Dropdown changed to:", this.itemsPerPage),
      this.applyFilterAndPagination();
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.dealerObj = ee(ee({}, this.dealerObj), this.useForm.value)),
        console.log(
          "\u{1F680} Updated Payload before API call:",
          this.dealerObj
        ),
        this.masterSrv.updateDealer(this.dealerObj).subscribe(
          (i) => {
            console.log("\u2705 API Response:", i),
              i.status === 200
                ? (this.toastr.success(
                    i.message || "Dealer updated successfully",
                    "Success"
                  ),
                  (this.isModalOpen = !1),
                  (this.originalDealerName = ""),
                  (this.originalDealerC = ""),
                  setTimeout(() => {
                    this.getAllDealer();
                  }, 500))
                : this.toastr.error(i.message || "Update failed", "Error");
          },
          (i) => {
            console.error("\u274C API Error:", i);
            let e = i?.error?.message || "Failed to update dealer";
            this.toastr.error(e, "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(i) {
    console.log("Edit button clicked. Dealer ID:", i),
      (this.isEditMode = !0),
      this.masterSrv.getDealerById(i).subscribe(
        (e) => {
          let t = e?.data?.dealer;
          t
            ? ((this.dealerObj = Ne(ee({}, t), {
                dealer_code: Number(t.dealer_code),
              })),
              this.useForm.patchValue({
                dealer_name: t.dealer_name,
                dealer_code: Number(t.dealer_code),
              }),
              (this.originalFormValue = ee({}, this.useForm.value)),
              (this.isModalOpen = !0))
            : this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isFormChanged() {
    return (
      this.useForm.get("dealer_name")?.value !== this.originalDealerName ||
      this.useForm.get("dealer_code")?.value !== this.originalDealerC
    );
  }
  selectedDealerForDeletion = null;
  selectDealerForDeletion(i) {
    this.selectedDealerForDeletion = i;
  }
  deleteDealerId() {
    this.selectedDealerForDeletion && this.selectedDealerForDeletion.dealer_id
      ? this.masterSrv
          .deleteDealer(this.selectedDealerForDeletion.dealer_id)
          .subscribe(
            (i) => {
              this.getAllDealer(),
                this.closeModal(),
                this.toastr.success("Dealer Deleted", "Successful");
            },
            (i) => {
              alert(i.message || "Failed to delete vehicle");
            }
          )
      : alert("No vehicle selected for deletion");
  }
  static ɵfac = function (e) {
    return new (e || r)(F(co));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-dealer"]],
    standalone: !0,
    features: [le],
    decls: 74,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", "mt-10"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search users...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "5", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        "border",
        "2px solid #222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-success",
        "shadow",
        "btn-xs",
        "sharp",
        2,
        "margin-left",
        "5px",
        3,
        "routerLink",
      ],
      [1, "", 2, "margin-left", "0 !important"],
      [1, "fa", "fa-eye"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
      ],
      [1, "modal-dialog", "modal-lg"],
      [
        1,
        "modal-title",
        2,
        "align-items",
        "center",
        "margin-inline",
        "auto",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      [
        "for",
        "dealer_name",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      ["style", "color: red;", 4, "ngIf"],
      [
        "id",
        "dealer_name",
        "type",
        "text",
        "placeholder",
        "Dealer Name",
        "formControlName",
        "dealer_name",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "form-group", "col-md-6"],
      [
        "for",
        "dealer_code",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "YOM",
        "type",
        "text",
        "formControlName",
        "dealer_code",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [
        "for",
        "dealer_email",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "dealer_email",
        "type",
        "text",
        "placeholder",
        "Dealer email",
        "formControlName",
        "dealer_email",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [1, "row", 2, "margin-left", "-3px !important"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [2, "color", "red"],
      [1, "text-danger"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        2,
        "border-color",
        "#222fb9",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        c(6, "Utils"),
        s()(),
        a(7, "li", 7)(8, "a", 8),
        c(9, "Users "),
        s()()()(),
        a(10, "div", 9)(11, "div", 10)(12, "a", 11),
        O("click", function () {
          return t.openModal();
        }),
        R(13, "i", 12),
        c(14, "Add Dealer "),
        s()(),
        a(15, "div", 13)(16, "div", 14)(17, "p", 15),
        c(18, "Total Dealer"),
        s(),
        a(19, "h3", 16),
        c(20),
        s()()()(),
        a(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        R(26, "label", 22),
        a(27, "select", 23),
        O("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        a(28, "option", 24),
        c(29, "10"),
        s(),
        a(30, "option", 25),
        c(31, "25"),
        s(),
        a(32, "option", 26),
        c(33, "50"),
        s(),
        a(34, "option", 27),
        c(35, "100"),
        s()(),
        a(36, "label", 28),
        c(37, "records per page"),
        s()(),
        a(38, "div", 29)(39, "div", 30)(40, "input", 31),
        Je("ngModelChange", function (o) {
          return Xe(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        O("input", function () {
          return t.onSearchChange();
        }),
        s()()()(),
        a(41, "div", 32)(42, "table", 33)(43, "thead")(44, "tr")(45, "th", 34),
        c(46, "Sr No"),
        s(),
        a(47, "th", 34),
        c(48, "Dealer Name"),
        s(),
        a(49, "th", 34),
        c(50, "Dealer Code"),
        s(),
        a(51, "th", 34),
        c(52, "Dealer email"),
        s(),
        a(53, "th"),
        c(54, "Action"),
        s()()(),
        a(55, "tbody"),
        M(56, Ig, 4, 0, "tr", 35)(57, Ag, 18, 7, "tr", 36),
        s()()(),
        a(58, "div", 37)(59, "div", 38)(60, "div", 39),
        c(61),
        s()(),
        a(62, "div", 38)(63, "div", 40)(64, "ul", 41)(65, "li", 42)(
          66,
          "a",
          43
        ),
        O("click", function () {
          return t.previousPage();
        }),
        c(67, "Previous"),
        s()(),
        M(68, Fg, 3, 3, "li", 44),
        a(69, "li", 45)(70, "a", 43),
        O("click", function () {
          return t.nextPage();
        }),
        c(71, "Next"),
        s()()()()()()()()()()(),
        M(72, Rg, 13, 0, "div", 46)(73, $g, 38, 19, "div", 47)),
        e & 2 &&
          (d(20),
          K(" ", t.filteredDealers.length, " "),
          d(20),
          Ze("ngModel", t.searchTerm),
          d(16),
          g("ngIf", t.paginatedDealers.length === 0),
          d(),
          g("ngForOf", t.paginatedDealers),
          d(4),
          oi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.min(t.currentPage * t.itemsPerPage, t.dealerList().length),
            " of ",
            t.dealerList().length,
            " entries "
          ),
          d(4),
          X("disabled", t.currentPage === 1),
          d(3),
          g("ngForOf", t.visiblePages),
          d(),
          X("disabled", t.currentPage === t.totalPages),
          d(3),
          g("ngIf", t.isDeleteModalOpen),
          d(),
          g("ngIf", t.isModalOpen));
    },
    dependencies: [
      De,
      ft,
      gt,
      Be,
      Kt,
      At,
      Ft,
      Mt,
      It,
      si,
      Wt,
      Bt,
      Ge,
      tn,
      Oi,
      mi,
      fi,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}input[_ngcontent-%COMP%]::-webkit-clear-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button, input[_ngcontent-%COMP%]::-webkit-calendar-picker-indicator{display:none!important;-webkit-appearance:none!important}input[_ngcontent-%COMP%]:invalid{box-shadow:none!important}input[_ngcontent-%COMP%]:-moz-ui-invalid{box-shadow:none!important}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border:none}.modal-backdrop[_ngcontent-%COMP%]{display:none!important}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.edit-btn[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:#fff;transition:all .3s ease}.edit-btn[_ngcontent-%COMP%]:hover:enabled{background-color:#222fb9;color:#fff}.edit-btn[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:not-allowed}#editButton[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}",
    ],
  });
};
var Np = (() => {
  class r {
    constructor(e, t, n) {
      (this.el = e), (this.vcr = t), (this.renderer = n), (this.dtOptions = {});
    }
    ngOnInit() {
      this.dtTrigger
        ? this.dtTrigger.subscribe((e) => {
            this.displayTable(e);
          })
        : this.displayTable(null);
    }
    ngOnDestroy() {
      this.dtTrigger && this.dtTrigger.unsubscribe(),
        this.dt && this.dt.destroy(!0);
    }
    displayTable(e) {
      e && (this.dtOptions = e),
        (this.dtInstance = new Promise((t, n) => {
          Promise.resolve(this.dtOptions).then((o) => {
            if (
              Object.keys(o).length === 0 &&
              $("tbody tr", this.el.nativeElement).length === 0
            ) {
              n("Both the table and dtOptions cannot be empty");
              return;
            }
            o.columns &&
              o.columns.forEach((b) => {
                (b.id ?? "").trim() === "" && (b.id = this.getColumnUniqueId());
              }),
              setTimeout(() => {
                let b = {
                  rowCallback: (C, T, k) => {
                    if (o.columns) {
                      let V = o.columns;
                      this.applyNgPipeTransform(C, V),
                        this.applyNgRefTemplate(C, V, T);
                    }
                    o.rowCallback && o.rowCallback(C, T, k);
                  },
                };
                (b = Object.assign({}, o, b)),
                  (this.dt = $(this.el.nativeElement).DataTable(b)),
                  t(this.dt);
              });
          });
        }));
    }
    applyNgPipeTransform(e, t) {
      t.filter((o) => o.ngPipeInstance && !o.ngTemplateRef).forEach((o) => {
        let u = o.ngPipeInstance,
          b = o.ngPipeArgs || [],
          C = t.filter((B) => B.visible !== !1).findIndex((B) => B.id === o.id),
          T = e.childNodes.item(C),
          k = $(T).text(),
          V = u.transform(k, ...b);
        $(T).text(V);
      });
    }
    applyNgRefTemplate(e, t, n) {
      t.filter((u) => u.ngTemplateRef && !u.ngPipeInstance).forEach((u) => {
        let { ref: b, context: C } = u.ngTemplateRef,
          T = t.filter((L) => L.visible !== !1).findIndex((L) => L.id === u.id),
          k = e.childNodes.item(T);
        $(k).html("");
        let V = Object.assign({}, C, C?.userData, { adtData: n }),
          B = this.vcr.createEmbeddedView(b, V);
        this.renderer.appendChild(k, B.rootNodes[0]);
      });
    }
    getColumnUniqueId() {
      let e = "",
        t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
      for (let n = 0; n < 6; n++) {
        let o = Math.floor(Math.random() * t.length);
        e += t.charAt(o);
      }
      return e.trim();
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)(F(Pe), F(Ni), F(Jt));
      };
    }
    static {
      this.ɵdir = ke({
        type: r,
        selectors: [["", "datatable", ""]],
        inputs: { dtOptions: "dtOptions", dtTrigger: "dtTrigger" },
      });
    }
  }
  return r;
})();
var Mr = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({ imports: [De] });
    }
  }
  return r;
})();
var po = class r {
  vehicle_id;
  YOM;
  vehicle_name;
  type;
  VIN;
  created_at;
  updated_at;
  corporate_id;
  deleted;
  chasis_number;
  demo_start_date;
  demo_end_date;
  constructor() {
    (this.deleted = !1),
      (this.vehicle_id = " "),
      (this.YOM = ""),
      (this.vehicle_name = ""),
      (this.type = ""),
      (this.VIN = ""),
      (this.created_at = ""),
      (this.updated_at = ""),
      (this.corporate_id = ""),
      (this.chasis_number = ""),
      (this.demo_start_date = " "),
      (this.demo_end_date = "");
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var Sl;
try {
  Sl = typeof Intl < "u" && Intl.v8BreakIterator;
} catch {
  Sl = !1;
}
var mt = (() => {
  class r {
    constructor(e) {
      (this._platformId = e),
        (this.isBrowser = this._platformId
          ? Si(this._platformId)
          : typeof document == "object" && !!document),
        (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
        (this.TRIDENT =
          this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
        (this.BLINK =
          this.isBrowser &&
          !!(window.chrome || Sl) &&
          typeof CSS < "u" &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.WEBKIT =
          this.isBrowser &&
          /AppleWebKit/i.test(navigator.userAgent) &&
          !this.BLINK &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.IOS =
          this.isBrowser &&
          /iPad|iPhone|iPod/.test(navigator.userAgent) &&
          !("MSStream" in window)),
        (this.FIREFOX =
          this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent)),
        (this.ANDROID =
          this.isBrowser &&
          /android/i.test(navigator.userAgent) &&
          !this.TRIDENT),
        (this.SAFARI =
          this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)(ie(Vi));
      };
    }
    static {
      this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
    }
  }
  return r;
})();
var uo;
function Yg() {
  if (uo == null && typeof window < "u")
    try {
      window.addEventListener(
        "test",
        null,
        Object.defineProperty({}, "passive", { get: () => (uo = !0) })
      );
    } finally {
      uo = uo || !1;
    }
  return uo;
}
function nn(r) {
  return Yg() ? r : !!r.capture;
}
var Qn;
function Lp() {
  if (Qn == null) {
    if (
      typeof document != "object" ||
      !document ||
      typeof Element != "function" ||
      !Element
    )
      return (Qn = !1), Qn;
    if ("scrollBehavior" in document.documentElement.style) Qn = !0;
    else {
      let r = Element.prototype.scrollTo;
      r ? (Qn = !/\{\s*\[native code\]\s*\}/.test(r.toString())) : (Qn = !1);
    }
  }
  return Qn;
}
var Dl;
function qg() {
  if (Dl == null) {
    let r = typeof document < "u" ? document.head : null;
    Dl = !!(r && (r.createShadowRoot || r.attachShadow));
  }
  return Dl;
}
function Bp(r) {
  if (qg()) {
    let i = r.getRootNode ? r.getRootNode() : null;
    if (typeof ShadowRoot < "u" && ShadowRoot && i instanceof ShadowRoot)
      return i;
  }
  return null;
}
function Ml() {
  let r = typeof document < "u" && document ? document.activeElement : null;
  for (; r && r.shadowRoot; ) {
    let i = r.shadowRoot.activeElement;
    if (i === r) break;
    r = i;
  }
  return r;
}
function Ti(r) {
  return r.composedPath ? r.composedPath()[0] : r.target;
}
function ho() {
  return (
    (typeof __karma__ < "u" && !!__karma__) ||
    (typeof jasmine < "u" && !!jasmine) ||
    (typeof jest < "u" && !!jest) ||
    (typeof Mocha < "u" && !!Mocha)
  );
}
function Hp(r, ...i) {
  return i.length
    ? i.some((e) => r[e])
    : r.altKey || r.shiftKey || r.ctrlKey || r.metaKey;
}
function Tr(r) {
  return Array.isArray(r) ? r : [r];
}
function Tt(r) {
  return r == null ? "" : typeof r == "string" ? r : `${r}px`;
}
function _n(r) {
  return r instanceof Pe ? r.nativeElement : r;
}
var Kg = (() => {
  class r {
    create(e) {
      return typeof MutationObserver > "u" ? null : new MutationObserver(e);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
    }
  }
  return r;
})();
var Sa = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({ providers: [Kg] });
    }
  }
  return r;
})();
var jp = new Set(),
  Zn,
  Qg = (() => {
    class r {
      constructor(e, t) {
        (this._platform = e),
          (this._nonce = t),
          (this._matchMedia =
            this._platform.isBrowser && window.matchMedia
              ? window.matchMedia.bind(window)
              : Xg);
      }
      matchMedia(e) {
        return (
          (this._platform.WEBKIT || this._platform.BLINK) && Zg(e, this._nonce),
          this._matchMedia(e)
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(mt), ie(yd, 8));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })();
function Zg(r, i) {
  if (!jp.has(r))
    try {
      Zn ||
        ((Zn = document.createElement("style")),
        i && Zn.setAttribute("nonce", i),
        Zn.setAttribute("type", "text/css"),
        document.head.appendChild(Zn)),
        Zn.sheet &&
          (Zn.sheet.insertRule(`@media ${r} {body{ }}`, 0), jp.add(r));
    } catch (e) {
      console.error(e);
    }
}
function Xg(r) {
  return {
    matches: r === "all" || r === "",
    media: r,
    addListener: () => {},
    removeListener: () => {},
  };
}
var Up = (() => {
  class r {
    constructor(e, t) {
      (this._mediaMatcher = e),
        (this._zone = t),
        (this._queries = new Map()),
        (this._destroySubject = new Ee());
    }
    ngOnDestroy() {
      this._destroySubject.next(), this._destroySubject.complete();
    }
    isMatched(e) {
      return zp(Tr(e)).some((n) => this._registerQuery(n).mql.matches);
    }
    observe(e) {
      let n = zp(Tr(e)).map((u) => this._registerQuery(u).observable),
        o = Ls(n);
      return (
        (o = ud(o.pipe(Hn(1)), o.pipe(Zr(1), Hs(0)))),
        o.pipe(
          cn((u) => {
            let b = { matches: !1, breakpoints: {} };
            return (
              u.forEach(({ matches: C, query: T }) => {
                (b.matches = b.matches || C), (b.breakpoints[T] = C);
              }),
              b
            );
          })
        )
      );
    }
    _registerQuery(e) {
      if (this._queries.has(e)) return this._queries.get(e);
      let t = this._mediaMatcher.matchMedia(e),
        o = {
          observable: new Bn((u) => {
            let b = (C) => this._zone.run(() => u.next(C));
            return (
              t.addListener(b),
              () => {
                t.removeListener(b);
              }
            );
          }).pipe(
            Cn(t),
            cn(({ matches: u }) => ({ query: e, matches: u })),
            kt(this._destroySubject)
          ),
          mql: t,
        };
      return this._queries.set(e, o), o;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)(ie(Qg), ie(Ie));
      };
    }
    static {
      this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
    }
  }
  return r;
})();
function zp(r) {
  return r
    .map((i) => i.split(","))
    .reduce((i, e) => i.concat(e))
    .map((i) => i.trim());
}
var e0 = (() => {
  class r {
    constructor(e) {
      this._platform = e;
    }
    isDisabled(e) {
      return e.hasAttribute("disabled");
    }
    isVisible(e) {
      return i0(e) && getComputedStyle(e).visibility === "visible";
    }
    isTabbable(e) {
      if (!this._platform.isBrowser) return !1;
      let t = t0(d0(e));
      if (t && (Wp(t) === -1 || !this.isVisible(t))) return !1;
      let n = e.nodeName.toLowerCase(),
        o = Wp(e);
      return e.hasAttribute("contenteditable")
        ? o !== -1
        : n === "iframe" ||
          n === "object" ||
          (this._platform.WEBKIT && this._platform.IOS && !l0(e))
        ? !1
        : n === "audio"
        ? e.hasAttribute("controls")
          ? o !== -1
          : !1
        : n === "video"
        ? o === -1
          ? !1
          : o !== null
          ? !0
          : this._platform.FIREFOX || e.hasAttribute("controls")
        : e.tabIndex >= 0;
    }
    isFocusable(e, t) {
      return (
        c0(e) &&
        !this.isDisabled(e) &&
        (t?.ignoreVisibility || this.isVisible(e))
      );
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)(ie(mt));
      };
    }
    static {
      this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
    }
  }
  return r;
})();
function t0(r) {
  try {
    return r.frameElement;
  } catch {
    return null;
  }
}
function i0(r) {
  return !!(
    r.offsetWidth ||
    r.offsetHeight ||
    (typeof r.getClientRects == "function" && r.getClientRects().length)
  );
}
function n0(r) {
  let i = r.nodeName.toLowerCase();
  return i === "input" || i === "select" || i === "button" || i === "textarea";
}
function r0(r) {
  return a0(r) && r.type == "hidden";
}
function o0(r) {
  return s0(r) && r.hasAttribute("href");
}
function a0(r) {
  return r.nodeName.toLowerCase() == "input";
}
function s0(r) {
  return r.nodeName.toLowerCase() == "a";
}
function Yp(r) {
  if (!r.hasAttribute("tabindex") || r.tabIndex === void 0) return !1;
  let i = r.getAttribute("tabindex");
  return !!(i && !isNaN(parseInt(i, 10)));
}
function Wp(r) {
  if (!Yp(r)) return null;
  let i = parseInt(r.getAttribute("tabindex") || "", 10);
  return isNaN(i) ? -1 : i;
}
function l0(r) {
  let i = r.nodeName.toLowerCase(),
    e = i === "input" && r.type;
  return e === "text" || e === "password" || i === "select" || i === "textarea";
}
function c0(r) {
  return r0(r)
    ? !1
    : n0(r) || o0(r) || r.hasAttribute("contenteditable") || Yp(r);
}
function d0(r) {
  return (r.ownerDocument && r.ownerDocument.defaultView) || window;
}
var Tl = class {
    get enabled() {
      return this._enabled;
    }
    set enabled(i) {
      (this._enabled = i),
        this._startAnchor &&
          this._endAnchor &&
          (this._toggleAnchorTabIndex(i, this._startAnchor),
          this._toggleAnchorTabIndex(i, this._endAnchor));
    }
    constructor(i, e, t, n, o = !1, u) {
      (this._element = i),
        (this._checker = e),
        (this._ngZone = t),
        (this._document = n),
        (this._injector = u),
        (this._hasAttached = !1),
        (this.startAnchorListener = () => this.focusLastTabbableElement()),
        (this.endAnchorListener = () => this.focusFirstTabbableElement()),
        (this._enabled = !0),
        o || this.attachAnchors();
    }
    destroy() {
      let i = this._startAnchor,
        e = this._endAnchor;
      i &&
        (i.removeEventListener("focus", this.startAnchorListener), i.remove()),
        e &&
          (e.removeEventListener("focus", this.endAnchorListener), e.remove()),
        (this._startAnchor = this._endAnchor = null),
        (this._hasAttached = !1);
    }
    attachAnchors() {
      return this._hasAttached
        ? !0
        : (this._ngZone.runOutsideAngular(() => {
            this._startAnchor ||
              ((this._startAnchor = this._createAnchor()),
              this._startAnchor.addEventListener(
                "focus",
                this.startAnchorListener
              )),
              this._endAnchor ||
                ((this._endAnchor = this._createAnchor()),
                this._endAnchor.addEventListener(
                  "focus",
                  this.endAnchorListener
                ));
          }),
          this._element.parentNode &&
            (this._element.parentNode.insertBefore(
              this._startAnchor,
              this._element
            ),
            this._element.parentNode.insertBefore(
              this._endAnchor,
              this._element.nextSibling
            ),
            (this._hasAttached = !0)),
          this._hasAttached);
    }
    focusInitialElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusInitialElement(i)));
      });
    }
    focusFirstTabbableElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusFirstTabbableElement(i)));
      });
    }
    focusLastTabbableElementWhenReady(i) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusLastTabbableElement(i)));
      });
    }
    _getRegionBoundary(i) {
      let e = this._element.querySelectorAll(
        `[cdk-focus-region-${i}], [cdkFocusRegion${i}], [cdk-focus-${i}]`
      );
      return i == "start"
        ? e.length
          ? e[0]
          : this._getFirstTabbableElement(this._element)
        : e.length
        ? e[e.length - 1]
        : this._getLastTabbableElement(this._element);
    }
    focusInitialElement(i) {
      let e = this._element.querySelector(
        "[cdk-focus-initial], [cdkFocusInitial]"
      );
      if (e) {
        if (!this._checker.isFocusable(e)) {
          let t = this._getFirstTabbableElement(e);
          return t?.focus(i), !!t;
        }
        return e.focus(i), !0;
      }
      return this.focusFirstTabbableElement(i);
    }
    focusFirstTabbableElement(i) {
      let e = this._getRegionBoundary("start");
      return e && e.focus(i), !!e;
    }
    focusLastTabbableElement(i) {
      let e = this._getRegionBoundary("end");
      return e && e.focus(i), !!e;
    }
    hasAttached() {
      return this._hasAttached;
    }
    _getFirstTabbableElement(i) {
      if (this._checker.isFocusable(i) && this._checker.isTabbable(i)) return i;
      let e = i.children;
      for (let t = 0; t < e.length; t++) {
        let n =
          e[t].nodeType === this._document.ELEMENT_NODE
            ? this._getFirstTabbableElement(e[t])
            : null;
        if (n) return n;
      }
      return null;
    }
    _getLastTabbableElement(i) {
      if (this._checker.isFocusable(i) && this._checker.isTabbable(i)) return i;
      let e = i.children;
      for (let t = e.length - 1; t >= 0; t--) {
        let n =
          e[t].nodeType === this._document.ELEMENT_NODE
            ? this._getLastTabbableElement(e[t])
            : null;
        if (n) return n;
      }
      return null;
    }
    _createAnchor() {
      let i = this._document.createElement("div");
      return (
        this._toggleAnchorTabIndex(this._enabled, i),
        i.classList.add("cdk-visually-hidden"),
        i.classList.add("cdk-focus-trap-anchor"),
        i.setAttribute("aria-hidden", "true"),
        i
      );
    }
    _toggleAnchorTabIndex(i, e) {
      i ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
    }
    toggleAnchors(i) {
      this._startAnchor &&
        this._endAnchor &&
        (this._toggleAnchorTabIndex(i, this._startAnchor),
        this._toggleAnchorTabIndex(i, this._endAnchor));
    }
    _executeOnStable(i) {
      this._injector ? dn(i, { injector: this._injector }) : setTimeout(i);
    }
  },
  p0 = (() => {
    class r {
      constructor(e, t, n) {
        (this._checker = e),
          (this._ngZone = t),
          (this._injector = te(vt)),
          (this._document = n);
      }
      create(e, t = !1) {
        return new Tl(
          e,
          this._checker,
          this._ngZone,
          this._document,
          t,
          this._injector
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(e0), ie(Ie), ie(Le));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  qp = (() => {
    class r {
      get enabled() {
        return this.focusTrap?.enabled || !1;
      }
      set enabled(e) {
        this.focusTrap && (this.focusTrap.enabled = e);
      }
      constructor(e, t, n) {
        (this._elementRef = e),
          (this._focusTrapFactory = t),
          (this._previouslyFocusedElement = null),
          te(mt).isBrowser &&
            (this.focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
              !0
            ));
      }
      ngOnDestroy() {
        this.focusTrap?.destroy(),
          this._previouslyFocusedElement &&
            (this._previouslyFocusedElement.focus(),
            (this._previouslyFocusedElement = null));
      }
      ngAfterContentInit() {
        this.focusTrap?.attachAnchors(),
          this.autoCapture && this._captureFocus();
      }
      ngDoCheck() {
        this.focusTrap &&
          !this.focusTrap.hasAttached() &&
          this.focusTrap.attachAnchors();
      }
      ngOnChanges(e) {
        let t = e.autoCapture;
        t &&
          !t.firstChange &&
          this.autoCapture &&
          this.focusTrap?.hasAttached() &&
          this._captureFocus();
      }
      _captureFocus() {
        (this._previouslyFocusedElement = Ml()),
          this.focusTrap?.focusInitialElementWhenReady();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Pe), F(p0), F(Le));
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [["", "cdkTrapFocus", ""]],
          inputs: {
            enabled: [2, "cdkTrapFocus", "enabled", ye],
            autoCapture: [2, "cdkTrapFocusAutoCapture", "autoCapture", ye],
          },
          exportAs: ["cdkTrapFocus"],
          standalone: !0,
          features: [Dt, wt],
        });
      }
    }
    return r;
  })();
function kl(r) {
  return r.buttons === 0 || r.detail === 0;
}
function Pl(r) {
  let i =
    (r.touches && r.touches[0]) || (r.changedTouches && r.changedTouches[0]);
  return (
    !!i &&
    i.identifier === -1 &&
    (i.radiusX == null || i.radiusX === 1) &&
    (i.radiusY == null || i.radiusY === 1)
  );
}
var u0 = new $e("cdk-input-modality-detector-options"),
  h0 = { ignoreKeys: [18, 17, 224, 91, 16] },
  Kp = 650,
  kr = nn({ passive: !0, capture: !0 }),
  m0 = (() => {
    class r {
      get mostRecentModality() {
        return this._modality.value;
      }
      constructor(e, t, n, o) {
        (this._platform = e),
          (this._mostRecentTarget = null),
          (this._modality = new Fi(null)),
          (this._lastTouchMs = 0),
          (this._onKeydown = (u) => {
            this._options?.ignoreKeys?.some((b) => b === u.keyCode) ||
              (this._modality.next("keyboard"),
              (this._mostRecentTarget = Ti(u)));
          }),
          (this._onMousedown = (u) => {
            Date.now() - this._lastTouchMs < Kp ||
              (this._modality.next(kl(u) ? "keyboard" : "mouse"),
              (this._mostRecentTarget = Ti(u)));
          }),
          (this._onTouchstart = (u) => {
            if (Pl(u)) {
              this._modality.next("keyboard");
              return;
            }
            (this._lastTouchMs = Date.now()),
              this._modality.next("touch"),
              (this._mostRecentTarget = Ti(u));
          }),
          (this._options = ee(ee({}, h0), o)),
          (this.modalityDetected = this._modality.pipe(Zr(1))),
          (this.modalityChanged = this.modalityDetected.pipe(Uo())),
          e.isBrowser &&
            t.runOutsideAngular(() => {
              n.addEventListener("keydown", this._onKeydown, kr),
                n.addEventListener("mousedown", this._onMousedown, kr),
                n.addEventListener("touchstart", this._onTouchstart, kr);
            });
      }
      ngOnDestroy() {
        this._modality.complete(),
          this._platform.isBrowser &&
            (document.removeEventListener("keydown", this._onKeydown, kr),
            document.removeEventListener("mousedown", this._onMousedown, kr),
            document.removeEventListener("touchstart", this._onTouchstart, kr));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(mt), ie(Ie), ie(Le), ie(u0, 8));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })();
var Oa = (function (r) {
    return (
      (r[(r.IMMEDIATE = 0)] = "IMMEDIATE"),
      (r[(r.EVENTUAL = 1)] = "EVENTUAL"),
      r
    );
  })(Oa || {}),
  f0 = new $e("cdk-focus-monitor-default-options"),
  Ma = nn({ passive: !0, capture: !0 }),
  El = (() => {
    class r {
      constructor(e, t, n, o, u) {
        (this._ngZone = e),
          (this._platform = t),
          (this._inputModalityDetector = n),
          (this._origin = null),
          (this._windowFocused = !1),
          (this._originFromTouchInteraction = !1),
          (this._elementInfo = new Map()),
          (this._monitoredElementCount = 0),
          (this._rootNodeFocusListenerCount = new Map()),
          (this._windowFocusListener = () => {
            (this._windowFocused = !0),
              (this._windowFocusTimeoutId = window.setTimeout(
                () => (this._windowFocused = !1)
              ));
          }),
          (this._stopInputModalityDetector = new Ee()),
          (this._rootNodeFocusAndBlurListener = (b) => {
            let C = Ti(b);
            for (let T = C; T; T = T.parentElement)
              b.type === "focus" ? this._onFocus(b, T) : this._onBlur(b, T);
          }),
          (this._document = o),
          (this._detectionMode = u?.detectionMode || Oa.IMMEDIATE);
      }
      monitor(e, t = !1) {
        let n = _n(e);
        if (!this._platform.isBrowser || n.nodeType !== 1) return bt();
        let o = Bp(n) || this._getDocument(),
          u = this._elementInfo.get(n);
        if (u) return t && (u.checkChildren = !0), u.subject;
        let b = { checkChildren: t, subject: new Ee(), rootNode: o };
        return (
          this._elementInfo.set(n, b),
          this._registerGlobalListeners(b),
          b.subject
        );
      }
      stopMonitoring(e) {
        let t = _n(e),
          n = this._elementInfo.get(t);
        n &&
          (n.subject.complete(),
          this._setClasses(t),
          this._elementInfo.delete(t),
          this._removeGlobalListeners(n));
      }
      focusVia(e, t, n) {
        let o = _n(e),
          u = this._getDocument().activeElement;
        o === u
          ? this._getClosestElementsInfo(o).forEach(([b, C]) =>
              this._originChanged(b, t, C)
            )
          : (this._setOrigin(t), typeof o.focus == "function" && o.focus(n));
      }
      ngOnDestroy() {
        this._elementInfo.forEach((e, t) => this.stopMonitoring(t));
      }
      _getDocument() {
        return this._document || document;
      }
      _getWindow() {
        return this._getDocument().defaultView || window;
      }
      _getFocusOrigin(e) {
        return this._origin
          ? this._originFromTouchInteraction
            ? this._shouldBeAttributedToTouch(e)
              ? "touch"
              : "program"
            : this._origin
          : this._windowFocused && this._lastFocusOrigin
          ? this._lastFocusOrigin
          : e && this._isLastInteractionFromInputLabel(e)
          ? "mouse"
          : "program";
      }
      _shouldBeAttributedToTouch(e) {
        return (
          this._detectionMode === Oa.EVENTUAL ||
          !!e?.contains(this._inputModalityDetector._mostRecentTarget)
        );
      }
      _setClasses(e, t) {
        e.classList.toggle("cdk-focused", !!t),
          e.classList.toggle("cdk-touch-focused", t === "touch"),
          e.classList.toggle("cdk-keyboard-focused", t === "keyboard"),
          e.classList.toggle("cdk-mouse-focused", t === "mouse"),
          e.classList.toggle("cdk-program-focused", t === "program");
      }
      _setOrigin(e, t = !1) {
        this._ngZone.runOutsideAngular(() => {
          if (
            ((this._origin = e),
            (this._originFromTouchInteraction = e === "touch" && t),
            this._detectionMode === Oa.IMMEDIATE)
          ) {
            clearTimeout(this._originTimeoutId);
            let n = this._originFromTouchInteraction ? Kp : 1;
            this._originTimeoutId = setTimeout(() => (this._origin = null), n);
          }
        });
      }
      _onFocus(e, t) {
        let n = this._elementInfo.get(t),
          o = Ti(e);
        !n ||
          (!n.checkChildren && t !== o) ||
          this._originChanged(t, this._getFocusOrigin(o), n);
      }
      _onBlur(e, t) {
        let n = this._elementInfo.get(t);
        !n ||
          (n.checkChildren &&
            e.relatedTarget instanceof Node &&
            t.contains(e.relatedTarget)) ||
          (this._setClasses(t), this._emitOrigin(n, null));
      }
      _emitOrigin(e, t) {
        e.subject.observers.length && this._ngZone.run(() => e.subject.next(t));
      }
      _registerGlobalListeners(e) {
        if (!this._platform.isBrowser) return;
        let t = e.rootNode,
          n = this._rootNodeFocusListenerCount.get(t) || 0;
        n ||
          this._ngZone.runOutsideAngular(() => {
            t.addEventListener("focus", this._rootNodeFocusAndBlurListener, Ma),
              t.addEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                Ma
              );
          }),
          this._rootNodeFocusListenerCount.set(t, n + 1),
          ++this._monitoredElementCount === 1 &&
            (this._ngZone.runOutsideAngular(() => {
              this._getWindow().addEventListener(
                "focus",
                this._windowFocusListener
              );
            }),
            this._inputModalityDetector.modalityDetected
              .pipe(kt(this._stopInputModalityDetector))
              .subscribe((o) => {
                this._setOrigin(o, !0);
              }));
      }
      _removeGlobalListeners(e) {
        let t = e.rootNode;
        if (this._rootNodeFocusListenerCount.has(t)) {
          let n = this._rootNodeFocusListenerCount.get(t);
          n > 1
            ? this._rootNodeFocusListenerCount.set(t, n - 1)
            : (t.removeEventListener(
                "focus",
                this._rootNodeFocusAndBlurListener,
                Ma
              ),
              t.removeEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                Ma
              ),
              this._rootNodeFocusListenerCount.delete(t));
        }
        --this._monitoredElementCount ||
          (this._getWindow().removeEventListener(
            "focus",
            this._windowFocusListener
          ),
          this._stopInputModalityDetector.next(),
          clearTimeout(this._windowFocusTimeoutId),
          clearTimeout(this._originTimeoutId));
      }
      _originChanged(e, t, n) {
        this._setClasses(e, t),
          this._emitOrigin(n, t),
          (this._lastFocusOrigin = t);
      }
      _getClosestElementsInfo(e) {
        let t = [];
        return (
          this._elementInfo.forEach((n, o) => {
            (o === e || (n.checkChildren && o.contains(e))) && t.push([o, n]);
          }),
          t
        );
      }
      _isLastInteractionFromInputLabel(e) {
        let { _mostRecentTarget: t, mostRecentModality: n } =
          this._inputModalityDetector;
        if (
          n !== "mouse" ||
          !t ||
          t === e ||
          (e.nodeName !== "INPUT" && e.nodeName !== "TEXTAREA") ||
          e.disabled
        )
          return !1;
        let o = e.labels;
        if (o) {
          for (let u = 0; u < o.length; u++) if (o[u].contains(t)) return !0;
        }
        return !1;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(Ie), ie(mt), ie(m0), ie(Le, 8), ie(f0, 8));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  Qp = (() => {
    class r {
      constructor(e, t) {
        (this._elementRef = e),
          (this._focusMonitor = t),
          (this._focusOrigin = null),
          (this.cdkFocusChange = new xe());
      }
      get focusOrigin() {
        return this._focusOrigin;
      }
      ngAfterViewInit() {
        let e = this._elementRef.nativeElement;
        this._monitorSubscription = this._focusMonitor
          .monitor(
            e,
            e.nodeType === 1 && e.hasAttribute("cdkMonitorSubtreeFocus")
          )
          .subscribe((t) => {
            (this._focusOrigin = t), this.cdkFocusChange.emit(t);
          });
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._monitorSubscription && this._monitorSubscription.unsubscribe();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Pe), F(El));
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["", "cdkMonitorElementFocus", ""],
            ["", "cdkMonitorSubtreeFocus", ""],
          ],
          outputs: { cdkFocusChange: "cdkFocusChange" },
          exportAs: ["cdkMonitorFocus"],
          standalone: !0,
        });
      }
    }
    return r;
  })(),
  Xn = (function (r) {
    return (
      (r[(r.NONE = 0)] = "NONE"),
      (r[(r.BLACK_ON_WHITE = 1)] = "BLACK_ON_WHITE"),
      (r[(r.WHITE_ON_BLACK = 2)] = "WHITE_ON_BLACK"),
      r
    );
  })(Xn || {}),
  $p = "cdk-high-contrast-black-on-white",
  Gp = "cdk-high-contrast-white-on-black",
  Ol = "cdk-high-contrast-active",
  Il = (() => {
    class r {
      constructor(e, t) {
        (this._platform = e),
          (this._document = t),
          (this._breakpointSubscription = te(Up)
            .observe("(forced-colors: active)")
            .subscribe(() => {
              this._hasCheckedHighContrastMode &&
                ((this._hasCheckedHighContrastMode = !1),
                this._applyBodyHighContrastModeCssClasses());
            }));
      }
      getHighContrastMode() {
        if (!this._platform.isBrowser) return Xn.NONE;
        let e = this._document.createElement("div");
        (e.style.backgroundColor = "rgb(1,2,3)"),
          (e.style.position = "absolute"),
          this._document.body.appendChild(e);
        let t = this._document.defaultView || window,
          n = t && t.getComputedStyle ? t.getComputedStyle(e) : null,
          o = ((n && n.backgroundColor) || "").replace(/ /g, "");
        switch ((e.remove(), o)) {
          case "rgb(0,0,0)":
          case "rgb(45,50,54)":
          case "rgb(32,32,32)":
            return Xn.WHITE_ON_BLACK;
          case "rgb(255,255,255)":
          case "rgb(255,250,239)":
            return Xn.BLACK_ON_WHITE;
        }
        return Xn.NONE;
      }
      ngOnDestroy() {
        this._breakpointSubscription.unsubscribe();
      }
      _applyBodyHighContrastModeCssClasses() {
        if (
          !this._hasCheckedHighContrastMode &&
          this._platform.isBrowser &&
          this._document.body
        ) {
          let e = this._document.body.classList;
          e.remove(Ol, $p, Gp), (this._hasCheckedHighContrastMode = !0);
          let t = this.getHighContrastMode();
          t === Xn.BLACK_ON_WHITE
            ? e.add(Ol, $p)
            : t === Xn.WHITE_ON_BLACK && e.add(Ol, Gp);
        }
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(mt), ie(Le));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  Zp = (() => {
    class r {
      constructor(e) {
        e._applyBodyHighContrastModeCssClasses();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(Il));
        };
      }
      static {
        this.ɵmod = be({ type: r });
      }
      static {
        this.ɵinj = _e({ imports: [Sa] });
      }
    }
    return r;
  })();
var _0 = new $e("cdk-dir-doc", { providedIn: "root", factory: b0 });
function b0() {
  return te(Le);
}
var v0 =
  /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
function x0(r) {
  let i = r?.toLowerCase() || "";
  return i === "auto" && typeof navigator < "u" && navigator?.language
    ? v0.test(navigator.language)
      ? "rtl"
      : "ltr"
    : i === "rtl"
    ? "rtl"
    : "ltr";
}
var Pr = (() => {
  class r {
    constructor(e) {
      if (((this.value = "ltr"), (this.change = new xe()), e)) {
        let t = e.body ? e.body.dir : null,
          n = e.documentElement ? e.documentElement.dir : null;
        this.value = x0(t || n || "ltr");
      }
    }
    ngOnDestroy() {
      this.change.complete();
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)(ie(_0, 8));
      };
    }
    static {
      this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
    }
  }
  return r;
})();
var Pn = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({});
    }
  }
  return r;
})();
var w0 = 20,
  Jp = (() => {
    class r {
      constructor(e, t, n) {
        (this._ngZone = e),
          (this._platform = t),
          (this._scrolled = new Ee()),
          (this._globalSubscription = null),
          (this._scrolledCount = 0),
          (this.scrollContainers = new Map()),
          (this._document = n);
      }
      register(e) {
        this.scrollContainers.has(e) ||
          this.scrollContainers.set(
            e,
            e.elementScrolled().subscribe(() => this._scrolled.next(e))
          );
      }
      deregister(e) {
        let t = this.scrollContainers.get(e);
        t && (t.unsubscribe(), this.scrollContainers.delete(e));
      }
      scrolled(e = w0) {
        return this._platform.isBrowser
          ? new Bn((t) => {
              this._globalSubscription || this._addGlobalListener();
              let n =
                e > 0
                  ? this._scrolled.pipe(Bs(e)).subscribe(t)
                  : this._scrolled.subscribe(t);
              return (
                this._scrolledCount++,
                () => {
                  n.unsubscribe(),
                    this._scrolledCount--,
                    this._scrolledCount || this._removeGlobalListener();
                }
              );
            })
          : bt();
      }
      ngOnDestroy() {
        this._removeGlobalListener(),
          this.scrollContainers.forEach((e, t) => this.deregister(t)),
          this._scrolled.complete();
      }
      ancestorScrolled(e, t) {
        let n = this.getAncestorScrollContainers(e);
        return this.scrolled(t).pipe(zt((o) => !o || n.indexOf(o) > -1));
      }
      getAncestorScrollContainers(e) {
        let t = [];
        return (
          this.scrollContainers.forEach((n, o) => {
            this._scrollableContainsElement(o, e) && t.push(o);
          }),
          t
        );
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _scrollableContainsElement(e, t) {
        let n = _n(t),
          o = e.getElementRef().nativeElement;
        do if (n == o) return !0;
        while ((n = n.parentElement));
        return !1;
      }
      _addGlobalListener() {
        this._globalSubscription = this._ngZone.runOutsideAngular(() => {
          let e = this._getWindow();
          return Ri(e.document, "scroll").subscribe(() =>
            this._scrolled.next()
          );
        });
      }
      _removeGlobalListener() {
        this._globalSubscription &&
          (this._globalSubscription.unsubscribe(),
          (this._globalSubscription = null));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(Ie), ie(mt), ie(Le, 8));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })();
var D0 = 20,
  Al = (() => {
    class r {
      constructor(e, t, n) {
        (this._platform = e),
          (this._change = new Ee()),
          (this._changeListener = (o) => {
            this._change.next(o);
          }),
          (this._document = n),
          t.runOutsideAngular(() => {
            if (e.isBrowser) {
              let o = this._getWindow();
              o.addEventListener("resize", this._changeListener),
                o.addEventListener("orientationchange", this._changeListener);
            }
            this.change().subscribe(() => (this._viewportSize = null));
          });
      }
      ngOnDestroy() {
        if (this._platform.isBrowser) {
          let e = this._getWindow();
          e.removeEventListener("resize", this._changeListener),
            e.removeEventListener("orientationchange", this._changeListener);
        }
        this._change.complete();
      }
      getViewportSize() {
        this._viewportSize || this._updateViewportSize();
        let e = {
          width: this._viewportSize.width,
          height: this._viewportSize.height,
        };
        return this._platform.isBrowser || (this._viewportSize = null), e;
      }
      getViewportRect() {
        let e = this.getViewportScrollPosition(),
          { width: t, height: n } = this.getViewportSize();
        return {
          top: e.top,
          left: e.left,
          bottom: e.top + n,
          right: e.left + t,
          height: n,
          width: t,
        };
      }
      getViewportScrollPosition() {
        if (!this._platform.isBrowser) return { top: 0, left: 0 };
        let e = this._document,
          t = this._getWindow(),
          n = e.documentElement,
          o = n.getBoundingClientRect(),
          u = -o.top || e.body.scrollTop || t.scrollY || n.scrollTop || 0,
          b = -o.left || e.body.scrollLeft || t.scrollX || n.scrollLeft || 0;
        return { top: u, left: b };
      }
      change(e = D0) {
        return e > 0 ? this._change.pipe(Bs(e)) : this._change;
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _updateViewportSize() {
        let e = this._getWindow();
        this._viewportSize = this._platform.isBrowser
          ? { width: e.innerWidth, height: e.innerHeight }
          : { width: 0, height: 0 };
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(mt), ie(Ie), ie(Le, 8));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })();
var Ta = (() => {
    class r {
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵmod = be({ type: r });
      }
      static {
        this.ɵinj = _e({});
      }
    }
    return r;
  })(),
  Fl = (() => {
    class r {
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵmod = be({ type: r });
      }
      static {
        this.ɵinj = _e({ imports: [Pn, Ta, Pn, Ta] });
      }
    }
    return r;
  })();
var mo = class {
    attach(i) {
      return (this._attachedHost = i), i.attach(this);
    }
    detach() {
      let i = this._attachedHost;
      i != null && ((this._attachedHost = null), i.detach());
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(i) {
      this._attachedHost = i;
    }
  },
  fo = class extends mo {
    constructor(i, e, t, n, o) {
      super(),
        (this.component = i),
        (this.viewContainerRef = e),
        (this.injector = t),
        (this.componentFactoryResolver = n),
        (this.projectableNodes = o);
    }
  },
  go = class extends mo {
    constructor(i, e, t, n) {
      super(),
        (this.templateRef = i),
        (this.viewContainerRef = e),
        (this.context = t),
        (this.injector = n);
    }
    get origin() {
      return this.templateRef.elementRef;
    }
    attach(i, e = this.context) {
      return (this.context = e), super.attach(i);
    }
    detach() {
      return (this.context = void 0), super.detach();
    }
  },
  Rl = class extends mo {
    constructor(i) {
      super(), (this.element = i instanceof Pe ? i.nativeElement : i);
    }
  },
  ka = class {
    constructor() {
      (this._isDisposed = !1), (this.attachDomPortal = null);
    }
    hasAttached() {
      return !!this._attachedPortal;
    }
    attach(i) {
      if (i instanceof fo)
        return (this._attachedPortal = i), this.attachComponentPortal(i);
      if (i instanceof go)
        return (this._attachedPortal = i), this.attachTemplatePortal(i);
      if (this.attachDomPortal && i instanceof Rl)
        return (this._attachedPortal = i), this.attachDomPortal(i);
    }
    detach() {
      this._attachedPortal &&
        (this._attachedPortal.setAttachedHost(null),
        (this._attachedPortal = null)),
        this._invokeDisposeFn();
    }
    dispose() {
      this.hasAttached() && this.detach(),
        this._invokeDisposeFn(),
        (this._isDisposed = !0);
    }
    setDisposeFn(i) {
      this._disposeFn = i;
    }
    _invokeDisposeFn() {
      this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
    }
  };
var Pa = class extends ka {
  constructor(i, e, t, n, o) {
    super(),
      (this.outletElement = i),
      (this._componentFactoryResolver = e),
      (this._appRef = t),
      (this._defaultInjector = n),
      (this.attachDomPortal = (u) => {
        this._document;
        let b = u.element;
        b.parentNode;
        let C = this._document.createComment("dom-portal");
        b.parentNode.insertBefore(C, b),
          this.outletElement.appendChild(b),
          (this._attachedPortal = u),
          super.setDisposeFn(() => {
            C.parentNode && C.parentNode.replaceChild(b, C);
          });
      }),
      (this._document = o);
  }
  attachComponentPortal(i) {
    let t = (
        i.componentFactoryResolver || this._componentFactoryResolver
      ).resolveComponentFactory(i.component),
      n;
    return (
      i.viewContainerRef
        ? ((n = i.viewContainerRef.createComponent(
            t,
            i.viewContainerRef.length,
            i.injector || i.viewContainerRef.injector,
            i.projectableNodes || void 0
          )),
          this.setDisposeFn(() => n.destroy()))
        : ((n = t.create(i.injector || this._defaultInjector || vt.NULL)),
          this._appRef.attachView(n.hostView),
          this.setDisposeFn(() => {
            this._appRef.viewCount > 0 && this._appRef.detachView(n.hostView),
              n.destroy();
          })),
      this.outletElement.appendChild(this._getComponentRootNode(n)),
      (this._attachedPortal = i),
      n
    );
  }
  attachTemplatePortal(i) {
    let e = i.viewContainerRef,
      t = e.createEmbeddedView(i.templateRef, i.context, {
        injector: i.injector,
      });
    return (
      t.rootNodes.forEach((n) => this.outletElement.appendChild(n)),
      t.detectChanges(),
      this.setDisposeFn(() => {
        let n = e.indexOf(t);
        n !== -1 && e.remove(n);
      }),
      (this._attachedPortal = i),
      t
    );
  }
  dispose() {
    super.dispose(), this.outletElement.remove();
  }
  _getComponentRootNode(i) {
    return i.hostView.rootNodes[0];
  }
};
var Vl = (() => {
  class r extends ka {
    constructor(e, t, n) {
      super(),
        (this._componentFactoryResolver = e),
        (this._viewContainerRef = t),
        (this._isInitialized = !1),
        (this.attached = new xe()),
        (this.attachDomPortal = (o) => {
          this._document;
          let u = o.element;
          u.parentNode;
          let b = this._document.createComment("dom-portal");
          o.setAttachedHost(this),
            u.parentNode.insertBefore(b, u),
            this._getRootNode().appendChild(u),
            (this._attachedPortal = o),
            super.setDisposeFn(() => {
              b.parentNode && b.parentNode.replaceChild(u, b);
            });
        }),
        (this._document = n);
    }
    get portal() {
      return this._attachedPortal;
    }
    set portal(e) {
      (this.hasAttached() && !e && !this._isInitialized) ||
        (this.hasAttached() && super.detach(),
        e && super.attach(e),
        (this._attachedPortal = e || null));
    }
    get attachedRef() {
      return this._attachedRef;
    }
    ngOnInit() {
      this._isInitialized = !0;
    }
    ngOnDestroy() {
      super.dispose(), (this._attachedRef = this._attachedPortal = null);
    }
    attachComponentPortal(e) {
      e.setAttachedHost(this);
      let t =
          e.viewContainerRef != null
            ? e.viewContainerRef
            : this._viewContainerRef,
        o = (
          e.componentFactoryResolver || this._componentFactoryResolver
        ).resolveComponentFactory(e.component),
        u = t.createComponent(
          o,
          t.length,
          e.injector || t.injector,
          e.projectableNodes || void 0
        );
      return (
        t !== this._viewContainerRef &&
          this._getRootNode().appendChild(u.hostView.rootNodes[0]),
        super.setDisposeFn(() => u.destroy()),
        (this._attachedPortal = e),
        (this._attachedRef = u),
        this.attached.emit(u),
        u
      );
    }
    attachTemplatePortal(e) {
      e.setAttachedHost(this);
      let t = this._viewContainerRef.createEmbeddedView(
        e.templateRef,
        e.context,
        { injector: e.injector }
      );
      return (
        super.setDisposeFn(() => this._viewContainerRef.clear()),
        (this._attachedPortal = e),
        (this._attachedRef = t),
        this.attached.emit(t),
        t
      );
    }
    _getRootNode() {
      let e = this._viewContainerRef.element.nativeElement;
      return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)(F(zn), F(Ni), F(Le));
      };
    }
    static {
      this.ɵdir = ke({
        type: r,
        selectors: [["", "cdkPortalOutlet", ""]],
        inputs: { portal: [0, "cdkPortalOutlet", "portal"] },
        outputs: { attached: "attached" },
        exportAs: ["cdkPortalOutlet"],
        standalone: !0,
        features: [ze],
      });
    }
  }
  return r;
})();
var Ea = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({});
    }
  }
  return r;
})();
var eu = Lp(),
  Nl = class {
    constructor(i, e) {
      (this._viewportRuler = i),
        (this._previousHTMLStyles = { top: "", left: "" }),
        (this._isEnabled = !1),
        (this._document = e);
    }
    attach() {}
    enable() {
      if (this._canBeEnabled()) {
        let i = this._document.documentElement;
        (this._previousScrollPosition =
          this._viewportRuler.getViewportScrollPosition()),
          (this._previousHTMLStyles.left = i.style.left || ""),
          (this._previousHTMLStyles.top = i.style.top || ""),
          (i.style.left = Tt(-this._previousScrollPosition.left)),
          (i.style.top = Tt(-this._previousScrollPosition.top)),
          i.classList.add("cdk-global-scrollblock"),
          (this._isEnabled = !0);
      }
    }
    disable() {
      if (this._isEnabled) {
        let i = this._document.documentElement,
          e = this._document.body,
          t = i.style,
          n = e.style,
          o = t.scrollBehavior || "",
          u = n.scrollBehavior || "";
        (this._isEnabled = !1),
          (t.left = this._previousHTMLStyles.left),
          (t.top = this._previousHTMLStyles.top),
          i.classList.remove("cdk-global-scrollblock"),
          eu && (t.scrollBehavior = n.scrollBehavior = "auto"),
          window.scroll(
            this._previousScrollPosition.left,
            this._previousScrollPosition.top
          ),
          eu && ((t.scrollBehavior = o), (n.scrollBehavior = u));
      }
    }
    _canBeEnabled() {
      if (
        this._document.documentElement.classList.contains(
          "cdk-global-scrollblock"
        ) ||
        this._isEnabled
      )
        return !1;
      let e = this._document.body,
        t = this._viewportRuler.getViewportSize();
      return e.scrollHeight > t.height || e.scrollWidth > t.width;
    }
  };
var Ll = class {
    constructor(i, e, t, n) {
      (this._scrollDispatcher = i),
        (this._ngZone = e),
        (this._viewportRuler = t),
        (this._config = n),
        (this._scrollSubscription = null),
        (this._detach = () => {
          this.disable(),
            this._overlayRef.hasAttached() &&
              this._ngZone.run(() => this._overlayRef.detach());
        });
    }
    attach(i) {
      this._overlayRef, (this._overlayRef = i);
    }
    enable() {
      if (this._scrollSubscription) return;
      let i = this._scrollDispatcher
        .scrolled(0)
        .pipe(
          zt(
            (e) =>
              !e ||
              !this._overlayRef.overlayElement.contains(
                e.getElementRef().nativeElement
              )
          )
        );
      this._config && this._config.threshold && this._config.threshold > 1
        ? ((this._initialScrollPosition =
            this._viewportRuler.getViewportScrollPosition().top),
          (this._scrollSubscription = i.subscribe(() => {
            let e = this._viewportRuler.getViewportScrollPosition().top;
            Math.abs(e - this._initialScrollPosition) > this._config.threshold
              ? this._detach()
              : this._overlayRef.updatePosition();
          })))
        : (this._scrollSubscription = i.subscribe(this._detach));
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  Ia = class {
    enable() {}
    disable() {}
    attach() {}
  };
function Bl(r, i) {
  return i.some((e) => {
    let t = r.bottom < e.top,
      n = r.top > e.bottom,
      o = r.right < e.left,
      u = r.left > e.right;
    return t || n || o || u;
  });
}
function tu(r, i) {
  return i.some((e) => {
    let t = r.top < e.top,
      n = r.bottom > e.bottom,
      o = r.left < e.left,
      u = r.right > e.right;
    return t || n || o || u;
  });
}
var Hl = class {
    constructor(i, e, t, n) {
      (this._scrollDispatcher = i),
        (this._viewportRuler = e),
        (this._ngZone = t),
        (this._config = n),
        (this._scrollSubscription = null);
    }
    attach(i) {
      this._overlayRef, (this._overlayRef = i);
    }
    enable() {
      if (!this._scrollSubscription) {
        let i = this._config ? this._config.scrollThrottle : 0;
        this._scrollSubscription = this._scrollDispatcher
          .scrolled(i)
          .subscribe(() => {
            if (
              (this._overlayRef.updatePosition(),
              this._config && this._config.autoClose)
            ) {
              let e = this._overlayRef.overlayElement.getBoundingClientRect(),
                { width: t, height: n } = this._viewportRuler.getViewportSize();
              Bl(e, [
                { width: t, height: n, bottom: n, right: t, top: 0, left: 0 },
              ]) &&
                (this.disable(),
                this._ngZone.run(() => this._overlayRef.detach()));
            }
          });
      }
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  M0 = (() => {
    class r {
      constructor(e, t, n, o) {
        (this._scrollDispatcher = e),
          (this._viewportRuler = t),
          (this._ngZone = n),
          (this.noop = () => new Ia()),
          (this.close = (u) =>
            new Ll(
              this._scrollDispatcher,
              this._ngZone,
              this._viewportRuler,
              u
            )),
          (this.block = () => new Nl(this._viewportRuler, this._document)),
          (this.reposition = (u) =>
            new Hl(
              this._scrollDispatcher,
              this._viewportRuler,
              this._ngZone,
              u
            )),
          (this._document = o);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(Jp), ie(Al), ie(Ie), ie(Le));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  Aa = class {
    constructor(i) {
      if (
        ((this.scrollStrategy = new Ia()),
        (this.panelClass = ""),
        (this.hasBackdrop = !1),
        (this.backdropClass = "cdk-overlay-dark-backdrop"),
        (this.disposeOnNavigation = !1),
        i)
      ) {
        let e = Object.keys(i);
        for (let t of e) i[t] !== void 0 && (this[t] = i[t]);
      }
    }
  };
var jl = class {
  constructor(i, e) {
    (this.connectionPair = i), (this.scrollableViewProperties = e);
  }
};
var su = (() => {
    class r {
      constructor(e) {
        (this._attachedOverlays = []), (this._document = e);
      }
      ngOnDestroy() {
        this.detach();
      }
      add(e) {
        this.remove(e), this._attachedOverlays.push(e);
      }
      remove(e) {
        let t = this._attachedOverlays.indexOf(e);
        t > -1 && this._attachedOverlays.splice(t, 1),
          this._attachedOverlays.length === 0 && this.detach();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(Le));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  O0 = (() => {
    class r extends su {
      constructor(e, t) {
        super(e),
          (this._ngZone = t),
          (this._keydownListener = (n) => {
            let o = this._attachedOverlays;
            for (let u = o.length - 1; u > -1; u--)
              if (o[u]._keydownEvents.observers.length > 0) {
                let b = o[u]._keydownEvents;
                this._ngZone ? this._ngZone.run(() => b.next(n)) : b.next(n);
                break;
              }
          });
      }
      add(e) {
        super.add(e),
          this._isAttached ||
            (this._ngZone
              ? this._ngZone.runOutsideAngular(() =>
                  this._document.body.addEventListener(
                    "keydown",
                    this._keydownListener
                  )
                )
              : this._document.body.addEventListener(
                  "keydown",
                  this._keydownListener
                ),
            (this._isAttached = !0));
      }
      detach() {
        this._isAttached &&
          (this._document.body.removeEventListener(
            "keydown",
            this._keydownListener
          ),
          (this._isAttached = !1));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(Le), ie(Ie, 8));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  T0 = (() => {
    class r extends su {
      constructor(e, t, n) {
        super(e),
          (this._platform = t),
          (this._ngZone = n),
          (this._cursorStyleIsSet = !1),
          (this._pointerDownListener = (o) => {
            this._pointerDownEventTarget = Ti(o);
          }),
          (this._clickListener = (o) => {
            let u = Ti(o),
              b =
                o.type === "click" && this._pointerDownEventTarget
                  ? this._pointerDownEventTarget
                  : u;
            this._pointerDownEventTarget = null;
            let C = this._attachedOverlays.slice();
            for (let T = C.length - 1; T > -1; T--) {
              let k = C[T];
              if (
                k._outsidePointerEvents.observers.length < 1 ||
                !k.hasAttached()
              )
                continue;
              if (iu(k.overlayElement, u) || iu(k.overlayElement, b)) break;
              let V = k._outsidePointerEvents;
              this._ngZone ? this._ngZone.run(() => V.next(o)) : V.next(o);
            }
          });
      }
      add(e) {
        if ((super.add(e), !this._isAttached)) {
          let t = this._document.body;
          this._ngZone
            ? this._ngZone.runOutsideAngular(() => this._addEventListeners(t))
            : this._addEventListeners(t),
            this._platform.IOS &&
              !this._cursorStyleIsSet &&
              ((this._cursorOriginalValue = t.style.cursor),
              (t.style.cursor = "pointer"),
              (this._cursorStyleIsSet = !0)),
            (this._isAttached = !0);
        }
      }
      detach() {
        if (this._isAttached) {
          let e = this._document.body;
          e.removeEventListener("pointerdown", this._pointerDownListener, !0),
            e.removeEventListener("click", this._clickListener, !0),
            e.removeEventListener("auxclick", this._clickListener, !0),
            e.removeEventListener("contextmenu", this._clickListener, !0),
            this._platform.IOS &&
              this._cursorStyleIsSet &&
              ((e.style.cursor = this._cursorOriginalValue),
              (this._cursorStyleIsSet = !1)),
            (this._isAttached = !1);
        }
      }
      _addEventListeners(e) {
        e.addEventListener("pointerdown", this._pointerDownListener, !0),
          e.addEventListener("click", this._clickListener, !0),
          e.addEventListener("auxclick", this._clickListener, !0),
          e.addEventListener("contextmenu", this._clickListener, !0);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(Le), ie(mt), ie(Ie, 8));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })();
function iu(r, i) {
  let e = typeof ShadowRoot < "u" && ShadowRoot,
    t = i;
  for (; t; ) {
    if (t === r) return !0;
    t = e && t instanceof ShadowRoot ? t.host : t.parentNode;
  }
  return !1;
}
var lu = (() => {
    class r {
      constructor(e, t) {
        (this._platform = t), (this._document = e);
      }
      ngOnDestroy() {
        this._containerElement?.remove();
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = "cdk-overlay-container";
        if (this._platform.isBrowser || ho()) {
          let n = this._document.querySelectorAll(
            `.${e}[platform="server"], .${e}[platform="test"]`
          );
          for (let o = 0; o < n.length; o++) n[o].remove();
        }
        let t = this._document.createElement("div");
        t.classList.add(e),
          ho()
            ? t.setAttribute("platform", "test")
            : this._platform.isBrowser || t.setAttribute("platform", "server"),
          this._document.body.appendChild(t),
          (this._containerElement = t);
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(Le), ie(mt));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  zl = class {
    constructor(i, e, t, n, o, u, b, C, T, k = !1, V) {
      (this._portalOutlet = i),
        (this._host = e),
        (this._pane = t),
        (this._config = n),
        (this._ngZone = o),
        (this._keyboardDispatcher = u),
        (this._document = b),
        (this._location = C),
        (this._outsideClickDispatcher = T),
        (this._animationsDisabled = k),
        (this._injector = V),
        (this._backdropElement = null),
        (this._backdropClick = new Ee()),
        (this._attachments = new Ee()),
        (this._detachments = new Ee()),
        (this._locationChanges = Ai.EMPTY),
        (this._backdropClickHandler = (B) => this._backdropClick.next(B)),
        (this._backdropTransitionendHandler = (B) => {
          this._disposeBackdrop(B.target);
        }),
        (this._keydownEvents = new Ee()),
        (this._outsidePointerEvents = new Ee()),
        (this._renders = new Ee()),
        n.scrollStrategy &&
          ((this._scrollStrategy = n.scrollStrategy),
          this._scrollStrategy.attach(this)),
        (this._positionStrategy = n.positionStrategy),
        (this._afterRenderRef = Hi(() =>
          Gs(
            () => {
              this._renders.next();
            },
            { injector: this._injector }
          )
        ));
    }
    get overlayElement() {
      return this._pane;
    }
    get backdropElement() {
      return this._backdropElement;
    }
    get hostElement() {
      return this._host;
    }
    attach(i) {
      !this._host.parentElement &&
        this._previousHostParent &&
        this._previousHostParent.appendChild(this._host);
      let e = this._portalOutlet.attach(i);
      return (
        this._positionStrategy && this._positionStrategy.attach(this),
        this._updateStackingOrder(),
        this._updateElementSize(),
        this._updateElementDirection(),
        this._scrollStrategy && this._scrollStrategy.enable(),
        this._afterNextRenderRef?.destroy(),
        (this._afterNextRenderRef = dn(
          () => {
            this.hasAttached() && this.updatePosition();
          },
          { injector: this._injector }
        )),
        this._togglePointerEvents(!0),
        this._config.hasBackdrop && this._attachBackdrop(),
        this._config.panelClass &&
          this._toggleClasses(this._pane, this._config.panelClass, !0),
        this._attachments.next(),
        this._keyboardDispatcher.add(this),
        this._config.disposeOnNavigation &&
          (this._locationChanges = this._location.subscribe(() =>
            this.dispose()
          )),
        this._outsideClickDispatcher.add(this),
        typeof e?.onDestroy == "function" &&
          e.onDestroy(() => {
            this.hasAttached() &&
              this._ngZone.runOutsideAngular(() =>
                Promise.resolve().then(() => this.detach())
              );
          }),
        e
      );
    }
    detach() {
      if (!this.hasAttached()) return;
      this.detachBackdrop(),
        this._togglePointerEvents(!1),
        this._positionStrategy &&
          this._positionStrategy.detach &&
          this._positionStrategy.detach(),
        this._scrollStrategy && this._scrollStrategy.disable();
      let i = this._portalOutlet.detach();
      return (
        this._detachments.next(),
        this._keyboardDispatcher.remove(this),
        this._detachContentWhenEmpty(),
        this._locationChanges.unsubscribe(),
        this._outsideClickDispatcher.remove(this),
        i
      );
    }
    dispose() {
      let i = this.hasAttached();
      this._positionStrategy && this._positionStrategy.dispose(),
        this._disposeScrollStrategy(),
        this._disposeBackdrop(this._backdropElement),
        this._locationChanges.unsubscribe(),
        this._keyboardDispatcher.remove(this),
        this._portalOutlet.dispose(),
        this._attachments.complete(),
        this._backdropClick.complete(),
        this._keydownEvents.complete(),
        this._outsidePointerEvents.complete(),
        this._outsideClickDispatcher.remove(this),
        this._host?.remove(),
        this._afterNextRenderRef?.destroy(),
        (this._previousHostParent = this._pane = this._host = null),
        i && this._detachments.next(),
        this._detachments.complete(),
        this._afterRenderRef.destroy(),
        this._renders.complete();
    }
    hasAttached() {
      return this._portalOutlet.hasAttached();
    }
    backdropClick() {
      return this._backdropClick;
    }
    attachments() {
      return this._attachments;
    }
    detachments() {
      return this._detachments;
    }
    keydownEvents() {
      return this._keydownEvents;
    }
    outsidePointerEvents() {
      return this._outsidePointerEvents;
    }
    getConfig() {
      return this._config;
    }
    updatePosition() {
      this._positionStrategy && this._positionStrategy.apply();
    }
    updatePositionStrategy(i) {
      i !== this._positionStrategy &&
        (this._positionStrategy && this._positionStrategy.dispose(),
        (this._positionStrategy = i),
        this.hasAttached() && (i.attach(this), this.updatePosition()));
    }
    updateSize(i) {
      (this._config = ee(ee({}, this._config), i)), this._updateElementSize();
    }
    setDirection(i) {
      (this._config = Ne(ee({}, this._config), { direction: i })),
        this._updateElementDirection();
    }
    addPanelClass(i) {
      this._pane && this._toggleClasses(this._pane, i, !0);
    }
    removePanelClass(i) {
      this._pane && this._toggleClasses(this._pane, i, !1);
    }
    getDirection() {
      let i = this._config.direction;
      return i ? (typeof i == "string" ? i : i.value) : "ltr";
    }
    updateScrollStrategy(i) {
      i !== this._scrollStrategy &&
        (this._disposeScrollStrategy(),
        (this._scrollStrategy = i),
        this.hasAttached() && (i.attach(this), i.enable()));
    }
    _updateElementDirection() {
      this._host.setAttribute("dir", this.getDirection());
    }
    _updateElementSize() {
      if (!this._pane) return;
      let i = this._pane.style;
      (i.width = Tt(this._config.width)),
        (i.height = Tt(this._config.height)),
        (i.minWidth = Tt(this._config.minWidth)),
        (i.minHeight = Tt(this._config.minHeight)),
        (i.maxWidth = Tt(this._config.maxWidth)),
        (i.maxHeight = Tt(this._config.maxHeight));
    }
    _togglePointerEvents(i) {
      this._pane.style.pointerEvents = i ? "" : "none";
    }
    _attachBackdrop() {
      let i = "cdk-overlay-backdrop-showing";
      (this._backdropElement = this._document.createElement("div")),
        this._backdropElement.classList.add("cdk-overlay-backdrop"),
        this._animationsDisabled &&
          this._backdropElement.classList.add(
            "cdk-overlay-backdrop-noop-animation"
          ),
        this._config.backdropClass &&
          this._toggleClasses(
            this._backdropElement,
            this._config.backdropClass,
            !0
          ),
        this._host.parentElement.insertBefore(
          this._backdropElement,
          this._host
        ),
        this._backdropElement.addEventListener(
          "click",
          this._backdropClickHandler
        ),
        !this._animationsDisabled && typeof requestAnimationFrame < "u"
          ? this._ngZone.runOutsideAngular(() => {
              requestAnimationFrame(() => {
                this._backdropElement && this._backdropElement.classList.add(i);
              });
            })
          : this._backdropElement.classList.add(i);
    }
    _updateStackingOrder() {
      this._host.nextSibling && this._host.parentNode.appendChild(this._host);
    }
    detachBackdrop() {
      let i = this._backdropElement;
      if (i) {
        if (this._animationsDisabled) {
          this._disposeBackdrop(i);
          return;
        }
        i.classList.remove("cdk-overlay-backdrop-showing"),
          this._ngZone.runOutsideAngular(() => {
            i.addEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            );
          }),
          (i.style.pointerEvents = "none"),
          (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
            setTimeout(() => {
              this._disposeBackdrop(i);
            }, 500)
          ));
      }
    }
    _toggleClasses(i, e, t) {
      let n = Tr(e || []).filter((o) => !!o);
      n.length && (t ? i.classList.add(...n) : i.classList.remove(...n));
    }
    _detachContentWhenEmpty() {
      this._ngZone.runOutsideAngular(() => {
        let i = this._renders
          .pipe(kt(mr(this._attachments, this._detachments)))
          .subscribe(() => {
            (!this._pane || !this._host || this._pane.children.length === 0) &&
              (this._pane &&
                this._config.panelClass &&
                this._toggleClasses(this._pane, this._config.panelClass, !1),
              this._host &&
                this._host.parentElement &&
                ((this._previousHostParent = this._host.parentElement),
                this._host.remove()),
              i.unsubscribe());
          });
      });
    }
    _disposeScrollStrategy() {
      let i = this._scrollStrategy;
      i && (i.disable(), i.detach && i.detach());
    }
    _disposeBackdrop(i) {
      i &&
        (i.removeEventListener("click", this._backdropClickHandler),
        i.removeEventListener(
          "transitionend",
          this._backdropTransitionendHandler
        ),
        i.remove(),
        this._backdropElement === i && (this._backdropElement = null)),
        this._backdropTimeout &&
          (clearTimeout(this._backdropTimeout),
          (this._backdropTimeout = void 0));
    }
  },
  nu = "cdk-overlay-connected-position-bounding-box",
  k0 = /([A-Za-z%]+)$/,
  Fa = class {
    get positions() {
      return this._preferredPositions;
    }
    constructor(i, e, t, n, o) {
      (this._viewportRuler = e),
        (this._document = t),
        (this._platform = n),
        (this._overlayContainer = o),
        (this._lastBoundingBoxSize = { width: 0, height: 0 }),
        (this._isPushed = !1),
        (this._canPush = !0),
        (this._growAfterOpen = !1),
        (this._hasFlexibleDimensions = !0),
        (this._positionLocked = !1),
        (this._viewportMargin = 0),
        (this._scrollables = []),
        (this._preferredPositions = []),
        (this._positionChanges = new Ee()),
        (this._resizeSubscription = Ai.EMPTY),
        (this._offsetX = 0),
        (this._offsetY = 0),
        (this._appliedPanelClasses = []),
        (this.positionChanges = this._positionChanges),
        this.setOrigin(i);
    }
    attach(i) {
      this._overlayRef && this._overlayRef,
        this._validatePositions(),
        i.hostElement.classList.add(nu),
        (this._overlayRef = i),
        (this._boundingBox = i.hostElement),
        (this._pane = i.overlayElement),
        (this._isDisposed = !1),
        (this._isInitialRender = !0),
        (this._lastPosition = null),
        this._resizeSubscription.unsubscribe(),
        (this._resizeSubscription = this._viewportRuler
          .change()
          .subscribe(() => {
            (this._isInitialRender = !0), this.apply();
          }));
    }
    apply() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      if (
        !this._isInitialRender &&
        this._positionLocked &&
        this._lastPosition
      ) {
        this.reapplyLastPosition();
        return;
      }
      this._clearPanelClasses(),
        this._resetOverlayElementStyles(),
        this._resetBoundingBoxStyles(),
        (this._viewportRect = this._getNarrowedViewportRect()),
        (this._originRect = this._getOriginRect()),
        (this._overlayRect = this._pane.getBoundingClientRect()),
        (this._containerRect = this._overlayContainer
          .getContainerElement()
          .getBoundingClientRect());
      let i = this._originRect,
        e = this._overlayRect,
        t = this._viewportRect,
        n = this._containerRect,
        o = [],
        u;
      for (let b of this._preferredPositions) {
        let C = this._getOriginPoint(i, n, b),
          T = this._getOverlayPoint(C, e, b),
          k = this._getOverlayFit(T, e, t, b);
        if (k.isCompletelyWithinViewport) {
          (this._isPushed = !1), this._applyPosition(b, C);
          return;
        }
        if (this._canFitWithFlexibleDimensions(k, T, t)) {
          o.push({
            position: b,
            origin: C,
            overlayRect: e,
            boundingBoxRect: this._calculateBoundingBoxRect(C, b),
          });
          continue;
        }
        (!u || u.overlayFit.visibleArea < k.visibleArea) &&
          (u = {
            overlayFit: k,
            overlayPoint: T,
            originPoint: C,
            position: b,
            overlayRect: e,
          });
      }
      if (o.length) {
        let b = null,
          C = -1;
        for (let T of o) {
          let k =
            T.boundingBoxRect.width *
            T.boundingBoxRect.height *
            (T.position.weight || 1);
          k > C && ((C = k), (b = T));
        }
        (this._isPushed = !1), this._applyPosition(b.position, b.origin);
        return;
      }
      if (this._canPush) {
        (this._isPushed = !0), this._applyPosition(u.position, u.originPoint);
        return;
      }
      this._applyPosition(u.position, u.originPoint);
    }
    detach() {
      this._clearPanelClasses(),
        (this._lastPosition = null),
        (this._previousPushAmount = null),
        this._resizeSubscription.unsubscribe();
    }
    dispose() {
      this._isDisposed ||
        (this._boundingBox &&
          Jn(this._boundingBox.style, {
            top: "",
            left: "",
            right: "",
            bottom: "",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          }),
        this._pane && this._resetOverlayElementStyles(),
        this._overlayRef && this._overlayRef.hostElement.classList.remove(nu),
        this.detach(),
        this._positionChanges.complete(),
        (this._overlayRef = this._boundingBox = null),
        (this._isDisposed = !0));
    }
    reapplyLastPosition() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      let i = this._lastPosition;
      if (i) {
        (this._originRect = this._getOriginRect()),
          (this._overlayRect = this._pane.getBoundingClientRect()),
          (this._viewportRect = this._getNarrowedViewportRect()),
          (this._containerRect = this._overlayContainer
            .getContainerElement()
            .getBoundingClientRect());
        let e = this._getOriginPoint(this._originRect, this._containerRect, i);
        this._applyPosition(i, e);
      } else this.apply();
    }
    withScrollableContainers(i) {
      return (this._scrollables = i), this;
    }
    withPositions(i) {
      return (
        (this._preferredPositions = i),
        i.indexOf(this._lastPosition) === -1 && (this._lastPosition = null),
        this._validatePositions(),
        this
      );
    }
    withViewportMargin(i) {
      return (this._viewportMargin = i), this;
    }
    withFlexibleDimensions(i = !0) {
      return (this._hasFlexibleDimensions = i), this;
    }
    withGrowAfterOpen(i = !0) {
      return (this._growAfterOpen = i), this;
    }
    withPush(i = !0) {
      return (this._canPush = i), this;
    }
    withLockedPosition(i = !0) {
      return (this._positionLocked = i), this;
    }
    setOrigin(i) {
      return (this._origin = i), this;
    }
    withDefaultOffsetX(i) {
      return (this._offsetX = i), this;
    }
    withDefaultOffsetY(i) {
      return (this._offsetY = i), this;
    }
    withTransformOriginOn(i) {
      return (this._transformOriginSelector = i), this;
    }
    _getOriginPoint(i, e, t) {
      let n;
      if (t.originX == "center") n = i.left + i.width / 2;
      else {
        let u = this._isRtl() ? i.right : i.left,
          b = this._isRtl() ? i.left : i.right;
        n = t.originX == "start" ? u : b;
      }
      e.left < 0 && (n -= e.left);
      let o;
      return (
        t.originY == "center"
          ? (o = i.top + i.height / 2)
          : (o = t.originY == "top" ? i.top : i.bottom),
        e.top < 0 && (o -= e.top),
        { x: n, y: o }
      );
    }
    _getOverlayPoint(i, e, t) {
      let n;
      t.overlayX == "center"
        ? (n = -e.width / 2)
        : t.overlayX === "start"
        ? (n = this._isRtl() ? -e.width : 0)
        : (n = this._isRtl() ? 0 : -e.width);
      let o;
      return (
        t.overlayY == "center"
          ? (o = -e.height / 2)
          : (o = t.overlayY == "top" ? 0 : -e.height),
        { x: i.x + n, y: i.y + o }
      );
    }
    _getOverlayFit(i, e, t, n) {
      let o = ou(e),
        { x: u, y: b } = i,
        C = this._getOffset(n, "x"),
        T = this._getOffset(n, "y");
      C && (u += C), T && (b += T);
      let k = 0 - u,
        V = u + o.width - t.width,
        B = 0 - b,
        L = b + o.height - t.height,
        H = this._subtractOverflows(o.width, k, V),
        U = this._subtractOverflows(o.height, B, L),
        j = H * U;
      return {
        visibleArea: j,
        isCompletelyWithinViewport: o.width * o.height === j,
        fitsInViewportVertically: U === o.height,
        fitsInViewportHorizontally: H == o.width,
      };
    }
    _canFitWithFlexibleDimensions(i, e, t) {
      if (this._hasFlexibleDimensions) {
        let n = t.bottom - e.y,
          o = t.right - e.x,
          u = ru(this._overlayRef.getConfig().minHeight),
          b = ru(this._overlayRef.getConfig().minWidth),
          C = i.fitsInViewportVertically || (u != null && u <= n),
          T = i.fitsInViewportHorizontally || (b != null && b <= o);
        return C && T;
      }
      return !1;
    }
    _pushOverlayOnScreen(i, e, t) {
      if (this._previousPushAmount && this._positionLocked)
        return {
          x: i.x + this._previousPushAmount.x,
          y: i.y + this._previousPushAmount.y,
        };
      let n = ou(e),
        o = this._viewportRect,
        u = Math.max(i.x + n.width - o.width, 0),
        b = Math.max(i.y + n.height - o.height, 0),
        C = Math.max(o.top - t.top - i.y, 0),
        T = Math.max(o.left - t.left - i.x, 0),
        k = 0,
        V = 0;
      return (
        n.width <= o.width
          ? (k = T || -u)
          : (k = i.x < this._viewportMargin ? o.left - t.left - i.x : 0),
        n.height <= o.height
          ? (V = C || -b)
          : (V = i.y < this._viewportMargin ? o.top - t.top - i.y : 0),
        (this._previousPushAmount = { x: k, y: V }),
        { x: i.x + k, y: i.y + V }
      );
    }
    _applyPosition(i, e) {
      if (
        (this._setTransformOrigin(i),
        this._setOverlayElementStyles(e, i),
        this._setBoundingBoxStyles(e, i),
        i.panelClass && this._addPanelClasses(i.panelClass),
        this._positionChanges.observers.length)
      ) {
        let t = this._getScrollVisibility();
        if (
          i !== this._lastPosition ||
          !this._lastScrollVisibility ||
          !P0(this._lastScrollVisibility, t)
        ) {
          let n = new jl(i, t);
          this._positionChanges.next(n);
        }
        this._lastScrollVisibility = t;
      }
      (this._lastPosition = i), (this._isInitialRender = !1);
    }
    _setTransformOrigin(i) {
      if (!this._transformOriginSelector) return;
      let e = this._boundingBox.querySelectorAll(this._transformOriginSelector),
        t,
        n = i.overlayY;
      i.overlayX === "center"
        ? (t = "center")
        : this._isRtl()
        ? (t = i.overlayX === "start" ? "right" : "left")
        : (t = i.overlayX === "start" ? "left" : "right");
      for (let o = 0; o < e.length; o++)
        e[o].style.transformOrigin = `${t} ${n}`;
    }
    _calculateBoundingBoxRect(i, e) {
      let t = this._viewportRect,
        n = this._isRtl(),
        o,
        u,
        b;
      if (e.overlayY === "top")
        (u = i.y), (o = t.height - u + this._viewportMargin);
      else if (e.overlayY === "bottom")
        (b = t.height - i.y + this._viewportMargin * 2),
          (o = t.height - b + this._viewportMargin);
      else {
        let L = Math.min(t.bottom - i.y + t.top, i.y),
          H = this._lastBoundingBoxSize.height;
        (o = L * 2),
          (u = i.y - L),
          o > H &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (u = i.y - H / 2);
      }
      let C = (e.overlayX === "start" && !n) || (e.overlayX === "end" && n),
        T = (e.overlayX === "end" && !n) || (e.overlayX === "start" && n),
        k,
        V,
        B;
      if (T)
        (B = t.width - i.x + this._viewportMargin * 2),
          (k = i.x - this._viewportMargin);
      else if (C) (V = i.x), (k = t.right - i.x);
      else {
        let L = Math.min(t.right - i.x + t.left, i.x),
          H = this._lastBoundingBoxSize.width;
        (k = L * 2),
          (V = i.x - L),
          k > H &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (V = i.x - H / 2);
      }
      return { top: u, left: V, bottom: b, right: B, width: k, height: o };
    }
    _setBoundingBoxStyles(i, e) {
      let t = this._calculateBoundingBoxRect(i, e);
      !this._isInitialRender &&
        !this._growAfterOpen &&
        ((t.height = Math.min(t.height, this._lastBoundingBoxSize.height)),
        (t.width = Math.min(t.width, this._lastBoundingBoxSize.width)));
      let n = {};
      if (this._hasExactPosition())
        (n.top = n.left = "0"),
          (n.bottom = n.right = n.maxHeight = n.maxWidth = ""),
          (n.width = n.height = "100%");
      else {
        let o = this._overlayRef.getConfig().maxHeight,
          u = this._overlayRef.getConfig().maxWidth;
        (n.height = Tt(t.height)),
          (n.top = Tt(t.top)),
          (n.bottom = Tt(t.bottom)),
          (n.width = Tt(t.width)),
          (n.left = Tt(t.left)),
          (n.right = Tt(t.right)),
          e.overlayX === "center"
            ? (n.alignItems = "center")
            : (n.alignItems = e.overlayX === "end" ? "flex-end" : "flex-start"),
          e.overlayY === "center"
            ? (n.justifyContent = "center")
            : (n.justifyContent =
                e.overlayY === "bottom" ? "flex-end" : "flex-start"),
          o && (n.maxHeight = Tt(o)),
          u && (n.maxWidth = Tt(u));
      }
      (this._lastBoundingBoxSize = t), Jn(this._boundingBox.style, n);
    }
    _resetBoundingBoxStyles() {
      Jn(this._boundingBox.style, {
        top: "0",
        left: "0",
        right: "0",
        bottom: "0",
        height: "",
        width: "",
        alignItems: "",
        justifyContent: "",
      });
    }
    _resetOverlayElementStyles() {
      Jn(this._pane.style, {
        top: "",
        left: "",
        bottom: "",
        right: "",
        position: "",
        transform: "",
      });
    }
    _setOverlayElementStyles(i, e) {
      let t = {},
        n = this._hasExactPosition(),
        o = this._hasFlexibleDimensions,
        u = this._overlayRef.getConfig();
      if (n) {
        let k = this._viewportRuler.getViewportScrollPosition();
        Jn(t, this._getExactOverlayY(e, i, k)),
          Jn(t, this._getExactOverlayX(e, i, k));
      } else t.position = "static";
      let b = "",
        C = this._getOffset(e, "x"),
        T = this._getOffset(e, "y");
      C && (b += `translateX(${C}px) `),
        T && (b += `translateY(${T}px)`),
        (t.transform = b.trim()),
        u.maxHeight &&
          (n ? (t.maxHeight = Tt(u.maxHeight)) : o && (t.maxHeight = "")),
        u.maxWidth &&
          (n ? (t.maxWidth = Tt(u.maxWidth)) : o && (t.maxWidth = "")),
        Jn(this._pane.style, t);
    }
    _getExactOverlayY(i, e, t) {
      let n = { top: "", bottom: "" },
        o = this._getOverlayPoint(e, this._overlayRect, i);
      if (
        (this._isPushed &&
          (o = this._pushOverlayOnScreen(o, this._overlayRect, t)),
        i.overlayY === "bottom")
      ) {
        let u = this._document.documentElement.clientHeight;
        n.bottom = `${u - (o.y + this._overlayRect.height)}px`;
      } else n.top = Tt(o.y);
      return n;
    }
    _getExactOverlayX(i, e, t) {
      let n = { left: "", right: "" },
        o = this._getOverlayPoint(e, this._overlayRect, i);
      this._isPushed &&
        (o = this._pushOverlayOnScreen(o, this._overlayRect, t));
      let u;
      if (
        (this._isRtl()
          ? (u = i.overlayX === "end" ? "left" : "right")
          : (u = i.overlayX === "end" ? "right" : "left"),
        u === "right")
      ) {
        let b = this._document.documentElement.clientWidth;
        n.right = `${b - (o.x + this._overlayRect.width)}px`;
      } else n.left = Tt(o.x);
      return n;
    }
    _getScrollVisibility() {
      let i = this._getOriginRect(),
        e = this._pane.getBoundingClientRect(),
        t = this._scrollables.map((n) =>
          n.getElementRef().nativeElement.getBoundingClientRect()
        );
      return {
        isOriginClipped: tu(i, t),
        isOriginOutsideView: Bl(i, t),
        isOverlayClipped: tu(e, t),
        isOverlayOutsideView: Bl(e, t),
      };
    }
    _subtractOverflows(i, ...e) {
      return e.reduce((t, n) => t - Math.max(n, 0), i);
    }
    _getNarrowedViewportRect() {
      let i = this._document.documentElement.clientWidth,
        e = this._document.documentElement.clientHeight,
        t = this._viewportRuler.getViewportScrollPosition();
      return {
        top: t.top + this._viewportMargin,
        left: t.left + this._viewportMargin,
        right: t.left + i - this._viewportMargin,
        bottom: t.top + e - this._viewportMargin,
        width: i - 2 * this._viewportMargin,
        height: e - 2 * this._viewportMargin,
      };
    }
    _isRtl() {
      return this._overlayRef.getDirection() === "rtl";
    }
    _hasExactPosition() {
      return !this._hasFlexibleDimensions || this._isPushed;
    }
    _getOffset(i, e) {
      return e === "x"
        ? i.offsetX == null
          ? this._offsetX
          : i.offsetX
        : i.offsetY == null
        ? this._offsetY
        : i.offsetY;
    }
    _validatePositions() {}
    _addPanelClasses(i) {
      this._pane &&
        Tr(i).forEach((e) => {
          e !== "" &&
            this._appliedPanelClasses.indexOf(e) === -1 &&
            (this._appliedPanelClasses.push(e), this._pane.classList.add(e));
        });
    }
    _clearPanelClasses() {
      this._pane &&
        (this._appliedPanelClasses.forEach((i) => {
          this._pane.classList.remove(i);
        }),
        (this._appliedPanelClasses = []));
    }
    _getOriginRect() {
      let i = this._origin;
      if (i instanceof Pe) return i.nativeElement.getBoundingClientRect();
      if (i instanceof Element) return i.getBoundingClientRect();
      let e = i.width || 0,
        t = i.height || 0;
      return {
        top: i.y,
        bottom: i.y + t,
        left: i.x,
        right: i.x + e,
        height: t,
        width: e,
      };
    }
  };
function Jn(r, i) {
  for (let e in i) i.hasOwnProperty(e) && (r[e] = i[e]);
  return r;
}
function ru(r) {
  if (typeof r != "number" && r != null) {
    let [i, e] = r.split(k0);
    return !e || e === "px" ? parseFloat(i) : null;
  }
  return r || null;
}
function ou(r) {
  return {
    top: Math.floor(r.top),
    right: Math.floor(r.right),
    bottom: Math.floor(r.bottom),
    left: Math.floor(r.left),
    width: Math.floor(r.width),
    height: Math.floor(r.height),
  };
}
function P0(r, i) {
  return r === i
    ? !0
    : r.isOriginClipped === i.isOriginClipped &&
        r.isOriginOutsideView === i.isOriginOutsideView &&
        r.isOverlayClipped === i.isOverlayClipped &&
        r.isOverlayOutsideView === i.isOverlayOutsideView;
}
var au = "cdk-global-overlay-wrapper",
  Ul = class {
    constructor() {
      (this._cssPosition = "static"),
        (this._topOffset = ""),
        (this._bottomOffset = ""),
        (this._alignItems = ""),
        (this._xPosition = ""),
        (this._xOffset = ""),
        (this._width = ""),
        (this._height = ""),
        (this._isDisposed = !1);
    }
    attach(i) {
      let e = i.getConfig();
      (this._overlayRef = i),
        this._width && !e.width && i.updateSize({ width: this._width }),
        this._height && !e.height && i.updateSize({ height: this._height }),
        i.hostElement.classList.add(au),
        (this._isDisposed = !1);
    }
    top(i = "") {
      return (
        (this._bottomOffset = ""),
        (this._topOffset = i),
        (this._alignItems = "flex-start"),
        this
      );
    }
    left(i = "") {
      return (this._xOffset = i), (this._xPosition = "left"), this;
    }
    bottom(i = "") {
      return (
        (this._topOffset = ""),
        (this._bottomOffset = i),
        (this._alignItems = "flex-end"),
        this
      );
    }
    right(i = "") {
      return (this._xOffset = i), (this._xPosition = "right"), this;
    }
    start(i = "") {
      return (this._xOffset = i), (this._xPosition = "start"), this;
    }
    end(i = "") {
      return (this._xOffset = i), (this._xPosition = "end"), this;
    }
    width(i = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ width: i })
          : (this._width = i),
        this
      );
    }
    height(i = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ height: i })
          : (this._height = i),
        this
      );
    }
    centerHorizontally(i = "") {
      return this.left(i), (this._xPosition = "center"), this;
    }
    centerVertically(i = "") {
      return this.top(i), (this._alignItems = "center"), this;
    }
    apply() {
      if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
      let i = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement.style,
        t = this._overlayRef.getConfig(),
        { width: n, height: o, maxWidth: u, maxHeight: b } = t,
        C =
          (n === "100%" || n === "100vw") &&
          (!u || u === "100%" || u === "100vw"),
        T =
          (o === "100%" || o === "100vh") &&
          (!b || b === "100%" || b === "100vh"),
        k = this._xPosition,
        V = this._xOffset,
        B = this._overlayRef.getConfig().direction === "rtl",
        L = "",
        H = "",
        U = "";
      C
        ? (U = "flex-start")
        : k === "center"
        ? ((U = "center"), B ? (H = V) : (L = V))
        : B
        ? k === "left" || k === "end"
          ? ((U = "flex-end"), (L = V))
          : (k === "right" || k === "start") && ((U = "flex-start"), (H = V))
        : k === "left" || k === "start"
        ? ((U = "flex-start"), (L = V))
        : (k === "right" || k === "end") && ((U = "flex-end"), (H = V)),
        (i.position = this._cssPosition),
        (i.marginLeft = C ? "0" : L),
        (i.marginTop = T ? "0" : this._topOffset),
        (i.marginBottom = this._bottomOffset),
        (i.marginRight = C ? "0" : H),
        (e.justifyContent = U),
        (e.alignItems = T ? "flex-start" : this._alignItems);
    }
    dispose() {
      if (this._isDisposed || !this._overlayRef) return;
      let i = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement,
        t = e.style;
      e.classList.remove(au),
        (t.justifyContent =
          t.alignItems =
          i.marginTop =
          i.marginBottom =
          i.marginLeft =
          i.marginRight =
          i.position =
            ""),
        (this._overlayRef = null),
        (this._isDisposed = !0);
    }
  },
  E0 = (() => {
    class r {
      constructor(e, t, n, o) {
        (this._viewportRuler = e),
          (this._document = t),
          (this._platform = n),
          (this._overlayContainer = o);
      }
      global() {
        return new Ul();
      }
      flexibleConnectedTo(e) {
        return new Fa(
          e,
          this._viewportRuler,
          this._document,
          this._platform,
          this._overlayContainer
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(Al), ie(Le), ie(mt), ie(lu));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  I0 = 0,
  Er = (() => {
    class r {
      constructor(e, t, n, o, u, b, C, T, k, V, B, L) {
        (this.scrollStrategies = e),
          (this._overlayContainer = t),
          (this._componentFactoryResolver = n),
          (this._positionBuilder = o),
          (this._keyboardDispatcher = u),
          (this._injector = b),
          (this._ngZone = C),
          (this._document = T),
          (this._directionality = k),
          (this._location = V),
          (this._outsideClickDispatcher = B),
          (this._animationsModuleType = L);
      }
      create(e) {
        let t = this._createHostElement(),
          n = this._createPaneElement(t),
          o = this._createPortalOutlet(n),
          u = new Aa(e);
        return (
          (u.direction = u.direction || this._directionality.value),
          new zl(
            o,
            t,
            n,
            u,
            this._ngZone,
            this._keyboardDispatcher,
            this._document,
            this._location,
            this._outsideClickDispatcher,
            this._animationsModuleType === "NoopAnimations",
            this._injector.get(Xr)
          )
        );
      }
      position() {
        return this._positionBuilder;
      }
      _createPaneElement(e) {
        let t = this._document.createElement("div");
        return (
          (t.id = `cdk-overlay-${I0++}`),
          t.classList.add("cdk-overlay-pane"),
          e.appendChild(t),
          t
        );
      }
      _createHostElement() {
        let e = this._document.createElement("div");
        return this._overlayContainer.getContainerElement().appendChild(e), e;
      }
      _createPortalOutlet(e) {
        return (
          this._appRef || (this._appRef = this._injector.get(un)),
          new Pa(
            e,
            this._componentFactoryResolver,
            this._appRef,
            this._injector,
            this._document
          )
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(
            ie(M0),
            ie(lu),
            ie(zn),
            ie(E0),
            ie(O0),
            ie(vt),
            ie(Ie),
            ie(Le),
            ie(Pr),
            ie(Ko),
            ie(T0),
            ie(Zi, 8)
          );
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })();
var A0 = new $e("cdk-connected-overlay-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let r = te(Er);
    return () => r.scrollStrategies.reposition();
  },
});
function F0(r) {
  return () => r.scrollStrategies.reposition();
}
var R0 = { provide: A0, deps: [Er], useFactory: F0 },
  cu = (() => {
    class r {
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵmod = be({ type: r });
      }
      static {
        this.ɵinj = _e({ providers: [Er, R0], imports: [Pn, Ea, Fl, Fl] });
      }
    }
    return r;
  })();
function V0() {
  return !0;
}
var N0 = new $e("mat-sanity-checks", { providedIn: "root", factory: V0 }),
  gi = (() => {
    class r {
      constructor(e, t, n) {
        (this._sanityChecks = t),
          (this._document = n),
          (this._hasDoneGlobalChecks = !1),
          e._applyBodyHighContrastModeCssClasses(),
          this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
      }
      _checkIsEnabled(e) {
        return ho()
          ? !1
          : typeof this._sanityChecks == "boolean"
          ? this._sanityChecks
          : !!this._sanityChecks[e];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(Il), ie(N0, 8), ie(Le));
        };
      }
      static {
        this.ɵmod = be({ type: r });
      }
      static {
        this.ɵinj = _e({ imports: [Pn, Pn] });
      }
    }
    return r;
  })();
var du = new $e("MAT_DATE_LOCALE", { providedIn: "root", factory: L0 });
function L0() {
  return te(Ks);
}
var li = class {
    constructor() {
      (this._localeChanges = new Ee()),
        (this.localeChanges = this._localeChanges);
    }
    getValidDateOrNull(i) {
      return this.isDateInstance(i) && this.isValid(i) ? i : null;
    }
    deserialize(i) {
      return i == null || (this.isDateInstance(i) && this.isValid(i))
        ? i
        : this.invalid();
    }
    setLocale(i) {
      (this.locale = i), this._localeChanges.next();
    }
    compareDate(i, e) {
      return (
        this.getYear(i) - this.getYear(e) ||
        this.getMonth(i) - this.getMonth(e) ||
        this.getDate(i) - this.getDate(e)
      );
    }
    sameDate(i, e) {
      if (i && e) {
        let t = this.isValid(i),
          n = this.isValid(e);
        return t && n ? !this.compareDate(i, e) : t == n;
      }
      return i == e;
    }
    clampDate(i, e, t) {
      return e && this.compareDate(i, e) < 0
        ? e
        : t && this.compareDate(i, t) > 0
        ? t
        : i;
    }
  },
  Ir = new $e("mat-date-formats"),
  B0 =
    /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
function Wl(r, i) {
  let e = Array(r);
  for (let t = 0; t < r; t++) e[t] = i(t);
  return e;
}
var H0 = (() => {
    class r extends li {
      constructor(e) {
        super(),
          (this.useUtcForDisplay = !1),
          (this._matDateLocale = te(du, { optional: !0 })),
          e !== void 0 && (this._matDateLocale = e),
          super.setLocale(this._matDateLocale);
      }
      getYear(e) {
        return e.getFullYear();
      }
      getMonth(e) {
        return e.getMonth();
      }
      getDate(e) {
        return e.getDate();
      }
      getDayOfWeek(e) {
        return e.getDay();
      }
      getMonthNames(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          month: e,
          timeZone: "utc",
        });
        return Wl(12, (n) => this._format(t, new Date(2017, n, 1)));
      }
      getDateNames() {
        let e = new Intl.DateTimeFormat(this.locale, {
          day: "numeric",
          timeZone: "utc",
        });
        return Wl(31, (t) => this._format(e, new Date(2017, 0, t + 1)));
      }
      getDayOfWeekNames(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          weekday: e,
          timeZone: "utc",
        });
        return Wl(7, (n) => this._format(t, new Date(2017, 0, n + 1)));
      }
      getYearName(e) {
        let t = new Intl.DateTimeFormat(this.locale, {
          year: "numeric",
          timeZone: "utc",
        });
        return this._format(t, e);
      }
      getFirstDayOfWeek() {
        if (typeof Intl < "u" && Intl.Locale) {
          let e = new Intl.Locale(this.locale),
            t = (e.getWeekInfo?.() || e.weekInfo)?.firstDay ?? 0;
          return t === 7 ? 0 : t;
        }
        return 0;
      }
      getNumDaysInMonth(e) {
        return this.getDate(
          this._createDateWithOverflow(this.getYear(e), this.getMonth(e) + 1, 0)
        );
      }
      clone(e) {
        return new Date(e.getTime());
      }
      createDate(e, t, n) {
        let o = this._createDateWithOverflow(e, t, n);
        return o.getMonth() != t, o;
      }
      today() {
        return new Date();
      }
      parse(e, t) {
        return typeof e == "number"
          ? new Date(e)
          : e
          ? new Date(Date.parse(e))
          : null;
      }
      format(e, t) {
        if (!this.isValid(e))
          throw Error("NativeDateAdapter: Cannot format invalid date.");
        let n = new Intl.DateTimeFormat(
          this.locale,
          Ne(ee({}, t), { timeZone: "utc" })
        );
        return this._format(n, e);
      }
      addCalendarYears(e, t) {
        return this.addCalendarMonths(e, t * 12);
      }
      addCalendarMonths(e, t) {
        let n = this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e) + t,
          this.getDate(e)
        );
        return (
          this.getMonth(n) != (((this.getMonth(e) + t) % 12) + 12) % 12 &&
            (n = this._createDateWithOverflow(
              this.getYear(n),
              this.getMonth(n),
              0
            )),
          n
        );
      }
      addCalendarDays(e, t) {
        return this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e),
          this.getDate(e) + t
        );
      }
      toIso8601(e) {
        return [
          e.getUTCFullYear(),
          this._2digit(e.getUTCMonth() + 1),
          this._2digit(e.getUTCDate()),
        ].join("-");
      }
      deserialize(e) {
        if (typeof e == "string") {
          if (!e) return null;
          if (B0.test(e)) {
            let t = new Date(e);
            if (this.isValid(t)) return t;
          }
        }
        return super.deserialize(e);
      }
      isDateInstance(e) {
        return e instanceof Date;
      }
      isValid(e) {
        return !isNaN(e.getTime());
      }
      invalid() {
        return new Date(NaN);
      }
      _createDateWithOverflow(e, t, n) {
        let o = new Date();
        return o.setFullYear(e, t, n), o.setHours(0, 0, 0, 0), o;
      }
      _2digit(e) {
        return ("00" + e).slice(-2);
      }
      _format(e, t) {
        let n = new Date();
        return (
          n.setUTCFullYear(t.getFullYear(), t.getMonth(), t.getDate()),
          n.setUTCHours(
            t.getHours(),
            t.getMinutes(),
            t.getSeconds(),
            t.getMilliseconds()
          ),
          e.format(n)
        );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(du, 8));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac });
      }
    }
    return r;
  })(),
  j0 = {
    parse: { dateInput: null },
    display: {
      dateInput: { year: "numeric", month: "numeric", day: "numeric" },
      monthYearLabel: { year: "numeric", month: "short" },
      dateA11yLabel: { year: "numeric", month: "long", day: "numeric" },
      monthYearA11yLabel: { year: "numeric", month: "long" },
    },
  };
var Va = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({ providers: [z0()] });
    }
  }
  return r;
})();
function z0(r = j0) {
  return [
    { provide: li, useClass: H0 },
    { provide: Ir, useValue: r },
  ];
}
var ki = (function (r) {
    return (
      (r[(r.FADING_IN = 0)] = "FADING_IN"),
      (r[(r.VISIBLE = 1)] = "VISIBLE"),
      (r[(r.FADING_OUT = 2)] = "FADING_OUT"),
      (r[(r.HIDDEN = 3)] = "HIDDEN"),
      r
    );
  })(ki || {}),
  Yl = class {
    constructor(i, e, t, n = !1) {
      (this._renderer = i),
        (this.element = e),
        (this.config = t),
        (this._animationForciblyDisabledThroughCss = n),
        (this.state = ki.HIDDEN);
    }
    fadeOut() {
      this._renderer.fadeOutRipple(this);
    }
  },
  pu = nn({ passive: !0, capture: !0 }),
  ql = class {
    constructor() {
      (this._events = new Map()),
        (this._delegateEventHandler = (i) => {
          let e = Ti(i);
          e &&
            this._events.get(i.type)?.forEach((t, n) => {
              (n === e || n.contains(e)) && t.forEach((o) => o.handleEvent(i));
            });
        });
    }
    addHandler(i, e, t, n) {
      let o = this._events.get(e);
      if (o) {
        let u = o.get(t);
        u ? u.add(n) : o.set(t, new Set([n]));
      } else
        this._events.set(e, new Map([[t, new Set([n])]])),
          i.runOutsideAngular(() => {
            document.addEventListener(e, this._delegateEventHandler, pu);
          });
    }
    removeHandler(i, e, t) {
      let n = this._events.get(i);
      if (!n) return;
      let o = n.get(e);
      o &&
        (o.delete(t),
        o.size === 0 && n.delete(e),
        n.size === 0 &&
          (this._events.delete(i),
          document.removeEventListener(i, this._delegateEventHandler, pu)));
    }
  },
  uu = { enterDuration: 225, exitDuration: 150 },
  U0 = 800,
  hu = nn({ passive: !0, capture: !0 }),
  mu = ["mousedown", "touchstart"],
  fu = ["mouseup", "mouseleave", "touchend", "touchcancel"],
  Kl = class r {
    static {
      this._eventManager = new ql();
    }
    constructor(i, e, t, n) {
      (this._target = i),
        (this._ngZone = e),
        (this._platform = n),
        (this._isPointerDown = !1),
        (this._activeRipples = new Map()),
        (this._pointerUpEventsRegistered = !1),
        n.isBrowser && (this._containerElement = _n(t));
    }
    fadeInRipple(i, e, t = {}) {
      let n = (this._containerRect =
          this._containerRect ||
          this._containerElement.getBoundingClientRect()),
        o = ee(ee({}, uu), t.animation);
      t.centered && ((i = n.left + n.width / 2), (e = n.top + n.height / 2));
      let u = t.radius || W0(i, e, n),
        b = i - n.left,
        C = e - n.top,
        T = o.enterDuration,
        k = document.createElement("div");
      k.classList.add("mat-ripple-element"),
        (k.style.left = `${b - u}px`),
        (k.style.top = `${C - u}px`),
        (k.style.height = `${u * 2}px`),
        (k.style.width = `${u * 2}px`),
        t.color != null && (k.style.backgroundColor = t.color),
        (k.style.transitionDuration = `${T}ms`),
        this._containerElement.appendChild(k);
      let V = window.getComputedStyle(k),
        B = V.transitionProperty,
        L = V.transitionDuration,
        H =
          B === "none" ||
          L === "0s" ||
          L === "0s, 0s" ||
          (n.width === 0 && n.height === 0),
        U = new Yl(this, k, t, H);
      (k.style.transform = "scale3d(1, 1, 1)"),
        (U.state = ki.FADING_IN),
        t.persistent || (this._mostRecentTransientRipple = U);
      let j = null;
      return (
        !H &&
          (T || o.exitDuration) &&
          this._ngZone.runOutsideAngular(() => {
            let Y = () => {
                j && (j.fallbackTimer = null),
                  clearTimeout(Ce),
                  this._finishRippleTransition(U);
              },
              ge = () => this._destroyRipple(U),
              Ce = setTimeout(ge, T + 100);
            k.addEventListener("transitionend", Y),
              k.addEventListener("transitioncancel", ge),
              (j = {
                onTransitionEnd: Y,
                onTransitionCancel: ge,
                fallbackTimer: Ce,
              });
          }),
        this._activeRipples.set(U, j),
        (H || !T) && this._finishRippleTransition(U),
        U
      );
    }
    fadeOutRipple(i) {
      if (i.state === ki.FADING_OUT || i.state === ki.HIDDEN) return;
      let e = i.element,
        t = ee(ee({}, uu), i.config.animation);
      (e.style.transitionDuration = `${t.exitDuration}ms`),
        (e.style.opacity = "0"),
        (i.state = ki.FADING_OUT),
        (i._animationForciblyDisabledThroughCss || !t.exitDuration) &&
          this._finishRippleTransition(i);
    }
    fadeOutAll() {
      this._getActiveRipples().forEach((i) => i.fadeOut());
    }
    fadeOutAllNonPersistent() {
      this._getActiveRipples().forEach((i) => {
        i.config.persistent || i.fadeOut();
      });
    }
    setupTriggerEvents(i) {
      let e = _n(i);
      !this._platform.isBrowser ||
        !e ||
        e === this._triggerElement ||
        (this._removeTriggerEvents(),
        (this._triggerElement = e),
        mu.forEach((t) => {
          r._eventManager.addHandler(this._ngZone, t, e, this);
        }));
    }
    handleEvent(i) {
      i.type === "mousedown"
        ? this._onMousedown(i)
        : i.type === "touchstart"
        ? this._onTouchStart(i)
        : this._onPointerUp(),
        this._pointerUpEventsRegistered ||
          (this._ngZone.runOutsideAngular(() => {
            fu.forEach((e) => {
              this._triggerElement.addEventListener(e, this, hu);
            });
          }),
          (this._pointerUpEventsRegistered = !0));
    }
    _finishRippleTransition(i) {
      i.state === ki.FADING_IN
        ? this._startFadeOutTransition(i)
        : i.state === ki.FADING_OUT && this._destroyRipple(i);
    }
    _startFadeOutTransition(i) {
      let e = i === this._mostRecentTransientRipple,
        { persistent: t } = i.config;
      (i.state = ki.VISIBLE), !t && (!e || !this._isPointerDown) && i.fadeOut();
    }
    _destroyRipple(i) {
      let e = this._activeRipples.get(i) ?? null;
      this._activeRipples.delete(i),
        this._activeRipples.size || (this._containerRect = null),
        i === this._mostRecentTransientRipple &&
          (this._mostRecentTransientRipple = null),
        (i.state = ki.HIDDEN),
        e !== null &&
          (i.element.removeEventListener("transitionend", e.onTransitionEnd),
          i.element.removeEventListener(
            "transitioncancel",
            e.onTransitionCancel
          ),
          e.fallbackTimer !== null && clearTimeout(e.fallbackTimer)),
        i.element.remove();
    }
    _onMousedown(i) {
      let e = kl(i),
        t =
          this._lastTouchStartEvent &&
          Date.now() < this._lastTouchStartEvent + U0;
      !this._target.rippleDisabled &&
        !e &&
        !t &&
        ((this._isPointerDown = !0),
        this.fadeInRipple(i.clientX, i.clientY, this._target.rippleConfig));
    }
    _onTouchStart(i) {
      if (!this._target.rippleDisabled && !Pl(i)) {
        (this._lastTouchStartEvent = Date.now()), (this._isPointerDown = !0);
        let e = i.changedTouches;
        if (e)
          for (let t = 0; t < e.length; t++)
            this.fadeInRipple(
              e[t].clientX,
              e[t].clientY,
              this._target.rippleConfig
            );
      }
    }
    _onPointerUp() {
      this._isPointerDown &&
        ((this._isPointerDown = !1),
        this._getActiveRipples().forEach((i) => {
          let e =
            i.state === ki.VISIBLE ||
            (i.config.terminateOnPointerUp && i.state === ki.FADING_IN);
          !i.config.persistent && e && i.fadeOut();
        }));
    }
    _getActiveRipples() {
      return Array.from(this._activeRipples.keys());
    }
    _removeTriggerEvents() {
      let i = this._triggerElement;
      i &&
        (mu.forEach((e) => r._eventManager.removeHandler(e, i, this)),
        this._pointerUpEventsRegistered &&
          (fu.forEach((e) => i.removeEventListener(e, this, hu)),
          (this._pointerUpEventsRegistered = !1)));
    }
  };
function W0(r, i, e) {
  let t = Math.max(Math.abs(r - e.left), Math.abs(r - e.right)),
    n = Math.max(Math.abs(i - e.top), Math.abs(i - e.bottom));
  return Math.sqrt(t * t + n * n);
}
var vu = new $e("mat-ripple-global-options"),
  $0 = (() => {
    class r {
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        e && this.fadeOutAllNonPersistent(),
          (this._disabled = e),
          this._setupTriggerEventsIfEnabled();
      }
      get trigger() {
        return this._trigger || this._elementRef.nativeElement;
      }
      set trigger(e) {
        (this._trigger = e), this._setupTriggerEventsIfEnabled();
      }
      constructor(e, t, n, o, u) {
        (this._elementRef = e),
          (this._animationMode = u),
          (this.radius = 0),
          (this._disabled = !1),
          (this._isInitialized = !1),
          (this._globalOptions = o || {}),
          (this._rippleRenderer = new Kl(this, t, e, n));
      }
      ngOnInit() {
        (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
      }
      ngOnDestroy() {
        this._rippleRenderer._removeTriggerEvents();
      }
      fadeOutAll() {
        this._rippleRenderer.fadeOutAll();
      }
      fadeOutAllNonPersistent() {
        this._rippleRenderer.fadeOutAllNonPersistent();
      }
      get rippleConfig() {
        return {
          centered: this.centered,
          radius: this.radius,
          color: this.color,
          animation: ee(
            ee(
              ee({}, this._globalOptions.animation),
              this._animationMode === "NoopAnimations"
                ? { enterDuration: 0, exitDuration: 0 }
                : {}
            ),
            this.animation
          ),
          terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
        };
      }
      get rippleDisabled() {
        return this.disabled || !!this._globalOptions.disabled;
      }
      _setupTriggerEventsIfEnabled() {
        !this.disabled &&
          this._isInitialized &&
          this._rippleRenderer.setupTriggerEvents(this.trigger);
      }
      launch(e, t = 0, n) {
        return typeof e == "number"
          ? this._rippleRenderer.fadeInRipple(
              e,
              t,
              ee(ee({}, this.rippleConfig), n)
            )
          : this._rippleRenderer.fadeInRipple(
              0,
              0,
              ee(ee({}, this.rippleConfig), e)
            );
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Pe), F(Ie), F(mt), F(vu, 8), F(Zi, 8));
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [
            ["", "mat-ripple", ""],
            ["", "matRipple", ""],
          ],
          hostAttrs: [1, "mat-ripple"],
          hostVars: 2,
          hostBindings: function (t, n) {
            t & 2 && X("mat-ripple-unbounded", n.unbounded);
          },
          inputs: {
            color: [0, "matRippleColor", "color"],
            unbounded: [0, "matRippleUnbounded", "unbounded"],
            centered: [0, "matRippleCentered", "centered"],
            radius: [0, "matRippleRadius", "radius"],
            animation: [0, "matRippleAnimation", "animation"],
            disabled: [0, "matRippleDisabled", "disabled"],
            trigger: [0, "matRippleTrigger", "trigger"],
          },
          exportAs: ["matRipple"],
          standalone: !0,
        });
      }
    }
    return r;
  })(),
  xu = (() => {
    class r {
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵmod = be({ type: r });
      }
      static {
        this.ɵinj = _e({ imports: [gi, gi] });
      }
    }
    return r;
  })();
var gu = { capture: !0 },
  _u = ["focus", "mousedown", "mouseenter", "touchstart"],
  $l = "mat-ripple-loader-uninitialized",
  Gl = "mat-ripple-loader-class-name",
  bu = "mat-ripple-loader-centered",
  Ra = "mat-ripple-loader-disabled",
  yu = (() => {
    class r {
      constructor() {
        (this._document = te(Le, { optional: !0 })),
          (this._animationMode = te(Zi, { optional: !0 })),
          (this._globalRippleOptions = te(vu, { optional: !0 })),
          (this._platform = te(mt)),
          (this._ngZone = te(Ie)),
          (this._hosts = new Map()),
          (this._onInteraction = (e) => {
            let t = Ti(e);
            if (t instanceof HTMLElement) {
              let n = t.closest(
                `[${$l}="${this._globalRippleOptions?.namespace ?? ""}"]`
              );
              n && this._createRipple(n);
            }
          }),
          this._ngZone.runOutsideAngular(() => {
            for (let e of _u)
              this._document?.addEventListener(e, this._onInteraction, gu);
          });
      }
      ngOnDestroy() {
        let e = this._hosts.keys();
        for (let t of e) this.destroyRipple(t);
        for (let t of _u)
          this._document?.removeEventListener(t, this._onInteraction, gu);
      }
      configureRipple(e, t) {
        e.setAttribute($l, this._globalRippleOptions?.namespace ?? ""),
          (t.className || !e.hasAttribute(Gl)) &&
            e.setAttribute(Gl, t.className || ""),
          t.centered && e.setAttribute(bu, ""),
          t.disabled && e.setAttribute(Ra, "");
      }
      getRipple(e) {
        return this._hosts.get(e) || this._createRipple(e);
      }
      setDisabled(e, t) {
        let n = this._hosts.get(e);
        if (n) {
          n.disabled = t;
          return;
        }
        t ? e.setAttribute(Ra, "") : e.removeAttribute(Ra);
      }
      _createRipple(e) {
        if (!this._document) return;
        let t = this._hosts.get(e);
        if (t) return t;
        e.querySelector(".mat-ripple")?.remove();
        let n = this._document.createElement("span");
        n.classList.add("mat-ripple", e.getAttribute(Gl)), e.append(n);
        let o = new $0(
          new Pe(n),
          this._ngZone,
          this._platform,
          this._globalRippleOptions ? this._globalRippleOptions : void 0,
          this._animationMode ? this._animationMode : void 0
        );
        return (
          (o._isInitialized = !0),
          (o.trigger = e),
          (o.centered = e.hasAttribute(bu)),
          (o.disabled = e.hasAttribute(Ra)),
          this.attachRipple(e, o),
          o
        );
      }
      attachRipple(e, t) {
        e.removeAttribute($l), this._hosts.set(e, t);
      }
      destroyRipple(e) {
        let t = this._hosts.get(e);
        t && (t.ngOnDestroy(), this._hosts.delete(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })();
var Y0 = ["mat-button", ""],
  q0 = [
    [
      ["", 8, "material-icons", 3, "iconPositionEnd", ""],
      ["mat-icon", 3, "iconPositionEnd", ""],
      ["", "matButtonIcon", "", 3, "iconPositionEnd", ""],
    ],
    "*",
    [
      ["", "iconPositionEnd", "", 8, "material-icons"],
      ["mat-icon", "iconPositionEnd", ""],
      ["", "matButtonIcon", "", "iconPositionEnd", ""],
    ],
  ],
  K0 = [
    ".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])",
    "*",
    ".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]",
  ];
var Q0 =
  ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}";
var Z0 = ["mat-icon-button", ""],
  X0 = ["*"];
var J0 = new $e("MAT_BUTTON_CONFIG");
var e_ = [
    { attribute: "mat-button", mdcClasses: ["mdc-button", "mat-mdc-button"] },
    {
      attribute: "mat-flat-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--unelevated",
        "mat-mdc-unelevated-button",
      ],
    },
    {
      attribute: "mat-raised-button",
      mdcClasses: ["mdc-button", "mdc-button--raised", "mat-mdc-raised-button"],
    },
    {
      attribute: "mat-stroked-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--outlined",
        "mat-mdc-outlined-button",
      ],
    },
    {
      attribute: "mat-fab",
      mdcClasses: ["mdc-fab", "mat-mdc-fab-base", "mat-mdc-fab"],
    },
    {
      attribute: "mat-mini-fab",
      mdcClasses: [
        "mdc-fab",
        "mat-mdc-fab-base",
        "mdc-fab--mini",
        "mat-mdc-mini-fab",
      ],
    },
    {
      attribute: "mat-icon-button",
      mdcClasses: ["mdc-icon-button", "mat-mdc-icon-button"],
    },
  ],
  Cu = (() => {
    class r {
      get ripple() {
        return this._rippleLoader?.getRipple(this._elementRef.nativeElement);
      }
      set ripple(e) {
        this._rippleLoader?.attachRipple(this._elementRef.nativeElement, e);
      }
      get disableRipple() {
        return this._disableRipple;
      }
      set disableRipple(e) {
        (this._disableRipple = e), this._updateRippleDisabled();
      }
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        (this._disabled = e), this._updateRippleDisabled();
      }
      constructor(e, t, n, o) {
        (this._elementRef = e),
          (this._platform = t),
          (this._ngZone = n),
          (this._animationMode = o),
          (this._focusMonitor = te(El)),
          (this._rippleLoader = te(yu)),
          (this._isFab = !1),
          (this._disableRipple = !1),
          (this._disabled = !1);
        let u = te(J0, { optional: !0 }),
          b = e.nativeElement,
          C = b.classList;
        (this.disabledInteractive = u?.disabledInteractive ?? !1),
          (this.color = u?.color ?? null),
          this._rippleLoader?.configureRipple(b, {
            className: "mat-mdc-button-ripple",
          });
        for (let { attribute: T, mdcClasses: k } of e_)
          b.hasAttribute(T) && C.add(...k);
      }
      ngAfterViewInit() {
        this._focusMonitor.monitor(this._elementRef, !0);
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);
      }
      focus(e = "program", t) {
        e
          ? this._focusMonitor.focusVia(this._elementRef.nativeElement, e, t)
          : this._elementRef.nativeElement.focus(t);
      }
      _getAriaDisabled() {
        return this.ariaDisabled != null
          ? this.ariaDisabled
          : this.disabled && this.disabledInteractive
          ? !0
          : null;
      }
      _getDisabledAttribute() {
        return this.disabledInteractive || !this.disabled ? null : !0;
      }
      _updateRippleDisabled() {
        this._rippleLoader?.setDisabled(
          this._elementRef.nativeElement,
          this.disableRipple || this.disabled
        );
      }
      static {
        this.ɵfac = function (t) {
          gr();
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          inputs: {
            color: "color",
            disableRipple: [2, "disableRipple", "disableRipple", ye],
            disabled: [2, "disabled", "disabled", ye],
            ariaDisabled: [2, "aria-disabled", "ariaDisabled", ye],
            disabledInteractive: [
              2,
              "disabledInteractive",
              "disabledInteractive",
              ye,
            ],
          },
          features: [Dt],
        });
      }
    }
    return r;
  })();
var Ql = (() => {
  class r extends Cu {
    constructor(e, t, n, o) {
      super(e, t, n, o);
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)(F(Pe), F(mt), F(Ie), F(Zi, 8));
      };
    }
    static {
      this.ɵcmp = oe({
        type: r,
        selectors: [
          ["button", "mat-button", ""],
          ["button", "mat-raised-button", ""],
          ["button", "mat-flat-button", ""],
          ["button", "mat-stroked-button", ""],
        ],
        hostVars: 14,
        hostBindings: function (t, n) {
          t & 2 &&
            (se("disabled", n._getDisabledAttribute())(
              "aria-disabled",
              n._getAriaDisabled()
            ),
            Fe(n.color ? "mat-" + n.color : ""),
            X("mat-mdc-button-disabled", n.disabled)(
              "mat-mdc-button-disabled-interactive",
              n.disabledInteractive
            )("_mat-animation-noopable", n._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !n.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [ze, le],
        attrs: Y0,
        ngContentSelectors: K0,
        decls: 7,
        vars: 4,
        consts: [
          [1, "mat-mdc-button-persistent-ripple"],
          [1, "mdc-button__label"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (t, n) {
          t & 1 &&
            (Pt(q0),
            R(0, "span", 0),
            xt(1),
            a(2, "span", 1),
            xt(3, 1),
            s(),
            xt(4, 2),
            R(5, "span", 2)(6, "span", 3)),
            t & 2 &&
              X("mdc-button__ripple", !n._isFab)("mdc-fab__ripple", n._isFab);
        },
        styles: [
          '.mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-text-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-text-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, var(--mat-app-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-filled-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-filled-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color, var(--mat-app-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, var(--mat-app-on-primary));background-color:var(--mdc-filled-button-container-color, var(--mat-app-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow, var(--mat-app-level1));height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-protected-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-protected-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, var(--mat-app-primary));background-color:var(--mdc-protected-button-container-color, var(--mat-app-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow, var(--mat-app-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow, var(--mat-app-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-outlined-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-outlined-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight, var(--mat-app-label-large-weight));border-radius:var(--mdc-outlined-button-container-shape, var(--mat-app-corner-full));border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, var(--mat-app-primary));border-color:var(--mdc-outlined-button-outline-color, var(--mat-app-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}',
          ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}",
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return r;
})();
var Zl = (() => {
  class r extends Cu {
    constructor(e, t, n, o) {
      super(e, t, n, o),
        this._rippleLoader.configureRipple(this._elementRef.nativeElement, {
          centered: !0,
        });
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)(F(Pe), F(mt), F(Ie), F(Zi, 8));
      };
    }
    static {
      this.ɵcmp = oe({
        type: r,
        selectors: [["button", "mat-icon-button", ""]],
        hostVars: 14,
        hostBindings: function (t, n) {
          t & 2 &&
            (se("disabled", n._getDisabledAttribute())(
              "aria-disabled",
              n._getAriaDisabled()
            ),
            Fe(n.color ? "mat-" + n.color : ""),
            X("mat-mdc-button-disabled", n.disabled)(
              "mat-mdc-button-disabled-interactive",
              n.disabledInteractive
            )("_mat-animation-noopable", n._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !n.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [ze, le],
        attrs: Z0,
        ngContentSelectors: X0,
        decls: 4,
        vars: 0,
        consts: [
          [1, "mat-mdc-button-persistent-ripple", "mdc-icon-button__ripple"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (t, n) {
          t & 1 &&
            (Pt(), R(0, "span", 0), xt(1), R(2, "span", 1)(3, "span", 2));
        },
        styles: [
          '.mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color, var(--mat-app-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
          Q0,
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return r;
})();
var wu = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({ imports: [gi, xu, gi] });
    }
  }
  return r;
})();
var er = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({ imports: [gi, De, Sa, gi] });
    }
  }
  return r;
})();
var Du = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({});
    }
  }
  return r;
})();
var Na = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({ imports: [gi, er, er, Du, gi] });
    }
  }
  return r;
})();
var n_ = ["mat-calendar-body", ""];
function r_(r, i) {
  return this._trackRow(i);
}
var Eu = (r, i) => i.id;
function o_(r, i) {
  if ((r & 1 && (a(0, "tr", 0)(1, "td", 3), c(2), s()()), r & 2)) {
    let e = _();
    d(),
      ut("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      se("colspan", e.numCols),
      d(),
      K(" ", e.label, " ");
  }
}
function a_(r, i) {
  if ((r & 1 && (a(0, "td", 3), c(1), s()), r & 2)) {
    let e = _(2);
    ut("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      se("colspan", e._firstRowOffset),
      d(),
      K(" ", e._firstRowOffset >= e.labelMinRequiredCells ? e.label : "", " ");
  }
}
function s_(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "td", 6)(1, "button", 7),
      O("click", function (n) {
        let o = w(e).$implicit,
          u = _(2);
        return D(u._cellClicked(o, n));
      })("focus", function (n) {
        let o = w(e).$implicit,
          u = _(2);
        return D(u._emitActiveDateChange(o, n));
      }),
      a(2, "span", 8),
      c(3),
      s(),
      R(4, "span", 9),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = i.$index,
      n = _().$index,
      o = _();
    ut("width", o._cellWidth)("padding-top", o._cellPadding)(
      "padding-bottom",
      o._cellPadding
    ),
      se("data-mat-row", n)("data-mat-col", t),
      d(),
      X("mat-calendar-body-disabled", !e.enabled)(
        "mat-calendar-body-active",
        o._isActiveCell(n, t)
      )("mat-calendar-body-range-start", o._isRangeStart(e.compareValue))(
        "mat-calendar-body-range-end",
        o._isRangeEnd(e.compareValue)
      )("mat-calendar-body-in-range", o._isInRange(e.compareValue))(
        "mat-calendar-body-comparison-bridge-start",
        o._isComparisonBridgeStart(e.compareValue, n, t)
      )(
        "mat-calendar-body-comparison-bridge-end",
        o._isComparisonBridgeEnd(e.compareValue, n, t)
      )(
        "mat-calendar-body-comparison-start",
        o._isComparisonStart(e.compareValue)
      )("mat-calendar-body-comparison-end", o._isComparisonEnd(e.compareValue))(
        "mat-calendar-body-in-comparison-range",
        o._isInComparisonRange(e.compareValue)
      )("mat-calendar-body-preview-start", o._isPreviewStart(e.compareValue))(
        "mat-calendar-body-preview-end",
        o._isPreviewEnd(e.compareValue)
      )("mat-calendar-body-in-preview", o._isInPreview(e.compareValue)),
      g("ngClass", e.cssClasses)("tabindex", o._isActiveCell(n, t) ? 0 : -1),
      se("aria-label", e.ariaLabel)("aria-disabled", !e.enabled || null)(
        "aria-pressed",
        o._isSelected(e.compareValue)
      )("aria-current", o.todayValue === e.compareValue ? "date" : null)(
        "aria-describedby",
        o._getDescribedby(e.compareValue)
      ),
      d(),
      X("mat-calendar-body-selected", o._isSelected(e.compareValue))(
        "mat-calendar-body-comparison-identical",
        o._isComparisonIdentical(e.compareValue)
      )("mat-calendar-body-today", o.todayValue === e.compareValue),
      d(),
      K(" ", e.displayValue, " ");
  }
}
function l_(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr", 1),
      M(1, a_, 2, 6, "td", 4),
      _r(2, s_, 5, 48, "td", 5, Eu),
      s()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = i.$index,
      n = _();
    d(), Li(t === 0 && n._firstRowOffset ? 1 : -1), d(), br(e);
  }
}
function c_(r, i) {
  if (
    (r & 1 &&
      (a(0, "th", 2)(1, "span", 6), c(2), s(), a(3, "span", 3), c(4), s()()),
    r & 2)
  ) {
    let e = i.$implicit;
    d(2), E(e.long), d(2), E(e.narrow);
  }
}
var d_ = ["*"];
function p_(r, i) {}
function u_(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "mat-month-view", 4),
      Je("activeDateChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.activeDate, n) || (o.activeDate = n), D(n);
      }),
      O("_userSelection", function (n) {
        w(e);
        let o = _();
        return D(o._dateSelected(n));
      })("dragStarted", function (n) {
        w(e);
        let o = _();
        return D(o._dragStarted(n));
      })("dragEnded", function (n) {
        w(e);
        let o = _();
        return D(o._dragEnded(n));
      }),
      s();
  }
  if (r & 2) {
    let e = _();
    Ze("activeDate", e.activeDate),
      g("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass)(
        "comparisonStart",
        e.comparisonStart
      )("comparisonEnd", e.comparisonEnd)(
        "startDateAccessibleName",
        e.startDateAccessibleName
      )("endDateAccessibleName", e.endDateAccessibleName)(
        "activeDrag",
        e._activeDrag
      );
  }
}
function h_(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "mat-year-view", 5),
      Je("activeDateChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.activeDate, n) || (o.activeDate = n), D(n);
      }),
      O("monthSelected", function (n) {
        w(e);
        let o = _();
        return D(o._monthSelectedInYearView(n));
      })("selectedChange", function (n) {
        w(e);
        let o = _();
        return D(o._goToDateInView(n, "month"));
      }),
      s();
  }
  if (r & 2) {
    let e = _();
    Ze("activeDate", e.activeDate),
      g("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function m_(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "mat-multi-year-view", 6),
      Je("activeDateChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.activeDate, n) || (o.activeDate = n), D(n);
      }),
      O("yearSelected", function (n) {
        w(e);
        let o = _();
        return D(o._yearSelectedInMultiYearView(n));
      })("selectedChange", function (n) {
        w(e);
        let o = _();
        return D(o._goToDateInView(n, "year"));
      }),
      s();
  }
  if (r & 2) {
    let e = _();
    Ze("activeDate", e.activeDate),
      g("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function f_(r, i) {}
var g_ = ["button"],
  __ = [[["", "matDatepickerToggleIcon", ""]]],
  b_ = ["[matDatepickerToggleIcon]"];
function v_(r, i) {
  r & 1 && (ct(), a(0, "svg", 2), R(1, "path", 3), s());
}
var vo = (() => {
    class r {
      constructor() {
        (this.changes = new Ee()),
          (this.calendarLabel = "Calendar"),
          (this.openCalendarLabel = "Open calendar"),
          (this.closeCalendarLabel = "Close calendar"),
          (this.prevMonthLabel = "Previous month"),
          (this.nextMonthLabel = "Next month"),
          (this.prevYearLabel = "Previous year"),
          (this.nextYearLabel = "Next year"),
          (this.prevMultiYearLabel = "Previous 24 years"),
          (this.nextMultiYearLabel = "Next 24 years"),
          (this.switchToMonthViewLabel = "Choose date"),
          (this.switchToMultiYearViewLabel = "Choose month and year"),
          (this.startDateLabel = "Start date"),
          (this.endDateLabel = "End date");
      }
      formatYearRange(e, t) {
        return `${e} \u2013 ${t}`;
      }
      formatYearRangeLabel(e, t) {
        return `${e} to ${t}`;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
      }
    }
    return r;
  })(),
  x_ = 0,
  bo = class {
    constructor(i, e, t, n, o = {}, u = i, b) {
      (this.value = i),
        (this.displayValue = e),
        (this.ariaLabel = t),
        (this.enabled = n),
        (this.cssClasses = o),
        (this.compareValue = u),
        (this.rawValue = b),
        (this.id = x_++);
    }
  },
  y_ = 1,
  Su = nn({ passive: !1, capture: !0 }),
  En = nn({ passive: !0, capture: !0 }),
  La = nn({ passive: !0 }),
  Rr = (() => {
    class r {
      ngAfterViewChecked() {
        this._focusActiveCellAfterViewChecked &&
          (this._focusActiveCell(),
          (this._focusActiveCellAfterViewChecked = !1));
      }
      constructor(e, t) {
        (this._elementRef = e),
          (this._ngZone = t),
          (this._platform = te(mt)),
          (this._focusActiveCellAfterViewChecked = !1),
          (this.numCols = 7),
          (this.activeCell = 0),
          (this.isRange = !1),
          (this.cellAspectRatio = 1),
          (this.previewStart = null),
          (this.previewEnd = null),
          (this.selectedValueChange = new xe()),
          (this.previewChange = new xe()),
          (this.activeDateChange = new xe()),
          (this.dragStarted = new xe()),
          (this.dragEnded = new xe()),
          (this._didDragSinceMouseDown = !1),
          (this._injector = te(vt)),
          (this._trackRow = (n) => n),
          (this._enterHandler = (n) => {
            if (this._skipNextFocus && n.type === "focus") {
              this._skipNextFocus = !1;
              return;
            }
            if (n.target && this.isRange) {
              let o = this._getCellFromElement(n.target);
              o &&
                this._ngZone.run(() =>
                  this.previewChange.emit({
                    value: o.enabled ? o : null,
                    event: n,
                  })
                );
            }
          }),
          (this._touchmoveHandler = (n) => {
            if (!this.isRange) return;
            let o = Mu(n),
              u = o ? this._getCellFromElement(o) : null;
            o !== n.target && (this._didDragSinceMouseDown = !0),
              Jl(n.target) && n.preventDefault(),
              this._ngZone.run(() =>
                this.previewChange.emit({
                  value: u?.enabled ? u : null,
                  event: n,
                })
              );
          }),
          (this._leaveHandler = (n) => {
            this.previewEnd !== null &&
              this.isRange &&
              (n.type !== "blur" && (this._didDragSinceMouseDown = !0),
              n.target &&
                this._getCellFromElement(n.target) &&
                !(
                  n.relatedTarget && this._getCellFromElement(n.relatedTarget)
                ) &&
                this._ngZone.run(() =>
                  this.previewChange.emit({ value: null, event: n })
                ));
          }),
          (this._mousedownHandler = (n) => {
            if (!this.isRange) return;
            this._didDragSinceMouseDown = !1;
            let o = n.target && this._getCellFromElement(n.target);
            !o ||
              !this._isInRange(o.compareValue) ||
              this._ngZone.run(() => {
                this.dragStarted.emit({ value: o.rawValue, event: n });
              });
          }),
          (this._mouseupHandler = (n) => {
            if (!this.isRange) return;
            let o = Jl(n.target);
            if (!o) {
              this._ngZone.run(() => {
                this.dragEnded.emit({ value: null, event: n });
              });
              return;
            }
            o.closest(".mat-calendar-body") ===
              this._elementRef.nativeElement &&
              this._ngZone.run(() => {
                let u = this._getCellFromElement(o);
                this.dragEnded.emit({ value: u?.rawValue ?? null, event: n });
              });
          }),
          (this._touchendHandler = (n) => {
            let o = Mu(n);
            o && this._mouseupHandler({ target: o });
          }),
          (this._id = `mat-calendar-body-${y_++}`),
          (this._startDateLabelId = `${this._id}-start-date`),
          (this._endDateLabelId = `${this._id}-end-date`),
          t.runOutsideAngular(() => {
            let n = e.nativeElement;
            n.addEventListener("touchmove", this._touchmoveHandler, Su),
              n.addEventListener("mouseenter", this._enterHandler, En),
              n.addEventListener("focus", this._enterHandler, En),
              n.addEventListener("mouseleave", this._leaveHandler, En),
              n.addEventListener("blur", this._leaveHandler, En),
              n.addEventListener("mousedown", this._mousedownHandler, La),
              n.addEventListener("touchstart", this._mousedownHandler, La),
              this._platform.isBrowser &&
                (window.addEventListener("mouseup", this._mouseupHandler),
                window.addEventListener("touchend", this._touchendHandler));
          });
      }
      _cellClicked(e, t) {
        this._didDragSinceMouseDown ||
          (e.enabled &&
            this.selectedValueChange.emit({ value: e.value, event: t }));
      }
      _emitActiveDateChange(e, t) {
        e.enabled && this.activeDateChange.emit({ value: e.value, event: t });
      }
      _isSelected(e) {
        return this.startValue === e || this.endValue === e;
      }
      ngOnChanges(e) {
        let t = e.numCols,
          { rows: n, numCols: o } = this;
        (e.rows || t) &&
          (this._firstRowOffset =
            n && n.length && n[0].length ? o - n[0].length : 0),
          (e.cellAspectRatio || t || !this._cellPadding) &&
            (this._cellPadding = `${(50 * this.cellAspectRatio) / o}%`),
          (t || !this._cellWidth) && (this._cellWidth = `${100 / o}%`);
      }
      ngOnDestroy() {
        let e = this._elementRef.nativeElement;
        e.removeEventListener("touchmove", this._touchmoveHandler, Su),
          e.removeEventListener("mouseenter", this._enterHandler, En),
          e.removeEventListener("focus", this._enterHandler, En),
          e.removeEventListener("mouseleave", this._leaveHandler, En),
          e.removeEventListener("blur", this._leaveHandler, En),
          e.removeEventListener("mousedown", this._mousedownHandler, La),
          e.removeEventListener("touchstart", this._mousedownHandler, La),
          this._platform.isBrowser &&
            (window.removeEventListener("mouseup", this._mouseupHandler),
            window.removeEventListener("touchend", this._touchendHandler));
      }
      _isActiveCell(e, t) {
        let n = e * this.numCols + t;
        return e && (n -= this._firstRowOffset), n == this.activeCell;
      }
      _focusActiveCell(e = !0) {
        dn(
          () => {
            setTimeout(() => {
              let t = this._elementRef.nativeElement.querySelector(
                ".mat-calendar-body-active"
              );
              t && (e || (this._skipNextFocus = !0), t.focus());
            });
          },
          { injector: this._injector }
        );
      }
      _scheduleFocusActiveCellAfterViewChecked() {
        this._focusActiveCellAfterViewChecked = !0;
      }
      _isRangeStart(e) {
        return ec(e, this.startValue, this.endValue);
      }
      _isRangeEnd(e) {
        return tc(e, this.startValue, this.endValue);
      }
      _isInRange(e) {
        return ic(e, this.startValue, this.endValue, this.isRange);
      }
      _isComparisonStart(e) {
        return ec(e, this.comparisonStart, this.comparisonEnd);
      }
      _isComparisonBridgeStart(e, t, n) {
        if (
          !this._isComparisonStart(e) ||
          this._isRangeStart(e) ||
          !this._isInRange(e)
        )
          return !1;
        let o = this.rows[t][n - 1];
        if (!o) {
          let u = this.rows[t - 1];
          o = u && u[u.length - 1];
        }
        return o && !this._isRangeEnd(o.compareValue);
      }
      _isComparisonBridgeEnd(e, t, n) {
        if (
          !this._isComparisonEnd(e) ||
          this._isRangeEnd(e) ||
          !this._isInRange(e)
        )
          return !1;
        let o = this.rows[t][n + 1];
        if (!o) {
          let u = this.rows[t + 1];
          o = u && u[0];
        }
        return o && !this._isRangeStart(o.compareValue);
      }
      _isComparisonEnd(e) {
        return tc(e, this.comparisonStart, this.comparisonEnd);
      }
      _isInComparisonRange(e) {
        return ic(e, this.comparisonStart, this.comparisonEnd, this.isRange);
      }
      _isComparisonIdentical(e) {
        return (
          this.comparisonStart === this.comparisonEnd &&
          e === this.comparisonStart
        );
      }
      _isPreviewStart(e) {
        return ec(e, this.previewStart, this.previewEnd);
      }
      _isPreviewEnd(e) {
        return tc(e, this.previewStart, this.previewEnd);
      }
      _isInPreview(e) {
        return ic(e, this.previewStart, this.previewEnd, this.isRange);
      }
      _getDescribedby(e) {
        return this.isRange
          ? this.startValue === e && this.endValue === e
            ? `${this._startDateLabelId} ${this._endDateLabelId}`
            : this.startValue === e
            ? this._startDateLabelId
            : this.endValue === e
            ? this._endDateLabelId
            : null
          : null;
      }
      _getCellFromElement(e) {
        let t = Jl(e);
        if (t) {
          let n = t.getAttribute("data-mat-row"),
            o = t.getAttribute("data-mat-col");
          if (n && o) return this.rows[parseInt(n)][parseInt(o)];
        }
        return null;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Pe), F(Ie));
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["", "mat-calendar-body", ""]],
          hostAttrs: [1, "mat-calendar-body"],
          inputs: {
            label: "label",
            rows: "rows",
            todayValue: "todayValue",
            startValue: "startValue",
            endValue: "endValue",
            labelMinRequiredCells: "labelMinRequiredCells",
            numCols: "numCols",
            activeCell: "activeCell",
            isRange: "isRange",
            cellAspectRatio: "cellAspectRatio",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            previewStart: "previewStart",
            previewEnd: "previewEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedValueChange: "selectedValueChange",
            previewChange: "previewChange",
            activeDateChange: "activeDateChange",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
          },
          exportAs: ["matCalendarBody"],
          standalone: !0,
          features: [wt, le],
          attrs: n_,
          decls: 7,
          vars: 5,
          consts: [
            ["aria-hidden", "true"],
            ["role", "row"],
            [1, "mat-calendar-body-hidden-label", 3, "id"],
            [1, "mat-calendar-body-label"],
            [1, "mat-calendar-body-label", 3, "paddingTop", "paddingBottom"],
            [
              "role",
              "gridcell",
              1,
              "mat-calendar-body-cell-container",
              3,
              "width",
              "paddingTop",
              "paddingBottom",
            ],
            ["role", "gridcell", 1, "mat-calendar-body-cell-container"],
            [
              "type",
              "button",
              1,
              "mat-calendar-body-cell",
              3,
              "click",
              "focus",
              "ngClass",
              "tabindex",
            ],
            [1, "mat-calendar-body-cell-content", "mat-focus-indicator"],
            ["aria-hidden", "true", 1, "mat-calendar-body-cell-preview"],
          ],
          template: function (t, n) {
            t & 1 &&
              (M(0, o_, 3, 6, "tr", 0),
              _r(1, l_, 4, 1, "tr", 1, r_, !0),
              a(3, "span", 2),
              c(4),
              s(),
              a(5, "span", 2),
              c(6),
              s()),
              t & 2 &&
                (Li(n._firstRowOffset < n.labelMinRequiredCells ? 0 : -1),
                d(),
                br(n.rows),
                d(2),
                g("id", n._startDateLabelId),
                d(),
                K(
                  " ",
                  n.startDateAccessibleName,
                  `
`
                ),
                d(),
                g("id", n._endDateLabelId),
                d(),
                K(
                  " ",
                  n.endDateAccessibleName,
                  `
`
                ));
          },
          dependencies: [ft],
          styles: [
            '.mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color)}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color)}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color)}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-app-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-app-secondary))}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return r;
  })();
function Xl(r) {
  return r?.nodeName === "TD";
}
function Jl(r) {
  let i;
  return (
    Xl(r)
      ? (i = r)
      : Xl(r.parentNode)
      ? (i = r.parentNode)
      : Xl(r.parentNode?.parentNode) && (i = r.parentNode.parentNode),
    i?.getAttribute("data-mat-row") != null ? i : null
  );
}
function ec(r, i, e) {
  return e !== null && i !== e && r < e && r === i;
}
function tc(r, i, e) {
  return i !== null && i !== e && r >= i && r === e;
}
function ic(r, i, e, t) {
  return t && i !== null && e !== null && i !== e && r >= i && r <= e;
}
function Mu(r) {
  let i = r.changedTouches[0];
  return document.elementFromPoint(i.clientX, i.clientY);
}
var Pi = class {
    constructor(i, e) {
      (this.start = i), (this.end = e);
    }
  },
  Ba = (() => {
    class r {
      constructor(e, t) {
        (this.selection = e),
          (this._adapter = t),
          (this._selectionChanged = new Ee()),
          (this.selectionChanged = this._selectionChanged),
          (this.selection = e);
      }
      updateSelection(e, t) {
        let n = this.selection;
        (this.selection = e),
          this._selectionChanged.next({ selection: e, source: t, oldValue: n });
      }
      ngOnDestroy() {
        this._selectionChanged.complete();
      }
      _isValidDateInstance(e) {
        return this._adapter.isDateInstance(e) && this._adapter.isValid(e);
      }
      static {
        this.ɵfac = function (t) {
          gr();
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac });
      }
    }
    return r;
  })(),
  C_ = (() => {
    class r extends Ba {
      constructor(e) {
        super(null, e);
      }
      add(e) {
        super.updateSelection(e, this);
      }
      isValid() {
        return (
          this.selection != null && this._isValidDateInstance(this.selection)
        );
      }
      isComplete() {
        return this.selection != null;
      }
      clone() {
        let e = new r(this._adapter);
        return e.updateSelection(this.selection, this), e;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(ie(li));
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac });
      }
    }
    return r;
  })();
function w_(r, i) {
  return r || new C_(i);
}
var D_ = { provide: Ba, deps: [[new _d(), new bd(), Ba], li], useFactory: w_ };
var Iu = new $e("MAT_DATE_RANGE_SELECTION_STRATEGY");
var nc = 7,
  S_ = 0,
  Ou = (() => {
    class r {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          n =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          n,
          this.minDate,
          this.maxDate
        )),
          this._hasSameMonthAndYear(t, this._activeDate) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Pi
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setRanges(this._selected);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, n, o, u) {
        (this._changeDetectorRef = e),
          (this._dateFormats = t),
          (this._dateAdapter = n),
          (this._dir = o),
          (this._rangeStrategy = u),
          (this._rerenderSubscription = Ai.EMPTY),
          (this.activeDrag = null),
          (this.selectedChange = new xe()),
          (this._userSelection = new xe()),
          (this.dragStarted = new xe()),
          (this.dragEnded = new xe()),
          (this.activeDateChange = new xe()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Cn(null))
          .subscribe(() => this._init());
      }
      ngOnChanges(e) {
        let t = e.comparisonStart || e.comparisonEnd;
        t && !t.firstChange && this._setRanges(this.selected),
          e.activeDrag && !this.activeDrag && this._clearPreview();
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _dateSelected(e) {
        let t = e.value,
          n = this._getDateFromDayOfMonth(t),
          o,
          u;
        this._selected instanceof Pi
          ? ((o = this._getDateInCurrentMonth(this._selected.start)),
            (u = this._getDateInCurrentMonth(this._selected.end)))
          : (o = u = this._getDateInCurrentMonth(this._selected)),
          (o !== t || u !== t) && this.selectedChange.emit(n),
          this._userSelection.emit({ value: n, event: e.event }),
          this._clearPreview(),
          this._changeDetectorRef.markForCheck();
      }
      _updateActiveDate(e) {
        let t = e.value,
          n = this._activeDate;
        (this.activeDate = this._getDateFromDayOfMonth(t)),
          this._dateAdapter.compareDate(n, this.activeDate) &&
            this.activeDateChange.emit(this._activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          n = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              n ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              n ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              -7
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              7
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              1 - this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              this._dateAdapter.getNumDaysInMonth(this._activeDate) -
                this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
            break;
          case 34:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
            break;
          case 13:
          case 32:
            (this._selectionKeyPressed = !0),
              this._canSelect(this._activeDate) && e.preventDefault();
            return;
          case 27:
            this._previewEnd != null &&
              !Hp(e) &&
              (this._clearPreview(),
              this.activeDrag
                ? this.dragEnded.emit({ value: null, event: e })
                : (this.selectedChange.emit(null),
                  this._userSelection.emit({ value: null, event: e })),
              e.preventDefault(),
              e.stopPropagation());
            return;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._canSelect(this._activeDate) &&
            this._dateSelected({
              value: this._dateAdapter.getDate(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setRanges(this.selected),
          (this._todayDate = this._getCellCompareValue(
            this._dateAdapter.today()
          )),
          (this._monthLabel = this._dateFormats.display.monthLabel
            ? this._dateAdapter.format(
                this.activeDate,
                this._dateFormats.display.monthLabel
              )
            : this._dateAdapter
                .getMonthNames("short")
                [
                  this._dateAdapter.getMonth(this.activeDate)
                ].toLocaleUpperCase());
        let e = this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          1
        );
        (this._firstWeekOffset =
          (nc +
            this._dateAdapter.getDayOfWeek(e) -
            this._dateAdapter.getFirstDayOfWeek()) %
          nc),
          this._initWeekdays(),
          this._createWeekCells(),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell(e) {
        this._matCalendarBody._focusActiveCell(e);
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _previewChanged({ event: e, value: t }) {
        if (this._rangeStrategy) {
          let n = t ? t.rawValue : null,
            o = this._rangeStrategy.createPreview(n, this.selected, e);
          if (
            ((this._previewStart = this._getCellCompareValue(o.start)),
            (this._previewEnd = this._getCellCompareValue(o.end)),
            this.activeDrag && n)
          ) {
            let u = this._rangeStrategy.createDrag?.(
              this.activeDrag.value,
              this.selected,
              n,
              e
            );
            u &&
              ((this._previewStart = this._getCellCompareValue(u.start)),
              (this._previewEnd = this._getCellCompareValue(u.end)));
          }
          this._changeDetectorRef.detectChanges();
        }
      }
      _dragEnded(e) {
        if (this.activeDrag)
          if (e.value) {
            let t = this._rangeStrategy?.createDrag?.(
              this.activeDrag.value,
              this.selected,
              e.value,
              e.event
            );
            this.dragEnded.emit({ value: t ?? null, event: e.event });
          } else this.dragEnded.emit({ value: null, event: e.event });
      }
      _getDateFromDayOfMonth(e) {
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          e
        );
      }
      _initWeekdays() {
        let e = this._dateAdapter.getFirstDayOfWeek(),
          t = this._dateAdapter.getDayOfWeekNames("narrow"),
          o = this._dateAdapter
            .getDayOfWeekNames("long")
            .map((u, b) => ({ long: u, narrow: t[b], id: S_++ }));
        this._weekdays = o.slice(e).concat(o.slice(0, e));
      }
      _createWeekCells() {
        let e = this._dateAdapter.getNumDaysInMonth(this.activeDate),
          t = this._dateAdapter.getDateNames();
        this._weeks = [[]];
        for (let n = 0, o = this._firstWeekOffset; n < e; n++, o++) {
          o == nc && (this._weeks.push([]), (o = 0));
          let u = this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              n + 1
            ),
            b = this._shouldEnableDate(u),
            C = this._dateAdapter.format(
              u,
              this._dateFormats.display.dateA11yLabel
            ),
            T = this.dateClass ? this.dateClass(u, "month") : void 0;
          this._weeks[this._weeks.length - 1].push(
            new bo(n + 1, t[n], C, b, T, this._getCellCompareValue(u), u)
          );
        }
      }
      _shouldEnableDate(e) {
        return (
          !!e &&
          (!this.minDate ||
            this._dateAdapter.compareDate(e, this.minDate) >= 0) &&
          (!this.maxDate ||
            this._dateAdapter.compareDate(e, this.maxDate) <= 0) &&
          (!this.dateFilter || this.dateFilter(e))
        );
      }
      _getDateInCurrentMonth(e) {
        return e && this._hasSameMonthAndYear(e, this.activeDate)
          ? this._dateAdapter.getDate(e)
          : null;
      }
      _hasSameMonthAndYear(e, t) {
        return !!(
          e &&
          t &&
          this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(t) &&
          this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t)
        );
      }
      _getCellCompareValue(e) {
        if (e) {
          let t = this._dateAdapter.getYear(e),
            n = this._dateAdapter.getMonth(e),
            o = this._dateAdapter.getDate(e);
          return new Date(t, n, o).getTime();
        }
        return null;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setRanges(e) {
        e instanceof Pi
          ? ((this._rangeStart = this._getCellCompareValue(e.start)),
            (this._rangeEnd = this._getCellCompareValue(e.end)),
            (this._isRange = !0))
          : ((this._rangeStart = this._rangeEnd = this._getCellCompareValue(e)),
            (this._isRange = !1)),
          (this._comparisonRangeStart = this._getCellCompareValue(
            this.comparisonStart
          )),
          (this._comparisonRangeEnd = this._getCellCompareValue(
            this.comparisonEnd
          ));
      }
      _canSelect(e) {
        return !this.dateFilter || this.dateFilter(e);
      }
      _clearPreview() {
        this._previewStart = this._previewEnd = null;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(qe), F(Ir, 8), F(li, 8), F(Pr, 8), F(Iu, 8));
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["mat-month-view"]],
          viewQuery: function (t, n) {
            if ((t & 1 && at(Rr, 5), t & 2)) {
              let o;
              tt((o = it())) && (n._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
            activeDrag: "activeDrag",
          },
          outputs: {
            selectedChange: "selectedChange",
            _userSelection: "_userSelection",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMonthView"],
          standalone: !0,
          features: [wt, le],
          decls: 8,
          vars: 14,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            [1, "mat-calendar-table-header"],
            ["scope", "col"],
            ["aria-hidden", "true"],
            ["colspan", "7", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "previewChange",
              "dragStarted",
              "dragEnded",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "comparisonStart",
              "comparisonEnd",
              "previewStart",
              "previewEnd",
              "isRange",
              "labelMinRequiredCells",
              "activeCell",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [1, "cdk-visually-hidden"],
          ],
          template: function (t, n) {
            t & 1 &&
              (a(0, "table", 0)(1, "thead", 1)(2, "tr"),
              _r(3, c_, 5, 2, "th", 2, Eu),
              s(),
              a(5, "tr", 3),
              R(6, "th", 4),
              s()(),
              a(7, "tbody", 5),
              O("selectedValueChange", function (u) {
                return n._dateSelected(u);
              })("activeDateChange", function (u) {
                return n._updateActiveDate(u);
              })("previewChange", function (u) {
                return n._previewChanged(u);
              })("dragStarted", function (u) {
                return n.dragStarted.emit(u);
              })("dragEnded", function (u) {
                return n._dragEnded(u);
              })("keyup", function (u) {
                return n._handleCalendarBodyKeyup(u);
              })("keydown", function (u) {
                return n._handleCalendarBodyKeydown(u);
              }),
              s()()),
              t & 2 &&
                (d(3),
                br(n._weekdays),
                d(4),
                g("label", n._monthLabel)("rows", n._weeks)(
                  "todayValue",
                  n._todayDate
                )("startValue", n._rangeStart)("endValue", n._rangeEnd)(
                  "comparisonStart",
                  n._comparisonRangeStart
                )("comparisonEnd", n._comparisonRangeEnd)(
                  "previewStart",
                  n._previewStart
                )("previewEnd", n._previewEnd)("isRange", n._isRange)(
                  "labelMinRequiredCells",
                  3
                )("activeCell", n._dateAdapter.getDate(n.activeDate) - 1)(
                  "startDateAccessibleName",
                  n.startDateAccessibleName
                )("endDateAccessibleName", n.endDateAccessibleName));
          },
          dependencies: [Rr],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return r;
  })(),
  _i = 24,
  rc = 4,
  Tu = (() => {
    class r {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          n =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          n,
          this.minDate,
          this.maxDate
        )),
          Au(
            this._dateAdapter,
            t,
            this._activeDate,
            this.minDate,
            this.maxDate
          ) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Pi
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedYear(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, n) {
        (this._changeDetectorRef = e),
          (this._dateAdapter = t),
          (this._dir = n),
          (this._rerenderSubscription = Ai.EMPTY),
          (this.selectedChange = new xe()),
          (this.yearSelected = new xe()),
          (this.activeDateChange = new xe()),
          this._dateAdapter,
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Cn(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _init() {
        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());
        let t =
          this._dateAdapter.getYear(this._activeDate) -
          _o(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
        this._years = [];
        for (let n = 0, o = []; n < _i; n++)
          o.push(t + n),
            o.length == rc &&
              (this._years.push(o.map((u) => this._createCellForYear(u))),
              (o = []));
        this._changeDetectorRef.markForCheck();
      }
      _yearSelected(e) {
        let t = e.value,
          n = this._dateAdapter.createDate(t, 0, 1),
          o = this._getDateFromYear(t);
        this.yearSelected.emit(n), this.selectedChange.emit(o);
      }
      _updateActiveDate(e) {
        let t = e.value,
          n = this._activeDate;
        (this.activeDate = this._getDateFromYear(t)),
          this._dateAdapter.compareDate(n, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          n = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              n ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              n ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -rc
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              rc
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -_o(
                this._dateAdapter,
                this.activeDate,
                this.minDate,
                this.maxDate
              )
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              _i -
                _o(
                  this._dateAdapter,
                  this.activeDate,
                  this.minDate,
                  this.maxDate
                ) -
                1
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -_i * 10 : -_i
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? _i * 10 : _i
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked(),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._yearSelected({
              value: this._dateAdapter.getYear(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _getActiveCell() {
        return _o(
          this._dateAdapter,
          this.activeDate,
          this.minDate,
          this.maxDate
        );
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getDateFromYear(e) {
        let t = this._dateAdapter.getMonth(this.activeDate),
          n = this._dateAdapter.getNumDaysInMonth(
            this._dateAdapter.createDate(e, t, 1)
          );
        return this._dateAdapter.createDate(
          e,
          t,
          Math.min(this._dateAdapter.getDate(this.activeDate), n)
        );
      }
      _createCellForYear(e) {
        let t = this._dateAdapter.createDate(e, 0, 1),
          n = this._dateAdapter.getYearName(t),
          o = this.dateClass ? this.dateClass(t, "multi-year") : void 0;
        return new bo(e, n, n, this._shouldEnableYear(e), o);
      }
      _shouldEnableYear(e) {
        if (
          e == null ||
          (this.maxDate && e > this._dateAdapter.getYear(this.maxDate)) ||
          (this.minDate && e < this._dateAdapter.getYear(this.minDate))
        )
          return !1;
        if (!this.dateFilter) return !0;
        let t = this._dateAdapter.createDate(e, 0, 1);
        for (
          let n = t;
          this._dateAdapter.getYear(n) == e;
          n = this._dateAdapter.addCalendarDays(n, 1)
        )
          if (this.dateFilter(n)) return !0;
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedYear(e) {
        if (((this._selectedYear = null), e instanceof Pi)) {
          let t = e.start || e.end;
          t && (this._selectedYear = this._dateAdapter.getYear(t));
        } else e && (this._selectedYear = this._dateAdapter.getYear(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(qe), F(li, 8), F(Pr, 8));
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["mat-multi-year-view"]],
          viewQuery: function (t, n) {
            if ((t & 1 && at(Rr, 5), t & 2)) {
              let o;
              tt((o = it())) && (n._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMultiYearView"],
          standalone: !0,
          features: [le],
          decls: 5,
          vars: 7,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (t, n) {
            t & 1 &&
              (a(0, "table", 0)(1, "thead", 1)(2, "tr"),
              R(3, "th", 2),
              s()(),
              a(4, "tbody", 3),
              O("selectedValueChange", function (u) {
                return n._yearSelected(u);
              })("activeDateChange", function (u) {
                return n._updateActiveDate(u);
              })("keyup", function (u) {
                return n._handleCalendarBodyKeyup(u);
              })("keydown", function (u) {
                return n._handleCalendarBodyKeydown(u);
              }),
              s()()),
              t & 2 &&
                (d(4),
                g("rows", n._years)("todayValue", n._todayYear)(
                  "startValue",
                  n._selectedYear
                )("endValue", n._selectedYear)("numCols", 4)(
                  "cellAspectRatio",
                  4 / 7
                )("activeCell", n._getActiveCell()));
          },
          dependencies: [Rr],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return r;
  })();
function Au(r, i, e, t, n) {
  let o = r.getYear(i),
    u = r.getYear(e),
    b = Fu(r, t, n);
  return Math.floor((o - b) / _i) === Math.floor((u - b) / _i);
}
function _o(r, i, e, t) {
  let n = r.getYear(i);
  return M_(n - Fu(r, e, t), _i);
}
function Fu(r, i, e) {
  let t = 0;
  return e ? (t = r.getYear(e) - _i + 1) : i && (t = r.getYear(i)), t;
}
function M_(r, i) {
  return ((r % i) + i) % i;
}
var ku = (() => {
    class r {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let t = this._activeDate,
          n =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          n,
          this.minDate,
          this.maxDate
        )),
          this._dateAdapter.getYear(t) !==
            this._dateAdapter.getYear(this._activeDate) && this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Pi
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedMonth(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, t, n, o) {
        (this._changeDetectorRef = e),
          (this._dateFormats = t),
          (this._dateAdapter = n),
          (this._dir = o),
          (this._rerenderSubscription = Ai.EMPTY),
          (this.selectedChange = new xe()),
          (this.monthSelected = new xe()),
          (this.activeDateChange = new xe()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Cn(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _monthSelected(e) {
        let t = e.value,
          n = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            t,
            1
          );
        this.monthSelected.emit(n);
        let o = this._getDateFromMonth(t);
        this.selectedChange.emit(o);
      }
      _updateActiveDate(e) {
        let t = e.value,
          n = this._activeDate;
        (this.activeDate = this._getDateFromMonth(t)),
          this._dateAdapter.compareDate(n, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let t = this._activeDate,
          n = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              n ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              n ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -4
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              4
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              11 - this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -10 : -1
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? 10 : 1
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(t, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._monthSelected({
              value: this._dateAdapter.getMonth(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setSelectedMonth(this.selected),
          (this._todayMonth = this._getMonthInCurrentYear(
            this._dateAdapter.today()
          )),
          (this._yearLabel = this._dateAdapter.getYearName(this.activeDate));
        let e = this._dateAdapter.getMonthNames("short");
        (this._months = [
          [0, 1, 2, 3],
          [4, 5, 6, 7],
          [8, 9, 10, 11],
        ].map((t) => t.map((n) => this._createCellForMonth(n, e[n])))),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getMonthInCurrentYear(e) {
        return e &&
          this._dateAdapter.getYear(e) ==
            this._dateAdapter.getYear(this.activeDate)
          ? this._dateAdapter.getMonth(e)
          : null;
      }
      _getDateFromMonth(e) {
        let t = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          n = this._dateAdapter.getNumDaysInMonth(t);
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          e,
          Math.min(this._dateAdapter.getDate(this.activeDate), n)
        );
      }
      _createCellForMonth(e, t) {
        let n = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          o = this._dateAdapter.format(
            n,
            this._dateFormats.display.monthYearA11yLabel
          ),
          u = this.dateClass ? this.dateClass(n, "year") : void 0;
        return new bo(
          e,
          t.toLocaleUpperCase(),
          o,
          this._shouldEnableMonth(e),
          u
        );
      }
      _shouldEnableMonth(e) {
        let t = this._dateAdapter.getYear(this.activeDate);
        if (
          e == null ||
          this._isYearAndMonthAfterMaxDate(t, e) ||
          this._isYearAndMonthBeforeMinDate(t, e)
        )
          return !1;
        if (!this.dateFilter) return !0;
        let n = this._dateAdapter.createDate(t, e, 1);
        for (
          let o = n;
          this._dateAdapter.getMonth(o) == e;
          o = this._dateAdapter.addCalendarDays(o, 1)
        )
          if (this.dateFilter(o)) return !0;
        return !1;
      }
      _isYearAndMonthAfterMaxDate(e, t) {
        if (this.maxDate) {
          let n = this._dateAdapter.getYear(this.maxDate),
            o = this._dateAdapter.getMonth(this.maxDate);
          return e > n || (e === n && t > o);
        }
        return !1;
      }
      _isYearAndMonthBeforeMinDate(e, t) {
        if (this.minDate) {
          let n = this._dateAdapter.getYear(this.minDate),
            o = this._dateAdapter.getMonth(this.minDate);
          return e < n || (e === n && t < o);
        }
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedMonth(e) {
        e instanceof Pi
          ? (this._selectedMonth =
              this._getMonthInCurrentYear(e.start) ||
              this._getMonthInCurrentYear(e.end))
          : (this._selectedMonth = this._getMonthInCurrentYear(e));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(qe), F(Ir, 8), F(li, 8), F(Pr, 8));
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["mat-year-view"]],
          viewQuery: function (t, n) {
            if ((t & 1 && at(Rr, 5), t & 2)) {
              let o;
              tt((o = it())) && (n._matCalendarBody = o.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            monthSelected: "monthSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matYearView"],
          standalone: !0,
          features: [le],
          decls: 5,
          vars: 9,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "labelMinRequiredCells",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (t, n) {
            t & 1 &&
              (a(0, "table", 0)(1, "thead", 1)(2, "tr"),
              R(3, "th", 2),
              s()(),
              a(4, "tbody", 3),
              O("selectedValueChange", function (u) {
                return n._monthSelected(u);
              })("activeDateChange", function (u) {
                return n._updateActiveDate(u);
              })("keyup", function (u) {
                return n._handleCalendarBodyKeyup(u);
              })("keydown", function (u) {
                return n._handleCalendarBodyKeydown(u);
              }),
              s()()),
              t & 2 &&
                (d(4),
                g("label", n._yearLabel)("rows", n._months)(
                  "todayValue",
                  n._todayMonth
                )("startValue", n._selectedMonth)("endValue", n._selectedMonth)(
                  "labelMinRequiredCells",
                  2
                )("numCols", 4)("cellAspectRatio", 4 / 7)(
                  "activeCell",
                  n._dateAdapter.getMonth(n.activeDate)
                ));
          },
          dependencies: [Rr],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return r;
  })(),
  O_ = 1,
  Ru = (() => {
    class r {
      constructor(e, t, n, o, u) {
        (this._intl = e),
          (this.calendar = t),
          (this._dateAdapter = n),
          (this._dateFormats = o),
          (this._id = `mat-calendar-header-${O_++}`),
          (this._periodButtonLabelId = `${this._id}-period-label`),
          this.calendar.stateChanges.subscribe(() => u.markForCheck());
      }
      get periodButtonText() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRange(...this._formatMinAndMaxYearLabels());
      }
      get periodButtonDescription() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRangeLabel(
              ...this._formatMinAndMaxYearLabels()
            );
      }
      get periodButtonLabel() {
        return this.calendar.currentView == "month"
          ? this._intl.switchToMultiYearViewLabel
          : this._intl.switchToMonthViewLabel;
      }
      get prevButtonLabel() {
        return {
          month: this._intl.prevMonthLabel,
          year: this._intl.prevYearLabel,
          "multi-year": this._intl.prevMultiYearLabel,
        }[this.calendar.currentView];
      }
      get nextButtonLabel() {
        return {
          month: this._intl.nextMonthLabel,
          year: this._intl.nextYearLabel,
          "multi-year": this._intl.nextMultiYearLabel,
        }[this.calendar.currentView];
      }
      currentPeriodClicked() {
        this.calendar.currentView =
          this.calendar.currentView == "month" ? "multi-year" : "month";
      }
      previousClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? -1 : -_i
              );
      }
      nextClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? 1 : _i
              );
      }
      previousEnabled() {
        return this.calendar.minDate
          ? !this.calendar.minDate ||
              !this._isSameView(this.calendar.activeDate, this.calendar.minDate)
          : !0;
      }
      nextEnabled() {
        return (
          !this.calendar.maxDate ||
          !this._isSameView(this.calendar.activeDate, this.calendar.maxDate)
        );
      }
      _isSameView(e, t) {
        return this.calendar.currentView == "month"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t) &&
              this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(t)
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(t)
          : Au(
              this._dateAdapter,
              e,
              t,
              this.calendar.minDate,
              this.calendar.maxDate
            );
      }
      _formatMinAndMaxYearLabels() {
        let t =
            this._dateAdapter.getYear(this.calendar.activeDate) -
            _o(
              this._dateAdapter,
              this.calendar.activeDate,
              this.calendar.minDate,
              this.calendar.maxDate
            ),
          n = t + _i - 1,
          o = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(t, 0, 1)
          ),
          u = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(n, 0, 1)
          );
        return [o, u];
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(
            F(vo),
            F(Gt(() => oc)),
            F(li, 8),
            F(Ir, 8),
            F(qe)
          );
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["mat-calendar-header"]],
          exportAs: ["matCalendarHeader"],
          standalone: !0,
          features: [le],
          ngContentSelectors: d_,
          decls: 17,
          vars: 11,
          consts: [
            [1, "mat-calendar-header"],
            [1, "mat-calendar-controls"],
            ["aria-live", "polite", 1, "cdk-visually-hidden", 3, "id"],
            [
              "mat-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-period-button",
              3,
              "click",
            ],
            ["aria-hidden", "true"],
            [
              "viewBox",
              "0 0 10 5",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-calendar-arrow",
            ],
            ["points", "0,0 5,5 10,0"],
            [1, "mat-calendar-spacer"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-previous-button",
              3,
              "click",
              "disabled",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "focusable",
              "false",
              "aria-hidden",
              "true",
            ],
            ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-next-button",
              3,
              "click",
              "disabled",
            ],
            ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
          ],
          template: function (t, n) {
            t & 1 &&
              (Pt(),
              a(0, "div", 0)(1, "div", 1)(2, "span", 2),
              c(3),
              s(),
              a(4, "button", 3),
              O("click", function () {
                return n.currentPeriodClicked();
              }),
              a(5, "span", 4),
              c(6),
              s(),
              ct(),
              a(7, "svg", 5),
              R(8, "polygon", 6),
              s()(),
              jn(),
              R(9, "div", 7),
              xt(10),
              a(11, "button", 8),
              O("click", function () {
                return n.previousClicked();
              }),
              ct(),
              a(12, "svg", 9),
              R(13, "path", 10),
              s()(),
              jn(),
              a(14, "button", 11),
              O("click", function () {
                return n.nextClicked();
              }),
              ct(),
              a(15, "svg", 9),
              R(16, "path", 12),
              s()()()()),
              t & 2 &&
                (d(2),
                g("id", n._periodButtonLabelId),
                d(),
                E(n.periodButtonDescription),
                d(),
                se("aria-label", n.periodButtonLabel)(
                  "aria-describedby",
                  n._periodButtonLabelId
                ),
                d(2),
                E(n.periodButtonText),
                d(),
                X("mat-calendar-invert", n.calendar.currentView !== "month"),
                d(4),
                g("disabled", !n.previousEnabled()),
                se("aria-label", n.prevButtonLabel),
                d(3),
                g("disabled", !n.nextEnabled()),
                se("aria-label", n.nextButtonLabel));
          },
          dependencies: [Ql, Zl],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return r;
  })(),
  oc = (() => {
    class r {
      get startAt() {
        return this._startAt;
      }
      set startAt(e) {
        this._startAt = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Pi
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ));
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get activeDate() {
        return this._clampedActiveDate;
      }
      set activeDate(e) {
        (this._clampedActiveDate = this._dateAdapter.clampDate(
          e,
          this.minDate,
          this.maxDate
        )),
          this.stateChanges.next(),
          this._changeDetectorRef.markForCheck();
      }
      get currentView() {
        return this._currentView;
      }
      set currentView(e) {
        let t = this._currentView !== e ? e : null;
        (this._currentView = e),
          (this._moveFocusOnNextTick = !0),
          this._changeDetectorRef.markForCheck(),
          t && this.viewChanged.emit(t);
      }
      constructor(e, t, n, o) {
        (this._dateAdapter = t),
          (this._dateFormats = n),
          (this._changeDetectorRef = o),
          (this._moveFocusOnNextTick = !1),
          (this.startView = "month"),
          (this.selectedChange = new xe()),
          (this.yearSelected = new xe()),
          (this.monthSelected = new xe()),
          (this.viewChanged = new xe(!0)),
          (this._userSelection = new xe()),
          (this._userDragDrop = new xe()),
          (this._activeDrag = null),
          (this.stateChanges = new Ee()),
          (this._intlChanges = e.changes.subscribe(() => {
            o.markForCheck(), this.stateChanges.next();
          }));
      }
      ngAfterContentInit() {
        (this._calendarHeaderPortal = new fo(this.headerComponent || Ru)),
          (this.activeDate = this.startAt || this._dateAdapter.today()),
          (this._currentView = this.startView);
      }
      ngAfterViewChecked() {
        this._moveFocusOnNextTick &&
          ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
      }
      ngOnDestroy() {
        this._intlChanges.unsubscribe(), this.stateChanges.complete();
      }
      ngOnChanges(e) {
        let t =
            e.minDate &&
            !this._dateAdapter.sameDate(
              e.minDate.previousValue,
              e.minDate.currentValue
            )
              ? e.minDate
              : void 0,
          n =
            e.maxDate &&
            !this._dateAdapter.sameDate(
              e.maxDate.previousValue,
              e.maxDate.currentValue
            )
              ? e.maxDate
              : void 0,
          o = t || n || e.dateFilter;
        if (o && !o.firstChange) {
          let u = this._getCurrentViewComponent();
          u &&
            ((this._moveFocusOnNextTick = !0),
            this._changeDetectorRef.detectChanges(),
            u._init());
        }
        this.stateChanges.next();
      }
      focusActiveCell() {
        this._getCurrentViewComponent()._focusActiveCell(!1);
      }
      updateTodaysDate() {
        this._getCurrentViewComponent()._init();
      }
      _dateSelected(e) {
        let t = e.value;
        (this.selected instanceof Pi ||
          (t && !this._dateAdapter.sameDate(t, this.selected))) &&
          this.selectedChange.emit(t),
          this._userSelection.emit(e);
      }
      _yearSelectedInMultiYearView(e) {
        this.yearSelected.emit(e);
      }
      _monthSelectedInYearView(e) {
        this.monthSelected.emit(e);
      }
      _goToDateInView(e, t) {
        (this.activeDate = e), (this.currentView = t);
      }
      _dragStarted(e) {
        this._activeDrag = e;
      }
      _dragEnded(e) {
        this._activeDrag &&
          (e.value && this._userDragDrop.emit(e), (this._activeDrag = null));
      }
      _getCurrentViewComponent() {
        return this.monthView || this.yearView || this.multiYearView;
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(vo), F(li, 8), F(Ir, 8), F(qe));
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["mat-calendar"]],
          viewQuery: function (t, n) {
            if ((t & 1 && (at(Ou, 5), at(ku, 5), at(Tu, 5)), t & 2)) {
              let o;
              tt((o = it())) && (n.monthView = o.first),
                tt((o = it())) && (n.yearView = o.first),
                tt((o = it())) && (n.multiYearView = o.first);
            }
          },
          hostAttrs: [1, "mat-calendar"],
          inputs: {
            headerComponent: "headerComponent",
            startAt: "startAt",
            startView: "startView",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            monthSelected: "monthSelected",
            viewChanged: "viewChanged",
            _userSelection: "_userSelection",
            _userDragDrop: "_userDragDrop",
          },
          exportAs: ["matCalendar"],
          standalone: !0,
          features: [yt([D_]), wt, le],
          decls: 5,
          vars: 2,
          consts: [
            [3, "cdkPortalOutlet"],
            [
              "cdkMonitorSubtreeFocus",
              "",
              "tabindex",
              "-1",
              1,
              "mat-calendar-content",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "_userSelection",
              "dragStarted",
              "dragEnded",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDateChange",
              "monthSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "yearSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
          ],
          template: function (t, n) {
            if (
              (t & 1 &&
                (M(0, p_, 0, 0, "ng-template", 0),
                a(1, "div", 1),
                M(2, u_, 1, 11, "mat-month-view", 2)(
                  3,
                  h_,
                  1,
                  6,
                  "mat-year-view",
                  3
                )(4, m_, 1, 6, "mat-multi-year-view", 3),
                s()),
              t & 2)
            ) {
              let o;
              g("cdkPortalOutlet", n._calendarHeaderPortal),
                d(2),
                Li(
                  (o = n.currentView) === "month"
                    ? 2
                    : o === "year"
                    ? 3
                    : o === "multi-year"
                    ? 4
                    : -1
                );
            }
          },
          dependencies: [Vl, Qp, Ou, ku, Tu],
          styles: [
            '.mat-calendar{display:block;line-height:normal;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-app-on-surface-variant))}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-app-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return r;
  })(),
  Pu = {
    transformPanel: Wn("transformPanel", [
      ui(
        "void => enter-dropdown",
        pi(
          "120ms cubic-bezier(0, 0, 0.2, 1)",
          Xs([
            Nt({ opacity: 0, transform: "scale(1, 0.8)" }),
            Nt({ opacity: 1, transform: "scale(1, 1)" }),
          ])
        )
      ),
      ui(
        "void => enter-dialog",
        pi(
          "150ms cubic-bezier(0, 0, 0.2, 1)",
          Xs([
            Nt({ opacity: 0, transform: "scale(0.7)" }),
            Nt({ transform: "none", opacity: 1 }),
          ])
        )
      ),
      ui("* => void", pi("100ms linear", Nt({ opacity: 0 }))),
    ]),
    fadeInCalendar: Wn("fadeInCalendar", [
      hn("void", Nt({ opacity: 0 })),
      hn("enter", Nt({ opacity: 1 })),
      ui("void => *", pi("120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)")),
    ]),
  };
var T_ = new $e("mat-datepicker-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let r = te(Er);
    return () => r.scrollStrategies.reposition();
  },
});
function k_(r) {
  return () => r.scrollStrategies.reposition();
}
var P_ = { provide: T_, deps: [Er], useFactory: k_ },
  E_ = (() => {
    class r {
      constructor(e, t, n, o, u, b) {
        (this._elementRef = e),
          (this._changeDetectorRef = t),
          (this._globalModel = n),
          (this._dateAdapter = o),
          (this._rangeSelectionStrategy = u),
          (this._subscriptions = new Ai()),
          (this._animationDone = new Ee()),
          (this._isAnimating = !1),
          (this._actionsPortal = null),
          (this._closeButtonText = b.closeCalendarLabel);
      }
      ngOnInit() {
        this._animationState = this.datepicker.touchUi
          ? "enter-dialog"
          : "enter-dropdown";
      }
      ngAfterViewInit() {
        this._subscriptions.add(
          this.datepicker.stateChanges.subscribe(() => {
            this._changeDetectorRef.markForCheck();
          })
        ),
          this._calendar.focusActiveCell();
      }
      ngOnDestroy() {
        this._subscriptions.unsubscribe(), this._animationDone.complete();
      }
      _handleUserSelection(e) {
        let t = this._model.selection,
          n = e.value,
          o = t instanceof Pi;
        if (o && this._rangeSelectionStrategy) {
          let u = this._rangeSelectionStrategy.selectionFinished(n, t, e.event);
          this._model.updateSelection(u, this);
        } else
          n && (o || !this._dateAdapter.sameDate(n, t)) && this._model.add(n);
        (!this._model || this._model.isComplete()) &&
          !this._actionsPortal &&
          this.datepicker.close();
      }
      _handleUserDragDrop(e) {
        this._model.updateSelection(e.value, this);
      }
      _startExitAnimation() {
        (this._animationState = "void"), this._changeDetectorRef.markForCheck();
      }
      _handleAnimationEvent(e) {
        (this._isAnimating = e.phaseName === "start"),
          this._isAnimating || this._animationDone.next();
      }
      _getSelected() {
        return this._model.selection;
      }
      _applyPendingSelection() {
        this._model !== this._globalModel &&
          this._globalModel.updateSelection(this._model.selection, this);
      }
      _assignActions(e, t) {
        (this._model = e ? this._globalModel.clone() : this._globalModel),
          (this._actionsPortal = e),
          t && this._changeDetectorRef.detectChanges();
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(Pe), F(qe), F(Ba), F(li), F(Iu, 8), F(vo));
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["mat-datepicker-content"]],
          viewQuery: function (t, n) {
            if ((t & 1 && at(oc, 5), t & 2)) {
              let o;
              tt((o = it())) && (n._calendar = o.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-content"],
          hostVars: 5,
          hostBindings: function (t, n) {
            t & 1 &&
              Od("@transformPanel.start", function (u) {
                return n._handleAnimationEvent(u);
              })("@transformPanel.done", function (u) {
                return n._handleAnimationEvent(u);
              }),
              t & 2 &&
                (Go("@transformPanel", n._animationState),
                Fe(n.color ? "mat-" + n.color : ""),
                X("mat-datepicker-content-touch", n.datepicker.touchUi));
          },
          inputs: { color: "color" },
          exportAs: ["matDatepickerContent"],
          standalone: !0,
          features: [le],
          decls: 5,
          vars: 27,
          consts: [
            [
              "cdkTrapFocus",
              "",
              "role",
              "dialog",
              1,
              "mat-datepicker-content-container",
            ],
            [
              3,
              "yearSelected",
              "monthSelected",
              "viewChanged",
              "_userSelection",
              "_userDragDrop",
              "id",
              "startAt",
              "startView",
              "minDate",
              "maxDate",
              "dateFilter",
              "headerComponent",
              "selected",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [3, "cdkPortalOutlet"],
            [
              "type",
              "button",
              "mat-raised-button",
              "",
              1,
              "mat-datepicker-close-button",
              3,
              "focus",
              "blur",
              "click",
              "color",
            ],
          ],
          template: function (t, n) {
            if (
              (t & 1 &&
                (a(0, "div", 0)(1, "mat-calendar", 1),
                O("yearSelected", function (u) {
                  return n.datepicker._selectYear(u);
                })("monthSelected", function (u) {
                  return n.datepicker._selectMonth(u);
                })("viewChanged", function (u) {
                  return n.datepicker._viewChanged(u);
                })("_userSelection", function (u) {
                  return n._handleUserSelection(u);
                })("_userDragDrop", function (u) {
                  return n._handleUserDragDrop(u);
                }),
                s(),
                M(2, f_, 0, 0, "ng-template", 2),
                a(3, "button", 3),
                O("focus", function () {
                  return (n._closeButtonFocused = !0);
                })("blur", function () {
                  return (n._closeButtonFocused = !1);
                })("click", function () {
                  return n.datepicker.close();
                }),
                c(4),
                s()()),
              t & 2)
            ) {
              let o;
              X(
                "mat-datepicker-content-container-with-custom-header",
                n.datepicker.calendarHeaderComponent
              )(
                "mat-datepicker-content-container-with-actions",
                n._actionsPortal
              ),
                se("aria-modal", !0)(
                  "aria-labelledby",
                  (o = n._dialogLabelId) !== null && o !== void 0 ? o : void 0
                ),
                d(),
                Fe(n.datepicker.panelClass),
                g("id", n.datepicker.id)("startAt", n.datepicker.startAt)(
                  "startView",
                  n.datepicker.startView
                )("minDate", n.datepicker._getMinDate())(
                  "maxDate",
                  n.datepicker._getMaxDate()
                )("dateFilter", n.datepicker._getDateFilter())(
                  "headerComponent",
                  n.datepicker.calendarHeaderComponent
                )("selected", n._getSelected())(
                  "dateClass",
                  n.datepicker.dateClass
                )("comparisonStart", n.comparisonStart)(
                  "comparisonEnd",
                  n.comparisonEnd
                )("@fadeInCalendar", "enter")(
                  "startDateAccessibleName",
                  n.startDateAccessibleName
                )("endDateAccessibleName", n.endDateAccessibleName),
                d(),
                g("cdkPortalOutlet", n._actionsPortal),
                d(),
                X("cdk-visually-hidden", !n._closeButtonFocused),
                g("color", n.color || "primary"),
                d(),
                E(n._closeButtonText);
            }
          },
          dependencies: [qp, oc, Vl, Ql],
          styles: [
            ".mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-app-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-app-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-app-corner-large))}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}",
          ],
          encapsulation: 2,
          data: { animation: [Pu.transformPanel, Pu.fadeInCalendar] },
          changeDetection: 0,
        });
      }
    }
    return r;
  })();
var I_ = (() => {
    class r {
      static {
        this.ɵfac = function (t) {
          return new (t || r)();
        };
      }
      static {
        this.ɵdir = ke({
          type: r,
          selectors: [["", "matDatepickerToggleIcon", ""]],
          standalone: !0,
        });
      }
    }
    return r;
  })(),
  A_ = (() => {
    class r {
      get disabled() {
        return this._disabled === void 0 && this.datepicker
          ? this.datepicker.disabled
          : !!this._disabled;
      }
      set disabled(e) {
        this._disabled = e;
      }
      constructor(e, t, n) {
        (this._intl = e),
          (this._changeDetectorRef = t),
          (this._stateChanges = Ai.EMPTY);
        let o = Number(n);
        this.tabIndex = o || o === 0 ? o : null;
      }
      ngOnChanges(e) {
        e.datepicker && this._watchStateChanges();
      }
      ngOnDestroy() {
        this._stateChanges.unsubscribe();
      }
      ngAfterContentInit() {
        this._watchStateChanges();
      }
      _open(e) {
        this.datepicker &&
          !this.disabled &&
          (this.datepicker.open(), e.stopPropagation());
      }
      _watchStateChanges() {
        let e = this.datepicker ? this.datepicker.stateChanges : bt(),
          t =
            this.datepicker && this.datepicker.datepickerInput
              ? this.datepicker.datepickerInput.stateChanges
              : bt(),
          n = this.datepicker
            ? mr(this.datepicker.openedStream, this.datepicker.closedStream)
            : bt();
        this._stateChanges.unsubscribe(),
          (this._stateChanges = mr(this._intl.changes, e, t, n).subscribe(() =>
            this._changeDetectorRef.markForCheck()
          ));
      }
      static {
        this.ɵfac = function (t) {
          return new (t || r)(F(vo), F(qe), $o("tabindex"));
        };
      }
      static {
        this.ɵcmp = oe({
          type: r,
          selectors: [["mat-datepicker-toggle"]],
          contentQueries: function (t, n, o) {
            if ((t & 1 && Ji(o, I_, 5), t & 2)) {
              let u;
              tt((u = it())) && (n._customIcon = u.first);
            }
          },
          viewQuery: function (t, n) {
            if ((t & 1 && at(g_, 5), t & 2)) {
              let o;
              tt((o = it())) && (n._button = o.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-toggle"],
          hostVars: 8,
          hostBindings: function (t, n) {
            t & 1 &&
              O("click", function (u) {
                return n._open(u);
              }),
              t & 2 &&
                (se("tabindex", null)(
                  "data-mat-calendar",
                  n.datepicker ? n.datepicker.id : null
                ),
                X(
                  "mat-datepicker-toggle-active",
                  n.datepicker && n.datepicker.opened
                )(
                  "mat-accent",
                  n.datepicker && n.datepicker.color === "accent"
                )("mat-warn", n.datepicker && n.datepicker.color === "warn"));
          },
          inputs: {
            datepicker: [0, "for", "datepicker"],
            tabIndex: "tabIndex",
            ariaLabel: [0, "aria-label", "ariaLabel"],
            disabled: [2, "disabled", "disabled", ye],
            disableRipple: "disableRipple",
          },
          exportAs: ["matDatepickerToggle"],
          standalone: !0,
          features: [Dt, wt, le],
          ngContentSelectors: b_,
          decls: 4,
          vars: 6,
          consts: [
            ["button", ""],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              3,
              "disabled",
              "disableRipple",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "width",
              "24px",
              "height",
              "24px",
              "fill",
              "currentColor",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-datepicker-toggle-default-icon",
            ],
            [
              "d",
              "M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z",
            ],
          ],
          template: function (t, n) {
            t & 1 &&
              (Pt(__),
              a(0, "button", 1, 0),
              M(2, v_, 2, 0, ":svg:svg", 2),
              xt(3),
              s()),
              t & 2 &&
                (g("disabled", n.disabled)("disableRipple", n.disableRipple),
                se("aria-haspopup", n.datepicker ? "dialog" : null)(
                  "aria-label",
                  n.ariaLabel || n._intl.openCalendarLabel
                )("tabindex", n.disabled ? -1 : n.tabIndex),
                d(2),
                Li(n._customIcon ? -1 : 2));
          },
          dependencies: [Zl],
          styles: [
            ".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return r;
  })();
var Ha = (() => {
  class r {
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({
        providers: [vo, P_],
        imports: [De, wu, cu, Zp, Ea, gi, E_, A_, Ru, Ta],
      });
    }
  }
  return r;
})();
var mc = new $e("@sweetalert2/ngx-sweetalert2#swalProvider"),
  Vu = new $e("@sweetalert2/ngx-sweetalert2#fireOnInit"),
  Nu = new $e("@sweetalert2/ngx-sweetalert2#dismissOnDestroy"),
  Lu = (() => {
    class r {
      swalProvider;
      swalPromiseCache;
      constructor(e) {
        this.swalProvider = e;
      }
      get swal() {
        return (
          this.swalPromiseCache || this.preloadSweetAlertLibrary(),
          this.swalPromiseCache
        );
      }
      preloadSweetAlertLibrary() {
        if (this.swalPromiseCache) return;
        let e = t(this.swalProvider)
          ? this.swalProvider()
          : Promise.resolve(this.swalProvider);
        this.swalPromiseCache = e.then((o) => (n(o) ? o : o.default));
        function t(o) {
          return typeof o == "function" && o.version === void 0;
        }
        function n(o) {
          return typeof o == "function";
        }
      }
      static ɵfac = function (t) {
        return new (t || r)(ie(mc));
      };
      static ɵprov = re({ token: r, factory: r.ɵfac });
    }
    return r;
  })();
function F_() {
  return import("./chunk-JD4N6HK6.mjs");
}
var Bu = (() => {
  class r {
    static forRoot(e = {}) {
      return {
        ngModule: r,
        providers: [
          Lu,
          { provide: mc, useValue: e.provideSwal || F_ },
          { provide: Vu, useValue: e.fireOnInit || !1 },
          { provide: Nu, useValue: e.dismissOnDestroy || !0 },
        ],
      };
    }
    static forChild(e = {}) {
      return {
        ngModule: r,
        providers: [
          ...(e.provideSwal
            ? [Lu, { provide: mc, useValue: e.provideSwal }]
            : []),
          ...(e.fireOnInit !== void 0
            ? [{ provide: Vu, useValue: e.fireOnInit }]
            : []),
          ...(e.dismissOnDestroy !== void 0
            ? [{ provide: Nu, useValue: e.dismissOnDestroy }]
            : []),
        ],
      };
    }
    static ɵfac = function (t) {
      return new (t || r)();
    };
    static ɵmod = be({ type: r });
    static ɵinj = _e({ imports: [De] });
  }
  return r;
})();
var tr = (r) => ({ "is-invalid": r }),
  R_ = (r, i) => ({ "btn-outline-primary": r, "btn-edit-enabled": i });
function V_(r, i) {
  r & 1 &&
    (a(0, "tr")(1, "td", 48)(2, "p"), c(3, "No Vehicles Found"), s()()());
}
function N_(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "tr")(1, "td", 34),
      c(2),
      s(),
      a(3, "td", 34),
      c(4),
      s(),
      a(5, "td", 34),
      c(6),
      s(),
      a(7, "td", 34),
      c(8),
      s(),
      a(9, "td", 34),
      c(10),
      s(),
      a(11, "td", 34),
      c(12),
      s(),
      a(13, "td", 34),
      c(14),
      s(),
      a(15, "td", 34),
      c(16),
      s(),
      a(17, "td")(18, "div", 49)(19, "a", 50),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.onEdit(n));
      }),
      R(20, "i", 51),
      s(),
      a(21, "a", 52),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.openDeleteModal(n));
      }),
      R(22, "i", 53),
      s()()()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = i.index,
      n = _();
    d(2),
      E((n.currentPage - 1) * n.itemsPerPage + t + 1),
      d(2),
      E(e.vehicle_name),
      d(2),
      E(e.YOM),
      d(2),
      E(e.type),
      d(2),
      E(e.VIN),
      d(2),
      E(e.chasis_number),
      d(2),
      E(e.demo_start_date),
      d(2),
      E(e.demo_end_date);
  }
}
function L_(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "li", 54)(1, "a", 43),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.goToPage(n));
      }),
      c(2),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _();
    X("active", e === t.currentPage), d(2), E(e);
  }
}
function B_(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 55)(1, "div", 56)(2, "div", 57)(3, "div", 58)(4, "h5", 59),
      c(5, "Delete User"),
      s()(),
      a(6, "div", 60),
      c(7, "Are you sure you want to delete this user?"),
      s(),
      a(8, "div", 61)(9, "button", 62),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeDeleteModal());
      }),
      c(10, "Cancel"),
      s(),
      a(11, "button", 63),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.deleteVehicleId());
      }),
      c(12, "Delete"),
      s()()()()();
  }
}
function H_(r, i) {
  r & 1 && (a(0, "span", 98), c(1, "*"), s());
}
function j_(r, i) {
  r & 1 &&
    (a(0, "div", 99)(1, "span"), c(2, "Vehicle name is required."), s()());
}
function z_(r, i) {
  r & 1 && (a(0, "span", 99), c(1, "*"), s());
}
function U_(r, i) {
  r & 1 && (a(0, "span"), c(1, "YOM is required."), s());
}
function W_(r, i) {
  if ((r & 1 && (a(0, "div", 99), M(1, U_, 2, 0, "span", 35), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("YOM")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function $_(r, i) {
  r & 1 && (a(0, "span", 98), c(1, "*"), s());
}
function G_(r, i) {
  r & 1 && (a(0, "div", 99)(1, "span"), c(2, "Type is required."), s()());
}
function Y_(r, i) {
  r & 1 && (a(0, "span", 99), c(1, "*"), s());
}
function q_(r, i) {
  r & 1 && (a(0, "span"), c(1, " Chasis number is required. "), s());
}
function K_(r, i) {
  if ((r & 1 && (a(0, "div", 99), M(1, q_, 2, 0, "span", 35), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("chasis_number")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Q_(r, i) {
  r & 1 && (a(0, "span", 99), c(1, "*"), s());
}
function Z_(r, i) {
  r & 1 && (a(0, "span", 101), c(1, " Start date is required. "), s());
}
function X_(r, i) {
  if ((r & 1 && (a(0, "div", 99), M(1, Z_, 2, 0, "span", 100), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("demo_start_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function J_(r, i) {
  r & 1 && (a(0, "span", 99), c(1, "*"), s());
}
function eb(r, i) {
  r & 1 && (a(0, "span"), c(1, " End date is required. "), s());
}
function tb(r, i) {
  if ((r & 1 && (a(0, "div", 99), M(1, eb, 2, 0, "span", 35), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("demo_end_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function ib(r, i) {
  r & 1 && (a(0, "span", 99), c(1, "*"), s());
}
function nb(r, i) {
  r & 1 && (a(0, "span"), c(1, " VIN is required. "), s());
}
function rb(r, i) {
  if ((r & 1 && (a(0, "div", 99), M(1, nb, 2, 0, "span", 35), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("VIN")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function ob(r, i) {
  if (r & 1) {
    let e = J();
    Me(0),
      a(1, "button", 102),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.onUpdate());
      }),
      c(2, " Edit "),
      s(),
      Oe();
  }
  if (r & 2) {
    let e = _(2);
    d(),
      g("disabled", !e.isVehicleNameChanged())(
        "ngClass",
        wi(2, R_, !e.isVehicleNameChanged(), e.isVehicleNameChanged())
      );
  }
}
function ab(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 62),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.onSave());
      }),
      c(1, " Save "),
      s();
  }
  if (r & 2) {
    let e = _(2);
    se("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function sb(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 64)(1, "div", 65)(2, "div", 66)(3, "div", 57)(4, "div", 58)(
      5,
      "h5",
      67
    ),
      c(6),
      s(),
      a(7, "button", 68),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeModal());
      }),
      a(8, "span", 69),
      c(9, "\xD7"),
      s()()(),
      a(10, "div", 70)(11, "div", 71)(12, "div", 72)(13, "label", 73),
      c(14, " Vehicle Name "),
      M(15, H_, 2, 0, "span", 74),
      s(),
      R(16, "input", 75),
      M(17, j_, 3, 0, "div", 76),
      s(),
      a(18, "div", 77)(19, "label", 78),
      c(20, " YOM "),
      M(21, z_, 2, 0, "span", 76),
      s(),
      R(22, "input", 79),
      M(23, W_, 2, 1, "div", 76),
      s()(),
      a(24, "div", 71)(25, "div", 72)(26, "label", 80),
      c(27, " Type "),
      M(28, $_, 2, 0, "span", 74),
      s(),
      a(29, "select", 81)(30, "option", 82),
      c(31, "Select Type"),
      s(),
      a(32, "option", 83),
      c(33, "Petrol"),
      s(),
      a(34, "option", 84),
      c(35, "Diesel"),
      s(),
      a(36, "option", 85),
      c(37, "EV"),
      s()(),
      M(38, G_, 3, 0, "div", 76),
      s(),
      a(39, "div", 72)(40, "label", 86),
      c(41, " Chasis Number "),
      M(42, Y_, 2, 0, "span", 76),
      s(),
      R(43, "input", 87),
      M(44, K_, 2, 1, "div", 76),
      s(),
      a(45, "div", 88)(46, "div", 72)(47, "label", 89),
      c(48, " Start date "),
      M(49, Q_, 2, 0, "span", 76),
      s(),
      R(50, "input", 90),
      M(51, X_, 2, 1, "div", 76),
      s()(),
      a(52, "div", 91)(53, "label", 92),
      c(54, " End date "),
      M(55, J_, 2, 0, "span", 76),
      s(),
      R(56, "input", 93),
      M(57, tb, 2, 1, "div", 76),
      s(),
      a(58, "div", 94)(59, "label", 95),
      c(60, " VIN "),
      M(61, ib, 2, 0, "span", 76),
      s(),
      R(62, "input", 96),
      M(63, rb, 2, 1, "div", 76),
      s()()(),
      a(64, "div", 61),
      M(65, ob, 3, 5, "ng-container", 97),
      a(66, "button", 63),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeModal());
      }),
      c(67, " Close "),
      s(),
      M(68, ab, 2, 1, "ng-template", null, 0, lt),
      s()()()()();
  }
  if (r & 2) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C,
      T,
      k,
      V,
      B,
      L,
      H,
      U,
      j = rt(69),
      Y = _();
    d(6),
      K(" ", Y.vehicleObj.vehicle_id ? "Edit Vehicle" : "Add New Vehicle", " "),
      d(4),
      g("formGroup", Y.useForm),
      d(5),
      g("ngIf", !Y.isEditMode),
      d(),
      g(
        "ngClass",
        ce(
          25,
          tr,
          !Y.isEditMode &&
            ((e = Y.useForm.get("vehicle_name")) == null ? null : e.touched) &&
            ((e = Y.useForm.get("vehicle_name")) == null ? null : e.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        !Y.isEditMode &&
          ((t = Y.useForm.get("vehicle_name")) == null ? null : t.touched) &&
          ((t = Y.useForm.get("vehicle_name")) == null ? null : t.invalid)
      ),
      d(4),
      g("ngIf", !Y.isEditMode),
      d(),
      g(
        "ngClass",
        ce(
          27,
          tr,
          !Y.isEditMode &&
            ((n = Y.useForm.get("YOM")) == null ? null : n.touched) &&
            ((n = Y.useForm.get("YOM")) == null ? null : n.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        !Y.isEditMode &&
          ((o = Y.useForm.get("YOM")) == null ? null : o.touched) &&
          ((o = Y.useForm.get("YOM")) == null ? null : o.invalid)
      ),
      d(5),
      g("ngIf", !Y.isEditMode),
      d(),
      g(
        "ngClass",
        ce(
          29,
          tr,
          !Y.isEditMode &&
            ((u = Y.useForm.get("type")) == null ? null : u.touched) &&
            ((u = Y.useForm.get("type")) == null ? null : u.invalid)
        )
      ),
      d(9),
      g(
        "ngIf",
        !Y.isEditMode &&
          ((b = Y.useForm.get("type")) == null ? null : b.touched) &&
          ((b = Y.useForm.get("type")) == null ? null : b.invalid)
      ),
      d(4),
      g("ngIf", !Y.isEditMode),
      d(),
      g(
        "ngClass",
        ce(
          31,
          tr,
          !Y.isEditMode &&
            ((C = Y.useForm.get("chasis_number")) == null ? null : C.touched) &&
            ((C = Y.useForm.get("chasis_number")) == null ? null : C.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        !Y.isEditMode &&
          ((T = Y.useForm.get("chasis_number")) == null ? null : T.touched) &&
          ((T = Y.useForm.get("chasis_number")) == null ? null : T.invalid)
      ),
      d(5),
      g("ngIf", !Y.isEditMode),
      d(),
      g(
        "ngClass",
        ce(
          33,
          tr,
          !Y.isEditMode &&
            ((k = Y.useForm.get("demo_start_date")) == null
              ? null
              : k.touched) &&
            ((k = Y.useForm.get("demo_start_date")) == null ? null : k.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        !Y.isEditMode &&
          ((V = Y.useForm.get("demo_start_date")) == null ? null : V.touched) &&
          ((V = Y.useForm.get("demo_start_date")) == null ? null : V.invalid)
      ),
      d(4),
      g("ngIf", !Y.isEditMode),
      d(),
      g(
        "ngClass",
        ce(
          35,
          tr,
          !Y.isEditMode &&
            ((B = Y.useForm.get("demo_end_date")) == null ? null : B.touched) &&
            ((B = Y.useForm.get("demo_end_date")) == null ? null : B.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        !Y.isEditMode &&
          ((L = Y.useForm.get("demo_end_date")) == null ? null : L.touched) &&
          ((L = Y.useForm.get("demo_end_date")) == null ? null : L.invalid)
      ),
      d(4),
      g("ngIf", !Y.isEditMode),
      d(),
      g(
        "ngClass",
        ce(
          37,
          tr,
          !Y.isEditMode &&
            ((H = Y.useForm.get("VIN")) == null ? null : H.touched) &&
            ((H = Y.useForm.get("VIN")) == null ? null : H.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        !Y.isEditMode &&
          ((U = Y.useForm.get("VIN")) == null ? null : U.touched) &&
          ((U = Y.useForm.get("VIN")) == null ? null : U.invalid)
      ),
      d(2),
      g(
        "ngIf",
        Y.vehicleObj.vehicle_id !== null && Y.vehicleObj.vehicle_id !== void 0
      )("ngIfElse", j);
  }
}
var ja = class r {
  constructor(i) {
    this.changeDetectorRef = i;
    this.initializeForm();
  }
  count = pe(0);
  vehicleList = pe([]);
  totalVehicle = pe(0);
  vehicles = [];
  paginatedVehicles = [];
  masterSrv = te(je);
  toastr = te(Ht);
  modalService = te(co);
  vehicleObj = new po();
  isModalVisible = !1;
  isEditMode = !1;
  previousValue = "";
  isModalOpen = !1;
  filteredVehicle = [];
  searchTerm = "";
  filteredVehicles = [];
  currentPage = 1;
  itemsPerPage = 10;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  useForm = new _t({});
  ngOnInit() {
    this.loadVehicles(),
      (this.filteredVehicles = this.vehicleList()),
      this.paginateVehicles(),
      this.filterVehicles();
  }
  initializeForm() {
    this.useForm = new _t({
      vehicle_name: new Ke("", [
        Se.required,
        Se.minLength(2),
        Se.maxLength(50),
      ]),
      VIN: new Ke("", [Se.required]),
      type: new Ke("", [Se.required]),
      YOM: new Ke("", [Se.required]),
      chasis_number: new Ke("", [Se.required]),
      demo_start_date: new Ke("", [Se.required]),
      demo_end_date: new Ke("", [Se.required]),
    });
  }
  loadVehicles() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (i) => {
        this.count.set(i.data.count),
          (this.vehicles = i.data.rows),
          this.vehicleList.set(this.vehicles),
          (this.filteredVehicles = [...this.vehicles]),
          (this.currentPage = 1),
          this.paginateVehicles();
      },
      error: (i) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", i);
      },
    });
  }
  openModal(i) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      console.log("hello"),
      i
        ? ((this.vehicleObj = ee({}, i)),
          this.useForm.patchValue({
            vehicle_name: i.vehicle_name || "",
            VIN: i.VIN || "",
            type: i.type || "",
            YOM: this.formatDate(i.YOM) || "",
            demo_start_date: i.demo_start_date
              ? this.formatDate(i.demo_start_date)
              : "",
            demo_end_date: i.demo_end_date
              ? this.formatDate(i.demo_end_date)
              : "",
            chasis_number: i.chasis_number || "",
          }))
        : ((this.vehicleObj = new po()),
          (this.vehicleObj.vehicle_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.vehicleObj
          ));
  }
  onSave() {
    console.log("onsave being called"),
      console.log(this.useForm.value),
      console.log(
        "Form end_date value:",
        this.useForm.get("demo_end_date")?.value
      );
    let i = new Date(this.useForm.get("demo_start_date")?.value);
    if (new Date(this.useForm.get("demo_end_date")?.value) < i) {
      this.toastr.error(
        "End date cannot be before start date.",
        "Date Validation"
      );
      return;
    }
    if (this.useForm.invalid) {
      this.markFormGroupTouched(this.useForm),
        console.log("Form Values:", this.useForm.value),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let t = this.useForm.value;
    console.log("Form Data being sent to API:", t),
      this.masterSrv.createNewVehicle(t).subscribe({
        next: () => {
          this.toastr.success("Vehicle created successfully!", "Success"),
            this.getAllVehicle(),
            this.closeModal();
        },
        error: (n) => {
          console.error("Vehicle creation error:", n);
          let o = n.error?.message || "Failed to create vehicle";
          this.toastr.error(o, "Creation Error");
        },
      });
  }
  getAllVehicle() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.totalVehicle.set(i.data.count),
            this.vehicleList.set(i.data.rows),
            (this.paginatedVehicles = this.vehicleList().slice(
              (this.currentPage - 1) * this.itemsPerPage,
              this.currentPage * this.itemsPerPage
            )))
          : this.toastr.warning("No Vehicle found", "Information");
      },
      error: (i) => {
        console.error("Vehicle fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch vehicles", "Error");
      },
    });
  }
  getShowingFrom() {
    return this.filteredVehicles.length === 0
      ? 0
      : (this.currentPage - 1) * this.itemsPerPage + 1;
  }
  getShowingTo() {
    return this.filteredVehicles.length === 0
      ? 0
      : Math.min(
          this.currentPage * this.itemsPerPage,
          this.filteredVehicles.length
        );
  }
  onUpdate() {
    if (!this.vehicleObj || !this.vehicleObj.vehicle_id) {
      this.toastr.warning("No vehicle selected for update!", "Warning");
      return;
    }
    (this.vehicleObj = ee(ee({}, this.vehicleObj), this.useForm.value)),
      console.log("Updating vehicle:", this.vehicleObj),
      this.masterSrv.updateVehicle(this.vehicleObj).subscribe(
        (i) => {
          i && i.status === 200
            ? (this.toastr.success(
                i.message || "Vehicle updated successfully",
                "Success"
              ),
              this.loadVehicles(),
              this.closeModal())
            : this.toastr.warning("Update failed, check data.", "Warning");
        },
        (i) => {
          this.toastr.error("Error updating vehicle", "Error");
        }
      );
  }
  getAllVehicles() {}
  onSearchChange() {
    (this.currentPage = 1), this.filterVehicles();
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = +i.target.value),
      (this.currentPage = 1),
      this.paginateVehicles();
  }
  displayAllVehicles() {
    (this.filteredVehicles = this.vehicleList()), this.paginateVehicles();
  }
  filterVehicles() {
    let i = this.vehicleList();
    if (
      (console.log("\u{1F50D} Raw vehicle list:", i),
      console.log("\u{1F50E} Current search term:", this.searchTerm),
      !this.searchTerm || this.searchTerm.trim() === "")
    )
      console.log("\u{1F4C4} Empty search term. Showing full list."),
        (this.filteredVehicles = i);
    else {
      let e = this.searchTerm.trim().toLowerCase();
      console.log("\u{1F50D} Normalized search term:", e),
        (this.filteredVehicles = i.filter((t) => {
          let n =
            t.vehicle_name?.toLowerCase().includes(e) ||
            t.VIN?.toLowerCase().includes(e) ||
            t.chasis_number?.toLowerCase().includes(e) ||
            t.type?.toLowerCase().includes(e);
          return (
            console.log("\u{1F697} Checking vehicle:", t, "=> Match:", n), n
          );
        })),
        console.log("\u2705 Filtered vehicles:", this.filteredVehicles);
    }
    (this.currentPage = 1), this.paginateVehicles();
  }
  paginateVehicles() {
    (this.totalPages = Math.ceil(
      this.filteredVehicles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updatePaginatedVehicles();
  }
  updatePaginatedVehicles() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedVehicles = this.filteredVehicles.slice(i, e);
  }
  goToPage(i) {
    (this.currentPage = i), this.updatePaginatedVehicles();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updatePaginatedVehicles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updatePaginatedVehicles());
  }
  selectedVehicleForDeletion = null;
  selectVehicleForDeletion(i) {
    (this.selectedVehicleForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  openDeleteModal(i) {
    (this.selectedVehicleForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  deleteVehicleId() {
    let i = this.selectedVehicleForDeletion;
    if (i && i.vehicle_id) {
      let e = i.vehicle_id;
      this.masterSrv.deleteVehicle(e).subscribe(
        (t) => {
          this.toastr.success("Vehicle deleted successfully", "Success"),
            (this.isDeleteModalOpen = !1);
          let n = this.vehicleList().filter((o) => o.vehicle_id !== e);
          this.vehicleList.set(n),
            (this.filteredVehicles = [...n]),
            this.paginateVehicles();
        },
        (t) => {
          this.toastr.error("Server Error", "Error");
        }
      );
    } else alert("No Vehicle selected for deletion");
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  formatDateForInput(i) {
    if (!i) return "";
    let e = new Date(i);
    return isNaN(e.getTime()) ? "" : e.toISOString().split("T")[0];
  }
  onEdit(i) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", i?.vehicle_id),
      (this.vehicleObj = ee({}, i)),
      (this.previousValue = i.vehicle_name),
      this.useForm.patchValue({
        vehicle_name: i.vehicle_name,
        VIN: i.VIN,
        type: i.type,
        YOM: this.formatDate(i.YOM),
        chasis_number: i.chasis_number,
        demo_start_date: i.demo_start_date,
        demo_end_date: i.demo_end_date,
      }),
      console.log(
        "vehicleobj.vehicle_id after setting:",
        this.vehicleObj?.vehicle_id
      );
  }
  isVehicleNameChanged() {
    return this.useForm.dirty && this.useForm.value.name !== this.previousValue;
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof _t && this.markFormGroupTouched(e);
    });
  }
  formatDate(i) {
    return i ? new Date(i).toISOString().split("T")[0] : "";
  }
  isFieldInvalid(i) {
    let e = this.useForm.get(i);
    return !!(e && e.invalid && (e.dirty || e.touched));
  }
  isVehicleName() {
    return this.useForm.value.vehicle_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || r)(F(qe));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-vehicle"]],
    standalone: !0,
    features: [le],
    decls: 82,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", "mt-10"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search Vehicles...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "9", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
      ],
      [1, "modal-dialog", "modal-lg"],
      [
        1,
        "modal-title",
        2,
        "align-items",
        "center",
        "margin-inline",
        "auto",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      [
        "for",
        "vehicle_name",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      ["style", "color: red;", 4, "ngIf"],
      [
        "id",
        "vehicle_name",
        "type",
        "text",
        "placeholder",
        "Vehicle Name",
        "formControlName",
        "vehicle_name",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "form-group", "col-md-6"],
      [
        "for",
        "YOM",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "YOM",
        "type",
        "date",
        "formControlName",
        "YOM",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [
        "for",
        "typeSelect",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "typeSelect",
        "formControlName",
        "type",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "pointer",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "petrol"],
      ["value", "diesel"],
      ["value", "EV"],
      [
        "for",
        "chasis_number",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "chasis_number",
        "type",
        "text",
        "placeholder",
        "Enter Chassis Number",
        "formControlName",
        "chasis_number",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "row", 2, "margin-left", "-3px !important"],
      [
        "for",
        "demo_start_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "demo_start_date",
        "type",
        "date",
        "placeholder",
        "start date",
        "formControlName",
        "demo_start_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "17px"],
      [
        "for",
        "demo_end_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
        "margin-left",
        "-2px",
      ],
      [
        "id",
        "demo_end_date",
        "type",
        "date",
        "placeholder",
        "end date",
        "formControlName",
        "demo_end_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "5px"],
      [
        "for",
        "vin",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "vin",
        "type",
        "text",
        "placeholder",
        "VIN",
        "formControlName",
        "VIN",
        1,
        "form-control",
        "form-control-lg",
        2,
        "margin-left",
        "-5px",
        3,
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [2, "color", "red"],
      [1, "text-danger"],
      ["style", "white-space: nowrap;", 4, "ngIf"],
      [2, "white-space", "nowrap"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        3,
        "click",
        "disabled",
        "ngClass",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        c(6, "Transaction"),
        s()(),
        a(7, "li", 7)(8, "a", 8),
        c(9, "Vehicle Master"),
        s()()()(),
        a(10, "div", 9)(11, "div", 10)(12, "a", 11),
        O("click", function () {
          return t.openModal();
        }),
        R(13, "i", 12),
        c(14, "Add Vehicle "),
        s()(),
        a(15, "div", 13)(16, "div", 14)(17, "p", 15),
        c(18, "Total Vehicle"),
        s(),
        a(19, "h3", 16),
        c(20),
        s()()()(),
        a(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        R(26, "label", 22),
        a(27, "select", 23),
        O("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        a(28, "option", 24),
        c(29, "10"),
        s(),
        a(30, "option", 25),
        c(31, "25"),
        s(),
        a(32, "option", 26),
        c(33, "50"),
        s(),
        a(34, "option", 27),
        c(35, "100"),
        s()(),
        a(36, "label", 28),
        c(37, "records per page"),
        s()(),
        a(38, "div", 29)(39, "div", 30)(40, "input", 31),
        Je("ngModelChange", function (o) {
          return Xe(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        O("input", function () {
          return t.onSearchChange();
        }),
        s()()()(),
        a(41, "div", 32)(42, "table", 33)(43, "thead")(44, "tr")(45, "th", 34),
        c(46, "Sr No"),
        s(),
        a(47, "th", 34),
        c(48, "Vehicle Name"),
        s(),
        a(49, "th", 34),
        c(50, "YOM"),
        s(),
        a(51, "th", 34),
        c(52, "Type"),
        s(),
        a(53, "th", 34),
        c(54, "VIN"),
        s(),
        a(55, "th", 34),
        c(56, "Chasis number"),
        s(),
        a(57, "th", 34),
        c(58, "Demo start date"),
        s(),
        a(59, "th", 34),
        c(60, "Demo end date"),
        s(),
        a(61, "th", 34),
        c(62, "Action"),
        s()()(),
        a(63, "tbody"),
        M(64, V_, 4, 0, "tr", 35)(65, N_, 23, 8, "tr", 36),
        s()()(),
        a(66, "div", 37)(67, "div", 38)(68, "div", 39),
        c(69),
        s()(),
        a(70, "div", 38)(71, "div", 40)(72, "ul", 41)(73, "li", 42)(
          74,
          "a",
          43
        ),
        O("click", function () {
          return t.previousPage();
        }),
        c(75, "Previous"),
        s()(),
        M(76, L_, 3, 3, "li", 44),
        a(77, "li", 45)(78, "a", 43),
        O("click", function () {
          return t.nextPage();
        }),
        c(79, "Next"),
        s()()()()()()()()()(),
        M(80, B_, 13, 0, "div", 46)(81, sb, 70, 39, "div", 47),
        s()),
        e & 2 &&
          (d(20),
          K(" ", t.count(), " "),
          d(20),
          Ze("ngModel", t.searchTerm),
          d(24),
          g("ngIf", t.paginatedVehicles.length === 0),
          d(),
          g("ngForOf", t.paginatedVehicles),
          d(4),
          oi(
            " Showing ",
            t.getShowingFrom(),
            " to ",
            t.getShowingTo(),
            " of ",
            t.filteredVehicles.length,
            " entries "
          ),
          d(4),
          X("disabled", t.currentPage === 1),
          d(3),
          g("ngForOf", t.pages),
          d(),
          X("disabled", t.currentPage === t.totalPages),
          d(3),
          g("ngIf", t.isDeleteModalOpen),
          d(),
          g("ngIf", t.isModalOpen));
    },
    dependencies: [
      De,
      ft,
      gt,
      Be,
      Kt,
      At,
      Ft,
      Mt,
      qt,
      It,
      si,
      Wt,
      Mr,
      Ge,
      Ha,
      er,
      Na,
      Va,
      Oi,
      mi,
      fi,
      Bu,
      tn,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}input[type=text][_ngcontent-%COMP%]::-ms-clear, input[type=text][_ngcontent-%COMP%]::-ms-reveal, input[type=text][_ngcontent-%COMP%]::-webkit-clear-button, input[type=text][_ngcontent-%COMP%]::-webkit-search-cancel-button{display:none;-webkit-appearance:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}",
    ],
  });
};
var xo = class {
  account_id;
  account_type;
  salutation;
  fname;
  lname;
  language;
  employment_status;
  lead_source;
  gender;
  industry;
  occupation;
  cust_journey_stage;
  national_id;
  phone;
  mobile;
  billing_street;
  billing_city;
  billing_state;
  billing_zip_code;
  billing_country;
  account_name;
  parent_account;
  company_fleet_size;
  website;
  account_owner;
  corporate_program_code;
  type;
  annual_revenue;
  email;
  household_income;
  birthdate;
  dealer_code;
  marital_status;
  children;
  no_of_people;
  dealer_id;
  constructor() {
    (this.dealer_code = 0),
      (this.dealer_id = ""),
      (this.account_id = ""),
      (this.account_type = ""),
      (this.salutation = null),
      (this.fname = ""),
      (this.lname = ""),
      (this.language = null),
      (this.employment_status = null),
      (this.lead_source = null),
      (this.gender = null),
      (this.industry = null),
      (this.occupation = null),
      (this.cust_journey_stage = null),
      (this.national_id = null),
      (this.phone = void 0),
      (this.mobile = void 0),
      (this.billing_street = null),
      (this.billing_city = null),
      (this.billing_state = null),
      (this.billing_zip_code = null),
      (this.billing_country = null),
      (this.account_name = ""),
      (this.parent_account = null),
      (this.company_fleet_size = null),
      (this.website = null),
      (this.account_owner = null),
      (this.corporate_program_code = null),
      (this.type = null),
      (this.annual_revenue = null),
      (this.email = ""),
      (this.household_income = null),
      (this.birthdate = null),
      (this.marital_status = null),
      (this.children = null),
      (this.no_of_people = null);
  }
};
var bi = class r {
    static isArray(i, e = !0) {
      return Array.isArray(i) && (e || i.length !== 0);
    }
    static isObject(i, e = !0) {
      return (
        typeof i == "object" &&
        !Array.isArray(i) &&
        i != null &&
        (e || Object.keys(i).length !== 0)
      );
    }
    static equals(i, e, t) {
      return t
        ? this.resolveFieldData(i, t) === this.resolveFieldData(e, t)
        : this.equalsByValue(i, e);
    }
    static equalsByValue(i, e) {
      if (i === e) return !0;
      if (i && e && typeof i == "object" && typeof e == "object") {
        var t = Array.isArray(i),
          n = Array.isArray(e),
          o,
          u,
          b;
        if (t && n) {
          if (((u = i.length), u != e.length)) return !1;
          for (o = u; o-- !== 0; )
            if (!this.equalsByValue(i[o], e[o])) return !1;
          return !0;
        }
        if (t != n) return !1;
        var C = this.isDate(i),
          T = this.isDate(e);
        if (C != T) return !1;
        if (C && T) return i.getTime() == e.getTime();
        var k = i instanceof RegExp,
          V = e instanceof RegExp;
        if (k != V) return !1;
        if (k && V) return i.toString() == e.toString();
        var B = Object.keys(i);
        if (((u = B.length), u !== Object.keys(e).length)) return !1;
        for (o = u; o-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, B[o])) return !1;
        for (o = u; o-- !== 0; )
          if (((b = B[o]), !this.equalsByValue(i[b], e[b]))) return !1;
        return !0;
      }
      return i !== i && e !== e;
    }
    static resolveFieldData(i, e) {
      if (i && e) {
        if (this.isFunction(e)) return e(i);
        if (e.indexOf(".") == -1) return i[e];
        {
          let t = e.split("."),
            n = i;
          for (let o = 0, u = t.length; o < u; ++o) {
            if (n == null) return null;
            n = n[t[o]];
          }
          return n;
        }
      } else return null;
    }
    static isFunction(i) {
      return !!(i && i.constructor && i.call && i.apply);
    }
    static reorderArray(i, e, t) {
      let n;
      i &&
        e !== t &&
        (t >= i.length && ((t %= i.length), (e %= i.length)),
        i.splice(t, 0, i.splice(e, 1)[0]));
    }
    static insertIntoOrderedArray(i, e, t, n) {
      if (t.length > 0) {
        let o = !1;
        for (let u = 0; u < t.length; u++)
          if (this.findIndexInList(t[u], n) > e) {
            t.splice(u, 0, i), (o = !0);
            break;
          }
        o || t.push(i);
      } else t.push(i);
    }
    static findIndexInList(i, e) {
      let t = -1;
      if (e) {
        for (let n = 0; n < e.length; n++)
          if (e[n] == i) {
            t = n;
            break;
          }
      }
      return t;
    }
    static contains(i, e) {
      if (i != null && e && e.length) {
        for (let t of e) if (this.equals(i, t)) return !0;
      }
      return !1;
    }
    static removeAccents(i) {
      return (
        i &&
          (i = i
            .normalize("NFKD")
            .replace(new RegExp("\\p{Diacritic}", "gu"), "")),
        i
      );
    }
    static isDate(i) {
      return Object.prototype.toString.call(i) === "[object Date]";
    }
    static isEmpty(i) {
      return (
        i == null ||
        i === "" ||
        (Array.isArray(i) && i.length === 0) ||
        (!this.isDate(i) && typeof i == "object" && Object.keys(i).length === 0)
      );
    }
    static isNotEmpty(i) {
      return !this.isEmpty(i);
    }
    static compare(i, e, t, n = 1) {
      let o = -1,
        u = this.isEmpty(i),
        b = this.isEmpty(e);
      return (
        u && b
          ? (o = 0)
          : u
          ? (o = n)
          : b
          ? (o = -n)
          : typeof i == "string" && typeof e == "string"
          ? (o = i.localeCompare(e, t, { numeric: !0 }))
          : (o = i < e ? -1 : i > e ? 1 : 0),
        o
      );
    }
    static sort(i, e, t = 1, n, o = 1) {
      let u = r.compare(i, e, n, t),
        b = t;
      return (r.isEmpty(i) || r.isEmpty(e)) && (b = o === 1 ? t : o), b * u;
    }
    static merge(i, e) {
      if (!(i == null && e == null)) {
        {
          if (
            (i == null || typeof i == "object") &&
            (e == null || typeof e == "object")
          )
            return ee(ee({}, i || {}), e || {});
          if (
            (i == null || typeof i == "string") &&
            (e == null || typeof e == "string")
          )
            return [i || "", e || ""].join(" ");
        }
        return e || i;
      }
    }
    static isPrintableCharacter(i = "") {
      return this.isNotEmpty(i) && i.length === 1 && i.match(/\S| /);
    }
    static getItemValue(i, ...e) {
      return this.isFunction(i) ? i(...e) : i;
    }
    static findLastIndex(i, e) {
      let t = -1;
      if (this.isNotEmpty(i))
        try {
          t = i.findLastIndex(e);
        } catch {
          t = i.lastIndexOf([...i].reverse().find(e));
        }
      return t;
    }
    static findLast(i, e) {
      let t;
      if (this.isNotEmpty(i))
        try {
          t = i.findLast(e);
        } catch {
          t = [...i].reverse().find(e);
        }
      return t;
    }
    static deepEquals(i, e) {
      if (i === e) return !0;
      if (i && e && typeof i == "object" && typeof e == "object") {
        var t = Array.isArray(i),
          n = Array.isArray(e),
          o,
          u,
          b;
        if (t && n) {
          if (((u = i.length), u != e.length)) return !1;
          for (o = u; o-- !== 0; ) if (!this.deepEquals(i[o], e[o])) return !1;
          return !0;
        }
        if (t != n) return !1;
        var C = i instanceof Date,
          T = e instanceof Date;
        if (C != T) return !1;
        if (C && T) return i.getTime() == e.getTime();
        var k = i instanceof RegExp,
          V = e instanceof RegExp;
        if (k != V) return !1;
        if (k && V) return i.toString() == e.toString();
        var B = Object.keys(i);
        if (((u = B.length), u !== Object.keys(e).length)) return !1;
        for (o = u; o-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, B[o])) return !1;
        for (o = u; o-- !== 0; )
          if (((b = B[o]), !this.deepEquals(i[b], e[b]))) return !1;
        return !0;
      }
      return i !== i && e !== e;
    }
  },
  Hu = 0;
function Vr(r = "pn_id_") {
  return Hu++, `${r}${Hu}`;
}
function lb() {
  let r = [],
    i = (o, u) => {
      let b = r.length > 0 ? r[r.length - 1] : { key: o, value: u },
        C = b.value + (b.key === o ? 0 : u) + 2;
      return r.push({ key: o, value: C }), C;
    },
    e = (o) => {
      r = r.filter((u) => u.value !== o);
    },
    t = () => (r.length > 0 ? r[r.length - 1].value : 0),
    n = (o) => (o && parseInt(o.style.zIndex, 10)) || 0;
  return {
    get: n,
    set: (o, u, b) => {
      u && (u.style.zIndex = String(i(o, b)));
    },
    clear: (o) => {
      o && (e(n(o)), (o.style.zIndex = ""));
    },
    getCurrent: () => t(),
  };
}
var yo = lb();
var Qt = (() => {
  class r {
    static STARTS_WITH = "startsWith";
    static CONTAINS = "contains";
    static NOT_CONTAINS = "notContains";
    static ENDS_WITH = "endsWith";
    static EQUALS = "equals";
    static NOT_EQUALS = "notEquals";
    static IN = "in";
    static LESS_THAN = "lt";
    static LESS_THAN_OR_EQUAL_TO = "lte";
    static GREATER_THAN = "gt";
    static GREATER_THAN_OR_EQUAL_TO = "gte";
    static BETWEEN = "between";
    static IS = "is";
    static IS_NOT = "isNot";
    static BEFORE = "before";
    static AFTER = "after";
    static DATE_IS = "dateIs";
    static DATE_IS_NOT = "dateIsNot";
    static DATE_BEFORE = "dateBefore";
    static DATE_AFTER = "dateAfter";
  }
  return r;
})();
var ju = (() => {
  class r {
    clickSource = new Ee();
    clickObservable = this.clickSource.asObservable();
    add(e) {
      e && this.clickSource.next(e);
    }
    static ɵfac = function (t) {
      return new (t || r)();
    };
    static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
  }
  return r;
})();
var za = (() => {
  class r {
    ripple = !1;
    inputStyle = pe("outlined");
    overlayOptions = {};
    csp = pe({ nonce: void 0 });
    filterMatchModeOptions = {
      text: [
        Qt.STARTS_WITH,
        Qt.CONTAINS,
        Qt.NOT_CONTAINS,
        Qt.ENDS_WITH,
        Qt.EQUALS,
        Qt.NOT_EQUALS,
      ],
      numeric: [
        Qt.EQUALS,
        Qt.NOT_EQUALS,
        Qt.LESS_THAN,
        Qt.LESS_THAN_OR_EQUAL_TO,
        Qt.GREATER_THAN,
        Qt.GREATER_THAN_OR_EQUAL_TO,
      ],
      date: [Qt.DATE_IS, Qt.DATE_IS_NOT, Qt.DATE_BEFORE, Qt.DATE_AFTER],
    };
    translation = {
      startsWith: "Starts with",
      contains: "Contains",
      notContains: "Not contains",
      endsWith: "Ends with",
      equals: "Equals",
      notEquals: "Not equals",
      noFilter: "No Filter",
      lt: "Less than",
      lte: "Less than or equal to",
      gt: "Greater than",
      gte: "Greater than or equal to",
      is: "Is",
      isNot: "Is not",
      before: "Before",
      after: "After",
      dateIs: "Date is",
      dateIsNot: "Date is not",
      dateBefore: "Date is before",
      dateAfter: "Date is after",
      clear: "Clear",
      apply: "Apply",
      matchAll: "Match All",
      matchAny: "Match Any",
      addRule: "Add Rule",
      removeRule: "Remove Rule",
      accept: "Yes",
      reject: "No",
      choose: "Choose",
      upload: "Upload",
      cancel: "Cancel",
      pending: "Pending",
      fileSizeTypes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
      dayNames: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ],
      dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      monthNames: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ],
      monthNamesShort: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec",
      ],
      chooseYear: "Choose Year",
      chooseMonth: "Choose Month",
      chooseDate: "Choose Date",
      prevDecade: "Previous Decade",
      nextDecade: "Next Decade",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      prevHour: "Previous Hour",
      nextHour: "Next Hour",
      prevMinute: "Previous Minute",
      nextMinute: "Next Minute",
      prevSecond: "Previous Second",
      nextSecond: "Next Second",
      am: "am",
      pm: "pm",
      dateFormat: "mm/dd/yy",
      firstDayOfWeek: 0,
      today: "Today",
      weekHeader: "Wk",
      weak: "Weak",
      medium: "Medium",
      strong: "Strong",
      passwordPrompt: "Enter a password",
      emptyMessage: "No results found",
      searchMessage: "{0} results are available",
      selectionMessage: "{0} items selected",
      emptySelectionMessage: "No selected item",
      emptySearchMessage: "No results found",
      emptyFilterMessage: "No results found",
      aria: {
        trueLabel: "True",
        falseLabel: "False",
        nullLabel: "Not Selected",
        star: "1 star",
        stars: "{star} stars",
        selectAll: "All items selected",
        unselectAll: "All items unselected",
        close: "Close",
        previous: "Previous",
        next: "Next",
        navigation: "Navigation",
        scrollTop: "Scroll Top",
        moveTop: "Move Top",
        moveUp: "Move Up",
        moveDown: "Move Down",
        moveBottom: "Move Bottom",
        moveToTarget: "Move to Target",
        moveToSource: "Move to Source",
        moveAllToTarget: "Move All to Target",
        moveAllToSource: "Move All to Source",
        pageLabel: "{page}",
        firstPageLabel: "First Page",
        lastPageLabel: "Last Page",
        nextPageLabel: "Next Page",
        prevPageLabel: "Previous Page",
        rowsPerPageLabel: "Rows per page",
        previousPageLabel: "Previous Page",
        jumpToPageDropdownLabel: "Jump to Page Dropdown",
        jumpToPageInputLabel: "Jump to Page Input",
        selectRow: "Row Selected",
        unselectRow: "Row Unselected",
        expandRow: "Row Expanded",
        collapseRow: "Row Collapsed",
        showFilterMenu: "Show Filter Menu",
        hideFilterMenu: "Hide Filter Menu",
        filterOperator: "Filter Operator",
        filterConstraint: "Filter Constraint",
        editRow: "Row Edit",
        saveEdit: "Save Edit",
        cancelEdit: "Cancel Edit",
        listView: "List View",
        gridView: "Grid View",
        slide: "Slide",
        slideNumber: "{slideNumber}",
        zoomImage: "Zoom Image",
        zoomIn: "Zoom In",
        zoomOut: "Zoom Out",
        rotateRight: "Rotate Right",
        rotateLeft: "Rotate Left",
        listLabel: "Option List",
        selectColor: "Select a color",
        removeLabel: "Remove",
        browseFiles: "Browse Files",
        maximizeLabel: "Maximize",
      },
    };
    zIndex = { modal: 1100, overlay: 1e3, menu: 1e3, tooltip: 1100 };
    translationSource = new Ee();
    translationObserver = this.translationSource.asObservable();
    getTranslation(e) {
      return this.translation[e];
    }
    setTranslation(e) {
      (this.translation = ee(ee({}, this.translation), e)),
        this.translationSource.next(this.translation);
    }
    static ɵfac = function (t) {
      return new (t || r)();
    };
    static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
  }
  return r;
})();
var Co = (() => {
    class r {
      template;
      type;
      name;
      constructor(e) {
        this.template = e;
      }
      getType() {
        return this.name;
      }
      static ɵfac = function (t) {
        return new (t || r)(F(Xi));
      };
      static ɵdir = ke({
        type: r,
        selectors: [["", "pTemplate", ""]],
        inputs: { type: "type", name: [0, "pTemplate", "name"] },
        standalone: !0,
      });
    }
    return r;
  })(),
  zi = (() => {
    class r {
      static ɵfac = function (t) {
        return new (t || r)();
      };
      static ɵmod = be({ type: r });
      static ɵinj = _e({});
    }
    return r;
  })(),
  Ui = (() => {
    class r {
      static STARTS_WITH = "startsWith";
      static CONTAINS = "contains";
      static NOT_CONTAINS = "notContains";
      static ENDS_WITH = "endsWith";
      static EQUALS = "equals";
      static NOT_EQUALS = "notEquals";
      static NO_FILTER = "noFilter";
      static LT = "lt";
      static LTE = "lte";
      static GT = "gt";
      static GTE = "gte";
      static IS = "is";
      static IS_NOT = "isNot";
      static BEFORE = "before";
      static AFTER = "after";
      static CLEAR = "clear";
      static APPLY = "apply";
      static MATCH_ALL = "matchAll";
      static MATCH_ANY = "matchAny";
      static ADD_RULE = "addRule";
      static REMOVE_RULE = "removeRule";
      static ACCEPT = "accept";
      static REJECT = "reject";
      static CHOOSE = "choose";
      static UPLOAD = "upload";
      static CANCEL = "cancel";
      static PENDING = "pending";
      static FILE_SIZE_TYPES = "fileSizeTypes";
      static DAY_NAMES = "dayNames";
      static DAY_NAMES_SHORT = "dayNamesShort";
      static DAY_NAMES_MIN = "dayNamesMin";
      static MONTH_NAMES = "monthNames";
      static MONTH_NAMES_SHORT = "monthNamesShort";
      static FIRST_DAY_OF_WEEK = "firstDayOfWeek";
      static TODAY = "today";
      static WEEK_HEADER = "weekHeader";
      static WEAK = "weak";
      static MEDIUM = "medium";
      static STRONG = "strong";
      static PASSWORD_PROMPT = "passwordPrompt";
      static EMPTY_MESSAGE = "emptyMessage";
      static EMPTY_FILTER_MESSAGE = "emptyFilterMessage";
      static SHOW_FILTER_MENU = "showFilterMenu";
      static HIDE_FILTER_MENU = "hideFilterMenu";
      static SELECTION_MESSAGE = "selectionMessage";
      static ARIA = "aria";
      static SELECT_COLOR = "selectColor";
      static BROWSE_FILES = "browseFiles";
    }
    return r;
  })();
var he = (() => {
    class r {
      static zindex = 1e3;
      static calculatedScrollbarWidth = null;
      static calculatedScrollbarHeight = null;
      static browser;
      static addClass(e, t) {
        e && t && (e.classList ? e.classList.add(t) : (e.className += " " + t));
      }
      static addMultipleClasses(e, t) {
        if (e && t)
          if (e.classList) {
            let n = t.trim().split(" ");
            for (let o = 0; o < n.length; o++) e.classList.add(n[o]);
          } else {
            let n = t.split(" ");
            for (let o = 0; o < n.length; o++) e.className += " " + n[o];
          }
      }
      static removeClass(e, t) {
        e &&
          t &&
          (e.classList
            ? e.classList.remove(t)
            : (e.className = e.className.replace(
                new RegExp(
                  "(^|\\b)" + t.split(" ").join("|") + "(\\b|$)",
                  "gi"
                ),
                " "
              )));
      }
      static removeMultipleClasses(e, t) {
        e &&
          t &&
          [t]
            .flat()
            .filter(Boolean)
            .forEach((n) =>
              n.split(" ").forEach((o) => this.removeClass(e, o))
            );
      }
      static hasClass(e, t) {
        return e && t
          ? e.classList
            ? e.classList.contains(t)
            : new RegExp("(^| )" + t + "( |$)", "gi").test(e.className)
          : !1;
      }
      static siblings(e) {
        return Array.prototype.filter.call(e.parentNode.children, function (t) {
          return t !== e;
        });
      }
      static find(e, t) {
        return Array.from(e.querySelectorAll(t));
      }
      static findSingle(e, t) {
        return this.isElement(e) ? e.querySelector(t) : null;
      }
      static index(e) {
        let t = e.parentNode.childNodes,
          n = 0;
        for (var o = 0; o < t.length; o++) {
          if (t[o] == e) return n;
          t[o].nodeType == 1 && n++;
        }
        return -1;
      }
      static indexWithinGroup(e, t) {
        let n = e.parentNode ? e.parentNode.childNodes : [],
          o = 0;
        for (var u = 0; u < n.length; u++) {
          if (n[u] == e) return o;
          n[u].attributes && n[u].attributes[t] && n[u].nodeType == 1 && o++;
        }
        return -1;
      }
      static appendOverlay(e, t, n = "self") {
        n !== "self" && e && t && this.appendChild(e, t);
      }
      static alignOverlay(e, t, n = "self", o = !0) {
        e &&
          t &&
          (o && (e.style.minWidth = `${r.getOuterWidth(t)}px`),
          n === "self"
            ? this.relativePosition(e, t)
            : this.absolutePosition(e, t));
      }
      static relativePosition(e, t, n = !0) {
        let o = (ge) => {
            if (ge)
              return getComputedStyle(ge).getPropertyValue("position") ===
                "relative"
                ? ge
                : o(ge.parentElement);
          },
          u = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          b = t.offsetHeight ?? t.getBoundingClientRect().height,
          C = t.getBoundingClientRect(),
          T = this.getWindowScrollTop(),
          k = this.getWindowScrollLeft(),
          V = this.getViewport(),
          L = o(e)?.getBoundingClientRect() || { top: -1 * T, left: -1 * k },
          H,
          U;
        C.top + b + u.height > V.height
          ? ((H = C.top - L.top - u.height),
            (e.style.transformOrigin = "bottom"),
            C.top + H < 0 && (H = -1 * C.top))
          : ((H = b + C.top - L.top), (e.style.transformOrigin = "top"));
        let j = C.left + u.width - V.width,
          Y = C.left - L.left;
        u.width > V.width
          ? (U = (C.left - L.left) * -1)
          : j > 0
          ? (U = Y - j)
          : (U = C.left - L.left),
          (e.style.top = H + "px"),
          (e.style.left = U + "px"),
          n &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static absolutePosition(e, t, n = !0) {
        let o = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          u = o.height,
          b = o.width,
          C = t.offsetHeight ?? t.getBoundingClientRect().height,
          T = t.offsetWidth ?? t.getBoundingClientRect().width,
          k = t.getBoundingClientRect(),
          V = this.getWindowScrollTop(),
          B = this.getWindowScrollLeft(),
          L = this.getViewport(),
          H,
          U;
        k.top + C + u > L.height
          ? ((H = k.top + V - u),
            (e.style.transformOrigin = "bottom"),
            H < 0 && (H = V))
          : ((H = C + k.top + V), (e.style.transformOrigin = "top")),
          k.left + b > L.width
            ? (U = Math.max(0, k.left + B + T - b))
            : (U = k.left + B),
          (e.style.top = H + "px"),
          (e.style.left = U + "px"),
          n &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static getParents(e, t = []) {
        return e.parentNode === null
          ? t
          : this.getParents(e.parentNode, t.concat([e.parentNode]));
      }
      static getScrollableParents(e) {
        let t = [];
        if (e) {
          let n = this.getParents(e),
            o = /(auto|scroll)/,
            u = (b) => {
              let C = window.getComputedStyle(b, null);
              return (
                o.test(C.getPropertyValue("overflow")) ||
                o.test(C.getPropertyValue("overflowX")) ||
                o.test(C.getPropertyValue("overflowY"))
              );
            };
          for (let b of n) {
            let C = b.nodeType === 1 && b.dataset.scrollselectors;
            if (C) {
              let T = C.split(",");
              for (let k of T) {
                let V = this.findSingle(b, k);
                V && u(V) && t.push(V);
              }
            }
            b.nodeType !== 9 && u(b) && t.push(b);
          }
        }
        return t;
      }
      static getHiddenElementOuterHeight(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let t = e.offsetHeight;
        return (e.style.display = "none"), (e.style.visibility = "visible"), t;
      }
      static getHiddenElementOuterWidth(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let t = e.offsetWidth;
        return (e.style.display = "none"), (e.style.visibility = "visible"), t;
      }
      static getHiddenElementDimensions(e) {
        let t = {};
        return (
          (e.style.visibility = "hidden"),
          (e.style.display = "block"),
          (t.width = e.offsetWidth),
          (t.height = e.offsetHeight),
          (e.style.display = "none"),
          (e.style.visibility = "visible"),
          t
        );
      }
      static scrollInView(e, t) {
        let n = getComputedStyle(e).getPropertyValue("borderTopWidth"),
          o = n ? parseFloat(n) : 0,
          u = getComputedStyle(e).getPropertyValue("paddingTop"),
          b = u ? parseFloat(u) : 0,
          C = e.getBoundingClientRect(),
          k =
            t.getBoundingClientRect().top +
            document.body.scrollTop -
            (C.top + document.body.scrollTop) -
            o -
            b,
          V = e.scrollTop,
          B = e.clientHeight,
          L = this.getOuterHeight(t);
        k < 0
          ? (e.scrollTop = V + k)
          : k + L > B && (e.scrollTop = V + k - B + L);
      }
      static fadeIn(e, t) {
        e.style.opacity = 0;
        let n = +new Date(),
          o = 0,
          u = function () {
            (o =
              +e.style.opacity.replace(",", ".") +
              (new Date().getTime() - n) / t),
              (e.style.opacity = o),
              (n = +new Date()),
              +o < 1 &&
                ((window.requestAnimationFrame && requestAnimationFrame(u)) ||
                  setTimeout(u, 16));
          };
        u();
      }
      static fadeOut(e, t) {
        var n = 1,
          o = 50,
          u = t,
          b = o / u;
        let C = setInterval(() => {
          (n = n - b),
            n <= 0 && ((n = 0), clearInterval(C)),
            (e.style.opacity = n);
        }, o);
      }
      static getWindowScrollTop() {
        let e = document.documentElement;
        return (window.pageYOffset || e.scrollTop) - (e.clientTop || 0);
      }
      static getWindowScrollLeft() {
        let e = document.documentElement;
        return (window.pageXOffset || e.scrollLeft) - (e.clientLeft || 0);
      }
      static matches(e, t) {
        var n = Element.prototype,
          o =
            n.matches ||
            n.webkitMatchesSelector ||
            n.mozMatchesSelector ||
            n.msMatchesSelector ||
            function (u) {
              return [].indexOf.call(document.querySelectorAll(u), this) !== -1;
            };
        return o.call(e, t);
      }
      static getOuterWidth(e, t) {
        let n = e.offsetWidth;
        if (t) {
          let o = getComputedStyle(e);
          n += parseFloat(o.marginLeft) + parseFloat(o.marginRight);
        }
        return n;
      }
      static getHorizontalPadding(e) {
        let t = getComputedStyle(e);
        return parseFloat(t.paddingLeft) + parseFloat(t.paddingRight);
      }
      static getHorizontalMargin(e) {
        let t = getComputedStyle(e);
        return parseFloat(t.marginLeft) + parseFloat(t.marginRight);
      }
      static innerWidth(e) {
        let t = e.offsetWidth,
          n = getComputedStyle(e);
        return (t += parseFloat(n.paddingLeft) + parseFloat(n.paddingRight)), t;
      }
      static width(e) {
        let t = e.offsetWidth,
          n = getComputedStyle(e);
        return (t -= parseFloat(n.paddingLeft) + parseFloat(n.paddingRight)), t;
      }
      static getInnerHeight(e) {
        let t = e.offsetHeight,
          n = getComputedStyle(e);
        return (t += parseFloat(n.paddingTop) + parseFloat(n.paddingBottom)), t;
      }
      static getOuterHeight(e, t) {
        let n = e.offsetHeight;
        if (t) {
          let o = getComputedStyle(e);
          n += parseFloat(o.marginTop) + parseFloat(o.marginBottom);
        }
        return n;
      }
      static getHeight(e) {
        let t = e.offsetHeight,
          n = getComputedStyle(e);
        return (
          (t -=
            parseFloat(n.paddingTop) +
            parseFloat(n.paddingBottom) +
            parseFloat(n.borderTopWidth) +
            parseFloat(n.borderBottomWidth)),
          t
        );
      }
      static getWidth(e) {
        let t = e.offsetWidth,
          n = getComputedStyle(e);
        return (
          (t -=
            parseFloat(n.paddingLeft) +
            parseFloat(n.paddingRight) +
            parseFloat(n.borderLeftWidth) +
            parseFloat(n.borderRightWidth)),
          t
        );
      }
      static getViewport() {
        let e = window,
          t = document,
          n = t.documentElement,
          o = t.getElementsByTagName("body")[0],
          u = e.innerWidth || n.clientWidth || o.clientWidth,
          b = e.innerHeight || n.clientHeight || o.clientHeight;
        return { width: u, height: b };
      }
      static getOffset(e) {
        var t = e.getBoundingClientRect();
        return {
          top:
            t.top +
            (window.pageYOffset ||
              document.documentElement.scrollTop ||
              document.body.scrollTop ||
              0),
          left:
            t.left +
            (window.pageXOffset ||
              document.documentElement.scrollLeft ||
              document.body.scrollLeft ||
              0),
        };
      }
      static replaceElementWith(e, t) {
        let n = e.parentNode;
        if (!n) throw "Can't replace element";
        return n.replaceChild(t, e);
      }
      static getUserAgent() {
        if (navigator && this.isClient()) return navigator.userAgent;
      }
      static isIE() {
        var e = window.navigator.userAgent,
          t = e.indexOf("MSIE ");
        if (t > 0) return !0;
        var n = e.indexOf("Trident/");
        if (n > 0) {
          var o = e.indexOf("rv:");
          return !0;
        }
        var u = e.indexOf("Edge/");
        return u > 0;
      }
      static isIOS() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
      }
      static isAndroid() {
        return /(android)/i.test(navigator.userAgent);
      }
      static isTouchDevice() {
        return "ontouchstart" in window || navigator.maxTouchPoints > 0;
      }
      static appendChild(e, t) {
        if (this.isElement(t)) t.appendChild(e);
        else if (t && t.el && t.el.nativeElement)
          t.el.nativeElement.appendChild(e);
        else throw "Cannot append " + t + " to " + e;
      }
      static removeChild(e, t) {
        if (this.isElement(t)) t.removeChild(e);
        else if (t.el && t.el.nativeElement) t.el.nativeElement.removeChild(e);
        else throw "Cannot remove " + e + " from " + t;
      }
      static removeElement(e) {
        "remove" in Element.prototype
          ? e.remove()
          : e.parentNode.removeChild(e);
      }
      static isElement(e) {
        return typeof HTMLElement == "object"
          ? e instanceof HTMLElement
          : e &&
              typeof e == "object" &&
              e !== null &&
              e.nodeType === 1 &&
              typeof e.nodeName == "string";
      }
      static calculateScrollbarWidth(e) {
        if (e) {
          let t = getComputedStyle(e);
          return (
            e.offsetWidth -
            e.clientWidth -
            parseFloat(t.borderLeftWidth) -
            parseFloat(t.borderRightWidth)
          );
        } else {
          if (this.calculatedScrollbarWidth !== null)
            return this.calculatedScrollbarWidth;
          let t = document.createElement("div");
          (t.className = "p-scrollbar-measure"), document.body.appendChild(t);
          let n = t.offsetWidth - t.clientWidth;
          return (
            document.body.removeChild(t), (this.calculatedScrollbarWidth = n), n
          );
        }
      }
      static calculateScrollbarHeight() {
        if (this.calculatedScrollbarHeight !== null)
          return this.calculatedScrollbarHeight;
        let e = document.createElement("div");
        (e.className = "p-scrollbar-measure"), document.body.appendChild(e);
        let t = e.offsetHeight - e.clientHeight;
        return (
          document.body.removeChild(e), (this.calculatedScrollbarWidth = t), t
        );
      }
      static invokeElementMethod(e, t, n) {
        e[t].apply(e, n);
      }
      static clearSelection() {
        if (window.getSelection)
          window.getSelection().empty
            ? window.getSelection().empty()
            : window.getSelection().removeAllRanges &&
              window.getSelection().rangeCount > 0 &&
              window.getSelection().getRangeAt(0).getClientRects().length > 0 &&
              window.getSelection().removeAllRanges();
        else if (document.selection && document.selection.empty)
          try {
            document.selection.empty();
          } catch {}
      }
      static getBrowser() {
        if (!this.browser) {
          let e = this.resolveUserAgent();
          (this.browser = {}),
            e.browser &&
              ((this.browser[e.browser] = !0),
              (this.browser.version = e.version)),
            this.browser.chrome
              ? (this.browser.webkit = !0)
              : this.browser.webkit && (this.browser.safari = !0);
        }
        return this.browser;
      }
      static resolveUserAgent() {
        let e = navigator.userAgent.toLowerCase(),
          t =
            /(chrome)[ \/]([\w.]+)/.exec(e) ||
            /(webkit)[ \/]([\w.]+)/.exec(e) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) ||
            /(msie) ([\w.]+)/.exec(e) ||
            (e.indexOf("compatible") < 0 &&
              /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)) ||
            [];
        return { browser: t[1] || "", version: t[2] || "0" };
      }
      static isInteger(e) {
        return Number.isInteger
          ? Number.isInteger(e)
          : typeof e == "number" && isFinite(e) && Math.floor(e) === e;
      }
      static isHidden(e) {
        return !e || e.offsetParent === null;
      }
      static isVisible(e) {
        return e && e.offsetParent != null;
      }
      static isExist(e) {
        return e !== null && typeof e < "u" && e.nodeName && e.parentNode;
      }
      static focus(e, t) {
        e && document.activeElement !== e && e.focus(t);
      }
      static getFocusableSelectorString(e = "") {
        return `button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-inputtext:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e}`;
      }
      static getFocusableElements(e, t = "") {
        let n = this.find(e, this.getFocusableSelectorString(t)),
          o = [];
        for (let u of n) {
          let b = getComputedStyle(u);
          this.isVisible(u) &&
            b.display != "none" &&
            b.visibility != "hidden" &&
            o.push(u);
        }
        return o;
      }
      static getFocusableElement(e, t = "") {
        let n = this.findSingle(e, this.getFocusableSelectorString(t));
        if (n) {
          let o = getComputedStyle(n);
          if (
            this.isVisible(n) &&
            o.display != "none" &&
            o.visibility != "hidden"
          )
            return n;
        }
        return null;
      }
      static getFirstFocusableElement(e, t = "") {
        let n = this.getFocusableElements(e, t);
        return n.length > 0 ? n[0] : null;
      }
      static getLastFocusableElement(e, t) {
        let n = this.getFocusableElements(e, t);
        return n.length > 0 ? n[n.length - 1] : null;
      }
      static getNextFocusableElement(e, t = !1) {
        let n = r.getFocusableElements(e),
          o = 0;
        if (n && n.length > 0) {
          let u = n.indexOf(n[0].ownerDocument.activeElement);
          t
            ? u == -1 || u === 0
              ? (o = n.length - 1)
              : (o = u - 1)
            : u != -1 && u !== n.length - 1 && (o = u + 1);
        }
        return n[o];
      }
      static generateZIndex() {
        return (this.zindex = this.zindex || 999), ++this.zindex;
      }
      static getSelection() {
        return window.getSelection
          ? window.getSelection().toString()
          : document.getSelection
          ? document.getSelection().toString()
          : document.selection
          ? document.selection.createRange().text
          : null;
      }
      static getTargetElement(e, t) {
        if (!e) return null;
        switch (e) {
          case "document":
            return document;
          case "window":
            return window;
          case "@next":
            return t?.nextElementSibling;
          case "@prev":
            return t?.previousElementSibling;
          case "@parent":
            return t?.parentElement;
          case "@grandparent":
            return t?.parentElement.parentElement;
          default:
            let n = typeof e;
            if (n === "string") return document.querySelector(e);
            if (n === "object" && e.hasOwnProperty("nativeElement"))
              return this.isExist(e.nativeElement) ? e.nativeElement : void 0;
            let u = ((b) => !!(b && b.constructor && b.call && b.apply))(e)
              ? e()
              : e;
            return (u && u.nodeType === 9) || this.isExist(u) ? u : null;
        }
      }
      static isClient() {
        return !!(
          typeof window < "u" &&
          window.document &&
          window.document.createElement
        );
      }
      static getAttribute(e, t) {
        if (e) {
          let n = e.getAttribute(t);
          return isNaN(n)
            ? n === "true" || n === "false"
              ? n === "true"
              : n
            : +n;
        }
      }
      static calculateBodyScrollbarWidth() {
        return window.innerWidth - document.documentElement.offsetWidth;
      }
      static blockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.setProperty(
          "--scrollbar-width",
          this.calculateBodyScrollbarWidth() + "px"
        ),
          this.addClass(document.body, e);
      }
      static unblockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.removeProperty("--scrollbar-width"),
          this.removeClass(document.body, e);
      }
      static createElement(e, t = {}, ...n) {
        if (e) {
          let o = document.createElement(e);
          return this.setAttributes(o, t), o.append(...n), o;
        }
      }
      static setAttribute(e, t = "", n) {
        this.isElement(e) && n !== null && n !== void 0 && e.setAttribute(t, n);
      }
      static setAttributes(e, t = {}) {
        if (this.isElement(e)) {
          let n = (o, u) => {
            let b = e?.$attrs?.[o] ? [e?.$attrs?.[o]] : [];
            return [u].flat().reduce((C, T) => {
              if (T != null) {
                let k = typeof T;
                if (k === "string" || k === "number") C.push(T);
                else if (k === "object") {
                  let V = Array.isArray(T)
                    ? n(o, T)
                    : Object.entries(T).map(([B, L]) =>
                        o === "style" && (L || L === 0)
                          ? `${B.replace(
                              /([a-z])([A-Z])/g,
                              "$1-$2"
                            ).toLowerCase()}:${L}`
                          : L
                          ? B
                          : void 0
                      );
                  C = V.length ? C.concat(V.filter((B) => !!B)) : C;
                }
              }
              return C;
            }, b);
          };
          Object.entries(t).forEach(([o, u]) => {
            if (u != null) {
              let b = o.match(/^on(.+)/);
              b
                ? e.addEventListener(b[1].toLowerCase(), u)
                : o === "pBind"
                ? this.setAttributes(e, u)
                : ((u =
                    o === "class"
                      ? [...new Set(n("class", u))].join(" ").trim()
                      : o === "style"
                      ? n("style", u).join(";").trim()
                      : u),
                  (e.$attrs = e.$attrs || {}) && (e.$attrs[o] = u),
                  e.setAttribute(o, u));
            }
          });
        }
      }
      static isFocusableElement(e, t = "") {
        return this.isElement(e)
          ? e.matches(`button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t},
                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${t}`)
          : !1;
      }
    }
    return r;
  })(),
  Ua = class {
    element;
    listener;
    scrollableParents;
    constructor(i, e = () => {}) {
      (this.element = i), (this.listener = e);
    }
    bindScrollListener() {
      this.scrollableParents = he.getScrollableParents(this.element);
      for (let i = 0; i < this.scrollableParents.length; i++)
        this.scrollableParents[i].addEventListener("scroll", this.listener);
    }
    unbindScrollListener() {
      if (this.scrollableParents)
        for (let i = 0; i < this.scrollableParents.length; i++)
          this.scrollableParents[i].removeEventListener(
            "scroll",
            this.listener
          );
    }
    destroy() {
      this.unbindScrollListener(),
        (this.element = null),
        (this.listener = null),
        (this.scrollableParents = null);
    }
  };
var Wa = (() => {
    class r {
      autofocus = !1;
      focused = !1;
      platformId = te(Vi);
      document = te(Le);
      host = te(Pe);
      ngAfterContentChecked() {
        this.autofocus === !1
          ? this.host.nativeElement.removeAttribute("autofocus")
          : this.host.nativeElement.setAttribute("autofocus", !0),
          this.focused || this.autoFocus();
      }
      ngAfterViewChecked() {
        this.focused || this.autoFocus();
      }
      autoFocus() {
        Si(this.platformId) &&
          this.autofocus &&
          setTimeout(() => {
            let e = he.getFocusableElements(this.host?.nativeElement);
            e.length === 0 && this.host.nativeElement.focus(),
              e.length > 0 && e[0].focus(),
              (this.focused = !0);
          });
      }
      static ɵfac = function (t) {
        return new (t || r)();
      };
      static ɵdir = ke({
        type: r,
        selectors: [["", "pAutoFocus", ""]],
        hostAttrs: [1, "p-element"],
        inputs: { autofocus: [2, "autofocus", "autofocus", ye] },
        standalone: !0,
        features: [Dt],
      });
    }
    return r;
  })(),
  Uu = (() => {
    class r {
      static ɵfac = function (t) {
        return new (t || r)();
      };
      static ɵmod = be({ type: r });
      static ɵinj = _e({});
    }
    return r;
  })();
var db = ["*"],
  Zt = (() => {
    class r {
      label;
      spin = !1;
      styleClass;
      role;
      ariaLabel;
      ariaHidden;
      ngOnInit() {
        this.getAttributes();
      }
      getAttributes() {
        let e = bi.isEmpty(this.label);
        (this.role = e ? void 0 : "img"),
          (this.ariaLabel = e ? void 0 : this.label),
          (this.ariaHidden = e);
      }
      getClassNames() {
        return `p-icon ${this.styleClass ? this.styleClass + " " : ""}${
          this.spin ? "p-icon-spin" : ""
        }`;
      }
      static ɵfac = function (t) {
        return new (t || r)();
      };
      static ɵcmp = oe({
        type: r,
        selectors: [["ng-component"]],
        hostAttrs: [1, "p-element", "p-icon-wrapper"],
        inputs: {
          label: "label",
          spin: [2, "spin", "spin", ye],
          styleClass: "styleClass",
        },
        standalone: !0,
        features: [Dt, le],
        ngContentSelectors: db,
        decls: 1,
        vars: 0,
        template: function (t, n) {
          t & 1 && (Pt(), xt(0));
        },
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return r;
  })();
var Wu = (() => {
  class r extends Zt {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + Vr() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (n) {
        return (e || (e = pt(r)))(n || r);
      };
    })();
    static ɵcmp = oe({
      type: r,
      selectors: [["SpinnerIcon"]],
      standalone: !0,
      features: [ze, le],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (t, n) {
        t & 1 &&
          (ct(),
          a(0, "svg", 0)(1, "g"),
          R(2, "path", 1),
          s(),
          a(3, "defs")(4, "clipPath", 2),
          R(5, "rect", 3),
          s()()()),
          t & 2 &&
            (Fe(n.getClassNames()),
            se("aria-label", n.ariaLabel)("aria-hidden", n.ariaHidden)(
              "role",
              n.role
            ),
            d(),
            se("clip-path", n.pathId),
            d(3),
            g("id", n.pathId));
      },
      encapsulation: 2,
    });
  }
  return r;
})();
var $a = (() => {
    class r {
      document;
      platformId;
      renderer;
      el;
      zone;
      config;
      constructor(e, t, n, o, u, b) {
        (this.document = e),
          (this.platformId = t),
          (this.renderer = n),
          (this.el = o),
          (this.zone = u),
          (this.config = b);
      }
      animationListener;
      mouseDownListener;
      timeout;
      ngAfterViewInit() {
        Si(this.platformId) &&
          this.config &&
          this.config.ripple &&
          this.zone.runOutsideAngular(() => {
            this.create(),
              (this.mouseDownListener = this.renderer.listen(
                this.el.nativeElement,
                "mousedown",
                this.onMouseDown.bind(this)
              ));
          });
      }
      onMouseDown(e) {
        let t = this.getInk();
        if (
          !t ||
          this.document.defaultView?.getComputedStyle(t, null).display ===
            "none"
        )
          return;
        if (
          (he.removeClass(t, "p-ink-active"),
          !he.getHeight(t) && !he.getWidth(t))
        ) {
          let b = Math.max(
            he.getOuterWidth(this.el.nativeElement),
            he.getOuterHeight(this.el.nativeElement)
          );
          (t.style.height = b + "px"), (t.style.width = b + "px");
        }
        let n = he.getOffset(this.el.nativeElement),
          o =
            e.pageX -
            n.left +
            this.document.body.scrollTop -
            he.getWidth(t) / 2,
          u =
            e.pageY -
            n.top +
            this.document.body.scrollLeft -
            he.getHeight(t) / 2;
        this.renderer.setStyle(t, "top", u + "px"),
          this.renderer.setStyle(t, "left", o + "px"),
          he.addClass(t, "p-ink-active"),
          (this.timeout = setTimeout(() => {
            let b = this.getInk();
            b && he.removeClass(b, "p-ink-active");
          }, 401));
      }
      getInk() {
        let e = this.el.nativeElement.children;
        for (let t = 0; t < e.length; t++)
          if (
            typeof e[t].className == "string" &&
            e[t].className.indexOf("p-ink") !== -1
          )
            return e[t];
        return null;
      }
      resetInk() {
        let e = this.getInk();
        e && he.removeClass(e, "p-ink-active");
      }
      onAnimationEnd(e) {
        this.timeout && clearTimeout(this.timeout),
          he.removeClass(e.currentTarget, "p-ink-active");
      }
      create() {
        let e = this.renderer.createElement("span");
        this.renderer.addClass(e, "p-ink"),
          this.renderer.appendChild(this.el.nativeElement, e),
          this.renderer.setAttribute(e, "aria-hidden", "true"),
          this.renderer.setAttribute(e, "role", "presentation"),
          this.animationListener ||
            (this.animationListener = this.renderer.listen(
              e,
              "animationend",
              this.onAnimationEnd.bind(this)
            ));
      }
      remove() {
        let e = this.getInk();
        e &&
          (this.mouseDownListener && this.mouseDownListener(),
          this.animationListener && this.animationListener(),
          (this.mouseDownListener = null),
          (this.animationListener = null),
          he.removeElement(e));
      }
      ngOnDestroy() {
        this.config && this.config.ripple && this.remove();
      }
      static ɵfac = function (t) {
        return new (t || r)(F(Le), F(Vi), F(Jt), F(Pe), F(Ie), F(za, 8));
      };
      static ɵdir = ke({
        type: r,
        selectors: [["", "pRipple", ""]],
        hostAttrs: [1, "p-ripple", "p-element"],
        standalone: !0,
      });
    }
    return r;
  })(),
  $u = (() => {
    class r {
      static ɵfac = function (t) {
        return new (t || r)();
      };
      static ɵmod = be({ type: r });
      static ɵinj = _e({});
    }
    return r;
  })();
var ub = ["*"],
  Gu = (r) => ({ class: r });
function hb(r, i) {
  r & 1 && Bi(0);
}
function mb(r, i) {
  if ((r & 1 && R(0, "span", 8), r & 2)) {
    let e = _(3);
    g("ngClass", e.iconClass()),
      se("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function fb(r, i) {
  if ((r & 1 && R(0, "SpinnerIcon", 9), r & 2)) {
    let e = _(3);
    g("styleClass", e.spinnerIconClass())("spin", !0),
      se("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function gb(r, i) {
  if (
    (r & 1 &&
      (Me(0), M(1, mb, 1, 3, "span", 6)(2, fb, 1, 4, "SpinnerIcon", 7), Oe()),
    r & 2)
  ) {
    let e = _(2);
    d(), g("ngIf", e.loadingIcon), d(), g("ngIf", !e.loadingIcon);
  }
}
function _b(r, i) {}
function bb(r, i) {
  if ((r & 1 && M(0, _b, 0, 0, "ng-template", 10), r & 2)) {
    let e = _(2);
    g("ngIf", e.loadingIconTemplate);
  }
}
function vb(r, i) {
  if (
    (r & 1 &&
      (Me(0), M(1, gb, 3, 2, "ng-container", 2)(2, bb, 1, 1, null, 5), Oe()),
    r & 2)
  ) {
    let e = _();
    d(),
      g("ngIf", !e.loadingIconTemplate),
      d(),
      g("ngTemplateOutlet", e.loadingIconTemplate)(
        "ngTemplateOutletContext",
        ce(3, Gu, e.iconClass())
      );
  }
}
function xb(r, i) {
  if ((r & 1 && R(0, "span", 8), r & 2)) {
    let e = _(2);
    g("ngClass", e.iconClass()), se("data-pc-section", "icon");
  }
}
function yb(r, i) {}
function Cb(r, i) {
  if ((r & 1 && M(0, yb, 0, 0, "ng-template", 10), r & 2)) {
    let e = _(2);
    g("ngIf", !e.icon && e.iconTemplate);
  }
}
function wb(r, i) {
  if (
    (r & 1 && (Me(0), M(1, xb, 1, 2, "span", 6)(2, Cb, 1, 1, null, 5), Oe()),
    r & 2)
  ) {
    let e = _();
    d(),
      g("ngIf", e.icon && !e.iconTemplate),
      d(),
      g("ngTemplateOutlet", e.iconTemplate)(
        "ngTemplateOutletContext",
        ce(3, Gu, e.iconClass())
      );
  }
}
function Db(r, i) {
  if ((r & 1 && (a(0, "span", 11), c(1), s()), r & 2)) {
    let e = _();
    se("aria-hidden", e.icon && !e.label)("data-pc-section", "label"),
      d(),
      E(e.label);
  }
}
function Sb(r, i) {
  if ((r & 1 && (a(0, "span", 8), c(1), s()), r & 2)) {
    let e = _();
    Fe(e.badgeClass),
      g("ngClass", e.badgeStyleClass()),
      se("data-pc-section", "badge"),
      d(),
      E(e.badge);
  }
}
var In = {
    button: "p-button",
    component: "p-component",
    iconOnly: "p-button-icon-only",
    disabled: "p-disabled",
    loading: "p-button-loading",
    labelOnly: "p-button-loading-label-only",
  },
  Yu = (() => {
    class r {
      el;
      document;
      iconPos = "left";
      loadingIcon;
      get label() {
        return this._label;
      }
      set label(e) {
        (this._label = e),
          this.initialized &&
            (this.updateLabel(), this.updateIcon(), this.setStyleClass());
      }
      get icon() {
        return this._icon;
      }
      set icon(e) {
        (this._icon = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      get loading() {
        return this._loading;
      }
      set loading(e) {
        (this._loading = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      severity;
      raised = !1;
      rounded = !1;
      text = !1;
      outlined = !1;
      size = null;
      plain = !1;
      _label;
      _icon;
      _loading = !1;
      initialized;
      get htmlElement() {
        return this.el.nativeElement;
      }
      _internalClasses = Object.values(In);
      constructor(e, t) {
        (this.el = e), (this.document = t);
      }
      ngAfterViewInit() {
        he.addMultipleClasses(this.htmlElement, this.getStyleClass().join(" ")),
          this.createIcon(),
          this.createLabel(),
          (this.initialized = !0);
      }
      getStyleClass() {
        let e = [In.button, In.component];
        return (
          this.icon &&
            !this.label &&
            bi.isEmpty(this.htmlElement.textContent) &&
            e.push(In.iconOnly),
          this.loading &&
            (e.push(In.disabled, In.loading),
            !this.icon && this.label && e.push(In.labelOnly),
            this.icon &&
              !this.label &&
              !bi.isEmpty(this.htmlElement.textContent) &&
              e.push(In.iconOnly)),
          this.text && e.push("p-button-text"),
          this.severity && e.push(`p-button-${this.severity}`),
          this.plain && e.push("p-button-plain"),
          this.raised && e.push("p-button-raised"),
          this.size && e.push(`p-button-${this.size}`),
          this.outlined && e.push("p-button-outlined"),
          this.rounded && e.push("p-button-rounded"),
          this.size === "small" && e.push("p-button-sm"),
          this.size === "large" && e.push("p-button-lg"),
          e
        );
      }
      setStyleClass() {
        let e = this.getStyleClass();
        this.htmlElement.classList.remove(...this._internalClasses),
          this.htmlElement.classList.add(...e);
      }
      createLabel() {
        if (!he.findSingle(this.htmlElement, ".p-button-label") && this.label) {
          let t = this.document.createElement("span");
          this.icon && !this.label && t.setAttribute("aria-hidden", "true"),
            (t.className = "p-button-label"),
            t.appendChild(this.document.createTextNode(this.label)),
            this.htmlElement.appendChild(t);
        }
      }
      createIcon() {
        if (
          !he.findSingle(this.htmlElement, ".p-button-icon") &&
          (this.icon || this.loading)
        ) {
          let t = this.document.createElement("span");
          (t.className = "p-button-icon"),
            t.setAttribute("aria-hidden", "true");
          let n = this.label ? "p-button-icon-" + this.iconPos : null;
          n && he.addClass(t, n);
          let o = this.getIconClass();
          o && he.addMultipleClasses(t, o),
            this.htmlElement.insertBefore(t, this.htmlElement.firstChild);
        }
      }
      updateLabel() {
        let e = he.findSingle(this.htmlElement, ".p-button-label");
        if (!this.label) {
          e && this.htmlElement.removeChild(e);
          return;
        }
        e ? (e.textContent = this.label) : this.createLabel();
      }
      updateIcon() {
        let e = he.findSingle(this.htmlElement, ".p-button-icon"),
          t = he.findSingle(this.htmlElement, ".p-button-label");
        e
          ? this.iconPos
            ? (e.className =
                "p-button-icon " +
                (t ? "p-button-icon-" + this.iconPos : "") +
                " " +
                this.getIconClass())
            : (e.className = "p-button-icon " + this.getIconClass())
          : this.createIcon();
      }
      getIconClass() {
        return this.loading
          ? "p-button-loading-icon pi-spin " +
              (this.loadingIcon ?? "pi pi-spinner")
          : this.icon || "p-hidden";
      }
      ngOnDestroy() {
        this.initialized = !1;
      }
      static ɵfac = function (t) {
        return new (t || r)(F(Pe), F(Le));
      };
      static ɵdir = ke({
        type: r,
        selectors: [["", "pButton", ""]],
        hostAttrs: [1, "p-element"],
        inputs: {
          iconPos: "iconPos",
          loadingIcon: "loadingIcon",
          label: "label",
          icon: "icon",
          loading: "loading",
          severity: "severity",
          raised: [2, "raised", "raised", ye],
          rounded: [2, "rounded", "rounded", ye],
          text: [2, "text", "text", ye],
          outlined: [2, "outlined", "outlined", ye],
          size: "size",
          plain: [2, "plain", "plain", ye],
        },
        standalone: !0,
        features: [Dt],
      });
    }
    return r;
  })(),
  Mb = (() => {
    class r {
      el;
      type = "button";
      iconPos = "left";
      icon;
      badge;
      label;
      disabled;
      loading = !1;
      loadingIcon;
      raised = !1;
      rounded = !1;
      text = !1;
      plain = !1;
      severity;
      outlined = !1;
      link = !1;
      tabindex;
      size;
      style;
      styleClass;
      badgeClass;
      ariaLabel;
      autofocus;
      onClick = new xe();
      onFocus = new xe();
      onBlur = new xe();
      contentTemplate;
      loadingIconTemplate;
      iconTemplate;
      templates;
      constructor(e) {
        this.el = e;
      }
      spinnerIconClass() {
        return Object.entries(this.iconClass())
          .filter(([, e]) => !!e)
          .reduce((e, [t]) => e + ` ${t}`, "p-button-loading-icon");
      }
      iconClass() {
        let e = {
          "p-button-icon": !0,
          "p-button-icon-left": this.iconPos === "left" && this.label,
          "p-button-icon-right": this.iconPos === "right" && this.label,
          "p-button-icon-top": this.iconPos === "top" && this.label,
          "p-button-icon-bottom": this.iconPos === "bottom" && this.label,
        };
        return (
          this.loading
            ? (e[`p-button-loading-icon pi-spin ${this.loadingIcon ?? ""}`] =
                !0)
            : this.icon && (e[this.icon] = !0),
          e
        );
      }
      get buttonClass() {
        return {
          "p-button p-component": !0,
          "p-button-icon-only":
            (this.icon ||
              this.iconTemplate ||
              this.loadingIcon ||
              this.loadingIconTemplate) &&
            !this.label,
          "p-button-vertical":
            (this.iconPos === "top" || this.iconPos === "bottom") && this.label,
          "p-button-loading": this.loading,
          "p-button-loading-label-only":
            this.loading &&
            !this.icon &&
            this.label &&
            !this.loadingIcon &&
            this.iconPos === "left",
          "p-button-link": this.link,
          [`p-button-${this.severity}`]: this.severity,
          "p-button-raised": this.raised,
          "p-button-rounded": this.rounded,
          "p-button-text": this.text,
          "p-button-outlined": this.outlined,
          "p-button-sm": this.size === "small",
          "p-button-lg": this.size === "large",
          "p-button-plain": this.plain,
          [`${this.styleClass}`]: this.styleClass,
        };
      }
      ngAfterContentInit() {
        this.templates?.forEach((e) => {
          switch (e.getType()) {
            case "content":
              this.contentTemplate = e.template;
              break;
            case "icon":
              this.iconTemplate = e.template;
              break;
            case "loadingicon":
              this.loadingIconTemplate = e.template;
              break;
            default:
              this.contentTemplate = e.template;
              break;
          }
        });
      }
      badgeStyleClass() {
        return {
          "p-badge p-component": !0,
          "p-badge-no-gutter": this.badge && String(this.badge).length === 1,
        };
      }
      focus() {
        this.el.nativeElement.firstChild.focus();
      }
      static ɵfac = function (t) {
        return new (t || r)(F(Pe));
      };
      static ɵcmp = oe({
        type: r,
        selectors: [["p-button"]],
        contentQueries: function (t, n, o) {
          if ((t & 1 && Ji(o, Co, 4), t & 2)) {
            let u;
            tt((u = it())) && (n.templates = u);
          }
        },
        hostAttrs: [1, "p-element"],
        hostVars: 2,
        hostBindings: function (t, n) {
          t & 2 && X("p-disabled", n.disabled);
        },
        inputs: {
          type: "type",
          iconPos: "iconPos",
          icon: "icon",
          badge: "badge",
          label: "label",
          disabled: [2, "disabled", "disabled", ye],
          loading: [2, "loading", "loading", ye],
          loadingIcon: "loadingIcon",
          raised: [2, "raised", "raised", ye],
          rounded: [2, "rounded", "rounded", ye],
          text: [2, "text", "text", ye],
          plain: [2, "plain", "plain", ye],
          severity: "severity",
          outlined: [2, "outlined", "outlined", ye],
          link: [2, "link", "link", ye],
          tabindex: [2, "tabindex", "tabindex", Di],
          size: "size",
          style: "style",
          styleClass: "styleClass",
          badgeClass: "badgeClass",
          ariaLabel: "ariaLabel",
          autofocus: [2, "autofocus", "autofocus", ye],
        },
        outputs: { onClick: "onClick", onFocus: "onFocus", onBlur: "onBlur" },
        standalone: !0,
        features: [Dt, le],
        ngContentSelectors: ub,
        decls: 7,
        vars: 14,
        consts: [
          [
            "pRipple",
            "",
            "pAutoFocus",
            "",
            3,
            "click",
            "focus",
            "blur",
            "ngStyle",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngTemplateOutlet"],
          [4, "ngIf"],
          ["class", "p-button-label", 4, "ngIf"],
          [3, "ngClass", "class", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "ngClass", 4, "ngIf"],
          [3, "styleClass", "spin", 4, "ngIf"],
          [3, "ngClass"],
          [3, "styleClass", "spin"],
          [3, "ngIf"],
          [1, "p-button-label"],
        ],
        template: function (t, n) {
          t & 1 &&
            (Pt(),
            a(0, "button", 0),
            O("click", function (u) {
              return n.onClick.emit(u);
            })("focus", function (u) {
              return n.onFocus.emit(u);
            })("blur", function (u) {
              return n.onBlur.emit(u);
            }),
            xt(1),
            M(2, hb, 1, 0, "ng-container", 1)(3, vb, 3, 5, "ng-container", 2)(
              4,
              wb,
              3,
              5,
              "ng-container",
              2
            )(5, Db, 2, 3, "span", 3)(6, Sb, 2, 5, "span", 4),
            s()),
            t & 2 &&
              (g("ngStyle", n.style)("disabled", n.disabled || n.loading)(
                "ngClass",
                n.buttonClass
              )("autofocus", n.autofocus),
              se("type", n.type)("aria-label", n.ariaLabel)(
                "data-pc-name",
                "button"
              )("data-pc-section", "root")("tabindex", n.tabindex),
              d(2),
              g("ngTemplateOutlet", n.contentTemplate),
              d(),
              g("ngIf", n.loading),
              d(),
              g("ngIf", !n.loading),
              d(),
              g("ngIf", !n.contentTemplate && n.label),
              d(),
              g("ngIf", !n.contentTemplate && n.badge));
        },
        dependencies: [Be, vr, Dn, ft, $a, Wa, Wu],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return r;
  })(),
  fc = (() => {
    class r {
      static ɵfac = function (t) {
        return new (t || r)();
      };
      static ɵmod = be({ type: r });
      static ɵinj = _e({ imports: [Mb, zi] });
    }
    return r;
  })();
var gc = (() => {
  class r extends Zt {
    static ɵfac = (() => {
      let e;
      return function (n) {
        return (e || (e = pt(r)))(n || r);
      };
    })();
    static ɵcmp = oe({
      type: r,
      selectors: [["ChevronLeftIcon"]],
      standalone: !0,
      features: [ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M9.61296 13C9.50997 13.0005 9.40792 12.9804 9.3128 12.9409C9.21767 12.9014 9.13139 12.8433 9.05902 12.7701L3.83313 7.54416C3.68634 7.39718 3.60388 7.19795 3.60388 6.99022C3.60388 6.78249 3.68634 6.58325 3.83313 6.43628L9.05902 1.21039C9.20762 1.07192 9.40416 0.996539 9.60724 1.00012C9.81032 1.00371 10.0041 1.08597 10.1477 1.22959C10.2913 1.37322 10.3736 1.56698 10.3772 1.77005C10.3808 1.97313 10.3054 2.16968 10.1669 2.31827L5.49496 6.99022L10.1669 11.6622C10.3137 11.8091 10.3962 12.0084 10.3962 12.2161C10.3962 12.4238 10.3137 12.6231 10.1669 12.7701C10.0945 12.8433 10.0083 12.9014 9.91313 12.9409C9.81801 12.9804 9.71596 13.0005 9.61296 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, n) {
        t & 1 && (ct(), a(0, "svg", 0), R(1, "path", 1), s()),
          t & 2 &&
            (Fe(n.getClassNames()),
            se("aria-label", n.ariaLabel)("aria-hidden", n.ariaHidden)(
              "role",
              n.role
            ));
      },
      encapsulation: 2,
    });
  }
  return r;
})();
var wo = (() => {
  class r extends Zt {
    static ɵfac = (() => {
      let e;
      return function (n) {
        return (e || (e = pt(r)))(n || r);
      };
    })();
    static ɵcmp = oe({
      type: r,
      selectors: [["ChevronRightIcon"]],
      standalone: !0,
      features: [ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M4.38708 13C4.28408 13.0005 4.18203 12.9804 4.08691 12.9409C3.99178 12.9014 3.9055 12.8433 3.83313 12.7701C3.68634 12.6231 3.60388 12.4238 3.60388 12.2161C3.60388 12.0084 3.68634 11.8091 3.83313 11.6622L8.50507 6.99022L3.83313 2.31827C3.69467 2.16968 3.61928 1.97313 3.62287 1.77005C3.62645 1.56698 3.70872 1.37322 3.85234 1.22959C3.99596 1.08597 4.18972 1.00371 4.3928 1.00012C4.59588 0.996539 4.79242 1.07192 4.94102 1.21039L10.1669 6.43628C10.3137 6.58325 10.3962 6.78249 10.3962 6.99022C10.3962 7.19795 10.3137 7.39718 10.1669 7.54416L4.94102 12.7701C4.86865 12.8433 4.78237 12.9014 4.68724 12.9409C4.59212 12.9804 4.49007 13.0005 4.38708 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, n) {
        t & 1 && (ct(), a(0, "svg", 0), R(1, "path", 1), s()),
          t & 2 &&
            (Fe(n.getClassNames()),
            se("aria-label", n.ariaLabel)("aria-hidden", n.ariaHidden)(
              "role",
              n.role
            ));
      },
      encapsulation: 2,
    });
  }
  return r;
})();
var _c = (() => {
  class r extends Zt {
    static ɵfac = (() => {
      let e;
      return function (n) {
        return (e || (e = pt(r)))(n || r);
      };
    })();
    static ɵcmp = oe({
      type: r,
      selectors: [["ChevronUpIcon"]],
      standalone: !0,
      features: [ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M12.2097 10.4113C12.1057 10.4118 12.0027 10.3915 11.9067 10.3516C11.8107 10.3118 11.7237 10.2532 11.6506 10.1792L6.93602 5.46461L2.22139 10.1476C2.07272 10.244 1.89599 10.2877 1.71953 10.2717C1.54307 10.2556 1.3771 10.1808 1.24822 10.0593C1.11933 9.93766 1.035 9.77633 1.00874 9.6011C0.982477 9.42587 1.0158 9.2469 1.10338 9.09287L6.37701 3.81923C6.52533 3.6711 6.72639 3.58789 6.93602 3.58789C7.14565 3.58789 7.3467 3.6711 7.49502 3.81923L12.7687 9.09287C12.9168 9.24119 13 9.44225 13 9.65187C13 9.8615 12.9168 10.0626 12.7687 10.2109C12.616 10.3487 12.4151 10.4207 12.2097 10.4113Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, n) {
        t & 1 && (ct(), a(0, "svg", 0), R(1, "path", 1), s()),
          t & 2 &&
            (Fe(n.getClassNames()),
            se("aria-label", n.ariaLabel)("aria-hidden", n.ariaHidden)(
              "role",
              n.role
            ));
      },
      encapsulation: 2,
    });
  }
  return r;
})();
var bc = (() => {
  class r extends Zt {
    static ɵfac = (() => {
      let e;
      return function (n) {
        return (e || (e = pt(r)))(n || r);
      };
    })();
    static ɵcmp = oe({
      type: r,
      selectors: [["ChevronDownIcon"]],
      standalone: !0,
      features: [ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, n) {
        t & 1 && (ct(), a(0, "svg", 0), R(1, "path", 1), s()),
          t & 2 &&
            (Fe(n.getClassNames()),
            se("aria-label", n.ariaLabel)("aria-hidden", n.ariaHidden)(
              "role",
              n.role
            ));
      },
      encapsulation: 2,
    });
  }
  return r;
})();
var vc = (() => {
  class r extends Zt {
    static ɵfac = (() => {
      let e;
      return function (n) {
        return (e || (e = pt(r)))(n || r);
      };
    })();
    static ɵcmp = oe({
      type: r,
      selectors: [["TimesIcon"]],
      standalone: !0,
      features: [ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, n) {
        t & 1 && (ct(), a(0, "svg", 0), R(1, "path", 1), s()),
          t & 2 &&
            (Fe(n.getClassNames()),
            se("aria-label", n.ariaLabel)("aria-hidden", n.ariaHidden)(
              "role",
              n.role
            ));
      },
      encapsulation: 2,
    });
  }
  return r;
})();
var xc = (() => {
  class r extends Zt {
    static ɵfac = (() => {
      let e;
      return function (n) {
        return (e || (e = pt(r)))(n || r);
      };
    })();
    static ɵcmp = oe({
      type: r,
      selectors: [["CalendarIcon"]],
      standalone: !0,
      features: [ze, le],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M10.7838 1.51351H9.83783V0.567568C9.83783 0.417039 9.77804 0.272676 9.6716 0.166237C9.56516 0.0597971 9.42079 0 9.27027 0C9.11974 0 8.97538 0.0597971 8.86894 0.166237C8.7625 0.272676 8.7027 0.417039 8.7027 0.567568V1.51351H5.29729V0.567568C5.29729 0.417039 5.2375 0.272676 5.13106 0.166237C5.02462 0.0597971 4.88025 0 4.72973 0C4.5792 0 4.43484 0.0597971 4.3284 0.166237C4.22196 0.272676 4.16216 0.417039 4.16216 0.567568V1.51351H3.21621C2.66428 1.51351 2.13494 1.73277 1.74467 2.12305C1.35439 2.51333 1.13513 3.04266 1.13513 3.59459V11.9189C1.13513 12.4709 1.35439 13.0002 1.74467 13.3905C2.13494 13.7807 2.66428 14 3.21621 14H10.7838C11.3357 14 11.865 13.7807 12.2553 13.3905C12.6456 13.0002 12.8649 12.4709 12.8649 11.9189V3.59459C12.8649 3.04266 12.6456 2.51333 12.2553 2.12305C11.865 1.73277 11.3357 1.51351 10.7838 1.51351ZM3.21621 2.64865H4.16216V3.59459C4.16216 3.74512 4.22196 3.88949 4.3284 3.99593C4.43484 4.10237 4.5792 4.16216 4.72973 4.16216C4.88025 4.16216 5.02462 4.10237 5.13106 3.99593C5.2375 3.88949 5.29729 3.74512 5.29729 3.59459V2.64865H8.7027V3.59459C8.7027 3.74512 8.7625 3.88949 8.86894 3.99593C8.97538 4.10237 9.11974 4.16216 9.27027 4.16216C9.42079 4.16216 9.56516 4.10237 9.6716 3.99593C9.77804 3.88949 9.83783 3.74512 9.83783 3.59459V2.64865H10.7838C11.0347 2.64865 11.2753 2.74831 11.4527 2.92571C11.6301 3.10311 11.7297 3.34371 11.7297 3.59459V5.67568H2.27027V3.59459C2.27027 3.34371 2.36993 3.10311 2.54733 2.92571C2.72473 2.74831 2.96533 2.64865 3.21621 2.64865ZM10.7838 12.8649H3.21621C2.96533 12.8649 2.72473 12.7652 2.54733 12.5878C2.36993 12.4104 2.27027 12.1698 2.27027 11.9189V6.81081H11.7297V11.9189C11.7297 12.1698 11.6301 12.4104 11.4527 12.5878C11.2753 12.7652 11.0347 12.8649 10.7838 12.8649Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (t, n) {
        t & 1 && (ct(), a(0, "svg", 0), R(1, "path", 1), s()),
          t & 2 &&
            (Fe(n.getClassNames()),
            se("aria-label", n.ariaLabel)("aria-hidden", n.ariaHidden)(
              "role",
              n.role
            ));
      },
      encapsulation: 2,
    });
  }
  return r;
})();
var Tb = ["container"],
  kb = ["inputfield"],
  Pb = ["contentWrapper"],
  Eb = [[["p-header"]], [["p-footer"]]],
  Ib = ["p-header", "p-footer"],
  Ab = (r, i, e, t, n) => ({
    "p-calendar": !0,
    "p-input-icon-right": r,
    "p-calendar-w-btn": i,
    "p-calendar-timeonly": e,
    "p-calendar-disabled": t,
    "p-focus": n,
  }),
  Fb = (r) => ({ clickCallBack: r }),
  Rb = (r) => ({ "p-datepicker-icon": r }),
  Vb = (r, i, e, t, n, o) => ({
    "p-datepicker p-component": !0,
    "p-datepicker-inline": r,
    "p-disabled": i,
    "p-datepicker-timeonly": e,
    "p-datepicker-multiple-month": t,
    "p-datepicker-monthpicker": n,
    "p-datepicker-touch-ui": o,
  }),
  qu = (r, i) => ({ showTransitionParams: r, hideTransitionParams: i }),
  Nb = (r) => ({ value: "visibleTouchUI", params: r }),
  Lb = (r) => ({ value: "visible", params: r }),
  yc = (r) => ({ $implicit: r }),
  Bb = (r, i) => ({ "p-datepicker-other-month": r, "p-datepicker-today": i }),
  Hb = (r, i) => ({
    "p-highlight p-datepicker-current-day": r,
    "p-disabled": i,
  }),
  Qu = (r, i) => ({ "p-highlight": r, "p-disabled": i }),
  Ku = (r) => [r];
function jb(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "TimesIcon", 11),
      O("click", function () {
        w(e);
        let n = _(3);
        return D(n.clear());
      }),
      s();
  }
  r & 2 && g("styleClass", "p-calendar-clear-icon");
}
function zb(r, i) {}
function Ub(r, i) {
  r & 1 && M(0, zb, 0, 0, "ng-template");
}
function Wb(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "span", 12),
      O("click", function () {
        w(e);
        let n = _(3);
        return D(n.clear());
      }),
      M(1, Ub, 1, 0, null, 13),
      s();
  }
  if (r & 2) {
    let e = _(3);
    d(), g("ngTemplateOutlet", e.clearIconTemplate);
  }
}
function $b(r, i) {
  if (
    (r & 1 &&
      (Me(0), M(1, jb, 1, 1, "TimesIcon", 9)(2, Wb, 2, 1, "span", 10), Oe()),
    r & 2)
  ) {
    let e = _(2);
    d(), g("ngIf", !e.clearIconTemplate), d(), g("ngIf", e.clearIconTemplate);
  }
}
function Gb(r, i) {
  if ((r & 1 && R(0, "span", 16), r & 2)) {
    let e = _(3);
    g("ngClass", e.icon);
  }
}
function Yb(r, i) {
  r & 1 && R(0, "CalendarIcon");
}
function qb(r, i) {}
function Kb(r, i) {
  r & 1 && M(0, qb, 0, 0, "ng-template");
}
function Qb(r, i) {
  if (
    (r & 1 &&
      (Me(0), M(1, Yb, 1, 0, "CalendarIcon", 7)(2, Kb, 1, 0, null, 13), Oe()),
    r & 2)
  ) {
    let e = _(3);
    d(),
      g("ngIf", !e.triggerIconTemplate),
      d(),
      g("ngTemplateOutlet", e.triggerIconTemplate);
  }
}
function Zb(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 14),
      O("click", function (n) {
        w(e), _();
        let o = rt(1),
          u = _();
        return D(u.onButtonClick(n, o));
      }),
      M(1, Gb, 1, 1, "span", 15)(2, Qb, 3, 2, "ng-container", 7),
      s();
  }
  if (r & 2) {
    let e,
      t = _(2);
    g("disabled", t.disabled),
      se("aria-label", t.iconButtonAriaLabel)(
        "aria-expanded",
        (e = t.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", t.overlayVisible ? t.panelId : null),
      d(),
      g("ngIf", t.icon),
      d(),
      g("ngIf", !t.icon);
  }
}
function Xb(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "CalendarIcon", 19),
      O("click", function (n) {
        w(e);
        let o = _(3);
        return D(o.onButtonClick(n));
      }),
      s();
  }
  if (r & 2) {
    let e = _(3);
    g("ngClass", ce(1, Rb, e.showOnFocus));
  }
}
function Jb(r, i) {
  r & 1 && Bi(0);
}
function ev(r, i) {
  if (
    (r & 1 &&
      (Me(0),
      M(1, Xb, 1, 3, "CalendarIcon", 17)(2, Jb, 1, 0, "ng-container", 18),
      Oe()),
    r & 2)
  ) {
    let e = _(2);
    d(),
      g("ngIf", !e.inputIconTemplate),
      d(),
      g("ngTemplateOutlet", e.inputIconTemplate)(
        "ngTemplateOutletContext",
        ce(3, Fb, e.onButtonClick.bind(e))
      );
  }
}
function tv(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "input", 6, 1),
      O("focus", function (n) {
        w(e);
        let o = _();
        return D(o.onInputFocus(n));
      })("keydown", function (n) {
        w(e);
        let o = _();
        return D(o.onInputKeydown(n));
      })("click", function () {
        w(e);
        let n = _();
        return D(n.onInputClick());
      })("blur", function (n) {
        w(e);
        let o = _();
        return D(o.onInputBlur(n));
      })("input", function (n) {
        w(e);
        let o = _();
        return D(o.onUserInput(n));
      }),
      s(),
      M(2, $b, 3, 2, "ng-container", 7)(3, Zb, 3, 6, "button", 8)(
        4,
        ev,
        3,
        5,
        "ng-container",
        7
      );
  }
  if (r & 2) {
    let e,
      t = _();
    Fe(t.inputStyleClass),
      g("value", t.inputFieldValue)("readonly", t.readonlyInput)(
        "ngStyle",
        t.inputStyle
      )("placeholder", t.placeholder || "")("disabled", t.disabled)(
        "ngClass",
        t.inputClass
      )("autofocus", t.autofocus),
      se("id", t.inputId)("name", t.name)("required", t.required)(
        "aria-required",
        t.required
      )(
        "aria-expanded",
        (e = t.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", t.overlayVisible ? t.panelId : null)(
        "aria-labelledby",
        t.ariaLabelledBy
      )("aria-label", t.ariaLabel)("tabindex", t.tabindex)(
        "inputmode",
        t.touchUI ? "off" : null
      ),
      d(2),
      g("ngIf", t.showClear && !t.disabled && t.value != null),
      d(),
      g("ngIf", t.showIcon && t.iconDisplay === "button"),
      d(),
      g("ngIf", t.iconDisplay === "input" && t.showIcon);
  }
}
function iv(r, i) {
  r & 1 && Bi(0);
}
function nv(r, i) {
  r & 1 && R(0, "ChevronLeftIcon", 40),
    r & 2 && g("styleClass", "p-datepicker-prev-icon");
}
function rv(r, i) {}
function ov(r, i) {
  r & 1 && M(0, rv, 0, 0, "ng-template");
}
function av(r, i) {
  if ((r & 1 && (a(0, "span", 41), M(1, ov, 1, 0, null, 13), s()), r & 2)) {
    let e = _(5);
    d(), g("ngTemplateOutlet", e.previousIconTemplate);
  }
}
function sv(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 38),
      O("keydown", function (n) {
        w(e);
        let o = _(4);
        return D(o.onContainerButtonKeydown(n));
      })("click", function (n) {
        w(e);
        let o = _(4);
        return D(o.onPrevButtonClick(n));
      }),
      M(1, nv, 1, 1, "ChevronLeftIcon", 35)(2, av, 2, 1, "span", 39),
      s();
  }
  if (r & 2) {
    let e = _(4);
    se("aria-label", e.prevIconAriaLabel),
      d(),
      g("ngIf", !e.previousIconTemplate),
      d(),
      g("ngIf", e.previousIconTemplate);
  }
}
function lv(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 42),
      O("click", function (n) {
        w(e);
        let o = _(4);
        return D(o.switchToMonthView(n));
      })("keydown", function (n) {
        w(e);
        let o = _(4);
        return D(o.onContainerButtonKeydown(n));
      }),
      c(1),
      s();
  }
  if (r & 2) {
    let e = _().$implicit,
      t = _(3);
    g("disabled", t.switchViewButtonDisabled()),
      se("aria-label", t.getTranslation("chooseMonth")),
      d(),
      K(" ", t.getMonthName(e.month), " ");
  }
}
function cv(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 43),
      O("click", function (n) {
        w(e);
        let o = _(4);
        return D(o.switchToYearView(n));
      })("keydown", function (n) {
        w(e);
        let o = _(4);
        return D(o.onContainerButtonKeydown(n));
      }),
      c(1),
      s();
  }
  if (r & 2) {
    let e = _().$implicit,
      t = _(3);
    g("disabled", t.switchViewButtonDisabled()),
      se("aria-label", t.getTranslation("chooseYear")),
      d(),
      K(" ", t.getYear(e), " ");
  }
}
function dv(r, i) {
  if ((r & 1 && (Me(0), c(1), Oe()), r & 2)) {
    let e = _(5);
    d(),
      di(
        "",
        e.yearPickerValues()[0],
        " - ",
        e.yearPickerValues()[e.yearPickerValues().length - 1],
        ""
      );
  }
}
function pv(r, i) {
  r & 1 && Bi(0);
}
function uv(r, i) {
  if (
    (r & 1 &&
      (a(0, "span", 44),
      M(1, dv, 2, 2, "ng-container", 7)(2, pv, 1, 0, "ng-container", 18),
      s()),
    r & 2)
  ) {
    let e = _(4);
    d(),
      g("ngIf", !e.decadeTemplate),
      d(),
      g("ngTemplateOutlet", e.decadeTemplate)(
        "ngTemplateOutletContext",
        ce(3, yc, e.yearPickerValues)
      );
  }
}
function hv(r, i) {
  r & 1 && R(0, "ChevronRightIcon", 40),
    r & 2 && g("styleClass", "p-datepicker-next-icon");
}
function mv(r, i) {}
function fv(r, i) {
  r & 1 && M(0, mv, 0, 0, "ng-template");
}
function gv(r, i) {
  if ((r & 1 && (a(0, "span", 45), M(1, fv, 1, 0, null, 13), s()), r & 2)) {
    let e = _(4);
    d(), g("ngTemplateOutlet", e.nextIconTemplate);
  }
}
function _v(r, i) {
  if ((r & 1 && (a(0, "th", 51)(1, "span"), c(2), s()()), r & 2)) {
    let e = _(5);
    d(2), E(e.getTranslation("weekHeader"));
  }
}
function bv(r, i) {
  if ((r & 1 && (a(0, "th", 52)(1, "span"), c(2), s()()), r & 2)) {
    let e = i.$implicit;
    d(2), E(e);
  }
}
function vv(r, i) {
  if ((r & 1 && (a(0, "td", 55)(1, "span", 56), c(2), s()()), r & 2)) {
    let e = _().index,
      t = _(2).$implicit;
    d(2), K(" ", t.weekNumbers[e], " ");
  }
}
function xv(r, i) {
  if ((r & 1 && (Me(0), c(1), Oe()), r & 2)) {
    let e = _(2).$implicit;
    d(), E(e.day);
  }
}
function yv(r, i) {
  r & 1 && Bi(0);
}
function Cv(r, i) {
  if ((r & 1 && (Me(0), M(1, yv, 1, 0, "ng-container", 18), Oe()), r & 2)) {
    let e = _(2).$implicit,
      t = _(6);
    d(),
      g("ngTemplateOutlet", t.dateTemplate)(
        "ngTemplateOutletContext",
        ce(2, yc, e)
      );
  }
}
function wv(r, i) {
  r & 1 && Bi(0);
}
function Dv(r, i) {
  if ((r & 1 && (Me(0), M(1, wv, 1, 0, "ng-container", 18), Oe()), r & 2)) {
    let e = _(2).$implicit,
      t = _(6);
    d(),
      g("ngTemplateOutlet", t.disabledDateTemplate)(
        "ngTemplateOutletContext",
        ce(2, yc, e)
      );
  }
}
function Sv(r, i) {
  if ((r & 1 && (a(0, "div", 59), c(1), s()), r & 2)) {
    let e = _(2).$implicit;
    d(), K(" ", e.day, " ");
  }
}
function Mv(r, i) {
  if (r & 1) {
    let e = J();
    Me(0),
      a(1, "span", 57),
      O("click", function (n) {
        w(e);
        let o = _().$implicit,
          u = _(6);
        return D(u.onDateSelect(n, o));
      })("keydown", function (n) {
        w(e);
        let o = _().$implicit,
          u = _(3).index,
          b = _(3);
        return D(b.onDateCellKeydown(n, o, u));
      }),
      M(2, xv, 2, 1, "ng-container", 7)(3, Cv, 2, 4, "ng-container", 7)(
        4,
        Dv,
        2,
        4,
        "ng-container",
        7
      ),
      s(),
      M(5, Sv, 2, 1, "div", 58),
      Oe();
  }
  if (r & 2) {
    let e = _().$implicit,
      t = _(6);
    d(),
      g("ngClass", wi(6, Hb, t.isSelected(e) && e.selectable, !e.selectable)),
      se("data-date", t.formatDateKey(t.formatDateMetaToDate(e))),
      d(),
      g("ngIf", !t.dateTemplate && (e.selectable || !t.disabledDateTemplate)),
      d(),
      g("ngIf", e.selectable || !t.disabledDateTemplate),
      d(),
      g("ngIf", !e.selectable),
      d(),
      g("ngIf", t.isSelected(e));
  }
}
function Ov(r, i) {
  if (
    (r & 1 && (a(0, "td", 16), M(1, Mv, 6, 9, "ng-container", 7), s()), r & 2)
  ) {
    let e = i.$implicit,
      t = _(6);
    g("ngClass", wi(3, Bb, e.otherMonth, e.today)),
      se("aria-label", e.day),
      d(),
      g("ngIf", e.otherMonth ? t.showOtherMonths : !0);
  }
}
function Tv(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr"), M(1, vv, 3, 1, "td", 53)(2, Ov, 2, 6, "td", 54), s()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = _(5);
    d(), g("ngIf", t.showWeek), d(), g("ngForOf", e);
  }
}
function kv(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 46)(1, "table", 47)(2, "thead")(3, "tr"),
      M(4, _v, 3, 1, "th", 48)(5, bv, 3, 1, "th", 49),
      s()(),
      a(6, "tbody"),
      M(7, Tv, 3, 2, "tr", 50),
      s()()()),
    r & 2)
  ) {
    let e = _().$implicit,
      t = _(3);
    d(4),
      g("ngIf", t.showWeek),
      d(),
      g("ngForOf", t.weekDays),
      d(2),
      g("ngForOf", e.dates);
  }
}
function Pv(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 27)(1, "div", 28),
      M(2, sv, 3, 3, "button", 29),
      a(3, "div", 30),
      M(4, lv, 2, 3, "button", 31)(5, cv, 2, 3, "button", 32)(
        6,
        uv,
        3,
        5,
        "span",
        33
      ),
      s(),
      a(7, "button", 34),
      O("keydown", function (n) {
        w(e);
        let o = _(3);
        return D(o.onContainerButtonKeydown(n));
      })("click", function (n) {
        w(e);
        let o = _(3);
        return D(o.onNextButtonClick(n));
      }),
      M(8, hv, 1, 1, "ChevronRightIcon", 35)(9, gv, 2, 1, "span", 36),
      s()(),
      M(10, kv, 8, 3, "div", 37),
      s();
  }
  if (r & 2) {
    let e = i.index,
      t = _(3);
    d(2),
      g("ngIf", e === 0),
      d(2),
      g("ngIf", t.currentView === "date"),
      d(),
      g("ngIf", t.currentView !== "year"),
      d(),
      g("ngIf", t.currentView === "year"),
      d(),
      ut(
        "display",
        t.numberOfMonths === 1 || e === t.numberOfMonths - 1
          ? "inline-flex"
          : "none"
      ),
      se("aria-label", t.nextIconAriaLabel),
      d(),
      g("ngIf", !t.nextIconTemplate),
      d(),
      g("ngIf", t.nextIconTemplate),
      d(),
      g("ngIf", t.currentView === "date");
  }
}
function Ev(r, i) {
  if ((r & 1 && (a(0, "div", 59), c(1), s()), r & 2)) {
    let e = _().$implicit;
    d(), K(" ", e, " ");
  }
}
function Iv(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "span", 62),
      O("click", function (n) {
        let o = w(e).index,
          u = _(4);
        return D(u.onMonthSelect(n, o));
      })("keydown", function (n) {
        let o = w(e).index,
          u = _(4);
        return D(u.onMonthCellKeydown(n, o));
      }),
      c(1),
      M(2, Ev, 2, 1, "div", 58),
      s();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = i.index,
      n = _(4);
    g("ngClass", wi(3, Qu, n.isMonthSelected(t), n.isMonthDisabled(t))),
      d(),
      K(" ", e, " "),
      d(),
      g("ngIf", n.isMonthSelected(t));
  }
}
function Av(r, i) {
  if ((r & 1 && (a(0, "div", 60), M(1, Iv, 3, 6, "span", 61), s()), r & 2)) {
    let e = _(3);
    d(), g("ngForOf", e.monthPickerValues());
  }
}
function Fv(r, i) {
  if ((r & 1 && (a(0, "div", 59), c(1), s()), r & 2)) {
    let e = _().$implicit;
    d(), K(" ", e, " ");
  }
}
function Rv(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "span", 65),
      O("click", function (n) {
        let o = w(e).$implicit,
          u = _(4);
        return D(u.onYearSelect(n, o));
      })("keydown", function (n) {
        let o = w(e).$implicit,
          u = _(4);
        return D(u.onYearCellKeydown(n, o));
      }),
      c(1),
      M(2, Fv, 2, 1, "div", 58),
      s();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(4);
    g("ngClass", wi(3, Qu, t.isYearSelected(e), t.isYearDisabled(e))),
      d(),
      K(" ", e, " "),
      d(),
      g("ngIf", t.isYearSelected(e));
  }
}
function Vv(r, i) {
  if ((r & 1 && (a(0, "div", 63), M(1, Rv, 3, 6, "span", 64), s()), r & 2)) {
    let e = _(3);
    d(), g("ngForOf", e.yearPickerValues());
  }
}
function Nv(r, i) {
  if (
    (r & 1 &&
      (Me(0),
      a(1, "div", 23),
      M(2, Pv, 11, 10, "div", 24),
      s(),
      M(3, Av, 2, 1, "div", 25)(4, Vv, 2, 1, "div", 26),
      Oe()),
    r & 2)
  ) {
    let e = _(2);
    d(2),
      g("ngForOf", e.months),
      d(),
      g("ngIf", e.currentView === "month"),
      d(),
      g("ngIf", e.currentView === "year");
  }
}
function Lv(r, i) {
  r & 1 && R(0, "ChevronUpIcon");
}
function Bv(r, i) {}
function Hv(r, i) {
  r & 1 && M(0, Bv, 0, 0, "ng-template");
}
function jv(r, i) {
  r & 1 && (Me(0), c(1, "0"), Oe());
}
function zv(r, i) {
  r & 1 && R(0, "ChevronDownIcon");
}
function Uv(r, i) {}
function Wv(r, i) {
  r & 1 && M(0, Uv, 0, 0, "ng-template");
}
function $v(r, i) {
  r & 1 && R(0, "ChevronUpIcon");
}
function Gv(r, i) {}
function Yv(r, i) {
  r & 1 && M(0, Gv, 0, 0, "ng-template");
}
function qv(r, i) {
  r & 1 && (Me(0), c(1, "0"), Oe());
}
function Kv(r, i) {
  r & 1 && R(0, "ChevronDownIcon");
}
function Qv(r, i) {}
function Zv(r, i) {
  r & 1 && M(0, Qv, 0, 0, "ng-template");
}
function Xv(r, i) {
  if ((r & 1 && (a(0, "div", 69)(1, "span"), c(2), s()()), r & 2)) {
    let e = _(3);
    d(2), E(e.timeSeparator);
  }
}
function Jv(r, i) {
  r & 1 && R(0, "ChevronUpIcon");
}
function e1(r, i) {}
function t1(r, i) {
  r & 1 && M(0, e1, 0, 0, "ng-template");
}
function i1(r, i) {
  r & 1 && (Me(0), c(1, "0"), Oe());
}
function n1(r, i) {
  r & 1 && R(0, "ChevronDownIcon");
}
function r1(r, i) {}
function o1(r, i) {
  r & 1 && M(0, r1, 0, 0, "ng-template");
}
function a1(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 74)(1, "button", 68),
      O("keydown", function (n) {
        w(e);
        let o = _(3);
        return D(o.onContainerButtonKeydown(n));
      })("keydown.enter", function (n) {
        w(e);
        let o = _(3);
        return D(o.incrementSecond(n));
      })("keydown.space", function (n) {
        w(e);
        let o = _(3);
        return D(o.incrementSecond(n));
      })("mousedown", function (n) {
        w(e);
        let o = _(3);
        return D(o.onTimePickerElementMouseDown(n, 2, 1));
      })("mouseup", function (n) {
        w(e);
        let o = _(3);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.enter", function (n) {
        w(e);
        let o = _(3);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.space", function (n) {
        w(e);
        let o = _(3);
        return D(o.onTimePickerElementMouseUp(n));
      })("mouseleave", function () {
        w(e);
        let n = _(3);
        return D(n.onTimePickerElementMouseLeave());
      }),
      M(2, Jv, 1, 0, "ChevronUpIcon", 7)(3, t1, 1, 0, null, 13),
      s(),
      a(4, "span"),
      M(5, i1, 2, 0, "ng-container", 7),
      c(6),
      s(),
      a(7, "button", 68),
      O("keydown", function (n) {
        w(e);
        let o = _(3);
        return D(o.onContainerButtonKeydown(n));
      })("keydown.enter", function (n) {
        w(e);
        let o = _(3);
        return D(o.decrementSecond(n));
      })("keydown.space", function (n) {
        w(e);
        let o = _(3);
        return D(o.decrementSecond(n));
      })("mousedown", function (n) {
        w(e);
        let o = _(3);
        return D(o.onTimePickerElementMouseDown(n, 2, -1));
      })("mouseup", function (n) {
        w(e);
        let o = _(3);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.enter", function (n) {
        w(e);
        let o = _(3);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.space", function (n) {
        w(e);
        let o = _(3);
        return D(o.onTimePickerElementMouseUp(n));
      })("mouseleave", function () {
        w(e);
        let n = _(3);
        return D(n.onTimePickerElementMouseLeave());
      }),
      M(8, n1, 1, 0, "ChevronDownIcon", 7)(9, o1, 1, 0, null, 13),
      s()();
  }
  if (r & 2) {
    let e = _(3);
    d(),
      se("aria-label", e.getTranslation("nextSecond")),
      d(),
      g("ngIf", !e.incrementIconTemplate),
      d(),
      g("ngTemplateOutlet", e.incrementIconTemplate),
      d(2),
      g("ngIf", e.currentSecond < 10),
      d(),
      E(e.currentSecond),
      d(),
      se("aria-label", e.getTranslation("prevSecond")),
      d(),
      g("ngIf", !e.decrementIconTemplate),
      d(),
      g("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function s1(r, i) {
  r & 1 && R(0, "ChevronUpIcon");
}
function l1(r, i) {}
function c1(r, i) {
  r & 1 && M(0, l1, 0, 0, "ng-template");
}
function d1(r, i) {
  r & 1 && R(0, "ChevronDownIcon");
}
function p1(r, i) {}
function u1(r, i) {
  r & 1 && M(0, p1, 0, 0, "ng-template");
}
function h1(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 75)(1, "button", 76),
      O("keydown", function (n) {
        w(e);
        let o = _(3);
        return D(o.onContainerButtonKeydown(n));
      })("click", function (n) {
        w(e);
        let o = _(3);
        return D(o.toggleAMPM(n));
      })("keydown.enter", function (n) {
        w(e);
        let o = _(3);
        return D(o.toggleAMPM(n));
      }),
      M(2, s1, 1, 0, "ChevronUpIcon", 7)(3, c1, 1, 0, null, 13),
      s(),
      a(4, "span"),
      c(5),
      s(),
      a(6, "button", 76),
      O("keydown", function (n) {
        w(e);
        let o = _(3);
        return D(o.onContainerButtonKeydown(n));
      })("click", function (n) {
        w(e);
        let o = _(3);
        return D(o.toggleAMPM(n));
      })("keydown.enter", function (n) {
        w(e);
        let o = _(3);
        return D(o.toggleAMPM(n));
      }),
      M(7, d1, 1, 0, "ChevronDownIcon", 7)(8, u1, 1, 0, null, 13),
      s()();
  }
  if (r & 2) {
    let e = _(3);
    d(),
      se("aria-label", e.getTranslation("am")),
      d(),
      g("ngIf", !e.incrementIconTemplate),
      d(),
      g("ngTemplateOutlet", e.incrementIconTemplate),
      d(2),
      E(e.pm ? "PM" : "AM"),
      d(),
      se("aria-label", e.getTranslation("pm")),
      d(),
      g("ngIf", !e.decrementIconTemplate),
      d(),
      g("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function m1(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 66)(1, "div", 67)(2, "button", 68),
      O("keydown", function (n) {
        w(e);
        let o = _(2);
        return D(o.onContainerButtonKeydown(n));
      })("keydown.enter", function (n) {
        w(e);
        let o = _(2);
        return D(o.incrementHour(n));
      })("keydown.space", function (n) {
        w(e);
        let o = _(2);
        return D(o.incrementHour(n));
      })("mousedown", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseDown(n, 0, 1));
      })("mouseup", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.enter", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.space", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("mouseleave", function () {
        w(e);
        let n = _(2);
        return D(n.onTimePickerElementMouseLeave());
      }),
      M(3, Lv, 1, 0, "ChevronUpIcon", 7)(4, Hv, 1, 0, null, 13),
      s(),
      a(5, "span"),
      M(6, jv, 2, 0, "ng-container", 7),
      c(7),
      s(),
      a(8, "button", 68),
      O("keydown", function (n) {
        w(e);
        let o = _(2);
        return D(o.onContainerButtonKeydown(n));
      })("keydown.enter", function (n) {
        w(e);
        let o = _(2);
        return D(o.decrementHour(n));
      })("keydown.space", function (n) {
        w(e);
        let o = _(2);
        return D(o.decrementHour(n));
      })("mousedown", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseDown(n, 0, -1));
      })("mouseup", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.enter", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.space", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("mouseleave", function () {
        w(e);
        let n = _(2);
        return D(n.onTimePickerElementMouseLeave());
      }),
      M(9, zv, 1, 0, "ChevronDownIcon", 7)(10, Wv, 1, 0, null, 13),
      s()(),
      a(11, "div", 69)(12, "span"),
      c(13),
      s()(),
      a(14, "div", 70)(15, "button", 68),
      O("keydown", function (n) {
        w(e);
        let o = _(2);
        return D(o.onContainerButtonKeydown(n));
      })("keydown.enter", function (n) {
        w(e);
        let o = _(2);
        return D(o.incrementMinute(n));
      })("keydown.space", function (n) {
        w(e);
        let o = _(2);
        return D(o.incrementMinute(n));
      })("mousedown", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseDown(n, 1, 1));
      })("mouseup", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.enter", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.space", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("mouseleave", function () {
        w(e);
        let n = _(2);
        return D(n.onTimePickerElementMouseLeave());
      }),
      M(16, $v, 1, 0, "ChevronUpIcon", 7)(17, Yv, 1, 0, null, 13),
      s(),
      a(18, "span"),
      M(19, qv, 2, 0, "ng-container", 7),
      c(20),
      s(),
      a(21, "button", 68),
      O("keydown", function (n) {
        w(e);
        let o = _(2);
        return D(o.onContainerButtonKeydown(n));
      })("keydown.enter", function (n) {
        w(e);
        let o = _(2);
        return D(o.decrementMinute(n));
      })("keydown.space", function (n) {
        w(e);
        let o = _(2);
        return D(o.decrementMinute(n));
      })("mousedown", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseDown(n, 1, -1));
      })("mouseup", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.enter", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("keyup.space", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTimePickerElementMouseUp(n));
      })("mouseleave", function () {
        w(e);
        let n = _(2);
        return D(n.onTimePickerElementMouseLeave());
      }),
      M(22, Kv, 1, 0, "ChevronDownIcon", 7)(23, Zv, 1, 0, null, 13),
      s()(),
      M(24, Xv, 3, 1, "div", 71)(25, a1, 10, 8, "div", 72)(
        26,
        h1,
        9,
        7,
        "div",
        73
      ),
      s();
  }
  if (r & 2) {
    let e = _(2);
    d(2),
      se("aria-label", e.getTranslation("nextHour")),
      d(),
      g("ngIf", !e.incrementIconTemplate),
      d(),
      g("ngTemplateOutlet", e.incrementIconTemplate),
      d(2),
      g("ngIf", e.currentHour < 10),
      d(),
      E(e.currentHour),
      d(),
      se("aria-label", e.getTranslation("prevHour")),
      d(),
      g("ngIf", !e.decrementIconTemplate),
      d(),
      g("ngTemplateOutlet", e.decrementIconTemplate),
      d(3),
      E(e.timeSeparator),
      d(2),
      se("aria-label", e.getTranslation("nextMinute")),
      d(),
      g("ngIf", !e.incrementIconTemplate),
      d(),
      g("ngTemplateOutlet", e.incrementIconTemplate),
      d(2),
      g("ngIf", e.currentMinute < 10),
      d(),
      E(e.currentMinute),
      d(),
      se("aria-label", e.getTranslation("prevMinute")),
      d(),
      g("ngIf", !e.decrementIconTemplate),
      d(),
      g("ngTemplateOutlet", e.decrementIconTemplate),
      d(),
      g("ngIf", e.showSeconds),
      d(),
      g("ngIf", e.showSeconds),
      d(),
      g("ngIf", e.hourFormat == "12");
  }
}
function f1(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 77)(1, "button", 78),
      O("keydown", function (n) {
        w(e);
        let o = _(2);
        return D(o.onContainerButtonKeydown(n));
      })("click", function (n) {
        w(e);
        let o = _(2);
        return D(o.onTodayButtonClick(n));
      }),
      s(),
      a(2, "button", 78),
      O("keydown", function (n) {
        w(e);
        let o = _(2);
        return D(o.onContainerButtonKeydown(n));
      })("click", function (n) {
        w(e);
        let o = _(2);
        return D(o.onClearButtonClick(n));
      }),
      s()();
  }
  if (r & 2) {
    let e = _(2);
    d(),
      g("label", e.getTranslation("today"))(
        "ngClass",
        ce(4, Ku, e.todayButtonStyleClass)
      ),
      d(),
      g("label", e.getTranslation("clear"))(
        "ngClass",
        ce(6, Ku, e.clearButtonStyleClass)
      );
  }
}
function g1(r, i) {
  r & 1 && Bi(0);
}
function _1(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 20, 2),
      O("@overlayAnimation.start", function (n) {
        w(e);
        let o = _();
        return D(o.onOverlayAnimationStart(n));
      })("@overlayAnimation.done", function (n) {
        w(e);
        let o = _();
        return D(o.onOverlayAnimationDone(n));
      })("click", function (n) {
        w(e);
        let o = _();
        return D(o.onOverlayClick(n));
      }),
      xt(2),
      M(3, iv, 1, 0, "ng-container", 13)(4, Nv, 5, 3, "ng-container", 7)(
        5,
        m1,
        27,
        20,
        "div",
        21
      )(6, f1, 3, 8, "div", 22),
      xt(7, 1),
      M(8, g1, 1, 0, "ng-container", 13),
      s();
  }
  if (r & 2) {
    let e = _();
    Fe(e.panelStyleClass),
      g("ngStyle", e.panelStyle)(
        "ngClass",
        kd(
          15,
          Vb,
          e.inline,
          e.disabled,
          e.timeOnly,
          e.numberOfMonths > 1,
          e.view === "month",
          e.touchUI
        )
      )(
        "@overlayAnimation",
        e.touchUI
          ? ce(
              25,
              Nb,
              wi(22, qu, e.showTransitionOptions, e.hideTransitionOptions)
            )
          : ce(
              30,
              Lb,
              wi(27, qu, e.showTransitionOptions, e.hideTransitionOptions)
            )
      )("@.disabled", e.inline === !0),
      se("id", e.panelId)("aria-label", e.getTranslation("chooseDate"))(
        "role",
        e.inline ? null : "dialog"
      )("aria-modal", e.inline ? null : "true"),
      d(3),
      g("ngTemplateOutlet", e.headerTemplate),
      d(),
      g("ngIf", !e.timeOnly),
      d(),
      g("ngIf", (e.showTime || e.timeOnly) && e.currentView === "date"),
      d(),
      g("ngIf", e.showButtonBar),
      d(2),
      g("ngTemplateOutlet", e.footerTemplate);
  }
}
var b1 = { provide: Gn, useExisting: Gt(() => v1), multi: !0 },
  v1 = (() => {
    class r {
      document;
      el;
      renderer;
      cd;
      zone;
      config;
      overlayService;
      iconDisplay = "button";
      style;
      styleClass;
      inputStyle;
      inputId;
      name;
      inputStyleClass;
      placeholder;
      ariaLabelledBy;
      ariaLabel;
      iconAriaLabel;
      disabled;
      dateFormat;
      multipleSeparator = ",";
      rangeSeparator = "-";
      inline = !1;
      showOtherMonths = !0;
      selectOtherMonths;
      showIcon;
      icon;
      appendTo;
      readonlyInput;
      shortYearCutoff = "+10";
      monthNavigator;
      yearNavigator;
      hourFormat = "24";
      timeOnly;
      stepYearPicker = 10;
      stepHour = 1;
      stepMinute = 1;
      stepSecond = 1;
      showSeconds = !1;
      required;
      showOnFocus = !0;
      showWeek = !1;
      startWeekFromFirstDayOfYear = !1;
      showClear = !1;
      dataType = "date";
      selectionMode = "single";
      maxDateCount;
      showButtonBar;
      todayButtonStyleClass = "p-button-text";
      clearButtonStyleClass = "p-button-text";
      autofocus;
      autoZIndex = !0;
      baseZIndex = 0;
      panelStyleClass;
      panelStyle;
      keepInvalid = !1;
      hideOnDateTimeSelect = !0;
      touchUI;
      timeSeparator = ":";
      focusTrap = !0;
      showTransitionOptions = ".12s cubic-bezier(0, 0, 0.2, 1)";
      hideTransitionOptions = ".1s linear";
      tabindex;
      variant = "outlined";
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        (this._minDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        (this._maxDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDates() {
        return this._disabledDates;
      }
      set disabledDates(e) {
        (this._disabledDates = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDays() {
        return this._disabledDays;
      }
      set disabledDays(e) {
        (this._disabledDays = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get yearRange() {
        return this._yearRange;
      }
      set yearRange(e) {
        if (((this._yearRange = e), e)) {
          let t = e.split(":"),
            n = parseInt(t[0]),
            o = parseInt(t[1]);
          this.populateYearOptions(n, o);
        }
      }
      get showTime() {
        return this._showTime;
      }
      set showTime(e) {
        (this._showTime = e),
          this.currentHour === void 0 &&
            this.initTime(this.value || new Date()),
          this.updateInputfield();
      }
      get responsiveOptions() {
        return this._responsiveOptions;
      }
      set responsiveOptions(e) {
        (this._responsiveOptions = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get numberOfMonths() {
        return this._numberOfMonths;
      }
      set numberOfMonths(e) {
        (this._numberOfMonths = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get firstDayOfWeek() {
        return this._firstDayOfWeek;
      }
      set firstDayOfWeek(e) {
        (this._firstDayOfWeek = e), this.createWeekDays();
      }
      set locale(e) {
        console.warn(
          "Locale property has no effect, use new i18n API instead."
        );
      }
      get view() {
        return this._view;
      }
      set view(e) {
        (this._view = e), (this.currentView = this._view);
      }
      get defaultDate() {
        return this._defaultDate;
      }
      set defaultDate(e) {
        if (((this._defaultDate = e), this.initialized)) {
          let t = e || new Date();
          (this.currentMonth = t.getMonth()),
            (this.currentYear = t.getFullYear()),
            this.initTime(t),
            this.createMonths(this.currentMonth, this.currentYear);
        }
      }
      get inputClass() {
        return {
          "p-inputtext p-component": !0,
          "p-variant-filled":
            this.variant === "filled" || this.config.inputStyle() === "filled",
        };
      }
      onFocus = new xe();
      onBlur = new xe();
      onClose = new xe();
      onSelect = new xe();
      onClear = new xe();
      onInput = new xe();
      onTodayClick = new xe();
      onClearClick = new xe();
      onMonthChange = new xe();
      onYearChange = new xe();
      onClickOutside = new xe();
      onShow = new xe();
      templates;
      containerViewChild;
      inputfieldViewChild;
      set content(e) {
        (this.contentViewChild = e),
          this.contentViewChild &&
            (this.isMonthNavigate
              ? (Promise.resolve(null).then(() => this.updateFocus()),
                (this.isMonthNavigate = !1))
              : !this.focus && !this.inline && this.initFocusableCell());
      }
      contentViewChild;
      value;
      dates;
      months;
      weekDays;
      currentMonth;
      currentYear;
      currentHour;
      currentMinute;
      currentSecond;
      pm;
      mask;
      maskClickListener;
      overlay;
      responsiveStyleElement;
      overlayVisible;
      onModelChange = () => {};
      onModelTouched = () => {};
      calendarElement;
      timePickerTimer;
      documentClickListener;
      animationEndListener;
      ticksTo1970;
      yearOptions;
      focus;
      isKeydown;
      filled;
      inputFieldValue = null;
      _minDate;
      _maxDate;
      _showTime;
      _yearRange;
      preventDocumentListener;
      dateTemplate;
      headerTemplate;
      footerTemplate;
      disabledDateTemplate;
      decadeTemplate;
      previousIconTemplate;
      nextIconTemplate;
      triggerIconTemplate;
      clearIconTemplate;
      decrementIconTemplate;
      incrementIconTemplate;
      inputIconTemplate;
      _disabledDates;
      _disabledDays;
      selectElement;
      todayElement;
      focusElement;
      scrollHandler;
      documentResizeListener;
      navigationState = null;
      isMonthNavigate;
      initialized;
      translationSubscription;
      _locale;
      _responsiveOptions;
      currentView;
      attributeSelector;
      panelId;
      _numberOfMonths = 1;
      _firstDayOfWeek;
      _view = "date";
      preventFocus;
      _defaultDate;
      _focusKey = null;
      window;
      get locale() {
        return this._locale;
      }
      get iconButtonAriaLabel() {
        return this.iconAriaLabel
          ? this.iconAriaLabel
          : this.getTranslation("chooseDate");
      }
      get prevIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("prevDecade")
          : this.currentView === "month"
          ? this.getTranslation("prevYear")
          : this.getTranslation("prevMonth");
      }
      get nextIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("nextDecade")
          : this.currentView === "month"
          ? this.getTranslation("nextYear")
          : this.getTranslation("nextMonth");
      }
      constructor(e, t, n, o, u, b, C) {
        (this.document = e),
          (this.el = t),
          (this.renderer = n),
          (this.cd = o),
          (this.zone = u),
          (this.config = b),
          (this.overlayService = C),
          (this.window = this.document.defaultView);
      }
      ngOnInit() {
        (this.attributeSelector = Vr()),
          (this.panelId = this.attributeSelector + "_panel");
        let e = this.defaultDate || new Date();
        this.createResponsiveStyle(),
          (this.currentMonth = e.getMonth()),
          (this.currentYear = e.getFullYear()),
          (this.yearOptions = []),
          (this.currentView = this.view),
          this.view === "date" &&
            (this.createWeekDays(),
            this.initTime(e),
            this.createMonths(this.currentMonth, this.currentYear),
            (this.ticksTo1970 =
              (1969 * 365 +
                Math.floor(1970 / 4) -
                Math.floor(1970 / 100) +
                Math.floor(1970 / 400)) *
              24 *
              60 *
              60 *
              1e7)),
          (this.translationSubscription =
            this.config.translationObserver.subscribe(() => {
              this.createWeekDays(), this.cd.markForCheck();
            })),
          (this.initialized = !0);
      }
      ngAfterContentInit() {
        this.templates.forEach((e) => {
          switch (e.getType()) {
            case "date":
              this.dateTemplate = e.template;
              break;
            case "decade":
              this.decadeTemplate = e.template;
              break;
            case "disabledDate":
              this.disabledDateTemplate = e.template;
              break;
            case "header":
              this.headerTemplate = e.template;
              break;
            case "inputicon":
              this.inputIconTemplate = e.template;
              break;
            case "previousicon":
              this.previousIconTemplate = e.template;
              break;
            case "nexticon":
              this.nextIconTemplate = e.template;
              break;
            case "triggericon":
              this.triggerIconTemplate = e.template;
              break;
            case "clearicon":
              this.clearIconTemplate = e.template;
              break;
            case "decrementicon":
              this.decrementIconTemplate = e.template;
              break;
            case "incrementicon":
              this.incrementIconTemplate = e.template;
              break;
            case "footer":
              this.footerTemplate = e.template;
              break;
            default:
              this.dateTemplate = e.template;
              break;
          }
        });
      }
      ngAfterViewInit() {
        this.inline &&
          (this.contentViewChild &&
            this.contentViewChild.nativeElement.setAttribute(
              this.attributeSelector,
              ""
            ),
          !this.disabled &&
            !this.inline &&
            (this.initFocusableCell(),
            this.numberOfMonths === 1 &&
              this.contentViewChild &&
              this.contentViewChild.nativeElement &&
              (this.contentViewChild.nativeElement.style.width =
                he.getOuterWidth(this.containerViewChild?.nativeElement) +
                "px")));
      }
      getTranslation(e) {
        return this.config.getTranslation(e);
      }
      populateYearOptions(e, t) {
        this.yearOptions = [];
        for (let n = e; n <= t; n++) this.yearOptions.push(n);
      }
      createWeekDays() {
        this.weekDays = [];
        let e = this.getFirstDateOfWeek(),
          t = this.getTranslation(Ui.DAY_NAMES_MIN);
        for (let n = 0; n < 7; n++)
          this.weekDays.push(t[e]), (e = e == 6 ? 0 : ++e);
      }
      monthPickerValues() {
        let e = [];
        for (let t = 0; t <= 11; t++)
          e.push(this.config.getTranslation("monthNamesShort")[t]);
        return e;
      }
      yearPickerValues() {
        let e = [],
          t = this.currentYear - (this.currentYear % this.stepYearPicker);
        for (let n = 0; n < this.stepYearPicker; n++) e.push(t + n);
        return e;
      }
      createMonths(e, t) {
        this.months = this.months = [];
        for (let n = 0; n < this.numberOfMonths; n++) {
          let o = e + n,
            u = t;
          o > 11 && ((o = (o % 11) - 1), (u = t + 1)),
            this.months.push(this.createMonth(o, u));
        }
      }
      getWeekNumber(e) {
        let t = new Date(e.getTime());
        if (this.startWeekFromFirstDayOfYear) {
          let o = +this.getFirstDateOfWeek();
          t.setDate(t.getDate() + 6 + o - t.getDay());
        } else t.setDate(t.getDate() + 4 - (t.getDay() || 7));
        let n = t.getTime();
        return (
          t.setMonth(0),
          t.setDate(1),
          Math.floor(Math.round((n - t.getTime()) / 864e5) / 7) + 1
        );
      }
      createMonth(e, t) {
        let n = [],
          o = this.getFirstDayOfMonthIndex(e, t),
          u = this.getDaysCountInMonth(e, t),
          b = this.getDaysCountInPrevMonth(e, t),
          C = 1,
          T = new Date(),
          k = [],
          V = Math.ceil((u + o) / 7);
        for (let B = 0; B < V; B++) {
          let L = [];
          if (B == 0) {
            for (let U = b - o + 1; U <= b; U++) {
              let j = this.getPreviousMonthAndYear(e, t);
              L.push({
                day: U,
                month: j.month,
                year: j.year,
                otherMonth: !0,
                today: this.isToday(T, U, j.month, j.year),
                selectable: this.isSelectable(U, j.month, j.year, !0),
              });
            }
            let H = 7 - L.length;
            for (let U = 0; U < H; U++)
              L.push({
                day: C,
                month: e,
                year: t,
                today: this.isToday(T, C, e, t),
                selectable: this.isSelectable(C, e, t, !1),
              }),
                C++;
          } else
            for (let H = 0; H < 7; H++) {
              if (C > u) {
                let U = this.getNextMonthAndYear(e, t);
                L.push({
                  day: C - u,
                  month: U.month,
                  year: U.year,
                  otherMonth: !0,
                  today: this.isToday(T, C - u, U.month, U.year),
                  selectable: this.isSelectable(C - u, U.month, U.year, !0),
                });
              } else
                L.push({
                  day: C,
                  month: e,
                  year: t,
                  today: this.isToday(T, C, e, t),
                  selectable: this.isSelectable(C, e, t, !1),
                });
              C++;
            }
          this.showWeek &&
            k.push(
              this.getWeekNumber(new Date(L[0].year, L[0].month, L[0].day))
            ),
            n.push(L);
        }
        return { month: e, year: t, dates: n, weekNumbers: k };
      }
      initTime(e) {
        (this.pm = e.getHours() > 11),
          this.showTime
            ? ((this.currentMinute = e.getMinutes()),
              (this.currentSecond = e.getSeconds()),
              this.setCurrentHourPM(e.getHours()))
            : this.timeOnly &&
              ((this.currentMinute = 0),
              (this.currentHour = 0),
              (this.currentSecond = 0));
      }
      navBackward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.decrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.decrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 0
                ? ((this.currentMonth = 11), this.decrementYear())
                : this.currentMonth--,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      navForward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.incrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.incrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 11
                ? ((this.currentMonth = 0), this.incrementYear())
                : this.currentMonth++,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      decrementYear() {
        this.currentYear--;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear < e[0]) {
          let t = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] - t, e[e.length - 1] - t);
        }
      }
      decrementYearPickerStep() {
        this.currentYear = this.currentYear - this.stepYearPicker;
      }
      incrementYearPickerStep() {
        this.currentYear = this.currentYear + this.stepYearPicker;
      }
      incrementYear() {
        this.currentYear++;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear > e[e.length - 1]) {
          let t = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] + t, e[e.length - 1] + t);
        }
      }
      switchToMonthView(e) {
        this.setCurrentView("month"), e.preventDefault();
      }
      switchToYearView(e) {
        this.setCurrentView("year"), e.preventDefault();
      }
      onDateSelect(e, t) {
        if (this.disabled || !t.selectable) {
          e.preventDefault();
          return;
        }
        this.isMultipleSelection() && this.isSelected(t)
          ? ((this.value = this.value.filter(
              (n, o) => !this.isDateEquals(n, t)
            )),
            this.value.length === 0 && (this.value = null),
            this.updateModel(this.value))
          : this.shouldSelectDate(t) && this.selectDate(t),
          this.hideOnDateTimeSelect &&
            (this.isSingleSelection() ||
              (this.isRangeSelection() && this.value[1])) &&
            setTimeout(() => {
              e.preventDefault(),
                this.hideOverlay(),
                this.mask && this.disableModality(),
                this.cd.markForCheck();
            }, 150),
          this.updateInputfield(),
          e.preventDefault();
      }
      shouldSelectDate(e) {
        return this.isMultipleSelection() && this.maxDateCount != null
          ? this.maxDateCount > (this.value ? this.value.length : 0)
          : !0;
      }
      onMonthSelect(e, t) {
        this.view === "month"
          ? this.onDateSelect(e, {
              year: this.currentYear,
              month: t,
              day: 1,
              selectable: !0,
            })
          : ((this.currentMonth = t),
            this.createMonths(this.currentMonth, this.currentYear),
            this.setCurrentView("date"),
            this.onMonthChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      onYearSelect(e, t) {
        this.view === "year"
          ? this.onDateSelect(e, { year: t, month: 0, day: 1, selectable: !0 })
          : ((this.currentYear = t),
            this.setCurrentView("month"),
            this.onYearChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      updateInputfield() {
        let e = "";
        if (this.value) {
          if (this.isSingleSelection()) e = this.formatDateTime(this.value);
          else if (this.isMultipleSelection())
            for (let t = 0; t < this.value.length; t++) {
              let n = this.formatDateTime(this.value[t]);
              (e += n),
                t !== this.value.length - 1 &&
                  (e += this.multipleSeparator + " ");
            }
          else if (this.isRangeSelection() && this.value && this.value.length) {
            let t = this.value[0],
              n = this.value[1];
            (e = this.formatDateTime(t)),
              n &&
                (e += " " + this.rangeSeparator + " " + this.formatDateTime(n));
          }
        }
        (this.inputFieldValue = e),
          this.updateFilledState(),
          this.inputfieldViewChild &&
            this.inputfieldViewChild.nativeElement &&
            (this.inputfieldViewChild.nativeElement.value =
              this.inputFieldValue);
      }
      formatDateTime(e) {
        let t = this.keepInvalid ? e : null,
          n = this.isValidDateForTimeConstraints(e);
        return (
          this.isValidDate(e)
            ? this.timeOnly
              ? (t = this.formatTime(e))
              : ((t = this.formatDate(e, this.getDateFormat())),
                this.showTime && (t += " " + this.formatTime(e)))
            : this.dataType === "string" && (t = e),
          (t = n ? t : ""),
          t
        );
      }
      formatDateMetaToDate(e) {
        return new Date(e.year, e.month, e.day);
      }
      formatDateKey(e) {
        return `${e.getFullYear()}-${e.getMonth() + 1}-${e.getDate()}`;
      }
      setCurrentHourPM(e) {
        this.hourFormat == "12"
          ? ((this.pm = e > 11),
            e >= 12
              ? (this.currentHour = e == 12 ? 12 : e - 12)
              : (this.currentHour = e == 0 ? 12 : e))
          : (this.currentHour = e);
      }
      setCurrentView(e) {
        (this.currentView = e), this.cd.detectChanges(), this.alignOverlay();
      }
      selectDate(e) {
        let t = this.formatDateMetaToDate(e);
        if (
          (this.showTime &&
            (this.hourFormat == "12"
              ? this.currentHour === 12
                ? t.setHours(this.pm ? 12 : 0)
                : t.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
              : t.setHours(this.currentHour),
            t.setMinutes(this.currentMinute),
            t.setSeconds(this.currentSecond)),
          this.minDate &&
            this.minDate > t &&
            ((t = this.minDate),
            this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds())),
          this.maxDate &&
            this.maxDate < t &&
            ((t = this.maxDate),
            this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds())),
          this.isSingleSelection())
        )
          this.updateModel(t);
        else if (this.isMultipleSelection())
          this.updateModel(this.value ? [...this.value, t] : [t]);
        else if (this.isRangeSelection())
          if (this.value && this.value.length) {
            let n = this.value[0],
              o = this.value[1];
            !o && t.getTime() >= n.getTime() ? (o = t) : ((n = t), (o = null)),
              this.updateModel([n, o]);
          } else this.updateModel([t, null]);
        this.onSelect.emit(t);
      }
      updateModel(e) {
        if (((this.value = e), this.dataType == "date"))
          this.onModelChange(this.value);
        else if (this.dataType == "string")
          if (this.isSingleSelection())
            this.onModelChange(this.formatDateTime(this.value));
          else {
            let t = null;
            Array.isArray(this.value) &&
              (t = this.value.map((n) => this.formatDateTime(n))),
              this.onModelChange(t);
          }
      }
      getFirstDayOfMonthIndex(e, t) {
        let n = new Date();
        n.setDate(1), n.setMonth(e), n.setFullYear(t);
        let o = n.getDay() + this.getSundayIndex();
        return o >= 7 ? o - 7 : o;
      }
      getDaysCountInMonth(e, t) {
        return 32 - this.daylightSavingAdjust(new Date(t, e, 32)).getDate();
      }
      getDaysCountInPrevMonth(e, t) {
        let n = this.getPreviousMonthAndYear(e, t);
        return this.getDaysCountInMonth(n.month, n.year);
      }
      getPreviousMonthAndYear(e, t) {
        let n, o;
        return (
          e === 0 ? ((n = 11), (o = t - 1)) : ((n = e - 1), (o = t)),
          { month: n, year: o }
        );
      }
      getNextMonthAndYear(e, t) {
        let n, o;
        return (
          e === 11 ? ((n = 0), (o = t + 1)) : ((n = e + 1), (o = t)),
          { month: n, year: o }
        );
      }
      getSundayIndex() {
        let e = this.getFirstDateOfWeek();
        return e > 0 ? 7 - e : 0;
      }
      isSelected(e) {
        if (this.value) {
          if (this.isSingleSelection()) return this.isDateEquals(this.value, e);
          if (this.isMultipleSelection()) {
            let t = !1;
            for (let n of this.value)
              if (((t = this.isDateEquals(n, e)), t)) break;
            return t;
          } else if (this.isRangeSelection())
            return this.value[1]
              ? this.isDateEquals(this.value[0], e) ||
                  this.isDateEquals(this.value[1], e) ||
                  this.isDateBetween(this.value[0], this.value[1], e)
              : this.isDateEquals(this.value[0], e);
        } else return !1;
      }
      isComparable() {
        return this.value != null && typeof this.value != "string";
      }
      isMonthSelected(e) {
        if (this.isComparable() && !this.isMultipleSelection()) {
          let [t, n] = this.isRangeSelection()
              ? this.value
              : [this.value, this.value],
            o = new Date(this.currentYear, e, 1);
          return o >= t && o <= (n ?? t);
        }
        return !1;
      }
      isMonthDisabled(e, t) {
        let n = t ?? this.currentYear;
        for (let o = 1; o < this.getDaysCountInMonth(e, n) + 1; o++)
          if (this.isSelectable(o, e, n, !1)) return !1;
        return !0;
      }
      isYearDisabled(e) {
        return Array(12)
          .fill(0)
          .every((t, n) => this.isMonthDisabled(n, e));
      }
      isYearSelected(e) {
        if (!this.isComparable() || this.isMultipleSelection()) return !1;
        let t = this.isRangeSelection() ? this.value[0] : this.value;
        return t ? t.getFullYear() === e : !1;
      }
      isDateEquals(e, t) {
        return e && bi.isDate(e)
          ? e.getDate() === t.day &&
              e.getMonth() === t.month &&
              e.getFullYear() === t.year
          : !1;
      }
      isDateBetween(e, t, n) {
        let o = !1;
        if (bi.isDate(e) && bi.isDate(t)) {
          let u = this.formatDateMetaToDate(n);
          return e.getTime() <= u.getTime() && t.getTime() >= u.getTime();
        }
        return o;
      }
      isSingleSelection() {
        return this.selectionMode === "single";
      }
      isRangeSelection() {
        return this.selectionMode === "range";
      }
      isMultipleSelection() {
        return this.selectionMode === "multiple";
      }
      isToday(e, t, n, o) {
        return e.getDate() === t && e.getMonth() === n && e.getFullYear() === o;
      }
      isSelectable(e, t, n, o) {
        let u = !0,
          b = !0,
          C = !0,
          T = !0;
        return o && !this.selectOtherMonths
          ? !1
          : (this.minDate &&
              (this.minDate.getFullYear() > n ||
                (this.minDate.getFullYear() === n &&
                  this.currentView != "year" &&
                  (this.minDate.getMonth() > t ||
                    (this.minDate.getMonth() === t &&
                      this.minDate.getDate() > e)))) &&
              (u = !1),
            this.maxDate &&
              (this.maxDate.getFullYear() < n ||
                (this.maxDate.getFullYear() === n &&
                  (this.maxDate.getMonth() < t ||
                    (this.maxDate.getMonth() === t &&
                      this.maxDate.getDate() < e)))) &&
              (b = !1),
            this.disabledDates && (C = !this.isDateDisabled(e, t, n)),
            this.disabledDays && (T = !this.isDayDisabled(e, t, n)),
            u && b && C && T);
      }
      isDateDisabled(e, t, n) {
        if (this.disabledDates) {
          for (let o of this.disabledDates)
            if (
              o.getFullYear() === n &&
              o.getMonth() === t &&
              o.getDate() === e
            )
              return !0;
        }
        return !1;
      }
      isDayDisabled(e, t, n) {
        if (this.disabledDays) {
          let u = new Date(n, t, e).getDay();
          return this.disabledDays.indexOf(u) !== -1;
        }
        return !1;
      }
      onInputFocus(e) {
        (this.focus = !0),
          this.showOnFocus && this.showOverlay(),
          this.onFocus.emit(e);
      }
      onInputClick() {
        this.showOnFocus && !this.overlayVisible && this.showOverlay();
      }
      onInputBlur(e) {
        (this.focus = !1),
          this.onBlur.emit(e),
          this.keepInvalid || this.updateInputfield(),
          this.onModelTouched();
      }
      onButtonClick(e, t = this.inputfieldViewChild?.nativeElement) {
        this.overlayVisible
          ? this.hideOverlay()
          : (t.focus(), this.showOverlay());
      }
      clear() {
        (this.inputFieldValue = null),
          (this.value = null),
          this.onModelChange(this.value),
          this.onClear.emit();
      }
      onOverlayClick(e) {
        this.overlayService.add({
          originalEvent: e,
          target: this.el.nativeElement,
        });
      }
      getMonthName(e) {
        return this.config.getTranslation("monthNames")[e];
      }
      getYear(e) {
        return this.currentView === "month" ? this.currentYear : e.year;
      }
      switchViewButtonDisabled() {
        return this.numberOfMonths > 1 || this.disabled;
      }
      onPrevButtonClick(e) {
        (this.navigationState = { backward: !0, button: !0 }),
          this.navBackward(e);
      }
      onNextButtonClick(e) {
        (this.navigationState = { backward: !1, button: !0 }),
          this.navForward(e);
      }
      onContainerButtonKeydown(e) {
        switch (e.which) {
          case 9:
            if ((this.inline || this.trapFocus(e), this.inline)) {
              let t = he.findSingle(
                  this.containerViewChild?.nativeElement,
                  ".p-datepicker-header"
                ),
                n = e.target;
              if (this.timeOnly) return;
              n == t.children[t?.children?.length - 1] &&
                this.initFocusableCell();
            }
            break;
          case 27:
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          default:
            break;
        }
      }
      onInputKeydown(e) {
        (this.isKeydown = !0),
          e.keyCode === 40 && this.contentViewChild
            ? this.trapFocus(e)
            : e.keyCode === 27
            ? this.overlayVisible &&
              (this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault())
            : e.keyCode === 13
            ? this.overlayVisible &&
              ((this.overlayVisible = !1), e.preventDefault())
            : e.keyCode === 9 &&
              this.contentViewChild &&
              (he
                .getFocusableElements(this.contentViewChild.nativeElement)
                .forEach((t) => (t.tabIndex = "-1")),
              this.overlayVisible && (this.overlayVisible = !1));
      }
      onDateCellKeydown(e, t, n) {
        let o = e.currentTarget,
          u = o.parentElement,
          b = this.formatDateMetaToDate(t);
        switch (e.which) {
          case 40: {
            o.tabIndex = "-1";
            let H = he.index(u),
              U = u.parentElement.nextElementSibling;
            if (U) {
              let j = U.children[H].children[0];
              he.hasClass(j, "p-disabled")
                ? ((this.navigationState = { backward: !1 }),
                  this.navForward(e))
                : ((U.children[H].children[0].tabIndex = "0"),
                  U.children[H].children[0].focus());
            } else
              (this.navigationState = { backward: !1 }), this.navForward(e);
            e.preventDefault();
            break;
          }
          case 38: {
            o.tabIndex = "-1";
            let H = he.index(u),
              U = u.parentElement.previousElementSibling;
            if (U) {
              let j = U.children[H].children[0];
              he.hasClass(j, "p-disabled")
                ? ((this.navigationState = { backward: !0 }),
                  this.navBackward(e))
                : ((j.tabIndex = "0"), j.focus());
            } else
              (this.navigationState = { backward: !0 }), this.navBackward(e);
            e.preventDefault();
            break;
          }
          case 37: {
            o.tabIndex = "-1";
            let H = u.previousElementSibling;
            if (H) {
              let U = H.children[0];
              he.hasClass(U, "p-disabled") ||
              he.hasClass(U.parentElement, "p-datepicker-weeknumber")
                ? this.navigateToMonth(!0, n)
                : ((U.tabIndex = "0"), U.focus());
            } else this.navigateToMonth(!0, n);
            e.preventDefault();
            break;
          }
          case 39: {
            o.tabIndex = "-1";
            let H = u.nextElementSibling;
            if (H) {
              let U = H.children[0];
              he.hasClass(U, "p-disabled")
                ? this.navigateToMonth(!1, n)
                : ((U.tabIndex = "0"), U.focus());
            } else this.navigateToMonth(!1, n);
            e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onDateSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          case 33: {
            o.tabIndex = "-1";
            let H = new Date(b.getFullYear(), b.getMonth() - 1, b.getDate()),
              U = this.formatDateKey(H);
            this.navigateToMonth(
              !0,
              n,
              `span[data-date='${U}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 34: {
            o.tabIndex = "-1";
            let H = new Date(b.getFullYear(), b.getMonth() + 1, b.getDate()),
              U = this.formatDateKey(H);
            this.navigateToMonth(
              !1,
              n,
              `span[data-date='${U}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 36:
            o.tabIndex = "-1";
            let C = new Date(b.getFullYear(), b.getMonth(), 1),
              T = this.formatDateKey(C),
              k = he.findSingle(
                o.offsetParent,
                `span[data-date='${T}']:not(.p-disabled):not(.p-ink)`
              );
            k && ((k.tabIndex = "0"), k.focus()), e.preventDefault();
            break;
          case 35:
            o.tabIndex = "-1";
            let V = new Date(b.getFullYear(), b.getMonth() + 1, 0),
              B = this.formatDateKey(V),
              L = he.findSingle(
                o.offsetParent,
                `span[data-date='${B}']:not(.p-disabled):not(.p-ink)`
              );
            V && ((L.tabIndex = "0"), L.focus()), e.preventDefault();
            break;
          default:
            break;
        }
      }
      onMonthCellKeydown(e, t) {
        let n = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            n.tabIndex = "-1";
            var o = n.parentElement.children,
              u = he.index(n);
            let b = o[e.which === 40 ? u + 3 : u - 3];
            b && ((b.tabIndex = "0"), b.focus()), e.preventDefault();
            break;
          }
          case 37: {
            n.tabIndex = "-1";
            let b = n.previousElementSibling;
            b
              ? ((b.tabIndex = "0"), b.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            n.tabIndex = "-1";
            let b = n.nextElementSibling;
            b
              ? ((b.tabIndex = "0"), b.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onMonthSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      onYearCellKeydown(e, t) {
        let n = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            n.tabIndex = "-1";
            var o = n.parentElement.children,
              u = he.index(n);
            let b = o[e.which === 40 ? u + 2 : u - 2];
            b && ((b.tabIndex = "0"), b.focus()), e.preventDefault();
            break;
          }
          case 37: {
            n.tabIndex = "-1";
            let b = n.previousElementSibling;
            b
              ? ((b.tabIndex = "0"), b.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            n.tabIndex = "-1";
            let b = n.nextElementSibling;
            b
              ? ((b.tabIndex = "0"), b.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onYearSelect(e, t), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      navigateToMonth(e, t, n) {
        if (e)
          if (this.numberOfMonths === 1 || t === 0)
            (this.navigationState = { backward: !0 }),
              (this._focusKey = n),
              this.navBackward(event);
          else {
            let o = this.contentViewChild.nativeElement.children[t - 1];
            if (n) {
              let u = he.findSingle(o, n);
              (u.tabIndex = "0"), u.focus();
            } else {
              let u = he.find(
                  o,
                  ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                ),
                b = u[u.length - 1];
              (b.tabIndex = "0"), b.focus();
            }
          }
        else if (this.numberOfMonths === 1 || t === this.numberOfMonths - 1)
          (this.navigationState = { backward: !1 }),
            (this._focusKey = n),
            this.navForward(event);
        else {
          let o = this.contentViewChild.nativeElement.children[t + 1];
          if (n) {
            let u = he.findSingle(o, n);
            (u.tabIndex = "0"), u.focus();
          } else {
            let u = he.findSingle(
              o,
              ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
            );
            (u.tabIndex = "0"), u.focus();
          }
        }
      }
      updateFocus() {
        let e;
        if (this.navigationState) {
          if (this.navigationState.button)
            this.initFocusableCell(),
              this.navigationState.backward
                ? he
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-prev"
                    )
                    .focus()
                : he
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-next"
                    )
                    .focus();
          else {
            if (this.navigationState.backward) {
              let t;
              this.currentView === "month"
                ? (t = he.find(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (t = he.find(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (t = he.find(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  )),
                t && t.length > 0 && (e = t[t.length - 1]);
            } else
              this.currentView === "month"
                ? (e = he.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (e = he.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (e = he.findSingle(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  ));
            e && ((e.tabIndex = "0"), e.focus());
          }
          (this.navigationState = null), (this._focusKey = null);
        } else this.initFocusableCell();
        this.alignOverlay();
      }
      initFocusableCell() {
        let e = this.contentViewChild?.nativeElement,
          t;
        if (this.currentView === "month") {
          let n = he.find(
              e,
              ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
            ),
            o = he.findSingle(
              e,
              ".p-monthpicker .p-monthpicker-month.p-highlight"
            );
          n.forEach((u) => (u.tabIndex = -1)),
            (t = o || n[0]),
            n.length === 0 &&
              he
                .find(
                  e,
                  '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = "0"]'
                )
                .forEach((b) => (b.tabIndex = -1));
        } else if (this.currentView === "year") {
          let n = he.find(
              e,
              ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
            ),
            o = he.findSingle(
              e,
              ".p-yearpicker .p-yearpicker-year.p-highlight"
            );
          n.forEach((u) => (u.tabIndex = -1)),
            (t = o || n[0]),
            n.length === 0 &&
              he
                .find(
                  e,
                  '.p-yearpicker .p-yearpicker-year.p-disabled[tabindex = "0"]'
                )
                .forEach((b) => (b.tabIndex = -1));
        } else if (((t = he.findSingle(e, "span.p-highlight")), !t)) {
          let n = he.findSingle(
            e,
            "td.p-datepicker-today span:not(.p-disabled):not(.p-ink)"
          );
          n
            ? (t = n)
            : (t = he.findSingle(
                e,
                ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
              ));
        }
        t &&
          ((t.tabIndex = "0"),
          !this.preventFocus &&
            (!this.navigationState || !this.navigationState.button) &&
            setTimeout(() => {
              this.disabled || t.focus();
            }, 1),
          (this.preventFocus = !1));
      }
      trapFocus(e) {
        let t = he.getFocusableElements(this.contentViewChild.nativeElement);
        if (t && t.length > 0)
          if (!t[0].ownerDocument.activeElement) t[0].focus();
          else {
            let n = t.indexOf(t[0].ownerDocument.activeElement);
            if (e.shiftKey)
              if (n == -1 || n === 0)
                if (this.focusTrap) t[t.length - 1].focus();
                else {
                  if (n === -1) return this.hideOverlay();
                  if (n === 0) return;
                }
              else t[n - 1].focus();
            else if (n == -1)
              if (this.timeOnly) t[0].focus();
              else {
                let o = 0;
                for (let u = 0; u < t.length; u++)
                  t[u].tagName === "SPAN" && (o = u);
                t[o].focus();
              }
            else if (n === t.length - 1) {
              if (!this.focusTrap && n != -1) return this.hideOverlay();
              t[0].focus();
            } else t[n + 1].focus();
          }
        e.preventDefault();
      }
      onMonthDropdownChange(e) {
        (this.currentMonth = parseInt(e)),
          this.onMonthChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      onYearDropdownChange(e) {
        (this.currentYear = parseInt(e)),
          this.onYearChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      convertTo24Hour(e, t) {
        return this.hourFormat == "12"
          ? e === 12
            ? t
              ? 12
              : 0
            : t
            ? e + 12
            : e
          : e;
      }
      constrainTime(e, t, n, o) {
        let u = [e, t, n],
          b,
          C = this.value,
          T = this.convertTo24Hour(e, o),
          k = this.isRangeSelection(),
          V = this.isMultipleSelection();
        (k || V) &&
          (this.value || (this.value = [new Date(), new Date()]),
          k && (C = this.value[1] || this.value[0]),
          V && (C = this.value[this.value.length - 1]));
        let L = C ? C.toDateString() : null,
          H = this.minDate && L && this.minDate.toDateString() === L,
          U = this.maxDate && L && this.maxDate.toDateString() === L;
        switch ((H && (b = this.minDate.getHours() >= 12), !0)) {
          case H &&
            b &&
            this.minDate.getHours() === 12 &&
            this.minDate.getHours() > T:
            u[0] = 11;
          case H &&
            this.minDate.getHours() === T &&
            this.minDate.getMinutes() > t:
            u[1] = this.minDate.getMinutes();
          case H &&
            this.minDate.getHours() === T &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > n:
            u[2] = this.minDate.getSeconds();
            break;
          case H &&
            !b &&
            this.minDate.getHours() - 1 === T &&
            this.minDate.getHours() > T:
            (u[0] = 11), (this.pm = !0);
          case H &&
            this.minDate.getHours() === T &&
            this.minDate.getMinutes() > t:
            u[1] = this.minDate.getMinutes();
          case H &&
            this.minDate.getHours() === T &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > n:
            u[2] = this.minDate.getSeconds();
            break;
          case H && b && this.minDate.getHours() > T && T !== 12:
            this.setCurrentHourPM(this.minDate.getHours()),
              (u[0] = this.currentHour);
          case H &&
            this.minDate.getHours() === T &&
            this.minDate.getMinutes() > t:
            u[1] = this.minDate.getMinutes();
          case H &&
            this.minDate.getHours() === T &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > n:
            u[2] = this.minDate.getSeconds();
            break;
          case H && this.minDate.getHours() > T:
            u[0] = this.minDate.getHours();
          case H &&
            this.minDate.getHours() === T &&
            this.minDate.getMinutes() > t:
            u[1] = this.minDate.getMinutes();
          case H &&
            this.minDate.getHours() === T &&
            this.minDate.getMinutes() === t &&
            this.minDate.getSeconds() > n:
            u[2] = this.minDate.getSeconds();
            break;
          case U && this.maxDate.getHours() < T:
            u[0] = this.maxDate.getHours();
          case U &&
            this.maxDate.getHours() === T &&
            this.maxDate.getMinutes() < t:
            u[1] = this.maxDate.getMinutes();
          case U &&
            this.maxDate.getHours() === T &&
            this.maxDate.getMinutes() === t &&
            this.maxDate.getSeconds() < n:
            u[2] = this.maxDate.getSeconds();
            break;
        }
        return u;
      }
      incrementHour(e) {
        let t = this.currentHour ?? 0,
          n = (this.currentHour ?? 0) + this.stepHour,
          o = this.pm;
        this.hourFormat == "24"
          ? (n = n >= 24 ? n - 24 : n)
          : this.hourFormat == "12" &&
            (t < 12 && n > 11 && (o = !this.pm), (n = n >= 13 ? n - 12 : n)),
          this.toggleAMPMIfNotMinDate(o),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(n, this.currentMinute, this.currentSecond, o)),
          e.preventDefault();
      }
      toggleAMPMIfNotMinDate(e) {
        let t = this.value;
        (this.selectionMode == "range" || this.selectionMode == "multiple") &&
          Array.isArray(t) &&
          t.length > 0 &&
          (t = t[t.length - 1]);
        let n = t ? t.toDateString() : null;
        this.minDate &&
        n &&
        this.minDate.toDateString() === n &&
        this.minDate.getHours() >= 12
          ? (this.pm = !0)
          : (this.pm = e);
      }
      onTimePickerElementMouseDown(e, t, n) {
        this.disabled || (this.repeat(e, null, t, n), e.preventDefault());
      }
      onTimePickerElementMouseUp(e) {
        this.disabled || (this.clearTimePickerTimer(), this.updateTime());
      }
      onTimePickerElementMouseLeave() {
        !this.disabled &&
          this.timePickerTimer &&
          (this.clearTimePickerTimer(), this.updateTime());
      }
      repeat(e, t, n, o) {
        let u = t || 500;
        switch (
          (this.clearTimePickerTimer(),
          (this.timePickerTimer = setTimeout(() => {
            this.repeat(e, 100, n, o), this.cd.markForCheck();
          }, u)),
          n)
        ) {
          case 0:
            o === 1 ? this.incrementHour(e) : this.decrementHour(e);
            break;
          case 1:
            o === 1 ? this.incrementMinute(e) : this.decrementMinute(e);
            break;
          case 2:
            o === 1 ? this.incrementSecond(e) : this.decrementSecond(e);
            break;
        }
        this.updateInputfield();
      }
      clearTimePickerTimer() {
        this.timePickerTimer &&
          (clearTimeout(this.timePickerTimer), (this.timePickerTimer = null));
      }
      decrementHour(e) {
        let t = (this.currentHour ?? 0) - this.stepHour,
          n = this.pm;
        this.hourFormat == "24"
          ? (t = t < 0 ? 24 + t : t)
          : this.hourFormat == "12" &&
            (this.currentHour === 12 && (n = !this.pm),
            (t = t <= 0 ? 12 + t : t)),
          this.toggleAMPMIfNotMinDate(n),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(t, this.currentMinute, this.currentSecond, n)),
          e.preventDefault();
      }
      incrementMinute(e) {
        let t = (this.currentMinute ?? 0) + this.stepMinute;
        (t = t > 59 ? t - 60 : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              t,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      decrementMinute(e) {
        let t = (this.currentMinute ?? 0) - this.stepMinute;
        (t = t < 0 ? 60 + t : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              t,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      incrementSecond(e) {
        let t = this.currentSecond + this.stepSecond;
        (t = t > 59 ? t - 60 : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              t,
              this.pm
            )),
          e.preventDefault();
      }
      decrementSecond(e) {
        let t = this.currentSecond - this.stepSecond;
        (t = t < 0 ? 60 + t : t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              t,
              this.pm
            )),
          e.preventDefault();
      }
      updateTime() {
        let e = this.value;
        this.isRangeSelection() && (e = this.value[1] || this.value[0]),
          this.isMultipleSelection() && (e = this.value[this.value.length - 1]),
          (e = e ? new Date(e.getTime()) : new Date()),
          this.hourFormat == "12"
            ? this.currentHour === 12
              ? e.setHours(this.pm ? 12 : 0)
              : e.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
            : e.setHours(this.currentHour),
          e.setMinutes(this.currentMinute),
          e.setSeconds(this.currentSecond),
          this.isRangeSelection() &&
            (this.value[1] ? (e = [this.value[0], e]) : (e = [e, null])),
          this.isMultipleSelection() && (e = [...this.value.slice(0, -1), e]),
          this.updateModel(e),
          this.onSelect.emit(e),
          this.updateInputfield();
      }
      toggleAMPM(e) {
        let t = !this.pm;
        (this.pm = t),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              this.currentSecond,
              t
            )),
          this.updateTime(),
          e.preventDefault();
      }
      onUserInput(e) {
        if (!this.isKeydown) return;
        this.isKeydown = !1;
        let t = e.target.value;
        try {
          let n = this.parseValueFromString(t);
          this.isValidSelection(n)
            ? (this.updateModel(n), this.updateUI())
            : this.keepInvalid && this.updateModel(n);
        } catch {
          let o = this.keepInvalid ? t : null;
          this.updateModel(o);
        }
        (this.filled = t != null && t.length), this.onInput.emit(e);
      }
      isValidSelection(e) {
        if (this.isSingleSelection())
          return this.isSelectable(
            e.getDate(),
            e.getMonth(),
            e.getFullYear(),
            !1
          );
        let t = e.every((n) =>
          this.isSelectable(n.getDate(), n.getMonth(), n.getFullYear(), !1)
        );
        return (
          t &&
            this.isRangeSelection() &&
            (t = e.length === 1 || (e.length > 1 && e[1] >= e[0])),
          t
        );
      }
      parseValueFromString(e) {
        if (!e || e.trim().length === 0) return null;
        let t;
        if (this.isSingleSelection()) t = this.parseDateTime(e);
        else if (this.isMultipleSelection()) {
          let n = e.split(this.multipleSeparator);
          t = [];
          for (let o of n) t.push(this.parseDateTime(o.trim()));
        } else if (this.isRangeSelection()) {
          let n = e.split(" " + this.rangeSeparator + " ");
          t = [];
          for (let o = 0; o < n.length; o++)
            t[o] = this.parseDateTime(n[o].trim());
        }
        return t;
      }
      parseDateTime(e) {
        let t,
          n = e.split(" ");
        if (this.timeOnly) (t = new Date()), this.populateTime(t, n[0], n[1]);
        else {
          let o = this.getDateFormat();
          if (this.showTime) {
            let u = this.hourFormat == "12" ? n.pop() : null,
              b = n.pop();
            (t = this.parseDate(n.join(" "), o)), this.populateTime(t, b, u);
          } else t = this.parseDate(e, o);
        }
        return t;
      }
      populateTime(e, t, n) {
        if (this.hourFormat == "12" && !n) throw "Invalid Time";
        this.pm = n === "PM" || n === "pm";
        let o = this.parseTime(t);
        e.setHours(o.hour), e.setMinutes(o.minute), e.setSeconds(o.second);
      }
      isValidDate(e) {
        return bi.isDate(e) && bi.isNotEmpty(e);
      }
      updateUI() {
        let e = this.value;
        Array.isArray(e) && (e = e[1] || e[0]);
        let t =
          this.defaultDate && this.isValidDate(this.defaultDate) && !this.value
            ? this.defaultDate
            : e && this.isValidDate(e)
            ? e
            : new Date();
        (this.currentMonth = t.getMonth()),
          (this.currentYear = t.getFullYear()),
          this.createMonths(this.currentMonth, this.currentYear),
          (this.showTime || this.timeOnly) &&
            (this.setCurrentHourPM(t.getHours()),
            (this.currentMinute = t.getMinutes()),
            (this.currentSecond = t.getSeconds()));
      }
      showOverlay() {
        this.overlayVisible ||
          (this.updateUI(),
          this.touchUI || (this.preventFocus = !0),
          (this.overlayVisible = !0));
      }
      hideOverlay() {
        this.inputfieldViewChild?.nativeElement.focus(),
          (this.overlayVisible = !1),
          this.clearTimePickerTimer(),
          this.touchUI && this.disableModality(),
          this.cd.markForCheck();
      }
      toggle() {
        this.inline ||
          (this.overlayVisible
            ? this.hideOverlay()
            : (this.showOverlay(),
              this.inputfieldViewChild?.nativeElement.focus()));
      }
      onOverlayAnimationStart(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              ((this.overlay = e.element),
              this.overlay?.setAttribute(this.attributeSelector, ""),
              this.appendOverlay(),
              this.updateFocus(),
              this.autoZIndex &&
                (this.touchUI
                  ? yo.set(
                      "modal",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.modal
                    )
                  : yo.set(
                      "overlay",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.overlay
                    )),
              this.alignOverlay(),
              this.onShow.emit(e));
            break;
          case "void":
            this.onOverlayHide(), this.onClose.emit(e);
            break;
        }
      }
      onOverlayAnimationDone(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              (this.bindDocumentClickListener(),
              this.bindDocumentResizeListener(),
              this.bindScrollListener());
            break;
          case "void":
            this.autoZIndex && yo.clear(e.element);
            break;
        }
      }
      appendOverlay() {
        this.appendTo &&
          (this.appendTo === "body"
            ? this.document.body.appendChild(this.overlay)
            : he.appendChild(this.overlay, this.appendTo));
      }
      restoreOverlayAppend() {
        this.overlay &&
          this.appendTo &&
          this.el.nativeElement.appendChild(this.overlay);
      }
      alignOverlay() {
        this.touchUI
          ? this.enableModality(this.overlay)
          : this.overlay &&
            (this.appendTo
              ? (this.view === "date"
                  ? (this.overlay.style.width ||
                      (this.overlay.style.width =
                        he.getOuterWidth(this.overlay) + "px"),
                    this.overlay.style.minWidth ||
                      (this.overlay.style.minWidth =
                        he.getOuterWidth(
                          this.inputfieldViewChild?.nativeElement
                        ) + "px"))
                  : this.overlay.style.width ||
                    (this.overlay.style.width =
                      he.getOuterWidth(
                        this.inputfieldViewChild?.nativeElement
                      ) + "px"),
                he.absolutePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ))
              : he.relativePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ));
      }
      enableModality(e) {
        !this.mask &&
          this.touchUI &&
          ((this.mask = this.renderer.createElement("div")),
          this.renderer.setStyle(
            this.mask,
            "zIndex",
            String(parseInt(e.style.zIndex) - 1)
          ),
          he.addMultipleClasses(
            this.mask,
            "p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter"
          ),
          (this.maskClickListener = this.renderer.listen(
            this.mask,
            "click",
            (n) => {
              this.disableModality(), (this.overlayVisible = !1);
            }
          )),
          this.renderer.appendChild(this.document.body, this.mask),
          he.blockBodyScroll());
      }
      disableModality() {
        this.mask &&
          (he.addClass(this.mask, "p-component-overlay-leave"),
          this.animationEndListener ||
            (this.animationEndListener = this.renderer.listen(
              this.mask,
              "animationend",
              this.destroyMask.bind(this)
            )));
      }
      destroyMask() {
        if (!this.mask) return;
        this.renderer.removeChild(this.document.body, this.mask);
        let e = this.document.body.children,
          t;
        for (let n = 0; n < e.length; n++) {
          let o = e[n];
          if (he.hasClass(o, "p-datepicker-mask-scrollblocker")) {
            t = !0;
            break;
          }
        }
        t || he.unblockBodyScroll(),
          this.unbindAnimationEndListener(),
          this.unbindMaskClickListener(),
          (this.mask = null);
      }
      unbindMaskClickListener() {
        this.maskClickListener &&
          (this.maskClickListener(), (this.maskClickListener = null));
      }
      unbindAnimationEndListener() {
        this.animationEndListener &&
          this.mask &&
          (this.animationEndListener(), (this.animationEndListener = null));
      }
      writeValue(e) {
        if (((this.value = e), this.value && typeof this.value == "string"))
          try {
            this.value = this.parseValueFromString(this.value);
          } catch {
            this.keepInvalid && (this.value = e);
          }
        this.updateInputfield(), this.updateUI(), this.cd.markForCheck();
      }
      registerOnChange(e) {
        this.onModelChange = e;
      }
      registerOnTouched(e) {
        this.onModelTouched = e;
      }
      setDisabledState(e) {
        (this.disabled = e), this.cd.markForCheck();
      }
      getDateFormat() {
        return this.dateFormat || this.getTranslation("dateFormat");
      }
      getFirstDateOfWeek() {
        return (
          this._firstDayOfWeek || this.getTranslation(Ui.FIRST_DAY_OF_WEEK)
        );
      }
      formatDate(e, t) {
        if (!e) return "";
        let n,
          o = (k) => {
            let V = n + 1 < t.length && t.charAt(n + 1) === k;
            return V && n++, V;
          },
          u = (k, V, B) => {
            let L = "" + V;
            if (o(k)) for (; L.length < B; ) L = "0" + L;
            return L;
          },
          b = (k, V, B, L) => (o(k) ? L[V] : B[V]),
          C = "",
          T = !1;
        if (e)
          for (n = 0; n < t.length; n++)
            if (T)
              t.charAt(n) === "'" && !o("'") ? (T = !1) : (C += t.charAt(n));
            else
              switch (t.charAt(n)) {
                case "d":
                  C += u("d", e.getDate(), 2);
                  break;
                case "D":
                  C += b(
                    "D",
                    e.getDay(),
                    this.getTranslation(Ui.DAY_NAMES_SHORT),
                    this.getTranslation(Ui.DAY_NAMES)
                  );
                  break;
                case "o":
                  C += u(
                    "o",
                    Math.round(
                      (new Date(
                        e.getFullYear(),
                        e.getMonth(),
                        e.getDate()
                      ).getTime() -
                        new Date(e.getFullYear(), 0, 0).getTime()) /
                        864e5
                    ),
                    3
                  );
                  break;
                case "m":
                  C += u("m", e.getMonth() + 1, 2);
                  break;
                case "M":
                  C += b(
                    "M",
                    e.getMonth(),
                    this.getTranslation(Ui.MONTH_NAMES_SHORT),
                    this.getTranslation(Ui.MONTH_NAMES)
                  );
                  break;
                case "y":
                  C += o("y")
                    ? e.getFullYear()
                    : (e.getFullYear() % 100 < 10 ? "0" : "") +
                      (e.getFullYear() % 100);
                  break;
                case "@":
                  C += e.getTime();
                  break;
                case "!":
                  C += e.getTime() * 1e4 + this.ticksTo1970;
                  break;
                case "'":
                  o("'") ? (C += "'") : (T = !0);
                  break;
                default:
                  C += t.charAt(n);
              }
        return C;
      }
      formatTime(e) {
        if (!e) return "";
        let t = "",
          n = e.getHours(),
          o = e.getMinutes(),
          u = e.getSeconds();
        return (
          this.hourFormat == "12" && n > 11 && n != 12 && (n -= 12),
          this.hourFormat == "12"
            ? (t += n === 0 ? 12 : n < 10 ? "0" + n : n)
            : (t += n < 10 ? "0" + n : n),
          (t += ":"),
          (t += o < 10 ? "0" + o : o),
          this.showSeconds && ((t += ":"), (t += u < 10 ? "0" + u : u)),
          this.hourFormat == "12" && (t += e.getHours() > 11 ? " PM" : " AM"),
          t
        );
      }
      parseTime(e) {
        let t = e.split(":"),
          n = this.showSeconds ? 3 : 2;
        if (t.length !== n) throw "Invalid time";
        let o = parseInt(t[0]),
          u = parseInt(t[1]),
          b = this.showSeconds ? parseInt(t[2]) : null;
        if (
          isNaN(o) ||
          isNaN(u) ||
          o > 23 ||
          u > 59 ||
          (this.hourFormat == "12" && o > 12) ||
          (this.showSeconds && (isNaN(b) || b > 59))
        )
          throw "Invalid time";
        return (
          this.hourFormat == "12" &&
            (o !== 12 && this.pm
              ? (o += 12)
              : !this.pm && o === 12 && (o -= 12)),
          { hour: o, minute: u, second: b }
        );
      }
      parseDate(e, t) {
        if (t == null || e == null) throw "Invalid arguments";
        if (((e = typeof e == "object" ? e.toString() : e + ""), e === ""))
          return null;
        let n,
          o,
          u,
          b = 0,
          C =
            typeof this.shortYearCutoff != "string"
              ? this.shortYearCutoff
              : (new Date().getFullYear() % 100) +
                parseInt(this.shortYearCutoff, 10),
          T = -1,
          k = -1,
          V = -1,
          B = -1,
          L = !1,
          H,
          U = (Ce) => {
            let ae = n + 1 < t.length && t.charAt(n + 1) === Ce;
            return ae && n++, ae;
          },
          j = (Ce) => {
            let ae = U(Ce),
              vi =
                Ce === "@"
                  ? 14
                  : Ce === "!"
                  ? 20
                  : Ce === "y" && ae
                  ? 4
                  : Ce === "o"
                  ? 3
                  : 2,
              f = Ce === "y" ? vi : 1,
              bn = new RegExp("^\\d{" + f + "," + vi + "}"),
              Qe = e.substring(b).match(bn);
            if (!Qe) throw "Missing number at position " + b;
            return (b += Qe[0].length), parseInt(Qe[0], 10);
          },
          Y = (Ce, ae, vi) => {
            let f = -1,
              bn = U(Ce) ? vi : ae,
              Qe = [];
            for (let ci = 0; ci < bn.length; ci++) Qe.push([ci, bn[ci]]);
            Qe.sort((ci, An) => -(ci[1].length - An[1].length));
            for (let ci = 0; ci < Qe.length; ci++) {
              let An = Qe[ci][1];
              if (e.substr(b, An.length).toLowerCase() === An.toLowerCase()) {
                (f = Qe[ci][0]), (b += An.length);
                break;
              }
            }
            if (f !== -1) return f + 1;
            throw "Unknown name at position " + b;
          },
          ge = () => {
            if (e.charAt(b) !== t.charAt(n))
              throw "Unexpected literal at position " + b;
            b++;
          };
        for (this.view === "month" && (V = 1), n = 0; n < t.length; n++)
          if (L) t.charAt(n) === "'" && !U("'") ? (L = !1) : ge();
          else
            switch (t.charAt(n)) {
              case "d":
                V = j("d");
                break;
              case "D":
                Y(
                  "D",
                  this.getTranslation(Ui.DAY_NAMES_SHORT),
                  this.getTranslation(Ui.DAY_NAMES)
                );
                break;
              case "o":
                B = j("o");
                break;
              case "m":
                k = j("m");
                break;
              case "M":
                k = Y(
                  "M",
                  this.getTranslation(Ui.MONTH_NAMES_SHORT),
                  this.getTranslation(Ui.MONTH_NAMES)
                );
                break;
              case "y":
                T = j("y");
                break;
              case "@":
                (H = new Date(j("@"))),
                  (T = H.getFullYear()),
                  (k = H.getMonth() + 1),
                  (V = H.getDate());
                break;
              case "!":
                (H = new Date((j("!") - this.ticksTo1970) / 1e4)),
                  (T = H.getFullYear()),
                  (k = H.getMonth() + 1),
                  (V = H.getDate());
                break;
              case "'":
                U("'") ? ge() : (L = !0);
                break;
              default:
                ge();
            }
        if (b < e.length && ((u = e.substr(b)), !/^\s+/.test(u)))
          throw "Extra/unparsed characters found in date: " + u;
        if (
          (T === -1
            ? (T = new Date().getFullYear())
            : T < 100 &&
              (T +=
                new Date().getFullYear() -
                (new Date().getFullYear() % 100) +
                (T <= C ? 0 : -100)),
          B > -1)
        ) {
          (k = 1), (V = B);
          do {
            if (((o = this.getDaysCountInMonth(T, k - 1)), V <= o)) break;
            k++, (V -= o);
          } while (!0);
        }
        if (
          (this.view === "year" &&
            ((k = k === -1 ? 1 : k), (V = V === -1 ? 1 : V)),
          (H = this.daylightSavingAdjust(new Date(T, k - 1, V))),
          H.getFullYear() !== T || H.getMonth() + 1 !== k || H.getDate() !== V)
        )
          throw "Invalid date";
        return H;
      }
      daylightSavingAdjust(e) {
        return e
          ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
          : null;
      }
      updateFilledState() {
        this.filled = this.inputFieldValue && this.inputFieldValue != "";
      }
      isValidDateForTimeConstraints(e) {
        return this.keepInvalid
          ? !0
          : (!this.minDate || e >= this.minDate) &&
              (!this.maxDate || e <= this.maxDate);
      }
      onTodayButtonClick(e) {
        let t = new Date(),
          n = {
            day: t.getDate(),
            month: t.getMonth(),
            year: t.getFullYear(),
            otherMonth:
              t.getMonth() !== this.currentMonth ||
              t.getFullYear() !== this.currentYear,
            today: !0,
            selectable: !0,
          };
        this.createMonths(t.getMonth(), t.getFullYear()),
          this.onDateSelect(e, n),
          this.onTodayClick.emit(t);
      }
      onClearButtonClick(e) {
        this.updateModel(null),
          this.updateInputfield(),
          this.hideOverlay(),
          this.onClearClick.emit(e);
      }
      createResponsiveStyle() {
        if (this.numberOfMonths > 1 && this.responsiveOptions) {
          this.responsiveStyleElement ||
            ((this.responsiveStyleElement =
              this.renderer.createElement("style")),
            (this.responsiveStyleElement.type = "text/css"),
            he.setAttribute(
              this.responsiveStyleElement,
              "nonce",
              this.config?.csp()?.nonce
            ),
            this.renderer.appendChild(
              this.document.body,
              this.responsiveStyleElement
            ));
          let e = "";
          if (this.responsiveOptions) {
            let t = [...this.responsiveOptions]
              .filter((n) => !!(n.breakpoint && n.numMonths))
              .sort(
                (n, o) =>
                  -1 *
                  n.breakpoint.localeCompare(o.breakpoint, void 0, {
                    numeric: !0,
                  })
              );
            for (let n = 0; n < t.length; n++) {
              let { breakpoint: o, numMonths: u } = t[n],
                b = `
                        .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${u}) .p-datepicker-next {
                            display: inline-flex !important;
                        }
                    `;
              for (let C = u; C < this.numberOfMonths; C++)
                b += `
                            .p-datepicker[${
                              this.attributeSelector
                            }] .p-datepicker-group:nth-child(${C + 1}) {
                                display: none !important;
                            }
                        `;
              e += `
                        @media screen and (max-width: ${o}) {
                            ${b}
                        }
                    `;
            }
          }
          this.responsiveStyleElement.innerHTML = e;
        }
      }
      destroyResponsiveStyleElement() {
        this.responsiveStyleElement &&
          (this.responsiveStyleElement.remove(),
          (this.responsiveStyleElement = null));
      }
      bindDocumentClickListener() {
        this.documentClickListener ||
          this.zone.runOutsideAngular(() => {
            let e = this.el
              ? this.el.nativeElement.ownerDocument
              : this.document;
            this.documentClickListener = this.renderer.listen(
              e,
              "mousedown",
              (t) => {
                this.isOutsideClicked(t) &&
                  this.overlayVisible &&
                  this.zone.run(() => {
                    this.hideOverlay(),
                      this.onClickOutside.emit(t),
                      this.cd.markForCheck();
                  });
              }
            );
          });
      }
      unbindDocumentClickListener() {
        this.documentClickListener &&
          (this.documentClickListener(), (this.documentClickListener = null));
      }
      bindDocumentResizeListener() {
        !this.documentResizeListener &&
          !this.touchUI &&
          (this.documentResizeListener = this.renderer.listen(
            this.window,
            "resize",
            this.onWindowResize.bind(this)
          ));
      }
      unbindDocumentResizeListener() {
        this.documentResizeListener &&
          (this.documentResizeListener(), (this.documentResizeListener = null));
      }
      bindScrollListener() {
        this.scrollHandler ||
          (this.scrollHandler = new Ua(
            this.containerViewChild?.nativeElement,
            () => {
              this.overlayVisible && this.hideOverlay();
            }
          )),
          this.scrollHandler.bindScrollListener();
      }
      unbindScrollListener() {
        this.scrollHandler && this.scrollHandler.unbindScrollListener();
      }
      isOutsideClicked(e) {
        return !(
          this.el.nativeElement.isSameNode(e.target) ||
          this.isNavIconClicked(e) ||
          this.el.nativeElement.contains(e.target) ||
          (this.overlay && this.overlay.contains(e.target))
        );
      }
      isNavIconClicked(e) {
        return (
          he.hasClass(e.target, "p-datepicker-prev") ||
          he.hasClass(e.target, "p-datepicker-prev-icon") ||
          he.hasClass(e.target, "p-datepicker-next") ||
          he.hasClass(e.target, "p-datepicker-next-icon")
        );
      }
      onWindowResize() {
        this.overlayVisible && !he.isTouchDevice() && this.hideOverlay();
      }
      onOverlayHide() {
        (this.currentView = this.view),
          this.mask && this.destroyMask(),
          this.unbindDocumentClickListener(),
          this.unbindDocumentResizeListener(),
          this.unbindScrollListener(),
          (this.overlay = null);
      }
      ngOnDestroy() {
        this.scrollHandler &&
          (this.scrollHandler.destroy(), (this.scrollHandler = null)),
          this.translationSubscription &&
            this.translationSubscription.unsubscribe(),
          this.overlay && this.autoZIndex && yo.clear(this.overlay),
          this.destroyResponsiveStyleElement(),
          this.clearTimePickerTimer(),
          this.restoreOverlayAppend(),
          this.onOverlayHide();
      }
      static ɵfac = function (t) {
        return new (t || r)(F(Le), F(Pe), F(Jt), F(qe), F(Ie), F(za), F(ju));
      };
      static ɵcmp = oe({
        type: r,
        selectors: [["p-calendar"]],
        contentQueries: function (t, n, o) {
          if ((t & 1 && Ji(o, Co, 4), t & 2)) {
            let u;
            tt((u = it())) && (n.templates = u);
          }
        },
        viewQuery: function (t, n) {
          if ((t & 1 && (at(Tb, 5), at(kb, 5), at(Pb, 5)), t & 2)) {
            let o;
            tt((o = it())) && (n.containerViewChild = o.first),
              tt((o = it())) && (n.inputfieldViewChild = o.first),
              tt((o = it())) && (n.content = o.first);
          }
        },
        hostAttrs: [1, "p-element", "p-inputwrapper"],
        hostVars: 6,
        hostBindings: function (t, n) {
          t & 2 &&
            X("p-inputwrapper-filled", n.filled)(
              "p-inputwrapper-focus",
              n.focus
            )("p-calendar-clearable", n.showClear && !n.disabled);
        },
        inputs: {
          iconDisplay: "iconDisplay",
          style: "style",
          styleClass: "styleClass",
          inputStyle: "inputStyle",
          inputId: "inputId",
          name: "name",
          inputStyleClass: "inputStyleClass",
          placeholder: "placeholder",
          ariaLabelledBy: "ariaLabelledBy",
          ariaLabel: "ariaLabel",
          iconAriaLabel: "iconAriaLabel",
          disabled: [2, "disabled", "disabled", ye],
          dateFormat: "dateFormat",
          multipleSeparator: "multipleSeparator",
          rangeSeparator: "rangeSeparator",
          inline: [2, "inline", "inline", ye],
          showOtherMonths: [2, "showOtherMonths", "showOtherMonths", ye],
          selectOtherMonths: [2, "selectOtherMonths", "selectOtherMonths", ye],
          showIcon: [2, "showIcon", "showIcon", ye],
          icon: "icon",
          appendTo: "appendTo",
          readonlyInput: [2, "readonlyInput", "readonlyInput", ye],
          shortYearCutoff: "shortYearCutoff",
          monthNavigator: [2, "monthNavigator", "monthNavigator", ye],
          yearNavigator: [2, "yearNavigator", "yearNavigator", ye],
          hourFormat: "hourFormat",
          timeOnly: [2, "timeOnly", "timeOnly", ye],
          stepYearPicker: [2, "stepYearPicker", "stepYearPicker", Di],
          stepHour: [2, "stepHour", "stepHour", Di],
          stepMinute: [2, "stepMinute", "stepMinute", Di],
          stepSecond: [2, "stepSecond", "stepSecond", Di],
          showSeconds: [2, "showSeconds", "showSeconds", ye],
          required: [2, "required", "required", ye],
          showOnFocus: [2, "showOnFocus", "showOnFocus", ye],
          showWeek: [2, "showWeek", "showWeek", ye],
          startWeekFromFirstDayOfYear: "startWeekFromFirstDayOfYear",
          showClear: [2, "showClear", "showClear", ye],
          dataType: "dataType",
          selectionMode: "selectionMode",
          maxDateCount: [2, "maxDateCount", "maxDateCount", Di],
          showButtonBar: [2, "showButtonBar", "showButtonBar", ye],
          todayButtonStyleClass: "todayButtonStyleClass",
          clearButtonStyleClass: "clearButtonStyleClass",
          autofocus: [2, "autofocus", "autofocus", ye],
          autoZIndex: [2, "autoZIndex", "autoZIndex", ye],
          baseZIndex: [2, "baseZIndex", "baseZIndex", Di],
          panelStyleClass: "panelStyleClass",
          panelStyle: "panelStyle",
          keepInvalid: [2, "keepInvalid", "keepInvalid", ye],
          hideOnDateTimeSelect: [
            2,
            "hideOnDateTimeSelect",
            "hideOnDateTimeSelect",
            ye,
          ],
          touchUI: [2, "touchUI", "touchUI", ye],
          timeSeparator: "timeSeparator",
          focusTrap: [2, "focusTrap", "focusTrap", ye],
          showTransitionOptions: "showTransitionOptions",
          hideTransitionOptions: "hideTransitionOptions",
          tabindex: [2, "tabindex", "tabindex", Di],
          variant: "variant",
          minDate: "minDate",
          maxDate: "maxDate",
          disabledDates: "disabledDates",
          disabledDays: "disabledDays",
          yearRange: "yearRange",
          showTime: "showTime",
          responsiveOptions: "responsiveOptions",
          numberOfMonths: "numberOfMonths",
          firstDayOfWeek: "firstDayOfWeek",
          locale: "locale",
          view: "view",
          defaultDate: "defaultDate",
        },
        outputs: {
          onFocus: "onFocus",
          onBlur: "onBlur",
          onClose: "onClose",
          onSelect: "onSelect",
          onClear: "onClear",
          onInput: "onInput",
          onTodayClick: "onTodayClick",
          onClearClick: "onClearClick",
          onMonthChange: "onMonthChange",
          onYearChange: "onYearChange",
          onClickOutside: "onClickOutside",
          onShow: "onShow",
        },
        features: [yt([b1]), Dt],
        ngContentSelectors: Ib,
        decls: 4,
        vars: 12,
        consts: [
          ["container", ""],
          ["inputfield", ""],
          ["contentWrapper", ""],
          [3, "ngClass", "ngStyle"],
          [3, "ngIf"],
          [3, "class", "ngStyle", "ngClass", "click", 4, "ngIf"],
          [
            "type",
            "text",
            "role",
            "combobox",
            "aria-autocomplete",
            "none",
            "aria-haspopup",
            "dialog",
            "autocomplete",
            "off",
            "pAutoFocus",
            "",
            3,
            "focus",
            "keydown",
            "click",
            "blur",
            "input",
            "value",
            "readonly",
            "ngStyle",
            "placeholder",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "class",
            "p-datepicker-trigger p-button-icon-only",
            "tabindex",
            "0",
            3,
            "disabled",
            "click",
            4,
            "ngIf",
          ],
          [3, "styleClass", "click", 4, "ngIf"],
          ["class", "p-calendar-clear-icon", 3, "click", 4, "ngIf"],
          [3, "click", "styleClass"],
          [1, "p-calendar-clear-icon", 3, "click"],
          [4, "ngTemplateOutlet"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "tabindex",
            "0",
            1,
            "p-datepicker-trigger",
            "p-button-icon-only",
            3,
            "click",
            "disabled",
          ],
          [3, "ngClass", 4, "ngIf"],
          [3, "ngClass"],
          [3, "ngClass", "click", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "click", "ngClass"],
          [3, "click", "ngStyle", "ngClass"],
          ["class", "p-timepicker", 4, "ngIf"],
          ["class", "p-datepicker-buttonbar", 4, "ngIf"],
          [1, "p-datepicker-group-container"],
          ["class", "p-datepicker-group", 4, "ngFor", "ngForOf"],
          ["class", "p-monthpicker", 4, "ngIf"],
          ["class", "p-yearpicker", 4, "ngIf"],
          [1, "p-datepicker-group"],
          [1, "p-datepicker-header"],
          [
            "class",
            "p-datepicker-prev p-link",
            "type",
            "button",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            4,
            "ngIf",
          ],
          [1, "p-datepicker-title"],
          [
            "type",
            "button",
            "class",
            "p-datepicker-month p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          [
            "type",
            "button",
            "class",
            "p-datepicker-year p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          ["class", "p-datepicker-decade", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-next",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          [3, "styleClass", 4, "ngIf"],
          ["class", "p-datepicker-next-icon", 4, "ngIf"],
          ["class", "p-datepicker-calendar-container", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-prev",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          ["class", "p-datepicker-prev-icon", 4, "ngIf"],
          [3, "styleClass"],
          [1, "p-datepicker-prev-icon"],
          [
            "type",
            "button",
            1,
            "p-datepicker-month",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [
            "type",
            "button",
            1,
            "p-datepicker-year",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [1, "p-datepicker-decade"],
          [1, "p-datepicker-next-icon"],
          [1, "p-datepicker-calendar-container"],
          ["role", "grid", 1, "p-datepicker-calendar"],
          ["class", "p-datepicker-weekheader p-disabled", 4, "ngIf"],
          ["scope", "col", 4, "ngFor", "ngForOf"],
          [4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weekheader", "p-disabled"],
          ["scope", "col"],
          ["class", "p-datepicker-weeknumber", 4, "ngIf"],
          [3, "ngClass", 4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weeknumber"],
          [1, "p-disabled"],
          [
            "draggable",
            "false",
            "pRipple",
            "",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          ["class", "p-hidden-accessible", "aria-live", "polite", 4, "ngIf"],
          ["aria-live", "polite", 1, "p-hidden-accessible"],
          [1, "p-monthpicker"],
          [
            "class",
            "p-monthpicker-month",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-monthpicker-month",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-yearpicker"],
          [
            "class",
            "p-yearpicker-year",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-yearpicker-year",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-timepicker"],
          [1, "p-hour-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "keydown.enter",
            "keydown.space",
            "mousedown",
            "mouseup",
            "keyup.enter",
            "keyup.space",
            "mouseleave",
          ],
          [1, "p-separator"],
          [1, "p-minute-picker"],
          ["class", "p-separator", 4, "ngIf"],
          ["class", "p-second-picker", 4, "ngIf"],
          ["class", "p-ampm-picker", 4, "ngIf"],
          [1, "p-second-picker"],
          [1, "p-ampm-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "click",
            "keydown.enter",
          ],
          [1, "p-datepicker-buttonbar"],
          [
            "type",
            "button",
            "pButton",
            "",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            "label",
            "ngClass",
          ],
        ],
        template: function (t, n) {
          t & 1 &&
            (Pt(Eb),
            a(0, "span", 3, 0),
            M(2, tv, 5, 22, "ng-template", 4)(3, _1, 9, 32, "div", 5),
            s()),
            t & 2 &&
              (Fe(n.styleClass),
              g(
                "ngClass",
                to(
                  6,
                  Ab,
                  n.showIcon && n.iconDisplay === "input",
                  n.showIcon && n.iconDisplay === "button",
                  n.timeOnly,
                  n.disabled,
                  n.focus || n.overlayVisible
                )
              )("ngStyle", n.style),
              d(2),
              g("ngIf", !n.inline),
              d(),
              g("ngIf", n.inline || n.overlayVisible));
        },
        dependencies: () => [
          ft,
          gt,
          Be,
          vr,
          Dn,
          Yu,
          $a,
          gc,
          wo,
          _c,
          bc,
          vc,
          xc,
          Wa,
        ],
        styles: [
          `@layer primeng{.p-calendar{position:relative;display:inline-flex;max-width:100%}.p-calendar .p-inputtext{flex:1 1 auto;width:1%;text-overflow:ellipsis}.p-calendar-w-btn .p-inputtext{border-top-right-radius:0;border-bottom-right-radius:0}.p-calendar-w-btn .p-datepicker-trigger{border-top-left-radius:0;border-bottom-left-radius:0}.p-fluid .p-calendar{display:flex}.p-fluid .p-calendar .p-inputtext{width:1%}.p-calendar .p-datepicker{min-width:100%}.p-datepicker{width:auto;position:absolute;top:0;left:0}.p-datepicker-inline{display:inline-block;position:static;overflow-x:auto}.p-datepicker-header{display:flex;align-items:center;justify-content:space-between}.p-datepicker-header .p-datepicker-title{margin:0 auto}.p-datepicker-prev,.p-datepicker-next{cursor:pointer;display:inline-flex;justify-content:center;align-items:center;overflow:hidden;position:relative}.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group{flex:1 1 auto}.p-datepicker-multiple-month .p-datepicker-group-container{display:flex}.p-datepicker table{width:100%;border-collapse:collapse}.p-datepicker td>span{display:flex;justify-content:center;align-items:center;cursor:pointer;margin:0 auto;overflow:hidden;position:relative}.p-monthpicker-month{width:33.3%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-datepicker-buttonbar{display:flex;justify-content:space-between;align-items:center}.p-timepicker{display:flex;justify-content:center;align-items:center}.p-timepicker button{display:flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-timepicker>div{display:flex;align-items:center;flex-direction:column}.p-datepicker-touch-ui,.p-calendar .p-datepicker-touch-ui{position:fixed;top:50%;left:50%;min-width:80vw;transform:translate(-50%,-50%)}.p-yearpicker-year{width:50%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-calendar-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-datepicker-icon{pointer-events:none}.p-calendar-clearable{position:relative}}
`,
        ],
        encapsulation: 2,
        data: {
          animation: [
            Wn("overlayAnimation", [
              hn(
                "visibleTouchUI",
                Nt({ transform: "translate(-50%,-50%)", opacity: 1 })
              ),
              ui("void => visible", [
                Nt({ opacity: 0, transform: "scaleY(0.8)" }),
                pi(
                  "{{showTransitionParams}}",
                  Nt({ opacity: 1, transform: "*" })
                ),
              ]),
              ui("visible => void", [
                pi("{{hideTransitionParams}}", Nt({ opacity: 0 })),
              ]),
              ui("void => visibleTouchUI", [
                Nt({
                  opacity: 0,
                  transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                }),
                pi("{{showTransitionParams}}"),
              ]),
              ui("visibleTouchUI => void", [
                pi(
                  "{{hideTransitionParams}}",
                  Nt({
                    opacity: 0,
                    transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                  })
                ),
              ]),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return r;
  })(),
  Zu = (() => {
    class r {
      static ɵfac = function (t) {
        return new (t || r)();
      };
      static ɵmod = be({ type: r });
      static ɵinj = _e({
        imports: [De, fc, zi, $u, gc, wo, _c, bc, vc, xc, Uu, fc, zi],
      });
    }
    return r;
  })();
var Xu = (() => {
  class r extends Zt {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + Vr() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (n) {
        return (e || (e = pt(r)))(n || r);
      };
    })();
    static ɵcmp = oe({
      type: r,
      selectors: [["HomeIcon"]],
      standalone: !0,
      features: [ze, le],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "fill-rule",
          "evenodd",
          "clip-rule",
          "evenodd",
          "d",
          "M13.4175 6.79971C13.2874 6.80029 13.1608 6.75807 13.057 6.67955L12.4162 6.19913V12.6073C12.4141 12.7659 12.3502 12.9176 12.2379 13.0298C12.1257 13.142 11.9741 13.206 11.8154 13.208H8.61206C8.61179 13.208 8.61151 13.208 8.61123 13.2081C8.61095 13.208 8.61068 13.208 8.6104 13.208H5.41076C5.40952 13.208 5.40829 13.2081 5.40705 13.2081C5.40581 13.2081 5.40458 13.208 5.40334 13.208H2.20287C2.04418 13.206 1.89257 13.142 1.78035 13.0298C1.66813 12.9176 1.60416 12.7659 1.60209 12.6073V6.19914L0.961256 6.67955C0.833786 6.77515 0.673559 6.8162 0.515823 6.79367C0.358086 6.77114 0.215762 6.68686 0.120159 6.55939C0.0245566 6.43192 -0.0164931 6.2717 0.00604063 6.11396C0.0285744 5.95622 0.112846 5.8139 0.240316 5.7183L1.83796 4.52007L1.84689 4.51337L6.64868 0.912027C6.75267 0.834032 6.87915 0.79187 7.00915 0.79187C7.13914 0.79187 7.26562 0.834032 7.36962 0.912027L12.1719 4.51372L12.1799 4.51971L13.778 5.7183C13.8943 5.81278 13.9711 5.94732 13.9934 6.09553C14.0156 6.24373 13.9816 6.39489 13.8981 6.51934C13.8471 6.60184 13.7766 6.67054 13.6928 6.71942C13.609 6.76831 13.5144 6.79587 13.4175 6.79971ZM6.00783 12.0065H8.01045V7.60074H6.00783V12.0065ZM9.21201 12.0065V6.99995C9.20994 6.84126 9.14598 6.68965 9.03375 6.57743C8.92153 6.46521 8.76992 6.40124 8.61123 6.39917H5.40705C5.24836 6.40124 5.09675 6.46521 4.98453 6.57743C4.8723 6.68965 4.80834 6.84126 4.80627 6.99995V12.0065H2.80366V5.29836L7.00915 2.14564L11.2146 5.29836V12.0065H9.21201Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (t, n) {
        t & 1 &&
          (ct(),
          a(0, "svg", 0)(1, "g"),
          R(2, "path", 1),
          s(),
          a(3, "defs")(4, "clipPath", 2),
          R(5, "rect", 3),
          s()()()),
          t & 2 &&
            (Fe(n.getClassNames()),
            se("aria-label", n.ariaLabel)("aria-hidden", n.ariaHidden)(
              "role",
              n.role
            ),
            d(),
            se("clip-path", n.pathId),
            d(3),
            g("id", n.pathId));
      },
      encapsulation: 2,
    });
  }
  return r;
})();
var Do = (() => {
  class r {
    static ɵfac = function (t) {
      return new (t || r)();
    };
    static ɵmod = be({ type: r });
    static ɵinj = _e({ imports: [De] });
  }
  return r;
})();
var Ju = (() => {
  class r {
    static ɵfac = function (t) {
      return new (t || r)();
    };
    static ɵmod = be({ type: r });
    static ɵinj = _e({ imports: [De, ai, Do, wo, Xu, zi, ai, Do, zi] });
  }
  return r;
})();
var ir = (r) => ({ "is-invalid": r });
function x1(r, i) {
  r & 1 &&
    (a(0, "tr")(1, "td", 53)(2, "p"), c(3, "No Accounts Found"), s()()());
}
function y1(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "tr")(1, "td"),
      c(2),
      s(),
      a(3, "td"),
      c(4),
      s(),
      a(5, "td"),
      c(6),
      s(),
      a(7, "td"),
      c(8),
      s(),
      a(9, "td"),
      c(10),
      s(),
      a(11, "td", 55)(12, "a", 56),
      O("click", function () {
        let n = w(e).$implicit,
          o = _(2);
        return D(o.onEdit(n.account_id));
      }),
      R(13, "i", 57),
      s(),
      a(14, "a", 58),
      O("click", function () {
        let n = w(e).$implicit,
          o = _(2);
        return D(o.selectCustomerForDeletion(n));
      }),
      R(15, "i", 59),
      s(),
      a(16, "div", 60)(17, "div", 61)(18, "div", 23)(19, "div", 62)(
        20,
        "h5",
        63
      ),
      c(21, "Delete User"),
      s()(),
      a(22, "div", 64),
      c(23, "HEY ARE YOU SURE TO DELETE..!"),
      s(),
      a(24, "div", 50)(25, "button", 65),
      c(26, " Cancel "),
      s(),
      a(27, "button", 66),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.closeModal());
      })("click", function () {
        w(e);
        let n = _(2);
        return D(n.deleteCustomerId());
      }),
      c(28, " Delete "),
      s()()()()()()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = i.index;
    d(2),
      E(t + 1),
      d(2),
      E(e.fname),
      d(2),
      E(e.lname),
      d(2),
      E(e.email),
      d(2),
      E(e.phone);
  }
}
function C1(r, i) {
  if ((r & 1 && M(0, y1, 29, 5, "tr", 54), r & 2)) {
    let e = _();
    g("ngForOf", e.customerList());
  }
}
function w1(r, i) {
  r & 1 &&
    (a(0, "div", 67)(1, "span"), c(2, "Account Type is required."), s()());
}
function D1(r, i) {
  r & 1 && (a(0, "span"), c(1, "First Name is required."), s());
}
function S1(r, i) {
  r & 1 &&
    (a(0, "span"), c(1, "First Name must be at least 3 characters long."), s());
}
function M1(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 67),
      M(1, D1, 2, 0, "span", 68)(2, S1, 2, 0, "span", 68),
      s()),
    r & 2)
  ) {
    let e,
      t,
      n = _();
    d(),
      g(
        "ngIf",
        (e = n.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      d(),
      g(
        "ngIf",
        (t = n.useForm.get("fname")) == null || t.errors == null
          ? null
          : t.errors.minlength
      );
  }
}
function O1(r, i) {
  r & 1 && (a(0, "span"), c(1, "Last Name is required."), s());
}
function T1(r, i) {
  r & 1 &&
    (a(0, "span"), c(1, "Last Name must be at least 3 characters long."), s());
}
function k1(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 67),
      M(1, O1, 2, 0, "span", 68)(2, T1, 2, 0, "span", 68),
      s()),
    r & 2)
  ) {
    let e,
      t,
      n = _();
    d(),
      g(
        "ngIf",
        (e = n.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      d(),
      g(
        "ngIf",
        (t = n.useForm.get("lname")) == null || t.errors == null
          ? null
          : t.errors.minlength
      );
  }
}
function P1(r, i) {
  if ((r & 1 && (a(0, "option", 69), c(1), s()), r & 2)) {
    let e = i.$implicit;
    g("value", e.dealer_code), d(), K(" ", e.dealer_code, " ");
  }
}
function E1(r, i) {
  if ((r & 1 && (a(0, "option", 69), c(1), s()), r & 2)) {
    let e = i.$implicit;
    g("value", e.dealer_code), d(), K(" ", e.dealer_code, " ");
  }
}
function I1(r, i) {
  r & 1 && (a(0, "div", 67)(1, "span"), c(2, "Dealer is required."), s()());
}
function A1(r, i) {
  r & 1 && (a(0, "span"), c(1, "Email is required."), s());
}
function F1(r, i) {
  r & 1 && (a(0, "span"), c(1, "Please enter a valid email."), s());
}
function R1(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 67),
      M(1, A1, 2, 0, "span", 68)(2, F1, 2, 0, "span", 68),
      s()),
    r & 2)
  ) {
    let e,
      t,
      n = _();
    d(),
      g(
        "ngIf",
        (e = n.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      d(),
      g(
        "ngIf",
        (t = n.useForm.get("email")) == null || t.errors == null
          ? null
          : t.errors.email
      );
  }
}
function V1(r, i) {
  r & 1 && (a(0, "span"), c(1, "Phone is required."), s());
}
function N1(r, i) {
  r & 1 &&
    (a(0, "span"), c(1, "Phone must be at least 3 characters long."), s());
}
function L1(r, i) {
  r & 1 && (a(0, "span"), c(1, "Phone must contain only numbers."), s());
}
function B1(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 67),
      M(1, V1, 2, 0, "span", 68)(2, N1, 2, 0, "span", 68)(
        3,
        L1,
        2,
        0,
        "span",
        68
      ),
      s()),
    r & 2)
  ) {
    let e,
      t,
      n,
      o = _();
    d(),
      g(
        "ngIf",
        (e = o.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      d(),
      g(
        "ngIf",
        (t = o.useForm.get("phone")) == null || t.errors == null
          ? null
          : t.errors.minlength
      ),
      d(),
      g(
        "ngIf",
        (n = o.useForm.get("phone")) == null || n.errors == null
          ? null
          : n.errors.pattern
      );
  }
}
function H1(r, i) {
  r & 1 && (a(0, "span"), c(1, "Mobile is required."), s());
}
function j1(r, i) {
  r & 1 &&
    (a(0, "span"), c(1, "Mobile must be at least 3 characters long."), s());
}
function z1(r, i) {
  r & 1 && (a(0, "span"), c(1, "Mobile must contain only numbers."), s());
}
function U1(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 67),
      M(1, H1, 2, 0, "span", 68)(2, j1, 2, 0, "span", 68)(
        3,
        z1,
        2,
        0,
        "span",
        68
      ),
      s()),
    r & 2)
  ) {
    let e,
      t,
      n,
      o = _();
    d(),
      g(
        "ngIf",
        (e = o.useForm.get("mobile")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      d(),
      g(
        "ngIf",
        (t = o.useForm.get("mobile")) == null || t.errors == null
          ? null
          : t.errors.minlength
      ),
      d(),
      g(
        "ngIf",
        (n = o.useForm.get("mobile")) == null || n.errors == null
          ? null
          : n.errors.pattern
      );
  }
}
function W1(r, i) {
  if (r & 1) {
    let e = J();
    Me(0),
      a(1, "button", 70),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.onUpdate());
      }),
      c(2, " Edit "),
      s(),
      Oe();
  }
  if (r & 2) {
    let e = _();
    d(), g("disabled", !e.isCustomerNameChanged());
  }
}
function $1(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 66),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.onSave());
      }),
      c(1, " save "),
      s();
  }
  if (r & 2) {
    let e = _();
    se("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
var Ga = class r {
  constructor(i, e) {
    this.modalService = i;
    this.cdRef = e;
    this.initializeForm();
  }
  totalCustomer = pe(0);
  customerList = pe([]);
  dealerList = pe([]);
  masterSrv = te(je);
  toastr = te(Ht);
  previousEmail = "";
  useForm = new _t({});
  customerObj = new xo();
  dealerObj = new gn();
  isEditMode = !1;
  previousValue = "";
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  ngOnInit() {
    this.initializeForm(),
      this.loadCustomers(),
      this.loadDealers(),
      this.getAllCustomer();
  }
  isModalVisible = !1;
  initializeForm() {
    this.useForm = new _t({
      account_type: new Ke("", [Se.required]),
      fname: new Ke("", [Se.required, Se.minLength(3)]),
      lname: new Ke("", [Se.required, Se.minLength(3)]),
      email: new Ke("", [Se.required, Se.email]),
      phone: new Ke("", [Se.required, Se.pattern(/^\d+$/)]),
      mobile: new Ke("", [Se.required, Se.pattern(/^\d+$/)]),
      dealer_code: new Ke("", [Se.required]),
    });
  }
  openModal(i) {
    (this.isEditMode = !1),
      console.log("hello openmodal", i),
      this.useForm.reset(),
      (this.isModalVisible = !0),
      i
        ? (console.log("\u{1F680} Customer Data:", i),
          (this.customerObj = ee({}, i)),
          (this.previousValue = i.account_name || ""),
          this.useForm.patchValue({
            account_type: i.account_type || "",
            fname: i.fname || "",
            lname: i.lname || "",
            email: i.email || "",
            phone: i.phone || "",
            mobile: i.mobile || "",
            dealer_code: i.dealer_code || "",
          }),
          (this.previousEmail = i.email || ""),
          console.log("Edit Mode: Customer Object ->", this.customerObj))
        : ((this.customerObj = new xo()),
          (this.customerObj.account_id = ""),
          console.log(
            "New Customer Mode: Reset customerObj",
            this.customerObj
          ));
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalVisible = !1);
  }
  isEmailChange() {
    return this.useForm.value.email !== this.previousValue;
  }
  loadCustomers() {
    this.masterSrv.getAllCustomer().subscribe(
      (i) => {
        console.log("Fetched Accounts:", i),
          this.customerList.set(i.data.rows),
          this.totalCustomer.set(i.data.count);
      },
      (i) => {
        console.error("Error fetching customers:", i),
          this.toastr.error("Failed to load customers", "Error");
      }
    );
  }
  getDealerCode(i) {
    let e = this.dealerList().find((t) => t.dealer_id === i);
    return console.log(this.dealerList), e?.dealer_code?.toString() ?? "N/A";
  }
  onDealerChange() {
    console.log("on dealer chnage func called "),
      console.log("\u{1F4DD} Dealer List:", this.dealerList());
    let i = this.dealerList().find(
      (e) => e.dealer_id === this.customerObj.dealer_id
    );
    console.log("Selected Dealer:", i),
      i &&
        ((this.customerObj.dealer_code = i.dealer_code),
        this.useForm.patchValue({ dealer_code: i.dealer_code }));
  }
  loadDealers() {
    this.masterSrv.getAllDealer().subscribe(
      (i) => {
        this.dealerList.set(i.data.dealer.rows), console.log(i);
      },
      (i) => {
        this.toastr.error("Serverside Error", "Error");
      }
    );
  }
  createCustomer() {
    console.log("create cust called "),
      console.log("\u{1F6E0} Submitting customer data:", this.customerObj),
      console.log("\u{1F6E0} createCustomer() triggered!"),
      this.masterSrv.createCustomer(this.customerObj).subscribe(
        (i) => {
          this.toastr.success("Customerrr created successfully!", "Success"),
            this.getAllCustomer();
        },
        (i) => {
          this.toastr.error("Error creating dealer", "Error");
        }
      );
  }
  selectedCustomerForDeletion = null;
  selectCustomerForDeletion(i) {
    this.selectedCustomerForDeletion = i;
  }
  deleteCustomerId() {
    console.log(
      "this is the select user",
      this.selectCustomerForDeletion,
      this.selectedCustomerForDeletion
    ),
      this.selectedCustomerForDeletion &&
      this.selectedCustomerForDeletion.account_id
        ? this.masterSrv
            .deleteCustomer(this.selectedCustomerForDeletion.account_id)
            .subscribe(
              (i) => {
                this.toastr.success("Accounts deleted successfully", "Success"),
                  this.getAllCustomer(),
                  $("#deleteModal").modal("hide"),
                  $(".modal-backdrop").remove(),
                  $("body").removeClass("modal-open");
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No accounts selected for deletion");
  }
  onUpdate() {
    console.log("onupdate called "),
      this.useForm.valid
        ? ((this.customerObj = ee(
            ee({}, this.customerObj),
            this.useForm.value
          )),
          console.log(
            "\u{1F680} Updated Payload before API call:",
            this.customerObj
          ),
          this.masterSrv.updateCustomer(this.customerObj).subscribe(
            (i) => {
              console.log("\u2705 API Response:", i),
                i.status === 200
                  ? (this.toastr.success(i.message, "Success"),
                    setTimeout(() => {
                      this.getAllCustomer();
                    }, 500))
                  : this.toastr.error(
                      "Update failed, no data received",
                      "Error"
                    );
            },
            (i) => {
              console.error("\u274C API Error:", i),
                this.toastr.error("Failed to update customer", "Error");
            }
          ))
        : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  getAllCustomer() {
    this.masterSrv.getAllCustomer().subscribe(
      (i) => {
        console.log("Fetched Customers:", i),
          console.log("customer list updated:", i.data.rows),
          this.customerList.set(i.data.rows),
          this.totalCustomer.set(i.data.count);
      },
      (i) => {
        this.toastr.error("Error fetching dealers", "Error");
      }
    );
  }
  onEdit(i) {
    console.log("Edit button clicked. Dealer ID:", i),
      (this.isEditMode = !0),
      this.masterSrv.getCustomerById(i).subscribe(
        (e) => {
          if ((console.log("API Response:", e), e?.data)) {
            let t = e.data;
            (this.customerObj = Ne(ee({}, t), {
              dealer_code: Number(t.dealer_code),
            })),
              this.useForm.patchValue({
                dealer_code: Number(t.dealer_code),
                dealer_name: t.account_name || "",
                account_type: t.account_type || "",
                fname: t.fname || "",
                lname: t.lname || "",
                email: t.email || "",
                phone: t.phone || "",
                mobile: t.mobile || "",
                account_id: t.account_id || "",
              }),
              console.log("Dealer data set, opening modal..."),
              setTimeout(() => {
                $("#exampleModalCenter").modal("show");
              }, 0);
          } else
            console.error("Dealer data is missing in response:", e),
              this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          console.error("Error fetching dealer details:", e),
            this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isCustomerNameChanged() {
    return this.useForm.value.name !== this.previousValue;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let i = this.useForm.value;
    console.log("Form Data being sent to API:", i),
      this.masterSrv.createCustomer(i).subscribe({
        next: () => {
          this.toastr.success("Accounts created successfully!", "Success"),
            this.getAllCustomer(),
            this.closeModal();
        },
        error: (e) => {
          console.error("Accounts creation error:", e),
            this.toastr.error(
              e.message || "Failed to create user",
              "Creation Error"
            );
        },
      });
  }
  createNewCustomer() {
    this.masterSrv.createCustomer(this.customerObj).subscribe(
      (i) => {
        this.toastr.success("customer created successfully!", "Success"),
          this.getAllCustomer();
      },
      (i) => {
        this.toastr.error("Error creating dealer", "Error");
      }
    );
  }
  static ɵfac = function (e) {
    return new (e || r)(F(tn), F(qe));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-customer"]],
    standalone: !0,
    features: [le],
    decls: 109,
    vars: 36,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-md-4", "col-sm-4", "mb-4", "mb-xl-0"],
      [
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "col-sm-4", "col-md-4", "mb-4", "mb-xl-0"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [1, "row"],
      [1, "col-lg-12"],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-lg",
        "custom-modal",
      ],
      [1, "modal-dialog", "modal-lg"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", 2, "align-items", "center", "margin-inline", "auto"],
      ["type", "button", "data-dismiss", "modal", 1, "close"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "form-group", "col-md-6"],
      ["for", "account_type", 1, "form-label"],
      [
        "formControlName",
        "account_type",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "Individual"],
      ["value", "Corporate"],
      ["value", "Retailer"],
      ["class", "text-danger", 4, "ngIf"],
      ["for", "fname", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "First Name",
        "formControlName",
        "fname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "name", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Last Name",
        "formControlName",
        "lname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_code", 1, "form-label"],
      [
        "id",
        "dealer_code",
        "formControlName",
        "dealer_code",
        1,
        "form-select",
        "form-control",
        "form-control-lg",
        3,
        "change",
        "disabled",
        "ngClass",
      ],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "email", 1, "form-label"],
      [
        "type",
        "email",
        "placeholder",
        "E-mail",
        "formControlName",
        "email",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "phone", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Phone",
        "formControlName",
        "phone",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "mobile", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Mobile",
        "formControlName",
        "mobile",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      ["colspan", "6", 1, "text-center"],
      [4, "ngFor", "ngForOf"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-toggle",
        "modal",
        "data-target",
        ".bd-example-modal-sm",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-sm",
      ],
      [1, "modal-dialog", "modal-sm"],
      [1, "modal-header", "text-center", 2, "margin-inline", "auto"],
      [1, "modal-title", "text-center"],
      [1, "modal-body"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      [1, "text-danger"],
      [4, "ngIf"],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      if (e & 1) {
        let n = J();
        a(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
          c(6, "Utils"),
          s()(),
          a(7, "li", 7)(8, "a", 8),
          c(9, "Accounts"),
          s()()()(),
          a(10, "div", 9)(11, "div", 10)(12, "a", 11),
          O("click", function () {
            return w(n), D(t.openModal(t.customerObj));
          }),
          R(13, "i", 12),
          c(14, "Add Account"),
          s()(),
          a(15, "div", 13)(16, "div", 14)(17, "p", 15),
          c(18, "Total Account"),
          s(),
          a(19, "h3", 16),
          c(20),
          s()()()(),
          a(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "table", 20)(
            25,
            "thead"
          )(26, "tr")(27, "th"),
          c(28, "Sr No"),
          s(),
          a(29, "th"),
          c(30, "Account Name"),
          s(),
          a(31, "th"),
          c(32, "Last Name"),
          s(),
          a(33, "th"),
          c(34, "E-mail"),
          s(),
          a(35, "th"),
          c(36, "Phone"),
          s(),
          a(37, "th"),
          c(38, "Action"),
          s()()(),
          a(39, "tbody"),
          M(40, x1, 4, 0, "tr")(41, C1, 1, 1, "tr"),
          s()()()()()()(),
          a(42, "div", 21)(43, "div", 22)(44, "div", 23)(45, "div", 24)(
            46,
            "h5",
            25
          ),
          c(47, " Add New Account "),
          s(),
          a(48, "button", 26)(49, "span", 27),
          c(50, "\xD7"),
          s()()(),
          a(51, "div", 28)(52, "div", 17)(53, "div", 29)(54, "label", 30),
          c(55, "Account Type"),
          s(),
          a(56, "select", 31)(57, "option", 32),
          c(58, "Select Account Type"),
          s(),
          a(59, "option", 33),
          c(60, "Individual"),
          s(),
          a(61, "option", 34),
          c(62, "Corporate"),
          s(),
          a(63, "option", 35),
          c(64, "Retailer"),
          s()(),
          M(65, w1, 3, 0, "div", 36),
          s(),
          a(66, "div", 29)(67, "label", 37),
          c(68, "First Name"),
          s(),
          R(69, "input", 38),
          M(70, M1, 3, 2, "div", 36),
          s()(),
          a(71, "div", 17)(72, "div", 29)(73, "label", 39),
          c(74, "Last Name"),
          s(),
          R(75, "input", 40),
          M(76, k1, 3, 2, "div", 36),
          s(),
          a(77, "div", 29)(78, "label", 41),
          c(79, "Dealer Code"),
          s(),
          a(80, "select", 42),
          O("change", function () {
            return w(n), D(t.onDealerChange());
          }),
          a(81, "option", 32),
          c(82, "Select Dealer"),
          s(),
          M(83, P1, 2, 2, "option", 43)(84, E1, 2, 2, "option", 43),
          s(),
          M(85, I1, 3, 0, "div", 36),
          s()(),
          a(86, "div", 17)(87, "div", 29)(88, "label", 44),
          c(89, "E-mail"),
          s(),
          R(90, "input", 45),
          M(91, R1, 3, 2, "div", 36),
          s(),
          a(92, "div", 29)(93, "label", 46),
          c(94, "Phone"),
          s(),
          R(95, "input", 47),
          M(96, B1, 4, 3, "div", 36),
          s()(),
          a(97, "div", 17)(98, "div", 29)(99, "label", 48),
          c(100, "Mobile"),
          s(),
          R(101, "input", 49),
          M(102, U1, 4, 3, "div", 36),
          s()()(),
          a(103, "div", 50),
          M(104, W1, 3, 1, "ng-container", 51),
          a(105, "button", 52),
          O("click", function () {
            return w(n), D(t.closeModal());
          }),
          c(106, " Close "),
          s(),
          M(107, $1, 2, 1, "ng-template", null, 0, lt),
          s()()()();
      }
      if (e & 2) {
        let n,
          o,
          u,
          b,
          C,
          T,
          k,
          V,
          B,
          L,
          H,
          U,
          j,
          Y,
          ge,
          Ce = rt(108);
        d(20),
          K(" ", t.totalCustomer(), " "),
          d(20),
          Li(t.customerList().length === 0 ? 40 : 41),
          d(11),
          g("formGroup", t.useForm),
          d(5),
          g(
            "ngClass",
            ce(
              22,
              ir,
              ((n = t.useForm.get("account_type")) == null
                ? null
                : n.touched) &&
                ((n = t.useForm.get("account_type")) == null ? null : n.invalid)
            )
          ),
          d(9),
          g(
            "ngIf",
            ((o = t.useForm.get("account_type")) == null ? null : o.touched) &&
              ((o = t.useForm.get("account_type")) == null ? null : o.invalid)
          ),
          d(4),
          g(
            "ngClass",
            ce(
              24,
              ir,
              ((u = t.useForm.get("fname")) == null ? null : u.touched) &&
                ((u = t.useForm.get("fname")) == null ? null : u.invalid)
            )
          ),
          d(),
          g(
            "ngIf",
            ((b = t.useForm.get("fname")) == null ? null : b.touched) &&
              ((b = t.useForm.get("fname")) == null ? null : b.invalid)
          ),
          d(5),
          g(
            "ngClass",
            ce(
              26,
              ir,
              ((C = t.useForm.get("lname")) == null ? null : C.touched) &&
                ((C = t.useForm.get("lname")) == null ? null : C.invalid)
            )
          ),
          d(),
          g(
            "ngIf",
            ((T = t.useForm.get("lname")) == null ? null : T.touched) &&
              ((T = t.useForm.get("lname")) == null ? null : T.invalid)
          ),
          d(4),
          g(
            "disabled",
            (k = t.useForm.get("account_id")) == null ? null : k.value
          )(
            "ngClass",
            ce(
              28,
              ir,
              ((V = t.useForm.get("dealer_code")) == null ? null : V.touched) &&
                ((V = t.useForm.get("dealer_code")) == null ? null : V.invalid)
            )
          ),
          d(3),
          g("ngForOf", t.dealerList()),
          d(),
          g("ngForOf", t.staticDealerList),
          d(),
          g(
            "ngIf",
            ((B = t.useForm.get("dealer_code")) == null ? null : B.touched) &&
              ((B = t.useForm.get("dealer_code")) == null ? null : B.invalid)
          ),
          d(5),
          g(
            "ngClass",
            ce(
              30,
              ir,
              ((L = t.useForm.get("email")) == null ? null : L.touched) &&
                ((L = t.useForm.get("email")) == null ? null : L.invalid)
            )
          ),
          d(),
          g(
            "ngIf",
            ((H = t.useForm.get("email")) == null ? null : H.touched) &&
              ((H = t.useForm.get("email")) == null ? null : H.invalid)
          ),
          d(4),
          g(
            "ngClass",
            ce(
              32,
              ir,
              ((U = t.useForm.get("phone")) == null ? null : U.touched) &&
                ((U = t.useForm.get("phone")) == null ? null : U.invalid)
            )
          ),
          d(),
          g(
            "ngIf",
            ((j = t.useForm.get("phone")) == null ? null : j.touched) &&
              ((j = t.useForm.get("phone")) == null ? null : j.invalid)
          ),
          d(5),
          g(
            "ngClass",
            ce(
              34,
              ir,
              ((Y = t.useForm.get("mobile")) == null ? null : Y.touched) &&
                ((Y = t.useForm.get("mobile")) == null ? null : Y.invalid)
            )
          ),
          d(),
          g(
            "ngIf",
            ((ge = t.useForm.get("mobile")) == null ? null : ge.touched) &&
              ((ge = t.useForm.get("mobile")) == null ? null : ge.invalid)
          ),
          d(2),
          g("ngIf", t.customerObj.account_id)("ngIfElse", Ce);
      }
    },
    dependencies: [
      De,
      ft,
      gt,
      Be,
      Kt,
      At,
      Ft,
      Mt,
      qt,
      It,
      si,
      Ge,
      Ha,
      er,
      Na,
      Va,
      Oi,
      mi,
      fi,
      Zu,
      Ju,
      ai,
      tn,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:350px;padding:20px;flex-grow:1}",
    ],
  });
};
var ih = vm(th());
var G1 = () => ["/Admin/dealer"],
  Y1 = (r) => ["/Admin/single-task", r];
function q1(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 11)(1, "div", 19)(2, "div", 29)(3, "div", 30)(4, "p", 31),
      c(5),
      s(),
      a(6, "h4", 32),
      c(7, " Dealer Code : "),
      a(8, "span", 33),
      c(9),
      s()()()()(),
      a(10, "div", 19)(11, "div", 34),
      O("click", function () {
        w(e);
        let n = _();
        return (
          n.toggleUsersTable(),
          D(n.getAllUser(n.dealerData.data.dealer.dealer_code))
        );
      }),
      a(12, "div", 30)(13, "p", 31),
      c(14, "Total Users"),
      s(),
      a(15, "h4", 32)(16, "span", 33),
      c(17),
      s(),
      c(18, " User "),
      s()()()(),
      a(19, "div", 19)(20, "div", 35),
      O("click", function () {
        w(e);
        let n = _();
        return (
          n.toggleOpportunityTable(),
          D(n.getAllOpp(n.dealerData.data.dealer.dealer_id))
        );
      }),
      a(21, "p", 31),
      c(22, "Total Opportunities"),
      s(),
      a(23, "h4", 32)(24, "span", 33),
      c(25),
      s(),
      c(26, " Opportunities "),
      s()()(),
      a(27, "div", 19)(28, "div", 34),
      O("click", function () {
        w(e);
        let n = _();
        return (
          n.toggleLeadsTable(),
          D(n.getAllLeads(n.dealerData.data.dealer.dealer_id))
        );
      }),
      a(29, "div", 30)(30, "p", 31),
      c(31, "Total Lead"),
      s(),
      a(32, "h4", 32)(33, "span", 33),
      c(34),
      s(),
      c(35, " Lead "),
      s()()()(),
      a(36, "div", 19)(37, "div", 34),
      O("click", function () {
        w(e);
        let n = _();
        return (
          n.toggleTasksTable(),
          D(n.getAllTasks(n.dealerData.data.dealer.dealer_id))
        );
      }),
      a(38, "div", 30)(39, "p", 31),
      c(40, "Total Tasks"),
      s(),
      a(41, "h4", 32)(42, "span", 33),
      c(43),
      s(),
      c(44, " Tasks "),
      s()()()(),
      a(45, "div", 19)(46, "div", 34),
      O("click", function () {
        w(e);
        let n = _();
        return (
          n.toggleEventTable(),
          D(n.getAllEvent(n.dealerData.data.dealer.dealer_id))
        );
      }),
      a(47, "div", 30)(48, "p", 31),
      c(49, "Total Events"),
      s(),
      a(50, "h4", 32)(51, "span", 33),
      c(52),
      s(),
      c(53, " Events "),
      s()()()()();
  }
  if (r & 2) {
    let e = _();
    d(5),
      K(" ", e.dealerData.data.dealer.dealer_name, " "),
      d(4),
      E(e.dealerData.data.dealer.dealer_code),
      d(8),
      E(e.dealerData.data.users),
      d(8),
      E(e.dealerData.data.opportunities),
      d(9),
      E(e.dealerData.data.leads),
      d(9),
      E(e.dealerData.data.tasks),
      d(9),
      K("", e.dealerData.data.events, " ");
  }
}
function K1(r, i) {
  r & 1 &&
    (a(0, "tr")(1, "td", 52)(2, "p", 53), c(3, " No Users Found "), s()()());
}
function Q1(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr")(1, "td", 49),
      c(2),
      s(),
      a(3, "td", 49),
      c(4),
      s(),
      a(5, "td", 49),
      c(6),
      s(),
      a(7, "td", 49),
      c(8),
      s(),
      a(9, "td", 49),
      c(10),
      s(),
      a(11, "td", 49),
      c(12),
      s(),
      a(13, "td", 49),
      c(14),
      s()()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      n = _(3);
    d(2),
      E((n.currentPage - 1) * n.itemsPerPage + t + 1),
      d(2),
      E(e.user_account_id || "N/A"),
      d(2),
      E(e.name || "N/A"),
      d(2),
      E(e.email || "N/A"),
      d(2),
      E(e.phone || "N/A"),
      d(2),
      E(e.user_role || "N/A"),
      d(2),
      E(e.dealer_code || "N/A");
  }
}
function Z1(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 47)(1, "table", 48)(2, "thead")(3, "tr")(4, "th", 49),
      c(5, "Sr No"),
      s(),
      a(6, "th", 49),
      c(7, "Account ID"),
      s(),
      a(8, "th", 49),
      c(9, "Name"),
      s(),
      a(10, "th", 49),
      c(11, "Email"),
      s(),
      a(12, "th", 49),
      c(13, "Phone"),
      s(),
      a(14, "th", 49),
      c(15, "Role"),
      s(),
      a(16, "th", 49),
      c(17, "Dealer Code"),
      s()()(),
      a(18, "tbody"),
      M(19, K1, 4, 0, "tr", 50)(20, Q1, 15, 7, "tr", 51),
      s()()()),
    r & 2)
  ) {
    let e = _(2);
    d(19),
      g("ngIf", !e.paginatedUsers || e.paginatedUsers.length === 0),
      d(),
      g("ngForOf", e.paginatedUsers);
  }
}
function X1(r, i) {
  if ((r & 1 && (Me(0), c(1), Oe()), r & 2)) {
    let e = _(2);
    d(),
      oi(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalUsers,
        " entries "
      );
  }
}
function J1(r, i) {
  r & 1 && c(0, " No entries available ");
}
function ex(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "li", 44)(1, "button", 45),
      O("click", function () {
        let n = w(e).$implicit,
          o = _(2);
        return D(o.goToPage(n));
      }),
      c(2),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(2);
    X("active", e === t.currentPage)(
      "disabled",
      !t.hasDataForPage(e) || t.totalUsers === 0
    ),
      d(),
      g("disabled", !t.hasDataForPage(e) || t.totalUsers === 0),
      d(),
      K(" ", e, " ");
  }
}
function tx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 36),
      M(1, Z1, 21, 2, "div", 37),
      a(2, "div", 38)(3, "div", 39)(4, "p", 40),
      M(5, X1, 2, 3, "ng-container", 41)(
        6,
        J1,
        1,
        0,
        "ng-template",
        null,
        0,
        lt
      ),
      s()(),
      a(8, "div", 39)(9, "nav", 42)(10, "ul", 43)(11, "li", 44)(
        12,
        "button",
        45
      ),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.goToPreviousPage());
      }),
      c(13, " Previous "),
      s()(),
      M(14, ex, 3, 6, "li", 46),
      a(15, "li", 44)(16, "button", 45),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.goToNextPage());
      }),
      c(17, " Next "),
      s()()()()()()();
  }
  if (r & 2) {
    let e = rt(7),
      t = _();
    d(),
      g("ngIf", t.selectedOption() === "users"),
      d(4),
      g(
        "ngIf",
        t.totalUsers > 0 && (t.currentPage - 1) * t.itemsPerPage < t.totalUsers
      )("ngIfElse", e),
      d(6),
      X("disabled", t.currentPage === 1 || t.totalUsers === 0),
      d(),
      g("disabled", t.currentPage === 1 || t.totalUsers === 0),
      d(2),
      g("ngForOf", t.visiblePageNumbers),
      d(),
      X("disabled", t.currentPage === t.totalPages || t.totalUsers === 0),
      d(),
      g("disabled", t.currentPage === t.totalPages || t.totalUsers === 0);
  }
}
function ix(r, i) {
  r & 1 &&
    (a(0, "tr")(1, "td", 57)(2, "p", 53), c(3, " No Users Found "), s()()());
}
function nx(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr", 49)(1, "td"),
      c(2),
      s(),
      a(3, "td"),
      c(4),
      s(),
      a(5, "td"),
      c(6),
      s(),
      a(7, "td"),
      c(8),
      s(),
      a(9, "td"),
      c(10),
      s(),
      a(11, "td"),
      c(12),
      s(),
      a(13, "td"),
      c(14),
      s(),
      a(15, "td"),
      c(16),
      s(),
      a(17, "td"),
      c(18),
      s(),
      a(19, "td"),
      c(20),
      s(),
      a(21, "td"),
      c(22),
      s(),
      a(23, "td"),
      c(24),
      s()()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      n = _(2);
    d(2),
      E((n.currentPage - 1) * n.itemsPerPage + t + 1),
      d(2),
      E(e.lead_code || "N/A"),
      d(2),
      E(e.dealer_name || "N/A"),
      d(2),
      E(e.status || "N/A"),
      d(2),
      E(e.purchase_type || "N/A"),
      d(2),
      E(e.type || "N/A"),
      d(2),
      E(e.sub_type || "N/A"),
      d(2),
      E(e.brand || "N/A"),
      d(2),
      E(e.PMI || "N/A"),
      d(2),
      E(e.lead_source || "N/A"),
      d(2),
      E(e.lname || "N/A"),
      d(2),
      E(e.mobile || "N/A");
  }
}
function rx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "li", 44)(1, "button", 45),
      O("click", function () {
        let n = w(e).$implicit,
          o = _(2);
        return D(o.goToLeadPage(n));
      }),
      c(2),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(2);
    X("active", e === t.currentPage)("disabled", t.totalLeads === 0),
      d(),
      g("disabled", t.totalLeads === 0),
      d(),
      K(" ", e, " ");
  }
}
function ox(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(
      5,
      "th",
      49
    ),
      c(6, "Sr No"),
      s(),
      a(7, "th", 49),
      c(8, "Lead"),
      R(9, "br"),
      c(10, " Code"),
      s(),
      a(11, "th", 49),
      c(12, "Dealer "),
      R(13, "br"),
      c(14, "Name"),
      s(),
      a(15, "th", 49),
      c(16, "Status"),
      s(),
      a(17, "th", 49),
      c(18, "Purchase "),
      R(19, "br"),
      c(20, " Type"),
      s(),
      a(21, "th", 49),
      c(22, "Type"),
      s(),
      a(23, "th", 49),
      c(24, "Sub "),
      R(25, "br"),
      c(26, "Type"),
      s(),
      a(27, "th", 49),
      c(28, "Brand"),
      s(),
      a(29, "th", 49),
      c(30, "PMI"),
      s(),
      a(31, "th", 49),
      c(32, "Lead"),
      R(33, "br"),
      c(34, " Source"),
      s(),
      a(35, "th", 49),
      c(36, "Last"),
      R(37, "br"),
      c(38, " Name"),
      s(),
      a(39, "th", 49),
      c(40, "Mobile"),
      s()()(),
      a(41, "tbody"),
      M(42, ix, 4, 0, "tr", 50)(43, nx, 25, 12, "tr", 56),
      s()()(),
      a(44, "div", 38)(45, "div", 39)(46, "p", 40),
      c(47),
      s()(),
      a(48, "div", 39)(49, "nav", 42)(50, "ul", 43)(51, "li", 44)(
        52,
        "button",
        45
      ),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.goToPreviousLeadPage());
      }),
      c(53, " Previous "),
      s()(),
      M(54, rx, 3, 6, "li", 46),
      a(55, "li", 44)(56, "button", 45),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.goToNextLeadPage());
      }),
      c(57, " Next "),
      s()()()()()()();
  }
  if (r & 2) {
    let e = _();
    d(42),
      g("ngIf", !e.paginatedLeads || e.paginatedLeads.length === 0),
      d(),
      g("ngForOf", e.paginatedLeads),
      d(4),
      oi(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalLeads,
        " entries "
      ),
      d(4),
      X("disabled", e.currentPage === 1 || e.totalLeads === 0),
      d(),
      g("disabled", e.currentPage === 1 || e.totalLeads === 0),
      d(2),
      g("ngForOf", e.visiblePageNumbers),
      d(),
      X("disabled", e.currentPage === e.totalPages || e.totalLeads === 0),
      d(),
      g("disabled", e.currentPage === e.totalPages || e.totalLeads === 0);
  }
}
function ax(r, i) {
  r & 1 &&
    (a(0, "tr")(1, "td", 57)(2, "p", 53), c(3, " No Users Found "), s()()());
}
function sx(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr", 49)(1, "td"),
      c(2),
      s(),
      a(3, "td"),
      c(4),
      s(),
      a(5, "td"),
      c(6),
      s(),
      a(7, "td"),
      c(8),
      s(),
      a(9, "td"),
      c(10),
      s(),
      a(11, "td"),
      c(12),
      s(),
      a(13, "td"),
      c(14),
      s(),
      a(15, "td"),
      c(16),
      s(),
      a(17, "td"),
      c(18),
      s(),
      a(19, "td"),
      c(20),
      s(),
      a(21, "td"),
      c(22),
      s(),
      a(23, "td"),
      c(24),
      s(),
      a(25, "td"),
      c(26),
      s()()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      n = _(2);
    d(2),
      E((n.currentOpportunityPage - 1) * n.opportunityItemsPerPage + t + 1),
      d(2),
      K(" ", e.opportunity_name, " "),
      d(2),
      K(" ", e.stage, " "),
      d(2),
      K(" ", e.opportunity_record_type, " "),
      d(2),
      K(" ", e.account_name, " "),
      d(2),
      K(" ", e.close_date, " "),
      d(2),
      K(" ", e.VIN, " "),
      d(2),
      K(" ", e.purchase_type, " "),
      d(2),
      K(" ", e.type, " "),
      d(2),
      K(" ", e.sub_type, " "),
      d(2),
      K(" ", e.brand, " "),
      d(2),
      K(" ", e.PMI, " "),
      d(2),
      K(" ", e.description, " ");
  }
}
function lx(r, i) {
  if ((r & 1 && (a(0, "p", 40), c(1), s()), r & 2)) {
    let e = _(2);
    d(),
      oi(
        " Showing ",
        (e.currentOpportunityPage - 1) * e.opportunityItemsPerPage + 1,
        " \u2013 ",
        e.getOpportunityRangeEnd(),
        " of ",
        e.totalOpportunities,
        " entries "
      );
  }
}
function cx(r, i) {
  r & 1 && (a(0, "p", 40), c(1, " No entries available "), s());
}
function dx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "li", 44)(1, "button", 45),
      O("click", function () {
        let n = w(e).$implicit,
          o = _(2);
        return D(o.goToOpportunityPage(n));
      }),
      c(2),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(2);
    X("active", e === t.currentOpportunityPage)(
      "disabled",
      t.totalOpportunities === 0
    ),
      d(),
      g("disabled", t.totalOpportunities === 0),
      d(),
      K(" ", e, " ");
  }
}
function px(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
      5,
      "th"
    ),
      c(6, "Sr No"),
      s(),
      a(7, "th"),
      c(8, "Opportunity "),
      R(9, "br"),
      c(10, "Name"),
      s(),
      a(11, "th"),
      c(12, "stage"),
      s(),
      a(13, "th"),
      c(14, "Opportunities "),
      R(15, "br"),
      c(16, "Record"),
      s(),
      a(17, "th"),
      c(18, "account"),
      R(19, "br"),
      c(20, " Name"),
      s(),
      a(21, "th"),
      c(22, "close "),
      R(23, "br"),
      c(24, "Date"),
      s(),
      a(25, "th"),
      c(26, "Opportunity "),
      R(27, "br"),
      c(28, "Currency"),
      s(),
      a(29, "th"),
      c(30, "VIN"),
      s(),
      a(31, "th"),
      c(32, "Purchase"),
      R(33, "br"),
      c(34, " Type"),
      s(),
      a(35, "th"),
      c(36, "Sub"),
      R(37, "br"),
      c(38, " Type"),
      s(),
      a(39, "th"),
      c(40, "Brand"),
      s(),
      a(41, "th"),
      c(42, "PMI"),
      s()()(),
      a(43, "tbody"),
      M(44, ax, 4, 0, "tr", 50)(45, sx, 27, 13, "tr", 58),
      s()()(),
      a(46, "div", 38)(47, "div", 39),
      M(48, lx, 2, 3, "p", 59)(49, cx, 2, 0, "p", 59),
      s(),
      a(50, "div", 39)(51, "nav", 42)(52, "ul", 43)(53, "li", 44)(
        54,
        "button",
        45
      ),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.goToPreviousOpportunityPage());
      }),
      c(55, " Previous "),
      s()(),
      M(56, dx, 3, 6, "li", 46),
      a(57, "li", 44)(58, "button", 45),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.goToNextOpportunityPage());
      }),
      c(59, " Next "),
      s()()()()()()();
  }
  if (r & 2) {
    let e = _();
    d(44),
      g("ngIf", !e.OpportunityList || e.OpportunityList.length === 0),
      d(),
      g("ngForOf", e.paginatedOpportunities),
      d(3),
      g("ngIf", e.totalOpportunities > 0),
      d(),
      g("ngIf", e.totalOpportunities === 0),
      d(4),
      X(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      d(),
      g(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      d(2),
      g("ngForOf", e.visibleOpportunityPageNumbers),
      d(),
      X(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      ),
      d(),
      g(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      );
  }
}
function ux(r, i) {
  r & 1 &&
    (a(0, "tr")(1, "td", 57)(2, "p", 53), c(3, " No Users Found "), s()()());
}
function hx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "tr", 49)(1, "td"),
      c(2),
      s(),
      a(3, "td"),
      c(4),
      s(),
      a(5, "td"),
      c(6),
      s(),
      a(7, "td"),
      c(8),
      s(),
      a(9, "td"),
      c(10),
      s(),
      a(11, "td"),
      c(12),
      s(),
      a(13, "td"),
      c(14),
      s(),
      a(15, "td"),
      c(16),
      s(),
      a(17, "td"),
      c(18),
      s(),
      a(19, "td"),
      c(20),
      s(),
      a(21, "td")(22, "a", 60),
      O("click", function () {
        let n = w(e).$implicit;
        return D(n.task_id);
      }),
      a(23, "span", 61),
      R(24, "i", 62),
      s()()()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = i.index,
      n = _(2);
    d(2),
      E((n.currentTaskPage - 1) * n.taskItemsPerPage + t + 1),
      d(2),
      K(" ", e.subject, " "),
      d(2),
      K(" ", e.status, " "),
      d(2),
      K(" ", e.priority, " "),
      d(2),
      K(" ", e.assigned_to, " "),
      d(2),
      K(" ", e.due_date, " "),
      d(2),
      K(" ", e.comments, " "),
      d(2),
      K(" ", e.lead_name, " "),
      d(2),
      K(" ", e.lead_email, " "),
      d(2),
      K(" ", e.lead_code, " "),
      d(2),
      g("routerLink", ce(11, Y1, e.task_id));
  }
}
function mx(r, i) {
  if ((r & 1 && (a(0, "p", 40), c(1), s()), r & 2)) {
    let e = _(2);
    d(),
      oi(
        " Showing ",
        (e.currentTaskPage - 1) * e.taskItemsPerPage + 1,
        " \u2013 ",
        e.getTaskRangeEnd(),
        " of ",
        e.totalTasks,
        " entries "
      );
  }
}
function fx(r, i) {
  r & 1 && (a(0, "p", 40), c(1, " No entries available "), s());
}
function gx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "li", 44)(1, "button", 45),
      O("click", function () {
        let n = w(e).$implicit,
          o = _(2);
        return D(o.goToTaskPage(n));
      }),
      c(2),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(2);
    X("active", e === t.currentTaskPage)("disabled", t.totalTasks === 0),
      d(),
      g("disabled", t.totalTasks === 0),
      d(),
      K(" ", e, " ");
  }
}
function _x(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
      5,
      "th"
    ),
      c(6, "Sr No"),
      s(),
      a(7, "th"),
      c(8, "Subject"),
      s(),
      a(9, "th"),
      c(10, "Status"),
      s(),
      a(11, "th"),
      c(12, "Priority"),
      s(),
      a(13, "th"),
      c(14, "Assigned"),
      s(),
      a(15, "th"),
      c(16, "Due Date"),
      s(),
      a(17, "th"),
      c(18, "Comments"),
      s(),
      a(19, "th"),
      c(20, "Lead Name"),
      s(),
      a(21, "th"),
      c(22, "Actions"),
      s()()(),
      a(23, "tbody"),
      M(24, ux, 4, 0, "tr", 50)(25, hx, 25, 13, "tr", 58),
      s()()(),
      a(26, "div", 38)(27, "div", 39),
      M(28, mx, 2, 3, "p", 59)(29, fx, 2, 0, "p", 59),
      s(),
      a(30, "div", 39)(31, "nav", 42)(32, "ul", 43)(33, "li", 44)(
        34,
        "button",
        45
      ),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.goToPreviousTaskPage());
      }),
      c(35, " Previous "),
      s()(),
      M(36, gx, 3, 6, "li", 46),
      a(37, "li", 44)(38, "button", 45),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.goToNextTaskPage());
      }),
      c(39, " Next "),
      s()()()()()()();
  }
  if (r & 2) {
    let e = _();
    d(24),
      g("ngIf", !e.paginatedTasks || e.paginatedTasks.length === 0),
      d(),
      g("ngForOf", e.paginatedTasks),
      d(3),
      g("ngIf", e.totalTasks > 0),
      d(),
      g("ngIf", e.totalOpportunities === 0),
      d(4),
      X("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      d(),
      g("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      d(2),
      g("ngForOf", e.visibleOpportunityPageNumbers),
      d(),
      X(
        "disabled",
        e.currentTaskPage === e.totalTaskPages || e.totalTasks === 0
      ),
      d(),
      g(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalTasks === 0
      );
  }
}
function bx(r, i) {
  r & 1 &&
    (a(0, "tr")(1, "td", 57)(2, "p", 53), c(3, " No Events Found "), s()()());
}
function vx(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr", 49)(1, "td"),
      c(2),
      s(),
      a(3, "td"),
      c(4),
      s(),
      a(5, "td"),
      c(6),
      s(),
      a(7, "td"),
      c(8),
      s(),
      a(9, "td"),
      c(10),
      s(),
      a(11, "td"),
      c(12),
      s(),
      a(13, "td"),
      c(14),
      s(),
      a(15, "td"),
      c(16),
      s(),
      a(17, "td"),
      c(18),
      s()()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      n = _(2);
    d(2),
      E((n.currentEventPage - 1) * n.eventItemsPerPage + t + 1),
      d(2),
      E(e.subject),
      d(2),
      E(e.assigned_to),
      d(2),
      E(e.description),
      d(2),
      E(e.name),
      d(2),
      E(e.start_date),
      d(2),
      E(e.end_date),
      d(2),
      E(e.VIN),
      d(2),
      E(e.location);
  }
}
function xx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "li", 44)(1, "button", 65),
      O("click", function () {
        let n = w(e).$implicit,
          o = _(3);
        return D(o.goToEventPage(n));
      }),
      c(2),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(3);
    X("active", e === t.currentEventPage), d(2), K(" ", e, " ");
  }
}
function yx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 38)(1, "div", 39)(2, "p", 40),
      c(3),
      s()(),
      a(4, "div", 39)(5, "nav", 42)(6, "ul", 43)(7, "li", 44)(8, "button", 45),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.goToPreviousEventPage());
      }),
      c(9, " Previous "),
      s()(),
      M(10, xx, 3, 3, "li", 64),
      a(11, "li", 44)(12, "button", 45),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.goToNextEventPage());
      }),
      c(13, " Next "),
      s()()()()()();
  }
  if (r & 2) {
    let e = _(2);
    d(3),
      oi(
        " Showing ",
        (e.currentEventPage - 1) * e.eventItemsPerPage + 1,
        " \u2013 ",
        e.getEventsRangeEnd(),
        " of ",
        e.totalEvents,
        " entries "
      ),
      d(4),
      X("disabled", e.currentEventPage === 1),
      d(),
      g("disabled", e.currentEventPage === 1),
      d(2),
      g("ngForOf", e.visibleEventPageNumbers),
      d(),
      X("disabled", e.currentEventPage === e.totalEventPages),
      d(),
      g("disabled", e.currentEventPage === e.totalEventPages);
  }
}
function Cx(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
        5,
        "th"
      ),
      c(6, "Sr No"),
      s(),
      a(7, "th"),
      c(8, "Subject"),
      s(),
      a(9, "th"),
      c(10, "Assigned"),
      s(),
      a(11, "th"),
      c(12, "Description"),
      s(),
      a(13, "th"),
      c(14, "Account Name"),
      s(),
      a(15, "th"),
      c(16, "Start Date"),
      s(),
      a(17, "th"),
      c(18, "End Date"),
      s(),
      a(19, "th"),
      c(20, "VIN"),
      s(),
      a(21, "th"),
      c(22, "Locations"),
      s()()(),
      a(23, "tbody"),
      M(24, bx, 4, 0, "tr", 50)(25, vx, 19, 9, "tr", 58),
      s()()(),
      M(26, yx, 14, 10, "div", 63),
      s()),
    r & 2)
  ) {
    let e = _();
    d(24),
      g("ngIf", !e.EventList || e.EventList.length === 0),
      d(),
      g("ngForOf", e.paginatedEvents),
      d(),
      g("ngIf", e.EventList && e.EventList.length > 0);
  }
}
var So = class r {
  constructor(i, e, t, n, o) {
    this.route = i;
    this.http = e;
    this.location = t;
    this.cdr = n;
    this.zone = o;
  }
  UserList = [];
  loading = !1;
  leadList = [];
  TaskList = [];
  EventList = [];
  currentPage = 1;
  itemsPerPage = 10;
  currentEventPage = 1;
  eventItemsPerPage = 10;
  OpportunityList = pe([]);
  paginatedUsers = [];
  dealerData;
  masterSrv = te(je);
  showUsersTable = !0;
  showLeadsTable = !1;
  showOpportunityTable = !1;
  showTaskTable = !1;
  showEventTable = !1;
  visiblePageNumbers = [];
  dealer_name = "";
  toastr;
  user;
  apiService;
  paginatedLeads = [];
  opportunityItemsPerPage = 10;
  currentOpportunityPage = 1;
  paginatedOpportunities = [];
  visibleOpportunityPageNumbers = [];
  taskItemsPerPage = 10;
  currentTaskPage = 1;
  paginatedTasks = [];
  visibleTaskPageNumbers = [];
  ngOnInit() {
    console.log("ngOnInit is called"),
      this.handleQueryParams(),
      this.handleRouteData(),
      this.handleDealerId((i) => {
        this.getAllUser(i),
          this.getAllLeads(i),
          this.getAllTasks(i),
          this.getAllEvent(i),
          console.log("API Data:", ih.data),
          console.log("dealerData:", this.dealerData),
          console.log("Fetched UserList:", this.UserList);
      }),
      (this.currentPage = 1),
      this.paginateUsers(),
      this.updateVisiblePages(),
      (this.currentPage = 1),
      this.paginateLeads(),
      this.updateVisibleLeadPages();
  }
  dropdownService = te(en);
  selectedOption = this.dropdownService.getSelectedOption();
  handleSelectionChange(i) {
    let e = i.target.value;
    switch (
      (this.dropdownService.setSelectedOption(e),
      console.log("this is option", this.selectedOption()),
      e)
    ) {
      case "leads":
        console.log("dealerData:", this.dealerData),
          this.dealerData
            ? (this.getAllLeads(this.dealerData.data.dealer.dealer_id),
              this.toggleLeadsTable())
            : console.warn("lead data is not available.");
        break;
      case "users":
        this.dealerData
          ? (this.getAllUser(this.dealerData.data.dealer.dealer_id),
            this.toggleUsersTable())
          : console.warn("Dealer data is not available.");
        break;
      case "opportunities":
        console.log(this.dealerData),
          this.toggleOpportunityTable(),
          this.dealerData &&
            this.getAllOpp(this.dealerData.data.dealer.dealer_id);
        break;
      case "events":
        this.toggleEventTable(),
          this.dealerData &&
            this.getAllEvent(this.dealerData.data.dealer.dealer_id);
        break;
      case "tasks":
        this.toggleTasksTable(),
          this.dealerData &&
            this.getAllTasks(this.dealerData.data.dealer.dealer_id);
        break;
    }
  }
  get totalUsers() {
    return this.UserList?.length || 0;
  }
  get totalPages() {
    return Math.ceil(this.totalUsers / this.itemsPerPage);
  }
  paginateUsers() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedUsers = this.UserList.slice(i, e);
  }
  updateVisiblePages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalPages);
    this.visiblePageNumbers = [];
    for (let n = e; n <= t; n++) this.visiblePageNumbers.push(n);
  }
  hasDataForPage(i) {
    return (i - 1) * this.itemsPerPage < this.totalUsers;
  }
  goToPreviousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateUsers(), this.updateVisiblePages());
  }
  goToNextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateUsers(), this.updateVisiblePages());
  }
  goToPage(i) {
    (i - 1) * this.itemsPerPage >= this.totalUsers ||
      ((this.currentPage = i), this.paginateUsers(), this.updateVisiblePages());
  }
  get totalLeads() {
    return this.leadList?.length || 0;
  }
  get totalLeadPages() {
    return Math.ceil(this.totalLeads / this.itemsPerPage);
  }
  paginateLeads() {
    if (!this.leadList || this.leadList.length === 0) {
      this.paginatedLeads = [];
      return;
    }
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    (this.paginatedLeads = this.leadList.slice(i, e)),
      console.log(
        `Paginating Leads | Page: ${this.currentPage}, Showing: ${
          i + 1
        } to ${Math.min(e, this.leadList.length)} of ${this.leadList.length}`
      ),
      console.table(this.paginatedLeads);
  }
  updateVisibleLeadPages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalLeadPages);
    this.visiblePageNumbers = [];
    for (let n = e; n <= t; n++) this.visiblePageNumbers.push(n);
  }
  goToLeadPage(i) {
    (this.currentPage = i), this.paginateLeads(), this.updateVisibleLeadPages();
  }
  goToPreviousLeadPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  goToNextLeadPage() {
    this.currentPage < this.totalLeadPages &&
      (this.currentPage++, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  get totalOpportunities() {
    return this.OpportunityList?.length || 0;
  }
  get totalOpportunityPages() {
    return Math.ceil(this.totalOpportunities / this.opportunityItemsPerPage);
  }
  paginateOpportunities() {
    let i = (this.currentOpportunityPage - 1) * this.opportunityItemsPerPage,
      e = i + this.opportunityItemsPerPage,
      t = this.OpportunityList();
    this.paginatedOpportunities = t.slice(i, e);
  }
  getOpportunityRangeEnd() {
    let i = this.currentOpportunityPage * this.opportunityItemsPerPage;
    return i > this.totalOpportunities ? this.totalOpportunities : i;
  }
  updateVisibleOpportunityPages() {
    let e = Math.floor((this.currentOpportunityPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalOpportunityPages);
    this.visibleOpportunityPageNumbers = [];
    for (let n = e; n <= t; n++) this.visibleOpportunityPageNumbers.push(n);
  }
  goToOpportunityPage(i) {
    (this.currentOpportunityPage = i),
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages();
  }
  goToPreviousOpportunityPage() {
    this.currentOpportunityPage > 1 &&
      (this.currentOpportunityPage--,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  goToNextOpportunityPage() {
    this.currentOpportunityPage < this.totalOpportunityPages &&
      (this.currentOpportunityPage++,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  get totalTasks() {
    return this.TaskList?.length || 0;
  }
  get totalTaskPages() {
    return Math.ceil(this.totalTasks / this.taskItemsPerPage);
  }
  paginateTasks() {
    let i = (this.currentTaskPage - 1) * this.taskItemsPerPage,
      e = i + this.taskItemsPerPage;
    this.paginatedTasks = this.TaskList.slice(i, e);
  }
  getTaskRangeEnd() {
    let i = this.currentTaskPage * this.taskItemsPerPage;
    return i > this.totalTasks ? this.totalTasks : i;
  }
  updateVisibleTaskPages() {
    let e = Math.floor((this.currentTaskPage - 1) / 3) * 3 + 1,
      t = Math.min(e + 3 - 1, this.totalTaskPages);
    this.visibleTaskPageNumbers = [];
    for (let n = e; n <= t; n++) this.visibleTaskPageNumbers.push(n);
  }
  goToPreviousTaskPage() {
    this.currentTaskPage > 1 &&
      (this.currentTaskPage--,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToNextTaskPage() {
    this.currentTaskPage < this.totalTaskPages &&
      (this.currentTaskPage++,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToTaskPage(i) {
    (this.currentTaskPage = i),
      this.paginateTasks(),
      this.updateVisibleTaskPages();
  }
  getRangeEnd() {
    return Math.min(this.currentPage * this.itemsPerPage, this.totalUsers);
  }
  get totalEvents() {
    return this.EventList ? this.EventList.length : 0;
  }
  get paginatedEvents() {
    if (!this.EventList || this.EventList.length === 0) return [];
    let i = (this.currentEventPage - 1) * this.eventItemsPerPage,
      e = i + this.eventItemsPerPage;
    return this.EventList.slice(i, e);
  }
  get totalEventPages() {
    return Math.ceil(this.totalEvents / this.eventItemsPerPage);
  }
  getEventsRangeEnd() {
    let i = this.currentEventPage * this.eventItemsPerPage;
    return i > this.totalEvents ? this.totalEvents : i;
  }
  get visibleEventPageNumbers() {
    let i = this.totalEventPages,
      e = this.currentEventPage,
      t = 5,
      n = Math.floor(t / 2);
    if (i === 0) return [];
    let o = Math.max(1, e - n),
      u = Math.min(i, o + t - 1);
    u - o < t - 1 && (o = Math.max(1, u - t + 1));
    let b = [];
    for (let C = o; C <= u; C++) b.push(C);
    return b;
  }
  goToPreviousEventPage() {
    this.currentEventPage > 1 && this.currentEventPage--;
  }
  goToNextEventPage() {
    this.currentEventPage < this.totalEventPages && this.currentEventPage++;
  }
  goToEventPage(i) {
    i >= 1 && i <= this.totalEventPages && (this.currentEventPage = i);
  }
  toggleUsersTable() {
    (this.showLeadsTable = !1),
      (this.showUsersTable = !0),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleTasksTable() {
    (this.showTaskTable = !0),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showOpportunityTable = !1),
      (this.showEventTable = !1);
  }
  toggleLeadsTable() {
    (this.showLeadsTable = !0),
      (this.showUsersTable = !1),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleOpportunityTable() {
    (this.showOpportunityTable = !0),
      (this.showEventTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  toggleEventTable() {
    (this.showEventTable = !0),
      (this.showOpportunityTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  ngAfterViewInit() {
    console.log("ngOnInit is called"),
      console.log("hello"),
      console.log(typeof $.fn.DataTable),
      this.initializeDataTable();
  }
  initializeDataTable() {
    setTimeout(() => {
      let i = $("#example5").DataTable();
      i && i.destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 100);
  }
  handleQueryParams() {
    this.route.queryParams.subscribe((i) => {
      (this.dealer_name = i.dealer_name),
        console.log("Dealer Name : ", this.dealer_name);
    });
  }
  handleRouteData() {
    this.route.data.subscribe((i) => {
      if (((this.dealerData = i.dealerData), this.dealerData)) {
        let e = this.dealerData.data.dealer.dealer_id;
        this.getAllUser(e);
      } else console.log("Dealer Data not available from resolver");
    });
  }
  handleDealerId(i) {
    this.route.paramMap.subscribe((e) => {
      let t = e.get("dealer_id");
      t
        ? i(t)
        : this.dealerData ||
          console.error("Dealer ID not found in the URL and no resolver data.");
    });
  }
  getAllUser(i) {
    console.log("Calling API with dealerId:", i),
      this.masterSrv.getAllUser(i).subscribe({
        next: (e) => {
          console.log("\u2705 Full API Response:", e),
            console.log("Fetched Users:", e.data),
            e.data && Array.isArray(e.data) && e.data.length > 0
              ? ((this.UserList = e.data),
                (this.currentPage = 1),
                this.paginateUsers(),
                this.updateVisiblePages(),
                console.log("Users List:", this.UserList),
                (this.loading = !1))
              : (console.warn("No users found"),
                (this.UserList = []),
                this.paginateUsers(),
                this.updateVisiblePages()),
            this.zone.run(() => {
              Array.isArray(this.UserList)
                ? (console.log("\u2705 Assigned UserList:", this.UserList),
                  this.cdr.detectChanges(),
                  setTimeout(() => {
                    this.initializeDataTable();
                  }, 500))
                : (console.warn("\u26A0\uFE0F Invalid API Response Format:", e),
                  (this.UserList = []));
            });
        },
        error: (e) => {
          console.error("\u274C API Error:", e),
            (this.UserList = []),
            this.paginateUsers(),
            this.updateVisiblePages(),
            this.cdr.detectChanges();
        },
      });
  }
  reinitializeDataTable() {
    setTimeout(() => {
      $("#example5").DataTable().clear().destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 200);
  }
  getAllLeads(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllLead(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.leadList = e.data),
              console.log("Leads List:", this.leadList),
              (this.currentPage = 1),
              this.paginateLeads(),
              this.updateVisibleLeadPages())
            : (console.warn("No leads found"),
              (this.leadList = []),
              (this.paginatedLeads = []),
              (this.visiblePageNumbers = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e),
          (this.leadList = []),
          (this.paginatedLeads = []),
          (this.visiblePageNumbers = []);
      },
    });
  }
  getAllEvent(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getEventsAll(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.EventList = e.data),
              console.log("Event List:", this.EventList))
            : (console.warn("No events found"), (this.EventList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.EventList = []);
      },
    });
  }
  getAllTasks(i) {
    if ((console.log("Calling API with dealerId for leads:", i), !i)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllTask(i).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.TaskList = e.data),
              console.log("Task List:", this.TaskList))
            : (console.warn("No tasks found"), (this.TaskList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.TaskList = []);
      },
    });
  }
  getAllOpp(i) {
    this.masterSrv.getAllOpportunities(i).subscribe({
      next: (e) => {
        this.OpportunityList.set(e), console.log("Leads data fetched:", e);
      },
      error: (e) => {
        alert(e.message || "An error occurred while fetching leads.");
      },
    });
  }
  router = te(Lt);
  logUserId(i) {
    console.log("Navigating to user with ID:", i),
      this.dealerData?.data.dealer?.dealer_id
        ? localStorage.setItem(
            "previousRoute",
            this.dealerData.data.dealer.dealer_id
          )
        : console.warn("dealer_id is missing, previousRoute not stored.");
  }
  static ɵfac = function (e) {
    return new (e || r)(F(Mi), F(St), F(Ko), F(qe), F(Ie));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-single-dealer"]],
    standalone: !0,
    features: [le],
    decls: 46,
    vars: 11,
    consts: [
      ["noEntries", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [2, "cursor", "auto", "color", "#222fb9", 3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [2, "font-weight", "700 !important", "color", "black"],
      [
        "class",
        "col-xl-9",
        "style",
        `
        margin-top: 2em !important;
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
      `,
        4,
        "ngIf",
      ],
      [
        1,
        "col-xl-9",
        2,
        "margin-top",
        "2em !important",
        "display",
        "flex",
        "justify-content",
        "space-between",
        "align-items",
        "center",
        "width",
        "100%",
      ],
      [1, "card"],
      [
        1,
        "card-body",
        "py-9",
        "py-md-2",
        2,
        "margin-left",
        "0.2rem !important",
      ],
      [1, "row", "align-items-start"],
      [1, "mb-md-0"],
      [1, "media", "align-items-end"],
      [1, "media-body"],
      [
        1,
        "mb-0",
        2,
        "background-color",
        "none",
        "text-transform",
        "capitalize",
      ],
      [1, "form-group", 2, "margin-inline", "1em"],
      [1, "form-control", "form-control-lg", 3, "change", "value"],
      ["selected", "", "value", "users", 1, "drop"],
      ["value", "leads", 1, "drop"],
      ["value", "opportunities", 1, "drop"],
      ["value", "tasks", 1, "drop"],
      ["value", "events", 1, "drop"],
      [1, "row"],
      [1, "col-lg-12"],
      ["class", "p-3 bg-white rounded shadow-sm", 4, "ngIf"],
      [1, "media", "align-items-center"],
      [1, "media-body", "ml-1"],
      [1, "mb-0", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-22"],
      [1, "span"],
      [1, "media", "align-items-center", 3, "click"],
      [1, "media-body", "ml-1", 3, "click"],
      [1, "p-3", "bg-white", "rounded", "shadow-sm"],
      ["class", "table-responsive", 4, "ngIf"],
      [1, "row", "align-items-center", "mt-3"],
      [1, "col-md-6"],
      [1, "mb-0", "text-muted"],
      [4, "ngIf", "ngIfElse"],
      ["aria-label", "Page navigation"],
      [1, "pagination", "justify-content-end", "mb-0"],
      [1, "page-item"],
      [1, "page-link", 3, "click", "disabled"],
      ["class", "page-item", 3, "active", "disabled", 4, "ngFor", "ngForOf"],
      [1, "table-responsive"],
      [
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      ["colspan", "7"],
      [2, "color", "#555", "font-weight", "500", "text-align", "center"],
      [1, "table-responsive", 2, "overflow-x", "auto", "width", "100%"],
      [1, "table", "mb-4", "dataTablesCard", "fs-14"],
      ["style", "text-align: left;", 4, "ngFor", "ngForOf"],
      ["colspan", "12"],
      ["style", "text-align:left", 4, "ngFor", "ngForOf"],
      ["class", "mb-0 text-muted", 4, "ngIf"],
      [3, "click", "routerLink"],
      [1, ""],
      [1, "fa", "fa-eye"],
      ["class", "row align-items-center mt-3", 4, "ngIf"],
      ["class", "page-item", 3, "active", 4, "ngFor", "ngForOf"],
      [1, "page-link", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        c(6, "Users"),
        s()(),
        a(7, "li", 5)(8, "a", 7),
        c(9, "Dealer"),
        s()(),
        a(10, "li", 8)(11, "a", 9),
        c(12),
        s()()()(),
        M(13, q1, 54, 7, "div", 10),
        a(14, "div", 11)(15, "div", 12)(16, "div", 13)(17, "div", 14)(
          18,
          "div",
          15
        )(19, "div", 16)(20, "div", 17)(21, "h3", 18),
        c(22),
        s()()()()()()(),
        a(23, "div", 19)(24, "select", 20),
        O("change", function (o) {
          return t.handleSelectionChange(o);
        }),
        a(25, "option", 21),
        c(26, "Users"),
        s(),
        a(27, "option", 22),
        c(28, "Leads"),
        s(),
        a(29, "option", 23),
        c(30, "Opportunities"),
        s(),
        a(31, "option", 24),
        c(32, "Tasks"),
        s(),
        a(33, "option", 25),
        c(34, "Events"),
        s()()()(),
        a(35, "div", 26)(36, "div", 27),
        M(37, tx, 18, 10, "div", 28),
        a(38, "div", 27),
        M(39, ox, 58, 12, "div", 28),
        s(),
        a(40, "div", 27),
        M(41, px, 60, 11, "div", 28),
        a(42, "div", 27),
        M(43, _x, 40, 11, "div", 28),
        a(44, "div", 27),
        M(45, Cx, 27, 3, "div", 28),
        s()()()()()()()),
        e & 2 &&
          (d(8),
          g("routerLink", Ut(10, G1)),
          d(4),
          K(
            "",
            t.dealerData == null ||
              t.dealerData.data == null ||
              t.dealerData.data.dealer == null
              ? null
              : t.dealerData.data.dealer.dealer_name,
            " "
          ),
          d(),
          g("ngIf", t.dealerData),
          d(9),
          K(" ", t.selectedOption(), " "),
          d(2),
          g("value", t.selectedOption()),
          d(13),
          g("ngIf", t.selectedOption() === "users"),
          d(2),
          g("ngIf", t.selectedOption() === "leads"),
          d(2),
          g("ngIf", t.selectedOption() === "opportunities"),
          d(2),
          g("ngIf", t.selectedOption() === "tasks"),
          d(2),
          g("ngIf", t.selectedOption() === "events"));
    },
    dependencies: [Ge, At, Ft, De, gt, Be, Kt, Bt],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{flex-grow:1}.custom-scroll-wrapper[_ngcontent-%COMP%]{overflow-x:auto;display:block;width:100%}.table-scroll-container[_ngcontent-%COMP%]{overflow-x:auto;width:100%}.table-wrapper[_ngcontent-%COMP%]{border:1px solid #ccc;border-radius:20px;background-color:#fff}.bg-white[_ngcontent-%COMP%]{background-color:#fff!important}.shadow-sm[_ngcontent-%COMP%]{box-shadow:0 .125rem .25rem #00000013}.rounded[_ngcontent-%COMP%]{border-radius:.5rem}.table-responsive[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}",
    ],
  });
};
var wx = ["inputElement"];
function Dx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "form", null, 0),
      R(2, "img", 9),
      a(3, "h2", 10),
      c(4, "Login to Smart Assist"),
      s(),
      a(5, "div", 11)(6, "div", 12),
      R(7, "i", 13),
      s(),
      a(8, "div", 14)(9, "input", 15),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.loginObj.email, n) || (o.loginObj.email = n), D(n);
      }),
      s(),
      a(10, "label", 16),
      c(11, "Email"),
      s()()(),
      a(12, "div", 17)(13, "div", 12),
      R(14, "i", 18),
      s(),
      a(15, "div", 14)(16, "input", 19, 1),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.loginObj.password, n) || (o.loginObj.password = n), D(n);
      }),
      s(),
      a(18, "label", 20),
      c(19, "Password"),
      s(),
      a(20, "i", 21),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.togglePassword("password"));
      }),
      s()()(),
      a(21, "a", 22),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.showVerifyEmail());
      }),
      c(22, "Forgot Password?"),
      s(),
      a(23, "input", 23),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.onLogin());
      }),
      s()();
  }
  if (r & 2) {
    let e = _();
    d(9),
      Ze("ngModel", e.loginObj.email),
      d(7),
      Ze("ngModel", e.loginObj.password),
      g("type", e.showPassword ? "text" : "password"),
      d(4),
      Fe(
        "icon11 absolute right-8 top-1/2 transform -translate-y-1/2 cursor-pointer " +
          (e.showPassword ? "fas fa-eye-slash eye" : "fas fa-eye eye")
      );
  }
}
function Sx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "form", null, 2)(2, "div", 24),
      R(3, "img", 9),
      s(),
      a(4, "h2", 10),
      c(5, " Verify Email "),
      s(),
      a(6, "div", 25)(7, "div", 12),
      R(8, "i", 26),
      s(),
      a(9, "div", 14)(10, "input", 27, 3),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.verifyObj.email, n) || (o.verifyObj.email = n), D(n);
      }),
      s(),
      a(12, "label", 28),
      c(13, "Verify Email"),
      s()()(),
      a(14, "a", 29),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.backToLogin());
      }),
      c(15, "Back to Login"),
      s(),
      a(16, "input", 30),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.onVerifyEmail());
      }),
      s()();
  }
  if (r & 2) {
    let e = _();
    d(10), Ze("ngModel", e.verifyObj.email);
  }
}
function Mx(r, i) {
  if ((r & 1 && (a(0, "div", 39), c(1), s()), r & 2)) {
    let e = _(2);
    d(), K(" Time remaining: ", e.countdown, "s ");
  }
}
function Ox(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "a", 40),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.onVerifyEmail());
      }),
      c(1, "Resend OTP"),
      s();
  }
}
function Tx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "form", null, 4)(2, "div", 24),
      R(3, "img", 9),
      s(),
      a(4, "h2", 10),
      c(5, " Verify OTP "),
      s(),
      M(6, Mx, 2, 1, "div", 31),
      a(7, "div", 11)(8, "div", 12),
      R(9, "i", 32),
      s(),
      a(10, "div", 33)(11, "input", 34, 5),
      O("input", function (n) {
        w(e);
        let o = _();
        return D(o.onOtpInput(n));
      }),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.loginObj.otp, n) || (o.loginObj.otp = n), D(n);
      }),
      s()()(),
      a(13, "div", 35)(14, "a", 36),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.backToLogin());
      }),
      c(15, "Back to Login"),
      s(),
      M(16, Ox, 2, 0, "a", 37),
      s(),
      a(17, "input", 38),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.onVerifyOtp());
      }),
      s()();
  }
  if (r & 2) {
    let e = rt(1),
      t = _();
    d(6),
      g("ngIf", t.countdown > 0),
      d(5),
      Ze("ngModel", t.loginObj.otp),
      d(5),
      g("ngIf", t.countdown === 0),
      d(),
      g("disabled", e.invalid);
  }
}
function kx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "form")(1, "h2", 41),
      c(2, "Set New Password"),
      s(),
      a(3, "div", 17)(4, "div", 12),
      R(5, "i", 18),
      s(),
      a(6, "div", 14)(7, "input", 42),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.loginObj.newPwd, n) || (o.loginObj.newPwd = n), D(n);
      }),
      s(),
      a(8, "label", 28),
      c(9, "New Password"),
      s(),
      a(10, "i", 43),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.togglePassword("password"));
      }),
      s()()(),
      a(11, "div", 17)(12, "div", 44),
      R(13, "i", 18),
      s(),
      a(14, "div", 14)(15, "input", 45),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return (
          Xe(o.loginObj.confirmPassword, n) || (o.loginObj.confirmPassword = n),
          D(n)
        );
      }),
      s(),
      a(16, "label", 28),
      c(17, "Confirm Password"),
      s(),
      a(18, "i", 43),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.togglePassword("confirmPassword"));
      }),
      s()()(),
      a(19, "div", 46)(20, "a", 36),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.backToLogin());
      }),
      c(21, "Back to Login"),
      s()(),
      a(22, "input", 47),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.onSetNewPassword());
      }),
      s()();
  }
  if (r & 2) {
    let e = _();
    d(7),
      Ze("ngModel", e.loginObj.newPwd),
      g("type", e.showPassword ? "text" : "password"),
      d(3),
      Fe(e.showPassword ? "fas fa-eye-slash" : "fas fa-eye"),
      d(5),
      Ze("ngModel", e.loginObj.confirmPassword),
      g("type", e.showConfirmPassword ? "text" : "password"),
      d(3),
      Fe(e.showConfirmPassword ? "fas fa-eye-slash" : "fas fa-eye");
  }
}
var Mo = class r {
  inputElements;
  loginObj = {
    email: "",
    password: "",
    otp: 0,
    confirmPassword: "",
    newPwd: "",
  };
  verifyObj = { email: "" };
  currentStep = "login";
  showPassword = !1;
  showConfirmPassword = !1;
  countdown = 0;
  countdownInterval;
  API_BASE_URL = "https://uat.smartassistapp.in/api/";
  SESSION_TIMEOUT = 60 * 60 * 1e3;
  http = te(St);
  router = te(Lt);
  toastr = te(Ht);
  renderer = te(Jt);
  constructor() {}
  ngAfterViewInit() {
    this.inputElements &&
      this.inputElements.toArray().forEach((i) => {
        this.renderer.listen(
          i.nativeElement,
          "focus",
          this.addClass.bind(this)
        ),
          this.renderer.listen(
            i.nativeElement,
            "blur",
            this.removeClass.bind(this)
          );
      });
  }
  showVerifyEmail() {
    (this.currentStep = "verifyEmail"), this.resetFormExceptEmail();
  }
  showVerifyOtp() {
    this.currentStep = "verifyOtp";
  }
  showNewPassword() {
    this.currentStep = "newPassword";
  }
  backToLogin() {
    (this.currentStep = "login"),
      window.location.reload(),
      this.resetForm(),
      this.countdownInterval && clearInterval(this.countdownInterval);
  }
  resetForm() {
    this.loginObj = {
      email: "",
      newPwd: "",
      otp: null,
      confirmPassword: "",
      password: "",
    };
  }
  resetFormExceptEmail() {
    let i = this.loginObj.email;
    this.resetForm(), (this.loginObj.email = i);
  }
  togglePassword(i) {
    if (i === "password") {
      this.showPassword = !this.showPassword;
      let e = document.getElementById("passwordInput");
      if (e && /iPad|iPhone|iPod/.test(navigator.userAgent)) {
        let t = e.parentElement;
        if (t) {
          let n = e.cloneNode(!0);
          (n.type = this.showPassword ? "text" : "password"),
            (n.value = e.value),
            t.replaceChild(n, e);
        }
      }
    } else this.showConfirmPassword = !this.showConfirmPassword;
  }
  validateLoginInput() {
    return !this.loginObj.email || !this.loginObj.password
      ? (this.toastr.error(
          "Please enter valid email and password",
          "Validation Error"
        ),
        !1)
      : this.isValidEmail(this.loginObj.email)
      ? !0
      : (this.toastr.error("Please enter a valid password", "Validation Error"),
        !1);
  }
  validateNewPassword() {
    return !this.loginObj.newPwd || !this.loginObj.confirmPassword
      ? (this.toastr.error("Please enter both passwords", "Validation Error"),
        !1)
      : this.loginObj.newPwd !== this.loginObj.confirmPassword
      ? (this.toastr.error("Passwords do not match", "Validation Error"), !1)
      : !0;
  }
  isValidEmail(i) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(i);
  }
  onLogin() {
    this.validateLoginInput() &&
      this.http
        .post(`${this.API_BASE_URL}login/super-admin`, this.loginObj)
        .subscribe({
          next: (i) => {
            i.status === 200 && i.data?.token
              ? this.handleSuccessfulLogin(i.data.token)
              : this.toastr.error(i.message || "Invalid credentials", "Error");
          },
          error: (i) => {
            console.error("Login error:", i);
            let e = i.error?.message || "An error occurred";
            this.toastr.error(e, "Error");
          },
        });
  }
  onVerifyEmail() {
    if (!this.verifyObj.email || !this.isValidEmail(this.verifyObj.email)) {
      this.toastr.error(
        "Please enter a valid email address",
        "Validation Error"
      );
      return;
    }
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-email`, {
        email: this.verifyObj.email,
      })
      .subscribe({
        next: () => {
          this.toastr.success("OTP sent to your email", "Success"),
            this.showVerifyOtp(),
            this.startCountdown();
        },
        error: (i) => {
          let e = i.error?.message || "An error occurred";
          this.toastr.error(e, "Error");
        },
      });
  }
  onVerifyOtp() {
    if (this.loginObj.otp === null || isNaN(Number(this.loginObj.otp))) {
      this.toastr.error("Please enter a valid OTP", "Validation Error");
      return;
    }
    let i = { otp: Number(this.loginObj.otp), email: this.verifyObj.email };
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-otp`, i)
      .subscribe({
        next: () => {
          this.toastr.success("OTP verified successfully", "Success"),
            this.showNewPassword();
        },
        error: (e) => {
          console.error("OTP verification error:", e);
          let t = e.error.error;
          this.toastr.error("Entered OTP is invalid");
        },
      });
  }
  onOtpInput(i) {
    let e = i.target,
      t = e.value.replace(/[^0-9]/g, "");
    (this.loginObj.otp = t ? Number(t) : 0), (e.value = t);
  }
  onSetNewPassword() {
    if (!this.validateNewPassword()) return;
    let i = {
      email: this.verifyObj.email,
      newPwd: this.loginObj.newPwd,
      confirmPwd: this.loginObj.confirmPassword,
    };
    this.http
      .put(`${this.API_BASE_URL}login/s-admin/forgot-pwd/new-pwd`, i)
      .subscribe({
        next: (e) => {
          this.toastr.success("Password reset successfully", "Success"),
            window.location.reload(),
            this.backToLogin();
        },
        error: (e) => {
          if ((console.error("Password reset error:", e), e.status === 400))
            this.toastr.error(
              "Invalid request. Please check your inputs.",
              "Error"
            );
          else if (e.status === 404)
            this.toastr.error("User not found", "Error");
          else {
            let t = e.error.error;
            this.toastr.error(t, "Error");
          }
        },
        complete: () => {
          (this.loginObj.newPwd = ""), (this.loginObj.confirmPassword = "");
        },
      });
  }
  handleSuccessfulLogin(i) {
    console.log("Storing token in localStorage:", i),
      localStorage.setItem("token", i),
      console.log("Navigating to /admin/dashboard..."),
      this.router
        .navigate(["/Admin/dashboard"])
        .then(() => {
          window.location.reload(),
            console.log("Navigation successful."),
            this.toastr.success("Login Successful", "Success");
        })
        .catch((e) => {
          console.error("Navigation error:", e),
            this.toastr.error("Failed to navigate to dashboard", "Error");
        }),
      console.log("Setting up auto logout...");
  }
  startCountdown() {
    (this.countdown = 5 * 60),
      this.countdownInterval && clearInterval(this.countdownInterval),
      (this.countdownInterval = setInterval(() => {
        this.countdown--,
          this.countdown === 0 && clearInterval(this.countdownInterval);
      }, 1e3));
  }
  addClass(i) {
    let e = i.target.parentNode?.parentNode;
    e && e.classList.add("focus");
  }
  removeClass(i) {
    let e = i.target.parentNode?.parentNode;
    e && i.target.value === "" && e.classList.remove("focus");
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-login-1"]],
    viewQuery: function (e, t) {
      if ((e & 1 && at(wx, 5), e & 2)) {
        let n;
        tt((n = it())) && (t.inputElements = n);
      }
    },
    standalone: !0,
    features: [le],
    decls: 6,
    vars: 4,
    consts: [
      ["loginForm", "ngForm"],
      ["inputElement", ""],
      ["verifyForm", "ngForm"],
      ["dealerEmail", "ngModel"],
      ["otpForm", "ngForm"],
      ["otp", "ngModel"],
      [1, "custom-container"],
      [1, "login-content"],
      [4, "ngIf"],
      [
        "src",
        "../../../assets/admin-img/jlr logo.svg",
        "alt",
        "Avatar Image",
        1,
        "mx-auto",
        "inline-flex",
        "items-center",
        "justify-center",
      ],
      [
        1,
        "title",
        2,
        "color",
        "#222fb9",
        "font-size",
        "20px",
        "text-transform",
        "capitalize",
        "margin-top",
        "15px",
      ],
      [1, "input-div", "one"],
      [1, "i", "mr-3"],
      [1, "fas", "fa-user"],
      [1, "div", "relative"],
      [
        "type",
        "text",
        "name",
        "username",
        "required",
        "",
        "placeholder",
        " ",
        1,
        "forms-control",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "floating-label", 2, "color", "grey", "font-size", "1.2rem"],
      [1, "input-div", "pass"],
      [1, "fas", "fa-lock"],
      [
        "id",
        "passwordInput",
        "name",
        "password",
        "required",
        "",
        "autocomplete",
        "off",
        "autocorrect",
        "off",
        "spellcheck",
        "false",
        "placeholder",
        " ",
        1,
        "inputt",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        2,
        "padding-left",
        "1px !important",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [1, "floating-label", 2, "color", "grey"],
      [3, "click"],
      ["href", "javascript:void(0)", 1, "forgot-password", 3, "click"],
      ["type", "submit", "value", "Login", 1, "btn", 3, "click"],
      [1, "flex", "justify-center"],
      [1, "input-div"],
      [1, "fas", "fa-envelope"],
      [
        "name",
        "dealer_email",
        "type",
        "email",
        "required",
        "",
        "email",
        "",
        "placeholder",
        " ",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "floating-label"],
      ["href", "javascript:void(0)", 1, "back-to-login", 3, "click"],
      ["type", "submit", "value", "Send OTP", 1, "btn", 3, "click"],
      ["class", "text-center mb-4", 4, "ngIf"],
      [1, "fas", "fa-key", "color"],
      [1, "relative", "z-0", "w-full", "mb-1", "group", "flex", "flex-col"],
      [
        "type",
        "text",
        "name",
        "otp",
        "required",
        "",
        "placeholder",
        "OTP",
        1,
        "",
        3,
        "input",
        "ngModelChange",
        "ngModel",
      ],
      [1, "flex", "justify-end", "text-end", "w-full"],
      [1, "back-to-login", 2, "cursor", "pointer", 3, "click"],
      [
        "style",
        "cursor: pointer",
        "class",
        "resend-otp",
        3,
        "click",
        4,
        "ngIf",
      ],
      [
        "type",
        "submit",
        "value",
        "Verify OTP",
        1,
        "btn",
        3,
        "click",
        "disabled",
      ],
      [1, "text-center", "mb-4"],
      [1, "resend-otp", 2, "cursor", "pointer", 3, "click"],
      [1, "title"],
      [
        "name",
        "password",
        "placeholder",
        " ",
        "required",
        "",
        1,
        "forms-control",
        "peer",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [
        1,
        "icon11",
        "absolute",
        "right-8",
        "top-1/2",
        "transform",
        "-translate-y-1/2",
        "cursor-pointer",
        3,
        "click",
      ],
      [1, "i"],
      [
        "name",
        "confirm-password",
        "placeholder",
        " ",
        "required",
        "",
        1,
        "forms-control",
        "peer",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [1, "flex", "justify-between", "w-full"],
      ["type", "submit", "value", "Reset Password", 1, "btn", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 6)(1, "div", 7),
        M(2, Dx, 24, 5, "form", 8)(3, Sx, 17, 1, "form", 8)(
          4,
          Tx,
          18,
          4,
          "form",
          8
        )(5, kx, 23, 8, "form", 8),
        s()()),
        e & 2 &&
          (d(2),
          g("ngIf", t.currentStep === "login"),
          d(),
          g("ngIf", t.currentStep === "verifyEmail"),
          d(),
          g("ngIf", t.currentStep === "verifyOtp"),
          d(),
          g("ngIf", t.currentStep === "newPassword"));
    },
    dependencies: [De, Be, Ge, Tn, Mt, It, si, fn, ll, Wt, al, Xo],
    styles: [
      '*[_ngcontent-%COMP%]{padding:0;margin:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;overflow:hidden}.inputt[_ngcontent-%COMP%]{width:90%!important}.fas[_ngcontent-%COMP%]{color:#3b86e9!important}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%;margin:0;padding:0}.wave[_ngcontent-%COMP%]{position:fixed;bottom:0;left:0;height:100%;z-index:-1}.container[_ngcontent-%COMP%]{width:100%;grid-gap:7rem;padding:0 2rem}.img[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center}.login-content[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;text-align:center;height:97vh}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:500px}form[_ngcontent-%COMP%]{width:360px}.login-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:15px 0;color:#333;text-transform:uppercase;font-size:2.9rem}.login-content[_ngcontent-%COMP%]   .input-div[_ngcontent-%COMP%]{position:relative;display:grid;grid-template-columns:7% 93%;margin:25px 0;padding:5px 0;border-bottom:2px solid #d9d9d9}.login-content[_ngcontent-%COMP%]   .input-div.one[_ngcontent-%COMP%]{margin-top:0}.i[_ngcontent-%COMP%]{color:#d9d9d9;display:flex;justify-content:center;align-items:center}.i[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{transition:.3s}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;height:45px}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{position:absolute;left:10px;top:50%;transform:translateY(-50%);color:#999;font-size:18px;transition:.3s}#pass[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{left:-15px!important}.input-div[_ngcontent-%COMP%]:before, .input-div[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-2px;width:0%;height:2px;background-color:#3b86e9;transition:.4s}.input-div[_ngcontent-%COMP%]:before{right:50%}.input-div[_ngcontent-%COMP%]:after{left:50%}.input-div.focus[_ngcontent-%COMP%]:before, .input-div.focus[_ngcontent-%COMP%]:after{width:50%}.input-div.focus[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{top:-5px;font-size:15px}input.forms-control[_ngcontent-%COMP%]{background-color:transparent!important;box-shadow:none!important;transition:background-color 5000s ease-in-out 0s}input[_ngcontent-%COMP%]:-webkit-autofill, input[_ngcontent-%COMP%]:-webkit-autofill:hover, input[_ngcontent-%COMP%]:-webkit-autofill:focus{box-shadow:none!important;color:#000!important;transition:background-color 5000s ease-in-out 0s}.fas[_ngcontent-%COMP%]{color:#222fb9!important}.input-div.focus[_ngcontent-%COMP%] > .i[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{color:#5298ee}.input-div[_ngcontent-%COMP%]   .focus[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{top:-5px;font-size:15px;color:#7e7e7e}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > input[_ngcontent-%COMP%]{position:absolute;left:0;top:0;width:100%;height:100%;outline:none;background:none;font-size:1.2rem;border:none;color:#555;font-family:poppins,sans-serif}.password-toggle[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);cursor:pointer;z-index:10}.width-input[_ngcontent-%COMP%]{width:90%!important}.icon11[_ngcontent-%COMP%]{margin-left:18em;margin-top:.7em}.password-toggle[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#999;font-size:16px}.password-toggle[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{color:#666}.input-div.pass[_ngcontent-%COMP%], .input-div.verify[_ngcontent-%COMP%]{margin-bottom:4px}a[_ngcontent-%COMP%]{display:block;text-align:right;text-decoration:none;color:#999;font-size:.9rem;transition:.3s}a[_ngcontent-%COMP%]:hover{color:#3b86e9}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#3b86e9,#5496e7,#5298ee);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}@media screen and (max-width: 1050px){.container[_ngcontent-%COMP%]{grid-gap:5rem}}@media screen and (max-width: 1000px){form[_ngcontent-%COMP%]{width:290px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2.4rem;margin:8px 0}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:400px}}@media screen and (max-width: 900px){.container[_ngcontent-%COMP%]{grid-template-columns:1fr}.img[_ngcontent-%COMP%], .wave[_ngcontent-%COMP%]{display:none}.login-content[_ngcontent-%COMP%]{justify-content:center}}.eye[_ngcontent-%COMP%]{color:#b9b8b8!important}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (min-width: 1024px) and (max-width: 1366px){.img[_ngcontent-%COMP%]{margin-top:-300px}}@media (min-width: 768px) and (max-width: 1023px){.login-content[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);margin-top:0;justify-content:center}}@media (max-width: 768px){.custom-container[_ngcontent-%COMP%]{margin-left:0!important}}input[type=password][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-decoration, input[type=password][_ngcontent-%COMP%]::-webkit-search-cancel-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-decoration{display:none!important}input[type=password][_ngcontent-%COMP%]{-moz-appearance:textfield}.new-custom[_ngcontent-%COMP%]{display:flex;justify-content:center}.div[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{position:absolute;top:12px;left:10px;font-size:16px;color:#9ca3af;pointer-events:none;transition:all .2s ease}.div[_ngcontent-%COMP%]   h5.floating[_ngcontent-%COMP%]{top:-10px;left:5px;font-size:12px;color:#3b86e9;background:#fff;padding:0 5px;z-index:10}.icon11[_ngcontent-%COMP%]{z-index:10;position:relative;pointer-events:auto;width:24px;height:24px;display:inline-flex;align-items:center;justify-content:center}input[_ngcontent-%COMP%]:focus + .floating-label[_ngcontent-%COMP%], input[_ngcontent-%COMP%]:not(:placeholder-shown) + .floating-label[_ngcontent-%COMP%]{color:#6b7280}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#222fb9);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}.btn[_ngcontent-%COMP%]:hover{background-position:right}.input-div[_ngcontent-%COMP%]{position:relative;margin-top:20px}.input-div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;padding:10px 5px;font-size:16px;border:none;border-bottom:1px solid #ccc;background:transparent}.input-div[_ngcontent-%COMP%]   label.floating-label[_ngcontent-%COMP%]{position:absolute;left:5px;top:10px;font-family:poppins,sans-serif;font-size:1.2rem;pointer-events:none;transition:.3s ease all}.forms-control[_ngcontent-%COMP%], .inputt[_ngcontent-%COMP%]{padding-top:1.5rem}.input-div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus ~ label.floating-label[_ngcontent-%COMP%], .input-div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:placeholder-shown) ~ label.floating-label[_ngcontent-%COMP%]{top:-15px;font-size:1.2rem;font-family:poppins,sans-serif}input[type=password][_ngcontent-%COMP%]{-webkit-text-security:disc!important}input[type=password][_ngcontent-%COMP%]::-ms-reveal, input[type=password][_ngcontent-%COMP%]::-ms-clear{display:none!important}input[type=password][_ngcontent-%COMP%]::-webkit-credentials-auto-fill-button, input[type=password][_ngcontent-%COMP%]::-webkit-password-toggle-button{display:none!important}',
    ],
  });
};
function Px(r, i) {
  if ((r & 1 && (a(0, "div", 12), c(1), s()), r & 2)) {
    let e = _().ngIf,
      t = _();
    d(), K(" ", t.getInitials(e.name), " ");
  }
}
function Ex(r, i) {
  if ((r & 1 && R(0, "img", 13), r & 2)) {
    let e = _(2);
    g("src", e.profileImageUrl, Ws);
  }
}
function Ix(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 6)(1, "div", 7),
      M(2, Px, 2, 1, "div", 8)(3, Ex, 1, 1, "ng-template", null, 0, lt),
      s(),
      a(5, "div", 9)(6, "h5", 10),
      c(7),
      s(),
      a(8, "p", 11),
      c(9),
      s()()()),
    r & 2)
  ) {
    let e = i.ngIf,
      t = rt(4),
      n = _();
    d(2),
      g("ngIf", !n.isCustomProfileImage())("ngIfElse", t),
      d(5),
      E(e.name),
      d(2),
      E(e.email);
  }
}
function Ax(r, i) {
  r & 1 && (a(0, "div", 14), c(1, " Loading profile details... "), s());
}
var qa = class r {
  constructor(i, e) {
    this.http = i;
    this.context = e;
  }
  masterSrv = te(je);
  profileImageUrl = "/assets/public/images/profile/default.png";
  profile = pe(null);
  ngOnInit() {
    this.context.onSideBarClick$.next({
      role: "profile",
      pageTitle: "Profile Management",
    }),
      this.getProfileData(),
      this.getProfileImage();
  }
  isCustomProfileImage() {
    return this.profileImageUrl !== "/assets/public/images/profile/default.png";
  }
  getProfileData() {
    this.masterSrv.getProfileData().subscribe({
      next: (i) => {
        console.log("Fetched Profile Data:", i), this.profile.set(i.data);
      },
      error: (i) => {
        console.error("Error fetching profile data:", i),
          alert("Failed to fetch profile data.");
      },
    });
  }
  getProfileImage() {
    this.http
      .get("https://uat.smartassistapp.in/api/superAdmin/show-profile")
      .subscribe({
        next: (i) => {
          console.log("Fetched Profile Image:", i),
            i?.status === 200 && i.data?.image_url
              ? (this.profileImageUrl = i.data.image_url)
              : (this.profileImageUrl =
                  "/assets/public/images/profile/default.png");
        },
        error: (i) => {
          console.error("Error fetching profile image:", i),
            (this.profileImageUrl =
              "/assets/public/images/profile/default.png");
        },
      });
  }
  getInitials(i) {
    let e = i.trim().split(" ");
    return e.length === 1
      ? e[0].charAt(0).toUpperCase()
      : (e[0].charAt(0) + e[e.length - 1].charAt(0)).toUpperCase();
  }
  static ɵfac = function (e) {
    return new (e || r)(F(St), F(en));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-profile"]],
    standalone: !0,
    features: [le],
    decls: 5,
    vars: 2,
    consts: [
      ["profilePic", ""],
      [1, "container-fluid"],
      [
        1,
        "d-flex",
        "justify-content-center",
        "align-items-center",
        2,
        "min-height",
        "80vh",
      ],
      [1, "card", "rounded-4", "p-4", 2, "width", "100%"],
      ["class", "row g-3 align-items-center", 4, "ngIf"],
      ["class", "text-muted text-center py-3", 4, "ngIf"],
      [1, "row", "g-3", "align-items-center"],
      [1, "col-auto"],
      ["class", "avatar-circle shadow-sm", 4, "ngIf", "ngIfElse"],
      [1, "col"],
      [1, "text-dark", "mb-1", 2, "font-size", "22px"],
      [1, "text-muted", "mb-2", 2, "font-size", "17px"],
      [1, "avatar-circle", "shadow-sm"],
      ["alt", "Profile Photo", 1, "avatar-img", "shadow-sm", 3, "src"],
      [1, "text-muted", "text-center", "py-3"],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 1)(1, "div", 2)(2, "div", 3),
        M(3, Ix, 10, 4, "div", 4)(4, Ax, 2, 0, "div", 5),
        s()()()),
        e & 2 && (d(3), g("ngIf", t.profile()), d(), g("ngIf", !t.profile()));
    },
    dependencies: [De, Be],
    styles: [
      ".avatar-circle[_ngcontent-%COMP%]{width:90px;height:90px;background-color:#dce3fa;color:#3b4cca;font-size:42px;font-weight:600;border-radius:50%;display:flex;align-items:center;justify-content:center;text-transform:uppercase}.avatar-img[_ngcontent-%COMP%]{width:80px;height:80px;border-radius:50%;object-fit:cover}",
    ],
  });
};
var Oo = class r {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.getDealerById(t) : bt(null);
  }
  static ɵfac = function (e) {
    return new (e || r)(ie(je));
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var To = class r {
  user_id;
  account_id;
  name;
  email;
  phone;
  user_role;
  password;
  otp_validated;
  otp;
  otp_expiration;
  corporate_id;
  dealer_code;
  dealer_id;
  role_id;
  role_name;
  team_id;
  team_name;
  fname;
  lname;
  team;
  role;
  constructor() {
    (this.user_id = ""),
      (this.account_id = ""),
      (this.name = ""),
      (this.phone = void 0),
      (this.email = ""),
      (this.user_role = ""),
      (this.password = ""),
      (this.otp_validated = ""),
      (this.otp = ""),
      (this.otp_expiration = ""),
      (this.dealer_code = void 0),
      (this.corporate_id = ""),
      (this.dealer_id = ""),
      (this.role_id = ""),
      (this.role_name = ""),
      (this.team_id = ""),
      (this.team_name = ""),
      (this.fname = ""),
      (this.lname = ""),
      (this.role = "");
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var nh = (() => {
  class r {
    static ɵfac = function (t) {
      return new (t || r)();
    };
    static ɵmod = be({ type: r });
    static ɵinj = _e({ imports: [De, zi, ai, zi] });
  }
  return r;
})();
var pE = new $e("RowDef"),
  uE = new $e("DatatableComponentToken");
var rh = (() => {
  class r {
    static forRoot(e) {
      return {
        ngModule: r,
        providers: [{ provide: "configuration", useValue: e }],
      };
    }
    static {
      this.ɵfac = function (t) {
        return new (t || r)();
      };
    }
    static {
      this.ɵmod = be({ type: r });
    }
    static {
      this.ɵinj = _e({});
    }
  }
  return r;
})();
var Nr = class r {
  confirmationSubject = new Ee();
  confirm(i) {
    let e = window.confirm(i);
    return (
      this.confirmationSubject.next(e), this.confirmationSubject.asObservable()
    );
  }
  showAlert(i, e) {
    let t = document.createElement("div");
    (t.className = `alert alert-${i} alert-dismissible fade show fixed-top m-3`),
      (t.innerHTML = `
      <span class="alert-icon">
        <svg viewBox="0 0 24 24" width="24" height="24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 11 12 14 22 4"></polyline>
        </svg>
      </span>
      <strong>${i.charAt(0).toUpperCase() + i.slice(1)}!</strong> ${e}
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span>&times;</span>
      </button>
    `),
      document.body.appendChild(t),
      setTimeout(() => {
        t.classList.remove("show"), t.remove();
      }, 1e3);
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var nr = (r) => ({ "is-invalid": r });
function Fx(r, i) {
  r & 1 && (a(0, "tr")(1, "td", 45), c(2, "No Users found"), s()());
}
function Rx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "tr")(1, "td"),
      c(2),
      s(),
      a(3, "td"),
      c(4),
      s(),
      a(5, "td"),
      c(6),
      s(),
      a(7, "td"),
      c(8),
      s(),
      a(9, "td", 46)(10, "a", 47),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.onEdit(n));
      }),
      R(11, "i", 48),
      s(),
      a(12, "a", 49),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.openDeleteModal(n));
      }),
      R(13, "i", 50),
      s()()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = i.index,
      n = _();
    d(2),
      E((n.currentPage - 1) * n.itemsPerPage + t + 1),
      d(2),
      E(e.name),
      d(2),
      E(e.email),
      d(2),
      E(e.user_role);
  }
}
function Vx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "li", 51)(1, "a", 41),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.goToPage(n));
      }),
      c(2),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _();
    X("active", e === t.currentPage), d(2), E(e);
  }
}
function Nx(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 52)(1, "div", 53)(2, "div", 54)(3, "div", 55)(4, "h5", 56),
      c(5, "Delete User"),
      s()(),
      a(6, "div", 57),
      c(7, "Are you sure you want to delete this user?"),
      s(),
      a(8, "div", 58)(9, "button", 59),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeDeleteModal());
      }),
      c(10, "Cancel"),
      s(),
      a(11, "button", 60),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.deleteUserId());
      }),
      c(12, "Delete"),
      s()()()()();
  }
}
function Lx(r, i) {
  r & 1 && (a(0, "span"), c(1, "First name is required."), s());
}
function Bx(r, i) {
  if ((r & 1 && (a(0, "div", 72), M(1, Lx, 2, 0, "span", 33), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Hx(r, i) {
  r & 1 && (a(0, "span"), c(1, "Last name is required."), s());
}
function jx(r, i) {
  if ((r & 1 && (a(0, "div", 72), M(1, Hx, 2, 0, "span", 33), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function zx(r, i) {
  if ((r & 1 && (a(0, "option", 86), c(1), s()), r & 2)) {
    let e = i.$implicit;
    g("value", e.dealer_id), d(), K(" ", e.dealer_code, " ");
  }
}
function Ux(r, i) {
  r & 1 && (a(0, "span"), c(1, " Dealer Code is required. "), s());
}
function Wx(r, i) {
  if ((r & 1 && (a(0, "div", 72), M(1, Ux, 2, 0, "span", 33), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("dealer_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function $x(r, i) {
  if ((r & 1 && (a(0, "option", 86), c(1), s()), r & 2)) {
    let e = i.$implicit;
    g("value", e.role_id), d(), K(" ", e.role_name, " ");
  }
}
function Gx(r, i) {
  r & 1 && (a(0, "span"), c(1, " Role name is required. "), s());
}
function Yx(r, i) {
  if ((r & 1 && (a(0, "div", 72), M(1, Gx, 2, 0, "span", 33), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("role_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function qx(r, i) {
  r & 1 && (a(0, "span"), c(1, "Email is required."), s());
}
function Kx(r, i) {
  r & 1 && (a(0, "span"), c(1, "Please enter a valid email address."), s());
}
function Qx(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 72),
      M(1, qx, 2, 0, "span", 33)(2, Kx, 2, 0, "span", 33),
      s()),
    r & 2)
  ) {
    let e,
      t,
      n = _(2);
    d(),
      g(
        "ngIf",
        (e = n.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      d(),
      g(
        "ngIf",
        (t = n.useForm.get("email")) == null || t.errors == null
          ? null
          : t.errors.email
      );
  }
}
function Zx(r, i) {
  if ((r & 1 && (a(0, "option", 86), c(1), s()), r & 2)) {
    let e = i.$implicit;
    g("value", e.team_id), d(), K(" ", e.team_name, " ");
  }
}
function Xx(r, i) {
  r & 1 && (a(0, "div", 72)(1, "span"), c(2, "Team name is required."), s()());
}
function Jx(r, i) {
  r & 1 && (a(0, "span"), c(1, " Phone is required. "), s());
}
function ey(r, i) {
  r & 1 && (a(0, "span"), c(1, " Must not exceed 10 characters. "), s());
}
function ty(r, i) {
  r & 1 && (a(0, "span"), c(1, " Only numbers are allowed. "), s());
}
function iy(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 72),
      M(1, Jx, 2, 0, "span", 33)(2, ey, 2, 0, "span", 33)(
        3,
        ty,
        2,
        0,
        "span",
        33
      ),
      s()),
    r & 2)
  ) {
    let e,
      t,
      n,
      o = _(2);
    d(),
      g(
        "ngIf",
        (e = o.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      d(),
      g(
        "ngIf",
        (t = o.useForm.get("phone")) == null || t.errors == null
          ? null
          : t.errors.maxlength
      ),
      d(),
      g(
        "ngIf",
        (n = o.useForm.get("phone")) == null || n.errors == null
          ? null
          : n.errors.pattern
      );
  }
}
function ny(r, i) {
  if (r & 1) {
    let e = J();
    Me(0),
      a(1, "button", 87),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.onUpdate());
      }),
      c(2, " Edit "),
      s(),
      Oe();
  }
  if (r & 2) {
    let e = _(2);
    d(), g("disabled", !e.isUserNameChanged());
  }
}
function ry(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 59),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.onSave());
      }),
      c(1, " Save "),
      s();
  }
  if (r & 2) {
    let e = _(2);
    se("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function oy(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 52)(1, "div", 61)(2, "div", 54)(3, "div", 55)(4, "h5", 62),
      c(5),
      s(),
      a(6, "button", 63),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeModal());
      }),
      a(7, "span", 64),
      c(8, "\xD7"),
      s()()(),
      a(9, "div", 65)(10, "form", 66)(11, "div", 67)(12, "div", 68)(
        13,
        "label",
        69
      ),
      c(14, "First Name"),
      s(),
      R(15, "input", 70),
      M(16, Bx, 2, 1, "div", 71),
      s(),
      a(17, "div", 68)(18, "label", 69),
      c(19, " Last Name "),
      a(20, "span", 72),
      c(21, "*"),
      s()(),
      R(22, "input", 73),
      M(23, jx, 2, 1, "div", 71),
      s(),
      a(24, "div", 68)(25, "label", 74),
      c(26, " Dealer Code "),
      a(27, "span", 72),
      c(28, "*"),
      s()(),
      a(29, "select", 75)(30, "option", 76),
      c(31, "Select Dealer code"),
      s(),
      M(32, zx, 2, 2, "option", 77),
      s(),
      M(33, Wx, 2, 1, "div", 71),
      s(),
      a(34, "div", 68)(35, "label", 78),
      c(36, " Role Name "),
      a(37, "span", 72),
      c(38, "*"),
      s()(),
      a(39, "select", 79)(40, "option", 76),
      c(41, "Select Role"),
      s(),
      M(42, $x, 2, 2, "option", 77),
      s(),
      M(43, Yx, 2, 1, "div", 71),
      s(),
      a(44, "div", 68)(45, "label", 69),
      c(46, " Email "),
      a(47, "span", 72),
      c(48, "*"),
      s()(),
      R(49, "input", 80),
      M(50, Qx, 3, 2, "div", 71),
      s(),
      a(51, "div", 68)(52, "label", 81),
      c(53, " Team name "),
      a(54, "span", 72),
      c(55, "*"),
      s()(),
      a(56, "select", 82),
      O("change", function () {
        w(e);
        let n = _();
        return D(n.onTeamChange());
      }),
      a(57, "option", 76),
      c(58, "Select team name"),
      s(),
      M(59, Zx, 2, 2, "option", 77),
      s(),
      M(60, Xx, 3, 0, "div", 71),
      s(),
      a(61, "div", 68)(62, "label", 69),
      c(63, " Phone "),
      a(64, "span", 72),
      c(65, "*"),
      s()(),
      a(66, "input", 83),
      O("keypress", function (n) {
        w(e);
        let o = _();
        return D(o.restrictToNumbers(n));
      }),
      s(),
      M(67, iy, 4, 3, "div", 71),
      s()()()(),
      a(68, "div", 58),
      M(69, ny, 3, 1, "ng-container", 84),
      a(70, "button", 85),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeModal());
      }),
      c(71, " Close "),
      s(),
      M(72, ry, 2, 1, "ng-template", null, 0, lt),
      s()()()();
  }
  if (r & 2) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C,
      T,
      k,
      V,
      B,
      L,
      H,
      U,
      j = rt(73),
      Y = _();
    d(5),
      K(" ", Y.userObj.user_id ? "Edit User" : "Add New User", " "),
      d(5),
      g("formGroup", Y.useForm),
      d(5),
      g(
        "ngClass",
        ce(
          24,
          nr,
          ((e = Y.useForm.get("fname")) == null ? null : e.touched) &&
            ((e = Y.useForm.get("fname")) == null ? null : e.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        ((t = Y.useForm.get("fname")) == null ? null : t.invalid) &&
          ((t = Y.useForm.get("fname")) == null ? null : t.touched)
      ),
      d(6),
      g(
        "ngClass",
        ce(
          26,
          nr,
          ((n = Y.useForm.get("lname")) == null ? null : n.touched) &&
            ((n = Y.useForm.get("lname")) == null ? null : n.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        ((o = Y.useForm.get("lname")) == null ? null : o.invalid) &&
          ((o = Y.useForm.get("lname")) == null ? null : o.touched)
      ),
      d(6),
      g(
        "ngClass",
        ce(
          28,
          nr,
          ((u = Y.useForm.get("dealer_id")) == null ? null : u.touched) &&
            ((u = Y.useForm.get("dealer_id")) == null ? null : u.invalid)
        )
      ),
      d(),
      g("ngValue", null),
      d(2),
      g("ngForOf", Y.dealerList()),
      d(),
      g(
        "ngIf",
        ((b = Y.useForm.get("dealer_id")) == null ? null : b.touched) &&
          ((b = Y.useForm.get("dealer_id")) == null ? null : b.invalid)
      ),
      d(6),
      g(
        "ngClass",
        ce(
          30,
          nr,
          ((C = Y.useForm.get("role_id")) == null ? null : C.touched) &&
            ((C = Y.useForm.get("role_id")) == null ? null : C.invalid)
        )
      ),
      d(),
      g("ngValue", null),
      d(2),
      g("ngForOf", Y.roleList()),
      d(),
      g(
        "ngIf",
        ((T = Y.useForm.get("role_id")) == null ? null : T.touched) &&
          ((T = Y.useForm.get("role_id")) == null ? null : T.invalid)
      ),
      d(6),
      g(
        "ngClass",
        ce(
          32,
          nr,
          ((k = Y.useForm.get("email")) == null ? null : k.touched) &&
            ((k = Y.useForm.get("email")) == null ? null : k.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        ((V = Y.useForm.get("email")) == null ? null : V.invalid) &&
          ((V = Y.useForm.get("email")) == null ? null : V.touched)
      ),
      d(6),
      g(
        "ngClass",
        ce(
          34,
          nr,
          ((B = Y.useForm.get("team_id")) == null ? null : B.touched) &&
            ((B = Y.useForm.get("team_id")) == null ? null : B.invalid)
        )
      ),
      d(),
      g("ngValue", null),
      d(2),
      g("ngForOf", Y.teamList()),
      d(),
      g(
        "ngIf",
        ((L = Y.useForm.get("team_id")) == null ? null : L.touched) &&
          ((L = Y.useForm.get("team_id")) == null ? null : L.invalid)
      ),
      d(6),
      g(
        "ngClass",
        ce(
          36,
          nr,
          ((H = Y.useForm.get("phone")) == null ? null : H.touched) &&
            ((H = Y.useForm.get("phone")) == null ? null : H.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        ((U = Y.useForm.get("phone")) == null ? null : U.touched) &&
          ((U = Y.useForm.get("phone")) == null ? null : U.invalid)
      ),
      d(2),
      g("ngIf", Y.userObj == null ? null : Y.userObj.user_id)("ngIfElse", j);
  }
}
var Ka = class r {
  constructor(i, e) {
    this.aleartsrv = i;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = pe(0);
  userList = pe([]);
  dealerList = pe([]);
  totalDealer = pe(0);
  isModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  teamList = pe([]);
  totalteam = pe(0);
  dealerObj = new gn();
  roleList = pe([]);
  masterSrv = te(je);
  toastr = te(Ht);
  currentPage = 1;
  itemsPerPage = 10;
  searchTerm = "";
  filteredUsers = [];
  paginatedUsers = [];
  useForm = new _t({});
  userObj = new To();
  previousEmail = "";
  isEditMode = !1;
  count;
  Role;
  totalrole;
  previousValue;
  user_id = "";
  dataTable;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  columns = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.displayAllUser(),
      console.log("\u{1F4E6} Loaded Dealer List:", this.dealerList()),
      this.dealerList().length &&
        this.dealerList()[0] &&
        console.log("\u{1F50D} Sample dealer:", this.dealerList()[0]),
      this.displayAllUser(),
      this.getAllTeams(),
      this.loadRole(),
      (this.filteredUsers = this.userList()),
      this.paginateUsers(),
      this.getAllDealer(),
      this.useForm.get("role_id")?.valueChanges.subscribe((i) => {
        if (i) {
          let t = this.roleList().find((n) => n.role_id === i);
          t &&
            (console.log("Role ID:", i),
            console.log("Role Name:", t.role_name),
            this.useForm.patchValue({ user_role: t.role_name }));
        }
      });
  }
  initializeForm() {
    this.useForm = new _t({
      fname: new Ke("", [Se.required, Se.minLength(2), Se.maxLength(50)]),
      lname: new Ke("", [Se.required, Se.minLength(2), Se.maxLength(50)]),
      email: new Ke("", [Se.required, Se.email, Se.maxLength(100)]),
      phone: new Ke(Number, [
        Se.required,
        Se.pattern(/^\d{10}$/),
        Se.maxLength(10),
      ]),
      dealer_id: new Ke(null, [Se.required]),
      team_id: new Ke(null, [Se.required]),
      user_role: new Ke(null, [Se.required]),
      role_id: new Ke(null, [Se.required]),
    });
  }
  restrictToNumbers(i) {
    let e = i.key;
    /^\d$/.test(e) || i.preventDefault();
  }
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe({
      next: (i) => {
        console.log("\u{1F310} Full Dealer API Response:", i),
          i && i.data?.dealer?.rows?.length > 0
            ? (this.dealerList.set(i.data.dealer.rows),
              this.totalDealer.set(i.data.dealer.count),
              console.log("\u2705 Loaded Dealers:", this.dealerList()))
            : (console.warn(
                "\u26A0\uFE0F Dealer list empty or improperly structured"
              ),
              this.toastr.warning("No dealers found", "Information"));
      },
      error: (i) => {
        console.error("\u274C Dealer fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch dealers", "Error");
      },
    });
  }
  getAllTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (i) => {
        i && i.data.rows && i.data.rows
          ? (this.teamList.set(i.data.rows),
            console.log("Fetched teams:", this.teamList()),
            this.totalteam.set(i.data.count))
          : this.toastr.warning("No teams found", "Information");
      },
      error: (i) => {
        console.error("teams fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch teams", "Error");
      },
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (i) => {
        i && i.data && Array.isArray(i.data)
          ? (this.roleList.set(i.data),
            console.log("Fetched roles:", this.roleList()),
            this.totalrole.set(i.data.length))
          : this.toastr.warning("No roles found", "Information");
      },
      error: (i) => {
        console.error("Error fetching roles:", i),
          this.toastr.error(i.error?.error || "Error fetching roles", "Error");
      },
    });
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateUsers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredUsers = this.userList();
    else {
      let i = this.searchTerm.toLowerCase();
      this.filteredUsers = this.userList().filter(
        (e) =>
          e.name.toLowerCase().includes(i) ||
          e.email.toLowerCase().includes(i) ||
          (e.user_role?.toLowerCase().includes(i) ?? !1)
      );
    }
    (this.currentPage = 1), this.paginateUsers();
  }
  paginateUsers() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    (this.paginatedUsers = this.filteredUsers.slice(i, e)),
      (this.totalPages = Math.ceil(
        this.filteredUsers.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (t, n) => n + 1));
  }
  updatePages() {
    (this.totalPages = Math.ceil(
      this.filteredUsers.length / this.itemsPerPage
    )),
      (this.pages = Array(this.totalPages)
        .fill(0)
        .map((i, e) => e + 1));
  }
  initializeUsers() {
    let i = this.filteredUsers.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateUsers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateUsers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateUsers());
  }
  expand(i) {
    i.target.size = 6;
  }
  collapse(i) {
    i.target.size = 0;
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  openModal(i) {
    console.log("\u2705 openModal() function calledm of user"),
      console.log("User object received in openModal:", i),
      (this.isModalOpen = !0),
      i || (this.userObj = {}),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      i
        ? (this.useForm.patchValue({
            user_id: i.user_id,
            name: i.name || "",
            account_id: i.account_id || "",
            email: i.email || "",
            phone: i.phone || "",
            role_id: i.role_id || "",
            user_role: i.role_name || "",
            team_id: i.team_id || null,
            team_name: i.team_name || "",
            fname: i.fname || "",
            lname: i.lname || "",
          }),
          (this.previousEmail = i.email || ""),
          console.log("User team info:", i.team),
          console.log("Form team values:", {
            team_id: this.useForm.get("team_id")?.value,
            team_name: this.useForm.get("team_name")?.value,
          }),
          (this.userObj = ee({}, i)))
        : (this.userObj = {});
  }
  onDealerChange() {
    let i = this.useForm.get("dealer_code"),
      e = this.useForm.get("dealer_id");
    if (i && e) {
      let t = this.dealerList().find((n) => n.dealer_code === i.value);
      t && e.setValue(t.dealer_id);
    }
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let i = this.useForm.get("team_name"),
      e = this.useForm.get("team_id");
    if (i && e && i.value) {
      console.log("Team name value:", i.value),
        console.log("Available teams:", this.teamList());
      let t = this.teamList().find((n) => n.team_name === i.value);
      t
        ? (console.log("Selected Team:", t), e.setValue(t.team_id))
        : console.warn("Team not found:", i.value);
    }
  }
  displayAllUser() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.totalUser.set(i.data.count),
            this.userList.set(i.data.rows),
            (this.filteredUsers = i.data.rows),
            this.initializeUsers())
          : (this.userList.set([]),
            (this.filteredUsers = []),
            this.toastr.warning("No users found", "Information"),
            this.initializeUsers());
      },
      error: (i) => {
        console.error("Users fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch users", "Error"),
          this.userList.set([]),
          (this.filteredUsers = []),
          this.initializeUsers();
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let i = this.useForm.value,
      e = this.roleList().find((t) => t.role_id === i.role_id);
    (i.user_role = e?.role_name || ""),
      this.masterSrv.createNewUser(i).subscribe({
        next: () => {
          this.toastr.success("User created successfully!", "Success"),
            this.displayAllUser(),
            this.useForm.reset(),
            (this.userObj = new To()),
            this.closeModal();
        },
        error: (t) => {
          let n = t.error?.message || "Failed to create user";
          this.toastr.error(n, "Creation Error");
        },
      });
  }
  onSaveAndClose() {
    this.useForm.valid && (this.onSave(), this.closeModal());
  }
  onUpdate() {
    if (
      (console.log("on update"),
      console.log("Form Values:", this.useForm.value),
      this.useForm.valid)
    ) {
      let i = this.useForm.value,
        e = `${(i.fname || "").trim()} ${(i.lname || "").trim()}`.replace(
          /\s+/g,
          " "
        );
      (i.name = e),
        (this.userObj = ee(ee({}, this.userObj), i)),
        console.log("\u{1F4E4} Payload sent to backend:", this.userObj),
        console.log("\u{1F50D} Form Status:", this.useForm.status),
        console.log("\u{1F680} Updated Payload before API call:", this.userObj),
        this.masterSrv.updateUser(this.userObj).subscribe(
          (t) => {
            t.status === 200
              ? (console.log("API Response:", t),
                console.log("\u2705 Update Success:", t),
                this.toastr.success(t.message, "Success"),
                this.userList.set(
                  this.userList().map((n) =>
                    n.user_id === this.userObj.user_id
                      ? Ne(ee(ee({}, n), this.userObj), { name: e })
                      : n
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0),
                this.displayAllUser(),
                this.closeModal(),
                this.useForm.reset())
              : this.toastr.error("Update failed", "Error");
          },
          (t) => {
            console.error("\u274C API Error:", t),
              t.response
                ? this.toastr.error(t.response.data.message, "Error")
                : this.toastr.error("Failed to update user", "Error");
          }
        );
    } else
      this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(i) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", i?.user_id),
      (this.userObj = ee({}, i)),
      (this.previousValue = i.name);
    let e = `${i.fname || ""} ${i.lname || ""}`.trim().replace(/\s+/g, " ");
    console.log("Formatted name onEdit:", e),
      this.useForm.patchValue({
        user_id: i.user_id,
        name: e,
        account_id: i.account_id || "",
        email: i.email || "",
        phone: i.phone || "",
        role_id: i.role_id || "",
        team_id: i.team_id || null,
        team_name: i.team_name || "",
        fname: i.fname || "",
        lname: i.lname || "",
        user_role: i.user_role || "",
        dealer_id: i.dealer_id || null,
      }),
      console.log("userObj.user_id after setting:", this.userObj?.user_id),
      setTimeout(() => {
        $("#myModal").modal({ backdrop: !1 });
      }, 100);
  }
  isUserNameChanged() {
    return (
      this.useForm.dirty &&
      (this.useForm.value.name !== this.previousValue ||
        this.useForm.value.email !== this.userObj.email ||
        this.useForm.value.phone !== this.userObj.phone ||
        this.useForm.value.role_id !== this.userObj.role_id ||
        this.useForm.value.team_id !== this.userObj.team_id ||
        this.useForm.value.fname !== this.userObj.fname ||
        this.useForm.value.lname !== this.userObj.lname)
    );
  }
  selectedUserForDeletion = null;
  selectUserForDeletion(i) {
    (this.selectedUserForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  setUserToDelete(i) {
    this.selectedUserForDeletion = i;
  }
  openDeleteModal(i) {
    (this.selectedUserForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  deleteUserId() {
    console.log("Deleting User ID:", this.selectedUserForDeletion?.user_id),
      this.selectedUserForDeletion && this.selectedUserForDeletion.user_id
        ? this.masterSrv
            .deleteUser(this.selectedUserForDeletion.user_id)
            .subscribe(
              (i) => {
                this.toastr.success("User deleted successfully", "Success"),
                  this.displayAllUser(),
                  (this.isDeleteModalOpen = !1);
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No users selected for deletion");
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof _t && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  static ɵfac = function (e) {
    return new (e || r)(F(Nr), F(qe));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-users"]],
    standalone: !0,
    features: [le],
    decls: 74,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      ["id", "user", 1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search users...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "colspan",
        "3",
        1,
        "text-center",
        2,
        "display",
        "flex",
        "margin-left",
        "120%",
        "white-space",
        "nowrap",
      ],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
        2,
        "top",
        "6%",
      ],
      [1, "modal-title", "text-center", "w-100", 2, "font-size", "18px"],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "fname", 1, "form-label"],
      [
        "id",
        "fname",
        "type",
        "text",
        "formControlName",
        "fname",
        "placeholder",
        "First Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "text-danger"],
      [
        "id",
        "lname",
        "type",
        "text",
        "formControlName",
        "lname",
        "placeholder",
        "Last Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_id", 1, "form-label"],
      [
        "id",
        "dealer_id",
        "formControlName",
        "dealer_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "role_id", 1, "form-label"],
      [
        "id",
        "role_id",
        "formControlName",
        "role_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [
        "id",
        "email",
        "type",
        "email",
        "formControlName",
        "email",
        "placeholder",
        "E-mail",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "team_name", 1, "form-label"],
      [
        "id",
        "team_name",
        "formControlName",
        "team_id",
        "placeholder",
        "team name",
        1,
        "form-control",
        "form-control-lg",
        3,
        "change",
        "ngClass",
      ],
      [
        "id",
        "phone",
        "formControlName",
        "phone",
        "placeholder",
        "Phone",
        "maxlength",
        "10",
        1,
        "form-control",
        "form-control-lg",
        3,
        "keypress",
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        c(6, "Users"),
        s()(),
        a(7, "li", 7)(8, "a", 8),
        c(9, "User Master"),
        s()()()(),
        a(10, "div", 9)(11, "div", 10)(12, "a", 11),
        O("click", function () {
          return t.openModal();
        }),
        R(13, "i", 12),
        c(14, "Add Users "),
        s()(),
        a(15, "div", 10)(16, "div", 13)(17, "p", 14),
        c(18, "Total User"),
        s(),
        a(19, "h3", 15),
        c(20),
        s()()()(),
        a(21, "div", 16)(22, "div", 17)(23, "div", 18)(24, "div", 19)(
          25,
          "div",
          20
        ),
        R(26, "label", 21),
        a(27, "select", 22),
        O("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        a(28, "option", 23),
        c(29, "10"),
        s(),
        a(30, "option", 24),
        c(31, "25"),
        s(),
        a(32, "option", 25),
        c(33, "50"),
        s(),
        a(34, "option", 26),
        c(35, "100"),
        s()(),
        a(36, "label", 27),
        c(37, "records per page"),
        s()(),
        a(38, "div", 28)(39, "div", 29)(40, "input", 30),
        Je("ngModelChange", function (o) {
          return Xe(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        O("input", function () {
          return t.onSearchChange();
        }),
        s()()()(),
        a(41, "div", 31)(42, "table", 32)(43, "thead")(44, "tr")(45, "th"),
        c(46, "Sr No"),
        s(),
        a(47, "th"),
        c(48, "Name"),
        s(),
        a(49, "th"),
        c(50, "Email"),
        s(),
        a(51, "th"),
        c(52, "Role"),
        s(),
        a(53, "th"),
        c(54, "Action"),
        s()()(),
        a(55, "tbody"),
        M(56, Fx, 3, 0, "tr", 33)(57, Rx, 14, 4, "tr", 34),
        s()()(),
        a(58, "div", 35)(59, "div", 36)(60, "div", 37),
        c(61),
        s()(),
        a(62, "div", 36)(63, "div", 38)(64, "ul", 39)(65, "li", 40)(
          66,
          "a",
          41
        ),
        O("click", function () {
          return t.previousPage();
        }),
        c(67, "Previous"),
        s()(),
        M(68, Vx, 3, 3, "li", 42),
        a(69, "li", 43)(70, "a", 41),
        O("click", function () {
          return t.nextPage();
        }),
        c(71, "Next"),
        s()()()()()()()()()()(),
        M(72, Nx, 13, 0, "div", 44)(73, oy, 74, 38, "div", 44)),
        e & 2 &&
          (d(20),
          K(" ", t.totalUser(), " "),
          d(20),
          Ze("ngModel", t.searchTerm),
          d(16),
          g("ngIf", t.paginatedUsers.length === 0),
          d(),
          g("ngForOf", t.paginatedUsers),
          d(4),
          oi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.currentPage * t.itemsPerPage < t.teamList().length
              ? t.currentPage * t.itemsPerPage
              : t.teamList().length,
            " of ",
            t.teamList().length,
            " entries "
          ),
          d(4),
          X("disabled", t.currentPage === 1),
          d(3),
          g("ngForOf", t.visiblePages),
          d(),
          X("disabled", t.currentPage === t.totalPages),
          d(3),
          g("ngIf", t.isDeleteModalOpen),
          d(),
          g("ngIf", t.isModalOpen));
    },
    dependencies: [
      De,
      ft,
      gt,
      Be,
      Kt,
      Tn,
      At,
      Ft,
      Mt,
      qt,
      It,
      si,
      fn,
      cl,
      Wt,
      Ge,
      Do,
      nh,
      Oi,
      mi,
      fi,
      tn,
      rh,
    ],
    styles: [
      "body[_ngcontent-%COMP%]{display:flex;min-height:100vh;margin:0;padding:0}.custom-modal-position[_ngcontent-%COMP%]{top:18%}@media (max-width: 767px){.custom-modal-position[_ngcontent-%COMP%]{top:7%;border:2px solid red}}#user[_ngcontent-%COMP%]{margin-left:-2rem}.sidebar[_ngcontent-%COMP%]{width:250px;flex-shrink:0;background-color:#f8f9fa;z-index:1000}.content-body[_ngcontent-%COMP%]{flex-grow:1;padding:20px;box-sizing:border-box;overflow-x:hidden}@media (max-width: 768px){body[_ngcontent-%COMP%]{flex-direction:column}.sidebar[_ngcontent-%COMP%]{width:100%;height:auto;position:static}.content-body[_ngcontent-%COMP%]{margin-left:0;width:100%;padding:10px}}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (max-width: 576px){.search-input[_ngcontent-%COMP%]{margin-left:0!important;width:100%!important}}.card-box[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 0 15px #00000014;border-radius:10px}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.modal-backdrop[_ngcontent-%COMP%]{z-index:1040!important}.modal[_ngcontent-%COMP%]{z-index:1051!important;position:fixed!important;pointer-events:auto!important}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}@media (max-width: 991.98px){.search-input[_ngcontent-%COMP%]{width:100%;margin-top:10px}}@media only screen and (max-width: 1600px){.content-body[_ngcontent-%COMP%]{margin-left:0}}.searchbar[_ngcontent-%COMP%]{display:flex;float:right}input.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}@media (min-width: 760px) and (max-width: 820px){.delete-btn-ipad[_ngcontent-%COMP%]{margin-top:5px!important}}",
    ],
  });
};
var ay = () => ["/Admin/dealer"],
  ah = (r) => ["/Admin/singleUser", r];
function sy(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      c(4, "Subject"),
      s(),
      a(5, "h5", 17),
      c(6),
      s()(),
      a(7, "div", 15)(8, "h4", 16),
      c(9, "Assigned"),
      s(),
      a(10, "h5", 17),
      c(11),
      s()(),
      a(12, "div", 15)(13, "h4", 16),
      c(14, "Description"),
      s(),
      a(15, "h5", 17),
      c(16),
      s()(),
      a(17, "div", 15)(18, "h4", 16),
      c(19, "account Name"),
      s(),
      a(20, "h5", 17),
      c(21),
      s()()(),
      a(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      c(25, "start Date"),
      s(),
      a(26, "h5", 17),
      c(27),
      s()(),
      a(28, "div", 15)(29, "h4", 16),
      c(30, "End Date"),
      s(),
      a(31, "h5", 17),
      c(32),
      s()(),
      a(33, "div", 15)(34, "h4", 16),
      c(35, "Name"),
      s(),
      a(36, "h5", 17),
      c(37),
      s()(),
      a(38, "div", 15)(39, "h4", 16),
      c(40, "Lead Code"),
      s(),
      a(41, "h5", 17),
      c(42),
      s()()(),
      R(43, "div", 18),
      a(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      c(47, "Lead Email"),
      s(),
      a(48, "h5", 17),
      c(49),
      s()(),
      a(50, "div", 15)(51, "h4", 16),
      c(52, "Flag"),
      s(),
      a(53, "h5", 17),
      c(54),
      s()()(),
      a(55, "div", 19)(56, "a", 20),
      c(57, "Go Back"),
      s()()()),
    r & 2)
  ) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C,
      T,
      k,
      V,
      B = _();
    d(6),
      K(" ", (e = B.eventList()) == null ? null : e.subject, ""),
      d(5),
      E((t = B.eventList()) == null ? null : t.assigned_to),
      d(5),
      E((n = B.eventList()) == null ? null : n.description),
      d(5),
      E((o = B.eventList()) == null ? null : o.name),
      d(6),
      K(" ", (u = B.eventList()) == null ? null : u.start_date, ""),
      d(5),
      K(" ", (b = B.eventList()) == null ? null : b.end_date, ""),
      d(5),
      K(" ", (C = B.eventList()) == null ? null : C.name, ""),
      d(5),
      E((T = B.eventList()) == null ? null : T.lead_code),
      d(7),
      K(" ", (k = B.eventList()) == null ? null : k.lead_email, ""),
      d(5),
      K(" ", (V = B.eventList()) == null ? null : V.flag, ""),
      d(2),
      g("routerLink", ce(11, ah, B.previousRoute));
  }
}
var Qa = class r {
  constructor(i) {
    this.route = i;
  }
  eventList = pe(null);
  masterSrv = te(je);
  eventData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.eventData = i.leadData),
          this.eventData
            ? this.eventById(this.eventData.event_id)
            : console.warn("event data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("eventId");
        e
          ? this.eventById(e)
          : this.eventData ||
            console.error(
              "event ID not found in the URL and no resolver data."
            );
      });
  }
  eventById(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.eventById(i).subscribe({
        next: (e) => {
          this.eventList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || r)(F(Mi));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-single-event"]],
    standalone: !0,
    features: [le],
    decls: 21,
    vars: 6,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "row", "mb-4", "text-center"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
          5,
          "a",
          5
        ),
        c(6, "Utils"),
        s()(),
        a(7, "li", 4)(8, "a", 6),
        c(9, "Dealer"),
        s()(),
        a(10, "li", 4)(11, "a", 6),
        c(12, "Single Dealer"),
        s()(),
        a(13, "li", 7)(14, "a", 8),
        c(15, "Single Event"),
        s()()()(),
        a(16, "div", 9)(17, "div", 10)(18, "h5", 11),
        c(19, "User Details"),
        s()(),
        M(20, sy, 58, 13, "div", 12),
        s()()()),
        e & 2 &&
          (d(8),
          g("routerLink", Ut(3, ay)),
          d(3),
          g("routerLink", ce(4, ah, t.previousRoute)),
          d(9),
          g("ngIf", t.eventList()));
    },
    dependencies: [De, Be, Ge, Bt],
  });
};
var ly = () => ["/Admin/dealer"],
  sh = (r) => ["/Admin/singleUser", r];
function cy(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      c(4, "Lead Code"),
      s(),
      a(5, "h5", 17),
      c(6),
      s()(),
      a(7, "div", 15)(8, "h4", 16),
      c(9, "Status"),
      s(),
      a(10, "h5", 17),
      c(11),
      s()(),
      a(12, "div", 15)(13, "h4", 16),
      c(14, "Purchase Type"),
      s(),
      a(15, "h5", 17),
      c(16),
      s()(),
      a(17, "div", 15)(18, "h4", 16),
      c(19, "Sub Type"),
      s(),
      a(20, "h5", 17),
      c(21),
      s()()(),
      a(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      c(25, "Type"),
      s(),
      a(26, "h5", 17),
      c(27),
      s()(),
      a(28, "div", 15)(29, "h4", 16),
      c(30, "Sub Type"),
      s(),
      a(31, "h5", 17),
      c(32),
      s()(),
      a(33, "div", 15)(34, "h4", 16),
      c(35, "Brand"),
      s(),
      a(36, "h5", 17),
      c(37),
      s()(),
      a(38, "div", 15)(39, "h4", 16),
      c(40, "PMI"),
      s(),
      a(41, "h5", 17),
      c(42),
      s()()(),
      a(43, "div", 14)(44, "div", 15)(45, "h4", 16),
      c(46, "Lead Source"),
      s(),
      a(47, "h5", 17),
      c(48),
      s()(),
      a(49, "div", 15)(50, "h4", 16),
      c(51, "Last Name"),
      s(),
      a(52, "h5", 17),
      c(53),
      s()(),
      a(54, "div", 15)(55, "h4", 16),
      c(56, "Mobile"),
      s(),
      a(57, "h5", 17),
      c(58),
      s()(),
      a(59, "div", 15)(60, "h4", 16),
      c(61, "Email"),
      s(),
      a(62, "h5", 17),
      c(63),
      s()()(),
      a(64, "div", 14)(65, "div", 15)(66, "h4", 16),
      c(67, "Lead Owner"),
      s(),
      a(68, "h5", 17),
      c(69),
      s()(),
      a(70, "div", 15)(71, "h4", 16),
      c(72, "Flag"),
      s(),
      a(73, "h5", 17),
      c(74),
      s()()(),
      a(75, "div", 18)(76, "a", 19),
      c(77, "Go Back"),
      s()()()),
    r & 2)
  ) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C,
      T,
      k,
      V,
      B,
      L,
      H,
      U,
      j = _();
    d(6),
      E((e = j.leadList()) == null ? null : e.lead_code),
      d(5),
      E((t = j.leadList()) == null ? null : t.status),
      d(5),
      E((n = j.leadList()) == null ? null : n.status),
      d(5),
      E((o = j.leadList()) == null ? null : o.purchase_type),
      d(6),
      E((u = j.leadList()) == null ? null : u.type),
      d(5),
      E((b = j.leadList()) == null ? null : b.sub_type),
      d(5),
      E((C = j.leadList()) == null ? null : C.brand),
      d(5),
      E((T = j.leadList()) == null ? null : T.PMI),
      d(6),
      E((k = j.leadList()) == null ? null : k.lead_source),
      d(5),
      E((V = j.leadList()) == null ? null : V.lname),
      d(5),
      E((B = j.leadList()) == null ? null : B.mobile),
      d(5),
      E((L = j.leadList()) == null ? null : L.email),
      d(6),
      E((H = j.leadList()) == null ? null : H.lead_owner),
      d(5),
      E((U = j.leadList()) == null ? null : U.flag),
      d(2),
      g("routerLink", ce(15, sh, j.previousRoute));
  }
}
var Za = class r {
  constructor(i) {
    this.route = i;
  }
  leadList = pe(null);
  masterSrv = te(je);
  leadData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.leadData = i.leadData),
          this.leadData
            ? this.singleLeadData(this.leadData.lead_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("leadId");
        e
          ? this.singleLeadData(e)
          : this.leadData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleLeadData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.leadById(i).subscribe({
        next: (e) => {
          this.leadList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || r)(F(Mi));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-single-lead"]],
    standalone: !0,
    features: [le],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (a(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          c(6, "Utils"),
          s()(),
          a(7, "li", 4)(8, "a", 6),
          c(9, "Dealer"),
          s()(),
          a(10, "li", 4)(11, "a", 6),
          c(12, "Single Dealer"),
          s()(),
          a(13, "li", 7)(14, "a", 8),
          c(15),
          s()()()(),
          a(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          c(19, "Leads Details"),
          s()(),
          M(20, cy, 78, 17, "div", 12),
          s()()()),
        e & 2)
      ) {
        let n;
        d(8),
          g("routerLink", Ut(4, ly)),
          d(3),
          g("routerLink", ce(5, sh, t.previousRoute)),
          d(4),
          E((n = t.leadList()) == null ? null : n.lead_owner),
          d(5),
          g("ngIf", t.leadList());
      }
    },
    dependencies: [De, Be, Ge, Bt],
  });
};
var Xa = class r {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.leadById(t) : bt(null);
  }
  static ɵfac = function (e) {
    return new (e || r)(ie(je));
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var Ja = class r {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("eventId");
    return console.log(t), t ? this.masterSrv.eventById(t) : bt(null);
  }
  static ɵfac = function (e) {
    return new (e || r)(ie(je));
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var es = class r {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.userById(t) : bt(null);
  }
  static ɵfac = function (e) {
    return new (e || r)(ie(je));
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var dy = () => ["/Admin/dealer"],
  lh = (r) => ["/Admin/singleUser", r];
function py(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      c(4, "Name"),
      s(),
      a(5, "h5", 17),
      c(6),
      s()(),
      a(7, "div", 15)(8, "h4", 16),
      c(9, "Account ID"),
      s(),
      a(10, "h5", 17),
      c(11),
      s()()(),
      a(12, "div", 14)(13, "div", 15)(14, "h4", 16),
      c(15, "Email"),
      s(),
      a(16, "h5", 17),
      c(17),
      s()(),
      a(18, "div", 15)(19, "h4", 16),
      c(20, "Phone"),
      s(),
      a(21, "h5", 17),
      c(22),
      s()()(),
      a(23, "div", 14)(24, "div", 15)(25, "h4", 16),
      c(26, "Role"),
      s(),
      a(27, "h5", 17),
      c(28),
      s()(),
      a(29, "div", 15)(30, "h4", 16),
      c(31, "Dealer Code"),
      s(),
      a(32, "h5", 17),
      c(33),
      s()()(),
      a(34, "div", 18)(35, "a", 19),
      c(36, "Go Back"),
      s()()()),
    r & 2)
  ) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C = _();
    d(6),
      E((e = C.userList()) == null ? null : e.name),
      d(5),
      E((t = C.userList()) == null ? null : t.account_id),
      d(6),
      E((n = C.userList()) == null ? null : n.email),
      d(5),
      E((o = C.userList()) == null ? null : o.phone),
      d(6),
      E((u = C.userList()) == null ? null : u.user_role),
      d(5),
      E((b = C.userList()) == null ? null : b.dealer_code),
      d(2),
      g("routerLink", ce(7, lh, C.previousRoute));
  }
}
var ts = class r {
  constructor(i) {
    this.route = i;
  }
  masterSrv = te(je);
  userData;
  previousRoute;
  userList = pe(null);
  ngOnInit() {
    this.previousRoute = localStorage.getItem("previousRoute");
    debugger;
    this.route.data.subscribe((i) => {
      console.log("Resolved userData:", i.userData),
        i.userData &&
        Array.isArray(i.userData.data) &&
        i.userData.data.length > 0
          ? (this.userData = i.userData.data[0])
          : console.warn("User data not available.");
    }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("user_id");
        e && this.fetchSingleUser(e);
      });
  }
  fetchSingleUser(i) {
    console.log("Calling fetchSingleUser with ID:", i),
      this.masterSrv.userById(i).subscribe({
        next: (e) => {
          console.log("API Response:", e);
          debugger;
          e &&
          e.status === 200 &&
          e.data &&
          Array.isArray(e.data) &&
          e.data.length > 0
            ? (console.log("User found:", e.data[0]),
              this.userList.set(e.data[0]),
              console.log("UserList signal after setting:", this.userList()))
            : console.error("Invalid or empty response:", e);
        },
        error: (e) => {
          console.error("API Error:", e),
            e.error && console.error("Error details:", e.error),
            e.message && console.error("Error message:", e.message),
            e.status && console.error("Error status:", e.status);
        },
        complete: () => {
          console.log("API call completed");
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || r)(F(Mi));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-single-user"]],
    standalone: !0,
    features: [le],
    decls: 21,
    vars: 8,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4"],
      [1, "col-md-6", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (a(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          c(6, "Utils"),
          s()(),
          a(7, "li", 4)(8, "a", 6),
          c(9, "Dealer"),
          s()(),
          a(10, "li", 4)(11, "a", 6),
          c(12, "Single Dealer"),
          s()(),
          a(13, "li", 7)(14, "a", 8),
          c(15),
          s()()()(),
          a(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          c(19),
          s()(),
          M(20, py, 37, 9, "div", 12),
          s()()()),
        e & 2)
      ) {
        let n, o;
        d(8),
          g("routerLink", Ut(5, dy)),
          d(3),
          g("routerLink", ce(6, lh, t.previousRoute)),
          d(4),
          E((n = t.userList()) == null ? null : n.name),
          d(4),
          K(" ", (o = t.userList()) == null ? null : o.name, " Details "),
          d(),
          g("ngIf", t.userList());
      }
    },
    dependencies: [ai, Bt, De, Be],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}",
    ],
  });
};
var is = class r {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.taskById(t) : bt(null);
  }
  static ɵfac = function (e) {
    return new (e || r)(ie(je));
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var uy = () => ["/Admin/dealer"],
  ch = (r) => ["/Admin/singleUser", r];
function hy(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      c(4, "Subject"),
      s(),
      a(5, "h5", 17),
      c(6),
      s()(),
      a(7, "div", 15)(8, "h4", 16),
      c(9, "Status"),
      s(),
      a(10, "h5", 17),
      c(11),
      s()(),
      a(12, "div", 15)(13, "h4", 16),
      c(14, "Assigned"),
      s(),
      a(15, "h5", 17),
      c(16),
      s()()(),
      a(17, "div", 14)(18, "div", 15)(19, "h4", 16),
      c(20, "Due Date"),
      s(),
      a(21, "h5", 17),
      c(22),
      s()(),
      a(23, "div", 15)(24, "h4", 16),
      c(25, "Comments"),
      s(),
      a(26, "h5", 17),
      c(27),
      s()(),
      a(28, "div", 15)(29, "h4", 16),
      c(30, "Lead Name"),
      s(),
      a(31, "h5", 17),
      c(32),
      s()()(),
      a(33, "div", 14)(34, "div", 15)(35, "h4", 16),
      c(36, "Lead Email"),
      s(),
      a(37, "h5", 17),
      c(38),
      s()(),
      a(39, "div", 15)(40, "h4", 16),
      c(41, "Lead Code"),
      s(),
      a(42, "h5", 17),
      c(43),
      s()()(),
      a(44, "div", 18)(45, "a", 19),
      c(46, "Go Back"),
      s()()()),
    r & 2)
  ) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C,
      T,
      k = _();
    d(6),
      E((e = k.taskList()) == null ? null : e.subject),
      d(5),
      E((t = k.taskList()) == null ? null : t.status),
      d(5),
      E((n = k.taskList()) == null ? null : n.assigned_to),
      d(6),
      E((o = k.taskList()) == null ? null : o.due_date),
      d(5),
      E((u = k.taskList()) == null ? null : u.comments),
      d(5),
      E((b = k.taskList()) == null ? null : b.lead_name),
      d(6),
      E((C = k.taskList()) == null ? null : C.lead_email),
      d(5),
      E((T = k.taskList()) == null ? null : T.lead_code),
      d(2),
      g("routerLink", ce(9, ch, k.previousRoute));
  }
}
var ns = class r {
  constructor(i) {
    this.route = i;
  }
  taskList = pe(null);
  masterSrv = te(je);
  taskData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((i) => {
        (this.taskData = i.taskData),
          this.taskData
            ? this.singleTaskData(this.taskData.task_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("taskId");
        e
          ? this.singleTaskData(e)
          : this.taskData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleTaskData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.taskById(i).subscribe({
        next: (e) => {
          this.taskList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || r)(F(Mi));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-single-task"]],
    standalone: !0,
    features: [le],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-4", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (a(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          c(6, "Utils"),
          s()(),
          a(7, "li", 4)(8, "a", 6),
          c(9, "Dealer"),
          s()(),
          a(10, "li", 4)(11, "a", 6),
          c(12, "Single Dealer"),
          s()(),
          a(13, "li", 7)(14, "a", 8),
          c(15),
          s()()()(),
          a(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          c(19, "Task Details"),
          s()(),
          M(20, hy, 47, 11, "div", 12),
          s()()()),
        e & 2)
      ) {
        let n;
        d(8),
          g("routerLink", Ut(4, uy)),
          d(3),
          g("routerLink", ce(5, ch, t.previousRoute)),
          d(4),
          E((n = t.taskList()) == null ? null : n.assigned_to),
          d(5),
          g("ngIf", t.taskList());
      }
    },
    dependencies: [De, Be, Ge, Bt],
  });
};
var rs = class r {
  constructor(i) {
    this.router = i;
    this.initRouteTracking();
  }
  previousIdSubject = new Fi(null);
  previousId$ = this.previousIdSubject.asObservable();
  currentId = null;
  initRouteTracking() {
    this.router.events.pipe(zt((i) => i instanceof Sn)).subscribe(() => {
      let t = this.router.url.split("/")[3] || null;
      this.currentId && this.setPreviousId(this.currentId),
        (this.currentId = t);
    });
  }
  setPreviousId(i) {
    localStorage.setItem("previousId", i), this.previousIdSubject.next(i);
  }
  getPreviousId() {
    return localStorage.getItem("previousId");
  }
  clearPreviousId() {
    localStorage.removeItem("previousId"), this.previousIdSubject.next(null);
  }
  static ɵfac = function (e) {
    return new (e || r)(ie(Lt));
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var fy = () => ["/Admin/dealer"],
  gy = (r) => ["/Admin/singleUser", r];
function _y(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      c(4, "Opportunity Name"),
      s(),
      a(5, "h5", 17),
      c(6),
      s()(),
      a(7, "div", 15)(8, "h4", 16),
      c(9, "stage"),
      s(),
      a(10, "h5", 17),
      c(11),
      s()(),
      a(12, "div", 15)(13, "h4", 16),
      c(14, "Opportunities Record"),
      s(),
      a(15, "h5", 17),
      c(16),
      s()(),
      a(17, "div", 15)(18, "h4", 16),
      c(19, "account Name"),
      s(),
      a(20, "h5", 17),
      c(21),
      s()()(),
      a(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      c(25, "close Date"),
      s(),
      a(26, "h5", 17),
      c(27),
      s()(),
      a(28, "div", 15)(29, "h4", 16),
      c(30, "Opportunity Currency"),
      s(),
      a(31, "h5", 17),
      c(32),
      s()(),
      a(33, "div", 15)(34, "h4", 16),
      c(35, "VIN"),
      s(),
      a(36, "h5", 17),
      c(37),
      s()(),
      a(38, "div", 15)(39, "h4", 16),
      c(40, "Purchase Type"),
      s(),
      a(41, "h5", 17),
      c(42),
      s()()(),
      R(43, "div", 14),
      a(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      c(47, "Sub Type"),
      s(),
      a(48, "h5", 17),
      c(49),
      s()(),
      a(50, "div", 15)(51, "h4", 16),
      c(52, "Brand"),
      s(),
      a(53, "h5", 17),
      c(54),
      s()(),
      a(55, "div", 15)(56, "h4", 16),
      c(57, "PMI"),
      s(),
      a(58, "h5", 17),
      c(59),
      s()(),
      a(60, "div", 15)(61, "h4", 16),
      c(62, "Description"),
      s(),
      a(63, "h5", 17),
      c(64),
      s()()(),
      a(65, "div", 14)(66, "div", 15)(67, "h4", 16),
      c(68, "Mobile"),
      s(),
      a(69, "h5", 17),
      c(70),
      s()(),
      a(71, "div", 15)(72, "h4", 16),
      c(73, "Phone"),
      s(),
      a(74, "h5", 17),
      c(75),
      s()(),
      a(76, "div", 15)(77, "h4", 16),
      c(78, "E-mail"),
      s(),
      a(79, "h5", 17),
      c(80),
      s()(),
      a(81, "div", 15)(82, "h4", 16),
      c(83, "Enquiry Type"),
      s(),
      a(84, "h5", 17),
      c(85),
      s()()(),
      a(86, "div", 18)(87, "a", 19),
      c(88, "Go Back"),
      s()()()),
    r & 2)
  ) {
    let e,
      t,
      n,
      o,
      u,
      b,
      C,
      T,
      k,
      V,
      B,
      L,
      H,
      U,
      j,
      Y,
      ge = _();
    d(6),
      E((e = ge.oppList()) == null ? null : e.opportunity_name),
      d(5),
      E((t = ge.oppList()) == null ? null : t.stage),
      d(5),
      E((n = ge.oppList()) == null ? null : n.opportunity_record_type),
      d(5),
      E((o = ge.oppList()) == null ? null : o.account_name),
      d(6),
      E((u = ge.oppList()) == null ? null : u.close_date),
      d(5),
      E((b = ge.oppList()) == null ? null : b.opportunity_currency),
      d(5),
      E((C = ge.oppList()) == null ? null : C.purchase_type),
      d(5),
      E((T = ge.oppList()) == null ? null : T.type),
      d(7),
      E((k = ge.oppList()) == null ? null : k.sub_type),
      d(5),
      E((V = ge.oppList()) == null ? null : V.brand),
      d(5),
      E((B = ge.oppList()) == null ? null : B.PMI),
      d(5),
      E((L = ge.oppList()) == null ? null : L.description),
      d(6),
      E((H = ge.oppList()) == null ? null : H.mobile),
      d(5),
      E((U = ge.oppList()) == null ? null : U.phone),
      d(5),
      E((j = ge.oppList()) == null ? null : j.email),
      d(5),
      E((Y = ge.oppList()) == null ? null : Y.enquiry_type);
  }
}
var os = class r {
  constructor(i, e) {
    this.route = i;
    this.routeTrackingService = e;
  }
  oppList = pe(null);
  masterSrv = te(je);
  oppData;
  previousRoutes;
  previousRoute = null;
  previousId = null;
  ngOnInit() {
    this.routeTrackingService.previousId$.subscribe((i) => {
      this.previousId = i;
    }),
      (this.previousId = this.routeTrackingService.getPreviousId()),
      this.route.data.subscribe((i) => {
        (this.oppData = i.oppData),
          this.oppData
            ? this.singleoppData(this.oppData.opportunity_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((i) => {
        let e = i.get("oppId");
        e
          ? this.singleoppData(e)
          : this.oppData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleoppData(i) {
    console.log("Fetching lead data for leadId:", i),
      this.masterSrv.oppById(i).subscribe({
        next: (e) => {
          this.oppList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || r)(F(Mi), F(rs));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-single-opp"]],
    standalone: !0,
    features: [le],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-start",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        "href",
        "/Admin/dealer",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
      ],
    ],
    template: function (e, t) {
      if (
        (e & 1 &&
          (a(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          c(6, "Utils"),
          s()(),
          a(7, "li", 4)(8, "a", 6),
          c(9, "Dealer"),
          s()(),
          a(10, "li", 4)(11, "a", 6),
          c(12, "Single Dealer"),
          s()(),
          a(13, "li", 7)(14, "a", 8),
          c(15),
          s()()()(),
          a(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          c(19, " Opportunities Details "),
          s()(),
          M(20, _y, 89, 16, "div", 12),
          s()()()),
        e & 2)
      ) {
        let n;
        d(8),
          g("routerLink", Ut(4, fy)),
          d(3),
          g("routerLink", ce(5, gy, t.previousId)),
          d(4),
          E((n = t.oppList()) == null ? null : n.opportunity_name),
          d(5),
          g("ngIf", t.oppList());
      }
    },
    dependencies: [Ge, De, Be, Bt],
  });
};
var as = class r {
  constructor(i) {
    this.masterSrv = i;
  }
  resolve(i, e) {
    let t = i.paramMap.get("id");
    return t ? this.masterSrv.oppById(t) : bt(null);
  }
  static ɵfac = function (e) {
    return new (e || r)(ie(je));
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var Ot = class r {
  constructor(i, e) {
    this.router = i;
    this.platformId = e;
  }
  canActivate(i, e) {
    if (!Si(this.platformId)) return !1;
    let t = this.getToken();
    if (!t) return this.router.navigate([""]), !1;
    try {
      let n = this.decodeToken(t);
      if (n.exp * 1e3 < Date.now())
        return this.removeToken(), this.router.navigate([""]), !1;
      if (i.data.roles) {
        let u = n.roles || [],
          b = i.data.roles;
        if (!this.checkRoles(u, b)) return this.router.navigate([""]), !1;
      }
      return !0;
    } catch (n) {
      return (
        console.error("Token validation error:", n),
        this.removeToken(),
        this.router.navigate([""]),
        !1
      );
    }
  }
  getToken() {
    try {
      return typeof localStorage < "u" ? localStorage.getItem("token") : null;
    } catch (i) {
      return console.error("Error accessing token:", i), null;
    }
  }
  removeToken() {
    try {
      typeof localStorage < "u" && localStorage.removeItem("token");
    } catch (i) {
      console.error("Error removing token:", i);
    }
  }
  decodeToken(i) {
    try {
      let e = i.split(".")[1];
      return JSON.parse(atob(e));
    } catch (e) {
      throw (console.error("Token decoding error:", e), e);
    }
  }
  checkRoles(i, e) {
    return e.some((t) => i.includes(t));
  }
  static ɵfac = function (e) {
    return new (e || r)(ie(Lt), ie(Vi));
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var ko = class r {
  role_id;
  role_name;
  description;
  constructor() {
    (this.role_id = ""), (this.role_name = ""), (this.description = "");
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var by = (r) => ({ "is-invalid": r });
function vy(r, i) {
  r & 1 && (a(0, "tr")(1, "td", 30), c(2, "No Roles Found"), s()());
}
function xy(r, i) {
  if (
    (r & 1 &&
      (a(0, "tr")(1, "td", 24),
      c(2),
      s(),
      a(3, "td", 24),
      c(4),
      s(),
      a(5, "td", 24),
      c(6),
      s(),
      a(7, "td"),
      R(8, "div", 31),
      s()()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      n = _();
    d(2),
      E((n.currentPage - 1) * n.itemsPerPage + t + 1),
      d(2),
      E(e.role_name),
      d(2),
      E(e.description);
  }
}
function yy(r, i) {
  if ((r & 1 && (a(0, "option", 53), c(1), s()), r & 2)) {
    let e = i.$implicit;
    g("value", e.dealer_code), d(), K(" ", e.dealer_code, " ");
  }
}
function Cy(r, i) {
  r & 1 && (a(0, "span"), c(1, " Role Name is required. "), s());
}
function wy(r, i) {
  if ((r & 1 && (a(0, "div", 44), M(1, Cy, 2, 0, "span", 25), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("role_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Dy(r, i) {
  if (
    (r & 1 && (Me(0), a(1, "button", 54), c(2, " Edit "), s(), Oe()), r & 2)
  ) {
    let e = _(2);
    d(), g("disabled", !e.isRoleNameChanged());
  }
}
function Sy(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 55),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.onSave());
      }),
      c(1, " Save "),
      s();
  }
}
function My(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 32)(1, "div", 33)(2, "div", 34)(3, "div", 35)(4, "h5", 36),
      c(5),
      s(),
      a(6, "button", 37),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeModal());
      }),
      a(7, "span", 38),
      c(8, "\xD7"),
      s()()(),
      a(9, "div", 39)(10, "form", 40)(11, "div", 41)(12, "div", 42)(
        13,
        "label",
        43
      ),
      c(14, " Role Name "),
      a(15, "span", 44),
      c(16, "*"),
      s()(),
      a(17, "select", 45)(18, "option", 46),
      c(19, "Select Role"),
      s(),
      M(20, yy, 2, 2, "option", 47),
      s(),
      M(21, wy, 2, 1, "div", 48),
      s(),
      a(22, "div", 42)(23, "label", 43),
      c(24, " Description "),
      s(),
      R(25, "input", 49),
      s()(),
      a(26, "div", 50),
      M(27, Dy, 3, 1, "ng-container", 51),
      a(28, "button", 52),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeModal());
      }),
      c(29, " Close "),
      s(),
      M(30, Sy, 2, 0, "ng-template", null, 0, lt),
      s()()()()()();
  }
  if (r & 2) {
    let e,
      t,
      n = rt(31),
      o = _();
    d(5),
      K(
        " ",
        o.roleObj.role_name || o.roleObj.description
          ? "Edit User"
          : "Add New Role",
        " "
      ),
      d(5),
      g("formGroup", o.useForm),
      d(7),
      g(
        "ngClass",
        ce(
          8,
          by,
          ((e = o.useForm.get("role_name")) == null ? null : e.touched) &&
            ((e = o.useForm.get("role_name")) == null ? null : e.invalid)
        )
      ),
      d(),
      g("ngValue", null),
      d(2),
      g("ngForOf", o.staticDealerList),
      d(),
      g(
        "ngIf",
        ((t = o.useForm.get("role_name")) == null ? null : t.invalid) &&
          ((t = o.useForm.get("role_name")) == null ? null : t.touched)
      ),
      d(6),
      g("ngIf", o.roleObj.role_id)("ngIfElse", n);
  }
}
var ss = class r {
  constructor(i) {
    this.cdr = i;
    console.log("Constructor called"), this.initializeForm();
  }
  http = te(St);
  useForm = new _t({});
  roleList = pe([]);
  count = pe(0);
  totalRoles = pe(0);
  isModalOpen = !1;
  roleObj = new ko();
  previousValue = "";
  isEditMode = !1;
  isSubmitting = !1;
  roleListAll = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  pages = [];
  totalPages = 1;
  filteredRoles = [];
  paginatedRoles = [];
  masterSrv = te(je);
  toastr = te(Ht);
  staticDealerList = [
    { dealer_code: "Admin" },
    { dealer_code: "SM" },
    { dealer_code: "PS" },
    { dealer_code: "GM" },
    { dealer_code: "DP" },
  ];
  ngOnInit() {
    console.log("ngOnInit triggered"), this.loadRole();
  }
  initializeForm() {
    console.log("Initializing form..."),
      (this.useForm = new _t({
        role_name: new Ke("", [Se.required]),
        description: new Ke(""),
      }));
  }
  openModal(i) {
    this.useForm.reset(),
      (this.isModalOpen = !0),
      (this.isSubmitting = !1),
      document.body.classList.add("modal-open"),
      (this.isEditMode = !!i),
      i
        ? (this.useForm.patchValue({
            role_name: i.role_name || "",
            description: i.description || "",
          }),
          (this.roleObj = ee({}, i)))
        : (this.roleObj = new ko());
  }
  onSaveAndClose() {
    this.useForm.valid && this.onSave();
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e.controls && this.markFormGroupTouched(e);
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (i) => {
        this.roleList.set(i.data),
          this.count.set(i.data.length),
          (this.filteredRoles = i.data),
          this.applyFilterAndPagination();
      },
      error: (i) => {
        this.toastr.error("Failed to load role", "Error"),
          console.error("role load error:", i);
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    if (!this.isSubmitting) {
      if (
        (this.markFormGroupTouched(this.useForm),
        console.log("Save button clicked"),
        this.useForm.invalid)
      ) {
        console.warn("Form is invalid:", this.useForm.value),
          this.useForm.markAllAsTouched();
        return;
      }
      console.log("Form is valid. Submitting:", this.useForm.value),
        (this.isSubmitting = !0),
        this.masterSrv.createRole(this.useForm.value).subscribe({
          next: (i) => {
            console.log("Role created successfully", i),
              this.toastr.success("Role created successfully!", "Success"),
              this.loadRole(),
              console.log("closing from next"),
              this.closeModal();
          },
          error: (i) => {
            console.error("Create role error:", i), (this.isSubmitting = !1);
            let e =
              i.error?.error || i.error?.message || "Failed to create role.";
            this.toastr.error(e, "Error"),
              this.closeModal(),
              console.log("closing from error");
          },
          complete: () => {
            this.isSubmitting = !1;
          },
        });
    }
  }
  onSearchChange() {
    (this.currentPage = 1), this.applyFilterAndPagination();
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = parseInt(i.target.value, 10)),
      (this.currentPage = 1),
      this.applyFilterAndPagination();
  }
  applyFilterAndPagination() {
    let i = this.roleList(),
      e = (this.searchTerm ?? "").toLowerCase();
    (this.filteredRoles = i.filter(
      (t) =>
        (t.role_name ?? "").toLowerCase().includes(e) ||
        (t.description ?? "").toLowerCase().includes(e)
    )),
      (this.totalPages = Math.ceil(
        this.filteredRoles.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (t, n) => n + 1)),
      this.paginateRoles();
  }
  closeModal() {
    (this.isModalOpen = !1),
      document.body.classList.remove("modal-open"),
      console.log("Modal closed");
  }
  paginateRoles() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedRoles = this.filteredRoles.slice(i, e);
  }
  goToPage(i) {
    (this.currentPage = i), this.paginateRoles();
  }
  previousPage() {
    this.currentPage > 1 && (this.currentPage--, this.paginateRoles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateRoles());
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredRoles.length
    );
  }
  min(i, e) {
    return Math.min(i, e);
  }
  updatePagination() {
    (this.totalPages = Math.ceil(
      this.filteredRoles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      (this.paginatedRoles = this.filteredRoles.slice(
        (this.currentPage - 1) * this.itemsPerPage,
        this.currentPage * this.itemsPerPage
      ));
  }
  isRoleNameChanged() {
    return this.useForm.value.role_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || r)(F(qe));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-role"]],
    standalone: !0,
    features: [le],
    decls: 42,
    vars: 4,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3"],
      [1, "col-md-6"],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "4", 1, "text-center"],
      [1, "d-flex"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "role_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "role_name",
        "formControlName",
        "role_name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["class", "text-danger", 4, "ngIf"],
      [
        "id",
        "description",
        "type",
        "text",
        "formControlName",
        "description",
        "placeholder",
        "Description",
        1,
        "form-control",
        "form-control-lg",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "disabled",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        c(6, "Users"),
        s()(),
        a(7, "li", 7)(8, "a", 8),
        c(9, "Role Master"),
        s()()()(),
        a(10, "div", 9)(11, "div", 10)(12, "a", 11),
        O("click", function () {
          return t.openModal();
        }),
        R(13, "i", 12),
        c(14, "Add Roles "),
        s()(),
        a(15, "div", 13)(16, "div", 14)(17, "p", 15),
        c(18, "Total Roles"),
        s(),
        a(19, "h3", 16),
        c(20),
        s()()()(),
        a(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20),
        R(25, "div", 21),
        s()()(),
        a(26, "div", 22)(27, "table", 23)(28, "thead")(29, "tr")(30, "th", 24),
        c(31, "Sr No"),
        s(),
        a(32, "th", 24),
        c(33, "Role Name"),
        s(),
        a(34, "th", 24),
        c(35, "Description"),
        s()()(),
        a(36, "tbody"),
        M(37, vy, 3, 0, "tr", 25)(38, xy, 9, 3, "tr", 26),
        s()()(),
        a(39, "div", 27),
        R(40, "div", 28),
        s()()(),
        M(41, My, 32, 10, "div", 29),
        s()),
        e & 2 &&
          (d(20),
          K(" ", t.filteredRoles.length, " "),
          d(17),
          g("ngIf", t.paginatedRoles.length === 0),
          d(),
          g("ngForOf", t.paginatedRoles),
          d(3),
          g("ngIf", t.isModalOpen));
    },
    dependencies: [
      Ge,
      Tn,
      At,
      Ft,
      Mt,
      qt,
      It,
      si,
      fn,
      Oi,
      mi,
      fi,
      De,
      ft,
      gt,
      Be,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.table-responsive[_ngcontent-%COMP%]{width:100%;overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}body[_ngcontent-%COMP%]{overflow-x:hidden}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.toast-warning[_ngcontent-%COMP%]{background-color:#ff9800!important;color:#fff!important}.toast-info[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}",
    ],
  });
};
var ls = class r {
  dtOptions = {};
  ngOnInit() {
    this.dtOptions = { pagingType: "full_numbers" };
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-datatable"]],
    standalone: !0,
    features: [le],
    decls: 94,
    vars: 1,
    consts: [["datatable", "", 1, "row-border", "hover", 3, "dtOptions"]],
    template: function (e, t) {
      e & 1 &&
        (a(0, "table", 0)(1, "thead")(2, "tr")(3, "th"),
        c(4, "ID"),
        s(),
        a(5, "th"),
        c(6, "First name"),
        s(),
        a(7, "th"),
        c(8, "Last name"),
        s()()(),
        a(9, "tbody")(10, "tr")(11, "td"),
        c(12, "1"),
        s(),
        a(13, "td"),
        c(14, "Foo"),
        s(),
        a(15, "td"),
        c(16, "Bar"),
        s()(),
        a(17, "tr")(18, "td"),
        c(19, "2"),
        s(),
        a(20, "td"),
        c(21, "Someone"),
        s(),
        a(22, "td"),
        c(23, "Youknow"),
        s()(),
        a(24, "tr")(25, "td"),
        c(26, "3"),
        s(),
        a(27, "td"),
        c(28, "Iamout"),
        s(),
        a(29, "td"),
        c(30, "Ofinspiration"),
        s()(),
        a(31, "tr")(32, "td"),
        c(33, "4"),
        s(),
        a(34, "td"),
        c(35, "Yoda"),
        s(),
        a(36, "td"),
        c(37, "Skywalker"),
        s()(),
        a(38, "tr")(39, "td"),
        c(40, "5"),
        s(),
        a(41, "td"),
        c(42, "Patrick"),
        s(),
        a(43, "td"),
        c(44, "Dupont"),
        s()(),
        a(45, "tr")(46, "td"),
        c(47, "6"),
        s(),
        a(48, "td"),
        c(49, "Barack"),
        s(),
        a(50, "td"),
        c(51, "Obama"),
        s()(),
        a(52, "tr")(53, "td"),
        c(54, "7"),
        s(),
        a(55, "td"),
        c(56, "Fran\xE7ois"),
        s(),
        a(57, "td"),
        c(58, "Holland"),
        s()(),
        a(59, "tr")(60, "td"),
        c(61, "8"),
        s(),
        a(62, "td"),
        c(63, "Michel"),
        s(),
        a(64, "td"),
        c(65, "Popo"),
        s()(),
        a(66, "tr")(67, "td"),
        c(68, "9"),
        s(),
        a(69, "td"),
        c(70, "Chuck"),
        s(),
        a(71, "td"),
        c(72, "Norris"),
        s()(),
        a(73, "tr")(74, "td"),
        c(75, "10"),
        s(),
        a(76, "td"),
        c(77, "Simon"),
        s(),
        a(78, "td"),
        c(79, "Robin"),
        s()(),
        a(80, "tr")(81, "td"),
        c(82, "11"),
        s(),
        a(83, "td"),
        c(84, "Louis"),
        s(),
        a(85, "td"),
        c(86, "Lin"),
        s()(),
        a(87, "tr")(88, "td"),
        c(89, "12"),
        s(),
        a(90, "td"),
        c(91, "Zelda"),
        s(),
        a(92, "td"),
        c(93, "Link"),
        s()()()()),
        e & 2 && g("dtOptions", t.dtOptions);
    },
    dependencies: [Mr, Np],
  });
};
var Lr = class r {
  team_id;
  team_name;
  team_lead_id;
  team_lead_email;
  total_teams;
  constructor() {
    (this.team_id = ""),
      (this.team_name = ""),
      (this.team_lead_id = ""),
      (this.team_lead_email = ""),
      (this.total_teams = 0);
  }
  static ɵfac = function (e) {
    return new (e || r)();
  };
  static ɵprov = re({ token: r, factory: r.ɵfac, providedIn: "root" });
};
var Oy = (r) => ({ "is-invalid": r });
function Ty(r, i) {
  r & 1 && (a(0, "tr")(1, "td", 47), c(2, "No Teams Found"), s()());
}
function ky(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "tr")(1, "td"),
      c(2),
      s(),
      a(3, "td"),
      c(4),
      s(),
      a(5, "td", 48)(6, "a", 49),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.onEdit(n));
      }),
      R(7, "i", 50),
      s(),
      a(8, "a", 51),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.openDeleteModal(n));
      }),
      R(9, "i", 52),
      s()()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = i.index,
      n = _();
    d(2), E((n.currentPage - 1) * n.itemsPerPage + t + 1), d(2), E(e.team_name);
  }
}
function Py(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "li", 53)(1, "a", 42),
      O("click", function () {
        let n = w(e).$implicit,
          o = _();
        return D(o.goToPage(n));
      }),
      c(2),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _();
    X("active", e === t.currentPage), d(2), E(e);
  }
}
function Ey(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 54)(1, "div", 55)(2, "div", 56)(3, "div", 57)(4, "h5", 58),
      c(5, "Delete User"),
      s()(),
      a(6, "div", 59),
      c(7, "Are you sure you want to delete this user?"),
      s(),
      a(8, "div", 60)(9, "button", 61),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeDeleteModal());
      }),
      c(10, "Cancel"),
      s(),
      a(11, "button", 62),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.deleteTeamid());
      }),
      c(12, "Delete"),
      s()()()()();
  }
}
function Iy(r, i) {
  r & 1 && (a(0, "span"), c(1, "Team Name is required."), s());
}
function Ay(r, i) {
  if ((r & 1 && (a(0, "div", 73), M(1, Iy, 2, 0, "span", 34), s()), r & 2)) {
    let e,
      t = _(2);
    d(),
      g(
        "ngIf",
        (e = t.useForm.get("team_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Fy(r, i) {
  if (r & 1) {
    let e = J();
    Me(0),
      a(1, "button", 78),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.onUpdate());
      }),
      c(2, " Edit "),
      s(),
      Oe();
  }
  if (r & 2) {
    let e = _(2);
    d(), g("disabled", !e.isTeamNameChanged());
  }
}
function Ry(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "button", 61),
      O("click", function () {
        w(e);
        let n = _(2);
        return D(n.onSave());
      }),
      c(1, " save "),
      s();
  }
  if (r & 2) {
    let e = _(2);
    se("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function Vy(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 63)(1, "div", 64)(2, "div", 56)(3, "div", 57)(4, "h5", 65),
      c(5),
      s(),
      a(6, "button", 66),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeModal());
      }),
      a(7, "span", 67),
      c(8, "\xD7"),
      s()()(),
      a(9, "div", 68)(10, "form", 69)(11, "div", 70)(12, "div", 71)(
        13,
        "label",
        72
      ),
      c(14, " Team Name "),
      a(15, "span", 73),
      c(16, "*"),
      s()(),
      R(17, "input", 74),
      M(18, Ay, 2, 1, "div", 75),
      s()()()(),
      a(19, "div", 60),
      M(20, Fy, 3, 1, "ng-container", 76),
      a(21, "button", 77),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.closeModal());
      }),
      c(22, " Close "),
      s(),
      M(23, Ry, 2, 1, "ng-template", null, 0, lt),
      s()()()();
  }
  if (r & 2) {
    let e,
      t,
      n = rt(24),
      o = _();
    d(5),
      K(
        " ",
        o.userObj.team_name || o.userObj.team_lead_email
          ? "Edit User"
          : "Add New Team",
        " "
      ),
      d(5),
      g("formGroup", o.useForm),
      d(7),
      g(
        "ngClass",
        ce(
          6,
          Oy,
          ((e = o.useForm.get("team_name")) == null ? null : e.touched) &&
            ((e = o.useForm.get("team_name")) == null ? null : e.invalid)
        )
      ),
      d(),
      g(
        "ngIf",
        ((t = o.useForm.get("team_name")) == null ? null : t.invalid) &&
          ((t = o.useForm.get("team_name")) == null ? null : t.touched)
      ),
      d(2),
      g("ngIf", o.teamObj.team_id)("ngIfElse", n);
  }
}
var cs = class r {
  constructor(i, e) {
    this.aleartsrv = i;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = pe(0);
  teamList = pe([]);
  totalteam = pe(0);
  userList = pe([]);
  teamObj = new Lr();
  count = pe(0);
  userObj = new Lr();
  previousValue = "";
  totalPages = 0;
  isModalOpen = !1;
  masterSrv = te(je);
  toastr = te(Ht);
  useForm = new _t({});
  isEditMode = !1;
  previousEmail = "";
  allUsers = [];
  pages = [];
  filteredTeams = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  filteredTeam = [];
  isDeleteModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  paginatedTeams = [];
  filteredTeamList = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (i, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllTeams(),
      this.getAllTeams(),
      this.displayAllTeams(),
      (this.filteredTeams = this.teamList()),
      this.paginateTeams(),
      this.filterTeams();
  }
  initializeForm() {
    this.useForm = new _t({
      team_name: new Ke("", [Se.required, Se.minLength(2), Se.maxLength(50)]),
    });
  }
  openModal(i) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!i),
      i
        ? ((this.teamObj = ee({}, i)),
          this.useForm.patchValue({
            team_name: i.team_name,
            team_lead_email: i.team_lead_email,
            team_lead_id: i.team_lead_id,
          }),
          console.log("fhgir"),
          console.log("\u{1F539} Edit Mode: team Object ->", this.teamObj),
          console.log("\u{1F539} teamobj.team_id ->", this.teamObj.team_id))
        : ((this.teamObj = new Lr()),
          (this.teamObj.team_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.teamObj
          ));
  }
  onEdit(i) {
    console.log("Edit button clicked. Team ID:", i?.team_id),
      (this.isEditMode = !0),
      (this.isModalOpen = !0),
      (this.teamObj = ee({}, i)),
      this.masterSrv.getTeamById(i.team_id).subscribe(
        (e) => {
          if (e?.status === 200) {
            let t = e.data?.TeamDetails;
            t
              ? (console.log("Team Details:", t),
                this.useForm.patchValue({
                  team_name: t.team_name,
                  team_lead_email: t.team_lead_email,
                  team_lead_id: t.team_lead_id,
                }),
                console.log("Form data patched, opening modal..."),
                setTimeout(() => {
                  $("#exampleModalCenter").modal("show");
                }, 0))
              : (console.error("No team details found"),
                this.toastr.error("Team details not found", "Error"));
          }
        },
        (e) => {
          console.error("Error fetching team details:", e),
            this.toastr.error("Error fetching team details", "Error");
        }
      );
  }
  isTeamNameChanged() {
    return (
      this.useForm.dirty && this.useForm.value.team_name !== this.previousValue
    );
  }
  selectedteamForDeletion = null;
  selectteamForDeletion(i) {
    (this.selectedteamForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let i = this.useForm.get("team_name"),
      e = this.useForm.get("team_lead_email"),
      t = this.useForm.get("team_id");
    if (i && t && i.value) {
      console.log("Team name value:", i.value),
        console.log("Available teams:", this.teamList());
      let n = this.teamList().find((o) => o.team_name === i.value);
      n
        ? (console.log("Selected Team:", n),
          t.setValue(n.team_id),
          e?.setValue(n.team_lead_email))
        : console.warn("Team not found:", i.value);
    }
  }
  openDeleteModal(i) {
    (this.selectedteamForDeletion = i), (this.isDeleteModalOpen = !0);
  }
  getAllTeams() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (i) => {
        i && i.data.rows
          ? (this.allUsers = i.data.rows)
          : this.toastr.warning("No teams found", "Information");
      },
      error: (i) => {
        console.error("teams fetch error:", i),
          this.toastr.error(i.message || "Failed to fetch users", "Error");
      },
    });
  }
  updatePagination() {
    let i = this.filteredTeams,
      e = (this.currentPage - 1) * this.itemsPerPage,
      t = e + this.itemsPerPage;
    (this.paginatedTeams = i.slice(e, t)),
      (this.totalPages = Math.ceil(i.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (n, o) => o + 1));
  }
  onSearchChange() {
    (this.currentPage = 1), this.filterTeams();
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredTeam.length
    );
  }
  onItemsPerPageChange(i) {
    (this.itemsPerPage = +i.target.value),
      (this.currentPage = 1),
      this.filterTeams();
  }
  filterTeams() {
    (this.filteredTeams = this.teamList().filter((i) =>
      i.team_name.toLowerCase().includes(this.searchTerm.toLowerCase())
    )),
      this.paginateTeams();
  }
  paginateTeams() {
    let i = (this.currentPage - 1) * this.itemsPerPage,
      e = i + this.itemsPerPage;
    this.paginatedTeams = this.filteredTeams.slice(i, e);
  }
  updateVisiblePages() {
    let i =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(i, i + this.maxVisiblePages);
  }
  goToPage(i) {
    (this.currentPage = i), this.updateVisiblePages(), this.paginateTeams();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateTeams());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateTeams());
  }
  deleteTeamid() {
    console.log(
      "this is the select user",
      this.selectteamForDeletion,
      this.selectedteamForDeletion
    ),
      this.selectedteamForDeletion && this.selectedteamForDeletion.team_id
        ? this.masterSrv
            .deleteTeam(this.selectedteamForDeletion.team_id)
            .subscribe(
              (i) => {
                this.toastr.success("Team deleted successfully", "Success"),
                  (this.isDeleteModalOpen = !1),
                  this.displayAllTeams();
              },
              (i) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No Team selected for deletion");
  }
  displayAllTeams() {
    console.log("Fetching all teams..."),
      this.masterSrv.getMultipleTeams().subscribe({
        next: (i) => {
          i && i.data.rows
            ? (this.teamList.set(i.data.rows),
              (this.filteredTeams = i.data.rows),
              this.totalteam.set(i.data.rows.length),
              this.initializeTeamPagination())
            : (this.teamList.set([]),
              (this.filteredTeams = []),
              this.toastr.warning("No team found", "Information"),
              this.totalteam.set(0),
              this.initializeTeamPagination());
        },
        error: (i) => {
          console.error("team fetch error:", i),
            this.toastr.error(i.message || "Failed to fetch team", "Error"),
            this.teamList.set([]),
            (this.filteredTeams = []),
            this.totalteam.set(0),
            this.initializeTeamPagination();
        },
      });
  }
  initializeTeamPagination() {
    let i = this.filteredTeams.length;
    (this.totalPages = Math.ceil(i / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, t) => t + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateTeams();
  }
  min(i, e) {
    return Math.min(i, e);
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.teamObj = ee(ee({}, this.teamObj), this.useForm.value)),
        console.log("\u{1F680} Updated Payload before API call:", this.teamObj),
        this.masterSrv.updateTeam(this.teamObj).subscribe(
          (i) => {
            i.status === 200
              ? (console.log("\u2705 Update Success:", i),
                this.toastr.success(i.message, "Success"),
                this.displayAllTeams(),
                this.closeModal(),
                this.userList.set(
                  this.userList().map((e) =>
                    e.team_id === this.teamObj.team_id
                      ? ee(ee({}, e), this.teamObj)
                      : e
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0))
              : this.toastr.error("Update failed", "Error");
          },
          (i) => {
            console.error("\u274C API Error:", i),
              this.toastr.error("Failed to update team", "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  closeModal() {
    this.isModalOpen = !1;
  }
  markFormGroupTouched(i) {
    Object.values(i.controls).forEach((e) => {
      e.markAsTouched(), e instanceof _t && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let i = this.useForm.value;
    console.log("Form Data being sent to API:", i),
      this.masterSrv.createNewTeam(i).subscribe({
        next: (e) => {
          this.toastr.success("Team created successfully!", "Success"),
            this.displayAllTeams(),
            this.closeModal(),
            setTimeout(() => {
              this.cdr.detectChanges(), this.cdr.markForCheck();
            }, 0);
        },
        error: (e) => {
          console.error("Team creation error:", e);
          let t = e?.error?.message || "Failed to create team";
          this.toastr.error(t, "Creation Error");
        },
      });
  }
  loadTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (i) => {
        this.count.set(i.data.count), this.teamList.set(i.data.rows);
      },
      error: (i) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", i);
      },
    });
  }
  static ɵfac = function (e) {
    return new (e || r)(F(Nr), F(qe));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-team"]],
    standalone: !0,
    features: [le],
    decls: 71,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search teams...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "3", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "team_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "team_name",
        "type",
        "text",
        "formControlName",
        "team_name",
        "placeholder",
        "Team Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        c(6, "Utils"),
        s()(),
        a(7, "li", 7)(8, "a", 8),
        c(9, "Team Master"),
        s()()()(),
        a(10, "div", 9)(11, "div", 10)(12, "a", 11),
        O("click", function () {
          return t.openModal();
        }),
        R(13, "i", 12),
        c(14, "Add Team "),
        s()(),
        a(15, "div", 13)(16, "div", 14)(17, "p", 15),
        c(18, "Total Team"),
        s(),
        a(19, "h3", 16),
        c(20),
        s()()()(),
        a(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        R(26, "label", 22),
        a(27, "select", 23),
        O("change", function (o) {
          return t.onItemsPerPageChange(o);
        }),
        a(28, "option", 24),
        c(29, "10"),
        s(),
        a(30, "option", 25),
        c(31, "25"),
        s(),
        a(32, "option", 26),
        c(33, "50"),
        s(),
        a(34, "option", 27),
        c(35, "100"),
        s()(),
        a(36, "label", 28),
        c(37, "records per page"),
        s()(),
        a(38, "div", 29)(39, "div", 30)(40, "input", 31),
        Je("ngModelChange", function (o) {
          return Xe(t.searchTerm, o) || (t.searchTerm = o), o;
        }),
        O("input", function () {
          return t.onSearchChange();
        }),
        s()()()(),
        c(41, " \xA0\xA0 "),
        s(),
        a(42, "div", 32)(43, "table", 33)(44, "thead")(45, "tr")(46, "th"),
        c(47, "Sr No"),
        s(),
        a(48, "th"),
        c(49, "Team Name"),
        s(),
        a(50, "th"),
        c(51, "Action"),
        s()()(),
        a(52, "tbody"),
        M(53, Ty, 3, 0, "tr", 34)(54, ky, 10, 2, "tr", 35),
        s()()(),
        a(55, "div", 36)(56, "div", 37)(57, "div", 38),
        c(58),
        s()(),
        a(59, "div", 37)(60, "div", 39)(61, "ul", 40)(62, "li", 41)(
          63,
          "a",
          42
        ),
        O("click", function () {
          return t.previousPage();
        }),
        c(64, "Previous"),
        s()(),
        M(65, Py, 3, 3, "li", 43),
        a(66, "li", 44)(67, "a", 42),
        O("click", function () {
          return t.nextPage();
        }),
        c(68, "Next"),
        s()()()()()()()()()(),
        M(69, Ey, 13, 0, "div", 45)(70, Vy, 25, 8, "div", 46)),
        e & 2 &&
          (d(20),
          K(" ", t.totalteam(), " "),
          d(20),
          Ze("ngModel", t.searchTerm),
          d(13),
          g("ngIf", t.paginatedTeams.length === 0),
          d(),
          g("ngForOf", t.paginatedTeams),
          d(4),
          oi(
            " Showing ",
            (t.currentPage - 1) * t.itemsPerPage + 1,
            " to ",
            t.currentPage * t.itemsPerPage < t.teamList().length
              ? t.currentPage * t.itemsPerPage
              : t.teamList().length,
            " of ",
            t.teamList().length,
            " entries "
          ),
          d(4),
          X("disabled", t.currentPage === 1),
          d(3),
          g("ngForOf", t.visiblePages),
          d(),
          X("disabled", t.currentPage === t.totalPages),
          d(3),
          g("ngIf", t.isDeleteModalOpen),
          d(),
          g("ngIf", t.isModalOpen));
    },
    dependencies: [
      De,
      ft,
      gt,
      Be,
      Ge,
      Tn,
      At,
      Ft,
      Mt,
      It,
      si,
      fn,
      Wt,
      Oi,
      mi,
      fi,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}",
    ],
  });
};
var Ny = ["dropdown"],
  Ly = ["modelDropdown"],
  By = ["psDropdown"],
  Cc = (r) => ({ color: r }),
  ds = (r) => ({ "background-color": r });
function Hy(r, i) {
  r & 1 && (a(0, "div"), R(1, "router-outlet"), s());
}
function jy(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 53),
      O("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      a(1, "input", 54),
      O("change", function (n) {
        w(e);
        let o = _().$implicit,
          u = _(3);
        return D(u.onDealerChange(o.dealer_id, n));
      }),
      s(),
      a(2, "label", 55),
      c(3),
      s()();
  }
  if (r & 2) {
    let e = _().$implicit,
      t = _(3);
    d(),
      g("id", e.dealer_id)("checked", t.selectedDealers.includes(e.dealer_id)),
      d(),
      g("for", e.dealer_id),
      d(),
      E(e.dealer_name);
  }
}
function zy(r, i) {
  if ((r & 1 && (Me(0), M(1, jy, 4, 4, "div", 52), Oe()), r & 2)) {
    let e = i.$implicit;
    d(), g("ngIf", e.dealer_name && e.dealer_name.trim() !== "");
  }
}
function Uy(r, i) {
  if ((r & 1 && (Me(0), M(1, zy, 2, 1, "ng-container", 51), Oe()), r & 2)) {
    let e = _(2);
    d(), g("ngForOf", e.filteredDealers());
  }
}
function Wy(r, i) {
  r & 1 && (a(0, "div", 56), c(1, " No Dealers Found "), s());
}
function $y(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 53),
      O("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      a(1, "input", 54),
      O("change", function (n) {
        w(e);
        let o = _().$implicit,
          u = _(3);
        return D(u.onPSChange(o.user_id, n));
      }),
      s(),
      a(2, "label", 55),
      c(3),
      s()();
  }
  if (r & 2) {
    let e = _().$implicit,
      t = _(3);
    d(),
      g("id", e.user_id)("checked", t.selectedPSs.includes(e.user_id)),
      d(),
      g("for", e.user_id),
      d(),
      E(e.name);
  }
}
function Gy(r, i) {
  if ((r & 1 && (Me(0), M(1, $y, 4, 4, "div", 52), Oe()), r & 2)) {
    let e = i.$implicit;
    d(), g("ngIf", e.name && e.name.trim() !== "");
  }
}
function Yy(r, i) {
  if ((r & 1 && (Me(0), M(1, Gy, 2, 1, "ng-container", 51), Oe()), r & 2)) {
    let e = _(2);
    d(), g("ngForOf", e.filteredPSs());
  }
}
function qy(r, i) {
  r & 1 && (a(0, "div", 56), c(1, " No PS Found "), s());
}
function Ky(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 53),
      O("click", function () {
        w(e);
        let n = _().$implicit,
          o = _(3);
        return D(o.toggleModelSelection(n));
      }),
      R(1, "input", 57),
      a(2, "span", 58),
      c(3),
      s()();
  }
  if (r & 2) {
    let e = _().$implicit;
    d(), g("checked", e.selected), d(2), E(e.model_name);
  }
}
function Qy(r, i) {
  if ((r & 1 && (Me(0), M(1, Ky, 4, 2, "div", 52), Oe()), r & 2)) {
    let e = i.$implicit;
    d(), g("ngIf", e.model_name && e.model_name.trim() !== "");
  }
}
function Zy(r, i) {
  if ((r & 1 && (Me(0), M(1, Qy, 2, 1, "ng-container", 51), Oe()), r & 2)) {
    let e = _(2);
    d(), g("ngForOf", e.filteredModels());
  }
}
function Xy(r, i) {
  r & 1 && (a(0, "div", 56), c(1, "No Models Found"), s());
}
function Jy(r, i) {
  if ((r & 1 && R(0, "div", 74), r & 2)) {
    let e = _().$implicit,
      t = _(2);
    ut("left", t.getTargetPosition(e.value, e.target), "%");
  }
}
function eC(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 59)(1, "div", 60)(2, "div", 61)(3, "span", 62),
      c(4),
      s(),
      a(5, "div", 63)(6, "span", 64),
      c(7),
      s(),
      R(8, "div", 65),
      s()(),
      a(9, "div", 66)(10, "div", 67)(11, "div", 68),
      O("click", function (n) {
        let o = w(e).$implicit,
          u = _(2);
        return D(u.showTooltip(n, o));
      }),
      R(12, "div", 69),
      s(),
      M(13, Jy, 1, 2, "div", 70),
      s()()(),
      a(14, "div", 71)(15, "div", 72),
      c(16, "GROWTH"),
      s(),
      a(17, "div", 73),
      c(18),
      s()()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(2);
    d(4),
      E(e.name),
      d(3),
      di(" ", e.value, " | ", e.achieved, "% "),
      d(),
      g("ngClass", e.growth >= 0 ? "arrow-up" : "arrow-down"),
      d(3),
      se(
        "title",
        "Actual: " + e.value + ", Target: " + e.target + t.getStaticMsg(e.name)
      ),
      d(),
      ut("width", t.getProgressWidth(e.value, e.target), "%"),
      g("ngStyle", ce(14, ds, t.getProgressColor(e.value, e.target))),
      d(),
      g("ngIf", e.target !== 0),
      d(),
      X("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      d(4),
      K(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function tC(r, i) {
  if ((r & 1 && R(0, "div", 74), r & 2)) {
    let e = _().$implicit,
      t = _(2);
    ut("left", t.getTargetPosition(e.value, e.target), "%");
  }
}
function iC(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 59)(1, "div", 60)(2, "div", 61)(3, "span", 62),
      c(4),
      s(),
      a(5, "div", 63)(6, "span", 64),
      c(7),
      s(),
      R(8, "div", 65),
      s()(),
      a(9, "div", 66)(10, "div", 67)(11, "div", 68),
      O("click", function (n) {
        let o = w(e).$implicit,
          u = _(2);
        return D(u.showTooltip(n, o));
      }),
      R(12, "div", 69),
      s(),
      M(13, tC, 1, 2, "div", 70),
      s()()(),
      a(14, "div", 71)(15, "div", 72),
      c(16, "GROWTH"),
      s(),
      a(17, "div", 73),
      c(18),
      s()()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(2);
    d(4),
      E(e.name),
      d(3),
      di("", e.value, " | ", e.achieved, "%"),
      d(),
      g("ngClass", e.growth >= 0 ? "arrow-up" : "arrow-down"),
      d(3),
      se(
        "title",
        "Actual: " +
          e.value +
          ", Target: " +
          e.target +
          t.getProductivityMsg(e.name)
      ),
      d(),
      ut("width", t.getProgressWidth(e.value, e.target), "%"),
      g("ngStyle", ce(14, ds, t.getProgressColor(e.value, e.target))),
      d(),
      g("ngIf", e.target !== 0),
      d(),
      X("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      d(4),
      K(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function nC(r, i) {
  if ((r & 1 && R(0, "div", 74), r & 2)) {
    let e = _().$implicit,
      t = _(2);
    ut("left", t.getTargetPosition(e.value, e.target), "%");
  }
}
function rC(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 59)(1, "div", 60)(2, "div", 61)(3, "span", 62),
      c(4),
      s(),
      a(5, "div", 63)(6, "span", 64),
      c(7),
      s(),
      R(8, "div", 65),
      s()(),
      a(9, "div", 66)(10, "div", 67)(11, "div", 68),
      O("click", function (n) {
        let o = w(e).$implicit,
          u = _(2);
        return D(u.showTooltip(n, o));
      }),
      R(12, "div", 69),
      s(),
      M(13, nC, 1, 2, "div", 70),
      s()()(),
      a(14, "div", 71)(15, "div", 72),
      c(16, "GROWTH"),
      s(),
      a(17, "div", 73),
      c(18),
      s()()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(2);
    d(4),
      E(e.name),
      d(3),
      di("", e.value, " | ", e.achieved, "%"),
      d(),
      g("ngClass", e.growth >= 0 ? "arrow-up" : "arrow-down"),
      d(3),
      se("title", "Actual: " + e.value + ", Target: " + e.target),
      d(),
      ut("width", t.getProgressWidth(e.value, e.target), "%"),
      g("ngStyle", ce(14, ds, t.getProgressColor(e.value, e.target))),
      d(),
      g("ngIf", e.target !== 0),
      d(),
      X("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      d(4),
      K(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function oC(r, i) {
  if ((r & 1 && R(0, "div", 74), r & 2)) {
    let e = _().$implicit,
      t = _(2);
    ut("left", t.getTargetPosition(e.value, e.target), "%");
  }
}
function aC(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 59)(1, "div", 60)(2, "div", 61)(3, "span", 62),
      c(4),
      s(),
      a(5, "div", 63)(6, "span", 64),
      c(7),
      s(),
      R(8, "div", 65),
      s()(),
      a(9, "div", 66)(10, "div", 67)(11, "div", 68),
      O("click", function (n) {
        let o = w(e).$implicit,
          u = _(2);
        return D(u.showTooltip(n, o));
      }),
      R(12, "div", 69),
      s(),
      M(13, oC, 1, 2, "div", 70),
      s()()(),
      a(14, "div", 71)(15, "div", 72),
      c(16, "GROWTH"),
      s(),
      a(17, "div", 73),
      c(18),
      s()()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(2);
    d(4),
      E(e.name),
      d(3),
      di("", e.value, " | ", e.target, "%"),
      d(),
      g("ngClass", e.growth >= 0 ? "arrow-up" : "arrow-down"),
      d(3),
      se(
        "title",
        "Actual: " +
          e.value +
          ", Target: " +
          e.target +
          t.getActivePsMsg(e.name)
      ),
      d(),
      ut("width", t.getProgressWidth(e.value, e.target), "%"),
      g("ngStyle", ce(14, ds, t.getProgressColor(e.value, e.target))),
      d(),
      g("ngIf", e.target !== 0),
      d(),
      X("positive-box", e.growth > 0)("negative-box", e.growth < 0),
      d(4),
      K(" ", e.growth > 0 ? "+" + e.growth : e.growth, "% ");
  }
}
function sC(r, i) {
  if ((r & 1 && (a(0, "div", 75), c(1), s()), r & 2)) {
    let e = _(2);
    ut("top", e.tooltipY, "px")("left", e.tooltipX, "px"),
      d(),
      K(" ", e.tooltipText, " ");
  }
}
function lC(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div")(1, "div", 6)(2, "div", 9)(3, "div", 10)(4, "section", 11)(
      5,
      "h2"
    ),
      ct(),
      a(6, "svg", 12),
      R(7, "path", 13),
      s(),
      c(8, " Filters "),
      s(),
      jn(),
      a(9, "div", 14)(10, "select", 15),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return (
          Xe(o.selectedSummaryFilter, n) || (o.selectedSummaryFilter = n), D(n)
        );
      }),
      O("change", function () {
        w(e);
        let n = _();
        return D(n.onFilterChange(n.selectedSummaryFilter));
      }),
      a(11, "option", 16),
      c(12, "Today"),
      s(),
      a(13, "option", 17),
      c(14, "Yesterday"),
      s(),
      a(15, "option", 18),
      c(16, "This Week"),
      s(),
      a(17, "option", 19),
      c(18, "Last Week"),
      s(),
      a(19, "option", 20),
      c(20, "This Month"),
      s(),
      a(21, "option", 21),
      c(22, "Last Month"),
      s(),
      a(23, "option", 22),
      c(24, "This Quarter"),
      s(),
      a(25, "option", 23),
      c(26, "Last Quarter"),
      s()()(),
      a(27, "div", 24, 0),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.toggleDropdown());
      }),
      a(29, "div", 25),
      c(30),
      s(),
      a(31, "div", 26)(32, "div", 27)(33, "button", 28),
      O("click", function (n) {
        return w(e), _().selectAllDealers(n), D(n.stopPropagation());
      }),
      c(34, "Select All"),
      s(),
      a(35, "button", 28),
      O("click", function (n) {
        return w(e), _().clearDealers(n), D(n.stopPropagation());
      }),
      c(36, "Clear"),
      s()(),
      a(37, "div", 29),
      O("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      a(38, "input", 30),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.dealerSearch, n) || (o.dealerSearch = n), D(n);
      }),
      s()(),
      M(39, Uy, 2, 1, "ng-container", 31)(
        40,
        Wy,
        2,
        0,
        "ng-template",
        null,
        1,
        lt
      ),
      s()(),
      a(42, "div", 24, 2),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.selectedDealers.length > 0 && n.togglePSDropdown());
      }),
      a(44, "div", 25),
      c(45),
      s(),
      a(46, "div", 32),
      O("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      a(47, "div", 27)(48, "button", 28),
      O("click", function (n) {
        return w(e), _().toggleSelectAllPS(n), D(n.stopPropagation());
      }),
      c(49, "Select All"),
      s(),
      a(50, "button", 28),
      O("click", function (n) {
        return w(e), _().clearAllPS(n), D(n.stopPropagation());
      }),
      c(51, "Clear"),
      s()(),
      a(52, "div", 29),
      O("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      a(53, "input", 33),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.psSearch, n) || (o.psSearch = n), D(n);
      }),
      s()(),
      M(54, Yy, 2, 1, "ng-container", 31)(
        55,
        qy,
        2,
        0,
        "ng-template",
        null,
        3,
        lt
      ),
      s()(),
      a(57, "div", 24, 4),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.toggleModelDropdown());
      }),
      a(59, "div", 25),
      c(60),
      s(),
      a(61, "div", 32),
      O("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      a(62, "div", 27)(63, "button", 28),
      O("click", function (n) {
        return w(e), _().selectAllModels(n), D(n.stopPropagation());
      }),
      c(64, "Select All"),
      s(),
      a(65, "button", 28),
      O("click", function (n) {
        return w(e), _().clearModels(n), D(n.stopPropagation());
      }),
      c(66, "Clear"),
      s()(),
      a(67, "div", 29),
      O("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      a(68, "input", 34),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.modelSearch, n) || (o.modelSearch = n), D(n);
      }),
      s()(),
      M(69, Zy, 2, 1, "ng-container", 31)(
        70,
        Xy,
        2,
        0,
        "ng-template",
        null,
        5,
        lt
      ),
      s()(),
      a(72, "div", 35)(73, "button", 36),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.resetFilters());
      }),
      c(74, "Reset"),
      s(),
      a(75, "button", 37),
      O("click", function () {
        w(e);
        let n = _();
        return D(n.refreshData());
      }),
      R(76, "i", 38),
      c(77, " Refresh "),
      s()()()(),
      a(78, "section", 39)(79, "div", 40)(80, "div", 41)(81, "h3", 42),
      c(82, " Efforts "),
      s(),
      a(83, "span", 43),
      R(84, "span", 44),
      a(85, "span", 45),
      c(86),
      s(),
      c(87, " overall "),
      s()(),
      a(88, "div", 46),
      M(89, eC, 19, 16, "div", 47),
      s()(),
      a(90, "div", 40)(91, "div", 48)(92, "h3", 42),
      c(93, " Productivity "),
      s(),
      a(94, "span", 43),
      R(95, "span", 44),
      a(96, "span", 45),
      c(97),
      s(),
      c(98, " overall "),
      s()(),
      a(99, "div", 46),
      M(100, iC, 19, 16, "div", 47),
      s()(),
      a(101, "div", 40)(102, "div", 49)(103, "h3"),
      c(104, "Active PS"),
      s()(),
      a(105, "div", 46),
      M(106, rC, 19, 16, "div", 47),
      s()(),
      a(107, "div", 40)(108, "div", 48)(109, "h3", 42),
      c(110, " Other KPIs "),
      s(),
      a(111, "span", 43),
      R(112, "span", 44),
      a(113, "span", 45),
      c(114),
      s(),
      c(115, " target "),
      s()(),
      a(116, "div", 46),
      M(117, aC, 19, 16, "div", 47),
      s()(),
      M(118, sC, 2, 5, "div", 50),
      s()()()();
  }
  if (r & 2) {
    let e = rt(41),
      t = rt(56),
      n = rt(71),
      o = _();
    d(10),
      Ze("ngModel", o.selectedSummaryFilter),
      d(17),
      X("open", o.dropdownOpen),
      d(3),
      K(
        " ",
        o.selectedDealers.length === o.allDealers.length
          ? "All Dealers Selected"
          : o.selectedDealers.length
          ? o.selectedDealers.length + " selected"
          : "Select Dealers",
        " "
      ),
      d(8),
      Ze("ngModel", o.dealerSearch),
      d(),
      g("ngIf", o.filteredDealers().length > 0)("ngIfElse", e),
      d(3),
      X("open", o.dropdownPSOpen)("disabled", o.selectedDealers.length === 0),
      se(
        "title",
        o.selectedDealers.length === 0 ? "Select a dealer to see PS" : null
      ),
      d(3),
      K(
        " ",
        o.selectedPSs.length === o.filteredPSs().length
          ? "All PS Selected"
          : o.selectedPSs.length
          ? o.selectedPSs.length + " selected"
          : "Select PS",
        " "
      ),
      d(8),
      Ze("ngModel", o.psSearch),
      d(),
      g("ngIf", o.filteredPSs().length > 0)("ngIfElse", t),
      d(3),
      X("open", o.modelDropdownOpen),
      d(3),
      K(
        " ",
        o.selectedModels.length === o.models.length
          ? "All Models Selected"
          : o.selectedModels.length
          ? o.selectedModels.length + " selected"
          : "Select Model",
        " "
      ),
      d(8),
      Ze("ngModel", o.modelSearch),
      d(),
      g("ngIf", o.filteredModels().length > 0)("ngIfElse", n),
      d(16),
      g(
        "ngStyle",
        ce(33, Cc, o.getKpiColor(o.categoryPercentages.Efforts || 0))
      ),
      d(),
      K(" ", o.categoryPercentages.Efforts || 0, "% "),
      d(3),
      g("ngForOf", o.efforts),
      d(7),
      g(
        "ngStyle",
        ce(35, Cc, o.getKpiColor(o.categoryPercentages.Productivity || 0))
      ),
      d(),
      K(" ", o.categoryPercentages.Productivity || 0, "% "),
      d(3),
      g("ngForOf", o.productivity),
      d(6),
      g("ngForOf", o.activePSKpis),
      d(7),
      g(
        "ngStyle",
        ce(37, Cc, o.getKpiColor(o.categoryPercentages["Other KPIs"] || 0))
      ),
      d(),
      K(" ", o.categoryPercentages["Other KPIs"] || 0, "% "),
      d(3),
      g("ngForOf", o.otherKpis),
      d(),
      g("ngIf", o.tooltipText);
  }
}
var Po = class r {
  constructor(i, e, t, n) {
    this.sidebarService = i;
    this.router = e;
    this.http = t;
    this.cd = n;
  }
  selectedTab = "dashboard";
  isSidebarOpen = !0;
  dropdownOpen = !1;
  modelDropdownOpen = !1;
  selectedModels = [];
  isFirstLoadPS = !0;
  isLoading = !1;
  selectedDealer = "all";
  selectedPS = "all";
  models = [];
  selectedSummaryFilter;
  selectedDealers = [];
  allDealers = [];
  dropdown;
  modelDropdown;
  psDropdown;
  aggregatedMetrics;
  psSearch = "";
  manualPSSelection = !1;
  efforts = [];
  productivity = [];
  otherKpis = [];
  activePSKpis = [];
  selectedPSs = [];
  dropdownPSOpen = !1;
  selectedModel = "all";
  dealers = [];
  dealerSearch = "";
  modelSearch = "";
  tooltipX = 0;
  tooltipY = 0;
  tooltipText = null;
  users = [];
  categoryPercentages = { Efforts: 0, Productivity: 0, "Other KPIs": 0 };
  ngOnInit() {
    this.selectedSummaryFilter =
      localStorage.getItem("selectedSummaryFilter") || "DAY";
    let i = this.selectedDealers?.length ? this.selectedDealers : "all",
      e = this.selectedPSs?.length ? this.selectedPSs : "all",
      t =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(this.selectedSummaryFilter, i, e, t),
      (this.efforts = []),
      this.loadDealers(),
      this.sidebarService.isOpen$.subscribe((o) => {
        this.isSidebarOpen = o;
      });
    let n = this.router.url;
    n.includes("/Admin/dashboard")
      ? (this.selectedTab = "dashboard")
      : n.includes("/Admin/summary") && (this.selectedTab = "summary"),
      this.router.events.pipe(zt((o) => o instanceof Sn)).subscribe((o) => {
        o.urlAfterRedirects.includes("/Admin/dashboard")
          ? (this.selectedTab = "dashboard")
          : o.urlAfterRedirects.includes("/Admin/summary") &&
            (this.selectedTab = "summary");
      });
  }
  getOverallProgress() {
    if (!this.efforts || this.efforts.length === 0) return 0;
    let i = this.efforts.reduce((e, t) => e + t.achieved, 0);
    return Math.round(i / this.efforts.length);
  }
  toggleSidebar() {
    this.sidebarService.toggleSidebar();
  }
  selectAllDealers(i) {
    i.stopPropagation(),
      (this.selectedDealers = this.allDealers.map((e) => e.dealer_id)),
      this.loadDealers("DAY", this.selectedDealers);
  }
  clearDealers(i) {
    i.stopPropagation(),
      (this.selectedDealers = []),
      (this.dealerSearch = ""),
      (this.selectedPSs = []),
      (this.selectedModels = []),
      (this.modelSearch = ""),
      this.models.forEach((e) => (e.selected = !1));
  }
  selectTab(i) {
    this.selectedTab = i;
  }
  isActive(i) {
    return this.router.url.includes(`/Admin/${i}`);
  }
  navigateTo(i) {
    this.router.navigate(["/Admin", i]);
  }
  navigateToSingleDealer(i) {
    this.router.navigate(["/Admin/singleDealer", i]);
  }
  resetFilters() {
    (this.selectedSummaryFilter = "DAY"),
      (this.selectedDealers = this.allDealers.map((i) => i.dealer_id)),
      (this.selectedPSs = this.users.map((i) => i.user_id)),
      (this.selectedModels = this.models.map((i) => i.model)),
      this.loadDealers(this.selectedSummaryFilter, this.selectedDealers);
  }
  filteredModels() {
    return this.modelSearch
      ? this.models.filter((i) =>
          i.model_name.toLowerCase().includes(this.modelSearch.toLowerCase())
        )
      : this.models;
  }
  getKpis(i) {
    if (!i.aggregatedMetrics) return [];
    let { efforts: e, productivity: t, otherKpis: n } = i.aggregatedMetrics;
    return [
      ...Object.values(e || {}),
      ...Object.values(t || {}),
      ...Object.values(n || {}),
    ];
  }
  onFilterChange(i) {
    (this.selectedSummaryFilter = i),
      localStorage.setItem("selectedSummaryFilter", i);
    let e = this.selectedDealers?.length ? this.selectedDealers : "all",
      t = this.selectedPSs?.length ? this.selectedPSs : "all",
      n =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(this.selectedSummaryFilter, e, t, n);
  }
  toggleDropdown() {
    this.dropdownOpen = !this.dropdownOpen;
  }
  onDealerToggle(i, e) {
    e.stopPropagation(),
      this.selectedDealers.includes(i)
        ? (this.selectedDealers = this.selectedDealers.filter((n) => n !== i))
        : this.selectedDealers.push(i);
    let t = this.selectedDealers.length
      ? this.selectedDealers.join(",")
      : "all";
    this.loadDealers(this.selectedSummaryFilter, t);
  }
  onDealerChange(i, e) {
    if (
      (e.target.checked
        ? this.selectedDealers.push(i)
        : (this.selectedDealers = this.selectedDealers.filter((u) => u !== i)),
      this.selectedDealers.length === 0)
    )
      this.selectedPSs = [];
    else {
      let u = this.users
        .filter((b) => this.selectedDealers.includes(b.dealer_id))
        .map((b) => b.user_id);
      this.selectedPSs = this.selectedPSs.filter((b) => u.includes(b));
    }
    let t = this.selectedDealers.length > 0 ? [...this.selectedDealers] : "all",
      n = this.selectedPSs.length > 0 ? [...this.selectedPSs] : "all",
      o =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(this.selectedSummaryFilter, t, n, o);
  }
  get psDropdownLabel() {
    let i = this.filteredPSs();
    if (!i.length) return "Select PS";
    let e = i.filter((t) => this.selectedPSs.includes(t.user_id)).length;
    return e === 0
      ? "Select PS"
      : e === i.length
      ? "All PS Selected"
      : `${e} selected`;
  }
  trackByModelId(i, e) {
    return e.model;
  }
  filteredPSs() {
    let i = this.users;
    return (
      this.selectedDealers.length > 0 &&
        this.selectedDealers.length !== this.allDealers.length &&
        (i = i.filter((e) => this.selectedDealers.includes(e.dealer_id))),
      this.psSearch &&
        (i = i.filter((e) =>
          e.name.toLowerCase().includes(this.psSearch.toLowerCase())
        )),
      i
    );
  }
  getStaticMsg(i) {
    switch (i) {
      case "New Enquiry":
        return " (2 per day per ps)";
      case "Outgoing Calls":
        return " (60 per day per ps)";
      case "Unq. Call Connected":
        return " (30 per day per ps)";
      case "Avg Duration/call":
        return " (2m per call)";
      case "Avg Connected Calls/PS":
        return " (30 per day per ps)";
      case "UTD":
        return " (30 per month per ps)";
      default:
        return "";
    }
  }
  getProductivityMsg(i) {
    switch (i) {
      case "New Orders":
        return " (3 per month per ps)";
      case "Net Orders":
        return " (2.5 per month per ps)";
      case "Retails":
        return " (3 per month per ps)";
      default:
        return "";
    }
  }
  getActivePsMsg(i) {
    switch (i) {
      case "TD/Car/Day":
        return " (2 per day per retailer)";
      case "KMs/TDs":
        return " (5 per day per retailer)";
      default:
        return "";
    }
  }
  refreshData() {
    this.isLoading = !0;
    let i =
        this.selectedSummaryFilter ||
        localStorage.getItem("selectedFilter") ||
        "DAY",
      e = this.selectedDealers?.length ? this.selectedDealers : "all",
      t = this.selectedPSs?.length ? this.selectedPSs : "all",
      n =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(i, e, t, n, () => {
      this.isLoading = !1;
    });
  }
  loadDealers(i = "DAY", e = "all", t = null, n = "", o) {
    let u = "https://uat.smartassistapp.in/api/superAdmin/dashboard/summary",
      b = localStorage.getItem("token"),
      C = "";
    e &&
      e !== "all" &&
      (Array.isArray(e)
        ? (C += `dealer_ids=${e.join(",")}&`)
        : ((C += `dealer_ids=${e}&`), (e = e.split(",")))),
      t &&
        t !== "all" &&
        (Array.isArray(t)
          ? (C += `user_id=${t.join(",")}&`)
          : ((C += `user_id=${t}&`), (t = t.split(",")))),
      (C += `type=${i}`),
      n && n !== "all" && (C += `&modal=${encodeURIComponent(n)}`),
      this.http
        .get(`${u}?${C}`, { headers: { Authorization: `Bearer ${b}` } })
        .subscribe({
          next: (T) => {
            (!this.allDealers || this.allDealers.length === 0) &&
              (this.allDealers = T.dealers || []);
            let k = !this.selectedDealers || this.selectedDealers.length === 0;
            e === "all" && k && !this.dealers.length
              ? (this.selectedDealers = this.allDealers.map(
                  (Ce) => Ce.dealer_id || Ce.dealerId
                ))
              : Array.isArray(e) && e.length > 0 && (this.selectedDealers = e);
            let V = T.models || [];
            (this.models = V.map((Ce) =>
              Ne(ee({}, Ce), {
                selected: this.selectedModels.includes(Ce.model),
              })
            )),
              (!this.selectedModels || this.selectedModels.length === 0) &&
                ((this.selectedModels = V.map((Ce) => Ce.model)),
                this.models.forEach((Ce) => (Ce.selected = !0)));
            let B = Array.isArray(e) ? e : [e],
              L = !t || t === "all" ? [] : Array.isArray(t) ? t : t.split(","),
              H =
                e === "all"
                  ? [...this.allDealers]
                  : this.allDealers.filter((Ce) =>
                      B.includes(Ce.dealerId || Ce.dealer_id)
                    );
            (this.dealers = H),
              (this.users =
                e === "all"
                  ? this.allDealers.flatMap((Ce) => Ce.users || [])
                  : H.flatMap((Ce) => Ce.users || [])),
              this.manualPSSelection
                ? (this.selectedPSs = this.selectedPSs.filter((Ce) =>
                    this.users.some((ae) => ae.user_id === Ce)
                  ))
                : (this.selectedPSs = this.users.map((Ce) => Ce.user_id));
            let U = null,
              j = B.length > 0 && B[0] !== "all",
              Y = L.length > 0,
              ge = n && n !== "all";
            if (
              (!j && !Y && !ge
                ? (U = T.dealerAggregatedMetrics)
                : j && !Y
                ? (U = T.selectedDealerAggregatedMetrics)
                : Y
                ? (U = T.selectedUserAggregatedMetrics)
                : !j && !Y && ge && (U = T.dealerAggregatedMetrics),
              !U && this.dealers[0] && (U = this.dealers[0]),
              U)
            ) {
              (this.efforts = Object.values(U.efforts || {})),
                (this.productivity = Object.values(U.productivity || {}));
              let Ce = Object.values(U.otherKpis || {});
              (this.activePSKpis = Ce.filter(
                (ae) => ae.name === "By Test Drive"
              )),
                (this.otherKpis = Ce.filter(
                  (ae) => ae.name !== "By Test Drive"
                )),
                (this.categoryPercentages = U.categoryPercentages || {
                  Efforts: 0,
                  Productivity: 0,
                  "Other KPIs": 0,
                });
            }
            o && o();
          },
          error: (T) => {
            o && o(),
              (this.efforts = []),
              (this.productivity = []),
              (this.activePSKpis = []),
              (this.otherKpis = []),
              (this.categoryPercentages = {
                Efforts: 0,
                Productivity: 0,
                "Other KPIs": 0,
              });
          },
        });
  }
  selectAllModels(i) {
    i.stopPropagation(),
      (this.selectedModels = this.models.map((e) => e.model)),
      this.models.forEach((e) => (e.selected = !0));
  }
  clearModels(i) {
    i.stopPropagation(),
      (this.selectedModels = []),
      this.models.forEach((e) => (e.selected = !1));
  }
  toggleSelectAllPS(i) {
    i.stopPropagation();
    let e = this.filteredPSs().map((n) => n.user_id);
    e.every((n) => this.selectedPSs.includes(n))
      ? (this.selectedPSs = this.selectedPSs.filter((n) => !e.includes(n)))
      : (this.selectedPSs = Array.from(new Set([...this.selectedPSs, ...e])));
  }
  getProgressWidth(i, e) {
    if (e <= 0) return 0;
    let t = Math.max(i, e);
    return (i / t) * 100;
  }
  getTargetPosition(i, e) {
    if (e <= 0) return 0;
    let t = Math.max(i, e);
    return (e / t) * 100;
  }
  getProgressColor(i, e) {
    return i >= e ? "#28a745" : i >= e * 0.8 ? "#fd7e14" : "#dc3545";
  }
  clearAllPS(i) {
    i.stopPropagation(), (this.manualPSSelection = !0), (this.selectedPSs = []);
  }
  toggleKpiDetails(i) {
    i.showDetails = !i.showDetails;
  }
  filteredDealers() {
    return this.dealerSearch
      ? this.allDealers.filter((i) =>
          i.dealer_name.toLowerCase().includes(this.dealerSearch.toLowerCase())
        )
      : this.allDealers;
  }
  onPSChange(i, e) {
    (this.manualPSSelection = !0),
      e.target.checked
        ? this.selectedPSs.includes(i) || this.selectedPSs.push(i)
        : (this.selectedPSs = this.selectedPSs.filter((u) => u !== i));
    let t =
        this.selectedDealers.length > 0
          ? this.selectedDealers.join(",")
          : "all",
      n = this.selectedPSs.length > 0 ? this.selectedPSs.join(",") : "all",
      o =
        this.selectedModel && this.selectedModel !== "all"
          ? this.selectedModel
          : "";
    this.loadDealers(this.selectedSummaryFilter, t, n, o);
  }
  toggleModelSelection(i) {
    (i.selected = !i.selected), this.onModelChange(i.model);
  }
  clickOutside(i) {
    let e = i.target;
    this.modelDropdownOpen &&
      this.modelDropdown &&
      !this.modelDropdown.nativeElement.contains(e) &&
      (this.modelDropdownOpen = !1),
      this.dropdownOpen &&
        this.dropdown &&
        !this.dropdown.nativeElement.contains(e) &&
        (this.dropdownOpen = !1),
      this.dropdownPSOpen &&
        this.psDropdown &&
        !this.psDropdown.nativeElement.contains(e) &&
        (this.dropdownPSOpen = !1);
  }
  getKpiColor(i) {
    return i <= 50 ? "red" : i <= 80 ? "amber" : "green";
  }
  onModelChange(i) {
    let e = this.selectedModels.indexOf(i);
    e > -1 ? this.selectedModels.splice(e, 1) : this.selectedModels.push(i),
      (this.models = this.models.map((t) =>
        Ne(ee({}, t), { selected: this.selectedModels.includes(t.model) })
      )),
      this.callAPI();
  }
  getSelectedDealerNames() {
    return !this.selectedDealers || this.selectedDealers.length === 0
      ? "All Dealers"
      : this.selectedDealers.map((i) => this.getDealerName(i)).join(", ");
  }
  abs(i) {
    return Math.abs(i);
  }
  toggleModelDropdown() {
    this.modelDropdownOpen = !this.modelDropdownOpen;
  }
  toggleAllModels(i) {
    i.target.checked
      ? (this.selectedModels = this.models.map((e) => e.model))
      : (this.selectedModels = []),
      this.callAPI();
  }
  callAPI() {
    let i = this.selectedModels.length ? this.selectedModels.join(",") : "all",
      e =
        this.selectedDealers.length > 0
          ? this.selectedDealers.join(",")
          : "all",
      t = this.selectedPSs.length > 0 ? this.selectedPSs.join(",") : "all";
    this.loadDealers(this.selectedSummaryFilter, e, t, i);
  }
  onCheckboxChange(i) {
    let e = i.target.value;
    i.target.checked
      ? this.selectedDealers.push(e)
      : (this.selectedDealers = this.selectedDealers.filter((n) => n !== e));
    let t =
      this.selectedDealers.length === 0
        ? "all"
        : this.selectedDealers.join(",");
    this.loadDealers(this.selectedSummaryFilter, t);
  }
  getDealerName(i) {
    let e = this.allDealers.find((t) => t.dealer_id === i);
    return e ? e.dealer_name : "";
  }
  isDealerSelected(i) {
    return this.selectedDealers.includes(i.dealer_id);
  }
  toggleDealerSelection(i) {
    let e = i.dealer_id;
    this.selectedDealers.includes(e)
      ? (this.selectedDealers = this.selectedDealers.filter((n) => n !== e))
      : this.selectedDealers.push(e);
    let t =
      this.selectedDealers.length === 0
        ? "all"
        : this.selectedDealers.join(",");
    this.loadDealers(this.selectedSummaryFilter, t);
  }
  togglePSDropdown() {
    this.dropdownPSOpen = !this.dropdownPSOpen;
  }
  resolveExtraMsg(i) {
    let e = this.getStaticMsg(i.name);
    return e ||
      ((e = this.getProductivityMsg(i.name)), e) ||
      ((e = this.getActivePsMsg(i.name)), e)
      ? e
      : "";
  }
  showTooltip(i, e) {
    if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {
      let n = i.currentTarget.getBoundingClientRect(),
        o = this.resolveExtraMsg(e);
      (this.tooltipText = `Actual: ${e.value}, Target: ${e.target}${o}`),
        (this.tooltipX = window.scrollX + i.clientX),
        (this.tooltipY = window.scrollY + n.bottom + 10),
        setTimeout(() => (this.tooltipText = null), 2e3);
    }
  }
  static ɵfac = function (e) {
    return new (e || r)(F(kn), F(Lt), F(St), F(qe));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-overview"]],
    viewQuery: function (e, t) {
      if ((e & 1 && (at(Ny, 5), at(Ly, 5), at(By, 5)), e & 2)) {
        let n;
        tt((n = it())) && (t.dropdown = n.first),
          tt((n = it())) && (t.modelDropdown = n.first),
          tt((n = it())) && (t.psDropdown = n.first);
      }
    },
    hostBindings: function (e, t) {
      e & 1 &&
        O(
          "click",
          function (o) {
            return t.clickOutside(o);
          },
          !1,
          wn
        );
    },
    standalone: !0,
    features: [le],
    decls: 4,
    vars: 3,
    consts: [
      ["dropdown", ""],
      ["noDealers", ""],
      ["psDropdown", ""],
      ["noPS", ""],
      ["modelDropdown", ""],
      ["noModels", ""],
      [1, "mt-4"],
      [3, "ngSwitch"],
      [4, "ngSwitchCase"],
      [1, "sa-dashboard-container"],
      [1, "filters-wrap"],
      [1, "filters"],
      [
        "width",
        "18",
        "height",
        "18",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "stroke",
        "currentColor",
      ],
      [
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
        "stroke-width",
        "2",
        "d",
        "M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z",
      ],
      [1, "select"],
      [3, "ngModelChange", "change", "ngModel"],
      ["value", "DAY"],
      ["value", "YESTERDAY"],
      ["value", "WEEK"],
      ["value", "LAST_WEEK"],
      ["value", "MTD"],
      ["value", "LAST_MONTH"],
      ["value", "QTD"],
      ["value", "LAST_QUARTER"],
      [1, "select-dropdown", 3, "click"],
      [1, "dropdown-label"],
      [1, "dropdown-menu"],
      [1, "actions-row"],
      ["type", "button", 3, "click"],
      [1, "search-row", 3, "click"],
      [
        "type",
        "text",
        "placeholder",
        "Search Dealers",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [4, "ngIf", "ngIfElse"],
      [1, "dropdown-menu", 3, "click"],
      [
        "type",
        "text",
        "placeholder",
        "Search PS",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [
        "type",
        "text",
        "placeholder",
        "Search Models",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "filter-actions"],
      ["type", "button", 1, "btn", 3, "click"],
      [1, "btn", "btn-sm", 3, "click"],
      [1, "fa", "fa-refresh"],
      [1, "kpi-grid"],
      [1, "kpi-card"],
      [
        1,
        "card-header",
        2,
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "12px",
      ],
      [
        2,
        "margin",
        "0",
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "6px",
        "margin-left",
        "-10px",
      ],
      [
        "id",
        "chipdiv",
        1,
        "chip",
        2,
        "border",
        "1px solid #ccc",
        "background",
        "#f1f5ff",
        "margin-left",
        "auto",
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "4px",
      ],
      [1, "dot"],
      [1, "count", 2, "font-weight", "bold", 3, "ngStyle"],
      [1, "kpi-items"],
      ["class", "kpi-item-wrapper", 4, "ngFor", "ngForOf"],
      [
        1,
        "card-header",
        2,
        "display",
        "flex",
        "align-items",
        "center",
        "gap",
        "8px",
      ],
      [1, "card-header"],
      ["class", "custom-tooltip", 3, "top", "left", 4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      ["class", "checkbox-item", 3, "click", 4, "ngIf"],
      [1, "checkbox-item", 3, "click"],
      ["type", "checkbox", 3, "change", "id", "checked"],
      [3, "for"],
      [1, "no-dealers"],
      ["type", "checkbox", 3, "checked"],
      [2, "margin-left", "8px"],
      [1, "kpi-item-wrapper"],
      [1, "kpi-item"],
      [1, "kpi-row"],
      [1, "kpi-label"],
      [1, "kpi-values"],
      [1, "kpi-actual"],
      [1, "trend-icon", 3, "ngClass"],
      [1, "chart-container"],
      [1, "progress-wrapper"],
      [1, "progress", 3, "click"],
      [1, "bar", 3, "ngStyle"],
      ["class", "target-marker-global", 3, "left", 4, "ngIf"],
      [1, "growth-box"],
      [1, "growth-title"],
      [1, "growth-value"],
      [1, "target-marker-global"],
      [1, "custom-tooltip"],
    ],
    template: function (e, t) {
      e & 1 &&
        (a(0, "div", 6),
        Me(1, 7),
        M(2, Hy, 2, 0, "div", 8)(3, lC, 119, 39, "div", 8),
        Oe(),
        s()),
        e & 2 &&
          (d(),
          g("ngSwitch", t.selectedTab),
          d(),
          g("ngSwitchCase", "dashboard"),
          d(),
          g("ngSwitchCase", "summary"));
    },
    dependencies: [Kt, ft, gt, Be, Dn, Qo, Zo, At, Ft, Mt, qt, It, Wt, xr, Ge],
    styles: [
      '.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:7rem}@media (min-width: 768px) and (max-width: 819px){.content-body[_ngcontent-%COMP%]{margin-left:42px!important}}@media (max-width: 768px){.select-dropdown[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{width:100%!important}}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .deznav[_ngcontent-%COMP%]{width:80px}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .nav-text[_ngcontent-%COMP%]{display:none}@media (min-width: 2560px){.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:336px!important}}@media screen and (min-width: 1920px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:336px}}@media screen and (width: 1366px){.content-body[_ngcontent-%COMP%]{margin-left:4rem}}#main-wrapper[_ngcontent-%COMP%]{display:flex}.content-body[_ngcontent-%COMP%]{transition:margin-left .3s ease;width:100%}.content-section[_ngcontent-%COMP%]{padding:20px;margin-top:70px}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:2rem;margin-top:20px}.performance-panel[_ngcontent-%COMP%]{flex:1;background:#f9f9f9;border-radius:8px;padding:20px;height:300px}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px}.metric-box[_ngcontent-%COMP%]{background:#fff;padding:1rem;border-radius:8px;text-align:center;box-shadow:0 2px 4px #0000001a}.super-header[_ngcontent-ng-c3749377617][_ngcontent-%COMP%]{background-color:#fff;margin-top:15px}.content-body[_ngcontent-%COMP%]   .container-fluid[_ngcontent-%COMP%], .content-body[_ngcontent-%COMP%]{padding-top:0}.tracking-tight[_ngcontent-%COMP%]{letter-spacing:-.025em}.font-bold[_ngcontent-%COMP%]{font-weight:700}@media (max-width: 768px){.tracking-tight[_ngcontent-%COMP%]{font-size:1.125rem}}[_ngcontent-%COMP%]:root{--bg: #0b1020;--bg-soft: #0e1428;--card: rgba(255, 255, 255, .06);--card-border: rgba(255, 255, 255, .14);--text: #e8edf6;--muted: #a6b0c3;--brand: #7aa2ff;--brand-2: #6ae3ff;--success: #34d399;--danger: #ef4444;--warn: #f59e0b;--ring: rgba(122, 162, 255, .35);--chip: #1b223a;--select: #111832;--grid-line: rgba(255, 255, 255, .06);--shadow: 0 10px 30px rgba(0, 0, 0, .35), 0 2px 8px rgba(0, 0, 0, .25);--radius: 16px;--radius-sm: 12px;--radius-xs: 8px;--blur: 12px;--fw-600: 600;--fw-700: 700}[data-theme=light][_ngcontent-%COMP%]{--bg: #f7f9fc;--bg-soft: #eef2fb;--card: #ffffff;--card-border: #e7e9f2;--text: #1a2234;--muted: #5b657a;--brand: #2563eb;--brand-2: #60a5fa;--success: #10b981;--danger: #ef4444;--warn: #d97706;--ring: rgba(37, 99, 235, .2);--chip: #f1f5ff;--select: #ffffff;--grid-line: rgba(26, 34, 52, .06);--shadow: 0 10px 30px rgba(16, 24, 40, .08), 0 2px 8px rgba(16, 24, 40, .06)}*[_ngcontent-%COMP%]{box-sizing:border-box}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}.dashboard-header[_ngcontent-%COMP%]{background-color:#fff!important;padding:15px;box-shadow:0 4px 6px #0000001a}body[_ngcontent-%COMP%]{margin:0;font-family:Inter,ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Helvetica Neue,Arial,"Apple Color Emoji","Segoe UI Emoji";color:var(--text);background:radial-gradient(1200px 800px at 10% -10%,var(--brand-2) 0%,transparent 35%),radial-gradient(1000px 700px at 120% 10%,var(--brand) 0%,transparent 30%),linear-gradient(180deg,var(--bg-soft),var(--bg));background-attachment:fixed;line-height:1.6}.grid-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;pointer-events:none;background:linear-gradient(var(--grid-line) 1px,transparent 1px) 0 0/ 100% 48px,linear-gradient(90deg,var(--grid-line) 1px,transparent 1px) 0 0/ 48px 100%;mask-image:radial-gradient(1200px 800px at 40% 0%,rgba(0,0,0,.35),transparent 70%)}.container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:28px 20px 56px}.header[_ngcontent-%COMP%]{position:relative;margin-bottom:20px;padding:24px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);overflow:hidden}.header[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;background:radial-gradient(600px 150px at 20% 0%,rgba(255,255,255,.12),transparent 40%);pointer-events:none}.header-top[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px;justify-content:space-between;margin-bottom:10px}.brand-chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:10px;background:var(--chip);border:1px solid var(--card-border);padding:8px 12px;border-radius:999px;font-size:12px;color:var(--muted)}.brand-dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background:linear-gradient(135deg,var(--brand),var(--brand-2));box-shadow:0 0 0 6px var(--ring)}.theme-toggle[_ngcontent-%COMP%]{border:1px solid var(--card-border);background:var(--chip);color:var(--text);border-radius:999px;padding:8px 12px;cursor:pointer;transition:transform .15s ease}.theme-toggle[_ngcontent-%COMP%]:hover{transform:translateY(-1px)}.main-title[_ngcontent-%COMP%]{margin:6px 0 4px;font-weight:var(--fw-700);letter-spacing:.2px;font-size:clamp(22px,3.4vw,32px);background:linear-gradient(90deg,var(--text),var(--brand));-webkit-background-clip:text;background-clip:text;color:#000!important}.subtitle[_ngcontent-%COMP%]{color:var(--muted);font-size:14px}.progress[_ngcontent-%COMP%]{width:100%;height:10px;background:#f0f0f0;border-radius:6px;overflow:hidden;margin-top:6px}.filters-wrap[_ngcontent-%COMP%]{position:sticky;top:10px;z-index:5;margin:18px 0 28px;background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a}.trend-up[_ngcontent-%COMP%]{color:green}.trend-down[_ngcontent-%COMP%]{color:red}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:14px;align-items:center}.filters[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:14px;font-weight:var(--fw-600);color:var(--muted);margin:0 6px 0 2px;display:flex;align-items:center;gap:8px}.select[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;background:var(--select);border:1px solid #e2e8f0;border-radius:999px;padding:6px 10px;min-width:230px;transition:box-shadow .2s ease,border-color .2s ease}.select[_ngcontent-%COMP%]:focus-within{box-shadow:0 0 0 6px var(--ring);border-color:var(--brand)}.select[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:18px;height:18px;opacity:.7}.select[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{border:0;background:transparent;color:var(--text);width:100%;padding:6px 6px 6px 2px;outline:none;font-size:14px;appearance:none}.filter-actions[_ngcontent-%COMP%]{margin-left:auto;display:flex;gap:10px;flex-wrap:wrap}.filter-container[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center;width:100%;gap:10px}.filter-actions[_ngcontent-%COMP%]{display:flex;gap:10px;flex-wrap:wrap}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip, #f3f4f6);color:var(--text, #111);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:600;cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.btn[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:var(--chip);color:var(--text);border-radius:10px;padding:10px 14px;font-size:13px;font-weight:var(--fw-600);cursor:pointer;transition:transform .15s ease,box-shadow .15s ease,background .2s ease}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[_ngcontent-%COMP%]:hover{transform:translateY(-1px);box-shadow:var(--shadow)}.btn.primary[_ngcontent-%COMP%]{background:linear-gradient(135deg,var(--brand),var(--brand-2));color:#fff;border-color:transparent}.kpi-grid[_ngcontent-%COMP%]{display:grid;gap:22px;grid-template-columns:repeat(12,1fr)}.kpi-card[_ngcontent-%COMP%]{background-color:#fff!important;border-radius:10px;box-shadow:0 4px 6px #0000001a;grid-column:span 6;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);padding:18px 18px 16px;overflow:hidden;position:relative}.kpi-card[_ngcontent-%COMP%]:after{content:"";position:absolute;inset:0;pointer-events:none;background:radial-gradient(450px 120px at 95% -10%,rgba(122,162,255,.13),transparent 45%)}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);transition:transform .2s ease}.card-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:10px;margin-bottom:12px}.card-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:15px;margin-left:-15px;letter-spacing:.2px}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;border:1px solid #ccc;background:var(--chip);border-radius:999px;padding:6px 10px;font-size:12px;color:var(--muted)}.kpi-items[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px}.kpi-item[_ngcontent-%COMP%]{border:1px solid #e2e8f0;border-radius:15px!important;background:linear-gradient(180deg,rgba(255,255,255,.04),transparent);padding:10px 12px;transition:border-color .2s ease,background .2s ease}.kpi-item[_ngcontent-%COMP%]:hover{border-color:var(--ring);background:linear-gradient(180deg,rgba(122,162,255,.08),transparent)}.kpi-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:12px;font-size:13px;margin-bottom:8px}.kpi-label[_ngcontent-%COMP%]{color:var(--muted)}.kpi-values[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;font-weight:var(--fw-600)}.kpi-actual[_ngcontent-%COMP%]{color:var(--text)}.trend-icon[_ngcontent-%COMP%]{width:16px;height:16px}.progress[_ngcontent-%COMP%]{position:relative;height:10px;border-radius:999px;overflow:hidden;background:linear-gradient(0deg,#ffffff14,#ffffff0a);border:1px solid #e2e8f0}.growth[_ngcontent-%COMP%]{grid-column:span 12;border:1px solid var(--card-border);background:var(--card);-webkit-backdrop-filter:blur(var(--blur));backdrop-filter:blur(var(--blur));border-radius:var(--radius);box-shadow:var(--shadow);padding:18px;background-color:#fff!important;box-shadow:0 4px 6px #0000001a}.growth-head[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;margin-bottom:8px}.growth-head[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:15px}.growth-note[_ngcontent-%COMP%]{color:var(--muted);font-size:12px;margin-top:6px}.sparkline[_ngcontent-%COMP%]{width:100%;height:140px;border-radius:var(--radius);border:1px dashed var(--card-border);display:grid;place-items:center;color:var(--muted);font-size:13px}@media (max-width: 1024px){.kpi-card[_ngcontent-%COMP%]{grid-column:span 12}}@media (max-width: 640px){.filters[_ngcontent-%COMP%]{gap:10px}.select[_ngcontent-%COMP%]{min-width:100%}.filter-actions[_ngcontent-%COMP%]{width:100%;justify-content:flex-end}}@keyframes _ngcontent-%COMP%_pop{0%{transform:scale(.98);opacity:0}to{transform:scale(1);opacity:1}}.kpi-card[_ngcontent-%COMP%], .growth[_ngcontent-%COMP%], .header[_ngcontent-%COMP%], .filters[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pop .35s ease both;border-radius:10px!important}.ring[_ngcontent-%COMP%]{box-shadow:0 0 0 6px var(--ring);transition:box-shadow .3s ease}.trend-icon[_ngcontent-%COMP%]{width:18px;height:18px;stroke-width:2.25;vertical-align:middle;flex-shrink:0;display:inline-block}.kpi-values[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:8px;line-height:1}.trend-up[_ngcontent-%COMP%]{color:var(--success)}.trend-down[_ngcontent-%COMP%]{color:var(--danger)}.kpi-item[_ngcontent-%COMP%]{flex:1}.kpi-item-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:20px;border-radius:14px;margin-bottom:16px}.kpi-item[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;justify-content:center}.growth-box[_ngcontent-%COMP%]{background:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;width:90px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:flex;flex-direction:column;align-items:center}.growth-box[_ngcontent-%COMP%]{background:linear-gradient(135deg,#10b981,#059669);color:#fff;border:1px solid #e5e7eb;border-radius:8px;padding:10px;font-family:Arial,sans-serif;box-shadow:0 2px 6px #0000000d;display:inline-flex;flex-direction:column;align-items:flex-start;width:70px;height:70px}.growth-header[_ngcontent-%COMP%]{display:flex;color:#fff;justify-content:flex-start;align-items:baseline;gap:4px;margin-bottom:6px}.growth-title[_ngcontent-%COMP%]{font-size:11px;color:#fff;font-weight:500}.growth-value[_ngcontent-%COMP%]{font-size:13px;font-weight:700;color:#fff}.growth-bars[_ngcontent-%COMP%]{display:flex;align-items:flex-end;gap:2px;color:#fff;height:25px;justify-content:flex-start;width:fit-content}.bar-segment[_ngcontent-%COMP%]{width:3px;background:#fff;border-radius:2px}.select-dropdown[_ngcontent-%COMP%]{position:relative;width:200px;cursor:pointer;-webkit-user-select:none;user-select:none}.dropdown-label[_ngcontent-%COMP%]{padding:12px;border:1px solid #e2e8f0;border-radius:22px;background:#fff;color:var(--text);display:flex;font-size:14px;justify-content:space-between;align-items:center}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;right:0;background:#fff;border:1px solid #ccc;border-radius:6px;max-height:400px;overflow-y:auto;display:none;z-index:10}.select-dropdown.open[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{display:block}.checkbox-item[_ngcontent-%COMP%]{padding:6px 8px;gap:6px}.bar[_ngcontent-%COMP%]{height:100%;border-radius:6px;transition:width .4s ease}.negative-box[_ngcontent-%COMP%]{background:linear-gradient(90deg,var(--danger),#fda4af)}[_ngcontent-%COMP%]:root{--brand: #10b981;--brand-2: #059669;--danger: #ef4444}.chip[_ngcontent-%COMP%]   .dot[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background:linear-gradient(135deg,var(--brand),var(--brand-2))}.arrow[_ngcontent-%COMP%]{display:inline-block;margin-left:5px;width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent}.arrow.up[_ngcontent-%COMP%]{border-bottom:10px solid green}.arrow.down[_ngcontent-%COMP%]{border-top:10px solid red}.growth-box[_ngcontent-%COMP%]{padding:8px;border-radius:6px;text-align:center;font-weight:700;color:#fff}.growth-box.positive-box[_ngcontent-%COMP%]{background-color:#28a745!important}.growth-box.negative-box[_ngcontent-%COMP%]{background-color:#dc3545!important}.total-bar[_ngcontent-%COMP%]{background:#f1f5ff;border:1px solid #ccc;border-radius:6px;padding:8px;margin:8px 0;font-weight:700;text-align:center}@media (max-width: 844px){.growth-box[_ngcontent-%COMP%]{margin-left:-10px!important}.select-dropdown[_ngcontent-%COMP%]{min-width:100%!important}}.select-dropdown.open[_ngcontent-%COMP%]   .dropdown-label[_ngcontent-%COMP%]{border-bottom-left-radius:0;border-bottom-right-radius:0}.select-dropdown[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;width:150%;border:1px solid #ccc;border-top:none;background:#fff;z-index:1000;overflow-y:auto;border-radius:0 0 6px 6px;box-shadow:0 2px 6px #0000001a}.select-dropdown[_ngcontent-%COMP%]   .actions-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;padding:6px 10px;border-bottom:1px solid #eee;background:#f9f9f9;top:0;z-index:5}.select-dropdown[_ngcontent-%COMP%]   .actions-row[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:none;border:none;font-size:13px;color:#007bff;cursor:pointer;padding:4px 6px;border-radius:4px;transition:background .2s}.select-dropdown.disabled[_ngcontent-%COMP%]{color:#9ca3af;cursor:not-allowed;opacity:.7}.select-dropdown.disabled[_ngcontent-%COMP%]   .dropdown-label[_ngcontent-%COMP%]{color:#9ca3af}.select-dropdown.disabled[_ngcontent-%COMP%]   .checkbox-item[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#9ca3af;cursor:not-allowed}.select-dropdown[_ngcontent-%COMP%]   .actions-row[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background:#f0f0f0}.checkbox-item[_ngcontent-%COMP%]{padding:6px 10px}.chart-container[_ngcontent-%COMP%], .progress[_ngcontent-%COMP%]{position:relative}.target-marker-global[_ngcontent-%COMP%]{position:absolute!important;top:0!important;bottom:0!important;width:1.5px!important;height:20px!important;background-color:#000!important;z-index:999!important;pointer-events:none}.search-row[_ngcontent-%COMP%]{padding:6px 12px;border-bottom:1px solid #eee}.search-row[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;border:1px solid #ccc;padding:10px;border-radius:15px;font-size:12px;box-sizing:border-box}.no-dealers[_ngcontent-%COMP%]{padding:8px 12px;font-size:13px;color:#999;text-align:center}.growth-box[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;text-align:center;height:100%}.growth-title[_ngcontent-%COMP%]{font-size:12px;font-weight:600;margin-bottom:4px}.growth-value[_ngcontent-%COMP%]{font-size:16px;font-weight:700}.arrow-up[_ngcontent-%COMP%]{width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-bottom:10px solid green}.arrow-down[_ngcontent-%COMP%]{width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-top:10px solid red}.filter-actions[_ngcontent-%COMP%]{display:flex;gap:8px;align-items:center}.refresh-btn[_ngcontent-%COMP%]{font-size:14px!important;line-height:1!important;background:#f5f5f5!important;border:1px solid #ccc!important;border-radius:4px!important;cursor:pointer!important;display:inline-block!important}.refresh-btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{pointer-events:none}.custom-tooltip[_ngcontent-%COMP%]{position:absolute;background:#333;color:#fff;padding:4px 8px;border-radius:4px;font-size:12px;white-space:nowrap;transform:translate(-50%);z-index:9999}',
    ],
  });
};
function cC(r, i) {
  r & 1 && (a(0, "div", 38), R(1, "div", 39), s());
}
function dC(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 49),
      O("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      a(1, "input", 50),
      O("change", function (n) {
        let o = w(e).$implicit;
        return _(3).toggleDealerSelection(o), D(n.stopPropagation());
      }),
      s(),
      a(2, "span", 51),
      O("click", function (n) {
        let o = w(e).$implicit;
        return _(3).toggleDealerSelection(o), D(n.stopPropagation());
      }),
      c(3),
      s()();
  }
  if (r & 2) {
    let e = i.$implicit,
      t = _(3);
    d(), g("checked", t.isDealerSelected(e)), d(2), K(" ", e.dealer_name, " ");
  }
}
function pC(r, i) {
  if ((r & 1 && (Me(0), M(1, dC, 4, 2, "div", 48), Oe()), r & 2)) {
    let e = _(2);
    d(), g("ngForOf", e.filteredDealers);
  }
}
function uC(r, i) {
  r & 1 && (a(0, "div", 52), c(1, "No dealers found"), s());
}
function hC(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 40)(1, "div", 41)(2, "input", 42),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.dealerSearch, n) || (o.dealerSearch = n), D(n);
      }),
      O("input", function () {
        w(e);
        let n = _();
        return D(n.filterDealers());
      })("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      s()(),
      a(3, "div", 43)(4, "label", 44),
      O("click", function (n) {
        return w(e), D(n.stopPropagation());
      }),
      a(5, "input", 45),
      O("change", function (n) {
        return w(e), _().toggleSelectAll(n), D(n.stopPropagation());
      }),
      s(),
      c(6, " Select All "),
      s(),
      a(7, "button", 46),
      O("click", function (n) {
        return w(e), _().clearSelection(), D(n.stopPropagation());
      }),
      c(8, "Clear"),
      s()(),
      M(9, pC, 2, 1, "ng-container", 47)(
        10,
        uC,
        2,
        0,
        "ng-template",
        null,
        1,
        lt
      ),
      s();
  }
  if (r & 2) {
    let e = rt(11),
      t = _();
    d(2),
      Ze("ngModel", t.dealerSearch),
      d(3),
      g("checked", t.areAllSelected()),
      d(4),
      g("ngIf", t.filteredDealers.length > 0)("ngIfElse", e);
  }
}
function mC(r, i) {
  if ((r & 1 && (a(0, "option", 84), c(1), s()), r & 2)) {
    let e = i.$implicit;
    g("value", e.value), d(), K(" ", e.label, " ");
  }
}
function fC(r, i) {
  if (r & 1) {
    let e = J();
    Me(0),
      a(1, "div", 81)(2, "select", 82),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _(4);
        return (
          Xe(o.psWiseSelectedCallType, n) || (o.psWiseSelectedCallType = n),
          D(n)
        );
      }),
      O("change", function () {
        w(e);
        let n = _(4);
        return D(n.psWiseOnCallTypeChange());
      }),
      M(3, mC, 2, 2, "option", 83),
      s()(),
      Oe();
  }
  if (r & 2) {
    let e = _(4);
    d(2),
      Ze("ngModel", e.psWiseSelectedCallType),
      d(),
      g("ngForOf", e.psWiseCallTypes);
  }
}
function gC(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 85)(1, "div", 86)(2, "span", 87),
      c(3),
      s()(),
      a(4, "div", 88)(5, "div", 89),
      R(6, "div", 90),
      s(),
      a(7, "span", 91),
      c(8),
      s()()()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = i.index,
      n = _().$implicit,
      o = _(3);
    d(2),
      g("title", e.name),
      d(),
      E(e.name),
      d(3),
      ut("background-color", o.getBarColor(t, n.title))(
        "width",
        o.shouldFillBars ? o.getBarWidth(e.value, n.maxValue) : 0,
        "%"
      ),
      d(2),
      E(e.value);
  }
}
function _C(r, i) {
  r & 1 && (a(0, "div", 92)(1, "span"), c(2, "No data available"), s()());
}
function bC(r, i) {
  r & 1 && R(0, "div", 93);
}
function vC(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 67)(1, "div", 68)(2, "div", 69)(3, "span", 70),
      c(4),
      s(),
      M(5, fC, 4, 2, "ng-container", 71),
      s(),
      a(6, "div", 72)(7, "div", 73)(8, "span", 74),
      c(9, "Avg:"),
      s(),
      a(10, "span", 75),
      c(11),
      s()()()(),
      a(12, "div", 76)(13, "div", 77),
      M(14, gC, 9, 7, "div", 78)(15, _C, 3, 0, "div", 79),
      s()(),
      M(16, bC, 1, 0, "div", 80),
      s()),
    r & 2)
  ) {
    let e = i.$implicit,
      t = i.last;
    d(4),
      E(e.title),
      d(),
      g("ngIf", e.title.toLowerCase().includes("calls")),
      d(6),
      E(e.dealerAvg),
      d(3),
      g("ngForOf", e.users),
      d(),
      g("ngIf", e.users.length === 0),
      d(),
      g("ngIf", !t);
  }
}
function xC(r, i) {
  if (
    (r & 1 &&
      (a(0, "div", 62)(1, "div", 63)(2, "h3"),
      c(3),
      s(),
      a(4, "div", 64),
      c(5),
      s()(),
      a(6, "div", 65),
      M(7, vC, 17, 6, "div", 66),
      s()()),
    r & 2)
  ) {
    let e = i.$implicit;
    d(3),
      E(e.dealerName),
      d(2),
      K("", e.users.length, " Users"),
      d(2),
      g("ngForOf", e.charts);
  }
}
function yC(r, i) {
  if (r & 1) {
    let e = J();
    a(0, "div", 53)(1, "div", 54)(2, "div", 55),
      c(3, "PS-wise Activity"),
      s(),
      a(4, "select", 56),
      Je("ngModelChange", function (n) {
        w(e);
        let o = _();
        return Xe(o.roleFilter, n) || (o.roleFilter = n), D(n);
      }),
      O("change", function () {
        w(e);
        let n = _();
        return D(n.scheduleProcessPsActivity());
      }),
      a(5, "option", 57),
      c(6, "PS"),
      s(),
      a(7, "option", 58),
      c(8, "SM"),
      s(),
      a(9, "option", 59),
      c(10, "Both"),
      s()()(),
      a(11, "div", 60),
      M(12, xC, 8, 3, "div", 61),
      s()();
  }
  if (r & 2) {
    let e = _();
    d(4), Ze("ngModel", e.roleFilter), d(8), g("ngForOf", e.psWiseCharts);
  }
}
var ps = class r {
  constructor(i) {
    this.http = i;
  }
  originalHeaderOffsetTop = 0;
  isSticky = !1;
  isHidden = !1;
  chartOptions = {
    series: [],
    chart: {
      height: 350,
      type: "line",
      zoom: { enabled: !1 },
      toolbar: { show: !0 },
    },
    dataLabels: { enabled: !1 },
    stroke: { width: 2, curve: "smooth" },
    legend: {
      position: "top",
      horizontalAlign: "left",
      fontSize: "12px",
      itemMargin: { horizontal: 10, vertical: 4 },
      tooltipHoverFormatter: function (i, e) {
        return (
          i +
          " - <strong>" +
          e.w.globals.series[e.seriesIndex][e.dataPointIndex] +
          "</strong>"
        );
      },
    },
    markers: { size: 0, hover: { sizeOffset: 6 } },
    xaxis: {
      type: "category",
      categories: [],
      labels: {
        rotate: -45,
        hideOverlappingLabels: !0,
        showDuplicates: !1,
        style: { fontSize: "10px" },
      },
      tickPlacement: "on",
      sorted: !1,
    },
    tooltip: {
      x: { formatter: (i) => i.toString() },
      y: { formatter: (i) => i.toString() },
    },
    grid: {
      show: !0,
      borderColor: "#e0e0e0",
      strokeDashArray: 3,
      position: "back",
      xaxis: { lines: { show: !0 } },
      yaxis: { lines: { show: !0 } },
      row: { colors: ["transparent"], opacity: 0 },
      column: { colors: ["transparent"], opacity: 0 },
    },
  };
  BASE_URL = "https://uat.smartassistapp.in";
  TREND_CHART_URL = "/api/superAdmin/dashboard/trend-chart";
  dayLeadChart = {};
  dayEventChart = {};
  dayTaskChart = {};
  dayCallsChart = {};
  dayLastLoginChart = {};
  hourLeadChart = {};
  hourEventChart = {};
  hourTaskChart = {};
  hourCallsChart = {};
  hourLastLoginChart = {};
  psWiseCharts = [];
  psWiseData = {};
  shouldFillBars = !1;
  lastScrollTop = 0;
  ngOnInit() {
    this.fetchTrendChart();
  }
  ngAfterViewInit() {
    let i = document.querySelector(".dashboard-top");
    i && (this.originalHeaderOffsetTop = i.offsetTop);
  }
  onWindowScroll() {
    let i = window.scrollY || document.documentElement.scrollTop;
    (this.isSticky = i >= this.originalHeaderOffsetTop),
      (this.isHidden = !1),
      i > this.lastScrollTop && (this.shouldFillBars = !0),
      (this.lastScrollTop = i <= 0 ? 0 : i);
  }
  objectKeys(i) {
    return Object.keys(i || {});
  }
  dealers = [];
  selectedDealers = [];
  filteredDealers = [];
  dropdownOpen = !1;
  dealerSearch = "";
  selectedDateFilter = "DAY";
  selectedMetric = "calls";
  chartTypes = ["line", "area", "bar"];
  currentChartTypeIndex = 0;
  charts = {};
  userTouchedDealers = !1;
  topLeads = 0;
  topsaLeads = 0;
  topdigitalLeads = 0;
  topTasks = 0;
  topUTDs = 0;
  topCall = 0;
  topenquiryCalls = 0;
  topcoldCalls = 0;
  DistinctUsers = 0;
  roleFilter = "PS";
  selectedCallType = "calls";
  callTypes = [
    { value: "calls", label: "Total Calls" },
    { value: "enquiryCalls", label: "Enquiry Calls" },
    { value: "coldCalls", label: "Cold Calls" },
  ];
  isLoading = !1;
  switchChartType() {
    this.currentChartTypeIndex =
      (this.currentChartTypeIndex + 1) % this.chartTypes.length;
    let i = this.chartTypes[this.currentChartTypeIndex];
    this.chartOptions = Ne(ee({}, this.chartOptions), {
      chart: Ne(ee({}, this.chartOptions.chart), {
        type: i,
        animations: {
          enabled: !0,
          speed: 800,
          animateGradually: { enabled: !0, delay: 150 },
          dynamicAnimation: { enabled: !0, speed: 600 },
        },
      }),
    });
  }
  toggleDropdown() {
    this.dropdownOpen = !this.dropdownOpen;
  }
  filterDealers() {
    this.dealerSearch.trim()
      ? (this.filteredDealers = this.dealers.filter((i) =>
          i.dealer_name.toLowerCase().includes(this.dealerSearch.toLowerCase())
        ))
      : (this.filteredDealers = [...this.dealers]);
  }
  isDealerSelected(i) {
    return this.selectedDealers.includes(i.dealer_id);
  }
  toggleDealerSelection(i) {
    this.userTouchedDealers = !0;
    let e = i.dealer_id,
      t = this.selectedDealers.indexOf(e);
    t > -1 ? this.selectedDealers.splice(t, 1) : this.selectedDealers.push(e),
      this.fetchTrendChartWithFilters();
  }
  areAllSelected() {
    return (
      this.filteredDealers.length > 0 &&
      this.filteredDealers.every((i) => this.isDealerSelected(i))
    );
  }
  toggleSelectAll(i) {
    i.target.checked
      ? (this.selectedDealers = this.filteredDealers.map((t) => t.dealer_id))
      : ((this.userTouchedDealers = !0), (this.selectedDealers = [])),
      this.fetchTrendChartWithFilters();
  }
  clearSelection() {
    (this.selectedDealers = []),
      (this.userTouchedDealers = !1),
      this.fetchTrendChartWithFilters();
  }
  fetchTrendChart() {
    let i = localStorage.getItem("token");
    if ((console.log("Token:", localStorage.getItem("token")), !i)) {
      console.error("\u274C No token found in localStorage");
      return;
    }
    let e = new Yt({ Authorization: `Bearer ${i}` }),
      t = "";
    this.selectedDealers.includes("all")
      ? this.dealers &&
        this.dealers.length > 0 &&
        (t = this.dealers.map((o) => o.dealer_id).join(","))
      : this.selectedDealers.length > 0 && (t = this.selectedDealers.join(","));
    let n = new Zs()
      .set("dealer_ids", t)
      .set("type", "DAY")
      .set("timezone", Intl.DateTimeFormat().resolvedOptions().timeZone);
    (this.isLoading = !0),
      this.http
        .get(`${this.BASE_URL}${this.TREND_CHART_URL}`, {
          headers: e,
          params: n,
        })
        .subscribe({
          next: (o) => {
            (this.isLoading = !1),
              console.log("\u2705 API Response:", o.topCards),
              o.activeDealers &&
                ((this.dealers = o.activeDealers),
                (this.filteredDealers = [...this.dealers]),
                (!this.selectedDealers.length ||
                  this.selectedDealers.includes("all")) &&
                  (this.selectedDealers = this.dealers.map(
                    (u) => u.dealer_id
                  ))),
              o.topCards &&
                ((this.topLeads = o.topCards.leads || 0),
                (this.topsaLeads = o.topCards.saLeads || 0),
                (this.topdigitalLeads = o.topCards.digitalLeads || 0),
                (this.topTasks = o.topCards.followups || 0),
                (this.topUTDs = o.topCards.utd || 0),
                (this.topCall = o.topCards.calls || 0),
                (this.topenquiryCalls = o.topCards.enquiryCalls || 0),
                (this.topcoldCalls = o.topCards.coldCalls || 0),
                (this.DistinctUsers = o.topCards.distinctUsers || 0)),
              this.updateAllChartsFromApi(o);
          },
          error: (o) => {
            console.error("\u274C API Error:", o);
          },
        });
  }
  chartUpdateTimeout;
  updateAllChartsFromApi(i) {
    if (!i) return;
    let e = (u, b) =>
        u
          ? typeof u == "object" && !Array.isArray(u) && Array.isArray(u[b])
            ? (u[b] || []).map((C) =>
                Ne(ee({}, C), { dealer_name: "All Dealers" })
              )
            : typeof u == "object" && !Array.isArray(u)
            ? Object.entries(u).flatMap(([C, T]) =>
                (T?.[b] || []).map((V) => Ne(ee({}, V), { dealer_name: C }))
              )
            : Array.isArray(u)
            ? u.map((C) => Ne(ee({}, C), { dealer_name: "All Dealers" }))
            : []
          : [],
      t = (u, b = !1) => {
        if (!u || !u.length) return { series: [], categories: [] };
        let C = b ? "hour" : "label",
          T = Array.from(new Set(u.map((B) => B[C]))).sort((B, L) => {
            if (b) {
              let [H, U] = B.split(":").map(Number),
                [j, Y] = L.split(":").map(Number);
              return H * 60 + U - (j * 60 + Y);
            } else return new Date(B).getTime() - new Date(L).getTime();
          }),
          k = new Map();
        return (
          u.forEach((B) => {
            let L = B.dealer_name || "All Dealers";
            k.has(L) || k.set(L, new Map()),
              k.get(L).set(B[C], Number(B.count) || 0);
          }),
          {
            series: Array.from(k.entries()).map(([B, L]) => ({
              name: B,
              data: T.map((H) => L.get(H) || 0),
            })),
            categories: T,
          }
        );
      },
      n = (u, b, C = !1, T = "") => {
        if (!u) return;
        let k =
            b.series.length === 1 &&
            (b.series[0].name === "All Dealers" ||
              this.selectedDealers.length === 0 ||
              !this.userTouchedDealers),
          V = [];
        k &&
          (T === "leads" && (V = ["#000080"]),
          T === "utd" && (V = ["#FFA500"]),
          T === "followups" && (V = ["#008000"]),
          T.toLowerCase().includes("call") && (V = ["#800080"]),
          T === "lastLogin" && (V = ["#FF0000"]));
        let H = {
          chart: {
            height: window.innerWidth <= 768 ? 300 : 150,
            toolbar: { show: !1 },
            type: "line",
          },
          stroke: { curve: "smooth", width: 1 },
          markers: { size: k ? 4 : 3, strokeWidth: k ? 2 : 1 },
          tooltip: { enabled: !0 },
          xaxis: { categories: b.categories, labels: { rotate: C ? 0 : -60 } },
          yaxis: { labels: { formatter: (U) => U.toString() } },
          legend: { show: !1 },
          grid: { show: !0, padding: { left: 0, right: 0, top: 0, bottom: 0 } },
          colors: V.length ? V : void 0,
          dataLabels: {
            enabled: k,
            formatter: (U) => (U > 0 ? U.toString() : ""),
            style: {
              fontSize: "11px",
              fontFamily: "Helvetica, Arial, sans-serif",
              fontWeight: "bold",
              colors: ["#304758"],
            },
            background: {
              enabled: !0,
              foreColor: "#fff",
              padding: 4,
              borderRadius: 2,
              borderWidth: 1,
              borderColor: "#ccc",
              opacity: 0.9,
            },
          },
        };
        return (
          u.updateOptions && u.updateSeries
            ? (u.updateSeries(b.series, !0), u.updateOptions(H, !0))
            : (u = Ne(ee(Ne(ee({}, u), { series: b.series }), H), {
                legend: { show: !1 },
              })),
          u
        );
      },
      o = [
        { key: "leads", resKey: "left", target: "dayLeadChart" },
        { key: "utd", resKey: "left", target: "dayEventChart" },
        { key: "followups", resKey: "left", target: "dayTaskChart" },
        { key: this.selectedCallType, resKey: "left", target: "dayCallsChart" },
        { key: "lastLogin", resKey: "left", target: "dayLastLoginChart" },
        { key: "leads", resKey: "right", target: "hourLeadChart" },
        { key: "utd", resKey: "right", target: "hourEventChart" },
        { key: "followups", resKey: "right", target: "hourTaskChart" },
        {
          key: this.selectedCallType,
          resKey: "right",
          target: "hourCallsChart",
        },
        { key: "lastLogin", resKey: "right", target: "hourLastLoginChart" },
      ];
    clearTimeout(this.chartUpdateTimeout),
      (this.chartUpdateTimeout = setTimeout(() => {
        o.forEach(({ key: u, resKey: b, target: C }) => {
          let T = b === "right",
            k = t(e(i[b], u), T);
          this[C] = n(this[C], k, T, u);
        });
      }, 100));
  }
  filterUpdateTimeout;
  fetchTrendChartWithFilters() {
    let i = localStorage.getItem("token");
    if (!i) return;
    let e = new Yt({ Authorization: `Bearer ${i}` }),
      t = "";
    this.userTouchedDealers &&
      this.selectedDealers.length > 0 &&
      (t = this.selectedDealers.join(","));
    let n = new Zs()
      .set("type", this.selectedDateFilter)
      .set("timezone", "Asia/Calcutta");
    t.trim() && (n = n.set("dealer_ids", t)),
      clearTimeout(this.filterUpdateTimeout),
      (this.filterUpdateTimeout = setTimeout(() => {
        (this.isLoading = !0),
          this.http
            .get(`${this.BASE_URL}${this.TREND_CHART_URL}`, {
              headers: e,
              params: n,
            })
            .subscribe({
              next: (o) => {
                o.topCards &&
                  ((this.topLeads = o.topCards.leads || 0),
                  (this.topsaLeads = o.topCards.saLeads || 0),
                  (this.topdigitalLeads = o.topCards.digitalLeads || 0),
                  (this.topTasks = o.topCards.followups || 0),
                  (this.topUTDs = o.topCards.testDrives || 0),
                  (this.topCall = o.topCards.calls || 0),
                  (this.topenquiryCalls = o.topCards.enquiryCalls || 0),
                  (this.topcoldCalls = o.topCards.coldCalls || 0),
                  (this.DistinctUsers = o.topCards.distinctUsers || 0)),
                  this.updateAllChartsFromApi(o),
                  o.psWiseActivity &&
                    ((this.psWiseData = o.psWiseActivity),
                    this.scheduleProcessPsActivity()),
                  (this.isLoading = !1);
              },
              error: (o) => console.error(o),
            });
      }, 200));
  }
  getExportFileName() {
    let e =
        {
          last_login: "LastLogin",
          leads: "Leads",
          follow_up: "FollowUps",
          unique_testdrive: "UniqueTestDrives",
          calls: "TotalCalls",
        }[this.selectedMetric] || this.selectedMetric,
      t = "AllDealers";
    if (this.selectedDealers.length > 0) {
      let o = this.dealers
        .filter((u) => this.selectedDealers.includes(u.dealer_id))
        .map((u) => u.dealer_name.replace(/\s+/g, ""));
      (t = o.slice(0, 3).join("_")),
        o.length > 3 && (t += `_plus${o.length - 3}`);
    }
    let n = new Date().toISOString().split("T")[0];
    return `${e}_${t}_${n}_Report`;
  }
  onCallTypeChange() {
    this.fetchTrendChartWithFilters();
  }
  getCurrentCallTypeLabel() {
    let i = this.callTypes.find((e) => e.value === this.selectedCallType);
    return i ? i.label : "Calls";
  }
  onDocumentClick(i) {
    let t = i.target.closest(".dropdown");
    (!t || !t.classList.contains("flt1")) && (this.dropdownOpen = !1);
  }
  psWiseCallTypes = [
    { value: "calls", label: "Calls" },
    { value: "coldCalls", label: "Cold Calls" },
    { value: "enquiryCalls", label: "Enquiry Calls" },
  ];
  psWiseSelectedCallType = "calls";
  psProcessingTimeout;
  scheduleProcessPsActivity() {
    (this.isLoading = !0),
      clearTimeout(this.psProcessingTimeout),
      (this.psProcessingTimeout = setTimeout(() => {
        this.processPsWiseActivityChunked();
      }, 100));
  }
  processPsWiseActivityChunked() {
    if (
      (console.log("==== Start processPsWiseActivity (Chunked) ===="),
      !this.psWiseData)
    )
      return;
    let i = ["saLeads", "uniquetestDrives", "followups", "lastLogin", "target"],
      e = ["calls", "coldCalls", "enquiryCalls"],
      t = {
        saLeads: "SA Leads",
        uniquetestDrives: "Events",
        followups: "Tasks",
        calls: "Calls",
        coldCalls: "Cold calls",
        enquiryCalls: "Enquiry calls",
        lastLogin: "Last login",
        target: "Target",
      };
    this.psWiseCharts = [];
    let n = this.computeAllIndiaAverages(i, e),
      o = Object.entries(this.psWiseData);
    this.processNextDealerChunk(o, 0, i, t, n);
  }
  processNextDealerChunk(i, e, t, n, o) {
    let b = Math.min(e + 1, i.length);
    for (let C = e; C < b; C++) {
      let [T, k] = i[C],
        V = this.processSingleDealer(T, k, t, n, o);
      V && this.psWiseCharts.push(V);
    }
    b < i.length
      ? setTimeout(() => {
          this.processNextDealerChunk(i, b, t, n, o);
        }, 10)
      : (this.initializePsAccordionStates(),
        (this.isLoading = !1),
        console.log("==== End processPsWiseActivity (Chunked) ===="));
  }
  computeAllIndiaAverages(i, e) {
    let t = [...i, ...e],
      n = {};
    return (
      t.forEach((o) => {
        let u = 0,
          b = 0;
        Object.values(this.psWiseData).forEach((C) => {
          Array.isArray(C) &&
            C.forEach((T) => {
              (this.roleFilter === "Both" || T.role === this.roleFilter) &&
                ((u += T[o] || 0), b++);
            });
        }),
          (n[o] = b > 0 ? Math.round(u / b) : 0);
      }),
      n
    );
  }
  processSingleDealer(i, e, t, n, o) {
    if (!Array.isArray(e)) return null;
    let u = e.filter((k) =>
      this.roleFilter === "Both" ? !0 : k.role === this.roleFilter
    );
    if (u.length === 0) return null;
    let b = [];
    t.forEach((k) => {
      let V = u
        .map((B) => ({ name: B.name, value: B[k] || 0, dealer: i }))
        .sort((B, L) => L.value - B.value);
      if (V.length > 0) {
        let B = Math.round(V.reduce((H, U) => H + U.value, 0) / V.length),
          L = Math.max(...V.map((H) => H.value), 1);
        b.push({
          title: n[k],
          allIndiaAvg: o[k],
          dealerAvg: B,
          maxValue: L,
          users: V,
          key: n[k].toLowerCase().replace(/\s/g, ""),
        });
      }
    });
    let C = this.psWiseSelectedCallType || "calls",
      T = u
        .map((k) => ({ name: k.name, value: k[C] || 0, dealer: i }))
        .sort((k, V) => V.value - k.value);
    if (T.length > 0) {
      let k = Math.round(T.reduce((B, L) => B + L.value, 0) / T.length),
        V = Math.max(...T.map((B) => B.value), 1);
      b.push({
        title: n[C],
        allIndiaAvg: o[C],
        dealerAvg: k,
        maxValue: V,
        users: T,
        key: "countOfCalls",
      });
    }
    return b.length > 0 ? { dealerName: i, users: u, charts: b } : null;
  }
  getBarColor(i, e) {
    let t = e?.toLowerCase() || "";
    if (t.includes("sa leads")) return "#001f5b";
    if (t.includes("events")) return "#ff9800";
    if (t.includes("tasks")) return "#28a745";
    if (t.includes("last login")) return "#007bff";
    if (t.includes("target")) return "#FFD827";
    if (t.includes("calls")) return "#CB4A1A";
    let n = [
      "#007bff",
      "#28a745",
      "#ffc107",
      "#dc3545",
      "#17a2b8",
      "#6610f2",
      "#e83e8c",
      "#fd7e14",
      "#20c997",
      "#6f42c1",
      "#495057",
    ];
    return n[i % n.length];
  }
  getBarWidth(i, e) {
    return e > 0 ? Math.max((i / e) * 100, 2) : 0;
  }
  psAccordionStates = [];
  initializePsAccordionStates() {
    (this.psAccordionStates = new Array(this.psWiseCharts.length).fill(!1)),
      this.psAccordionStates.length > 0 && (this.psAccordionStates[0] = !0);
  }
  togglePsAccordion(i) {
    this.psAccordionStates[i] = !this.psAccordionStates[i];
  }
  psWiseOnCallTypeChange() {
    this.psWiseData && this.scheduleProcessPsActivity();
  }
  get sectionTitle() {
    return this.roleFilter === "Both"
      ? "PS+SM Activity"
      : `${this.roleFilter}-wise Activity`;
  }
  generateColors(i) {
    let e = [
        "#008FFB",
        "#00E396",
        "#FEB019",
        "#FF4560",
        "#775DD0",
        "#546E7A",
        "#26a69a",
        "#D10CE8",
        "#FF6B35",
        "#C7F464",
      ],
      t = [];
    for (let n = 0; n < i; n++) t.push(e[n % e.length]);
    return t;
  }
  accordionStates = {
    leads: !0,
    events: !1,
    tasks: !1,
    calls: !1,
    lastLogin: !1,
  };
  toggleAccordion(i) {
    this.accordionStates[i] = !this.accordionStates[i];
  }
  expandedDealerIndex = null;
  toggleDealer(i) {
    this.expandedDealerIndex = this.expandedDealerIndex === i ? null : i;
  }
  static ɵfac = function (e) {
    return new (e || r)(F(St));
  };
  static ɵcmp = oe({
    type: r,
    selectors: [["app-trend-chart"]],
    hostBindings: function (e, t) {
      e & 1 &&
        O(
          "scroll",
          function () {
            return t.onWindowScroll();
          },
          !1,
          eo
        )(
          "click",
          function (o) {
            return t.onDocumentClick(o);
          },
          !1,
          wn
        );
    },
    standalone: !0,
    features: [le],
    decls: 110,
    vars: 83,
    consts: [
      ["headerSection", ""],
      ["noDealers", ""],
      [1, "dashboard-container"],
      ["class", "loader-overlay", 4, "ngIf"],
      [1, "filter-section"],
      [1, "filter-row"],
      [1, "dashboard-top"],
      [1, "filter-group"],
      [1, "dropdown", "flt1"],
      [
        "type",
        "button",
        1,
        "no-border",
        "time-dropdown",
        "dropdown-toggle",
        3,
        "click",
      ],
      ["class", "dropdown-menu show", 4, "ngIf"],
      [1, "filter-item"],
      ["id", "usageGran", 3, "ngModelChange", "change", "ngModel"],
      ["value", "DAY"],
      ["value", "YESTERDAY"],
      ["value", "WEEK"],
      ["value", "LAST_WEEK"],
      ["value", "MTD"],
      ["value", "LAST_MONTH"],
      ["value", "QTD"],
      ["value", "LAST_QUARTER"],
      ["value", "SIX_MONTH"],
      ["value", "YTD"],
      [1, "stats-row"],
      [1, "stat-item"],
      [1, "stat-number"],
      [1, "stat-label"],
      [1, "charts-container"],
      [1, "metrics-rows"],
      [1, "charts-level-header", 2, "display", "flex"],
      [1, "chart-level-title", 2, "flex", "1", "text-align", "center"],
      [1, "metric-row"],
      [1, "metric-label"],
      [1, "charts-pair"],
      [1, "chart-section"],
      [1, "chart-wrapper"],
      [
        3,
        "series",
        "chart",
        "xaxis",
        "stroke",
        "markers",
        "tooltip",
        "colors",
        "grid",
        "dataLabels",
      ],
      ["class", "ps-wise-activity", 4, "ngIf"],
      [1, "loader-overlay"],
      [1, "spinner"],
      [1, "dropdown-menu", "show"],
      [1, "px-2", "py-1"],
      [
        "type",
        "text",
        "placeholder",
        "Search dealers...",
        1,
        "form-control",
        3,
        "ngModelChange",
        "input",
        "click",
        "ngModel",
      ],
      [
        1,
        "d-flex",
        "justify-content-between",
        "align-items-center",
        "px-2",
        "py-1",
        "border-bottom",
      ],
      [1, "mb-0", "d-flex", "align-items-center", 3, "click"],
      ["type", "checkbox", 1, "me-2", 3, "change", "checked"],
      [
        "type",
        "button",
        "id",
        "clearbtn",
        1,
        "btn",
        "btn-link",
        "btn-sm",
        "text-danger",
        "p-0",
        "ms-auto",
        3,
        "click",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "class",
        "dropdown-item d-flex align-items-center",
        3,
        "click",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "dropdown-item", "d-flex", "align-items-center", 3, "click"],
      [
        "type",
        "checkbox",
        1,
        "me-2",
        2,
        "border",
        "1px solid black",
        3,
        "change",
        "checked",
      ],
      [3, "click"],
      [1, "dropdown-item", "text-muted", "text-center"],
      [1, "ps-wise-activity"],
      [1, "ps-section-header"],
      [1, "chart-title"],
      [1, "role-filter-select", 3, "ngModelChange", "change", "ngModel"],
      ["value", "PS"],
      ["value", "SM"],
      ["value", "Both"],
      [1, "dealers-scroll-container"],
      ["class", "dealer-block", 4, "ngFor", "ngForOf"],
      [1, "dealer-block"],
      [1, "dealer-header"],
      [1, "user-count-badge"],
      [1, "horizontal-charts-container"],
      ["class", "chart-column", 4, "ngFor", "ngForOf"],
      [1, "chart-column"],
      [1, "chart-header-section"],
      [1, "chart-title-row"],
      [1, "metric-title"],
      [4, "ngIf"],
      [1, "averages-row"],
      [1, "avg-item"],
      [1, "avg-label"],
      [1, "avg-value", "dealer-avg"],
      [1, "custom-chart-wrapper"],
      [1, "custom-chart-container"],
      ["class", "user-bar", 4, "ngFor", "ngForOf"],
      ["class", "empty-state", 4, "ngIf"],
      ["class", "chart-divider", 4, "ngIf"],
      [1, "call-type-selector"],
      [1, "ps-calls-select", 3, "ngModelChange", "change", "ngModel"],
      [3, "value", 4, "ngFor", "ngForOf"],
      [3, "value"],
      [1, "user-bar"],
      [1, "user-info"],
      [1, "user-name", 3, "title"],
      [1, "bar-container"],
      [1, "bar-background"],
      [1, "bar-fill"],
      [1, "user-value"],
      [1, "empty-state"],
      [1, "chart-divider"],
    ],
    template: function (e, t) {
      if (e & 1) {
        let n = J();
        a(0, "div", 2),
          M(1, cC, 2, 0, "div", 3),
          a(2, "div", 4)(3, "div", 5)(4, "div", 6, 0)(6, "div", 7)(7, "label"),
          c(8, "Dealer Filter"),
          s(),
          a(9, "div", 8)(10, "button", 9),
          O("click", function () {
            return w(n), D(t.toggleDropdown());
          }),
          c(11),
          s(),
          M(12, hC, 12, 4, "div", 10),
          s(),
          a(13, "div", 11)(14, "label"),
          c(15, "Date Filter"),
          s(),
          a(16, "select", 12),
          Je("ngModelChange", function (u) {
            return (
              w(n),
              Xe(t.selectedDateFilter, u) || (t.selectedDateFilter = u),
              D(u)
            );
          }),
          O("change", function () {
            return w(n), D(t.fetchTrendChartWithFilters());
          }),
          a(17, "option", 13),
          c(18, "Today"),
          s(),
          a(19, "option", 14),
          c(20, "Yesterday"),
          s(),
          a(21, "option", 15),
          c(22, "This Week"),
          s(),
          a(23, "option", 16),
          c(24, "Last Week"),
          s(),
          a(25, "option", 17),
          c(26, "This Month"),
          s(),
          a(27, "option", 18),
          c(28, "Last Month"),
          s(),
          a(29, "option", 19),
          c(30, "This Quarter"),
          s(),
          a(31, "option", 20),
          c(32, "Last Quarter"),
          s(),
          a(33, "option", 21),
          c(34, "Last 6 Months"),
          s(),
          a(35, "option", 22),
          c(36, "Year to Date"),
          s()()()(),
          a(37, "div", 23)(38, "div", 24)(39, "span", 25),
          c(40),
          ei(41, "number"),
          s(),
          a(42, "span", 26),
          c(43, "Active Users"),
          s()(),
          a(44, "div", 24)(45, "span", 25),
          c(46),
          ei(47, "number"),
          s(),
          a(48, "span", 26),
          c(49, "Leads"),
          s()(),
          a(50, "div", 24)(51, "span", 25),
          c(52),
          ei(53, "number"),
          s(),
          a(54, "span", 26),
          c(55, "Tasks"),
          s()(),
          a(56, "div", 24)(57, "span", 25),
          c(58),
          ei(59, "number"),
          s(),
          a(60, "span", 26),
          c(61, "UTDs"),
          s()(),
          a(62, "div", 24)(63, "span", 25),
          c(64),
          ei(65, "number"),
          ei(66, "number"),
          s(),
          a(67, "span", 26),
          c(68, "Enquiry / Cold calls"),
          s()()()()()(),
          a(69, "div", 27)(70, "div", 28)(71, "div", 29)(72, "div", 30),
          c(73, "Day Level"),
          s(),
          a(74, "div", 30),
          c(75, "Hour Level"),
          s()(),
          a(76, "div", 31)(77, "div", 32)(78, "h3"),
          c(79, "Leads"),
          s()(),
          a(80, "div", 33)(81, "div", 34)(82, "div", 35),
          R(83, "apx-chart", 36),
          s()(),
          a(84, "div", 34)(85, "div", 35),
          R(86, "apx-chart", 36),
          s()()()(),
          a(87, "div", 31)(88, "div", 32)(89, "h3"),
          c(90, "Events"),
          s()(),
          a(91, "div", 33)(92, "div", 34)(93, "div", 35),
          R(94, "apx-chart", 36),
          s()(),
          a(95, "div", 34)(96, "div", 35),
          R(97, "apx-chart", 36),
          s()()()(),
          a(98, "div", 31)(99, "div", 32)(100, "h3"),
          c(101, "Tasks"),
          s()(),
          a(102, "div", 33)(103, "div", 34)(104, "div", 35),
          R(105, "apx-chart", 36),
          s()(),
          a(106, "div", 34)(107, "div", 35),
          R(108, "apx-chart", 36),
          s()()()()(),
          M(109, yC, 13, 2, "div", 37),
          s()();
      }
      e & 2 &&
        (d(),
        g("ngIf", t.isLoading),
        d(3),
        X("sticky", t.isSticky)("hidden", t.isHidden),
        d(5),
        X("show", t.dropdownOpen),
        d(2),
        K(
          " ",
          t.selectedDealers.length > 0
            ? "Dealers Selected (" + t.selectedDealers.length + ")"
            : "Select Dealers",
          " "
        ),
        d(),
        g("ngIf", t.dropdownOpen),
        d(4),
        Ze("ngModel", t.selectedDateFilter),
        d(24),
        E(pn(41, 71, t.DistinctUsers)),
        d(6),
        E(pn(47, 73, t.topsaLeads)),
        d(6),
        E(pn(53, 75, t.topTasks)),
        d(6),
        E(pn(59, 77, t.topUTDs)),
        d(6),
        di(
          "",
          pn(65, 79, t.topenquiryCalls),
          " / ",
          pn(66, 81, t.topcoldCalls),
          ""
        ),
        d(19),
        g("series", t.dayLeadChart.series)("chart", t.dayLeadChart.chart)(
          "xaxis",
          t.dayLeadChart.xaxis
        )("stroke", t.dayLeadChart.stroke)("markers", t.dayLeadChart.markers)(
          "tooltip",
          t.dayLeadChart.tooltip
        )("colors", t.dayLeadChart.colors)("grid", t.dayLeadChart.grid)(
          "dataLabels",
          t.dayLeadChart.dataLabels
        ),
        d(3),
        g("series", t.hourLeadChart.series)("chart", t.hourLeadChart.chart)(
          "xaxis",
          t.hourLeadChart.xaxis
        )("stroke", t.hourLeadChart.stroke)("markers", t.hourLeadChart.markers)(
          "tooltip",
          t.hourLeadChart.tooltip
        )("colors", t.hourLeadChart.colors)("grid", t.hourLeadChart.grid)(
          "dataLabels",
          t.hourLeadChart.dataLabels
        ),
        d(8),
        g("series", t.dayEventChart.series)("chart", t.dayEventChart.chart)(
          "xaxis",
          t.dayEventChart.xaxis
        )("stroke", t.dayEventChart.stroke)("markers", t.dayEventChart.markers)(
          "tooltip",
          t.dayEventChart.tooltip
        )("colors", t.dayEventChart.colors)("grid", t.dayEventChart.grid)(
          "dataLabels",
          t.dayEventChart.dataLabels
        ),
        d(3),
        g("series", t.hourEventChart.series)("chart", t.hourEventChart.chart)(
          "xaxis",
          t.hourEventChart.xaxis
        )("stroke", t.hourEventChart.stroke)(
          "markers",
          t.hourEventChart.markers
        )("tooltip", t.hourEventChart.tooltip)(
          "colors",
          t.hourEventChart.colors
        )("grid", t.hourEventChart.grid)(
          "dataLabels",
          t.hourEventChart.dataLabels
        ),
        d(8),
        g("series", t.dayTaskChart.series)("chart", t.dayTaskChart.chart)(
          "xaxis",
          t.dayTaskChart.xaxis
        )("stroke", t.dayTaskChart.stroke)("markers", t.dayTaskChart.markers)(
          "tooltip",
          t.dayTaskChart.tooltip
        )("colors", t.dayTaskChart.colors)("grid", t.dayTaskChart.grid)(
          "dataLabels",
          t.dayTaskChart.dataLabels
        ),
        d(3),
        g("series", t.hourTaskChart.series)("chart", t.hourTaskChart.chart)(
          "xaxis",
          t.hourTaskChart.xaxis
        )("stroke", t.hourTaskChart.stroke)("markers", t.hourTaskChart.markers)(
          "tooltip",
          t.hourTaskChart.tooltip
        )("colors", t.hourTaskChart.colors)("grid", t.hourTaskChart.grid)(
          "dataLabels",
          t.hourTaskChart.dataLabels
        ),
        d(),
        g("ngIf", t.psWiseCharts.length > 0));
    },
    dependencies: [De, gt, Be, Fd, Ge, At, Ft, Mt, qt, It, Wt, _a, ga, fa],
    styles: [
      `.delar_usage[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.Granularity_section[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.75rem}.text-lg[_ngcontent-%COMP%]{font-size:1.125rem;line-height:1.75rem}.bg-brand-600[_ngcontent-%COMP%]{--tw-bg-opacity: 1;background-color:rgb(22 118 230 / var(--tw-bg-opacity, 1))}.text-white[_ngcontent-%COMP%]{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.font-semibold[_ngcontent-%COMP%]{font-weight:600}.text-xs[_ngcontent-%COMP%]{font-size:.75rem;line-height:1rem}.rounded-xl[_ngcontent-%COMP%]{border-radius:.75rem}.gap-2[_ngcontent-%COMP%]{gap:.5rem}.items-center[_ngcontent-%COMP%]{align-items:center}.inline-flex[_ngcontent-%COMP%]{display:inline-flex}.buttons[_ngcontent-%COMP%]{padding:.5rem .75rem;border:none}.wrapper-content[_ngcontent-%COMP%]{gap:.5rem;display:flex}label[_ngcontent-%COMP%]{margin-bottom:0rem}.dropdown.flt1[_ngcontent-%COMP%]{position:relative;display:inline-block}.time-dropdown[_ngcontent-%COMP%]{background:#fff;border:1px solid #ddd;border-radius:4px;padding:.2rem .4rem;cursor:pointer;min-width:200px;text-align:left}.time-dropdown[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;z-index:1000;display:block;min-width:250px;max-height:300px;overflow-y:auto;background:#fff;border:1px solid #ddd;border-radius:4px;box-shadow:0 2px 8px #0000001a}.dropdown-item[_ngcontent-%COMP%]{padding:8px 12px;cursor:pointer;border-bottom:1px solid #f1f1f1}.dropdown-item[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.dropdown-item[_ngcontent-%COMP%]:last-child{border-bottom:none}.form-control[_ngcontent-%COMP%]{width:100%;padding:6px 10px;border:1px solid #ddd;border-radius:4px;font-size:14px}.btn-link[_ngcontent-%COMP%]{background:none;border:none;color:#dc3545;text-decoration:none;font-size:12px}.btn-link[_ngcontent-%COMP%]:hover{text-decoration:underline}.delar_usage[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1.5rem}@media (min-width: 768px){.delar_usage[_ngcontent-%COMP%]{flex-direction:row;align-items:center;justify-content:space-between}}.Granularity_section[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem;width:100%}@media (min-width: 768px){.Granularity_section[_ngcontent-%COMP%]{flex-direction:row;align-items:center;width:auto}}.wrapper-content[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;align-items:center;gap:1rem;width:100%}@media (min-width: 768px){.wrapper-content[_ngcontent-%COMP%]{width:auto}}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%]{position:relative;display:inline-flex;align-items:center;justify-content:space-between;min-width:160px;background:#fff;border:1px solid #d1d5db;border-radius:.75rem;font-size:.875rem;font-weight:500;color:#374151;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 2px #0000000d}.time-dropdown[_ngcontent-%COMP%]:hover, .standard-dropdown[_ngcontent-%COMP%]:hover{border-color:#9ca3af;box-shadow:0 1px 3px #0000001a}.time-dropdown[_ngcontent-%COMP%]:focus, .standard-dropdown[_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;box-shadow:0 0 0 3px #3b82f61a}.time-dropdown[_ngcontent-%COMP%]:after, .standard-dropdown[_ngcontent-%COMP%]:after{content:"";width:0;height:0;border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid #6b7280;margin-left:.5rem;transition:transform .2s ease}.time-dropdown.show[_ngcontent-%COMP%]:after, .standard-dropdown.show[_ngcontent-%COMP%]:after{transform:rotate(180deg)}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;right:0;z-index:1000;margin-top:.25rem;background:#fff;border:1px solid #e5e7eb;border-radius:.75rem;box-shadow:0 10px 25px -5px #0000001a,0 10px 10px -5px #0000000a;max-height:300px;overflow-y:auto;opacity:0;transform:translateY(-10px);transition:all .2s ease;pointer-events:none}.dropdown-menu.show[_ngcontent-%COMP%]{opacity:1;transform:translateY(0);pointer-events:auto}.dropdown-menu[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{width:100%;display:flex;padding:.5rem .75rem;border:1px solid #e5e7eb;border-radius:.5rem;font-size:.875rem;background:#f9fafb;transition:all .2s ease}.dropdown-menu[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;background:#fff;box-shadow:0 0 0 2px #3b82f61a}.dropdown-menu[_ngcontent-%COMP%]   .border-bottom[_ngcontent-%COMP%]{border-bottom:1px solid #e5e7eb!important;padding:.5rem .75rem;display:flex;background:#f9fafb}.dropdown-item[_ngcontent-%COMP%]{display:flex;align-items:center;padding:.5rem .75rem;font-size:.875rem;color:#374151;cursor:pointer;transition:background-color .15s ease;border:none;background:none;width:100%}.dropdown-item[_ngcontent-%COMP%]:hover{background-color:#f3f4f6}.dropdown-item[_ngcontent-%COMP%]:active{background-color:#e5e7eb}.dropdown-item[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{width:1rem;height:1rem;margin-right:.5rem;border:1px solid #d1d5db;border-radius:.25rem;cursor:pointer}.dropdown-item[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked{background-color:#3b82f6;border-color:#3b82f6}#clearbtn[_ngcontent-%COMP%]{color:#dc2626!important;font-size:.75rem;padding:.25rem .5rem;border:none;background:none;border-radius:.375rem;transition:all .2s ease}#clearbtn[_ngcontent-%COMP%]:hover{background-color:#fef2f2;color:#b91c1c!important}#usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{appearance:none;-webkit-appearance:none;-moz-appearance:none;background:#fff;border:1px solid #d1d5db;font-size:.875rem;font-weight:500;color:#374151;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 2px #0000000d;min-width:140px;background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");background-position:right .5rem center;background-repeat:no-repeat;background-size:1.5em 1.5em}#usageGran[_ngcontent-%COMP%]:hover, #usageMetric[_ngcontent-%COMP%]:hover{border-color:#9ca3af;box-shadow:0 1px 3px #0000001a}#usageGran[_ngcontent-%COMP%]:focus, #usageMetric[_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;box-shadow:0 0 0 3px #3b82f61a}label[_ngcontent-%COMP%]{font-size:.875rem;font-weight:500;color:#4b5563;margin-bottom:.25rem;display:block}@media (max-width: 767px){.wrapper-content[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{width:100%;min-width:unset}.Granularity_section[_ngcontent-%COMP%]{gap:1.5rem}.wrapper-content[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:100%}.wrapper-content[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{margin-top:1rem;margin-bottom:.25rem}.wrapper-content[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]:first-child{margin-top:0}}@media (min-width: 768px) and (max-width: 1023px){.wrapper-content[_ngcontent-%COMP%]{gap:.75rem}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{min-width:130px}}@media (min-width: 1024px){.wrapper-content[_ngcontent-%COMP%]{gap:1rem}.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%]{min-width:180px}#usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{min-width:150px}}.flex.items-center.gap-2.mb-3[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:.625rem 1rem;background:#f8fafc;border:1px solid #e2e8f0;border-radius:.75rem;font-size:.875rem;font-weight:500;color:#475569;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 2px #0000000d}.flex.items-center.gap-2.mb-3[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background:#f1f5f9;border-color:#cbd5e1;box-shadow:0 1px 3px #0000001a}#usageLocalLoader[_ngcontent-%COMP%]{justify-content:center;padding:1rem}#usageLocalLoader[_ngcontent-%COMP%]   .animate-spin[_ngcontent-%COMP%]{width:1.25rem;height:1.25rem;border-width:2px;border-color:#e5e7eb;border-top-color:#3b82f6;border-radius:50%;animation:_ngcontent-%COMP%_spin 1s linear infinite}@keyframes _ngcontent-%COMP%_spin{to{transform:rotate(360deg)}}.relative[_ngcontent-%COMP%]{background:#fff;border-radius:.5rem;padding:1rem;margin-top:1rem}@media (prefers-contrast: high){.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{border-width:2px}}@media (prefers-reduced-motion: reduce){.time-dropdown[_ngcontent-%COMP%], .standard-dropdown[_ngcontent-%COMP%], .dropdown-menu[_ngcontent-%COMP%], #usageGran[_ngcontent-%COMP%], #usageMetric[_ngcontent-%COMP%]{transition:none}}.switchChart[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #d1d5db;box-shadow:0 1px 2px #0000000d;font-size:.875rem;font-weight:500;color:#374151;padding:.625rem 2rem!important}.no-border[_ngcontent-%COMP%]{border-radius:0!important}.dealer-search[_ngcontent-%COMP%]:focus{outline:none;box-shadow:0 0 0 2px #2a8eff40}*[_ngcontent-%COMP%]{margin:0;padding:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;background-color:#f8fafc;padding:20px}.chart-header[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:4px}.chart-header-top[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:8px}.chart-title[_ngcontent-%COMP%]{font-weight:600;font-size:14px}.custom-select-wrapper[_ngcontent-%COMP%]{position:relative;display:inline-block}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:8px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:10px;color:#555}.chart-averages[_ngcontent-%COMP%]{font-size:12px;color:#666}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto;background:#fff;border-radius:16px;box-shadow:0 4px 6px -1px #0000001a;overflow:hidden}.dashboard-header[_ngcontent-%COMP%]{background:#000;color:#fff;padding:20px;text-align:center}.dashboard-title[_ngcontent-%COMP%]{font-size:18px;font-weight:600;margin-bottom:15px}.stat-item[_ngcontent-%COMP%]{text-align:center}.stat-number[_ngcontent-%COMP%]{font-size:24px;font-weight:700}.stat-label[_ngcontent-%COMP%]{font-size:12px;margin-left:8px;opacity:.8}.filter-section[_ngcontent-%COMP%]{padding:1px;background:#f9fafb;border-bottom:1px solid #e2e8f0}.filter-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;align-items:center;gap:20px;font-size:14px}.distinct-users[_ngcontent-%COMP%]{font-weight:600;color:#374151}.filter-group[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px}.filter-label[_ngcontent-%COMP%]{font-weight:500;color:#374151}.filter-select[_ngcontent-%COMP%]{border:1px solid #d1d5db;border-radius:4px;padding:4px 8px;font-size:14px;background:#fff}.charts-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;gap:24px;margin-bottom:32px}.chart-card[_ngcontent-%COMP%], .dealer-activity[_ngcontent-%COMP%]{border:1px solid #e2e8f0;border-radius:8px;padding:16px;background:#fff}.activity-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:24px}.activity-card[_ngcontent-%COMP%]{text-align:center}.activity-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:12px}.activity-title[_ngcontent-%COMP%]{font-size:14px;font-weight:500;color:#374151}.activity-average[_ngcontent-%COMP%]{font-size:12px;color:#6b7280}@media (max-width: 1024px){.charts-grid[_ngcontent-%COMP%], .activity-grid[_ngcontent-%COMP%]{grid-template-columns:1fr}}@media (max-width: 768px){.filter-row[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.stats-row[_ngcontent-%COMP%]{flex-direction:column}body[_ngcontent-%COMP%]{padding:10px}}.ps-section-header[_ngcontent-%COMP%]{border-bottom:2px solid #f1f5f9;display:flex;align-items:center;justify-content:space-between;gap:12px}.ps-section-header[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:4px 8px;font-size:13px;border:1px solid #d1d5db;background:#fff;color:#1f2937}.dealer-section[_ngcontent-%COMP%]{margin-bottom:32px;border:1px solid #e2e8f0;border-radius:8px;overflow:hidden}.dealer-row[_ngcontent-%COMP%]{display:flex;min-height:300px}.dealer-name[_ngcontent-%COMP%]{font-size:14px;font-weight:700;color:#1f2937;margin-bottom:12px;line-height:1.4}.employee-list[_ngcontent-%COMP%]{height:384px;overflow-y:scroll;scroll-behavior:smooth;scrollbar-width:thin;scrollbar-color:#cbd5e1 #f1f5f9}.employee-list[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f5f9;border-radius:6px}.employee-list[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#cbd5e1;border-radius:6px}.employee-list[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#94a3b8}.charts-row[_ngcontent-%COMP%]{flex:1;display:flex;background:#fff}.metric-chart[_ngcontent-%COMP%]{flex:1;border-right:1px solid #e2e8f0;display:flex;flex-direction:column}.metric-chart[_ngcontent-%COMP%]:last-child{border-right:none}.chart-header[_ngcontent-%COMP%]{padding:12px 16px;background:#f9fafb;border-bottom:1px solid #e2e8f0;display:flex;flex-direction:column;gap:4px}.all-india-avg[_ngcontent-%COMP%]{color:#6b7280}@media (max-width: 1200px){.dealer-row[_ngcontent-%COMP%]{flex-direction:column}.dealer-info-column[_ngcontent-%COMP%]{width:100%;border-right:none;border-bottom:1px solid #e2e8f0}.employee-list[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px;height:auto;overflow:visible}.employee-item[_ngcontent-%COMP%]{margin-bottom:0}.charts-row[_ngcontent-%COMP%]{flex-direction:column}.metric-chart[_ngcontent-%COMP%]{border-right:none;border-bottom:1px solid #e2e8f0}.metric-chart[_ngcontent-%COMP%]:last-child{border-bottom:none}}@media (max-width: 768px){.dealer-info-column[_ngcontent-%COMP%]{padding:12px}.dealer-name[_ngcontent-%COMP%]{font-size:13px}.employee-name[_ngcontent-%COMP%]{font-size:10px}.employee-role[_ngcontent-%COMP%]{font-size:8px}.chart-header[_ngcontent-%COMP%]{padding:8px 12px}.chart-title[_ngcontent-%COMP%]{font-size:13px}.chart-averages[_ngcontent-%COMP%]{font-size:10px}}.employee-list[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}.employee-list[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#6b728099;border-radius:3px}.employee-list[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#00000008}.charts-container[_ngcontent-%COMP%]{background:#fff}.metrics-rows[_ngcontent-%COMP%]{display:flex;flex-direction:column}.metric-row[_ngcontent-%COMP%]{display:flex;border:1px solid #e2e8f0;overflow:hidden;background:#fff}.metric-label[_ngcontent-%COMP%]{background:#f8fafc;border-right:1px solid #e2e8f0;display:flex;align-items:center;justify-content:center;writing-mode:vertical-lr;text-orientation:mixed}.metric-label[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:16px;font-weight:600;color:#1f2937;margin:0;transform:rotate(180deg)}.charts-pair[_ngcontent-%COMP%]{flex:1;display:flex}.chart-section[_ngcontent-%COMP%]{flex:1;border-right:1px solid #e2e8f0;display:flex;flex-direction:column}.chart-section[_ngcontent-%COMP%]:last-child{border-right:none}.chart-wrapper[_ngcontent-%COMP%]{flex:1}.chart-wrapper[_ngcontent-%COMP%]   apx-chart[_ngcontent-%COMP%]{width:100%;height:100%}@media (max-width: 1200px){.metric-label[_ngcontent-%COMP%]{width:100px;font-size:14px}}@media (max-width: 768px){.metric-row[_ngcontent-%COMP%]{flex-direction:column}.metric-label[_ngcontent-%COMP%]{width:100%;writing-mode:horizontal-tb;text-orientation:mixed;padding:12px;border-right:none;border-bottom:1px solid #e2e8f0}.metric-label[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{transform:none}.charts-pair[_ngcontent-%COMP%]{flex-direction:column}.chart-section[_ngcontent-%COMP%]{border-right:none;border-bottom:1px solid #e2e8f0}.chart-section[_ngcontent-%COMP%]:last-child{border-bottom:none}}.chart-card[_ngcontent-%COMP%], .charts-grid[_ngcontent-%COMP%], .metrics-grid[_ngcontent-%COMP%]{display:none}.metric-label-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:8px;height:100%;justify-content:center}.metric-label-content[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:16px;font-weight:600;color:#1f2937;transform:rotate(180deg);writing-mode:vertical-lr;text-orientation:mixed}.call-type-dropdown[_ngcontent-%COMP%]{transform:rotate(180deg);writing-mode:vertical-lr;position:relative}.call-type-select[_ngcontent-%COMP%]{appearance:none;-webkit-appearance:none;-moz-appearance:none;background:#fff;border:1px solid #d1d5db;border-radius:4px;padding:4px 24px 4px 8px;font-size:10px;color:#374151;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 2px #0000000d;min-width:80px;max-width:100px;text-align:center;writing-mode:horizontal-tb;text-orientation:mixed;transform:rotate(180deg);outline:none}.call-type-select[_ngcontent-%COMP%]{background-image:url("data:image/svg+xml;utf8,<svg fill='gray' height='12' viewBox='0 0 24 24' width='12' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/></svg>");background-repeat:no-repeat;background-position:right 6px center;background-size:12px}.call-type-select[_ngcontent-%COMP%]:hover{border-color:#9ca3af;box-shadow:0 1px 3px #0000001a}.call-type-select[_ngcontent-%COMP%]:focus{border-color:#3b82f6;box-shadow:none;outline:none}@media (max-width: 1200px){.call-type-select[_ngcontent-%COMP%]{min-width:70px;max-width:80px;font-size:9px}}@media (max-width: 768px){.metric-label-content[_ngcontent-%COMP%]{flex-direction:row;gap:12px}.metric-label-content[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .call-type-dropdown[_ngcontent-%COMP%]{transform:none;writing-mode:horizontal-tb}.call-type-select[_ngcontent-%COMP%]{transform:none;writing-mode:horizontal-tb;min-width:120px;font-size:12px;padding:6px 30px 6px 12px}}.dashboard-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#1e40af,#3b82f6,#60a5fa);color:#fff;padding:24px 20px;text-align:center;position:relative;overflow:hidden}.dashboard-header[_ngcontent-%COMP%]:before{content:"";position:absolute;inset:0;background:#0000001a;z-index:1}.dashboard-header[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{position:relative;z-index:2}.dashboard-title[_ngcontent-%COMP%]{font-size:20px;font-weight:700;margin-bottom:20px;text-shadow:0 1px 2px rgba(0,0,0,.1);letter-spacing:.5px}.stats-row[_ngcontent-%COMP%]{display:flex;justify-content:center}.stat-item[_ngcontent-%COMP%]{text-align:center;background:#ffffff1a;padding:5px;border-radius:12px;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);border:1px solid rgba(255,255,255,.2);min-width:140px;transition:all .3s ease}.stat-item[_ngcontent-%COMP%]:hover{background:#ffffff26;transform:translateY(-2px)}.stat-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:8px}.stat-main[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;gap:8px}.stat-number[_ngcontent-%COMP%]{font-size:28px;font-weight:800;text-shadow:0 1px 2px rgba(0,0,0,.1)}.stat-divider[_ngcontent-%COMP%]{font-size:24px;font-weight:300;opacity:.7}.stat-secondary[_ngcontent-%COMP%]{font-size:18px;font-weight:600;opacity:.9}.stat-label-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;gap:8px;font-size:11px;opacity:.85;margin-top:4px}.stat-label[_ngcontent-%COMP%]{flex:1;text-align:center;font-weight:500}.stat-label-single[_ngcontent-%COMP%]{font-size:12px;font-weight:500;opacity:.9;margin-top:4px}@media (max-width: 1024px){.stats-row[_ngcontent-%COMP%]{gap:20px}.stat-item[_ngcontent-%COMP%]{min-width:120px;padding:12px 16px}.stat-number[_ngcontent-%COMP%]{font-size:24px}.stat-secondary[_ngcontent-%COMP%]{font-size:16px}}@media (max-width: 768px){.dashboard-header[_ngcontent-%COMP%]{padding:20px 16px}.dashboard-title[_ngcontent-%COMP%]{font-size:18px;margin-bottom:16px}.stats-row[_ngcontent-%COMP%]{flex-direction:column;gap:12px;align-items:center}.stat-item[_ngcontent-%COMP%]{width:100%;max-width:300px}.stat-number[_ngcontent-%COMP%]{font-size:22px}.stat-secondary[_ngcontent-%COMP%]{font-size:14px}.stat-label-row[_ngcontent-%COMP%]{font-size:10px}}.user-count-badge.primary[_ngcontent-%COMP%]{background:#3b82f6;color:#fff}.user-count-badge.success[_ngcontent-%COMP%]{background:#10b981;color:#fff}.user-count[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:8px}.dealer-name[_ngcontent-%COMP%]{font-weight:500;font-size:14px;color:#333}.user-count-badge[_ngcontent-%COMP%]{background-color:#2196f3;color:#fff;padding:2px 8px;font-weight:600;min-width:20px;text-align:center}.accordion-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:8px;margin-top:20px}.accordion-item[_ngcontent-%COMP%]{border:1px solid #e2e8f0;border-radius:8px;background:#fff;box-shadow:0 1px 3px #0000001a;overflow:hidden;transition:all .3s ease}.accordion-item.active[_ngcontent-%COMP%]{border-color:#3b82f6;box-shadow:0 4px 6px #0000001a}.accordion-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;padding:16px 20px;background:#f8fafc;border-bottom:1px solid #e2e8f0;cursor:pointer;transition:all .2s ease;-webkit-user-select:none;user-select:none}.accordion-header[_ngcontent-%COMP%]:hover{background:#f1f5f9}.accordion-item.active[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:#eff6ff;border-bottom-color:#3b82f6}.accordion-title[_ngcontent-%COMP%]{display:flex;align-items:center;gap:16px;flex:1}.accordion-title[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:16px;font-weight:600;color:#1f2937}.accordion-item.active[_ngcontent-%COMP%]   .accordion-title[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#3b82f6}.call-type-dropdown[_ngcontent-%COMP%]{margin-left:16px}.call-type-select[_ngcontent-%COMP%]{appearance:none;background:#fff;border:1px solid #d1d5db;border-radius:6px;padding:6px 12px;font-size:12px;font-weight:500;color:#374151;cursor:pointer;transition:all .2s ease;min-width:120px}.call-type-select[_ngcontent-%COMP%]:hover{border-color:#9ca3af}.call-type-select[_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;box-shadow:0 0 0 2px #3b82f61a}.accordion-toggle[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.accordion-icon[_ngcontent-%COMP%]{transition:transform .3s ease;color:#6b7280}.accordion-icon.rotated[_ngcontent-%COMP%]{transform:rotate(180deg)}.accordion-item.active[_ngcontent-%COMP%]   .accordion-icon[_ngcontent-%COMP%]{color:#3b82f6}.accordion-content[_ngcontent-%COMP%]{overflow:hidden;transition:all .3s ease;max-height:0}.accordion-content.expanded[_ngcontent-%COMP%]{max-height:800px;opacity:1}.charts-pair[_ngcontent-%COMP%]{display:flex}.chart-section[_ngcontent-%COMP%]{flex:1;border:1px solid #e2e8f0;overflow:hidden;background:#fff}.chart-level-title[_ngcontent-%COMP%]{background:#f1f5f9;font-size:14px;font-weight:500;color:#4b5563;text-align:center;border-bottom:1px solid #e2e8f0}@media (max-width: 1024px){.accordion-header[_ngcontent-%COMP%]{padding:14px 16px}.accordion-title[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:15px}.call-type-select[_ngcontent-%COMP%]{min-width:100px;font-size:11px}.accordion-content.expanded[_ngcontent-%COMP%]{padding:16px}.charts-pair[_ngcontent-%COMP%]{gap:12px}}@media (max-width: 768px){.accordion-header[_ngcontent-%COMP%]{padding:12px 14px}.accordion-title[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start;gap:8px}.call-type-dropdown[_ngcontent-%COMP%]{margin-left:0}.charts-pair[_ngcontent-%COMP%]{flex-direction:column;gap:16px}.accordion-content.expanded[_ngcontent-%COMP%]{max-height:1600px;padding:12px}}@media (prefers-reduced-motion: no-preference){.accordion-content[_ngcontent-%COMP%]{transition:max-height .4s cubic-bezier(.4,0,.2,1),opacity .3s ease,padding .3s ease}.accordion-icon[_ngcontent-%COMP%]{transition:transform .3s cubic-bezier(.4,0,.2,1)}}.accordion-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;padding:10px;background:#f5f5f5;cursor:pointer;font-weight:700;border:1px solid #ddd;border-radius:4px}.accordion-header[_ngcontent-%COMP%]   .user-count-badge[_ngcontent-%COMP%]{background:#2196f3;color:#fff;border-radius:12px;padding:2px 8px;font-size:12px;font-weight:600}.accordion-icon[_ngcontent-%COMP%]{font-size:16px;font-weight:700}.accordion-content[_ngcontent-%COMP%]{border:1px solid #ddd;border-radius:4px}.ps-wise-activity[_ngcontent-%COMP%]{border:1px solid #e2e8f0;background:#fff}.ps-section-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;border-bottom:2px solid #f1f5f9}.role-filter-select[_ngcontent-%COMP%]{min-width:100px}.role-filter-select[_ngcontent-%COMP%]:hover{border-color:#9ca3af}.role-filter-select[_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;box-shadow:0 0 0 2px #3b82f61a}.ps-accordion-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:12px}.ps-accordion-item[_ngcontent-%COMP%]{border:1px solid #e2e8f0;border-radius:8px;background:#fff;box-shadow:0 1px 3px #0000000d;overflow:hidden;transition:all .3s ease}.ps-accordion-item.active[_ngcontent-%COMP%]{border-color:#3b82f6;box-shadow:0 4px 8px #0000001a}.ps-accordion-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;padding:16px 20px;background:#f8fafc;border-bottom:1px solid #e2e8f0;cursor:pointer;transition:all .2s ease;-webkit-user-select:none;user-select:none}.ps-accordion-header[_ngcontent-%COMP%]:hover{background:#f1f5f9}.ps-accordion-item.active[_ngcontent-%COMP%]   .ps-accordion-header[_ngcontent-%COMP%]{background:#eff6ff;border-bottom-color:#3b82f6}.ps-accordion-title[_ngcontent-%COMP%]{display:flex;align-items:center;gap:16px;flex:1}.ps-accordion-title[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:16px;font-weight:600;color:#1f2937}.ps-accordion-item.active[_ngcontent-%COMP%]   .ps-accordion-title[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#3b82f6}.user-count-badge-header[_ngcontent-%COMP%]{background:#e5e7eb;color:#4b5563;font-size:11px;font-weight:600;padding:4px 8px;border-radius:12px;white-space:nowrap;text-transform:uppercase;letter-spacing:.5px}.ps-accordion-item.active[_ngcontent-%COMP%]   .user-count-badge-header[_ngcontent-%COMP%]{background:#dbeafe;color:#3b82f6}.ps-accordion-toggle[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.ps-accordion-icon[_ngcontent-%COMP%]{transition:transform .3s ease;color:#6b7280}.ps-accordion-icon.rotated[_ngcontent-%COMP%]{transform:rotate(180deg)}.ps-accordion-item.active[_ngcontent-%COMP%]   .ps-accordion-icon[_ngcontent-%COMP%]{color:#3b82f6}.ps-accordion-content[_ngcontent-%COMP%]{overflow:hidden;transition:all .4s cubic-bezier(.4,0,.2,1);max-height:0;opacity:0}.ps-accordion-content.expanded[_ngcontent-%COMP%]{max-height:1200px;opacity:1}.dealer-row[_ngcontent-%COMP%]{display:flex;min-height:400px}.dealer-info-column[_ngcontent-%COMP%]{width:200px;background:#f8fafc;border-right:1px solid #e2e8f0;padding:16px}.user-count[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:12px;gap:8px}.dealer-name[_ngcontent-%COMP%]{font-size:14px;font-weight:700;color:#1f2937;line-height:1.4;flex:1}.user-count-badge[_ngcontent-%COMP%]{background:#e5e7eb;color:#4b5563;font-size:11px;font-weight:600;white-space:nowrap;text-transform:uppercase;letter-spacing:.5px}.user-count-badge.info[_ngcontent-%COMP%]{background:#06b6d4;color:#fff}.employee-list[_ngcontent-%COMP%]{flex:1}.employee-item[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-bottom:8px;padding:4px 0}.employee-name[_ngcontent-%COMP%]{font-size:11px;color:#374151;font-weight:500}.employee-role[_ngcontent-%COMP%]{font-size:9px;color:#6b7280;margin-top:1px}.charts-row[_ngcontent-%COMP%]{height:max-content;flex:1;display:flex;background:#fff;gap:12px;padding:12px;flex-wrap:nowrap;overflow-x:auto;overflow-y:hidden;-webkit-overflow-scrolling:touch}.metric-chart[_ngcontent-%COMP%]{flex:1;min-width:300px;border:1px solid #e2e8f0;border-radius:6px;display:flex;flex-direction:column}.chart-header[_ngcontent-%COMP%]{padding:12px 16px;background:#f9fafb;border-bottom:1px solid #e2e8f0;display:flex;flex-direction:column;gap:8px}.chart-title[_ngcontent-%COMP%]{font-size:14px;font-weight:600;color:#1f2937}.ps-calls-select[_ngcontent-%COMP%]:hover{border-color:#9ca3af}.ps-calls-select[_ngcontent-%COMP%]:focus{outline:none;border-color:#3b82f6;box-shadow:0 0 0 2px #3b82f61a}.chart-averages[_ngcontent-%COMP%]{display:flex;gap:12px;font-size:11px}.dealer-avg[_ngcontent-%COMP%]{color:#374151;font-weight:500}.chart-container[_ngcontent-%COMP%]{flex:1;padding:8px}@media (max-width: 1200px){.ps-accordion-content.expanded[_ngcontent-%COMP%]{max-height:1800px}.dealer-row[_ngcontent-%COMP%]{flex-direction:column}.dealer-info-column[_ngcontent-%COMP%]{width:100%;border-right:none;border-bottom:1px solid #e2e8f0}.employee-list[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.employee-item[_ngcontent-%COMP%]{margin-bottom:0}.charts-row[_ngcontent-%COMP%]{flex-direction:column;padding:16px}.metric-chart[_ngcontent-%COMP%]{min-width:unset}}@media (max-width: 768px){.ps-accordion-header[_ngcontent-%COMP%]{padding:12px 16px}.ps-accordion-title[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start;gap:8px}.ps-accordion-title[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:14px}.user-count-badge-header[_ngcontent-%COMP%]{font-size:10px;padding:3px 6px}.ps-accordion-content.expanded[_ngcontent-%COMP%]{padding:12px;max-height:2000px}.dealer-info-column[_ngcontent-%COMP%]{padding:12px}.charts-row[_ngcontent-%COMP%]{padding:12px;gap:8px}}@media (prefers-reduced-motion: no-preference){.ps-accordion-content[_ngcontent-%COMP%]{transition:max-height .4s cubic-bezier(.4,0,.2,1),opacity .3s ease,padding .3s ease}.ps-accordion-icon[_ngcontent-%COMP%]{transition:transform .3s cubic-bezier(.4,0,.2,1)}}.charts-row[_ngcontent-%COMP%]::-webkit-scrollbar{height:6px}.charts-row[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f5f9;border-radius:3px}.charts-row[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#cbd5e1;border-radius:3px;transition:background .3s ease}.charts-row[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#94a3b8}.charts-row[_ngcontent-%COMP%]{scrollbar-width:thin;scrollbar-color:#cbd5e1 #f1f5f9}.loader-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;background:#ffffffb3;display:flex;align-items:center;justify-content:center;z-index:1050}.spinner[_ngcontent-%COMP%]{width:40px;height:40px;border:4px solid #e8e8e8;border-top:4px solid #555;border-radius:50%;animation:_ngcontent-%COMP%_spin .8s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.charts-compact-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:2rem}.chart-level-group[_ngcontent-%COMP%]{background:#fff;border-radius:8px;padding:1rem;box-shadow:0 2px 6px #0000001a}.chart-level-title[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:600}.chart-row[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:1rem}.chart-section[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-size:1rem;font-weight:500;margin-bottom:.5rem;text-align:center}.dashboard-top[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between;gap:.5rem;width:100%}.filter-group[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:.5rem;flex:1;min-width:0}.filter-item[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.25rem;flex-shrink:0}.filter-item[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{white-space:nowrap;font-size:.8125rem;color:#4b5563}.filter-item[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .filter-item[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:.2rem .4rem;font-size:.8125rem;min-width:90px;background-color:#fff;border:1px solid #d1d5db}.stats-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:.5rem;justify-content:flex-end;align-items:center}.stat-item[_ngcontent-%COMP%]{text-align:center;min-width:70px}.stat-number[_ngcontent-%COMP%]{font-weight:600;font-size:1rem;line-height:1.2}.stat-label[_ngcontent-%COMP%]{font-size:.75rem;color:#4b5563;white-space:nowrap}@media (max-width: 768px){.dashboard-top[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch}.stats-row[_ngcontent-%COMP%]{justify-content:flex-start}}.dealer-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:16px;font-weight:600;color:#333}.chart-column[_ngcontent-%COMP%]{flex:1;min-width:300px;position:relative}.chart-title-row[_ngcontent-%COMP%]{display:flex;align-items:center;width:100%}.averages-row[_ngcontent-%COMP%]{display:flex;gap:20px;flex-wrap:wrap}.horizontal-chart-wrapper[_ngcontent-%COMP%]{height:400px;width:100%}.chart-divider[_ngcontent-%COMP%]{position:absolute;right:-10px;top:0;bottom:0;width:1px;background:#e0e0e0}@media (max-width: 1024px){.horizontal-charts-container[_ngcontent-%COMP%]{flex-direction:column}.chart-column[_ngcontent-%COMP%]{min-width:auto}.chart-divider[_ngcontent-%COMP%]{display:none}}.ps-wise-activity[_ngcontent-%COMP%]{background:#fff;box-shadow:0 2px 8px #0000001a}.ps-section-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;padding:4px;border-bottom:1px solid #e0e0e0;background:#f8f9fa;border-radius:8px 8px 0 0}.ps-section-header[_ngcontent-%COMP%]   .chart-title[_ngcontent-%COMP%]{font-size:18px;font-weight:600;color:#333}.dealer-block[_ngcontent-%COMP%]:last-child{border-bottom:none}.dealer-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:15px;font-weight:600;color:#333}.user-count-badge[_ngcontent-%COMP%]{background:#007bff;color:#fff;font-weight:500}.horizontal-charts-container[_ngcontent-%COMP%]{display:flex;padding:3px;gap:10px;overflow-x:auto;scrollbar-width:thin;scrollbar-color:#ccc transparent}.horizontal-charts-container[_ngcontent-%COMP%]::-webkit-scrollbar{height:6px}.horizontal-charts-container[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.horizontal-charts-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#ccc;border-radius:3px}.horizontal-charts-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#999}.chart-header-section[_ngcontent-%COMP%]{display:flex;justify-content:space-between;flex-shrink:0;border-bottom:1px solid #eee}.metric-title[_ngcontent-%COMP%]{font-size:11px;font-weight:600;color:#333}.call-type-selector[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{border:1px solid #ddd;font-size:12px;background:#fff;outline:none}.avg-item[_ngcontent-%COMP%]{display:flex;gap:5px;font-size:11px}.india-avg[_ngcontent-%COMP%]{color:#ff6b6b}.custom-chart-wrapper[_ngcontent-%COMP%]{flex:1;max-height:400px;border:1px solid #e0e0e0;border-radius:6px;overflow:hidden;background:#fff}.custom-chart-container[_ngcontent-%COMP%]{height:100px;overflow-y:auto;overflow-x:hidden;padding:3px}.custom-chart-container[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}.custom-chart-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#c1c1c1;border-radius:3px}.custom-chart-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#a8a8a8}.user-bar[_ngcontent-%COMP%]{display:flex;align-items:center}.bar-background[_ngcontent-%COMP%]{flex:1;width:100%;height:18px;background-color:#f8f9fa;overflow:hidden;position:relative}.bar-fill[_ngcontent-%COMP%]{height:100%;transition:width .3s ease;transition:width 1s ease-in-out;position:relative;width:0;min-width:2px}@media (max-width: 1024px){.horizontal-charts-container[_ngcontent-%COMP%]{flex-direction:column;gap:20px}.chart-column[_ngcontent-%COMP%]{min-width:auto}.chart-divider[_ngcontent-%COMP%]{display:none}.user-info[_ngcontent-%COMP%]{min-width:100px;max-width:100px}}@media (max-width: 768px){.horizontal-charts-container[_ngcontent-%COMP%]{padding:15px}.custom-chart-wrapper[_ngcontent-%COMP%]{max-height:300px}}.dealers-scroll-container[_ngcontent-%COMP%]{flex:1;overflow-y:auto;overflow-x:hidden;max-height:320px;padding:0}.dealers-scroll-container[_ngcontent-%COMP%]::-webkit-scrollbar{width:2px!important}.dealers-scroll-container[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f1f1;border-radius:4px}.dealers-scroll-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#c1c1c1;border-radius:4px}.dealers-scroll-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#a8a8a8}.dealer-block[_ngcontent-%COMP%]{border-bottom:1px solid #f0f0f0;flex-shrink:0}.dealer-block[_ngcontent-%COMP%]:last-child{border-bottom:none;margin-bottom:0}.dealer-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;padding:4px;align-items:center;background:#f5f5f5;border-bottom:1px solid #e0e0e0;position:sticky;top:0;z-index:10}.chart-column[_ngcontent-%COMP%]{flex:1;min-width:250px;position:relative;display:flex;flex-direction:column}.metric-title[_ngcontent-%COMP%]{font-size:14px;font-weight:600;color:#333;margin-right:35px}.averages-row[_ngcontent-%COMP%]{display:flex;gap:15px;flex-wrap:wrap}.avg-item[_ngcontent-%COMP%]{display:flex;gap:5px;font-size:12px}.avg-label[_ngcontent-%COMP%]{color:#666}.avg-value[_ngcontent-%COMP%]{font-weight:600}.dealer-avg[_ngcontent-%COMP%]{color:#4dabf7}.custom-chart-wrapper[_ngcontent-%COMP%]{flex:1;max-height:250px;border:1px solid #e0e0e0;border-radius:6px;overflow:hidden;background:#fff}.custom-chart-container[_ngcontent-%COMP%]::-webkit-scrollbar{width:4px}.custom-chart-container[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f1f1}.dashboard-top[_ngcontent-%COMP%]{position:relative;top:0;left:0;right:0;z-index:1000;background:#fff;transition:all .3s ease;box-shadow:none}.dealers-scroll-container[_ngcontent-%COMP%]{overflow-y:auto;max-height:500px}.dealers-scroll-container[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}.dealers-scroll-container[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f1f1}.dealers-scroll-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#888;border-radius:3px}.dealers-scroll-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background-color:#555}.dealers-scroll-container[_ngcontent-%COMP%]{scrollbar-width:thin;scrollbar-color:#888 #f1f1f1}.dashboard-top.sticky[_ngcontent-%COMP%]{position:fixed;top:0;left:0;right:0;box-shadow:0 2px 5px #0000001a}.dashboard-top.hidden[_ngcontent-%COMP%]{transform:translateY(-100%)}.custom-chart-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#c1c1c1;border-radius:2px}.custom-chart-container[_ngcontent-%COMP%]::-webkit-scrollbar{height:4px}.user-info[_ngcontent-%COMP%]{min-width:120px;max-width:120px;margin-right:10px;display:flex;flex-direction:column;font-size:11px}.user-name[_ngcontent-%COMP%]{font-weight:500;color:#333;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;line-height:1.2}.bar-container[_ngcontent-%COMP%]{flex:1;min-height:20px;display:flex;align-items:center;gap:8px}.bar-background[_ngcontent-%COMP%]{flex:1;height:18px;background-color:#f8f9fa;overflow:hidden;position:relative}  .dealers-scroll-container::-webkit-scrollbar{width:6px}.user-value[_ngcontent-%COMP%]{font-weight:600;color:#007bff;font-size:12px;min-width:30px;text-align:right}.empty-state[_ngcontent-%COMP%]{text-align:center;padding:40px 20px;color:#666;font-style:italic}.chart-divider[_ngcontent-%COMP%]{position:absolute;right:-7px;top:0;bottom:0;width:1px;background:#e0e0e0}@media (max-width: 1024px){.ps-wise-activity[_ngcontent-%COMP%]{max-height:600px}.dealers-scroll-container[_ngcontent-%COMP%]{max-height:520px}.dealer-block[_ngcontent-%COMP%]{min-height:250px}.horizontal-charts-container[_ngcontent-%COMP%]{flex-direction:column;gap:20px}.chart-column[_ngcontent-%COMP%]{min-width:auto}.chart-divider[_ngcontent-%COMP%]{display:none}.user-info[_ngcontent-%COMP%]{min-width:100px;max-width:100px}}@media (max-width: 768px){.ps-wise-activity[_ngcontent-%COMP%]{max-height:500px}.dealers-scroll-container[_ngcontent-%COMP%]{max-height:420px}.horizontal-charts-container[_ngcontent-%COMP%]{padding:15px}.custom-chart-wrapper[_ngcontent-%COMP%]{max-height:200px}.stat-item[_ngcontent-%COMP%]{flex:1 1 45%}}`,
    ],
  });
};
var dh = [
  { path: "dataTable", component: ls },
  { path: "", component: Mo, pathMatch: "full" },
  { path: "login", component: Mo },
  {
    path: "Admin",
    component: ma,
    canActivate: [Ot],
    children: [
      { path: "", redirectTo: "dashboard", pathMatch: "full" },
      {
        path: "dashboard",
        component: xa,
        data: { title: "Dashboard" },
        canActivate: [Ot],
      },
      {
        path: "dealer",
        component: Da,
        data: { title: "Dealer" },
        canActivate: [Ot],
      },
      {
        path: "team",
        component: cs,
        data: { title: "team" },
        canActivate: [Ot],
      },
      {
        path: "vehicle",
        component: ja,
        data: { title: "Vehicle" },
        canActivate: [Ot],
      },
      {
        path: "role",
        component: ss,
        data: { title: "Role" },
        canActivate: [Ot],
      },
      {
        path: "user-all",
        component: Ka,
        data: { title: "Users-All" },
        canActivate: [Ot],
      },
      {
        path: "customer",
        component: Ga,
        data: { title: "Customer" },
        canActivate: [Ot],
      },
      {
        path: "profile",
        component: qa,
        data: { title: "Profile" },
        canActivate: [Ot],
      },
      {
        path: "singleUser/:dealer_id",
        component: So,
        resolve: { dealerData: Oo },
        data: { title: "Multiple" },
        canActivate: [Ot],
      },
      {
        path: "single-events/:eventId",
        component: Qa,
        resolve: { eventData: Ja },
        data: { title: "Single events" },
        canActivate: [Ot],
      },
      {
        path: "single-lead/:dealerId/:leadId",
        component: Za,
        resolve: { leadData: Xa },
        data: { title: "Single Lead Data" },
        canActivate: [Ot],
      },
      {
        path: "single-user/:user_id",
        component: ts,
        resolve: { userData: es },
        data: { title: "Single user Data" },
        canActivate: [Ot],
      },
      {
        path: "single-task/:taskId",
        component: ns,
        resolve: { taskData: is },
        data: { title: "Single Task Data" },
        canActivate: [Ot],
      },
      {
        path: "single-opportunities/:oppId",
        component: os,
        resolve: { oppData: as },
        data: { title: "Single Opportunities Data" },
        canActivate: [Ot],
      },
      {
        path: "admin/singleDealer/:id",
        component: So,
        resolve: { dealerData: Oo },
        data: { title: "Single dealer Data" },
        canActivate: [Ot],
      },
      {
        path: "summary",
        component: Po,
        data: { title: "Summary" },
        canActivate: [Ot],
      },
      {
        path: "summary",
        component: Po,
        data: { title: "Summary" },
        canActivate: [Ot],
      },
      {
        path: "trend-chart",
        component: ps,
        data: { title: "Trend-chart" },
        canActivate: [Ot],
      },
    ],
  },
];
var CC = "@",
  wC = (() => {
    class r {
      constructor(e, t, n, o, u) {
        (this.doc = e),
          (this.delegate = t),
          (this.zone = n),
          (this.animationType = o),
          (this.moduleImpl = u),
          (this._rendererFactoryPromise = null),
          (this.scheduler = te(wd, { optional: !0 })),
          (this.loadingSchedulerFn = te(DC, { optional: !0 }));
      }
      ngOnDestroy() {
        this._engine?.flush();
      }
      loadImpl() {
        let e = () =>
            this.moduleImpl ?? import("./chunk-K7Y2VJEI.mjs").then((n) => n),
          t;
        return (
          this.loadingSchedulerFn
            ? (t = this.loadingSchedulerFn(e))
            : (t = e()),
          t
            .catch((n) => {
              throw new fr(5300, !1);
            })
            .then(({ ɵcreateEngine: n, ɵAnimationRendererFactory: o }) => {
              this._engine = n(this.animationType, this.doc);
              let u = new o(this.delegate, this._engine, this.zone);
              return (this.delegate = u), u;
            })
        );
      }
      createRenderer(e, t) {
        let n = this.delegate.createRenderer(e, t);
        if (n.ɵtype === 0) return n;
        typeof n.throwOnSyntheticProps == "boolean" &&
          (n.throwOnSyntheticProps = !1);
        let o = new wc(n);
        return (
          t?.data?.animation &&
            !this._rendererFactoryPromise &&
            (this._rendererFactoryPromise = this.loadImpl()),
          this._rendererFactoryPromise
            ?.then((u) => {
              let b = u.createRenderer(e, t);
              o.use(b), this.scheduler?.notify(10);
            })
            .catch((u) => {
              o.use(n);
            }),
          o
        );
      }
      begin() {
        this.delegate.begin?.();
      }
      end() {
        this.delegate.end?.();
      }
      whenRenderingDone() {
        return this.delegate.whenRenderingDone?.() ?? Promise.resolve();
      }
      static {
        this.ɵfac = function (t) {
          gr();
        };
      }
      static {
        this.ɵprov = re({ token: r, factory: r.ɵfac });
      }
    }
    return r;
  })(),
  wc = class {
    constructor(i) {
      (this.delegate = i), (this.replay = []), (this.ɵtype = 1);
    }
    use(i) {
      if (((this.delegate = i), this.replay !== null)) {
        for (let e of this.replay) e(i);
        this.replay = null;
      }
    }
    get data() {
      return this.delegate.data;
    }
    destroy() {
      (this.replay = null), this.delegate.destroy();
    }
    createElement(i, e) {
      return this.delegate.createElement(i, e);
    }
    createComment(i) {
      return this.delegate.createComment(i);
    }
    createText(i) {
      return this.delegate.createText(i);
    }
    get destroyNode() {
      return this.delegate.destroyNode;
    }
    appendChild(i, e) {
      this.delegate.appendChild(i, e);
    }
    insertBefore(i, e, t, n) {
      this.delegate.insertBefore(i, e, t, n);
    }
    removeChild(i, e, t) {
      this.delegate.removeChild(i, e, t);
    }
    selectRootElement(i, e) {
      return this.delegate.selectRootElement(i, e);
    }
    parentNode(i) {
      return this.delegate.parentNode(i);
    }
    nextSibling(i) {
      return this.delegate.nextSibling(i);
    }
    setAttribute(i, e, t, n) {
      this.delegate.setAttribute(i, e, t, n);
    }
    removeAttribute(i, e, t) {
      this.delegate.removeAttribute(i, e, t);
    }
    addClass(i, e) {
      this.delegate.addClass(i, e);
    }
    removeClass(i, e) {
      this.delegate.removeClass(i, e);
    }
    setStyle(i, e, t, n) {
      this.delegate.setStyle(i, e, t, n);
    }
    removeStyle(i, e, t) {
      this.delegate.removeStyle(i, e, t);
    }
    setProperty(i, e, t) {
      this.shouldReplay(e) && this.replay.push((n) => n.setProperty(i, e, t)),
        this.delegate.setProperty(i, e, t);
    }
    setValue(i, e) {
      this.delegate.setValue(i, e);
    }
    listen(i, e, t) {
      return (
        this.shouldReplay(e) && this.replay.push((n) => n.listen(i, e, t)),
        this.delegate.listen(i, e, t)
      );
    }
    shouldReplay(i) {
      return this.replay !== null && i.startsWith(CC);
    }
  },
  DC = new $e("");
function ph(r = "animations") {
  return (
    Sd("NgAsyncAnimations"),
    Wo([
      {
        provide: Dd,
        useFactory: (i, e, t) => new wC(i, e, t, r),
        deps: [Le, Nd, Ie],
      },
      {
        provide: Zi,
        useValue: r === "noop" ? "NoopAnimations" : "BrowserAnimations",
      },
    ])
  );
}
var uh = {
  providers: [
    Ed({ eventCoalescing: !0 }),
    Ud(dh),
    Mr,
    Hd(),
    Vd(),
    ph(),
    vd(
      kp.forRoot({
        timeOut: 3e3,
        positionClass: "toast-top-right",
        preventDuplicates: !0,
        progressBar: !0,
      })
    ),
  ],
};
var SC = { providers: [jd()] },
  hh = Id(uh, SC);
var MC = () => Ld(Jo, hh),
  UA = MC;
export { UA as a };
