import "./polyfills.server.mjs";
import {
  a as ti,
  b as $t,
  c as sp,
  d as hs,
  e as lp,
  f as cp,
  g as dp,
  h as up,
  k as hp,
  o as cr,
  p as vi,
  q as ps,
  s as yi,
  t as Gt,
  u as pp,
  v as xi,
} from "./chunk-OWK4DPSG.mjs";
import {
  $a as B,
  $b as bt,
  $c as De,
  A as rs,
  Aa as pt,
  Ab as c,
  B as Sc,
  Ba as ke,
  Bb as l,
  Cb as U,
  Cc as xe,
  Db as je,
  Dc as Hi,
  E as Mc,
  Eb as ze,
  Ec as Mo,
  Fa as Ti,
  Fb as rn,
  Fc as an,
  G as Do,
  Ga as vn,
  Gb as ee,
  Gc as ds,
  Ha as Yh,
  Hb as cs,
  I as as,
  Ib as F,
  Ic as rp,
  J as zh,
  Jb as ep,
  Jc as Vc,
  Kb as w,
  Lb as Lt,
  Mb as wt,
  Mc as Le,
  Nb as xn,
  Ob as Dt,
  P as Yr,
  Pb as rt,
  Q as Jn,
  Qb as at,
  R as Tc,
  Rb as tp,
  S as Vt,
  Sb as Ac,
  T as Ec,
  Tb as ht,
  Tc as us,
  U as kc,
  Ua as qh,
  Ub as h,
  V as nr,
  Va as Kr,
  Vb as N,
  Vc as It,
  W as ei,
  Wa as Oc,
  Wb as K,
  Wc as Bt,
  X as ie,
  Xb as Qr,
  Xc as Ke,
  Y as ge,
  Ya as Kh,
  Yb as _i,
  Yc as sr,
  Zb as gt,
  Zc as lr,
  _ as qe,
  _a as p,
  _b as _t,
  _c as ap,
  a as Ji,
  aa as Z,
  ab as or,
  ac as St,
  ba as J,
  bb as yn,
  bc as re,
  c as wo,
  ca as Uh,
  cb as Qh,
  cc as bi,
  cd as ji,
  da as Wh,
  db as So,
  dc as he,
  eb as Xh,
  ec as Bi,
  f as Ee,
  fa as oe,
  fb as ui,
  fc as Rc,
  g as en,
  ga as _e,
  gb as nn,
  gc as ip,
  h as wc,
  ha as Te,
  hb as Zh,
  hc as Xr,
  hd as To,
  i as Nh,
  ia as ss,
  ib as le,
  ic as Fc,
  id as Ei,
  j as Vh,
  ja as $h,
  jb as Jh,
  jc as Ot,
  jd as jt,
  k as xt,
  kb as $e,
  kd as Ln,
  la as qr,
  lb as kt,
  ld as Lc,
  md as ki,
  na as Et,
  nc as np,
  o as Fn,
  oa as O,
  ob as k,
  p as Dc,
  pa as I,
  pb as Ic,
  qa as ct,
  qb as Pc,
  qc as Vn,
  ra as eo,
  rb as Nn,
  s as Lh,
  sa as ut,
  sb as ae,
  ta as ls,
  tb as y,
  tc as op,
  u as Bh,
  ua as Ct,
  ub as gi,
  uc as Nc,
  v as tn,
  vb as fe,
  w as Hh,
  wa as ve,
  wb as Ae,
  x as ir,
  xa as Oe,
  xb as on,
  xc as Xe,
  y as di,
  yb as rr,
  z as jh,
  za as Gh,
  zb as ar,
} from "./chunk-WZJDNXTQ.mjs";
import {
  a as ne,
  b as et,
  e as y_,
  g as x_,
  h as Cc,
} from "./chunk-5XUXGTUW.mjs";
var c0 = y_((l0, Vl) => {
  "use strict";
  (function (n, t) {
    "use strict";
    typeof Vl == "object" && typeof Vl.exports == "object"
      ? (Vl.exports = n.document
          ? t(n, !0)
          : function (e) {
              if (!e.document)
                throw new Error("jQuery requires a window with a document");
              return t(e);
            })
      : t(n);
  })(typeof window < "u" ? window : l0, function (n, t) {
    "use strict";
    var e = [],
      i = Object.getPrototypeOf,
      o = e.slice,
      r = e.flat
        ? function (s) {
            return e.flat.call(s);
          }
        : function (s) {
            return e.concat.apply([], s);
          },
      a = e.push,
      d = e.indexOf,
      m = {},
      _ = m.toString,
      v = m.hasOwnProperty,
      S = v.toString,
      T = S.call(Object),
      M = {},
      A = function (u) {
        return (
          typeof u == "function" &&
          typeof u.nodeType != "number" &&
          typeof u.item != "function"
        );
      },
      j = function (u) {
        return u != null && u === u.window;
      },
      z = n.document,
      L = { type: !0, src: !0, nonce: !0, noModule: !0 };
    function ue(s, u, f) {
      f = f || z;
      var g,
        x,
        C = f.createElement("script");
      if (((C.text = s), u))
        for (g in L)
          (x = u[g] || (u.getAttribute && u.getAttribute(g))),
            x && C.setAttribute(g, x);
      f.head.appendChild(C).parentNode.removeChild(C);
    }
    function Ve(s) {
      return s == null
        ? s + ""
        : typeof s == "object" || typeof s == "function"
        ? m[_.call(s)] || "object"
        : typeof s;
    }
    var Se = "3.7.1",
      Re = /HTML$/i,
      b = function (s, u) {
        return new b.fn.init(s, u);
      };
    (b.fn = b.prototype =
      {
        jquery: Se,
        constructor: b,
        length: 0,
        toArray: function () {
          return o.call(this);
        },
        get: function (s) {
          return s == null
            ? o.call(this)
            : s < 0
            ? this[s + this.length]
            : this[s];
        },
        pushStack: function (s) {
          var u = b.merge(this.constructor(), s);
          return (u.prevObject = this), u;
        },
        each: function (s) {
          return b.each(this, s);
        },
        map: function (s) {
          return this.pushStack(
            b.map(this, function (u, f) {
              return s.call(u, f, u);
            })
          );
        },
        slice: function () {
          return this.pushStack(o.apply(this, arguments));
        },
        first: function () {
          return this.eq(0);
        },
        last: function () {
          return this.eq(-1);
        },
        even: function () {
          return this.pushStack(
            b.grep(this, function (s, u) {
              return (u + 1) % 2;
            })
          );
        },
        odd: function () {
          return this.pushStack(
            b.grep(this, function (s, u) {
              return u % 2;
            })
          );
        },
        eq: function (s) {
          var u = this.length,
            f = +s + (s < 0 ? u : 0);
          return this.pushStack(f >= 0 && f < u ? [this[f]] : []);
        },
        end: function () {
          return this.prevObject || this.constructor();
        },
        push: a,
        sort: e.sort,
        splice: e.splice,
      }),
      (b.extend = b.fn.extend =
        function () {
          var s,
            u,
            f,
            g,
            x,
            C,
            D = arguments[0] || {},
            R = 1,
            P = arguments.length,
            H = !1;
          for (
            typeof D == "boolean" && ((H = D), (D = arguments[R] || {}), R++),
              typeof D != "object" && !A(D) && (D = {}),
              R === P && ((D = this), R--);
            R < P;
            R++
          )
            if ((s = arguments[R]) != null)
              for (u in s)
                (g = s[u]),
                  !(u === "__proto__" || D === g) &&
                    (H && g && (b.isPlainObject(g) || (x = Array.isArray(g)))
                      ? ((f = D[u]),
                        x && !Array.isArray(f)
                          ? (C = [])
                          : !x && !b.isPlainObject(f)
                          ? (C = {})
                          : (C = f),
                        (x = !1),
                        (D[u] = b.extend(H, C, g)))
                      : g !== void 0 && (D[u] = g));
          return D;
        }),
      b.extend({
        expando: "jQuery" + (Se + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function (s) {
          throw new Error(s);
        },
        noop: function () {},
        isPlainObject: function (s) {
          var u, f;
          return !s || _.call(s) !== "[object Object]"
            ? !1
            : ((u = i(s)),
              u
                ? ((f = v.call(u, "constructor") && u.constructor),
                  typeof f == "function" && S.call(f) === T)
                : !0);
        },
        isEmptyObject: function (s) {
          var u;
          for (u in s) return !1;
          return !0;
        },
        globalEval: function (s, u, f) {
          ue(s, { nonce: u && u.nonce }, f);
        },
        each: function (s, u) {
          var f,
            g = 0;
          if (Be(s))
            for (f = s.length; g < f && u.call(s[g], g, s[g]) !== !1; g++);
          else for (g in s) if (u.call(s[g], g, s[g]) === !1) break;
          return s;
        },
        text: function (s) {
          var u,
            f = "",
            g = 0,
            x = s.nodeType;
          if (!x) for (; (u = s[g++]); ) f += b.text(u);
          return x === 1 || x === 11
            ? s.textContent
            : x === 9
            ? s.documentElement.textContent
            : x === 3 || x === 4
            ? s.nodeValue
            : f;
        },
        makeArray: function (s, u) {
          var f = u || [];
          return (
            s != null &&
              (Be(Object(s))
                ? b.merge(f, typeof s == "string" ? [s] : s)
                : a.call(f, s)),
            f
          );
        },
        inArray: function (s, u, f) {
          return u == null ? -1 : d.call(u, s, f);
        },
        isXMLDoc: function (s) {
          var u = s && s.namespaceURI,
            f = s && (s.ownerDocument || s).documentElement;
          return !Re.test(u || (f && f.nodeName) || "HTML");
        },
        merge: function (s, u) {
          for (var f = +u.length, g = 0, x = s.length; g < f; g++)
            s[x++] = u[g];
          return (s.length = x), s;
        },
        grep: function (s, u, f) {
          for (var g, x = [], C = 0, D = s.length, R = !f; C < D; C++)
            (g = !u(s[C], C)), g !== R && x.push(s[C]);
          return x;
        },
        map: function (s, u, f) {
          var g,
            x,
            C = 0,
            D = [];
          if (Be(s))
            for (g = s.length; C < g; C++)
              (x = u(s[C], C, f)), x != null && D.push(x);
          else for (C in s) (x = u(s[C], C, f)), x != null && D.push(x);
          return r(D);
        },
        guid: 1,
        support: M,
      }),
      typeof Symbol == "function" &&
        (b.fn[Symbol.iterator] = e[Symbol.iterator]),
      b.each(
        "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
          " "
        ),
        function (s, u) {
          m["[object " + u + "]"] = u.toLowerCase();
        }
      );
    function Be(s) {
      var u = !!s && "length" in s && s.length,
        f = Ve(s);
      return A(s) || j(s)
        ? !1
        : f === "array" ||
            u === 0 ||
            (typeof u == "number" && u > 0 && u - 1 in s);
    }
    function be(s, u) {
      return s.nodeName && s.nodeName.toLowerCase() === u.toLowerCase();
    }
    var He = e.pop,
      st = e.sort,
      Ft = e.splice,
      Ie = "[\\x20\\t\\r\\n\\f]",
      Xt = new RegExp(
        "^" + Ie + "+|((?:^|[^\\\\])(?:\\\\.)*)" + Ie + "+$",
        "g"
      );
    b.contains = function (s, u) {
      var f = u && u.parentNode;
      return (
        s === f ||
        !!(
          f &&
          f.nodeType === 1 &&
          (s.contains
            ? s.contains(f)
            : s.compareDocumentPosition && s.compareDocumentPosition(f) & 16)
        )
      );
    };
    var dn = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function yt(s, u) {
      return u
        ? s === "\0"
          ? "\uFFFD"
          : s.slice(0, -1) +
            "\\" +
            s.charCodeAt(s.length - 1).toString(16) +
            " "
        : "\\" + s;
    }
    b.escapeSelector = function (s) {
      return (s + "").replace(dn, yt);
    };
    var lt = z,
      Zt = a;
    (function () {
      var s,
        u,
        f,
        g,
        x,
        C = Zt,
        D,
        R,
        P,
        H,
        q,
        X = b.expando,
        G = 0,
        te = 0,
        Fe = ts(),
        Je = ts(),
        Ue = ts(),
        qt = ts(),
        Ht = function (E, V) {
          return E === V && (x = !0), 0;
        },
        mn =
          "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        fn =
          "(?:\\\\[\\da-fA-F]{1,6}" +
          Ie +
          "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
        Qe =
          "\\[" +
          Ie +
          "*(" +
          fn +
          ")(?:" +
          Ie +
          "*([*^$|!~]?=)" +
          Ie +
          `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` +
          fn +
          "))|)" +
          Ie +
          "*\\]",
        xo =
          ":(" +
          fn +
          `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` +
          Qe +
          ")*)|.*)\\)|)",
        tt = new RegExp(Ie + "+", "g"),
        Tt = new RegExp("^" + Ie + "*," + Ie + "*"),
        Wr = new RegExp("^" + Ie + "*([>+~]|" + Ie + ")" + Ie + "*"),
        fc = new RegExp(Ie + "|>"),
        gn = new RegExp(xo),
        $r = new RegExp("^" + fn + "$"),
        _n = {
          ID: new RegExp("^#(" + fn + ")"),
          CLASS: new RegExp("^\\.(" + fn + ")"),
          TAG: new RegExp("^(" + fn + "|[*])"),
          ATTR: new RegExp("^" + Qe),
          PSEUDO: new RegExp("^" + xo),
          CHILD: new RegExp(
            "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
              Ie +
              "*(even|odd|(([+-]|)(\\d*)n|)" +
              Ie +
              "*(?:([+-]|)" +
              Ie +
              "*(\\d+)|))" +
              Ie +
              "*\\)|)",
            "i"
          ),
          bool: new RegExp("^(?:" + mn + ")$", "i"),
          needsContext: new RegExp(
            "^" +
              Ie +
              "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
              Ie +
              "*((?:-\\d)?\\d*)" +
              Ie +
              "*\\)|)(?=[^-]|$)",
            "i"
          ),
        },
        Qn = /^(?:input|select|textarea|button)$/i,
        Xn = /^h\d$/i,
        Vi = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        gc = /[+~]/,
        An = new RegExp(
          "\\\\[\\da-fA-F]{1,6}" + Ie + "?|\\\\([^\\r\\n\\f])",
          "g"
        ),
        Rn = function (E, V) {
          var W = "0x" + E.slice(1) - 65536;
          return (
            V ||
            (W < 0
              ? String.fromCharCode(W + 65536)
              : String.fromCharCode((W >> 10) | 55296, (W & 1023) | 56320))
          );
        },
        p_ = function () {
          Zn();
        },
        m_ = ns(
          function (E) {
            return E.disabled === !0 && be(E, "fieldset");
          },
          { dir: "parentNode", next: "legend" }
        );
      function f_() {
        try {
          return D.activeElement;
        } catch {}
      }
      try {
        C.apply((e = o.call(lt.childNodes)), lt.childNodes),
          e[lt.childNodes.length].nodeType;
      } catch {
        C = {
          apply: function (V, W) {
            Zt.apply(V, o.call(W));
          },
          call: function (V) {
            Zt.apply(V, o.call(arguments, 1));
          },
        };
      }
      function ot(E, V, W, Y) {
        var Q,
          se,
          pe,
          ye,
          me,
          Ge,
          Pe,
          Ne = V && V.ownerDocument,
          Ye = V ? V.nodeType : 9;
        if (
          ((W = W || []),
          typeof E != "string" || !E || (Ye !== 1 && Ye !== 9 && Ye !== 11))
        )
          return W;
        if (!Y && (Zn(V), (V = V || D), P)) {
          if (Ye !== 11 && (me = Vi.exec(E)))
            if ((Q = me[1])) {
              if (Ye === 9)
                if ((pe = V.getElementById(Q))) {
                  if (pe.id === Q) return C.call(W, pe), W;
                } else return W;
              else if (
                Ne &&
                (pe = Ne.getElementById(Q)) &&
                ot.contains(V, pe) &&
                pe.id === Q
              )
                return C.call(W, pe), W;
            } else {
              if (me[2]) return C.apply(W, V.getElementsByTagName(E)), W;
              if ((Q = me[3]) && V.getElementsByClassName)
                return C.apply(W, V.getElementsByClassName(Q)), W;
            }
          if (!qt[E + " "] && (!H || !H.test(E))) {
            if (((Pe = E), (Ne = V), Ye === 1 && (fc.test(E) || Wr.test(E)))) {
              for (
                Ne = (gc.test(E) && _c(V.parentNode)) || V,
                  (Ne != V || !M.scope) &&
                    ((ye = V.getAttribute("id"))
                      ? (ye = b.escapeSelector(ye))
                      : V.setAttribute("id", (ye = X))),
                  Ge = Gr(E),
                  se = Ge.length;
                se--;

              )
                Ge[se] = (ye ? "#" + ye : ":scope") + " " + is(Ge[se]);
              Pe = Ge.join(",");
            }
            try {
              return C.apply(W, Ne.querySelectorAll(Pe)), W;
            } catch {
              qt(E, !0);
            } finally {
              ye === X && V.removeAttribute("id");
            }
          }
        }
        return Fh(E.replace(Xt, "$1"), V, W, Y);
      }
      function ts() {
        var E = [];
        function V(W, Y) {
          return (
            E.push(W + " ") > u.cacheLength && delete V[E.shift()],
            (V[W + " "] = Y)
          );
        }
        return V;
      }
      function Zi(E) {
        return (E[X] = !0), E;
      }
      function er(E) {
        var V = D.createElement("fieldset");
        try {
          return !!E(V);
        } catch {
          return !1;
        } finally {
          V.parentNode && V.parentNode.removeChild(V), (V = null);
        }
      }
      function g_(E) {
        return function (V) {
          return be(V, "input") && V.type === E;
        };
      }
      function __(E) {
        return function (V) {
          return (be(V, "input") || be(V, "button")) && V.type === E;
        };
      }
      function Ah(E) {
        return function (V) {
          return "form" in V
            ? V.parentNode && V.disabled === !1
              ? "label" in V
                ? "label" in V.parentNode
                  ? V.parentNode.disabled === E
                  : V.disabled === E
                : V.isDisabled === E || (V.isDisabled !== !E && m_(V) === E)
              : V.disabled === E
            : "label" in V
            ? V.disabled === E
            : !1;
        };
      }
      function Co(E) {
        return Zi(function (V) {
          return (
            (V = +V),
            Zi(function (W, Y) {
              for (var Q, se = E([], W.length, V), pe = se.length; pe--; )
                W[(Q = se[pe])] && (W[Q] = !(Y[Q] = W[Q]));
            })
          );
        });
      }
      function _c(E) {
        return E && typeof E.getElementsByTagName < "u" && E;
      }
      function Zn(E) {
        var V,
          W = E ? E.ownerDocument || E : lt;
        return (
          W == D ||
            W.nodeType !== 9 ||
            !W.documentElement ||
            ((D = W),
            (R = D.documentElement),
            (P = !b.isXMLDoc(D)),
            (q = R.matches || R.webkitMatchesSelector || R.msMatchesSelector),
            R.msMatchesSelector &&
              lt != D &&
              (V = D.defaultView) &&
              V.top !== V &&
              V.addEventListener("unload", p_),
            (M.getById = er(function (Y) {
              return (
                (R.appendChild(Y).id = b.expando),
                !D.getElementsByName || !D.getElementsByName(b.expando).length
              );
            })),
            (M.disconnectedMatch = er(function (Y) {
              return q.call(Y, "*");
            })),
            (M.scope = er(function () {
              return D.querySelectorAll(":scope");
            })),
            (M.cssHas = er(function () {
              try {
                return D.querySelector(":has(*,:jqfake)"), !1;
              } catch {
                return !0;
              }
            })),
            M.getById
              ? ((u.filter.ID = function (Y) {
                  var Q = Y.replace(An, Rn);
                  return function (se) {
                    return se.getAttribute("id") === Q;
                  };
                }),
                (u.find.ID = function (Y, Q) {
                  if (typeof Q.getElementById < "u" && P) {
                    var se = Q.getElementById(Y);
                    return se ? [se] : [];
                  }
                }))
              : ((u.filter.ID = function (Y) {
                  var Q = Y.replace(An, Rn);
                  return function (se) {
                    var pe =
                      typeof se.getAttributeNode < "u" &&
                      se.getAttributeNode("id");
                    return pe && pe.value === Q;
                  };
                }),
                (u.find.ID = function (Y, Q) {
                  if (typeof Q.getElementById < "u" && P) {
                    var se,
                      pe,
                      ye,
                      me = Q.getElementById(Y);
                    if (me) {
                      if (
                        ((se = me.getAttributeNode("id")), se && se.value === Y)
                      )
                        return [me];
                      for (
                        ye = Q.getElementsByName(Y), pe = 0;
                        (me = ye[pe++]);

                      )
                        if (
                          ((se = me.getAttributeNode("id")),
                          se && se.value === Y)
                        )
                          return [me];
                    }
                    return [];
                  }
                })),
            (u.find.TAG = function (Y, Q) {
              return typeof Q.getElementsByTagName < "u"
                ? Q.getElementsByTagName(Y)
                : Q.querySelectorAll(Y);
            }),
            (u.find.CLASS = function (Y, Q) {
              if (typeof Q.getElementsByClassName < "u" && P)
                return Q.getElementsByClassName(Y);
            }),
            (H = []),
            er(function (Y) {
              var Q;
              (R.appendChild(Y).innerHTML =
                "<a id='" +
                X +
                "' href='' disabled='disabled'></a><select id='" +
                X +
                "-\r\\' disabled='disabled'><option selected=''></option></select>"),
                Y.querySelectorAll("[selected]").length ||
                  H.push("\\[" + Ie + "*(?:value|" + mn + ")"),
                Y.querySelectorAll("[id~=" + X + "-]").length || H.push("~="),
                Y.querySelectorAll("a#" + X + "+*").length ||
                  H.push(".#.+[+~]"),
                Y.querySelectorAll(":checked").length || H.push(":checked"),
                (Q = D.createElement("input")),
                Q.setAttribute("type", "hidden"),
                Y.appendChild(Q).setAttribute("name", "D"),
                (R.appendChild(Y).disabled = !0),
                Y.querySelectorAll(":disabled").length !== 2 &&
                  H.push(":enabled", ":disabled"),
                (Q = D.createElement("input")),
                Q.setAttribute("name", ""),
                Y.appendChild(Q),
                Y.querySelectorAll("[name='']").length ||
                  H.push("\\[" + Ie + "*name" + Ie + "*=" + Ie + `*(?:''|"")`);
            }),
            M.cssHas || H.push(":has"),
            (H = H.length && new RegExp(H.join("|"))),
            (Ht = function (Y, Q) {
              if (Y === Q) return (x = !0), 0;
              var se = !Y.compareDocumentPosition - !Q.compareDocumentPosition;
              return (
                se ||
                ((se =
                  (Y.ownerDocument || Y) == (Q.ownerDocument || Q)
                    ? Y.compareDocumentPosition(Q)
                    : 1),
                se & 1 ||
                (!M.sortDetached && Q.compareDocumentPosition(Y) === se)
                  ? Y === D || (Y.ownerDocument == lt && ot.contains(lt, Y))
                    ? -1
                    : Q === D || (Q.ownerDocument == lt && ot.contains(lt, Q))
                    ? 1
                    : g
                    ? d.call(g, Y) - d.call(g, Q)
                    : 0
                  : se & 4
                  ? -1
                  : 1)
              );
            })),
          D
        );
      }
      (ot.matches = function (E, V) {
        return ot(E, null, null, V);
      }),
        (ot.matchesSelector = function (E, V) {
          if ((Zn(E), P && !qt[V + " "] && (!H || !H.test(V))))
            try {
              var W = q.call(E, V);
              if (
                W ||
                M.disconnectedMatch ||
                (E.document && E.document.nodeType !== 11)
              )
                return W;
            } catch {
              qt(V, !0);
            }
          return ot(V, D, null, [E]).length > 0;
        }),
        (ot.contains = function (E, V) {
          return (E.ownerDocument || E) != D && Zn(E), b.contains(E, V);
        }),
        (ot.attr = function (E, V) {
          (E.ownerDocument || E) != D && Zn(E);
          var W = u.attrHandle[V.toLowerCase()],
            Y =
              W && v.call(u.attrHandle, V.toLowerCase()) ? W(E, V, !P) : void 0;
          return Y !== void 0 ? Y : E.getAttribute(V);
        }),
        (ot.error = function (E) {
          throw new Error("Syntax error, unrecognized expression: " + E);
        }),
        (b.uniqueSort = function (E) {
          var V,
            W = [],
            Y = 0,
            Q = 0;
          if (
            ((x = !M.sortStable),
            (g = !M.sortStable && o.call(E, 0)),
            st.call(E, Ht),
            x)
          ) {
            for (; (V = E[Q++]); ) V === E[Q] && (Y = W.push(Q));
            for (; Y--; ) Ft.call(E, W[Y], 1);
          }
          return (g = null), E;
        }),
        (b.fn.uniqueSort = function () {
          return this.pushStack(b.uniqueSort(o.apply(this)));
        }),
        (u = b.expr =
          {
            cacheLength: 50,
            createPseudo: Zi,
            match: _n,
            attrHandle: {},
            find: {},
            relative: {
              ">": { dir: "parentNode", first: !0 },
              " ": { dir: "parentNode" },
              "+": { dir: "previousSibling", first: !0 },
              "~": { dir: "previousSibling" },
            },
            preFilter: {
              ATTR: function (E) {
                return (
                  (E[1] = E[1].replace(An, Rn)),
                  (E[3] = (E[3] || E[4] || E[5] || "").replace(An, Rn)),
                  E[2] === "~=" && (E[3] = " " + E[3] + " "),
                  E.slice(0, 4)
                );
              },
              CHILD: function (E) {
                return (
                  (E[1] = E[1].toLowerCase()),
                  E[1].slice(0, 3) === "nth"
                    ? (E[3] || ot.error(E[0]),
                      (E[4] = +(E[4]
                        ? E[5] + (E[6] || 1)
                        : 2 * (E[3] === "even" || E[3] === "odd"))),
                      (E[5] = +(E[7] + E[8] || E[3] === "odd")))
                    : E[3] && ot.error(E[0]),
                  E
                );
              },
              PSEUDO: function (E) {
                var V,
                  W = !E[6] && E[2];
                return _n.CHILD.test(E[0])
                  ? null
                  : (E[3]
                      ? (E[2] = E[4] || E[5] || "")
                      : W &&
                        gn.test(W) &&
                        (V = Gr(W, !0)) &&
                        (V = W.indexOf(")", W.length - V) - W.length) &&
                        ((E[0] = E[0].slice(0, V)), (E[2] = W.slice(0, V))),
                    E.slice(0, 3));
              },
            },
            filter: {
              TAG: function (E) {
                var V = E.replace(An, Rn).toLowerCase();
                return E === "*"
                  ? function () {
                      return !0;
                    }
                  : function (W) {
                      return be(W, V);
                    };
              },
              CLASS: function (E) {
                var V = Fe[E + " "];
                return (
                  V ||
                  ((V = new RegExp("(^|" + Ie + ")" + E + "(" + Ie + "|$)")) &&
                    Fe(E, function (W) {
                      return V.test(
                        (typeof W.className == "string" && W.className) ||
                          (typeof W.getAttribute < "u" &&
                            W.getAttribute("class")) ||
                          ""
                      );
                    }))
                );
              },
              ATTR: function (E, V, W) {
                return function (Y) {
                  var Q = ot.attr(Y, E);
                  return Q == null
                    ? V === "!="
                    : V
                    ? ((Q += ""),
                      V === "="
                        ? Q === W
                        : V === "!="
                        ? Q !== W
                        : V === "^="
                        ? W && Q.indexOf(W) === 0
                        : V === "*="
                        ? W && Q.indexOf(W) > -1
                        : V === "$="
                        ? W && Q.slice(-W.length) === W
                        : V === "~="
                        ? (" " + Q.replace(tt, " ") + " ").indexOf(W) > -1
                        : V === "|="
                        ? Q === W || Q.slice(0, W.length + 1) === W + "-"
                        : !1)
                    : !0;
                };
              },
              CHILD: function (E, V, W, Y, Q) {
                var se = E.slice(0, 3) !== "nth",
                  pe = E.slice(-4) !== "last",
                  ye = V === "of-type";
                return Y === 1 && Q === 0
                  ? function (me) {
                      return !!me.parentNode;
                    }
                  : function (me, Ge, Pe) {
                      var Ne,
                        Ye,
                        Me,
                        dt,
                        fi,
                        Jt = se !== pe ? "nextSibling" : "previousSibling",
                        Li = me.parentNode,
                        bn = ye && me.nodeName.toLowerCase(),
                        tr = !Pe && !ye,
                        ci = !1;
                      if (Li) {
                        if (se) {
                          for (; Jt; ) {
                            for (Me = me; (Me = Me[Jt]); )
                              if (ye ? be(Me, bn) : Me.nodeType === 1)
                                return !1;
                            fi = Jt = E === "only" && !fi && "nextSibling";
                          }
                          return !0;
                        }
                        if (
                          ((fi = [pe ? Li.firstChild : Li.lastChild]), pe && tr)
                        ) {
                          for (
                            Ye = Li[X] || (Li[X] = {}),
                              Ne = Ye[E] || [],
                              dt = Ne[0] === G && Ne[1],
                              ci = dt && Ne[2],
                              Me = dt && Li.childNodes[dt];
                            (Me =
                              (++dt && Me && Me[Jt]) ||
                              (ci = dt = 0) ||
                              fi.pop());

                          )
                            if (Me.nodeType === 1 && ++ci && Me === me) {
                              Ye[E] = [G, dt, ci];
                              break;
                            }
                        } else if (
                          (tr &&
                            ((Ye = me[X] || (me[X] = {})),
                            (Ne = Ye[E] || []),
                            (dt = Ne[0] === G && Ne[1]),
                            (ci = dt)),
                          ci === !1)
                        )
                          for (
                            ;
                            (Me =
                              (++dt && Me && Me[Jt]) ||
                              (ci = dt = 0) ||
                              fi.pop()) &&
                            !(
                              (ye ? be(Me, bn) : Me.nodeType === 1) &&
                              ++ci &&
                              (tr &&
                                ((Ye = Me[X] || (Me[X] = {})),
                                (Ye[E] = [G, ci])),
                              Me === me)
                            );

                          );
                        return (
                          (ci -= Q), ci === Y || (ci % Y === 0 && ci / Y >= 0)
                        );
                      }
                    };
              },
              PSEUDO: function (E, V) {
                var W,
                  Y =
                    u.pseudos[E] ||
                    u.setFilters[E.toLowerCase()] ||
                    ot.error("unsupported pseudo: " + E);
                return Y[X]
                  ? Y(V)
                  : Y.length > 1
                  ? ((W = [E, E, "", V]),
                    u.setFilters.hasOwnProperty(E.toLowerCase())
                      ? Zi(function (Q, se) {
                          for (var pe, ye = Y(Q, V), me = ye.length; me--; )
                            (pe = d.call(Q, ye[me])),
                              (Q[pe] = !(se[pe] = ye[me]));
                        })
                      : function (Q) {
                          return Y(Q, 0, W);
                        })
                  : Y;
              },
            },
            pseudos: {
              not: Zi(function (E) {
                var V = [],
                  W = [],
                  Y = xc(E.replace(Xt, "$1"));
                return Y[X]
                  ? Zi(function (Q, se, pe, ye) {
                      for (
                        var me, Ge = Y(Q, null, ye, []), Pe = Q.length;
                        Pe--;

                      )
                        (me = Ge[Pe]) && (Q[Pe] = !(se[Pe] = me));
                    })
                  : function (Q, se, pe) {
                      return (
                        (V[0] = Q), Y(V, null, pe, W), (V[0] = null), !W.pop()
                      );
                    };
              }),
              has: Zi(function (E) {
                return function (V) {
                  return ot(E, V).length > 0;
                };
              }),
              contains: Zi(function (E) {
                return (
                  (E = E.replace(An, Rn)),
                  function (V) {
                    return (V.textContent || b.text(V)).indexOf(E) > -1;
                  }
                );
              }),
              lang: Zi(function (E) {
                return (
                  $r.test(E || "") || ot.error("unsupported lang: " + E),
                  (E = E.replace(An, Rn).toLowerCase()),
                  function (V) {
                    var W;
                    do
                      if (
                        (W = P
                          ? V.lang
                          : V.getAttribute("xml:lang") ||
                            V.getAttribute("lang"))
                      )
                        return (
                          (W = W.toLowerCase()),
                          W === E || W.indexOf(E + "-") === 0
                        );
                    while ((V = V.parentNode) && V.nodeType === 1);
                    return !1;
                  }
                );
              }),
              target: function (E) {
                var V = n.location && n.location.hash;
                return V && V.slice(1) === E.id;
              },
              root: function (E) {
                return E === R;
              },
              focus: function (E) {
                return (
                  E === f_() &&
                  D.hasFocus() &&
                  !!(E.type || E.href || ~E.tabIndex)
                );
              },
              enabled: Ah(!1),
              disabled: Ah(!0),
              checked: function (E) {
                return (
                  (be(E, "input") && !!E.checked) ||
                  (be(E, "option") && !!E.selected)
                );
              },
              selected: function (E) {
                return (
                  E.parentNode && E.parentNode.selectedIndex, E.selected === !0
                );
              },
              empty: function (E) {
                for (E = E.firstChild; E; E = E.nextSibling)
                  if (E.nodeType < 6) return !1;
                return !0;
              },
              parent: function (E) {
                return !u.pseudos.empty(E);
              },
              header: function (E) {
                return Xn.test(E.nodeName);
              },
              input: function (E) {
                return Qn.test(E.nodeName);
              },
              button: function (E) {
                return (
                  (be(E, "input") && E.type === "button") || be(E, "button")
                );
              },
              text: function (E) {
                var V;
                return (
                  be(E, "input") &&
                  E.type === "text" &&
                  ((V = E.getAttribute("type")) == null ||
                    V.toLowerCase() === "text")
                );
              },
              first: Co(function () {
                return [0];
              }),
              last: Co(function (E, V) {
                return [V - 1];
              }),
              eq: Co(function (E, V, W) {
                return [W < 0 ? W + V : W];
              }),
              even: Co(function (E, V) {
                for (var W = 0; W < V; W += 2) E.push(W);
                return E;
              }),
              odd: Co(function (E, V) {
                for (var W = 1; W < V; W += 2) E.push(W);
                return E;
              }),
              lt: Co(function (E, V, W) {
                var Y;
                for (
                  W < 0 ? (Y = W + V) : W > V ? (Y = V) : (Y = W);
                  --Y >= 0;

                )
                  E.push(Y);
                return E;
              }),
              gt: Co(function (E, V, W) {
                for (var Y = W < 0 ? W + V : W; ++Y < V; ) E.push(Y);
                return E;
              }),
            },
          }),
        (u.pseudos.nth = u.pseudos.eq);
      for (s in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })
        u.pseudos[s] = g_(s);
      for (s in { submit: !0, reset: !0 }) u.pseudos[s] = __(s);
      function Rh() {}
      (Rh.prototype = u.filters = u.pseudos), (u.setFilters = new Rh());
      function Gr(E, V) {
        var W,
          Y,
          Q,
          se,
          pe,
          ye,
          me,
          Ge = Je[E + " "];
        if (Ge) return V ? 0 : Ge.slice(0);
        for (pe = E, ye = [], me = u.preFilter; pe; ) {
          (!W || (Y = Tt.exec(pe))) &&
            (Y && (pe = pe.slice(Y[0].length) || pe), ye.push((Q = []))),
            (W = !1),
            (Y = Wr.exec(pe)) &&
              ((W = Y.shift()),
              Q.push({ value: W, type: Y[0].replace(Xt, " ") }),
              (pe = pe.slice(W.length)));
          for (se in u.filter)
            (Y = _n[se].exec(pe)) &&
              (!me[se] || (Y = me[se](Y))) &&
              ((W = Y.shift()),
              Q.push({ value: W, type: se, matches: Y }),
              (pe = pe.slice(W.length)));
          if (!W) break;
        }
        return V ? pe.length : pe ? ot.error(E) : Je(E, ye).slice(0);
      }
      function is(E) {
        for (var V = 0, W = E.length, Y = ""; V < W; V++) Y += E[V].value;
        return Y;
      }
      function ns(E, V, W) {
        var Y = V.dir,
          Q = V.next,
          se = Q || Y,
          pe = W && se === "parentNode",
          ye = te++;
        return V.first
          ? function (me, Ge, Pe) {
              for (; (me = me[Y]); )
                if (me.nodeType === 1 || pe) return E(me, Ge, Pe);
              return !1;
            }
          : function (me, Ge, Pe) {
              var Ne,
                Ye,
                Me = [G, ye];
              if (Pe) {
                for (; (me = me[Y]); )
                  if ((me.nodeType === 1 || pe) && E(me, Ge, Pe)) return !0;
              } else
                for (; (me = me[Y]); )
                  if (me.nodeType === 1 || pe)
                    if (((Ye = me[X] || (me[X] = {})), Q && be(me, Q)))
                      me = me[Y] || me;
                    else {
                      if ((Ne = Ye[se]) && Ne[0] === G && Ne[1] === ye)
                        return (Me[2] = Ne[2]);
                      if (((Ye[se] = Me), (Me[2] = E(me, Ge, Pe)))) return !0;
                    }
              return !1;
            };
      }
      function bc(E) {
        return E.length > 1
          ? function (V, W, Y) {
              for (var Q = E.length; Q--; ) if (!E[Q](V, W, Y)) return !1;
              return !0;
            }
          : E[0];
      }
      function b_(E, V, W) {
        for (var Y = 0, Q = V.length; Y < Q; Y++) ot(E, V[Y], W);
        return W;
      }
      function os(E, V, W, Y, Q) {
        for (
          var se, pe = [], ye = 0, me = E.length, Ge = V != null;
          ye < me;
          ye++
        )
          (se = E[ye]) &&
            (!W || W(se, Y, Q)) &&
            (pe.push(se), Ge && V.push(ye));
        return pe;
      }
      function vc(E, V, W, Y, Q, se) {
        return (
          Y && !Y[X] && (Y = vc(Y)),
          Q && !Q[X] && (Q = vc(Q, se)),
          Zi(function (pe, ye, me, Ge) {
            var Pe,
              Ne,
              Ye,
              Me,
              dt = [],
              fi = [],
              Jt = ye.length,
              Li = pe || b_(V || "*", me.nodeType ? [me] : me, []),
              bn = E && (pe || !V) ? os(Li, dt, E, me, Ge) : Li;
            if (
              (W
                ? ((Me = Q || (pe ? E : Jt || Y) ? [] : ye), W(bn, Me, me, Ge))
                : (Me = bn),
              Y)
            )
              for (Pe = os(Me, fi), Y(Pe, [], me, Ge), Ne = Pe.length; Ne--; )
                (Ye = Pe[Ne]) && (Me[fi[Ne]] = !(bn[fi[Ne]] = Ye));
            if (pe) {
              if (Q || E) {
                if (Q) {
                  for (Pe = [], Ne = Me.length; Ne--; )
                    (Ye = Me[Ne]) && Pe.push((bn[Ne] = Ye));
                  Q(null, (Me = []), Pe, Ge);
                }
                for (Ne = Me.length; Ne--; )
                  (Ye = Me[Ne]) &&
                    (Pe = Q ? d.call(pe, Ye) : dt[Ne]) > -1 &&
                    (pe[Pe] = !(ye[Pe] = Ye));
              }
            } else (Me = os(Me === ye ? Me.splice(Jt, Me.length) : Me)), Q ? Q(null, ye, Me, Ge) : C.apply(ye, Me);
          })
        );
      }
      function yc(E) {
        for (
          var V,
            W,
            Y,
            Q = E.length,
            se = u.relative[E[0].type],
            pe = se || u.relative[" "],
            ye = se ? 1 : 0,
            me = ns(
              function (Ne) {
                return Ne === V;
              },
              pe,
              !0
            ),
            Ge = ns(
              function (Ne) {
                return d.call(V, Ne) > -1;
              },
              pe,
              !0
            ),
            Pe = [
              function (Ne, Ye, Me) {
                var dt =
                  (!se && (Me || Ye != f)) ||
                  ((V = Ye).nodeType ? me(Ne, Ye, Me) : Ge(Ne, Ye, Me));
                return (V = null), dt;
              },
            ];
          ye < Q;
          ye++
        )
          if ((W = u.relative[E[ye].type])) Pe = [ns(bc(Pe), W)];
          else {
            if (((W = u.filter[E[ye].type].apply(null, E[ye].matches)), W[X])) {
              for (Y = ++ye; Y < Q && !u.relative[E[Y].type]; Y++);
              return vc(
                ye > 1 && bc(Pe),
                ye > 1 &&
                  is(
                    E.slice(0, ye - 1).concat({
                      value: E[ye - 2].type === " " ? "*" : "",
                    })
                  ).replace(Xt, "$1"),
                W,
                ye < Y && yc(E.slice(ye, Y)),
                Y < Q && yc((E = E.slice(Y))),
                Y < Q && is(E)
              );
            }
            Pe.push(W);
          }
        return bc(Pe);
      }
      function v_(E, V) {
        var W = V.length > 0,
          Y = E.length > 0,
          Q = function (se, pe, ye, me, Ge) {
            var Pe,
              Ne,
              Ye,
              Me = 0,
              dt = "0",
              fi = se && [],
              Jt = [],
              Li = f,
              bn = se || (Y && u.find.TAG("*", Ge)),
              tr = (G += Li == null ? 1 : Math.random() || 0.1),
              ci = bn.length;
            for (
              Ge && (f = pe == D || pe || Ge);
              dt !== ci && (Pe = bn[dt]) != null;
              dt++
            ) {
              if (Y && Pe) {
                for (
                  Ne = 0, !pe && Pe.ownerDocument != D && (Zn(Pe), (ye = !P));
                  (Ye = E[Ne++]);

                )
                  if (Ye(Pe, pe || D, ye)) {
                    C.call(me, Pe);
                    break;
                  }
                Ge && (G = tr);
              }
              W && ((Pe = !Ye && Pe) && Me--, se && fi.push(Pe));
            }
            if (((Me += dt), W && dt !== Me)) {
              for (Ne = 0; (Ye = V[Ne++]); ) Ye(fi, Jt, pe, ye);
              if (se) {
                if (Me > 0)
                  for (; dt--; ) fi[dt] || Jt[dt] || (Jt[dt] = He.call(me));
                Jt = os(Jt);
              }
              C.apply(me, Jt),
                Ge &&
                  !se &&
                  Jt.length > 0 &&
                  Me + V.length > 1 &&
                  b.uniqueSort(me);
            }
            return Ge && ((G = tr), (f = Li)), fi;
          };
        return W ? Zi(Q) : Q;
      }
      function xc(E, V) {
        var W,
          Y = [],
          Q = [],
          se = Ue[E + " "];
        if (!se) {
          for (V || (V = Gr(E)), W = V.length; W--; )
            (se = yc(V[W])), se[X] ? Y.push(se) : Q.push(se);
          (se = Ue(E, v_(Q, Y))), (se.selector = E);
        }
        return se;
      }
      function Fh(E, V, W, Y) {
        var Q,
          se,
          pe,
          ye,
          me,
          Ge = typeof E == "function" && E,
          Pe = !Y && Gr((E = Ge.selector || E));
        if (((W = W || []), Pe.length === 1)) {
          if (
            ((se = Pe[0] = Pe[0].slice(0)),
            se.length > 2 &&
              (pe = se[0]).type === "ID" &&
              V.nodeType === 9 &&
              P &&
              u.relative[se[1].type])
          ) {
            if (
              ((V = (u.find.ID(pe.matches[0].replace(An, Rn), V) || [])[0]), V)
            )
              Ge && (V = V.parentNode);
            else return W;
            E = E.slice(se.shift().value.length);
          }
          for (
            Q = _n.needsContext.test(E) ? 0 : se.length;
            Q-- && ((pe = se[Q]), !u.relative[(ye = pe.type)]);

          )
            if (
              (me = u.find[ye]) &&
              (Y = me(
                pe.matches[0].replace(An, Rn),
                (gc.test(se[0].type) && _c(V.parentNode)) || V
              ))
            ) {
              if ((se.splice(Q, 1), (E = Y.length && is(se)), !E))
                return C.apply(W, Y), W;
              break;
            }
        }
        return (
          (Ge || xc(E, Pe))(
            Y,
            V,
            !P,
            W,
            !V || (gc.test(E) && _c(V.parentNode)) || V
          ),
          W
        );
      }
      (M.sortStable = X.split("").sort(Ht).join("") === X),
        Zn(),
        (M.sortDetached = er(function (E) {
          return E.compareDocumentPosition(D.createElement("fieldset")) & 1;
        })),
        (b.find = ot),
        (b.expr[":"] = b.expr.pseudos),
        (b.unique = b.uniqueSort),
        (ot.compile = xc),
        (ot.select = Fh),
        (ot.setDocument = Zn),
        (ot.tokenize = Gr),
        (ot.escape = b.escapeSelector),
        (ot.getText = b.text),
        (ot.isXML = b.isXMLDoc),
        (ot.selectors = b.expr),
        (ot.support = b.support),
        (ot.uniqueSort = b.uniqueSort);
    })();
    var Qi = function (s, u, f) {
        for (var g = [], x = f !== void 0; (s = s[u]) && s.nodeType !== 9; )
          if (s.nodeType === 1) {
            if (x && b(s).is(f)) break;
            g.push(s);
          }
        return g;
      },
      fo = function (s, u) {
        for (var f = []; s; s = s.nextSibling)
          s.nodeType === 1 && s !== u && f.push(s);
        return f;
      },
      En = b.expr.match.needsContext,
      go = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function un(s, u, f) {
      return A(u)
        ? b.grep(s, function (g, x) {
            return !!u.call(g, x, g) !== f;
          })
        : u.nodeType
        ? b.grep(s, function (g) {
            return (g === u) !== f;
          })
        : typeof u != "string"
        ? b.grep(s, function (g) {
            return d.call(u, g) > -1 !== f;
          })
        : b.filter(u, s, f);
    }
    (b.filter = function (s, u, f) {
      var g = u[0];
      return (
        f && (s = ":not(" + s + ")"),
        u.length === 1 && g.nodeType === 1
          ? b.find.matchesSelector(g, s)
            ? [g]
            : []
          : b.find.matches(
              s,
              b.grep(u, function (x) {
                return x.nodeType === 1;
              })
            )
      );
    }),
      b.fn.extend({
        find: function (s) {
          var u,
            f,
            g = this.length,
            x = this;
          if (typeof s != "string")
            return this.pushStack(
              b(s).filter(function () {
                for (u = 0; u < g; u++) if (b.contains(x[u], this)) return !0;
              })
            );
          for (f = this.pushStack([]), u = 0; u < g; u++) b.find(s, x[u], f);
          return g > 1 ? b.uniqueSort(f) : f;
        },
        filter: function (s) {
          return this.pushStack(un(this, s || [], !1));
        },
        not: function (s) {
          return this.pushStack(un(this, s || [], !0));
        },
        is: function (s) {
          return !!un(
            this,
            typeof s == "string" && En.test(s) ? b(s) : s || [],
            !1
          ).length;
        },
      });
    var Kn,
      kn = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
      _o = (b.fn.init = function (s, u, f) {
        var g, x;
        if (!s) return this;
        if (((f = f || Kn), typeof s == "string"))
          if (
            (s[0] === "<" && s[s.length - 1] === ">" && s.length >= 3
              ? (g = [null, s, null])
              : (g = kn.exec(s)),
            g && (g[1] || !u))
          )
            if (g[1]) {
              if (
                ((u = u instanceof b ? u[0] : u),
                b.merge(
                  this,
                  b.parseHTML(
                    g[1],
                    u && u.nodeType ? u.ownerDocument || u : z,
                    !0
                  )
                ),
                go.test(g[1]) && b.isPlainObject(u))
              )
                for (g in u) A(this[g]) ? this[g](u[g]) : this.attr(g, u[g]);
              return this;
            } else
              return (
                (x = z.getElementById(g[2])),
                x && ((this[0] = x), (this.length = 1)),
                this
              );
          else
            return !u || u.jquery
              ? (u || f).find(s)
              : this.constructor(u).find(s);
        else {
          if (s.nodeType) return (this[0] = s), (this.length = 1), this;
          if (A(s)) return f.ready !== void 0 ? f.ready(s) : s(b);
        }
        return b.makeArray(s, this);
      });
    (_o.prototype = b.fn), (Kn = b(z));
    var On = /^(?:parents|prev(?:Until|All))/,
      C0 = { children: !0, contents: !0, next: !0, prev: !0 };
    b.fn.extend({
      has: function (s) {
        var u = b(s, this),
          f = u.length;
        return this.filter(function () {
          for (var g = 0; g < f; g++) if (b.contains(this, u[g])) return !0;
        });
      },
      closest: function (s, u) {
        var f,
          g = 0,
          x = this.length,
          C = [],
          D = typeof s != "string" && b(s);
        if (!En.test(s)) {
          for (; g < x; g++)
            for (f = this[g]; f && f !== u; f = f.parentNode)
              if (
                f.nodeType < 11 &&
                (D
                  ? D.index(f) > -1
                  : f.nodeType === 1 && b.find.matchesSelector(f, s))
              ) {
                C.push(f);
                break;
              }
        }
        return this.pushStack(C.length > 1 ? b.uniqueSort(C) : C);
      },
      index: function (s) {
        return s
          ? typeof s == "string"
            ? d.call(b(s), this[0])
            : d.call(this, s.jquery ? s[0] : s)
          : this[0] && this[0].parentNode
          ? this.first().prevAll().length
          : -1;
      },
      add: function (s, u) {
        return this.pushStack(b.uniqueSort(b.merge(this.get(), b(s, u))));
      },
      addBack: function (s) {
        return this.add(
          s == null ? this.prevObject : this.prevObject.filter(s)
        );
      },
    });
    function eh(s, u) {
      for (; (s = s[u]) && s.nodeType !== 1; );
      return s;
    }
    b.each(
      {
        parent: function (s) {
          var u = s.parentNode;
          return u && u.nodeType !== 11 ? u : null;
        },
        parents: function (s) {
          return Qi(s, "parentNode");
        },
        parentsUntil: function (s, u, f) {
          return Qi(s, "parentNode", f);
        },
        next: function (s) {
          return eh(s, "nextSibling");
        },
        prev: function (s) {
          return eh(s, "previousSibling");
        },
        nextAll: function (s) {
          return Qi(s, "nextSibling");
        },
        prevAll: function (s) {
          return Qi(s, "previousSibling");
        },
        nextUntil: function (s, u, f) {
          return Qi(s, "nextSibling", f);
        },
        prevUntil: function (s, u, f) {
          return Qi(s, "previousSibling", f);
        },
        siblings: function (s) {
          return fo((s.parentNode || {}).firstChild, s);
        },
        children: function (s) {
          return fo(s.firstChild);
        },
        contents: function (s) {
          return s.contentDocument != null && i(s.contentDocument)
            ? s.contentDocument
            : (be(s, "template") && (s = s.content || s),
              b.merge([], s.childNodes));
        },
      },
      function (s, u) {
        b.fn[s] = function (f, g) {
          var x = b.map(this, u, f);
          return (
            s.slice(-5) !== "Until" && (g = f),
            g && typeof g == "string" && (x = b.filter(g, x)),
            this.length > 1 &&
              (C0[s] || b.uniqueSort(x), On.test(s) && x.reverse()),
            this.pushStack(x)
          );
        };
      }
    );
    var hn = /[^\x20\t\r\n\f]+/g;
    function w0(s) {
      var u = {};
      return (
        b.each(s.match(hn) || [], function (f, g) {
          u[g] = !0;
        }),
        u
      );
    }
    b.Callbacks = function (s) {
      s = typeof s == "string" ? w0(s) : b.extend({}, s);
      var u,
        f,
        g,
        x,
        C = [],
        D = [],
        R = -1,
        P = function () {
          for (x = x || s.once, g = u = !0; D.length; R = -1)
            for (f = D.shift(); ++R < C.length; )
              C[R].apply(f[0], f[1]) === !1 &&
                s.stopOnFalse &&
                ((R = C.length), (f = !1));
          s.memory || (f = !1), (u = !1), x && (f ? (C = []) : (C = ""));
        },
        H = {
          add: function () {
            return (
              C &&
                (f && !u && ((R = C.length - 1), D.push(f)),
                (function q(X) {
                  b.each(X, function (G, te) {
                    A(te)
                      ? (!s.unique || !H.has(te)) && C.push(te)
                      : te && te.length && Ve(te) !== "string" && q(te);
                  });
                })(arguments),
                f && !u && P()),
              this
            );
          },
          remove: function () {
            return (
              b.each(arguments, function (q, X) {
                for (var G; (G = b.inArray(X, C, G)) > -1; )
                  C.splice(G, 1), G <= R && R--;
              }),
              this
            );
          },
          has: function (q) {
            return q ? b.inArray(q, C) > -1 : C.length > 0;
          },
          empty: function () {
            return C && (C = []), this;
          },
          disable: function () {
            return (x = D = []), (C = f = ""), this;
          },
          disabled: function () {
            return !C;
          },
          lock: function () {
            return (x = D = []), !f && !u && (C = f = ""), this;
          },
          locked: function () {
            return !!x;
          },
          fireWith: function (q, X) {
            return (
              x ||
                ((X = X || []),
                (X = [q, X.slice ? X.slice() : X]),
                D.push(X),
                u || P()),
              this
            );
          },
          fire: function () {
            return H.fireWith(this, arguments), this;
          },
          fired: function () {
            return !!g;
          },
        };
      return H;
    };
    function Yo(s) {
      return s;
    }
    function qa(s) {
      throw s;
    }
    function th(s, u, f, g) {
      var x;
      try {
        s && A((x = s.promise))
          ? x.call(s).done(u).fail(f)
          : s && A((x = s.then))
          ? x.call(s, u, f)
          : u.apply(void 0, [s].slice(g));
      } catch (C) {
        f.apply(void 0, [C]);
      }
    }
    b.extend({
      Deferred: function (s) {
        var u = [
            [
              "notify",
              "progress",
              b.Callbacks("memory"),
              b.Callbacks("memory"),
              2,
            ],
            [
              "resolve",
              "done",
              b.Callbacks("once memory"),
              b.Callbacks("once memory"),
              0,
              "resolved",
            ],
            [
              "reject",
              "fail",
              b.Callbacks("once memory"),
              b.Callbacks("once memory"),
              1,
              "rejected",
            ],
          ],
          f = "pending",
          g = {
            state: function () {
              return f;
            },
            always: function () {
              return x.done(arguments).fail(arguments), this;
            },
            catch: function (C) {
              return g.then(null, C);
            },
            pipe: function () {
              var C = arguments;
              return b
                .Deferred(function (D) {
                  b.each(u, function (R, P) {
                    var H = A(C[P[4]]) && C[P[4]];
                    x[P[1]](function () {
                      var q = H && H.apply(this, arguments);
                      q && A(q.promise)
                        ? q
                            .promise()
                            .progress(D.notify)
                            .done(D.resolve)
                            .fail(D.reject)
                        : D[P[0] + "With"](this, H ? [q] : arguments);
                    });
                  }),
                    (C = null);
                })
                .promise();
            },
            then: function (C, D, R) {
              var P = 0;
              function H(q, X, G, te) {
                return function () {
                  var Fe = this,
                    Je = arguments,
                    Ue = function () {
                      var Ht, mn;
                      if (!(q < P)) {
                        if (((Ht = G.apply(Fe, Je)), Ht === X.promise()))
                          throw new TypeError("Thenable self-resolution");
                        (mn =
                          Ht &&
                          (typeof Ht == "object" || typeof Ht == "function") &&
                          Ht.then),
                          A(mn)
                            ? te
                              ? mn.call(Ht, H(P, X, Yo, te), H(P, X, qa, te))
                              : (P++,
                                mn.call(
                                  Ht,
                                  H(P, X, Yo, te),
                                  H(P, X, qa, te),
                                  H(P, X, Yo, X.notifyWith)
                                ))
                            : (G !== Yo && ((Fe = void 0), (Je = [Ht])),
                              (te || X.resolveWith)(Fe, Je));
                      }
                    },
                    qt = te
                      ? Ue
                      : function () {
                          try {
                            Ue();
                          } catch (Ht) {
                            b.Deferred.exceptionHook &&
                              b.Deferred.exceptionHook(Ht, qt.error),
                              q + 1 >= P &&
                                (G !== qa && ((Fe = void 0), (Je = [Ht])),
                                X.rejectWith(Fe, Je));
                          }
                        };
                  q
                    ? qt()
                    : (b.Deferred.getErrorHook
                        ? (qt.error = b.Deferred.getErrorHook())
                        : b.Deferred.getStackHook &&
                          (qt.error = b.Deferred.getStackHook()),
                      n.setTimeout(qt));
                };
              }
              return b
                .Deferred(function (q) {
                  u[0][3].add(H(0, q, A(R) ? R : Yo, q.notifyWith)),
                    u[1][3].add(H(0, q, A(C) ? C : Yo)),
                    u[2][3].add(H(0, q, A(D) ? D : qa));
                })
                .promise();
            },
            promise: function (C) {
              return C != null ? b.extend(C, g) : g;
            },
          },
          x = {};
        return (
          b.each(u, function (C, D) {
            var R = D[2],
              P = D[5];
            (g[D[1]] = R.add),
              P &&
                R.add(
                  function () {
                    f = P;
                  },
                  u[3 - C][2].disable,
                  u[3 - C][3].disable,
                  u[0][2].lock,
                  u[0][3].lock
                ),
              R.add(D[3].fire),
              (x[D[0]] = function () {
                return (
                  x[D[0] + "With"](this === x ? void 0 : this, arguments), this
                );
              }),
              (x[D[0] + "With"] = R.fireWith);
          }),
          g.promise(x),
          s && s.call(x, x),
          x
        );
      },
      when: function (s) {
        var u = arguments.length,
          f = u,
          g = Array(f),
          x = o.call(arguments),
          C = b.Deferred(),
          D = function (R) {
            return function (P) {
              (g[R] = this),
                (x[R] = arguments.length > 1 ? o.call(arguments) : P),
                --u || C.resolveWith(g, x);
            };
          };
        if (
          u <= 1 &&
          (th(s, C.done(D(f)).resolve, C.reject, !u),
          C.state() === "pending" || A(x[f] && x[f].then))
        )
          return C.then();
        for (; f--; ) th(x[f], D(f), C.reject);
        return C.promise();
      },
    });
    var D0 = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    (b.Deferred.exceptionHook = function (s, u) {
      n.console &&
        n.console.warn &&
        s &&
        D0.test(s.name) &&
        n.console.warn("jQuery.Deferred exception: " + s.message, s.stack, u);
    }),
      (b.readyException = function (s) {
        n.setTimeout(function () {
          throw s;
        });
      });
    var ec = b.Deferred();
    (b.fn.ready = function (s) {
      return (
        ec.then(s).catch(function (u) {
          b.readyException(u);
        }),
        this
      );
    }),
      b.extend({
        isReady: !1,
        readyWait: 1,
        ready: function (s) {
          (s === !0 ? --b.readyWait : b.isReady) ||
            ((b.isReady = !0),
            !(s !== !0 && --b.readyWait > 0) && ec.resolveWith(z, [b]));
        },
      }),
      (b.ready.then = ec.then);
    function Ka() {
      z.removeEventListener("DOMContentLoaded", Ka),
        n.removeEventListener("load", Ka),
        b.ready();
    }
    z.readyState === "complete" ||
    (z.readyState !== "loading" && !z.documentElement.doScroll)
      ? n.setTimeout(b.ready)
      : (z.addEventListener("DOMContentLoaded", Ka),
        n.addEventListener("load", Ka));
    var In = function (s, u, f, g, x, C, D) {
        var R = 0,
          P = s.length,
          H = f == null;
        if (Ve(f) === "object") {
          x = !0;
          for (R in f) In(s, u, R, f[R], !0, C, D);
        } else if (
          g !== void 0 &&
          ((x = !0),
          A(g) || (D = !0),
          H &&
            (D
              ? (u.call(s, g), (u = null))
              : ((H = u),
                (u = function (q, X, G) {
                  return H.call(b(q), G);
                }))),
          u)
        )
          for (; R < P; R++) u(s[R], f, D ? g : g.call(s[R], R, u(s[R], f)));
        return x ? s : H ? u.call(s) : P ? u(s[0], f) : C;
      },
      S0 = /^-ms-/,
      M0 = /-([a-z])/g;
    function T0(s, u) {
      return u.toUpperCase();
    }
    function pn(s) {
      return s.replace(S0, "ms-").replace(M0, T0);
    }
    var Nr = function (s) {
      return s.nodeType === 1 || s.nodeType === 9 || !+s.nodeType;
    };
    function Vr() {
      this.expando = b.expando + Vr.uid++;
    }
    (Vr.uid = 1),
      (Vr.prototype = {
        cache: function (s) {
          var u = s[this.expando];
          return (
            u ||
              ((u = {}),
              Nr(s) &&
                (s.nodeType
                  ? (s[this.expando] = u)
                  : Object.defineProperty(s, this.expando, {
                      value: u,
                      configurable: !0,
                    }))),
            u
          );
        },
        set: function (s, u, f) {
          var g,
            x = this.cache(s);
          if (typeof u == "string") x[pn(u)] = f;
          else for (g in u) x[pn(g)] = u[g];
          return x;
        },
        get: function (s, u) {
          return u === void 0
            ? this.cache(s)
            : s[this.expando] && s[this.expando][pn(u)];
        },
        access: function (s, u, f) {
          return u === void 0 || (u && typeof u == "string" && f === void 0)
            ? this.get(s, u)
            : (this.set(s, u, f), f !== void 0 ? f : u);
        },
        remove: function (s, u) {
          var f,
            g = s[this.expando];
          if (g !== void 0) {
            if (u !== void 0)
              for (
                Array.isArray(u)
                  ? (u = u.map(pn))
                  : ((u = pn(u)), (u = (u in g) ? [u] : u.match(hn) || [])),
                  f = u.length;
                f--;

              )
                delete g[u[f]];
            (u === void 0 || b.isEmptyObject(g)) &&
              (s.nodeType
                ? (s[this.expando] = void 0)
                : delete s[this.expando]);
          }
        },
        hasData: function (s) {
          var u = s[this.expando];
          return u !== void 0 && !b.isEmptyObject(u);
        },
      });
    var Ce = new Vr(),
      hi = new Vr(),
      E0 = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      k0 = /[A-Z]/g;
    function O0(s) {
      return s === "true"
        ? !0
        : s === "false"
        ? !1
        : s === "null"
        ? null
        : s === +s + ""
        ? +s
        : E0.test(s)
        ? JSON.parse(s)
        : s;
    }
    function ih(s, u, f) {
      var g;
      if (f === void 0 && s.nodeType === 1)
        if (
          ((g = "data-" + u.replace(k0, "-$&").toLowerCase()),
          (f = s.getAttribute(g)),
          typeof f == "string")
        ) {
          try {
            f = O0(f);
          } catch {}
          hi.set(s, u, f);
        } else f = void 0;
      return f;
    }
    b.extend({
      hasData: function (s) {
        return hi.hasData(s) || Ce.hasData(s);
      },
      data: function (s, u, f) {
        return hi.access(s, u, f);
      },
      removeData: function (s, u) {
        hi.remove(s, u);
      },
      _data: function (s, u, f) {
        return Ce.access(s, u, f);
      },
      _removeData: function (s, u) {
        Ce.remove(s, u);
      },
    }),
      b.fn.extend({
        data: function (s, u) {
          var f,
            g,
            x,
            C = this[0],
            D = C && C.attributes;
          if (s === void 0) {
            if (
              this.length &&
              ((x = hi.get(C)), C.nodeType === 1 && !Ce.get(C, "hasDataAttrs"))
            ) {
              for (f = D.length; f--; )
                D[f] &&
                  ((g = D[f].name),
                  g.indexOf("data-") === 0 &&
                    ((g = pn(g.slice(5))), ih(C, g, x[g])));
              Ce.set(C, "hasDataAttrs", !0);
            }
            return x;
          }
          return typeof s == "object"
            ? this.each(function () {
                hi.set(this, s);
              })
            : In(
                this,
                function (R) {
                  var P;
                  if (C && R === void 0)
                    return (
                      (P = hi.get(C, s)),
                      P !== void 0 || ((P = ih(C, s)), P !== void 0)
                        ? P
                        : void 0
                    );
                  this.each(function () {
                    hi.set(this, s, R);
                  });
                },
                null,
                u,
                arguments.length > 1,
                null,
                !0
              );
        },
        removeData: function (s) {
          return this.each(function () {
            hi.remove(this, s);
          });
        },
      }),
      b.extend({
        queue: function (s, u, f) {
          var g;
          if (s)
            return (
              (u = (u || "fx") + "queue"),
              (g = Ce.get(s, u)),
              f &&
                (!g || Array.isArray(f)
                  ? (g = Ce.access(s, u, b.makeArray(f)))
                  : g.push(f)),
              g || []
            );
        },
        dequeue: function (s, u) {
          u = u || "fx";
          var f = b.queue(s, u),
            g = f.length,
            x = f.shift(),
            C = b._queueHooks(s, u),
            D = function () {
              b.dequeue(s, u);
            };
          x === "inprogress" && ((x = f.shift()), g--),
            x &&
              (u === "fx" && f.unshift("inprogress"),
              delete C.stop,
              x.call(s, D, C)),
            !g && C && C.empty.fire();
        },
        _queueHooks: function (s, u) {
          var f = u + "queueHooks";
          return (
            Ce.get(s, f) ||
            Ce.access(s, f, {
              empty: b.Callbacks("once memory").add(function () {
                Ce.remove(s, [u + "queue", f]);
              }),
            })
          );
        },
      }),
      b.fn.extend({
        queue: function (s, u) {
          var f = 2;
          return (
            typeof s != "string" && ((u = s), (s = "fx"), f--),
            arguments.length < f
              ? b.queue(this[0], s)
              : u === void 0
              ? this
              : this.each(function () {
                  var g = b.queue(this, s, u);
                  b._queueHooks(this, s),
                    s === "fx" && g[0] !== "inprogress" && b.dequeue(this, s);
                })
          );
        },
        dequeue: function (s) {
          return this.each(function () {
            b.dequeue(this, s);
          });
        },
        clearQueue: function (s) {
          return this.queue(s || "fx", []);
        },
        promise: function (s, u) {
          var f,
            g = 1,
            x = b.Deferred(),
            C = this,
            D = this.length,
            R = function () {
              --g || x.resolveWith(C, [C]);
            };
          for (
            typeof s != "string" && ((u = s), (s = void 0)), s = s || "fx";
            D--;

          )
            (f = Ce.get(C[D], s + "queueHooks")),
              f && f.empty && (g++, f.empty.add(R));
          return R(), x.promise(u);
        },
      });
    var nh = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
      Lr = new RegExp("^(?:([+-])=|)(" + nh + ")([a-z%]*)$", "i"),
      Pn = ["Top", "Right", "Bottom", "Left"],
      bo = z.documentElement,
      qo = function (s) {
        return b.contains(s.ownerDocument, s);
      },
      I0 = { composed: !0 };
    bo.getRootNode &&
      (qo = function (s) {
        return (
          b.contains(s.ownerDocument, s) ||
          s.getRootNode(I0) === s.ownerDocument
        );
      });
    var Qa = function (s, u) {
      return (
        (s = u || s),
        s.style.display === "none" ||
          (s.style.display === "" && qo(s) && b.css(s, "display") === "none")
      );
    };
    function oh(s, u, f, g) {
      var x,
        C,
        D = 20,
        R = g
          ? function () {
              return g.cur();
            }
          : function () {
              return b.css(s, u, "");
            },
        P = R(),
        H = (f && f[3]) || (b.cssNumber[u] ? "" : "px"),
        q =
          s.nodeType &&
          (b.cssNumber[u] || (H !== "px" && +P)) &&
          Lr.exec(b.css(s, u));
      if (q && q[3] !== H) {
        for (P = P / 2, H = H || q[3], q = +P || 1; D--; )
          b.style(s, u, q + H),
            (1 - C) * (1 - (C = R() / P || 0.5)) <= 0 && (D = 0),
            (q = q / C);
        (q = q * 2), b.style(s, u, q + H), (f = f || []);
      }
      return (
        f &&
          ((q = +q || +P || 0),
          (x = f[1] ? q + (f[1] + 1) * f[2] : +f[2]),
          g && ((g.unit = H), (g.start = q), (g.end = x))),
        x
      );
    }
    var rh = {};
    function P0(s) {
      var u,
        f = s.ownerDocument,
        g = s.nodeName,
        x = rh[g];
      return (
        x ||
        ((u = f.body.appendChild(f.createElement(g))),
        (x = b.css(u, "display")),
        u.parentNode.removeChild(u),
        x === "none" && (x = "block"),
        (rh[g] = x),
        x)
      );
    }
    function Ko(s, u) {
      for (var f, g, x = [], C = 0, D = s.length; C < D; C++)
        (g = s[C]),
          g.style &&
            ((f = g.style.display),
            u
              ? (f === "none" &&
                  ((x[C] = Ce.get(g, "display") || null),
                  x[C] || (g.style.display = "")),
                g.style.display === "" && Qa(g) && (x[C] = P0(g)))
              : f !== "none" && ((x[C] = "none"), Ce.set(g, "display", f)));
      for (C = 0; C < D; C++) x[C] != null && (s[C].style.display = x[C]);
      return s;
    }
    b.fn.extend({
      show: function () {
        return Ko(this, !0);
      },
      hide: function () {
        return Ko(this);
      },
      toggle: function (s) {
        return typeof s == "boolean"
          ? s
            ? this.show()
            : this.hide()
          : this.each(function () {
              Qa(this) ? b(this).show() : b(this).hide();
            });
      },
    });
    var Br = /^(?:checkbox|radio)$/i,
      ah = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
      sh = /^$|^module$|\/(?:java|ecma)script/i;
    (function () {
      var s = z.createDocumentFragment(),
        u = s.appendChild(z.createElement("div")),
        f = z.createElement("input");
      f.setAttribute("type", "radio"),
        f.setAttribute("checked", "checked"),
        f.setAttribute("name", "t"),
        u.appendChild(f),
        (M.checkClone = u.cloneNode(!0).cloneNode(!0).lastChild.checked),
        (u.innerHTML = "<textarea>x</textarea>"),
        (M.noCloneChecked = !!u.cloneNode(!0).lastChild.defaultValue),
        (u.innerHTML = "<option></option>"),
        (M.option = !!u.lastChild);
    })();
    var Ni = {
      thead: [1, "<table>", "</table>"],
      col: [2, "<table><colgroup>", "</colgroup></table>"],
      tr: [2, "<table><tbody>", "</tbody></table>"],
      td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
      _default: [0, "", ""],
    };
    (Ni.tbody = Ni.tfoot = Ni.colgroup = Ni.caption = Ni.thead),
      (Ni.th = Ni.td),
      M.option ||
        (Ni.optgroup = Ni.option =
          [1, "<select multiple='multiple'>", "</select>"]);
    function pi(s, u) {
      var f;
      return (
        typeof s.getElementsByTagName < "u"
          ? (f = s.getElementsByTagName(u || "*"))
          : typeof s.querySelectorAll < "u"
          ? (f = s.querySelectorAll(u || "*"))
          : (f = []),
        u === void 0 || (u && be(s, u)) ? b.merge([s], f) : f
      );
    }
    function tc(s, u) {
      for (var f = 0, g = s.length; f < g; f++)
        Ce.set(s[f], "globalEval", !u || Ce.get(u[f], "globalEval"));
    }
    var A0 = /<|&#?\w+;/;
    function lh(s, u, f, g, x) {
      for (
        var C,
          D,
          R,
          P,
          H,
          q,
          X = u.createDocumentFragment(),
          G = [],
          te = 0,
          Fe = s.length;
        te < Fe;
        te++
      )
        if (((C = s[te]), C || C === 0))
          if (Ve(C) === "object") b.merge(G, C.nodeType ? [C] : C);
          else if (!A0.test(C)) G.push(u.createTextNode(C));
          else {
            for (
              D = D || X.appendChild(u.createElement("div")),
                R = (ah.exec(C) || ["", ""])[1].toLowerCase(),
                P = Ni[R] || Ni._default,
                D.innerHTML = P[1] + b.htmlPrefilter(C) + P[2],
                q = P[0];
              q--;

            )
              D = D.lastChild;
            b.merge(G, D.childNodes), (D = X.firstChild), (D.textContent = "");
          }
      for (X.textContent = "", te = 0; (C = G[te++]); ) {
        if (g && b.inArray(C, g) > -1) {
          x && x.push(C);
          continue;
        }
        if (((H = qo(C)), (D = pi(X.appendChild(C), "script")), H && tc(D), f))
          for (q = 0; (C = D[q++]); ) sh.test(C.type || "") && f.push(C);
      }
      return X;
    }
    var ch = /^([^.]*)(?:\.(.+)|)/;
    function Qo() {
      return !0;
    }
    function Xo() {
      return !1;
    }
    function ic(s, u, f, g, x, C) {
      var D, R;
      if (typeof u == "object") {
        typeof f != "string" && ((g = g || f), (f = void 0));
        for (R in u) ic(s, R, f, g, u[R], C);
        return s;
      }
      if (
        (g == null && x == null
          ? ((x = f), (g = f = void 0))
          : x == null &&
            (typeof f == "string"
              ? ((x = g), (g = void 0))
              : ((x = g), (g = f), (f = void 0))),
        x === !1)
      )
        x = Xo;
      else if (!x) return s;
      return (
        C === 1 &&
          ((D = x),
          (x = function (P) {
            return b().off(P), D.apply(this, arguments);
          }),
          (x.guid = D.guid || (D.guid = b.guid++))),
        s.each(function () {
          b.event.add(this, u, x, g, f);
        })
      );
    }
    b.event = {
      global: {},
      add: function (s, u, f, g, x) {
        var C,
          D,
          R,
          P,
          H,
          q,
          X,
          G,
          te,
          Fe,
          Je,
          Ue = Ce.get(s);
        if (Nr(s))
          for (
            f.handler && ((C = f), (f = C.handler), (x = C.selector)),
              x && b.find.matchesSelector(bo, x),
              f.guid || (f.guid = b.guid++),
              (P = Ue.events) || (P = Ue.events = Object.create(null)),
              (D = Ue.handle) ||
                (D = Ue.handle =
                  function (qt) {
                    return typeof b < "u" && b.event.triggered !== qt.type
                      ? b.event.dispatch.apply(s, arguments)
                      : void 0;
                  }),
              u = (u || "").match(hn) || [""],
              H = u.length;
            H--;

          )
            (R = ch.exec(u[H]) || []),
              (te = Je = R[1]),
              (Fe = (R[2] || "").split(".").sort()),
              te &&
                ((X = b.event.special[te] || {}),
                (te = (x ? X.delegateType : X.bindType) || te),
                (X = b.event.special[te] || {}),
                (q = b.extend(
                  {
                    type: te,
                    origType: Je,
                    data: g,
                    handler: f,
                    guid: f.guid,
                    selector: x,
                    needsContext: x && b.expr.match.needsContext.test(x),
                    namespace: Fe.join("."),
                  },
                  C
                )),
                (G = P[te]) ||
                  ((G = P[te] = []),
                  (G.delegateCount = 0),
                  (!X.setup || X.setup.call(s, g, Fe, D) === !1) &&
                    s.addEventListener &&
                    s.addEventListener(te, D)),
                X.add &&
                  (X.add.call(s, q),
                  q.handler.guid || (q.handler.guid = f.guid)),
                x ? G.splice(G.delegateCount++, 0, q) : G.push(q),
                (b.event.global[te] = !0));
      },
      remove: function (s, u, f, g, x) {
        var C,
          D,
          R,
          P,
          H,
          q,
          X,
          G,
          te,
          Fe,
          Je,
          Ue = Ce.hasData(s) && Ce.get(s);
        if (!(!Ue || !(P = Ue.events))) {
          for (u = (u || "").match(hn) || [""], H = u.length; H--; ) {
            if (
              ((R = ch.exec(u[H]) || []),
              (te = Je = R[1]),
              (Fe = (R[2] || "").split(".").sort()),
              !te)
            ) {
              for (te in P) b.event.remove(s, te + u[H], f, g, !0);
              continue;
            }
            for (
              X = b.event.special[te] || {},
                te = (g ? X.delegateType : X.bindType) || te,
                G = P[te] || [],
                R =
                  R[2] &&
                  new RegExp("(^|\\.)" + Fe.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                D = C = G.length;
              C--;

            )
              (q = G[C]),
                (x || Je === q.origType) &&
                  (!f || f.guid === q.guid) &&
                  (!R || R.test(q.namespace)) &&
                  (!g || g === q.selector || (g === "**" && q.selector)) &&
                  (G.splice(C, 1),
                  q.selector && G.delegateCount--,
                  X.remove && X.remove.call(s, q));
            D &&
              !G.length &&
              ((!X.teardown || X.teardown.call(s, Fe, Ue.handle) === !1) &&
                b.removeEvent(s, te, Ue.handle),
              delete P[te]);
          }
          b.isEmptyObject(P) && Ce.remove(s, "handle events");
        }
      },
      dispatch: function (s) {
        var u,
          f,
          g,
          x,
          C,
          D,
          R = new Array(arguments.length),
          P = b.event.fix(s),
          H = (Ce.get(this, "events") || Object.create(null))[P.type] || [],
          q = b.event.special[P.type] || {};
        for (R[0] = P, u = 1; u < arguments.length; u++) R[u] = arguments[u];
        if (
          ((P.delegateTarget = this),
          !(q.preDispatch && q.preDispatch.call(this, P) === !1))
        ) {
          for (
            D = b.event.handlers.call(this, P, H), u = 0;
            (x = D[u++]) && !P.isPropagationStopped();

          )
            for (
              P.currentTarget = x.elem, f = 0;
              (C = x.handlers[f++]) && !P.isImmediatePropagationStopped();

            )
              (!P.rnamespace ||
                C.namespace === !1 ||
                P.rnamespace.test(C.namespace)) &&
                ((P.handleObj = C),
                (P.data = C.data),
                (g = (
                  (b.event.special[C.origType] || {}).handle || C.handler
                ).apply(x.elem, R)),
                g !== void 0 &&
                  (P.result = g) === !1 &&
                  (P.preventDefault(), P.stopPropagation()));
          return q.postDispatch && q.postDispatch.call(this, P), P.result;
        }
      },
      handlers: function (s, u) {
        var f,
          g,
          x,
          C,
          D,
          R = [],
          P = u.delegateCount,
          H = s.target;
        if (P && H.nodeType && !(s.type === "click" && s.button >= 1)) {
          for (; H !== this; H = H.parentNode || this)
            if (
              H.nodeType === 1 &&
              !(s.type === "click" && H.disabled === !0)
            ) {
              for (C = [], D = {}, f = 0; f < P; f++)
                (g = u[f]),
                  (x = g.selector + " "),
                  D[x] === void 0 &&
                    (D[x] = g.needsContext
                      ? b(x, this).index(H) > -1
                      : b.find(x, this, null, [H]).length),
                  D[x] && C.push(g);
              C.length && R.push({ elem: H, handlers: C });
            }
        }
        return (
          (H = this),
          P < u.length && R.push({ elem: H, handlers: u.slice(P) }),
          R
        );
      },
      addProp: function (s, u) {
        Object.defineProperty(b.Event.prototype, s, {
          enumerable: !0,
          configurable: !0,
          get: A(u)
            ? function () {
                if (this.originalEvent) return u(this.originalEvent);
              }
            : function () {
                if (this.originalEvent) return this.originalEvent[s];
              },
          set: function (f) {
            Object.defineProperty(this, s, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: f,
            });
          },
        });
      },
      fix: function (s) {
        return s[b.expando] ? s : new b.Event(s);
      },
      special: {
        load: { noBubble: !0 },
        click: {
          setup: function (s) {
            var u = this || s;
            return (
              Br.test(u.type) &&
                u.click &&
                be(u, "input") &&
                Xa(u, "click", !0),
              !1
            );
          },
          trigger: function (s) {
            var u = this || s;
            return (
              Br.test(u.type) && u.click && be(u, "input") && Xa(u, "click"), !0
            );
          },
          _default: function (s) {
            var u = s.target;
            return (
              (Br.test(u.type) &&
                u.click &&
                be(u, "input") &&
                Ce.get(u, "click")) ||
              be(u, "a")
            );
          },
        },
        beforeunload: {
          postDispatch: function (s) {
            s.result !== void 0 &&
              s.originalEvent &&
              (s.originalEvent.returnValue = s.result);
          },
        },
      },
    };
    function Xa(s, u, f) {
      if (!f) {
        Ce.get(s, u) === void 0 && b.event.add(s, u, Qo);
        return;
      }
      Ce.set(s, u, !1),
        b.event.add(s, u, {
          namespace: !1,
          handler: function (g) {
            var x,
              C = Ce.get(this, u);
            if (g.isTrigger & 1 && this[u]) {
              if (C)
                (b.event.special[u] || {}).delegateType && g.stopPropagation();
              else if (
                ((C = o.call(arguments)),
                Ce.set(this, u, C),
                this[u](),
                (x = Ce.get(this, u)),
                Ce.set(this, u, !1),
                C !== x)
              )
                return g.stopImmediatePropagation(), g.preventDefault(), x;
            } else
              C &&
                (Ce.set(this, u, b.event.trigger(C[0], C.slice(1), this)),
                g.stopPropagation(),
                (g.isImmediatePropagationStopped = Qo));
          },
        });
    }
    (b.removeEvent = function (s, u, f) {
      s.removeEventListener && s.removeEventListener(u, f);
    }),
      (b.Event = function (s, u) {
        if (!(this instanceof b.Event)) return new b.Event(s, u);
        s && s.type
          ? ((this.originalEvent = s),
            (this.type = s.type),
            (this.isDefaultPrevented =
              s.defaultPrevented ||
              (s.defaultPrevented === void 0 && s.returnValue === !1)
                ? Qo
                : Xo),
            (this.target =
              s.target && s.target.nodeType === 3
                ? s.target.parentNode
                : s.target),
            (this.currentTarget = s.currentTarget),
            (this.relatedTarget = s.relatedTarget))
          : (this.type = s),
          u && b.extend(this, u),
          (this.timeStamp = (s && s.timeStamp) || Date.now()),
          (this[b.expando] = !0);
      }),
      (b.Event.prototype = {
        constructor: b.Event,
        isDefaultPrevented: Xo,
        isPropagationStopped: Xo,
        isImmediatePropagationStopped: Xo,
        isSimulated: !1,
        preventDefault: function () {
          var s = this.originalEvent;
          (this.isDefaultPrevented = Qo),
            s && !this.isSimulated && s.preventDefault();
        },
        stopPropagation: function () {
          var s = this.originalEvent;
          (this.isPropagationStopped = Qo),
            s && !this.isSimulated && s.stopPropagation();
        },
        stopImmediatePropagation: function () {
          var s = this.originalEvent;
          (this.isImmediatePropagationStopped = Qo),
            s && !this.isSimulated && s.stopImmediatePropagation(),
            this.stopPropagation();
        },
      }),
      b.each(
        {
          altKey: !0,
          bubbles: !0,
          cancelable: !0,
          changedTouches: !0,
          ctrlKey: !0,
          detail: !0,
          eventPhase: !0,
          metaKey: !0,
          pageX: !0,
          pageY: !0,
          shiftKey: !0,
          view: !0,
          char: !0,
          code: !0,
          charCode: !0,
          key: !0,
          keyCode: !0,
          button: !0,
          buttons: !0,
          clientX: !0,
          clientY: !0,
          offsetX: !0,
          offsetY: !0,
          pointerId: !0,
          pointerType: !0,
          screenX: !0,
          screenY: !0,
          targetTouches: !0,
          toElement: !0,
          touches: !0,
          which: !0,
        },
        b.event.addProp
      ),
      b.each({ focus: "focusin", blur: "focusout" }, function (s, u) {
        function f(g) {
          if (z.documentMode) {
            var x = Ce.get(this, "handle"),
              C = b.event.fix(g);
            (C.type = g.type === "focusin" ? "focus" : "blur"),
              (C.isSimulated = !0),
              x(g),
              C.target === C.currentTarget && x(C);
          } else b.event.simulate(u, g.target, b.event.fix(g));
        }
        (b.event.special[s] = {
          setup: function () {
            var g;
            if ((Xa(this, s, !0), z.documentMode))
              (g = Ce.get(this, u)),
                g || this.addEventListener(u, f),
                Ce.set(this, u, (g || 0) + 1);
            else return !1;
          },
          trigger: function () {
            return Xa(this, s), !0;
          },
          teardown: function () {
            var g;
            if (z.documentMode)
              (g = Ce.get(this, u) - 1),
                g
                  ? Ce.set(this, u, g)
                  : (this.removeEventListener(u, f), Ce.remove(this, u));
            else return !1;
          },
          _default: function (g) {
            return Ce.get(g.target, s);
          },
          delegateType: u,
        }),
          (b.event.special[u] = {
            setup: function () {
              var g = this.ownerDocument || this.document || this,
                x = z.documentMode ? this : g,
                C = Ce.get(x, u);
              C ||
                (z.documentMode
                  ? this.addEventListener(u, f)
                  : g.addEventListener(s, f, !0)),
                Ce.set(x, u, (C || 0) + 1);
            },
            teardown: function () {
              var g = this.ownerDocument || this.document || this,
                x = z.documentMode ? this : g,
                C = Ce.get(x, u) - 1;
              C
                ? Ce.set(x, u, C)
                : (z.documentMode
                    ? this.removeEventListener(u, f)
                    : g.removeEventListener(s, f, !0),
                  Ce.remove(x, u));
            },
          });
      }),
      b.each(
        {
          mouseenter: "mouseover",
          mouseleave: "mouseout",
          pointerenter: "pointerover",
          pointerleave: "pointerout",
        },
        function (s, u) {
          b.event.special[s] = {
            delegateType: u,
            bindType: u,
            handle: function (f) {
              var g,
                x = this,
                C = f.relatedTarget,
                D = f.handleObj;
              return (
                (!C || (C !== x && !b.contains(x, C))) &&
                  ((f.type = D.origType),
                  (g = D.handler.apply(this, arguments)),
                  (f.type = u)),
                g
              );
            },
          };
        }
      ),
      b.fn.extend({
        on: function (s, u, f, g) {
          return ic(this, s, u, f, g);
        },
        one: function (s, u, f, g) {
          return ic(this, s, u, f, g, 1);
        },
        off: function (s, u, f) {
          var g, x;
          if (s && s.preventDefault && s.handleObj)
            return (
              (g = s.handleObj),
              b(s.delegateTarget).off(
                g.namespace ? g.origType + "." + g.namespace : g.origType,
                g.selector,
                g.handler
              ),
              this
            );
          if (typeof s == "object") {
            for (x in s) this.off(x, u, s[x]);
            return this;
          }
          return (
            (u === !1 || typeof u == "function") && ((f = u), (u = void 0)),
            f === !1 && (f = Xo),
            this.each(function () {
              b.event.remove(this, s, f, u);
            })
          );
        },
      });
    var R0 = /<script|<style|<link/i,
      F0 = /checked\s*(?:[^=]|=\s*.checked.)/i,
      N0 = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function dh(s, u) {
      return (
        (be(s, "table") &&
          be(u.nodeType !== 11 ? u : u.firstChild, "tr") &&
          b(s).children("tbody")[0]) ||
        s
      );
    }
    function V0(s) {
      return (s.type = (s.getAttribute("type") !== null) + "/" + s.type), s;
    }
    function L0(s) {
      return (
        (s.type || "").slice(0, 5) === "true/"
          ? (s.type = s.type.slice(5))
          : s.removeAttribute("type"),
        s
      );
    }
    function uh(s, u) {
      var f, g, x, C, D, R, P;
      if (u.nodeType === 1) {
        if (Ce.hasData(s) && ((C = Ce.get(s)), (P = C.events), P)) {
          Ce.remove(u, "handle events");
          for (x in P)
            for (f = 0, g = P[x].length; f < g; f++) b.event.add(u, x, P[x][f]);
        }
        hi.hasData(s) &&
          ((D = hi.access(s)), (R = b.extend({}, D)), hi.set(u, R));
      }
    }
    function B0(s, u) {
      var f = u.nodeName.toLowerCase();
      f === "input" && Br.test(s.type)
        ? (u.checked = s.checked)
        : (f === "input" || f === "textarea") &&
          (u.defaultValue = s.defaultValue);
    }
    function Zo(s, u, f, g) {
      u = r(u);
      var x,
        C,
        D,
        R,
        P,
        H,
        q = 0,
        X = s.length,
        G = X - 1,
        te = u[0],
        Fe = A(te);
      if (
        Fe ||
        (X > 1 && typeof te == "string" && !M.checkClone && F0.test(te))
      )
        return s.each(function (Je) {
          var Ue = s.eq(Je);
          Fe && (u[0] = te.call(this, Je, Ue.html())), Zo(Ue, u, f, g);
        });
      if (
        X &&
        ((x = lh(u, s[0].ownerDocument, !1, s, g)),
        (C = x.firstChild),
        x.childNodes.length === 1 && (x = C),
        C || g)
      ) {
        for (D = b.map(pi(x, "script"), V0), R = D.length; q < X; q++)
          (P = x),
            q !== G &&
              ((P = b.clone(P, !0, !0)), R && b.merge(D, pi(P, "script"))),
            f.call(s[q], P, q);
        if (R)
          for (
            H = D[D.length - 1].ownerDocument, b.map(D, L0), q = 0;
            q < R;
            q++
          )
            (P = D[q]),
              sh.test(P.type || "") &&
                !Ce.access(P, "globalEval") &&
                b.contains(H, P) &&
                (P.src && (P.type || "").toLowerCase() !== "module"
                  ? b._evalUrl &&
                    !P.noModule &&
                    b._evalUrl(
                      P.src,
                      { nonce: P.nonce || P.getAttribute("nonce") },
                      H
                    )
                  : ue(P.textContent.replace(N0, ""), P, H));
      }
      return s;
    }
    function hh(s, u, f) {
      for (var g, x = u ? b.filter(u, s) : s, C = 0; (g = x[C]) != null; C++)
        !f && g.nodeType === 1 && b.cleanData(pi(g)),
          g.parentNode &&
            (f && qo(g) && tc(pi(g, "script")), g.parentNode.removeChild(g));
      return s;
    }
    b.extend({
      htmlPrefilter: function (s) {
        return s;
      },
      clone: function (s, u, f) {
        var g,
          x,
          C,
          D,
          R = s.cloneNode(!0),
          P = qo(s);
        if (
          !M.noCloneChecked &&
          (s.nodeType === 1 || s.nodeType === 11) &&
          !b.isXMLDoc(s)
        )
          for (D = pi(R), C = pi(s), g = 0, x = C.length; g < x; g++)
            B0(C[g], D[g]);
        if (u)
          if (f)
            for (
              C = C || pi(s), D = D || pi(R), g = 0, x = C.length;
              g < x;
              g++
            )
              uh(C[g], D[g]);
          else uh(s, R);
        return (
          (D = pi(R, "script")), D.length > 0 && tc(D, !P && pi(s, "script")), R
        );
      },
      cleanData: function (s) {
        for (
          var u, f, g, x = b.event.special, C = 0;
          (f = s[C]) !== void 0;
          C++
        )
          if (Nr(f)) {
            if ((u = f[Ce.expando])) {
              if (u.events)
                for (g in u.events)
                  x[g] ? b.event.remove(f, g) : b.removeEvent(f, g, u.handle);
              f[Ce.expando] = void 0;
            }
            f[hi.expando] && (f[hi.expando] = void 0);
          }
      },
    }),
      b.fn.extend({
        detach: function (s) {
          return hh(this, s, !0);
        },
        remove: function (s) {
          return hh(this, s);
        },
        text: function (s) {
          return In(
            this,
            function (u) {
              return u === void 0
                ? b.text(this)
                : this.empty().each(function () {
                    (this.nodeType === 1 ||
                      this.nodeType === 11 ||
                      this.nodeType === 9) &&
                      (this.textContent = u);
                  });
            },
            null,
            s,
            arguments.length
          );
        },
        append: function () {
          return Zo(this, arguments, function (s) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var u = dh(this, s);
              u.appendChild(s);
            }
          });
        },
        prepend: function () {
          return Zo(this, arguments, function (s) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var u = dh(this, s);
              u.insertBefore(s, u.firstChild);
            }
          });
        },
        before: function () {
          return Zo(this, arguments, function (s) {
            this.parentNode && this.parentNode.insertBefore(s, this);
          });
        },
        after: function () {
          return Zo(this, arguments, function (s) {
            this.parentNode &&
              this.parentNode.insertBefore(s, this.nextSibling);
          });
        },
        empty: function () {
          for (var s, u = 0; (s = this[u]) != null; u++)
            s.nodeType === 1 && (b.cleanData(pi(s, !1)), (s.textContent = ""));
          return this;
        },
        clone: function (s, u) {
          return (
            (s = s ?? !1),
            (u = u ?? s),
            this.map(function () {
              return b.clone(this, s, u);
            })
          );
        },
        html: function (s) {
          return In(
            this,
            function (u) {
              var f = this[0] || {},
                g = 0,
                x = this.length;
              if (u === void 0 && f.nodeType === 1) return f.innerHTML;
              if (
                typeof u == "string" &&
                !R0.test(u) &&
                !Ni[(ah.exec(u) || ["", ""])[1].toLowerCase()]
              ) {
                u = b.htmlPrefilter(u);
                try {
                  for (; g < x; g++)
                    (f = this[g] || {}),
                      f.nodeType === 1 &&
                        (b.cleanData(pi(f, !1)), (f.innerHTML = u));
                  f = 0;
                } catch {}
              }
              f && this.empty().append(u);
            },
            null,
            s,
            arguments.length
          );
        },
        replaceWith: function () {
          var s = [];
          return Zo(
            this,
            arguments,
            function (u) {
              var f = this.parentNode;
              b.inArray(this, s) < 0 &&
                (b.cleanData(pi(this)), f && f.replaceChild(u, this));
            },
            s
          );
        },
      }),
      b.each(
        {
          appendTo: "append",
          prependTo: "prepend",
          insertBefore: "before",
          insertAfter: "after",
          replaceAll: "replaceWith",
        },
        function (s, u) {
          b.fn[s] = function (f) {
            for (var g, x = [], C = b(f), D = C.length - 1, R = 0; R <= D; R++)
              (g = R === D ? this : this.clone(!0)),
                b(C[R])[u](g),
                a.apply(x, g.get());
            return this.pushStack(x);
          };
        }
      );
    var nc = new RegExp("^(" + nh + ")(?!px)[a-z%]+$", "i"),
      oc = /^--/,
      Za = function (s) {
        var u = s.ownerDocument.defaultView;
        return (!u || !u.opener) && (u = n), u.getComputedStyle(s);
      },
      ph = function (s, u, f) {
        var g,
          x,
          C = {};
        for (x in u) (C[x] = s.style[x]), (s.style[x] = u[x]);
        g = f.call(s);
        for (x in u) s.style[x] = C[x];
        return g;
      },
      H0 = new RegExp(Pn.join("|"), "i");
    (function () {
      function s() {
        if (H) {
          (P.style.cssText =
            "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
            (H.style.cssText =
              "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
            bo.appendChild(P).appendChild(H);
          var q = n.getComputedStyle(H);
          (f = q.top !== "1%"),
            (R = u(q.marginLeft) === 12),
            (H.style.right = "60%"),
            (C = u(q.right) === 36),
            (g = u(q.width) === 36),
            (H.style.position = "absolute"),
            (x = u(H.offsetWidth / 3) === 12),
            bo.removeChild(P),
            (H = null);
        }
      }
      function u(q) {
        return Math.round(parseFloat(q));
      }
      var f,
        g,
        x,
        C,
        D,
        R,
        P = z.createElement("div"),
        H = z.createElement("div");
      H.style &&
        ((H.style.backgroundClip = "content-box"),
        (H.cloneNode(!0).style.backgroundClip = ""),
        (M.clearCloneStyle = H.style.backgroundClip === "content-box"),
        b.extend(M, {
          boxSizingReliable: function () {
            return s(), g;
          },
          pixelBoxStyles: function () {
            return s(), C;
          },
          pixelPosition: function () {
            return s(), f;
          },
          reliableMarginLeft: function () {
            return s(), R;
          },
          scrollboxSize: function () {
            return s(), x;
          },
          reliableTrDimensions: function () {
            var q, X, G, te;
            return (
              D == null &&
                ((q = z.createElement("table")),
                (X = z.createElement("tr")),
                (G = z.createElement("div")),
                (q.style.cssText =
                  "position:absolute;left:-11111px;border-collapse:separate"),
                (X.style.cssText = "box-sizing:content-box;border:1px solid"),
                (X.style.height = "1px"),
                (G.style.height = "9px"),
                (G.style.display = "block"),
                bo.appendChild(q).appendChild(X).appendChild(G),
                (te = n.getComputedStyle(X)),
                (D =
                  parseInt(te.height, 10) +
                    parseInt(te.borderTopWidth, 10) +
                    parseInt(te.borderBottomWidth, 10) ===
                  X.offsetHeight),
                bo.removeChild(q)),
              D
            );
          },
        }));
    })();
    function Hr(s, u, f) {
      var g,
        x,
        C,
        D,
        R = oc.test(u),
        P = s.style;
      return (
        (f = f || Za(s)),
        f &&
          ((D = f.getPropertyValue(u) || f[u]),
          R && D && (D = D.replace(Xt, "$1") || void 0),
          D === "" && !qo(s) && (D = b.style(s, u)),
          !M.pixelBoxStyles() &&
            nc.test(D) &&
            H0.test(u) &&
            ((g = P.width),
            (x = P.minWidth),
            (C = P.maxWidth),
            (P.minWidth = P.maxWidth = P.width = D),
            (D = f.width),
            (P.width = g),
            (P.minWidth = x),
            (P.maxWidth = C))),
        D !== void 0 ? D + "" : D
      );
    }
    function mh(s, u) {
      return {
        get: function () {
          if (s()) {
            delete this.get;
            return;
          }
          return (this.get = u).apply(this, arguments);
        },
      };
    }
    var fh = ["Webkit", "Moz", "ms"],
      gh = z.createElement("div").style,
      _h = {};
    function j0(s) {
      for (var u = s[0].toUpperCase() + s.slice(1), f = fh.length; f--; )
        if (((s = fh[f] + u), s in gh)) return s;
    }
    function rc(s) {
      var u = b.cssProps[s] || _h[s];
      return u || (s in gh ? s : (_h[s] = j0(s) || s));
    }
    var z0 = /^(none|table(?!-c[ea]).+)/,
      U0 = { position: "absolute", visibility: "hidden", display: "block" },
      bh = { letterSpacing: "0", fontWeight: "400" };
    function vh(s, u, f) {
      var g = Lr.exec(u);
      return g ? Math.max(0, g[2] - (f || 0)) + (g[3] || "px") : u;
    }
    function ac(s, u, f, g, x, C) {
      var D = u === "width" ? 1 : 0,
        R = 0,
        P = 0,
        H = 0;
      if (f === (g ? "border" : "content")) return 0;
      for (; D < 4; D += 2)
        f === "margin" && (H += b.css(s, f + Pn[D], !0, x)),
          g
            ? (f === "content" && (P -= b.css(s, "padding" + Pn[D], !0, x)),
              f !== "margin" &&
                (P -= b.css(s, "border" + Pn[D] + "Width", !0, x)))
            : ((P += b.css(s, "padding" + Pn[D], !0, x)),
              f !== "padding"
                ? (P += b.css(s, "border" + Pn[D] + "Width", !0, x))
                : (R += b.css(s, "border" + Pn[D] + "Width", !0, x)));
      return (
        !g &&
          C >= 0 &&
          (P +=
            Math.max(
              0,
              Math.ceil(
                s["offset" + u[0].toUpperCase() + u.slice(1)] - C - P - R - 0.5
              )
            ) || 0),
        P + H
      );
    }
    function yh(s, u, f) {
      var g = Za(s),
        x = !M.boxSizingReliable() || f,
        C = x && b.css(s, "boxSizing", !1, g) === "border-box",
        D = C,
        R = Hr(s, u, g),
        P = "offset" + u[0].toUpperCase() + u.slice(1);
      if (nc.test(R)) {
        if (!f) return R;
        R = "auto";
      }
      return (
        ((!M.boxSizingReliable() && C) ||
          (!M.reliableTrDimensions() && be(s, "tr")) ||
          R === "auto" ||
          (!parseFloat(R) && b.css(s, "display", !1, g) === "inline")) &&
          s.getClientRects().length &&
          ((C = b.css(s, "boxSizing", !1, g) === "border-box"),
          (D = P in s),
          D && (R = s[P])),
        (R = parseFloat(R) || 0),
        R + ac(s, u, f || (C ? "border" : "content"), D, g, R) + "px"
      );
    }
    b.extend({
      cssHooks: {
        opacity: {
          get: function (s, u) {
            if (u) {
              var f = Hr(s, "opacity");
              return f === "" ? "1" : f;
            }
          },
        },
      },
      cssNumber: {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageSlice: !0,
        columnCount: !0,
        flexGrow: !0,
        flexShrink: !0,
        fontWeight: !0,
        gridArea: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnStart: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowStart: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        scale: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
      },
      cssProps: {},
      style: function (s, u, f, g) {
        if (!(!s || s.nodeType === 3 || s.nodeType === 8 || !s.style)) {
          var x,
            C,
            D,
            R = pn(u),
            P = oc.test(u),
            H = s.style;
          if (
            (P || (u = rc(R)),
            (D = b.cssHooks[u] || b.cssHooks[R]),
            f !== void 0)
          ) {
            if (
              ((C = typeof f),
              C === "string" &&
                (x = Lr.exec(f)) &&
                x[1] &&
                ((f = oh(s, u, x)), (C = "number")),
              f == null || f !== f)
            )
              return;
            C === "number" &&
              !P &&
              (f += (x && x[3]) || (b.cssNumber[R] ? "" : "px")),
              !M.clearCloneStyle &&
                f === "" &&
                u.indexOf("background") === 0 &&
                (H[u] = "inherit"),
              (!D || !("set" in D) || (f = D.set(s, f, g)) !== void 0) &&
                (P ? H.setProperty(u, f) : (H[u] = f));
          } else
            return D && "get" in D && (x = D.get(s, !1, g)) !== void 0
              ? x
              : H[u];
        }
      },
      css: function (s, u, f, g) {
        var x,
          C,
          D,
          R = pn(u),
          P = oc.test(u);
        return (
          P || (u = rc(R)),
          (D = b.cssHooks[u] || b.cssHooks[R]),
          D && "get" in D && (x = D.get(s, !0, f)),
          x === void 0 && (x = Hr(s, u, g)),
          x === "normal" && u in bh && (x = bh[u]),
          f === "" || f
            ? ((C = parseFloat(x)), f === !0 || isFinite(C) ? C || 0 : x)
            : x
        );
      },
    }),
      b.each(["height", "width"], function (s, u) {
        b.cssHooks[u] = {
          get: function (f, g, x) {
            if (g)
              return z0.test(b.css(f, "display")) &&
                (!f.getClientRects().length || !f.getBoundingClientRect().width)
                ? ph(f, U0, function () {
                    return yh(f, u, x);
                  })
                : yh(f, u, x);
          },
          set: function (f, g, x) {
            var C,
              D = Za(f),
              R = !M.scrollboxSize() && D.position === "absolute",
              P = R || x,
              H = P && b.css(f, "boxSizing", !1, D) === "border-box",
              q = x ? ac(f, u, x, H, D) : 0;
            return (
              H &&
                R &&
                (q -= Math.ceil(
                  f["offset" + u[0].toUpperCase() + u.slice(1)] -
                    parseFloat(D[u]) -
                    ac(f, u, "border", !1, D) -
                    0.5
                )),
              q &&
                (C = Lr.exec(g)) &&
                (C[3] || "px") !== "px" &&
                ((f.style[u] = g), (g = b.css(f, u))),
              vh(f, g, q)
            );
          },
        };
      }),
      (b.cssHooks.marginLeft = mh(M.reliableMarginLeft, function (s, u) {
        if (u)
          return (
            (parseFloat(Hr(s, "marginLeft")) ||
              s.getBoundingClientRect().left -
                ph(s, { marginLeft: 0 }, function () {
                  return s.getBoundingClientRect().left;
                })) + "px"
          );
      })),
      b.each({ margin: "", padding: "", border: "Width" }, function (s, u) {
        (b.cssHooks[s + u] = {
          expand: function (f) {
            for (
              var g = 0, x = {}, C = typeof f == "string" ? f.split(" ") : [f];
              g < 4;
              g++
            )
              x[s + Pn[g] + u] = C[g] || C[g - 2] || C[0];
            return x;
          },
        }),
          s !== "margin" && (b.cssHooks[s + u].set = vh);
      }),
      b.fn.extend({
        css: function (s, u) {
          return In(
            this,
            function (f, g, x) {
              var C,
                D,
                R = {},
                P = 0;
              if (Array.isArray(g)) {
                for (C = Za(f), D = g.length; P < D; P++)
                  R[g[P]] = b.css(f, g[P], !1, C);
                return R;
              }
              return x !== void 0 ? b.style(f, g, x) : b.css(f, g);
            },
            s,
            u,
            arguments.length > 1
          );
        },
      });
    function mi(s, u, f, g, x) {
      return new mi.prototype.init(s, u, f, g, x);
    }
    (b.Tween = mi),
      (mi.prototype = {
        constructor: mi,
        init: function (s, u, f, g, x, C) {
          (this.elem = s),
            (this.prop = f),
            (this.easing = x || b.easing._default),
            (this.options = u),
            (this.start = this.now = this.cur()),
            (this.end = g),
            (this.unit = C || (b.cssNumber[f] ? "" : "px"));
        },
        cur: function () {
          var s = mi.propHooks[this.prop];
          return s && s.get ? s.get(this) : mi.propHooks._default.get(this);
        },
        run: function (s) {
          var u,
            f = mi.propHooks[this.prop];
          return (
            this.options.duration
              ? (this.pos = u =
                  b.easing[this.easing](
                    s,
                    this.options.duration * s,
                    0,
                    1,
                    this.options.duration
                  ))
              : (this.pos = u = s),
            (this.now = (this.end - this.start) * u + this.start),
            this.options.step &&
              this.options.step.call(this.elem, this.now, this),
            f && f.set ? f.set(this) : mi.propHooks._default.set(this),
            this
          );
        },
      }),
      (mi.prototype.init.prototype = mi.prototype),
      (mi.propHooks = {
        _default: {
          get: function (s) {
            var u;
            return s.elem.nodeType !== 1 ||
              (s.elem[s.prop] != null && s.elem.style[s.prop] == null)
              ? s.elem[s.prop]
              : ((u = b.css(s.elem, s.prop, "")), !u || u === "auto" ? 0 : u);
          },
          set: function (s) {
            b.fx.step[s.prop]
              ? b.fx.step[s.prop](s)
              : s.elem.nodeType === 1 &&
                (b.cssHooks[s.prop] || s.elem.style[rc(s.prop)] != null)
              ? b.style(s.elem, s.prop, s.now + s.unit)
              : (s.elem[s.prop] = s.now);
          },
        },
      }),
      (mi.propHooks.scrollTop = mi.propHooks.scrollLeft =
        {
          set: function (s) {
            s.elem.nodeType && s.elem.parentNode && (s.elem[s.prop] = s.now);
          },
        }),
      (b.easing = {
        linear: function (s) {
          return s;
        },
        swing: function (s) {
          return 0.5 - Math.cos(s * Math.PI) / 2;
        },
        _default: "swing",
      }),
      (b.fx = mi.prototype.init),
      (b.fx.step = {});
    var Jo,
      Ja,
      W0 = /^(?:toggle|show|hide)$/,
      $0 = /queueHooks$/;
    function sc() {
      Ja &&
        (z.hidden === !1 && n.requestAnimationFrame
          ? n.requestAnimationFrame(sc)
          : n.setTimeout(sc, b.fx.interval),
        b.fx.tick());
    }
    function xh() {
      return (
        n.setTimeout(function () {
          Jo = void 0;
        }),
        (Jo = Date.now())
      );
    }
    function es(s, u) {
      var f,
        g = 0,
        x = { height: s };
      for (u = u ? 1 : 0; g < 4; g += 2 - u)
        (f = Pn[g]), (x["margin" + f] = x["padding" + f] = s);
      return u && (x.opacity = x.width = s), x;
    }
    function Ch(s, u, f) {
      for (
        var g,
          x = (Xi.tweeners[u] || []).concat(Xi.tweeners["*"]),
          C = 0,
          D = x.length;
        C < D;
        C++
      )
        if ((g = x[C].call(f, u, s))) return g;
    }
    function G0(s, u, f) {
      var g,
        x,
        C,
        D,
        R,
        P,
        H,
        q,
        X = "width" in u || "height" in u,
        G = this,
        te = {},
        Fe = s.style,
        Je = s.nodeType && Qa(s),
        Ue = Ce.get(s, "fxshow");
      f.queue ||
        ((D = b._queueHooks(s, "fx")),
        D.unqueued == null &&
          ((D.unqueued = 0),
          (R = D.empty.fire),
          (D.empty.fire = function () {
            D.unqueued || R();
          })),
        D.unqueued++,
        G.always(function () {
          G.always(function () {
            D.unqueued--, b.queue(s, "fx").length || D.empty.fire();
          });
        }));
      for (g in u)
        if (((x = u[g]), W0.test(x))) {
          if (
            (delete u[g],
            (C = C || x === "toggle"),
            x === (Je ? "hide" : "show"))
          )
            if (x === "show" && Ue && Ue[g] !== void 0) Je = !0;
            else continue;
          te[g] = (Ue && Ue[g]) || b.style(s, g);
        }
      if (((P = !b.isEmptyObject(u)), !(!P && b.isEmptyObject(te)))) {
        X &&
          s.nodeType === 1 &&
          ((f.overflow = [Fe.overflow, Fe.overflowX, Fe.overflowY]),
          (H = Ue && Ue.display),
          H == null && (H = Ce.get(s, "display")),
          (q = b.css(s, "display")),
          q === "none" &&
            (H
              ? (q = H)
              : (Ko([s], !0),
                (H = s.style.display || H),
                (q = b.css(s, "display")),
                Ko([s]))),
          (q === "inline" || (q === "inline-block" && H != null)) &&
            b.css(s, "float") === "none" &&
            (P ||
              (G.done(function () {
                Fe.display = H;
              }),
              H == null && ((q = Fe.display), (H = q === "none" ? "" : q))),
            (Fe.display = "inline-block"))),
          f.overflow &&
            ((Fe.overflow = "hidden"),
            G.always(function () {
              (Fe.overflow = f.overflow[0]),
                (Fe.overflowX = f.overflow[1]),
                (Fe.overflowY = f.overflow[2]);
            })),
          (P = !1);
        for (g in te)
          P ||
            (Ue
              ? "hidden" in Ue && (Je = Ue.hidden)
              : (Ue = Ce.access(s, "fxshow", { display: H })),
            C && (Ue.hidden = !Je),
            Je && Ko([s], !0),
            G.done(function () {
              Je || Ko([s]), Ce.remove(s, "fxshow");
              for (g in te) b.style(s, g, te[g]);
            })),
            (P = Ch(Je ? Ue[g] : 0, g, G)),
            g in Ue ||
              ((Ue[g] = P.start), Je && ((P.end = P.start), (P.start = 0)));
      }
    }
    function Y0(s, u) {
      var f, g, x, C, D;
      for (f in s)
        if (
          ((g = pn(f)),
          (x = u[g]),
          (C = s[f]),
          Array.isArray(C) && ((x = C[1]), (C = s[f] = C[0])),
          f !== g && ((s[g] = C), delete s[f]),
          (D = b.cssHooks[g]),
          D && "expand" in D)
        ) {
          (C = D.expand(C)), delete s[g];
          for (f in C) f in s || ((s[f] = C[f]), (u[f] = x));
        } else u[g] = x;
    }
    function Xi(s, u, f) {
      var g,
        x,
        C = 0,
        D = Xi.prefilters.length,
        R = b.Deferred().always(function () {
          delete P.elem;
        }),
        P = function () {
          if (x) return !1;
          for (
            var X = Jo || xh(),
              G = Math.max(0, H.startTime + H.duration - X),
              te = G / H.duration || 0,
              Fe = 1 - te,
              Je = 0,
              Ue = H.tweens.length;
            Je < Ue;
            Je++
          )
            H.tweens[Je].run(Fe);
          return (
            R.notifyWith(s, [H, Fe, G]),
            Fe < 1 && Ue
              ? G
              : (Ue || R.notifyWith(s, [H, 1, 0]), R.resolveWith(s, [H]), !1)
          );
        },
        H = R.promise({
          elem: s,
          props: b.extend({}, u),
          opts: b.extend(
            !0,
            { specialEasing: {}, easing: b.easing._default },
            f
          ),
          originalProperties: u,
          originalOptions: f,
          startTime: Jo || xh(),
          duration: f.duration,
          tweens: [],
          createTween: function (X, G) {
            var te = b.Tween(
              s,
              H.opts,
              X,
              G,
              H.opts.specialEasing[X] || H.opts.easing
            );
            return H.tweens.push(te), te;
          },
          stop: function (X) {
            var G = 0,
              te = X ? H.tweens.length : 0;
            if (x) return this;
            for (x = !0; G < te; G++) H.tweens[G].run(1);
            return (
              X
                ? (R.notifyWith(s, [H, 1, 0]), R.resolveWith(s, [H, X]))
                : R.rejectWith(s, [H, X]),
              this
            );
          },
        }),
        q = H.props;
      for (Y0(q, H.opts.specialEasing); C < D; C++)
        if (((g = Xi.prefilters[C].call(H, s, q, H.opts)), g))
          return (
            A(g.stop) &&
              (b._queueHooks(H.elem, H.opts.queue).stop = g.stop.bind(g)),
            g
          );
      return (
        b.map(q, Ch, H),
        A(H.opts.start) && H.opts.start.call(s, H),
        H.progress(H.opts.progress)
          .done(H.opts.done, H.opts.complete)
          .fail(H.opts.fail)
          .always(H.opts.always),
        b.fx.timer(b.extend(P, { elem: s, anim: H, queue: H.opts.queue })),
        H
      );
    }
    (b.Animation = b.extend(Xi, {
      tweeners: {
        "*": [
          function (s, u) {
            var f = this.createTween(s, u);
            return oh(f.elem, s, Lr.exec(u), f), f;
          },
        ],
      },
      tweener: function (s, u) {
        A(s) ? ((u = s), (s = ["*"])) : (s = s.match(hn));
        for (var f, g = 0, x = s.length; g < x; g++)
          (f = s[g]),
            (Xi.tweeners[f] = Xi.tweeners[f] || []),
            Xi.tweeners[f].unshift(u);
      },
      prefilters: [G0],
      prefilter: function (s, u) {
        u ? Xi.prefilters.unshift(s) : Xi.prefilters.push(s);
      },
    })),
      (b.speed = function (s, u, f) {
        var g =
          s && typeof s == "object"
            ? b.extend({}, s)
            : {
                complete: f || (!f && u) || (A(s) && s),
                duration: s,
                easing: (f && u) || (u && !A(u) && u),
              };
        return (
          b.fx.off
            ? (g.duration = 0)
            : typeof g.duration != "number" &&
              (g.duration in b.fx.speeds
                ? (g.duration = b.fx.speeds[g.duration])
                : (g.duration = b.fx.speeds._default)),
          (g.queue == null || g.queue === !0) && (g.queue = "fx"),
          (g.old = g.complete),
          (g.complete = function () {
            A(g.old) && g.old.call(this), g.queue && b.dequeue(this, g.queue);
          }),
          g
        );
      }),
      b.fn.extend({
        fadeTo: function (s, u, f, g) {
          return this.filter(Qa)
            .css("opacity", 0)
            .show()
            .end()
            .animate({ opacity: u }, s, f, g);
        },
        animate: function (s, u, f, g) {
          var x = b.isEmptyObject(s),
            C = b.speed(u, f, g),
            D = function () {
              var R = Xi(this, b.extend({}, s), C);
              (x || Ce.get(this, "finish")) && R.stop(!0);
            };
          return (
            (D.finish = D),
            x || C.queue === !1 ? this.each(D) : this.queue(C.queue, D)
          );
        },
        stop: function (s, u, f) {
          var g = function (x) {
            var C = x.stop;
            delete x.stop, C(f);
          };
          return (
            typeof s != "string" && ((f = u), (u = s), (s = void 0)),
            u && this.queue(s || "fx", []),
            this.each(function () {
              var x = !0,
                C = s != null && s + "queueHooks",
                D = b.timers,
                R = Ce.get(this);
              if (C) R[C] && R[C].stop && g(R[C]);
              else for (C in R) R[C] && R[C].stop && $0.test(C) && g(R[C]);
              for (C = D.length; C--; )
                D[C].elem === this &&
                  (s == null || D[C].queue === s) &&
                  (D[C].anim.stop(f), (x = !1), D.splice(C, 1));
              (x || !f) && b.dequeue(this, s);
            })
          );
        },
        finish: function (s) {
          return (
            s !== !1 && (s = s || "fx"),
            this.each(function () {
              var u,
                f = Ce.get(this),
                g = f[s + "queue"],
                x = f[s + "queueHooks"],
                C = b.timers,
                D = g ? g.length : 0;
              for (
                f.finish = !0,
                  b.queue(this, s, []),
                  x && x.stop && x.stop.call(this, !0),
                  u = C.length;
                u--;

              )
                C[u].elem === this &&
                  C[u].queue === s &&
                  (C[u].anim.stop(!0), C.splice(u, 1));
              for (u = 0; u < D; u++)
                g[u] && g[u].finish && g[u].finish.call(this);
              delete f.finish;
            })
          );
        },
      }),
      b.each(["toggle", "show", "hide"], function (s, u) {
        var f = b.fn[u];
        b.fn[u] = function (g, x, C) {
          return g == null || typeof g == "boolean"
            ? f.apply(this, arguments)
            : this.animate(es(u, !0), g, x, C);
        };
      }),
      b.each(
        {
          slideDown: es("show"),
          slideUp: es("hide"),
          slideToggle: es("toggle"),
          fadeIn: { opacity: "show" },
          fadeOut: { opacity: "hide" },
          fadeToggle: { opacity: "toggle" },
        },
        function (s, u) {
          b.fn[s] = function (f, g, x) {
            return this.animate(u, f, g, x);
          };
        }
      ),
      (b.timers = []),
      (b.fx.tick = function () {
        var s,
          u = 0,
          f = b.timers;
        for (Jo = Date.now(); u < f.length; u++)
          (s = f[u]), !s() && f[u] === s && f.splice(u--, 1);
        f.length || b.fx.stop(), (Jo = void 0);
      }),
      (b.fx.timer = function (s) {
        b.timers.push(s), b.fx.start();
      }),
      (b.fx.interval = 13),
      (b.fx.start = function () {
        Ja || ((Ja = !0), sc());
      }),
      (b.fx.stop = function () {
        Ja = null;
      }),
      (b.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
      (b.fn.delay = function (s, u) {
        return (
          (s = (b.fx && b.fx.speeds[s]) || s),
          (u = u || "fx"),
          this.queue(u, function (f, g) {
            var x = n.setTimeout(f, s);
            g.stop = function () {
              n.clearTimeout(x);
            };
          })
        );
      }),
      (function () {
        var s = z.createElement("input"),
          u = z.createElement("select"),
          f = u.appendChild(z.createElement("option"));
        (s.type = "checkbox"),
          (M.checkOn = s.value !== ""),
          (M.optSelected = f.selected),
          (s = z.createElement("input")),
          (s.value = "t"),
          (s.type = "radio"),
          (M.radioValue = s.value === "t");
      })();
    var wh,
      jr = b.expr.attrHandle;
    b.fn.extend({
      attr: function (s, u) {
        return In(this, b.attr, s, u, arguments.length > 1);
      },
      removeAttr: function (s) {
        return this.each(function () {
          b.removeAttr(this, s);
        });
      },
    }),
      b.extend({
        attr: function (s, u, f) {
          var g,
            x,
            C = s.nodeType;
          if (!(C === 3 || C === 8 || C === 2)) {
            if (typeof s.getAttribute > "u") return b.prop(s, u, f);
            if (
              ((C !== 1 || !b.isXMLDoc(s)) &&
                (x =
                  b.attrHooks[u.toLowerCase()] ||
                  (b.expr.match.bool.test(u) ? wh : void 0)),
              f !== void 0)
            ) {
              if (f === null) {
                b.removeAttr(s, u);
                return;
              }
              return x && "set" in x && (g = x.set(s, f, u)) !== void 0
                ? g
                : (s.setAttribute(u, f + ""), f);
            }
            return x && "get" in x && (g = x.get(s, u)) !== null
              ? g
              : ((g = b.find.attr(s, u)), g ?? void 0);
          }
        },
        attrHooks: {
          type: {
            set: function (s, u) {
              if (!M.radioValue && u === "radio" && be(s, "input")) {
                var f = s.value;
                return s.setAttribute("type", u), f && (s.value = f), u;
              }
            },
          },
        },
        removeAttr: function (s, u) {
          var f,
            g = 0,
            x = u && u.match(hn);
          if (x && s.nodeType === 1)
            for (; (f = x[g++]); ) s.removeAttribute(f);
        },
      }),
      (wh = {
        set: function (s, u, f) {
          return u === !1 ? b.removeAttr(s, f) : s.setAttribute(f, f), f;
        },
      }),
      b.each(b.expr.match.bool.source.match(/\w+/g), function (s, u) {
        var f = jr[u] || b.find.attr;
        jr[u] = function (g, x, C) {
          var D,
            R,
            P = x.toLowerCase();
          return (
            C ||
              ((R = jr[P]),
              (jr[P] = D),
              (D = f(g, x, C) != null ? P : null),
              (jr[P] = R)),
            D
          );
        };
      });
    var q0 = /^(?:input|select|textarea|button)$/i,
      K0 = /^(?:a|area)$/i;
    b.fn.extend({
      prop: function (s, u) {
        return In(this, b.prop, s, u, arguments.length > 1);
      },
      removeProp: function (s) {
        return this.each(function () {
          delete this[b.propFix[s] || s];
        });
      },
    }),
      b.extend({
        prop: function (s, u, f) {
          var g,
            x,
            C = s.nodeType;
          if (!(C === 3 || C === 8 || C === 2))
            return (
              (C !== 1 || !b.isXMLDoc(s)) &&
                ((u = b.propFix[u] || u), (x = b.propHooks[u])),
              f !== void 0
                ? x && "set" in x && (g = x.set(s, f, u)) !== void 0
                  ? g
                  : (s[u] = f)
                : x && "get" in x && (g = x.get(s, u)) !== null
                ? g
                : s[u]
            );
        },
        propHooks: {
          tabIndex: {
            get: function (s) {
              var u = b.find.attr(s, "tabindex");
              return u
                ? parseInt(u, 10)
                : q0.test(s.nodeName) || (K0.test(s.nodeName) && s.href)
                ? 0
                : -1;
            },
          },
        },
        propFix: { for: "htmlFor", class: "className" },
      }),
      M.optSelected ||
        (b.propHooks.selected = {
          get: function (s) {
            var u = s.parentNode;
            return u && u.parentNode && u.parentNode.selectedIndex, null;
          },
          set: function (s) {
            var u = s.parentNode;
            u && (u.selectedIndex, u.parentNode && u.parentNode.selectedIndex);
          },
        }),
      b.each(
        [
          "tabIndex",
          "readOnly",
          "maxLength",
          "cellSpacing",
          "cellPadding",
          "rowSpan",
          "colSpan",
          "useMap",
          "frameBorder",
          "contentEditable",
        ],
        function () {
          b.propFix[this.toLowerCase()] = this;
        }
      );
    function vo(s) {
      var u = s.match(hn) || [];
      return u.join(" ");
    }
    function yo(s) {
      return (s.getAttribute && s.getAttribute("class")) || "";
    }
    function lc(s) {
      return Array.isArray(s)
        ? s
        : typeof s == "string"
        ? s.match(hn) || []
        : [];
    }
    b.fn.extend({
      addClass: function (s) {
        var u, f, g, x, C, D;
        return A(s)
          ? this.each(function (R) {
              b(this).addClass(s.call(this, R, yo(this)));
            })
          : ((u = lc(s)),
            u.length
              ? this.each(function () {
                  if (
                    ((g = yo(this)),
                    (f = this.nodeType === 1 && " " + vo(g) + " "),
                    f)
                  ) {
                    for (C = 0; C < u.length; C++)
                      (x = u[C]),
                        f.indexOf(" " + x + " ") < 0 && (f += x + " ");
                    (D = vo(f)), g !== D && this.setAttribute("class", D);
                  }
                })
              : this);
      },
      removeClass: function (s) {
        var u, f, g, x, C, D;
        return A(s)
          ? this.each(function (R) {
              b(this).removeClass(s.call(this, R, yo(this)));
            })
          : arguments.length
          ? ((u = lc(s)),
            u.length
              ? this.each(function () {
                  if (
                    ((g = yo(this)),
                    (f = this.nodeType === 1 && " " + vo(g) + " "),
                    f)
                  ) {
                    for (C = 0; C < u.length; C++)
                      for (x = u[C]; f.indexOf(" " + x + " ") > -1; )
                        f = f.replace(" " + x + " ", " ");
                    (D = vo(f)), g !== D && this.setAttribute("class", D);
                  }
                })
              : this)
          : this.attr("class", "");
      },
      toggleClass: function (s, u) {
        var f,
          g,
          x,
          C,
          D = typeof s,
          R = D === "string" || Array.isArray(s);
        return A(s)
          ? this.each(function (P) {
              b(this).toggleClass(s.call(this, P, yo(this), u), u);
            })
          : typeof u == "boolean" && R
          ? u
            ? this.addClass(s)
            : this.removeClass(s)
          : ((f = lc(s)),
            this.each(function () {
              if (R)
                for (C = b(this), x = 0; x < f.length; x++)
                  (g = f[x]), C.hasClass(g) ? C.removeClass(g) : C.addClass(g);
              else
                (s === void 0 || D === "boolean") &&
                  ((g = yo(this)),
                  g && Ce.set(this, "__className__", g),
                  this.setAttribute &&
                    this.setAttribute(
                      "class",
                      g || s === !1 ? "" : Ce.get(this, "__className__") || ""
                    ));
            }));
      },
      hasClass: function (s) {
        var u,
          f,
          g = 0;
        for (u = " " + s + " "; (f = this[g++]); )
          if (f.nodeType === 1 && (" " + vo(yo(f)) + " ").indexOf(u) > -1)
            return !0;
        return !1;
      },
    });
    var Q0 = /\r/g;
    b.fn.extend({
      val: function (s) {
        var u,
          f,
          g,
          x = this[0];
        return arguments.length
          ? ((g = A(s)),
            this.each(function (C) {
              var D;
              this.nodeType === 1 &&
                (g ? (D = s.call(this, C, b(this).val())) : (D = s),
                D == null
                  ? (D = "")
                  : typeof D == "number"
                  ? (D += "")
                  : Array.isArray(D) &&
                    (D = b.map(D, function (R) {
                      return R == null ? "" : R + "";
                    })),
                (u =
                  b.valHooks[this.type] ||
                  b.valHooks[this.nodeName.toLowerCase()]),
                (!u || !("set" in u) || u.set(this, D, "value") === void 0) &&
                  (this.value = D));
            }))
          : x
          ? ((u = b.valHooks[x.type] || b.valHooks[x.nodeName.toLowerCase()]),
            u && "get" in u && (f = u.get(x, "value")) !== void 0
              ? f
              : ((f = x.value),
                typeof f == "string" ? f.replace(Q0, "") : f ?? ""))
          : void 0;
      },
    }),
      b.extend({
        valHooks: {
          option: {
            get: function (s) {
              var u = b.find.attr(s, "value");
              return u ?? vo(b.text(s));
            },
          },
          select: {
            get: function (s) {
              var u,
                f,
                g,
                x = s.options,
                C = s.selectedIndex,
                D = s.type === "select-one",
                R = D ? null : [],
                P = D ? C + 1 : x.length;
              for (C < 0 ? (g = P) : (g = D ? C : 0); g < P; g++)
                if (
                  ((f = x[g]),
                  (f.selected || g === C) &&
                    !f.disabled &&
                    (!f.parentNode.disabled || !be(f.parentNode, "optgroup")))
                ) {
                  if (((u = b(f).val()), D)) return u;
                  R.push(u);
                }
              return R;
            },
            set: function (s, u) {
              for (
                var f, g, x = s.options, C = b.makeArray(u), D = x.length;
                D--;

              )
                (g = x[D]),
                  (g.selected = b.inArray(b.valHooks.option.get(g), C) > -1) &&
                    (f = !0);
              return f || (s.selectedIndex = -1), C;
            },
          },
        },
      }),
      b.each(["radio", "checkbox"], function () {
        (b.valHooks[this] = {
          set: function (s, u) {
            if (Array.isArray(u))
              return (s.checked = b.inArray(b(s).val(), u) > -1);
          },
        }),
          M.checkOn ||
            (b.valHooks[this].get = function (s) {
              return s.getAttribute("value") === null ? "on" : s.value;
            });
      });
    var zr = n.location,
      Dh = { guid: Date.now() },
      cc = /\?/;
    b.parseXML = function (s) {
      var u, f;
      if (!s || typeof s != "string") return null;
      try {
        u = new n.DOMParser().parseFromString(s, "text/xml");
      } catch {}
      return (
        (f = u && u.getElementsByTagName("parsererror")[0]),
        (!u || f) &&
          b.error(
            "Invalid XML: " +
              (f
                ? b.map(f.childNodes, function (g) {
                    return g.textContent;
                  }).join(`
`)
                : s)
          ),
        u
      );
    };
    var Sh = /^(?:focusinfocus|focusoutblur)$/,
      Mh = function (s) {
        s.stopPropagation();
      };
    b.extend(b.event, {
      trigger: function (s, u, f, g) {
        var x,
          C,
          D,
          R,
          P,
          H,
          q,
          X,
          G = [f || z],
          te = v.call(s, "type") ? s.type : s,
          Fe = v.call(s, "namespace") ? s.namespace.split(".") : [];
        if (
          ((C = X = D = f = f || z),
          !(f.nodeType === 3 || f.nodeType === 8) &&
            !Sh.test(te + b.event.triggered) &&
            (te.indexOf(".") > -1 &&
              ((Fe = te.split(".")), (te = Fe.shift()), Fe.sort()),
            (P = te.indexOf(":") < 0 && "on" + te),
            (s = s[b.expando] ? s : new b.Event(te, typeof s == "object" && s)),
            (s.isTrigger = g ? 2 : 3),
            (s.namespace = Fe.join(".")),
            (s.rnamespace = s.namespace
              ? new RegExp("(^|\\.)" + Fe.join("\\.(?:.*\\.|)") + "(\\.|$)")
              : null),
            (s.result = void 0),
            s.target || (s.target = f),
            (u = u == null ? [s] : b.makeArray(u, [s])),
            (q = b.event.special[te] || {}),
            !(!g && q.trigger && q.trigger.apply(f, u) === !1)))
        ) {
          if (!g && !q.noBubble && !j(f)) {
            for (
              R = q.delegateType || te, Sh.test(R + te) || (C = C.parentNode);
              C;
              C = C.parentNode
            )
              G.push(C), (D = C);
            D === (f.ownerDocument || z) &&
              G.push(D.defaultView || D.parentWindow || n);
          }
          for (x = 0; (C = G[x++]) && !s.isPropagationStopped(); )
            (X = C),
              (s.type = x > 1 ? R : q.bindType || te),
              (H =
                (Ce.get(C, "events") || Object.create(null))[s.type] &&
                Ce.get(C, "handle")),
              H && H.apply(C, u),
              (H = P && C[P]),
              H &&
                H.apply &&
                Nr(C) &&
                ((s.result = H.apply(C, u)),
                s.result === !1 && s.preventDefault());
          return (
            (s.type = te),
            !g &&
              !s.isDefaultPrevented() &&
              (!q._default || q._default.apply(G.pop(), u) === !1) &&
              Nr(f) &&
              P &&
              A(f[te]) &&
              !j(f) &&
              ((D = f[P]),
              D && (f[P] = null),
              (b.event.triggered = te),
              s.isPropagationStopped() && X.addEventListener(te, Mh),
              f[te](),
              s.isPropagationStopped() && X.removeEventListener(te, Mh),
              (b.event.triggered = void 0),
              D && (f[P] = D)),
            s.result
          );
        }
      },
      simulate: function (s, u, f) {
        var g = b.extend(new b.Event(), f, { type: s, isSimulated: !0 });
        b.event.trigger(g, null, u);
      },
    }),
      b.fn.extend({
        trigger: function (s, u) {
          return this.each(function () {
            b.event.trigger(s, u, this);
          });
        },
        triggerHandler: function (s, u) {
          var f = this[0];
          if (f) return b.event.trigger(s, u, f, !0);
        },
      });
    var X0 = /\[\]$/,
      Th = /\r?\n/g,
      Z0 = /^(?:submit|button|image|reset|file)$/i,
      J0 = /^(?:input|select|textarea|keygen)/i;
    function dc(s, u, f, g) {
      var x;
      if (Array.isArray(u))
        b.each(u, function (C, D) {
          f || X0.test(s)
            ? g(s, D)
            : dc(
                s + "[" + (typeof D == "object" && D != null ? C : "") + "]",
                D,
                f,
                g
              );
        });
      else if (!f && Ve(u) === "object")
        for (x in u) dc(s + "[" + x + "]", u[x], f, g);
      else g(s, u);
    }
    (b.param = function (s, u) {
      var f,
        g = [],
        x = function (C, D) {
          var R = A(D) ? D() : D;
          g[g.length] =
            encodeURIComponent(C) + "=" + encodeURIComponent(R ?? "");
        };
      if (s == null) return "";
      if (Array.isArray(s) || (s.jquery && !b.isPlainObject(s)))
        b.each(s, function () {
          x(this.name, this.value);
        });
      else for (f in s) dc(f, s[f], u, x);
      return g.join("&");
    }),
      b.fn.extend({
        serialize: function () {
          return b.param(this.serializeArray());
        },
        serializeArray: function () {
          return this.map(function () {
            var s = b.prop(this, "elements");
            return s ? b.makeArray(s) : this;
          })
            .filter(function () {
              var s = this.type;
              return (
                this.name &&
                !b(this).is(":disabled") &&
                J0.test(this.nodeName) &&
                !Z0.test(s) &&
                (this.checked || !Br.test(s))
              );
            })
            .map(function (s, u) {
              var f = b(this).val();
              return f == null
                ? null
                : Array.isArray(f)
                ? b.map(f, function (g) {
                    return {
                      name: u.name,
                      value: g.replace(
                        Th,
                        `\r
`
                      ),
                    };
                  })
                : {
                    name: u.name,
                    value: f.replace(
                      Th,
                      `\r
`
                    ),
                  };
            })
            .get();
        },
      });
    var e_ = /%20/g,
      t_ = /#.*$/,
      i_ = /([?&])_=[^&]*/,
      n_ = /^(.*?):[ \t]*([^\r\n]*)$/gm,
      o_ = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      r_ = /^(?:GET|HEAD)$/,
      a_ = /^\/\//,
      Eh = {},
      uc = {},
      kh = "*/".concat("*"),
      hc = z.createElement("a");
    hc.href = zr.href;
    function Oh(s) {
      return function (u, f) {
        typeof u != "string" && ((f = u), (u = "*"));
        var g,
          x = 0,
          C = u.toLowerCase().match(hn) || [];
        if (A(f))
          for (; (g = C[x++]); )
            g[0] === "+"
              ? ((g = g.slice(1) || "*"), (s[g] = s[g] || []).unshift(f))
              : (s[g] = s[g] || []).push(f);
      };
    }
    function Ih(s, u, f, g) {
      var x = {},
        C = s === uc;
      function D(R) {
        var P;
        return (
          (x[R] = !0),
          b.each(s[R] || [], function (H, q) {
            var X = q(u, f, g);
            if (typeof X == "string" && !C && !x[X])
              return u.dataTypes.unshift(X), D(X), !1;
            if (C) return !(P = X);
          }),
          P
        );
      }
      return D(u.dataTypes[0]) || (!x["*"] && D("*"));
    }
    function pc(s, u) {
      var f,
        g,
        x = b.ajaxSettings.flatOptions || {};
      for (f in u) u[f] !== void 0 && ((x[f] ? s : g || (g = {}))[f] = u[f]);
      return g && b.extend(!0, s, g), s;
    }
    function s_(s, u, f) {
      for (var g, x, C, D, R = s.contents, P = s.dataTypes; P[0] === "*"; )
        P.shift(),
          g === void 0 &&
            (g = s.mimeType || u.getResponseHeader("Content-Type"));
      if (g) {
        for (x in R)
          if (R[x] && R[x].test(g)) {
            P.unshift(x);
            break;
          }
      }
      if (P[0] in f) C = P[0];
      else {
        for (x in f) {
          if (!P[0] || s.converters[x + " " + P[0]]) {
            C = x;
            break;
          }
          D || (D = x);
        }
        C = C || D;
      }
      if (C) return C !== P[0] && P.unshift(C), f[C];
    }
    function l_(s, u, f, g) {
      var x,
        C,
        D,
        R,
        P,
        H = {},
        q = s.dataTypes.slice();
      if (q[1]) for (D in s.converters) H[D.toLowerCase()] = s.converters[D];
      for (C = q.shift(); C; )
        if (
          (s.responseFields[C] && (f[s.responseFields[C]] = u),
          !P && g && s.dataFilter && (u = s.dataFilter(u, s.dataType)),
          (P = C),
          (C = q.shift()),
          C)
        ) {
          if (C === "*") C = P;
          else if (P !== "*" && P !== C) {
            if (((D = H[P + " " + C] || H["* " + C]), !D)) {
              for (x in H)
                if (
                  ((R = x.split(" ")),
                  R[1] === C && ((D = H[P + " " + R[0]] || H["* " + R[0]]), D))
                ) {
                  D === !0
                    ? (D = H[x])
                    : H[x] !== !0 && ((C = R[0]), q.unshift(R[1]));
                  break;
                }
            }
            if (D !== !0)
              if (D && s.throws) u = D(u);
              else
                try {
                  u = D(u);
                } catch (X) {
                  return {
                    state: "parsererror",
                    error: D ? X : "No conversion from " + P + " to " + C,
                  };
                }
          }
        }
      return { state: "success", data: u };
    }
    b.extend({
      active: 0,
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: zr.href,
        type: "GET",
        isLocal: o_.test(zr.protocol),
        global: !0,
        processData: !0,
        async: !0,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        accepts: {
          "*": kh,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript",
        },
        contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON",
        },
        converters: {
          "* text": String,
          "text html": !0,
          "text json": JSON.parse,
          "text xml": b.parseXML,
        },
        flatOptions: { url: !0, context: !0 },
      },
      ajaxSetup: function (s, u) {
        return u ? pc(pc(s, b.ajaxSettings), u) : pc(b.ajaxSettings, s);
      },
      ajaxPrefilter: Oh(Eh),
      ajaxTransport: Oh(uc),
      ajax: function (s, u) {
        typeof s == "object" && ((u = s), (s = void 0)), (u = u || {});
        var f,
          g,
          x,
          C,
          D,
          R,
          P,
          H,
          q,
          X,
          G = b.ajaxSetup({}, u),
          te = G.context || G,
          Fe = G.context && (te.nodeType || te.jquery) ? b(te) : b.event,
          Je = b.Deferred(),
          Ue = b.Callbacks("once memory"),
          qt = G.statusCode || {},
          Ht = {},
          mn = {},
          fn = "canceled",
          Qe = {
            readyState: 0,
            getResponseHeader: function (tt) {
              var Tt;
              if (P) {
                if (!C)
                  for (C = {}; (Tt = n_.exec(x)); )
                    C[Tt[1].toLowerCase() + " "] = (
                      C[Tt[1].toLowerCase() + " "] || []
                    ).concat(Tt[2]);
                Tt = C[tt.toLowerCase() + " "];
              }
              return Tt == null ? null : Tt.join(", ");
            },
            getAllResponseHeaders: function () {
              return P ? x : null;
            },
            setRequestHeader: function (tt, Tt) {
              return (
                P == null &&
                  ((tt = mn[tt.toLowerCase()] = mn[tt.toLowerCase()] || tt),
                  (Ht[tt] = Tt)),
                this
              );
            },
            overrideMimeType: function (tt) {
              return P == null && (G.mimeType = tt), this;
            },
            statusCode: function (tt) {
              var Tt;
              if (tt)
                if (P) Qe.always(tt[Qe.status]);
                else for (Tt in tt) qt[Tt] = [qt[Tt], tt[Tt]];
              return this;
            },
            abort: function (tt) {
              var Tt = tt || fn;
              return f && f.abort(Tt), xo(0, Tt), this;
            },
          };
        if (
          (Je.promise(Qe),
          (G.url = ((s || G.url || zr.href) + "").replace(
            a_,
            zr.protocol + "//"
          )),
          (G.type = u.method || u.type || G.method || G.type),
          (G.dataTypes = (G.dataType || "*").toLowerCase().match(hn) || [""]),
          G.crossDomain == null)
        ) {
          R = z.createElement("a");
          try {
            (R.href = G.url),
              (R.href = R.href),
              (G.crossDomain =
                hc.protocol + "//" + hc.host != R.protocol + "//" + R.host);
          } catch {
            G.crossDomain = !0;
          }
        }
        if (
          (G.data &&
            G.processData &&
            typeof G.data != "string" &&
            (G.data = b.param(G.data, G.traditional)),
          Ih(Eh, G, u, Qe),
          P)
        )
          return Qe;
        (H = b.event && G.global),
          H && b.active++ === 0 && b.event.trigger("ajaxStart"),
          (G.type = G.type.toUpperCase()),
          (G.hasContent = !r_.test(G.type)),
          (g = G.url.replace(t_, "")),
          G.hasContent
            ? G.data &&
              G.processData &&
              (G.contentType || "").indexOf(
                "application/x-www-form-urlencoded"
              ) === 0 &&
              (G.data = G.data.replace(e_, "+"))
            : ((X = G.url.slice(g.length)),
              G.data &&
                (G.processData || typeof G.data == "string") &&
                ((g += (cc.test(g) ? "&" : "?") + G.data), delete G.data),
              G.cache === !1 &&
                ((g = g.replace(i_, "$1")),
                (X = (cc.test(g) ? "&" : "?") + "_=" + Dh.guid++ + X)),
              (G.url = g + X)),
          G.ifModified &&
            (b.lastModified[g] &&
              Qe.setRequestHeader("If-Modified-Since", b.lastModified[g]),
            b.etag[g] && Qe.setRequestHeader("If-None-Match", b.etag[g])),
          ((G.data && G.hasContent && G.contentType !== !1) || u.contentType) &&
            Qe.setRequestHeader("Content-Type", G.contentType),
          Qe.setRequestHeader(
            "Accept",
            G.dataTypes[0] && G.accepts[G.dataTypes[0]]
              ? G.accepts[G.dataTypes[0]] +
                  (G.dataTypes[0] !== "*" ? ", " + kh + "; q=0.01" : "")
              : G.accepts["*"]
          );
        for (q in G.headers) Qe.setRequestHeader(q, G.headers[q]);
        if (G.beforeSend && (G.beforeSend.call(te, Qe, G) === !1 || P))
          return Qe.abort();
        if (
          ((fn = "abort"),
          Ue.add(G.complete),
          Qe.done(G.success),
          Qe.fail(G.error),
          (f = Ih(uc, G, u, Qe)),
          !f)
        )
          xo(-1, "No Transport");
        else {
          if (((Qe.readyState = 1), H && Fe.trigger("ajaxSend", [Qe, G]), P))
            return Qe;
          G.async &&
            G.timeout > 0 &&
            (D = n.setTimeout(function () {
              Qe.abort("timeout");
            }, G.timeout));
          try {
            (P = !1), f.send(Ht, xo);
          } catch (tt) {
            if (P) throw tt;
            xo(-1, tt);
          }
        }
        function xo(tt, Tt, Wr, fc) {
          var gn,
            $r,
            _n,
            Qn,
            Xn,
            Vi = Tt;
          P ||
            ((P = !0),
            D && n.clearTimeout(D),
            (f = void 0),
            (x = fc || ""),
            (Qe.readyState = tt > 0 ? 4 : 0),
            (gn = (tt >= 200 && tt < 300) || tt === 304),
            Wr && (Qn = s_(G, Qe, Wr)),
            !gn &&
              b.inArray("script", G.dataTypes) > -1 &&
              b.inArray("json", G.dataTypes) < 0 &&
              (G.converters["text script"] = function () {}),
            (Qn = l_(G, Qn, Qe, gn)),
            gn
              ? (G.ifModified &&
                  ((Xn = Qe.getResponseHeader("Last-Modified")),
                  Xn && (b.lastModified[g] = Xn),
                  (Xn = Qe.getResponseHeader("etag")),
                  Xn && (b.etag[g] = Xn)),
                tt === 204 || G.type === "HEAD"
                  ? (Vi = "nocontent")
                  : tt === 304
                  ? (Vi = "notmodified")
                  : ((Vi = Qn.state),
                    ($r = Qn.data),
                    (_n = Qn.error),
                    (gn = !_n)))
              : ((_n = Vi),
                (tt || !Vi) && ((Vi = "error"), tt < 0 && (tt = 0))),
            (Qe.status = tt),
            (Qe.statusText = (Tt || Vi) + ""),
            gn
              ? Je.resolveWith(te, [$r, Vi, Qe])
              : Je.rejectWith(te, [Qe, Vi, _n]),
            Qe.statusCode(qt),
            (qt = void 0),
            H &&
              Fe.trigger(gn ? "ajaxSuccess" : "ajaxError", [
                Qe,
                G,
                gn ? $r : _n,
              ]),
            Ue.fireWith(te, [Qe, Vi]),
            H &&
              (Fe.trigger("ajaxComplete", [Qe, G]),
              --b.active || b.event.trigger("ajaxStop")));
        }
        return Qe;
      },
      getJSON: function (s, u, f) {
        return b.get(s, u, f, "json");
      },
      getScript: function (s, u) {
        return b.get(s, void 0, u, "script");
      },
    }),
      b.each(["get", "post"], function (s, u) {
        b[u] = function (f, g, x, C) {
          return (
            A(g) && ((C = C || x), (x = g), (g = void 0)),
            b.ajax(
              b.extend(
                { url: f, type: u, dataType: C, data: g, success: x },
                b.isPlainObject(f) && f
              )
            )
          );
        };
      }),
      b.ajaxPrefilter(function (s) {
        var u;
        for (u in s.headers)
          u.toLowerCase() === "content-type" &&
            (s.contentType = s.headers[u] || "");
      }),
      (b._evalUrl = function (s, u, f) {
        return b.ajax({
          url: s,
          type: "GET",
          dataType: "script",
          cache: !0,
          async: !1,
          global: !1,
          converters: { "text script": function () {} },
          dataFilter: function (g) {
            b.globalEval(g, u, f);
          },
        });
      }),
      b.fn.extend({
        wrapAll: function (s) {
          var u;
          return (
            this[0] &&
              (A(s) && (s = s.call(this[0])),
              (u = b(s, this[0].ownerDocument).eq(0).clone(!0)),
              this[0].parentNode && u.insertBefore(this[0]),
              u
                .map(function () {
                  for (var f = this; f.firstElementChild; )
                    f = f.firstElementChild;
                  return f;
                })
                .append(this)),
            this
          );
        },
        wrapInner: function (s) {
          return A(s)
            ? this.each(function (u) {
                b(this).wrapInner(s.call(this, u));
              })
            : this.each(function () {
                var u = b(this),
                  f = u.contents();
                f.length ? f.wrapAll(s) : u.append(s);
              });
        },
        wrap: function (s) {
          var u = A(s);
          return this.each(function (f) {
            b(this).wrapAll(u ? s.call(this, f) : s);
          });
        },
        unwrap: function (s) {
          return (
            this.parent(s)
              .not("body")
              .each(function () {
                b(this).replaceWith(this.childNodes);
              }),
            this
          );
        },
      }),
      (b.expr.pseudos.hidden = function (s) {
        return !b.expr.pseudos.visible(s);
      }),
      (b.expr.pseudos.visible = function (s) {
        return !!(s.offsetWidth || s.offsetHeight || s.getClientRects().length);
      }),
      (b.ajaxSettings.xhr = function () {
        try {
          return new n.XMLHttpRequest();
        } catch {}
      });
    var c_ = { 0: 200, 1223: 204 },
      Ur = b.ajaxSettings.xhr();
    (M.cors = !!Ur && "withCredentials" in Ur),
      (M.ajax = Ur = !!Ur),
      b.ajaxTransport(function (s) {
        var u, f;
        if (M.cors || (Ur && !s.crossDomain))
          return {
            send: function (g, x) {
              var C,
                D = s.xhr();
              if (
                (D.open(s.type, s.url, s.async, s.username, s.password),
                s.xhrFields)
              )
                for (C in s.xhrFields) D[C] = s.xhrFields[C];
              s.mimeType &&
                D.overrideMimeType &&
                D.overrideMimeType(s.mimeType),
                !s.crossDomain &&
                  !g["X-Requested-With"] &&
                  (g["X-Requested-With"] = "XMLHttpRequest");
              for (C in g) D.setRequestHeader(C, g[C]);
              (u = function (R) {
                return function () {
                  u &&
                    ((u =
                      f =
                      D.onload =
                      D.onerror =
                      D.onabort =
                      D.ontimeout =
                      D.onreadystatechange =
                        null),
                    R === "abort"
                      ? D.abort()
                      : R === "error"
                      ? typeof D.status != "number"
                        ? x(0, "error")
                        : x(D.status, D.statusText)
                      : x(
                          c_[D.status] || D.status,
                          D.statusText,
                          (D.responseType || "text") !== "text" ||
                            typeof D.responseText != "string"
                            ? { binary: D.response }
                            : { text: D.responseText },
                          D.getAllResponseHeaders()
                        ));
                };
              }),
                (D.onload = u()),
                (f = D.onerror = D.ontimeout = u("error")),
                D.onabort !== void 0
                  ? (D.onabort = f)
                  : (D.onreadystatechange = function () {
                      D.readyState === 4 &&
                        n.setTimeout(function () {
                          u && f();
                        });
                    }),
                (u = u("abort"));
              try {
                D.send((s.hasContent && s.data) || null);
              } catch (R) {
                if (u) throw R;
              }
            },
            abort: function () {
              u && u();
            },
          };
      }),
      b.ajaxPrefilter(function (s) {
        s.crossDomain && (s.contents.script = !1);
      }),
      b.ajaxSetup({
        accepts: {
          script:
            "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
        },
        contents: { script: /\b(?:java|ecma)script\b/ },
        converters: {
          "text script": function (s) {
            return b.globalEval(s), s;
          },
        },
      }),
      b.ajaxPrefilter("script", function (s) {
        s.cache === void 0 && (s.cache = !1), s.crossDomain && (s.type = "GET");
      }),
      b.ajaxTransport("script", function (s) {
        if (s.crossDomain || s.scriptAttrs) {
          var u, f;
          return {
            send: function (g, x) {
              (u = b("<script>")
                .attr(s.scriptAttrs || {})
                .prop({ charset: s.scriptCharset, src: s.url })
                .on(
                  "load error",
                  (f = function (C) {
                    u.remove(),
                      (f = null),
                      C && x(C.type === "error" ? 404 : 200, C.type);
                  })
                )),
                z.head.appendChild(u[0]);
            },
            abort: function () {
              f && f();
            },
          };
        }
      });
    var Ph = [],
      mc = /(=)\?(?=&|$)|\?\?/;
    b.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function () {
        var s = Ph.pop() || b.expando + "_" + Dh.guid++;
        return (this[s] = !0), s;
      },
    }),
      b.ajaxPrefilter("json jsonp", function (s, u, f) {
        var g,
          x,
          C,
          D =
            s.jsonp !== !1 &&
            (mc.test(s.url)
              ? "url"
              : typeof s.data == "string" &&
                (s.contentType || "").indexOf(
                  "application/x-www-form-urlencoded"
                ) === 0 &&
                mc.test(s.data) &&
                "data");
        if (D || s.dataTypes[0] === "jsonp")
          return (
            (g = s.jsonpCallback =
              A(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback),
            D
              ? (s[D] = s[D].replace(mc, "$1" + g))
              : s.jsonp !== !1 &&
                (s.url += (cc.test(s.url) ? "&" : "?") + s.jsonp + "=" + g),
            (s.converters["script json"] = function () {
              return C || b.error(g + " was not called"), C[0];
            }),
            (s.dataTypes[0] = "json"),
            (x = n[g]),
            (n[g] = function () {
              C = arguments;
            }),
            f.always(function () {
              x === void 0 ? b(n).removeProp(g) : (n[g] = x),
                s[g] && ((s.jsonpCallback = u.jsonpCallback), Ph.push(g)),
                C && A(x) && x(C[0]),
                (C = x = void 0);
            }),
            "script"
          );
      }),
      (M.createHTMLDocument = (function () {
        var s = z.implementation.createHTMLDocument("").body;
        return (
          (s.innerHTML = "<form></form><form></form>"),
          s.childNodes.length === 2
        );
      })()),
      (b.parseHTML = function (s, u, f) {
        if (typeof s != "string") return [];
        typeof u == "boolean" && ((f = u), (u = !1));
        var g, x, C;
        return (
          u ||
            (M.createHTMLDocument
              ? ((u = z.implementation.createHTMLDocument("")),
                (g = u.createElement("base")),
                (g.href = z.location.href),
                u.head.appendChild(g))
              : (u = z)),
          (x = go.exec(s)),
          (C = !f && []),
          x
            ? [u.createElement(x[1])]
            : ((x = lh([s], u, C)),
              C && C.length && b(C).remove(),
              b.merge([], x.childNodes))
        );
      }),
      (b.fn.load = function (s, u, f) {
        var g,
          x,
          C,
          D = this,
          R = s.indexOf(" ");
        return (
          R > -1 && ((g = vo(s.slice(R))), (s = s.slice(0, R))),
          A(u)
            ? ((f = u), (u = void 0))
            : u && typeof u == "object" && (x = "POST"),
          D.length > 0 &&
            b
              .ajax({ url: s, type: x || "GET", dataType: "html", data: u })
              .done(function (P) {
                (C = arguments),
                  D.html(g ? b("<div>").append(b.parseHTML(P)).find(g) : P);
              })
              .always(
                f &&
                  function (P, H) {
                    D.each(function () {
                      f.apply(this, C || [P.responseText, H, P]);
                    });
                  }
              ),
          this
        );
      }),
      (b.expr.pseudos.animated = function (s) {
        return b.grep(b.timers, function (u) {
          return s === u.elem;
        }).length;
      }),
      (b.offset = {
        setOffset: function (s, u, f) {
          var g,
            x,
            C,
            D,
            R,
            P,
            H,
            q = b.css(s, "position"),
            X = b(s),
            G = {};
          q === "static" && (s.style.position = "relative"),
            (R = X.offset()),
            (C = b.css(s, "top")),
            (P = b.css(s, "left")),
            (H =
              (q === "absolute" || q === "fixed") &&
              (C + P).indexOf("auto") > -1),
            H
              ? ((g = X.position()), (D = g.top), (x = g.left))
              : ((D = parseFloat(C) || 0), (x = parseFloat(P) || 0)),
            A(u) && (u = u.call(s, f, b.extend({}, R))),
            u.top != null && (G.top = u.top - R.top + D),
            u.left != null && (G.left = u.left - R.left + x),
            "using" in u ? u.using.call(s, G) : X.css(G);
        },
      }),
      b.fn.extend({
        offset: function (s) {
          if (arguments.length)
            return s === void 0
              ? this
              : this.each(function (x) {
                  b.offset.setOffset(this, s, x);
                });
          var u,
            f,
            g = this[0];
          if (g)
            return g.getClientRects().length
              ? ((u = g.getBoundingClientRect()),
                (f = g.ownerDocument.defaultView),
                { top: u.top + f.pageYOffset, left: u.left + f.pageXOffset })
              : { top: 0, left: 0 };
        },
        position: function () {
          if (this[0]) {
            var s,
              u,
              f,
              g = this[0],
              x = { top: 0, left: 0 };
            if (b.css(g, "position") === "fixed") u = g.getBoundingClientRect();
            else {
              for (
                u = this.offset(),
                  f = g.ownerDocument,
                  s = g.offsetParent || f.documentElement;
                s &&
                (s === f.body || s === f.documentElement) &&
                b.css(s, "position") === "static";

              )
                s = s.parentNode;
              s &&
                s !== g &&
                s.nodeType === 1 &&
                ((x = b(s).offset()),
                (x.top += b.css(s, "borderTopWidth", !0)),
                (x.left += b.css(s, "borderLeftWidth", !0)));
            }
            return {
              top: u.top - x.top - b.css(g, "marginTop", !0),
              left: u.left - x.left - b.css(g, "marginLeft", !0),
            };
          }
        },
        offsetParent: function () {
          return this.map(function () {
            for (
              var s = this.offsetParent;
              s && b.css(s, "position") === "static";

            )
              s = s.offsetParent;
            return s || bo;
          });
        },
      }),
      b.each(
        { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
        function (s, u) {
          var f = u === "pageYOffset";
          b.fn[s] = function (g) {
            return In(
              this,
              function (x, C, D) {
                var R;
                if (
                  (j(x) ? (R = x) : x.nodeType === 9 && (R = x.defaultView),
                  D === void 0)
                )
                  return R ? R[u] : x[C];
                R
                  ? R.scrollTo(f ? R.pageXOffset : D, f ? D : R.pageYOffset)
                  : (x[C] = D);
              },
              s,
              g,
              arguments.length
            );
          };
        }
      ),
      b.each(["top", "left"], function (s, u) {
        b.cssHooks[u] = mh(M.pixelPosition, function (f, g) {
          if (g)
            return (g = Hr(f, u)), nc.test(g) ? b(f).position()[u] + "px" : g;
        });
      }),
      b.each({ Height: "height", Width: "width" }, function (s, u) {
        b.each(
          { padding: "inner" + s, content: u, "": "outer" + s },
          function (f, g) {
            b.fn[g] = function (x, C) {
              var D = arguments.length && (f || typeof x != "boolean"),
                R = f || (x === !0 || C === !0 ? "margin" : "border");
              return In(
                this,
                function (P, H, q) {
                  var X;
                  return j(P)
                    ? g.indexOf("outer") === 0
                      ? P["inner" + s]
                      : P.document.documentElement["client" + s]
                    : P.nodeType === 9
                    ? ((X = P.documentElement),
                      Math.max(
                        P.body["scroll" + s],
                        X["scroll" + s],
                        P.body["offset" + s],
                        X["offset" + s],
                        X["client" + s]
                      ))
                    : q === void 0
                    ? b.css(P, H, R)
                    : b.style(P, H, q, R);
                },
                u,
                D ? x : void 0,
                D
              );
            };
          }
        );
      }),
      b.each(
        [
          "ajaxStart",
          "ajaxStop",
          "ajaxComplete",
          "ajaxError",
          "ajaxSuccess",
          "ajaxSend",
        ],
        function (s, u) {
          b.fn[u] = function (f) {
            return this.on(u, f);
          };
        }
      ),
      b.fn.extend({
        bind: function (s, u, f) {
          return this.on(s, null, u, f);
        },
        unbind: function (s, u) {
          return this.off(s, null, u);
        },
        delegate: function (s, u, f, g) {
          return this.on(u, s, f, g);
        },
        undelegate: function (s, u, f) {
          return arguments.length === 1
            ? this.off(s, "**")
            : this.off(u, s || "**", f);
        },
        hover: function (s, u) {
          return this.on("mouseenter", s).on("mouseleave", u || s);
        },
      }),
      b.each(
        "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(
          " "
        ),
        function (s, u) {
          b.fn[u] = function (f, g) {
            return arguments.length > 0
              ? this.on(u, null, f, g)
              : this.trigger(u);
          };
        }
      );
    var d_ = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    (b.proxy = function (s, u) {
      var f, g, x;
      if ((typeof u == "string" && ((f = s[u]), (u = s), (s = f)), !!A(s)))
        return (
          (g = o.call(arguments, 2)),
          (x = function () {
            return s.apply(u || this, g.concat(o.call(arguments)));
          }),
          (x.guid = s.guid = s.guid || b.guid++),
          x
        );
    }),
      (b.holdReady = function (s) {
        s ? b.readyWait++ : b.ready(!0);
      }),
      (b.isArray = Array.isArray),
      (b.parseJSON = JSON.parse),
      (b.nodeName = be),
      (b.isFunction = A),
      (b.isWindow = j),
      (b.camelCase = pn),
      (b.type = Ve),
      (b.now = Date.now),
      (b.isNumeric = function (s) {
        var u = b.type(s);
        return (u === "number" || u === "string") && !isNaN(s - parseFloat(s));
      }),
      (b.trim = function (s) {
        return s == null ? "" : (s + "").replace(d_, "$1");
      }),
      typeof define == "function" &&
        define.amd &&
        define("jquery", [], function () {
          return b;
        });
    var u_ = n.jQuery,
      h_ = n.$;
    return (
      (b.noConflict = function (s) {
        return (
          n.$ === b && (n.$ = h_), s && n.jQuery === b && (n.jQuery = u_), b
        );
      }),
      typeof t > "u" && (n.jQuery = n.$ = b),
      b
    );
  });
});
var ms = class n {
  title = "smartAssists";
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-root"]],
    standalone: !0,
    features: [re],
    decls: 1,
    vars: 0,
    template: function (e, i) {
      e & 1 && U(0, "router-outlet");
    },
    dependencies: [ps],
  });
};
var Cp = (() => {
    class n {
      constructor(e, i) {
        (this._renderer = e),
          (this._elementRef = i),
          (this.onChange = (o) => {}),
          (this.onTouched = () => {});
      }
      setProperty(e, i) {
        this._renderer.setProperty(this._elementRef.nativeElement, e, i);
      }
      registerOnTouched(e) {
        this.onTouched = e;
      }
      registerOnChange(e) {
        this.onChange = e;
      }
      setDisabledState(e) {
        this.setProperty("disabled", e);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(ui), B(ke));
        };
      }
      static {
        this.ɵdir = Te({ type: n });
      }
    }
    return n;
  })(),
  zc = (() => {
    class n extends Cp {
      static {
        this.ɵfac = (() => {
          let e;
          return function (o) {
            return (e || (e = ut(n)))(o || n);
          };
        })();
      }
      static {
        this.ɵdir = Te({ type: n, features: [$e] });
      }
    }
    return n;
  })(),
  ko = new qe("");
var w_ = { provide: ko, useExisting: ei(() => Yt), multi: !0 };
function D_() {
  let n = Vc() ? Vc().getUserAgent() : "";
  return /android (\d+)/.test(n.toLowerCase());
}
var S_ = new qe(""),
  Yt = (() => {
    class n extends Cp {
      constructor(e, i, o) {
        super(e, i),
          (this._compositionMode = o),
          (this._composing = !1),
          this._compositionMode == null && (this._compositionMode = !D_());
      }
      writeValue(e) {
        let i = e ?? "";
        this.setProperty("value", i);
      }
      _handleInput(e) {
        (!this._compositionMode ||
          (this._compositionMode && !this._composing)) &&
          this.onChange(e);
      }
      _compositionStart() {
        this._composing = !0;
      }
      _compositionEnd(e) {
        (this._composing = !1), this._compositionMode && this.onChange(e);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(ui), B(ke), B(S_, 8));
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["input", "formControlName", "", 3, "type", "checkbox"],
            ["textarea", "formControlName", ""],
            ["input", "formControl", "", 3, "type", "checkbox"],
            ["textarea", "formControl", ""],
            ["input", "ngModel", "", 3, "type", "checkbox"],
            ["textarea", "ngModel", ""],
            ["", "ngDefaultControl", ""],
          ],
          hostBindings: function (i, o) {
            i & 1 &&
              F("input", function (a) {
                return o._handleInput(a.target.value);
              })("blur", function () {
                return o.onTouched();
              })("compositionstart", function () {
                return o._compositionStart();
              })("compositionend", function (a) {
                return o._compositionEnd(a.target.value);
              });
          },
          features: [St([w_]), $e],
        });
      }
    }
    return n;
  })();
function to(n) {
  return (
    n == null || ((typeof n == "string" || Array.isArray(n)) && n.length === 0)
  );
}
function wp(n) {
  return n != null && typeof n.length == "number";
}
var Oo = new qe(""),
  Ss = new qe(""),
  M_ =
    /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
  we = class {
    static min(t) {
      return T_(t);
    }
    static max(t) {
      return E_(t);
    }
    static required(t) {
      return Dp(t);
    }
    static requiredTrue(t) {
      return k_(t);
    }
    static email(t) {
      return Sp(t);
    }
    static minLength(t) {
      return O_(t);
    }
    static maxLength(t) {
      return Mp(t);
    }
    static pattern(t) {
      return I_(t);
    }
    static nullValidator(t) {
      return gs(t);
    }
    static compose(t) {
      return Pp(t);
    }
    static composeAsync(t) {
      return Ap(t);
    }
  };
function T_(n) {
  return (t) => {
    if (to(t.value) || to(n)) return null;
    let e = parseFloat(t.value);
    return !isNaN(e) && e < n ? { min: { min: n, actual: t.value } } : null;
  };
}
function E_(n) {
  return (t) => {
    if (to(t.value) || to(n)) return null;
    let e = parseFloat(t.value);
    return !isNaN(e) && e > n ? { max: { max: n, actual: t.value } } : null;
  };
}
function Dp(n) {
  return to(n.value) ? { required: !0 } : null;
}
function k_(n) {
  return n.value === !0 ? null : { required: !0 };
}
function Sp(n) {
  return to(n.value) || M_.test(n.value) ? null : { email: !0 };
}
function O_(n) {
  return (t) =>
    to(t.value) || !wp(t.value)
      ? null
      : t.value.length < n
      ? { minlength: { requiredLength: n, actualLength: t.value.length } }
      : null;
}
function Mp(n) {
  return (t) =>
    wp(t.value) && t.value.length > n
      ? { maxlength: { requiredLength: n, actualLength: t.value.length } }
      : null;
}
function I_(n) {
  if (!n) return gs;
  let t, e;
  return (
    typeof n == "string"
      ? ((e = ""),
        n.charAt(0) !== "^" && (e += "^"),
        (e += n),
        n.charAt(n.length - 1) !== "$" && (e += "$"),
        (t = new RegExp(e)))
      : ((e = n.toString()), (t = n)),
    (i) => {
      if (to(i.value)) return null;
      let o = i.value;
      return t.test(o)
        ? null
        : { pattern: { requiredPattern: e, actualValue: o } };
    }
  );
}
function gs(n) {
  return null;
}
function Tp(n) {
  return n != null;
}
function Ep(n) {
  return np(n) ? Vh(n) : n;
}
function kp(n) {
  let t = {};
  return (
    n.forEach((e) => {
      t = e != null ? ne(ne({}, t), e) : t;
    }),
    Object.keys(t).length === 0 ? null : t
  );
}
function Op(n, t) {
  return t.map((e) => e(n));
}
function P_(n) {
  return !n.validate;
}
function Ip(n) {
  return n.map((t) => (P_(t) ? t : (e) => t.validate(e)));
}
function Pp(n) {
  if (!n) return null;
  let t = n.filter(Tp);
  return t.length == 0
    ? null
    : function (e) {
        return kp(Op(e, t));
      };
}
function Uc(n) {
  return n != null ? Pp(Ip(n)) : null;
}
function Ap(n) {
  if (!n) return null;
  let t = n.filter(Tp);
  return t.length == 0
    ? null
    : function (e) {
        let i = Op(e, t).map(Ep);
        return Bh(i).pipe(Fn(kp));
      };
}
function Wc(n) {
  return n != null ? Ap(Ip(n)) : null;
}
function mp(n, t) {
  return n === null ? [t] : Array.isArray(n) ? [...n, t] : [n, t];
}
function Rp(n) {
  return n._rawValidators;
}
function Fp(n) {
  return n._rawAsyncValidators;
}
function Bc(n) {
  return n ? (Array.isArray(n) ? n : [n]) : [];
}
function _s(n, t) {
  return Array.isArray(n) ? n.includes(t) : n === t;
}
function fp(n, t) {
  let e = Bc(t);
  return (
    Bc(n).forEach((o) => {
      _s(e, o) || e.push(o);
    }),
    e
  );
}
function gp(n, t) {
  return Bc(t).filter((e) => !_s(n, e));
}
var bs = class {
    constructor() {
      (this._rawValidators = []),
        (this._rawAsyncValidators = []),
        (this._onDestroyCallbacks = []);
    }
    get value() {
      return this.control ? this.control.value : null;
    }
    get valid() {
      return this.control ? this.control.valid : null;
    }
    get invalid() {
      return this.control ? this.control.invalid : null;
    }
    get pending() {
      return this.control ? this.control.pending : null;
    }
    get disabled() {
      return this.control ? this.control.disabled : null;
    }
    get enabled() {
      return this.control ? this.control.enabled : null;
    }
    get errors() {
      return this.control ? this.control.errors : null;
    }
    get pristine() {
      return this.control ? this.control.pristine : null;
    }
    get dirty() {
      return this.control ? this.control.dirty : null;
    }
    get touched() {
      return this.control ? this.control.touched : null;
    }
    get status() {
      return this.control ? this.control.status : null;
    }
    get untouched() {
      return this.control ? this.control.untouched : null;
    }
    get statusChanges() {
      return this.control ? this.control.statusChanges : null;
    }
    get valueChanges() {
      return this.control ? this.control.valueChanges : null;
    }
    get path() {
      return null;
    }
    _setValidators(t) {
      (this._rawValidators = t || []),
        (this._composedValidatorFn = Uc(this._rawValidators));
    }
    _setAsyncValidators(t) {
      (this._rawAsyncValidators = t || []),
        (this._composedAsyncValidatorFn = Wc(this._rawAsyncValidators));
    }
    get validator() {
      return this._composedValidatorFn || null;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn || null;
    }
    _registerOnDestroy(t) {
      this._onDestroyCallbacks.push(t);
    }
    _invokeOnDestroyCallbacks() {
      this._onDestroyCallbacks.forEach((t) => t()),
        (this._onDestroyCallbacks = []);
    }
    reset(t = void 0) {
      this.control && this.control.reset(t);
    }
    hasError(t, e) {
      return this.control ? this.control.hasError(t, e) : !1;
    }
    getError(t, e) {
      return this.control ? this.control.getError(t, e) : null;
    }
  },
  Bn = class extends bs {
    get formDirective() {
      return null;
    }
    get path() {
      return null;
    }
  },
  Eo = class extends bs {
    constructor() {
      super(...arguments),
        (this._parent = null),
        (this.name = null),
        (this.valueAccessor = null);
    }
  },
  vs = class {
    constructor(t) {
      this._cd = t;
    }
    get isTouched() {
      return this._cd?.control?._touched?.(), !!this._cd?.control?.touched;
    }
    get isUntouched() {
      return !!this._cd?.control?.untouched;
    }
    get isPristine() {
      return this._cd?.control?._pristine?.(), !!this._cd?.control?.pristine;
    }
    get isDirty() {
      return !!this._cd?.control?.dirty;
    }
    get isValid() {
      return this._cd?.control?._status?.(), !!this._cd?.control?.valid;
    }
    get isInvalid() {
      return !!this._cd?.control?.invalid;
    }
    get isPending() {
      return !!this._cd?.control?.pending;
    }
    get isSubmitted() {
      return this._cd?._submitted?.(), !!this._cd?.submitted;
    }
  },
  A_ = {
    "[class.ng-untouched]": "isUntouched",
    "[class.ng-touched]": "isTouched",
    "[class.ng-pristine]": "isPristine",
    "[class.ng-dirty]": "isDirty",
    "[class.ng-valid]": "isValid",
    "[class.ng-invalid]": "isInvalid",
    "[class.ng-pending]": "isPending",
  },
  eE = et(ne({}, A_), { "[class.ng-submitted]": "isSubmitted" }),
  ii = (() => {
    class n extends vs {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(Eo, 2));
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["", "formControlName", ""],
            ["", "ngModel", ""],
            ["", "formControl", ""],
          ],
          hostVars: 14,
          hostBindings: function (i, o) {
            i & 2 &&
              fe("ng-untouched", o.isUntouched)("ng-touched", o.isTouched)(
                "ng-pristine",
                o.isPristine
              )("ng-dirty", o.isDirty)("ng-valid", o.isValid)(
                "ng-invalid",
                o.isInvalid
              )("ng-pending", o.isPending);
          },
          features: [$e],
        });
      }
    }
    return n;
  })(),
  Ci = (() => {
    class n extends vs {
      constructor(e) {
        super(e);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(Bn, 10));
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["", "formGroupName", ""],
            ["", "formArrayName", ""],
            ["", "ngModelGroup", ""],
            ["", "formGroup", ""],
            ["form", 3, "ngNoForm", ""],
            ["", "ngForm", ""],
          ],
          hostVars: 16,
          hostBindings: function (i, o) {
            i & 2 &&
              fe("ng-untouched", o.isUntouched)("ng-touched", o.isTouched)(
                "ng-pristine",
                o.isPristine
              )("ng-dirty", o.isDirty)("ng-valid", o.isValid)(
                "ng-invalid",
                o.isInvalid
              )("ng-pending", o.isPending)("ng-submitted", o.isSubmitted);
          },
          features: [$e],
        });
      }
    }
    return n;
  })();
var Zr = "VALID",
  fs = "INVALID",
  dr = "PENDING",
  Jr = "DISABLED",
  io = class {},
  ys = class extends io {
    constructor(t, e) {
      super(), (this.value = t), (this.source = e);
    }
  },
  ta = class extends io {
    constructor(t, e) {
      super(), (this.pristine = t), (this.source = e);
    }
  },
  ia = class extends io {
    constructor(t, e) {
      super(), (this.touched = t), (this.source = e);
    }
  },
  ur = class extends io {
    constructor(t, e) {
      super(), (this.status = t), (this.source = e);
    }
  },
  Hc = class extends io {
    constructor(t) {
      super(), (this.source = t);
    }
  },
  jc = class extends io {
    constructor(t) {
      super(), (this.source = t);
    }
  };
function Np(n) {
  return (Ms(n) ? n.validators : n) || null;
}
function R_(n) {
  return Array.isArray(n) ? Uc(n) : n || null;
}
function Vp(n, t) {
  return (Ms(t) ? t.asyncValidators : n) || null;
}
function F_(n) {
  return Array.isArray(n) ? Wc(n) : n || null;
}
function Ms(n) {
  return n != null && !Array.isArray(n) && typeof n == "object";
}
function N_(n, t, e) {
  let i = n.controls;
  if (!(t ? Object.keys(i) : i).length) throw new nr(1e3, "");
  if (!i[e]) throw new nr(1001, "");
}
function V_(n, t, e) {
  n._forEachChild((i, o) => {
    if (e[o] === void 0) throw new nr(1002, "");
  });
}
var xs = class {
    constructor(t, e) {
      (this._pendingDirty = !1),
        (this._hasOwnPendingAsyncValidator = null),
        (this._pendingTouched = !1),
        (this._onCollectionChange = () => {}),
        (this._parent = null),
        (this._status = Mo(() => this.statusReactive())),
        (this.statusReactive = le(void 0)),
        (this._pristine = Mo(() => this.pristineReactive())),
        (this.pristineReactive = le(!0)),
        (this._touched = Mo(() => this.touchedReactive())),
        (this.touchedReactive = le(!1)),
        (this._events = new Ee()),
        (this.events = this._events.asObservable()),
        (this._onDisabledChange = []),
        this._assignValidators(t),
        this._assignAsyncValidators(e);
    }
    get validator() {
      return this._composedValidatorFn;
    }
    set validator(t) {
      this._rawValidators = this._composedValidatorFn = t;
    }
    get asyncValidator() {
      return this._composedAsyncValidatorFn;
    }
    set asyncValidator(t) {
      this._rawAsyncValidators = this._composedAsyncValidatorFn = t;
    }
    get parent() {
      return this._parent;
    }
    get status() {
      return an(this.statusReactive);
    }
    set status(t) {
      an(() => this.statusReactive.set(t));
    }
    get valid() {
      return this.status === Zr;
    }
    get invalid() {
      return this.status === fs;
    }
    get pending() {
      return this.status == dr;
    }
    get disabled() {
      return this.status === Jr;
    }
    get enabled() {
      return this.status !== Jr;
    }
    get pristine() {
      return an(this.pristineReactive);
    }
    set pristine(t) {
      an(() => this.pristineReactive.set(t));
    }
    get dirty() {
      return !this.pristine;
    }
    get touched() {
      return an(this.touchedReactive);
    }
    set touched(t) {
      an(() => this.touchedReactive.set(t));
    }
    get untouched() {
      return !this.touched;
    }
    get updateOn() {
      return this._updateOn
        ? this._updateOn
        : this.parent
        ? this.parent.updateOn
        : "change";
    }
    setValidators(t) {
      this._assignValidators(t);
    }
    setAsyncValidators(t) {
      this._assignAsyncValidators(t);
    }
    addValidators(t) {
      this.setValidators(fp(t, this._rawValidators));
    }
    addAsyncValidators(t) {
      this.setAsyncValidators(fp(t, this._rawAsyncValidators));
    }
    removeValidators(t) {
      this.setValidators(gp(t, this._rawValidators));
    }
    removeAsyncValidators(t) {
      this.setAsyncValidators(gp(t, this._rawAsyncValidators));
    }
    hasValidator(t) {
      return _s(this._rawValidators, t);
    }
    hasAsyncValidator(t) {
      return _s(this._rawAsyncValidators, t);
    }
    clearValidators() {
      this.validator = null;
    }
    clearAsyncValidators() {
      this.asyncValidator = null;
    }
    markAsTouched(t = {}) {
      let e = this.touched === !1;
      this.touched = !0;
      let i = t.sourceControl ?? this;
      this._parent &&
        !t.onlySelf &&
        this._parent.markAsTouched(et(ne({}, t), { sourceControl: i })),
        e && t.emitEvent !== !1 && this._events.next(new ia(!0, i));
    }
    markAllAsTouched(t = {}) {
      this.markAsTouched({
        onlySelf: !0,
        emitEvent: t.emitEvent,
        sourceControl: this,
      }),
        this._forEachChild((e) => e.markAllAsTouched(t));
    }
    markAsUntouched(t = {}) {
      let e = this.touched === !0;
      (this.touched = !1), (this._pendingTouched = !1);
      let i = t.sourceControl ?? this;
      this._forEachChild((o) => {
        o.markAsUntouched({
          onlySelf: !0,
          emitEvent: t.emitEvent,
          sourceControl: i,
        });
      }),
        this._parent && !t.onlySelf && this._parent._updateTouched(t, i),
        e && t.emitEvent !== !1 && this._events.next(new ia(!1, i));
    }
    markAsDirty(t = {}) {
      let e = this.pristine === !0;
      this.pristine = !1;
      let i = t.sourceControl ?? this;
      this._parent &&
        !t.onlySelf &&
        this._parent.markAsDirty(et(ne({}, t), { sourceControl: i })),
        e && t.emitEvent !== !1 && this._events.next(new ta(!1, i));
    }
    markAsPristine(t = {}) {
      let e = this.pristine === !1;
      (this.pristine = !0), (this._pendingDirty = !1);
      let i = t.sourceControl ?? this;
      this._forEachChild((o) => {
        o.markAsPristine({ onlySelf: !0, emitEvent: t.emitEvent });
      }),
        this._parent && !t.onlySelf && this._parent._updatePristine(t, i),
        e && t.emitEvent !== !1 && this._events.next(new ta(!0, i));
    }
    markAsPending(t = {}) {
      this.status = dr;
      let e = t.sourceControl ?? this;
      t.emitEvent !== !1 &&
        (this._events.next(new ur(this.status, e)),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !t.onlySelf &&
          this._parent.markAsPending(et(ne({}, t), { sourceControl: e }));
    }
    disable(t = {}) {
      let e = this._parentMarkedDirty(t.onlySelf);
      (this.status = Jr),
        (this.errors = null),
        this._forEachChild((o) => {
          o.disable(et(ne({}, t), { onlySelf: !0 }));
        }),
        this._updateValue();
      let i = t.sourceControl ?? this;
      t.emitEvent !== !1 &&
        (this._events.next(new ys(this.value, i)),
        this._events.next(new ur(this.status, i)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._updateAncestors(et(ne({}, t), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((o) => o(!0));
    }
    enable(t = {}) {
      let e = this._parentMarkedDirty(t.onlySelf);
      (this.status = Zr),
        this._forEachChild((i) => {
          i.enable(et(ne({}, t), { onlySelf: !0 }));
        }),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent }),
        this._updateAncestors(et(ne({}, t), { skipPristineCheck: e }), this),
        this._onDisabledChange.forEach((i) => i(!1));
    }
    _updateAncestors(t, e) {
      this._parent &&
        !t.onlySelf &&
        (this._parent.updateValueAndValidity(t),
        t.skipPristineCheck || this._parent._updatePristine({}, e),
        this._parent._updateTouched({}, e));
    }
    setParent(t) {
      this._parent = t;
    }
    getRawValue() {
      return this.value;
    }
    updateValueAndValidity(t = {}) {
      if ((this._setInitialStatus(), this._updateValue(), this.enabled)) {
        let i = this._cancelExistingSubscription();
        (this.errors = this._runValidator()),
          (this.status = this._calculateStatus()),
          (this.status === Zr || this.status === dr) &&
            this._runAsyncValidator(i, t.emitEvent);
      }
      let e = t.sourceControl ?? this;
      t.emitEvent !== !1 &&
        (this._events.next(new ys(this.value, e)),
        this._events.next(new ur(this.status, e)),
        this.valueChanges.emit(this.value),
        this.statusChanges.emit(this.status)),
        this._parent &&
          !t.onlySelf &&
          this._parent.updateValueAndValidity(
            et(ne({}, t), { sourceControl: e })
          );
    }
    _updateTreeValidity(t = { emitEvent: !0 }) {
      this._forEachChild((e) => e._updateTreeValidity(t)),
        this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent });
    }
    _setInitialStatus() {
      this.status = this._allControlsDisabled() ? Jr : Zr;
    }
    _runValidator() {
      return this.validator ? this.validator(this) : null;
    }
    _runAsyncValidator(t, e) {
      if (this.asyncValidator) {
        (this.status = dr),
          (this._hasOwnPendingAsyncValidator = { emitEvent: e !== !1 });
        let i = Ep(this.asyncValidator(this));
        this._asyncValidationSubscription = i.subscribe((o) => {
          (this._hasOwnPendingAsyncValidator = null),
            this.setErrors(o, { emitEvent: e, shouldHaveEmitted: t });
        });
      }
    }
    _cancelExistingSubscription() {
      if (this._asyncValidationSubscription) {
        this._asyncValidationSubscription.unsubscribe();
        let t = this._hasOwnPendingAsyncValidator?.emitEvent ?? !1;
        return (this._hasOwnPendingAsyncValidator = null), t;
      }
      return !1;
    }
    setErrors(t, e = {}) {
      (this.errors = t),
        this._updateControlsErrors(
          e.emitEvent !== !1,
          this,
          e.shouldHaveEmitted
        );
    }
    get(t) {
      let e = t;
      return e == null ||
        (Array.isArray(e) || (e = e.split(".")), e.length === 0)
        ? null
        : e.reduce((i, o) => i && i._find(o), this);
    }
    getError(t, e) {
      let i = e ? this.get(e) : this;
      return i && i.errors ? i.errors[t] : null;
    }
    hasError(t, e) {
      return !!this.getError(t, e);
    }
    get root() {
      let t = this;
      for (; t._parent; ) t = t._parent;
      return t;
    }
    _updateControlsErrors(t, e, i) {
      (this.status = this._calculateStatus()),
        t && this.statusChanges.emit(this.status),
        (t || i) && this._events.next(new ur(this.status, e)),
        this._parent && this._parent._updateControlsErrors(t, e, i);
    }
    _initObservables() {
      (this.valueChanges = new ve()), (this.statusChanges = new ve());
    }
    _calculateStatus() {
      return this._allControlsDisabled()
        ? Jr
        : this.errors
        ? fs
        : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(dr)
        ? dr
        : this._anyControlsHaveStatus(fs)
        ? fs
        : Zr;
    }
    _anyControlsHaveStatus(t) {
      return this._anyControls((e) => e.status === t);
    }
    _anyControlsDirty() {
      return this._anyControls((t) => t.dirty);
    }
    _anyControlsTouched() {
      return this._anyControls((t) => t.touched);
    }
    _updatePristine(t, e) {
      let i = !this._anyControlsDirty(),
        o = this.pristine !== i;
      (this.pristine = i),
        this._parent && !t.onlySelf && this._parent._updatePristine(t, e),
        o && this._events.next(new ta(this.pristine, e));
    }
    _updateTouched(t = {}, e) {
      (this.touched = this._anyControlsTouched()),
        this._events.next(new ia(this.touched, e)),
        this._parent && !t.onlySelf && this._parent._updateTouched(t, e);
    }
    _registerOnCollectionChange(t) {
      this._onCollectionChange = t;
    }
    _setUpdateStrategy(t) {
      Ms(t) && t.updateOn != null && (this._updateOn = t.updateOn);
    }
    _parentMarkedDirty(t) {
      let e = this._parent && this._parent.dirty;
      return !t && !!e && !this._parent._anyControlsDirty();
    }
    _find(t) {
      return null;
    }
    _assignValidators(t) {
      (this._rawValidators = Array.isArray(t) ? t.slice() : t),
        (this._composedValidatorFn = R_(this._rawValidators));
    }
    _assignAsyncValidators(t) {
      (this._rawAsyncValidators = Array.isArray(t) ? t.slice() : t),
        (this._composedAsyncValidatorFn = F_(this._rawAsyncValidators));
    }
  },
  vt = class extends xs {
    constructor(t, e, i) {
      super(Np(e), Vp(i, e)),
        (this.controls = t),
        this._initObservables(),
        this._setUpdateStrategy(e),
        this._setUpControls(),
        this.updateValueAndValidity({
          onlySelf: !0,
          emitEvent: !!this.asyncValidator,
        });
    }
    registerControl(t, e) {
      return this.controls[t]
        ? this.controls[t]
        : ((this.controls[t] = e),
          e.setParent(this),
          e._registerOnCollectionChange(this._onCollectionChange),
          e);
    }
    addControl(t, e, i = {}) {
      this.registerControl(t, e),
        this.updateValueAndValidity({ emitEvent: i.emitEvent }),
        this._onCollectionChange();
    }
    removeControl(t, e = {}) {
      this.controls[t] &&
        this.controls[t]._registerOnCollectionChange(() => {}),
        delete this.controls[t],
        this.updateValueAndValidity({ emitEvent: e.emitEvent }),
        this._onCollectionChange();
    }
    setControl(t, e, i = {}) {
      this.controls[t] &&
        this.controls[t]._registerOnCollectionChange(() => {}),
        delete this.controls[t],
        e && this.registerControl(t, e),
        this.updateValueAndValidity({ emitEvent: i.emitEvent }),
        this._onCollectionChange();
    }
    contains(t) {
      return this.controls.hasOwnProperty(t) && this.controls[t].enabled;
    }
    setValue(t, e = {}) {
      V_(this, !0, t),
        Object.keys(t).forEach((i) => {
          N_(this, !0, i),
            this.controls[i].setValue(t[i], {
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }),
        this.updateValueAndValidity(e);
    }
    patchValue(t, e = {}) {
      t != null &&
        (Object.keys(t).forEach((i) => {
          let o = this.controls[i];
          o && o.patchValue(t[i], { onlySelf: !0, emitEvent: e.emitEvent });
        }),
        this.updateValueAndValidity(e));
    }
    reset(t = {}, e = {}) {
      this._forEachChild((i, o) => {
        i.reset(t ? t[o] : null, { onlySelf: !0, emitEvent: e.emitEvent });
      }),
        this._updatePristine(e, this),
        this._updateTouched(e, this),
        this.updateValueAndValidity(e);
    }
    getRawValue() {
      return this._reduceChildren(
        {},
        (t, e, i) => ((t[i] = e.getRawValue()), t)
      );
    }
    _syncPendingControls() {
      let t = this._reduceChildren(!1, (e, i) =>
        i._syncPendingControls() ? !0 : e
      );
      return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
    }
    _forEachChild(t) {
      Object.keys(this.controls).forEach((e) => {
        let i = this.controls[e];
        i && t(i, e);
      });
    }
    _setUpControls() {
      this._forEachChild((t) => {
        t.setParent(this),
          t._registerOnCollectionChange(this._onCollectionChange);
      });
    }
    _updateValue() {
      this.value = this._reduceValue();
    }
    _anyControls(t) {
      for (let [e, i] of Object.entries(this.controls))
        if (this.contains(e) && t(i)) return !0;
      return !1;
    }
    _reduceValue() {
      let t = {};
      return this._reduceChildren(
        t,
        (e, i, o) => ((i.enabled || this.disabled) && (e[o] = i.value), e)
      );
    }
    _reduceChildren(t, e) {
      let i = t;
      return (
        this._forEachChild((o, r) => {
          i = e(i, o, r);
        }),
        i
      );
    }
    _allControlsDisabled() {
      for (let t of Object.keys(this.controls))
        if (this.controls[t].enabled) return !1;
      return Object.keys(this.controls).length > 0 || this.disabled;
    }
    _find(t) {
      return this.controls.hasOwnProperty(t) ? this.controls[t] : null;
    }
  };
var na = new qe("CallSetDisabledState", {
    providedIn: "root",
    factory: () => Ts,
  }),
  Ts = "always";
function Lp(n, t) {
  return [...t.path, n];
}
function Cs(n, t, e = Ts) {
  $c(n, t),
    t.valueAccessor.writeValue(n.value),
    (n.disabled || e === "always") &&
      t.valueAccessor.setDisabledState?.(n.disabled),
    B_(n, t),
    j_(n, t),
    H_(n, t),
    L_(n, t);
}
function _p(n, t, e = !0) {
  let i = () => {};
  t.valueAccessor &&
    (t.valueAccessor.registerOnChange(i), t.valueAccessor.registerOnTouched(i)),
    Ds(n, t),
    n &&
      (t._invokeOnDestroyCallbacks(), n._registerOnCollectionChange(() => {}));
}
function ws(n, t) {
  n.forEach((e) => {
    e.registerOnValidatorChange && e.registerOnValidatorChange(t);
  });
}
function L_(n, t) {
  if (t.valueAccessor.setDisabledState) {
    let e = (i) => {
      t.valueAccessor.setDisabledState(i);
    };
    n.registerOnDisabledChange(e),
      t._registerOnDestroy(() => {
        n._unregisterOnDisabledChange(e);
      });
  }
}
function $c(n, t) {
  let e = Rp(n);
  t.validator !== null
    ? n.setValidators(mp(e, t.validator))
    : typeof e == "function" && n.setValidators([e]);
  let i = Fp(n);
  t.asyncValidator !== null
    ? n.setAsyncValidators(mp(i, t.asyncValidator))
    : typeof i == "function" && n.setAsyncValidators([i]);
  let o = () => n.updateValueAndValidity();
  ws(t._rawValidators, o), ws(t._rawAsyncValidators, o);
}
function Ds(n, t) {
  let e = !1;
  if (n !== null) {
    if (t.validator !== null) {
      let o = Rp(n);
      if (Array.isArray(o) && o.length > 0) {
        let r = o.filter((a) => a !== t.validator);
        r.length !== o.length && ((e = !0), n.setValidators(r));
      }
    }
    if (t.asyncValidator !== null) {
      let o = Fp(n);
      if (Array.isArray(o) && o.length > 0) {
        let r = o.filter((a) => a !== t.asyncValidator);
        r.length !== o.length && ((e = !0), n.setAsyncValidators(r));
      }
    }
  }
  let i = () => {};
  return ws(t._rawValidators, i), ws(t._rawAsyncValidators, i), e;
}
function B_(n, t) {
  t.valueAccessor.registerOnChange((e) => {
    (n._pendingValue = e),
      (n._pendingChange = !0),
      (n._pendingDirty = !0),
      n.updateOn === "change" && Bp(n, t);
  });
}
function H_(n, t) {
  t.valueAccessor.registerOnTouched(() => {
    (n._pendingTouched = !0),
      n.updateOn === "blur" && n._pendingChange && Bp(n, t),
      n.updateOn !== "submit" && n.markAsTouched();
  });
}
function Bp(n, t) {
  n._pendingDirty && n.markAsDirty(),
    n.setValue(n._pendingValue, { emitModelToViewChange: !1 }),
    t.viewToModelUpdate(n._pendingValue),
    (n._pendingChange = !1);
}
function j_(n, t) {
  let e = (i, o) => {
    t.valueAccessor.writeValue(i), o && t.viewToModelUpdate(i);
  };
  n.registerOnChange(e),
    t._registerOnDestroy(() => {
      n._unregisterOnChange(e);
    });
}
function Hp(n, t) {
  n == null, $c(n, t);
}
function z_(n, t) {
  return Ds(n, t);
}
function jp(n, t) {
  if (!n.hasOwnProperty("model")) return !1;
  let e = n.model;
  return e.isFirstChange() ? !0 : !Object.is(t, e.currentValue);
}
function U_(n) {
  return Object.getPrototypeOf(n.constructor) === zc;
}
function zp(n, t) {
  n._syncPendingControls(),
    t.forEach((e) => {
      let i = e.control;
      i.updateOn === "submit" &&
        i._pendingChange &&
        (e.viewToModelUpdate(i._pendingValue), (i._pendingChange = !1));
    });
}
function Up(n, t) {
  if (!t) return null;
  Array.isArray(t);
  let e, i, o;
  return (
    t.forEach((r) => {
      r.constructor === Yt ? (e = r) : U_(r) ? (i = r) : (o = r);
    }),
    o || i || e || null
  );
}
function W_(n, t) {
  let e = n.indexOf(t);
  e > -1 && n.splice(e, 1);
}
var $_ = { provide: Bn, useExisting: ei(() => Gc) },
  ea = Promise.resolve(),
  Gc = (() => {
    class n extends Bn {
      get submitted() {
        return an(this.submittedReactive);
      }
      constructor(e, i, o) {
        super(),
          (this.callSetDisabledState = o),
          (this._submitted = Mo(() => this.submittedReactive())),
          (this.submittedReactive = le(!1)),
          (this._directives = new Set()),
          (this.ngSubmit = new ve()),
          (this.form = new vt({}, Uc(e), Wc(i)));
      }
      ngAfterViewInit() {
        this._setUpdateStrategy();
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      get controls() {
        return this.form.controls;
      }
      addControl(e) {
        ea.then(() => {
          let i = this._findContainer(e.path);
          (e.control = i.registerControl(e.name, e.control)),
            Cs(e.control, e, this.callSetDisabledState),
            e.control.updateValueAndValidity({ emitEvent: !1 }),
            this._directives.add(e);
        });
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        ea.then(() => {
          let i = this._findContainer(e.path);
          i && i.removeControl(e.name), this._directives.delete(e);
        });
      }
      addFormGroup(e) {
        ea.then(() => {
          let i = this._findContainer(e.path),
            o = new vt({});
          Hp(o, e),
            i.registerControl(e.name, o),
            o.updateValueAndValidity({ emitEvent: !1 });
        });
      }
      removeFormGroup(e) {
        ea.then(() => {
          let i = this._findContainer(e.path);
          i && i.removeControl(e.name);
        });
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      updateModel(e, i) {
        ea.then(() => {
          this.form.get(e.path).setValue(i);
        });
      }
      setValue(e) {
        this.control.setValue(e);
      }
      onSubmit(e) {
        return (
          this.submittedReactive.set(!0),
          zp(this.form, this._directives),
          this.ngSubmit.emit(e),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e), this.submittedReactive.set(!1);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.form._updateOn = this.options.updateOn);
      }
      _findContainer(e) {
        return e.pop(), e.length ? this.form.get(e) : this.form;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(Oo, 10), B(Ss, 10), B(na, 8));
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
            ["ng-form"],
            ["", "ngForm", ""],
          ],
          hostBindings: function (i, o) {
            i & 1 &&
              F("submit", function (a) {
                return o.onSubmit(a);
              })("reset", function () {
                return o.onReset();
              });
          },
          inputs: { options: [0, "ngFormOptions", "options"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [St([$_]), $e],
        });
      }
    }
    return n;
  })();
function bp(n, t) {
  let e = n.indexOf(t);
  e > -1 && n.splice(e, 1);
}
function vp(n) {
  return (
    typeof n == "object" &&
    n !== null &&
    Object.keys(n).length === 2 &&
    "value" in n &&
    "disabled" in n
  );
}
var Ze = class extends xs {
  constructor(t = null, e, i) {
    super(Np(e), Vp(i, e)),
      (this.defaultValue = null),
      (this._onChange = []),
      (this._pendingChange = !1),
      this._applyFormState(t),
      this._setUpdateStrategy(e),
      this._initObservables(),
      this.updateValueAndValidity({
        onlySelf: !0,
        emitEvent: !!this.asyncValidator,
      }),
      Ms(e) &&
        (e.nonNullable || e.initialValueIsDefault) &&
        (vp(t) ? (this.defaultValue = t.value) : (this.defaultValue = t));
  }
  setValue(t, e = {}) {
    (this.value = this._pendingValue = t),
      this._onChange.length &&
        e.emitModelToViewChange !== !1 &&
        this._onChange.forEach((i) =>
          i(this.value, e.emitViewToModelChange !== !1)
        ),
      this.updateValueAndValidity(e);
  }
  patchValue(t, e = {}) {
    this.setValue(t, e);
  }
  reset(t = this.defaultValue, e = {}) {
    this._applyFormState(t),
      this.markAsPristine(e),
      this.markAsUntouched(e),
      this.setValue(this.value, e),
      (this._pendingChange = !1);
  }
  _updateValue() {}
  _anyControls(t) {
    return !1;
  }
  _allControlsDisabled() {
    return this.disabled;
  }
  registerOnChange(t) {
    this._onChange.push(t);
  }
  _unregisterOnChange(t) {
    bp(this._onChange, t);
  }
  registerOnDisabledChange(t) {
    this._onDisabledChange.push(t);
  }
  _unregisterOnDisabledChange(t) {
    bp(this._onDisabledChange, t);
  }
  _forEachChild(t) {}
  _syncPendingControls() {
    return this.updateOn === "submit" &&
      (this._pendingDirty && this.markAsDirty(),
      this._pendingTouched && this.markAsTouched(),
      this._pendingChange)
      ? (this.setValue(this._pendingValue, {
          onlySelf: !0,
          emitModelToViewChange: !1,
        }),
        !0)
      : !1;
  }
  _applyFormState(t) {
    vp(t)
      ? ((this.value = this._pendingValue = t.value),
        t.disabled
          ? this.disable({ onlySelf: !0, emitEvent: !1 })
          : this.enable({ onlySelf: !0, emitEvent: !1 }))
      : (this.value = this._pendingValue = t);
  }
};
var G_ = (n) => n instanceof Ze;
var Y_ = { provide: Eo, useExisting: ei(() => Oi) },
  yp = Promise.resolve(),
  Oi = (() => {
    class n extends Eo {
      constructor(e, i, o, r, a, d) {
        super(),
          (this._changeDetectorRef = a),
          (this.callSetDisabledState = d),
          (this.control = new Ze()),
          (this._registered = !1),
          (this.name = ""),
          (this.update = new ve()),
          (this._parent = e),
          this._setValidators(i),
          this._setAsyncValidators(o),
          (this.valueAccessor = Up(this, r));
      }
      ngOnChanges(e) {
        if ((this._checkForErrors(), !this._registered || "name" in e)) {
          if (this._registered && (this._checkName(), this.formDirective)) {
            let i = e.name.previousValue;
            this.formDirective.removeControl({
              name: i,
              path: this._getPath(i),
            });
          }
          this._setUpControl();
        }
        "isDisabled" in e && this._updateDisabled(e),
          jp(e, this.viewModel) &&
            (this._updateValue(this.model), (this.viewModel = this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      get path() {
        return this._getPath(this.name);
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      _setUpControl() {
        this._setUpdateStrategy(),
          this._isStandalone()
            ? this._setUpStandalone()
            : this.formDirective.addControl(this),
          (this._registered = !0);
      }
      _setUpdateStrategy() {
        this.options &&
          this.options.updateOn != null &&
          (this.control._updateOn = this.options.updateOn);
      }
      _isStandalone() {
        return !this._parent || !!(this.options && this.options.standalone);
      }
      _setUpStandalone() {
        Cs(this.control, this, this.callSetDisabledState),
          this.control.updateValueAndValidity({ emitEvent: !1 });
      }
      _checkForErrors() {
        this._isStandalone() || this._checkParentType(), this._checkName();
      }
      _checkParentType() {}
      _checkName() {
        this.options && this.options.name && (this.name = this.options.name),
          !this._isStandalone() && this.name;
      }
      _updateValue(e) {
        yp.then(() => {
          this.control.setValue(e, { emitViewToModelChange: !1 }),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _updateDisabled(e) {
        let i = e.isDisabled.currentValue,
          o = i !== 0 && xe(i);
        yp.then(() => {
          o && !this.control.disabled
            ? this.control.disable()
            : !o && this.control.disabled && this.control.enable(),
            this._changeDetectorRef?.markForCheck();
        });
      }
      _getPath(e) {
        return this._parent ? Lp(e, this._parent) : [e];
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(
            B(Bn, 9),
            B(Oo, 10),
            B(Ss, 10),
            B(ko, 10),
            B(Xe, 8),
            B(na, 8)
          );
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""],
          ],
          inputs: {
            name: "name",
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
            options: [0, "ngModelOptions", "options"],
          },
          outputs: { update: "ngModelChange" },
          exportAs: ["ngModel"],
          features: [St([Y_]), $e, Et],
        });
      }
    }
    return n;
  })(),
  no = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]],
          hostAttrs: ["novalidate", ""],
        });
      }
    }
    return n;
  })();
var Wp = new qe("");
var q_ = { provide: Bn, useExisting: ei(() => Ii) },
  Ii = (() => {
    class n extends Bn {
      get submitted() {
        return an(this._submittedReactive);
      }
      set submitted(e) {
        this._submittedReactive.set(e);
      }
      constructor(e, i, o) {
        super(),
          (this.callSetDisabledState = o),
          (this._submitted = Mo(() => this._submittedReactive())),
          (this._submittedReactive = le(!1)),
          (this._onCollectionChange = () => this._updateDomValue()),
          (this.directives = []),
          (this.form = null),
          (this.ngSubmit = new ve()),
          this._setValidators(e),
          this._setAsyncValidators(i);
      }
      ngOnChanges(e) {
        this._checkFormPresent(),
          e.hasOwnProperty("form") &&
            (this._updateValidators(),
            this._updateDomValue(),
            this._updateRegistrations(),
            (this._oldForm = this.form));
      }
      ngOnDestroy() {
        this.form &&
          (Ds(this.form, this),
          this.form._onCollectionChange === this._onCollectionChange &&
            this.form._registerOnCollectionChange(() => {}));
      }
      get formDirective() {
        return this;
      }
      get control() {
        return this.form;
      }
      get path() {
        return [];
      }
      addControl(e) {
        let i = this.form.get(e.path);
        return (
          Cs(i, e, this.callSetDisabledState),
          i.updateValueAndValidity({ emitEvent: !1 }),
          this.directives.push(e),
          i
        );
      }
      getControl(e) {
        return this.form.get(e.path);
      }
      removeControl(e) {
        _p(e.control || null, e, !1), W_(this.directives, e);
      }
      addFormGroup(e) {
        this._setUpFormContainer(e);
      }
      removeFormGroup(e) {
        this._cleanUpFormContainer(e);
      }
      getFormGroup(e) {
        return this.form.get(e.path);
      }
      addFormArray(e) {
        this._setUpFormContainer(e);
      }
      removeFormArray(e) {
        this._cleanUpFormContainer(e);
      }
      getFormArray(e) {
        return this.form.get(e.path);
      }
      updateModel(e, i) {
        this.form.get(e.path).setValue(i);
      }
      onSubmit(e) {
        return (
          this._submittedReactive.set(!0),
          zp(this.form, this.directives),
          this.ngSubmit.emit(e),
          this.form._events.next(new Hc(this.control)),
          e?.target?.method === "dialog"
        );
      }
      onReset() {
        this.resetForm();
      }
      resetForm(e = void 0) {
        this.form.reset(e),
          this._submittedReactive.set(!1),
          this.form._events.next(new jc(this.form));
      }
      _updateDomValue() {
        this.directives.forEach((e) => {
          let i = e.control,
            o = this.form.get(e.path);
          i !== o &&
            (_p(i || null, e),
            G_(o) && (Cs(o, e, this.callSetDisabledState), (e.control = o)));
        }),
          this.form._updateTreeValidity({ emitEvent: !1 });
      }
      _setUpFormContainer(e) {
        let i = this.form.get(e.path);
        Hp(i, e), i.updateValueAndValidity({ emitEvent: !1 });
      }
      _cleanUpFormContainer(e) {
        if (this.form) {
          let i = this.form.get(e.path);
          i && z_(i, e) && i.updateValueAndValidity({ emitEvent: !1 });
        }
      }
      _updateRegistrations() {
        this.form._registerOnCollectionChange(this._onCollectionChange),
          this._oldForm && this._oldForm._registerOnCollectionChange(() => {});
      }
      _updateValidators() {
        $c(this.form, this), this._oldForm && Ds(this._oldForm, this);
      }
      _checkFormPresent() {
        this.form;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(Oo, 10), B(Ss, 10), B(na, 8));
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [["", "formGroup", ""]],
          hostBindings: function (i, o) {
            i & 1 &&
              F("submit", function (a) {
                return o.onSubmit(a);
              })("reset", function () {
                return o.onReset();
              });
          },
          inputs: { form: [0, "formGroup", "form"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [St([q_]), $e, Et],
        });
      }
    }
    return n;
  })();
var K_ = { provide: Eo, useExisting: ei(() => Pi) },
  Pi = (() => {
    class n extends Eo {
      set isDisabled(e) {}
      static {
        this._ngModelWarningSentOnce = !1;
      }
      constructor(e, i, o, r, a) {
        super(),
          (this._ngModelWarningConfig = a),
          (this._added = !1),
          (this.name = null),
          (this.update = new ve()),
          (this._ngModelWarningSent = !1),
          (this._parent = e),
          this._setValidators(i),
          this._setAsyncValidators(o),
          (this.valueAccessor = Up(this, r));
      }
      ngOnChanges(e) {
        this._added || this._setUpControl(),
          jp(e, this.viewModel) &&
            ((this.viewModel = this.model),
            this.formDirective.updateModel(this, this.model));
      }
      ngOnDestroy() {
        this.formDirective && this.formDirective.removeControl(this);
      }
      viewToModelUpdate(e) {
        (this.viewModel = e), this.update.emit(e);
      }
      get path() {
        return Lp(
          this.name == null ? this.name : this.name.toString(),
          this._parent
        );
      }
      get formDirective() {
        return this._parent ? this._parent.formDirective : null;
      }
      _checkParentType() {}
      _setUpControl() {
        this._checkParentType(),
          (this.control = this.formDirective.addControl(this)),
          (this._added = !0);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(
            B(Bn, 13),
            B(Oo, 10),
            B(Ss, 10),
            B(ko, 10),
            B(Wp, 8)
          );
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [["", "formControlName", ""]],
          inputs: {
            name: [0, "formControlName", "name"],
            isDisabled: [0, "disabled", "isDisabled"],
            model: [0, "ngModel", "model"],
          },
          outputs: { update: "ngModelChange" },
          features: [St([K_]), $e, Et],
        });
      }
    }
    return n;
  })(),
  Q_ = { provide: ko, useExisting: ei(() => zi), multi: !0 };
function $p(n, t) {
  return n == null
    ? `${t}`
    : (t && typeof t == "object" && (t = "Object"), `${n}: ${t}`.slice(0, 50));
}
function X_(n) {
  return n.split(":")[0];
}
var zi = (() => {
    class n extends zc {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let i = this._getOptionId(e),
          o = $p(i, e);
        this.setProperty("value", o);
      }
      registerOnChange(e) {
        this.onChange = (i) => {
          (this.value = this._getOptionValue(i)), e(this.value);
        };
      }
      _registerOption() {
        return (this._idCounter++).toString();
      }
      _getOptionId(e) {
        for (let i of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(i), e)) return i;
        return null;
      }
      _getOptionValue(e) {
        let i = X_(e);
        return this._optionMap.has(i) ? this._optionMap.get(i) : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (o) {
            return (e || (e = ut(n)))(o || n);
          };
        })();
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["select", "formControlName", "", 3, "multiple", ""],
            ["select", "formControl", "", 3, "multiple", ""],
            ["select", "ngModel", "", 3, "multiple", ""],
          ],
          hostBindings: function (i, o) {
            i & 1 &&
              F("change", function (a) {
                return o.onChange(a.target.value);
              })("blur", function () {
                return o.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [St([Q_]), $e],
        });
      }
    }
    return n;
  })(),
  ni = (() => {
    class n {
      constructor(e, i, o) {
        (this._element = e),
          (this._renderer = i),
          (this._select = o),
          this._select && (this.id = this._select._registerOption());
      }
      set ngValue(e) {
        this._select != null &&
          (this._select._optionMap.set(this.id, e),
          this._setElementValue($p(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._setElementValue(e),
          this._select && this._select.writeValue(this._select.value);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(ke), B(ui), B(zi, 9));
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return n;
  })(),
  Z_ = { provide: ko, useExisting: ei(() => Gp), multi: !0 };
function xp(n, t) {
  return n == null
    ? `${t}`
    : (typeof t == "string" && (t = `'${t}'`),
      t && typeof t == "object" && (t = "Object"),
      `${n}: ${t}`.slice(0, 50));
}
function J_(n) {
  return n.split(":")[0];
}
var Gp = (() => {
    class n extends zc {
      constructor() {
        super(...arguments),
          (this._optionMap = new Map()),
          (this._idCounter = 0),
          (this._compareWith = Object.is);
      }
      set compareWith(e) {
        this._compareWith = e;
      }
      writeValue(e) {
        this.value = e;
        let i;
        if (Array.isArray(e)) {
          let o = e.map((r) => this._getOptionId(r));
          i = (r, a) => {
            r._setSelected(o.indexOf(a.toString()) > -1);
          };
        } else
          i = (o, r) => {
            o._setSelected(!1);
          };
        this._optionMap.forEach(i);
      }
      registerOnChange(e) {
        this.onChange = (i) => {
          let o = [],
            r = i.selectedOptions;
          if (r !== void 0) {
            let a = r;
            for (let d = 0; d < a.length; d++) {
              let m = a[d],
                _ = this._getOptionValue(m.value);
              o.push(_);
            }
          } else {
            let a = i.options;
            for (let d = 0; d < a.length; d++) {
              let m = a[d];
              if (m.selected) {
                let _ = this._getOptionValue(m.value);
                o.push(_);
              }
            }
          }
          (this.value = o), e(o);
        };
      }
      _registerOption(e) {
        let i = (this._idCounter++).toString();
        return this._optionMap.set(i, e), i;
      }
      _getOptionId(e) {
        for (let i of this._optionMap.keys())
          if (this._compareWith(this._optionMap.get(i)._value, e)) return i;
        return null;
      }
      _getOptionValue(e) {
        let i = J_(e);
        return this._optionMap.has(i) ? this._optionMap.get(i)._value : e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (o) {
            return (e || (e = ut(n)))(o || n);
          };
        })();
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["select", "multiple", "", "formControlName", ""],
            ["select", "multiple", "", "formControl", ""],
            ["select", "multiple", "", "ngModel", ""],
          ],
          hostBindings: function (i, o) {
            i & 1 &&
              F("change", function (a) {
                return o.onChange(a.target);
              })("blur", function () {
                return o.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [St([Z_]), $e],
        });
      }
    }
    return n;
  })(),
  oi = (() => {
    class n {
      constructor(e, i, o) {
        (this._element = e),
          (this._renderer = i),
          (this._select = o),
          this._select && (this.id = this._select._registerOption(this));
      }
      set ngValue(e) {
        this._select != null &&
          ((this._value = e),
          this._setElementValue(xp(this.id, e)),
          this._select.writeValue(this._select.value));
      }
      set value(e) {
        this._select
          ? ((this._value = e),
            this._setElementValue(xp(this.id, e)),
            this._select.writeValue(this._select.value))
          : this._setElementValue(e);
      }
      _setElementValue(e) {
        this._renderer.setProperty(this._element.nativeElement, "value", e);
      }
      _setSelected(e) {
        this._renderer.setProperty(this._element.nativeElement, "selected", e);
      }
      ngOnDestroy() {
        this._select &&
          (this._select._optionMap.delete(this.id),
          this._select.writeValue(this._select.value));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(ke), B(ui), B(Gp, 9));
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        });
      }
    }
    return n;
  })();
function eb(n) {
  return typeof n == "number" ? n : parseInt(n, 10);
}
var Yc = (() => {
  class n {
    constructor() {
      this._validator = gs;
    }
    ngOnChanges(e) {
      if (this.inputName in e) {
        let i = this.normalizeInput(e[this.inputName].currentValue);
        (this._enabled = this.enabled(i)),
          (this._validator = this._enabled ? this.createValidator(i) : gs),
          this._onChange && this._onChange();
      }
    }
    validate(e) {
      return this._validator(e);
    }
    registerOnValidatorChange(e) {
      this._onChange = e;
    }
    enabled(e) {
      return e != null;
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵdir = Te({ type: n, features: [Et] });
    }
  }
  return n;
})();
var tb = { provide: Oo, useExisting: ei(() => Hn), multi: !0 };
var Hn = (() => {
  class n extends Yc {
    constructor() {
      super(...arguments),
        (this.inputName = "required"),
        (this.normalizeInput = xe),
        (this.createValidator = (e) => Dp);
    }
    enabled(e) {
      return e;
    }
    static {
      this.ɵfac = (() => {
        let e;
        return function (o) {
          return (e || (e = ut(n)))(o || n);
        };
      })();
    }
    static {
      this.ɵdir = Te({
        type: n,
        selectors: [
          ["", "required", "", "formControlName", "", 3, "type", "checkbox"],
          ["", "required", "", "formControl", "", 3, "type", "checkbox"],
          ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
        ],
        hostVars: 1,
        hostBindings: function (i, o) {
          i & 2 && ae("required", o._enabled ? "" : null);
        },
        inputs: { required: "required" },
        features: [St([tb]), $e],
      });
    }
  }
  return n;
})();
var ib = { provide: Oo, useExisting: ei(() => qc), multi: !0 },
  qc = (() => {
    class n extends Yc {
      constructor() {
        super(...arguments),
          (this.inputName = "email"),
          (this.normalizeInput = xe),
          (this.createValidator = (e) => Sp);
      }
      enabled(e) {
        return e;
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (o) {
            return (e || (e = ut(n)))(o || n);
          };
        })();
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["", "email", "", "formControlName", ""],
            ["", "email", "", "formControl", ""],
            ["", "email", "", "ngModel", ""],
          ],
          inputs: { email: "email" },
          features: [St([ib]), $e],
        });
      }
    }
    return n;
  })();
var nb = { provide: Oo, useExisting: ei(() => Kc), multi: !0 },
  Kc = (() => {
    class n extends Yc {
      constructor() {
        super(...arguments),
          (this.inputName = "maxlength"),
          (this.normalizeInput = (e) => eb(e)),
          (this.createValidator = (e) => Mp(e));
      }
      static {
        this.ɵfac = (() => {
          let e;
          return function (o) {
            return (e || (e = ut(n)))(o || n);
          };
        })();
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["", "maxlength", "", "formControlName", ""],
            ["", "maxlength", "", "formControl", ""],
            ["", "maxlength", "", "ngModel", ""],
          ],
          hostVars: 1,
          hostBindings: function (i, o) {
            i & 2 && ae("maxlength", o._enabled ? o.maxlength : null);
          },
          inputs: { maxlength: "maxlength" },
          features: [St([nb]), $e],
        });
      }
    }
    return n;
  })();
var Yp = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({});
    }
  }
  return n;
})();
var it = (() => {
    class n {
      static withConfig(e) {
        return {
          ngModule: n,
          providers: [{ provide: na, useValue: e.callSetDisabledState ?? Ts }],
        };
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = _e({ type: n });
      }
      static {
        this.ɵinj = ge({ imports: [Yp] });
      }
    }
    return n;
  })(),
  Ui = (() => {
    class n {
      static withConfig(e) {
        return {
          ngModule: n,
          providers: [
            {
              provide: Wp,
              useValue: e.warnOnNgModelWithFormControl ?? "always",
            },
            { provide: na, useValue: e.callSetDisabledState ?? Ts },
          ],
        };
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = _e({ type: n });
      }
      static {
        this.ɵinj = ge({ imports: [Yp] });
      }
    }
    return n;
  })();
var Wi = class n {
  onSideBarClick$ = new Ee();
  selectedOption = le("users");
  getSelectedOption() {
    return this.selectedOption;
  }
  setSelectedOption(t) {
    this.selectedOption.set(t);
  }
  pageTitleSubject = new en("Dashboard");
  pageTitle$ = this.pageTitleSubject.asObservable();
  setPageTitle(t) {
    this.pageTitleSubject.next(t);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var oo = class n {
  isOpen = new en(!0);
  isOpen$ = this.isOpen.asObservable();
  toggleSidebar() {
    this.isOpen.next(!this.isOpen.value);
  }
  setSidebar(t) {
    this.isOpen.next(t);
  }
  get currentState() {
    return this.isOpen.value;
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var ob = (n) => ({ "collapsed-sidebar": n }),
  rb = (n) => ({ collapsed: n });
function ab(n, t) {
  if (
    (n & 1 &&
      (c(0, "li", 4)(1, "a", 5), U(2, "i", 6), c(3, "span", 7), h(4), l()()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = w();
    fe("active", i.isActive(e.key)),
      p(),
      y("routerLink", e.route),
      p(),
      y("ngClass", e.icon),
      p(2),
      N(e.label);
  }
}
var hr = class n {
  constructor(t, e, i) {
    this.router = t;
    this.context = e;
    this.sidebarService = i;
  }
  activeMenu = "";
  isSidebarOpen = !0;
  sidebarSub;
  routerSub;
  menuItems = [
    {
      key: "dashboard",
      label: "Dashboard",
      route: "/Admin/dashboard",
      icon: "fas fa-tachometer-alt",
    },
  ];
  ngOnInit() {
    (this.sidebarSub = this.sidebarService.isOpen$.subscribe((t) => {
      this.isSidebarOpen = t;
    })),
      this.updateActiveFromUrl(this.router.url),
      (this.routerSub = this.router.events.subscribe((t) => {
        t instanceof cr && this.updateActiveFromUrl(t.urlAfterRedirects);
      }));
  }
  ngOnDestroy() {
    this.sidebarSub?.unsubscribe(), this.routerSub?.unsubscribe();
  }
  updateActiveFromUrl(t) {
    console.log("Updating active from URL:", t);
    let e = this.menuItems.find((i) => t.includes(i.route));
    e &&
      this.activeMenu !== e.key &&
      (console.log("Setting active menu to:", e.key),
      (this.activeMenu = e.key),
      this.context.setPageTitle(e.label),
      this.context.onSideBarClick$.next({ role: e.key, pageTitle: e.label }));
  }
  isActive(t) {
    return this.activeMenu === t;
  }
  static ɵfac = function (e) {
    return new (e || n)(B(yi), B(Wi), B(oo));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-sidebar"]],
    standalone: !0,
    features: [re],
    decls: 5,
    vars: 7,
    consts: [
      [1, "deznav", 2, "background-color", "#222fb9", 3, "ngClass"],
      ["id", "menu", 1, "metismenu", 3, "ngClass"],
      ["style", "margin-bottom:10px;", 3, "active", 4, "ngFor", "ngForOf"],
      [1, "copyright", 2, "margin-top", "280px"],
      [2, "margin-bottom", "10px"],
      [3, "routerLink"],
      [3, "ngClass"],
      [1, "nav-text", 2, "font-size", "11px", "white-space", "nowrap"],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 0)(1, "div")(2, "ul", 1),
        k(3, ab, 5, 5, "li", 2),
        l(),
        U(4, "div", 3),
        l()()),
        e & 2 &&
          (y("ngClass", he(3, ob, !i.isSidebarOpen)),
          p(2),
          y("ngClass", he(5, rb, !i.isSidebarOpen)),
          p(),
          y("ngForOf", i.menuItems));
    },
    dependencies: [it, Gt, xi, De, It, Bt],
    styles: [
      ".metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{background:#fff3!important;color:#fff!important;border-radius:50px;align-items:center;gap:8px;transition:none!important}.deznav[_ngcontent-%COMP%]:not(.collapsed-sidebar)   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:#fff!important;color:#222fb9!important}.collapsed-sidebar[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{background-color:transparent!important;color:#fff!important}.metismenu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{background-color:inherit!important;color:inherit!important}.deznav[_ngcontent-%COMP%]   .metismenu[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{font-size:1.5rem}.nav-text[_ngcontent-%COMP%]{font-size:15px}",
    ],
  });
};
var wi = class n {
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵmod = _e({ type: n });
  static ɵinj = ge({ imports: [De, it, xi, hr, De, it, xi] });
};
var ks = class n {
  constructor(t) {
    this.http = t;
  }
  getProfile() {
    let t = sessionStorage.getItem("token"),
      e = new ti({ Authorization: `Bearer ${t}` });
    return this.http.get(
      "https://uat.smartassistapp.in/api/superAdmin/show-profile",
      { headers: e }
    );
  }
  static ɵfac = function (e) {
    return new (e || n)(Z($t));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Os = class n {
  constructor(t, e, i, o, r, a, d) {
    this.router = t;
    this.platformId = e;
    this.activatedRoute = i;
    this.context = o;
    this.cdr = r;
    this.sidebarService = a;
    this.userService = d;
  }
  sidebarToggle = new ve();
  guestDetails;
  currentHeading = "Dashboard";
  userName = "";
  ngOnInit() {
    this.context.onSideBarClick$.subscribe(({ pageTitle: t }) => {
      console.log("Current Heading Updated:", t),
        (this.currentHeading = t),
        this.cdr.markForCheck();
    }),
      this.updateTitle(),
      this.router.events
        .pipe(di((t) => t instanceof cr))
        .subscribe(() => this.updateTitle()),
      this.userService.getProfile().subscribe({
        next: (t) => {
          console.log("Profile response:", t),
            (this.userName = t.data?.name || ""),
            console.log("Assigned userName:", this.userName),
            this.cdr.detectChanges();
        },
        error: (t) => {
          console.error("Failed to fetch profile", t),
            (this.userName = ""),
            this.cdr.detectChanges();
        },
      });
  }
  onToggleClick() {
    console.log("Hamburger clicked"), this.sidebarService.toggleSidebar();
  }
  updateTitle() {
    let t = this.getDeepestChild(this.activatedRoute);
  }
  getDeepestChild(t) {
    return t.firstChild ? this.getDeepestChild(t.firstChild) : t;
  }
  logout() {
    console.log("Logging out..."),
      sessionStorage.removeItem("token"),
      (this.guestDetails = null),
      this.router.navigate(["/"]);
  }
  static ɵfac = function (e) {
    return new (e || n)(B(yi), B(Ti), B(vi), B(Wi), B(Xe), B(oo), B(ks));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-header"]],
    outputs: { sidebarToggle: "sidebarToggle" },
    standalone: !0,
    features: [re],
    decls: 83,
    vars: 2,
    consts: [
      [1, "nav-header", 2, "background-color", "#222fb9"],
      [
        "href",
        "javascript:void(0)",
        1,
        "brand-logo",
        2,
        "padding-left",
        "15px !important",
      ],
      [1, "demo-section"],
      [1, "demo-title"],
      [1, "brand-container"],
      [1, "logo-section"],
      ["src", "assets/admin-img/image (1).png", "alt", "Logo", 1, "logo-img"],
      [1, "brand-title"],
      [1, "nav-control", 3, "click"],
      [1, "hamburger"],
      [1, "line"],
      [1, "header"],
      [1, "header-content"],
      [1, "navbar", "navbar-expand"],
      [1, "collapse", "navbar-collapse", "justify-content-between"],
      [1, "header-left"],
      [1, "dashboard_bar"],
      [1, "navbar-nav", "header-right"],
      [1, "nav-item", "dropdown", "header-profile"],
      [
        "data-toggle",
        "dropdown",
        "data-toggle",
        "tooltip",
        "title",
        "Profile",
        1,
        "nav-link",
        "tooltip-test",
        "text-primary",
      ],
      ["src", "./assets/images/1.jpg", 1, "logo-abbr"],
      [1, "dropdown-menu", "dropdown-menu-right"],
      ["routerLink", "/login", 1, "dropdown-item", "ai-icon"],
      [
        "id",
        "icon-user1",
        "xmlns",
        "http://www.w3.org/2000/svg",
        "width",
        "18",
        "height",
        "18",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "stroke",
        "currentColor",
        "stroke-width",
        "2",
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
        1,
        "text-primary",
      ],
      ["d", "M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"],
      ["cx", "12", "cy", "7", "r", "4"],
      [1, "ml-2"],
      [
        "href",
        "javascript:void(0)",
        "onclick",
        "document.getElementById('logoutModal').style.display='block'",
        1,
        "dropdown-item",
      ],
      [
        "id",
        "icon-logout",
        "xmlns",
        "http://www.w3.org/2000/svg",
        "width",
        "18",
        "height",
        "18",
        "viewBox",
        "0 0 24 24",
        "fill",
        "none",
        "stroke",
        "currentColor",
        "stroke-width",
        "2",
        "stroke-linecap",
        "round",
        "stroke-linejoin",
        "round",
        1,
        "text-danger",
      ],
      ["d", "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"],
      ["points", "16 17 21 12 16 7"],
      ["x1", "21", "y1", "12", "x2", "9", "y2", "12"],
      ["id", "logoutModal", 1, "modal"],
      [1, "modal-content"],
      [
        2,
        "font-family",
        "'Poppins', sans-serif",
        "color",
        "black",
        "font-size",
        "15px",
      ],
      [
        "href",
        "javascript:void(0)",
        "onclick",
        "document.getElementById('logoutModal').style.display='none'",
        1,
        "close-btn",
      ],
      [
        "href",
        "javascript:void(0)",
        "onclick",
        "window.location.href='/login'",
        1,
        "logout-btn",
      ],
      [1, "navbar-nav", "header-right", "bg-red-500"],
      [1, "nav-item", "dropdown", "notification_dropdown"],
      [
        "href",
        "#",
        "role",
        "button",
        "data-toggle",
        "dropdown",
        1,
        "nav-link",
        "d-flex",
        "align-items-center",
      ],
      [1, "fa", "fa-user-circle", "mr-2", 2, "font-size", "40px"],
      [
        1,
        "d-none",
        "d-md-inline-block",
        2,
        "color",
        "#000000",
        "font-weight",
        "500",
        "font-size",
        "20px",
      ],
      [
        1,
        "dropdown-menu",
        "dropdown-menu-right",
        2,
        "z-index",
        "999",
        "position",
        "absolute",
      ],
      ["routerLink", "/Admin/profile", 1, "dropdown-item", "ai-icon"],
      [2, "padding", "10px"],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 0)(1, "a", 1)(2, "div", 2),
        U(3, "h2", 3),
        c(4, "div", 4)(5, "div", 5),
        U(6, "img", 6),
        l(),
        c(7, "div", 7)(8, "p"),
        h(9, "Smart Assist"),
        l()()()()(),
        c(10, "div", 8),
        F("click", function () {
          return i.onToggleClick();
        }),
        c(11, "div", 9),
        U(12, "span", 10)(13, "span", 10)(14, "span", 10),
        l()()(),
        c(15, "div", 11)(16, "div", 12)(17, "nav", 13)(18, "div", 14)(
          19,
          "div",
          15
        ),
        U(20, "div", 16),
        l(),
        c(21, "ul", 17)(22, "li", 18)(23, "a", 19),
        U(24, "img", 20),
        l(),
        c(25, "div", 21)(26, "a", 22),
        ct(),
        c(27, "svg", 23),
        U(28, "path", 24)(29, "circle", 25),
        l(),
        eo(),
        c(30, "span", 26),
        h(31, "Profile "),
        l()(),
        c(32, "a", 27),
        ct(),
        c(33, "svg", 28),
        U(34, "path", 29)(35, "polyline", 30)(36, "line", 31),
        l(),
        eo(),
        c(37, "span"),
        h(38, "Logout"),
        l()()()()()()()()(),
        c(39, "div", 32)(40, "div", 33)(41, "h3", 34),
        h(42, "Are you sure you want to logout?"),
        l(),
        c(43, "a", 35),
        h(44, "Cancel"),
        l(),
        c(45, "a", 36),
        h(46, "Logout"),
        l()()(),
        c(47, "div", 11)(48, "div", 12)(49, "nav", 13)(50, "div", 14)(
          51,
          "div",
          15
        )(52, "div", 16),
        h(53),
        l()(),
        c(54, "ul", 37),
        U(55, "li", 38),
        c(56, "li", 18)(57, "a", 39),
        U(58, "i", 40),
        c(59, "span", 41),
        h(60),
        l()(),
        c(61, "div", 42)(62, "a", 43),
        ct(),
        c(63, "svg", 23),
        U(64, "path", 24)(65, "circle", 25),
        l(),
        eo(),
        c(66, "span", 26),
        h(67, "Profile "),
        l()(),
        c(68, "a", 27),
        ct(),
        c(69, "svg", 28),
        U(70, "path", 29)(71, "polyline", 30)(72, "line", 31),
        l(),
        eo(),
        c(73, "span", 44),
        h(74, "Logout"),
        l()()()()()()()()(),
        c(75, "div", 32)(76, "div", 33)(77, "h3", 34),
        h(78, "Are you sure you want to logout?"),
        l(),
        c(79, "a", 35),
        h(80, "Cancel"),
        l(),
        c(81, "a", 36),
        h(82, "Logout"),
        l()()()),
        e & 2 &&
          (p(53), N(i.currentHeading), p(7), K(" Welcome ", i.userName, "! "));
    },
    dependencies: [Gt],
    styles: [
      ".brand-title[_ngcontent-%COMP%]{display:block;max-width:170px!important;margin-left:0}.sidebar.hidden[_ngcontent-%COMP%]{transform:translate(-100%);transition:transform .3s ease}.sidebar[_ngcontent-%COMP%]{transform:translate(0)}.menu-toggle[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{padding:0!important}.logo-abbr[_ngcontent-%COMP%]{display:none}.brand-title[_ngcontent-%COMP%]{display:block;max-width:170px!important;margin-left:30px}.menu-toggle[_ngcontent-%COMP%]   .logo-abbr[_ngcontent-%COMP%]{display:block}.menu-toggle[_ngcontent-%COMP%]   .brand-title[_ngcontent-%COMP%]{display:none}.brand-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;height:60px;gap:10px}.logo-img[_ngcontent-%COMP%]{height:32px;width:auto}.brand-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;font-size:29px;white-space:nowrap;font-weight:600}@media (max-width: 1400px){.nav-control[_ngcontent-%COMP%]{top:40%!important}}@media (max-width: 767px){.brand-title[_ngcontent-%COMP%]{display:none!important}.logo-abbr[_ngcontent-%COMP%]{display:block!important}}.nav-control[_ngcontent-%COMP%]{border:1px solid #ccc;height:40px;border-radius:5px}.brand-container[_ngcontent-%COMP%]{display:flex;align-items:center;padding:12px 16px;border-radius:8px;width:100%;max-width:250px;gap:12px}.logo-section[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;background-color:#ffffff26;border-radius:6px;width:40px;height:40px;flex-shrink:0}.logo-icon[_ngcontent-%COMP%]{width:24px;height:24px;fill:#000}.brand-title[_ngcontent-%COMP%]{fill:#fff;font-size:1.125rem;font-weight:700;white-space:nowrap;margin:0;letter-spacing:-.025em}.brand-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}.logo-img[_ngcontent-%COMP%]{width:24px;height:24px;object-fit:contain}.demo-section[_ngcontent-%COMP%]{margin-bottom:30px}.demo-title[_ngcontent-%COMP%]{font-size:18px;font-weight:600;margin-bottom:15px;color:#374151}@media screen and (min-width: 1280px) and (max-width: 1600px){.brand-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:20px!important}}.modal[_ngcontent-%COMP%]{display:none;position:fixed;z-index:9999;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#00000080}.modal[_ngcontent-%COMP%]:target{display:block}.modal-content[_ngcontent-%COMP%]{background-color:#fff;margin:15% auto;padding:20px;border-radius:10px;width:300px;text-align:center;animation:_ngcontent-%COMP%_fadeIn .3s ease-in-out}@keyframes _ngcontent-%COMP%_fadeIn{0%{transform:scale(.8);opacity:0}to{transform:scale(1);opacity:1}}.close-btn[_ngcontent-%COMP%]{display:inline-block;margin-top:15px;padding:8px 16px;background-color:#ccc;color:#000;text-decoration:none;border-radius:5px}.logout-btn[_ngcontent-%COMP%]{display:inline-block;margin-top:15px;padding:8px 16px;background-color:#222fb9;color:#fff;text-decoration:none;border-radius:5px}.dropdown-item[_ngcontent-%COMP%]{cursor:pointer;display:flex;align-items:center;gap:10px;color:#000;text-decoration:none}.dropdown-item[_ngcontent-%COMP%]:hover{color:#222fb9}",
    ],
    changeDetection: 0,
  });
};
var Is = class n {
  constructor(t) {
    this.sidebarService = t;
  }
  ngOnInit() {
    this.sidebarService.isOpen$.subscribe((t) => {
      this.isSidebarOpen = t;
    });
  }
  isSidebarOpen = !0;
  toggleSidebar() {
    this.sidebarService.toggleSidebar();
  }
  static ɵfac = function (e) {
    return new (e || n)(B(oo));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-overview"]],
    standalone: !0,
    features: [re],
    decls: 6,
    vars: 2,
    consts: [
      ["id", "main-wrapper"],
      [3, "sidebarToggle"],
      [1, "content-body"],
      [1, "container-fluid"],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 0)(1, "app-header", 1),
        F("sidebarToggle", function () {
          return i.toggleSidebar();
        }),
        l(),
        U(2, "app-sidebar"),
        c(3, "div", 2)(4, "div", 3),
        U(5, "router-outlet"),
        l()()()),
        e & 2 && fe("menu-toggle", !i.isSidebarOpen);
    },
    dependencies: [wi, ps, Os, hr],
    styles: [
      ".sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:7rem}@media (min-width: 768px) and (max-width: 819px){.content-body[_ngcontent-%COMP%]{margin-left:42px!important}}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .deznav[_ngcontent-%COMP%]{width:80px}#main-wrapper.sidebar-collapsed[_ngcontent-%COMP%]   .nav-text[_ngcontent-%COMP%]{display:none}@media (min-width: 2560px){.sidebar-collapsed[_ngcontent-%COMP%]   .content-body[_ngcontent-%COMP%]{margin-left:336px!important}}@media screen and (min-width: 1920px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:336px}}@media screen and (width: 1366px){.content-body[_ngcontent-%COMP%]{margin-left:4rem}}#main-wrapper[_ngcontent-%COMP%]{display:flex}.content-body[_ngcontent-%COMP%]{margin-left:250px;transition:margin-left .3s ease;width:100%}@media (min-width: 1601px){.content-body[_ngcontent-%COMP%]{margin-left:336px}}@media only screen and (min-width: 820px) and (max-width: 1279px){.content-body[_ngcontent-%COMP%]{margin-left:5rem}}.content-section[_ngcontent-%COMP%]{padding:20px;margin-top:70px}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:2rem;margin-top:20px}.performance-panel[_ngcontent-%COMP%]{flex:1;background:#f9f9f9;border-radius:8px;padding:20px;height:300px}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px}.metric-box[_ngcontent-%COMP%]{background:#fff;padding:1rem;border-radius:8px;text-align:center;box-shadow:0 2px 4px #0000001a}",
    ],
  });
};
var db = ["chart"],
  qp = (() => {
    class n {
      constructor() {
        (this.chart = pt()),
          (this.annotations = pt()),
          (this.colors = pt()),
          (this.dataLabels = pt()),
          (this.series = pt()),
          (this.stroke = pt()),
          (this.labels = pt()),
          (this.legend = pt()),
          (this.markers = pt()),
          (this.noData = pt()),
          (this.parsing = pt()),
          (this.fill = pt()),
          (this.tooltip = pt()),
          (this.plotOptions = pt()),
          (this.responsive = pt()),
          (this.xaxis = pt()),
          (this.yaxis = pt()),
          (this.forecastDataPoints = pt()),
          (this.grid = pt()),
          (this.states = pt()),
          (this.title = pt()),
          (this.subtitle = pt()),
          (this.theme = pt()),
          (this.autoUpdateSeries = pt(!0)),
          (this.chartReady = Gh()),
          (this.chartInstance = le(null)),
          (this.chartElement = Jh.required("chart")),
          (this.ngZone = J(Oe)),
          (this.isBrowser = ji(J(Ti)));
      }
      ngOnChanges(e) {
        this.isBrowser &&
          this.ngZone.runOutsideAngular(() => {
            wc.schedule(() => this.hydrate(e));
          });
      }
      ngOnDestroy() {
        this.destroy();
      }
      hydrate(e) {
        if (
          this.autoUpdateSeries() &&
          Object.keys(e).filter((o) => o !== "series").length === 0
        ) {
          this.updateSeries(this.series(), !0);
          return;
        }
        this.createElement();
      }
      createElement() {
        return Cc(this, null, function* () {
          let { default: e } = yield import("./chunk-A3I5K2VQ.mjs");
          window.ApexCharts ||= e;
          let i = {};
          [
            "annotations",
            "chart",
            "colors",
            "dataLabels",
            "series",
            "stroke",
            "labels",
            "legend",
            "fill",
            "tooltip",
            "plotOptions",
            "responsive",
            "markers",
            "noData",
            "parsing",
            "xaxis",
            "yaxis",
            "forecastDataPoints",
            "grid",
            "states",
            "title",
            "subtitle",
            "theme",
          ].forEach((a) => {
            let d = this[a]();
            d && (i[a] = d);
          }),
            this.destroy();
          let r = this.ngZone.runOutsideAngular(
            () => new e(this.chartElement().nativeElement, i)
          );
          this.chartInstance.set(r),
            this.render(),
            this.chartReady.emit({ chartObj: r });
        });
      }
      render() {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.render()
        );
      }
      updateOptions(e, i, o, r) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.updateOptions(e, i, o, r)
        );
      }
      updateSeries(e, i) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.updateSeries(e, i)
        );
      }
      appendSeries(e, i) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.appendSeries(e, i)
        );
      }
      appendData(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.appendData(e)
        );
      }
      highlightSeries(e) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.highlightSeries(e)
        );
      }
      toggleSeries(e) {
        return this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.toggleSeries(e)
        );
      }
      showSeries(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.showSeries(e)
        );
      }
      hideSeries(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.hideSeries(e)
        );
      }
      resetSeries() {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.resetSeries()
        );
      }
      zoomX(e, i) {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.zoomX(e, i));
      }
      toggleDataPointSelection(e, i) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.toggleDataPointSelection(e, i)
        );
      }
      destroy() {
        this.chartInstance()?.destroy(), this.chartInstance.set(null);
      }
      setLocale(e) {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.setLocale(e));
      }
      paper() {
        this.ngZone.runOutsideAngular(() => this.chartInstance()?.paper());
      }
      addXaxisAnnotation(e, i, o) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addXaxisAnnotation(e, i, o)
        );
      }
      addYaxisAnnotation(e, i, o) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addYaxisAnnotation(e, i, o)
        );
      }
      addPointAnnotation(e, i, o) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.addPointAnnotation(e, i, o)
        );
      }
      removeAnnotation(e, i) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.removeAnnotation(e, i)
        );
      }
      clearAnnotations(e) {
        this.ngZone.runOutsideAngular(() =>
          this.chartInstance()?.clearAnnotations(e)
        );
      }
      dataURI(e) {
        return this.chartInstance()?.dataURI(e);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["apx-chart"]],
          viewQuery: function (i, o) {
            i & 1 && tp(o.chartElement, db, 5), i & 2 && Ac();
          },
          inputs: {
            chart: [1, "chart"],
            annotations: [1, "annotations"],
            colors: [1, "colors"],
            dataLabels: [1, "dataLabels"],
            series: [1, "series"],
            stroke: [1, "stroke"],
            labels: [1, "labels"],
            legend: [1, "legend"],
            markers: [1, "markers"],
            noData: [1, "noData"],
            parsing: [1, "parsing"],
            fill: [1, "fill"],
            tooltip: [1, "tooltip"],
            plotOptions: [1, "plotOptions"],
            responsive: [1, "responsive"],
            xaxis: [1, "xaxis"],
            yaxis: [1, "yaxis"],
            forecastDataPoints: [1, "forecastDataPoints"],
            grid: [1, "grid"],
            states: [1, "states"],
            title: [1, "title"],
            subtitle: [1, "subtitle"],
            theme: [1, "theme"],
            autoUpdateSeries: [1, "autoUpdateSeries"],
          },
          outputs: { chartReady: "chartReady" },
          standalone: !0,
          features: [Et, re],
          decls: 2,
          vars: 0,
          consts: [["chart", ""]],
          template: function (i, o) {
            i & 1 && U(0, "div", null, 0);
          },
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var Kp = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({});
    }
  }
  return n;
})();
function sa(n) {
  return (n + 0.5) | 0;
}
var ro = (n, t, e) => Math.max(Math.min(n, e), t);
function ra(n) {
  return ro(sa(n * 2.55), 0, 255);
}
function ao(n) {
  return ro(sa(n * 255), 0, 255);
}
function zn(n) {
  return ro(sa(n / 2.55) / 100, 0, 1);
}
function Qp(n) {
  return ro(sa(n * 100), 0, 100);
}
var Gi = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    A: 10,
    B: 11,
    C: 12,
    D: 13,
    E: 14,
    F: 15,
    a: 10,
    b: 11,
    c: 12,
    d: 13,
    e: 14,
    f: 15,
  },
  Zc = [..."0123456789ABCDEF"],
  hb = (n) => Zc[n & 15],
  pb = (n) => Zc[(n & 240) >> 4] + Zc[n & 15],
  Ps = (n) => (n & 240) >> 4 === (n & 15),
  mb = (n) => Ps(n.r) && Ps(n.g) && Ps(n.b) && Ps(n.a);
function fb(n) {
  var t = n.length,
    e;
  return (
    n[0] === "#" &&
      (t === 4 || t === 5
        ? (e = {
            r: 255 & (Gi[n[1]] * 17),
            g: 255 & (Gi[n[2]] * 17),
            b: 255 & (Gi[n[3]] * 17),
            a: t === 5 ? Gi[n[4]] * 17 : 255,
          })
        : (t === 7 || t === 9) &&
          (e = {
            r: (Gi[n[1]] << 4) | Gi[n[2]],
            g: (Gi[n[3]] << 4) | Gi[n[4]],
            b: (Gi[n[5]] << 4) | Gi[n[6]],
            a: t === 9 ? (Gi[n[7]] << 4) | Gi[n[8]] : 255,
          })),
    e
  );
}
var gb = (n, t) => (n < 255 ? t(n) : "");
function _b(n) {
  var t = mb(n) ? hb : pb;
  return n ? "#" + t(n.r) + t(n.g) + t(n.b) + gb(n.a, t) : void 0;
}
var bb =
  /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
function em(n, t, e) {
  let i = t * Math.min(e, 1 - e),
    o = (r, a = (r + n / 30) % 12) =>
      e - i * Math.max(Math.min(a - 3, 9 - a, 1), -1);
  return [o(0), o(8), o(4)];
}
function vb(n, t, e) {
  let i = (o, r = (o + n / 60) % 6) =>
    e - e * t * Math.max(Math.min(r, 4 - r, 1), 0);
  return [i(5), i(3), i(1)];
}
function yb(n, t, e) {
  let i = em(n, 1, 0.5),
    o;
  for (t + e > 1 && ((o = 1 / (t + e)), (t *= o), (e *= o)), o = 0; o < 3; o++)
    (i[o] *= 1 - t - e), (i[o] += t);
  return i;
}
function xb(n, t, e, i, o) {
  return n === o
    ? (t - e) / i + (t < e ? 6 : 0)
    : t === o
    ? (e - n) / i + 2
    : (n - t) / i + 4;
}
function Jc(n) {
  let e = n.r / 255,
    i = n.g / 255,
    o = n.b / 255,
    r = Math.max(e, i, o),
    a = Math.min(e, i, o),
    d = (r + a) / 2,
    m,
    _,
    v;
  return (
    r !== a &&
      ((v = r - a),
      (_ = d > 0.5 ? v / (2 - r - a) : v / (r + a)),
      (m = xb(e, i, o, v, r)),
      (m = m * 60 + 0.5)),
    [m | 0, _ || 0, d]
  );
}
function ed(n, t, e, i) {
  return (Array.isArray(t) ? n(t[0], t[1], t[2]) : n(t, e, i)).map(ao);
}
function td(n, t, e) {
  return ed(em, n, t, e);
}
function Cb(n, t, e) {
  return ed(yb, n, t, e);
}
function wb(n, t, e) {
  return ed(vb, n, t, e);
}
function tm(n) {
  return ((n % 360) + 360) % 360;
}
function Db(n) {
  let t = bb.exec(n),
    e = 255,
    i;
  if (!t) return;
  t[5] !== i && (e = t[6] ? ra(+t[5]) : ao(+t[5]));
  let o = tm(+t[2]),
    r = +t[3] / 100,
    a = +t[4] / 100;
  return (
    t[1] === "hwb"
      ? (i = Cb(o, r, a))
      : t[1] === "hsv"
      ? (i = wb(o, r, a))
      : (i = td(o, r, a)),
    { r: i[0], g: i[1], b: i[2], a: e }
  );
}
function Sb(n, t) {
  var e = Jc(n);
  (e[0] = tm(e[0] + t)), (e = td(e)), (n.r = e[0]), (n.g = e[1]), (n.b = e[2]);
}
function Mb(n) {
  if (!n) return;
  let t = Jc(n),
    e = t[0],
    i = Qp(t[1]),
    o = Qp(t[2]);
  return n.a < 255
    ? `hsla(${e}, ${i}%, ${o}%, ${zn(n.a)})`
    : `hsl(${e}, ${i}%, ${o}%)`;
}
var Xp = {
    x: "dark",
    Z: "light",
    Y: "re",
    X: "blu",
    W: "gr",
    V: "medium",
    U: "slate",
    A: "ee",
    T: "ol",
    S: "or",
    B: "ra",
    C: "lateg",
    D: "ights",
    R: "in",
    Q: "turquois",
    E: "hi",
    P: "ro",
    O: "al",
    N: "le",
    M: "de",
    L: "yello",
    F: "en",
    K: "ch",
    G: "arks",
    H: "ea",
    I: "ightg",
    J: "wh",
  },
  Zp = {
    OiceXe: "f0f8ff",
    antiquewEte: "faebd7",
    aqua: "ffff",
    aquamarRe: "7fffd4",
    azuY: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "0",
    blanKedOmond: "ffebcd",
    Xe: "ff",
    XeviTet: "8a2be2",
    bPwn: "a52a2a",
    burlywood: "deb887",
    caMtXe: "5f9ea0",
    KartYuse: "7fff00",
    KocTate: "d2691e",
    cSO: "ff7f50",
    cSnflowerXe: "6495ed",
    cSnsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "ffff",
    xXe: "8b",
    xcyan: "8b8b",
    xgTMnPd: "b8860b",
    xWay: "a9a9a9",
    xgYF: "6400",
    xgYy: "a9a9a9",
    xkhaki: "bdb76b",
    xmagFta: "8b008b",
    xTivegYF: "556b2f",
    xSange: "ff8c00",
    xScEd: "9932cc",
    xYd: "8b0000",
    xsOmon: "e9967a",
    xsHgYF: "8fbc8f",
    xUXe: "483d8b",
    xUWay: "2f4f4f",
    xUgYy: "2f4f4f",
    xQe: "ced1",
    xviTet: "9400d3",
    dAppRk: "ff1493",
    dApskyXe: "bfff",
    dimWay: "696969",
    dimgYy: "696969",
    dodgerXe: "1e90ff",
    fiYbrick: "b22222",
    flSOwEte: "fffaf0",
    foYstWAn: "228b22",
    fuKsia: "ff00ff",
    gaRsbSo: "dcdcdc",
    ghostwEte: "f8f8ff",
    gTd: "ffd700",
    gTMnPd: "daa520",
    Way: "808080",
    gYF: "8000",
    gYFLw: "adff2f",
    gYy: "808080",
    honeyMw: "f0fff0",
    hotpRk: "ff69b4",
    RdianYd: "cd5c5c",
    Rdigo: "4b0082",
    ivSy: "fffff0",
    khaki: "f0e68c",
    lavFMr: "e6e6fa",
    lavFMrXsh: "fff0f5",
    lawngYF: "7cfc00",
    NmoncEffon: "fffacd",
    ZXe: "add8e6",
    ZcSO: "f08080",
    Zcyan: "e0ffff",
    ZgTMnPdLw: "fafad2",
    ZWay: "d3d3d3",
    ZgYF: "90ee90",
    ZgYy: "d3d3d3",
    ZpRk: "ffb6c1",
    ZsOmon: "ffa07a",
    ZsHgYF: "20b2aa",
    ZskyXe: "87cefa",
    ZUWay: "778899",
    ZUgYy: "778899",
    ZstAlXe: "b0c4de",
    ZLw: "ffffe0",
    lime: "ff00",
    limegYF: "32cd32",
    lRF: "faf0e6",
    magFta: "ff00ff",
    maPon: "800000",
    VaquamarRe: "66cdaa",
    VXe: "cd",
    VScEd: "ba55d3",
    VpurpN: "9370db",
    VsHgYF: "3cb371",
    VUXe: "7b68ee",
    VsprRggYF: "fa9a",
    VQe: "48d1cc",
    VviTetYd: "c71585",
    midnightXe: "191970",
    mRtcYam: "f5fffa",
    mistyPse: "ffe4e1",
    moccasR: "ffe4b5",
    navajowEte: "ffdead",
    navy: "80",
    Tdlace: "fdf5e6",
    Tive: "808000",
    TivedBb: "6b8e23",
    Sange: "ffa500",
    SangeYd: "ff4500",
    ScEd: "da70d6",
    pOegTMnPd: "eee8aa",
    pOegYF: "98fb98",
    pOeQe: "afeeee",
    pOeviTetYd: "db7093",
    papayawEp: "ffefd5",
    pHKpuff: "ffdab9",
    peru: "cd853f",
    pRk: "ffc0cb",
    plum: "dda0dd",
    powMrXe: "b0e0e6",
    purpN: "800080",
    YbeccapurpN: "663399",
    Yd: "ff0000",
    Psybrown: "bc8f8f",
    PyOXe: "4169e1",
    saddNbPwn: "8b4513",
    sOmon: "fa8072",
    sandybPwn: "f4a460",
    sHgYF: "2e8b57",
    sHshell: "fff5ee",
    siFna: "a0522d",
    silver: "c0c0c0",
    skyXe: "87ceeb",
    UXe: "6a5acd",
    UWay: "708090",
    UgYy: "708090",
    snow: "fffafa",
    sprRggYF: "ff7f",
    stAlXe: "4682b4",
    tan: "d2b48c",
    teO: "8080",
    tEstN: "d8bfd8",
    tomato: "ff6347",
    Qe: "40e0d0",
    viTet: "ee82ee",
    JHt: "f5deb3",
    wEte: "ffffff",
    wEtesmoke: "f5f5f5",
    Lw: "ffff00",
    LwgYF: "9acd32",
  };
function Tb() {
  let n = {},
    t = Object.keys(Zp),
    e = Object.keys(Xp),
    i,
    o,
    r,
    a,
    d;
  for (i = 0; i < t.length; i++) {
    for (a = d = t[i], o = 0; o < e.length; o++)
      (r = e[o]), (d = d.replace(r, Xp[r]));
    (r = parseInt(Zp[a], 16)),
      (n[d] = [(r >> 16) & 255, (r >> 8) & 255, r & 255]);
  }
  return n;
}
var As;
function Eb(n) {
  As || ((As = Tb()), (As.transparent = [0, 0, 0, 0]));
  let t = As[n.toLowerCase()];
  return t && { r: t[0], g: t[1], b: t[2], a: t.length === 4 ? t[3] : 255 };
}
var kb =
  /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
function Ob(n) {
  let t = kb.exec(n),
    e = 255,
    i,
    o,
    r;
  if (t) {
    if (t[7] !== i) {
      let a = +t[7];
      e = t[8] ? ra(a) : ro(a * 255, 0, 255);
    }
    return (
      (i = +t[1]),
      (o = +t[3]),
      (r = +t[5]),
      (i = 255 & (t[2] ? ra(i) : ro(i, 0, 255))),
      (o = 255 & (t[4] ? ra(o) : ro(o, 0, 255))),
      (r = 255 & (t[6] ? ra(r) : ro(r, 0, 255))),
      { r: i, g: o, b: r, a: e }
    );
  }
}
function Ib(n) {
  return (
    n &&
    (n.a < 255
      ? `rgba(${n.r}, ${n.g}, ${n.b}, ${zn(n.a)})`
      : `rgb(${n.r}, ${n.g}, ${n.b})`)
  );
}
var Xc = (n) =>
    n <= 0.0031308 ? n * 12.92 : Math.pow(n, 1 / 2.4) * 1.055 - 0.055,
  pr = (n) => (n <= 0.04045 ? n / 12.92 : Math.pow((n + 0.055) / 1.055, 2.4));
function Pb(n, t, e) {
  let i = pr(zn(n.r)),
    o = pr(zn(n.g)),
    r = pr(zn(n.b));
  return {
    r: ao(Xc(i + e * (pr(zn(t.r)) - i))),
    g: ao(Xc(o + e * (pr(zn(t.g)) - o))),
    b: ao(Xc(r + e * (pr(zn(t.b)) - r))),
    a: n.a + e * (t.a - n.a),
  };
}
function Rs(n, t, e) {
  if (n) {
    let i = Jc(n);
    (i[t] = Math.max(0, Math.min(i[t] + i[t] * e, t === 0 ? 360 : 1))),
      (i = td(i)),
      (n.r = i[0]),
      (n.g = i[1]),
      (n.b = i[2]);
  }
}
function im(n, t) {
  return n && Object.assign(t || {}, n);
}
function Jp(n) {
  var t = { r: 0, g: 0, b: 0, a: 255 };
  return (
    Array.isArray(n)
      ? n.length >= 3 &&
        ((t = { r: n[0], g: n[1], b: n[2], a: 255 }),
        n.length > 3 && (t.a = ao(n[3])))
      : ((t = im(n, { r: 0, g: 0, b: 0, a: 1 })), (t.a = ao(t.a))),
    t
  );
}
function Ab(n) {
  return n.charAt(0) === "r" ? Ob(n) : Db(n);
}
var aa = class n {
  constructor(t) {
    if (t instanceof n) return t;
    let e = typeof t,
      i;
    e === "object"
      ? (i = Jp(t))
      : e === "string" && (i = fb(t) || Eb(t) || Ab(t)),
      (this._rgb = i),
      (this._valid = !!i);
  }
  get valid() {
    return this._valid;
  }
  get rgb() {
    var t = im(this._rgb);
    return t && (t.a = zn(t.a)), t;
  }
  set rgb(t) {
    this._rgb = Jp(t);
  }
  rgbString() {
    return this._valid ? Ib(this._rgb) : void 0;
  }
  hexString() {
    return this._valid ? _b(this._rgb) : void 0;
  }
  hslString() {
    return this._valid ? Mb(this._rgb) : void 0;
  }
  mix(t, e) {
    if (t) {
      let i = this.rgb,
        o = t.rgb,
        r,
        a = e === r ? 0.5 : e,
        d = 2 * a - 1,
        m = i.a - o.a,
        _ = ((d * m === -1 ? d : (d + m) / (1 + d * m)) + 1) / 2;
      (r = 1 - _),
        (i.r = 255 & (_ * i.r + r * o.r + 0.5)),
        (i.g = 255 & (_ * i.g + r * o.g + 0.5)),
        (i.b = 255 & (_ * i.b + r * o.b + 0.5)),
        (i.a = a * i.a + (1 - a) * o.a),
        (this.rgb = i);
    }
    return this;
  }
  interpolate(t, e) {
    return t && (this._rgb = Pb(this._rgb, t._rgb, e)), this;
  }
  clone() {
    return new n(this.rgb);
  }
  alpha(t) {
    return (this._rgb.a = ao(t)), this;
  }
  clearer(t) {
    let e = this._rgb;
    return (e.a *= 1 - t), this;
  }
  greyscale() {
    let t = this._rgb,
      e = sa(t.r * 0.3 + t.g * 0.59 + t.b * 0.11);
    return (t.r = t.g = t.b = e), this;
  }
  opaquer(t) {
    let e = this._rgb;
    return (e.a *= 1 + t), this;
  }
  negate() {
    let t = this._rgb;
    return (t.r = 255 - t.r), (t.g = 255 - t.g), (t.b = 255 - t.b), this;
  }
  lighten(t) {
    return Rs(this._rgb, 2, t), this;
  }
  darken(t) {
    return Rs(this._rgb, 2, -t), this;
  }
  saturate(t) {
    return Rs(this._rgb, 1, t), this;
  }
  desaturate(t) {
    return Rs(this._rgb, 1, -t), this;
  }
  rotate(t) {
    return Sb(this._rgb, t), this;
  }
};
var cm = (() => {
  let n = 0;
  return () => n++;
})();
function mt(n) {
  return n == null;
}
function At(n) {
  if (Array.isArray && Array.isArray(n)) return !0;
  let t = Object.prototype.toString.call(n);
  return t.slice(0, 7) === "[object" && t.slice(-6) === "Array]";
}
function nt(n) {
  return n !== null && Object.prototype.toString.call(n) === "[object Object]";
}
function Ut(n) {
  return (typeof n == "number" || n instanceof Number) && isFinite(+n);
}
function Di(n, t) {
  return Ut(n) ? n : t;
}
function Pt(n, t) {
  return typeof n > "u" ? t : n;
}
var dm = (n, t) =>
  typeof n == "string" && n.endsWith("%") ? (parseFloat(n) / 100) * t : +n;
function Mt(n, t, e) {
  if (n && typeof n.call == "function") return n.apply(e, t);
}
function Qt(n, t, e, i) {
  let o, r, a;
  if (At(n))
    if (((r = n.length), i)) for (o = r - 1; o >= 0; o--) t.call(e, n[o], o);
    else for (o = 0; o < r; o++) t.call(e, n[o], o);
  else if (nt(n))
    for (a = Object.keys(n), r = a.length, o = 0; o < r; o++)
      t.call(e, n[a[o]], a[o]);
}
function rd(n, t) {
  let e, i, o, r;
  if (!n || !t || n.length !== t.length) return !1;
  for (e = 0, i = n.length; e < i; ++e)
    if (
      ((o = n[e]),
      (r = t[e]),
      o.datasetIndex !== r.datasetIndex || o.index !== r.index)
    )
      return !1;
  return !0;
}
function Ls(n) {
  if (At(n)) return n.map(Ls);
  if (nt(n)) {
    let t = Object.create(null),
      e = Object.keys(n),
      i = e.length,
      o = 0;
    for (; o < i; ++o) t[e[o]] = Ls(n[e[o]]);
    return t;
  }
  return n;
}
function um(n) {
  return ["__proto__", "prototype", "constructor"].indexOf(n) === -1;
}
function Rb(n, t, e, i) {
  if (!um(n)) return;
  let o = t[n],
    r = e[n];
  nt(o) && nt(r) ? fr(o, r, i) : (t[n] = Ls(r));
}
function fr(n, t, e) {
  let i = At(t) ? t : [t],
    o = i.length;
  if (!nt(n)) return n;
  e = e || {};
  let r = e.merger || Rb,
    a;
  for (let d = 0; d < o; ++d) {
    if (((a = i[d]), !nt(a))) continue;
    let m = Object.keys(a);
    for (let _ = 0, v = m.length; _ < v; ++_) r(m[_], n, a, e);
  }
  return n;
}
function gr(n, t) {
  return fr(n, t, { merger: Fb });
}
function Fb(n, t, e) {
  if (!um(n)) return;
  let i = t[n],
    o = e[n];
  nt(i) && nt(o)
    ? gr(i, o)
    : Object.prototype.hasOwnProperty.call(t, n) || (t[n] = Ls(o));
}
var nm = { "": (n) => n, x: (n) => n.x, y: (n) => n.y };
function Nb(n) {
  let t = n.split("."),
    e = [],
    i = "";
  for (let o of t)
    (i += o),
      i.endsWith("\\") ? (i = i.slice(0, -1) + ".") : (e.push(i), (i = ""));
  return e;
}
function Vb(n) {
  let t = Nb(n);
  return (e) => {
    for (let i of t) {
      if (i === "") break;
      e = e && e[i];
    }
    return e;
  };
}
function da(n, t) {
  return (nm[t] || (nm[t] = Vb(t)))(n);
}
function js(n) {
  return n.charAt(0).toUpperCase() + n.slice(1);
}
var ua = (n) => typeof n < "u",
  Un = (n) => typeof n == "function",
  ad = (n, t) => {
    if (n.size !== t.size) return !1;
    for (let e of n) if (!t.has(e)) return !1;
    return !0;
  };
function hm(n) {
  return n.type === "mouseup" || n.type === "click" || n.type === "contextmenu";
}
var ri = Math.PI,
  Cn = 2 * ri,
  jE = Cn + ri,
  Bs = Number.POSITIVE_INFINITY,
  zE = ri / 180,
  wn = ri / 2,
  UE = ri / 4,
  WE = (ri * 2) / 3,
  Wn = Math.log10,
  ha = Math.sign;
function pa(n, t, e) {
  return Math.abs(n - t) < e;
}
function sd(n) {
  let t = Math.round(n);
  n = pa(n, t, n / 1e3) ? t : n;
  let e = Math.pow(10, Math.floor(Wn(n))),
    i = n / e;
  return (i <= 1 ? 1 : i <= 2 ? 2 : i <= 5 ? 5 : 10) * e;
}
function pm(n) {
  let t = [],
    e = Math.sqrt(n),
    i;
  for (i = 1; i < e; i++) n % i === 0 && (t.push(i), t.push(n / i));
  return e === (e | 0) && t.push(e), t.sort((o, r) => o - r).pop(), t;
}
function Lb(n) {
  return (
    typeof n == "symbol" ||
    (typeof n == "object" &&
      n !== null &&
      !(Symbol.toPrimitive in n || "toString" in n || "valueOf" in n))
  );
}
function ma(n) {
  return !Lb(n) && !isNaN(parseFloat(n)) && isFinite(n);
}
function mm(n, t) {
  let e = Math.round(n);
  return e - t <= n && e + t >= n;
}
function ld(n, t, e) {
  let i, o, r;
  for (i = 0, o = n.length; i < o; i++)
    (r = n[i][e]),
      isNaN(r) || ((t.min = Math.min(t.min, r)), (t.max = Math.max(t.max, r)));
}
function $n(n) {
  return n * (ri / 180);
}
function zs(n) {
  return n * (180 / ri);
}
function cd(n) {
  if (!Ut(n)) return;
  let t = 1,
    e = 0;
  for (; Math.round(n * t) / t !== n; ) (t *= 10), e++;
  return e;
}
function fm(n, t) {
  let e = t.x - n.x,
    i = t.y - n.y,
    o = Math.sqrt(e * e + i * i),
    r = Math.atan2(i, e);
  return r < -0.5 * ri && (r += Cn), { angle: r, distance: o };
}
function sn(n) {
  return ((n % Cn) + Cn) % Cn;
}
function gm(n, t, e, i) {
  let o = sn(n),
    r = sn(t),
    a = sn(e),
    d = sn(r - o),
    m = sn(a - o),
    _ = sn(o - r),
    v = sn(o - a);
  return o === r || o === a || (i && r === a) || (d > m && _ < v);
}
function so(n, t, e) {
  return Math.max(t, Math.min(e, n));
}
function _m(n) {
  return so(n, -32768, 32767);
}
function Us(n, t, e) {
  e = e || ((a) => n[a] < t);
  let i = n.length - 1,
    o = 0,
    r;
  for (; i - o > 1; ) (r = (o + i) >> 1), e(r) ? (o = r) : (i = r);
  return { lo: o, hi: i };
}
var Ws = (n, t, e, i) =>
    Us(
      n,
      e,
      i
        ? (o) => {
            let r = n[o][t];
            return r < e || (r === e && n[o + 1][t] === e);
          }
        : (o) => n[o][t] < e
    ),
  bm = (n, t, e) => Us(n, e, (i) => n[i][t] >= e);
function vm(n, t, e) {
  let i = 0,
    o = n.length;
  for (; i < o && n[i] < t; ) i++;
  for (; o > i && n[o - 1] > e; ) o--;
  return i > 0 || o < n.length ? n.slice(i, o) : n;
}
var ym = ["push", "pop", "shift", "splice", "unshift"];
function xm(n, t) {
  if (n._chartjs) {
    n._chartjs.listeners.push(t);
    return;
  }
  Object.defineProperty(n, "_chartjs", {
    configurable: !0,
    enumerable: !1,
    value: { listeners: [t] },
  }),
    ym.forEach((e) => {
      let i = "_onData" + js(e),
        o = n[e];
      Object.defineProperty(n, e, {
        configurable: !0,
        enumerable: !1,
        value(...r) {
          let a = o.apply(this, r);
          return (
            n._chartjs.listeners.forEach((d) => {
              typeof d[i] == "function" && d[i](...r);
            }),
            a
          );
        },
      });
    });
}
function dd(n, t) {
  let e = n._chartjs;
  if (!e) return;
  let i = e.listeners,
    o = i.indexOf(t);
  o !== -1 && i.splice(o, 1),
    !(i.length > 0) &&
      (ym.forEach((r) => {
        delete n[r];
      }),
      delete n._chartjs);
}
function Cm(n) {
  let t = new Set(n);
  return t.size === n.length ? n : Array.from(t);
}
var ud = (function () {
  return typeof window > "u"
    ? function (n) {
        return n();
      }
    : window.requestAnimationFrame;
})();
function hd(n, t) {
  let e = [],
    i = !1;
  return function (...o) {
    (e = o),
      i ||
        ((i = !0),
        ud.call(window, () => {
          (i = !1), n.apply(t, e);
        }));
  };
}
function wm(n, t) {
  let e;
  return function (...i) {
    return (
      t ? (clearTimeout(e), (e = setTimeout(n, t, i))) : n.apply(this, i), t
    );
  };
}
var Dm = (n) => (n === "start" ? "left" : n === "end" ? "right" : "center"),
  pd = (n, t, e) => (n === "start" ? t : n === "end" ? e : (t + e) / 2);
var Fs = (n) => n === 0 || n === 1,
  om = (n, t, e) =>
    -(Math.pow(2, 10 * (n -= 1)) * Math.sin(((n - t) * Cn) / e)),
  rm = (n, t, e) => Math.pow(2, -10 * n) * Math.sin(((n - t) * Cn) / e) + 1,
  mr = {
    linear: (n) => n,
    easeInQuad: (n) => n * n,
    easeOutQuad: (n) => -n * (n - 2),
    easeInOutQuad: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n : -0.5 * (--n * (n - 2) - 1),
    easeInCubic: (n) => n * n * n,
    easeOutCubic: (n) => (n -= 1) * n * n + 1,
    easeInOutCubic: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n * n : 0.5 * ((n -= 2) * n * n + 2),
    easeInQuart: (n) => n * n * n * n,
    easeOutQuart: (n) => -((n -= 1) * n * n * n - 1),
    easeInOutQuart: (n) =>
      (n /= 0.5) < 1 ? 0.5 * n * n * n * n : -0.5 * ((n -= 2) * n * n * n - 2),
    easeInQuint: (n) => n * n * n * n * n,
    easeOutQuint: (n) => (n -= 1) * n * n * n * n + 1,
    easeInOutQuint: (n) =>
      (n /= 0.5) < 1
        ? 0.5 * n * n * n * n * n
        : 0.5 * ((n -= 2) * n * n * n * n + 2),
    easeInSine: (n) => -Math.cos(n * wn) + 1,
    easeOutSine: (n) => Math.sin(n * wn),
    easeInOutSine: (n) => -0.5 * (Math.cos(ri * n) - 1),
    easeInExpo: (n) => (n === 0 ? 0 : Math.pow(2, 10 * (n - 1))),
    easeOutExpo: (n) => (n === 1 ? 1 : -Math.pow(2, -10 * n) + 1),
    easeInOutExpo: (n) =>
      Fs(n)
        ? n
        : n < 0.5
        ? 0.5 * Math.pow(2, 10 * (n * 2 - 1))
        : 0.5 * (-Math.pow(2, -10 * (n * 2 - 1)) + 2),
    easeInCirc: (n) => (n >= 1 ? n : -(Math.sqrt(1 - n * n) - 1)),
    easeOutCirc: (n) => Math.sqrt(1 - (n -= 1) * n),
    easeInOutCirc: (n) =>
      (n /= 0.5) < 1
        ? -0.5 * (Math.sqrt(1 - n * n) - 1)
        : 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1),
    easeInElastic: (n) => (Fs(n) ? n : om(n, 0.075, 0.3)),
    easeOutElastic: (n) => (Fs(n) ? n : rm(n, 0.075, 0.3)),
    easeInOutElastic(n) {
      return Fs(n)
        ? n
        : n < 0.5
        ? 0.5 * om(n * 2, 0.1125, 0.45)
        : 0.5 + 0.5 * rm(n * 2 - 1, 0.1125, 0.45);
    },
    easeInBack(n) {
      return n * n * ((1.70158 + 1) * n - 1.70158);
    },
    easeOutBack(n) {
      return (n -= 1) * n * ((1.70158 + 1) * n + 1.70158) + 1;
    },
    easeInOutBack(n) {
      let t = 1.70158;
      return (n /= 0.5) < 1
        ? 0.5 * (n * n * (((t *= 1.525) + 1) * n - t))
        : 0.5 * ((n -= 2) * n * (((t *= 1.525) + 1) * n + t) + 2);
    },
    easeInBounce: (n) => 1 - mr.easeOutBounce(1 - n),
    easeOutBounce(n) {
      return n < 1 / 2.75
        ? 7.5625 * n * n
        : n < 2 / 2.75
        ? 7.5625 * (n -= 1.5 / 2.75) * n + 0.75
        : n < 2.5 / 2.75
        ? 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375
        : 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;
    },
    easeInOutBounce: (n) =>
      n < 0.5
        ? mr.easeInBounce(n * 2) * 0.5
        : mr.easeOutBounce(n * 2 - 1) * 0.5 + 0.5,
  };
function Sm(n) {
  if (n && typeof n == "object") {
    let t = n.toString();
    return t === "[object CanvasPattern]" || t === "[object CanvasGradient]";
  }
  return !1;
}
function md(n) {
  return Sm(n) ? n : new aa(n);
}
function id(n) {
  return Sm(n) ? n : new aa(n).saturate(0.5).darken(0.1).hexString();
}
var Bb = ["x", "y", "borderWidth", "radius", "tension"],
  Hb = ["color", "borderColor", "backgroundColor"];
function jb(n) {
  n.set("animation", {
    delay: void 0,
    duration: 1e3,
    easing: "easeOutQuart",
    fn: void 0,
    from: void 0,
    loop: void 0,
    to: void 0,
    type: void 0,
  }),
    n.describe("animation", {
      _fallback: !1,
      _indexable: !1,
      _scriptable: (t) =>
        t !== "onProgress" && t !== "onComplete" && t !== "fn",
    }),
    n.set("animations", {
      colors: { type: "color", properties: Hb },
      numbers: { type: "number", properties: Bb },
    }),
    n.describe("animations", { _fallback: "animation" }),
    n.set("transitions", {
      active: { animation: { duration: 400 } },
      resize: { animation: { duration: 0 } },
      show: {
        animations: {
          colors: { from: "transparent" },
          visible: { type: "boolean", duration: 0 },
        },
      },
      hide: {
        animations: {
          colors: { to: "transparent" },
          visible: { type: "boolean", easing: "linear", fn: (t) => t | 0 },
        },
      },
    });
}
function zb(n) {
  n.set("layout", {
    autoPadding: !0,
    padding: { top: 0, right: 0, bottom: 0, left: 0 },
  });
}
var am = new Map();
function Ub(n, t) {
  t = t || {};
  let e = n + JSON.stringify(t),
    i = am.get(e);
  return i || ((i = new Intl.NumberFormat(n, t)), am.set(e, i)), i;
}
function $s(n, t, e) {
  return Ub(t, e).format(n);
}
var Mm = {
  values(n) {
    return At(n) ? n : "" + n;
  },
  numeric(n, t, e) {
    if (n === 0) return "0";
    let i = this.chart.options.locale,
      o,
      r = n;
    if (e.length > 1) {
      let _ = Math.max(Math.abs(e[0].value), Math.abs(e[e.length - 1].value));
      (_ < 1e-4 || _ > 1e15) && (o = "scientific"), (r = Wb(n, e));
    }
    let a = Wn(Math.abs(r)),
      d = isNaN(a) ? 1 : Math.max(Math.min(-1 * Math.floor(a), 20), 0),
      m = { notation: o, minimumFractionDigits: d, maximumFractionDigits: d };
    return Object.assign(m, this.options.ticks.format), $s(n, i, m);
  },
  logarithmic(n, t, e) {
    if (n === 0) return "0";
    let i = e[t].significand || n / Math.pow(10, Math.floor(Wn(n)));
    return [1, 2, 3, 5, 10, 15].includes(i) || t > 0.8 * e.length
      ? Mm.numeric.call(this, n, t, e)
      : "";
  },
};
function Wb(n, t) {
  let e = t.length > 3 ? t[2].value - t[1].value : t[1].value - t[0].value;
  return Math.abs(e) >= 1 && n !== Math.floor(n) && (e = n - Math.floor(n)), e;
}
var fa = { formatters: Mm };
function $b(n) {
  n.set("scale", {
    display: !0,
    offset: !1,
    reverse: !1,
    beginAtZero: !1,
    bounds: "ticks",
    clip: !0,
    grace: 0,
    grid: {
      display: !0,
      lineWidth: 1,
      drawOnChartArea: !0,
      drawTicks: !0,
      tickLength: 8,
      tickWidth: (t, e) => e.lineWidth,
      tickColor: (t, e) => e.color,
      offset: !1,
    },
    border: { display: !0, dash: [], dashOffset: 0, width: 1 },
    title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
    ticks: {
      minRotation: 0,
      maxRotation: 50,
      mirror: !1,
      textStrokeWidth: 0,
      textStrokeColor: "",
      padding: 3,
      display: !0,
      autoSkip: !0,
      autoSkipPadding: 3,
      labelOffset: 0,
      callback: fa.formatters.values,
      minor: {},
      major: {},
      align: "center",
      crossAlign: "near",
      showLabelBackdrop: !1,
      backdropColor: "rgba(255, 255, 255, 0.75)",
      backdropPadding: 2,
    },
  }),
    n.route("scale.ticks", "color", "", "color"),
    n.route("scale.grid", "color", "", "borderColor"),
    n.route("scale.border", "color", "", "borderColor"),
    n.route("scale.title", "color", "", "color"),
    n.describe("scale", {
      _fallback: !1,
      _scriptable: (t) =>
        !t.startsWith("before") &&
        !t.startsWith("after") &&
        t !== "callback" &&
        t !== "parser",
      _indexable: (t) =>
        t !== "borderDash" && t !== "tickBorderDash" && t !== "dash",
    }),
    n.describe("scales", { _fallback: "scale" }),
    n.describe("scale.ticks", {
      _scriptable: (t) => t !== "backdropPadding" && t !== "callback",
      _indexable: (t) => t !== "backdropPadding",
    });
}
var lo = Object.create(null),
  Gs = Object.create(null);
function la(n, t) {
  if (!t) return n;
  let e = t.split(".");
  for (let i = 0, o = e.length; i < o; ++i) {
    let r = e[i];
    n = n[r] || (n[r] = Object.create(null));
  }
  return n;
}
function nd(n, t, e) {
  return typeof t == "string" ? fr(la(n, t), e) : fr(la(n, ""), t);
}
var od = class {
    constructor(t, e) {
      (this.animation = void 0),
        (this.backgroundColor = "rgba(0,0,0,0.1)"),
        (this.borderColor = "rgba(0,0,0,0.1)"),
        (this.color = "#666"),
        (this.datasets = {}),
        (this.devicePixelRatio = (i) => i.chart.platform.getDevicePixelRatio()),
        (this.elements = {}),
        (this.events = [
          "mousemove",
          "mouseout",
          "click",
          "touchstart",
          "touchmove",
        ]),
        (this.font = {
          family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
          size: 12,
          style: "normal",
          lineHeight: 1.2,
          weight: null,
        }),
        (this.hover = {}),
        (this.hoverBackgroundColor = (i, o) => id(o.backgroundColor)),
        (this.hoverBorderColor = (i, o) => id(o.borderColor)),
        (this.hoverColor = (i, o) => id(o.color)),
        (this.indexAxis = "x"),
        (this.interaction = {
          mode: "nearest",
          intersect: !0,
          includeInvisible: !1,
        }),
        (this.maintainAspectRatio = !0),
        (this.onHover = null),
        (this.onClick = null),
        (this.parsing = !0),
        (this.plugins = {}),
        (this.responsive = !0),
        (this.scale = void 0),
        (this.scales = {}),
        (this.showLine = !0),
        (this.drawActiveElementsOnTop = !0),
        this.describe(t),
        this.apply(e);
    }
    set(t, e) {
      return nd(this, t, e);
    }
    get(t) {
      return la(this, t);
    }
    describe(t, e) {
      return nd(Gs, t, e);
    }
    override(t, e) {
      return nd(lo, t, e);
    }
    route(t, e, i, o) {
      let r = la(this, t),
        a = la(this, i),
        d = "_" + e;
      Object.defineProperties(r, {
        [d]: { value: r[e], writable: !0 },
        [e]: {
          enumerable: !0,
          get() {
            let m = this[d],
              _ = a[o];
            return nt(m) ? Object.assign({}, _, m) : Pt(m, _);
          },
          set(m) {
            this[d] = m;
          },
        },
      });
    }
    apply(t) {
      t.forEach((e) => e(this));
    }
  },
  Rt = new od(
    {
      _scriptable: (n) => !n.startsWith("on"),
      _indexable: (n) => n !== "events",
      hover: { _fallback: "interaction" },
      interaction: { _scriptable: !1, _indexable: !1 },
    },
    [jb, zb, $b]
  );
function Gb(n) {
  return !n || mt(n.size) || mt(n.family)
    ? null
    : (n.style ? n.style + " " : "") +
        (n.weight ? n.weight + " " : "") +
        n.size +
        "px " +
        n.family;
}
function ca(n, t, e, i, o) {
  let r = t[o];
  return (
    r || ((r = t[o] = n.measureText(o).width), e.push(o)), r > i && (i = r), i
  );
}
function Tm(n, t, e, i) {
  i = i || {};
  let o = (i.data = i.data || {}),
    r = (i.garbageCollect = i.garbageCollect || []);
  i.font !== t &&
    ((o = i.data = {}), (r = i.garbageCollect = []), (i.font = t)),
    n.save(),
    (n.font = t);
  let a = 0,
    d = e.length,
    m,
    _,
    v,
    S,
    T;
  for (m = 0; m < d; m++)
    if (((S = e[m]), S != null && !At(S))) a = ca(n, o, r, a, S);
    else if (At(S))
      for (_ = 0, v = S.length; _ < v; _++)
        (T = S[_]), T != null && !At(T) && (a = ca(n, o, r, a, T));
  n.restore();
  let M = r.length / 2;
  if (M > e.length) {
    for (m = 0; m < M; m++) delete o[r[m]];
    r.splice(0, M);
  }
  return a;
}
function co(n, t, e) {
  let i = n.currentDevicePixelRatio,
    o = e !== 0 ? Math.max(e / 2, 0.5) : 0;
  return Math.round((t - o) * i) / i + o;
}
function fd(n, t) {
  (!t && !n) ||
    ((t = t || n.getContext("2d")),
    t.save(),
    t.resetTransform(),
    t.clearRect(0, 0, n.width, n.height),
    t.restore());
}
function Ao(n, t, e) {
  return (
    (e = e || 0.5),
    !t ||
      (n &&
        n.x > t.left - e &&
        n.x < t.right + e &&
        n.y > t.top - e &&
        n.y < t.bottom + e)
  );
}
function gd(n, t) {
  n.save(),
    n.beginPath(),
    n.rect(t.left, t.top, t.right - t.left, t.bottom - t.top),
    n.clip();
}
function _d(n) {
  n.restore();
}
function Yb(n, t) {
  t.translation && n.translate(t.translation[0], t.translation[1]),
    mt(t.rotation) || n.rotate(t.rotation),
    t.color && (n.fillStyle = t.color),
    t.textAlign && (n.textAlign = t.textAlign),
    t.textBaseline && (n.textBaseline = t.textBaseline);
}
function qb(n, t, e, i, o) {
  if (o.strikethrough || o.underline) {
    let r = n.measureText(i),
      a = t - r.actualBoundingBoxLeft,
      d = t + r.actualBoundingBoxRight,
      m = e - r.actualBoundingBoxAscent,
      _ = e + r.actualBoundingBoxDescent,
      v = o.strikethrough ? (m + _) / 2 : _;
    (n.strokeStyle = n.fillStyle),
      n.beginPath(),
      (n.lineWidth = o.decorationWidth || 2),
      n.moveTo(a, v),
      n.lineTo(d, v),
      n.stroke();
  }
}
function Kb(n, t) {
  let e = n.fillStyle;
  (n.fillStyle = t.color),
    n.fillRect(t.left, t.top, t.width, t.height),
    (n.fillStyle = e);
}
function ga(n, t, e, i, o, r = {}) {
  let a = At(t) ? t : [t],
    d = r.strokeWidth > 0 && r.strokeColor !== "",
    m,
    _;
  for (n.save(), n.font = o.string, Yb(n, r), m = 0; m < a.length; ++m)
    (_ = a[m]),
      r.backdrop && Kb(n, r.backdrop),
      d &&
        (r.strokeColor && (n.strokeStyle = r.strokeColor),
        mt(r.strokeWidth) || (n.lineWidth = r.strokeWidth),
        n.strokeText(_, e, i, r.maxWidth)),
      n.fillText(_, e, i, r.maxWidth),
      qb(n, e, i, _, r),
      (i += Number(o.lineHeight));
  n.restore();
}
function Em(n, t) {
  let { x: e, y: i, w: o, h: r, radius: a } = t;
  n.arc(e + a.topLeft, i + a.topLeft, a.topLeft, 1.5 * ri, ri, !0),
    n.lineTo(e, i + r - a.bottomLeft),
    n.arc(e + a.bottomLeft, i + r - a.bottomLeft, a.bottomLeft, ri, wn, !0),
    n.lineTo(e + o - a.bottomRight, i + r),
    n.arc(
      e + o - a.bottomRight,
      i + r - a.bottomRight,
      a.bottomRight,
      wn,
      0,
      !0
    ),
    n.lineTo(e + o, i + a.topRight),
    n.arc(e + o - a.topRight, i + a.topRight, a.topRight, 0, -wn, !0),
    n.lineTo(e + a.topLeft, i);
}
var Qb = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,
  Xb = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
function Zb(n, t) {
  let e = ("" + n).match(Qb);
  if (!e || e[1] === "normal") return t * 1.2;
  switch (((n = +e[2]), e[3])) {
    case "px":
      return n;
    case "%":
      n /= 100;
      break;
  }
  return t * n;
}
var Jb = (n) => +n || 0;
function bd(n, t) {
  let e = {},
    i = nt(t),
    o = i ? Object.keys(t) : t,
    r = nt(n) ? (i ? (a) => Pt(n[a], n[t[a]]) : (a) => n[a]) : () => n;
  for (let a of o) e[a] = Jb(r(a));
  return e;
}
function km(n) {
  return bd(n, { top: "y", right: "x", bottom: "y", left: "x" });
}
function Om(n) {
  return bd(n, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
}
function Dn(n) {
  let t = km(n);
  return (t.width = t.left + t.right), (t.height = t.top + t.bottom), t;
}
function Ro(n, t) {
  (n = n || {}), (t = t || Rt.font);
  let e = Pt(n.size, t.size);
  typeof e == "string" && (e = parseInt(e, 10));
  let i = Pt(n.style, t.style);
  i &&
    !("" + i).match(Xb) &&
    (console.warn('Invalid font style specified: "' + i + '"'), (i = void 0));
  let o = {
    family: Pt(n.family, t.family),
    lineHeight: Zb(Pt(n.lineHeight, t.lineHeight), e),
    size: e,
    style: i,
    weight: Pt(n.weight, t.weight),
    string: "",
  };
  return (o.string = Gb(o)), o;
}
function _a(n, t, e, i) {
  let o = !0,
    r,
    a,
    d;
  for (r = 0, a = n.length; r < a; ++r)
    if (
      ((d = n[r]),
      d !== void 0 &&
        (t !== void 0 && typeof d == "function" && ((d = d(t)), (o = !1)),
        e !== void 0 && At(d) && ((d = d[e % d.length]), (o = !1)),
        d !== void 0))
    )
      return i && !o && (i.cacheable = !1), d;
}
function Im(n, t, e) {
  let { min: i, max: o } = n,
    r = dm(t, (o - i) / 2),
    a = (d, m) => (e && d === 0 ? 0 : d + m);
  return { min: a(i, -Math.abs(r)), max: a(o, r) };
}
function Fo(n, t) {
  return Object.assign(Object.create(n), t);
}
function Ys(n, t = [""], e, i, o = () => n[0]) {
  let r = e || n;
  typeof i > "u" && (i = Rm("_fallback", n));
  let a = {
    [Symbol.toStringTag]: "Object",
    _cacheable: !0,
    _scopes: n,
    _rootScopes: r,
    _fallback: i,
    _getTarget: o,
    override: (d) => Ys([d, ...n], t, r, i),
  };
  return new Proxy(a, {
    deleteProperty(d, m) {
      return delete d[m], delete d._keys, delete n[0][m], !0;
    },
    get(d, m) {
      return Pm(d, m, () => sv(m, t, n, d));
    },
    getOwnPropertyDescriptor(d, m) {
      return Reflect.getOwnPropertyDescriptor(d._scopes[0], m);
    },
    getPrototypeOf() {
      return Reflect.getPrototypeOf(n[0]);
    },
    has(d, m) {
      return lm(d).includes(m);
    },
    ownKeys(d) {
      return lm(d);
    },
    set(d, m, _) {
      let v = d._storage || (d._storage = o());
      return (d[m] = v[m] = _), delete d._keys, !0;
    },
  });
}
function Po(n, t, e, i) {
  let o = {
    _cacheable: !1,
    _proxy: n,
    _context: t,
    _subProxy: e,
    _stack: new Set(),
    _descriptors: vd(n, i),
    setContext: (r) => Po(n, r, e, i),
    override: (r) => Po(n.override(r), t, e, i),
  };
  return new Proxy(o, {
    deleteProperty(r, a) {
      return delete r[a], delete n[a], !0;
    },
    get(r, a, d) {
      return Pm(r, a, () => tv(r, a, d));
    },
    getOwnPropertyDescriptor(r, a) {
      return r._descriptors.allKeys
        ? Reflect.has(n, a)
          ? { enumerable: !0, configurable: !0 }
          : void 0
        : Reflect.getOwnPropertyDescriptor(n, a);
    },
    getPrototypeOf() {
      return Reflect.getPrototypeOf(n);
    },
    has(r, a) {
      return Reflect.has(n, a);
    },
    ownKeys() {
      return Reflect.ownKeys(n);
    },
    set(r, a, d) {
      return (n[a] = d), delete r[a], !0;
    },
  });
}
function vd(n, t = { scriptable: !0, indexable: !0 }) {
  let {
    _scriptable: e = t.scriptable,
    _indexable: i = t.indexable,
    _allKeys: o = t.allKeys,
  } = n;
  return {
    allKeys: o,
    scriptable: e,
    indexable: i,
    isScriptable: Un(e) ? e : () => e,
    isIndexable: Un(i) ? i : () => i,
  };
}
var ev = (n, t) => (n ? n + js(t) : t),
  yd = (n, t) =>
    nt(t) &&
    n !== "adapters" &&
    (Object.getPrototypeOf(t) === null || t.constructor === Object);
function Pm(n, t, e) {
  if (Object.prototype.hasOwnProperty.call(n, t) || t === "constructor")
    return n[t];
  let i = e();
  return (n[t] = i), i;
}
function tv(n, t, e) {
  let { _proxy: i, _context: o, _subProxy: r, _descriptors: a } = n,
    d = i[t];
  return (
    Un(d) && a.isScriptable(t) && (d = iv(t, d, n, e)),
    At(d) && d.length && (d = nv(t, d, n, a.isIndexable)),
    yd(t, d) && (d = Po(d, o, r && r[t], a)),
    d
  );
}
function iv(n, t, e, i) {
  let { _proxy: o, _context: r, _subProxy: a, _stack: d } = e;
  if (d.has(n))
    throw new Error(
      "Recursion detected: " + Array.from(d).join("->") + "->" + n
    );
  d.add(n);
  let m = t(r, a || i);
  return d.delete(n), yd(n, m) && (m = xd(o._scopes, o, n, m)), m;
}
function nv(n, t, e, i) {
  let { _proxy: o, _context: r, _subProxy: a, _descriptors: d } = e;
  if (typeof r.index < "u" && i(n)) return t[r.index % t.length];
  if (nt(t[0])) {
    let m = t,
      _ = o._scopes.filter((v) => v !== m);
    t = [];
    for (let v of m) {
      let S = xd(_, o, n, v);
      t.push(Po(S, r, a && a[n], d));
    }
  }
  return t;
}
function Am(n, t, e) {
  return Un(n) ? n(t, e) : n;
}
var ov = (n, t) => (n === !0 ? t : typeof n == "string" ? da(t, n) : void 0);
function rv(n, t, e, i, o) {
  for (let r of t) {
    let a = ov(e, r);
    if (a) {
      n.add(a);
      let d = Am(a._fallback, e, o);
      if (typeof d < "u" && d !== e && d !== i) return d;
    } else if (a === !1 && typeof i < "u" && e !== i) return null;
  }
  return !1;
}
function xd(n, t, e, i) {
  let o = t._rootScopes,
    r = Am(t._fallback, e, i),
    a = [...n, ...o],
    d = new Set();
  d.add(i);
  let m = sm(d, a, e, r || e, i);
  return m === null ||
    (typeof r < "u" && r !== e && ((m = sm(d, a, r, m, i)), m === null))
    ? !1
    : Ys(Array.from(d), [""], o, r, () => av(t, e, i));
}
function sm(n, t, e, i, o) {
  for (; e; ) e = rv(n, t, e, i, o);
  return e;
}
function av(n, t, e) {
  let i = n._getTarget();
  t in i || (i[t] = {});
  let o = i[t];
  return At(o) && nt(e) ? e : o || {};
}
function sv(n, t, e, i) {
  let o;
  for (let r of t)
    if (((o = Rm(ev(r, n), e)), typeof o < "u"))
      return yd(n, o) ? xd(e, i, n, o) : o;
}
function Rm(n, t) {
  for (let e of t) {
    if (!e) continue;
    let i = e[n];
    if (typeof i < "u") return i;
  }
}
function lm(n) {
  let t = n._keys;
  return t || (t = n._keys = lv(n._scopes)), t;
}
function lv(n) {
  let t = new Set();
  for (let e of n)
    for (let i of Object.keys(e).filter((o) => !o.startsWith("_"))) t.add(i);
  return Array.from(t);
}
var $E = Number.EPSILON || 1e-14;
function qs() {
  return typeof window < "u" && typeof document < "u";
}
function Ks(n) {
  let t = n.parentNode;
  return t && t.toString() === "[object ShadowRoot]" && (t = t.host), t;
}
function Hs(n, t, e) {
  let i;
  return (
    typeof n == "string"
      ? ((i = parseInt(n, 10)),
        n.indexOf("%") !== -1 && (i = (i / 100) * t.parentNode[e]))
      : (i = n),
    i
  );
}
var Qs = (n) => n.ownerDocument.defaultView.getComputedStyle(n, null);
function cv(n, t) {
  return Qs(n).getPropertyValue(t);
}
var dv = ["top", "right", "bottom", "left"];
function Io(n, t, e) {
  let i = {};
  e = e ? "-" + e : "";
  for (let o = 0; o < 4; o++) {
    let r = dv[o];
    i[r] = parseFloat(n[t + "-" + r + e]) || 0;
  }
  return (i.width = i.left + i.right), (i.height = i.top + i.bottom), i;
}
var uv = (n, t, e) => (n > 0 || t > 0) && (!e || !e.shadowRoot);
function hv(n, t) {
  let e = n.touches,
    i = e && e.length ? e[0] : n,
    { offsetX: o, offsetY: r } = i,
    a = !1,
    d,
    m;
  if (uv(o, r, n.target)) (d = o), (m = r);
  else {
    let _ = t.getBoundingClientRect();
    (d = i.clientX - _.left), (m = i.clientY - _.top), (a = !0);
  }
  return { x: d, y: m, box: a };
}
function uo(n, t) {
  if ("native" in n) return n;
  let { canvas: e, currentDevicePixelRatio: i } = t,
    o = Qs(e),
    r = o.boxSizing === "border-box",
    a = Io(o, "padding"),
    d = Io(o, "border", "width"),
    { x: m, y: _, box: v } = hv(n, e),
    S = a.left + (v && d.left),
    T = a.top + (v && d.top),
    { width: M, height: A } = t;
  return (
    r && ((M -= a.width + d.width), (A -= a.height + d.height)),
    {
      x: Math.round((((m - S) / M) * e.width) / i),
      y: Math.round((((_ - T) / A) * e.height) / i),
    }
  );
}
function pv(n, t, e) {
  let i, o;
  if (t === void 0 || e === void 0) {
    let r = n && Ks(n);
    if (!r) (t = n.clientWidth), (e = n.clientHeight);
    else {
      let a = r.getBoundingClientRect(),
        d = Qs(r),
        m = Io(d, "border", "width"),
        _ = Io(d, "padding");
      (t = a.width - _.width - m.width),
        (e = a.height - _.height - m.height),
        (i = Hs(d.maxWidth, r, "clientWidth")),
        (o = Hs(d.maxHeight, r, "clientHeight"));
    }
  }
  return { width: t, height: e, maxWidth: i || Bs, maxHeight: o || Bs };
}
var Ns = (n) => Math.round(n * 10) / 10;
function Fm(n, t, e, i) {
  let o = Qs(n),
    r = Io(o, "margin"),
    a = Hs(o.maxWidth, n, "clientWidth") || Bs,
    d = Hs(o.maxHeight, n, "clientHeight") || Bs,
    m = pv(n, t, e),
    { width: _, height: v } = m;
  if (o.boxSizing === "content-box") {
    let T = Io(o, "border", "width"),
      M = Io(o, "padding");
    (_ -= M.width + T.width), (v -= M.height + T.height);
  }
  return (
    (_ = Math.max(0, _ - r.width)),
    (v = Math.max(0, i ? _ / i : v - r.height)),
    (_ = Ns(Math.min(_, a, m.maxWidth))),
    (v = Ns(Math.min(v, d, m.maxHeight))),
    _ && !v && (v = Ns(_ / 2)),
    (t !== void 0 || e !== void 0) &&
      i &&
      m.height &&
      v > m.height &&
      ((v = m.height), (_ = Ns(Math.floor(v * i)))),
    { width: _, height: v }
  );
}
function Cd(n, t, e) {
  let i = t || 1,
    o = Math.floor(n.height * i),
    r = Math.floor(n.width * i);
  (n.height = Math.floor(n.height)), (n.width = Math.floor(n.width));
  let a = n.canvas;
  return (
    a.style &&
      (e || (!a.style.height && !a.style.width)) &&
      ((a.style.height = `${n.height}px`), (a.style.width = `${n.width}px`)),
    n.currentDevicePixelRatio !== i || a.height !== o || a.width !== r
      ? ((n.currentDevicePixelRatio = i),
        (a.height = o),
        (a.width = r),
        n.ctx.setTransform(i, 0, 0, i, 0, 0),
        !0)
      : !1
  );
}
var Nm = (function () {
  let n = !1;
  try {
    let t = {
      get passive() {
        return (n = !0), !1;
      },
    };
    qs() &&
      (window.addEventListener("test", null, t),
      window.removeEventListener("test", null, t));
  } catch {}
  return n;
})();
function wd(n, t) {
  let e = cv(n, t),
    i = e && e.match(/^(\d+)(\.\d+)?px$/);
  return i ? +i[1] : void 0;
}
function Vs(n, t, e) {
  return n.options.clip ? n[e] : t[e];
}
function mv(n, t) {
  let { xScale: e, yScale: i } = n;
  return e && i
    ? {
        left: Vs(e, t, "left"),
        right: Vs(e, t, "right"),
        top: Vs(i, t, "top"),
        bottom: Vs(i, t, "bottom"),
      }
    : t;
}
function Vm(n, t) {
  let e = t._clip;
  if (e.disabled) return !1;
  let i = mv(t, n.chartArea);
  return {
    left: e.left === !1 ? 0 : i.left - (e.left === !0 ? 0 : e.left),
    right: e.right === !1 ? n.width : i.right + (e.right === !0 ? 0 : e.right),
    top: e.top === !1 ? 0 : i.top - (e.top === !0 ? 0 : e.top),
    bottom:
      e.bottom === !1 ? n.height : i.bottom + (e.bottom === !0 ? 0 : e.bottom),
  };
}
var Od = class {
    constructor() {
      (this._request = null),
        (this._charts = new Map()),
        (this._running = !1),
        (this._lastDate = void 0);
    }
    _notify(t, e, i, o) {
      let r = e.listeners[o],
        a = e.duration;
      r.forEach((d) =>
        d({
          chart: t,
          initial: e.initial,
          numSteps: a,
          currentStep: Math.min(i - e.start, a),
        })
      );
    }
    _refresh() {
      this._request ||
        ((this._running = !0),
        (this._request = ud.call(window, () => {
          this._update(),
            (this._request = null),
            this._running && this._refresh();
        })));
    }
    _update(t = Date.now()) {
      let e = 0;
      this._charts.forEach((i, o) => {
        if (!i.running || !i.items.length) return;
        let r = i.items,
          a = r.length - 1,
          d = !1,
          m;
        for (; a >= 0; --a)
          (m = r[a]),
            m._active
              ? (m._total > i.duration && (i.duration = m._total),
                m.tick(t),
                (d = !0))
              : ((r[a] = r[r.length - 1]), r.pop());
        d && (o.draw(), this._notify(o, i, t, "progress")),
          r.length ||
            ((i.running = !1),
            this._notify(o, i, t, "complete"),
            (i.initial = !1)),
          (e += r.length);
      }),
        (this._lastDate = t),
        e === 0 && (this._running = !1);
    }
    _getAnims(t) {
      let e = this._charts,
        i = e.get(t);
      return (
        i ||
          ((i = {
            running: !1,
            initial: !0,
            items: [],
            listeners: { complete: [], progress: [] },
          }),
          e.set(t, i)),
        i
      );
    }
    listen(t, e, i) {
      this._getAnims(t).listeners[e].push(i);
    }
    add(t, e) {
      !e || !e.length || this._getAnims(t).items.push(...e);
    }
    has(t) {
      return this._getAnims(t).items.length > 0;
    }
    start(t) {
      let e = this._charts.get(t);
      e &&
        ((e.running = !0),
        (e.start = Date.now()),
        (e.duration = e.items.reduce((i, o) => Math.max(i, o._duration), 0)),
        this._refresh());
    }
    running(t) {
      if (!this._running) return !1;
      let e = this._charts.get(t);
      return !(!e || !e.running || !e.items.length);
    }
    stop(t) {
      let e = this._charts.get(t);
      if (!e || !e.items.length) return;
      let i = e.items,
        o = i.length - 1;
      for (; o >= 0; --o) i[o].cancel();
      (e.items = []), this._notify(t, e, Date.now(), "complete");
    }
    remove(t) {
      return this._charts.delete(t);
    }
  },
  Gn = new Od(),
  Lm = "transparent",
  fv = {
    boolean(n, t, e) {
      return e > 0.5 ? t : n;
    },
    color(n, t, e) {
      let i = md(n || Lm),
        o = i.valid && md(t || Lm);
      return o && o.valid ? o.mix(i, e).hexString() : t;
    },
    number(n, t, e) {
      return n + (t - n) * e;
    },
  },
  Id = class {
    constructor(t, e, i, o) {
      let r = e[i];
      o = _a([t.to, o, r, t.from]);
      let a = _a([t.from, r, o]);
      (this._active = !0),
        (this._fn = t.fn || fv[t.type || typeof a]),
        (this._easing = mr[t.easing] || mr.linear),
        (this._start = Math.floor(Date.now() + (t.delay || 0))),
        (this._duration = this._total = Math.floor(t.duration)),
        (this._loop = !!t.loop),
        (this._target = e),
        (this._prop = i),
        (this._from = a),
        (this._to = o),
        (this._promises = void 0);
    }
    active() {
      return this._active;
    }
    update(t, e, i) {
      if (this._active) {
        this._notify(!1);
        let o = this._target[this._prop],
          r = i - this._start,
          a = this._duration - r;
        (this._start = i),
          (this._duration = Math.floor(Math.max(a, t.duration))),
          (this._total += r),
          (this._loop = !!t.loop),
          (this._to = _a([t.to, e, o, t.from])),
          (this._from = _a([t.from, o, e]));
      }
    }
    cancel() {
      this._active &&
        (this.tick(Date.now()), (this._active = !1), this._notify(!1));
    }
    tick(t) {
      let e = t - this._start,
        i = this._duration,
        o = this._prop,
        r = this._from,
        a = this._loop,
        d = this._to,
        m;
      if (((this._active = r !== d && (a || e < i)), !this._active)) {
        (this._target[o] = d), this._notify(!0);
        return;
      }
      if (e < 0) {
        this._target[o] = r;
        return;
      }
      (m = (e / i) % 2),
        (m = a && m > 1 ? 2 - m : m),
        (m = this._easing(Math.min(1, Math.max(0, m)))),
        (this._target[o] = this._fn(r, d, m));
    }
    wait() {
      let t = this._promises || (this._promises = []);
      return new Promise((e, i) => {
        t.push({ res: e, rej: i });
      });
    }
    _notify(t) {
      let e = t ? "res" : "rej",
        i = this._promises || [];
      for (let o = 0; o < i.length; o++) i[o][e]();
    }
  },
  Pd = class {
    constructor(t, e) {
      (this._chart = t), (this._properties = new Map()), this.configure(e);
    }
    configure(t) {
      if (!nt(t)) return;
      let e = Object.keys(Rt.animation),
        i = this._properties;
      Object.getOwnPropertyNames(t).forEach((o) => {
        let r = t[o];
        if (!nt(r)) return;
        let a = {};
        for (let d of e) a[d] = r[d];
        ((At(r.properties) && r.properties) || [o]).forEach((d) => {
          (d === o || !i.has(d)) && i.set(d, a);
        });
      });
    }
    _animateOptions(t, e) {
      let i = e.options,
        o = _v(t, i);
      if (!o) return [];
      let r = this._createAnimations(o, i);
      return (
        i.$shared &&
          gv(t.options.$animations, i).then(
            () => {
              t.options = i;
            },
            () => {}
          ),
        r
      );
    }
    _createAnimations(t, e) {
      let i = this._properties,
        o = [],
        r = t.$animations || (t.$animations = {}),
        a = Object.keys(e),
        d = Date.now(),
        m;
      for (m = a.length - 1; m >= 0; --m) {
        let _ = a[m];
        if (_.charAt(0) === "$") continue;
        if (_ === "options") {
          o.push(...this._animateOptions(t, e));
          continue;
        }
        let v = e[_],
          S = r[_],
          T = i.get(_);
        if (S)
          if (T && S.active()) {
            S.update(T, v, d);
            continue;
          } else S.cancel();
        if (!T || !T.duration) {
          t[_] = v;
          continue;
        }
        (r[_] = S = new Id(T, t, _, v)), o.push(S);
      }
      return o;
    }
    update(t, e) {
      if (this._properties.size === 0) {
        Object.assign(t, e);
        return;
      }
      let i = this._createAnimations(t, e);
      if (i.length) return Gn.add(this._chart, i), !0;
    }
  };
function gv(n, t) {
  let e = [],
    i = Object.keys(t);
  for (let o = 0; o < i.length; o++) {
    let r = n[i[o]];
    r && r.active() && e.push(r.wait());
  }
  return Promise.all(e);
}
function _v(n, t) {
  if (!t) return;
  let e = n.options;
  if (!e) {
    n.options = t;
    return;
  }
  return (
    e.$shared &&
      (n.options = e = Object.assign({}, e, { $shared: !1, $animations: {} })),
    e
  );
}
function Bm(n, t) {
  let e = (n && n.options) || {},
    i = e.reverse,
    o = e.min === void 0 ? t : 0,
    r = e.max === void 0 ? t : 0;
  return { start: i ? r : o, end: i ? o : r };
}
function bv(n, t, e) {
  if (e === !1) return !1;
  let i = Bm(n, e),
    o = Bm(t, e);
  return { top: o.end, right: i.end, bottom: o.start, left: i.start };
}
function vv(n) {
  let t, e, i, o;
  return (
    nt(n)
      ? ((t = n.top), (e = n.right), (i = n.bottom), (o = n.left))
      : (t = e = i = o = n),
    { top: t, right: e, bottom: i, left: o, disabled: n === !1 }
  );
}
function Df(n, t) {
  let e = [],
    i = n._getSortedDatasetMetas(t),
    o,
    r;
  for (o = 0, r = i.length; o < r; ++o) e.push(i[o].index);
  return e;
}
function Hm(n, t, e, i = {}) {
  let o = n.keys,
    r = i.mode === "single",
    a,
    d,
    m,
    _;
  if (t === null) return;
  let v = !1;
  for (a = 0, d = o.length; a < d; ++a) {
    if (((m = +o[a]), m === e)) {
      if (((v = !0), i.all)) continue;
      break;
    }
    (_ = n.values[m]), Ut(_) && (r || t === 0 || ha(t) === ha(_)) && (t += _);
  }
  return !v && !i.all ? 0 : t;
}
function yv(n, t) {
  let { iScale: e, vScale: i } = t,
    o = e.axis === "x" ? "x" : "y",
    r = i.axis === "x" ? "x" : "y",
    a = Object.keys(n),
    d = new Array(a.length),
    m,
    _,
    v;
  for (m = 0, _ = a.length; m < _; ++m)
    (v = a[m]), (d[m] = { [o]: v, [r]: n[v] });
  return d;
}
function Dd(n, t) {
  let e = n && n.options.stacked;
  return e || (e === void 0 && t.stack !== void 0);
}
function xv(n, t, e) {
  return `${n.id}.${t.id}.${e.stack || e.type}`;
}
function Cv(n) {
  let { min: t, max: e, minDefined: i, maxDefined: o } = n.getUserBounds();
  return {
    min: i ? t : Number.NEGATIVE_INFINITY,
    max: o ? e : Number.POSITIVE_INFINITY,
  };
}
function wv(n, t, e) {
  let i = n[t] || (n[t] = {});
  return i[e] || (i[e] = {});
}
function jm(n, t, e, i) {
  for (let o of t.getMatchingVisibleMetas(i).reverse()) {
    let r = n[o.index];
    if ((e && r > 0) || (!e && r < 0)) return o.index;
  }
  return null;
}
function zm(n, t) {
  let { chart: e, _cachedMeta: i } = n,
    o = e._stacks || (e._stacks = {}),
    { iScale: r, vScale: a, index: d } = i,
    m = r.axis,
    _ = a.axis,
    v = xv(r, a, i),
    S = t.length,
    T;
  for (let M = 0; M < S; ++M) {
    let A = t[M],
      { [m]: j, [_]: z } = A,
      L = A._stacks || (A._stacks = {});
    (T = L[_] = wv(o, v, j)),
      (T[d] = z),
      (T._top = jm(T, a, !0, i.type)),
      (T._bottom = jm(T, a, !1, i.type));
    let ue = T._visualValues || (T._visualValues = {});
    ue[d] = z;
  }
}
function Sd(n, t) {
  let e = n.scales;
  return Object.keys(e)
    .filter((i) => e[i].axis === t)
    .shift();
}
function Dv(n, t) {
  return Fo(n, {
    active: !1,
    dataset: void 0,
    datasetIndex: t,
    index: t,
    mode: "default",
    type: "dataset",
  });
}
function Sv(n, t, e) {
  return Fo(n, {
    active: !1,
    dataIndex: t,
    parsed: void 0,
    raw: void 0,
    element: e,
    index: t,
    mode: "default",
    type: "data",
  });
}
function ba(n, t) {
  let e = n.controller.index,
    i = n.vScale && n.vScale.axis;
  if (i) {
    t = t || n._parsed;
    for (let o of t) {
      let r = o._stacks;
      if (!r || r[i] === void 0 || r[i][e] === void 0) return;
      delete r[i][e],
        r[i]._visualValues !== void 0 &&
          r[i]._visualValues[e] !== void 0 &&
          delete r[i]._visualValues[e];
    }
  }
}
var Md = (n) => n === "reset" || n === "none",
  Um = (n, t) => (t ? n : Object.assign({}, n)),
  Mv = (n, t, e) =>
    n && !t.hidden && t._stacked && { keys: Df(e, !0), values: null },
  Tv = (() => {
    class n {
      static defaults = {};
      static datasetElementType = null;
      static dataElementType = null;
      constructor(e, i) {
        (this.chart = e),
          (this._ctx = e.ctx),
          (this.index = i),
          (this._cachedDataOpts = {}),
          (this._cachedMeta = this.getMeta()),
          (this._type = this._cachedMeta.type),
          (this.options = void 0),
          (this._parsing = !1),
          (this._data = void 0),
          (this._objectData = void 0),
          (this._sharedOptions = void 0),
          (this._drawStart = void 0),
          (this._drawCount = void 0),
          (this.enableOptionSharing = !1),
          (this.supportsDecimation = !1),
          (this.$context = void 0),
          (this._syncList = []),
          (this.datasetElementType = new.target.datasetElementType),
          (this.dataElementType = new.target.dataElementType),
          this.initialize();
      }
      initialize() {
        let e = this._cachedMeta;
        this.configure(),
          this.linkScales(),
          (e._stacked = Dd(e.vScale, e)),
          this.addElements(),
          this.options.fill &&
            !this.chart.isPluginEnabled("filler") &&
            console.warn(
              "Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options"
            );
      }
      updateIndex(e) {
        this.index !== e && ba(this._cachedMeta), (this.index = e);
      }
      linkScales() {
        let e = this.chart,
          i = this._cachedMeta,
          o = this.getDataset(),
          r = (T, M, A, j) => (T === "x" ? M : T === "r" ? j : A),
          a = (i.xAxisID = Pt(o.xAxisID, Sd(e, "x"))),
          d = (i.yAxisID = Pt(o.yAxisID, Sd(e, "y"))),
          m = (i.rAxisID = Pt(o.rAxisID, Sd(e, "r"))),
          _ = i.indexAxis,
          v = (i.iAxisID = r(_, a, d, m)),
          S = (i.vAxisID = r(_, d, a, m));
        (i.xScale = this.getScaleForId(a)),
          (i.yScale = this.getScaleForId(d)),
          (i.rScale = this.getScaleForId(m)),
          (i.iScale = this.getScaleForId(v)),
          (i.vScale = this.getScaleForId(S));
      }
      getDataset() {
        return this.chart.data.datasets[this.index];
      }
      getMeta() {
        return this.chart.getDatasetMeta(this.index);
      }
      getScaleForId(e) {
        return this.chart.scales[e];
      }
      _getOtherScale(e) {
        let i = this._cachedMeta;
        return e === i.iScale ? i.vScale : i.iScale;
      }
      reset() {
        this._update("reset");
      }
      _destroy() {
        let e = this._cachedMeta;
        this._data && dd(this._data, this), e._stacked && ba(e);
      }
      _dataCheck() {
        let e = this.getDataset(),
          i = e.data || (e.data = []),
          o = this._data;
        if (nt(i)) {
          let r = this._cachedMeta;
          this._data = yv(i, r);
        } else if (o !== i) {
          if (o) {
            dd(o, this);
            let r = this._cachedMeta;
            ba(r), (r._parsed = []);
          }
          i && Object.isExtensible(i) && xm(i, this),
            (this._syncList = []),
            (this._data = i);
        }
      }
      addElements() {
        let e = this._cachedMeta;
        this._dataCheck(),
          this.datasetElementType &&
            (e.dataset = new this.datasetElementType());
      }
      buildOrUpdateElements(e) {
        let i = this._cachedMeta,
          o = this.getDataset(),
          r = !1;
        this._dataCheck();
        let a = i._stacked;
        (i._stacked = Dd(i.vScale, i)),
          i.stack !== o.stack && ((r = !0), ba(i), (i.stack = o.stack)),
          this._resyncElements(e),
          (r || a !== i._stacked) &&
            (zm(this, i._parsed), (i._stacked = Dd(i.vScale, i)));
      }
      configure() {
        let e = this.chart.config,
          i = e.datasetScopeKeys(this._type),
          o = e.getOptionScopes(this.getDataset(), i, !0);
        (this.options = e.createResolver(o, this.getContext())),
          (this._parsing = this.options.parsing),
          (this._cachedDataOpts = {});
      }
      parse(e, i) {
        let { _cachedMeta: o, _data: r } = this,
          { iScale: a, _stacked: d } = o,
          m = a.axis,
          _ = e === 0 && i === r.length ? !0 : o._sorted,
          v = e > 0 && o._parsed[e - 1],
          S,
          T,
          M;
        if (this._parsing === !1) (o._parsed = r), (o._sorted = !0), (M = r);
        else {
          At(r[e])
            ? (M = this.parseArrayData(o, r, e, i))
            : nt(r[e])
            ? (M = this.parseObjectData(o, r, e, i))
            : (M = this.parsePrimitiveData(o, r, e, i));
          let A = () => T[m] === null || (v && T[m] < v[m]);
          for (S = 0; S < i; ++S)
            (o._parsed[S + e] = T = M[S]), _ && (A() && (_ = !1), (v = T));
          o._sorted = _;
        }
        d && zm(this, M);
      }
      parsePrimitiveData(e, i, o, r) {
        let { iScale: a, vScale: d } = e,
          m = a.axis,
          _ = d.axis,
          v = a.getLabels(),
          S = a === d,
          T = new Array(r),
          M,
          A,
          j;
        for (M = 0, A = r; M < A; ++M)
          (j = M + o),
            (T[M] = { [m]: S || a.parse(v[j], j), [_]: d.parse(i[j], j) });
        return T;
      }
      parseArrayData(e, i, o, r) {
        let { xScale: a, yScale: d } = e,
          m = new Array(r),
          _,
          v,
          S,
          T;
        for (_ = 0, v = r; _ < v; ++_)
          (S = _ + o),
            (T = i[S]),
            (m[_] = { x: a.parse(T[0], S), y: d.parse(T[1], S) });
        return m;
      }
      parseObjectData(e, i, o, r) {
        let { xScale: a, yScale: d } = e,
          { xAxisKey: m = "x", yAxisKey: _ = "y" } = this._parsing,
          v = new Array(r),
          S,
          T,
          M,
          A;
        for (S = 0, T = r; S < T; ++S)
          (M = S + o),
            (A = i[M]),
            (v[S] = { x: a.parse(da(A, m), M), y: d.parse(da(A, _), M) });
        return v;
      }
      getParsed(e) {
        return this._cachedMeta._parsed[e];
      }
      getDataElement(e) {
        return this._cachedMeta.data[e];
      }
      applyStack(e, i, o) {
        let r = this.chart,
          a = this._cachedMeta,
          d = i[e.axis],
          m = { keys: Df(r, !0), values: i._stacks[e.axis]._visualValues };
        return Hm(m, d, a.index, { mode: o });
      }
      updateRangeFromParsed(e, i, o, r) {
        let a = o[i.axis],
          d = a === null ? NaN : a,
          m = r && o._stacks[i.axis];
        r && m && ((r.values = m), (d = Hm(r, a, this._cachedMeta.index))),
          (e.min = Math.min(e.min, d)),
          (e.max = Math.max(e.max, d));
      }
      getMinMax(e, i) {
        let o = this._cachedMeta,
          r = o._parsed,
          a = o._sorted && e === o.iScale,
          d = r.length,
          m = this._getOtherScale(e),
          _ = Mv(i, o, this.chart),
          v = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY },
          { min: S, max: T } = Cv(m),
          M,
          A;
        function j() {
          A = r[M];
          let z = A[m.axis];
          return !Ut(A[e.axis]) || S > z || T < z;
        }
        for (
          M = 0;
          M < d && !(!j() && (this.updateRangeFromParsed(v, e, A, _), a));
          ++M
        );
        if (a) {
          for (M = d - 1; M >= 0; --M)
            if (!j()) {
              this.updateRangeFromParsed(v, e, A, _);
              break;
            }
        }
        return v;
      }
      getAllParsedValues(e) {
        let i = this._cachedMeta._parsed,
          o = [],
          r,
          a,
          d;
        for (r = 0, a = i.length; r < a; ++r)
          (d = i[r][e.axis]), Ut(d) && o.push(d);
        return o;
      }
      getMaxOverflow() {
        return !1;
      }
      getLabelAndValue(e) {
        let i = this._cachedMeta,
          o = i.iScale,
          r = i.vScale,
          a = this.getParsed(e);
        return {
          label: o ? "" + o.getLabelForValue(a[o.axis]) : "",
          value: r ? "" + r.getLabelForValue(a[r.axis]) : "",
        };
      }
      _update(e) {
        let i = this._cachedMeta;
        this.update(e || "default"),
          (i._clip = vv(
            Pt(this.options.clip, bv(i.xScale, i.yScale, this.getMaxOverflow()))
          ));
      }
      update(e) {}
      draw() {
        let e = this._ctx,
          i = this.chart,
          o = this._cachedMeta,
          r = o.data || [],
          a = i.chartArea,
          d = [],
          m = this._drawStart || 0,
          _ = this._drawCount || r.length - m,
          v = this.options.drawActiveElementsOnTop,
          S;
        for (o.dataset && o.dataset.draw(e, a, m, _), S = m; S < m + _; ++S) {
          let T = r[S];
          T.hidden || (T.active && v ? d.push(T) : T.draw(e, a));
        }
        for (S = 0; S < d.length; ++S) d[S].draw(e, a);
      }
      getStyle(e, i) {
        let o = i ? "active" : "default";
        return e === void 0 && this._cachedMeta.dataset
          ? this.resolveDatasetElementOptions(o)
          : this.resolveDataElementOptions(e || 0, o);
      }
      getContext(e, i, o) {
        let r = this.getDataset(),
          a;
        if (e >= 0 && e < this._cachedMeta.data.length) {
          let d = this._cachedMeta.data[e];
          (a = d.$context || (d.$context = Sv(this.getContext(), e, d))),
            (a.parsed = this.getParsed(e)),
            (a.raw = r.data[e]),
            (a.index = a.dataIndex = e);
        } else
          (a =
            this.$context ||
            (this.$context = Dv(this.chart.getContext(), this.index))),
            (a.dataset = r),
            (a.index = a.datasetIndex = this.index);
        return (a.active = !!i), (a.mode = o), a;
      }
      resolveDatasetElementOptions(e) {
        return this._resolveElementOptions(this.datasetElementType.id, e);
      }
      resolveDataElementOptions(e, i) {
        return this._resolveElementOptions(this.dataElementType.id, i, e);
      }
      _resolveElementOptions(e, i = "default", o) {
        let r = i === "active",
          a = this._cachedDataOpts,
          d = e + "-" + i,
          m = a[d],
          _ = this.enableOptionSharing && ua(o);
        if (m) return Um(m, _);
        let v = this.chart.config,
          S = v.datasetElementScopeKeys(this._type, e),
          T = r ? [`${e}Hover`, "hover", e, ""] : [e, ""],
          M = v.getOptionScopes(this.getDataset(), S),
          A = Object.keys(Rt.elements[e]),
          j = () => this.getContext(o, r, i),
          z = v.resolveNamedOptions(M, A, j, T);
        return (
          z.$shared && ((z.$shared = _), (a[d] = Object.freeze(Um(z, _)))), z
        );
      }
      _resolveAnimations(e, i, o) {
        let r = this.chart,
          a = this._cachedDataOpts,
          d = `animation-${i}`,
          m = a[d];
        if (m) return m;
        let _;
        if (r.options.animation !== !1) {
          let S = this.chart.config,
            T = S.datasetAnimationScopeKeys(this._type, i),
            M = S.getOptionScopes(this.getDataset(), T);
          _ = S.createResolver(M, this.getContext(e, o, i));
        }
        let v = new Pd(r, _ && _.animations);
        return _ && _._cacheable && (a[d] = Object.freeze(v)), v;
      }
      getSharedOptions(e) {
        if (e.$shared)
          return (
            this._sharedOptions || (this._sharedOptions = Object.assign({}, e))
          );
      }
      includeOptions(e, i) {
        return !i || Md(e) || this.chart._animationsDisabled;
      }
      _getSharedOptions(e, i) {
        let o = this.resolveDataElementOptions(e, i),
          r = this._sharedOptions,
          a = this.getSharedOptions(o),
          d = this.includeOptions(i, a) || a !== r;
        return (
          this.updateSharedOptions(a, i, o),
          { sharedOptions: a, includeOptions: d }
        );
      }
      updateElement(e, i, o, r) {
        Md(r)
          ? Object.assign(e, o)
          : this._resolveAnimations(i, r).update(e, o);
      }
      updateSharedOptions(e, i, o) {
        e && !Md(i) && this._resolveAnimations(void 0, i).update(e, o);
      }
      _setStyle(e, i, o, r) {
        e.active = r;
        let a = this.getStyle(i, r);
        this._resolveAnimations(i, o, r).update(e, {
          options: (!r && this.getSharedOptions(a)) || a,
        });
      }
      removeHoverStyle(e, i, o) {
        this._setStyle(e, o, "active", !1);
      }
      setHoverStyle(e, i, o) {
        this._setStyle(e, o, "active", !0);
      }
      _removeDatasetHoverStyle() {
        let e = this._cachedMeta.dataset;
        e && this._setStyle(e, void 0, "active", !1);
      }
      _setDatasetHoverStyle() {
        let e = this._cachedMeta.dataset;
        e && this._setStyle(e, void 0, "active", !0);
      }
      _resyncElements(e) {
        let i = this._data,
          o = this._cachedMeta.data;
        for (let [m, _, v] of this._syncList) this[m](_, v);
        this._syncList = [];
        let r = o.length,
          a = i.length,
          d = Math.min(a, r);
        d && this.parse(0, d),
          a > r
            ? this._insertElements(r, a - r, e)
            : a < r && this._removeElements(a, r - a);
      }
      _insertElements(e, i, o = !0) {
        let r = this._cachedMeta,
          a = r.data,
          d = e + i,
          m,
          _ = (v) => {
            for (v.length += i, m = v.length - 1; m >= d; m--) v[m] = v[m - i];
          };
        for (_(a), m = e; m < d; ++m) a[m] = new this.dataElementType();
        this._parsing && _(r._parsed),
          this.parse(e, i),
          o && this.updateElements(a, e, i, "reset");
      }
      updateElements(e, i, o, r) {}
      _removeElements(e, i) {
        let o = this._cachedMeta;
        if (this._parsing) {
          let r = o._parsed.splice(e, i);
          o._stacked && ba(o, r);
        }
        o.data.splice(e, i);
      }
      _sync(e) {
        if (this._parsing) this._syncList.push(e);
        else {
          let [i, o, r] = e;
          this[i](o, r);
        }
        this.chart._dataChanges.push([this.index, ...e]);
      }
      _onDataPush() {
        let e = arguments.length;
        this._sync(["_insertElements", this.getDataset().data.length - e, e]);
      }
      _onDataPop() {
        this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1]);
      }
      _onDataShift() {
        this._sync(["_removeElements", 0, 1]);
      }
      _onDataSplice(e, i) {
        i && this._sync(["_removeElements", e, i]);
        let o = arguments.length - 2;
        o && this._sync(["_insertElements", e, o]);
      }
      _onDataUnshift() {
        this._sync(["_insertElements", 0, arguments.length]);
      }
    }
    return n;
  })();
function No() {
  throw new Error(
    "This method is not implemented: Check that a complete date adapter is provided."
  );
}
var Ad = class n {
    static override(t) {
      Object.assign(n.prototype, t);
    }
    options;
    constructor(t) {
      this.options = t || {};
    }
    init() {}
    formats() {
      return No();
    }
    parse() {
      return No();
    }
    format() {
      return No();
    }
    add() {
      return No();
    }
    diff() {
      return No();
    }
    startOf() {
      return No();
    }
    endOf() {
      return No();
    }
  },
  Ev = { _date: Ad };
function kv(n, t, e, i) {
  let { controller: o, data: r, _sorted: a } = n,
    d = o._cachedMeta.iScale,
    m = n.dataset && n.dataset.options ? n.dataset.options.spanGaps : null;
  if (d && t === d.axis && t !== "r" && a && r.length) {
    let _ = d._reversePixels ? bm : Ws;
    if (i) {
      if (o._sharedOptions) {
        let v = r[0],
          S = typeof v.getRange == "function" && v.getRange(t);
        if (S) {
          let T = _(r, t, e - S),
            M = _(r, t, e + S);
          return { lo: T.lo, hi: M.hi };
        }
      }
    } else {
      let v = _(r, t, e);
      if (m) {
        let { vScale: S } = o._cachedMeta,
          { _parsed: T } = n,
          M = T.slice(0, v.lo + 1)
            .reverse()
            .findIndex((j) => !mt(j[S.axis]));
        v.lo -= Math.max(0, M);
        let A = T.slice(v.hi).findIndex((j) => !mt(j[S.axis]));
        v.hi += Math.max(0, A);
      }
      return v;
    }
  }
  return { lo: 0, hi: r.length - 1 };
}
function Ma(n, t, e, i, o) {
  let r = n.getSortedVisibleDatasetMetas(),
    a = e[t];
  for (let d = 0, m = r.length; d < m; ++d) {
    let { index: _, data: v } = r[d],
      { lo: S, hi: T } = kv(r[d], t, a, o);
    for (let M = S; M <= T; ++M) {
      let A = v[M];
      A.skip || i(A, _, M);
    }
  }
}
function Ov(n) {
  let t = n.indexOf("x") !== -1,
    e = n.indexOf("y") !== -1;
  return function (i, o) {
    let r = t ? Math.abs(i.x - o.x) : 0,
      a = e ? Math.abs(i.y - o.y) : 0;
    return Math.sqrt(Math.pow(r, 2) + Math.pow(a, 2));
  };
}
function Td(n, t, e, i, o) {
  let r = [];
  return (
    (!o && !n.isPointInArea(t)) ||
      Ma(
        n,
        e,
        t,
        function (d, m, _) {
          (!o && !Ao(d, n.chartArea, 0)) ||
            (d.inRange(t.x, t.y, i) &&
              r.push({ element: d, datasetIndex: m, index: _ }));
        },
        !0
      ),
    r
  );
}
function Iv(n, t, e, i) {
  let o = [];
  function r(a, d, m) {
    let { startAngle: _, endAngle: v } = a.getProps(
        ["startAngle", "endAngle"],
        i
      ),
      { angle: S } = fm(a, { x: t.x, y: t.y });
    gm(S, _, v) && o.push({ element: a, datasetIndex: d, index: m });
  }
  return Ma(n, e, t, r), o;
}
function Pv(n, t, e, i, o, r) {
  let a = [],
    d = Ov(e),
    m = Number.POSITIVE_INFINITY;
  function _(v, S, T) {
    let M = v.inRange(t.x, t.y, o);
    if (i && !M) return;
    let A = v.getCenterPoint(o);
    if (!(!!r || n.isPointInArea(A)) && !M) return;
    let z = d(t, A);
    z < m
      ? ((a = [{ element: v, datasetIndex: S, index: T }]), (m = z))
      : z === m && a.push({ element: v, datasetIndex: S, index: T });
  }
  return Ma(n, e, t, _), a;
}
function Ed(n, t, e, i, o, r) {
  return !r && !n.isPointInArea(t)
    ? []
    : e === "r" && !i
    ? Iv(n, t, e, o)
    : Pv(n, t, e, i, o, r);
}
function Wm(n, t, e, i, o) {
  let r = [],
    a = e === "x" ? "inXRange" : "inYRange",
    d = !1;
  return (
    Ma(n, e, t, (m, _, v) => {
      m[a] &&
        m[a](t[e], o) &&
        (r.push({ element: m, datasetIndex: _, index: v }),
        (d = d || m.inRange(t.x, t.y, o)));
    }),
    i && !d ? [] : r
  );
}
var Av = {
    evaluateInteractionItems: Ma,
    modes: {
      index(n, t, e, i) {
        let o = uo(t, n),
          r = e.axis || "x",
          a = e.includeInvisible || !1,
          d = e.intersect ? Td(n, o, r, i, a) : Ed(n, o, r, !1, i, a),
          m = [];
        return d.length
          ? (n.getSortedVisibleDatasetMetas().forEach((_) => {
              let v = d[0].index,
                S = _.data[v];
              S &&
                !S.skip &&
                m.push({ element: S, datasetIndex: _.index, index: v });
            }),
            m)
          : [];
      },
      dataset(n, t, e, i) {
        let o = uo(t, n),
          r = e.axis || "xy",
          a = e.includeInvisible || !1,
          d = e.intersect ? Td(n, o, r, i, a) : Ed(n, o, r, !1, i, a);
        if (d.length > 0) {
          let m = d[0].datasetIndex,
            _ = n.getDatasetMeta(m).data;
          d = [];
          for (let v = 0; v < _.length; ++v)
            d.push({ element: _[v], datasetIndex: m, index: v });
        }
        return d;
      },
      point(n, t, e, i) {
        let o = uo(t, n),
          r = e.axis || "xy",
          a = e.includeInvisible || !1;
        return Td(n, o, r, i, a);
      },
      nearest(n, t, e, i) {
        let o = uo(t, n),
          r = e.axis || "xy",
          a = e.includeInvisible || !1;
        return Ed(n, o, r, e.intersect, i, a);
      },
      x(n, t, e, i) {
        let o = uo(t, n);
        return Wm(n, o, "x", e.intersect, i);
      },
      y(n, t, e, i) {
        let o = uo(t, n);
        return Wm(n, o, "y", e.intersect, i);
      },
    },
  },
  Sf = ["left", "top", "right", "bottom"];
function va(n, t) {
  return n.filter((e) => e.pos === t);
}
function $m(n, t) {
  return n.filter((e) => Sf.indexOf(e.pos) === -1 && e.box.axis === t);
}
function ya(n, t) {
  return n.sort((e, i) => {
    let o = t ? i : e,
      r = t ? e : i;
    return o.weight === r.weight ? o.index - r.index : o.weight - r.weight;
  });
}
function Rv(n) {
  let t = [],
    e,
    i,
    o,
    r,
    a,
    d;
  for (e = 0, i = (n || []).length; e < i; ++e)
    (o = n[e]),
      ({
        position: r,
        options: { stack: a, stackWeight: d = 1 },
      } = o),
      t.push({
        index: e,
        box: o,
        pos: r,
        horizontal: o.isHorizontal(),
        weight: o.weight,
        stack: a && r + a,
        stackWeight: d,
      });
  return t;
}
function Fv(n) {
  let t = {};
  for (let e of n) {
    let { stack: i, pos: o, stackWeight: r } = e;
    if (!i || !Sf.includes(o)) continue;
    let a = t[i] || (t[i] = { count: 0, placed: 0, weight: 0, size: 0 });
    a.count++, (a.weight += r);
  }
  return t;
}
function Nv(n, t) {
  let e = Fv(n),
    { vBoxMaxWidth: i, hBoxMaxHeight: o } = t,
    r,
    a,
    d;
  for (r = 0, a = n.length; r < a; ++r) {
    d = n[r];
    let { fullSize: m } = d.box,
      _ = e[d.stack],
      v = _ && d.stackWeight / _.weight;
    d.horizontal
      ? ((d.width = v ? v * i : m && t.availableWidth), (d.height = o))
      : ((d.width = i), (d.height = v ? v * o : m && t.availableHeight));
  }
  return e;
}
function Vv(n) {
  let t = Rv(n),
    e = ya(
      t.filter((_) => _.box.fullSize),
      !0
    ),
    i = ya(va(t, "left"), !0),
    o = ya(va(t, "right")),
    r = ya(va(t, "top"), !0),
    a = ya(va(t, "bottom")),
    d = $m(t, "x"),
    m = $m(t, "y");
  return {
    fullSize: e,
    leftAndTop: i.concat(r),
    rightAndBottom: o.concat(m).concat(a).concat(d),
    chartArea: va(t, "chartArea"),
    vertical: i.concat(o).concat(m),
    horizontal: r.concat(a).concat(d),
  };
}
function Gm(n, t, e, i) {
  return Math.max(n[e], t[e]) + Math.max(n[i], t[i]);
}
function Mf(n, t) {
  (n.top = Math.max(n.top, t.top)),
    (n.left = Math.max(n.left, t.left)),
    (n.bottom = Math.max(n.bottom, t.bottom)),
    (n.right = Math.max(n.right, t.right));
}
function Lv(n, t, e, i) {
  let { pos: o, box: r } = e,
    a = n.maxPadding;
  if (!nt(o)) {
    e.size && (n[o] -= e.size);
    let S = i[e.stack] || { size: 0, count: 1 };
    (S.size = Math.max(S.size, e.horizontal ? r.height : r.width)),
      (e.size = S.size / S.count),
      (n[o] += e.size);
  }
  r.getPadding && Mf(a, r.getPadding());
  let d = Math.max(0, t.outerWidth - Gm(a, n, "left", "right")),
    m = Math.max(0, t.outerHeight - Gm(a, n, "top", "bottom")),
    _ = d !== n.w,
    v = m !== n.h;
  return (
    (n.w = d),
    (n.h = m),
    e.horizontal ? { same: _, other: v } : { same: v, other: _ }
  );
}
function Bv(n) {
  let t = n.maxPadding;
  function e(i) {
    let o = Math.max(t[i] - n[i], 0);
    return (n[i] += o), o;
  }
  (n.y += e("top")), (n.x += e("left")), e("right"), e("bottom");
}
function Hv(n, t) {
  let e = t.maxPadding;
  function i(o) {
    let r = { left: 0, top: 0, right: 0, bottom: 0 };
    return (
      o.forEach((a) => {
        r[a] = Math.max(t[a], e[a]);
      }),
      r
    );
  }
  return i(n ? ["left", "right"] : ["top", "bottom"]);
}
function wa(n, t, e, i) {
  let o = [],
    r,
    a,
    d,
    m,
    _,
    v;
  for (r = 0, a = n.length, _ = 0; r < a; ++r) {
    (d = n[r]),
      (m = d.box),
      m.update(d.width || t.w, d.height || t.h, Hv(d.horizontal, t));
    let { same: S, other: T } = Lv(t, e, d, i);
    (_ |= S && o.length), (v = v || T), m.fullSize || o.push(d);
  }
  return (_ && wa(o, t, e, i)) || v;
}
function Xs(n, t, e, i, o) {
  (n.top = e),
    (n.left = t),
    (n.right = t + i),
    (n.bottom = e + o),
    (n.width = i),
    (n.height = o);
}
function Ym(n, t, e, i) {
  let o = e.padding,
    { x: r, y: a } = t;
  for (let d of n) {
    let m = d.box,
      _ = i[d.stack] || { count: 1, placed: 0, weight: 1 },
      v = d.stackWeight / _.weight || 1;
    if (d.horizontal) {
      let S = t.w * v,
        T = _.size || m.height;
      ua(_.start) && (a = _.start),
        m.fullSize
          ? Xs(m, o.left, a, e.outerWidth - o.right - o.left, T)
          : Xs(m, t.left + _.placed, a, S, T),
        (_.start = a),
        (_.placed += S),
        (a = m.bottom);
    } else {
      let S = t.h * v,
        T = _.size || m.width;
      ua(_.start) && (r = _.start),
        m.fullSize
          ? Xs(m, r, o.top, T, e.outerHeight - o.bottom - o.top)
          : Xs(m, r, t.top + _.placed, T, S),
        (_.start = r),
        (_.placed += S),
        (r = m.right);
    }
  }
  (t.x = r), (t.y = a);
}
var Zs = {
    addBox(n, t) {
      n.boxes || (n.boxes = []),
        (t.fullSize = t.fullSize || !1),
        (t.position = t.position || "top"),
        (t.weight = t.weight || 0),
        (t._layers =
          t._layers ||
          function () {
            return [
              {
                z: 0,
                draw(e) {
                  t.draw(e);
                },
              },
            ];
          }),
        n.boxes.push(t);
    },
    removeBox(n, t) {
      let e = n.boxes ? n.boxes.indexOf(t) : -1;
      e !== -1 && n.boxes.splice(e, 1);
    },
    configure(n, t, e) {
      (t.fullSize = e.fullSize),
        (t.position = e.position),
        (t.weight = e.weight);
    },
    update(n, t, e, i) {
      if (!n) return;
      let o = Dn(n.options.layout.padding),
        r = Math.max(t - o.width, 0),
        a = Math.max(e - o.height, 0),
        d = Vv(n.boxes),
        m = d.vertical,
        _ = d.horizontal;
      Qt(n.boxes, (j) => {
        typeof j.beforeLayout == "function" && j.beforeLayout();
      });
      let v =
          m.reduce(
            (j, z) =>
              z.box.options && z.box.options.display === !1 ? j : j + 1,
            0
          ) || 1,
        S = Object.freeze({
          outerWidth: t,
          outerHeight: e,
          padding: o,
          availableWidth: r,
          availableHeight: a,
          vBoxMaxWidth: r / 2 / v,
          hBoxMaxHeight: a / 2,
        }),
        T = Object.assign({}, o);
      Mf(T, Dn(i));
      let M = Object.assign(
          { maxPadding: T, w: r, h: a, x: o.left, y: o.top },
          o
        ),
        A = Nv(m.concat(_), S);
      wa(d.fullSize, M, S, A),
        wa(m, M, S, A),
        wa(_, M, S, A) && wa(m, M, S, A),
        Bv(M),
        Ym(d.leftAndTop, M, S, A),
        (M.x += M.w),
        (M.y += M.h),
        Ym(d.rightAndBottom, M, S, A),
        (n.chartArea = {
          left: M.left,
          top: M.top,
          right: M.left + M.w,
          bottom: M.top + M.h,
          height: M.h,
          width: M.w,
        }),
        Qt(d.chartArea, (j) => {
          let z = j.box;
          Object.assign(z, n.chartArea),
            z.update(M.w, M.h, { left: 0, top: 0, right: 0, bottom: 0 });
        });
    },
  },
  ol = class {
    acquireContext(t, e) {}
    releaseContext(t) {
      return !1;
    }
    addEventListener(t, e, i) {}
    removeEventListener(t, e, i) {}
    getDevicePixelRatio() {
      return 1;
    }
    getMaximumSize(t, e, i, o) {
      return (
        (e = Math.max(0, e || t.width)),
        (i = i || t.height),
        { width: e, height: Math.max(0, o ? Math.floor(e / o) : i) }
      );
    }
    isAttached(t) {
      return !0;
    }
    updateConfig(t) {}
  },
  Rd = class extends ol {
    acquireContext(t) {
      return (t && t.getContext && t.getContext("2d")) || null;
    }
    updateConfig(t) {
      t.options.animation = !1;
    }
  },
  il = "$chartjs",
  jv = {
    touchstart: "mousedown",
    touchmove: "mousemove",
    touchend: "mouseup",
    pointerenter: "mouseenter",
    pointerdown: "mousedown",
    pointermove: "mousemove",
    pointerup: "mouseup",
    pointerleave: "mouseout",
    pointerout: "mouseout",
  },
  qm = (n) => n === null || n === "";
function zv(n, t) {
  let e = n.style,
    i = n.getAttribute("height"),
    o = n.getAttribute("width");
  if (
    ((n[il] = {
      initial: {
        height: i,
        width: o,
        style: { display: e.display, height: e.height, width: e.width },
      },
    }),
    (e.display = e.display || "block"),
    (e.boxSizing = e.boxSizing || "border-box"),
    qm(o))
  ) {
    let r = wd(n, "width");
    r !== void 0 && (n.width = r);
  }
  if (qm(i))
    if (n.style.height === "") n.height = n.width / (t || 2);
    else {
      let r = wd(n, "height");
      r !== void 0 && (n.height = r);
    }
  return n;
}
var Tf = Nm ? { passive: !0 } : !1;
function Uv(n, t, e) {
  n && n.addEventListener(t, e, Tf);
}
function Wv(n, t, e) {
  n && n.canvas && n.canvas.removeEventListener(t, e, Tf);
}
function $v(n, t) {
  let e = jv[n.type] || n.type,
    { x: i, y: o } = uo(n, t);
  return {
    type: e,
    chart: t,
    native: n,
    x: i !== void 0 ? i : null,
    y: o !== void 0 ? o : null,
  };
}
function rl(n, t) {
  for (let e of n) if (e === t || e.contains(t)) return !0;
}
function Gv(n, t, e) {
  let i = n.canvas,
    o = new MutationObserver((r) => {
      let a = !1;
      for (let d of r)
        (a = a || rl(d.addedNodes, i)), (a = a && !rl(d.removedNodes, i));
      a && e();
    });
  return o.observe(document, { childList: !0, subtree: !0 }), o;
}
function Yv(n, t, e) {
  let i = n.canvas,
    o = new MutationObserver((r) => {
      let a = !1;
      for (let d of r)
        (a = a || rl(d.removedNodes, i)), (a = a && !rl(d.addedNodes, i));
      a && e();
    });
  return o.observe(document, { childList: !0, subtree: !0 }), o;
}
var Da = new Map(),
  Km = 0;
function Ef() {
  let n = window.devicePixelRatio;
  n !== Km &&
    ((Km = n),
    Da.forEach((t, e) => {
      e.currentDevicePixelRatio !== n && t();
    }));
}
function qv(n, t) {
  Da.size || window.addEventListener("resize", Ef), Da.set(n, t);
}
function Kv(n) {
  Da.delete(n), Da.size || window.removeEventListener("resize", Ef);
}
function Qv(n, t, e) {
  let i = n.canvas,
    o = i && Ks(i);
  if (!o) return;
  let r = hd((d, m) => {
      let _ = o.clientWidth;
      e(d, m), _ < o.clientWidth && e();
    }, window),
    a = new ResizeObserver((d) => {
      let m = d[0],
        _ = m.contentRect.width,
        v = m.contentRect.height;
      (_ === 0 && v === 0) || r(_, v);
    });
  return a.observe(o), qv(n, r), a;
}
function kd(n, t, e) {
  e && e.disconnect(), t === "resize" && Kv(n);
}
function Xv(n, t, e) {
  let i = n.canvas,
    o = hd((r) => {
      n.ctx !== null && e($v(r, n));
    }, n);
  return Uv(i, t, o), o;
}
var Fd = class extends ol {
  acquireContext(t, e) {
    let i = t && t.getContext && t.getContext("2d");
    return i && i.canvas === t ? (zv(t, e), i) : null;
  }
  releaseContext(t) {
    let e = t.canvas;
    if (!e[il]) return !1;
    let i = e[il].initial;
    ["height", "width"].forEach((r) => {
      let a = i[r];
      mt(a) ? e.removeAttribute(r) : e.setAttribute(r, a);
    });
    let o = i.style || {};
    return (
      Object.keys(o).forEach((r) => {
        e.style[r] = o[r];
      }),
      (e.width = e.width),
      delete e[il],
      !0
    );
  }
  addEventListener(t, e, i) {
    this.removeEventListener(t, e);
    let o = t.$proxies || (t.$proxies = {}),
      a = { attach: Gv, detach: Yv, resize: Qv }[e] || Xv;
    o[e] = a(t, e, i);
  }
  removeEventListener(t, e) {
    let i = t.$proxies || (t.$proxies = {}),
      o = i[e];
    if (!o) return;
    (({ attach: kd, detach: kd, resize: kd })[e] || Wv)(t, e, o),
      (i[e] = void 0);
  }
  getDevicePixelRatio() {
    return window.devicePixelRatio;
  }
  getMaximumSize(t, e, i, o) {
    return Fm(t, e, i, o);
  }
  isAttached(t) {
    let e = t && Ks(t);
    return !!(e && e.isConnected);
  }
};
function Zv(n) {
  return !qs() || (typeof OffscreenCanvas < "u" && n instanceof OffscreenCanvas)
    ? Rd
    : Fd;
}
var al = class {
  static defaults = {};
  static defaultRoutes = void 0;
  x;
  y;
  active = !1;
  options;
  $animations;
  tooltipPosition(t) {
    let { x: e, y: i } = this.getProps(["x", "y"], t);
    return { x: e, y: i };
  }
  hasValue() {
    return ma(this.x) && ma(this.y);
  }
  getProps(t, e) {
    let i = this.$animations;
    if (!e || !i) return this;
    let o = {};
    return (
      t.forEach((r) => {
        o[r] = i[r] && i[r].active() ? i[r]._to : this[r];
      }),
      o
    );
  }
};
function Jv(n, t) {
  let e = n.options.ticks,
    i = e1(n),
    o = Math.min(e.maxTicksLimit || i, i),
    r = e.major.enabled ? i1(t) : [],
    a = r.length,
    d = r[0],
    m = r[a - 1],
    _ = [];
  if (a > o) return n1(t, _, r, a / o), _;
  let v = t1(r, t, o);
  if (a > 0) {
    let S,
      T,
      M = a > 1 ? Math.round((m - d) / (a - 1)) : null;
    for (Js(t, _, v, mt(M) ? 0 : d - M, d), S = 0, T = a - 1; S < T; S++)
      Js(t, _, v, r[S], r[S + 1]);
    return Js(t, _, v, m, mt(M) ? t.length : m + M), _;
  }
  return Js(t, _, v), _;
}
function e1(n) {
  let t = n.options.offset,
    e = n._tickSize(),
    i = n._length / e + (t ? 0 : 1),
    o = n._maxLength / e;
  return Math.floor(Math.min(i, o));
}
function t1(n, t, e) {
  let i = o1(n),
    o = t.length / e;
  if (!i) return Math.max(o, 1);
  let r = pm(i);
  for (let a = 0, d = r.length - 1; a < d; a++) {
    let m = r[a];
    if (m > o) return m;
  }
  return Math.max(o, 1);
}
function i1(n) {
  let t = [],
    e,
    i;
  for (e = 0, i = n.length; e < i; e++) n[e].major && t.push(e);
  return t;
}
function n1(n, t, e, i) {
  let o = 0,
    r = e[0],
    a;
  for (i = Math.ceil(i), a = 0; a < n.length; a++)
    a === r && (t.push(n[a]), o++, (r = e[o * i]));
}
function Js(n, t, e, i, o) {
  let r = Pt(i, 0),
    a = Math.min(Pt(o, n.length), n.length),
    d = 0,
    m,
    _,
    v;
  for (
    e = Math.ceil(e), o && ((m = o - i), (e = m / Math.floor(m / e))), v = r;
    v < 0;

  )
    d++, (v = Math.round(r + d * e));
  for (_ = Math.max(r, 0); _ < a; _++)
    _ === v && (t.push(n[_]), d++, (v = Math.round(r + d * e)));
}
function o1(n) {
  let t = n.length,
    e,
    i;
  if (t < 2) return !1;
  for (i = n[0], e = 1; e < t; ++e) if (n[e] - n[e - 1] !== i) return !1;
  return i;
}
var r1 = (n) => (n === "left" ? "right" : n === "right" ? "left" : n),
  Qm = (n, t, e) => (t === "top" || t === "left" ? n[t] + e : n[t] - e),
  Xm = (n, t) => Math.min(t || n, n);
function Zm(n, t) {
  let e = [],
    i = n.length / t,
    o = n.length,
    r = 0;
  for (; r < o; r += i) e.push(n[Math.floor(r)]);
  return e;
}
function a1(n, t, e) {
  let i = n.ticks.length,
    o = Math.min(t, i - 1),
    r = n._startPixel,
    a = n._endPixel,
    d = 1e-6,
    m = n.getPixelForTick(o),
    _;
  if (
    !(
      e &&
      (i === 1
        ? (_ = Math.max(m - r, a - m))
        : t === 0
        ? (_ = (n.getPixelForTick(1) - m) / 2)
        : (_ = (m - n.getPixelForTick(o - 1)) / 2),
      (m += o < t ? _ : -_),
      m < r - d || m > a + d)
    )
  )
    return m;
}
function s1(n, t) {
  Qt(n, (e) => {
    let i = e.gc,
      o = i.length / 2,
      r;
    if (o > t) {
      for (r = 0; r < o; ++r) delete e.data[i[r]];
      i.splice(0, o);
    }
  });
}
function xa(n) {
  return n.drawTicks ? n.tickLength : 0;
}
function Jm(n, t) {
  if (!n.display) return 0;
  let e = Ro(n.font, t),
    i = Dn(n.padding);
  return (At(n.text) ? n.text.length : 1) * e.lineHeight + i.height;
}
function l1(n, t) {
  return Fo(n, { scale: t, type: "scale" });
}
function c1(n, t, e) {
  return Fo(n, { tick: e, index: t, type: "tick" });
}
function d1(n, t, e) {
  let i = Dm(n);
  return ((e && t !== "right") || (!e && t === "right")) && (i = r1(i)), i;
}
function u1(n, t, e, i) {
  let { top: o, left: r, bottom: a, right: d, chart: m } = n,
    { chartArea: _, scales: v } = m,
    S = 0,
    T,
    M,
    A,
    j = a - o,
    z = d - r;
  if (n.isHorizontal()) {
    if (((M = pd(i, r, d)), nt(e))) {
      let L = Object.keys(e)[0],
        ue = e[L];
      A = v[L].getPixelForValue(ue) + j - t;
    } else
      e === "center" ? (A = (_.bottom + _.top) / 2 + j - t) : (A = Qm(n, e, t));
    T = d - r;
  } else {
    if (nt(e)) {
      let L = Object.keys(e)[0],
        ue = e[L];
      M = v[L].getPixelForValue(ue) - z + t;
    } else
      e === "center" ? (M = (_.left + _.right) / 2 - z + t) : (M = Qm(n, e, t));
    (A = pd(i, a, o)), (S = e === "left" ? -wn : wn);
  }
  return { titleX: M, titleY: A, maxWidth: T, rotation: S };
}
var br = class n extends al {
    constructor(t) {
      super(),
        (this.id = t.id),
        (this.type = t.type),
        (this.options = void 0),
        (this.ctx = t.ctx),
        (this.chart = t.chart),
        (this.top = void 0),
        (this.bottom = void 0),
        (this.left = void 0),
        (this.right = void 0),
        (this.width = void 0),
        (this.height = void 0),
        (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
        (this.maxWidth = void 0),
        (this.maxHeight = void 0),
        (this.paddingTop = void 0),
        (this.paddingBottom = void 0),
        (this.paddingLeft = void 0),
        (this.paddingRight = void 0),
        (this.axis = void 0),
        (this.labelRotation = void 0),
        (this.min = void 0),
        (this.max = void 0),
        (this._range = void 0),
        (this.ticks = []),
        (this._gridLineItems = null),
        (this._labelItems = null),
        (this._labelSizes = null),
        (this._length = 0),
        (this._maxLength = 0),
        (this._longestTextCache = {}),
        (this._startPixel = void 0),
        (this._endPixel = void 0),
        (this._reversePixels = !1),
        (this._userMax = void 0),
        (this._userMin = void 0),
        (this._suggestedMax = void 0),
        (this._suggestedMin = void 0),
        (this._ticksLength = 0),
        (this._borderValue = 0),
        (this._cache = {}),
        (this._dataLimitsCached = !1),
        (this.$context = void 0);
    }
    init(t) {
      (this.options = t.setContext(this.getContext())),
        (this.axis = t.axis),
        (this._userMin = this.parse(t.min)),
        (this._userMax = this.parse(t.max)),
        (this._suggestedMin = this.parse(t.suggestedMin)),
        (this._suggestedMax = this.parse(t.suggestedMax));
    }
    parse(t, e) {
      return t;
    }
    getUserBounds() {
      let {
        _userMin: t,
        _userMax: e,
        _suggestedMin: i,
        _suggestedMax: o,
      } = this;
      return (
        (t = Di(t, Number.POSITIVE_INFINITY)),
        (e = Di(e, Number.NEGATIVE_INFINITY)),
        (i = Di(i, Number.POSITIVE_INFINITY)),
        (o = Di(o, Number.NEGATIVE_INFINITY)),
        { min: Di(t, i), max: Di(e, o), minDefined: Ut(t), maxDefined: Ut(e) }
      );
    }
    getMinMax(t) {
      let {
          min: e,
          max: i,
          minDefined: o,
          maxDefined: r,
        } = this.getUserBounds(),
        a;
      if (o && r) return { min: e, max: i };
      let d = this.getMatchingVisibleMetas();
      for (let m = 0, _ = d.length; m < _; ++m)
        (a = d[m].controller.getMinMax(this, t)),
          o || (e = Math.min(e, a.min)),
          r || (i = Math.max(i, a.max));
      return (
        (e = r && e > i ? i : e),
        (i = o && e > i ? e : i),
        { min: Di(e, Di(i, e)), max: Di(i, Di(e, i)) }
      );
    }
    getPadding() {
      return {
        left: this.paddingLeft || 0,
        top: this.paddingTop || 0,
        right: this.paddingRight || 0,
        bottom: this.paddingBottom || 0,
      };
    }
    getTicks() {
      return this.ticks;
    }
    getLabels() {
      let t = this.chart.data;
      return (
        this.options.labels ||
        (this.isHorizontal() ? t.xLabels : t.yLabels) ||
        t.labels ||
        []
      );
    }
    getLabelItems(t = this.chart.chartArea) {
      return (
        this._labelItems || (this._labelItems = this._computeLabelItems(t))
      );
    }
    beforeLayout() {
      (this._cache = {}), (this._dataLimitsCached = !1);
    }
    beforeUpdate() {
      Mt(this.options.beforeUpdate, [this]);
    }
    update(t, e, i) {
      let { beginAtZero: o, grace: r, ticks: a } = this.options,
        d = a.sampleSize;
      this.beforeUpdate(),
        (this.maxWidth = t),
        (this.maxHeight = e),
        (this._margins = i =
          Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, i)),
        (this.ticks = null),
        (this._labelSizes = null),
        (this._gridLineItems = null),
        (this._labelItems = null),
        this.beforeSetDimensions(),
        this.setDimensions(),
        this.afterSetDimensions(),
        (this._maxLength = this.isHorizontal()
          ? this.width + i.left + i.right
          : this.height + i.top + i.bottom),
        this._dataLimitsCached ||
          (this.beforeDataLimits(),
          this.determineDataLimits(),
          this.afterDataLimits(),
          (this._range = Im(this, r, o)),
          (this._dataLimitsCached = !0)),
        this.beforeBuildTicks(),
        (this.ticks = this.buildTicks() || []),
        this.afterBuildTicks();
      let m = d < this.ticks.length;
      this._convertTicksToLabels(m ? Zm(this.ticks, d) : this.ticks),
        this.configure(),
        this.beforeCalculateLabelRotation(),
        this.calculateLabelRotation(),
        this.afterCalculateLabelRotation(),
        a.display &&
          (a.autoSkip || a.source === "auto") &&
          ((this.ticks = Jv(this, this.ticks)),
          (this._labelSizes = null),
          this.afterAutoSkip()),
        m && this._convertTicksToLabels(this.ticks),
        this.beforeFit(),
        this.fit(),
        this.afterFit(),
        this.afterUpdate();
    }
    configure() {
      let t = this.options.reverse,
        e,
        i;
      this.isHorizontal()
        ? ((e = this.left), (i = this.right))
        : ((e = this.top), (i = this.bottom), (t = !t)),
        (this._startPixel = e),
        (this._endPixel = i),
        (this._reversePixels = t),
        (this._length = i - e),
        (this._alignToPixels = this.options.alignToPixels);
    }
    afterUpdate() {
      Mt(this.options.afterUpdate, [this]);
    }
    beforeSetDimensions() {
      Mt(this.options.beforeSetDimensions, [this]);
    }
    setDimensions() {
      this.isHorizontal()
        ? ((this.width = this.maxWidth),
          (this.left = 0),
          (this.right = this.width))
        : ((this.height = this.maxHeight),
          (this.top = 0),
          (this.bottom = this.height)),
        (this.paddingLeft = 0),
        (this.paddingTop = 0),
        (this.paddingRight = 0),
        (this.paddingBottom = 0);
    }
    afterSetDimensions() {
      Mt(this.options.afterSetDimensions, [this]);
    }
    _callHooks(t) {
      this.chart.notifyPlugins(t, this.getContext()),
        Mt(this.options[t], [this]);
    }
    beforeDataLimits() {
      this._callHooks("beforeDataLimits");
    }
    determineDataLimits() {}
    afterDataLimits() {
      this._callHooks("afterDataLimits");
    }
    beforeBuildTicks() {
      this._callHooks("beforeBuildTicks");
    }
    buildTicks() {
      return [];
    }
    afterBuildTicks() {
      this._callHooks("afterBuildTicks");
    }
    beforeTickToLabelConversion() {
      Mt(this.options.beforeTickToLabelConversion, [this]);
    }
    generateTickLabels(t) {
      let e = this.options.ticks,
        i,
        o,
        r;
      for (i = 0, o = t.length; i < o; i++)
        (r = t[i]), (r.label = Mt(e.callback, [r.value, i, t], this));
    }
    afterTickToLabelConversion() {
      Mt(this.options.afterTickToLabelConversion, [this]);
    }
    beforeCalculateLabelRotation() {
      Mt(this.options.beforeCalculateLabelRotation, [this]);
    }
    calculateLabelRotation() {
      let t = this.options,
        e = t.ticks,
        i = Xm(this.ticks.length, t.ticks.maxTicksLimit),
        o = e.minRotation || 0,
        r = e.maxRotation,
        a = o,
        d,
        m,
        _;
      if (
        !this._isVisible() ||
        !e.display ||
        o >= r ||
        i <= 1 ||
        !this.isHorizontal()
      ) {
        this.labelRotation = o;
        return;
      }
      let v = this._getLabelSizes(),
        S = v.widest.width,
        T = v.highest.height,
        M = so(this.chart.width - S, 0, this.maxWidth);
      (d = t.offset ? this.maxWidth / i : M / (i - 1)),
        S + 6 > d &&
          ((d = M / (i - (t.offset ? 0.5 : 1))),
          (m =
            this.maxHeight -
            xa(t.grid) -
            e.padding -
            Jm(t.title, this.chart.options.font)),
          (_ = Math.sqrt(S * S + T * T)),
          (a = zs(
            Math.min(
              Math.asin(so((v.highest.height + 6) / d, -1, 1)),
              Math.asin(so(m / _, -1, 1)) - Math.asin(so(T / _, -1, 1))
            )
          )),
          (a = Math.max(o, Math.min(r, a)))),
        (this.labelRotation = a);
    }
    afterCalculateLabelRotation() {
      Mt(this.options.afterCalculateLabelRotation, [this]);
    }
    afterAutoSkip() {}
    beforeFit() {
      Mt(this.options.beforeFit, [this]);
    }
    fit() {
      let t = { width: 0, height: 0 },
        {
          chart: e,
          options: { ticks: i, title: o, grid: r },
        } = this,
        a = this._isVisible(),
        d = this.isHorizontal();
      if (a) {
        let m = Jm(o, e.options.font);
        if (
          (d
            ? ((t.width = this.maxWidth), (t.height = xa(r) + m))
            : ((t.height = this.maxHeight), (t.width = xa(r) + m)),
          i.display && this.ticks.length)
        ) {
          let {
              first: _,
              last: v,
              widest: S,
              highest: T,
            } = this._getLabelSizes(),
            M = i.padding * 2,
            A = $n(this.labelRotation),
            j = Math.cos(A),
            z = Math.sin(A);
          if (d) {
            let L = i.mirror ? 0 : z * S.width + j * T.height;
            t.height = Math.min(this.maxHeight, t.height + L + M);
          } else {
            let L = i.mirror ? 0 : j * S.width + z * T.height;
            t.width = Math.min(this.maxWidth, t.width + L + M);
          }
          this._calculatePadding(_, v, z, j);
        }
      }
      this._handleMargins(),
        d
          ? ((this.width = this._length =
              e.width - this._margins.left - this._margins.right),
            (this.height = t.height))
          : ((this.width = t.width),
            (this.height = this._length =
              e.height - this._margins.top - this._margins.bottom));
    }
    _calculatePadding(t, e, i, o) {
      let {
          ticks: { align: r, padding: a },
          position: d,
        } = this.options,
        m = this.labelRotation !== 0,
        _ = d !== "top" && this.axis === "x";
      if (this.isHorizontal()) {
        let v = this.getPixelForTick(0) - this.left,
          S = this.right - this.getPixelForTick(this.ticks.length - 1),
          T = 0,
          M = 0;
        m
          ? _
            ? ((T = o * t.width), (M = i * e.height))
            : ((T = i * t.height), (M = o * e.width))
          : r === "start"
          ? (M = e.width)
          : r === "end"
          ? (T = t.width)
          : r !== "inner" && ((T = t.width / 2), (M = e.width / 2)),
          (this.paddingLeft = Math.max(
            ((T - v + a) * this.width) / (this.width - v),
            0
          )),
          (this.paddingRight = Math.max(
            ((M - S + a) * this.width) / (this.width - S),
            0
          ));
      } else {
        let v = e.height / 2,
          S = t.height / 2;
        r === "start"
          ? ((v = 0), (S = t.height))
          : r === "end" && ((v = e.height), (S = 0)),
          (this.paddingTop = v + a),
          (this.paddingBottom = S + a);
      }
    }
    _handleMargins() {
      this._margins &&
        ((this._margins.left = Math.max(this.paddingLeft, this._margins.left)),
        (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
        (this._margins.right = Math.max(
          this.paddingRight,
          this._margins.right
        )),
        (this._margins.bottom = Math.max(
          this.paddingBottom,
          this._margins.bottom
        )));
    }
    afterFit() {
      Mt(this.options.afterFit, [this]);
    }
    isHorizontal() {
      let { axis: t, position: e } = this.options;
      return e === "top" || e === "bottom" || t === "x";
    }
    isFullSize() {
      return this.options.fullSize;
    }
    _convertTicksToLabels(t) {
      this.beforeTickToLabelConversion(), this.generateTickLabels(t);
      let e, i;
      for (e = 0, i = t.length; e < i; e++)
        mt(t[e].label) && (t.splice(e, 1), i--, e--);
      this.afterTickToLabelConversion();
    }
    _getLabelSizes() {
      let t = this._labelSizes;
      if (!t) {
        let e = this.options.ticks.sampleSize,
          i = this.ticks;
        e < i.length && (i = Zm(i, e)),
          (this._labelSizes = t =
            this._computeLabelSizes(
              i,
              i.length,
              this.options.ticks.maxTicksLimit
            ));
      }
      return t;
    }
    _computeLabelSizes(t, e, i) {
      let { ctx: o, _longestTextCache: r } = this,
        a = [],
        d = [],
        m = Math.floor(e / Xm(e, i)),
        _ = 0,
        v = 0,
        S,
        T,
        M,
        A,
        j,
        z,
        L,
        ue,
        Ve,
        Se,
        Re;
      for (S = 0; S < e; S += m) {
        if (
          ((A = t[S].label),
          (j = this._resolveTickFontOptions(S)),
          (o.font = z = j.string),
          (L = r[z] = r[z] || { data: {}, gc: [] }),
          (ue = j.lineHeight),
          (Ve = Se = 0),
          !mt(A) && !At(A))
        )
          (Ve = ca(o, L.data, L.gc, Ve, A)), (Se = ue);
        else if (At(A))
          for (T = 0, M = A.length; T < M; ++T)
            (Re = A[T]),
              !mt(Re) &&
                !At(Re) &&
                ((Ve = ca(o, L.data, L.gc, Ve, Re)), (Se += ue));
        a.push(Ve), d.push(Se), (_ = Math.max(Ve, _)), (v = Math.max(Se, v));
      }
      s1(r, e);
      let b = a.indexOf(_),
        Be = d.indexOf(v),
        be = (He) => ({ width: a[He] || 0, height: d[He] || 0 });
      return {
        first: be(0),
        last: be(e - 1),
        widest: be(b),
        highest: be(Be),
        widths: a,
        heights: d,
      };
    }
    getLabelForValue(t) {
      return t;
    }
    getPixelForValue(t, e) {
      return NaN;
    }
    getValueForPixel(t) {}
    getPixelForTick(t) {
      let e = this.ticks;
      return t < 0 || t > e.length - 1
        ? null
        : this.getPixelForValue(e[t].value);
    }
    getPixelForDecimal(t) {
      this._reversePixels && (t = 1 - t);
      let e = this._startPixel + t * this._length;
      return _m(this._alignToPixels ? co(this.chart, e, 0) : e);
    }
    getDecimalForPixel(t) {
      let e = (t - this._startPixel) / this._length;
      return this._reversePixels ? 1 - e : e;
    }
    getBasePixel() {
      return this.getPixelForValue(this.getBaseValue());
    }
    getBaseValue() {
      let { min: t, max: e } = this;
      return t < 0 && e < 0 ? e : t > 0 && e > 0 ? t : 0;
    }
    getContext(t) {
      let e = this.ticks || [];
      if (t >= 0 && t < e.length) {
        let i = e[t];
        return i.$context || (i.$context = c1(this.getContext(), t, i));
      }
      return (
        this.$context || (this.$context = l1(this.chart.getContext(), this))
      );
    }
    _tickSize() {
      let t = this.options.ticks,
        e = $n(this.labelRotation),
        i = Math.abs(Math.cos(e)),
        o = Math.abs(Math.sin(e)),
        r = this._getLabelSizes(),
        a = t.autoSkipPadding || 0,
        d = r ? r.widest.width + a : 0,
        m = r ? r.highest.height + a : 0;
      return this.isHorizontal()
        ? m * i > d * o
          ? d / i
          : m / o
        : m * o < d * i
        ? m / i
        : d / o;
    }
    _isVisible() {
      let t = this.options.display;
      return t !== "auto" ? !!t : this.getMatchingVisibleMetas().length > 0;
    }
    _computeGridLineItems(t) {
      let e = this.axis,
        i = this.chart,
        o = this.options,
        { grid: r, position: a, border: d } = o,
        m = r.offset,
        _ = this.isHorizontal(),
        S = this.ticks.length + (m ? 1 : 0),
        T = xa(r),
        M = [],
        A = d.setContext(this.getContext()),
        j = A.display ? A.width : 0,
        z = j / 2,
        L = function (lt) {
          return co(i, lt, j);
        },
        ue,
        Ve,
        Se,
        Re,
        b,
        Be,
        be,
        He,
        st,
        Ft,
        Ie,
        Xt;
      if (a === "top")
        (ue = L(this.bottom)),
          (Be = this.bottom - T),
          (He = ue - z),
          (Ft = L(t.top) + z),
          (Xt = t.bottom);
      else if (a === "bottom")
        (ue = L(this.top)),
          (Ft = t.top),
          (Xt = L(t.bottom) - z),
          (Be = ue + z),
          (He = this.top + T);
      else if (a === "left")
        (ue = L(this.right)),
          (b = this.right - T),
          (be = ue - z),
          (st = L(t.left) + z),
          (Ie = t.right);
      else if (a === "right")
        (ue = L(this.left)),
          (st = t.left),
          (Ie = L(t.right) - z),
          (b = ue + z),
          (be = this.left + T);
      else if (e === "x") {
        if (a === "center") ue = L((t.top + t.bottom) / 2 + 0.5);
        else if (nt(a)) {
          let lt = Object.keys(a)[0],
            Zt = a[lt];
          ue = L(this.chart.scales[lt].getPixelForValue(Zt));
        }
        (Ft = t.top), (Xt = t.bottom), (Be = ue + z), (He = Be + T);
      } else if (e === "y") {
        if (a === "center") ue = L((t.left + t.right) / 2);
        else if (nt(a)) {
          let lt = Object.keys(a)[0],
            Zt = a[lt];
          ue = L(this.chart.scales[lt].getPixelForValue(Zt));
        }
        (b = ue - z), (be = b - T), (st = t.left), (Ie = t.right);
      }
      let dn = Pt(o.ticks.maxTicksLimit, S),
        yt = Math.max(1, Math.ceil(S / dn));
      for (Ve = 0; Ve < S; Ve += yt) {
        let lt = this.getContext(Ve),
          Zt = r.setContext(lt),
          Qi = d.setContext(lt),
          fo = Zt.lineWidth,
          En = Zt.color,
          go = Qi.dash || [],
          un = Qi.dashOffset,
          Kn = Zt.tickWidth,
          kn = Zt.tickColor,
          _o = Zt.tickBorderDash || [],
          On = Zt.tickBorderDashOffset;
        (Se = a1(this, Ve, m)),
          Se !== void 0 &&
            ((Re = co(i, Se, fo)),
            _ ? (b = be = st = Ie = Re) : (Be = He = Ft = Xt = Re),
            M.push({
              tx1: b,
              ty1: Be,
              tx2: be,
              ty2: He,
              x1: st,
              y1: Ft,
              x2: Ie,
              y2: Xt,
              width: fo,
              color: En,
              borderDash: go,
              borderDashOffset: un,
              tickWidth: Kn,
              tickColor: kn,
              tickBorderDash: _o,
              tickBorderDashOffset: On,
            }));
      }
      return (this._ticksLength = S), (this._borderValue = ue), M;
    }
    _computeLabelItems(t) {
      let e = this.axis,
        i = this.options,
        { position: o, ticks: r } = i,
        a = this.isHorizontal(),
        d = this.ticks,
        { align: m, crossAlign: _, padding: v, mirror: S } = r,
        T = xa(i.grid),
        M = T + v,
        A = S ? -v : M,
        j = -$n(this.labelRotation),
        z = [],
        L,
        ue,
        Ve,
        Se,
        Re,
        b,
        Be,
        be,
        He,
        st,
        Ft,
        Ie,
        Xt = "middle";
      if (o === "top")
        (b = this.bottom - A), (Be = this._getXAxisLabelAlignment());
      else if (o === "bottom")
        (b = this.top + A), (Be = this._getXAxisLabelAlignment());
      else if (o === "left") {
        let yt = this._getYAxisLabelAlignment(T);
        (Be = yt.textAlign), (Re = yt.x);
      } else if (o === "right") {
        let yt = this._getYAxisLabelAlignment(T);
        (Be = yt.textAlign), (Re = yt.x);
      } else if (e === "x") {
        if (o === "center") b = (t.top + t.bottom) / 2 + M;
        else if (nt(o)) {
          let yt = Object.keys(o)[0],
            lt = o[yt];
          b = this.chart.scales[yt].getPixelForValue(lt) + M;
        }
        Be = this._getXAxisLabelAlignment();
      } else if (e === "y") {
        if (o === "center") Re = (t.left + t.right) / 2 - M;
        else if (nt(o)) {
          let yt = Object.keys(o)[0],
            lt = o[yt];
          Re = this.chart.scales[yt].getPixelForValue(lt);
        }
        Be = this._getYAxisLabelAlignment(T).textAlign;
      }
      e === "y" &&
        (m === "start" ? (Xt = "top") : m === "end" && (Xt = "bottom"));
      let dn = this._getLabelSizes();
      for (L = 0, ue = d.length; L < ue; ++L) {
        (Ve = d[L]), (Se = Ve.label);
        let yt = r.setContext(this.getContext(L));
        (be = this.getPixelForTick(L) + r.labelOffset),
          (He = this._resolveTickFontOptions(L)),
          (st = He.lineHeight),
          (Ft = At(Se) ? Se.length : 1);
        let lt = Ft / 2,
          Zt = yt.color,
          Qi = yt.textStrokeColor,
          fo = yt.textStrokeWidth,
          En = Be;
        a
          ? ((Re = be),
            Be === "inner" &&
              (L === ue - 1
                ? (En = this.options.reverse ? "left" : "right")
                : L === 0
                ? (En = this.options.reverse ? "right" : "left")
                : (En = "center")),
            o === "top"
              ? _ === "near" || j !== 0
                ? (Ie = -Ft * st + st / 2)
                : _ === "center"
                ? (Ie = -dn.highest.height / 2 - lt * st + st)
                : (Ie = -dn.highest.height + st / 2)
              : _ === "near" || j !== 0
              ? (Ie = st / 2)
              : _ === "center"
              ? (Ie = dn.highest.height / 2 - lt * st)
              : (Ie = dn.highest.height - Ft * st),
            S && (Ie *= -1),
            j !== 0 && !yt.showLabelBackdrop && (Re += (st / 2) * Math.sin(j)))
          : ((b = be), (Ie = ((1 - Ft) * st) / 2));
        let go;
        if (yt.showLabelBackdrop) {
          let un = Dn(yt.backdropPadding),
            Kn = dn.heights[L],
            kn = dn.widths[L],
            _o = Ie - un.top,
            On = 0 - un.left;
          switch (Xt) {
            case "middle":
              _o -= Kn / 2;
              break;
            case "bottom":
              _o -= Kn;
              break;
          }
          switch (Be) {
            case "center":
              On -= kn / 2;
              break;
            case "right":
              On -= kn;
              break;
            case "inner":
              L === ue - 1 ? (On -= kn) : L > 0 && (On -= kn / 2);
              break;
          }
          go = {
            left: On,
            top: _o,
            width: kn + un.width,
            height: Kn + un.height,
            color: yt.backdropColor,
          };
        }
        z.push({
          label: Se,
          font: He,
          textOffset: Ie,
          options: {
            rotation: j,
            color: Zt,
            strokeColor: Qi,
            strokeWidth: fo,
            textAlign: En,
            textBaseline: Xt,
            translation: [Re, b],
            backdrop: go,
          },
        });
      }
      return z;
    }
    _getXAxisLabelAlignment() {
      let { position: t, ticks: e } = this.options;
      if (-$n(this.labelRotation)) return t === "top" ? "left" : "right";
      let o = "center";
      return (
        e.align === "start"
          ? (o = "left")
          : e.align === "end"
          ? (o = "right")
          : e.align === "inner" && (o = "inner"),
        o
      );
    }
    _getYAxisLabelAlignment(t) {
      let {
          position: e,
          ticks: { crossAlign: i, mirror: o, padding: r },
        } = this.options,
        a = this._getLabelSizes(),
        d = t + r,
        m = a.widest.width,
        _,
        v;
      return (
        e === "left"
          ? o
            ? ((v = this.right + r),
              i === "near"
                ? (_ = "left")
                : i === "center"
                ? ((_ = "center"), (v += m / 2))
                : ((_ = "right"), (v += m)))
            : ((v = this.right - d),
              i === "near"
                ? (_ = "right")
                : i === "center"
                ? ((_ = "center"), (v -= m / 2))
                : ((_ = "left"), (v = this.left)))
          : e === "right"
          ? o
            ? ((v = this.left + r),
              i === "near"
                ? (_ = "right")
                : i === "center"
                ? ((_ = "center"), (v -= m / 2))
                : ((_ = "left"), (v -= m)))
            : ((v = this.left + d),
              i === "near"
                ? (_ = "left")
                : i === "center"
                ? ((_ = "center"), (v += m / 2))
                : ((_ = "right"), (v = this.right)))
          : (_ = "right"),
        { textAlign: _, x: v }
      );
    }
    _computeLabelArea() {
      if (this.options.ticks.mirror) return;
      let t = this.chart,
        e = this.options.position;
      if (e === "left" || e === "right")
        return { top: 0, left: this.left, bottom: t.height, right: this.right };
      if (e === "top" || e === "bottom")
        return { top: this.top, left: 0, bottom: this.bottom, right: t.width };
    }
    drawBackground() {
      let {
        ctx: t,
        options: { backgroundColor: e },
        left: i,
        top: o,
        width: r,
        height: a,
      } = this;
      e && (t.save(), (t.fillStyle = e), t.fillRect(i, o, r, a), t.restore());
    }
    getLineWidthForValue(t) {
      let e = this.options.grid;
      if (!this._isVisible() || !e.display) return 0;
      let o = this.ticks.findIndex((r) => r.value === t);
      return o >= 0 ? e.setContext(this.getContext(o)).lineWidth : 0;
    }
    drawGrid(t) {
      let e = this.options.grid,
        i = this.ctx,
        o =
          this._gridLineItems ||
          (this._gridLineItems = this._computeGridLineItems(t)),
        r,
        a,
        d = (m, _, v) => {
          !v.width ||
            !v.color ||
            (i.save(),
            (i.lineWidth = v.width),
            (i.strokeStyle = v.color),
            i.setLineDash(v.borderDash || []),
            (i.lineDashOffset = v.borderDashOffset),
            i.beginPath(),
            i.moveTo(m.x, m.y),
            i.lineTo(_.x, _.y),
            i.stroke(),
            i.restore());
        };
      if (e.display)
        for (r = 0, a = o.length; r < a; ++r) {
          let m = o[r];
          e.drawOnChartArea && d({ x: m.x1, y: m.y1 }, { x: m.x2, y: m.y2 }, m),
            e.drawTicks &&
              d(
                { x: m.tx1, y: m.ty1 },
                { x: m.tx2, y: m.ty2 },
                {
                  color: m.tickColor,
                  width: m.tickWidth,
                  borderDash: m.tickBorderDash,
                  borderDashOffset: m.tickBorderDashOffset,
                }
              );
        }
    }
    drawBorder() {
      let {
          chart: t,
          ctx: e,
          options: { border: i, grid: o },
        } = this,
        r = i.setContext(this.getContext()),
        a = i.display ? r.width : 0;
      if (!a) return;
      let d = o.setContext(this.getContext(0)).lineWidth,
        m = this._borderValue,
        _,
        v,
        S,
        T;
      this.isHorizontal()
        ? ((_ = co(t, this.left, a) - a / 2),
          (v = co(t, this.right, d) + d / 2),
          (S = T = m))
        : ((S = co(t, this.top, a) - a / 2),
          (T = co(t, this.bottom, d) + d / 2),
          (_ = v = m)),
        e.save(),
        (e.lineWidth = r.width),
        (e.strokeStyle = r.color),
        e.beginPath(),
        e.moveTo(_, S),
        e.lineTo(v, T),
        e.stroke(),
        e.restore();
    }
    drawLabels(t) {
      if (!this.options.ticks.display) return;
      let i = this.ctx,
        o = this._computeLabelArea();
      o && gd(i, o);
      let r = this.getLabelItems(t);
      for (let a of r) {
        let d = a.options,
          m = a.font,
          _ = a.label,
          v = a.textOffset;
        ga(i, _, 0, v, m, d);
      }
      o && _d(i);
    }
    drawTitle() {
      let {
        ctx: t,
        options: { position: e, title: i, reverse: o },
      } = this;
      if (!i.display) return;
      let r = Ro(i.font),
        a = Dn(i.padding),
        d = i.align,
        m = r.lineHeight / 2;
      e === "bottom" || e === "center" || nt(e)
        ? ((m += a.bottom),
          At(i.text) && (m += r.lineHeight * (i.text.length - 1)))
        : (m += a.top);
      let {
        titleX: _,
        titleY: v,
        maxWidth: S,
        rotation: T,
      } = u1(this, m, e, d);
      ga(t, i.text, 0, 0, r, {
        color: i.color,
        maxWidth: S,
        rotation: T,
        textAlign: d1(d, e, o),
        textBaseline: "middle",
        translation: [_, v],
      });
    }
    draw(t) {
      this._isVisible() &&
        (this.drawBackground(),
        this.drawGrid(t),
        this.drawBorder(),
        this.drawTitle(),
        this.drawLabels(t));
    }
    _layers() {
      let t = this.options,
        e = (t.ticks && t.ticks.z) || 0,
        i = Pt(t.grid && t.grid.z, -1),
        o = Pt(t.border && t.border.z, 0);
      return !this._isVisible() || this.draw !== n.prototype.draw
        ? [
            {
              z: e,
              draw: (r) => {
                this.draw(r);
              },
            },
          ]
        : [
            {
              z: i,
              draw: (r) => {
                this.drawBackground(), this.drawGrid(r), this.drawTitle();
              },
            },
            {
              z: o,
              draw: () => {
                this.drawBorder();
              },
            },
            {
              z: e,
              draw: (r) => {
                this.drawLabels(r);
              },
            },
          ];
    }
    getMatchingVisibleMetas(t) {
      let e = this.chart.getSortedVisibleDatasetMetas(),
        i = this.axis + "AxisID",
        o = [],
        r,
        a;
      for (r = 0, a = e.length; r < a; ++r) {
        let d = e[r];
        d[i] === this.id && (!t || d.type === t) && o.push(d);
      }
      return o;
    }
    _resolveTickFontOptions(t) {
      let e = this.options.ticks.setContext(this.getContext(t));
      return Ro(e.font);
    }
    _maxDigits() {
      let t = this._resolveTickFontOptions(0).lineHeight;
      return (this.isHorizontal() ? this.width : this.height) / t;
    }
  },
  _r = class {
    constructor(t, e, i) {
      (this.type = t),
        (this.scope = e),
        (this.override = i),
        (this.items = Object.create(null));
    }
    isForType(t) {
      return Object.prototype.isPrototypeOf.call(
        this.type.prototype,
        t.prototype
      );
    }
    register(t) {
      let e = Object.getPrototypeOf(t),
        i;
      m1(e) && (i = this.register(e));
      let o = this.items,
        r = t.id,
        a = this.scope + "." + r;
      if (!r) throw new Error("class does not have id: " + t);
      return (
        r in o ||
          ((o[r] = t),
          h1(t, a, i),
          this.override && Rt.override(t.id, t.overrides)),
        a
      );
    }
    get(t) {
      return this.items[t];
    }
    unregister(t) {
      let e = this.items,
        i = t.id,
        o = this.scope;
      i in e && delete e[i],
        o && i in Rt[o] && (delete Rt[o][i], this.override && delete lo[i]);
    }
  };
function h1(n, t, e) {
  let i = fr(Object.create(null), [e ? Rt.get(e) : {}, Rt.get(t), n.defaults]);
  Rt.set(t, i),
    n.defaultRoutes && p1(t, n.defaultRoutes),
    n.descriptors && Rt.describe(t, n.descriptors);
}
function p1(n, t) {
  Object.keys(t).forEach((e) => {
    let i = e.split("."),
      o = i.pop(),
      r = [n].concat(i).join("."),
      a = t[e].split("."),
      d = a.pop(),
      m = a.join(".");
    Rt.route(r, o, m, d);
  });
}
function m1(n) {
  return "id" in n && "defaults" in n;
}
var Nd = class {
    constructor() {
      (this.controllers = new _r(Tv, "datasets", !0)),
        (this.elements = new _r(al, "elements")),
        (this.plugins = new _r(Object, "plugins")),
        (this.scales = new _r(br, "scales")),
        (this._typedRegistries = [
          this.controllers,
          this.scales,
          this.elements,
        ]);
    }
    add(...t) {
      this._each("register", t);
    }
    remove(...t) {
      this._each("unregister", t);
    }
    addControllers(...t) {
      this._each("register", t, this.controllers);
    }
    addElements(...t) {
      this._each("register", t, this.elements);
    }
    addPlugins(...t) {
      this._each("register", t, this.plugins);
    }
    addScales(...t) {
      this._each("register", t, this.scales);
    }
    getController(t) {
      return this._get(t, this.controllers, "controller");
    }
    getElement(t) {
      return this._get(t, this.elements, "element");
    }
    getPlugin(t) {
      return this._get(t, this.plugins, "plugin");
    }
    getScale(t) {
      return this._get(t, this.scales, "scale");
    }
    removeControllers(...t) {
      this._each("unregister", t, this.controllers);
    }
    removeElements(...t) {
      this._each("unregister", t, this.elements);
    }
    removePlugins(...t) {
      this._each("unregister", t, this.plugins);
    }
    removeScales(...t) {
      this._each("unregister", t, this.scales);
    }
    _each(t, e, i) {
      [...e].forEach((o) => {
        let r = i || this._getRegistryForType(o);
        i || r.isForType(o) || (r === this.plugins && o.id)
          ? this._exec(t, r, o)
          : Qt(o, (a) => {
              let d = i || this._getRegistryForType(a);
              this._exec(t, d, a);
            });
      });
    }
    _exec(t, e, i) {
      let o = js(t);
      Mt(i["before" + o], [], i), e[t](i), Mt(i["after" + o], [], i);
    }
    _getRegistryForType(t) {
      for (let e = 0; e < this._typedRegistries.length; e++) {
        let i = this._typedRegistries[e];
        if (i.isForType(t)) return i;
      }
      return this.plugins;
    }
    _get(t, e, i) {
      let o = e.get(t);
      if (o === void 0)
        throw new Error('"' + t + '" is not a registered ' + i + ".");
      return o;
    }
  },
  Sn = new Nd(),
  Vd = class {
    constructor() {
      this._init = [];
    }
    notify(t, e, i, o) {
      e === "beforeInit" &&
        ((this._init = this._createDescriptors(t, !0)),
        this._notify(this._init, t, "install"));
      let r = o ? this._descriptors(t).filter(o) : this._descriptors(t),
        a = this._notify(r, t, e, i);
      return (
        e === "afterDestroy" &&
          (this._notify(r, t, "stop"),
          this._notify(this._init, t, "uninstall")),
        a
      );
    }
    _notify(t, e, i, o) {
      o = o || {};
      for (let r of t) {
        let a = r.plugin,
          d = a[i],
          m = [e, o, r.options];
        if (Mt(d, m, a) === !1 && o.cancelable) return !1;
      }
      return !0;
    }
    invalidate() {
      mt(this._cache) ||
        ((this._oldCache = this._cache), (this._cache = void 0));
    }
    _descriptors(t) {
      if (this._cache) return this._cache;
      let e = (this._cache = this._createDescriptors(t));
      return this._notifyStateChanges(t), e;
    }
    _createDescriptors(t, e) {
      let i = t && t.config,
        o = Pt(i.options && i.options.plugins, {}),
        r = f1(i);
      return o === !1 && !e ? [] : _1(t, r, o, e);
    }
    _notifyStateChanges(t) {
      let e = this._oldCache || [],
        i = this._cache,
        o = (r, a) =>
          r.filter((d) => !a.some((m) => d.plugin.id === m.plugin.id));
      this._notify(o(e, i), t, "stop"), this._notify(o(i, e), t, "start");
    }
  };
function f1(n) {
  let t = {},
    e = [],
    i = Object.keys(Sn.plugins.items);
  for (let r = 0; r < i.length; r++) e.push(Sn.getPlugin(i[r]));
  let o = n.plugins || [];
  for (let r = 0; r < o.length; r++) {
    let a = o[r];
    e.indexOf(a) === -1 && (e.push(a), (t[a.id] = !0));
  }
  return { plugins: e, localIds: t };
}
function g1(n, t) {
  return !t && n === !1 ? null : n === !0 ? {} : n;
}
function _1(n, { plugins: t, localIds: e }, i, o) {
  let r = [],
    a = n.getContext();
  for (let d of t) {
    let m = d.id,
      _ = g1(i[m], o);
    _ !== null &&
      r.push({
        plugin: d,
        options: b1(n.config, { plugin: d, local: e[m] }, _, a),
      });
  }
  return r;
}
function b1(n, { plugin: t, local: e }, i, o) {
  let r = n.pluginScopeKeys(t),
    a = n.getOptionScopes(i, r);
  return (
    e && t.defaults && a.push(t.defaults),
    n.createResolver(a, o, [""], { scriptable: !1, indexable: !1, allKeys: !0 })
  );
}
function Ld(n, t) {
  let e = Rt.datasets[n] || {};
  return (
    ((t.datasets || {})[n] || {}).indexAxis || t.indexAxis || e.indexAxis || "x"
  );
}
function v1(n, t) {
  let e = n;
  return (
    n === "_index_" ? (e = t) : n === "_value_" && (e = t === "x" ? "y" : "x"),
    e
  );
}
function y1(n, t) {
  return n === t ? "_index_" : "_value_";
}
function ef(n) {
  if (n === "x" || n === "y" || n === "r") return n;
}
function x1(n) {
  if (n === "top" || n === "bottom") return "x";
  if (n === "left" || n === "right") return "y";
}
function Bd(n, ...t) {
  if (ef(n)) return n;
  for (let e of t) {
    let i =
      e.axis || x1(e.position) || (n.length > 1 && ef(n[0].toLowerCase()));
    if (i) return i;
  }
  throw new Error(
    `Cannot determine type of '${n}' axis. Please provide 'axis' or 'position' option.`
  );
}
function tf(n, t, e) {
  if (e[t + "AxisID"] === n) return { axis: t };
}
function C1(n, t) {
  if (t.data && t.data.datasets) {
    let e = t.data.datasets.filter((i) => i.xAxisID === n || i.yAxisID === n);
    if (e.length) return tf(n, "x", e[0]) || tf(n, "y", e[0]);
  }
  return {};
}
function w1(n, t) {
  let e = lo[n.type] || { scales: {} },
    i = t.scales || {},
    o = Ld(n.type, t),
    r = Object.create(null);
  return (
    Object.keys(i).forEach((a) => {
      let d = i[a];
      if (!nt(d))
        return console.error(`Invalid scale configuration for scale: ${a}`);
      if (d._proxy)
        return console.warn(
          `Ignoring resolver passed as options for scale: ${a}`
        );
      let m = Bd(a, d, C1(a, n), Rt.scales[d.type]),
        _ = y1(m, o),
        v = e.scales || {};
      r[a] = gr(Object.create(null), [{ axis: m }, d, v[m], v[_]]);
    }),
    n.data.datasets.forEach((a) => {
      let d = a.type || n.type,
        m = a.indexAxis || Ld(d, t),
        v = (lo[d] || {}).scales || {};
      Object.keys(v).forEach((S) => {
        let T = v1(S, m),
          M = a[T + "AxisID"] || T;
        (r[M] = r[M] || Object.create(null)),
          gr(r[M], [{ axis: T }, i[M], v[S]]);
      });
    }),
    Object.keys(r).forEach((a) => {
      let d = r[a];
      gr(d, [Rt.scales[d.type], Rt.scale]);
    }),
    r
  );
}
function kf(n) {
  let t = n.options || (n.options = {});
  (t.plugins = Pt(t.plugins, {})), (t.scales = w1(n, t));
}
function Of(n) {
  return (
    (n = n || {}),
    (n.datasets = n.datasets || []),
    (n.labels = n.labels || []),
    n
  );
}
function D1(n) {
  return (n = n || {}), (n.data = Of(n.data)), kf(n), n;
}
var nf = new Map(),
  If = new Set();
function el(n, t) {
  let e = nf.get(n);
  return e || ((e = t()), nf.set(n, e), If.add(e)), e;
}
var Ca = (n, t, e) => {
    let i = da(t, e);
    i !== void 0 && n.add(i);
  },
  Hd = class {
    constructor(t) {
      (this._config = D1(t)),
        (this._scopeCache = new Map()),
        (this._resolverCache = new Map());
    }
    get platform() {
      return this._config.platform;
    }
    get type() {
      return this._config.type;
    }
    set type(t) {
      this._config.type = t;
    }
    get data() {
      return this._config.data;
    }
    set data(t) {
      this._config.data = Of(t);
    }
    get options() {
      return this._config.options;
    }
    set options(t) {
      this._config.options = t;
    }
    get plugins() {
      return this._config.plugins;
    }
    update() {
      let t = this._config;
      this.clearCache(), kf(t);
    }
    clearCache() {
      this._scopeCache.clear(), this._resolverCache.clear();
    }
    datasetScopeKeys(t) {
      return el(t, () => [[`datasets.${t}`, ""]]);
    }
    datasetAnimationScopeKeys(t, e) {
      return el(`${t}.transition.${e}`, () => [
        [`datasets.${t}.transitions.${e}`, `transitions.${e}`],
        [`datasets.${t}`, ""],
      ]);
    }
    datasetElementScopeKeys(t, e) {
      return el(`${t}-${e}`, () => [
        [`datasets.${t}.elements.${e}`, `datasets.${t}`, `elements.${e}`, ""],
      ]);
    }
    pluginScopeKeys(t) {
      let e = t.id,
        i = this.type;
      return el(`${i}-plugin-${e}`, () => [
        [`plugins.${e}`, ...(t.additionalOptionScopes || [])],
      ]);
    }
    _cachedScopes(t, e) {
      let i = this._scopeCache,
        o = i.get(t);
      return (!o || e) && ((o = new Map()), i.set(t, o)), o;
    }
    getOptionScopes(t, e, i) {
      let { options: o, type: r } = this,
        a = this._cachedScopes(t, i),
        d = a.get(e);
      if (d) return d;
      let m = new Set();
      e.forEach((v) => {
        t && (m.add(t), v.forEach((S) => Ca(m, t, S))),
          v.forEach((S) => Ca(m, o, S)),
          v.forEach((S) => Ca(m, lo[r] || {}, S)),
          v.forEach((S) => Ca(m, Rt, S)),
          v.forEach((S) => Ca(m, Gs, S));
      });
      let _ = Array.from(m);
      return (
        _.length === 0 && _.push(Object.create(null)),
        If.has(e) && a.set(e, _),
        _
      );
    }
    chartOptionScopes() {
      let { options: t, type: e } = this;
      return [t, lo[e] || {}, Rt.datasets[e] || {}, { type: e }, Rt, Gs];
    }
    resolveNamedOptions(t, e, i, o = [""]) {
      let r = { $shared: !0 },
        { resolver: a, subPrefixes: d } = of(this._resolverCache, t, o),
        m = a;
      if (M1(a, e)) {
        (r.$shared = !1), (i = Un(i) ? i() : i);
        let _ = this.createResolver(t, i, d);
        m = Po(a, i, _);
      }
      for (let _ of e) r[_] = m[_];
      return r;
    }
    createResolver(t, e, i = [""], o) {
      let { resolver: r } = of(this._resolverCache, t, i);
      return nt(e) ? Po(r, e, void 0, o) : r;
    }
  };
function of(n, t, e) {
  let i = n.get(t);
  i || ((i = new Map()), n.set(t, i));
  let o = e.join(),
    r = i.get(o);
  return (
    r ||
      ((r = {
        resolver: Ys(t, e),
        subPrefixes: e.filter((d) => !d.toLowerCase().includes("hover")),
      }),
      i.set(o, r)),
    r
  );
}
var S1 = (n) => nt(n) && Object.getOwnPropertyNames(n).some((t) => Un(n[t]));
function M1(n, t) {
  let { isScriptable: e, isIndexable: i } = vd(n);
  for (let o of t) {
    let r = e(o),
      a = i(o),
      d = (a || r) && n[o];
    if ((r && (Un(d) || S1(d))) || (a && At(d))) return !0;
  }
  return !1;
}
var T1 = "4.5.0",
  E1 = ["top", "bottom", "left", "right", "chartArea"];
function rf(n, t) {
  return n === "top" || n === "bottom" || (E1.indexOf(n) === -1 && t === "x");
}
function af(n, t) {
  return function (e, i) {
    return e[n] === i[n] ? e[t] - i[t] : e[n] - i[n];
  };
}
function sf(n) {
  let t = n.chart,
    e = t.options.animation;
  t.notifyPlugins("afterRender"), Mt(e && e.onComplete, [n], t);
}
function k1(n) {
  let t = n.chart,
    e = t.options.animation;
  Mt(e && e.onProgress, [n], t);
}
function Pf(n) {
  return (
    qs() && typeof n == "string"
      ? (n = document.getElementById(n))
      : n && n.length && (n = n[0]),
    n && n.canvas && (n = n.canvas),
    n
  );
}
var nl = {},
  lf = (n) => {
    let t = Pf(n);
    return Object.values(nl)
      .filter((e) => e.canvas === t)
      .pop();
  };
function O1(n, t, e) {
  let i = Object.keys(n);
  for (let o of i) {
    let r = +o;
    if (r >= t) {
      let a = n[o];
      delete n[o], (e > 0 || r > t) && (n[r + e] = a);
    }
  }
}
function I1(n, t, e, i) {
  return !e || n.type === "mouseout" ? null : i ? t : n;
}
var zd = (() => {
  class n {
    static defaults = Rt;
    static instances = nl;
    static overrides = lo;
    static registry = Sn;
    static version = T1;
    static getChart = lf;
    static register(...e) {
      Sn.add(...e), cf();
    }
    static unregister(...e) {
      Sn.remove(...e), cf();
    }
    constructor(e, i) {
      let o = (this.config = new Hd(i)),
        r = Pf(e),
        a = lf(r);
      if (a)
        throw new Error(
          "Canvas is already in use. Chart with ID '" +
            a.id +
            "' must be destroyed before the canvas with ID '" +
            a.canvas.id +
            "' can be reused."
        );
      let d = o.createResolver(o.chartOptionScopes(), this.getContext());
      (this.platform = new (o.platform || Zv(r))()),
        this.platform.updateConfig(o);
      let m = this.platform.acquireContext(r, d.aspectRatio),
        _ = m && m.canvas,
        v = _ && _.height,
        S = _ && _.width;
      if (
        ((this.id = cm()),
        (this.ctx = m),
        (this.canvas = _),
        (this.width = S),
        (this.height = v),
        (this._options = d),
        (this._aspectRatio = this.aspectRatio),
        (this._layers = []),
        (this._metasets = []),
        (this._stacks = void 0),
        (this.boxes = []),
        (this.currentDevicePixelRatio = void 0),
        (this.chartArea = void 0),
        (this._active = []),
        (this._lastEvent = void 0),
        (this._listeners = {}),
        (this._responsiveListeners = void 0),
        (this._sortedMetasets = []),
        (this.scales = {}),
        (this._plugins = new Vd()),
        (this.$proxies = {}),
        (this._hiddenIndices = {}),
        (this.attached = !1),
        (this._animationsDisabled = void 0),
        (this.$context = void 0),
        (this._doResize = wm((T) => this.update(T), d.resizeDelay || 0)),
        (this._dataChanges = []),
        (nl[this.id] = this),
        !m || !_)
      ) {
        console.error(
          "Failed to create chart: can't acquire context from the given item"
        );
        return;
      }
      Gn.listen(this, "complete", sf),
        Gn.listen(this, "progress", k1),
        this._initialize(),
        this.attached && this.update();
    }
    get aspectRatio() {
      let {
        options: { aspectRatio: e, maintainAspectRatio: i },
        width: o,
        height: r,
        _aspectRatio: a,
      } = this;
      return mt(e) ? (i && a ? a : r ? o / r : null) : e;
    }
    get data() {
      return this.config.data;
    }
    set data(e) {
      this.config.data = e;
    }
    get options() {
      return this._options;
    }
    set options(e) {
      this.config.options = e;
    }
    get registry() {
      return Sn;
    }
    _initialize() {
      return (
        this.notifyPlugins("beforeInit"),
        this.options.responsive
          ? this.resize()
          : Cd(this, this.options.devicePixelRatio),
        this.bindEvents(),
        this.notifyPlugins("afterInit"),
        this
      );
    }
    clear() {
      return fd(this.canvas, this.ctx), this;
    }
    stop() {
      return Gn.stop(this), this;
    }
    resize(e, i) {
      Gn.running(this)
        ? (this._resizeBeforeDraw = { width: e, height: i })
        : this._resize(e, i);
    }
    _resize(e, i) {
      let o = this.options,
        r = this.canvas,
        a = o.maintainAspectRatio && this.aspectRatio,
        d = this.platform.getMaximumSize(r, e, i, a),
        m = o.devicePixelRatio || this.platform.getDevicePixelRatio(),
        _ = this.width ? "resize" : "attach";
      (this.width = d.width),
        (this.height = d.height),
        (this._aspectRatio = this.aspectRatio),
        Cd(this, m, !0) &&
          (this.notifyPlugins("resize", { size: d }),
          Mt(o.onResize, [this, d], this),
          this.attached && this._doResize(_) && this.render());
    }
    ensureScalesHaveIDs() {
      let i = this.options.scales || {};
      Qt(i, (o, r) => {
        o.id = r;
      });
    }
    buildOrUpdateScales() {
      let e = this.options,
        i = e.scales,
        o = this.scales,
        r = Object.keys(o).reduce((d, m) => ((d[m] = !1), d), {}),
        a = [];
      i &&
        (a = a.concat(
          Object.keys(i).map((d) => {
            let m = i[d],
              _ = Bd(d, m),
              v = _ === "r",
              S = _ === "x";
            return {
              options: m,
              dposition: v ? "chartArea" : S ? "bottom" : "left",
              dtype: v ? "radialLinear" : S ? "category" : "linear",
            };
          })
        )),
        Qt(a, (d) => {
          let m = d.options,
            _ = m.id,
            v = Bd(_, m),
            S = Pt(m.type, d.dtype);
          (m.position === void 0 || rf(m.position, v) !== rf(d.dposition)) &&
            (m.position = d.dposition),
            (r[_] = !0);
          let T = null;
          if (_ in o && o[_].type === S) T = o[_];
          else {
            let M = Sn.getScale(S);
            (T = new M({ id: _, type: S, ctx: this.ctx, chart: this })),
              (o[T.id] = T);
          }
          T.init(m, e);
        }),
        Qt(r, (d, m) => {
          d || delete o[m];
        }),
        Qt(o, (d) => {
          Zs.configure(this, d, d.options), Zs.addBox(this, d);
        });
    }
    _updateMetasets() {
      let e = this._metasets,
        i = this.data.datasets.length,
        o = e.length;
      if ((e.sort((r, a) => r.index - a.index), o > i)) {
        for (let r = i; r < o; ++r) this._destroyDatasetMeta(r);
        e.splice(i, o - i);
      }
      this._sortedMetasets = e.slice(0).sort(af("order", "index"));
    }
    _removeUnreferencedMetasets() {
      let {
        _metasets: e,
        data: { datasets: i },
      } = this;
      e.length > i.length && delete this._stacks,
        e.forEach((o, r) => {
          i.filter((a) => a === o._dataset).length === 0 &&
            this._destroyDatasetMeta(r);
        });
    }
    buildOrUpdateControllers() {
      let e = [],
        i = this.data.datasets,
        o,
        r;
      for (
        this._removeUnreferencedMetasets(), o = 0, r = i.length;
        o < r;
        o++
      ) {
        let a = i[o],
          d = this.getDatasetMeta(o),
          m = a.type || this.config.type;
        if (
          (d.type &&
            d.type !== m &&
            (this._destroyDatasetMeta(o), (d = this.getDatasetMeta(o))),
          (d.type = m),
          (d.indexAxis = a.indexAxis || Ld(m, this.options)),
          (d.order = a.order || 0),
          (d.index = o),
          (d.label = "" + a.label),
          (d.visible = this.isDatasetVisible(o)),
          d.controller)
        )
          d.controller.updateIndex(o), d.controller.linkScales();
        else {
          let _ = Sn.getController(m),
            { datasetElementType: v, dataElementType: S } = Rt.datasets[m];
          Object.assign(_, {
            dataElementType: Sn.getElement(S),
            datasetElementType: v && Sn.getElement(v),
          }),
            (d.controller = new _(this, o)),
            e.push(d.controller);
        }
      }
      return this._updateMetasets(), e;
    }
    _resetElements() {
      Qt(
        this.data.datasets,
        (e, i) => {
          this.getDatasetMeta(i).controller.reset();
        },
        this
      );
    }
    reset() {
      this._resetElements(), this.notifyPlugins("reset");
    }
    update(e) {
      let i = this.config;
      i.update();
      let o = (this._options = i.createResolver(
          i.chartOptionScopes(),
          this.getContext()
        )),
        r = (this._animationsDisabled = !o.animation);
      if (
        (this._updateScales(),
        this._checkEventBindings(),
        this._updateHiddenIndices(),
        this._plugins.invalidate(),
        this.notifyPlugins("beforeUpdate", { mode: e, cancelable: !0 }) === !1)
      )
        return;
      let a = this.buildOrUpdateControllers();
      this.notifyPlugins("beforeElementsUpdate");
      let d = 0;
      for (let v = 0, S = this.data.datasets.length; v < S; v++) {
        let { controller: T } = this.getDatasetMeta(v),
          M = !r && a.indexOf(T) === -1;
        T.buildOrUpdateElements(M), (d = Math.max(+T.getMaxOverflow(), d));
      }
      (d = this._minPadding = o.layout.autoPadding ? d : 0),
        this._updateLayout(d),
        r ||
          Qt(a, (v) => {
            v.reset();
          }),
        this._updateDatasets(e),
        this.notifyPlugins("afterUpdate", { mode: e }),
        this._layers.sort(af("z", "_idx"));
      let { _active: m, _lastEvent: _ } = this;
      _
        ? this._eventHandler(_, !0)
        : m.length && this._updateHoverStyles(m, m, !0),
        this.render();
    }
    _updateScales() {
      Qt(this.scales, (e) => {
        Zs.removeBox(this, e);
      }),
        this.ensureScalesHaveIDs(),
        this.buildOrUpdateScales();
    }
    _checkEventBindings() {
      let e = this.options,
        i = new Set(Object.keys(this._listeners)),
        o = new Set(e.events);
      (!ad(i, o) || !!this._responsiveListeners !== e.responsive) &&
        (this.unbindEvents(), this.bindEvents());
    }
    _updateHiddenIndices() {
      let { _hiddenIndices: e } = this,
        i = this._getUniformDataChanges() || [];
      for (let { method: o, start: r, count: a } of i) {
        let d = o === "_removeElements" ? -a : a;
        O1(e, r, d);
      }
    }
    _getUniformDataChanges() {
      let e = this._dataChanges;
      if (!e || !e.length) return;
      this._dataChanges = [];
      let i = this.data.datasets.length,
        o = (a) =>
          new Set(
            e
              .filter((d) => d[0] === a)
              .map((d, m) => m + "," + d.splice(1).join(","))
          ),
        r = o(0);
      for (let a = 1; a < i; a++) if (!ad(r, o(a))) return;
      return Array.from(r)
        .map((a) => a.split(","))
        .map((a) => ({ method: a[1], start: +a[2], count: +a[3] }));
    }
    _updateLayout(e) {
      if (this.notifyPlugins("beforeLayout", { cancelable: !0 }) === !1) return;
      Zs.update(this, this.width, this.height, e);
      let i = this.chartArea,
        o = i.width <= 0 || i.height <= 0;
      (this._layers = []),
        Qt(
          this.boxes,
          (r) => {
            (o && r.position === "chartArea") ||
              (r.configure && r.configure(), this._layers.push(...r._layers()));
          },
          this
        ),
        this._layers.forEach((r, a) => {
          r._idx = a;
        }),
        this.notifyPlugins("afterLayout");
    }
    _updateDatasets(e) {
      if (
        this.notifyPlugins("beforeDatasetsUpdate", {
          mode: e,
          cancelable: !0,
        }) !== !1
      ) {
        for (let i = 0, o = this.data.datasets.length; i < o; ++i)
          this.getDatasetMeta(i).controller.configure();
        for (let i = 0, o = this.data.datasets.length; i < o; ++i)
          this._updateDataset(i, Un(e) ? e({ datasetIndex: i }) : e);
        this.notifyPlugins("afterDatasetsUpdate", { mode: e });
      }
    }
    _updateDataset(e, i) {
      let o = this.getDatasetMeta(e),
        r = { meta: o, index: e, mode: i, cancelable: !0 };
      this.notifyPlugins("beforeDatasetUpdate", r) !== !1 &&
        (o.controller._update(i),
        (r.cancelable = !1),
        this.notifyPlugins("afterDatasetUpdate", r));
    }
    render() {
      this.notifyPlugins("beforeRender", { cancelable: !0 }) !== !1 &&
        (Gn.has(this)
          ? this.attached && !Gn.running(this) && Gn.start(this)
          : (this.draw(), sf({ chart: this })));
    }
    draw() {
      let e;
      if (this._resizeBeforeDraw) {
        let { width: o, height: r } = this._resizeBeforeDraw;
        (this._resizeBeforeDraw = null), this._resize(o, r);
      }
      if (
        (this.clear(),
        this.width <= 0 ||
          this.height <= 0 ||
          this.notifyPlugins("beforeDraw", { cancelable: !0 }) === !1)
      )
        return;
      let i = this._layers;
      for (e = 0; e < i.length && i[e].z <= 0; ++e) i[e].draw(this.chartArea);
      for (this._drawDatasets(); e < i.length; ++e) i[e].draw(this.chartArea);
      this.notifyPlugins("afterDraw");
    }
    _getSortedDatasetMetas(e) {
      let i = this._sortedMetasets,
        o = [],
        r,
        a;
      for (r = 0, a = i.length; r < a; ++r) {
        let d = i[r];
        (!e || d.visible) && o.push(d);
      }
      return o;
    }
    getSortedVisibleDatasetMetas() {
      return this._getSortedDatasetMetas(!0);
    }
    _drawDatasets() {
      if (this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 }) === !1)
        return;
      let e = this.getSortedVisibleDatasetMetas();
      for (let i = e.length - 1; i >= 0; --i) this._drawDataset(e[i]);
      this.notifyPlugins("afterDatasetsDraw");
    }
    _drawDataset(e) {
      let i = this.ctx,
        o = { meta: e, index: e.index, cancelable: !0 },
        r = Vm(this, e);
      this.notifyPlugins("beforeDatasetDraw", o) !== !1 &&
        (r && gd(i, r),
        e.controller.draw(),
        r && _d(i),
        (o.cancelable = !1),
        this.notifyPlugins("afterDatasetDraw", o));
    }
    isPointInArea(e) {
      return Ao(e, this.chartArea, this._minPadding);
    }
    getElementsAtEventForMode(e, i, o, r) {
      let a = Av.modes[i];
      return typeof a == "function" ? a(this, e, o, r) : [];
    }
    getDatasetMeta(e) {
      let i = this.data.datasets[e],
        o = this._metasets,
        r = o.filter((a) => a && a._dataset === i).pop();
      return (
        r ||
          ((r = {
            type: null,
            data: [],
            dataset: null,
            controller: null,
            hidden: null,
            xAxisID: null,
            yAxisID: null,
            order: (i && i.order) || 0,
            index: e,
            _dataset: i,
            _parsed: [],
            _sorted: !1,
          }),
          o.push(r)),
        r
      );
    }
    getContext() {
      return (
        this.$context ||
        (this.$context = Fo(null, { chart: this, type: "chart" }))
      );
    }
    getVisibleDatasetCount() {
      return this.getSortedVisibleDatasetMetas().length;
    }
    isDatasetVisible(e) {
      let i = this.data.datasets[e];
      if (!i) return !1;
      let o = this.getDatasetMeta(e);
      return typeof o.hidden == "boolean" ? !o.hidden : !i.hidden;
    }
    setDatasetVisibility(e, i) {
      let o = this.getDatasetMeta(e);
      o.hidden = !i;
    }
    toggleDataVisibility(e) {
      this._hiddenIndices[e] = !this._hiddenIndices[e];
    }
    getDataVisibility(e) {
      return !this._hiddenIndices[e];
    }
    _updateVisibility(e, i, o) {
      let r = o ? "show" : "hide",
        a = this.getDatasetMeta(e),
        d = a.controller._resolveAnimations(void 0, r);
      ua(i)
        ? ((a.data[i].hidden = !o), this.update())
        : (this.setDatasetVisibility(e, o),
          d.update(a, { visible: o }),
          this.update((m) => (m.datasetIndex === e ? r : void 0)));
    }
    hide(e, i) {
      this._updateVisibility(e, i, !1);
    }
    show(e, i) {
      this._updateVisibility(e, i, !0);
    }
    _destroyDatasetMeta(e) {
      let i = this._metasets[e];
      i && i.controller && i.controller._destroy(), delete this._metasets[e];
    }
    _stop() {
      let e, i;
      for (
        this.stop(), Gn.remove(this), e = 0, i = this.data.datasets.length;
        e < i;
        ++e
      )
        this._destroyDatasetMeta(e);
    }
    destroy() {
      this.notifyPlugins("beforeDestroy");
      let { canvas: e, ctx: i } = this;
      this._stop(),
        this.config.clearCache(),
        e &&
          (this.unbindEvents(),
          fd(e, i),
          this.platform.releaseContext(i),
          (this.canvas = null),
          (this.ctx = null)),
        delete nl[this.id],
        this.notifyPlugins("afterDestroy");
    }
    toBase64Image(...e) {
      return this.canvas.toDataURL(...e);
    }
    bindEvents() {
      this.bindUserEvents(),
        this.options.responsive
          ? this.bindResponsiveEvents()
          : (this.attached = !0);
    }
    bindUserEvents() {
      let e = this._listeners,
        i = this.platform,
        o = (a, d) => {
          i.addEventListener(this, a, d), (e[a] = d);
        },
        r = (a, d, m) => {
          (a.offsetX = d), (a.offsetY = m), this._eventHandler(a);
        };
      Qt(this.options.events, (a) => o(a, r));
    }
    bindResponsiveEvents() {
      this._responsiveListeners || (this._responsiveListeners = {});
      let e = this._responsiveListeners,
        i = this.platform,
        o = (_, v) => {
          i.addEventListener(this, _, v), (e[_] = v);
        },
        r = (_, v) => {
          e[_] && (i.removeEventListener(this, _, v), delete e[_]);
        },
        a = (_, v) => {
          this.canvas && this.resize(_, v);
        },
        d,
        m = () => {
          r("attach", m),
            (this.attached = !0),
            this.resize(),
            o("resize", a),
            o("detach", d);
        };
      (d = () => {
        (this.attached = !1),
          r("resize", a),
          this._stop(),
          this._resize(0, 0),
          o("attach", m);
      }),
        i.isAttached(this.canvas) ? m() : d();
    }
    unbindEvents() {
      Qt(this._listeners, (e, i) => {
        this.platform.removeEventListener(this, i, e);
      }),
        (this._listeners = {}),
        Qt(this._responsiveListeners, (e, i) => {
          this.platform.removeEventListener(this, i, e);
        }),
        (this._responsiveListeners = void 0);
    }
    updateHoverStyle(e, i, o) {
      let r = o ? "set" : "remove",
        a,
        d,
        m,
        _;
      for (
        i === "dataset" &&
          ((a = this.getDatasetMeta(e[0].datasetIndex)),
          a.controller["_" + r + "DatasetHoverStyle"]()),
          m = 0,
          _ = e.length;
        m < _;
        ++m
      ) {
        d = e[m];
        let v = d && this.getDatasetMeta(d.datasetIndex).controller;
        v && v[r + "HoverStyle"](d.element, d.datasetIndex, d.index);
      }
    }
    getActiveElements() {
      return this._active || [];
    }
    setActiveElements(e) {
      let i = this._active || [],
        o = e.map(({ datasetIndex: a, index: d }) => {
          let m = this.getDatasetMeta(a);
          if (!m) throw new Error("No dataset found at index " + a);
          return { datasetIndex: a, element: m.data[d], index: d };
        });
      !rd(o, i) &&
        ((this._active = o),
        (this._lastEvent = null),
        this._updateHoverStyles(o, i));
    }
    notifyPlugins(e, i, o) {
      return this._plugins.notify(this, e, i, o);
    }
    isPluginEnabled(e) {
      return this._plugins._cache.filter((i) => i.plugin.id === e).length === 1;
    }
    _updateHoverStyles(e, i, o) {
      let r = this.options.hover,
        a = (_, v) =>
          _.filter(
            (S) =>
              !v.some(
                (T) => S.datasetIndex === T.datasetIndex && S.index === T.index
              )
          ),
        d = a(i, e),
        m = o ? e : a(e, i);
      d.length && this.updateHoverStyle(d, r.mode, !1),
        m.length && r.mode && this.updateHoverStyle(m, r.mode, !0);
    }
    _eventHandler(e, i) {
      let o = {
          event: e,
          replay: i,
          cancelable: !0,
          inChartArea: this.isPointInArea(e),
        },
        r = (d) =>
          (d.options.events || this.options.events).includes(e.native.type);
      if (this.notifyPlugins("beforeEvent", o, r) === !1) return;
      let a = this._handleEvent(e, i, o.inChartArea);
      return (
        (o.cancelable = !1),
        this.notifyPlugins("afterEvent", o, r),
        (a || o.changed) && this.render(),
        this
      );
    }
    _handleEvent(e, i, o) {
      let { _active: r = [], options: a } = this,
        d = i,
        m = this._getActiveElements(e, r, o, d),
        _ = hm(e),
        v = I1(e, this._lastEvent, o, _);
      o &&
        ((this._lastEvent = null),
        Mt(a.onHover, [e, m, this], this),
        _ && Mt(a.onClick, [e, m, this], this));
      let S = !rd(m, r);
      return (
        (S || i) && ((this._active = m), this._updateHoverStyles(m, r, i)),
        (this._lastEvent = v),
        S
      );
    }
    _getActiveElements(e, i, o, r) {
      if (e.type === "mouseout") return [];
      if (!o) return i;
      let a = this.options.hover;
      return this.getElementsAtEventForMode(e, a.mode, a, r);
    }
  }
  return n;
})();
function cf() {
  return Qt(zd.instances, (n) => n._plugins.invalidate());
}
function P1(n, t) {
  let e = [],
    {
      bounds: o,
      step: r,
      min: a,
      max: d,
      precision: m,
      count: _,
      maxTicks: v,
      maxDigits: S,
      includeBounds: T,
    } = n,
    M = r || 1,
    A = v - 1,
    { min: j, max: z } = t,
    L = !mt(a),
    ue = !mt(d),
    Ve = !mt(_),
    Se = (z - j) / (S + 1),
    Re = sd((z - j) / A / M) * M,
    b,
    Be,
    be,
    He;
  if (Re < 1e-14 && !L && !ue) return [{ value: j }, { value: z }];
  (He = Math.ceil(z / Re) - Math.floor(j / Re)),
    He > A && (Re = sd((He * Re) / A / M) * M),
    mt(m) || ((b = Math.pow(10, m)), (Re = Math.ceil(Re * b) / b)),
    o === "ticks"
      ? ((Be = Math.floor(j / Re) * Re), (be = Math.ceil(z / Re) * Re))
      : ((Be = j), (be = z)),
    L && ue && r && mm((d - a) / r, Re / 1e3)
      ? ((He = Math.round(Math.min((d - a) / Re, v))),
        (Re = (d - a) / He),
        (Be = a),
        (be = d))
      : Ve
      ? ((Be = L ? a : Be),
        (be = ue ? d : be),
        (He = _ - 1),
        (Re = (be - Be) / He))
      : ((He = (be - Be) / Re),
        pa(He, Math.round(He), Re / 1e3)
          ? (He = Math.round(He))
          : (He = Math.ceil(He)));
  let st = Math.max(cd(Re), cd(Be));
  (b = Math.pow(10, mt(m) ? st : m)),
    (Be = Math.round(Be * b) / b),
    (be = Math.round(be * b) / b);
  let Ft = 0;
  for (
    L &&
    (T && Be !== a
      ? (e.push({ value: a }),
        Be < a && Ft++,
        pa(Math.round((Be + Ft * Re) * b) / b, a, df(a, Se, n)) && Ft++)
      : Be < a && Ft++);
    Ft < He;
    ++Ft
  ) {
    let Ie = Math.round((Be + Ft * Re) * b) / b;
    if (ue && Ie > d) break;
    e.push({ value: Ie });
  }
  return (
    ue && T && be !== d
      ? e.length && pa(e[e.length - 1].value, d, df(d, Se, n))
        ? (e[e.length - 1].value = d)
        : e.push({ value: d })
      : (!ue || be === d) && e.push({ value: be }),
    e
  );
}
function df(n, t, { horizontal: e, minRotation: i }) {
  let o = $n(i),
    r = (e ? Math.sin(o) : Math.cos(o)) || 0.001,
    a = 0.75 * t * ("" + n).length;
  return Math.min(t / r, a);
}
var vr = class extends br {
    constructor(t) {
      super(t),
        (this.start = void 0),
        (this.end = void 0),
        (this._startValue = void 0),
        (this._endValue = void 0),
        (this._valueRange = 0);
    }
    parse(t, e) {
      return mt(t) ||
        ((typeof t == "number" || t instanceof Number) && !isFinite(+t))
        ? null
        : +t;
    }
    handleTickRangeOptions() {
      let { beginAtZero: t } = this.options,
        { minDefined: e, maxDefined: i } = this.getUserBounds(),
        { min: o, max: r } = this,
        a = (m) => (o = e ? o : m),
        d = (m) => (r = i ? r : m);
      if (t) {
        let m = ha(o),
          _ = ha(r);
        m < 0 && _ < 0 ? d(0) : m > 0 && _ > 0 && a(0);
      }
      if (o === r) {
        let m = r === 0 ? 1 : Math.abs(r * 0.05);
        d(r + m), t || a(o - m);
      }
      (this.min = o), (this.max = r);
    }
    getTickLimit() {
      let t = this.options.ticks,
        { maxTicksLimit: e, stepSize: i } = t,
        o;
      return (
        i
          ? ((o = Math.ceil(this.max / i) - Math.floor(this.min / i) + 1),
            o > 1e3 &&
              (console.warn(
                `scales.${this.id}.ticks.stepSize: ${i} would result generating up to ${o} ticks. Limiting to 1000.`
              ),
              (o = 1e3)))
          : ((o = this.computeTickLimit()), (e = e || 11)),
        e && (o = Math.min(e, o)),
        o
      );
    }
    computeTickLimit() {
      return Number.POSITIVE_INFINITY;
    }
    buildTicks() {
      let t = this.options,
        e = t.ticks,
        i = this.getTickLimit();
      i = Math.max(2, i);
      let o = {
          maxTicks: i,
          bounds: t.bounds,
          min: t.min,
          max: t.max,
          precision: e.precision,
          step: e.stepSize,
          count: e.count,
          maxDigits: this._maxDigits(),
          horizontal: this.isHorizontal(),
          minRotation: e.minRotation || 0,
          includeBounds: e.includeBounds !== !1,
        },
        r = this._range || this,
        a = P1(o, r);
      return (
        t.bounds === "ticks" && ld(a, this, "value"),
        t.reverse
          ? (a.reverse(), (this.start = this.max), (this.end = this.min))
          : ((this.start = this.min), (this.end = this.max)),
        a
      );
    }
    configure() {
      let t = this.ticks,
        e = this.min,
        i = this.max;
      if ((super.configure(), this.options.offset && t.length)) {
        let o = (i - e) / Math.max(t.length - 1, 1) / 2;
        (e -= o), (i += o);
      }
      (this._startValue = e), (this._endValue = i), (this._valueRange = i - e);
    }
    getLabelForValue(t) {
      return $s(t, this.chart.options.locale, this.options.ticks.format);
    }
  },
  uf = class extends vr {
    static id = "linear";
    static defaults = { ticks: { callback: fa.formatters.numeric } };
    determineDataLimits() {
      let { min: t, max: e } = this.getMinMax(!0);
      (this.min = Ut(t) ? t : 0),
        (this.max = Ut(e) ? e : 1),
        this.handleTickRangeOptions();
    }
    computeTickLimit() {
      let t = this.isHorizontal(),
        e = t ? this.width : this.height,
        i = $n(this.options.ticks.minRotation),
        o = (t ? Math.sin(i) : Math.cos(i)) || 0.001,
        r = this._resolveTickFontOptions(0);
      return Math.ceil(e / Math.min(40, r.lineHeight / o));
    }
    getPixelForValue(t) {
      return t === null
        ? NaN
        : this.getPixelForDecimal((t - this._startValue) / this._valueRange);
    }
    getValueForPixel(t) {
      return this._startValue + this.getDecimalForPixel(t) * this._valueRange;
    }
  },
  Sa = (n) => Math.floor(Wn(n)),
  Vo = (n, t) => Math.pow(10, Sa(n) + t);
function hf(n) {
  return n / Math.pow(10, Sa(n)) === 1;
}
function pf(n, t, e) {
  let i = Math.pow(10, e),
    o = Math.floor(n / i);
  return Math.ceil(t / i) - o;
}
function A1(n, t) {
  let e = t - n,
    i = Sa(e);
  for (; pf(n, t, i) > 10; ) i++;
  for (; pf(n, t, i) < 10; ) i--;
  return Math.min(i, Sa(n));
}
function R1(n, { min: t, max: e }) {
  t = Di(n.min, t);
  let i = [],
    o = Sa(t),
    r = A1(t, e),
    a = r < 0 ? Math.pow(10, Math.abs(r)) : 1,
    d = Math.pow(10, r),
    m = o > r ? Math.pow(10, o) : 0,
    _ = Math.round((t - m) * a) / a,
    v = Math.floor((t - m) / d / 10) * d * 10,
    S = Math.floor((_ - v) / Math.pow(10, r)),
    T = Di(n.min, Math.round((m + v + S * Math.pow(10, r)) * a) / a);
  for (; T < e; )
    i.push({ value: T, major: hf(T), significand: S }),
      S >= 10 ? (S = S < 15 ? 15 : 20) : S++,
      S >= 20 && (r++, (S = 2), (a = r >= 0 ? 1 : a)),
      (T = Math.round((m + v + S * Math.pow(10, r)) * a) / a);
  let M = Di(n.max, T);
  return i.push({ value: M, major: hf(M), significand: S }), i;
}
var mf = class extends br {
  static id = "logarithmic";
  static defaults = {
    ticks: { callback: fa.formatters.logarithmic, major: { enabled: !0 } },
  };
  constructor(t) {
    super(t),
      (this.start = void 0),
      (this.end = void 0),
      (this._startValue = void 0),
      (this._valueRange = 0);
  }
  parse(t, e) {
    let i = vr.prototype.parse.apply(this, [t, e]);
    if (i === 0) {
      this._zero = !0;
      return;
    }
    return Ut(i) && i > 0 ? i : null;
  }
  determineDataLimits() {
    let { min: t, max: e } = this.getMinMax(!0);
    (this.min = Ut(t) ? Math.max(0, t) : null),
      (this.max = Ut(e) ? Math.max(0, e) : null),
      this.options.beginAtZero && (this._zero = !0),
      this._zero &&
        this.min !== this._suggestedMin &&
        !Ut(this._userMin) &&
        (this.min = t === Vo(this.min, 0) ? Vo(this.min, -1) : Vo(this.min, 0)),
      this.handleTickRangeOptions();
  }
  handleTickRangeOptions() {
    let { minDefined: t, maxDefined: e } = this.getUserBounds(),
      i = this.min,
      o = this.max,
      r = (d) => (i = t ? i : d),
      a = (d) => (o = e ? o : d);
    i === o && (i <= 0 ? (r(1), a(10)) : (r(Vo(i, -1)), a(Vo(o, 1)))),
      i <= 0 && r(Vo(o, -1)),
      o <= 0 && a(Vo(i, 1)),
      (this.min = i),
      (this.max = o);
  }
  buildTicks() {
    let t = this.options,
      e = { min: this._userMin, max: this._userMax },
      i = R1(e, this);
    return (
      t.bounds === "ticks" && ld(i, this, "value"),
      t.reverse
        ? (i.reverse(), (this.start = this.max), (this.end = this.min))
        : ((this.start = this.min), (this.end = this.max)),
      i
    );
  }
  getLabelForValue(t) {
    return t === void 0
      ? "0"
      : $s(t, this.chart.options.locale, this.options.ticks.format);
  }
  configure() {
    let t = this.min;
    super.configure(),
      (this._startValue = Wn(t)),
      (this._valueRange = Wn(this.max) - Wn(t));
  }
  getPixelForValue(t) {
    return (
      (t === void 0 || t === 0) && (t = this.min),
      t === null || isNaN(t)
        ? NaN
        : this.getPixelForDecimal(
            t === this.min ? 0 : (Wn(t) - this._startValue) / this._valueRange
          )
    );
  }
  getValueForPixel(t) {
    let e = this.getDecimalForPixel(t);
    return Math.pow(10, this._startValue + e * this._valueRange);
  }
};
function jd(n) {
  let t = n.ticks;
  if (t.display && n.display) {
    let e = Dn(t.backdropPadding);
    return Pt(t.font && t.font.size, Rt.font.size) + e.height;
  }
  return 0;
}
function F1(n, t, e) {
  return (
    (e = At(e) ? e : [e]), { w: Tm(n, t.string, e), h: e.length * t.lineHeight }
  );
}
function ff(n, t, e, i, o) {
  return n === i || n === o
    ? { start: t - e / 2, end: t + e / 2 }
    : n < i || n > o
    ? { start: t - e, end: t }
    : { start: t, end: t + e };
}
function N1(n) {
  let t = {
      l: n.left + n._padding.left,
      r: n.right - n._padding.right,
      t: n.top + n._padding.top,
      b: n.bottom - n._padding.bottom,
    },
    e = Object.assign({}, t),
    i = [],
    o = [],
    r = n._pointLabels.length,
    a = n.options.pointLabels,
    d = a.centerPointLabels ? ri / r : 0;
  for (let m = 0; m < r; m++) {
    let _ = a.setContext(n.getPointLabelContext(m));
    o[m] = _.padding;
    let v = n.getPointPosition(m, n.drawingArea + o[m], d),
      S = Ro(_.font),
      T = F1(n.ctx, S, n._pointLabels[m]);
    i[m] = T;
    let M = sn(n.getIndexAngle(m) + d),
      A = Math.round(zs(M)),
      j = ff(A, v.x, T.w, 0, 180),
      z = ff(A, v.y, T.h, 90, 270);
    V1(e, t, M, j, z);
  }
  n.setCenterPoint(t.l - e.l, e.r - t.r, t.t - e.t, e.b - t.b),
    (n._pointLabelItems = H1(n, i, o));
}
function V1(n, t, e, i, o) {
  let r = Math.abs(Math.sin(e)),
    a = Math.abs(Math.cos(e)),
    d = 0,
    m = 0;
  i.start < t.l
    ? ((d = (t.l - i.start) / r), (n.l = Math.min(n.l, t.l - d)))
    : i.end > t.r && ((d = (i.end - t.r) / r), (n.r = Math.max(n.r, t.r + d))),
    o.start < t.t
      ? ((m = (t.t - o.start) / a), (n.t = Math.min(n.t, t.t - m)))
      : o.end > t.b &&
        ((m = (o.end - t.b) / a), (n.b = Math.max(n.b, t.b + m)));
}
function L1(n, t, e) {
  let i = n.drawingArea,
    { extra: o, additionalAngle: r, padding: a, size: d } = e,
    m = n.getPointPosition(t, i + o + a, r),
    _ = Math.round(zs(sn(m.angle + wn))),
    v = U1(m.y, d.h, _),
    S = j1(_),
    T = z1(m.x, d.w, S);
  return {
    visible: !0,
    x: m.x,
    y: v,
    textAlign: S,
    left: T,
    top: v,
    right: T + d.w,
    bottom: v + d.h,
  };
}
function B1(n, t) {
  if (!t) return !0;
  let { left: e, top: i, right: o, bottom: r } = n;
  return !(
    Ao({ x: e, y: i }, t) ||
    Ao({ x: e, y: r }, t) ||
    Ao({ x: o, y: i }, t) ||
    Ao({ x: o, y: r }, t)
  );
}
function H1(n, t, e) {
  let i = [],
    o = n._pointLabels.length,
    r = n.options,
    { centerPointLabels: a, display: d } = r.pointLabels,
    m = { extra: jd(r) / 2, additionalAngle: a ? ri / o : 0 },
    _;
  for (let v = 0; v < o; v++) {
    (m.padding = e[v]), (m.size = t[v]);
    let S = L1(n, v, m);
    i.push(S), d === "auto" && ((S.visible = B1(S, _)), S.visible && (_ = S));
  }
  return i;
}
function j1(n) {
  return n === 0 || n === 180 ? "center" : n < 180 ? "left" : "right";
}
function z1(n, t, e) {
  return e === "right" ? (n -= t) : e === "center" && (n -= t / 2), n;
}
function U1(n, t, e) {
  return (
    e === 90 || e === 270 ? (n -= t / 2) : (e > 270 || e < 90) && (n -= t), n
  );
}
function W1(n, t, e) {
  let { left: i, top: o, right: r, bottom: a } = e,
    { backdropColor: d } = t;
  if (!mt(d)) {
    let m = Om(t.borderRadius),
      _ = Dn(t.backdropPadding);
    n.fillStyle = d;
    let v = i - _.left,
      S = o - _.top,
      T = r - i + _.width,
      M = a - o + _.height;
    Object.values(m).some((A) => A !== 0)
      ? (n.beginPath(), Em(n, { x: v, y: S, w: T, h: M, radius: m }), n.fill())
      : n.fillRect(v, S, T, M);
  }
}
function $1(n, t) {
  let {
    ctx: e,
    options: { pointLabels: i },
  } = n;
  for (let o = t - 1; o >= 0; o--) {
    let r = n._pointLabelItems[o];
    if (!r.visible) continue;
    let a = i.setContext(n.getPointLabelContext(o));
    W1(e, a, r);
    let d = Ro(a.font),
      { x: m, y: _, textAlign: v } = r;
    ga(e, n._pointLabels[o], m, _ + d.lineHeight / 2, d, {
      color: a.color,
      textAlign: v,
      textBaseline: "middle",
    });
  }
}
function Af(n, t, e, i) {
  let { ctx: o } = n;
  if (e) o.arc(n.xCenter, n.yCenter, t, 0, Cn);
  else {
    let r = n.getPointPosition(0, t);
    o.moveTo(r.x, r.y);
    for (let a = 1; a < i; a++)
      (r = n.getPointPosition(a, t)), o.lineTo(r.x, r.y);
  }
}
function G1(n, t, e, i, o) {
  let r = n.ctx,
    a = t.circular,
    { color: d, lineWidth: m } = t;
  (!a && !i) ||
    !d ||
    !m ||
    e < 0 ||
    (r.save(),
    (r.strokeStyle = d),
    (r.lineWidth = m),
    r.setLineDash(o.dash || []),
    (r.lineDashOffset = o.dashOffset),
    r.beginPath(),
    Af(n, e, a, i),
    r.closePath(),
    r.stroke(),
    r.restore());
}
function Y1(n, t, e) {
  return Fo(n, { label: e, index: t, type: "pointLabel" });
}
var gf = class extends vr {
    static id = "radialLinear";
    static defaults = {
      display: !0,
      animate: !0,
      position: "chartArea",
      angleLines: {
        display: !0,
        lineWidth: 1,
        borderDash: [],
        borderDashOffset: 0,
      },
      grid: { circular: !1 },
      startAngle: 0,
      ticks: { showLabelBackdrop: !0, callback: fa.formatters.numeric },
      pointLabels: {
        backdropColor: void 0,
        backdropPadding: 2,
        display: !0,
        font: { size: 10 },
        callback(t) {
          return t;
        },
        padding: 5,
        centerPointLabels: !1,
      },
    };
    static defaultRoutes = {
      "angleLines.color": "borderColor",
      "pointLabels.color": "color",
      "ticks.color": "color",
    };
    static descriptors = { angleLines: { _fallback: "grid" } };
    constructor(t) {
      super(t),
        (this.xCenter = void 0),
        (this.yCenter = void 0),
        (this.drawingArea = void 0),
        (this._pointLabels = []),
        (this._pointLabelItems = []);
    }
    setDimensions() {
      let t = (this._padding = Dn(jd(this.options) / 2)),
        e = (this.width = this.maxWidth - t.width),
        i = (this.height = this.maxHeight - t.height);
      (this.xCenter = Math.floor(this.left + e / 2 + t.left)),
        (this.yCenter = Math.floor(this.top + i / 2 + t.top)),
        (this.drawingArea = Math.floor(Math.min(e, i) / 2));
    }
    determineDataLimits() {
      let { min: t, max: e } = this.getMinMax(!1);
      (this.min = Ut(t) && !isNaN(t) ? t : 0),
        (this.max = Ut(e) && !isNaN(e) ? e : 0),
        this.handleTickRangeOptions();
    }
    computeTickLimit() {
      return Math.ceil(this.drawingArea / jd(this.options));
    }
    generateTickLabels(t) {
      vr.prototype.generateTickLabels.call(this, t),
        (this._pointLabels = this.getLabels()
          .map((e, i) => {
            let o = Mt(this.options.pointLabels.callback, [e, i], this);
            return o || o === 0 ? o : "";
          })
          .filter((e, i) => this.chart.getDataVisibility(i)));
    }
    fit() {
      let t = this.options;
      t.display && t.pointLabels.display
        ? N1(this)
        : this.setCenterPoint(0, 0, 0, 0);
    }
    setCenterPoint(t, e, i, o) {
      (this.xCenter += Math.floor((t - e) / 2)),
        (this.yCenter += Math.floor((i - o) / 2)),
        (this.drawingArea -= Math.min(
          this.drawingArea / 2,
          Math.max(t, e, i, o)
        ));
    }
    getIndexAngle(t) {
      let e = Cn / (this._pointLabels.length || 1),
        i = this.options.startAngle || 0;
      return sn(t * e + $n(i));
    }
    getDistanceFromCenterForValue(t) {
      if (mt(t)) return NaN;
      let e = this.drawingArea / (this.max - this.min);
      return this.options.reverse ? (this.max - t) * e : (t - this.min) * e;
    }
    getValueForDistanceFromCenter(t) {
      if (mt(t)) return NaN;
      let e = t / (this.drawingArea / (this.max - this.min));
      return this.options.reverse ? this.max - e : this.min + e;
    }
    getPointLabelContext(t) {
      let e = this._pointLabels || [];
      if (t >= 0 && t < e.length) {
        let i = e[t];
        return Y1(this.getContext(), t, i);
      }
    }
    getPointPosition(t, e, i = 0) {
      let o = this.getIndexAngle(t) - wn + i;
      return {
        x: Math.cos(o) * e + this.xCenter,
        y: Math.sin(o) * e + this.yCenter,
        angle: o,
      };
    }
    getPointPositionForValue(t, e) {
      return this.getPointPosition(t, this.getDistanceFromCenterForValue(e));
    }
    getBasePosition(t) {
      return this.getPointPositionForValue(t || 0, this.getBaseValue());
    }
    getPointLabelPosition(t) {
      let { left: e, top: i, right: o, bottom: r } = this._pointLabelItems[t];
      return { left: e, top: i, right: o, bottom: r };
    }
    drawBackground() {
      let {
        backgroundColor: t,
        grid: { circular: e },
      } = this.options;
      if (t) {
        let i = this.ctx;
        i.save(),
          i.beginPath(),
          Af(
            this,
            this.getDistanceFromCenterForValue(this._endValue),
            e,
            this._pointLabels.length
          ),
          i.closePath(),
          (i.fillStyle = t),
          i.fill(),
          i.restore();
      }
    }
    drawGrid() {
      let t = this.ctx,
        e = this.options,
        { angleLines: i, grid: o, border: r } = e,
        a = this._pointLabels.length,
        d,
        m,
        _;
      if (
        (e.pointLabels.display && $1(this, a),
        o.display &&
          this.ticks.forEach((v, S) => {
            if (S !== 0 || (S === 0 && this.min < 0)) {
              m = this.getDistanceFromCenterForValue(v.value);
              let T = this.getContext(S),
                M = o.setContext(T),
                A = r.setContext(T);
              G1(this, M, m, a, A);
            }
          }),
        i.display)
      ) {
        for (t.save(), d = a - 1; d >= 0; d--) {
          let v = i.setContext(this.getPointLabelContext(d)),
            { color: S, lineWidth: T } = v;
          !T ||
            !S ||
            ((t.lineWidth = T),
            (t.strokeStyle = S),
            t.setLineDash(v.borderDash),
            (t.lineDashOffset = v.borderDashOffset),
            (m = this.getDistanceFromCenterForValue(
              e.reverse ? this.min : this.max
            )),
            (_ = this.getPointPosition(d, m)),
            t.beginPath(),
            t.moveTo(this.xCenter, this.yCenter),
            t.lineTo(_.x, _.y),
            t.stroke());
        }
        t.restore();
      }
    }
    drawBorder() {}
    drawLabels() {
      let t = this.ctx,
        e = this.options,
        i = e.ticks;
      if (!i.display) return;
      let o = this.getIndexAngle(0),
        r,
        a;
      t.save(),
        t.translate(this.xCenter, this.yCenter),
        t.rotate(o),
        (t.textAlign = "center"),
        (t.textBaseline = "middle"),
        this.ticks.forEach((d, m) => {
          if (m === 0 && this.min >= 0 && !e.reverse) return;
          let _ = i.setContext(this.getContext(m)),
            v = Ro(_.font);
          if (
            ((r = this.getDistanceFromCenterForValue(this.ticks[m].value)),
            _.showLabelBackdrop)
          ) {
            (t.font = v.string),
              (a = t.measureText(d.label).width),
              (t.fillStyle = _.backdropColor);
            let S = Dn(_.backdropPadding);
            t.fillRect(
              -a / 2 - S.left,
              -r - v.size / 2 - S.top,
              a + S.width,
              v.size + S.height
            );
          }
          ga(t, d.label, 0, -r, v, {
            color: _.color,
            strokeColor: _.textStrokeColor,
            strokeWidth: _.textStrokeWidth,
          });
        }),
        t.restore();
    }
    drawTitle() {}
  },
  sl = {
    millisecond: { common: !0, size: 1, steps: 1e3 },
    second: { common: !0, size: 1e3, steps: 60 },
    minute: { common: !0, size: 6e4, steps: 60 },
    hour: { common: !0, size: 36e5, steps: 24 },
    day: { common: !0, size: 864e5, steps: 30 },
    week: { common: !1, size: 6048e5, steps: 4 },
    month: { common: !0, size: 2628e6, steps: 12 },
    quarter: { common: !1, size: 7884e6, steps: 4 },
    year: { common: !0, size: 3154e7 },
  },
  Si = Object.keys(sl);
function _f(n, t) {
  return n - t;
}
function bf(n, t) {
  if (mt(t)) return null;
  let e = n._adapter,
    { parser: i, round: o, isoWeekday: r } = n._parseOpts,
    a = t;
  return (
    typeof i == "function" && (a = i(a)),
    Ut(a) || (a = typeof i == "string" ? e.parse(a, i) : e.parse(a)),
    a === null
      ? null
      : (o &&
          (a =
            o === "week" && (ma(r) || r === !0)
              ? e.startOf(a, "isoWeek", r)
              : e.startOf(a, o)),
        +a)
  );
}
function vf(n, t, e, i) {
  let o = Si.length;
  for (let r = Si.indexOf(n); r < o - 1; ++r) {
    let a = sl[Si[r]],
      d = a.steps ? a.steps : Number.MAX_SAFE_INTEGER;
    if (a.common && Math.ceil((e - t) / (d * a.size)) <= i) return Si[r];
  }
  return Si[o - 1];
}
function q1(n, t, e, i, o) {
  for (let r = Si.length - 1; r >= Si.indexOf(e); r--) {
    let a = Si[r];
    if (sl[a].common && n._adapter.diff(o, i, a) >= t - 1) return a;
  }
  return Si[e ? Si.indexOf(e) : 0];
}
function K1(n) {
  for (let t = Si.indexOf(n) + 1, e = Si.length; t < e; ++t)
    if (sl[Si[t]].common) return Si[t];
}
function yf(n, t, e) {
  if (!e) n[t] = !0;
  else if (e.length) {
    let { lo: i, hi: o } = Us(e, t),
      r = e[i] >= t ? e[i] : e[o];
    n[r] = !0;
  }
}
function Q1(n, t, e, i) {
  let o = n._adapter,
    r = +o.startOf(t[0].value, i),
    a = t[t.length - 1].value,
    d,
    m;
  for (d = r; d <= a; d = +o.add(d, 1, i))
    (m = e[d]), m >= 0 && (t[m].major = !0);
  return t;
}
function xf(n, t, e) {
  let i = [],
    o = {},
    r = t.length,
    a,
    d;
  for (a = 0; a < r; ++a)
    (d = t[a]), (o[d] = a), i.push({ value: d, major: !1 });
  return r === 0 || !e ? i : Q1(n, i, o, e);
}
var Cf = (() => {
  class n extends br {
    static id = "time";
    static defaults = {
      bounds: "data",
      adapters: {},
      time: {
        parser: !1,
        unit: !1,
        round: !1,
        isoWeekday: !1,
        minUnit: "millisecond",
        displayFormats: {},
      },
      ticks: { source: "auto", callback: !1, major: { enabled: !1 } },
    };
    constructor(e) {
      super(e),
        (this._cache = { data: [], labels: [], all: [] }),
        (this._unit = "day"),
        (this._majorUnit = void 0),
        (this._offsets = {}),
        (this._normalized = !1),
        (this._parseOpts = void 0);
    }
    init(e, i = {}) {
      let o = e.time || (e.time = {}),
        r = (this._adapter = new Ev._date(e.adapters.date));
      r.init(i),
        gr(o.displayFormats, r.formats()),
        (this._parseOpts = {
          parser: o.parser,
          round: o.round,
          isoWeekday: o.isoWeekday,
        }),
        super.init(e),
        (this._normalized = i.normalized);
    }
    parse(e, i) {
      return e === void 0 ? null : bf(this, e);
    }
    beforeLayout() {
      super.beforeLayout(), (this._cache = { data: [], labels: [], all: [] });
    }
    determineDataLimits() {
      let e = this.options,
        i = this._adapter,
        o = e.time.unit || "day",
        { min: r, max: a, minDefined: d, maxDefined: m } = this.getUserBounds();
      function _(v) {
        !d && !isNaN(v.min) && (r = Math.min(r, v.min)),
          !m && !isNaN(v.max) && (a = Math.max(a, v.max));
      }
      (!d || !m) &&
        (_(this._getLabelBounds()),
        (e.bounds !== "ticks" || e.ticks.source !== "labels") &&
          _(this.getMinMax(!1))),
        (r = Ut(r) && !isNaN(r) ? r : +i.startOf(Date.now(), o)),
        (a = Ut(a) && !isNaN(a) ? a : +i.endOf(Date.now(), o) + 1),
        (this.min = Math.min(r, a - 1)),
        (this.max = Math.max(r + 1, a));
    }
    _getLabelBounds() {
      let e = this.getLabelTimestamps(),
        i = Number.POSITIVE_INFINITY,
        o = Number.NEGATIVE_INFINITY;
      return (
        e.length && ((i = e[0]), (o = e[e.length - 1])), { min: i, max: o }
      );
    }
    buildTicks() {
      let e = this.options,
        i = e.time,
        o = e.ticks,
        r =
          o.source === "labels" ? this.getLabelTimestamps() : this._generate();
      e.bounds === "ticks" &&
        r.length &&
        ((this.min = this._userMin || r[0]),
        (this.max = this._userMax || r[r.length - 1]));
      let a = this.min,
        d = this.max,
        m = vm(r, a, d);
      return (
        (this._unit =
          i.unit ||
          (o.autoSkip
            ? vf(i.minUnit, this.min, this.max, this._getLabelCapacity(a))
            : q1(this, m.length, i.minUnit, this.min, this.max))),
        (this._majorUnit =
          !o.major.enabled || this._unit === "year" ? void 0 : K1(this._unit)),
        this.initOffsets(r),
        e.reverse && m.reverse(),
        xf(this, m, this._majorUnit)
      );
    }
    afterAutoSkip() {
      this.options.offsetAfterAutoskip &&
        this.initOffsets(this.ticks.map((e) => +e.value));
    }
    initOffsets(e = []) {
      let i = 0,
        o = 0,
        r,
        a;
      this.options.offset &&
        e.length &&
        ((r = this.getDecimalForValue(e[0])),
        e.length === 1
          ? (i = 1 - r)
          : (i = (this.getDecimalForValue(e[1]) - r) / 2),
        (a = this.getDecimalForValue(e[e.length - 1])),
        e.length === 1
          ? (o = a)
          : (o = (a - this.getDecimalForValue(e[e.length - 2])) / 2));
      let d = e.length < 3 ? 0.5 : 0.25;
      (i = so(i, 0, d)),
        (o = so(o, 0, d)),
        (this._offsets = { start: i, end: o, factor: 1 / (i + 1 + o) });
    }
    _generate() {
      let e = this._adapter,
        i = this.min,
        o = this.max,
        r = this.options,
        a = r.time,
        d = a.unit || vf(a.minUnit, i, o, this._getLabelCapacity(i)),
        m = Pt(r.ticks.stepSize, 1),
        _ = d === "week" ? a.isoWeekday : !1,
        v = ma(_) || _ === !0,
        S = {},
        T = i,
        M,
        A;
      if (
        (v && (T = +e.startOf(T, "isoWeek", _)),
        (T = +e.startOf(T, v ? "day" : d)),
        e.diff(o, i, d) > 1e5 * m)
      )
        throw new Error(
          i + " and " + o + " are too far apart with stepSize of " + m + " " + d
        );
      let j = r.ticks.source === "data" && this.getDataTimestamps();
      for (M = T, A = 0; M < o; M = +e.add(M, m, d), A++) yf(S, M, j);
      return (
        (M === o || r.bounds === "ticks" || A === 1) && yf(S, M, j),
        Object.keys(S)
          .sort(_f)
          .map((z) => +z)
      );
    }
    getLabelForValue(e) {
      let i = this._adapter,
        o = this.options.time;
      return o.tooltipFormat
        ? i.format(e, o.tooltipFormat)
        : i.format(e, o.displayFormats.datetime);
    }
    format(e, i) {
      let r = this.options.time.displayFormats,
        a = this._unit,
        d = i || r[a];
      return this._adapter.format(e, d);
    }
    _tickFormatFunction(e, i, o, r) {
      let a = this.options,
        d = a.ticks.callback;
      if (d) return Mt(d, [e, i, o], this);
      let m = a.time.displayFormats,
        _ = this._unit,
        v = this._majorUnit,
        S = _ && m[_],
        T = v && m[v],
        M = o[i],
        A = v && T && M && M.major;
      return this._adapter.format(e, r || (A ? T : S));
    }
    generateTickLabels(e) {
      let i, o, r;
      for (i = 0, o = e.length; i < o; ++i)
        (r = e[i]), (r.label = this._tickFormatFunction(r.value, i, e));
    }
    getDecimalForValue(e) {
      return e === null ? NaN : (e - this.min) / (this.max - this.min);
    }
    getPixelForValue(e) {
      let i = this._offsets,
        o = this.getDecimalForValue(e);
      return this.getPixelForDecimal((i.start + o) * i.factor);
    }
    getValueForPixel(e) {
      let i = this._offsets,
        o = this.getDecimalForPixel(e) / i.factor - i.end;
      return this.min + o * (this.max - this.min);
    }
    _getLabelSize(e) {
      let i = this.options.ticks,
        o = this.ctx.measureText(e).width,
        r = $n(this.isHorizontal() ? i.maxRotation : i.minRotation),
        a = Math.cos(r),
        d = Math.sin(r),
        m = this._resolveTickFontOptions(0).size;
      return { w: o * a + m * d, h: o * d + m * a };
    }
    _getLabelCapacity(e) {
      let i = this.options.time,
        o = i.displayFormats,
        r = o[i.unit] || o.millisecond,
        a = this._tickFormatFunction(e, 0, xf(this, [e], this._majorUnit), r),
        d = this._getLabelSize(a),
        m =
          Math.floor(
            this.isHorizontal() ? this.width / d.w : this.height / d.h
          ) - 1;
      return m > 0 ? m : 1;
    }
    getDataTimestamps() {
      let e = this._cache.data || [],
        i,
        o;
      if (e.length) return e;
      let r = this.getMatchingVisibleMetas();
      if (this._normalized && r.length)
        return (this._cache.data = r[0].controller.getAllParsedValues(this));
      for (i = 0, o = r.length; i < o; ++i)
        e = e.concat(r[i].controller.getAllParsedValues(this));
      return (this._cache.data = this.normalize(e));
    }
    getLabelTimestamps() {
      let e = this._cache.labels || [],
        i,
        o;
      if (e.length) return e;
      let r = this.getLabels();
      for (i = 0, o = r.length; i < o; ++i) e.push(bf(this, r[i]));
      return (this._cache.labels = this._normalized ? e : this.normalize(e));
    }
    normalize(e) {
      return Cm(e.sort(_f));
    }
  }
  return n;
})();
function tl(n, t, e) {
  let i = 0,
    o = n.length - 1,
    r,
    a,
    d,
    m;
  e
    ? (t >= n[i].pos && t <= n[o].pos && ({ lo: i, hi: o } = Ws(n, "pos", t)),
      ({ pos: r, time: d } = n[i]),
      ({ pos: a, time: m } = n[o]))
    : (t >= n[i].time &&
        t <= n[o].time &&
        ({ lo: i, hi: o } = Ws(n, "time", t)),
      ({ time: r, pos: d } = n[i]),
      ({ time: a, pos: m } = n[o]));
  let _ = a - r;
  return _ ? d + ((m - d) * (t - r)) / _ : d;
}
var wf = class extends Cf {
  static id = "timeseries";
  static defaults = Cf.defaults;
  constructor(t) {
    super(t),
      (this._table = []),
      (this._minPos = void 0),
      (this._tableRange = void 0);
  }
  initOffsets() {
    let t = this._getTimestampsForTable(),
      e = (this._table = this.buildLookupTable(t));
    (this._minPos = tl(e, this.min)),
      (this._tableRange = tl(e, this.max) - this._minPos),
      super.initOffsets(t);
  }
  buildLookupTable(t) {
    let { min: e, max: i } = this,
      o = [],
      r = [],
      a,
      d,
      m,
      _,
      v;
    for (a = 0, d = t.length; a < d; ++a)
      (_ = t[a]), _ >= e && _ <= i && o.push(_);
    if (o.length < 2)
      return [
        { time: e, pos: 0 },
        { time: i, pos: 1 },
      ];
    for (a = 0, d = o.length; a < d; ++a)
      (v = o[a + 1]),
        (m = o[a - 1]),
        (_ = o[a]),
        Math.round((v + m) / 2) !== _ && r.push({ time: _, pos: a / (d - 1) });
    return r;
  }
  _generate() {
    let t = this.min,
      e = this.max,
      i = super.getDataTimestamps();
    return (
      (!i.includes(t) || !i.length) && i.splice(0, 0, t),
      (!i.includes(e) || i.length === 1) && i.push(e),
      i.sort((o, r) => o - r)
    );
  }
  _getTimestampsForTable() {
    let t = this._cache.all || [];
    if (t.length) return t;
    let e = this.getDataTimestamps(),
      i = this.getLabelTimestamps();
    return (
      e.length && i.length
        ? (t = this.normalize(e.concat(i)))
        : (t = e.length ? e : i),
      (t = this._cache.all = t),
      t
    );
  }
  getDecimalForValue(t) {
    return (tl(this._table, t) - this._minPos) / this._tableRange;
  }
  getValueForPixel(t) {
    let e = this._offsets,
      i = this.getDecimalForPixel(t) / e.factor - e.end;
    return tl(this._table, i * this._tableRange + this._minPos, !0);
  }
};
var Ud = class {
  constructor() {
    (this.class = ""),
      (this.backgroundGradient = !1),
      (this.backgroundColor = "transparent"),
      (this.backgroundGradientStopColor = "transparent"),
      (this.backgroundOpacity = 1),
      (this.backgroundStroke = "transparent"),
      (this.backgroundStrokeWidth = 0),
      (this.backgroundPadding = 5),
      (this.percent = 0),
      (this.radius = 90),
      (this.space = 4),
      (this.toFixed = 0),
      (this.maxPercent = 1e3),
      (this.renderOnClick = !0),
      (this.units = "%"),
      (this.unitsFontSize = "10"),
      (this.unitsFontWeight = "normal"),
      (this.unitsColor = "#444444"),
      (this.outerStrokeGradient = !1),
      (this.outerStrokeWidth = 8),
      (this.outerStrokeColor = "#78C000"),
      (this.outerStrokeGradientStopColor = "transparent"),
      (this.outerStrokeLinecap = "round"),
      (this.innerStrokeColor = "#C7E596"),
      (this.innerStrokeWidth = 4),
      (this.titleFormat = void 0),
      (this.title = "auto"),
      (this.titleColor = "#444444"),
      (this.titleFontSize = "20"),
      (this.titleFontWeight = "normal"),
      (this.subtitleFormat = void 0),
      (this.subtitle = "progress"),
      (this.subtitleColor = "#A9A9A9"),
      (this.subtitleFontSize = "10"),
      (this.subtitleFontWeight = "normal"),
      (this.imageSrc = void 0),
      (this.imageHeight = 0),
      (this.imageWidth = 0),
      (this.animation = !0),
      (this.animateTitle = !0),
      (this.animateSubtitle = !1),
      (this.animationDuration = 500),
      (this.showTitle = !0),
      (this.showSubtitle = !0),
      (this.showUnits = !0),
      (this.showImage = !1),
      (this.showBackground = !0),
      (this.showInnerStroke = !0),
      (this.clockwise = !0),
      (this.responsive = !1),
      (this.startFromZero = !0),
      (this.showZeroOuterStroke = !0),
      (this.lazy = !1);
  }
};
var Rf = (() => {
  class n {
    static forRoot(e = {}) {
      return { ngModule: n, providers: [{ provide: Ud, useValue: e }] };
    }
  }
  return (
    (n.ɵfac = function (e) {
      return new (e || n)();
    }),
    (n.ɵmod = _e({ type: n })),
    (n.ɵinj = ge({ imports: [De] })),
    n
  );
})();
var ll = class n {
  constructor(t) {
    this.http = t;
  }
  baseUrl = "https://uat.smartassistapp.in/api/superAdmin/dashboard";
  getDealerActivities(t) {
    let e = sessionStorage.getItem("token"),
      i = new ti({ Authorization: `Bearer ${e}` }),
      o = `${this.baseUrl}/NoSM?type=${t}`;
    return this.http.get(o, { headers: i });
  }
  getDealerActivitiesCustom(t, e, i) {
    let o = sessionStorage.getItem("token"),
      r = new ti({ Authorization: `Bearer ${o}` }),
      a = i || "MTD",
      d = `${this.baseUrl}/NoSM?type=${a}&start_date=${t}&end_date=${e}`;
    return this.http.get(d, { headers: r });
  }
  getNoSMUsers(t, e = "This month", i, o) {
    let r = sessionStorage.getItem("token"),
      a = new ti({ Authorization: `Bearer ${r}` }),
      d = `${this.baseUrl}/NoSM?dealer_id=${t}&type=${e}`;
    return (
      e === "CUSTOM" && i && o && (d += `&start_date=${i}&end_date=${o}`),
      this.http.get(d, { headers: a })
    );
  }
  getDealers(t, e) {
    return this.http.get(
      `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${t}`,
      { headers: { Authorization: `Bearer ${e}` } }
    );
  }
  getDealersByCustomDate(t, e, i) {
    return this.http.get(
      `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?start_date=${t}&end_date=${e}`,
      { headers: { Authorization: `Bearer ${i}` } }
    );
  }
  getDealerUsers(t, e, i) {
    let o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${t}&type=${e}`;
    return this.http.get(o, { headers: { Authorization: `Bearer ${i}` } });
  }
  getKpiData(t, e = "MTD") {
    let i = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${e}`;
    return this.http.get(i, { headers: { Authorization: `Bearer ${t}` } });
  }
  static ɵfac = function (e) {
    return new (e || n)(Z($t));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var cl = class n {
  selectedDealerSource = new en(null);
  selectedDealer$ = this.selectedDealerSource.asObservable();
  setSelectedDealer(t) {
    this.selectedDealerSource.next(t);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var J1 = ["chart"],
  ey = (n, t) => ({ "sidebar-open": n, "sidebar-closed": t }),
  Ff = (n) => ({ active: n }),
  Wd = (n) => ({ color: n });
function ty(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 62),
      F("click", function (o) {
        return O(e), I(o.stopPropagation());
      }),
      c(1, "input", 63),
      F("change", function () {
        let o = O(e).$implicit,
          r = w(4);
        return I(r.toggleDealerSelection(o));
      }),
      l(),
      h(2),
      l();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w(4);
    p(), y("checked", i.isDealerSelected(e)), p(), K(" ", e.dealerName, " ");
  }
}
function iy(n, t) {
  if ((n & 1 && (je(0), k(1, ty, 3, 2, "button", 61), ze()), n & 2)) {
    let e = w(3);
    p(), y("ngForOf", e.filteredDealers);
  }
}
function ny(n, t) {
  n & 1 && (c(0, "div", 64), h(1, " No dealers found "), l());
}
function oy(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 53)(1, "div", 54)(2, "input", 55),
      bt("ngModelChange", function (o) {
        O(e);
        let r = w(2);
        return _t(r.dealerSearch, o) || (r.dealerSearch = o), I(o);
      }),
      F("input", function () {
        O(e);
        let o = w(2);
        return I(o.filterDealers());
      })("click", function (o) {
        return O(e), I(o.stopPropagation());
      }),
      l()(),
      c(3, "div", 56)(4, "label", 57),
      F("click", function (o) {
        return O(e), I(o.stopPropagation());
      }),
      c(5, "input", 58),
      F("change", function (o) {
        return O(e), w(2).toggleSelectAll(o), I(o.stopPropagation());
      }),
      l(),
      h(6, " Select All "),
      l(),
      c(7, "button", 59),
      F("click", function (o) {
        return O(e), w(2).clearSelection(), I(o.stopPropagation());
      }),
      h(8, " Clear "),
      l()(),
      k(9, iy, 2, 1, "ng-container", 60)(
        10,
        ny,
        2,
        0,
        "ng-template",
        null,
        0,
        Ot
      ),
      l();
  }
  if (n & 2) {
    let e = ht(11),
      i = w(2);
    p(2),
      gt("ngModel", i.dealerSearch),
      p(3),
      y("checked", i.areAllSelected()),
      p(4),
      y("ngIf", i.filteredDealers.length > 0)("ngIfElse", e);
  }
}
function ry(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 65)(1, "input", 66),
      bt("ngModelChange", function (o) {
        O(e);
        let r = w(2);
        return _t(r.customStartDate, o) || (r.customStartDate = o), I(o);
      }),
      l(),
      c(2, "input", 67),
      bt("ngModelChange", function (o) {
        O(e);
        let r = w(2);
        return _t(r.customEndDate, o) || (r.customEndDate = o), I(o);
      }),
      l(),
      c(3, "button", 68),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.applyCustomDate());
      }),
      h(4, "Apply"),
      l(),
      c(5, "button", 69),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.resetCustomDate());
      }),
      h(6, "Reset"),
      l()();
  }
  if (n & 2) {
    let e = w(2);
    p(), gt("ngModel", e.customStartDate), p(), gt("ngModel", e.customEndDate);
  }
}
function ay(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function sy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function ly(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function cy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function dy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function uy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function hy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function py(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function my(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function fy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function gy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function _y(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function by(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function vy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function yy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function xy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function Cy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" ", e.sortDirection === "asc" ? "\u25B2" : "\u25BC", " ");
  }
}
function wy(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "tr", 72)(1, "td", 73)(2, "button", 74),
      F("click", function (o) {
        O(e);
        let r = w(),
          a = r.$implicit,
          d = r.index,
          m = w(2);
        return I(m.toggleRow(o, a, "engagement-" + d));
      }),
      c(3, "span", 75),
      h(4),
      l(),
      h(5),
      l()(),
      c(6, "td", 73),
      h(7),
      l(),
      c(8, "td", 73),
      h(9),
      l(),
      c(10, "td", 76),
      h(11),
      l(),
      c(12, "td", 77),
      h(13),
      l(),
      c(14, "td", 73),
      h(15),
      l(),
      c(16, "td", 73),
      h(17),
      l(),
      c(18, "td", 76),
      h(19),
      l(),
      c(20, "td", 77),
      h(21),
      l(),
      c(22, "td", 73),
      h(23),
      l(),
      c(24, "td", 73),
      h(25),
      l(),
      c(26, "td", 73),
      h(27),
      l(),
      c(28, "td", 76),
      h(29),
      l(),
      c(30, "td", 77),
      h(31),
      l(),
      c(32, "td", 73),
      h(33),
      l(),
      c(34, "td", 73),
      h(35),
      l(),
      c(36, "td", 73),
      h(37),
      l(),
      c(38, "td", 73),
      h(39),
      l()();
  }
  if (n & 2) {
    let e,
      i,
      o,
      r,
      a,
      d,
      m,
      _,
      v,
      S,
      T,
      M,
      A,
      j,
      z,
      L,
      ue,
      Ve = w(),
      Se = Ve.$implicit,
      Re = Ve.index,
      b = w(2);
    p(4),
      N(b.expandedRow === "engagement-" + Re ? "v" : ">"),
      p(),
      K(" ", Se.dealerName, " "),
      p(2),
      N((e = Se.totalUsers) !== null && e !== void 0 ? e : 0),
      p(2),
      N((i = Se.activeUsers) !== null && i !== void 0 ? i : 0),
      p(2),
      N((o = Se.saLeads) !== null && o !== void 0 ? o : 0),
      p(),
      y("ngStyle", he(22, Wd, Se.saLeads === Se.cxpLeads ? "green" : "red")),
      p(),
      K(" ", (r = Se.cxpLeads) !== null && r !== void 0 ? r : 0, " "),
      p(2),
      N((a = Se.icsLeads) !== null && a !== void 0 ? a : 0),
      p(2),
      N((d = Se.manuallyEnteredLeads) !== null && d !== void 0 ? d : 0),
      p(2),
      N((m = Se.saFollowUps) !== null && m !== void 0 ? m : 0),
      p(),
      y(
        "ngStyle",
        he(24, Wd, Se.saFollowUps === Se.cxpFollowUps ? "green" : "red")
      ),
      p(),
      K(" ", (_ = Se.cxpFollowUps) !== null && _ !== void 0 ? _ : 0, " "),
      p(2),
      N((v = Se.completedFollowUps) !== null && v !== void 0 ? v : 0),
      p(2),
      N((S = Se.openFollowUps) !== null && S !== void 0 ? S : 0),
      p(2),
      N((T = Se.closedFollowUps) !== null && T !== void 0 ? T : 0),
      p(2),
      N((M = Se.saTestDrives) !== null && M !== void 0 ? M : 0),
      p(),
      y(
        "ngStyle",
        he(26, Wd, Se.saTestDrives === Se.cxpTestDrives ? "green" : "red")
      ),
      p(),
      K(" ", (A = Se.cxpTestDrives) !== null && A !== void 0 ? A : 0, " "),
      p(2),
      N((j = Se.completedTestDrives) !== null && j !== void 0 ? j : 0),
      p(2),
      N((z = Se.upcomingTestDrives) !== null && z !== void 0 ? z : 0),
      p(2),
      N((L = Se.closedTestDrives) !== null && L !== void 0 ? L : 0),
      p(2),
      N((ue = Se.opportunitiesConverted) !== null && ue !== void 0 ? ue : 0);
  }
}
function Dy(n, t) {
  if ((n & 1 && (c(0, "span"), h(1), l()), n & 2)) {
    let e = w().$implicit;
    p(), K("(", e.user_role, ")");
  }
}
function Sy(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr")(1, "td", 86),
      h(2),
      k(3, Dy, 2, 1, "span", 1),
      l(),
      c(4, "td", 87)(5, "span", 88),
      h(6),
      l()(),
      c(7, "td", 73),
      h(8),
      l(),
      c(9, "td", 73),
      h(10),
      l(),
      c(11, "td", 73),
      h(12),
      l(),
      c(13, "td", 73),
      h(14),
      l(),
      c(15, "td", 73),
      h(16),
      l(),
      c(17, "td", 73),
      h(18),
      l(),
      c(19, "td", 73),
      h(20),
      l(),
      c(21, "td", 73),
      h(22),
      l(),
      c(23, "td", 73),
      h(24),
      l(),
      c(25, "td", 73),
      h(26),
      l(),
      c(27, "td", 73),
      h(28),
      l(),
      c(29, "td", 73),
      h(30),
      l(),
      c(31, "td", 73),
      h(32),
      l(),
      c(33, "td", 73),
      h(34),
      l(),
      c(35, "td", 73),
      h(36),
      l()()),
    n & 2)
  ) {
    let e,
      i,
      o,
      r,
      a,
      d,
      m,
      _,
      v,
      S,
      T,
      M,
      A,
      j,
      z,
      L = t.$implicit;
    p(2),
      K(" ", L.user, " "),
      p(),
      y("ngIf", L.user_role),
      p(2),
      y("ngClass", L.active ? "chip-success" : "chip-inactive"),
      p(),
      K(" ", L.active ? "Active" : "Inactive", " "),
      p(2),
      N(
        (e = L.leads == null ? null : L.leads.sa) !== null && e !== void 0
          ? e
          : 0
      ),
      p(2),
      N(
        (i = L.leads == null ? null : L.leads.cxp) !== null && i !== void 0
          ? i
          : 0
      ),
      p(2),
      N(
        (o = L.leads == null ? null : L.leads.ics) !== null && o !== void 0
          ? o
          : 0
      ),
      p(2),
      N(
        (r = L.leads == null ? null : L.leads.manuallyEntered) !== null &&
          r !== void 0
          ? r
          : 0
      ),
      p(2),
      N(
        (a = L.followups == null ? null : L.followups.sa) !== null &&
          a !== void 0
          ? a
          : 0
      ),
      p(2),
      N(
        (d = L.followups == null ? null : L.followups.open) !== null &&
          d !== void 0
          ? d
          : 0
      ),
      p(2),
      N(
        (m = L.followups == null ? null : L.followups.closed) !== null &&
          m !== void 0
          ? m
          : 0
      ),
      p(2),
      N(
        (_ = L.followups == null ? null : L.followups.cxp) !== null &&
          _ !== void 0
          ? _
          : 0
      ),
      p(2),
      N(
        (v = L.followups == null ? null : L.followups.completed) !== null &&
          v !== void 0
          ? v
          : 0
      ),
      p(2),
      N(
        (S = L.testdrives == null ? null : L.testdrives.sa) !== null &&
          S !== void 0
          ? S
          : 0
      ),
      p(2),
      N(
        (T = L.testdrives == null ? null : L.testdrives.completed) !== null &&
          T !== void 0
          ? T
          : 0
      ),
      p(2),
      N(
        (M = L.testdrives == null ? null : L.testdrives.closed) !== null &&
          M !== void 0
          ? M
          : 0
      ),
      p(2),
      N(
        (A = L.testdrives == null ? null : L.testdrives.cxp) !== null &&
          A !== void 0
          ? A
          : 0
      ),
      p(2),
      N(
        (j = L.testdrives == null ? null : L.testdrives.upcoming) !== null &&
          j !== void 0
          ? j
          : 0
      ),
      p(2),
      N((z = L.opportunitiesConverted) !== null && z !== void 0 ? z : 0);
  }
}
function My(n, t) {
  n & 1 && (c(0, "tr")(1, "td", 89), h(2, "No Users Found"), l()());
}
function Ty(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr", 78)(1, "td", 79)(2, "div", 80)(3, "div", 81),
      h(4),
      l(),
      c(5, "div", 82)(6, "div", 83)(7, "table", 84)(8, "thead", 85)(9, "tr")(
        10,
        "th",
        86
      ),
      h(11, "User"),
      l(),
      c(12, "th"),
      h(13, "Active"),
      l(),
      c(14, "th"),
      h(15, "SA Leads"),
      l(),
      c(16, "th"),
      h(17, "Leads (CXP)"),
      l(),
      c(18, "th"),
      h(19, "Leads (ICS)"),
      l(),
      c(20, "th"),
      h(21, "Manually entered with cxp"),
      l(),
      c(22, "th"),
      h(23, "SA Follow-ups "),
      l(),
      c(24, "th"),
      h(25, "Sync with cxp"),
      l(),
      c(26, "th"),
      h(27, "Open"),
      l(),
      c(28, "th"),
      h(29, "Closed"),
      l(),
      c(30, "th"),
      h(31, "Completed"),
      l(),
      c(32, "th"),
      h(33, "SA Test Drives "),
      l(),
      c(34, "th"),
      h(35, "Test Drives (CXP)"),
      l(),
      c(36, "th"),
      h(37, "Upcoming Test Drives"),
      l(),
      c(38, "th"),
      h(39, "Completed Test Drives"),
      l(),
      c(40, "th"),
      h(41, "Overdue"),
      l(),
      c(42, "th"),
      h(43, "Opp converted"),
      l()()(),
      c(44, "tbody"),
      k(45, Sy, 37, 19, "tr", 42)(46, My, 3, 0, "tr", 1),
      l()()()()()()()),
    n & 2)
  ) {
    let e = w().$implicit,
      i = w(2);
    p(4),
      K(" User-wise details \u2014 ", e.dealerName, " "),
      p(41),
      y("ngForOf", i.getSortedUsers(e.dealerId)),
      p(),
      y(
        "ngIf",
        !i.dealerUsers[e.dealerId] ||
          (i.dealerUsers[e.dealerId] == null
            ? null
            : i.dealerUsers[e.dealerId].length) === 0
      );
  }
}
function Ey(n, t) {
  if (
    (n & 1 && (je(0), k(1, wy, 40, 28, "tr", 70)(2, Ty, 47, 3, "tr", 71), ze()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      o = w(2);
    p(), y("ngIf", e), p(), y("ngIf", o.expandedRow === "engagement-" + i);
  }
}
function ky(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 90),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.showMoreTable1());
      }),
      h(1, " Show More "),
      l();
  }
}
function Oy(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 91),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.showLessTable1());
      }),
      h(1, " Show Less "),
      l();
  }
}
function Iy(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr")(1, "td", 86),
      h(2),
      l(),
      c(3, "td"),
      h(4),
      l(),
      c(5, "td"),
      h(6),
      l(),
      c(7, "td"),
      h(8),
      l(),
      c(9, "td"),
      h(10),
      l(),
      c(11, "td"),
      h(12),
      l(),
      c(13, "td"),
      h(14),
      l()()),
    n & 2)
  ) {
    let e = t.$implicit;
    p(2),
      N(e.name),
      p(2),
      N(e.calls.total),
      p(2),
      N(e.calls.outgoing),
      p(2),
      N(e.calls.incoming),
      p(2),
      N(e.calls.connected),
      p(2),
      N(e.calls.declined),
      p(2),
      N(e.calls.duration);
  }
}
function Py(n, t) {
  n & 1 && (c(0, "tr")(1, "td", 103), h(2, " No call logs found "), l()());
}
function Ay(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr")(1, "td", 99)(2, "div", 82)(3, "div", 100)(4, "table", 101)(
        5,
        "thead"
      )(6, "tr")(7, "th", 102),
      h(8, "User"),
      l(),
      c(9, "th"),
      h(10, "Total"),
      l(),
      c(11, "th"),
      h(12, "Outgoing"),
      l(),
      c(13, "th"),
      h(14, "Incoming"),
      l(),
      c(15, "th"),
      h(16, "Connected"),
      l(),
      c(17, "th"),
      h(18, "Declined"),
      l(),
      c(19, "th"),
      h(20, "Duration"),
      l()()(),
      c(21, "tbody"),
      k(22, Iy, 15, 7, "tr", 42)(23, Py, 3, 0, "tr", 1),
      l()()()()()()),
    n & 2)
  ) {
    let e = w().$implicit,
      i = w(3);
    p(22),
      y("ngForOf", i.userCallLogs[e.dealerId]),
      p(),
      y(
        "ngIf",
        !i.userCallLogs[e.dealerId] ||
          (i.userCallLogs[e.dealerId] == null
            ? null
            : i.userCallLogs[e.dealerId].length) === 0
      );
  }
}
function Ry(n, t) {
  if (n & 1) {
    let e = ee();
    je(0),
      c(1, "tr")(2, "td", 98)(3, "button", 74),
      F("click", function (o) {
        let r = O(e),
          a = r.$implicit,
          d = r.index,
          m = w(3);
        return I(m.toggleRow(o, a, "engagement-" + d));
      }),
      c(4, "span", 75),
      h(5),
      l(),
      h(6),
      l()(),
      c(7, "td"),
      h(8),
      l(),
      c(9, "td"),
      h(10),
      l(),
      c(11, "td"),
      h(12),
      l(),
      c(13, "td"),
      h(14),
      l(),
      c(15, "td"),
      h(16),
      l(),
      c(17, "td"),
      h(18),
      l()(),
      k(19, Ay, 24, 2, "tr", 1),
      ze();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      o = w(3);
    p(5),
      N(o.expandedRow === "engagement-" + i ? "v" : ">"),
      p(),
      K(" ", e.dealerName, " "),
      p(2),
      N((e.callLogs == null ? null : e.callLogs.totalCalls) || 0),
      p(2),
      N((e.callLogs == null ? null : e.callLogs.outgoing) || 0),
      p(2),
      N((e.callLogs == null ? null : e.callLogs.incoming) || 0),
      p(2),
      N((e.callLogs == null ? null : e.callLogs.connected) || 0),
      p(2),
      N((e.callLogs == null ? null : e.callLogs.declined) || 0),
      p(2),
      N((e.callLogs == null ? null : e.callLogs.duration) || "00:00:00"),
      p(),
      y("ngIf", o.expandedRow === "engagement-" + i);
  }
}
function Fy(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 104),
      F("click", function () {
        O(e);
        let o = w(3);
        return I(o.showMoreTable2());
      }),
      h(1, " Show More "),
      l();
  }
}
function Ny(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 105),
      F("click", function () {
        O(e);
        let o = w(3);
        return I(o.showLessTable2());
      }),
      h(1, " Show Less "),
      l();
  }
}
function Vy(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 36)(1, "div", 37)(2, "table", 92)(3, "thead", 39)(4, "tr")(
        5,
        "th",
        93
      ),
      h(6, "Dealer"),
      l(),
      c(7, "th", 40),
      h(8, "Total Calls"),
      l(),
      c(9, "th", 40),
      h(10, "Outgoing"),
      l(),
      c(11, "th", 40),
      h(12, "Incoming"),
      l(),
      c(13, "th", 40),
      h(14, "Connected"),
      l(),
      c(15, "th", 40),
      h(16, "Declined"),
      l(),
      c(17, "th", 94),
      h(18, "Duration"),
      l()()(),
      c(19, "tbody"),
      k(20, Ry, 20, 9, "ng-container", 42),
      Xr(21, "slice"),
      l()(),
      c(22, "div", 95),
      k(23, Fy, 2, 0, "button", 96)(24, Ny, 2, 0, "button", 97),
      l()()()),
    n & 2)
  ) {
    let e = w(2);
    p(20),
      y("ngForOf", Fc(21, 3, e.dealers, 0, e.table2Length)),
      p(3),
      y("ngIf", e.table2Length < e.dealers.length),
      p(),
      y("ngIf", e.table2Length > 5 && e.dealers.length > 5);
  }
}
function Ly(n, t) {
  if (
    (n & 1 && (c(0, "div", 106)(1, "div", 107), U(2, "apx-chart", 108), l()()),
    n & 2)
  ) {
    let e = w(2);
    p(2),
      y("series", e.chartOptions.series)("chart", e.chartOptions.chart)(
        "xaxis",
        e.chartOptions.xaxis
      )("stroke", e.chartOptions.stroke)(
        "dataLabels",
        e.chartOptions.dataLabels
      )("title", e.chartOptions.title);
  }
}
function By(n, t) {
  if (n & 1) {
    let e = ee();
    je(0),
      c(1, "div", 2)(2, "div", 3)(3, "div", 4)(4, "button", 5),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.toggleDropdown());
      }),
      h(5),
      l(),
      k(6, oy, 12, 4, "div", 6),
      l(),
      c(7, "select", 7),
      bt("ngModelChange", function (o) {
        O(e);
        let r = w();
        return _t(r.selectedFilter, o) || (r.selectedFilter = o), I(o);
      }),
      F("change", function () {
        O(e);
        let o = w();
        return I(o.onFilterChange(o.selectedFilter));
      }),
      c(8, "option", 8),
      h(9, "Today"),
      l(),
      c(10, "option", 9),
      h(11, "Yesterday"),
      l(),
      c(12, "option", 10),
      h(13, "This Week"),
      l(),
      c(14, "option", 11),
      h(15, "Last Week"),
      l(),
      c(16, "option", 12),
      h(17, "This Month"),
      l(),
      c(18, "option", 13),
      h(19, "Last Month"),
      l(),
      c(20, "option", 14),
      h(21, "This Quarter"),
      l(),
      c(22, "option", 15),
      h(23, "Last Quarter"),
      l(),
      c(24, "option", 16),
      h(25, "Last 6 Months"),
      l(),
      c(26, "option", 17),
      h(27, "This Year"),
      l(),
      c(28, "option", 18),
      h(29, "Lifetime"),
      l(),
      c(30, "option", 19),
      h(31, "Custom"),
      l()(),
      k(32, ry, 7, 2, "div", 20),
      l()(),
      c(33, "div", 21)(34, "main", 22)(35, "section", 23)(36, "div", 24)(
        37,
        "div",
        25
      ),
      h(38, "Dealers"),
      l(),
      c(39, "div", 26),
      h(40),
      l(),
      c(41, "div", 27),
      h(42, "Network: "),
      c(43, "span", 28),
      h(44),
      l()()(),
      c(45, "div", 24)(46, "div", 25),
      h(47, "Users"),
      l(),
      c(48, "div", 26),
      h(49),
      l(),
      c(50, "div", 27),
      h(51, "Active: "),
      c(52, "span", 28),
      h(53),
      l()()(),
      c(54, "div", 24)(55, "div", 25),
      h(56, "Leads"),
      l(),
      c(57, "div", 26),
      h(58),
      l(),
      c(59, "div", 27),
      h(60, "Across all dealers"),
      l()(),
      c(61, "div", 24)(62, "div", 25),
      h(63, "Calls"),
      l(),
      c(64, "div", 26),
      h(65),
      l(),
      c(66, "div", 27),
      h(67, "Total volume"),
      l()(),
      c(68, "div", 24)(69, "div", 25),
      h(70, "Total Followups"),
      l(),
      c(71, "div", 26),
      h(72),
      l()(),
      c(73, "div", 24)(74, "div", 25),
      h(75, "Unique/Completed Test Drives"),
      l(),
      c(76, "div", 26),
      h(77),
      l()()(),
      c(78, "div", 29)(79, "div", 30)(80, "div")(81, "h2", 31),
      h(82, "Dealer Summary \u2014 Engagement"),
      l(),
      c(83, "p", 32),
      h(84, "Users, Leads, Follow-ups, Test Drives (with CXP/ICS sync)"),
      l()(),
      c(85, "div", 33)(86, "button", 34),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.exportToCSV());
      }),
      U(87, "i", 35),
      h(88, " Export CSV "),
      l()()(),
      c(89, "div", 36)(90, "div", 37)(91, "table", 38)(92, "thead", 39)(
        93,
        "tr"
      )(94, "th", 40),
      h(95, "Dealer"),
      l(),
      c(96, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("totalUsers"));
      }),
      h(97, " Total Users "),
      k(98, ay, 2, 1, "span", 1),
      l(),
      c(99, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("activeUsers"));
      }),
      h(100, " Active Users "),
      k(101, sy, 2, 1, "span", 1),
      l(),
      c(102, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("saLeads"));
      }),
      h(103, " SA Leads "),
      k(104, ly, 2, 1, "span", 1),
      l(),
      c(105, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("cxpLeads"));
      }),
      h(106, " Sync with CXP "),
      k(107, cy, 2, 1, "span", 1),
      l(),
      c(108, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("icsLeads"));
      }),
      h(109, " Sync with ICS "),
      k(110, dy, 2, 1, "span", 1),
      l(),
      c(111, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("manuallyEnteredLeads"));
      }),
      h(112, " Manually Entered with CXP "),
      k(113, uy, 2, 1, "span", 1),
      l(),
      c(114, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("saFollowUps"));
      }),
      h(115, " SA Followups "),
      k(116, hy, 2, 1, "span", 1),
      l(),
      c(117, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("cxpFollowUps"));
      }),
      h(118, " Sync with CXP "),
      k(119, py, 2, 1, "span", 1),
      l(),
      c(120, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("completedFollowUps"));
      }),
      h(121, " Completed Followups "),
      k(122, my, 2, 1, "span", 1),
      l(),
      c(123, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("openFollowUps"));
      }),
      h(124, " Upcoming followups "),
      k(125, fy, 2, 1, "span", 1),
      l(),
      c(126, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("closedFollowUps"));
      }),
      h(127, " Overdue followups "),
      k(128, gy, 2, 1, "span", 1),
      l(),
      c(129, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("saTestDrives"));
      }),
      h(130, " SA Test Drives "),
      k(131, _y, 2, 1, "span", 1),
      l(),
      c(132, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("cxpTestDrives"));
      }),
      h(133, " sync to CXP "),
      k(134, by, 2, 1, "span", 1),
      l(),
      c(135, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("completedTestDrives"));
      }),
      h(136, " Completed test drives "),
      k(137, vy, 2, 1, "span", 1),
      l(),
      c(138, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("upcomingTestDrives"));
      }),
      h(139, " Upcoming "),
      k(140, yy, 2, 1, "span", 1),
      l(),
      c(141, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("closedTestDrives"));
      }),
      h(142, " Overdue "),
      k(143, xy, 2, 1, "span", 1),
      l(),
      c(144, "th", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.sortData("opportunitiesConverted"));
      }),
      h(145, " Opportunities Converted "),
      k(146, Cy, 2, 1, "span", 1),
      l()()(),
      c(147, "tbody"),
      k(148, Ey, 3, 2, "ng-container", 42),
      Xr(149, "slice"),
      l()()(),
      k(150, ky, 2, 0, "button", 43)(151, Oy, 2, 0, "button", 44),
      l()(),
      c(152, "div", 29)(153, "div", 30)(154, "div")(155, "h2", 31),
      h(156, "Dealer Summary \u2014 Calls"),
      l(),
      c(157, "p", 32),
      h(158, "Call volumes and outcomes"),
      l()(),
      c(159, "div", 45)(160, "div", 46)(161, "button", 47),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.dealerEngagementView("table"));
      }),
      U(162, "i", 48),
      h(163, " Table "),
      l(),
      c(164, "button", 47),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.dealerEngagementView("chart"));
      }),
      U(165, "i", 49),
      h(166, " Line Chart "),
      l()(),
      c(167, "button", 50),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.exportUserCallLogsToCSV());
      }),
      U(168, "i", 35),
      h(169, " Export CSV "),
      l()()(),
      k(170, Vy, 25, 7, "div", 51)(171, Ly, 3, 6, "div", 52),
      l()()(),
      ze();
  }
  if (n & 2) {
    let e = w();
    p(),
      y("ngClass", Bi(44, ey, e.isSidebarOpen, !e.isSidebarOpen)),
      p(2),
      fe("show", e.dropdownOpen),
      p(2),
      K(
        " ",
        e.selectedDealers.length > 0
          ? "Dealers Selected (" + e.selectedDealers.length + ")"
          : "Select Dealers",
        " "
      ),
      p(),
      y("ngIf", e.dropdownOpen),
      p(),
      gt("ngModel", e.selectedFilter),
      p(25),
      y("ngIf", e.selectedFilter === "CUSTOM"),
      p(8),
      N(e.kpiData.dealers),
      p(4),
      N(e.kpiData.activeNetwork),
      p(5),
      N(e.kpiData.users),
      p(4),
      N(e.kpiData.activeUsers),
      p(5),
      N(e.kpiData.leads),
      p(7),
      N(e.kpiData.calls),
      p(7),
      N(e.kpiData.totalFollowUps),
      p(5),
      Qr(
        " ",
        e.kpiData.uniqueTestDrives || 0,
        "/",
        e.kpiData.completedTestDrives || 0,
        " "
      ),
      p(21),
      y("ngIf", e.sortColumn === "totalUsers" && e.sortDirection !== "default"),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "activeUsers" && e.sortDirection !== "default"
      ),
      p(3),
      y("ngIf", e.sortColumn === "saLeads" && e.sortDirection !== "default"),
      p(3),
      y("ngIf", e.sortColumn === "cxpLeads" && e.sortDirection !== "default"),
      p(3),
      y("ngIf", e.sortColumn === "icsLeads" && e.sortDirection !== "default"),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "manuallyEnteredLeads" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "saFollowUps" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "cxpFollowUps" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "completedFollowUps" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "openFollowUps" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "closedFollowUps" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "saTestDrives" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "cxpTestDrives" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "completedTestDrives" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "upcomingTestDrives" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "closedTestDrives" && e.sortDirection !== "default"
      ),
      p(3),
      y(
        "ngIf",
        e.sortColumn === "opportunitiesConverted" &&
          e.sortDirection !== "default"
      ),
      p(2),
      y(
        "ngForOf",
        Fc(
          149,
          40,
          e.selectedDealers.length > 0 ? e.selectedDealers : e.dealers,
          0,
          e.table1Length
        )
      ),
      p(2),
      y(
        "ngIf",
        e.table1Length <
          (e.selectedDealers.length > 0
            ? e.selectedDealers.length
            : e.dealers.length)
      ),
      p(),
      y(
        "ngIf",
        e.table1Length > 5 &&
          (e.selectedDealers.length > 0
            ? e.selectedDealers.length
            : e.dealers.length) > 5
      ),
      p(10),
      y("ngClass", he(47, Ff, e.dealerSummaryCallsViewType === "table")),
      p(3),
      y("ngClass", he(49, Ff, e.dealerSummaryCallsViewType === "chart")),
      p(6),
      y("ngIf", e.dealerSummaryCallsViewType === "table"),
      p(),
      y("ngIf", e.dealerSummaryCallsViewType === "chart");
  }
}
var dl = class n {
  constructor(t, e, i, o, r, a, d, m, _) {
    this.http = t;
    this.cdr = e;
    this.context = i;
    this.router = o;
    this.dashboardService = r;
    this.sharedService = a;
    this.ngZone = d;
    this.cd = m;
    this.eRef = _;
  }
  dashboardMetrics = {
    totalLeads: 0,
    totalTestDrives: 0,
    totalOrders: 0,
    lostLeads: 0,
    cancellations: 0,
    netOrders: 0,
    retail: 0,
  };
  callLogs = {
    totalCalls: 120,
    outgoing: 50,
    incoming: 40,
    connected: 20,
    declined: 10,
    durationSec: 500,
  };
  expandedDealer = null;
  chart;
  chartOptions;
  sortColumn = null;
  sortDirection = "default";
  currentPageMap = {};
  showAllSMs = {};
  showCustomDatePicker = !1;
  customStartDate = "";
  customEndDate = "";
  displayedDealers = [];
  itemsToShow = 10;
  expandedRow = null;
  filteredDealers = [];
  totalLeads = le(0);
  totalTestDrives = le(0);
  totalOrders = le(0);
  prevLeads = le(0);
  prevTestDrives = le(0);
  prevOrders = le(0);
  selectedOption = "leads-MTD";
  testDrives = 0;
  displayedData = [];
  filteredData = [];
  mtdTestDrives = le(0);
  qtdTestDrives = le(0);
  hoveredSM = null;
  loading = !1;
  selectedDealer = null;
  ps1Data = [];
  ps2Data = [];
  pageSize = 20;
  ytdTestDrives = le(0);
  loadingSM = !1;
  psData = {};
  showDetails = !1;
  paginatedDealers = [];
  dealerCallData = [];
  dropdownOpen = !1;
  selectedDealers = [];
  dealerPSL = null;
  userCallLogs = {};
  callLogsItemsToShow = 10;
  displayedCallLogs = [];
  showMoreCallLogsVisible = !0;
  mtdOrders = le(0);
  qtdOrders = le(0);
  ytdOrders = le(0);
  table1Length = 5;
  table2Length = 5;
  dealerSummaryCallsViewType = "table";
  selectedFilter = "Today";
  dealerColors = ["#e6f2ff", "#f9f2ec", "#eaf7ea", "#f3e8ff"];
  appliedStartDate = null;
  appliedEndDate = null;
  usersItemsToShow = 10;
  userItemsToShow = 10;
  displayedUsers = [];
  showMoreUsersVisible = !1;
  mtdLeads = le(0);
  qtdLeads = le(0);
  currentLeads = 0;
  previousLeads = 0;
  changeLeads = 0;
  testDriveChange = 0;
  testDriveProgressValue = 0;
  testDriveStrokeColor = "#4CAF50";
  selectedCategory = "leads";
  selectedDuration = "MTD";
  orderChange = 0;
  orderProgressValue = 0;
  loadingPS = !1;
  activeAccordion = null;
  dealerUsers = {};
  dealerCallLogs = {};
  showAll = !1;
  orderStrokeColor = "#4CAF50";
  currentTestDrives = 0;
  previousTestDrives = 0;
  selectedDealerId = null;
  dealerSMS = {};
  salesManagers = {};
  loadingSMs = {};
  Math = Math;
  itemsPerPagedeal = 10;
  currentDisplayCount = 10;
  kpiData = {
    dealers: 0,
    activeNetwork: 0,
    users: 0,
    activeUsers: 0,
    leads: 0,
    calls: 0,
  };
  orders = 0;
  currentOrders = 0;
  previousOrders = 0;
  ytdLeads = le(0);
  selectedPeriod = "MTD";
  dashboardData = {};
  leads = 0;
  selectedSM = null;
  isSidebarOpen = !0;
  paginatedDealerskpis = [];
  currentIndex = 0;
  displayedDealerUsers = [];
  currentDealerPage = 1;
  dealersPerPage = 5;
  expandedItems = {};
  filterOptions = ["MTD", "QTD", "YTD"];
  expandedRows = [!1, !1, !1, !1, !1, !1];
  showMoreActive = !1;
  originalDealers = [];
  rankings = {};
  sidebarTestDrives = le(0);
  sidebarOrders = le(0);
  sidebarLeads = le(0);
  pieChartInstance;
  leadsData = {};
  miniChart;
  hoveredPS = null;
  activeDealer = null;
  activeSM = null;
  activePS = null;
  incrementSize = 10;
  selectedTime = "1M";
  graphPath = "";
  leadsChange = 0;
  testDrivesChange = 0;
  ordersChange = 0;
  change = 0;
  doughnutChart;
  dealerSearch = "";
  animatedValue = 0;
  currentPage = 1;
  itemsPerPage = 10;
  paginatedData = [];
  activeFilter = "MTD";
  dealers = [];
  currentdealerPage = 1;
  itemsPerdealerPage = 5;
  maxValue = 0;
  selectedFilterPS = "MTD";
  changeDisplay = 0;
  progressValue = 0;
  strokeColor = "red";
  data;
  apiUrl = "https://uat.smartassistapp.in/api/superAdmin/dashbaordNew";
  ngOnInit() {
    (this.selectedTime = "MTD"),
      this.onTimeChange(this.selectedTime),
      this.dashboardService.getKpiData("MTD").subscribe({
        next: (t) => {
          t.status === 200 && (this.kpiData = t.data);
        },
        error: (t) => {
          console.error(t);
        },
      }),
      this.fetchKpiData(),
      (this.currentDisplayCount = this.itemsPerPage),
      (this.selectedFilter = "Today"),
      this.fetchSuperAdminDashboard(this.selectedFilter),
      this.onDropdownChange(),
      this.context.onSideBarClick$.next({
        role: "dashboard",
        pageTitle: "Dashboard",
      }),
      (this.selectedFilter = "Today");
  }
  initializeDisplay() {
    this.currentDisplayCount = this.itemsPerPage;
  }
  toggleShow() {
    this.currentDisplayCount >= this.dealers.length
      ? (this.currentDisplayCount = this.itemsPerPage)
      : (this.currentDisplayCount = Math.min(
          this.dealers.length,
          this.currentDisplayCount + this.incrementSize
        ));
  }
  showLess() {
    this.currentDisplayCount = this.itemsPerPage;
  }
  get canShowMore() {
    return this.currentDisplayCount < this.dealers.length;
  }
  get canShowLess() {
    return this.currentDisplayCount > this.itemsPerPage;
  }
  get isShowingAll() {
    return this.currentDisplayCount >= this.dealers.length;
  }
  get showButtonText() {
    return this.currentDisplayCount >= this.dealers.length
      ? "Show Less"
      : "Show More";
  }
  toggleExpand(t) {
    (this.expandedRows[t] = !this.expandedRows[t]),
      console.log(`Order ${t + 1} expanded:`, this.expandedRows[t]);
  }
  getStrokeColor(t) {
    let e = Number(t);
    return e > 0 ? "#4CAF50" : e < 0 ? "#F44336" : "#9E9E9E";
  }
  toggleCustomDatePicker() {
    this.showCustomDatePicker ||
      ((this.customStartDate = ""), (this.customEndDate = "")),
      (this.showCustomDatePicker = !this.showCustomDatePicker);
  }
  getDealerBackground(t) {
    let e = [
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
      "linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)",
      "linear-gradient(135deg, #fa709a 0%, #fee140 100%)",
      "linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)",
      "linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)",
      "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
      "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
      "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
    ];
    return e[t % e.length];
  }
  getSortedUsers(t) {
    return [...(this.dealerUsers[t] ?? [])].sort((i, o) =>
      i.active && !o.active
        ? -1
        : !i.active && o.active
        ? 1
        : i.user.toLowerCase().localeCompare(o.user.toLowerCase())
    );
  }
  fetchKpiData() {
    let t = sessionStorage.getItem("token") || "";
    this.dashboardService.getKpiData(t).subscribe((e) => {
      e.status === 200 && (this.kpiData = e.data);
    });
  }
  mapTimeToApi(t) {
    switch (t) {
      case "1M":
        return "MTD";
      case "QTD":
        return "QTD";
      case "1Y":
        return "YTD";
      default:
        return "MTD";
    }
  }
  onTimeChange(t) {
    this.selectedTime = t;
    let e = sessionStorage.getItem("authToken");
    if (!e) {
      console.error("No token found in sessionStorage!");
      return;
    }
    let i = this.mapTimeToApi(t);
    this.dashboardService.getDealers(i, e).subscribe((o) => {
      console.log("API Response dealerssssssssssss:", o),
        o.status === 200 && o.data?.dealers
          ? ((this.dealers = o.data.dealers),
            (this.expandedDealer = null),
            (this.selectedDealerId = null))
          : (this.dealers = []);
    });
  }
  ngAfterViewInit() {
    this.totalTestDrives() &&
      this.totalOrders() &&
      this.doughnutChart(this.totalTestDrives(), this.totalOrders());
  }
  onFilterClick(t) {}
  toggleShowAllSMs(t) {
    this.showAllSMs[t] = !this.showAllSMs[t];
  }
  mapFilterToApi(t) {
    switch (t) {
      case "Today":
        return "Today";
      case "Yesterday":
        return "Yesterday";
      case "This Week":
        return "This Week";
      case "Last Week":
        return "Last Week";
      case "This Month":
        return "This month";
      case "Last Month":
        return "Last month";
      case "This Quarter":
        return "This Quarter";
      case "Last Quarter":
        return "Last Quarter";
      case "Last 6 Months":
        return "Last 6 Months";
      case "This Year":
        return "This Year";
      case "Lifetime":
        return "Lifetime";
      case "CUSTOM":
        return "CUSTOM";
    }
  }
  onFilterChange(t) {
    this.selectedFilter = t;
    let e = this.mapFilterToApi(t),
      i = this.activeSM;
    if (e !== "CUSTOM")
      if (this.selectedDealerId) {
        let o = this.selectedDealerId;
        this.dashboardService.getNoSMUsers(o).subscribe({
          next: (r) => {
            let a = r.data.dealerData.find((m) => m.dealerId === o);
            (this.dealerUsers = et(ne({}, this.dealerUsers), {
              [o]: a?.users || [],
            })),
              (this.displayedDealerUsers =
                this.dealerUsers[o]?.slice(0, 10) || []);
            let d = this.dealerSMS[o] || [];
            this.activeSM = d.some((m) => m.sm_id === i) ? i : null;
          },
          error: (r) => {
            console.error("Error fetching dealer users:", r),
              (this.dealerUsers = et(ne({}, this.dealerUsers), { [o]: [] })),
              (this.displayedDealerUsers = []);
          },
        });
      } else
        this.fetchDashboardDataForTopCards(e), this.fetchSuperAdminDashboard(e);
  }
  fetchDealerSMs(t, e, i) {
    let o = sessionStorage.getItem("token");
    if (!o) return;
    let r = new ti({ Authorization: `Bearer ${o}` }),
      a = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?dealer_id=${t}&type=${e}`;
    this.http.get(a, { headers: r }).subscribe({
      next: (d) => {
        (this.dealerSMS[t] =
          d?.status === 200 && d.data?.dealers?.[0]?.user_list
            ? d.data.dealers[0].user_list
            : []),
          i && this.dealerSMS[t].some((m) => m.user_id === i)
            ? (this.activeSM = i)
            : (this.activeSM = null);
      },
      error: (d) => {
        console.error("Failed to fetch SM data:", d),
          (this.dealerSMS[t] = []),
          (this.activeSM = null);
      },
    });
  }
  fetchPS(t, e) {
    let i = sessionStorage.getItem("token");
    if (!i) return;
    let o = new ti({ Authorization: `Bearer ${i}` }),
      r = `https://uat.smartassistapp.in/api/superAdmin/dashbaordNew?type=${this.selectedFilter}&dealer_id=${e}&sm_id=${t}`;
    this.http.get(r, { headers: o }).subscribe({
      next: (a) => {
        this.psData[t] = a?.data?.ps || [];
      },
      error: (a) => {
        console.error("Failed to fetch PS data:", a), (this.psData[t] = []);
      },
    });
  }
  updateProgressAndColor(t) {
    (this.changeDisplay = t),
      (this.progressValue = this.getProgressFromChange(t)),
      (this.strokeColor = this.getStrokeColor(t)),
      this.cdr.detectChanges();
  }
  getProgressFromChange(t) {
    return Math.min((Math.abs(t) / 500) * 100, 100);
  }
  isDealerDataAvailable(t) {
    return t?.dealer_id && this.dealerSMS[t.dealer_id]?.length > 0;
  }
  getDashOffset(t) {
    return 100 - t;
  }
  get totalDealerPages() {
    return Math.ceil(this.dealers.length / this.itemsPerdealerPage);
  }
  goToPage(t) {
    t >= 1 && t <= this.totalDealerPages && (this.currentdealerPage = t);
  }
  getShowingRange() {
    let t = (this.currentdealerPage - 1) * this.itemsPerdealerPage + 1,
      e = Math.min(
        this.currentdealerPage * this.itemsPerdealerPage,
        this.dealers.length
      );
    return `Showing ${t} \u2013 ${e} of ${this.dealers.length} dealers`;
  }
  goBack() {
    (this.selectedSM = null),
      (this.selectedDealer = null),
      (this.selectedDealerId = null);
  }
  getDealerColor(t) {
    return this.dealerColors[t % this.dealerColors.length];
  }
  toggleAccordion(t) {
    this.activeAccordion === t
      ? (this.activeAccordion = null)
      : (this.activeAccordion = t);
  }
  get totalPagesdealer() {
    return Math.ceil(this.dealers.length / this.dealersPerPage);
  }
  prevPage() {
    this.currentPage > 1 && this.currentPage--;
  }
  get paginatedDealerskpi() {
    let t = (this.currentPage - 1) * this.dealersPerPage;
    return this.dealers.slice(t, t + this.dealersPerPage);
  }
  get startEntry() {
    return (this.currentPage - 1) * this.dealersPerPage + 1;
  }
  get endEntry() {
    return Math.min(
      this.currentPage * this.dealersPerPage,
      this.dealers.length
    );
  }
  nextPage() {
    this.currentPage < this.totalPagesdealer && this.currentPage++;
  }
  onPageChange(t) {
    let e = Math.ceil(this.dealers.length / this.itemsPerPage);
    t >= 1 && t <= e && (this.currentPage = t);
  }
  togglePS(t) {
    this.activePS = this.activePS === t ? null : t;
  }
  onDropdownChange() {
    console.log("Dropdown changed:"),
      console.log("selectedCategory:", this.selectedCategory),
      console.log("selectedDuration:", this.selectedDuration),
      this.selectedCategory && this.selectedDuration
        ? (console.log(
            "\u2705 Both dropdowns selected. Proceeding to fetch data..."
          ),
          (this.selectedOption = `${this.selectedCategory}-${this.selectedDuration}`))
        : console.warn(
            "\u26A0\uFE0F One or both dropdowns not selected. Skipping fetch."
          );
  }
  onSMClick(t) {
    (this.selectedSM = t),
      (this.selectedDealer = null),
      (this.currentPage = 1),
      (this.ps1Data = []);
  }
  changeDealerPage(t) {
    let e = this.currentDealerPage + t;
    e >= 1 && e <= this.totalDealerPages && this.goToDealerPage(e);
  }
  goToDealerPage(t) {
    t >= 1 &&
      t <= this.totalDealerPages &&
      ((this.currentDealerPage = t),
      this.updateDealerPagination(),
      this.loadDealersForPage(t));
  }
  updateDealerPagination() {
    let t = (this.currentDealerPage - 1) * this.dealersPerPage + 1,
      e = Math.min(this.currentDealerPage * this.dealersPerPage, 23),
      i = document.getElementById("dealer-range");
    i && (i.textContent = `${t}-${e}`),
      document.querySelectorAll(".pagination-btn").forEach((r, a) => {
        r.textContent === "Previous"
          ? (r.disabled = this.currentDealerPage === 1)
          : r.textContent === "Next"
          ? (r.disabled = this.currentDealerPage === this.totalDealerPages)
          : r.textContent &&
            !isNaN(parseInt(r.textContent)) &&
            r.classList.toggle(
              "active",
              parseInt(r.textContent) === this.currentDealerPage
            );
      });
  }
  loadDealersForPage(t) {
    console.log(`Loading dealers for page ${t}`);
    let e = document.querySelectorAll(".accordion.level-1");
    e.forEach((i) => {
      i.style.opacity = "0.5";
    }),
      setTimeout(() => {
        e.forEach((i) => {
          i.style.opacity = "1";
        });
      }, 300);
  }
  changeTablePage(t, e) {
    console.log(`Changing page for ${t} by ${e}`);
  }
  searchDealer(t) {
    console.log("Searching for:", t);
  }
  autoCollapseOthers(t) {
    document.querySelectorAll(".accordion-content.active").forEach((i) => {
      if (i.id !== `content-${t}`) {
        let o = i.id.replace("content-", "toggle-"),
          r = document.getElementById(o);
        r &&
          r.parentElement &&
          (i.classList.remove("active"),
          r.parentElement.classList.remove("active"),
          (r.textContent = "\u25BC"));
      }
    });
  }
  initializeFilters() {
    document.querySelectorAll('select, input[type="date"]').forEach((e) => {
      e.addEventListener("change", (i) => {
        let o = i.target;
        console.log("Filter changed:", o.value),
          this.handleFilterChange(o.value);
      });
    });
  }
  handleFilterChange(t) {
    console.log("Handling filter change:", t);
  }
  onSearchChange(t) {
    let e = t.target;
    this.searchDealer(e.value);
  }
  fetchSuperAdminDashboard(t = "This month") {
    let e = `https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM?type=${t}`,
      i = sessionStorage.getItem("token");
    if (!i) {
      console.error("No token found in sessionStorage!");
      return;
    }
    let o = new ti({ Authorization: `Bearer ${i}` });
    this.http.get(e, { headers: o }).subscribe({
      next: (r) => {
        if (r?.status === 200 && r.data) {
          (this.kpiData = {
            dealers: r.data.dealers ?? 0,
            activeNetwork: r.data.activeNetwork ?? 0,
            users: r.data.users ?? 0,
            activeUsers: r.data.activeUsers ?? 0,
            leads: r.data.leads ?? 0,
            calls: r.data.calls ?? 0,
          }),
            (this.dealers = r.data.dealerData ?? []),
            console.log(
              this.dealers,
              "this.dealers==========================="
            ),
            (this.originalDealers = [...this.dealers]),
            (this.filteredDealers = [...this.dealers]),
            console.log(
              "Dealers loadeddddddddddddddddd:",
              this.dealers.length,
              this.dealers
            );
          let a = this.dealers.map((M) => M.dealerName),
            d = this.dealers.map((M) => M.callLogs.connected),
            m = this.dealers.map((M) => M.callLogs.declined),
            _ = this.dealers.map((M) => M.callLogs.durationSec),
            v = this.dealers.map((M) => M.callLogs.incoming),
            S = this.dealers.map((M) => M.callLogs.outgoing),
            T = this.dealers.map((M) => M.callLogs.totalCalls);
          this.chartOptions = {
            series: [
              { name: "Total Calls", data: T },
              { name: "Outgoing Calls", data: S },
              { name: "Incoming Calls", data: v },
              { name: "Duration Sec", data: _ },
              { name: "Declined Calls", data: m },
              { name: "Connected Calls", data: d },
            ],
            chart: { type: "line", height: 350, toolbar: { show: !0 } },
            dataLabels: { enabled: !1 },
            stroke: { curve: "smooth", width: 3 },
            title: { text: "Dealer-wise Calls Analysis", align: "center" },
            xaxis: { categories: a, labels: { rotate: -45 } },
          };
        } else
          console.error("Unexpected response:", r),
            (this.dealers = []),
            (this.filteredDealers = []);
      },
      error: (r) => {
        console.error("Super Admin Dashboard API failed:", r),
          (this.dealers = []),
          (this.filteredDealers = []);
      },
    });
  }
  fetchDealers(t) {
    let e = sessionStorage.getItem("token"),
      i = new ti({ Authorization: `Bearer ${e}` }),
      o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/view-activities?type=${t}`;
    this.http.get(o, { headers: i }).subscribe(
      (r) => {
        r?.status === 200 && r.data?.dealerData
          ? ((this.dealers = r.data.dealerData),
            this.dealers.forEach((a) => {
              this.dealerSMS[a.dealer_id] || (this.dealerSMS[a.dealer_id] = []);
            }))
          : (this.dealers = []);
      },
      (r) => {
        console.error("Error fetching dealers:", r), (this.dealers = []);
      }
    );
  }
  applyCustomDate() {
    if (!this.customStartDate || !this.customEndDate) {
      alert("Please select both start and end dates");
      return;
    }
    this.selectedFilter = "CUSTOM";
    let t = this.customStartDate,
      e = this.customEndDate;
    this.fetchDealersWithCustomDate(t, e);
    let i = document.querySelector(".custom-inputs");
    i && i.classList.add("applied");
  }
  resetCustomDate() {
    (this.customStartDate = ""),
      (this.customEndDate = ""),
      (this.selectedFilter = "Today"),
      this.onFilterChange(this.selectedFilter);
    let t = document.querySelector(".custom-inputs");
    t && t.classList.remove("applied");
  }
  formatDuration(t) {
    let e = Math.floor(t / 3600)
        .toString()
        .padStart(2, "0"),
      i = Math.floor((t % 3600) / 60)
        .toString()
        .padStart(2, "0"),
      o = (t % 60).toString().padStart(2, "0");
    return `${e}:${i}:${o}`;
  }
  toggleRow(t, e, i) {
    let o = e.dealerId;
    if (o) {
      if (this.expandedRow === i) {
        this.expandedRow = null;
        return;
      }
      if (((this.expandedRow = i), !this.dealerUsers[o])) {
        let r = sessionStorage.getItem("token");
        this.dashboardService
          .getDealerUsers(o, this.selectedFilter, r)
          .subscribe({
            next: (a) => {
              let d = Array.isArray(a?.data?.dealerData)
                ? a.data.dealerData.find((m) => m.dealerId === o)
                : a?.data?.dealerData;
              if (!d) {
                (this.dealerUsers[o] = []),
                  (this.dealerCallLogs[o] = null),
                  (this.userCallLogs[o] = []);
                return;
              }
              (this.dealerUsers[o] = d.users || []),
                (this.dealerCallLogs[o] = d.callLogs
                  ? {
                      total: d.callLogs.totalCalls,
                      outgoing: d.callLogs.outgoing,
                      incoming: d.callLogs.incoming,
                      connected: d.callLogs.connected,
                      declined: d.callLogs.declined,
                      duration: this.formatDuration(
                        d.callLogs.durationSec || 0
                      ),
                    }
                  : null),
                (this.userCallLogs[o] =
                  d.users?.map((m) => ({
                    userId: m.user_id,
                    name: m.user,
                    role: m.user_role,
                    active: m.active,
                    calls: m.calls
                      ? {
                          total: m.calls.totalCalls,
                          outgoing: m.calls.outgoing,
                          incoming: m.calls.incoming,
                          connected: m.calls.connected,
                          declined: m.calls.declined,
                          duration: this.formatDuration(m.calls.durationSec),
                        }
                      : {
                          total: 0,
                          outgoing: 0,
                          incoming: 0,
                          connected: 0,
                          declined: 0,
                          duration: "0s",
                        },
                  })) || []),
                this.cd.detectChanges(),
                console.log("Mapped User Call Logs:", this.userCallLogs[o]);
            },
            error: (a) => {
              console.error(a),
                (this.dealerUsers[o] = []),
                (this.dealerCallLogs[o] = null),
                (this.userCallLogs[o] = []);
            },
          });
      }
    }
  }
  fetchDealersWithCustomDate(t, e) {
    let i = sessionStorage.getItem("token");
    this.dashboardService.getDealersByCustomDate(t, e, i).subscribe({
      next: (o) => {
        this.ngZone.run(() => {
          (this.dealers = o?.data?.dealers || []), this.cdr.detectChanges();
        });
      },
      error: (o) => {
        console.error(o),
          this.ngZone.run(() => {
            this.dealers = [];
          });
      },
    });
  }
  updatePaginatedDealers() {
    this.paginatedDealers = this.dealers.slice(0, this.currentDisplayCount);
  }
  onDealerClick(t) {
    if (this.selectedDealerId === t) {
      this.selectedDealerId = null;
      return;
    }
    if (((this.selectedDealerId = t), !this.dealerSMS[t])) {
      this.loadingSM = !0;
      let e = `https://uat.smartassistapp.in/api/superAdmin/dashboard/view-activities?type=${this.selectedFilter}&dealer_id=${t}`,
        i = sessionStorage.getItem("token"),
        o = new ti({ Authorization: `Bearer ${i}` });
      this.http.get(e, { headers: o }).subscribe({
        next: (r) => {
          r?.status === 200 && r.data?.sms
            ? (this.dealerSMS[t] = r.data.sms)
            : (this.dealerSMS[t] = []),
            (this.loadingSM = !1);
        },
        error: (r) => {
          console.error("Failed to fetch SM data:", r),
            (this.dealerSMS[t] = []),
            (this.loadingSM = !1);
        },
      });
    }
  }
  avatarColors = [
    { background: "#E2E0F5", color: "#4B3C9B" },
    { background: "#D1F8F2", color: "#008B7F" },
    { background: "#FFD6D6", color: "#C62828" },
    { background: "#D6FFD6", color: "#2E7D32" },
    { background: "#D6E6FF", color: "#2962FF" },
    { background: "#FFE6FF", color: "#AD1457" },
  ];
  getAvatarStyle(t) {
    let e = this.avatarColors[t % this.avatarColors.length];
    return {
      width: "60px",
      height: "60px",
      margin: "0 auto 12px auto",
      borderRadius: "50%",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      fontWeight: "600",
      fontSize: "24px",
      background: e.background,
      color: e.color,
    };
  }
  isLastRow(t) {
    let e = Math.floor(window.innerWidth / 160),
      i = Math.ceil(this.ps1Data.length / e);
    return Math.floor(t / e) + 1 === i;
  }
  getAvatarColor(t) {
    let e = [
      { background: "#E2E0F5", text: "#4B3C9B" },
      { background: "#C4FEFB", text: "#007A78" },
      { background: "#FED1CF", text: "#C9302C" },
      { background: "#E3FFDF", text: "#3E8E41" },
      { background: "#CFDFFE", text: "#2C4DB2" },
      { background: "#FFEDFE", text: "#AF4C96" },
      { background: "#EAD1DC", text: "#9C2550" },
      { background: "#FFF2CC", text: "#B58900" },
      { background: "#D9EAD3", text: "#3B7A2A" },
      { background: "#F4CCCC", text: "#990000" },
      { background: "#F3F3F3", text: "#4D4D4D" },
      { background: "#FFE6F0", text: "#C2185B" },
    ];
    return e[t % e.length];
  }
  onPSCardClick(t) {
    console.log("Clicked PS ID:", t);
  }
  fetchPS1Data() {
    if (!this.selectedSM || !this.selectedDealerId) {
      console.warn("SM or Dealer not selected");
      return;
    }
    this.loadingPS = !0;
    let t = this.selectedFilter,
      e = "https://uat.smartassistapp.in/api/superAdmin/dashbaordNew",
      i = this.selectedDealerId,
      o = this.selectedSM.sm_id,
      r = `${e}?type=${t}&dealer_id=${i}&sm_id=${o}`,
      a = sessionStorage.getItem("token");
    if (!a) {
      console.error("No token found in sessionStorage"), (this.loadingPS = !1);
      return;
    }
    let d = new ti().set("Authorization", `Bearer ${a}`);
    this.http.get(r, { headers: d }).subscribe({
      next: (m) => {
        let _ = m?.data?.ps;
        Array.isArray(_)
          ? (this.ps1Data = _.map((v) => ({
              ps_id: v.ps_id,
              ps_name: `${v.ps_fname} ${v.ps_lname}`,
              enquiries: v.enquiries,
              testDrives: v.testDrives,
              orders: v.orders,
              cancellations: v.cancellation,
              netOrders: v.net_orders,
              retail: v.retail,
            })))
          : (console.warn("No PS data found in API response"),
            (this.ps1Data = [])),
          (this.loadingPS = !1);
      },
      error: (m) => {
        console.error("Error fetching PS1 data:", m),
          (this.ps1Data = []),
          (this.loadingPS = !1);
      },
    });
  }
  get paginatedPs1Data() {
    let t = (this.currentPage - 1) * this.pageSize,
      e = t + this.pageSize;
    return this.ps1Data.slice(t, e);
  }
  get totalPs1Pages() {
    return Math.ceil(this.ps1Data.length / this.pageSize);
  }
  formatChangeValue(t) {
    return t === 0 || Object.is(t, -0) ? "0%" : t > 0 ? `+${t}%` : `${t}%`;
  }
  getChangeColor(t) {
    return t > 0 ? "text-success" : (t < 0, "text-danger");
  }
  showMore() {
    (this.currentDisplayCount += this.itemsPerPage),
      this.updateDisplayedDealers();
  }
  showMoreVisible = !0;
  showMoreTable1() {
    let t =
      this.selectedDealers.length > 0 ? this.selectedDealers : this.dealers;
    this.table1Length < t.length && (this.table1Length += 5);
  }
  showLessTable1() {
    this.table1Length = 5;
  }
  showMoreTable2() {
    let t = this.dealers;
    this.table2Length < t.length && (this.table2Length += 5);
  }
  showLessTable2() {
    this.table2Length = 5;
  }
  dealerEngagementView(t) {
    this.dealerSummaryCallsViewType = t;
  }
  updateDisplayedDealers() {
    (this.displayedDealers = this.dealers.slice(0, this.itemsToShow)),
      (this.showMoreVisible = this.itemsToShow < this.dealers.length);
  }
  fetchDashboardData(t = "MTD") {
    let e = sessionStorage.getItem("token");
    if (!e) {
      console.error("Token not found!");
      return;
    }
    let i = new ti().set("Authorization", `Bearer ${e}`),
      o = `https://uat.smartassistapp.in/api/superAdmin/dashboard/view-activities?type=${t}`;
    this.http.get(o, { headers: i }).subscribe({
      next: (r) => {
        console.log(`API response for type=${t}:`, r);
        let a = r?.data || {},
          d = (m) =>
            typeof m == "string"
              ? parseFloat(m.replace("%", "").trim())
              : Number(m) || 0;
        if (
          ((this.currentLeads = Number(a.current) || 0),
          (this.previousLeads = Number(a.previous) || 0),
          (this.changeDisplay = d(a.change)),
          (this.currentTestDrives = Number(a.currentTestDrives) || 0),
          (this.previousTestDrives = Number(a.previousTestDrives) || 0),
          (this.testDriveChange = d(a.testDriveChange)),
          (this.currentOrders = Number(a.currentOrders) || 0),
          (this.previousOrders = Number(a.previousOrders) || 0),
          (this.orderChange = d(a.orderChange)),
          (this.progressValue = Math.abs(this.changeDisplay)),
          (this.strokeColor = this.getStrokeColor(this.changeDisplay)),
          (this.testDriveProgressValue = Math.abs(this.testDriveChange)),
          (this.testDriveStrokeColor = this.getStrokeColor(
            this.testDriveChange
          )),
          (this.orderProgressValue = Math.abs(this.orderChange)),
          (this.orderStrokeColor = this.getStrokeColor(this.orderChange)),
          console.log("\u2705 Final Parsed Data:", {
            leads: {
              current: this.currentLeads,
              previous: this.previousLeads,
              change: this.changeDisplay,
            },
            testDrives: {
              current: this.currentTestDrives,
              previous: this.previousTestDrives,
              change: this.testDriveChange,
            },
            orders: {
              current: this.currentOrders,
              previous: this.previousOrders,
              change: this.orderChange,
            },
          }),
          a.kpi)
        ) {
          let m = Number(a.kpi.totalTestDrives) || 0,
            _ = Number(a.kpi.totalOrders) || 0;
          (m > 0 || _ > 0) &&
            console.log("\u{1F4CA} Creating Doughnut Chart with:", {
              totalTestDrives: m,
              totalOrders: _,
            });
        }
      },
      error: (r) => {
        console.error("Dashboard API error:", r);
      },
    });
  }
  initLineChart() {
    let t = document.getElementById("enquiryLineChart");
    new zd(t, {
      type: "line",
      data: {
        labels: ["Jan", "Feb", "Mar", "Apr"],
        datasets: [
          {
            data: [3, 5, 7, 4],
            borderColor: "#4CAF50",
            tension: 0.4,
            pointRadius: 0,
            borderWidth: 2,
          },
        ],
      },
      options: {
        responsive: !0,
        plugins: { legend: { display: !1 }, tooltip: { enabled: !0 } },
        scales: { x: { display: !1 }, y: { display: !1 } },
      },
    });
  }
  fetchData() {
    this.http
      .get("https://uat.smartassistapp.in/api/superAdmin/dashbaordNew")
      .subscribe(
        (t) => {
          console.log("API Response:", t),
            t?.data
              ? ((this.data = t.data),
                console.log("Data after assignment:", this.data))
              : console.error("No data in response:", t);
        },
        (t) => {
          console.error("Error fetching data:", t);
        }
      );
  }
  getLeadChange() {
    return (
      console.log("Data:", this.data),
      console.log("Lead Change:", this.data?.leads?.change),
      this.data?.leads?.change ? this.data.leads.change : 0
    );
  }
  getChangePercentage() {
    return this.data?.leads?.change || 0;
  }
  getLeadPercentageChange() {
    return (
      console.log(this.dashboardData),
      console.log(this.dashboardData?.leads?.change),
      this.dashboardData?.leads?.change || 0
    );
  }
  sortData(t) {
    this.sortColumn !== t
      ? ((this.sortColumn = t), (this.sortDirection = "desc"))
      : this.sortDirection === "desc"
      ? (this.sortDirection = "asc")
      : this.sortDirection === "asc" && (this.sortDirection = "default"),
      this.sortDirection === "default"
        ? ((this.dealers = [...this.originalDealers]), (this.sortColumn = null))
        : this.dealers.sort((e, i) => {
            let o = e[t] ?? 0,
              r = i[t] ?? 0;
            return this.sortDirection === "asc" ? o - r : r - o;
          });
  }
  fetchDashboardDataForTopCards(t) {
    let e = sessionStorage.getItem("token") || "",
      i = "https://uat.smartassistapp.in/api/superAdmin/dashboard/NoSM";
    t === "CUSTOM" && this.customStartDate && this.customEndDate
      ? (i += `?startDate=${this.customStartDate}&endDate=${this.customEndDate}`)
      : t !== "CUSTOM" && (i += `?type=${t}`),
      this.http
        .get(i, { headers: { Authorization: `Bearer ${e}` } })
        .subscribe({
          next: (o) => {
            o.status === 200 &&
              ((this.kpiData = o.data), (this.dealers = o.data.dealerData));
          },
          error: (o) => {
            console.error("Error fetching dealer data:", o),
              (this.dealers = []);
          },
        });
  }
  filterDealers() {
    let t = this.dealerSearch.toLowerCase();
    if (!t) {
      this.filteredDealers = [...this.dealers];
      return;
    }
    this.filteredDealers = this.dealers.filter((e) =>
      e.dealerName?.toLowerCase().includes(t)
    );
  }
  toggleDropdown() {
    (this.dropdownOpen = !this.dropdownOpen),
      this.dropdownOpen && (this.filteredDealers = [...this.dealers]);
  }
  areAllSelected() {
    return (
      this.filteredDealers.length > 0 &&
      this.filteredDealers.every((t) => this.isDealerSelected(t))
    );
  }
  toggleSelectAll(t) {
    t.target.checked
      ? this.filteredDealers.forEach((i) => {
          this.isDealerSelected(i) || this.toggleDealerSelection(i);
        })
      : this.filteredDealers.forEach((i) => {
          this.isDealerSelected(i) && this.toggleDealerSelection(i);
        });
  }
  clearSelection() {
    this.selectedDealers = [];
  }
  selectDealer(t) {
    (this.selectedDealer = t),
      (this.dealerSearch = ""),
      (this.dropdownOpen = !1),
      this.fetchSuperAdminDashboard("MTD");
  }
  clickOutside(t) {
    this.dropdownOpen &&
      (t.target.closest(".dropdown-toggle") || (this.dropdownOpen = !1));
  }
  isDealerSelected(t) {
    return this.selectedDealers.some((e) => e.dealerId === t.dealerId);
  }
  toggleDealerSelection(t) {
    let e = this.selectedDealers.findIndex((i) => i.dealerId === t.dealerId);
    e > -1 ? this.selectedDealers.splice(e, 1) : this.selectedDealers.push(t);
  }
  exportToCSV() {
    if (
      (console.log("Export clicked", this.dealers),
      !this.dealers || this.dealers.length === 0)
    ) {
      console.warn("No dealers to export");
      return;
    }
    let t = [
        "Dealer",
        "Total Users",
        "Active Users",
        "Leads (Total)",
        "Leads (sync to CXP)",
        "Leads (sync to ICS)",
        "Follow-ups (Total)",
        "Follow-ups Open",
        "Follow-ups Closed",
        "Follow-ups (sync to CXP)",
        "Test Drives (Total)",
        "Test Drives Closed",
        "Test Drives (sync to CXP)",
      ],
      e = this.dealers.map((d) => [
        `"${d.dealerName}"`,
        d.totalUsers,
        d.activeUsers,
        d.totalLeads,
        d.cxpLeads,
        d.icsLeads,
        d.totalFollowUps,
        d.openFollowUps,
        d.closedFollowUps,
        d.cxpFollowUps,
        d.totalTestDrives,
        d.closedTestDrives,
        d.cxpTestDrives,
      ]),
      i = [t.join(","), ...e.map((d) => d.join(","))].join(`
`),
      o = new Blob([i], { type: "text/csv;charset=utf-8;" }),
      r = URL.createObjectURL(o),
      a = document.createElement("a");
    (a.href = r),
      (a.download = "dealer_summary.csv"),
      (a.style.display = "none"),
      document.body.appendChild(a),
      a.click(),
      document.body.removeChild(a),
      URL.revokeObjectURL(r);
  }
  exportUserCallLogsToCSV() {
    if (
      (console.log("Export User Call Logs clicked", this.dealers),
      !this.dealers || this.dealers.length === 0)
    ) {
      console.warn("No dealers to export");
      return;
    }
    let t = [
        "Dealer",
        "User",
        "Role",
        "Active",
        "Total Calls",
        "Outgoing",
        "Incoming",
        "Connected",
        "Declined",
        "Duration",
      ],
      e = [],
      i = this.dealers.map((o) => {
        if (this.userCallLogs[o.dealerId]?.length)
          return Promise.resolve({
            dealer: o,
            users: this.userCallLogs[o.dealerId],
          });
        let r = sessionStorage.getItem("token");
        return this.dashboardService
          .getDealerUsers(o.dealerId, this.selectedFilter, r)
          .toPromise()
          .then((a) => {
            let m =
              (Array.isArray(a?.data?.dealerData)
                ? a.data.dealerData.find((_) => _.dealerId === o.dealerId)
                : a?.data?.dealerData
              )?.users?.map((_) => ({
                userId: _.user_id,
                name: _.user,
                role: _.user_role,
                active: _.active,
                calls: _.calls
                  ? {
                      total: _.calls.totalCalls,
                      outgoing: _.calls.outgoing,
                      incoming: _.calls.incoming,
                      connected: _.calls.connected,
                      declined: _.calls.declined,
                      duration: this.formatDuration(_.calls.durationSec),
                    }
                  : {
                      total: 0,
                      outgoing: 0,
                      incoming: 0,
                      connected: 0,
                      declined: 0,
                      duration: "0s",
                    },
              })) || [];
            return (this.userCallLogs[o.dealerId] = m), { dealer: o, users: m };
          })
          .catch(() => ({ dealer: o, users: [] }));
      });
    Promise.all(i).then((o) => {
      o.forEach(({ dealer: _, users: v }) => {
        v.forEach((S) => {
          e.push([
            `"${_.dealerName}"`,
            `"${S.name}"`,
            `"${S.role}"`,
            S.active ? "Active" : "Inactive",
            S.calls?.total || 0,
            S.calls?.outgoing || 0,
            S.calls?.incoming || 0,
            S.calls?.connected || 0,
            S.calls?.declined || 0,
            `"${S.calls?.duration || "0s"}"`,
          ]);
        });
      });
      let r = [t.join(","), ...e.map((_) => _.join(","))].join(`
`),
        a = new Blob([r], { type: "text/csv;charset=utf-8;" }),
        d = URL.createObjectURL(a),
        m = document.createElement("a");
      (m.href = d),
        (m.download = "dealer_calls.csv"),
        (m.style.display = "none"),
        document.body.appendChild(m),
        m.click(),
        document.body.removeChild(m),
        URL.revokeObjectURL(d);
    });
  }
  static ɵfac = function (e) {
    return new (e || n)(
      B($t),
      B(Xe),
      B(Wi),
      B(yi),
      B(ll),
      B(cl),
      B(Oe),
      B(Xe),
      B(ke)
    );
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-dashboard"]],
    viewQuery: function (e, i) {
      if ((e & 1 && Dt(J1, 5), e & 2)) {
        let o;
        rt((o = at())) && (i.chart = o.first);
      }
    },
    hostBindings: function (e, i) {
      e & 1 &&
        F(
          "click",
          function (r) {
            return i.clickOutside(r);
          },
          !1,
          Kh
        );
    },
    standalone: !0,
    features: [re],
    decls: 1,
    vars: 1,
    consts: [
      ["noDealers", ""],
      [4, "ngIf"],
      [
        1,
        "header2",
        2,
        "border-radius",
        "7px",
        "padding",
        "10px",
        "margin-top",
        "1rem",
        3,
        "ngClass",
      ],
      [2, "display", "inline-flex"],
      [1, "dropdown", 2, "margin-right", "5px"],
      ["type", "button", 1, "time-dropdown", "dropdown-toggle", 3, "click"],
      ["class", "dropdown-menu show", 4, "ngIf"],
      [
        1,
        "time-dropdown",
        2,
        "margin-right",
        "5px",
        3,
        "ngModelChange",
        "change",
        "ngModel",
      ],
      ["value", "Today"],
      ["value", "Yesterday"],
      ["value", "This Week"],
      ["value", "Last Week"],
      ["value", "This Month"],
      ["value", "Last Month"],
      ["value", "This Quarter"],
      ["value", "Last Quarter"],
      ["value", "Last 6 Months"],
      ["value", "This Year"],
      ["value", "Lifetime"],
      ["value", "CUSTOM"],
      ["class", "custom-inputs", 4, "ngIf"],
      [1, "content-section", "active", 2, "margin-bottom", "2rem"],
      [1, "main-content"],
      [1, "kpi-section"],
      [1, "kpi-card"],
      [1, "kpi-label"],
      [1, "kpi-value", 2, "color", "black"],
      [1, "kpi-secondary"],
      [1, "kpi-highlight"],
      [1, "table-section"],
      [1, "table-header"],
      [1, "table-title"],
      [1, "table-subtitle"],
      [1, "table-actions", "flex", "items-center", "gap-2"],
      ["type", "button", 1, "btn", "btn-small", "btn-secondary", 3, "click"],
      [1, "icon-download"],
      [1, "table-container"],
      [1, "table-scroll"],
      [1, "data-table"],
      [1, "table-thead"],
      [1, "th-right"],
      [1, "th-right", 2, "cursor", "pointer", 3, "click"],
      [4, "ngFor", "ngForOf"],
      [
        "type",
        "button",
        "style",
        "margin: 0.5rem; float: right;",
        "class",
        "btn btn-primary",
        3,
        "click",
        4,
        "ngIf",
      ],
      [
        "type",
        "button",
        "style",
        "margin: 0.5rem; float: right;",
        "class",
        "btn btn-secondary",
        3,
        "click",
        4,
        "ngIf",
      ],
      [1, "table-actions"],
      [1, "nav-button-group", 2, "margin-left", "10px"],
      [1, "nav-button", 3, "click", "ngClass"],
      [1, "fas", "fa-table", 2, "margin-right", "6px", "font-size", "15px"],
      [1, "fas", "fa-chart-line", 2, "margin-right", "8px"],
      [1, "btn", "btn-small", "btn-secondary", 3, "click"],
      ["class", "table-container", 4, "ngIf"],
      [
        "class",
        "chart-container",
        "style",
        "min-height:400px; padding:20px; background:white; border-radius:10px;",
        4,
        "ngIf",
      ],
      [1, "dropdown-menu", "show"],
      [1, "px-2", "py-1"],
      [
        "type",
        "text",
        "placeholder",
        "Search dealers...",
        1,
        "form-control",
        3,
        "ngModelChange",
        "input",
        "click",
        "ngModel",
      ],
      [
        1,
        "d-flex",
        "justify-content-between",
        "align-items-center",
        "px-2",
        "py-1",
        "border-bottom",
      ],
      [1, "mb-0", "d-flex", "align-items-center", 3, "click"],
      ["type", "checkbox", 1, "me-2", 3, "change", "checked"],
      [
        "type",
        "button",
        1,
        "btn",
        "btn-link",
        "btn-sm",
        "text-danger",
        "p-0",
        "ms-auto",
        2,
        "margin-left",
        "160px",
        3,
        "click",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "class",
        "dropdown-item d-flex align-items-center",
        3,
        "click",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "dropdown-item", "d-flex", "align-items-center", 3, "click"],
      [
        "type",
        "checkbox",
        1,
        "me-2",
        2,
        "border",
        "1px solid black",
        3,
        "change",
        "checked",
      ],
      [1, "dropdown-item", "text-muted", "text-center"],
      [1, "custom-inputs"],
      [
        "type",
        "date",
        "placeholder",
        "Start Date",
        1,
        "custom-date",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [
        "type",
        "date",
        "placeholder",
        "End Date",
        1,
        "custom-date",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "apply-btn", 3, "click"],
      [1, "reset-btn", 3, "click"],
      ["class", "table-row", 4, "ngIf"],
      ["class", "sub-row", 4, "ngIf"],
      [1, "table-row"],
      [1, "td-right"],
      [1, "expand-btn", 3, "click"],
      [1, "arrow"],
      [1, "td-right", 2, "color", "#222fb9"],
      [1, "td-right", 3, "ngStyle"],
      [1, "sub-row"],
      ["colspan", "18", 1, "sub-row-content"],
      [1, "sub-row-inner"],
      [1, "sub-row-title", 2, "text-align", "left"],
      [1, "sub-table-container"],
      [1, "sub-table-scroll"],
      [1, "sub-table"],
      [1, "sub-table-thead"],
      [2, "text-align", "left"],
      [1, "td-center"],
      [1, "chip", 3, "ngClass"],
      ["colspan", "14", 1, "td-center"],
      [
        "type",
        "button",
        1,
        "btn",
        "btn-primary",
        2,
        "margin",
        "0.5rem",
        "float",
        "right",
        3,
        "click",
      ],
      [
        "type",
        "button",
        1,
        "btn",
        "btn-secondary",
        2,
        "margin",
        "0.5rem",
        "float",
        "right",
        3,
        "click",
      ],
      [1, "data-table", "calls-table"],
      [1, "sticky-col-header", "th-left", 2, "width", "18%"],
      [1, "th-right", "th-rounded-right"],
      [
        2,
        "display",
        "flex",
        "justify-content",
        "flex-end",
        "gap",
        "0.5rem",
        "margin-top",
        "0.5rem",
      ],
      ["type", "button", "class", "btn btn-primary", 3, "click", 4, "ngIf"],
      ["type", "button", "class", "btn btn-secondary", 3, "click", 4, "ngIf"],
      [1, "sticky-col", "td-font-medium"],
      ["colspan", "7"],
      [1, "sub-user-table-scroll"],
      [1, "sub-table", "calls-sub-table"],
      [2, "text-align", "left", "width", "15%"],
      ["colspan", "7", 2, "text-align", "center", "font-style", "italic"],
      ["type", "button", 1, "btn", "btn-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-secondary", 3, "click"],
      [
        1,
        "chart-container",
        2,
        "min-height",
        "400px",
        "padding",
        "20px",
        "background",
        "white",
        "border-radius",
        "10px",
      ],
      ["id", "chart"],
      [3, "series", "chart", "xaxis", "stroke", "dataLabels", "title"],
    ],
    template: function (e, i) {
      e & 1 && k(0, By, 172, 51, "ng-container", 1),
        e & 2 && y("ngIf", !i.selectedDealer && !i.selectedSM);
    },
    dependencies: [
      De,
      It,
      Bt,
      Ke,
      sr,
      ap,
      hs,
      it,
      ni,
      oi,
      Yt,
      zi,
      ii,
      Oi,
      Rf,
      Kp,
      qp,
    ],
    styles: [
      '.wrapper[_ngcontent-%COMP%]{display:flex}.table-responsive[_ngcontent-%COMP%]{overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}.content-body[_ngcontent-%COMP%]{overflow-x:auto;padding:20px;flex-grow:1}.card-header[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;align-items:center}.card-header[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%]{margin-left:10px}.card[_ngcontent-%COMP%]{border-radius:6px!important}.custom-btn[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;border:none;padding:8px 16px;font-size:14px;border-radius:4px;transition:background-color .3s,color .3s}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#007bff;color:#fff}#dataTable[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], #dataTable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border:none!important}#doughnutChart[_ngcontent-%COMP%]{max-width:100%;max-height:100%}.progress-circle[_ngcontent-%COMP%]{--size: 50px;--progress: 70%;--color: #28a745;width:var(--size);height:var(--size);border-radius:50%;background:conic-gradient(var(--color) var(--progress),#e6e6e6 0);display:flex;align-items:center;justify-content:center;position:relative}.custom-btn[_ngcontent-%COMP%]{border:none;background-color:#f0f0f0;padding:8px 20px;border-radius:20px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.custom-btn[_ngcontent-%COMP%]:hover{background-color:#dcdcdc}.selected-btn[_ngcontent-%COMP%]{background-color:#1e88e5!important;color:#fff!important}.circle-text[_ngcontent-%COMP%]{font-weight:700;color:#333}.position-absolute[_ngcontent-%COMP%]{position:absolute}.circular-chart[_ngcontent-%COMP%]{transition:transform .3s ease}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.5rem;font-weight:700;color:#4caf50;opacity:1}.circular-chart[_ngcontent-%COMP%]   .circle-fill[_ngcontent-%COMP%]{transition:stroke-dasharray 1s ease-out}.progress-count[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1.2rem;font-weight:700}.tooltip-content[_ngcontent-%COMP%]{position:absolute;bottom:110%;left:50%;transform:translate(-50%);background-color:#333;color:#fff;padding:6px 10px;border-radius:5px;white-space:nowrap;font-size:13px;z-index:10;opacity:0;pointer-events:none;transition:opacity .3s ease}.tooltip-content[_ngcontent-%COMP%]:after{content:"";position:absolute;top:100%;left:50%;transform:translate(-50%);border-width:5px;border-style:solid;border-color:#333 transparent transparent transparent}.tooltip-container[_ngcontent-%COMP%]:hover   .tooltip-content[_ngcontent-%COMP%]{opacity:1}.no-scrollbar[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch;scrollbar-width:none}.no-scrollbar[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}@media (min-width: 992px) and (max-width: 1250px){.tooltip-container[_ngcontent-%COMP%]{right:15px!important;width:83px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:80px!important;height:80px!important}.tooltip-container[_ngcontent-%COMP%]   .tooltip-content[_ngcontent-%COMP%]{font-size:.85rem}#num[_ngcontent-%COMP%]{right:-53px}.tooltip-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{font-size:1.1rem;padding:10px!important}}@media screen and (width: 1024px) and (height: 1366px){.content-body[_ngcontent-ng-c826715629][_ngcontent-%COMP%]{margin-left:0!important}}.tooltip-container[_ngcontent-%COMP%]{top:18%}@media screen and (min-width: 1024px) and (max-width: 1366px){#first[_ngcontent-%COMP%]{top:10px!important}#sec[_ngcontent-%COMP%], #third[_ngcontent-%COMP%]{top:49%!important}}.custom-btn[_ngcontent-%COMP%]{background:transparent;border:none;padding:6px 16px;font-weight:500;cursor:pointer;transition:all .2s ease-in-out}.custom-btn[_ngcontent-%COMP%]:hover{color:#222fb9}.selected-btn[_ngcontent-%COMP%]{background:#222fb9;color:#fff;border-radius:6px}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:6px;margin-top:20px;font-family:Poppins,sans-serif}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;background-color:#fff;border:1px solid #d4d4d8;border-radius:6px;cursor:pointer;transition:all .2s ease;box-shadow:0 1px 3px #0000000d}.back-arrow[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:24px;cursor:pointer;color:#333;transition:transform .2s ease}.back-arrow[_ngcontent-%COMP%]:hover{transform:scale(1.1);color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:600;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{background-color:#f1f1f1;color:#ccc;border-color:#e5e5e5;cursor:not-allowed}.sm-card[_ngcontent-%COMP%]{background:#fff;border-radius:12px;box-shadow:0 2px 8px #00000014;padding:20px 16px;text-align:center;font-family:Poppins,sans-serif;transition:transform .2s ease,box-shadow .2s ease}.sm-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 4px 12px #0000001f}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:none!important;border-bottom:1px solid #ccc!important}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto;font-family:Poppins,sans-serif}.header[_ngcontent-%COMP%]{background-color:#fff;color:#000;padding:1rem;display:flex;justify-content:space-between;align-items:center;margin-top:50px!important}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:1rem}.nav-button[_ngcontent-%COMP%]{background:none;border:none;color:#fff;padding:5px 11px!important;border-radius:4px;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#fff;color:#06c;font-weight:500}.nav-button[_ngcontent-%COMP%]:hover{background-color:#fff;color:#06c}.nav-button[_ngcontent-%COMP%]{color:#000}.nav-button[_ngcontent-%COMP%]:hover{background-color:#00f;color:#fff}.metrics-container[_ngcontent-%COMP%]{background-color:#e6e6e6;padding:1.5rem;border-radius:8px;box-shadow:0 2px 4px #0000000d;margin-bottom:1.5rem;position:relative}.dashboard-section[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;width:100%;max-width:100%}.card[_ngcontent-%COMP%]{width:100%;box-shadow:0 1px 5px #0000001a;border-radius:8px;padding:16px;background:#fff}.metrics-grid[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:20px;align-items:flex-start}.filters-container[_ngcontent-%COMP%]{width:290px;min-width:200px;flex-shrink:0;margin-left:30px}.filter-section[_ngcontent-%COMP%]{background-color:#fff}.dealer-block[_ngcontent-%COMP%]{background:transparent!important;margin-bottom:10px}.dashboard-container[_ngcontent-%COMP%]{background:transparent!important}.metric-box[_ngcontent-%COMP%]{background-color:#fff;padding:1rem;border-radius:15px;text-align:center;box-shadow:0 1px 3px #0000001a;height:130px;display:flex;width:150px;flex-direction:column;justify-content:center;align-items:center}.metric-value[_ngcontent-%COMP%]{font-size:2rem;font-weight:700;color:#06c;margin-bottom:.5rem}.metric-label[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.filters-panel[_ngcontent-%COMP%]{background-color:#e5e5e5;padding:.75rem;border-radius:8px}.filters-title[_ngcontent-%COMP%]{text-align:center;font-size:.9rem;font-weight:600}.time-filters[_ngcontent-%COMP%]{display:flex;margin-bottom:.5rem}.select-container[_ngcontent-%COMP%]{position:relative}.sm-select[_ngcontent-%COMP%]{width:100%;padding:.35rem .75rem;border:1px solid #ccc;border-radius:4px;appearance:none;font-size:.85rem}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:.6rem;color:#666}.performance-panels[_ngcontent-%COMP%]{gap:1.5rem}.person-info[_ngcontent-%COMP%]{background-color:#f9f9f9;padding:14px;border-radius:6px;box-shadow:0 2px 5px #0000001a;width:fit-content;margin-bottom:16px}.person-n[_ngcontent-%COMP%]   .panel-title[_ngcontent-%COMP%]{text-align:center;font-size:1.8rem;font-weight:500;margin-bottom:1rem;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{margin-top:-190px;display:flex;align-items:center;justify-content:center;color:#999}.performance-panels[_ngcontent-%COMP%]{display:flex;gap:3.5rem;box-sizing:border-box}@media (max-width: 1024px) and (min-width: 768px){.performance-panels[_ngcontent-%COMP%]{display:block!important;gap:0!important}}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{pointer-events:none;display:none;position:fixed;left:-100%}.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)!important}}.performance-panel[_ngcontent-%COMP%]{flex:1;background-color:#e6e6e6}.avatar[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:50%;background-color:#e0e0e0;display:flex;align-items:center;justify-content:center;font-size:24px;color:#888}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;margin:0;padding:0}.dashboard-container[_ngcontent-%COMP%]{width:100%;margin:0 auto;position:relative}.header[_ngcontent-%COMP%]{background-color:#f5f5f5;padding:15px;top:0;width:100%;max-width:1540px;z-index:100;box-shadow:0 2px 5px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#eee;cursor:pointer;border-radius:4px}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{vertical-align:middle}.content-section[_ngcontent-%COMP%]{margin-top:20px}.nav-button[_ngcontent-%COMP%]:hover{background-color:gray}.main-content[_ngcontent-%COMP%]{background-color:#f9f9f9}[_nghost-%COMP%]     .header{position:static!important}[_nghost-%COMP%]     .header{width:100%!important;max-width:100%!important;transition:width .3s ease,margin-left .3s ease!important;z-index:auto!important}.metrics-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:15px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:24px;font-weight:700;color:#fff}.header[_ngcontent-%COMP%]{transition:width .3s ease!important;transition:width .3s ease,margin-left .3s ease!important}.metric-label[_ngcontent-%COMP%]{font-size:14px;color:#666;margin-top:5px}.filters-container[_ngcontent-%COMP%]{grid-column:1 / -1;margin-top:15px}.filters-panel[_ngcontent-%COMP%]{background-color:#f9f9f9;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a}.filters-title[_ngcontent-%COMP%]{font-weight:700}.time-filters[_ngcontent-%COMP%]{display:flex;gap:0px;margin-bottom:10px}.filter-button[_ngcontent-%COMP%]{padding:5px 10px;border:none;background-color:#fff;border-radius:4px;cursor:pointer}.filter-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;border-color:#222fb9}.select-container[_ngcontent-%COMP%]{position:relative;width:200px}.sm-select[_ngcontent-%COMP%]{width:100%;padding:8px;border-radius:4px;border:1px solid #ddd;appearance:none}.performance-panels[_ngcontent-%COMP%]{margin-top:20px}.performance-panel[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;box-shadow:0 2px 5px #0000001a;padding:15px}.panel-title[_ngcontent-%COMP%]{font-size:30px!important;margin-top:0;margin-bottom:15px;padding-bottom:10px;font-weight:500;font-family:Poppins,sans-serif}.panel-content[_ngcontent-%COMP%]{min-height:300px}table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.content-section[_ngcontent-%COMP%]{display:none}.content-section.active[_ngcontent-%COMP%]{display:block}.nav-button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#f0f0f0;cursor:pointer}.nav-button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.table-striped[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-of-type(odd){--bs-table-accent-bg: transparent !important}table.table-striped[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd){background-color:red!important}.team-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;background-color:#fff;border-radius:10px;padding:15px 25px;gap:15px}.team-name[_ngcontent-%COMP%]{font-size:17px;color:#000;white-space:nowrap;font-weight:500;font-family:Poppins,sans-serif}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:8px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:4px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.metrics-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;justify-content:flex-end;flex:1}.metric-card[_ngcontent-%COMP%]{display:flex;align-items:center;padding:8px 12px;border-radius:22px;font-size:.85em;font-weight:600;color:#333;text-align:center;box-shadow:0 0 12px #0000001a;flex-shrink:0;height:50px}.metric-card[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:6px;font-size:1em}.metric-value[_ngcontent-%COMP%]{font-weight:700;margin-left:10px}@media (max-width: 768px){.team-container[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.metrics-wrapper[_ngcontent-%COMP%]{justify-content:flex-start}}.back-button[_ngcontent-%COMP%]{margin-right:15px;cursor:pointer;color:#fff;font-size:20px}.nav-button[_ngcontent-%COMP%]{background-color:#fff;color:#000;border:none;border-radius:4px;padding:5px 15px;margin-right:10px;font-weight:700;cursor:pointer}.nav-tab[_ngcontent-%COMP%]{color:#fff;margin-left:20px;font-size:16px}.container[_ngcontent-%COMP%]{margin:0;padding:20px 0}.card[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:20px;margin-bottom:20px;box-shadow:0 1px 3px #0000001a}.card-title[_ngcontent-%COMP%]{font-size:18px;font-weight:700;margin-bottom:15px}.profiles[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;gap:25px;margin-bottom:20px;flex-wrap:wrap}.profile[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:70px}.avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#e0e0e0;margin-bottom:8px}.name[_ngcontent-%COMP%]{font-size:12px;text-align:center;line-height:1.2}.actions[_ngcontent-%COMP%]{margin-top:20px}.action-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:10px}.person-info[_ngcontent-%COMP%]{display:flex;flex-direction:column}.person-name[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px}.person-role[_ngcontent-%COMP%]{color:#666;font-size:14px}.action-button[_ngcontent-%COMP%]{background-color:#1e88e5;color:#fff;border:none;border-radius:15px;padding:5px 15px;cursor:pointer}.test-drive[_ngcontent-%COMP%], .follow-up[_ngcontent-%COMP%]{background-color:#1e88e5}.show-more[_ngcontent-%COMP%]{text-align:center;margin-top:10px;color:#333;font-size:14px}.metrics-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;margin-left:-10px;margin-bottom:20px}.metric-box[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;padding:15px;min-width:120px;flex:1;text-align:center;box-shadow:0 2px 4px #0000001a}.metric-value[_ngcontent-%COMP%]{font-size:20px;font-weight:700;color:#fff;margin-bottom:5px}.metric-label[_ngcontent-%COMP%]{color:#666;font-size:14px}.filters-row[_ngcontent-%COMP%]{display:flex;background-color:#fff;border-radius:8px;padding:15px;box-shadow:0 2px 4px #0000001a;align-items:center}.filters-title[_ngcontent-%COMP%]{font-weight:700;padding-top:10px}.time-filters[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-button[_ngcontent-%COMP%]{padding:6px 12px;cursor:pointer;font-size:14px}.select-container[_ngcontent-%COMP%]{position:relative;margin-left:auto}.sm-select[_ngcontent-%COMP%]{padding:6px 30px 6px 10px;border:1px solid #ddd;border-radius:4px;appearance:none;background-color:#fff;font-size:14px;cursor:pointer}.select-arrow[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;font-size:12px}select[_ngcontent-%COMP%]{position:relative;z-index:1000}.dropdown-row[_ngcontent-%COMP%]{margin-bottom:150px}.modal[_ngcontent-%COMP%]{display:flex;position:fixed;z-index:1000;left:0;top:0;width:100%;height:100%;background-color:#00000080;justify-content:center;align-items:center}.modal-content[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:6px;max-width:400px;width:90%;box-shadow:0 5px 15px #0000004d;position:relative}.close[_ngcontent-%COMP%]{position:absolute;right:12px;top:8px;font-size:24px;font-weight:700;cursor:pointer}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}div[style*="overflow-y: auto"][_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0}[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}[_ngcontent-%COMP%]::-webkit-scrollbar-button:single-button{display:none;width:0;height:0}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#bbb;border-radius:10px}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:transparent}.custom-scroll[_ngcontent-%COMP%]::-webkit-scrollbar-button{display:none;height:0;width:0}.selected-user[_ngcontent-%COMP%]{background-color:#cce5ff;border:2px solid #3399ff;border-radius:8px;padding:5px;width:90px}.container-fluid[_ngcontent-%COMP%]{width:100%;padding:0 20px;margin:0 auto;box-sizing:border-box}@media only screen and (max-width: 600px){.metrics-row[_ngcontent-%COMP%]{width:100%!important;flex-direction:column!important;gap:10px!important}.metric-box[_ngcontent-%COMP%]{width:100%!important;box-sizing:border-box}.metric-box[_ngcontent-%COMP%]:last-child{width:100%!important}}@media (max-width: 600px){.performance-panels[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px;margin-left:0!important;width:100%!important}.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%]{flex-direction:column!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%] > div[style*="display: flex"][_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{min-width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   h2.panel-title[_ngcontent-%COMP%]{text-align:center}}.table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{margin-top:20px!important;padding:10px!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px!important;font-size:14px}}@media (max-width: 600px){.performance-panel[_ngcontent-%COMP%]{width:100%!important;padding:0 10px;margin-left:0!important;height:200px!important}.performance-panel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%!important;margin-top:20px!important;padding:0!important;height:auto!important}.performance-panel[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .performance-panel[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:6px 4px!important;font-size:14px}.performance-panel[_ngcontent-%COMP%]   .table-wrapper[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media screen and (max-width: 767px){.header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{box-sizing:border-box;max-width:100vw;overflow-x:hidden;padding-left:10px;padding-right:10px}.nav-buttons[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:10px;align-items:stretch;width:100%}.nav-button[_ngcontent-%COMP%]{width:100%;font-size:1rem;box-sizing:border-box}}  table.highlight-alt-rows tbody tr:nth-child(2n){background-color:#f3f9ff!important}  table.highlight-alt-rows tbody tr:nth-child(2n) td{background-color:#f3f9ff!important}  .highlight-alt-rows tbody tr:nth-child(1){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(1) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(3) td{background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5){background-color:transparent!important}  .highlight-alt-rows tbody tr:nth-child(5) td{background-color:transparent!important}@media (max-width: 768px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important;margin-bottom:20px!important}.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{display:grid!important;grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;word-wrap:break-word;white-space:normal;margin-top:5px}.container[_ngcontent-%COMP%]{max-width:100%;padding-left:15px;padding-right:15px;margin-left:auto;margin-right:auto}}@media (max-width: 400px){.profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, .profiles[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{grid-template-columns:repeat(2,1fr)!important}}.user-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(15,1fr);gap:30px;margin-bottom:20px}@media (max-width: 768px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(4,1fr)!important;gap:15px!important}.avatar[_ngcontent-%COMP%]{width:50px!important;height:50px!important;font-size:24px!important}.name[_ngcontent-%COMP%]{max-width:80px;font-size:12px;margin-top:5px;word-wrap:break-word;white-space:normal}}@media (max-width: 400px){.user-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)!important}}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .dashboard-content[_ngcontent-%COMP%]{transition:margin-left .3s ease}.sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-container[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .header2[_ngcontent-%COMP%], .sidebar.closed[_ngcontent-%COMP%] ~ .dashboard-content[_ngcontent-%COMP%]{margin-left:7rem}.header2[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;background:#fff;padding:1rem;box-shadow:0 2px 4px #0000001a}.nav-buttons[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f5f5f5;padding:4px;border-radius:6px}.nav-button[_ngcontent-%COMP%]{background:#fff;border:none;font-weight:700;padding:8px 16px;cursor:pointer;border-radius:4px}@media (max-width: 768px){.nav-buttons[_ngcontent-%COMP%]{align-items:stretch}.nav-button[_ngcontent-%COMP%]{width:100%}}.filter-btn[_ngcontent-%COMP%]{padding:5px 12px;font-size:14px;border-radius:4px;border:1px solid #ccc;background-color:#fff;transition:all .3s ease;cursor:pointer;color:#333}.filter-btn[_ngcontent-%COMP%]:hover{background-color:#f2f2f2}.active-filter-today[_ngcontent-%COMP%], .active-filter-upcoming[_ngcontent-%COMP%]{background:linear-gradient(#222fb9);color:#fff}.avatar-color-1[_ngcontent-%COMP%]{background-color:#ffd3b6}.avatar-color-2[_ngcontent-%COMP%]{background-color:#caffbf}.avatar-color-3[_ngcontent-%COMP%]{background-color:#9bf6ff}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:9999!important}.header2-right[_ngcontent-%COMP%]   .header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{padding:15px 0;min-width:12.5rem;z-index:9999;position:absolute}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important}.nav-buttons[_ngcontent-%COMP%]{z-index:1000}.header2-profile[_ngcontent-%COMP%]{position:relative;z-index:9999}.header2-profile[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{position:absolute!important;z-index:99999!important;top:100%;right:0;display:block}.dashboard-container[_ngcontent-%COMP%], .header2[_ngcontent-%COMP%], .nav-buttons[_ngcontent-%COMP%]{overflow:visible!important;z-index:auto!important}.nav-button-group[_ngcontent-%COMP%]{border:2px solid #e0e0e0;border-radius:8px;display:flex;gap:0;overflow:hidden;background-color:#fff}.nav-button[_ngcontent-%COMP%]{padding:8px 16px;font-weight:700;background-color:transparent;color:#222fb9;border:none;border-radius:0;cursor:pointer;transition:all .3s ease;outline:none;margin:0}.nav-button.active[_ngcontent-%COMP%], .nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.user-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin:8px;width:80px}.user-avatar[_ngcontent-%COMP%]{width:50px;height:50px;background-color:#f0f0f0;color:#126893;border-radius:50%;display:flex;align-items:center;justify-content:center;font-weight:700;font-size:18px;box-shadow:0 2px 6px #0000001a}.user-name[_ngcontent-%COMP%]{font-size:12px;text-align:center;margin-top:4px;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:12px}.user-card[_ngcontent-%COMP%]{background-color:#fff;border-radius:12px;padding:16px;box-shadow:0 4px 10px #00000014;text-align:center;margin-bottom:12px}.user-avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;background-color:#c4fefb;color:#26eee4;font-weight:700;display:flex;align-items:center;justify-content:center;margin:0 auto 8px;font-size:25px}.user-name[_ngcontent-%COMP%]{font-size:14px;font-weight:500;color:#333}.header-box[_ngcontent-%COMP%]{background-color:#f4f6fb;padding:6px 10px;border-radius:8px;display:inline-flex;align-items:center;gap:6px;font-weight:600;color:#333}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:max-content;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse;outline:none!important}.header-box1[_ngcontent-%COMP%], .header-box2[_ngcontent-%COMP%], .header-box3[_ngcontent-%COMP%], .header-box4[_ngcontent-%COMP%], .header-box5[_ngcontent-%COMP%], .header-box6[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:6px;padding:6px 8px;border-radius:12px;font-weight:400;color:#000;text-align:center;font-family:Poppins,sans-serif;white-space:normal}.pagination-container[_ngcontent-%COMP%]{margin-top:20px;display:flex;justify-content:center;align-items:center;gap:6px;flex-wrap:wrap}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ccc;background-color:#fff;color:#333;cursor:pointer;border-radius:6px;font-size:14px;transition:all .2s ease-in-out}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#222fb9;color:#fff;border-color:#222fb9}.pagination-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.pagination-container[_ngcontent-%COMP%]   button.active-page[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff;font-weight:700;border-color:#222fb9}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:10px;border:none}.header-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:wrap;width:100%;margin-bottom:15px}.panel-title[_ngcontent-%COMP%]{font-size:25px;color:#313131;font-family:Poppins,sans-serif;font-weight:600;border-radius:20px;margin:0}.panel-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#000;font-weight:400;font-size:16px;margin:0}.dealer-select[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;border-radius:6px;border:1px solid #ccc;height:fit-content;margin-top:5px}.dropdown-wrapper[_ngcontent-%COMP%]{width:250px;border:1px solid #ccc;border-radius:6px;position:relative;background:#fff;cursor:pointer}.selected-value[_ngcontent-%COMP%]{padding:10px;display:flex;justify-content:space-between;align-items:center}.arrow[_ngcontent-%COMP%]{font-size:12px}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;width:220%;top:100%;left:-20px;right:0;border:1px solid #ccc;z-index:1000;border-radius:10px;box-shadow:0 2px 6px #00000026;max-height:240px;overflow-y:auto;padding:0;margin:0;max-width:300px}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{list-style:none;padding:10px 12px;transition:background .2s;cursor:pointer}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:#f0f0f0}.user-dropdown[_ngcontent-%COMP%]{width:100%;max-width:300px;padding:10px 16px;border:none;border-radius:20px;background-color:#ebedf0;color:#333;font-size:16px;appearance:none;outline:none;cursor:pointer;box-shadow:0 2px 6px #0000001a;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{padding:8px;font-size:14px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-height:200px}  .custom-ng-select .ng-dropdown-panel{max-height:200px!important;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]{max-height:200px;overflow-y:auto}.user-dropdown[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{white-space:nowrap}.radio-circle[_ngcontent-%COMP%]{width:16px;height:16px;border-radius:50%;border:2px solid currentColor;display:flex;align-items:center;justify-content:center}.radio-circle-inner[_ngcontent-%COMP%]{width:8px;height:8px;border-radius:50%;background-color:currentColor}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(1)   th[_ngcontent-%COMP%]{background-color:#fff!important}.table-wrapper[_ngcontent-%COMP%]{padding:20px}table[_ngcontent-%COMP%]{width:100%;border-collapse:separate;border-spacing:0 12px}th[_ngcontent-%COMP%]{color:#000}td[_ngcontent-%COMP%]{background-color:#f9f9fb;text-align:center;font-weight:500;border:none;padding:30px;transition:all .3s ease}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child{border-top-left-radius:12px;border-bottom-left-radius:12px}tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child{border-top-right-radius:12px;border-bottom-right-radius:12px}.badge[_ngcontent-%COMP%]{padding:6px 14px;border-radius:8px;font-size:14px;font-weight:500;display:inline-block}.badge-upcoming[_ngcontent-%COMP%], .badge-enquiry[_ngcontent-%COMP%]{background-color:#d9f2e7;color:#177a47}.badge-coldcalls[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.badge-completed[_ngcontent-%COMP%]{background-color:#fef3c7;color:#b45309}.badge-overdue[_ngcontent-%COMP%]{background-color:#fee2e2;color:#b91c1c}.nav-button[_ngcontent-%COMP%]{font-family:Poppins,sans-serif}table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#1f2937}.filter-wrapper[_ngcontent-%COMP%]{background-color:#fff;border-radius:16px;box-shadow:0 4px 12px #0000000d;padding:15px 20px;width:fit-content;margin:20px}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px;background:#f2f2f2;border-radius:50px;padding:5px 10px}.filter-btn[_ngcontent-%COMP%]{border:none;background:transparent;padding:6px 14px;border-radius:50px;font-weight:500;color:#333;cursor:pointer;transition:all .3s ease}.filter-btn.active[_ngcontent-%COMP%]{background-color:#fff;color:#2b45c7;border:2px solid #2b45c7}.filter-wrapper[_ngcontent-%COMP%]{margin-top:20px;background:#fff;padding:10px;border-radius:8px;width:fit-content}.filter-options[_ngcontent-%COMP%]{display:flex;gap:10px}.filter-btn[_ngcontent-%COMP%]{padding:6px 10px;border:none;background:#f0f0f0;border-radius:4px;cursor:pointer}.filter-btn.active[_ngcontent-%COMP%]{background-color:#126893;color:#fff}.no-bottom-border[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:none!important}.back-button[_ngcontent-%COMP%]{background-color:transparent;border:none;font-size:35px;color:#333;cursor:pointer;padding:4px 10px;transition:transform .2s ease,color .2s ease}.back-button[_ngcontent-%COMP%]:hover{transform:translate(-3px);color:#126893}.nav-button[_ngcontent-%COMP%]{background-color:transparent;color:#000;border:none;padding:10px 16px;font-weight:500;border-radius:6px;cursor:pointer;transition:background-color .2s ease-in-out}.nav-button[_ngcontent-%COMP%]:hover{background-color:#222fb926;color:#000}.nav-button.active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}.user-cards-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;overflow-x:auto;gap:16px;padding-bottom:10px;width:100%;box-sizing:border-box;scrollbar-width:thin;scrollbar-color:#ccc transparent}.active-filter[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}.pill-button[_ngcontent-%COMP%]{padding:6px 16px;border:none;border-radius:999px;font-family:Poppins,sans-serif;background-color:transparent;color:#000;font-weight:500;cursor:pointer;transition:background-color .3s ease}.pill-active[_ngcontent-%COMP%]{background-color:#222fb9;color:#fff}@media (min-width: 768px) and (max-width: 1080px){.dashboard-container[_ngcontent-%COMP%]{padding:20px}}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar{height:6px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#f1f1f1;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#ccc;border-radius:3px}.user-cards-wrapper[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:#999}.user-card[_ngcontent-%COMP%]{flex:0 0 auto;min-width:80px;cursor:pointer}.user-row[_ngcontent-%COMP%]{position:relative}.user-row[_ngcontent-%COMP%]:after{content:"";position:absolute;right:0;top:0;bottom:0;width:20px;background:linear-gradient(to right,transparent,rgba(255,255,255,.8));pointer-events:none;z-index:1}.dashboard-container[_ngcontent-%COMP%]{padding:10px}@media (max-width: 991.98px){.performance-panels[_ngcontent-%COMP%]{flex-direction:column}}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{padding:10px!important;margin:0 auto}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:#fff;font-size:1.2rem;border:none!important;font-weight:700;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:#fff;box-shadow:0 4px 6px #0000001a}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;font-family:Poppins,sans-serif;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4;font-family:Poppins,sans-serif}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#cfe8fc,#a0cfff);font-family:Poppins,sans-serif;font-size:1rem;font-weight:500;padding-left:60px;color:#000;border-radius:5px;transition:background .3s ease}.accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{background:linear-gradient(135deg,#b6dcf8,#87c5f5);cursor:pointer}.accordion-header[_ngcontent-%COMP%]:hover{transform:translateY(-2px)}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;transition:max-height .4s ease;background:#fffffff2;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background:#f8f9fa}*[_ngcontent-%COMP%]{margin:0;padding:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;background:linear-gradient(135deg,#667eea,#764ba2);min-height:100vh;padding:20px}.dashboard-container[_ngcontent-%COMP%]{margin:0 auto}.dashboard-header[_ngcontent-%COMP%]{text-align:center;color:#fff;margin-bottom:30px}.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:300;text-shadow:0 2px 4px rgba(0,0,0,.3)}.pagination-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;padding:15px 20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.pagination-info[_ngcontent-%COMP%]{color:#fff;font-size:.9rem}.pagination-controls[_ngcontent-%COMP%]{display:flex;gap:10px}.pagination-btn[_ngcontent-%COMP%]{padding:8px 15px;background:#fff3;border:1px solid rgba(255,255,255,.3);border-radius:5px;color:#fff;cursor:pointer;transition:all .3s ease}.pagination-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:#ffffff4d}.pagination-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.pagination-btn.active[_ngcontent-%COMP%]{background:#fff6;font-weight:700}.accordion[_ngcontent-%COMP%]{margin-bottom:15px;border-radius:12px;overflow:hidden;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);border:1px solid rgba(255,255,255,.2)}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.2rem;font-weight:700;color:#036;border:1px solid #b3d4ff;font-family:Poppins,sans-serif}.accordion.level-1[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]:hover{cursor:pointer}.accordion.level-2[_ngcontent-%COMP%]{margin:15px 20px;border-left:4px solid #222fb9;font-family:Poppins,sans-serif;box-shadow:0 8px 32px #0000001a}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;padding-left:40px}.accordion.level-3[_ngcontent-%COMP%]{border-left:4px solid #4285f4}.accordion-header[_ngcontent-%COMP%]{padding:20px 30px;cursor:pointer;display:flex;justify-content:space-between;align-items:center;color:#fff;transition:all .3s ease;position:relative}.accordion-header.active[_ngcontent-%COMP%]{box-shadow:inset 0 2px 4px #0003}.accordion-toggle[_ngcontent-%COMP%]{background:#fff3;border:none;width:30px;height:30px;border-radius:50%;color:#fff;cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .3s ease}.accordion-toggle[_ngcontent-%COMP%]:hover{background:#ffffff4d}.accordion-content[_ngcontent-%COMP%]{max-height:0;overflow:hidden;box-shadow:0 8px 32px #0000001a;transition:max-height .4s ease;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.accordion-content.active[_ngcontent-%COMP%]{max-height:5000px;box-shadow:0 8px 32px #0000001a}.content-wrapper[_ngcontent-%COMP%]{padding:30px}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px 8px;background:#fff3;border-radius:12px;font-size:.75rem;font-weight:500;margin-right:10px}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease}.filters[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:15px;margin-bottom:25px;padding:20px;background:#ffffff1a;border-radius:10px;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px)}.filter-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:5px}.filter-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.85rem;color:#666;font-weight:500}.filter-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .filter-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:8px 12px;border:1px solid #ddd;border-radius:6px;font-size:.9rem;min-width:120px}.table-container[_ngcontent-%COMP%]{overflow-x:auto;border-radius:10px;box-shadow:0 4px 15px #0000001a;margin-bottom:20px}.call-logs-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background:#fff}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .call-logs-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:left;border-bottom:1px solid #eee}.call-logs-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background:linear-gradient(135deg,#f8f9fa,#e9ecef);font-weight:600;color:#495057;font-size:.9rem;position:sticky;top:0}.call-logs-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.status-badge[_ngcontent-%COMP%]{padding:4px 10px;border-radius:20px;font-size:.8rem;font-weight:500}.status-connected[_ngcontent-%COMP%]{background:#d4edda;color:#155724}.status-missed[_ngcontent-%COMP%]{background:#f8d7da;color:#721c24}.status-rejected[_ngcontent-%COMP%]{background:#f1f3f4;color:#5f6368}.status-enquiry[_ngcontent-%COMP%]{background:#e7f3ff;color:#06c}.status-cold[_ngcontent-%COMP%]{background:#fff3cd;color:#856404}.duration[_ngcontent-%COMP%]{font-family:monospace;font-weight:500}.table-pagination[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:10px;padding:15px;background:#fff;border-top:1px solid #eee}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #ddd;background:#fff;border-radius:4px;cursor:pointer;font-size:.85rem}.table-pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.table-pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background:#007bff;color:#fff;border-color:#007bff}@media (max-width: 768px){.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2rem}.accordion-header[_ngcontent-%COMP%]{padding:15px 20px;font-size:.95rem}.accordion.level-2[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%], .accordion.level-3[_ngcontent-%COMP%]   .accordion-header[_ngcontent-%COMP%]{padding-left:30px}.content-wrapper[_ngcontent-%COMP%]{padding:20px}.kpi-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(auto-fit,minmax(140px,1fr));gap:12px}.filters[_ngcontent-%COMP%]{flex-direction:column}.pagination-container[_ngcontent-%COMP%]{flex-direction:column;gap:10px;text-align:center}}.loading[_ngcontent-%COMP%]{display:inline-block;width:20px;height:20px;border:2px solid rgba(255,255,255,.3);border-radius:50%;border-top-color:#fff;animation:_ngcontent-%COMP%_spin 1s ease-in-out infinite}@keyframes _ngcontent-%COMP%_spin{to{transform:rotate(360deg)}}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(7,1fr);gap:15px;margin-bottom:25px}.kpi-card[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);padding:18px;border-radius:10px;color:#fff;text-align:center;box-shadow:0 4px 15px #0000001a;transition:transform .2s ease;min-width:0}.level-indicator[_ngcontent-%COMP%]{display:inline-block;padding:3px;background-color:#fff;border:2px solid #222fb9;border-radius:15px;font-size:12px;font-weight:600;color:#222fb9}.kpi-card[_ngcontent-%COMP%]:hover{transform:translateY(-3px)}.kpi-value[_ngcontent-%COMP%]{font-size:1.8rem;font-weight:700;margin-bottom:5px}.kpi-label[_ngcontent-%COMP%]{font-size:.85rem;opacity:.9}@media (max-width: 1366px){.kpi-card[_ngcontent-%COMP%]{padding:12px 8px}.kpi-value[_ngcontent-%COMP%]{font-size:1.5rem}.kpi-label[_ngcontent-%COMP%]{font-size:.75rem}}@media (max-width: 1024px){.kpi-grid[_ngcontent-%COMP%]{gap:8px}.kpi-card[_ngcontent-%COMP%]{padding:10px 6px}.kpi-value[_ngcontent-%COMP%]{font-size:1.3rem}.kpi-label[_ngcontent-%COMP%]{font-size:.7rem}}.shadow-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;margin-top:10px;background-color:#fff;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .shadow-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:8px;text-align:center}.shadow-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f4f4f4;font-weight:700}.dealer-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;box-shadow:0 4px 8px #0000001a;border-radius:8px;overflow:hidden;background:linear-gradient(135deg,#f8f9fa,#e9ecef);margin-top:15px;font-family:Arial,sans-serif}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .dealer-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;text-align:center}.dealer-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{background-color:#f0f0f0}.dealer-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.dealer-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;color:#333}.show-more-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center;margin:15px 0}.show-more-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;border:none;padding:8px 20px;border-radius:8px;cursor:pointer;font-size:14px;font-weight:500;transition:background-color .3s ease,transform .2s ease}.show-more-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}.pagination-center[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:8px;margin-top:15px}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border:1px solid #007bff;background-color:#fff;color:#007bff;cursor:pointer;border-radius:4px;transition:all .2s}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#007bff;color:#fff}.pagination[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;font-weight:700}.pagination[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed;opacity:.5}.expand-row[_ngcontent-%COMP%]{background-color:#f8f9fa}.expanded-content[_ngcontent-%COMP%]{padding:20px;border-left:4px solid #007bff;margin:10px;background-color:#fff;border-radius:6px;box-shadow:0 2px 4px #0000000d}.expanded-content[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin:0}.expanded-content[_ngcontent-%COMP%]   .col-md-4[_ngcontent-%COMP%]{margin-bottom:15px}.expanded-content[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:#495057;font-size:13px}.orders-table-container[_ngcontent-%COMP%]{border-radius:8px;overflow:hidden;margin:20px 0;max-width:100%}.table[_ngcontent-%COMP%]{margin-bottom:0;font-size:14px}.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f8f9fa;color:#6c757d;font-weight:600;font-size:12px;text-transform:uppercase;letter-spacing:.5px;border-bottom:1px solid #dee2e6;padding:16px 12px;white-space:nowrap}.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:16px 12px;vertical-align:middle}.order-id[_ngcontent-%COMP%]{font-weight:600;color:#495057}.created-time[_ngcontent-%COMP%]{color:#6c757d}.customer-name[_ngcontent-%COMP%]{font-weight:500;color:#212529}.total-amount[_ngcontent-%COMP%], .profit-amount[_ngcontent-%COMP%]{font-weight:600;color:#212529}.status-badge[_ngcontent-%COMP%]{padding:6px 12px;border-radius:20px;font-size:12px;font-weight:500;text-transform:capitalize}.status-pending[_ngcontent-%COMP%]{background-color:#fff3cd;color:#856404}.status-confirmed[_ngcontent-%COMP%]{background-color:#cce5ff;color:#06c}.status-shipped[_ngcontent-%COMP%]{background-color:#d4edda;color:#155724}.status-rejected[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24}.btn-plus[_ngcontent-%COMP%]{background:none;border:none;color:#6c757d;font-size:16px;cursor:pointer;padding:8px;border-radius:50%;transition:all .2s ease;display:flex;align-items:center;justify-content:center;width:32px;height:32px}.btn-plus[_ngcontent-%COMP%]:hover{background-color:#e9ecef;color:#495057}.btn-plus[_ngcontent-%COMP%]:focus{outline:2px solid #007bff;outline-offset:2px}.action-cell[_ngcontent-%COMP%]{text-align:center;width:60px}.table-hover[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{transition:background-color .2s ease}.clickable-row[_ngcontent-%COMP%]:hover{transform:translateY(-1px);box-shadow:0 2px 4px #0000001a;transition:all .2s ease}.back-arrow[_ngcontent-%COMP%]{display:inline-block;transition:transform .2s ease}.back-arrow[_ngcontent-%COMP%]:hover{transform:translate(-3px)}.time-filter[_ngcontent-%COMP%]{gap:10px}.time-btn[_ngcontent-%COMP%]{border:1px solid #222fb9;background:#fff;color:#222fb9;font-weight:500;font-size:14px;padding:8px 18px;border-radius:20px;cursor:pointer;transition:all .2s ease-in-out}.time-btn[_ngcontent-%COMP%]:hover{background:#f1f5ff}.time-filter-container[_ngcontent-%COMP%]{padding:8px 12px;display:inline-block;border-radius:6px}.time-filter-container[_ngcontent-%COMP%]   .time-btn[_ngcontent-%COMP%]{border:none!important;border-radius:0!important;background:none!important;padding:0 6px;font-size:20px;cursor:pointer}.time-filter-container[_ngcontent-%COMP%]   .time-btn.active[_ngcontent-%COMP%]{font-weight:900;color:#222fb9}.time-filter-container[_ngcontent-%COMP%]   .separator[_ngcontent-%COMP%]{margin:0 6px;color:#555;-webkit-user-select:none;user-select:none}.custom-table[_ngcontent-%COMP%]{border-radius:15px;border-collapse:separate;overflow:hidden;background-color:#fff;box-shadow:0 4px 12px #0000001a}.custom-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:8px 12px;color:#555}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{cursor:pointer}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:transparent!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd){background-color:transparent!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:transparent!important}.custom-table[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%], .custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f5f9!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f5ff}.custom-table[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#fff!important;border-bottom:1px solid #dee2e6}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd){background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fff!important}.custom-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f8f9fa!important}.time-filter-container[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;padding:8px 12px;border-radius:8px;margin-top:10px}.time-dropdown[_ngcontent-%COMP%]{min-width:250px;padding:6px 10px;font-size:14px;border-radius:6px;border:1px solid #ccc;background:#f9f9f9;cursor:pointer}.time-dropdown[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff;box-shadow:0 0 0 2px #007bff33}.custom-inputs[_ngcontent-%COMP%]{display:flex;gap:8px;align-items:center}.custom-date[_ngcontent-%COMP%]{padding:5px 10px;border-radius:6px;border:1px solid #ccc;font-size:14px}.custom-date[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff;box-shadow:0 0 0 2px #007bff33}.apply-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:5px 12px;border:none;border-radius:6px;cursor:pointer;font-size:14px}.apply-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3}.reset-btn[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:5px 12px;border:none;border-radius:6px;cursor:pointer;font-size:14px}.reset-btn[_ngcontent-%COMP%]:hover{background-color:#0056b3}.custom-inputs.applied[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-color:#222fb9;box-shadow:0 0 4px #222fb980}.table-primary[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-size:18px!important}.stats-container[_ngcontent-%COMP%]{margin-top:20px;gap:20px}.stats-card[_ngcontent-%COMP%]{background:#fff;padding:20px;border-radius:12px;box-shadow:0 2px 6px #00000014;text-align:left;width:220px;min-height:120px;flex:0 0 auto}.stats-card[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{font-size:14px;color:#666;margin-bottom:8px}.stats-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:28px;font-weight:700;color:#14213d;margin-bottom:6px}.stats-card[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{font-size:13px;color:#7d7d7d}.dashboard-header[_ngcontent-%COMP%]{position:sticky;top:0;z-index:20;background:#ffffffe6;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);border-bottom:1px solid #e2e8f0}.header-container[_ngcontent-%COMP%]{max-width:80rem;margin:0 auto;padding:0 1rem}@media (min-width: 640px){.header-container[_ngcontent-%COMP%]{padding:0 1.5rem}}@media (min-width: 1024px){.header-container[_ngcontent-%COMP%]{padding:0 2rem}}.header-content[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;gap:1rem;padding:1rem 0}.main-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700;letter-spacing:-.025em;color:#0f172a;margin:0}.subtitle[_ngcontent-%COMP%]{color:#64748b;font-size:.875rem;margin:0}.header-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.main-content[_ngcontent-%COMP%]{max-width:150rem!important;margin:0 auto;display:flex;flex-direction:column;gap:1.5rem}.filter-section[_ngcontent-%COMP%]{background:#fff;border-radius:1rem;box-shadow:0 1px 3px #0000001a,0 1px 2px #0000000f;border:1px solid #e2e8f0;padding:1rem}@media (min-width: 640px){.filter-section[_ngcontent-%COMP%]{padding:1.5rem}}.filter-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem}@media (min-width: 768px){.filter-container[_ngcontent-%COMP%]{flex-direction:row;align-items:end;justify-content:space-between}}.filter-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;gap:1rem;width:100%}@media (min-width: 640px){.filter-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)}}.form-group[_ngcontent-%COMP%]{display:flex;flex-direction:column}.form-label[_ngcontent-%COMP%]{display:block;font-size:.875rem;font-weight:500;color:#475569;margin-bottom:.25rem}.form-select[_ngcontent-%COMP%], .form-input[_ngcontent-%COMP%]{width:100%;border-radius:.75rem;border:1px solid #cbd5e1;padding:.5rem .75rem;font-size:.875rem;background:#fff}.form-select[_ngcontent-%COMP%]:focus, .form-input[_ngcontent-%COMP%]:focus{outline:none;ring:2px solid #2563eb;border-color:#2563eb}.filter-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:.5rem;padding:.5rem 1rem;border-radius:.75rem;font-size:.875rem;font-weight:600;border:1px solid transparent;cursor:pointer;transition:all .15s ease}.btn-primary[_ngcontent-%COMP%]{background:#2563eb;color:#fff}.btn-primary[_ngcontent-%COMP%]:hover{background:#1d4ed8}.btn-secondary[_ngcontent-%COMP%]{border-color:#e2e8f0;background:#fff;color:#374151}.btn-secondary[_ngcontent-%COMP%]:hover{background:#f8fafc}.btn-small[_ngcontent-%COMP%]{padding:.375rem .75rem;font-size:.75rem}.kpi-section[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(2,1fr);gap:1rem}@media (min-width: 768px){.kpi-section[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)}}.kpi-card[_ngcontent-%COMP%]{border-radius:1rem;border:1px solid #e2e8f0;background:#fff;padding:1rem}.kpi-label[_ngcontent-%COMP%]{color:#64748b;font-size:.75rem}.kpi-value-container[_ngcontent-%COMP%]{margin-top:.25rem;display:flex;align-items:baseline;gap:.5rem}.kpi-value[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700}.kpi-secondary[_ngcontent-%COMP%]{font-size:.75rem;color:#64748b}.kpi-highlight[_ngcontent-%COMP%]{font-weight:600;color:#374151}.table-section[_ngcontent-%COMP%]{background:#fff;border-radius:1rem;box-shadow:0 1px 3px #0000001a,0 1px 2px #0000000f;border:1px solid #e2e8f0}.table-header[_ngcontent-%COMP%]{padding:1rem 1.5rem;border-bottom:1px solid #e2e8f0;display:flex;align-items:center;justify-content:space-between}.table-title[_ngcontent-%COMP%]{font-size:1.125rem;font-weight:600;margin:0}.table-subtitle[_ngcontent-%COMP%]{color:#64748b;font-size:.875rem;margin:0}.table-actions[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.table-container[_ngcontent-%COMP%]{padding:.75rem;overflow-x:auto;margin-bottom:0}.data-table[_ngcontent-%COMP%]{min-width:960px;width:100%;font-size:.875rem}.calls-table[_ngcontent-%COMP%]{min-width:800px}.table-thead[_ngcontent-%COMP%]{font-size:15px;color:#1f2937;font-weight:600;background:#f8fafc}.th-left[_ngcontent-%COMP%]{text-align:left;padding:.75rem;border-top-left-radius:.75rem;border-bottom-left-radius:.75rem}.th-right[_ngcontent-%COMP%]{text-align:right;padding:.75rem}.th-center[_ngcontent-%COMP%]{text-align:center;padding:.75rem}.th-rounded-right[_ngcontent-%COMP%]{border-top-right-radius:.75rem;border-bottom-right-radius:.75rem}.th-rounded-left[_ngcontent-%COMP%]{border-top-left-radius:.75rem;border-bottom-left-radius:.75rem}.table-row[_ngcontent-%COMP%]:nth-child(2n){background:#f9fafb}.table-row[_ngcontent-%COMP%]:hover{background:#eef7ff}.td-font-medium[_ngcontent-%COMP%]{font-weight:500;padding:.75rem}.td-right[_ngcontent-%COMP%]{text-align:right;padding:.75rem}.td-center[_ngcontent-%COMP%]{text-align:center;padding:.75rem}.sticky-col[_ngcontent-%COMP%], .sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff}.sticky-col-header[_ngcontent-%COMP%]{z-index:3;background:#f8fafc}.sticky-col[_ngcontent-%COMP%]{z-index:2}.expand-btn[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:.5rem;color:#1d4ed8;font-weight:600;background:none;border:none;cursor:pointer}.expand-btn[_ngcontent-%COMP%]:hover{color:#1e40af}.sub-row[_ngcontent-%COMP%]{background:#fbfdff}.sub-row-content[_ngcontent-%COMP%]{padding:0}.sub-row-inner[_ngcontent-%COMP%]{padding:1rem 1.5rem;border-top:1px solid #e2e8f0}.sub-row-title[_ngcontent-%COMP%]{font-size:.75rem;font-weight:600;color:#64748b;margin-bottom:.5rem}.sub-table-container[_ngcontent-%COMP%]{overflow-x:auto}.sub-table[_ngcontent-%COMP%]{min-width:940px;width:100%;font-size:.75rem}.calls-sub-table[_ngcontent-%COMP%]{min-width:720px}.sub-table-thead[_ngcontent-%COMP%]{background:#f8fafc;color:#475569}.chip[_ngcontent-%COMP%]{display:inline-flex;align-items:center;padding:.15rem .5rem;border-radius:999px;font-size:.75rem;line-height:1rem;border:1px solid rgba(0,0,0,.05);background:#f1f5f9;color:#475569}.chip-success[_ngcontent-%COMP%]{background:#ecfdf5;color:#047857}.chip-inactive[_ngcontent-%COMP%]{background:#f1f5f9;color:#64748b}.icon-refresh[_ngcontent-%COMP%]:before{content:"\\21bb"}.icon-filter[_ngcontent-%COMP%]:before{content:"\\2699"}.icon-reset[_ngcontent-%COMP%]:before{content:"\\21ba"}.icon-download[_ngcontent-%COMP%]:before{content:"\\2193"}.icon-chevron-right[_ngcontent-%COMP%]:before{content:"\\2192"}.icon-chevron-down[_ngcontent-%COMP%]:before{content:"\\2193"}.hidden[_ngcontent-%COMP%]{display:none!important}[_nghost-%COMP%]{background:#f8fafc;color:#1e293b;font-family:system-ui,-apple-system,sans-serif}.arrow[_ngcontent-%COMP%]{display:inline-block;transition:transform .2s ease;margin-right:8px}.expand-btn.expanded[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{transform:rotate(90deg)}.expand-btn[_ngcontent-%COMP%]{background:none;border:none;cursor:pointer;display:flex;align-items:center;gap:8px;font-size:14px;font-weight:500;color:#1e293b;padding:0;transition:all .2s}.expand-btn[_ngcontent-%COMP%]:hover{color:#3b82f6}.chip-success[_ngcontent-%COMP%]{@apply text-[#047857];background-color:#d1fae5;padding:2px 6px;border-radius:4px}.chip-inactive[_ngcontent-%COMP%]{@apply text-gray-500;background-color:#f3f4f6;padding:2px 6px;border-radius:4px}@media (min-width: 1200px) and (max-width: 1366px){.dashboard-container[_ngcontent-%COMP%]{margin-left:-20px}}@media (min-width: 1200px) and (max-width: 1300px){.main-content[_ngcontent-%COMP%]{margin-left:-15px}}[_ngcontent-%COMP%]::-webkit-scrollbar{height:12px}.table-scroll[_ngcontent-%COMP%]{overflow-y:auto;position:relative;scrollbar-width:thin}@media (max-width: 844px){.content-body[_ngcontent-%COMP%]{margin-left:0!important}}.table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:5;box-shadow:0 2px 2px -1px #0000001a}.sticky-col-header[_ngcontent-%COMP%]{position:sticky;left:0;background:#fff;z-index:10}.sub-table-scroll[_ngcontent-%COMP%]{max-height:300px;overflow-y:auto;position:relative;z-index:0}.sub-table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background:#fff;z-index:15;box-shadow:0 2px 2px -1px #0000001a}.sub-table-scroll[_ngcontent-%COMP%], .sub-user-table-scroll[_ngcontent-%COMP%]{max-height:250px;overflow-y:auto;border:1px solid #e0e0e0}.sub-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;background-color:#f9f9f9;z-index:2;box-shadow:0 2px 2px -1px #0000001a}.data-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .data-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:8px;text-align:center;font-size:14px}.sticky-col-header[_ngcontent-%COMP%], .sticky-col[_ngcontent-%COMP%]{position:sticky;left:0;background:#f9f9f9;z-index:2}.table-thead[_ngcontent-%COMP%]   th.th-center[_ngcontent-%COMP%]{background-color:#e6f2ff;font-weight:600;border-bottom:2px solid #000}.table-thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2)   th[_ngcontent-%COMP%]{background-color:#f0f8ff;font-weight:500}.data-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.expand-btn[_ngcontent-%COMP%]{border:none;background:none;cursor:pointer;font-weight:500}.arrow[_ngcontent-%COMP%]{display:inline-block;width:12px}.data-table[_ngcontent-%COMP%]   th.group-header[_ngcontent-%COMP%]{border:2px solid #000;text-align:center;background-color:#f0f0f0}.data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .data-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:6px 10px}.bordered-table[_ngcontent-%COMP%]{border-collapse:collapse;width:100%}.bordered-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .bordered-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ccc;padding:8px 12px;text-align:left}.bordered-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f5f5f5}.table-thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:sticky;top:0;z-index:3;background-color:#f5f5f5}.bordered-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#fafafa}.data-table[_ngcontent-%COMP%]{border-collapse:separate;border-spacing:0 10px}.table-row[_ngcontent-%COMP%]{background:#fff;border-radius:8px}',
    ],
  });
};
var ul = class n {
  isSessionStorageAvailable() {
    return typeof window < "u" && typeof sessionStorage < "u";
  }
  getItem(t) {
    return this.isSessionStorageAvailable() ? sessionStorage.getItem(t) : null;
  }
  setItem(t, e) {
    this.isSessionStorageAvailable() && sessionStorage.setItem(t, e);
  }
  removeItem(t) {
    this.isSessionStorageAvailable() && sessionStorage.removeItem(t);
  }
  clear() {
    this.isSessionStorageAvailable() && sessionStorage.clear();
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var We = class n {
  constructor(t, e) {
    this.http = t;
    this.storageService = e;
  }
  apiUrl = "https://uat.smartassistapp.in/api/superadmin/";
  getAuthHeaders() {
    let t = this.storageService.getItem("token");
    return new ti()
      .set("authorization", `Bearer ${t}`)
      .set("accept", "application/json");
  }
  getAllDealer() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "dealers/all", { headers: t });
  }
  getDealerById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}`, { headers: e });
  }
  getCustomerById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}accounts/${t}`, { headers: e });
  }
  getTeamById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}teams/${t}`, { headers: e });
  }
  getVehicleById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}vehicles/${t}`, { headers: e });
  }
  getUserById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}users/${t}`, { headers: e });
  }
  getAllUser(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/users/all`, {
      headers: e,
    });
  }
  getAllLead(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/leads/all`, {
      headers: e,
    });
  }
  getAllTask(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/tasks/all`, {
      headers: e,
    });
  }
  getEventsAll(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/events/t-drives/all`, {
      headers: e,
    });
  }
  getAllOpportunities(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/opportunities/all`, {
      headers: e,
    });
  }
  updateDealer(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}dealers/${t.dealer_id}/update`, t, {
      headers: e,
    });
  }
  createDealer(t) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "dealers/create", t, { headers: e });
  }
  deleteDealer(t) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}dealers/${t}/delete`,
      {},
      { headers: e }
    );
  }
  getAllVehicle() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "vehicles/all", { headers: t });
  }
  getSingleVehicle(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/vehicles/${t}`, { headers: e });
  }
  createNewVehicle(t) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "vehicles/create", t, { headers: e });
  }
  deleteVehicle(t) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}vehicles/${t}/delete`,
      {},
      { headers: e }
    );
  }
  updateVehicle(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}vehicles/${t.vehicle_id}/update`, t, {
      headers: e,
    });
  }
  eventById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}events/${t}`, { headers: e });
  }
  leadById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}leads/${t}`, { headers: e });
  }
  userById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}dealers/${t}/users/all`, {
      headers: e,
    });
  }
  oppById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}opportunities/${t}`, { headers: e });
  }
  taskById(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}tasks/${t}`, { headers: e });
  }
  getMultipleUser() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "users/all", { headers: t });
  }
  getMultipleTeams() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: t });
  }
  createNewUser(t) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "users/create", t, { headers: e });
  }
  createNewTeam(t) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "teams/new", t, { headers: e });
  }
  updateUser(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${t.user_id}/update`, t, {
      headers: e,
    });
  }
  updateTeam(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${t.team_id}/update`, t, {
      headers: e,
    });
  }
  getSingleUser(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/users/${t}`, { headers: e });
  }
  getAllTeams() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "teams/all", { headers: t });
  }
  deleteUser(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}users/${t}/delete`, {}, { headers: e });
  }
  deleteTeam(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}teams/${t}/delete`, {}, { headers: e });
  }
  getAllCustomer() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "accounts/all", { headers: t });
  }
  getSingleAccount(t) {
    let e = this.getAuthHeaders();
    return this.http.get(`${this.apiUrl}/accounts/${t}`, { headers: e });
  }
  createCustomer(t) {
    let e = this.getAuthHeaders();
    return this.http.post(`${this.apiUrl}accounts/create`, t, { headers: e });
  }
  updateCustomer(t) {
    let e = this.getAuthHeaders();
    return this.http.put(`${this.apiUrl}accounts/${t.account_id}/update`, t, {
      headers: e,
    });
  }
  deleteCustomer(t) {
    let e = this.getAuthHeaders();
    return this.http.put(
      `${this.apiUrl}accounts/${t}/delete`,
      {},
      { headers: e }
    );
  }
  getProfileData() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "show-profile", { headers: t });
  }
  getAllRole() {
    let t = this.getAuthHeaders();
    return this.http.get(this.apiUrl + "role/all", { headers: t });
  }
  createRole(t) {
    let e = this.getAuthHeaders();
    return this.http.post(this.apiUrl + "roles/new", t, { headers: e });
  }
  static ɵfac = function (e) {
    return new (e || n)(Z($t), Z(ul));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Yn = class n {
  dealer_id;
  dealer_name;
  dealer_code;
  dealer_email;
  corporate_id;
  constructor() {
    (this.dealer_id = ""),
      (this.dealer_name = ""),
      (this.dealer_code = null),
      (this.corporate_id = ""),
      (this.dealer_email = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Nf = ["toast-component", ""];
function jy(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 5),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.remove());
      }),
      c(1, "span", 6),
      h(2, "\xD7"),
      l()();
  }
}
function zy(n, t) {
  if ((n & 1 && (je(0), h(1), ze()), n & 2)) {
    let e = w(2);
    p(), K("[", e.duplicatesCount + 1, "]");
  }
}
function Uy(n, t) {
  if (
    (n & 1 && (c(0, "div"), h(1), k(2, zy, 2, 1, "ng-container", 4), l()),
    n & 2)
  ) {
    let e = w();
    Ae(e.options.titleClass),
      ae("aria-label", e.title),
      p(),
      K(" ", e.title, " "),
      p(),
      y("ngIf", e.duplicatesCount);
  }
}
function Wy(n, t) {
  if ((n & 1 && U(0, "div", 7), n & 2)) {
    let e = w();
    Ae(e.options.messageClass), y("innerHTML", e.message, Kr);
  }
}
function $y(n, t) {
  if ((n & 1 && (c(0, "div", 8), h(1), l()), n & 2)) {
    let e = w();
    Ae(e.options.messageClass),
      ae("aria-label", e.message),
      p(),
      K(" ", e.message, " ");
  }
}
function Gy(n, t) {
  if ((n & 1 && (c(0, "div"), U(1, "div", 9), l()), n & 2)) {
    let e = w();
    p(), gi("width", e.width() + "%");
  }
}
function Yy(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 5),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.remove());
      }),
      c(1, "span", 6),
      h(2, "\xD7"),
      l()();
  }
}
function qy(n, t) {
  if ((n & 1 && (je(0), h(1), ze()), n & 2)) {
    let e = w(2);
    p(), K("[", e.duplicatesCount + 1, "]");
  }
}
function Ky(n, t) {
  if (
    (n & 1 && (c(0, "div"), h(1), k(2, qy, 2, 1, "ng-container", 4), l()),
    n & 2)
  ) {
    let e = w();
    Ae(e.options.titleClass),
      ae("aria-label", e.title),
      p(),
      K(" ", e.title, " "),
      p(),
      y("ngIf", e.duplicatesCount);
  }
}
function Qy(n, t) {
  if ((n & 1 && U(0, "div", 7), n & 2)) {
    let e = w();
    Ae(e.options.messageClass), y("innerHTML", e.message, Kr);
  }
}
function Xy(n, t) {
  if ((n & 1 && (c(0, "div", 8), h(1), l()), n & 2)) {
    let e = w();
    Ae(e.options.messageClass),
      ae("aria-label", e.message),
      p(),
      K(" ", e.message, " ");
  }
}
function Zy(n, t) {
  if ((n & 1 && (c(0, "div"), U(1, "div", 9), l()), n & 2)) {
    let e = w();
    p(), gi("width", e.width() + "%");
  }
}
var $d = class {
    _attachedHost;
    component;
    viewContainerRef;
    injector;
    constructor(t, e) {
      (this.component = t), (this.injector = e);
    }
    attach(t, e) {
      return (this._attachedHost = t), t.attach(this, e);
    }
    detach() {
      let t = this._attachedHost;
      if (t) return (this._attachedHost = void 0), t.detach();
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(t) {
      this._attachedHost = t;
    }
  },
  Gd = class {
    _attachedPortal;
    _disposeFn;
    attach(t, e) {
      return (this._attachedPortal = t), this.attachComponentPortal(t, e);
    }
    detach() {
      this._attachedPortal && this._attachedPortal.setAttachedHost(),
        (this._attachedPortal = void 0),
        this._disposeFn && (this._disposeFn(), (this._disposeFn = void 0));
    }
    setDisposeFn(t) {
      this._disposeFn = t;
    }
  },
  Yd = class {
    _overlayRef;
    componentInstance;
    duplicatesCount = 0;
    _afterClosed = new Ee();
    _activate = new Ee();
    _manualClose = new Ee();
    _resetTimeout = new Ee();
    _countDuplicate = new Ee();
    constructor(t) {
      this._overlayRef = t;
    }
    manualClose() {
      this._manualClose.next(), this._manualClose.complete();
    }
    manualClosed() {
      return this._manualClose.asObservable();
    }
    timeoutReset() {
      return this._resetTimeout.asObservable();
    }
    countDuplicate() {
      return this._countDuplicate.asObservable();
    }
    close() {
      this._overlayRef.detach(),
        this._afterClosed.next(),
        this._manualClose.next(),
        this._afterClosed.complete(),
        this._manualClose.complete(),
        this._activate.complete(),
        this._resetTimeout.complete(),
        this._countDuplicate.complete();
    }
    afterClosed() {
      return this._afterClosed.asObservable();
    }
    isInactive() {
      return this._activate.isStopped;
    }
    activate() {
      this._activate.next(), this._activate.complete();
    }
    afterActivate() {
      return this._activate.asObservable();
    }
    onDuplicate(t, e) {
      t && this._resetTimeout.next(),
        e && this._countDuplicate.next(++this.duplicatesCount);
    }
  },
  xr = class {
    toastId;
    config;
    message;
    title;
    toastType;
    toastRef;
    _onTap = new Ee();
    _onAction = new Ee();
    constructor(t, e, i, o, r, a) {
      (this.toastId = t),
        (this.config = e),
        (this.message = i),
        (this.title = o),
        (this.toastType = r),
        (this.toastRef = a),
        this.toastRef.afterClosed().subscribe(() => {
          this._onAction.complete(), this._onTap.complete();
        });
    }
    triggerTap() {
      this._onTap.next(), this.config.tapToDismiss && this._onTap.complete();
    }
    onTap() {
      return this._onTap.asObservable();
    }
    triggerAction(t) {
      this._onAction.next(t);
    }
    onAction() {
      return this._onAction.asObservable();
    }
  },
  Vf = {
    maxOpened: 0,
    autoDismiss: !1,
    newestOnTop: !0,
    preventDuplicates: !1,
    countDuplicates: !1,
    resetTimeoutOnDuplicate: !1,
    includeTitleDuplicates: !1,
    iconClasses: {
      error: "toast-error",
      info: "toast-info",
      success: "toast-success",
      warning: "toast-warning",
    },
    closeButton: !1,
    disableTimeOut: !1,
    timeOut: 5e3,
    extendedTimeOut: 1e3,
    enableHtml: !1,
    progressBar: !1,
    toastClass: "ngx-toastr",
    positionClass: "toast-top-right",
    titleClass: "toast-title",
    messageClass: "toast-message",
    easing: "ease-in",
    easeTime: 300,
    tapToDismiss: !0,
    onActivateTick: !1,
    progressAnimation: "decreasing",
  },
  Lf = new qe("ToastConfig"),
  qd = class extends Gd {
    _hostDomElement;
    _componentFactoryResolver;
    _appRef;
    constructor(t, e, i) {
      super(),
        (this._hostDomElement = t),
        (this._componentFactoryResolver = e),
        (this._appRef = i);
    }
    attachComponentPortal(t, e) {
      let i = this._componentFactoryResolver.resolveComponentFactory(
          t.component
        ),
        o;
      return (
        (o = i.create(t.injector)),
        this._appRef.attachView(o.hostView),
        this.setDisposeFn(() => {
          this._appRef.detachView(o.hostView), o.destroy();
        }),
        e
          ? this._hostDomElement.insertBefore(
              this._getComponentRootNode(o),
              this._hostDomElement.firstChild
            )
          : this._hostDomElement.appendChild(this._getComponentRootNode(o)),
        o
      );
    }
    _getComponentRootNode(t) {
      return t.hostView.rootNodes[0];
    }
  },
  Jy = (() => {
    class n {
      _document = J(Le);
      _containerElement;
      ngOnDestroy() {
        this._containerElement &&
          this._containerElement.parentNode &&
          this._containerElement.parentNode.removeChild(this._containerElement);
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = this._document.createElement("div");
        e.classList.add("overlay-container"),
          e.setAttribute("aria-live", "polite"),
          this._document.body.appendChild(e),
          (this._containerElement = e);
      }
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  Kd = class {
    _portalHost;
    constructor(t) {
      this._portalHost = t;
    }
    attach(t, e = !0) {
      return this._portalHost.attach(t, e);
    }
    detach() {
      return this._portalHost.detach();
    }
  },
  ex = (() => {
    class n {
      _overlayContainer = J(Jy);
      _componentFactoryResolver = J(So);
      _appRef = J(Vn);
      _document = J(Le);
      _paneElements = new Map();
      create(e, i) {
        return this._createOverlayRef(this.getPaneElement(e, i));
      }
      getPaneElement(e = "", i) {
        return (
          this._paneElements.get(i) || this._paneElements.set(i, {}),
          this._paneElements.get(i)[e] ||
            (this._paneElements.get(i)[e] = this._createPaneElement(e, i)),
          this._paneElements.get(i)[e]
        );
      }
      _createPaneElement(e, i) {
        let o = this._document.createElement("div");
        return (
          (o.id = "toast-container"),
          o.classList.add(e),
          o.classList.add("toast-container"),
          i
            ? i.getContainerElement().appendChild(o)
            : this._overlayContainer.getContainerElement().appendChild(o),
          o
        );
      }
      _createPortalHost(e) {
        return new qd(e, this._componentFactoryResolver, this._appRef);
      }
      _createOverlayRef(e) {
        return new Kd(this._createPortalHost(e));
      }
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  ai = (() => {
    class n {
      overlay;
      _injector;
      sanitizer;
      ngZone;
      toastrConfig;
      currentlyActive = 0;
      toasts = [];
      overlayContainer;
      previousToastMessage;
      index = 0;
      constructor(e, i, o, r, a) {
        (this.overlay = i),
          (this._injector = o),
          (this.sanitizer = r),
          (this.ngZone = a),
          (this.toastrConfig = ne(ne({}, e.default), e.config)),
          e.config.iconClasses &&
            (this.toastrConfig.iconClasses = ne(
              ne({}, e.default.iconClasses),
              e.config.iconClasses
            ));
      }
      show(e, i, o = {}, r = "") {
        return this._preBuildNotification(r, e, i, this.applyConfig(o));
      }
      success(e, i, o = {}) {
        let r = this.toastrConfig.iconClasses.success || "";
        return this._preBuildNotification(r, e, i, this.applyConfig(o));
      }
      error(e, i, o = {}) {
        let r = this.toastrConfig.iconClasses.error || "";
        return this._preBuildNotification(r, e, i, this.applyConfig(o));
      }
      info(e, i, o = {}) {
        let r = this.toastrConfig.iconClasses.info || "";
        return this._preBuildNotification(r, e, i, this.applyConfig(o));
      }
      warning(e, i, o = {}) {
        let r = this.toastrConfig.iconClasses.warning || "";
        return this._preBuildNotification(r, e, i, this.applyConfig(o));
      }
      clear(e) {
        for (let i of this.toasts)
          if (e !== void 0) {
            if (i.toastId === e) {
              i.toastRef.manualClose();
              return;
            }
          } else i.toastRef.manualClose();
      }
      remove(e) {
        let i = this._findToast(e);
        if (
          !i ||
          (i.activeToast.toastRef.close(),
          this.toasts.splice(i.index, 1),
          (this.currentlyActive = this.currentlyActive - 1),
          !this.toastrConfig.maxOpened || !this.toasts.length)
        )
          return !1;
        if (
          this.currentlyActive < this.toastrConfig.maxOpened &&
          this.toasts[this.currentlyActive]
        ) {
          let o = this.toasts[this.currentlyActive].toastRef;
          o.isInactive() ||
            ((this.currentlyActive = this.currentlyActive + 1), o.activate());
        }
        return !0;
      }
      findDuplicate(e = "", i = "", o, r) {
        let { includeTitleDuplicates: a } = this.toastrConfig;
        for (let d of this.toasts) {
          let m = a && d.title === e;
          if ((!a || m) && d.message === i)
            return d.toastRef.onDuplicate(o, r), d;
        }
        return null;
      }
      applyConfig(e = {}) {
        return ne(ne({}, this.toastrConfig), e);
      }
      _findToast(e) {
        for (let i = 0; i < this.toasts.length; i++)
          if (this.toasts[i].toastId === e)
            return { index: i, activeToast: this.toasts[i] };
        return null;
      }
      _preBuildNotification(e, i, o, r) {
        return r.onActivateTick
          ? this.ngZone.run(() => this._buildNotification(e, i, o, r))
          : this._buildNotification(e, i, o, r);
      }
      _buildNotification(e, i, o, r) {
        if (!r.toastComponent) throw new Error("toastComponent required");
        let a = this.findDuplicate(
          o,
          i,
          this.toastrConfig.resetTimeoutOnDuplicate && r.timeOut > 0,
          this.toastrConfig.countDuplicates
        );
        if (
          ((this.toastrConfig.includeTitleDuplicates && o) || i) &&
          this.toastrConfig.preventDuplicates &&
          a !== null
        )
          return a;
        this.previousToastMessage = i;
        let d = !1;
        this.toastrConfig.maxOpened &&
          this.currentlyActive >= this.toastrConfig.maxOpened &&
          ((d = !0),
          this.toastrConfig.autoDismiss && this.clear(this.toasts[0].toastId));
        let m = this.overlay.create(r.positionClass, this.overlayContainer);
        this.index = this.index + 1;
        let _ = i;
        i && r.enableHtml && (_ = this.sanitizer.sanitize(qh.HTML, i));
        let v = new Yd(m),
          S = new xr(this.index, r, _, o, e, v),
          T = [{ provide: xr, useValue: S }],
          M = Ct.create({ providers: T, parent: this._injector }),
          A = new $d(r.toastComponent, M),
          j = m.attach(A, r.newestOnTop);
        v.componentInstance = j.instance;
        let z = {
          toastId: this.index,
          title: o || "",
          message: i || "",
          toastRef: v,
          onShown: v.afterActivate(),
          onHidden: v.afterClosed(),
          onTap: S.onTap(),
          onAction: S.onAction(),
          portal: j,
        };
        return (
          d ||
            ((this.currentlyActive = this.currentlyActive + 1),
            setTimeout(() => {
              z.toastRef.activate();
            })),
          this.toasts.push(z),
          z
        );
      }
      static ɵfac = function (i) {
        return new (i || n)(Z(Lf), Z(ex), Z(Ct), Z(dp), Z(Oe));
      };
      static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
    return n;
  })(),
  tx = (() => {
    class n {
      toastrService;
      toastPackage;
      ngZone;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = le(-1);
      toastClasses = "";
      state;
      get _state() {
        return this.state();
      }
      get displayStyle() {
        if (this.state().value === "inactive") return "none";
      }
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, i, o) {
        (this.toastrService = e),
          (this.toastPackage = i),
          (this.ngZone = o),
          (this.message = i.message),
          (this.title = i.title),
          (this.options = i.config),
          (this.originalTimeout = i.config.timeOut),
          (this.toastClasses = `${i.toastType} ${i.config.toastClass}`),
          (this.sub = i.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = i.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = i.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = i.toastRef.countDuplicate().subscribe((r) => {
            this.duplicatesCount = r;
          })),
          (this.state = le({
            value: "inactive",
            params: {
              easeTime: this.toastPackage.config.easeTime,
              easing: "ease-in",
            },
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.update((e) => et(ne({}, e), { value: "active" })),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            (this.outsideTimeout(() => this.remove(), this.options.timeOut),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              this.outsideInterval(() => this.updateProgress(), 10));
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          i = this.hideTime - e;
        this.width.set((i / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((o) => 100 - o),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.update((e) => et(ne({}, e), { value: "active" })),
          this.outsideTimeout(() => this.remove(), this.originalTimeout),
          (this.options.timeOut = this.originalTimeout),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10);
      }
      remove() {
        this.state().value !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.update((e) => et(ne({}, e), { value: "removed" })),
          this.outsideTimeout(
            () => this.toastrService.remove(this.toastPackage.toastId),
            +this.toastPackage.config.easeTime
          ));
      }
      tapToast() {
        this.state().value !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state().value !== "removed" &&
          this.options.disableTimeOut !== "extendedTimeOut" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state().value === "removed" ||
          (this.outsideTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          ),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            this.outsideInterval(() => this.updateProgress(), 10));
      }
      outsideTimeout(e, i) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.timeout = setTimeout(() => this.runInsideAngular(e), i))
            )
          : (this.timeout = setTimeout(() => e(), i));
      }
      outsideInterval(e, i) {
        this.ngZone
          ? this.ngZone.runOutsideAngular(
              () =>
                (this.intervalId = setInterval(
                  () => this.runInsideAngular(e),
                  i
                ))
            )
          : (this.intervalId = setInterval(() => e(), i));
      }
      runInsideAngular(e) {
        this.ngZone ? this.ngZone.run(() => e()) : e();
      }
      static ɵfac = function (i) {
        return new (i || n)(B(ai), B(xr), B(Oe));
      };
      static ɵcmp = oe({
        type: n,
        selectors: [["", "toast-component", ""]],
        hostVars: 5,
        hostBindings: function (i, o) {
          i & 1 &&
            F("click", function () {
              return o.tapToast();
            })("mouseenter", function () {
              return o.stickAround();
            })("mouseleave", function () {
              return o.delayedHideToast();
            }),
            i & 2 &&
              (cs("@flyInOut", o._state),
              Ae(o.toastClasses),
              gi("display", o.displayStyle));
        },
        standalone: !0,
        features: [re],
        attrs: Nf,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (i, o) {
          i & 1 &&
            k(0, jy, 3, 0, "button", 0)(1, Uy, 3, 5, "div", 1)(
              2,
              Wy,
              1,
              3,
              "div",
              2
            )(3, $y, 2, 4, "div", 3)(4, Gy, 2, 2, "div", 4),
            i & 2 &&
              (y("ngIf", o.options.closeButton),
              p(),
              y("ngIf", o.title),
              p(),
              y("ngIf", o.message && o.options.enableHtml),
              p(),
              y("ngIf", o.message && !o.options.enableHtml),
              p(),
              y("ngIf", o.options.progressBar));
        },
        dependencies: [Ke],
        encapsulation: 2,
        data: {
          animation: [
            To("flyInOut", [
              Ln("inactive", jt({ opacity: 0 })),
              Ln("active", jt({ opacity: 1 })),
              Ln("removed", jt({ opacity: 0 })),
              ki("inactive => active", Ei("{{ easeTime }}ms {{ easing }}")),
              ki("active => removed", Ei("{{ easeTime }}ms {{ easing }}")),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return n;
  })(),
  ix = et(ne({}, Vf), { toastComponent: tx }),
  nx = (n = {}) => ss([{ provide: Lf, useValue: { default: ix, config: n } }]),
  Bf = (() => {
    class n {
      static forRoot(e = {}) {
        return { ngModule: n, providers: [nx(e)] };
      }
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = _e({ type: n });
      static ɵinj = ge({});
    }
    return n;
  })();
var ox = (() => {
    class n {
      toastrService;
      toastPackage;
      appRef;
      message;
      title;
      options;
      duplicatesCount;
      originalTimeout;
      width = le(-1);
      toastClasses = "";
      get displayStyle() {
        return this.state() === "inactive" ? "none" : null;
      }
      state = le("inactive");
      timeout;
      intervalId;
      hideTime;
      sub;
      sub1;
      sub2;
      sub3;
      constructor(e, i, o) {
        (this.toastrService = e),
          (this.toastPackage = i),
          (this.appRef = o),
          (this.message = i.message),
          (this.title = i.title),
          (this.options = i.config),
          (this.originalTimeout = i.config.timeOut),
          (this.toastClasses = `${i.toastType} ${i.config.toastClass}`),
          (this.sub = i.toastRef.afterActivate().subscribe(() => {
            this.activateToast();
          })),
          (this.sub1 = i.toastRef.manualClosed().subscribe(() => {
            this.remove();
          })),
          (this.sub2 = i.toastRef.timeoutReset().subscribe(() => {
            this.resetTimeout();
          })),
          (this.sub3 = i.toastRef.countDuplicate().subscribe((r) => {
            this.duplicatesCount = r;
          }));
      }
      ngOnDestroy() {
        this.sub.unsubscribe(),
          this.sub1.unsubscribe(),
          this.sub2.unsubscribe(),
          this.sub3.unsubscribe(),
          clearInterval(this.intervalId),
          clearTimeout(this.timeout);
      }
      activateToast() {
        this.state.set("active"),
          !(
            this.options.disableTimeOut === !0 ||
            this.options.disableTimeOut === "timeOut"
          ) &&
            this.options.timeOut &&
            ((this.timeout = setTimeout(() => {
              this.remove();
            }, this.options.timeOut)),
            (this.hideTime = new Date().getTime() + this.options.timeOut),
            this.options.progressBar &&
              (this.intervalId = setInterval(() => this.updateProgress(), 10))),
          this.options.onActivateTick && this.appRef.tick();
      }
      updateProgress() {
        if (this.width() === 0 || this.width() === 100 || !this.options.timeOut)
          return;
        let e = new Date().getTime(),
          i = this.hideTime - e;
        this.width.set((i / this.options.timeOut) * 100),
          this.options.progressAnimation === "increasing" &&
            this.width.update((o) => 100 - o),
          this.width() <= 0 && this.width.set(0),
          this.width() >= 100 && this.width.set(100);
      }
      resetTimeout() {
        clearTimeout(this.timeout),
          clearInterval(this.intervalId),
          this.state.set("active"),
          (this.options.timeOut = this.originalTimeout),
          (this.timeout = setTimeout(
            () => this.remove(),
            this.originalTimeout
          )),
          (this.hideTime = new Date().getTime() + (this.originalTimeout || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10));
      }
      remove() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          this.state.set("removed"),
          (this.timeout = setTimeout(() =>
            this.toastrService.remove(this.toastPackage.toastId)
          )));
      }
      tapToast() {
        this.state() !== "removed" &&
          (this.toastPackage.triggerTap(),
          this.options.tapToDismiss && this.remove());
      }
      stickAround() {
        this.state() !== "removed" &&
          (clearTimeout(this.timeout),
          (this.options.timeOut = 0),
          (this.hideTime = 0),
          clearInterval(this.intervalId),
          this.width.set(0));
      }
      delayedHideToast() {
        this.options.disableTimeOut === !0 ||
          this.options.disableTimeOut === "extendedTimeOut" ||
          this.options.extendedTimeOut === 0 ||
          this.state() === "removed" ||
          ((this.timeout = setTimeout(
            () => this.remove(),
            this.options.extendedTimeOut
          )),
          (this.options.timeOut = this.options.extendedTimeOut),
          (this.hideTime = new Date().getTime() + (this.options.timeOut || 0)),
          this.width.set(-1),
          this.options.progressBar &&
            (this.intervalId = setInterval(() => this.updateProgress(), 10)));
      }
      static ɵfac = function (i) {
        return new (i || n)(B(ai), B(xr), B(Vn));
      };
      static ɵcmp = oe({
        type: n,
        selectors: [["", "toast-component", ""]],
        hostVars: 4,
        hostBindings: function (i, o) {
          i & 1 &&
            F("click", function () {
              return o.tapToast();
            })("mouseenter", function () {
              return o.stickAround();
            })("mouseleave", function () {
              return o.delayedHideToast();
            }),
            i & 2 && (Ae(o.toastClasses), gi("display", o.displayStyle));
        },
        standalone: !0,
        features: [re],
        attrs: Nf,
        decls: 5,
        vars: 5,
        consts: [
          [
            "type",
            "button",
            "class",
            "toast-close-button",
            "aria-label",
            "Close",
            3,
            "click",
            4,
            "ngIf",
          ],
          [3, "class", 4, "ngIf"],
          ["role", "alert", 3, "class", "innerHTML", 4, "ngIf"],
          ["role", "alert", 3, "class", 4, "ngIf"],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-label",
            "Close",
            1,
            "toast-close-button",
            3,
            "click",
          ],
          ["aria-hidden", "true"],
          ["role", "alert", 3, "innerHTML"],
          ["role", "alert"],
          [1, "toast-progress"],
        ],
        template: function (i, o) {
          i & 1 &&
            k(0, Yy, 3, 0, "button", 0)(1, Ky, 3, 5, "div", 1)(
              2,
              Qy,
              1,
              3,
              "div",
              2
            )(3, Xy, 2, 4, "div", 3)(4, Zy, 2, 2, "div", 4),
            i & 2 &&
              (y("ngIf", o.options.closeButton),
              p(),
              y("ngIf", o.title),
              p(),
              y("ngIf", o.message && o.options.enableHtml),
              p(),
              y("ngIf", o.message && !o.options.enableHtml),
              p(),
              y("ngIf", o.options.progressBar));
        },
        dependencies: [Ke],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })(),
  sO = et(ne({}, Vf), { toastComponent: ox });
var sx = ["*"];
var lx = ["dialog"];
var Hf = { animation: !0, transitionTimerDelayMs: 5 },
  cx = (() => {
    class n {
      constructor() {
        this.animation = Hf.animation;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function dx(n) {
  let { transitionDelay: t, transitionDuration: e } =
      window.getComputedStyle(n),
    i = parseFloat(t),
    o = parseFloat(e);
  return (i + o) * 1e3;
}
function jf(n) {
  return typeof n == "string";
}
function Qd(n) {
  return n != null;
}
function ux(n) {
  return n && n.then;
}
function zf(n) {
  return (n || document.body).getBoundingClientRect();
}
function hx(n) {
  return (t) =>
    new wo((e) => {
      let i = (a) => n.run(() => e.next(a)),
        o = (a) => n.run(() => e.error(a)),
        r = () => n.run(() => e.complete());
      return t.subscribe({ next: i, error: o, complete: r });
    });
}
var px = () => {},
  { transitionTimerDelayMs: mx } = Hf,
  hl = new Map(),
  Lo = (n, t, e, i) => {
    let o = i.context || {},
      r = hl.get(t);
    if (r)
      switch (i.runningTransition) {
        case "continue":
          return Nh;
        case "stop":
          n.run(() => r.transition$.complete()),
            (o = Object.assign(r.context, o)),
            hl.delete(t);
      }
    let a = e(t, i.animation, o) || px;
    if (
      !i.animation ||
      window.getComputedStyle(t).transitionProperty === "none"
    )
      return n.run(() => a()), xt(void 0).pipe(hx(n));
    let d = new Ee(),
      m = new Ee(),
      _ = d.pipe(zh(!0));
    hl.set(t, {
      transition$: d,
      complete: () => {
        m.next(), m.complete();
      },
      context: o,
    });
    let v = dx(t);
    return (
      n.runOutsideAngular(() => {
        let S = tn(t, "transitionend").pipe(
            Vt(_),
            di(({ target: M }) => M === t)
          ),
          T = Hh(v + mx).pipe(Vt(_));
        jh(T, S, m)
          .pipe(Vt(_))
          .subscribe(() => {
            hl.delete(t),
              n.run(() => {
                a(), d.next(), d.complete();
              });
          });
      }),
      d.asObservable()
    );
  };
var jO = (() => {
  let n = () =>
      /iPad|iPhone|iPod/.test(navigator.userAgent) ||
      (/Macintosh/.test(navigator.userAgent) &&
        navigator.maxTouchPoints &&
        navigator.maxTouchPoints > 2),
    t = () => /Android/.test(navigator.userAgent);
  return typeof navigator < "u" ? !!navigator.userAgent && (n() || t()) : !1;
})();
var fx = [
  "a[href]",
  "button:not([disabled])",
  'input:not([disabled]):not([type="hidden"])',
  "select:not([disabled])",
  "textarea:not([disabled])",
  "[contenteditable]",
  '[tabindex]:not([tabindex="-1"])',
].join(", ");
function Uf(n) {
  let t = Array.from(n.querySelectorAll(fx)).filter((e) => e.tabIndex !== -1);
  return [t[0], t[t.length - 1]];
}
var gx = (n, t, e, i = !1) => {
  n.runOutsideAngular(() => {
    let o = tn(t, "focusin").pipe(
      Vt(e),
      Fn((r) => r.target)
    );
    tn(t, "keydown")
      .pipe(
        Vt(e),
        di((r) => r.key === "Tab"),
        kc(o)
      )
      .subscribe(([r, a]) => {
        let [d, m] = Uf(t);
        (a === d || a === t) && r.shiftKey && (m.focus(), r.preventDefault()),
          a === m && !r.shiftKey && (d.focus(), r.preventDefault());
      }),
      i &&
        tn(t, "click")
          .pipe(
            Vt(e),
            kc(o),
            Fn((r) => r[1])
          )
          .subscribe((r) => r.focus());
  });
};
var zO = new Date(1882, 10, 12),
  UO = new Date(2174, 10, 25);
var WO = 1e3 * 60 * 60 * 24;
var Jd = 1080,
  _x = 24 * Jd,
  bx = 12 * Jd + 793,
  $O = 29 * _x + bx,
  GO = 11 * Jd + 204;
var vx = (() => {
    class n {
      constructor() {
        (this._ngbConfig = J(cx)),
          (this.backdrop = !0),
          (this.fullscreen = !1),
          (this.keyboard = !0);
      }
      get animation() {
        return this._animation ?? this._ngbConfig.animation;
      }
      set animation(e) {
        this._animation = e;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Cr = class {
    constructor(t, e, i) {
      (this.nodes = t), (this.viewRef = e), (this.componentRef = i);
    }
  };
var yx = (() => {
    class n {
      constructor() {
        this._document = J(Le);
      }
      hide() {
        let e = Math.abs(
            window.innerWidth - this._document.documentElement.clientWidth
          ),
          i = this._document.body,
          o = i.style,
          { overflow: r, paddingRight: a } = o;
        if (e > 0) {
          let d = parseFloat(window.getComputedStyle(i).paddingRight);
          o.paddingRight = `${d + e}px`;
        }
        return (
          (o.overflow = "hidden"),
          () => {
            e > 0 && (o.paddingRight = a), (o.overflow = r);
          }
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  xx = (() => {
    class n {
      constructor() {
        (this._nativeElement = J(ke).nativeElement),
          (this._zone = J(Oe)),
          (this._injector = J(Ct));
      }
      ngOnInit() {
        Nn(
          () =>
            Lo(
              this._zone,
              this._nativeElement,
              (e, i) => {
                i && zf(e), e.classList.add("show");
              },
              { animation: this.animation, runningTransition: "continue" }
            ),
          { injector: this._injector, phase: Ic.MixedReadWrite }
        );
      }
      hide() {
        return Lo(
          this._zone,
          this._nativeElement,
          ({ classList: e }) => e.remove("show"),
          { animation: this.animation, runningTransition: "stop" }
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["ngb-modal-backdrop"]],
          hostAttrs: [2, "z-index", "1055"],
          hostVars: 6,
          hostBindings: function (i, o) {
            i & 2 &&
              (Ae(
                "modal-backdrop" +
                  (o.backdropClass ? " " + o.backdropClass : "")
              ),
              fe("show", !o.animation)("fade", o.animation));
          },
          inputs: { animation: "animation", backdropClass: "backdropClass" },
          standalone: !0,
          features: [re],
          decls: 0,
          vars: 0,
          template: function (i, o) {},
          encapsulation: 2,
        });
      }
    }
    return n;
  })(),
  pl = class {
    update(t) {}
    close(t) {}
    dismiss(t) {}
  },
  Cx = [
    "animation",
    "ariaLabelledBy",
    "ariaDescribedBy",
    "backdrop",
    "centered",
    "fullscreen",
    "keyboard",
    "scrollable",
    "size",
    "windowClass",
    "modalDialogClass",
  ],
  wx = ["animation", "backdropClass"],
  Xd = class {
    _applyWindowOptions(t, e) {
      Cx.forEach((i) => {
        Qd(e[i]) && (t[i] = e[i]);
      });
    }
    _applyBackdropOptions(t, e) {
      wx.forEach((i) => {
        Qd(e[i]) && (t[i] = e[i]);
      });
    }
    update(t) {
      this._applyWindowOptions(this._windowCmptRef.instance, t),
        this._backdropCmptRef &&
          this._backdropCmptRef.instance &&
          this._applyBackdropOptions(this._backdropCmptRef.instance, t);
    }
    get componentInstance() {
      if (this._contentRef && this._contentRef.componentRef)
        return this._contentRef.componentRef.instance;
    }
    get closed() {
      return this._closed.asObservable().pipe(Vt(this._hidden));
    }
    get dismissed() {
      return this._dismissed.asObservable().pipe(Vt(this._hidden));
    }
    get hidden() {
      return this._hidden.asObservable();
    }
    get shown() {
      return this._windowCmptRef.instance.shown.asObservable();
    }
    constructor(t, e, i, o) {
      (this._windowCmptRef = t),
        (this._contentRef = e),
        (this._backdropCmptRef = i),
        (this._beforeDismiss = o),
        (this._closed = new Ee()),
        (this._dismissed = new Ee()),
        (this._hidden = new Ee()),
        t.instance.dismissEvent.subscribe((r) => {
          this.dismiss(r);
        }),
        (this.result = new Promise((r, a) => {
          (this._resolve = r), (this._reject = a);
        })),
        this.result.then(null, () => {});
    }
    close(t) {
      this._windowCmptRef &&
        (this._closed.next(t), this._resolve(t), this._removeModalElements());
    }
    _dismiss(t) {
      this._dismissed.next(t), this._reject(t), this._removeModalElements();
    }
    dismiss(t) {
      if (this._windowCmptRef)
        if (!this._beforeDismiss) this._dismiss(t);
        else {
          let e = this._beforeDismiss();
          ux(e)
            ? e.then(
                (i) => {
                  i !== !1 && this._dismiss(t);
                },
                () => {}
              )
            : e !== !1 && this._dismiss(t);
        }
    }
    _removeModalElements() {
      let t = this._windowCmptRef.instance.hide(),
        e = this._backdropCmptRef
          ? this._backdropCmptRef.instance.hide()
          : xt(void 0);
      t.subscribe(() => {
        let { nativeElement: i } = this._windowCmptRef.location;
        i.parentNode.removeChild(i),
          this._windowCmptRef.destroy(),
          this._contentRef?.viewRef?.destroy(),
          (this._windowCmptRef = null),
          (this._contentRef = null);
      }),
        e.subscribe(() => {
          if (this._backdropCmptRef) {
            let { nativeElement: i } = this._backdropCmptRef.location;
            i.parentNode.removeChild(i),
              this._backdropCmptRef.destroy(),
              (this._backdropCmptRef = null);
          }
        }),
        rs(t, e).subscribe(() => {
          this._hidden.next(), this._hidden.complete();
        });
    }
  },
  Zd = (function (n) {
    return (
      (n[(n.BACKDROP_CLICK = 0)] = "BACKDROP_CLICK"),
      (n[(n.ESC = 1)] = "ESC"),
      n
    );
  })(Zd || {}),
  Dx = (() => {
    class n {
      constructor() {
        (this._document = J(Le)),
          (this._elRef = J(ke)),
          (this._zone = J(Oe)),
          (this._injector = J(Ct)),
          (this._closed$ = new Ee()),
          (this._elWithFocus = null),
          (this.backdrop = !0),
          (this.keyboard = !0),
          (this.dismissEvent = new ve()),
          (this.shown = new Ee()),
          (this.hidden = new Ee());
      }
      get fullscreenClass() {
        return this.fullscreen === !0
          ? " modal-fullscreen"
          : jf(this.fullscreen)
          ? ` modal-fullscreen-${this.fullscreen}-down`
          : "";
      }
      dismiss(e) {
        this.dismissEvent.emit(e);
      }
      ngOnInit() {
        (this._elWithFocus = this._document.activeElement),
          Nn(() => this._show(), {
            injector: this._injector,
            phase: Ic.MixedReadWrite,
          });
      }
      ngOnDestroy() {
        this._disableEventHandling();
      }
      hide() {
        let { nativeElement: e } = this._elRef,
          i = { animation: this.animation, runningTransition: "stop" },
          o = Lo(this._zone, e, () => e.classList.remove("show"), i),
          r = Lo(this._zone, this._dialogEl.nativeElement, () => {}, i),
          a = rs(o, r);
        return (
          a.subscribe(() => {
            this.hidden.next(), this.hidden.complete();
          }),
          this._disableEventHandling(),
          this._restoreFocus(),
          a
        );
      }
      _show() {
        let e = { animation: this.animation, runningTransition: "continue" },
          i = Lo(
            this._zone,
            this._elRef.nativeElement,
            (r, a) => {
              a && zf(r), r.classList.add("show");
            },
            e
          ),
          o = Lo(this._zone, this._dialogEl.nativeElement, () => {}, e);
        rs(i, o).subscribe(() => {
          this.shown.next(), this.shown.complete();
        }),
          this._enableEventHandling(),
          this._setFocus();
      }
      _enableEventHandling() {
        let { nativeElement: e } = this._elRef;
        this._zone.runOutsideAngular(() => {
          tn(e, "keydown")
            .pipe(
              Vt(this._closed$),
              di((o) => o.key === "Escape")
            )
            .subscribe((o) => {
              this.keyboard
                ? requestAnimationFrame(() => {
                    o.defaultPrevented ||
                      this._zone.run(() => this.dismiss(Zd.ESC));
                  })
                : this.backdrop === "static" && this._bumpBackdrop();
            });
          let i = !1;
          tn(this._dialogEl.nativeElement, "mousedown")
            .pipe(
              Vt(this._closed$),
              Ec(() => (i = !1)),
              Tc(() => tn(e, "mouseup").pipe(Vt(this._closed$), Do(1))),
              di(({ target: o }) => e === o)
            )
            .subscribe(() => {
              i = !0;
            }),
            tn(e, "click")
              .pipe(Vt(this._closed$))
              .subscribe(({ target: o }) => {
                e === o &&
                  (this.backdrop === "static"
                    ? this._bumpBackdrop()
                    : this.backdrop === !0 &&
                      !i &&
                      this._zone.run(() => this.dismiss(Zd.BACKDROP_CLICK))),
                  (i = !1);
              });
        });
      }
      _disableEventHandling() {
        this._closed$.next();
      }
      _setFocus() {
        let { nativeElement: e } = this._elRef;
        if (!e.contains(document.activeElement)) {
          let i = e.querySelector("[ngbAutofocus]"),
            o = Uf(e)[0];
          (i || o || e).focus();
        }
      }
      _restoreFocus() {
        let e = this._document.body,
          i = this._elWithFocus,
          o;
        i && i.focus && e.contains(i) ? (o = i) : (o = e),
          this._zone.runOutsideAngular(() => {
            setTimeout(() => o.focus()), (this._elWithFocus = null);
          });
      }
      _bumpBackdrop() {
        this.backdrop === "static" &&
          Lo(
            this._zone,
            this._elRef.nativeElement,
            ({ classList: e }) => (
              e.add("modal-static"), () => e.remove("modal-static")
            ),
            { animation: this.animation, runningTransition: "continue" }
          );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["ngb-modal-window"]],
          viewQuery: function (i, o) {
            if ((i & 1 && Dt(lx, 7), i & 2)) {
              let r;
              rt((r = at())) && (o._dialogEl = r.first);
            }
          },
          hostAttrs: ["role", "dialog", "tabindex", "-1"],
          hostVars: 7,
          hostBindings: function (i, o) {
            i & 2 &&
              (ae("aria-modal", !0)("aria-labelledby", o.ariaLabelledBy)(
                "aria-describedby",
                o.ariaDescribedBy
              ),
              Ae("modal d-block" + (o.windowClass ? " " + o.windowClass : "")),
              fe("fade", o.animation));
          },
          inputs: {
            animation: "animation",
            ariaLabelledBy: "ariaLabelledBy",
            ariaDescribedBy: "ariaDescribedBy",
            backdrop: "backdrop",
            centered: "centered",
            fullscreen: "fullscreen",
            keyboard: "keyboard",
            scrollable: "scrollable",
            size: "size",
            windowClass: "windowClass",
            modalDialogClass: "modalDialogClass",
          },
          outputs: { dismissEvent: "dismiss" },
          standalone: !0,
          features: [re],
          ngContentSelectors: sx,
          decls: 4,
          vars: 2,
          consts: [
            ["dialog", ""],
            ["role", "document"],
            [1, "modal-content"],
          ],
          template: function (i, o) {
            i & 1 && (Lt(), c(0, "div", 1, 0)(2, "div", 2), wt(3), l()()),
              i & 2 &&
                Ae(
                  "modal-dialog" +
                    (o.size ? " modal-" + o.size : "") +
                    (o.centered ? " modal-dialog-centered" : "") +
                    o.fullscreenClass +
                    (o.scrollable ? " modal-dialog-scrollable" : "") +
                    (o.modalDialogClass ? " " + o.modalDialogClass : "")
                );
          },
          styles: [
            `ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}
`,
          ],
          encapsulation: 2,
        });
      }
    }
    return n;
  })(),
  Sx = (() => {
    class n {
      constructor() {
        (this._applicationRef = J(Vn)),
          (this._injector = J(Ct)),
          (this._environmentInjector = J(qr)),
          (this._document = J(Le)),
          (this._scrollBar = J(yx)),
          (this._activeWindowCmptHasChanged = new Ee()),
          (this._ariaHiddenValues = new Map()),
          (this._scrollBarRestoreFn = null),
          (this._modalRefs = []),
          (this._windowCmpts = []),
          (this._activeInstances = new ve());
        let e = J(Oe);
        this._activeWindowCmptHasChanged.subscribe(() => {
          if (this._windowCmpts.length) {
            let i = this._windowCmpts[this._windowCmpts.length - 1];
            gx(e, i.location.nativeElement, this._activeWindowCmptHasChanged),
              this._revertAriaHidden(),
              this._setAriaHidden(i.location.nativeElement);
          }
        });
      }
      _restoreScrollBar() {
        let e = this._scrollBarRestoreFn;
        e && ((this._scrollBarRestoreFn = null), e());
      }
      _hideScrollBar() {
        this._scrollBarRestoreFn ||
          (this._scrollBarRestoreFn = this._scrollBar.hide());
      }
      open(e, i, o) {
        let r =
          o.container instanceof HTMLElement
            ? o.container
            : Qd(o.container)
            ? this._document.querySelector(o.container)
            : this._document.body;
        if (!r)
          throw new Error(
            `The specified modal container "${
              o.container || "body"
            }" was not found in the DOM.`
          );
        this._hideScrollBar();
        let a = new pl();
        e = o.injector || e;
        let d = e.get(qr, null) || this._environmentInjector,
          m = this._getContentRef(e, d, i, a, o),
          _ = o.backdrop !== !1 ? this._attachBackdrop(r) : void 0,
          v = this._attachWindowComponent(r, m.nodes),
          S = new Xd(v, m, _, o.beforeDismiss);
        return (
          this._registerModalRef(S),
          this._registerWindowCmpt(v),
          S.hidden.pipe(Do(1)).subscribe(() =>
            Promise.resolve(!0).then(() => {
              this._modalRefs.length ||
                (this._document.body.classList.remove("modal-open"),
                this._restoreScrollBar(),
                this._revertAriaHidden());
            })
          ),
          (a.close = (T) => {
            S.close(T);
          }),
          (a.dismiss = (T) => {
            S.dismiss(T);
          }),
          (a.update = (T) => {
            S.update(T);
          }),
          S.update(o),
          this._modalRefs.length === 1 &&
            this._document.body.classList.add("modal-open"),
          _ && _.instance && _.changeDetectorRef.detectChanges(),
          v.changeDetectorRef.detectChanges(),
          S
        );
      }
      get activeInstances() {
        return this._activeInstances;
      }
      dismissAll(e) {
        this._modalRefs.forEach((i) => i.dismiss(e));
      }
      hasOpenModals() {
        return this._modalRefs.length > 0;
      }
      _attachBackdrop(e) {
        let i = ds(xx, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
        });
        return (
          this._applicationRef.attachView(i.hostView),
          e.appendChild(i.location.nativeElement),
          i
        );
      }
      _attachWindowComponent(e, i) {
        let o = ds(Dx, {
          environmentInjector: this._applicationRef.injector,
          elementInjector: this._injector,
          projectableNodes: i,
        });
        return (
          this._applicationRef.attachView(o.hostView),
          e.appendChild(o.location.nativeElement),
          o
        );
      }
      _getContentRef(e, i, o, r, a) {
        return o
          ? o instanceof yn
            ? this._createFromTemplateRef(o, r)
            : jf(o)
            ? this._createFromString(o)
            : this._createFromComponent(e, i, o, r, a)
          : new Cr([]);
      }
      _createFromTemplateRef(e, i) {
        let o = {
            $implicit: i,
            close(a) {
              i.close(a);
            },
            dismiss(a) {
              i.dismiss(a);
            },
          },
          r = e.createEmbeddedView(o);
        return this._applicationRef.attachView(r), new Cr([r.rootNodes], r);
      }
      _createFromString(e) {
        let i = this._document.createTextNode(`${e}`);
        return new Cr([[i]]);
      }
      _createFromComponent(e, i, o, r, a) {
        let d = Ct.create({
            providers: [{ provide: pl, useValue: r }],
            parent: e,
          }),
          m = ds(o, { environmentInjector: i, elementInjector: d }),
          _ = m.location.nativeElement;
        return (
          a.scrollable && _.classList.add("component-host-scrollable"),
          this._applicationRef.attachView(m.hostView),
          new Cr([[_]], m.hostView, m)
        );
      }
      _setAriaHidden(e) {
        let i = e.parentElement;
        i &&
          e !== this._document.body &&
          (Array.from(i.children).forEach((o) => {
            o !== e &&
              o.nodeName !== "SCRIPT" &&
              (this._ariaHiddenValues.set(o, o.getAttribute("aria-hidden")),
              o.setAttribute("aria-hidden", "true"));
          }),
          this._setAriaHidden(i));
      }
      _revertAriaHidden() {
        this._ariaHiddenValues.forEach((e, i) => {
          e
            ? i.setAttribute("aria-hidden", e)
            : i.removeAttribute("aria-hidden");
        }),
          this._ariaHiddenValues.clear();
      }
      _registerModalRef(e) {
        let i = () => {
          let o = this._modalRefs.indexOf(e);
          o > -1 &&
            (this._modalRefs.splice(o, 1),
            this._activeInstances.emit(this._modalRefs));
        };
        this._modalRefs.push(e),
          this._activeInstances.emit(this._modalRefs),
          e.result.then(i, i);
      }
      _registerWindowCmpt(e) {
        this._windowCmpts.push(e),
          this._activeWindowCmptHasChanged.next(),
          e.onDestroy(() => {
            let i = this._windowCmpts.indexOf(e);
            i > -1 &&
              (this._windowCmpts.splice(i, 1),
              this._activeWindowCmptHasChanged.next());
          });
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Ea = (() => {
    class n {
      constructor() {
        (this._injector = J(Ct)),
          (this._modalStack = J(Sx)),
          (this._config = J(vx));
      }
      open(e, i = {}) {
        let o = ne(
          et(ne({}, this._config), { animation: this._config.animation }),
          i
        );
        return this._modalStack.open(this._injector, e, o);
      }
      get activeInstances() {
        return this._modalStack.activeInstances;
      }
      dismissAll(e) {
        this._modalStack.dismissAll(e);
      }
      hasOpenModals() {
        return this._modalStack.hasOpenModals();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  Mn = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = _e({ type: n });
      }
      static {
        this.ɵinj = ge({ providers: [Ea] });
      }
    }
    return n;
  })();
var YO = new qe("live announcer delay", {
  providedIn: "root",
  factory: () => 100,
});
var Mx = (n) => ["/Admin/singleUser", n],
  eu = (n) => ({ "is-invalid": n });
function Tx(n, t) {
  n & 1 && (c(0, "tr")(1, "td", 48)(2, "p"), h(3, "No Dealers Found"), l()()());
}
function Ex(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "tr")(1, "td", 34),
      h(2),
      l(),
      c(3, "td", 34),
      h(4),
      l(),
      c(5, "td", 34),
      h(6),
      l(),
      c(7, "td", 34),
      h(8),
      l(),
      c(9, "td")(10, "div", 49)(11, "a", 50),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.onEdit(o.dealer_id));
      }),
      U(12, "i", 51),
      l(),
      c(13, "a", 52),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.openDeleteModal(o));
      }),
      U(14, "i", 53),
      l(),
      c(15, "a", 54)(16, "span", 55),
      U(17, "i", 56),
      l()()()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      o = w();
    p(2),
      N((o.currentPage - 1) * o.itemsPerPage + i + 1),
      p(2),
      N(e.dealer_name),
      p(2),
      N(e.dealer_code),
      p(2),
      N(e.dealer_email),
      p(7),
      y("routerLink", he(5, Mx, e.dealer_id));
  }
}
function kx(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "li", 57)(1, "a", 43),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.goToPage(o));
      }),
      h(2),
      l()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w();
    fe("active", e === i.currentPage), p(2), N(e);
  }
}
function Ox(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 58)(1, "div", 59)(2, "div", 60)(3, "div", 61)(4, "h5", 62),
      h(5, "Delete Dealer"),
      l()(),
      c(6, "div", 63),
      h(7, "Are you sure you want to delete this dealer?"),
      l(),
      c(8, "div", 64)(9, "button", 65),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeDeleteModal());
      }),
      h(10, "Cancel"),
      l(),
      c(11, "button", 66),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.deleteDealerId());
      }),
      h(12, "Delete"),
      l()()()()();
  }
}
function Ix(n, t) {
  n & 1 && (c(0, "span", 88), h(1, "*"), l());
}
function Px(n, t) {
  n & 1 &&
    (c(0, "div", 89)(1, "span"), h(2, "Dealer name is required."), l()());
}
function Ax(n, t) {
  n & 1 && (c(0, "span", 89), h(1, "*"), l());
}
function Rx(n, t) {
  n & 1 && (c(0, "span"), h(1, "Dealer code is required."), l());
}
function Fx(n, t) {
  if ((n & 1 && (c(0, "div", 89), k(1, Rx, 2, 0, "span", 35), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("dealer_code")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Nx(n, t) {
  n & 1 && (c(0, "span", 88), h(1, "*"), l());
}
function Vx(n, t) {
  n & 1 &&
    (c(0, "div", 89)(1, "span"), h(2, "Dealer email is required."), l()());
}
function Lx(n, t) {
  if (n & 1) {
    let e = ee();
    je(0),
      c(1, "button", 90),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.onUpdate());
      }),
      h(2, " Edit "),
      l(),
      ze();
  }
  if (n & 2) {
    let e = w(2);
    p(), y("disabled", !e.isFormChanged());
  }
}
function Bx(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 65),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.onSave());
      }),
      h(1, " save "),
      l();
  }
  if (n & 2) {
    let e = w(2);
    ae("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function Hx(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 67)(1, "div", 68)(2, "div", 69)(3, "div", 60)(4, "div", 61)(
      5,
      "h5",
      70
    ),
      h(6),
      l(),
      c(7, "button", 71),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeModal());
      }),
      c(8, "span", 72),
      h(9, "\xD7"),
      l()()(),
      c(10, "div", 73)(11, "div", 74)(12, "div", 75)(13, "label", 76),
      h(14, " Dealer Name "),
      k(15, Ix, 2, 0, "span", 77),
      l(),
      U(16, "input", 78),
      k(17, Px, 3, 0, "div", 79),
      l(),
      c(18, "div", 80)(19, "label", 81),
      h(20, " Dealer Code "),
      k(21, Ax, 2, 0, "span", 79),
      l(),
      U(22, "input", 82),
      k(23, Fx, 2, 1, "div", 79),
      l()(),
      c(24, "div", 74)(25, "div", 75)(26, "label", 83),
      h(27, " Dealer Email "),
      k(28, Nx, 2, 0, "span", 77),
      l(),
      U(29, "input", 84),
      k(30, Vx, 3, 0, "div", 79),
      l(),
      U(31, "div", 85),
      l()(),
      c(32, "div", 64),
      k(33, Lx, 3, 1, "ng-container", 86),
      c(34, "button", 87),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeModal());
      }),
      h(35, " Close "),
      l(),
      k(36, Bx, 2, 1, "ng-template", null, 0, Ot),
      l()()()()();
  }
  if (n & 2) {
    let e,
      i,
      o,
      r,
      a,
      d,
      m = ht(37),
      _ = w();
    p(6),
      K(" ", _.dealerObj.dealer_id ? "Edit Vehicle" : "Add New Dealer", " "),
      p(4),
      y("formGroup", _.useForm),
      p(5),
      y("ngIf", !_.isEditMode),
      p(),
      y(
        "ngClass",
        he(
          13,
          eu,
          !_.isEditMode &&
            ((e = _.useForm.get("dealer_name")) == null ? null : e.touched) &&
            ((e = _.useForm.get("dealer_name")) == null ? null : e.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        !_.isEditMode &&
          ((i = _.useForm.get("dealer_name")) == null ? null : i.touched) &&
          ((i = _.useForm.get("dealer_name")) == null ? null : i.invalid)
      ),
      p(4),
      y("ngIf", !_.isEditMode),
      p(),
      y(
        "ngClass",
        he(
          15,
          eu,
          !_.isEditMode &&
            ((o = _.useForm.get("dealer_code")) == null ? null : o.touched) &&
            ((o = _.useForm.get("dealer_code")) == null ? null : o.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        !_.isEditMode &&
          ((r = _.useForm.get("dealer_code")) == null ? null : r.touched) &&
          ((r = _.useForm.get("dealer_code")) == null ? null : r.invalid)
      ),
      p(5),
      y("ngIf", !_.isEditMode),
      p(),
      y(
        "ngClass",
        he(
          17,
          eu,
          !_.isEditMode &&
            ((a = _.useForm.get("dealer_email")) == null ? null : a.touched) &&
            ((a = _.useForm.get("dealer_email")) == null ? null : a.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        !_.isEditMode &&
          ((d = _.useForm.get("dealer_email")) == null ? null : d.touched) &&
          ((d = _.useForm.get("dealer_email")) == null ? null : d.invalid)
      ),
      p(3),
      y("ngIf", _.dealerObj == null ? null : _.dealerObj.dealer_id)(
        "ngIfElse",
        m
      );
  }
}
var ml = class n {
  constructor(t) {
    this.modalService = t;
    this.useForm = new vt({
      dealer_name: new Ze(null, [we.required, we.minLength(2)]),
      dealer_code: new Ze(null, [we.required, we.minLength(5)]),
      dealer_email: new Ze(null, [we.required, we.email]),
    });
  }
  http = J($t);
  dealerList = le([]);
  totalDealer = le(0);
  masterSrv = J(We);
  dealerObj = new Yn();
  selectedRowCount = 3;
  isLoading = !1;
  isModalVisible = !1;
  isModalOpen = !1;
  isEditMode = !1;
  useForm;
  previousValue = "";
  isDeleteModalOpen = !1;
  itemsPerPage = 10;
  originalDealerName = "";
  originalDealerC = "";
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  currentPage = 1;
  originalFormValue;
  searchTerm = "";
  filteredDealers = [];
  paginatedDealers = [];
  totalPages = 0;
  pages = [];
  toastr = J(ai);
  openModal(t) {
    (this.isModalOpen = !0),
      console.log("open modal called"),
      this.useForm.reset({
        dealer_name: null,
        dealer_code: null,
        dealer_email: null,
      }),
      (this.isModalVisible = !0),
      t
        ? ((this.previousValue = t.dealer_name),
          this.useForm.patchValue({
            dealer_name: t.dealer_name,
            dealer_code: t.dealer_code,
            dealer_email: t.dealer_email,
          }),
          (this.dealerObj = ne({}, t)))
        : (this.dealerObj = new Yn());
  }
  isDealerNameChanged() {
    return this.useForm.get("dealer_name")?.value !== this.originalDealerName;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (t, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllDealer(),
      this.getAllDealer();
  }
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe(
      (t) => {
        console.log("Dealer list updated:", t.data.dealer.rows),
          this.dealerList.set(t.data.dealer.rows),
          (this.filteredDealers = t.data.dealer.rows),
          this.totalDealer.set(t.data.dealer.count),
          this.initializeDealerPagination();
      },
      (t) => {
        this.toastr.error("Error fetching dealers", "Error"),
          console.error("Error fetching dealers:", t),
          this.dealerList.set([]),
          (this.filteredDealers = []),
          this.totalDealer.set(0),
          this.initializeDealerPagination();
      }
    );
  }
  initializeDealerPagination() {
    let t = this.filteredDealers.length;
    (this.totalPages = Math.ceil(t / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, i) => i + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateDealers();
  }
  applyFilterAndPagination() {
    let e = this.dealerList().filter(
      (r) =>
        r.dealer_name?.toLowerCase().includes(this.searchTerm.toLowerCase()) ||
        r.dealer_code
          ?.toString()
          .toLowerCase()
          .includes(this.searchTerm.toLowerCase())
    );
    (this.filteredDealers = e),
      (this.totalPages = Math.ceil(e.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (r, a) => a + 1));
    let i = (this.currentPage - 1) * this.itemsPerPage,
      o = i + this.itemsPerPage;
    this.paginatedDealers = e.slice(i, o);
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateDealers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredDealers = this.dealerList();
    else {
      let t = this.searchTerm.toLowerCase();
      this.filteredDealers = this.dealerList().filter((e) =>
        e.dealer_name.toLowerCase().includes(t)
      );
    }
    (this.currentPage = 1), this.paginateDealers();
  }
  min(t, e) {
    return Math.min(t, e);
  }
  updateVisiblePages() {
    let t =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(t, t + this.maxVisiblePages);
  }
  goToPage(t) {
    (this.currentPage = t), this.updateVisiblePages(), this.paginateDealers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateDealers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateDealers());
  }
  paginateDealers() {
    let e = this.dealerList().filter(
        (r) =>
          r.dealer_name
            ?.toLowerCase()
            .includes(this.searchTerm.toLowerCase()) ||
          r.dealer_code
            ?.toString()
            .toLowerCase()
            .includes(this.searchTerm.toLowerCase())
      ),
      i = (this.currentPage - 1) * this.itemsPerPage,
      o = i + this.itemsPerPage;
    this.paginatedDealers = e.slice(i, o);
  }
  openDeleteModal(t) {
    console.log("\u{1F5D1}\uFE0F Delete button clicked", t),
      (this.selectedDealerForDeletion = t),
      (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("Form Values on Save:", this.useForm.value),
      this.isEditMode ? this.onUpdate() : this.createNewDealer(),
      this.closeModal();
  }
  createNewDealer() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let t = this.useForm.value;
    console.log("Final Payload sent to API:", t),
      this.masterSrv.createDealer(t).subscribe(
        (e) => {
          this.toastr.success("Dealer created successfully!", "Success"),
            this.getAllDealer();
        },
        (e) => {
          console.error("Error creating dealer:", e),
            this.toastr.error("Error creating dealer", "Error");
        }
      );
  }
  onItemsPerPageChange(t) {
    (this.itemsPerPage = parseInt(t.target.value, 10)),
      (this.currentPage = 1),
      console.log("Dropdown changed to:", this.itemsPerPage),
      this.applyFilterAndPagination();
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.dealerObj = ne(ne({}, this.dealerObj), this.useForm.value)),
        console.log(
          "\u{1F680} Updated Payload before API call:",
          this.dealerObj
        ),
        this.masterSrv.updateDealer(this.dealerObj).subscribe(
          (t) => {
            console.log("\u2705 API Response:", t),
              t.status === 200
                ? (this.toastr.success(
                    t.message || "Dealer updated successfully",
                    "Success"
                  ),
                  (this.isModalOpen = !1),
                  (this.originalDealerName = ""),
                  (this.originalDealerC = ""),
                  setTimeout(() => {
                    this.getAllDealer();
                  }, 500))
                : this.toastr.error(t.message || "Update failed", "Error");
          },
          (t) => {
            console.error("\u274C API Error:", t);
            let e = t?.error?.message || "Failed to update dealer";
            this.toastr.error(e, "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(t) {
    console.log("Edit button clicked. Dealer ID:", t),
      (this.isEditMode = !0),
      this.masterSrv.getDealerById(t).subscribe(
        (e) => {
          let i = e?.data?.dealer;
          i
            ? ((this.dealerObj = et(ne({}, i), {
                dealer_code: Number(i.dealer_code),
              })),
              this.useForm.patchValue({
                dealer_name: i.dealer_name,
                dealer_code: Number(i.dealer_code),
              }),
              (this.originalFormValue = ne({}, this.useForm.value)),
              (this.isModalOpen = !0))
            : this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isFormChanged() {
    return (
      this.useForm.get("dealer_name")?.value !== this.originalDealerName ||
      this.useForm.get("dealer_code")?.value !== this.originalDealerC
    );
  }
  selectedDealerForDeletion = null;
  selectDealerForDeletion(t) {
    this.selectedDealerForDeletion = t;
  }
  deleteDealerId() {
    this.selectedDealerForDeletion && this.selectedDealerForDeletion.dealer_id
      ? this.masterSrv
          .deleteDealer(this.selectedDealerForDeletion.dealer_id)
          .subscribe(
            (t) => {
              this.getAllDealer(),
                this.closeModal(),
                this.toastr.success("Dealer Deleted", "Successful");
            },
            (t) => {
              alert(t.message || "Failed to delete vehicle");
            }
          )
      : alert("No vehicle selected for deletion");
  }
  static ɵfac = function (e) {
    return new (e || n)(B(Ea));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-dealer"]],
    standalone: !0,
    features: [re],
    decls: 74,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", "mt-10"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search users...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "5", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        "border",
        "2px solid #222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "href",
        "javascript:void(0);",
        1,
        "btn",
        "btn-success",
        "shadow",
        "btn-xs",
        "sharp",
        2,
        "margin-left",
        "5px",
        3,
        "routerLink",
      ],
      [1, "", 2, "margin-left", "0 !important"],
      [1, "fa", "fa-eye"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
      ],
      [1, "modal-dialog", "modal-lg"],
      [
        1,
        "modal-title",
        2,
        "align-items",
        "center",
        "margin-inline",
        "auto",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      [
        "for",
        "dealer_name",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      ["style", "color: red;", 4, "ngIf"],
      [
        "id",
        "dealer_name",
        "type",
        "text",
        "placeholder",
        "Dealer Name",
        "formControlName",
        "dealer_name",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "form-group", "col-md-6"],
      [
        "for",
        "dealer_code",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "YOM",
        "type",
        "text",
        "formControlName",
        "dealer_code",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [
        "for",
        "dealer_email",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "dealer_email",
        "type",
        "text",
        "placeholder",
        "Dealer email",
        "formControlName",
        "dealer_email",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [1, "row", 2, "margin-left", "-3px !important"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [2, "color", "red"],
      [1, "text-danger"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        2,
        "border-color",
        "#222fb9",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Utils"),
        l()(),
        c(7, "li", 7)(8, "a", 8),
        h(9, "Users "),
        l()()()(),
        c(10, "div", 9)(11, "div", 10)(12, "a", 11),
        F("click", function () {
          return i.openModal();
        }),
        U(13, "i", 12),
        h(14, "Add Dealer "),
        l()(),
        c(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Dealer"),
        l(),
        c(19, "h3", 16),
        h(20),
        l()()()(),
        c(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        U(26, "label", 22),
        c(27, "select", 23),
        F("change", function (r) {
          return i.onItemsPerPageChange(r);
        }),
        c(28, "option", 24),
        h(29, "10"),
        l(),
        c(30, "option", 25),
        h(31, "25"),
        l(),
        c(32, "option", 26),
        h(33, "50"),
        l(),
        c(34, "option", 27),
        h(35, "100"),
        l()(),
        c(36, "label", 28),
        h(37, "records per page"),
        l()(),
        c(38, "div", 29)(39, "div", 30)(40, "input", 31),
        bt("ngModelChange", function (r) {
          return _t(i.searchTerm, r) || (i.searchTerm = r), r;
        }),
        F("input", function () {
          return i.onSearchChange();
        }),
        l()()()(),
        c(41, "div", 32)(42, "table", 33)(43, "thead")(44, "tr")(45, "th", 34),
        h(46, "Sr No"),
        l(),
        c(47, "th", 34),
        h(48, "Dealer Name"),
        l(),
        c(49, "th", 34),
        h(50, "Dealer Code"),
        l(),
        c(51, "th", 34),
        h(52, "Dealer email"),
        l(),
        c(53, "th"),
        h(54, "Action"),
        l()()(),
        c(55, "tbody"),
        k(56, Tx, 4, 0, "tr", 35)(57, Ex, 18, 7, "tr", 36),
        l()()(),
        c(58, "div", 37)(59, "div", 38)(60, "div", 39),
        h(61),
        l()(),
        c(62, "div", 38)(63, "div", 40)(64, "ul", 41)(65, "li", 42)(
          66,
          "a",
          43
        ),
        F("click", function () {
          return i.previousPage();
        }),
        h(67, "Previous"),
        l()(),
        k(68, kx, 3, 3, "li", 44),
        c(69, "li", 45)(70, "a", 43),
        F("click", function () {
          return i.nextPage();
        }),
        h(71, "Next"),
        l()()()()()()()()()()(),
        k(72, Ox, 13, 0, "div", 46)(73, Hx, 38, 19, "div", 47)),
        e & 2 &&
          (p(20),
          K(" ", i.filteredDealers.length, " "),
          p(20),
          gt("ngModel", i.searchTerm),
          p(16),
          y("ngIf", i.paginatedDealers.length === 0),
          p(),
          y("ngForOf", i.paginatedDealers),
          p(4),
          _i(
            " Showing ",
            (i.currentPage - 1) * i.itemsPerPage + 1,
            " to ",
            i.min(i.currentPage * i.itemsPerPage, i.dealerList().length),
            " of ",
            i.dealerList().length,
            " entries "
          ),
          p(4),
          fe("disabled", i.currentPage === 1),
          p(3),
          y("ngForOf", i.visiblePages),
          p(),
          fe("disabled", i.currentPage === i.totalPages),
          p(3),
          y("ngIf", i.isDeleteModalOpen),
          p(),
          y("ngIf", i.isModalOpen));
    },
    dependencies: [
      De,
      It,
      Bt,
      Ke,
      wi,
      ni,
      oi,
      Yt,
      ii,
      Ci,
      Oi,
      Gt,
      it,
      Mn,
      Ui,
      Ii,
      Pi,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}input[_ngcontent-%COMP%]::-webkit-clear-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button, input[_ngcontent-%COMP%]::-webkit-calendar-picker-indicator{display:none!important;-webkit-appearance:none!important}input[_ngcontent-%COMP%]:invalid{box-shadow:none!important}input[_ngcontent-%COMP%]:-moz-ui-invalid{box-shadow:none!important}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border:none}.modal-backdrop[_ngcontent-%COMP%]{display:none!important}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.edit-btn[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:#fff;transition:all .3s ease}.edit-btn[_ngcontent-%COMP%]:hover:enabled{background-color:#222fb9;color:#fff}.edit-btn[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:not-allowed}#editButton[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}",
    ],
  });
};
var $f = (() => {
  class n {
    constructor(e, i, o) {
      (this.el = e), (this.vcr = i), (this.renderer = o), (this.dtOptions = {});
    }
    ngOnInit() {
      this.dtTrigger
        ? this.dtTrigger.subscribe((e) => {
            this.displayTable(e);
          })
        : this.displayTable(null);
    }
    ngOnDestroy() {
      this.dtTrigger && this.dtTrigger.unsubscribe(),
        this.dt && this.dt.destroy(!0);
    }
    displayTable(e) {
      e && (this.dtOptions = e),
        (this.dtInstance = new Promise((i, o) => {
          Promise.resolve(this.dtOptions).then((r) => {
            if (
              Object.keys(r).length === 0 &&
              $("tbody tr", this.el.nativeElement).length === 0
            ) {
              o("Both the table and dtOptions cannot be empty");
              return;
            }
            r.columns &&
              r.columns.forEach((d) => {
                (d.id ?? "").trim() === "" && (d.id = this.getColumnUniqueId());
              }),
              setTimeout(() => {
                let d = {
                  rowCallback: (m, _, v) => {
                    if (r.columns) {
                      let S = r.columns;
                      this.applyNgPipeTransform(m, S),
                        this.applyNgRefTemplate(m, S, _);
                    }
                    r.rowCallback && r.rowCallback(m, _, v);
                  },
                };
                (d = Object.assign({}, r, d)),
                  (this.dt = $(this.el.nativeElement).DataTable(d)),
                  i(this.dt);
              });
          });
        }));
    }
    applyNgPipeTransform(e, i) {
      i.filter((r) => r.ngPipeInstance && !r.ngTemplateRef).forEach((r) => {
        let a = r.ngPipeInstance,
          d = r.ngPipeArgs || [],
          m = i.filter((T) => T.visible !== !1).findIndex((T) => T.id === r.id),
          _ = e.childNodes.item(m),
          v = $(_).text(),
          S = a.transform(v, ...d);
        $(_).text(S);
      });
    }
    applyNgRefTemplate(e, i, o) {
      i.filter((a) => a.ngTemplateRef && !a.ngPipeInstance).forEach((a) => {
        let { ref: d, context: m } = a.ngTemplateRef,
          _ = i.filter((M) => M.visible !== !1).findIndex((M) => M.id === a.id),
          v = e.childNodes.item(_);
        $(v).html("");
        let S = Object.assign({}, m, m?.userData, { adtData: o }),
          T = this.vcr.createEmbeddedView(d, S);
        this.renderer.appendChild(v, T.rootNodes[0]);
      });
    }
    getColumnUniqueId() {
      let e = "",
        i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
      for (let o = 0; o < 6; o++) {
        let r = Math.floor(Math.random() * i.length);
        e += i.charAt(r);
      }
      return e.trim();
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(B(ke), B(nn), B(ui));
      };
    }
    static {
      this.ɵdir = Te({
        type: n,
        selectors: [["", "datatable", ""]],
        inputs: { dtOptions: "dtOptions", dtTrigger: "dtTrigger" },
      });
    }
  }
  return n;
})();
var wr = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({ imports: [De] });
    }
  }
  return n;
})();
var ka = class n {
  vehicle_id;
  YOM;
  vehicle_name;
  type;
  VIN;
  created_at;
  updated_at;
  corporate_id;
  deleted;
  chasis_number;
  demo_start_date;
  demo_end_date;
  constructor() {
    (this.deleted = !1),
      (this.vehicle_id = " "),
      (this.YOM = ""),
      (this.vehicle_name = ""),
      (this.type = ""),
      (this.VIN = ""),
      (this.created_at = ""),
      (this.updated_at = ""),
      (this.corporate_id = ""),
      (this.chasis_number = ""),
      (this.demo_start_date = " "),
      (this.demo_end_date = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var iu;
try {
  iu = typeof Intl < "u" && Intl.v8BreakIterator;
} catch {
  iu = !1;
}
var ft = (() => {
  class n {
    constructor(e) {
      (this._platformId = e),
        (this.isBrowser = this._platformId
          ? ji(this._platformId)
          : typeof document == "object" && !!document),
        (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
        (this.TRIDENT =
          this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
        (this.BLINK =
          this.isBrowser &&
          !!(window.chrome || iu) &&
          typeof CSS < "u" &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.WEBKIT =
          this.isBrowser &&
          /AppleWebKit/i.test(navigator.userAgent) &&
          !this.BLINK &&
          !this.EDGE &&
          !this.TRIDENT),
        (this.IOS =
          this.isBrowser &&
          /iPad|iPhone|iPod/.test(navigator.userAgent) &&
          !("MSStream" in window)),
        (this.FIREFOX =
          this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent)),
        (this.ANDROID =
          this.isBrowser &&
          /android/i.test(navigator.userAgent) &&
          !this.TRIDENT),
        (this.SAFARI =
          this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT);
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(Z(Ti));
      };
    }
    static {
      this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var Oa;
function zx() {
  if (Oa == null && typeof window < "u")
    try {
      window.addEventListener(
        "test",
        null,
        Object.defineProperty({}, "passive", { get: () => (Oa = !0) })
      );
    } finally {
      Oa = Oa || !1;
    }
  return Oa;
}
function Tn(n) {
  return zx() ? n : !!n.capture;
}
var Bo;
function Gf() {
  if (Bo == null) {
    if (
      typeof document != "object" ||
      !document ||
      typeof Element != "function" ||
      !Element
    )
      return (Bo = !1), Bo;
    if ("scrollBehavior" in document.documentElement.style) Bo = !0;
    else {
      let n = Element.prototype.scrollTo;
      n ? (Bo = !/\{\s*\[native code\]\s*\}/.test(n.toString())) : (Bo = !1);
    }
  }
  return Bo;
}
var tu;
function Ux() {
  if (tu == null) {
    let n = typeof document < "u" ? document.head : null;
    tu = !!(n && (n.createShadowRoot || n.attachShadow));
  }
  return tu;
}
function Yf(n) {
  if (Ux()) {
    let t = n.getRootNode ? n.getRootNode() : null;
    if (typeof ShadowRoot < "u" && ShadowRoot && t instanceof ShadowRoot)
      return t;
  }
  return null;
}
function nu() {
  let n = typeof document < "u" && document ? document.activeElement : null;
  for (; n && n.shadowRoot; ) {
    let t = n.shadowRoot.activeElement;
    if (t === n) break;
    n = t;
  }
  return n;
}
function Yi(n) {
  return n.composedPath ? n.composedPath()[0] : n.target;
}
function Ia() {
  return (
    (typeof __karma__ < "u" && !!__karma__) ||
    (typeof jasmine < "u" && !!jasmine) ||
    (typeof jest < "u" && !!jest) ||
    (typeof Mocha < "u" && !!Mocha)
  );
}
function qf(n, ...t) {
  return t.length
    ? t.some((e) => n[e])
    : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey;
}
function Sr(n) {
  return Array.isArray(n) ? n : [n];
}
function Nt(n) {
  return n == null ? "" : typeof n == "string" ? n : `${n}px`;
}
function qn(n) {
  return n instanceof ke ? n.nativeElement : n;
}
var Wx = (() => {
  class n {
    create(e) {
      return typeof MutationObserver > "u" ? null : new MutationObserver(e);
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var fl = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({ providers: [Wx] });
    }
  }
  return n;
})();
var Kf = new Set(),
  Ho,
  $x = (() => {
    class n {
      constructor(e, i) {
        (this._platform = e),
          (this._nonce = i),
          (this._matchMedia =
            this._platform.isBrowser && window.matchMedia
              ? window.matchMedia.bind(window)
              : Yx);
      }
      matchMedia(e) {
        return (
          (this._platform.WEBKIT || this._platform.BLINK) && Gx(e, this._nonce),
          this._matchMedia(e)
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(ft), Z(Yh, 8));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function Gx(n, t) {
  if (!Kf.has(n))
    try {
      Ho ||
        ((Ho = document.createElement("style")),
        t && Ho.setAttribute("nonce", t),
        Ho.setAttribute("type", "text/css"),
        document.head.appendChild(Ho)),
        Ho.sheet &&
          (Ho.sheet.insertRule(`@media ${n} {body{ }}`, 0), Kf.add(n));
    } catch (e) {
      console.error(e);
    }
}
function Yx(n) {
  return {
    matches: n === "all" || n === "",
    media: n,
    addListener: () => {},
    removeListener: () => {},
  };
}
var Xf = (() => {
  class n {
    constructor(e, i) {
      (this._mediaMatcher = e),
        (this._zone = i),
        (this._queries = new Map()),
        (this._destroySubject = new Ee());
    }
    ngOnDestroy() {
      this._destroySubject.next(), this._destroySubject.complete();
    }
    isMatched(e) {
      return Qf(Sr(e)).some((o) => this._registerQuery(o).mql.matches);
    }
    observe(e) {
      let o = Qf(Sr(e)).map((a) => this._registerQuery(a).observable),
        r = Dc(o);
      return (
        (r = Lh(r.pipe(Do(1)), r.pipe(Yr(1), Mc(0)))),
        r.pipe(
          Fn((a) => {
            let d = { matches: !1, breakpoints: {} };
            return (
              a.forEach(({ matches: m, query: _ }) => {
                (d.matches = d.matches || m), (d.breakpoints[_] = m);
              }),
              d
            );
          })
        )
      );
    }
    _registerQuery(e) {
      if (this._queries.has(e)) return this._queries.get(e);
      let i = this._mediaMatcher.matchMedia(e),
        r = {
          observable: new wo((a) => {
            let d = (m) => this._zone.run(() => a.next(m));
            return (
              i.addListener(d),
              () => {
                i.removeListener(d);
              }
            );
          }).pipe(
            Jn(i),
            Fn(({ matches: a }) => ({ query: e, matches: a })),
            Vt(this._destroySubject)
          ),
          mql: i,
        };
      return this._queries.set(e, r), r;
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(Z($x), Z(Oe));
      };
    }
    static {
      this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
function Qf(n) {
  return n
    .map((t) => t.split(","))
    .reduce((t, e) => t.concat(e))
    .map((t) => t.trim());
}
var Kx = (() => {
  class n {
    constructor(e) {
      this._platform = e;
    }
    isDisabled(e) {
      return e.hasAttribute("disabled");
    }
    isVisible(e) {
      return Xx(e) && getComputedStyle(e).visibility === "visible";
    }
    isTabbable(e) {
      if (!this._platform.isBrowser) return !1;
      let i = Qx(rC(e));
      if (i && (Zf(i) === -1 || !this.isVisible(i))) return !1;
      let o = e.nodeName.toLowerCase(),
        r = Zf(e);
      return e.hasAttribute("contenteditable")
        ? r !== -1
        : o === "iframe" ||
          o === "object" ||
          (this._platform.WEBKIT && this._platform.IOS && !nC(e))
        ? !1
        : o === "audio"
        ? e.hasAttribute("controls")
          ? r !== -1
          : !1
        : o === "video"
        ? r === -1
          ? !1
          : r !== null
          ? !0
          : this._platform.FIREFOX || e.hasAttribute("controls")
        : e.tabIndex >= 0;
    }
    isFocusable(e, i) {
      return (
        oC(e) &&
        !this.isDisabled(e) &&
        (i?.ignoreVisibility || this.isVisible(e))
      );
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(Z(ft));
      };
    }
    static {
      this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
function Qx(n) {
  try {
    return n.frameElement;
  } catch {
    return null;
  }
}
function Xx(n) {
  return !!(
    n.offsetWidth ||
    n.offsetHeight ||
    (typeof n.getClientRects == "function" && n.getClientRects().length)
  );
}
function Zx(n) {
  let t = n.nodeName.toLowerCase();
  return t === "input" || t === "select" || t === "button" || t === "textarea";
}
function Jx(n) {
  return tC(n) && n.type == "hidden";
}
function eC(n) {
  return iC(n) && n.hasAttribute("href");
}
function tC(n) {
  return n.nodeName.toLowerCase() == "input";
}
function iC(n) {
  return n.nodeName.toLowerCase() == "a";
}
function tg(n) {
  if (!n.hasAttribute("tabindex") || n.tabIndex === void 0) return !1;
  let t = n.getAttribute("tabindex");
  return !!(t && !isNaN(parseInt(t, 10)));
}
function Zf(n) {
  if (!tg(n)) return null;
  let t = parseInt(n.getAttribute("tabindex") || "", 10);
  return isNaN(t) ? -1 : t;
}
function nC(n) {
  let t = n.nodeName.toLowerCase(),
    e = t === "input" && n.type;
  return e === "text" || e === "password" || t === "select" || t === "textarea";
}
function oC(n) {
  return Jx(n)
    ? !1
    : Zx(n) || eC(n) || n.hasAttribute("contenteditable") || tg(n);
}
function rC(n) {
  return (n.ownerDocument && n.ownerDocument.defaultView) || window;
}
var ru = class {
    get enabled() {
      return this._enabled;
    }
    set enabled(t) {
      (this._enabled = t),
        this._startAnchor &&
          this._endAnchor &&
          (this._toggleAnchorTabIndex(t, this._startAnchor),
          this._toggleAnchorTabIndex(t, this._endAnchor));
    }
    constructor(t, e, i, o, r = !1, a) {
      (this._element = t),
        (this._checker = e),
        (this._ngZone = i),
        (this._document = o),
        (this._injector = a),
        (this._hasAttached = !1),
        (this.startAnchorListener = () => this.focusLastTabbableElement()),
        (this.endAnchorListener = () => this.focusFirstTabbableElement()),
        (this._enabled = !0),
        r || this.attachAnchors();
    }
    destroy() {
      let t = this._startAnchor,
        e = this._endAnchor;
      t &&
        (t.removeEventListener("focus", this.startAnchorListener), t.remove()),
        e &&
          (e.removeEventListener("focus", this.endAnchorListener), e.remove()),
        (this._startAnchor = this._endAnchor = null),
        (this._hasAttached = !1);
    }
    attachAnchors() {
      return this._hasAttached
        ? !0
        : (this._ngZone.runOutsideAngular(() => {
            this._startAnchor ||
              ((this._startAnchor = this._createAnchor()),
              this._startAnchor.addEventListener(
                "focus",
                this.startAnchorListener
              )),
              this._endAnchor ||
                ((this._endAnchor = this._createAnchor()),
                this._endAnchor.addEventListener(
                  "focus",
                  this.endAnchorListener
                ));
          }),
          this._element.parentNode &&
            (this._element.parentNode.insertBefore(
              this._startAnchor,
              this._element
            ),
            this._element.parentNode.insertBefore(
              this._endAnchor,
              this._element.nextSibling
            ),
            (this._hasAttached = !0)),
          this._hasAttached);
    }
    focusInitialElementWhenReady(t) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusInitialElement(t)));
      });
    }
    focusFirstTabbableElementWhenReady(t) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusFirstTabbableElement(t)));
      });
    }
    focusLastTabbableElementWhenReady(t) {
      return new Promise((e) => {
        this._executeOnStable(() => e(this.focusLastTabbableElement(t)));
      });
    }
    _getRegionBoundary(t) {
      let e = this._element.querySelectorAll(
        `[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`
      );
      return t == "start"
        ? e.length
          ? e[0]
          : this._getFirstTabbableElement(this._element)
        : e.length
        ? e[e.length - 1]
        : this._getLastTabbableElement(this._element);
    }
    focusInitialElement(t) {
      let e = this._element.querySelector(
        "[cdk-focus-initial], [cdkFocusInitial]"
      );
      if (e) {
        if (!this._checker.isFocusable(e)) {
          let i = this._getFirstTabbableElement(e);
          return i?.focus(t), !!i;
        }
        return e.focus(t), !0;
      }
      return this.focusFirstTabbableElement(t);
    }
    focusFirstTabbableElement(t) {
      let e = this._getRegionBoundary("start");
      return e && e.focus(t), !!e;
    }
    focusLastTabbableElement(t) {
      let e = this._getRegionBoundary("end");
      return e && e.focus(t), !!e;
    }
    hasAttached() {
      return this._hasAttached;
    }
    _getFirstTabbableElement(t) {
      if (this._checker.isFocusable(t) && this._checker.isTabbable(t)) return t;
      let e = t.children;
      for (let i = 0; i < e.length; i++) {
        let o =
          e[i].nodeType === this._document.ELEMENT_NODE
            ? this._getFirstTabbableElement(e[i])
            : null;
        if (o) return o;
      }
      return null;
    }
    _getLastTabbableElement(t) {
      if (this._checker.isFocusable(t) && this._checker.isTabbable(t)) return t;
      let e = t.children;
      for (let i = e.length - 1; i >= 0; i--) {
        let o =
          e[i].nodeType === this._document.ELEMENT_NODE
            ? this._getLastTabbableElement(e[i])
            : null;
        if (o) return o;
      }
      return null;
    }
    _createAnchor() {
      let t = this._document.createElement("div");
      return (
        this._toggleAnchorTabIndex(this._enabled, t),
        t.classList.add("cdk-visually-hidden"),
        t.classList.add("cdk-focus-trap-anchor"),
        t.setAttribute("aria-hidden", "true"),
        t
      );
    }
    _toggleAnchorTabIndex(t, e) {
      t ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
    }
    toggleAnchors(t) {
      this._startAnchor &&
        this._endAnchor &&
        (this._toggleAnchorTabIndex(t, this._startAnchor),
        this._toggleAnchorTabIndex(t, this._endAnchor));
    }
    _executeOnStable(t) {
      this._injector ? Nn(t, { injector: this._injector }) : setTimeout(t);
    }
  },
  aC = (() => {
    class n {
      constructor(e, i, o) {
        (this._checker = e),
          (this._ngZone = i),
          (this._injector = J(Ct)),
          (this._document = o);
      }
      create(e, i = !1) {
        return new ru(
          e,
          this._checker,
          this._ngZone,
          this._document,
          i,
          this._injector
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Kx), Z(Oe), Z(Le));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  ig = (() => {
    class n {
      get enabled() {
        return this.focusTrap?.enabled || !1;
      }
      set enabled(e) {
        this.focusTrap && (this.focusTrap.enabled = e);
      }
      constructor(e, i, o) {
        (this._elementRef = e),
          (this._focusTrapFactory = i),
          (this._previouslyFocusedElement = null),
          J(ft).isBrowser &&
            (this.focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
              !0
            ));
      }
      ngOnDestroy() {
        this.focusTrap?.destroy(),
          this._previouslyFocusedElement &&
            (this._previouslyFocusedElement.focus(),
            (this._previouslyFocusedElement = null));
      }
      ngAfterContentInit() {
        this.focusTrap?.attachAnchors(),
          this.autoCapture && this._captureFocus();
      }
      ngDoCheck() {
        this.focusTrap &&
          !this.focusTrap.hasAttached() &&
          this.focusTrap.attachAnchors();
      }
      ngOnChanges(e) {
        let i = e.autoCapture;
        i &&
          !i.firstChange &&
          this.autoCapture &&
          this.focusTrap?.hasAttached() &&
          this._captureFocus();
      }
      _captureFocus() {
        (this._previouslyFocusedElement = nu()),
          this.focusTrap?.focusInitialElementWhenReady();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(ke), B(aC), B(Le));
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [["", "cdkTrapFocus", ""]],
          inputs: {
            enabled: [2, "cdkTrapFocus", "enabled", xe],
            autoCapture: [2, "cdkTrapFocusAutoCapture", "autoCapture", xe],
          },
          exportAs: ["cdkTrapFocus"],
          standalone: !0,
          features: [kt, Et],
        });
      }
    }
    return n;
  })();
function au(n) {
  return n.buttons === 0 || n.detail === 0;
}
function su(n) {
  let t =
    (n.touches && n.touches[0]) || (n.changedTouches && n.changedTouches[0]);
  return (
    !!t &&
    t.identifier === -1 &&
    (t.radiusX == null || t.radiusX === 1) &&
    (t.radiusY == null || t.radiusY === 1)
  );
}
var sC = new qe("cdk-input-modality-detector-options"),
  lC = { ignoreKeys: [18, 17, 224, 91, 16] },
  ng = 650,
  Mr = Tn({ passive: !0, capture: !0 }),
  cC = (() => {
    class n {
      get mostRecentModality() {
        return this._modality.value;
      }
      constructor(e, i, o, r) {
        (this._platform = e),
          (this._mostRecentTarget = null),
          (this._modality = new en(null)),
          (this._lastTouchMs = 0),
          (this._onKeydown = (a) => {
            this._options?.ignoreKeys?.some((d) => d === a.keyCode) ||
              (this._modality.next("keyboard"),
              (this._mostRecentTarget = Yi(a)));
          }),
          (this._onMousedown = (a) => {
            Date.now() - this._lastTouchMs < ng ||
              (this._modality.next(au(a) ? "keyboard" : "mouse"),
              (this._mostRecentTarget = Yi(a)));
          }),
          (this._onTouchstart = (a) => {
            if (su(a)) {
              this._modality.next("keyboard");
              return;
            }
            (this._lastTouchMs = Date.now()),
              this._modality.next("touch"),
              (this._mostRecentTarget = Yi(a));
          }),
          (this._options = ne(ne({}, lC), r)),
          (this.modalityDetected = this._modality.pipe(Yr(1))),
          (this.modalityChanged = this.modalityDetected.pipe(as())),
          e.isBrowser &&
            i.runOutsideAngular(() => {
              o.addEventListener("keydown", this._onKeydown, Mr),
                o.addEventListener("mousedown", this._onMousedown, Mr),
                o.addEventListener("touchstart", this._onTouchstart, Mr);
            });
      }
      ngOnDestroy() {
        this._modality.complete(),
          this._platform.isBrowser &&
            (document.removeEventListener("keydown", this._onKeydown, Mr),
            document.removeEventListener("mousedown", this._onMousedown, Mr),
            document.removeEventListener("touchstart", this._onTouchstart, Mr));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(ft), Z(Oe), Z(Le), Z(sC, 8));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var _l = (function (n) {
    return (
      (n[(n.IMMEDIATE = 0)] = "IMMEDIATE"),
      (n[(n.EVENTUAL = 1)] = "EVENTUAL"),
      n
    );
  })(_l || {}),
  dC = new qe("cdk-focus-monitor-default-options"),
  gl = Tn({ passive: !0, capture: !0 }),
  lu = (() => {
    class n {
      constructor(e, i, o, r, a) {
        (this._ngZone = e),
          (this._platform = i),
          (this._inputModalityDetector = o),
          (this._origin = null),
          (this._windowFocused = !1),
          (this._originFromTouchInteraction = !1),
          (this._elementInfo = new Map()),
          (this._monitoredElementCount = 0),
          (this._rootNodeFocusListenerCount = new Map()),
          (this._windowFocusListener = () => {
            (this._windowFocused = !0),
              (this._windowFocusTimeoutId = window.setTimeout(
                () => (this._windowFocused = !1)
              ));
          }),
          (this._stopInputModalityDetector = new Ee()),
          (this._rootNodeFocusAndBlurListener = (d) => {
            let m = Yi(d);
            for (let _ = m; _; _ = _.parentElement)
              d.type === "focus" ? this._onFocus(d, _) : this._onBlur(d, _);
          }),
          (this._document = r),
          (this._detectionMode = a?.detectionMode || _l.IMMEDIATE);
      }
      monitor(e, i = !1) {
        let o = qn(e);
        if (!this._platform.isBrowser || o.nodeType !== 1) return xt();
        let r = Yf(o) || this._getDocument(),
          a = this._elementInfo.get(o);
        if (a) return i && (a.checkChildren = !0), a.subject;
        let d = { checkChildren: i, subject: new Ee(), rootNode: r };
        return (
          this._elementInfo.set(o, d),
          this._registerGlobalListeners(d),
          d.subject
        );
      }
      stopMonitoring(e) {
        let i = qn(e),
          o = this._elementInfo.get(i);
        o &&
          (o.subject.complete(),
          this._setClasses(i),
          this._elementInfo.delete(i),
          this._removeGlobalListeners(o));
      }
      focusVia(e, i, o) {
        let r = qn(e),
          a = this._getDocument().activeElement;
        r === a
          ? this._getClosestElementsInfo(r).forEach(([d, m]) =>
              this._originChanged(d, i, m)
            )
          : (this._setOrigin(i), typeof r.focus == "function" && r.focus(o));
      }
      ngOnDestroy() {
        this._elementInfo.forEach((e, i) => this.stopMonitoring(i));
      }
      _getDocument() {
        return this._document || document;
      }
      _getWindow() {
        return this._getDocument().defaultView || window;
      }
      _getFocusOrigin(e) {
        return this._origin
          ? this._originFromTouchInteraction
            ? this._shouldBeAttributedToTouch(e)
              ? "touch"
              : "program"
            : this._origin
          : this._windowFocused && this._lastFocusOrigin
          ? this._lastFocusOrigin
          : e && this._isLastInteractionFromInputLabel(e)
          ? "mouse"
          : "program";
      }
      _shouldBeAttributedToTouch(e) {
        return (
          this._detectionMode === _l.EVENTUAL ||
          !!e?.contains(this._inputModalityDetector._mostRecentTarget)
        );
      }
      _setClasses(e, i) {
        e.classList.toggle("cdk-focused", !!i),
          e.classList.toggle("cdk-touch-focused", i === "touch"),
          e.classList.toggle("cdk-keyboard-focused", i === "keyboard"),
          e.classList.toggle("cdk-mouse-focused", i === "mouse"),
          e.classList.toggle("cdk-program-focused", i === "program");
      }
      _setOrigin(e, i = !1) {
        this._ngZone.runOutsideAngular(() => {
          if (
            ((this._origin = e),
            (this._originFromTouchInteraction = e === "touch" && i),
            this._detectionMode === _l.IMMEDIATE)
          ) {
            clearTimeout(this._originTimeoutId);
            let o = this._originFromTouchInteraction ? ng : 1;
            this._originTimeoutId = setTimeout(() => (this._origin = null), o);
          }
        });
      }
      _onFocus(e, i) {
        let o = this._elementInfo.get(i),
          r = Yi(e);
        !o ||
          (!o.checkChildren && i !== r) ||
          this._originChanged(i, this._getFocusOrigin(r), o);
      }
      _onBlur(e, i) {
        let o = this._elementInfo.get(i);
        !o ||
          (o.checkChildren &&
            e.relatedTarget instanceof Node &&
            i.contains(e.relatedTarget)) ||
          (this._setClasses(i), this._emitOrigin(o, null));
      }
      _emitOrigin(e, i) {
        e.subject.observers.length && this._ngZone.run(() => e.subject.next(i));
      }
      _registerGlobalListeners(e) {
        if (!this._platform.isBrowser) return;
        let i = e.rootNode,
          o = this._rootNodeFocusListenerCount.get(i) || 0;
        o ||
          this._ngZone.runOutsideAngular(() => {
            i.addEventListener("focus", this._rootNodeFocusAndBlurListener, gl),
              i.addEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                gl
              );
          }),
          this._rootNodeFocusListenerCount.set(i, o + 1),
          ++this._monitoredElementCount === 1 &&
            (this._ngZone.runOutsideAngular(() => {
              this._getWindow().addEventListener(
                "focus",
                this._windowFocusListener
              );
            }),
            this._inputModalityDetector.modalityDetected
              .pipe(Vt(this._stopInputModalityDetector))
              .subscribe((r) => {
                this._setOrigin(r, !0);
              }));
      }
      _removeGlobalListeners(e) {
        let i = e.rootNode;
        if (this._rootNodeFocusListenerCount.has(i)) {
          let o = this._rootNodeFocusListenerCount.get(i);
          o > 1
            ? this._rootNodeFocusListenerCount.set(i, o - 1)
            : (i.removeEventListener(
                "focus",
                this._rootNodeFocusAndBlurListener,
                gl
              ),
              i.removeEventListener(
                "blur",
                this._rootNodeFocusAndBlurListener,
                gl
              ),
              this._rootNodeFocusListenerCount.delete(i));
        }
        --this._monitoredElementCount ||
          (this._getWindow().removeEventListener(
            "focus",
            this._windowFocusListener
          ),
          this._stopInputModalityDetector.next(),
          clearTimeout(this._windowFocusTimeoutId),
          clearTimeout(this._originTimeoutId));
      }
      _originChanged(e, i, o) {
        this._setClasses(e, i),
          this._emitOrigin(o, i),
          (this._lastFocusOrigin = i);
      }
      _getClosestElementsInfo(e) {
        let i = [];
        return (
          this._elementInfo.forEach((o, r) => {
            (r === e || (o.checkChildren && r.contains(e))) && i.push([r, o]);
          }),
          i
        );
      }
      _isLastInteractionFromInputLabel(e) {
        let { _mostRecentTarget: i, mostRecentModality: o } =
          this._inputModalityDetector;
        if (
          o !== "mouse" ||
          !i ||
          i === e ||
          (e.nodeName !== "INPUT" && e.nodeName !== "TEXTAREA") ||
          e.disabled
        )
          return !1;
        let r = e.labels;
        if (r) {
          for (let a = 0; a < r.length; a++) if (r[a].contains(i)) return !0;
        }
        return !1;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe), Z(ft), Z(cC), Z(Le, 8), Z(dC, 8));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  og = (() => {
    class n {
      constructor(e, i) {
        (this._elementRef = e),
          (this._focusMonitor = i),
          (this._focusOrigin = null),
          (this.cdkFocusChange = new ve());
      }
      get focusOrigin() {
        return this._focusOrigin;
      }
      ngAfterViewInit() {
        let e = this._elementRef.nativeElement;
        this._monitorSubscription = this._focusMonitor
          .monitor(
            e,
            e.nodeType === 1 && e.hasAttribute("cdkMonitorSubtreeFocus")
          )
          .subscribe((i) => {
            (this._focusOrigin = i), this.cdkFocusChange.emit(i);
          });
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._monitorSubscription && this._monitorSubscription.unsubscribe();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(ke), B(lu));
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["", "cdkMonitorElementFocus", ""],
            ["", "cdkMonitorSubtreeFocus", ""],
          ],
          outputs: { cdkFocusChange: "cdkFocusChange" },
          exportAs: ["cdkMonitorFocus"],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  jo = (function (n) {
    return (
      (n[(n.NONE = 0)] = "NONE"),
      (n[(n.BLACK_ON_WHITE = 1)] = "BLACK_ON_WHITE"),
      (n[(n.WHITE_ON_BLACK = 2)] = "WHITE_ON_BLACK"),
      n
    );
  })(jo || {}),
  Jf = "cdk-high-contrast-black-on-white",
  eg = "cdk-high-contrast-white-on-black",
  ou = "cdk-high-contrast-active",
  cu = (() => {
    class n {
      constructor(e, i) {
        (this._platform = e),
          (this._document = i),
          (this._breakpointSubscription = J(Xf)
            .observe("(forced-colors: active)")
            .subscribe(() => {
              this._hasCheckedHighContrastMode &&
                ((this._hasCheckedHighContrastMode = !1),
                this._applyBodyHighContrastModeCssClasses());
            }));
      }
      getHighContrastMode() {
        if (!this._platform.isBrowser) return jo.NONE;
        let e = this._document.createElement("div");
        (e.style.backgroundColor = "rgb(1,2,3)"),
          (e.style.position = "absolute"),
          this._document.body.appendChild(e);
        let i = this._document.defaultView || window,
          o = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
          r = ((o && o.backgroundColor) || "").replace(/ /g, "");
        switch ((e.remove(), r)) {
          case "rgb(0,0,0)":
          case "rgb(45,50,54)":
          case "rgb(32,32,32)":
            return jo.WHITE_ON_BLACK;
          case "rgb(255,255,255)":
          case "rgb(255,250,239)":
            return jo.BLACK_ON_WHITE;
        }
        return jo.NONE;
      }
      ngOnDestroy() {
        this._breakpointSubscription.unsubscribe();
      }
      _applyBodyHighContrastModeCssClasses() {
        if (
          !this._hasCheckedHighContrastMode &&
          this._platform.isBrowser &&
          this._document.body
        ) {
          let e = this._document.body.classList;
          e.remove(ou, Jf, eg), (this._hasCheckedHighContrastMode = !0);
          let i = this.getHighContrastMode();
          i === jo.BLACK_ON_WHITE
            ? e.add(ou, Jf)
            : i === jo.WHITE_ON_BLACK && e.add(ou, eg);
        }
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(ft), Z(Le));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  rg = (() => {
    class n {
      constructor(e) {
        e._applyBodyHighContrastModeCssClasses();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(cu));
        };
      }
      static {
        this.ɵmod = _e({ type: n });
      }
      static {
        this.ɵinj = ge({ imports: [fl] });
      }
    }
    return n;
  })();
var hC = new qe("cdk-dir-doc", { providedIn: "root", factory: pC });
function pC() {
  return J(Le);
}
var mC =
  /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
function fC(n) {
  let t = n?.toLowerCase() || "";
  return t === "auto" && typeof navigator < "u" && navigator?.language
    ? mC.test(navigator.language)
      ? "rtl"
      : "ltr"
    : t === "rtl"
    ? "rtl"
    : "ltr";
}
var Tr = (() => {
  class n {
    constructor(e) {
      if (((this.value = "ltr"), (this.change = new ve()), e)) {
        let i = e.body ? e.body.dir : null,
          o = e.documentElement ? e.documentElement.dir : null;
        this.value = fC(i || o || "ltr");
      }
    }
    ngOnDestroy() {
      this.change.complete();
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(Z(hC, 8));
      };
    }
    static {
      this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
    }
  }
  return n;
})();
var ho = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({});
    }
  }
  return n;
})();
var bC = 20,
  sg = (() => {
    class n {
      constructor(e, i, o) {
        (this._ngZone = e),
          (this._platform = i),
          (this._scrolled = new Ee()),
          (this._globalSubscription = null),
          (this._scrolledCount = 0),
          (this.scrollContainers = new Map()),
          (this._document = o);
      }
      register(e) {
        this.scrollContainers.has(e) ||
          this.scrollContainers.set(
            e,
            e.elementScrolled().subscribe(() => this._scrolled.next(e))
          );
      }
      deregister(e) {
        let i = this.scrollContainers.get(e);
        i && (i.unsubscribe(), this.scrollContainers.delete(e));
      }
      scrolled(e = bC) {
        return this._platform.isBrowser
          ? new wo((i) => {
              this._globalSubscription || this._addGlobalListener();
              let o =
                e > 0
                  ? this._scrolled.pipe(Sc(e)).subscribe(i)
                  : this._scrolled.subscribe(i);
              return (
                this._scrolledCount++,
                () => {
                  o.unsubscribe(),
                    this._scrolledCount--,
                    this._scrolledCount || this._removeGlobalListener();
                }
              );
            })
          : xt();
      }
      ngOnDestroy() {
        this._removeGlobalListener(),
          this.scrollContainers.forEach((e, i) => this.deregister(i)),
          this._scrolled.complete();
      }
      ancestorScrolled(e, i) {
        let o = this.getAncestorScrollContainers(e);
        return this.scrolled(i).pipe(di((r) => !r || o.indexOf(r) > -1));
      }
      getAncestorScrollContainers(e) {
        let i = [];
        return (
          this.scrollContainers.forEach((o, r) => {
            this._scrollableContainsElement(r, e) && i.push(r);
          }),
          i
        );
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _scrollableContainsElement(e, i) {
        let o = qn(i),
          r = e.getElementRef().nativeElement;
        do if (o == r) return !0;
        while ((o = o.parentElement));
        return !1;
      }
      _addGlobalListener() {
        this._globalSubscription = this._ngZone.runOutsideAngular(() => {
          let e = this._getWindow();
          return tn(e.document, "scroll").subscribe(() =>
            this._scrolled.next()
          );
        });
      }
      _removeGlobalListener() {
        this._globalSubscription &&
          (this._globalSubscription.unsubscribe(),
          (this._globalSubscription = null));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Oe), Z(ft), Z(Le, 8));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var vC = 20,
  du = (() => {
    class n {
      constructor(e, i, o) {
        (this._platform = e),
          (this._change = new Ee()),
          (this._changeListener = (r) => {
            this._change.next(r);
          }),
          (this._document = o),
          i.runOutsideAngular(() => {
            if (e.isBrowser) {
              let r = this._getWindow();
              r.addEventListener("resize", this._changeListener),
                r.addEventListener("orientationchange", this._changeListener);
            }
            this.change().subscribe(() => (this._viewportSize = null));
          });
      }
      ngOnDestroy() {
        if (this._platform.isBrowser) {
          let e = this._getWindow();
          e.removeEventListener("resize", this._changeListener),
            e.removeEventListener("orientationchange", this._changeListener);
        }
        this._change.complete();
      }
      getViewportSize() {
        this._viewportSize || this._updateViewportSize();
        let e = {
          width: this._viewportSize.width,
          height: this._viewportSize.height,
        };
        return this._platform.isBrowser || (this._viewportSize = null), e;
      }
      getViewportRect() {
        let e = this.getViewportScrollPosition(),
          { width: i, height: o } = this.getViewportSize();
        return {
          top: e.top,
          left: e.left,
          bottom: e.top + o,
          right: e.left + i,
          height: o,
          width: i,
        };
      }
      getViewportScrollPosition() {
        if (!this._platform.isBrowser) return { top: 0, left: 0 };
        let e = this._document,
          i = this._getWindow(),
          o = e.documentElement,
          r = o.getBoundingClientRect(),
          a = -r.top || e.body.scrollTop || i.scrollY || o.scrollTop || 0,
          d = -r.left || e.body.scrollLeft || i.scrollX || o.scrollLeft || 0;
        return { top: a, left: d };
      }
      change(e = vC) {
        return e > 0 ? this._change.pipe(Sc(e)) : this._change;
      }
      _getWindow() {
        return this._document.defaultView || window;
      }
      _updateViewportSize() {
        let e = this._getWindow();
        this._viewportSize = this._platform.isBrowser
          ? { width: e.innerWidth, height: e.innerHeight }
          : { width: 0, height: 0 };
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(ft), Z(Oe), Z(Le, 8));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var bl = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = _e({ type: n });
      }
      static {
        this.ɵinj = ge({});
      }
    }
    return n;
  })(),
  uu = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = _e({ type: n });
      }
      static {
        this.ɵinj = ge({ imports: [ho, bl, ho, bl] });
      }
    }
    return n;
  })();
var Pa = class {
    attach(t) {
      return (this._attachedHost = t), t.attach(this);
    }
    detach() {
      let t = this._attachedHost;
      t != null && ((this._attachedHost = null), t.detach());
    }
    get isAttached() {
      return this._attachedHost != null;
    }
    setAttachedHost(t) {
      this._attachedHost = t;
    }
  },
  Aa = class extends Pa {
    constructor(t, e, i, o, r) {
      super(),
        (this.component = t),
        (this.viewContainerRef = e),
        (this.injector = i),
        (this.componentFactoryResolver = o),
        (this.projectableNodes = r);
    }
  },
  Ra = class extends Pa {
    constructor(t, e, i, o) {
      super(),
        (this.templateRef = t),
        (this.viewContainerRef = e),
        (this.context = i),
        (this.injector = o);
    }
    get origin() {
      return this.templateRef.elementRef;
    }
    attach(t, e = this.context) {
      return (this.context = e), super.attach(t);
    }
    detach() {
      return (this.context = void 0), super.detach();
    }
  },
  hu = class extends Pa {
    constructor(t) {
      super(), (this.element = t instanceof ke ? t.nativeElement : t);
    }
  },
  vl = class {
    constructor() {
      (this._isDisposed = !1), (this.attachDomPortal = null);
    }
    hasAttached() {
      return !!this._attachedPortal;
    }
    attach(t) {
      if (t instanceof Aa)
        return (this._attachedPortal = t), this.attachComponentPortal(t);
      if (t instanceof Ra)
        return (this._attachedPortal = t), this.attachTemplatePortal(t);
      if (this.attachDomPortal && t instanceof hu)
        return (this._attachedPortal = t), this.attachDomPortal(t);
    }
    detach() {
      this._attachedPortal &&
        (this._attachedPortal.setAttachedHost(null),
        (this._attachedPortal = null)),
        this._invokeDisposeFn();
    }
    dispose() {
      this.hasAttached() && this.detach(),
        this._invokeDisposeFn(),
        (this._isDisposed = !0);
    }
    setDisposeFn(t) {
      this._disposeFn = t;
    }
    _invokeDisposeFn() {
      this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
    }
  };
var yl = class extends vl {
  constructor(t, e, i, o, r) {
    super(),
      (this.outletElement = t),
      (this._componentFactoryResolver = e),
      (this._appRef = i),
      (this._defaultInjector = o),
      (this.attachDomPortal = (a) => {
        this._document;
        let d = a.element;
        d.parentNode;
        let m = this._document.createComment("dom-portal");
        d.parentNode.insertBefore(m, d),
          this.outletElement.appendChild(d),
          (this._attachedPortal = a),
          super.setDisposeFn(() => {
            m.parentNode && m.parentNode.replaceChild(d, m);
          });
      }),
      (this._document = r);
  }
  attachComponentPortal(t) {
    let i = (
        t.componentFactoryResolver || this._componentFactoryResolver
      ).resolveComponentFactory(t.component),
      o;
    return (
      t.viewContainerRef
        ? ((o = t.viewContainerRef.createComponent(
            i,
            t.viewContainerRef.length,
            t.injector || t.viewContainerRef.injector,
            t.projectableNodes || void 0
          )),
          this.setDisposeFn(() => o.destroy()))
        : ((o = i.create(t.injector || this._defaultInjector || Ct.NULL)),
          this._appRef.attachView(o.hostView),
          this.setDisposeFn(() => {
            this._appRef.viewCount > 0 && this._appRef.detachView(o.hostView),
              o.destroy();
          })),
      this.outletElement.appendChild(this._getComponentRootNode(o)),
      (this._attachedPortal = t),
      o
    );
  }
  attachTemplatePortal(t) {
    let e = t.viewContainerRef,
      i = e.createEmbeddedView(t.templateRef, t.context, {
        injector: t.injector,
      });
    return (
      i.rootNodes.forEach((o) => this.outletElement.appendChild(o)),
      i.detectChanges(),
      this.setDisposeFn(() => {
        let o = e.indexOf(i);
        o !== -1 && e.remove(o);
      }),
      (this._attachedPortal = t),
      i
    );
  }
  dispose() {
    super.dispose(), this.outletElement.remove();
  }
  _getComponentRootNode(t) {
    return t.hostView.rootNodes[0];
  }
};
var pu = (() => {
  class n extends vl {
    constructor(e, i, o) {
      super(),
        (this._componentFactoryResolver = e),
        (this._viewContainerRef = i),
        (this._isInitialized = !1),
        (this.attached = new ve()),
        (this.attachDomPortal = (r) => {
          this._document;
          let a = r.element;
          a.parentNode;
          let d = this._document.createComment("dom-portal");
          r.setAttachedHost(this),
            a.parentNode.insertBefore(d, a),
            this._getRootNode().appendChild(a),
            (this._attachedPortal = r),
            super.setDisposeFn(() => {
              d.parentNode && d.parentNode.replaceChild(a, d);
            });
        }),
        (this._document = o);
    }
    get portal() {
      return this._attachedPortal;
    }
    set portal(e) {
      (this.hasAttached() && !e && !this._isInitialized) ||
        (this.hasAttached() && super.detach(),
        e && super.attach(e),
        (this._attachedPortal = e || null));
    }
    get attachedRef() {
      return this._attachedRef;
    }
    ngOnInit() {
      this._isInitialized = !0;
    }
    ngOnDestroy() {
      super.dispose(), (this._attachedRef = this._attachedPortal = null);
    }
    attachComponentPortal(e) {
      e.setAttachedHost(this);
      let i =
          e.viewContainerRef != null
            ? e.viewContainerRef
            : this._viewContainerRef,
        r = (
          e.componentFactoryResolver || this._componentFactoryResolver
        ).resolveComponentFactory(e.component),
        a = i.createComponent(
          r,
          i.length,
          e.injector || i.injector,
          e.projectableNodes || void 0
        );
      return (
        i !== this._viewContainerRef &&
          this._getRootNode().appendChild(a.hostView.rootNodes[0]),
        super.setDisposeFn(() => a.destroy()),
        (this._attachedPortal = e),
        (this._attachedRef = a),
        this.attached.emit(a),
        a
      );
    }
    attachTemplatePortal(e) {
      e.setAttachedHost(this);
      let i = this._viewContainerRef.createEmbeddedView(
        e.templateRef,
        e.context,
        { injector: e.injector }
      );
      return (
        super.setDisposeFn(() => this._viewContainerRef.clear()),
        (this._attachedPortal = e),
        (this._attachedRef = i),
        this.attached.emit(i),
        i
      );
    }
    _getRootNode() {
      let e = this._viewContainerRef.element.nativeElement;
      return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(B(So), B(nn), B(Le));
      };
    }
    static {
      this.ɵdir = Te({
        type: n,
        selectors: [["", "cdkPortalOutlet", ""]],
        inputs: { portal: [0, "cdkPortalOutlet", "portal"] },
        outputs: { attached: "attached" },
        exportAs: ["cdkPortalOutlet"],
        standalone: !0,
        features: [$e],
      });
    }
  }
  return n;
})();
var xl = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({});
    }
  }
  return n;
})();
var lg = Gf(),
  mu = class {
    constructor(t, e) {
      (this._viewportRuler = t),
        (this._previousHTMLStyles = { top: "", left: "" }),
        (this._isEnabled = !1),
        (this._document = e);
    }
    attach() {}
    enable() {
      if (this._canBeEnabled()) {
        let t = this._document.documentElement;
        (this._previousScrollPosition =
          this._viewportRuler.getViewportScrollPosition()),
          (this._previousHTMLStyles.left = t.style.left || ""),
          (this._previousHTMLStyles.top = t.style.top || ""),
          (t.style.left = Nt(-this._previousScrollPosition.left)),
          (t.style.top = Nt(-this._previousScrollPosition.top)),
          t.classList.add("cdk-global-scrollblock"),
          (this._isEnabled = !0);
      }
    }
    disable() {
      if (this._isEnabled) {
        let t = this._document.documentElement,
          e = this._document.body,
          i = t.style,
          o = e.style,
          r = i.scrollBehavior || "",
          a = o.scrollBehavior || "";
        (this._isEnabled = !1),
          (i.left = this._previousHTMLStyles.left),
          (i.top = this._previousHTMLStyles.top),
          t.classList.remove("cdk-global-scrollblock"),
          lg && (i.scrollBehavior = o.scrollBehavior = "auto"),
          window.scroll(
            this._previousScrollPosition.left,
            this._previousScrollPosition.top
          ),
          lg && ((i.scrollBehavior = r), (o.scrollBehavior = a));
      }
    }
    _canBeEnabled() {
      if (
        this._document.documentElement.classList.contains(
          "cdk-global-scrollblock"
        ) ||
        this._isEnabled
      )
        return !1;
      let e = this._document.body,
        i = this._viewportRuler.getViewportSize();
      return e.scrollHeight > i.height || e.scrollWidth > i.width;
    }
  };
var fu = class {
    constructor(t, e, i, o) {
      (this._scrollDispatcher = t),
        (this._ngZone = e),
        (this._viewportRuler = i),
        (this._config = o),
        (this._scrollSubscription = null),
        (this._detach = () => {
          this.disable(),
            this._overlayRef.hasAttached() &&
              this._ngZone.run(() => this._overlayRef.detach());
        });
    }
    attach(t) {
      this._overlayRef, (this._overlayRef = t);
    }
    enable() {
      if (this._scrollSubscription) return;
      let t = this._scrollDispatcher
        .scrolled(0)
        .pipe(
          di(
            (e) =>
              !e ||
              !this._overlayRef.overlayElement.contains(
                e.getElementRef().nativeElement
              )
          )
        );
      this._config && this._config.threshold && this._config.threshold > 1
        ? ((this._initialScrollPosition =
            this._viewportRuler.getViewportScrollPosition().top),
          (this._scrollSubscription = t.subscribe(() => {
            let e = this._viewportRuler.getViewportScrollPosition().top;
            Math.abs(e - this._initialScrollPosition) > this._config.threshold
              ? this._detach()
              : this._overlayRef.updatePosition();
          })))
        : (this._scrollSubscription = t.subscribe(this._detach));
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  Cl = class {
    enable() {}
    disable() {}
    attach() {}
  };
function gu(n, t) {
  return t.some((e) => {
    let i = n.bottom < e.top,
      o = n.top > e.bottom,
      r = n.right < e.left,
      a = n.left > e.right;
    return i || o || r || a;
  });
}
function cg(n, t) {
  return t.some((e) => {
    let i = n.top < e.top,
      o = n.bottom > e.bottom,
      r = n.left < e.left,
      a = n.right > e.right;
    return i || o || r || a;
  });
}
var _u = class {
    constructor(t, e, i, o) {
      (this._scrollDispatcher = t),
        (this._viewportRuler = e),
        (this._ngZone = i),
        (this._config = o),
        (this._scrollSubscription = null);
    }
    attach(t) {
      this._overlayRef, (this._overlayRef = t);
    }
    enable() {
      if (!this._scrollSubscription) {
        let t = this._config ? this._config.scrollThrottle : 0;
        this._scrollSubscription = this._scrollDispatcher
          .scrolled(t)
          .subscribe(() => {
            if (
              (this._overlayRef.updatePosition(),
              this._config && this._config.autoClose)
            ) {
              let e = this._overlayRef.overlayElement.getBoundingClientRect(),
                { width: i, height: o } = this._viewportRuler.getViewportSize();
              gu(e, [
                { width: i, height: o, bottom: o, right: i, top: 0, left: 0 },
              ]) &&
                (this.disable(),
                this._ngZone.run(() => this._overlayRef.detach()));
            }
          });
      }
    }
    disable() {
      this._scrollSubscription &&
        (this._scrollSubscription.unsubscribe(),
        (this._scrollSubscription = null));
    }
    detach() {
      this.disable(), (this._overlayRef = null);
    }
  },
  xC = (() => {
    class n {
      constructor(e, i, o, r) {
        (this._scrollDispatcher = e),
          (this._viewportRuler = i),
          (this._ngZone = o),
          (this.noop = () => new Cl()),
          (this.close = (a) =>
            new fu(
              this._scrollDispatcher,
              this._ngZone,
              this._viewportRuler,
              a
            )),
          (this.block = () => new mu(this._viewportRuler, this._document)),
          (this.reposition = (a) =>
            new _u(
              this._scrollDispatcher,
              this._viewportRuler,
              this._ngZone,
              a
            )),
          (this._document = r);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(sg), Z(du), Z(Oe), Z(Le));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  wl = class {
    constructor(t) {
      if (
        ((this.scrollStrategy = new Cl()),
        (this.panelClass = ""),
        (this.hasBackdrop = !1),
        (this.backdropClass = "cdk-overlay-dark-backdrop"),
        (this.disposeOnNavigation = !1),
        t)
      ) {
        let e = Object.keys(t);
        for (let i of e) t[i] !== void 0 && (this[i] = t[i]);
      }
    }
  };
var bu = class {
  constructor(t, e) {
    (this.connectionPair = t), (this.scrollableViewProperties = e);
  }
};
var fg = (() => {
    class n {
      constructor(e) {
        (this._attachedOverlays = []), (this._document = e);
      }
      ngOnDestroy() {
        this.detach();
      }
      add(e) {
        this.remove(e), this._attachedOverlays.push(e);
      }
      remove(e) {
        let i = this._attachedOverlays.indexOf(e);
        i > -1 && this._attachedOverlays.splice(i, 1),
          this._attachedOverlays.length === 0 && this.detach();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Le));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  CC = (() => {
    class n extends fg {
      constructor(e, i) {
        super(e),
          (this._ngZone = i),
          (this._keydownListener = (o) => {
            let r = this._attachedOverlays;
            for (let a = r.length - 1; a > -1; a--)
              if (r[a]._keydownEvents.observers.length > 0) {
                let d = r[a]._keydownEvents;
                this._ngZone ? this._ngZone.run(() => d.next(o)) : d.next(o);
                break;
              }
          });
      }
      add(e) {
        super.add(e),
          this._isAttached ||
            (this._ngZone
              ? this._ngZone.runOutsideAngular(() =>
                  this._document.body.addEventListener(
                    "keydown",
                    this._keydownListener
                  )
                )
              : this._document.body.addEventListener(
                  "keydown",
                  this._keydownListener
                ),
            (this._isAttached = !0));
      }
      detach() {
        this._isAttached &&
          (this._document.body.removeEventListener(
            "keydown",
            this._keydownListener
          ),
          (this._isAttached = !1));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Le), Z(Oe, 8));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  wC = (() => {
    class n extends fg {
      constructor(e, i, o) {
        super(e),
          (this._platform = i),
          (this._ngZone = o),
          (this._cursorStyleIsSet = !1),
          (this._pointerDownListener = (r) => {
            this._pointerDownEventTarget = Yi(r);
          }),
          (this._clickListener = (r) => {
            let a = Yi(r),
              d =
                r.type === "click" && this._pointerDownEventTarget
                  ? this._pointerDownEventTarget
                  : a;
            this._pointerDownEventTarget = null;
            let m = this._attachedOverlays.slice();
            for (let _ = m.length - 1; _ > -1; _--) {
              let v = m[_];
              if (
                v._outsidePointerEvents.observers.length < 1 ||
                !v.hasAttached()
              )
                continue;
              if (dg(v.overlayElement, a) || dg(v.overlayElement, d)) break;
              let S = v._outsidePointerEvents;
              this._ngZone ? this._ngZone.run(() => S.next(r)) : S.next(r);
            }
          });
      }
      add(e) {
        if ((super.add(e), !this._isAttached)) {
          let i = this._document.body;
          this._ngZone
            ? this._ngZone.runOutsideAngular(() => this._addEventListeners(i))
            : this._addEventListeners(i),
            this._platform.IOS &&
              !this._cursorStyleIsSet &&
              ((this._cursorOriginalValue = i.style.cursor),
              (i.style.cursor = "pointer"),
              (this._cursorStyleIsSet = !0)),
            (this._isAttached = !0);
        }
      }
      detach() {
        if (this._isAttached) {
          let e = this._document.body;
          e.removeEventListener("pointerdown", this._pointerDownListener, !0),
            e.removeEventListener("click", this._clickListener, !0),
            e.removeEventListener("auxclick", this._clickListener, !0),
            e.removeEventListener("contextmenu", this._clickListener, !0),
            this._platform.IOS &&
              this._cursorStyleIsSet &&
              ((e.style.cursor = this._cursorOriginalValue),
              (this._cursorStyleIsSet = !1)),
            (this._isAttached = !1);
        }
      }
      _addEventListeners(e) {
        e.addEventListener("pointerdown", this._pointerDownListener, !0),
          e.addEventListener("click", this._clickListener, !0),
          e.addEventListener("auxclick", this._clickListener, !0),
          e.addEventListener("contextmenu", this._clickListener, !0);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Le), Z(ft), Z(Oe, 8));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
function dg(n, t) {
  let e = typeof ShadowRoot < "u" && ShadowRoot,
    i = t;
  for (; i; ) {
    if (i === n) return !0;
    i = e && i instanceof ShadowRoot ? i.host : i.parentNode;
  }
  return !1;
}
var gg = (() => {
    class n {
      constructor(e, i) {
        (this._platform = i), (this._document = e);
      }
      ngOnDestroy() {
        this._containerElement?.remove();
      }
      getContainerElement() {
        return (
          this._containerElement || this._createContainer(),
          this._containerElement
        );
      }
      _createContainer() {
        let e = "cdk-overlay-container";
        if (this._platform.isBrowser || Ia()) {
          let o = this._document.querySelectorAll(
            `.${e}[platform="server"], .${e}[platform="test"]`
          );
          for (let r = 0; r < o.length; r++) o[r].remove();
        }
        let i = this._document.createElement("div");
        i.classList.add(e),
          Ia()
            ? i.setAttribute("platform", "test")
            : this._platform.isBrowser || i.setAttribute("platform", "server"),
          this._document.body.appendChild(i),
          (this._containerElement = i);
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Le), Z(ft));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  vu = class {
    constructor(t, e, i, o, r, a, d, m, _, v = !1, S) {
      (this._portalOutlet = t),
        (this._host = e),
        (this._pane = i),
        (this._config = o),
        (this._ngZone = r),
        (this._keyboardDispatcher = a),
        (this._document = d),
        (this._location = m),
        (this._outsideClickDispatcher = _),
        (this._animationsDisabled = v),
        (this._injector = S),
        (this._backdropElement = null),
        (this._backdropClick = new Ee()),
        (this._attachments = new Ee()),
        (this._detachments = new Ee()),
        (this._locationChanges = Ji.EMPTY),
        (this._backdropClickHandler = (T) => this._backdropClick.next(T)),
        (this._backdropTransitionendHandler = (T) => {
          this._disposeBackdrop(T.target);
        }),
        (this._keydownEvents = new Ee()),
        (this._outsidePointerEvents = new Ee()),
        (this._renders = new Ee()),
        o.scrollStrategy &&
          ((this._scrollStrategy = o.scrollStrategy),
          this._scrollStrategy.attach(this)),
        (this._positionStrategy = o.positionStrategy),
        (this._afterRenderRef = an(() =>
          Pc(
            () => {
              this._renders.next();
            },
            { injector: this._injector }
          )
        ));
    }
    get overlayElement() {
      return this._pane;
    }
    get backdropElement() {
      return this._backdropElement;
    }
    get hostElement() {
      return this._host;
    }
    attach(t) {
      !this._host.parentElement &&
        this._previousHostParent &&
        this._previousHostParent.appendChild(this._host);
      let e = this._portalOutlet.attach(t);
      return (
        this._positionStrategy && this._positionStrategy.attach(this),
        this._updateStackingOrder(),
        this._updateElementSize(),
        this._updateElementDirection(),
        this._scrollStrategy && this._scrollStrategy.enable(),
        this._afterNextRenderRef?.destroy(),
        (this._afterNextRenderRef = Nn(
          () => {
            this.hasAttached() && this.updatePosition();
          },
          { injector: this._injector }
        )),
        this._togglePointerEvents(!0),
        this._config.hasBackdrop && this._attachBackdrop(),
        this._config.panelClass &&
          this._toggleClasses(this._pane, this._config.panelClass, !0),
        this._attachments.next(),
        this._keyboardDispatcher.add(this),
        this._config.disposeOnNavigation &&
          (this._locationChanges = this._location.subscribe(() =>
            this.dispose()
          )),
        this._outsideClickDispatcher.add(this),
        typeof e?.onDestroy == "function" &&
          e.onDestroy(() => {
            this.hasAttached() &&
              this._ngZone.runOutsideAngular(() =>
                Promise.resolve().then(() => this.detach())
              );
          }),
        e
      );
    }
    detach() {
      if (!this.hasAttached()) return;
      this.detachBackdrop(),
        this._togglePointerEvents(!1),
        this._positionStrategy &&
          this._positionStrategy.detach &&
          this._positionStrategy.detach(),
        this._scrollStrategy && this._scrollStrategy.disable();
      let t = this._portalOutlet.detach();
      return (
        this._detachments.next(),
        this._keyboardDispatcher.remove(this),
        this._detachContentWhenEmpty(),
        this._locationChanges.unsubscribe(),
        this._outsideClickDispatcher.remove(this),
        t
      );
    }
    dispose() {
      let t = this.hasAttached();
      this._positionStrategy && this._positionStrategy.dispose(),
        this._disposeScrollStrategy(),
        this._disposeBackdrop(this._backdropElement),
        this._locationChanges.unsubscribe(),
        this._keyboardDispatcher.remove(this),
        this._portalOutlet.dispose(),
        this._attachments.complete(),
        this._backdropClick.complete(),
        this._keydownEvents.complete(),
        this._outsidePointerEvents.complete(),
        this._outsideClickDispatcher.remove(this),
        this._host?.remove(),
        this._afterNextRenderRef?.destroy(),
        (this._previousHostParent = this._pane = this._host = null),
        t && this._detachments.next(),
        this._detachments.complete(),
        this._afterRenderRef.destroy(),
        this._renders.complete();
    }
    hasAttached() {
      return this._portalOutlet.hasAttached();
    }
    backdropClick() {
      return this._backdropClick;
    }
    attachments() {
      return this._attachments;
    }
    detachments() {
      return this._detachments;
    }
    keydownEvents() {
      return this._keydownEvents;
    }
    outsidePointerEvents() {
      return this._outsidePointerEvents;
    }
    getConfig() {
      return this._config;
    }
    updatePosition() {
      this._positionStrategy && this._positionStrategy.apply();
    }
    updatePositionStrategy(t) {
      t !== this._positionStrategy &&
        (this._positionStrategy && this._positionStrategy.dispose(),
        (this._positionStrategy = t),
        this.hasAttached() && (t.attach(this), this.updatePosition()));
    }
    updateSize(t) {
      (this._config = ne(ne({}, this._config), t)), this._updateElementSize();
    }
    setDirection(t) {
      (this._config = et(ne({}, this._config), { direction: t })),
        this._updateElementDirection();
    }
    addPanelClass(t) {
      this._pane && this._toggleClasses(this._pane, t, !0);
    }
    removePanelClass(t) {
      this._pane && this._toggleClasses(this._pane, t, !1);
    }
    getDirection() {
      let t = this._config.direction;
      return t ? (typeof t == "string" ? t : t.value) : "ltr";
    }
    updateScrollStrategy(t) {
      t !== this._scrollStrategy &&
        (this._disposeScrollStrategy(),
        (this._scrollStrategy = t),
        this.hasAttached() && (t.attach(this), t.enable()));
    }
    _updateElementDirection() {
      this._host.setAttribute("dir", this.getDirection());
    }
    _updateElementSize() {
      if (!this._pane) return;
      let t = this._pane.style;
      (t.width = Nt(this._config.width)),
        (t.height = Nt(this._config.height)),
        (t.minWidth = Nt(this._config.minWidth)),
        (t.minHeight = Nt(this._config.minHeight)),
        (t.maxWidth = Nt(this._config.maxWidth)),
        (t.maxHeight = Nt(this._config.maxHeight));
    }
    _togglePointerEvents(t) {
      this._pane.style.pointerEvents = t ? "" : "none";
    }
    _attachBackdrop() {
      let t = "cdk-overlay-backdrop-showing";
      (this._backdropElement = this._document.createElement("div")),
        this._backdropElement.classList.add("cdk-overlay-backdrop"),
        this._animationsDisabled &&
          this._backdropElement.classList.add(
            "cdk-overlay-backdrop-noop-animation"
          ),
        this._config.backdropClass &&
          this._toggleClasses(
            this._backdropElement,
            this._config.backdropClass,
            !0
          ),
        this._host.parentElement.insertBefore(
          this._backdropElement,
          this._host
        ),
        this._backdropElement.addEventListener(
          "click",
          this._backdropClickHandler
        ),
        !this._animationsDisabled && typeof requestAnimationFrame < "u"
          ? this._ngZone.runOutsideAngular(() => {
              requestAnimationFrame(() => {
                this._backdropElement && this._backdropElement.classList.add(t);
              });
            })
          : this._backdropElement.classList.add(t);
    }
    _updateStackingOrder() {
      this._host.nextSibling && this._host.parentNode.appendChild(this._host);
    }
    detachBackdrop() {
      let t = this._backdropElement;
      if (t) {
        if (this._animationsDisabled) {
          this._disposeBackdrop(t);
          return;
        }
        t.classList.remove("cdk-overlay-backdrop-showing"),
          this._ngZone.runOutsideAngular(() => {
            t.addEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            );
          }),
          (t.style.pointerEvents = "none"),
          (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
            setTimeout(() => {
              this._disposeBackdrop(t);
            }, 500)
          ));
      }
    }
    _toggleClasses(t, e, i) {
      let o = Sr(e || []).filter((r) => !!r);
      o.length && (i ? t.classList.add(...o) : t.classList.remove(...o));
    }
    _detachContentWhenEmpty() {
      this._ngZone.runOutsideAngular(() => {
        let t = this._renders
          .pipe(Vt(ir(this._attachments, this._detachments)))
          .subscribe(() => {
            (!this._pane || !this._host || this._pane.children.length === 0) &&
              (this._pane &&
                this._config.panelClass &&
                this._toggleClasses(this._pane, this._config.panelClass, !1),
              this._host &&
                this._host.parentElement &&
                ((this._previousHostParent = this._host.parentElement),
                this._host.remove()),
              t.unsubscribe());
          });
      });
    }
    _disposeScrollStrategy() {
      let t = this._scrollStrategy;
      t && (t.disable(), t.detach && t.detach());
    }
    _disposeBackdrop(t) {
      t &&
        (t.removeEventListener("click", this._backdropClickHandler),
        t.removeEventListener(
          "transitionend",
          this._backdropTransitionendHandler
        ),
        t.remove(),
        this._backdropElement === t && (this._backdropElement = null)),
        this._backdropTimeout &&
          (clearTimeout(this._backdropTimeout),
          (this._backdropTimeout = void 0));
    }
  },
  ug = "cdk-overlay-connected-position-bounding-box",
  DC = /([A-Za-z%]+)$/,
  Dl = class {
    get positions() {
      return this._preferredPositions;
    }
    constructor(t, e, i, o, r) {
      (this._viewportRuler = e),
        (this._document = i),
        (this._platform = o),
        (this._overlayContainer = r),
        (this._lastBoundingBoxSize = { width: 0, height: 0 }),
        (this._isPushed = !1),
        (this._canPush = !0),
        (this._growAfterOpen = !1),
        (this._hasFlexibleDimensions = !0),
        (this._positionLocked = !1),
        (this._viewportMargin = 0),
        (this._scrollables = []),
        (this._preferredPositions = []),
        (this._positionChanges = new Ee()),
        (this._resizeSubscription = Ji.EMPTY),
        (this._offsetX = 0),
        (this._offsetY = 0),
        (this._appliedPanelClasses = []),
        (this.positionChanges = this._positionChanges),
        this.setOrigin(t);
    }
    attach(t) {
      this._overlayRef && this._overlayRef,
        this._validatePositions(),
        t.hostElement.classList.add(ug),
        (this._overlayRef = t),
        (this._boundingBox = t.hostElement),
        (this._pane = t.overlayElement),
        (this._isDisposed = !1),
        (this._isInitialRender = !0),
        (this._lastPosition = null),
        this._resizeSubscription.unsubscribe(),
        (this._resizeSubscription = this._viewportRuler
          .change()
          .subscribe(() => {
            (this._isInitialRender = !0), this.apply();
          }));
    }
    apply() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      if (
        !this._isInitialRender &&
        this._positionLocked &&
        this._lastPosition
      ) {
        this.reapplyLastPosition();
        return;
      }
      this._clearPanelClasses(),
        this._resetOverlayElementStyles(),
        this._resetBoundingBoxStyles(),
        (this._viewportRect = this._getNarrowedViewportRect()),
        (this._originRect = this._getOriginRect()),
        (this._overlayRect = this._pane.getBoundingClientRect()),
        (this._containerRect = this._overlayContainer
          .getContainerElement()
          .getBoundingClientRect());
      let t = this._originRect,
        e = this._overlayRect,
        i = this._viewportRect,
        o = this._containerRect,
        r = [],
        a;
      for (let d of this._preferredPositions) {
        let m = this._getOriginPoint(t, o, d),
          _ = this._getOverlayPoint(m, e, d),
          v = this._getOverlayFit(_, e, i, d);
        if (v.isCompletelyWithinViewport) {
          (this._isPushed = !1), this._applyPosition(d, m);
          return;
        }
        if (this._canFitWithFlexibleDimensions(v, _, i)) {
          r.push({
            position: d,
            origin: m,
            overlayRect: e,
            boundingBoxRect: this._calculateBoundingBoxRect(m, d),
          });
          continue;
        }
        (!a || a.overlayFit.visibleArea < v.visibleArea) &&
          (a = {
            overlayFit: v,
            overlayPoint: _,
            originPoint: m,
            position: d,
            overlayRect: e,
          });
      }
      if (r.length) {
        let d = null,
          m = -1;
        for (let _ of r) {
          let v =
            _.boundingBoxRect.width *
            _.boundingBoxRect.height *
            (_.position.weight || 1);
          v > m && ((m = v), (d = _));
        }
        (this._isPushed = !1), this._applyPosition(d.position, d.origin);
        return;
      }
      if (this._canPush) {
        (this._isPushed = !0), this._applyPosition(a.position, a.originPoint);
        return;
      }
      this._applyPosition(a.position, a.originPoint);
    }
    detach() {
      this._clearPanelClasses(),
        (this._lastPosition = null),
        (this._previousPushAmount = null),
        this._resizeSubscription.unsubscribe();
    }
    dispose() {
      this._isDisposed ||
        (this._boundingBox &&
          zo(this._boundingBox.style, {
            top: "",
            left: "",
            right: "",
            bottom: "",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          }),
        this._pane && this._resetOverlayElementStyles(),
        this._overlayRef && this._overlayRef.hostElement.classList.remove(ug),
        this.detach(),
        this._positionChanges.complete(),
        (this._overlayRef = this._boundingBox = null),
        (this._isDisposed = !0));
    }
    reapplyLastPosition() {
      if (this._isDisposed || !this._platform.isBrowser) return;
      let t = this._lastPosition;
      if (t) {
        (this._originRect = this._getOriginRect()),
          (this._overlayRect = this._pane.getBoundingClientRect()),
          (this._viewportRect = this._getNarrowedViewportRect()),
          (this._containerRect = this._overlayContainer
            .getContainerElement()
            .getBoundingClientRect());
        let e = this._getOriginPoint(this._originRect, this._containerRect, t);
        this._applyPosition(t, e);
      } else this.apply();
    }
    withScrollableContainers(t) {
      return (this._scrollables = t), this;
    }
    withPositions(t) {
      return (
        (this._preferredPositions = t),
        t.indexOf(this._lastPosition) === -1 && (this._lastPosition = null),
        this._validatePositions(),
        this
      );
    }
    withViewportMargin(t) {
      return (this._viewportMargin = t), this;
    }
    withFlexibleDimensions(t = !0) {
      return (this._hasFlexibleDimensions = t), this;
    }
    withGrowAfterOpen(t = !0) {
      return (this._growAfterOpen = t), this;
    }
    withPush(t = !0) {
      return (this._canPush = t), this;
    }
    withLockedPosition(t = !0) {
      return (this._positionLocked = t), this;
    }
    setOrigin(t) {
      return (this._origin = t), this;
    }
    withDefaultOffsetX(t) {
      return (this._offsetX = t), this;
    }
    withDefaultOffsetY(t) {
      return (this._offsetY = t), this;
    }
    withTransformOriginOn(t) {
      return (this._transformOriginSelector = t), this;
    }
    _getOriginPoint(t, e, i) {
      let o;
      if (i.originX == "center") o = t.left + t.width / 2;
      else {
        let a = this._isRtl() ? t.right : t.left,
          d = this._isRtl() ? t.left : t.right;
        o = i.originX == "start" ? a : d;
      }
      e.left < 0 && (o -= e.left);
      let r;
      return (
        i.originY == "center"
          ? (r = t.top + t.height / 2)
          : (r = i.originY == "top" ? t.top : t.bottom),
        e.top < 0 && (r -= e.top),
        { x: o, y: r }
      );
    }
    _getOverlayPoint(t, e, i) {
      let o;
      i.overlayX == "center"
        ? (o = -e.width / 2)
        : i.overlayX === "start"
        ? (o = this._isRtl() ? -e.width : 0)
        : (o = this._isRtl() ? 0 : -e.width);
      let r;
      return (
        i.overlayY == "center"
          ? (r = -e.height / 2)
          : (r = i.overlayY == "top" ? 0 : -e.height),
        { x: t.x + o, y: t.y + r }
      );
    }
    _getOverlayFit(t, e, i, o) {
      let r = pg(e),
        { x: a, y: d } = t,
        m = this._getOffset(o, "x"),
        _ = this._getOffset(o, "y");
      m && (a += m), _ && (d += _);
      let v = 0 - a,
        S = a + r.width - i.width,
        T = 0 - d,
        M = d + r.height - i.height,
        A = this._subtractOverflows(r.width, v, S),
        j = this._subtractOverflows(r.height, T, M),
        z = A * j;
      return {
        visibleArea: z,
        isCompletelyWithinViewport: r.width * r.height === z,
        fitsInViewportVertically: j === r.height,
        fitsInViewportHorizontally: A == r.width,
      };
    }
    _canFitWithFlexibleDimensions(t, e, i) {
      if (this._hasFlexibleDimensions) {
        let o = i.bottom - e.y,
          r = i.right - e.x,
          a = hg(this._overlayRef.getConfig().minHeight),
          d = hg(this._overlayRef.getConfig().minWidth),
          m = t.fitsInViewportVertically || (a != null && a <= o),
          _ = t.fitsInViewportHorizontally || (d != null && d <= r);
        return m && _;
      }
      return !1;
    }
    _pushOverlayOnScreen(t, e, i) {
      if (this._previousPushAmount && this._positionLocked)
        return {
          x: t.x + this._previousPushAmount.x,
          y: t.y + this._previousPushAmount.y,
        };
      let o = pg(e),
        r = this._viewportRect,
        a = Math.max(t.x + o.width - r.width, 0),
        d = Math.max(t.y + o.height - r.height, 0),
        m = Math.max(r.top - i.top - t.y, 0),
        _ = Math.max(r.left - i.left - t.x, 0),
        v = 0,
        S = 0;
      return (
        o.width <= r.width
          ? (v = _ || -a)
          : (v = t.x < this._viewportMargin ? r.left - i.left - t.x : 0),
        o.height <= r.height
          ? (S = m || -d)
          : (S = t.y < this._viewportMargin ? r.top - i.top - t.y : 0),
        (this._previousPushAmount = { x: v, y: S }),
        { x: t.x + v, y: t.y + S }
      );
    }
    _applyPosition(t, e) {
      if (
        (this._setTransformOrigin(t),
        this._setOverlayElementStyles(e, t),
        this._setBoundingBoxStyles(e, t),
        t.panelClass && this._addPanelClasses(t.panelClass),
        this._positionChanges.observers.length)
      ) {
        let i = this._getScrollVisibility();
        if (
          t !== this._lastPosition ||
          !this._lastScrollVisibility ||
          !SC(this._lastScrollVisibility, i)
        ) {
          let o = new bu(t, i);
          this._positionChanges.next(o);
        }
        this._lastScrollVisibility = i;
      }
      (this._lastPosition = t), (this._isInitialRender = !1);
    }
    _setTransformOrigin(t) {
      if (!this._transformOriginSelector) return;
      let e = this._boundingBox.querySelectorAll(this._transformOriginSelector),
        i,
        o = t.overlayY;
      t.overlayX === "center"
        ? (i = "center")
        : this._isRtl()
        ? (i = t.overlayX === "start" ? "right" : "left")
        : (i = t.overlayX === "start" ? "left" : "right");
      for (let r = 0; r < e.length; r++)
        e[r].style.transformOrigin = `${i} ${o}`;
    }
    _calculateBoundingBoxRect(t, e) {
      let i = this._viewportRect,
        o = this._isRtl(),
        r,
        a,
        d;
      if (e.overlayY === "top")
        (a = t.y), (r = i.height - a + this._viewportMargin);
      else if (e.overlayY === "bottom")
        (d = i.height - t.y + this._viewportMargin * 2),
          (r = i.height - d + this._viewportMargin);
      else {
        let M = Math.min(i.bottom - t.y + i.top, t.y),
          A = this._lastBoundingBoxSize.height;
        (r = M * 2),
          (a = t.y - M),
          r > A &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (a = t.y - A / 2);
      }
      let m = (e.overlayX === "start" && !o) || (e.overlayX === "end" && o),
        _ = (e.overlayX === "end" && !o) || (e.overlayX === "start" && o),
        v,
        S,
        T;
      if (_)
        (T = i.width - t.x + this._viewportMargin * 2),
          (v = t.x - this._viewportMargin);
      else if (m) (S = t.x), (v = i.right - t.x);
      else {
        let M = Math.min(i.right - t.x + i.left, t.x),
          A = this._lastBoundingBoxSize.width;
        (v = M * 2),
          (S = t.x - M),
          v > A &&
            !this._isInitialRender &&
            !this._growAfterOpen &&
            (S = t.x - A / 2);
      }
      return { top: a, left: S, bottom: d, right: T, width: v, height: r };
    }
    _setBoundingBoxStyles(t, e) {
      let i = this._calculateBoundingBoxRect(t, e);
      !this._isInitialRender &&
        !this._growAfterOpen &&
        ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
        (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
      let o = {};
      if (this._hasExactPosition())
        (o.top = o.left = "0"),
          (o.bottom = o.right = o.maxHeight = o.maxWidth = ""),
          (o.width = o.height = "100%");
      else {
        let r = this._overlayRef.getConfig().maxHeight,
          a = this._overlayRef.getConfig().maxWidth;
        (o.height = Nt(i.height)),
          (o.top = Nt(i.top)),
          (o.bottom = Nt(i.bottom)),
          (o.width = Nt(i.width)),
          (o.left = Nt(i.left)),
          (o.right = Nt(i.right)),
          e.overlayX === "center"
            ? (o.alignItems = "center")
            : (o.alignItems = e.overlayX === "end" ? "flex-end" : "flex-start"),
          e.overlayY === "center"
            ? (o.justifyContent = "center")
            : (o.justifyContent =
                e.overlayY === "bottom" ? "flex-end" : "flex-start"),
          r && (o.maxHeight = Nt(r)),
          a && (o.maxWidth = Nt(a));
      }
      (this._lastBoundingBoxSize = i), zo(this._boundingBox.style, o);
    }
    _resetBoundingBoxStyles() {
      zo(this._boundingBox.style, {
        top: "0",
        left: "0",
        right: "0",
        bottom: "0",
        height: "",
        width: "",
        alignItems: "",
        justifyContent: "",
      });
    }
    _resetOverlayElementStyles() {
      zo(this._pane.style, {
        top: "",
        left: "",
        bottom: "",
        right: "",
        position: "",
        transform: "",
      });
    }
    _setOverlayElementStyles(t, e) {
      let i = {},
        o = this._hasExactPosition(),
        r = this._hasFlexibleDimensions,
        a = this._overlayRef.getConfig();
      if (o) {
        let v = this._viewportRuler.getViewportScrollPosition();
        zo(i, this._getExactOverlayY(e, t, v)),
          zo(i, this._getExactOverlayX(e, t, v));
      } else i.position = "static";
      let d = "",
        m = this._getOffset(e, "x"),
        _ = this._getOffset(e, "y");
      m && (d += `translateX(${m}px) `),
        _ && (d += `translateY(${_}px)`),
        (i.transform = d.trim()),
        a.maxHeight &&
          (o ? (i.maxHeight = Nt(a.maxHeight)) : r && (i.maxHeight = "")),
        a.maxWidth &&
          (o ? (i.maxWidth = Nt(a.maxWidth)) : r && (i.maxWidth = "")),
        zo(this._pane.style, i);
    }
    _getExactOverlayY(t, e, i) {
      let o = { top: "", bottom: "" },
        r = this._getOverlayPoint(e, this._overlayRect, t);
      if (
        (this._isPushed &&
          (r = this._pushOverlayOnScreen(r, this._overlayRect, i)),
        t.overlayY === "bottom")
      ) {
        let a = this._document.documentElement.clientHeight;
        o.bottom = `${a - (r.y + this._overlayRect.height)}px`;
      } else o.top = Nt(r.y);
      return o;
    }
    _getExactOverlayX(t, e, i) {
      let o = { left: "", right: "" },
        r = this._getOverlayPoint(e, this._overlayRect, t);
      this._isPushed &&
        (r = this._pushOverlayOnScreen(r, this._overlayRect, i));
      let a;
      if (
        (this._isRtl()
          ? (a = t.overlayX === "end" ? "left" : "right")
          : (a = t.overlayX === "end" ? "right" : "left"),
        a === "right")
      ) {
        let d = this._document.documentElement.clientWidth;
        o.right = `${d - (r.x + this._overlayRect.width)}px`;
      } else o.left = Nt(r.x);
      return o;
    }
    _getScrollVisibility() {
      let t = this._getOriginRect(),
        e = this._pane.getBoundingClientRect(),
        i = this._scrollables.map((o) =>
          o.getElementRef().nativeElement.getBoundingClientRect()
        );
      return {
        isOriginClipped: cg(t, i),
        isOriginOutsideView: gu(t, i),
        isOverlayClipped: cg(e, i),
        isOverlayOutsideView: gu(e, i),
      };
    }
    _subtractOverflows(t, ...e) {
      return e.reduce((i, o) => i - Math.max(o, 0), t);
    }
    _getNarrowedViewportRect() {
      let t = this._document.documentElement.clientWidth,
        e = this._document.documentElement.clientHeight,
        i = this._viewportRuler.getViewportScrollPosition();
      return {
        top: i.top + this._viewportMargin,
        left: i.left + this._viewportMargin,
        right: i.left + t - this._viewportMargin,
        bottom: i.top + e - this._viewportMargin,
        width: t - 2 * this._viewportMargin,
        height: e - 2 * this._viewportMargin,
      };
    }
    _isRtl() {
      return this._overlayRef.getDirection() === "rtl";
    }
    _hasExactPosition() {
      return !this._hasFlexibleDimensions || this._isPushed;
    }
    _getOffset(t, e) {
      return e === "x"
        ? t.offsetX == null
          ? this._offsetX
          : t.offsetX
        : t.offsetY == null
        ? this._offsetY
        : t.offsetY;
    }
    _validatePositions() {}
    _addPanelClasses(t) {
      this._pane &&
        Sr(t).forEach((e) => {
          e !== "" &&
            this._appliedPanelClasses.indexOf(e) === -1 &&
            (this._appliedPanelClasses.push(e), this._pane.classList.add(e));
        });
    }
    _clearPanelClasses() {
      this._pane &&
        (this._appliedPanelClasses.forEach((t) => {
          this._pane.classList.remove(t);
        }),
        (this._appliedPanelClasses = []));
    }
    _getOriginRect() {
      let t = this._origin;
      if (t instanceof ke) return t.nativeElement.getBoundingClientRect();
      if (t instanceof Element) return t.getBoundingClientRect();
      let e = t.width || 0,
        i = t.height || 0;
      return {
        top: t.y,
        bottom: t.y + i,
        left: t.x,
        right: t.x + e,
        height: i,
        width: e,
      };
    }
  };
function zo(n, t) {
  for (let e in t) t.hasOwnProperty(e) && (n[e] = t[e]);
  return n;
}
function hg(n) {
  if (typeof n != "number" && n != null) {
    let [t, e] = n.split(DC);
    return !e || e === "px" ? parseFloat(t) : null;
  }
  return n || null;
}
function pg(n) {
  return {
    top: Math.floor(n.top),
    right: Math.floor(n.right),
    bottom: Math.floor(n.bottom),
    left: Math.floor(n.left),
    width: Math.floor(n.width),
    height: Math.floor(n.height),
  };
}
function SC(n, t) {
  return n === t
    ? !0
    : n.isOriginClipped === t.isOriginClipped &&
        n.isOriginOutsideView === t.isOriginOutsideView &&
        n.isOverlayClipped === t.isOverlayClipped &&
        n.isOverlayOutsideView === t.isOverlayOutsideView;
}
var mg = "cdk-global-overlay-wrapper",
  yu = class {
    constructor() {
      (this._cssPosition = "static"),
        (this._topOffset = ""),
        (this._bottomOffset = ""),
        (this._alignItems = ""),
        (this._xPosition = ""),
        (this._xOffset = ""),
        (this._width = ""),
        (this._height = ""),
        (this._isDisposed = !1);
    }
    attach(t) {
      let e = t.getConfig();
      (this._overlayRef = t),
        this._width && !e.width && t.updateSize({ width: this._width }),
        this._height && !e.height && t.updateSize({ height: this._height }),
        t.hostElement.classList.add(mg),
        (this._isDisposed = !1);
    }
    top(t = "") {
      return (
        (this._bottomOffset = ""),
        (this._topOffset = t),
        (this._alignItems = "flex-start"),
        this
      );
    }
    left(t = "") {
      return (this._xOffset = t), (this._xPosition = "left"), this;
    }
    bottom(t = "") {
      return (
        (this._topOffset = ""),
        (this._bottomOffset = t),
        (this._alignItems = "flex-end"),
        this
      );
    }
    right(t = "") {
      return (this._xOffset = t), (this._xPosition = "right"), this;
    }
    start(t = "") {
      return (this._xOffset = t), (this._xPosition = "start"), this;
    }
    end(t = "") {
      return (this._xOffset = t), (this._xPosition = "end"), this;
    }
    width(t = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ width: t })
          : (this._width = t),
        this
      );
    }
    height(t = "") {
      return (
        this._overlayRef
          ? this._overlayRef.updateSize({ height: t })
          : (this._height = t),
        this
      );
    }
    centerHorizontally(t = "") {
      return this.left(t), (this._xPosition = "center"), this;
    }
    centerVertically(t = "") {
      return this.top(t), (this._alignItems = "center"), this;
    }
    apply() {
      if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
      let t = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement.style,
        i = this._overlayRef.getConfig(),
        { width: o, height: r, maxWidth: a, maxHeight: d } = i,
        m =
          (o === "100%" || o === "100vw") &&
          (!a || a === "100%" || a === "100vw"),
        _ =
          (r === "100%" || r === "100vh") &&
          (!d || d === "100%" || d === "100vh"),
        v = this._xPosition,
        S = this._xOffset,
        T = this._overlayRef.getConfig().direction === "rtl",
        M = "",
        A = "",
        j = "";
      m
        ? (j = "flex-start")
        : v === "center"
        ? ((j = "center"), T ? (A = S) : (M = S))
        : T
        ? v === "left" || v === "end"
          ? ((j = "flex-end"), (M = S))
          : (v === "right" || v === "start") && ((j = "flex-start"), (A = S))
        : v === "left" || v === "start"
        ? ((j = "flex-start"), (M = S))
        : (v === "right" || v === "end") && ((j = "flex-end"), (A = S)),
        (t.position = this._cssPosition),
        (t.marginLeft = m ? "0" : M),
        (t.marginTop = _ ? "0" : this._topOffset),
        (t.marginBottom = this._bottomOffset),
        (t.marginRight = m ? "0" : A),
        (e.justifyContent = j),
        (e.alignItems = _ ? "flex-start" : this._alignItems);
    }
    dispose() {
      if (this._isDisposed || !this._overlayRef) return;
      let t = this._overlayRef.overlayElement.style,
        e = this._overlayRef.hostElement,
        i = e.style;
      e.classList.remove(mg),
        (i.justifyContent =
          i.alignItems =
          t.marginTop =
          t.marginBottom =
          t.marginLeft =
          t.marginRight =
          t.position =
            ""),
        (this._overlayRef = null),
        (this._isDisposed = !0);
    }
  },
  MC = (() => {
    class n {
      constructor(e, i, o, r) {
        (this._viewportRuler = e),
          (this._document = i),
          (this._platform = o),
          (this._overlayContainer = r);
      }
      global() {
        return new yu();
      }
      flexibleConnectedTo(e) {
        return new Dl(
          e,
          this._viewportRuler,
          this._document,
          this._platform,
          this._overlayContainer
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(du), Z(Le), Z(ft), Z(gg));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  TC = 0,
  Er = (() => {
    class n {
      constructor(e, i, o, r, a, d, m, _, v, S, T, M) {
        (this.scrollStrategies = e),
          (this._overlayContainer = i),
          (this._componentFactoryResolver = o),
          (this._positionBuilder = r),
          (this._keyboardDispatcher = a),
          (this._injector = d),
          (this._ngZone = m),
          (this._document = _),
          (this._directionality = v),
          (this._location = S),
          (this._outsideClickDispatcher = T),
          (this._animationsModuleType = M);
      }
      create(e) {
        let i = this._createHostElement(),
          o = this._createPaneElement(i),
          r = this._createPortalOutlet(o),
          a = new wl(e);
        return (
          (a.direction = a.direction || this._directionality.value),
          new vu(
            r,
            i,
            o,
            a,
            this._ngZone,
            this._keyboardDispatcher,
            this._document,
            this._location,
            this._outsideClickDispatcher,
            this._animationsModuleType === "NoopAnimations",
            this._injector.get(qr)
          )
        );
      }
      position() {
        return this._positionBuilder;
      }
      _createPaneElement(e) {
        let i = this._document.createElement("div");
        return (
          (i.id = `cdk-overlay-${TC++}`),
          i.classList.add("cdk-overlay-pane"),
          e.appendChild(i),
          i
        );
      }
      _createHostElement() {
        let e = this._document.createElement("div");
        return this._overlayContainer.getContainerElement().appendChild(e), e;
      }
      _createPortalOutlet(e) {
        return (
          this._appRef || (this._appRef = this._injector.get(Vn)),
          new yl(
            e,
            this._componentFactoryResolver,
            this._appRef,
            this._injector,
            this._document
          )
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(
            Z(xC),
            Z(gg),
            Z(So),
            Z(MC),
            Z(CC),
            Z(Ct),
            Z(Oe),
            Z(Le),
            Z(Tr),
            Z(us),
            Z(wC),
            Z(vn, 8)
          );
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var EC = new qe("cdk-connected-overlay-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let n = J(Er);
    return () => n.scrollStrategies.reposition();
  },
});
function kC(n) {
  return () => n.scrollStrategies.reposition();
}
var OC = { provide: EC, deps: [Er], useFactory: kC },
  _g = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = _e({ type: n });
      }
      static {
        this.ɵinj = ge({ providers: [Er, OC], imports: [ho, xl, uu, uu] });
      }
    }
    return n;
  })();
function IC() {
  return !0;
}
var PC = new qe("mat-sanity-checks", { providedIn: "root", factory: IC }),
  Ai = (() => {
    class n {
      constructor(e, i, o) {
        (this._sanityChecks = i),
          (this._document = o),
          (this._hasDoneGlobalChecks = !1),
          e._applyBodyHighContrastModeCssClasses(),
          this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
      }
      _checkIsEnabled(e) {
        return Ia()
          ? !1
          : typeof this._sanityChecks == "boolean"
          ? this._sanityChecks
          : !!this._sanityChecks[e];
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(cu), Z(PC, 8), Z(Le));
        };
      }
      static {
        this.ɵmod = _e({ type: n });
      }
      static {
        this.ɵinj = ge({ imports: [ho, ho] });
      }
    }
    return n;
  })();
var bg = new qe("MAT_DATE_LOCALE", { providedIn: "root", factory: AC });
function AC() {
  return J(Nc);
}
var Mi = class {
    constructor() {
      (this._localeChanges = new Ee()),
        (this.localeChanges = this._localeChanges);
    }
    getValidDateOrNull(t) {
      return this.isDateInstance(t) && this.isValid(t) ? t : null;
    }
    deserialize(t) {
      return t == null || (this.isDateInstance(t) && this.isValid(t))
        ? t
        : this.invalid();
    }
    setLocale(t) {
      (this.locale = t), this._localeChanges.next();
    }
    compareDate(t, e) {
      return (
        this.getYear(t) - this.getYear(e) ||
        this.getMonth(t) - this.getMonth(e) ||
        this.getDate(t) - this.getDate(e)
      );
    }
    sameDate(t, e) {
      if (t && e) {
        let i = this.isValid(t),
          o = this.isValid(e);
        return i && o ? !this.compareDate(t, e) : i == o;
      }
      return t == e;
    }
    clampDate(t, e, i) {
      return e && this.compareDate(t, e) < 0
        ? e
        : i && this.compareDate(t, i) > 0
        ? i
        : t;
    }
  },
  kr = new qe("mat-date-formats"),
  RC =
    /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
function xu(n, t) {
  let e = Array(n);
  for (let i = 0; i < n; i++) e[i] = t(i);
  return e;
}
var FC = (() => {
    class n extends Mi {
      constructor(e) {
        super(),
          (this.useUtcForDisplay = !1),
          (this._matDateLocale = J(bg, { optional: !0 })),
          e !== void 0 && (this._matDateLocale = e),
          super.setLocale(this._matDateLocale);
      }
      getYear(e) {
        return e.getFullYear();
      }
      getMonth(e) {
        return e.getMonth();
      }
      getDate(e) {
        return e.getDate();
      }
      getDayOfWeek(e) {
        return e.getDay();
      }
      getMonthNames(e) {
        let i = new Intl.DateTimeFormat(this.locale, {
          month: e,
          timeZone: "utc",
        });
        return xu(12, (o) => this._format(i, new Date(2017, o, 1)));
      }
      getDateNames() {
        let e = new Intl.DateTimeFormat(this.locale, {
          day: "numeric",
          timeZone: "utc",
        });
        return xu(31, (i) => this._format(e, new Date(2017, 0, i + 1)));
      }
      getDayOfWeekNames(e) {
        let i = new Intl.DateTimeFormat(this.locale, {
          weekday: e,
          timeZone: "utc",
        });
        return xu(7, (o) => this._format(i, new Date(2017, 0, o + 1)));
      }
      getYearName(e) {
        let i = new Intl.DateTimeFormat(this.locale, {
          year: "numeric",
          timeZone: "utc",
        });
        return this._format(i, e);
      }
      getFirstDayOfWeek() {
        if (typeof Intl < "u" && Intl.Locale) {
          let e = new Intl.Locale(this.locale),
            i = (e.getWeekInfo?.() || e.weekInfo)?.firstDay ?? 0;
          return i === 7 ? 0 : i;
        }
        return 0;
      }
      getNumDaysInMonth(e) {
        return this.getDate(
          this._createDateWithOverflow(this.getYear(e), this.getMonth(e) + 1, 0)
        );
      }
      clone(e) {
        return new Date(e.getTime());
      }
      createDate(e, i, o) {
        let r = this._createDateWithOverflow(e, i, o);
        return r.getMonth() != i, r;
      }
      today() {
        return new Date();
      }
      parse(e, i) {
        return typeof e == "number"
          ? new Date(e)
          : e
          ? new Date(Date.parse(e))
          : null;
      }
      format(e, i) {
        if (!this.isValid(e))
          throw Error("NativeDateAdapter: Cannot format invalid date.");
        let o = new Intl.DateTimeFormat(
          this.locale,
          et(ne({}, i), { timeZone: "utc" })
        );
        return this._format(o, e);
      }
      addCalendarYears(e, i) {
        return this.addCalendarMonths(e, i * 12);
      }
      addCalendarMonths(e, i) {
        let o = this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e) + i,
          this.getDate(e)
        );
        return (
          this.getMonth(o) != (((this.getMonth(e) + i) % 12) + 12) % 12 &&
            (o = this._createDateWithOverflow(
              this.getYear(o),
              this.getMonth(o),
              0
            )),
          o
        );
      }
      addCalendarDays(e, i) {
        return this._createDateWithOverflow(
          this.getYear(e),
          this.getMonth(e),
          this.getDate(e) + i
        );
      }
      toIso8601(e) {
        return [
          e.getUTCFullYear(),
          this._2digit(e.getUTCMonth() + 1),
          this._2digit(e.getUTCDate()),
        ].join("-");
      }
      deserialize(e) {
        if (typeof e == "string") {
          if (!e) return null;
          if (RC.test(e)) {
            let i = new Date(e);
            if (this.isValid(i)) return i;
          }
        }
        return super.deserialize(e);
      }
      isDateInstance(e) {
        return e instanceof Date;
      }
      isValid(e) {
        return !isNaN(e.getTime());
      }
      invalid() {
        return new Date(NaN);
      }
      _createDateWithOverflow(e, i, o) {
        let r = new Date();
        return r.setFullYear(e, i, o), r.setHours(0, 0, 0, 0), r;
      }
      _2digit(e) {
        return ("00" + e).slice(-2);
      }
      _format(e, i) {
        let o = new Date();
        return (
          o.setUTCFullYear(i.getFullYear(), i.getMonth(), i.getDate()),
          o.setUTCHours(
            i.getHours(),
            i.getMinutes(),
            i.getSeconds(),
            i.getMilliseconds()
          ),
          e.format(o)
        );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(bg, 8));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  NC = {
    parse: { dateInput: null },
    display: {
      dateInput: { year: "numeric", month: "numeric", day: "numeric" },
      monthYearLabel: { year: "numeric", month: "short" },
      dateA11yLabel: { year: "numeric", month: "long", day: "numeric" },
      monthYearA11yLabel: { year: "numeric", month: "long" },
    },
  };
var Ml = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({ providers: [VC()] });
    }
  }
  return n;
})();
function VC(n = NC) {
  return [
    { provide: Mi, useClass: FC },
    { provide: kr, useValue: n },
  ];
}
var qi = (function (n) {
    return (
      (n[(n.FADING_IN = 0)] = "FADING_IN"),
      (n[(n.VISIBLE = 1)] = "VISIBLE"),
      (n[(n.FADING_OUT = 2)] = "FADING_OUT"),
      (n[(n.HIDDEN = 3)] = "HIDDEN"),
      n
    );
  })(qi || {}),
  Du = class {
    constructor(t, e, i, o = !1) {
      (this._renderer = t),
        (this.element = e),
        (this.config = i),
        (this._animationForciblyDisabledThroughCss = o),
        (this.state = qi.HIDDEN);
    }
    fadeOut() {
      this._renderer.fadeOutRipple(this);
    }
  },
  vg = Tn({ passive: !0, capture: !0 }),
  Su = class {
    constructor() {
      (this._events = new Map()),
        (this._delegateEventHandler = (t) => {
          let e = Yi(t);
          e &&
            this._events.get(t.type)?.forEach((i, o) => {
              (o === e || o.contains(e)) && i.forEach((r) => r.handleEvent(t));
            });
        });
    }
    addHandler(t, e, i, o) {
      let r = this._events.get(e);
      if (r) {
        let a = r.get(i);
        a ? a.add(o) : r.set(i, new Set([o]));
      } else
        this._events.set(e, new Map([[i, new Set([o])]])),
          t.runOutsideAngular(() => {
            document.addEventListener(e, this._delegateEventHandler, vg);
          });
    }
    removeHandler(t, e, i) {
      let o = this._events.get(t);
      if (!o) return;
      let r = o.get(e);
      r &&
        (r.delete(i),
        r.size === 0 && o.delete(e),
        o.size === 0 &&
          (this._events.delete(t),
          document.removeEventListener(t, this._delegateEventHandler, vg)));
    }
  },
  yg = { enterDuration: 225, exitDuration: 150 },
  LC = 800,
  xg = Tn({ passive: !0, capture: !0 }),
  Cg = ["mousedown", "touchstart"],
  wg = ["mouseup", "mouseleave", "touchend", "touchcancel"],
  Mu = class n {
    static {
      this._eventManager = new Su();
    }
    constructor(t, e, i, o) {
      (this._target = t),
        (this._ngZone = e),
        (this._platform = o),
        (this._isPointerDown = !1),
        (this._activeRipples = new Map()),
        (this._pointerUpEventsRegistered = !1),
        o.isBrowser && (this._containerElement = qn(i));
    }
    fadeInRipple(t, e, i = {}) {
      let o = (this._containerRect =
          this._containerRect ||
          this._containerElement.getBoundingClientRect()),
        r = ne(ne({}, yg), i.animation);
      i.centered && ((t = o.left + o.width / 2), (e = o.top + o.height / 2));
      let a = i.radius || BC(t, e, o),
        d = t - o.left,
        m = e - o.top,
        _ = r.enterDuration,
        v = document.createElement("div");
      v.classList.add("mat-ripple-element"),
        (v.style.left = `${d - a}px`),
        (v.style.top = `${m - a}px`),
        (v.style.height = `${a * 2}px`),
        (v.style.width = `${a * 2}px`),
        i.color != null && (v.style.backgroundColor = i.color),
        (v.style.transitionDuration = `${_}ms`),
        this._containerElement.appendChild(v);
      let S = window.getComputedStyle(v),
        T = S.transitionProperty,
        M = S.transitionDuration,
        A =
          T === "none" ||
          M === "0s" ||
          M === "0s, 0s" ||
          (o.width === 0 && o.height === 0),
        j = new Du(this, v, i, A);
      (v.style.transform = "scale3d(1, 1, 1)"),
        (j.state = qi.FADING_IN),
        i.persistent || (this._mostRecentTransientRipple = j);
      let z = null;
      return (
        !A &&
          (_ || r.exitDuration) &&
          this._ngZone.runOutsideAngular(() => {
            let L = () => {
                z && (z.fallbackTimer = null),
                  clearTimeout(Ve),
                  this._finishRippleTransition(j);
              },
              ue = () => this._destroyRipple(j),
              Ve = setTimeout(ue, _ + 100);
            v.addEventListener("transitionend", L),
              v.addEventListener("transitioncancel", ue),
              (z = {
                onTransitionEnd: L,
                onTransitionCancel: ue,
                fallbackTimer: Ve,
              });
          }),
        this._activeRipples.set(j, z),
        (A || !_) && this._finishRippleTransition(j),
        j
      );
    }
    fadeOutRipple(t) {
      if (t.state === qi.FADING_OUT || t.state === qi.HIDDEN) return;
      let e = t.element,
        i = ne(ne({}, yg), t.config.animation);
      (e.style.transitionDuration = `${i.exitDuration}ms`),
        (e.style.opacity = "0"),
        (t.state = qi.FADING_OUT),
        (t._animationForciblyDisabledThroughCss || !i.exitDuration) &&
          this._finishRippleTransition(t);
    }
    fadeOutAll() {
      this._getActiveRipples().forEach((t) => t.fadeOut());
    }
    fadeOutAllNonPersistent() {
      this._getActiveRipples().forEach((t) => {
        t.config.persistent || t.fadeOut();
      });
    }
    setupTriggerEvents(t) {
      let e = qn(t);
      !this._platform.isBrowser ||
        !e ||
        e === this._triggerElement ||
        (this._removeTriggerEvents(),
        (this._triggerElement = e),
        Cg.forEach((i) => {
          n._eventManager.addHandler(this._ngZone, i, e, this);
        }));
    }
    handleEvent(t) {
      t.type === "mousedown"
        ? this._onMousedown(t)
        : t.type === "touchstart"
        ? this._onTouchStart(t)
        : this._onPointerUp(),
        this._pointerUpEventsRegistered ||
          (this._ngZone.runOutsideAngular(() => {
            wg.forEach((e) => {
              this._triggerElement.addEventListener(e, this, xg);
            });
          }),
          (this._pointerUpEventsRegistered = !0));
    }
    _finishRippleTransition(t) {
      t.state === qi.FADING_IN
        ? this._startFadeOutTransition(t)
        : t.state === qi.FADING_OUT && this._destroyRipple(t);
    }
    _startFadeOutTransition(t) {
      let e = t === this._mostRecentTransientRipple,
        { persistent: i } = t.config;
      (t.state = qi.VISIBLE), !i && (!e || !this._isPointerDown) && t.fadeOut();
    }
    _destroyRipple(t) {
      let e = this._activeRipples.get(t) ?? null;
      this._activeRipples.delete(t),
        this._activeRipples.size || (this._containerRect = null),
        t === this._mostRecentTransientRipple &&
          (this._mostRecentTransientRipple = null),
        (t.state = qi.HIDDEN),
        e !== null &&
          (t.element.removeEventListener("transitionend", e.onTransitionEnd),
          t.element.removeEventListener(
            "transitioncancel",
            e.onTransitionCancel
          ),
          e.fallbackTimer !== null && clearTimeout(e.fallbackTimer)),
        t.element.remove();
    }
    _onMousedown(t) {
      let e = au(t),
        i =
          this._lastTouchStartEvent &&
          Date.now() < this._lastTouchStartEvent + LC;
      !this._target.rippleDisabled &&
        !e &&
        !i &&
        ((this._isPointerDown = !0),
        this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
    }
    _onTouchStart(t) {
      if (!this._target.rippleDisabled && !su(t)) {
        (this._lastTouchStartEvent = Date.now()), (this._isPointerDown = !0);
        let e = t.changedTouches;
        if (e)
          for (let i = 0; i < e.length; i++)
            this.fadeInRipple(
              e[i].clientX,
              e[i].clientY,
              this._target.rippleConfig
            );
      }
    }
    _onPointerUp() {
      this._isPointerDown &&
        ((this._isPointerDown = !1),
        this._getActiveRipples().forEach((t) => {
          let e =
            t.state === qi.VISIBLE ||
            (t.config.terminateOnPointerUp && t.state === qi.FADING_IN);
          !t.config.persistent && e && t.fadeOut();
        }));
    }
    _getActiveRipples() {
      return Array.from(this._activeRipples.keys());
    }
    _removeTriggerEvents() {
      let t = this._triggerElement;
      t &&
        (Cg.forEach((e) => n._eventManager.removeHandler(e, t, this)),
        this._pointerUpEventsRegistered &&
          (wg.forEach((e) => t.removeEventListener(e, this, xg)),
          (this._pointerUpEventsRegistered = !1)));
    }
  };
function BC(n, t, e) {
  let i = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
    o = Math.max(Math.abs(t - e.top), Math.abs(t - e.bottom));
  return Math.sqrt(i * i + o * o);
}
var Tg = new qe("mat-ripple-global-options"),
  HC = (() => {
    class n {
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        e && this.fadeOutAllNonPersistent(),
          (this._disabled = e),
          this._setupTriggerEventsIfEnabled();
      }
      get trigger() {
        return this._trigger || this._elementRef.nativeElement;
      }
      set trigger(e) {
        (this._trigger = e), this._setupTriggerEventsIfEnabled();
      }
      constructor(e, i, o, r, a) {
        (this._elementRef = e),
          (this._animationMode = a),
          (this.radius = 0),
          (this._disabled = !1),
          (this._isInitialized = !1),
          (this._globalOptions = r || {}),
          (this._rippleRenderer = new Mu(this, i, e, o));
      }
      ngOnInit() {
        (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
      }
      ngOnDestroy() {
        this._rippleRenderer._removeTriggerEvents();
      }
      fadeOutAll() {
        this._rippleRenderer.fadeOutAll();
      }
      fadeOutAllNonPersistent() {
        this._rippleRenderer.fadeOutAllNonPersistent();
      }
      get rippleConfig() {
        return {
          centered: this.centered,
          radius: this.radius,
          color: this.color,
          animation: ne(
            ne(
              ne({}, this._globalOptions.animation),
              this._animationMode === "NoopAnimations"
                ? { enterDuration: 0, exitDuration: 0 }
                : {}
            ),
            this.animation
          ),
          terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
        };
      }
      get rippleDisabled() {
        return this.disabled || !!this._globalOptions.disabled;
      }
      _setupTriggerEventsIfEnabled() {
        !this.disabled &&
          this._isInitialized &&
          this._rippleRenderer.setupTriggerEvents(this.trigger);
      }
      launch(e, i = 0, o) {
        return typeof e == "number"
          ? this._rippleRenderer.fadeInRipple(
              e,
              i,
              ne(ne({}, this.rippleConfig), o)
            )
          : this._rippleRenderer.fadeInRipple(
              0,
              0,
              ne(ne({}, this.rippleConfig), e)
            );
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(ke), B(Oe), B(ft), B(Tg, 8), B(vn, 8));
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [
            ["", "mat-ripple", ""],
            ["", "matRipple", ""],
          ],
          hostAttrs: [1, "mat-ripple"],
          hostVars: 2,
          hostBindings: function (i, o) {
            i & 2 && fe("mat-ripple-unbounded", o.unbounded);
          },
          inputs: {
            color: [0, "matRippleColor", "color"],
            unbounded: [0, "matRippleUnbounded", "unbounded"],
            centered: [0, "matRippleCentered", "centered"],
            radius: [0, "matRippleRadius", "radius"],
            animation: [0, "matRippleAnimation", "animation"],
            disabled: [0, "matRippleDisabled", "disabled"],
            trigger: [0, "matRippleTrigger", "trigger"],
          },
          exportAs: ["matRipple"],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  Eg = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵmod = _e({ type: n });
      }
      static {
        this.ɵinj = ge({ imports: [Ai, Ai] });
      }
    }
    return n;
  })();
var Dg = { capture: !0 },
  Sg = ["focus", "mousedown", "mouseenter", "touchstart"],
  Cu = "mat-ripple-loader-uninitialized",
  wu = "mat-ripple-loader-class-name",
  Mg = "mat-ripple-loader-centered",
  Sl = "mat-ripple-loader-disabled",
  kg = (() => {
    class n {
      constructor() {
        (this._document = J(Le, { optional: !0 })),
          (this._animationMode = J(vn, { optional: !0 })),
          (this._globalRippleOptions = J(Tg, { optional: !0 })),
          (this._platform = J(ft)),
          (this._ngZone = J(Oe)),
          (this._hosts = new Map()),
          (this._onInteraction = (e) => {
            let i = Yi(e);
            if (i instanceof HTMLElement) {
              let o = i.closest(
                `[${Cu}="${this._globalRippleOptions?.namespace ?? ""}"]`
              );
              o && this._createRipple(o);
            }
          }),
          this._ngZone.runOutsideAngular(() => {
            for (let e of Sg)
              this._document?.addEventListener(e, this._onInteraction, Dg);
          });
      }
      ngOnDestroy() {
        let e = this._hosts.keys();
        for (let i of e) this.destroyRipple(i);
        for (let i of Sg)
          this._document?.removeEventListener(i, this._onInteraction, Dg);
      }
      configureRipple(e, i) {
        e.setAttribute(Cu, this._globalRippleOptions?.namespace ?? ""),
          (i.className || !e.hasAttribute(wu)) &&
            e.setAttribute(wu, i.className || ""),
          i.centered && e.setAttribute(Mg, ""),
          i.disabled && e.setAttribute(Sl, "");
      }
      getRipple(e) {
        return this._hosts.get(e) || this._createRipple(e);
      }
      setDisabled(e, i) {
        let o = this._hosts.get(e);
        if (o) {
          o.disabled = i;
          return;
        }
        i ? e.setAttribute(Sl, "") : e.removeAttribute(Sl);
      }
      _createRipple(e) {
        if (!this._document) return;
        let i = this._hosts.get(e);
        if (i) return i;
        e.querySelector(".mat-ripple")?.remove();
        let o = this._document.createElement("span");
        o.classList.add("mat-ripple", e.getAttribute(wu)), e.append(o);
        let r = new HC(
          new ke(o),
          this._ngZone,
          this._platform,
          this._globalRippleOptions ? this._globalRippleOptions : void 0,
          this._animationMode ? this._animationMode : void 0
        );
        return (
          (r._isInitialized = !0),
          (r.trigger = e),
          (r.centered = e.hasAttribute(Mg)),
          (r.disabled = e.hasAttribute(Sl)),
          this.attachRipple(e, r),
          r
        );
      }
      attachRipple(e, i) {
        e.removeAttribute(Cu), this._hosts.set(e, i);
      }
      destroyRipple(e) {
        let i = this._hosts.get(e);
        i && (i.ngOnDestroy(), this._hosts.delete(e));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })();
var zC = ["mat-button", ""],
  UC = [
    [
      ["", 8, "material-icons", 3, "iconPositionEnd", ""],
      ["mat-icon", 3, "iconPositionEnd", ""],
      ["", "matButtonIcon", "", 3, "iconPositionEnd", ""],
    ],
    "*",
    [
      ["", "iconPositionEnd", "", 8, "material-icons"],
      ["mat-icon", "iconPositionEnd", ""],
      ["", "matButtonIcon", "", "iconPositionEnd", ""],
    ],
  ],
  WC = [
    ".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])",
    "*",
    ".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]",
  ];
var $C =
  ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}";
var GC = ["mat-icon-button", ""],
  YC = ["*"];
var qC = new qe("MAT_BUTTON_CONFIG");
var KC = [
    { attribute: "mat-button", mdcClasses: ["mdc-button", "mat-mdc-button"] },
    {
      attribute: "mat-flat-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--unelevated",
        "mat-mdc-unelevated-button",
      ],
    },
    {
      attribute: "mat-raised-button",
      mdcClasses: ["mdc-button", "mdc-button--raised", "mat-mdc-raised-button"],
    },
    {
      attribute: "mat-stroked-button",
      mdcClasses: [
        "mdc-button",
        "mdc-button--outlined",
        "mat-mdc-outlined-button",
      ],
    },
    {
      attribute: "mat-fab",
      mdcClasses: ["mdc-fab", "mat-mdc-fab-base", "mat-mdc-fab"],
    },
    {
      attribute: "mat-mini-fab",
      mdcClasses: [
        "mdc-fab",
        "mat-mdc-fab-base",
        "mdc-fab--mini",
        "mat-mdc-mini-fab",
      ],
    },
    {
      attribute: "mat-icon-button",
      mdcClasses: ["mdc-icon-button", "mat-mdc-icon-button"],
    },
  ],
  Og = (() => {
    class n {
      get ripple() {
        return this._rippleLoader?.getRipple(this._elementRef.nativeElement);
      }
      set ripple(e) {
        this._rippleLoader?.attachRipple(this._elementRef.nativeElement, e);
      }
      get disableRipple() {
        return this._disableRipple;
      }
      set disableRipple(e) {
        (this._disableRipple = e), this._updateRippleDisabled();
      }
      get disabled() {
        return this._disabled;
      }
      set disabled(e) {
        (this._disabled = e), this._updateRippleDisabled();
      }
      constructor(e, i, o, r) {
        (this._elementRef = e),
          (this._platform = i),
          (this._ngZone = o),
          (this._animationMode = r),
          (this._focusMonitor = J(lu)),
          (this._rippleLoader = J(kg)),
          (this._isFab = !1),
          (this._disableRipple = !1),
          (this._disabled = !1);
        let a = J(qC, { optional: !0 }),
          d = e.nativeElement,
          m = d.classList;
        (this.disabledInteractive = a?.disabledInteractive ?? !1),
          (this.color = a?.color ?? null),
          this._rippleLoader?.configureRipple(d, {
            className: "mat-mdc-button-ripple",
          });
        for (let { attribute: _, mdcClasses: v } of KC)
          d.hasAttribute(_) && m.add(...v);
      }
      ngAfterViewInit() {
        this._focusMonitor.monitor(this._elementRef, !0);
      }
      ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef),
          this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);
      }
      focus(e = "program", i) {
        e
          ? this._focusMonitor.focusVia(this._elementRef.nativeElement, e, i)
          : this._elementRef.nativeElement.focus(i);
      }
      _getAriaDisabled() {
        return this.ariaDisabled != null
          ? this.ariaDisabled
          : this.disabled && this.disabledInteractive
          ? !0
          : null;
      }
      _getDisabledAttribute() {
        return this.disabledInteractive || !this.disabled ? null : !0;
      }
      _updateRippleDisabled() {
        this._rippleLoader?.setDisabled(
          this._elementRef.nativeElement,
          this.disableRipple || this.disabled
        );
      }
      static {
        this.ɵfac = function (i) {
          or();
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          inputs: {
            color: "color",
            disableRipple: [2, "disableRipple", "disableRipple", xe],
            disabled: [2, "disabled", "disabled", xe],
            ariaDisabled: [2, "aria-disabled", "ariaDisabled", xe],
            disabledInteractive: [
              2,
              "disabledInteractive",
              "disabledInteractive",
              xe,
            ],
          },
          features: [kt],
        });
      }
    }
    return n;
  })();
var Tu = (() => {
  class n extends Og {
    constructor(e, i, o, r) {
      super(e, i, o, r);
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(B(ke), B(ft), B(Oe), B(vn, 8));
      };
    }
    static {
      this.ɵcmp = oe({
        type: n,
        selectors: [
          ["button", "mat-button", ""],
          ["button", "mat-raised-button", ""],
          ["button", "mat-flat-button", ""],
          ["button", "mat-stroked-button", ""],
        ],
        hostVars: 14,
        hostBindings: function (i, o) {
          i & 2 &&
            (ae("disabled", o._getDisabledAttribute())(
              "aria-disabled",
              o._getAriaDisabled()
            ),
            Ae(o.color ? "mat-" + o.color : ""),
            fe("mat-mdc-button-disabled", o.disabled)(
              "mat-mdc-button-disabled-interactive",
              o.disabledInteractive
            )("_mat-animation-noopable", o._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !o.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [$e, re],
        attrs: zC,
        ngContentSelectors: WC,
        decls: 7,
        vars: 4,
        consts: [
          [1, "mat-mdc-button-persistent-ripple"],
          [1, "mdc-button__label"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (i, o) {
          i & 1 &&
            (Lt(UC),
            U(0, "span", 0),
            wt(1),
            c(2, "span", 1),
            wt(3, 1),
            l(),
            wt(4, 2),
            U(5, "span", 2)(6, "span", 3)),
            i & 2 &&
              fe("mdc-button__ripple", !o._isFab)("mdc-fab__ripple", o._isFab);
        },
        styles: [
          '.mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-text-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-text-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, var(--mat-app-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-filled-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-filled-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color, var(--mat-app-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, var(--mat-app-on-primary));background-color:var(--mdc-filled-button-container-color, var(--mat-app-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow, var(--mat-app-level1));height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-protected-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-protected-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, var(--mat-app-primary));background-color:var(--mdc-protected-button-container-color, var(--mat-app-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow, var(--mat-app-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow, var(--mat-app-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-outlined-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-outlined-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight, var(--mat-app-label-large-weight));border-radius:var(--mdc-outlined-button-container-shape, var(--mat-app-corner-full));border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, var(--mat-app-primary));border-color:var(--mdc-outlined-button-outline-color, var(--mat-app-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}',
          ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}",
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return n;
})();
var Eu = (() => {
  class n extends Og {
    constructor(e, i, o, r) {
      super(e, i, o, r),
        this._rippleLoader.configureRipple(this._elementRef.nativeElement, {
          centered: !0,
        });
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)(B(ke), B(ft), B(Oe), B(vn, 8));
      };
    }
    static {
      this.ɵcmp = oe({
        type: n,
        selectors: [["button", "mat-icon-button", ""]],
        hostVars: 14,
        hostBindings: function (i, o) {
          i & 2 &&
            (ae("disabled", o._getDisabledAttribute())(
              "aria-disabled",
              o._getAriaDisabled()
            ),
            Ae(o.color ? "mat-" + o.color : ""),
            fe("mat-mdc-button-disabled", o.disabled)(
              "mat-mdc-button-disabled-interactive",
              o.disabledInteractive
            )("_mat-animation-noopable", o._animationMode === "NoopAnimations")(
              "mat-unthemed",
              !o.color
            )("mat-mdc-button-base", !0));
        },
        exportAs: ["matButton"],
        standalone: !0,
        features: [$e, re],
        attrs: GC,
        ngContentSelectors: YC,
        decls: 4,
        vars: 0,
        consts: [
          [1, "mat-mdc-button-persistent-ripple", "mdc-icon-button__ripple"],
          [1, "mat-mdc-focus-indicator"],
          [1, "mat-mdc-button-touch-target"],
        ],
        template: function (i, o) {
          i & 1 &&
            (Lt(), U(0, "span", 0), wt(1), U(2, "span", 1)(3, "span", 2));
        },
        styles: [
          '.mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color, var(--mat-app-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}',
          $C,
        ],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
  }
  return n;
})();
var Ig = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({ imports: [Ai, Eg, Ai] });
    }
  }
  return n;
})();
var Uo = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({ imports: [Ai, De, fl, Ai] });
    }
  }
  return n;
})();
var Pg = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({});
    }
  }
  return n;
})();
var Tl = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({ imports: [Ai, Uo, Uo, Pg, Ai] });
    }
  }
  return n;
})();
var ZC = ["mat-calendar-body", ""];
function JC(n, t) {
  return this._trackRow(t);
}
var Bg = (n, t) => t.id;
function ew(n, t) {
  if ((n & 1 && (c(0, "tr", 0)(1, "td", 3), h(2), l()()), n & 2)) {
    let e = w();
    p(),
      gi("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      ae("colspan", e.numCols),
      p(),
      K(" ", e.label, " ");
  }
}
function tw(n, t) {
  if ((n & 1 && (c(0, "td", 3), h(1), l()), n & 2)) {
    let e = w(2);
    gi("padding-top", e._cellPadding)("padding-bottom", e._cellPadding),
      ae("colspan", e._firstRowOffset),
      p(),
      K(" ", e._firstRowOffset >= e.labelMinRequiredCells ? e.label : "", " ");
  }
}
function iw(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "td", 6)(1, "button", 7),
      F("click", function (o) {
        let r = O(e).$implicit,
          a = w(2);
        return I(a._cellClicked(r, o));
      })("focus", function (o) {
        let r = O(e).$implicit,
          a = w(2);
        return I(a._emitActiveDateChange(r, o));
      }),
      c(2, "span", 8),
      h(3),
      l(),
      U(4, "span", 9),
      l()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.$index,
      o = w().$index,
      r = w();
    gi("width", r._cellWidth)("padding-top", r._cellPadding)(
      "padding-bottom",
      r._cellPadding
    ),
      ae("data-mat-row", o)("data-mat-col", i),
      p(),
      fe("mat-calendar-body-disabled", !e.enabled)(
        "mat-calendar-body-active",
        r._isActiveCell(o, i)
      )("mat-calendar-body-range-start", r._isRangeStart(e.compareValue))(
        "mat-calendar-body-range-end",
        r._isRangeEnd(e.compareValue)
      )("mat-calendar-body-in-range", r._isInRange(e.compareValue))(
        "mat-calendar-body-comparison-bridge-start",
        r._isComparisonBridgeStart(e.compareValue, o, i)
      )(
        "mat-calendar-body-comparison-bridge-end",
        r._isComparisonBridgeEnd(e.compareValue, o, i)
      )(
        "mat-calendar-body-comparison-start",
        r._isComparisonStart(e.compareValue)
      )("mat-calendar-body-comparison-end", r._isComparisonEnd(e.compareValue))(
        "mat-calendar-body-in-comparison-range",
        r._isInComparisonRange(e.compareValue)
      )("mat-calendar-body-preview-start", r._isPreviewStart(e.compareValue))(
        "mat-calendar-body-preview-end",
        r._isPreviewEnd(e.compareValue)
      )("mat-calendar-body-in-preview", r._isInPreview(e.compareValue)),
      y("ngClass", e.cssClasses)("tabindex", r._isActiveCell(o, i) ? 0 : -1),
      ae("aria-label", e.ariaLabel)("aria-disabled", !e.enabled || null)(
        "aria-pressed",
        r._isSelected(e.compareValue)
      )("aria-current", r.todayValue === e.compareValue ? "date" : null)(
        "aria-describedby",
        r._getDescribedby(e.compareValue)
      ),
      p(),
      fe("mat-calendar-body-selected", r._isSelected(e.compareValue))(
        "mat-calendar-body-comparison-identical",
        r._isComparisonIdentical(e.compareValue)
      )("mat-calendar-body-today", r.todayValue === e.compareValue),
      p(),
      K(" ", e.displayValue, " ");
  }
}
function nw(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr", 1),
      k(1, tw, 2, 6, "td", 4),
      rr(2, iw, 5, 48, "td", 5, Bg),
      l()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.$index,
      o = w();
    p(), on(i === 0 && o._firstRowOffset ? 1 : -1), p(), ar(e);
  }
}
function ow(n, t) {
  if (
    (n & 1 &&
      (c(0, "th", 2)(1, "span", 6), h(2), l(), c(3, "span", 3), h(4), l()()),
    n & 2)
  ) {
    let e = t.$implicit;
    p(2), N(e.long), p(2), N(e.narrow);
  }
}
var rw = ["*"];
function aw(n, t) {}
function sw(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "mat-month-view", 4),
      bt("activeDateChange", function (o) {
        O(e);
        let r = w();
        return _t(r.activeDate, o) || (r.activeDate = o), I(o);
      }),
      F("_userSelection", function (o) {
        O(e);
        let r = w();
        return I(r._dateSelected(o));
      })("dragStarted", function (o) {
        O(e);
        let r = w();
        return I(r._dragStarted(o));
      })("dragEnded", function (o) {
        O(e);
        let r = w();
        return I(r._dragEnded(o));
      }),
      l();
  }
  if (n & 2) {
    let e = w();
    gt("activeDate", e.activeDate),
      y("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass)(
        "comparisonStart",
        e.comparisonStart
      )("comparisonEnd", e.comparisonEnd)(
        "startDateAccessibleName",
        e.startDateAccessibleName
      )("endDateAccessibleName", e.endDateAccessibleName)(
        "activeDrag",
        e._activeDrag
      );
  }
}
function lw(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "mat-year-view", 5),
      bt("activeDateChange", function (o) {
        O(e);
        let r = w();
        return _t(r.activeDate, o) || (r.activeDate = o), I(o);
      }),
      F("monthSelected", function (o) {
        O(e);
        let r = w();
        return I(r._monthSelectedInYearView(o));
      })("selectedChange", function (o) {
        O(e);
        let r = w();
        return I(r._goToDateInView(o, "month"));
      }),
      l();
  }
  if (n & 2) {
    let e = w();
    gt("activeDate", e.activeDate),
      y("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function cw(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "mat-multi-year-view", 6),
      bt("activeDateChange", function (o) {
        O(e);
        let r = w();
        return _t(r.activeDate, o) || (r.activeDate = o), I(o);
      }),
      F("yearSelected", function (o) {
        O(e);
        let r = w();
        return I(r._yearSelectedInMultiYearView(o));
      })("selectedChange", function (o) {
        O(e);
        let r = w();
        return I(r._goToDateInView(o, "year"));
      }),
      l();
  }
  if (n & 2) {
    let e = w();
    gt("activeDate", e.activeDate),
      y("selected", e.selected)("dateFilter", e.dateFilter)(
        "maxDate",
        e.maxDate
      )("minDate", e.minDate)("dateClass", e.dateClass);
  }
}
function dw(n, t) {}
var uw = ["button"],
  hw = [[["", "matDatepickerToggleIcon", ""]]],
  pw = ["[matDatepickerToggleIcon]"];
function mw(n, t) {
  n & 1 && (ct(), c(0, "svg", 2), U(1, "path", 3), l());
}
var Va = (() => {
    class n {
      constructor() {
        (this.changes = new Ee()),
          (this.calendarLabel = "Calendar"),
          (this.openCalendarLabel = "Open calendar"),
          (this.closeCalendarLabel = "Close calendar"),
          (this.prevMonthLabel = "Previous month"),
          (this.nextMonthLabel = "Next month"),
          (this.prevYearLabel = "Previous year"),
          (this.nextYearLabel = "Next year"),
          (this.prevMultiYearLabel = "Previous 24 years"),
          (this.nextMultiYearLabel = "Next 24 years"),
          (this.switchToMonthViewLabel = "Choose date"),
          (this.switchToMultiYearViewLabel = "Choose month and year"),
          (this.startDateLabel = "Start date"),
          (this.endDateLabel = "End date");
      }
      formatYearRange(e, i) {
        return `${e} \u2013 ${i}`;
      }
      formatYearRangeLabel(e, i) {
        return `${e} to ${i}`;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
      }
    }
    return n;
  })(),
  fw = 0,
  Na = class {
    constructor(t, e, i, o, r = {}, a = t, d) {
      (this.value = t),
        (this.displayValue = e),
        (this.ariaLabel = i),
        (this.enabled = o),
        (this.cssClasses = r),
        (this.compareValue = a),
        (this.rawValue = d),
        (this.id = fw++);
    }
  },
  gw = 1,
  Ag = Tn({ passive: !1, capture: !0 }),
  po = Tn({ passive: !0, capture: !0 }),
  El = Tn({ passive: !0 }),
  Pr = (() => {
    class n {
      ngAfterViewChecked() {
        this._focusActiveCellAfterViewChecked &&
          (this._focusActiveCell(),
          (this._focusActiveCellAfterViewChecked = !1));
      }
      constructor(e, i) {
        (this._elementRef = e),
          (this._ngZone = i),
          (this._platform = J(ft)),
          (this._focusActiveCellAfterViewChecked = !1),
          (this.numCols = 7),
          (this.activeCell = 0),
          (this.isRange = !1),
          (this.cellAspectRatio = 1),
          (this.previewStart = null),
          (this.previewEnd = null),
          (this.selectedValueChange = new ve()),
          (this.previewChange = new ve()),
          (this.activeDateChange = new ve()),
          (this.dragStarted = new ve()),
          (this.dragEnded = new ve()),
          (this._didDragSinceMouseDown = !1),
          (this._injector = J(Ct)),
          (this._trackRow = (o) => o),
          (this._enterHandler = (o) => {
            if (this._skipNextFocus && o.type === "focus") {
              this._skipNextFocus = !1;
              return;
            }
            if (o.target && this.isRange) {
              let r = this._getCellFromElement(o.target);
              r &&
                this._ngZone.run(() =>
                  this.previewChange.emit({
                    value: r.enabled ? r : null,
                    event: o,
                  })
                );
            }
          }),
          (this._touchmoveHandler = (o) => {
            if (!this.isRange) return;
            let r = Rg(o),
              a = r ? this._getCellFromElement(r) : null;
            r !== o.target && (this._didDragSinceMouseDown = !0),
              Ou(o.target) && o.preventDefault(),
              this._ngZone.run(() =>
                this.previewChange.emit({
                  value: a?.enabled ? a : null,
                  event: o,
                })
              );
          }),
          (this._leaveHandler = (o) => {
            this.previewEnd !== null &&
              this.isRange &&
              (o.type !== "blur" && (this._didDragSinceMouseDown = !0),
              o.target &&
                this._getCellFromElement(o.target) &&
                !(
                  o.relatedTarget && this._getCellFromElement(o.relatedTarget)
                ) &&
                this._ngZone.run(() =>
                  this.previewChange.emit({ value: null, event: o })
                ));
          }),
          (this._mousedownHandler = (o) => {
            if (!this.isRange) return;
            this._didDragSinceMouseDown = !1;
            let r = o.target && this._getCellFromElement(o.target);
            !r ||
              !this._isInRange(r.compareValue) ||
              this._ngZone.run(() => {
                this.dragStarted.emit({ value: r.rawValue, event: o });
              });
          }),
          (this._mouseupHandler = (o) => {
            if (!this.isRange) return;
            let r = Ou(o.target);
            if (!r) {
              this._ngZone.run(() => {
                this.dragEnded.emit({ value: null, event: o });
              });
              return;
            }
            r.closest(".mat-calendar-body") ===
              this._elementRef.nativeElement &&
              this._ngZone.run(() => {
                let a = this._getCellFromElement(r);
                this.dragEnded.emit({ value: a?.rawValue ?? null, event: o });
              });
          }),
          (this._touchendHandler = (o) => {
            let r = Rg(o);
            r && this._mouseupHandler({ target: r });
          }),
          (this._id = `mat-calendar-body-${gw++}`),
          (this._startDateLabelId = `${this._id}-start-date`),
          (this._endDateLabelId = `${this._id}-end-date`),
          i.runOutsideAngular(() => {
            let o = e.nativeElement;
            o.addEventListener("touchmove", this._touchmoveHandler, Ag),
              o.addEventListener("mouseenter", this._enterHandler, po),
              o.addEventListener("focus", this._enterHandler, po),
              o.addEventListener("mouseleave", this._leaveHandler, po),
              o.addEventListener("blur", this._leaveHandler, po),
              o.addEventListener("mousedown", this._mousedownHandler, El),
              o.addEventListener("touchstart", this._mousedownHandler, El),
              this._platform.isBrowser &&
                (window.addEventListener("mouseup", this._mouseupHandler),
                window.addEventListener("touchend", this._touchendHandler));
          });
      }
      _cellClicked(e, i) {
        this._didDragSinceMouseDown ||
          (e.enabled &&
            this.selectedValueChange.emit({ value: e.value, event: i }));
      }
      _emitActiveDateChange(e, i) {
        e.enabled && this.activeDateChange.emit({ value: e.value, event: i });
      }
      _isSelected(e) {
        return this.startValue === e || this.endValue === e;
      }
      ngOnChanges(e) {
        let i = e.numCols,
          { rows: o, numCols: r } = this;
        (e.rows || i) &&
          (this._firstRowOffset =
            o && o.length && o[0].length ? r - o[0].length : 0),
          (e.cellAspectRatio || i || !this._cellPadding) &&
            (this._cellPadding = `${(50 * this.cellAspectRatio) / r}%`),
          (i || !this._cellWidth) && (this._cellWidth = `${100 / r}%`);
      }
      ngOnDestroy() {
        let e = this._elementRef.nativeElement;
        e.removeEventListener("touchmove", this._touchmoveHandler, Ag),
          e.removeEventListener("mouseenter", this._enterHandler, po),
          e.removeEventListener("focus", this._enterHandler, po),
          e.removeEventListener("mouseleave", this._leaveHandler, po),
          e.removeEventListener("blur", this._leaveHandler, po),
          e.removeEventListener("mousedown", this._mousedownHandler, El),
          e.removeEventListener("touchstart", this._mousedownHandler, El),
          this._platform.isBrowser &&
            (window.removeEventListener("mouseup", this._mouseupHandler),
            window.removeEventListener("touchend", this._touchendHandler));
      }
      _isActiveCell(e, i) {
        let o = e * this.numCols + i;
        return e && (o -= this._firstRowOffset), o == this.activeCell;
      }
      _focusActiveCell(e = !0) {
        Nn(
          () => {
            setTimeout(() => {
              let i = this._elementRef.nativeElement.querySelector(
                ".mat-calendar-body-active"
              );
              i && (e || (this._skipNextFocus = !0), i.focus());
            });
          },
          { injector: this._injector }
        );
      }
      _scheduleFocusActiveCellAfterViewChecked() {
        this._focusActiveCellAfterViewChecked = !0;
      }
      _isRangeStart(e) {
        return Iu(e, this.startValue, this.endValue);
      }
      _isRangeEnd(e) {
        return Pu(e, this.startValue, this.endValue);
      }
      _isInRange(e) {
        return Au(e, this.startValue, this.endValue, this.isRange);
      }
      _isComparisonStart(e) {
        return Iu(e, this.comparisonStart, this.comparisonEnd);
      }
      _isComparisonBridgeStart(e, i, o) {
        if (
          !this._isComparisonStart(e) ||
          this._isRangeStart(e) ||
          !this._isInRange(e)
        )
          return !1;
        let r = this.rows[i][o - 1];
        if (!r) {
          let a = this.rows[i - 1];
          r = a && a[a.length - 1];
        }
        return r && !this._isRangeEnd(r.compareValue);
      }
      _isComparisonBridgeEnd(e, i, o) {
        if (
          !this._isComparisonEnd(e) ||
          this._isRangeEnd(e) ||
          !this._isInRange(e)
        )
          return !1;
        let r = this.rows[i][o + 1];
        if (!r) {
          let a = this.rows[i + 1];
          r = a && a[0];
        }
        return r && !this._isRangeStart(r.compareValue);
      }
      _isComparisonEnd(e) {
        return Pu(e, this.comparisonStart, this.comparisonEnd);
      }
      _isInComparisonRange(e) {
        return Au(e, this.comparisonStart, this.comparisonEnd, this.isRange);
      }
      _isComparisonIdentical(e) {
        return (
          this.comparisonStart === this.comparisonEnd &&
          e === this.comparisonStart
        );
      }
      _isPreviewStart(e) {
        return Iu(e, this.previewStart, this.previewEnd);
      }
      _isPreviewEnd(e) {
        return Pu(e, this.previewStart, this.previewEnd);
      }
      _isInPreview(e) {
        return Au(e, this.previewStart, this.previewEnd, this.isRange);
      }
      _getDescribedby(e) {
        return this.isRange
          ? this.startValue === e && this.endValue === e
            ? `${this._startDateLabelId} ${this._endDateLabelId}`
            : this.startValue === e
            ? this._startDateLabelId
            : this.endValue === e
            ? this._endDateLabelId
            : null
          : null;
      }
      _getCellFromElement(e) {
        let i = Ou(e);
        if (i) {
          let o = i.getAttribute("data-mat-row"),
            r = i.getAttribute("data-mat-col");
          if (o && r) return this.rows[parseInt(o)][parseInt(r)];
        }
        return null;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(ke), B(Oe));
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["", "mat-calendar-body", ""]],
          hostAttrs: [1, "mat-calendar-body"],
          inputs: {
            label: "label",
            rows: "rows",
            todayValue: "todayValue",
            startValue: "startValue",
            endValue: "endValue",
            labelMinRequiredCells: "labelMinRequiredCells",
            numCols: "numCols",
            activeCell: "activeCell",
            isRange: "isRange",
            cellAspectRatio: "cellAspectRatio",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            previewStart: "previewStart",
            previewEnd: "previewEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedValueChange: "selectedValueChange",
            previewChange: "previewChange",
            activeDateChange: "activeDateChange",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
          },
          exportAs: ["matCalendarBody"],
          standalone: !0,
          features: [Et, re],
          attrs: ZC,
          decls: 7,
          vars: 5,
          consts: [
            ["aria-hidden", "true"],
            ["role", "row"],
            [1, "mat-calendar-body-hidden-label", 3, "id"],
            [1, "mat-calendar-body-label"],
            [1, "mat-calendar-body-label", 3, "paddingTop", "paddingBottom"],
            [
              "role",
              "gridcell",
              1,
              "mat-calendar-body-cell-container",
              3,
              "width",
              "paddingTop",
              "paddingBottom",
            ],
            ["role", "gridcell", 1, "mat-calendar-body-cell-container"],
            [
              "type",
              "button",
              1,
              "mat-calendar-body-cell",
              3,
              "click",
              "focus",
              "ngClass",
              "tabindex",
            ],
            [1, "mat-calendar-body-cell-content", "mat-focus-indicator"],
            ["aria-hidden", "true", 1, "mat-calendar-body-cell-preview"],
          ],
          template: function (i, o) {
            i & 1 &&
              (k(0, ew, 3, 6, "tr", 0),
              rr(1, nw, 4, 1, "tr", 1, JC, !0),
              c(3, "span", 2),
              h(4),
              l(),
              c(5, "span", 2),
              h(6),
              l()),
              i & 2 &&
                (on(o._firstRowOffset < o.labelMinRequiredCells ? 0 : -1),
                p(),
                ar(o.rows),
                p(2),
                y("id", o._startDateLabelId),
                p(),
                K(
                  " ",
                  o.startDateAccessibleName,
                  `
`
                ),
                p(),
                y("id", o._endDateLabelId),
                p(),
                K(
                  " ",
                  o.endDateAccessibleName,
                  `
`
                ));
          },
          dependencies: [It],
          styles: [
            '.mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:"";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color)}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color)}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color)}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-app-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-app-secondary))}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
function ku(n) {
  return n?.nodeName === "TD";
}
function Ou(n) {
  let t;
  return (
    ku(n)
      ? (t = n)
      : ku(n.parentNode)
      ? (t = n.parentNode)
      : ku(n.parentNode?.parentNode) && (t = n.parentNode.parentNode),
    t?.getAttribute("data-mat-row") != null ? t : null
  );
}
function Iu(n, t, e) {
  return e !== null && t !== e && n < e && n === t;
}
function Pu(n, t, e) {
  return t !== null && t !== e && n >= t && n === e;
}
function Au(n, t, e, i) {
  return i && t !== null && e !== null && t !== e && n >= t && n <= e;
}
function Rg(n) {
  let t = n.changedTouches[0];
  return document.elementFromPoint(t.clientX, t.clientY);
}
var Ki = class {
    constructor(t, e) {
      (this.start = t), (this.end = e);
    }
  },
  kl = (() => {
    class n {
      constructor(e, i) {
        (this.selection = e),
          (this._adapter = i),
          (this._selectionChanged = new Ee()),
          (this.selectionChanged = this._selectionChanged),
          (this.selection = e);
      }
      updateSelection(e, i) {
        let o = this.selection;
        (this.selection = e),
          this._selectionChanged.next({ selection: e, source: i, oldValue: o });
      }
      ngOnDestroy() {
        this._selectionChanged.complete();
      }
      _isValidDateInstance(e) {
        return this._adapter.isDateInstance(e) && this._adapter.isValid(e);
      }
      static {
        this.ɵfac = function (i) {
          or();
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  _w = (() => {
    class n extends kl {
      constructor(e) {
        super(null, e);
      }
      add(e) {
        super.updateSelection(e, this);
      }
      isValid() {
        return (
          this.selection != null && this._isValidDateInstance(this.selection)
        );
      }
      isComplete() {
        return this.selection != null;
      }
      clone() {
        let e = new n(this._adapter);
        return e.updateSelection(this.selection, this), e;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(Z(Mi));
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })();
function bw(n, t) {
  return n || new _w(t);
}
var vw = { provide: kl, deps: [[new Uh(), new Wh(), kl], Mi], useFactory: bw };
var Hg = new qe("MAT_DATE_RANGE_SELECTION_STRATEGY");
var Ru = 7,
  yw = 0,
  Fg = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let i = this._activeDate,
          o =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          o,
          this.minDate,
          this.maxDate
        )),
          this._hasSameMonthAndYear(i, this._activeDate) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Ki
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setRanges(this._selected);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, i, o, r, a) {
        (this._changeDetectorRef = e),
          (this._dateFormats = i),
          (this._dateAdapter = o),
          (this._dir = r),
          (this._rangeStrategy = a),
          (this._rerenderSubscription = Ji.EMPTY),
          (this.activeDrag = null),
          (this.selectedChange = new ve()),
          (this._userSelection = new ve()),
          (this.dragStarted = new ve()),
          (this.dragEnded = new ve()),
          (this.activeDateChange = new ve()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Jn(null))
          .subscribe(() => this._init());
      }
      ngOnChanges(e) {
        let i = e.comparisonStart || e.comparisonEnd;
        i && !i.firstChange && this._setRanges(this.selected),
          e.activeDrag && !this.activeDrag && this._clearPreview();
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _dateSelected(e) {
        let i = e.value,
          o = this._getDateFromDayOfMonth(i),
          r,
          a;
        this._selected instanceof Ki
          ? ((r = this._getDateInCurrentMonth(this._selected.start)),
            (a = this._getDateInCurrentMonth(this._selected.end)))
          : (r = a = this._getDateInCurrentMonth(this._selected)),
          (r !== i || a !== i) && this.selectedChange.emit(o),
          this._userSelection.emit({ value: o, event: e.event }),
          this._clearPreview(),
          this._changeDetectorRef.markForCheck();
      }
      _updateActiveDate(e) {
        let i = e.value,
          o = this._activeDate;
        (this.activeDate = this._getDateFromDayOfMonth(i)),
          this._dateAdapter.compareDate(o, this.activeDate) &&
            this.activeDateChange.emit(this._activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let i = this._activeDate,
          o = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              o ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              o ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              -7
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              7
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              1 - this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarDays(
              this._activeDate,
              this._dateAdapter.getNumDaysInMonth(this._activeDate) -
                this._dateAdapter.getDate(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, -1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
            break;
          case 34:
            this.activeDate = e.altKey
              ? this._dateAdapter.addCalendarYears(this._activeDate, 1)
              : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
            break;
          case 13:
          case 32:
            (this._selectionKeyPressed = !0),
              this._canSelect(this._activeDate) && e.preventDefault();
            return;
          case 27:
            this._previewEnd != null &&
              !qf(e) &&
              (this._clearPreview(),
              this.activeDrag
                ? this.dragEnded.emit({ value: null, event: e })
                : (this.selectedChange.emit(null),
                  this._userSelection.emit({ value: null, event: e })),
              e.preventDefault(),
              e.stopPropagation());
            return;
          default:
            return;
        }
        this._dateAdapter.compareDate(i, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._canSelect(this._activeDate) &&
            this._dateSelected({
              value: this._dateAdapter.getDate(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setRanges(this.selected),
          (this._todayDate = this._getCellCompareValue(
            this._dateAdapter.today()
          )),
          (this._monthLabel = this._dateFormats.display.monthLabel
            ? this._dateAdapter.format(
                this.activeDate,
                this._dateFormats.display.monthLabel
              )
            : this._dateAdapter
                .getMonthNames("short")
                [
                  this._dateAdapter.getMonth(this.activeDate)
                ].toLocaleUpperCase());
        let e = this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          1
        );
        (this._firstWeekOffset =
          (Ru +
            this._dateAdapter.getDayOfWeek(e) -
            this._dateAdapter.getFirstDayOfWeek()) %
          Ru),
          this._initWeekdays(),
          this._createWeekCells(),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell(e) {
        this._matCalendarBody._focusActiveCell(e);
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _previewChanged({ event: e, value: i }) {
        if (this._rangeStrategy) {
          let o = i ? i.rawValue : null,
            r = this._rangeStrategy.createPreview(o, this.selected, e);
          if (
            ((this._previewStart = this._getCellCompareValue(r.start)),
            (this._previewEnd = this._getCellCompareValue(r.end)),
            this.activeDrag && o)
          ) {
            let a = this._rangeStrategy.createDrag?.(
              this.activeDrag.value,
              this.selected,
              o,
              e
            );
            a &&
              ((this._previewStart = this._getCellCompareValue(a.start)),
              (this._previewEnd = this._getCellCompareValue(a.end)));
          }
          this._changeDetectorRef.detectChanges();
        }
      }
      _dragEnded(e) {
        if (this.activeDrag)
          if (e.value) {
            let i = this._rangeStrategy?.createDrag?.(
              this.activeDrag.value,
              this.selected,
              e.value,
              e.event
            );
            this.dragEnded.emit({ value: i ?? null, event: e.event });
          } else this.dragEnded.emit({ value: null, event: e.event });
      }
      _getDateFromDayOfMonth(e) {
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          this._dateAdapter.getMonth(this.activeDate),
          e
        );
      }
      _initWeekdays() {
        let e = this._dateAdapter.getFirstDayOfWeek(),
          i = this._dateAdapter.getDayOfWeekNames("narrow"),
          r = this._dateAdapter
            .getDayOfWeekNames("long")
            .map((a, d) => ({ long: a, narrow: i[d], id: yw++ }));
        this._weekdays = r.slice(e).concat(r.slice(0, e));
      }
      _createWeekCells() {
        let e = this._dateAdapter.getNumDaysInMonth(this.activeDate),
          i = this._dateAdapter.getDateNames();
        this._weeks = [[]];
        for (let o = 0, r = this._firstWeekOffset; o < e; o++, r++) {
          r == Ru && (this._weeks.push([]), (r = 0));
          let a = this._dateAdapter.createDate(
              this._dateAdapter.getYear(this.activeDate),
              this._dateAdapter.getMonth(this.activeDate),
              o + 1
            ),
            d = this._shouldEnableDate(a),
            m = this._dateAdapter.format(
              a,
              this._dateFormats.display.dateA11yLabel
            ),
            _ = this.dateClass ? this.dateClass(a, "month") : void 0;
          this._weeks[this._weeks.length - 1].push(
            new Na(o + 1, i[o], m, d, _, this._getCellCompareValue(a), a)
          );
        }
      }
      _shouldEnableDate(e) {
        return (
          !!e &&
          (!this.minDate ||
            this._dateAdapter.compareDate(e, this.minDate) >= 0) &&
          (!this.maxDate ||
            this._dateAdapter.compareDate(e, this.maxDate) <= 0) &&
          (!this.dateFilter || this.dateFilter(e))
        );
      }
      _getDateInCurrentMonth(e) {
        return e && this._hasSameMonthAndYear(e, this.activeDate)
          ? this._dateAdapter.getDate(e)
          : null;
      }
      _hasSameMonthAndYear(e, i) {
        return !!(
          e &&
          i &&
          this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(i) &&
          this._dateAdapter.getYear(e) == this._dateAdapter.getYear(i)
        );
      }
      _getCellCompareValue(e) {
        if (e) {
          let i = this._dateAdapter.getYear(e),
            o = this._dateAdapter.getMonth(e),
            r = this._dateAdapter.getDate(e);
          return new Date(i, o, r).getTime();
        }
        return null;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setRanges(e) {
        e instanceof Ki
          ? ((this._rangeStart = this._getCellCompareValue(e.start)),
            (this._rangeEnd = this._getCellCompareValue(e.end)),
            (this._isRange = !0))
          : ((this._rangeStart = this._rangeEnd = this._getCellCompareValue(e)),
            (this._isRange = !1)),
          (this._comparisonRangeStart = this._getCellCompareValue(
            this.comparisonStart
          )),
          (this._comparisonRangeEnd = this._getCellCompareValue(
            this.comparisonEnd
          ));
      }
      _canSelect(e) {
        return !this.dateFilter || this.dateFilter(e);
      }
      _clearPreview() {
        this._previewStart = this._previewEnd = null;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(Xe), B(kr, 8), B(Mi, 8), B(Tr, 8), B(Hg, 8));
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["mat-month-view"]],
          viewQuery: function (i, o) {
            if ((i & 1 && Dt(Pr, 5), i & 2)) {
              let r;
              rt((r = at())) && (o._matCalendarBody = r.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
            activeDrag: "activeDrag",
          },
          outputs: {
            selectedChange: "selectedChange",
            _userSelection: "_userSelection",
            dragStarted: "dragStarted",
            dragEnded: "dragEnded",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMonthView"],
          standalone: !0,
          features: [Et, re],
          decls: 8,
          vars: 14,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            [1, "mat-calendar-table-header"],
            ["scope", "col"],
            ["aria-hidden", "true"],
            ["colspan", "7", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "previewChange",
              "dragStarted",
              "dragEnded",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "comparisonStart",
              "comparisonEnd",
              "previewStart",
              "previewEnd",
              "isRange",
              "labelMinRequiredCells",
              "activeCell",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [1, "cdk-visually-hidden"],
          ],
          template: function (i, o) {
            i & 1 &&
              (c(0, "table", 0)(1, "thead", 1)(2, "tr"),
              rr(3, ow, 5, 2, "th", 2, Bg),
              l(),
              c(5, "tr", 3),
              U(6, "th", 4),
              l()(),
              c(7, "tbody", 5),
              F("selectedValueChange", function (a) {
                return o._dateSelected(a);
              })("activeDateChange", function (a) {
                return o._updateActiveDate(a);
              })("previewChange", function (a) {
                return o._previewChanged(a);
              })("dragStarted", function (a) {
                return o.dragStarted.emit(a);
              })("dragEnded", function (a) {
                return o._dragEnded(a);
              })("keyup", function (a) {
                return o._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return o._handleCalendarBodyKeydown(a);
              }),
              l()()),
              i & 2 &&
                (p(3),
                ar(o._weekdays),
                p(4),
                y("label", o._monthLabel)("rows", o._weeks)(
                  "todayValue",
                  o._todayDate
                )("startValue", o._rangeStart)("endValue", o._rangeEnd)(
                  "comparisonStart",
                  o._comparisonRangeStart
                )("comparisonEnd", o._comparisonRangeEnd)(
                  "previewStart",
                  o._previewStart
                )("previewEnd", o._previewEnd)("isRange", o._isRange)(
                  "labelMinRequiredCells",
                  3
                )("activeCell", o._dateAdapter.getDate(o.activeDate) - 1)(
                  "startDateAccessibleName",
                  o.startDateAccessibleName
                )("endDateAccessibleName", o.endDateAccessibleName));
          },
          dependencies: [Pr],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  Ri = 24,
  Fu = 4,
  Ng = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let i = this._activeDate,
          o =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          o,
          this.minDate,
          this.maxDate
        )),
          jg(
            this._dateAdapter,
            i,
            this._activeDate,
            this.minDate,
            this.maxDate
          ) || this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Ki
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedYear(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, i, o) {
        (this._changeDetectorRef = e),
          (this._dateAdapter = i),
          (this._dir = o),
          (this._rerenderSubscription = Ji.EMPTY),
          (this.selectedChange = new ve()),
          (this.yearSelected = new ve()),
          (this.activeDateChange = new ve()),
          this._dateAdapter,
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Jn(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _init() {
        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());
        let i =
          this._dateAdapter.getYear(this._activeDate) -
          Fa(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
        this._years = [];
        for (let o = 0, r = []; o < Ri; o++)
          r.push(i + o),
            r.length == Fu &&
              (this._years.push(r.map((a) => this._createCellForYear(a))),
              (r = []));
        this._changeDetectorRef.markForCheck();
      }
      _yearSelected(e) {
        let i = e.value,
          o = this._dateAdapter.createDate(i, 0, 1),
          r = this._getDateFromYear(i);
        this.yearSelected.emit(o), this.selectedChange.emit(r);
      }
      _updateActiveDate(e) {
        let i = e.value,
          o = this._activeDate;
        (this.activeDate = this._getDateFromYear(i)),
          this._dateAdapter.compareDate(o, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let i = this._activeDate,
          o = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              o ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              o ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -Fu
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              Fu
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              -Fa(
                this._dateAdapter,
                this.activeDate,
                this.minDate,
                this.maxDate
              )
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              Ri -
                Fa(
                  this._dateAdapter,
                  this.activeDate,
                  this.minDate,
                  this.maxDate
                ) -
                1
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -Ri * 10 : -Ri
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? Ri * 10 : Ri
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(i, this.activeDate) &&
          this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked(),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._yearSelected({
              value: this._dateAdapter.getYear(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _getActiveCell() {
        return Fa(
          this._dateAdapter,
          this.activeDate,
          this.minDate,
          this.maxDate
        );
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getDateFromYear(e) {
        let i = this._dateAdapter.getMonth(this.activeDate),
          o = this._dateAdapter.getNumDaysInMonth(
            this._dateAdapter.createDate(e, i, 1)
          );
        return this._dateAdapter.createDate(
          e,
          i,
          Math.min(this._dateAdapter.getDate(this.activeDate), o)
        );
      }
      _createCellForYear(e) {
        let i = this._dateAdapter.createDate(e, 0, 1),
          o = this._dateAdapter.getYearName(i),
          r = this.dateClass ? this.dateClass(i, "multi-year") : void 0;
        return new Na(e, o, o, this._shouldEnableYear(e), r);
      }
      _shouldEnableYear(e) {
        if (
          e == null ||
          (this.maxDate && e > this._dateAdapter.getYear(this.maxDate)) ||
          (this.minDate && e < this._dateAdapter.getYear(this.minDate))
        )
          return !1;
        if (!this.dateFilter) return !0;
        let i = this._dateAdapter.createDate(e, 0, 1);
        for (
          let o = i;
          this._dateAdapter.getYear(o) == e;
          o = this._dateAdapter.addCalendarDays(o, 1)
        )
          if (this.dateFilter(o)) return !0;
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedYear(e) {
        if (((this._selectedYear = null), e instanceof Ki)) {
          let i = e.start || e.end;
          i && (this._selectedYear = this._dateAdapter.getYear(i));
        } else e && (this._selectedYear = this._dateAdapter.getYear(e));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(Xe), B(Mi, 8), B(Tr, 8));
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["mat-multi-year-view"]],
          viewQuery: function (i, o) {
            if ((i & 1 && Dt(Pr, 5), i & 2)) {
              let r;
              rt((r = at())) && (o._matCalendarBody = r.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matMultiYearView"],
          standalone: !0,
          features: [re],
          decls: 5,
          vars: 7,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (i, o) {
            i & 1 &&
              (c(0, "table", 0)(1, "thead", 1)(2, "tr"),
              U(3, "th", 2),
              l()(),
              c(4, "tbody", 3),
              F("selectedValueChange", function (a) {
                return o._yearSelected(a);
              })("activeDateChange", function (a) {
                return o._updateActiveDate(a);
              })("keyup", function (a) {
                return o._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return o._handleCalendarBodyKeydown(a);
              }),
              l()()),
              i & 2 &&
                (p(4),
                y("rows", o._years)("todayValue", o._todayYear)(
                  "startValue",
                  o._selectedYear
                )("endValue", o._selectedYear)("numCols", 4)(
                  "cellAspectRatio",
                  4 / 7
                )("activeCell", o._getActiveCell()));
          },
          dependencies: [Pr],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
function jg(n, t, e, i, o) {
  let r = n.getYear(t),
    a = n.getYear(e),
    d = zg(n, i, o);
  return Math.floor((r - d) / Ri) === Math.floor((a - d) / Ri);
}
function Fa(n, t, e, i) {
  let o = n.getYear(t);
  return xw(o - zg(n, e, i), Ri);
}
function zg(n, t, e) {
  let i = 0;
  return e ? (i = n.getYear(e) - Ri + 1) : t && (i = n.getYear(t)), i;
}
function xw(n, t) {
  return ((n % t) + t) % t;
}
var Vg = (() => {
    class n {
      get activeDate() {
        return this._activeDate;
      }
      set activeDate(e) {
        let i = this._activeDate,
          o =
            this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ) || this._dateAdapter.today();
        (this._activeDate = this._dateAdapter.clampDate(
          o,
          this.minDate,
          this.maxDate
        )),
          this._dateAdapter.getYear(i) !==
            this._dateAdapter.getYear(this._activeDate) && this._init();
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Ki
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            )),
          this._setSelectedMonth(e);
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      constructor(e, i, o, r) {
        (this._changeDetectorRef = e),
          (this._dateFormats = i),
          (this._dateAdapter = o),
          (this._dir = r),
          (this._rerenderSubscription = Ji.EMPTY),
          (this.selectedChange = new ve()),
          (this.monthSelected = new ve()),
          (this.activeDateChange = new ve()),
          (this._activeDate = this._dateAdapter.today());
      }
      ngAfterContentInit() {
        this._rerenderSubscription = this._dateAdapter.localeChanges
          .pipe(Jn(null))
          .subscribe(() => this._init());
      }
      ngOnDestroy() {
        this._rerenderSubscription.unsubscribe();
      }
      _monthSelected(e) {
        let i = e.value,
          o = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            i,
            1
          );
        this.monthSelected.emit(o);
        let r = this._getDateFromMonth(i);
        this.selectedChange.emit(r);
      }
      _updateActiveDate(e) {
        let i = e.value,
          o = this._activeDate;
        (this.activeDate = this._getDateFromMonth(i)),
          this._dateAdapter.compareDate(o, this.activeDate) &&
            this.activeDateChange.emit(this.activeDate);
      }
      _handleCalendarBodyKeydown(e) {
        let i = this._activeDate,
          o = this._isRtl();
        switch (e.keyCode) {
          case 37:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              o ? 1 : -1
            );
            break;
          case 39:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              o ? -1 : 1
            );
            break;
          case 38:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -4
            );
            break;
          case 40:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              4
            );
            break;
          case 36:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              -this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 35:
            this.activeDate = this._dateAdapter.addCalendarMonths(
              this._activeDate,
              11 - this._dateAdapter.getMonth(this._activeDate)
            );
            break;
          case 33:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? -10 : -1
            );
            break;
          case 34:
            this.activeDate = this._dateAdapter.addCalendarYears(
              this._activeDate,
              e.altKey ? 10 : 1
            );
            break;
          case 13:
          case 32:
            this._selectionKeyPressed = !0;
            break;
          default:
            return;
        }
        this._dateAdapter.compareDate(i, this.activeDate) &&
          (this.activeDateChange.emit(this.activeDate),
          this._focusActiveCellAfterViewChecked()),
          e.preventDefault();
      }
      _handleCalendarBodyKeyup(e) {
        (e.keyCode === 32 || e.keyCode === 13) &&
          (this._selectionKeyPressed &&
            this._monthSelected({
              value: this._dateAdapter.getMonth(this._activeDate),
              event: e,
            }),
          (this._selectionKeyPressed = !1));
      }
      _init() {
        this._setSelectedMonth(this.selected),
          (this._todayMonth = this._getMonthInCurrentYear(
            this._dateAdapter.today()
          )),
          (this._yearLabel = this._dateAdapter.getYearName(this.activeDate));
        let e = this._dateAdapter.getMonthNames("short");
        (this._months = [
          [0, 1, 2, 3],
          [4, 5, 6, 7],
          [8, 9, 10, 11],
        ].map((i) => i.map((o) => this._createCellForMonth(o, e[o])))),
          this._changeDetectorRef.markForCheck();
      }
      _focusActiveCell() {
        this._matCalendarBody._focusActiveCell();
      }
      _focusActiveCellAfterViewChecked() {
        this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();
      }
      _getMonthInCurrentYear(e) {
        return e &&
          this._dateAdapter.getYear(e) ==
            this._dateAdapter.getYear(this.activeDate)
          ? this._dateAdapter.getMonth(e)
          : null;
      }
      _getDateFromMonth(e) {
        let i = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          o = this._dateAdapter.getNumDaysInMonth(i);
        return this._dateAdapter.createDate(
          this._dateAdapter.getYear(this.activeDate),
          e,
          Math.min(this._dateAdapter.getDate(this.activeDate), o)
        );
      }
      _createCellForMonth(e, i) {
        let o = this._dateAdapter.createDate(
            this._dateAdapter.getYear(this.activeDate),
            e,
            1
          ),
          r = this._dateAdapter.format(
            o,
            this._dateFormats.display.monthYearA11yLabel
          ),
          a = this.dateClass ? this.dateClass(o, "year") : void 0;
        return new Na(
          e,
          i.toLocaleUpperCase(),
          r,
          this._shouldEnableMonth(e),
          a
        );
      }
      _shouldEnableMonth(e) {
        let i = this._dateAdapter.getYear(this.activeDate);
        if (
          e == null ||
          this._isYearAndMonthAfterMaxDate(i, e) ||
          this._isYearAndMonthBeforeMinDate(i, e)
        )
          return !1;
        if (!this.dateFilter) return !0;
        let o = this._dateAdapter.createDate(i, e, 1);
        for (
          let r = o;
          this._dateAdapter.getMonth(r) == e;
          r = this._dateAdapter.addCalendarDays(r, 1)
        )
          if (this.dateFilter(r)) return !0;
        return !1;
      }
      _isYearAndMonthAfterMaxDate(e, i) {
        if (this.maxDate) {
          let o = this._dateAdapter.getYear(this.maxDate),
            r = this._dateAdapter.getMonth(this.maxDate);
          return e > o || (e === o && i > r);
        }
        return !1;
      }
      _isYearAndMonthBeforeMinDate(e, i) {
        if (this.minDate) {
          let o = this._dateAdapter.getYear(this.minDate),
            r = this._dateAdapter.getMonth(this.minDate);
          return e < o || (e === o && i < r);
        }
        return !1;
      }
      _isRtl() {
        return this._dir && this._dir.value === "rtl";
      }
      _setSelectedMonth(e) {
        e instanceof Ki
          ? (this._selectedMonth =
              this._getMonthInCurrentYear(e.start) ||
              this._getMonthInCurrentYear(e.end))
          : (this._selectedMonth = this._getMonthInCurrentYear(e));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(Xe), B(kr, 8), B(Mi, 8), B(Tr, 8));
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["mat-year-view"]],
          viewQuery: function (i, o) {
            if ((i & 1 && Dt(Pr, 5), i & 2)) {
              let r;
              rt((r = at())) && (o._matCalendarBody = r.first);
            }
          },
          inputs: {
            activeDate: "activeDate",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
          },
          outputs: {
            selectedChange: "selectedChange",
            monthSelected: "monthSelected",
            activeDateChange: "activeDateChange",
          },
          exportAs: ["matYearView"],
          standalone: !0,
          features: [re],
          decls: 5,
          vars: 9,
          consts: [
            ["role", "grid", 1, "mat-calendar-table"],
            ["aria-hidden", "true", 1, "mat-calendar-table-header"],
            ["colspan", "4", 1, "mat-calendar-table-header-divider"],
            [
              "mat-calendar-body",
              "",
              3,
              "selectedValueChange",
              "activeDateChange",
              "keyup",
              "keydown",
              "label",
              "rows",
              "todayValue",
              "startValue",
              "endValue",
              "labelMinRequiredCells",
              "numCols",
              "cellAspectRatio",
              "activeCell",
            ],
          ],
          template: function (i, o) {
            i & 1 &&
              (c(0, "table", 0)(1, "thead", 1)(2, "tr"),
              U(3, "th", 2),
              l()(),
              c(4, "tbody", 3),
              F("selectedValueChange", function (a) {
                return o._monthSelected(a);
              })("activeDateChange", function (a) {
                return o._updateActiveDate(a);
              })("keyup", function (a) {
                return o._handleCalendarBodyKeyup(a);
              })("keydown", function (a) {
                return o._handleCalendarBodyKeydown(a);
              }),
              l()()),
              i & 2 &&
                (p(4),
                y("label", o._yearLabel)("rows", o._months)(
                  "todayValue",
                  o._todayMonth
                )("startValue", o._selectedMonth)("endValue", o._selectedMonth)(
                  "labelMinRequiredCells",
                  2
                )("numCols", 4)("cellAspectRatio", 4 / 7)(
                  "activeCell",
                  o._dateAdapter.getMonth(o.activeDate)
                ));
          },
          dependencies: [Pr],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  Cw = 1,
  Ug = (() => {
    class n {
      constructor(e, i, o, r, a) {
        (this._intl = e),
          (this.calendar = i),
          (this._dateAdapter = o),
          (this._dateFormats = r),
          (this._id = `mat-calendar-header-${Cw++}`),
          (this._periodButtonLabelId = `${this._id}-period-label`),
          this.calendar.stateChanges.subscribe(() => a.markForCheck());
      }
      get periodButtonText() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRange(...this._formatMinAndMaxYearLabels());
      }
      get periodButtonDescription() {
        return this.calendar.currentView == "month"
          ? this._dateAdapter
              .format(
                this.calendar.activeDate,
                this._dateFormats.display.monthYearLabel
              )
              .toLocaleUpperCase()
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYearName(this.calendar.activeDate)
          : this._intl.formatYearRangeLabel(
              ...this._formatMinAndMaxYearLabels()
            );
      }
      get periodButtonLabel() {
        return this.calendar.currentView == "month"
          ? this._intl.switchToMultiYearViewLabel
          : this._intl.switchToMonthViewLabel;
      }
      get prevButtonLabel() {
        return {
          month: this._intl.prevMonthLabel,
          year: this._intl.prevYearLabel,
          "multi-year": this._intl.prevMultiYearLabel,
        }[this.calendar.currentView];
      }
      get nextButtonLabel() {
        return {
          month: this._intl.nextMonthLabel,
          year: this._intl.nextYearLabel,
          "multi-year": this._intl.nextMultiYearLabel,
        }[this.calendar.currentView];
      }
      currentPeriodClicked() {
        this.calendar.currentView =
          this.calendar.currentView == "month" ? "multi-year" : "month";
      }
      previousClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? -1 : -Ri
              );
      }
      nextClicked() {
        this.calendar.activeDate =
          this.calendar.currentView == "month"
            ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)
            : this._dateAdapter.addCalendarYears(
                this.calendar.activeDate,
                this.calendar.currentView == "year" ? 1 : Ri
              );
      }
      previousEnabled() {
        return this.calendar.minDate
          ? !this.calendar.minDate ||
              !this._isSameView(this.calendar.activeDate, this.calendar.minDate)
          : !0;
      }
      nextEnabled() {
        return (
          !this.calendar.maxDate ||
          !this._isSameView(this.calendar.activeDate, this.calendar.maxDate)
        );
      }
      _isSameView(e, i) {
        return this.calendar.currentView == "month"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(i) &&
              this._dateAdapter.getMonth(e) == this._dateAdapter.getMonth(i)
          : this.calendar.currentView == "year"
          ? this._dateAdapter.getYear(e) == this._dateAdapter.getYear(i)
          : jg(
              this._dateAdapter,
              e,
              i,
              this.calendar.minDate,
              this.calendar.maxDate
            );
      }
      _formatMinAndMaxYearLabels() {
        let i =
            this._dateAdapter.getYear(this.calendar.activeDate) -
            Fa(
              this._dateAdapter,
              this.calendar.activeDate,
              this.calendar.minDate,
              this.calendar.maxDate
            ),
          o = i + Ri - 1,
          r = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(i, 0, 1)
          ),
          a = this._dateAdapter.getYearName(
            this._dateAdapter.createDate(o, 0, 1)
          );
        return [r, a];
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(
            B(Va),
            B(ei(() => Nu)),
            B(Mi, 8),
            B(kr, 8),
            B(Xe)
          );
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["mat-calendar-header"]],
          exportAs: ["matCalendarHeader"],
          standalone: !0,
          features: [re],
          ngContentSelectors: rw,
          decls: 17,
          vars: 11,
          consts: [
            [1, "mat-calendar-header"],
            [1, "mat-calendar-controls"],
            ["aria-live", "polite", 1, "cdk-visually-hidden", 3, "id"],
            [
              "mat-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-period-button",
              3,
              "click",
            ],
            ["aria-hidden", "true"],
            [
              "viewBox",
              "0 0 10 5",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-calendar-arrow",
            ],
            ["points", "0,0 5,5 10,0"],
            [1, "mat-calendar-spacer"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-previous-button",
              3,
              "click",
              "disabled",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "focusable",
              "false",
              "aria-hidden",
              "true",
            ],
            ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              1,
              "mat-calendar-next-button",
              3,
              "click",
              "disabled",
            ],
            ["d", "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"],
          ],
          template: function (i, o) {
            i & 1 &&
              (Lt(),
              c(0, "div", 0)(1, "div", 1)(2, "span", 2),
              h(3),
              l(),
              c(4, "button", 3),
              F("click", function () {
                return o.currentPeriodClicked();
              }),
              c(5, "span", 4),
              h(6),
              l(),
              ct(),
              c(7, "svg", 5),
              U(8, "polygon", 6),
              l()(),
              eo(),
              U(9, "div", 7),
              wt(10),
              c(11, "button", 8),
              F("click", function () {
                return o.previousClicked();
              }),
              ct(),
              c(12, "svg", 9),
              U(13, "path", 10),
              l()(),
              eo(),
              c(14, "button", 11),
              F("click", function () {
                return o.nextClicked();
              }),
              ct(),
              c(15, "svg", 9),
              U(16, "path", 12),
              l()()()()),
              i & 2 &&
                (p(2),
                y("id", o._periodButtonLabelId),
                p(),
                N(o.periodButtonDescription),
                p(),
                ae("aria-label", o.periodButtonLabel)(
                  "aria-describedby",
                  o._periodButtonLabelId
                ),
                p(2),
                N(o.periodButtonText),
                p(),
                fe("mat-calendar-invert", o.calendar.currentView !== "month"),
                p(4),
                y("disabled", !o.previousEnabled()),
                ae("aria-label", o.prevButtonLabel),
                p(3),
                y("disabled", !o.nextEnabled()),
                ae("aria-label", o.nextButtonLabel));
          },
          dependencies: [Tu, Eu],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  Nu = (() => {
    class n {
      get startAt() {
        return this._startAt;
      }
      set startAt(e) {
        this._startAt = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get selected() {
        return this._selected;
      }
      set selected(e) {
        e instanceof Ki
          ? (this._selected = e)
          : (this._selected = this._dateAdapter.getValidDateOrNull(
              this._dateAdapter.deserialize(e)
            ));
      }
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        this._minDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        this._maxDate = this._dateAdapter.getValidDateOrNull(
          this._dateAdapter.deserialize(e)
        );
      }
      get activeDate() {
        return this._clampedActiveDate;
      }
      set activeDate(e) {
        (this._clampedActiveDate = this._dateAdapter.clampDate(
          e,
          this.minDate,
          this.maxDate
        )),
          this.stateChanges.next(),
          this._changeDetectorRef.markForCheck();
      }
      get currentView() {
        return this._currentView;
      }
      set currentView(e) {
        let i = this._currentView !== e ? e : null;
        (this._currentView = e),
          (this._moveFocusOnNextTick = !0),
          this._changeDetectorRef.markForCheck(),
          i && this.viewChanged.emit(i);
      }
      constructor(e, i, o, r) {
        (this._dateAdapter = i),
          (this._dateFormats = o),
          (this._changeDetectorRef = r),
          (this._moveFocusOnNextTick = !1),
          (this.startView = "month"),
          (this.selectedChange = new ve()),
          (this.yearSelected = new ve()),
          (this.monthSelected = new ve()),
          (this.viewChanged = new ve(!0)),
          (this._userSelection = new ve()),
          (this._userDragDrop = new ve()),
          (this._activeDrag = null),
          (this.stateChanges = new Ee()),
          (this._intlChanges = e.changes.subscribe(() => {
            r.markForCheck(), this.stateChanges.next();
          }));
      }
      ngAfterContentInit() {
        (this._calendarHeaderPortal = new Aa(this.headerComponent || Ug)),
          (this.activeDate = this.startAt || this._dateAdapter.today()),
          (this._currentView = this.startView);
      }
      ngAfterViewChecked() {
        this._moveFocusOnNextTick &&
          ((this._moveFocusOnNextTick = !1), this.focusActiveCell());
      }
      ngOnDestroy() {
        this._intlChanges.unsubscribe(), this.stateChanges.complete();
      }
      ngOnChanges(e) {
        let i =
            e.minDate &&
            !this._dateAdapter.sameDate(
              e.minDate.previousValue,
              e.minDate.currentValue
            )
              ? e.minDate
              : void 0,
          o =
            e.maxDate &&
            !this._dateAdapter.sameDate(
              e.maxDate.previousValue,
              e.maxDate.currentValue
            )
              ? e.maxDate
              : void 0,
          r = i || o || e.dateFilter;
        if (r && !r.firstChange) {
          let a = this._getCurrentViewComponent();
          a &&
            ((this._moveFocusOnNextTick = !0),
            this._changeDetectorRef.detectChanges(),
            a._init());
        }
        this.stateChanges.next();
      }
      focusActiveCell() {
        this._getCurrentViewComponent()._focusActiveCell(!1);
      }
      updateTodaysDate() {
        this._getCurrentViewComponent()._init();
      }
      _dateSelected(e) {
        let i = e.value;
        (this.selected instanceof Ki ||
          (i && !this._dateAdapter.sameDate(i, this.selected))) &&
          this.selectedChange.emit(i),
          this._userSelection.emit(e);
      }
      _yearSelectedInMultiYearView(e) {
        this.yearSelected.emit(e);
      }
      _monthSelectedInYearView(e) {
        this.monthSelected.emit(e);
      }
      _goToDateInView(e, i) {
        (this.activeDate = e), (this.currentView = i);
      }
      _dragStarted(e) {
        this._activeDrag = e;
      }
      _dragEnded(e) {
        this._activeDrag &&
          (e.value && this._userDragDrop.emit(e), (this._activeDrag = null));
      }
      _getCurrentViewComponent() {
        return this.monthView || this.yearView || this.multiYearView;
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(Va), B(Mi, 8), B(kr, 8), B(Xe));
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["mat-calendar"]],
          viewQuery: function (i, o) {
            if ((i & 1 && (Dt(Fg, 5), Dt(Vg, 5), Dt(Ng, 5)), i & 2)) {
              let r;
              rt((r = at())) && (o.monthView = r.first),
                rt((r = at())) && (o.yearView = r.first),
                rt((r = at())) && (o.multiYearView = r.first);
            }
          },
          hostAttrs: [1, "mat-calendar"],
          inputs: {
            headerComponent: "headerComponent",
            startAt: "startAt",
            startView: "startView",
            selected: "selected",
            minDate: "minDate",
            maxDate: "maxDate",
            dateFilter: "dateFilter",
            dateClass: "dateClass",
            comparisonStart: "comparisonStart",
            comparisonEnd: "comparisonEnd",
            startDateAccessibleName: "startDateAccessibleName",
            endDateAccessibleName: "endDateAccessibleName",
          },
          outputs: {
            selectedChange: "selectedChange",
            yearSelected: "yearSelected",
            monthSelected: "monthSelected",
            viewChanged: "viewChanged",
            _userSelection: "_userSelection",
            _userDragDrop: "_userDragDrop",
          },
          exportAs: ["matCalendar"],
          standalone: !0,
          features: [St([vw]), Et, re],
          decls: 5,
          vars: 2,
          consts: [
            [3, "cdkPortalOutlet"],
            [
              "cdkMonitorSubtreeFocus",
              "",
              "tabindex",
              "-1",
              1,
              "mat-calendar-content",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "_userSelection",
              "dragStarted",
              "dragEnded",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
              "activeDrag",
            ],
            [
              3,
              "activeDateChange",
              "monthSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
            [
              3,
              "activeDateChange",
              "yearSelected",
              "selectedChange",
              "activeDate",
              "selected",
              "dateFilter",
              "maxDate",
              "minDate",
              "dateClass",
            ],
          ],
          template: function (i, o) {
            if (
              (i & 1 &&
                (k(0, aw, 0, 0, "ng-template", 0),
                c(1, "div", 1),
                k(2, sw, 1, 11, "mat-month-view", 2)(
                  3,
                  lw,
                  1,
                  6,
                  "mat-year-view",
                  3
                )(4, cw, 1, 6, "mat-multi-year-view", 3),
                l()),
              i & 2)
            ) {
              let r;
              y("cdkPortalOutlet", o._calendarHeaderPortal),
                p(2),
                on(
                  (r = o.currentView) === "month"
                    ? 2
                    : r === "year"
                    ? 3
                    : r === "multi-year"
                    ? 4
                    : -1
                );
            }
          },
          dependencies: [pu, og, Fg, Vg, Ng],
          styles: [
            '.mat-calendar{display:block;line-height:normal;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-app-on-surface-variant))}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-app-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:"";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:""}',
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })(),
  Lg = {
    transformPanel: To("transformPanel", [
      ki(
        "void => enter-dropdown",
        Ei(
          "120ms cubic-bezier(0, 0, 0.2, 1)",
          Lc([
            jt({ opacity: 0, transform: "scale(1, 0.8)" }),
            jt({ opacity: 1, transform: "scale(1, 1)" }),
          ])
        )
      ),
      ki(
        "void => enter-dialog",
        Ei(
          "150ms cubic-bezier(0, 0, 0.2, 1)",
          Lc([
            jt({ opacity: 0, transform: "scale(0.7)" }),
            jt({ transform: "none", opacity: 1 }),
          ])
        )
      ),
      ki("* => void", Ei("100ms linear", jt({ opacity: 0 }))),
    ]),
    fadeInCalendar: To("fadeInCalendar", [
      Ln("void", jt({ opacity: 0 })),
      Ln("enter", jt({ opacity: 1 })),
      ki("void => *", Ei("120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)")),
    ]),
  };
var ww = new qe("mat-datepicker-scroll-strategy", {
  providedIn: "root",
  factory: () => {
    let n = J(Er);
    return () => n.scrollStrategies.reposition();
  },
});
function Dw(n) {
  return () => n.scrollStrategies.reposition();
}
var Sw = { provide: ww, deps: [Er], useFactory: Dw },
  Mw = (() => {
    class n {
      constructor(e, i, o, r, a, d) {
        (this._elementRef = e),
          (this._changeDetectorRef = i),
          (this._globalModel = o),
          (this._dateAdapter = r),
          (this._rangeSelectionStrategy = a),
          (this._subscriptions = new Ji()),
          (this._animationDone = new Ee()),
          (this._isAnimating = !1),
          (this._actionsPortal = null),
          (this._closeButtonText = d.closeCalendarLabel);
      }
      ngOnInit() {
        this._animationState = this.datepicker.touchUi
          ? "enter-dialog"
          : "enter-dropdown";
      }
      ngAfterViewInit() {
        this._subscriptions.add(
          this.datepicker.stateChanges.subscribe(() => {
            this._changeDetectorRef.markForCheck();
          })
        ),
          this._calendar.focusActiveCell();
      }
      ngOnDestroy() {
        this._subscriptions.unsubscribe(), this._animationDone.complete();
      }
      _handleUserSelection(e) {
        let i = this._model.selection,
          o = e.value,
          r = i instanceof Ki;
        if (r && this._rangeSelectionStrategy) {
          let a = this._rangeSelectionStrategy.selectionFinished(o, i, e.event);
          this._model.updateSelection(a, this);
        } else
          o && (r || !this._dateAdapter.sameDate(o, i)) && this._model.add(o);
        (!this._model || this._model.isComplete()) &&
          !this._actionsPortal &&
          this.datepicker.close();
      }
      _handleUserDragDrop(e) {
        this._model.updateSelection(e.value, this);
      }
      _startExitAnimation() {
        (this._animationState = "void"), this._changeDetectorRef.markForCheck();
      }
      _handleAnimationEvent(e) {
        (this._isAnimating = e.phaseName === "start"),
          this._isAnimating || this._animationDone.next();
      }
      _getSelected() {
        return this._model.selection;
      }
      _applyPendingSelection() {
        this._model !== this._globalModel &&
          this._globalModel.updateSelection(this._model.selection, this);
      }
      _assignActions(e, i) {
        (this._model = e ? this._globalModel.clone() : this._globalModel),
          (this._actionsPortal = e),
          i && this._changeDetectorRef.detectChanges();
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(ke), B(Xe), B(kl), B(Mi), B(Hg, 8), B(Va));
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["mat-datepicker-content"]],
          viewQuery: function (i, o) {
            if ((i & 1 && Dt(Nu, 5), i & 2)) {
              let r;
              rt((r = at())) && (o._calendar = r.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-content"],
          hostVars: 5,
          hostBindings: function (i, o) {
            i & 1 &&
              ep("@transformPanel.start", function (a) {
                return o._handleAnimationEvent(a);
              })("@transformPanel.done", function (a) {
                return o._handleAnimationEvent(a);
              }),
              i & 2 &&
                (cs("@transformPanel", o._animationState),
                Ae(o.color ? "mat-" + o.color : ""),
                fe("mat-datepicker-content-touch", o.datepicker.touchUi));
          },
          inputs: { color: "color" },
          exportAs: ["matDatepickerContent"],
          standalone: !0,
          features: [re],
          decls: 5,
          vars: 27,
          consts: [
            [
              "cdkTrapFocus",
              "",
              "role",
              "dialog",
              1,
              "mat-datepicker-content-container",
            ],
            [
              3,
              "yearSelected",
              "monthSelected",
              "viewChanged",
              "_userSelection",
              "_userDragDrop",
              "id",
              "startAt",
              "startView",
              "minDate",
              "maxDate",
              "dateFilter",
              "headerComponent",
              "selected",
              "dateClass",
              "comparisonStart",
              "comparisonEnd",
              "startDateAccessibleName",
              "endDateAccessibleName",
            ],
            [3, "cdkPortalOutlet"],
            [
              "type",
              "button",
              "mat-raised-button",
              "",
              1,
              "mat-datepicker-close-button",
              3,
              "focus",
              "blur",
              "click",
              "color",
            ],
          ],
          template: function (i, o) {
            if (
              (i & 1 &&
                (c(0, "div", 0)(1, "mat-calendar", 1),
                F("yearSelected", function (a) {
                  return o.datepicker._selectYear(a);
                })("monthSelected", function (a) {
                  return o.datepicker._selectMonth(a);
                })("viewChanged", function (a) {
                  return o.datepicker._viewChanged(a);
                })("_userSelection", function (a) {
                  return o._handleUserSelection(a);
                })("_userDragDrop", function (a) {
                  return o._handleUserDragDrop(a);
                }),
                l(),
                k(2, dw, 0, 0, "ng-template", 2),
                c(3, "button", 3),
                F("focus", function () {
                  return (o._closeButtonFocused = !0);
                })("blur", function () {
                  return (o._closeButtonFocused = !1);
                })("click", function () {
                  return o.datepicker.close();
                }),
                h(4),
                l()()),
              i & 2)
            ) {
              let r;
              fe(
                "mat-datepicker-content-container-with-custom-header",
                o.datepicker.calendarHeaderComponent
              )(
                "mat-datepicker-content-container-with-actions",
                o._actionsPortal
              ),
                ae("aria-modal", !0)(
                  "aria-labelledby",
                  (r = o._dialogLabelId) !== null && r !== void 0 ? r : void 0
                ),
                p(),
                Ae(o.datepicker.panelClass),
                y("id", o.datepicker.id)("startAt", o.datepicker.startAt)(
                  "startView",
                  o.datepicker.startView
                )("minDate", o.datepicker._getMinDate())(
                  "maxDate",
                  o.datepicker._getMaxDate()
                )("dateFilter", o.datepicker._getDateFilter())(
                  "headerComponent",
                  o.datepicker.calendarHeaderComponent
                )("selected", o._getSelected())(
                  "dateClass",
                  o.datepicker.dateClass
                )("comparisonStart", o.comparisonStart)(
                  "comparisonEnd",
                  o.comparisonEnd
                )("@fadeInCalendar", "enter")(
                  "startDateAccessibleName",
                  o.startDateAccessibleName
                )("endDateAccessibleName", o.endDateAccessibleName),
                p(),
                y("cdkPortalOutlet", o._actionsPortal),
                p(),
                fe("cdk-visually-hidden", !o._closeButtonFocused),
                y("color", o.color || "primary"),
                p(),
                N(o._closeButtonText);
            }
          },
          dependencies: [ig, Nu, pu, Tu],
          styles: [
            ".mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-app-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-app-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-app-corner-large))}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}",
          ],
          encapsulation: 2,
          data: { animation: [Lg.transformPanel, Lg.fadeInCalendar] },
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var Tw = (() => {
    class n {
      static {
        this.ɵfac = function (i) {
          return new (i || n)();
        };
      }
      static {
        this.ɵdir = Te({
          type: n,
          selectors: [["", "matDatepickerToggleIcon", ""]],
          standalone: !0,
        });
      }
    }
    return n;
  })(),
  Ew = (() => {
    class n {
      get disabled() {
        return this._disabled === void 0 && this.datepicker
          ? this.datepicker.disabled
          : !!this._disabled;
      }
      set disabled(e) {
        this._disabled = e;
      }
      constructor(e, i, o) {
        (this._intl = e),
          (this._changeDetectorRef = i),
          (this._stateChanges = Ji.EMPTY);
        let r = Number(o);
        this.tabIndex = r || r === 0 ? r : null;
      }
      ngOnChanges(e) {
        e.datepicker && this._watchStateChanges();
      }
      ngOnDestroy() {
        this._stateChanges.unsubscribe();
      }
      ngAfterContentInit() {
        this._watchStateChanges();
      }
      _open(e) {
        this.datepicker &&
          !this.disabled &&
          (this.datepicker.open(), e.stopPropagation());
      }
      _watchStateChanges() {
        let e = this.datepicker ? this.datepicker.stateChanges : xt(),
          i =
            this.datepicker && this.datepicker.datepickerInput
              ? this.datepicker.datepickerInput.stateChanges
              : xt(),
          o = this.datepicker
            ? ir(this.datepicker.openedStream, this.datepicker.closedStream)
            : xt();
        this._stateChanges.unsubscribe(),
          (this._stateChanges = ir(this._intl.changes, e, i, o).subscribe(() =>
            this._changeDetectorRef.markForCheck()
          ));
      }
      static {
        this.ɵfac = function (i) {
          return new (i || n)(B(Va), B(Xe), ls("tabindex"));
        };
      }
      static {
        this.ɵcmp = oe({
          type: n,
          selectors: [["mat-datepicker-toggle"]],
          contentQueries: function (i, o, r) {
            if ((i & 1 && xn(r, Tw, 5), i & 2)) {
              let a;
              rt((a = at())) && (o._customIcon = a.first);
            }
          },
          viewQuery: function (i, o) {
            if ((i & 1 && Dt(uw, 5), i & 2)) {
              let r;
              rt((r = at())) && (o._button = r.first);
            }
          },
          hostAttrs: [1, "mat-datepicker-toggle"],
          hostVars: 8,
          hostBindings: function (i, o) {
            i & 1 &&
              F("click", function (a) {
                return o._open(a);
              }),
              i & 2 &&
                (ae("tabindex", null)(
                  "data-mat-calendar",
                  o.datepicker ? o.datepicker.id : null
                ),
                fe(
                  "mat-datepicker-toggle-active",
                  o.datepicker && o.datepicker.opened
                )(
                  "mat-accent",
                  o.datepicker && o.datepicker.color === "accent"
                )("mat-warn", o.datepicker && o.datepicker.color === "warn"));
          },
          inputs: {
            datepicker: [0, "for", "datepicker"],
            tabIndex: "tabIndex",
            ariaLabel: [0, "aria-label", "ariaLabel"],
            disabled: [2, "disabled", "disabled", xe],
            disableRipple: "disableRipple",
          },
          exportAs: ["matDatepickerToggle"],
          standalone: !0,
          features: [kt, Et, re],
          ngContentSelectors: pw,
          decls: 4,
          vars: 6,
          consts: [
            ["button", ""],
            [
              "mat-icon-button",
              "",
              "type",
              "button",
              3,
              "disabled",
              "disableRipple",
            ],
            [
              "viewBox",
              "0 0 24 24",
              "width",
              "24px",
              "height",
              "24px",
              "fill",
              "currentColor",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              1,
              "mat-datepicker-toggle-default-icon",
            ],
            [
              "d",
              "M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z",
            ],
          ],
          template: function (i, o) {
            i & 1 &&
              (Lt(hw),
              c(0, "button", 1, 0),
              k(2, mw, 2, 0, ":svg:svg", 2),
              wt(3),
              l()),
              i & 2 &&
                (y("disabled", o.disabled)("disableRipple", o.disableRipple),
                ae("aria-haspopup", o.datepicker ? "dialog" : null)(
                  "aria-label",
                  o.ariaLabel || o._intl.openCalendarLabel
                )("tabindex", o.disabled ? -1 : o.tabIndex),
                p(2),
                on(o._customIcon ? -1 : 2));
          },
          dependencies: [Eu],
          styles: [
            ".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        });
      }
    }
    return n;
  })();
var Ol = (() => {
  class n {
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({
        providers: [Va, Sw],
        imports: [De, Ig, _g, rg, xl, Ai, Mw, Ew, Ug, bl],
      });
    }
  }
  return n;
})();
var $u = new qe("@sweetalert2/ngx-sweetalert2#swalProvider"),
  Wg = new qe("@sweetalert2/ngx-sweetalert2#fireOnInit"),
  $g = new qe("@sweetalert2/ngx-sweetalert2#dismissOnDestroy"),
  Gg = (() => {
    class n {
      swalProvider;
      swalPromiseCache;
      constructor(e) {
        this.swalProvider = e;
      }
      get swal() {
        return (
          this.swalPromiseCache || this.preloadSweetAlertLibrary(),
          this.swalPromiseCache
        );
      }
      preloadSweetAlertLibrary() {
        if (this.swalPromiseCache) return;
        let e = i(this.swalProvider)
          ? this.swalProvider()
          : Promise.resolve(this.swalProvider);
        this.swalPromiseCache = e.then((r) => (o(r) ? r : r.default));
        function i(r) {
          return typeof r == "function" && r.version === void 0;
        }
        function o(r) {
          return typeof r == "function";
        }
      }
      static ɵfac = function (i) {
        return new (i || n)(Z($u));
      };
      static ɵprov = ie({ token: n, factory: n.ɵfac });
    }
    return n;
  })();
function kw() {
  return import("./chunk-JD4N6HK6.mjs");
}
var Yg = (() => {
  class n {
    static forRoot(e = {}) {
      return {
        ngModule: n,
        providers: [
          Gg,
          { provide: $u, useValue: e.provideSwal || kw },
          { provide: Wg, useValue: e.fireOnInit || !1 },
          { provide: $g, useValue: e.dismissOnDestroy || !0 },
        ],
      };
    }
    static forChild(e = {}) {
      return {
        ngModule: n,
        providers: [
          ...(e.provideSwal
            ? [Gg, { provide: $u, useValue: e.provideSwal }]
            : []),
          ...(e.fireOnInit !== void 0
            ? [{ provide: Wg, useValue: e.fireOnInit }]
            : []),
          ...(e.dismissOnDestroy !== void 0
            ? [{ provide: $g, useValue: e.dismissOnDestroy }]
            : []),
        ],
      };
    }
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵmod = _e({ type: n });
    static ɵinj = ge({ imports: [De] });
  }
  return n;
})();
var Wo = (n) => ({ "is-invalid": n }),
  Ow = (n, t) => ({ "btn-outline-primary": n, "btn-edit-enabled": t });
function Iw(n, t) {
  n & 1 &&
    (c(0, "tr")(1, "td", 48)(2, "p"), h(3, "No Vehicles Found"), l()()());
}
function Pw(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "tr")(1, "td", 34),
      h(2),
      l(),
      c(3, "td", 34),
      h(4),
      l(),
      c(5, "td", 34),
      h(6),
      l(),
      c(7, "td", 34),
      h(8),
      l(),
      c(9, "td", 34),
      h(10),
      l(),
      c(11, "td", 34),
      h(12),
      l(),
      c(13, "td", 34),
      h(14),
      l(),
      c(15, "td", 34),
      h(16),
      l(),
      c(17, "td")(18, "div", 49)(19, "a", 50),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.onEdit(o));
      }),
      U(20, "i", 51),
      l(),
      c(21, "a", 52),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.openDeleteModal(o));
      }),
      U(22, "i", 53),
      l()()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      o = w();
    p(2),
      N((o.currentPage - 1) * o.itemsPerPage + i + 1),
      p(2),
      N(e.vehicle_name),
      p(2),
      N(e.YOM),
      p(2),
      N(e.type),
      p(2),
      N(e.VIN),
      p(2),
      N(e.chasis_number),
      p(2),
      N(e.demo_start_date),
      p(2),
      N(e.demo_end_date);
  }
}
function Aw(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "li", 54)(1, "a", 43),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.goToPage(o));
      }),
      h(2),
      l()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w();
    fe("active", e === i.currentPage), p(2), N(e);
  }
}
function Rw(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 55)(1, "div", 56)(2, "div", 57)(3, "div", 58)(4, "h5", 59),
      h(5, "Delete User"),
      l()(),
      c(6, "div", 60),
      h(7, "Are you sure you want to delete this user?"),
      l(),
      c(8, "div", 61)(9, "button", 62),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeDeleteModal());
      }),
      h(10, "Cancel"),
      l(),
      c(11, "button", 63),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.deleteVehicleId());
      }),
      h(12, "Delete"),
      l()()()()();
  }
}
function Fw(n, t) {
  n & 1 && (c(0, "span", 98), h(1, "*"), l());
}
function Nw(n, t) {
  n & 1 &&
    (c(0, "div", 99)(1, "span"), h(2, "Vehicle name is required."), l()());
}
function Vw(n, t) {
  n & 1 && (c(0, "span", 99), h(1, "*"), l());
}
function Lw(n, t) {
  n & 1 && (c(0, "span"), h(1, "YOM is required."), l());
}
function Bw(n, t) {
  if ((n & 1 && (c(0, "div", 99), k(1, Lw, 2, 0, "span", 35), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("YOM")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Hw(n, t) {
  n & 1 && (c(0, "span", 98), h(1, "*"), l());
}
function jw(n, t) {
  n & 1 && (c(0, "div", 99)(1, "span"), h(2, "Type is required."), l()());
}
function zw(n, t) {
  n & 1 && (c(0, "span", 99), h(1, "*"), l());
}
function Uw(n, t) {
  n & 1 && (c(0, "span"), h(1, " Chasis number is required. "), l());
}
function Ww(n, t) {
  if ((n & 1 && (c(0, "div", 99), k(1, Uw, 2, 0, "span", 35), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("chasis_number")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function $w(n, t) {
  n & 1 && (c(0, "span", 99), h(1, "*"), l());
}
function Gw(n, t) {
  n & 1 && (c(0, "span", 101), h(1, " Start date is required. "), l());
}
function Yw(n, t) {
  if ((n & 1 && (c(0, "div", 99), k(1, Gw, 2, 0, "span", 100), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("demo_start_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function qw(n, t) {
  n & 1 && (c(0, "span", 99), h(1, "*"), l());
}
function Kw(n, t) {
  n & 1 && (c(0, "span"), h(1, " End date is required. "), l());
}
function Qw(n, t) {
  if ((n & 1 && (c(0, "div", 99), k(1, Kw, 2, 0, "span", 35), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("demo_end_date")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function Xw(n, t) {
  n & 1 && (c(0, "span", 99), h(1, "*"), l());
}
function Zw(n, t) {
  n & 1 && (c(0, "span"), h(1, " VIN is required. "), l());
}
function Jw(n, t) {
  if ((n & 1 && (c(0, "div", 99), k(1, Zw, 2, 0, "span", 35), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("VIN")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function eD(n, t) {
  if (n & 1) {
    let e = ee();
    je(0),
      c(1, "button", 102),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.onUpdate());
      }),
      h(2, " Edit "),
      l(),
      ze();
  }
  if (n & 2) {
    let e = w(2);
    p(),
      y("disabled", !e.isVehicleNameChanged())(
        "ngClass",
        Bi(2, Ow, !e.isVehicleNameChanged(), e.isVehicleNameChanged())
      );
  }
}
function tD(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 62),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.onSave());
      }),
      h(1, " Save "),
      l();
  }
  if (n & 2) {
    let e = w(2);
    ae("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function iD(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 64)(1, "div", 65)(2, "div", 66)(3, "div", 57)(4, "div", 58)(
      5,
      "h5",
      67
    ),
      h(6),
      l(),
      c(7, "button", 68),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeModal());
      }),
      c(8, "span", 69),
      h(9, "\xD7"),
      l()()(),
      c(10, "div", 70)(11, "div", 71)(12, "div", 72)(13, "label", 73),
      h(14, " Vehicle Name "),
      k(15, Fw, 2, 0, "span", 74),
      l(),
      U(16, "input", 75),
      k(17, Nw, 3, 0, "div", 76),
      l(),
      c(18, "div", 77)(19, "label", 78),
      h(20, " YOM "),
      k(21, Vw, 2, 0, "span", 76),
      l(),
      U(22, "input", 79),
      k(23, Bw, 2, 1, "div", 76),
      l()(),
      c(24, "div", 71)(25, "div", 72)(26, "label", 80),
      h(27, " Type "),
      k(28, Hw, 2, 0, "span", 74),
      l(),
      c(29, "select", 81)(30, "option", 82),
      h(31, "Select Type"),
      l(),
      c(32, "option", 83),
      h(33, "Petrol"),
      l(),
      c(34, "option", 84),
      h(35, "Diesel"),
      l(),
      c(36, "option", 85),
      h(37, "EV"),
      l()(),
      k(38, jw, 3, 0, "div", 76),
      l(),
      c(39, "div", 72)(40, "label", 86),
      h(41, " Chasis Number "),
      k(42, zw, 2, 0, "span", 76),
      l(),
      U(43, "input", 87),
      k(44, Ww, 2, 1, "div", 76),
      l(),
      c(45, "div", 88)(46, "div", 72)(47, "label", 89),
      h(48, " Start date "),
      k(49, $w, 2, 0, "span", 76),
      l(),
      U(50, "input", 90),
      k(51, Yw, 2, 1, "div", 76),
      l()(),
      c(52, "div", 91)(53, "label", 92),
      h(54, " End date "),
      k(55, qw, 2, 0, "span", 76),
      l(),
      U(56, "input", 93),
      k(57, Qw, 2, 1, "div", 76),
      l(),
      c(58, "div", 94)(59, "label", 95),
      h(60, " VIN "),
      k(61, Xw, 2, 0, "span", 76),
      l(),
      U(62, "input", 96),
      k(63, Jw, 2, 1, "div", 76),
      l()()(),
      c(64, "div", 61),
      k(65, eD, 3, 5, "ng-container", 97),
      c(66, "button", 63),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeModal());
      }),
      h(67, " Close "),
      l(),
      k(68, tD, 2, 1, "ng-template", null, 0, Ot),
      l()()()()();
  }
  if (n & 2) {
    let e,
      i,
      o,
      r,
      a,
      d,
      m,
      _,
      v,
      S,
      T,
      M,
      A,
      j,
      z = ht(69),
      L = w();
    p(6),
      K(" ", L.vehicleObj.vehicle_id ? "Edit Vehicle" : "Add New Vehicle", " "),
      p(4),
      y("formGroup", L.useForm),
      p(5),
      y("ngIf", !L.isEditMode),
      p(),
      y(
        "ngClass",
        he(
          25,
          Wo,
          !L.isEditMode &&
            ((e = L.useForm.get("vehicle_name")) == null ? null : e.touched) &&
            ((e = L.useForm.get("vehicle_name")) == null ? null : e.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        !L.isEditMode &&
          ((i = L.useForm.get("vehicle_name")) == null ? null : i.touched) &&
          ((i = L.useForm.get("vehicle_name")) == null ? null : i.invalid)
      ),
      p(4),
      y("ngIf", !L.isEditMode),
      p(),
      y(
        "ngClass",
        he(
          27,
          Wo,
          !L.isEditMode &&
            ((o = L.useForm.get("YOM")) == null ? null : o.touched) &&
            ((o = L.useForm.get("YOM")) == null ? null : o.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        !L.isEditMode &&
          ((r = L.useForm.get("YOM")) == null ? null : r.touched) &&
          ((r = L.useForm.get("YOM")) == null ? null : r.invalid)
      ),
      p(5),
      y("ngIf", !L.isEditMode),
      p(),
      y(
        "ngClass",
        he(
          29,
          Wo,
          !L.isEditMode &&
            ((a = L.useForm.get("type")) == null ? null : a.touched) &&
            ((a = L.useForm.get("type")) == null ? null : a.invalid)
        )
      ),
      p(9),
      y(
        "ngIf",
        !L.isEditMode &&
          ((d = L.useForm.get("type")) == null ? null : d.touched) &&
          ((d = L.useForm.get("type")) == null ? null : d.invalid)
      ),
      p(4),
      y("ngIf", !L.isEditMode),
      p(),
      y(
        "ngClass",
        he(
          31,
          Wo,
          !L.isEditMode &&
            ((m = L.useForm.get("chasis_number")) == null ? null : m.touched) &&
            ((m = L.useForm.get("chasis_number")) == null ? null : m.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        !L.isEditMode &&
          ((_ = L.useForm.get("chasis_number")) == null ? null : _.touched) &&
          ((_ = L.useForm.get("chasis_number")) == null ? null : _.invalid)
      ),
      p(5),
      y("ngIf", !L.isEditMode),
      p(),
      y(
        "ngClass",
        he(
          33,
          Wo,
          !L.isEditMode &&
            ((v = L.useForm.get("demo_start_date")) == null
              ? null
              : v.touched) &&
            ((v = L.useForm.get("demo_start_date")) == null ? null : v.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        !L.isEditMode &&
          ((S = L.useForm.get("demo_start_date")) == null ? null : S.touched) &&
          ((S = L.useForm.get("demo_start_date")) == null ? null : S.invalid)
      ),
      p(4),
      y("ngIf", !L.isEditMode),
      p(),
      y(
        "ngClass",
        he(
          35,
          Wo,
          !L.isEditMode &&
            ((T = L.useForm.get("demo_end_date")) == null ? null : T.touched) &&
            ((T = L.useForm.get("demo_end_date")) == null ? null : T.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        !L.isEditMode &&
          ((M = L.useForm.get("demo_end_date")) == null ? null : M.touched) &&
          ((M = L.useForm.get("demo_end_date")) == null ? null : M.invalid)
      ),
      p(4),
      y("ngIf", !L.isEditMode),
      p(),
      y(
        "ngClass",
        he(
          37,
          Wo,
          !L.isEditMode &&
            ((A = L.useForm.get("VIN")) == null ? null : A.touched) &&
            ((A = L.useForm.get("VIN")) == null ? null : A.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        !L.isEditMode &&
          ((j = L.useForm.get("VIN")) == null ? null : j.touched) &&
          ((j = L.useForm.get("VIN")) == null ? null : j.invalid)
      ),
      p(2),
      y(
        "ngIf",
        L.vehicleObj.vehicle_id !== null && L.vehicleObj.vehicle_id !== void 0
      )("ngIfElse", z);
  }
}
var Il = class n {
  constructor(t) {
    this.changeDetectorRef = t;
    this.initializeForm();
  }
  count = le(0);
  vehicleList = le([]);
  totalVehicle = le(0);
  vehicles = [];
  paginatedVehicles = [];
  masterSrv = J(We);
  toastr = J(ai);
  modalService = J(Ea);
  vehicleObj = new ka();
  isModalVisible = !1;
  isEditMode = !1;
  previousValue = "";
  isModalOpen = !1;
  filteredVehicle = [];
  searchTerm = "";
  filteredVehicles = [];
  currentPage = 1;
  itemsPerPage = 10;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  useForm = new vt({});
  ngOnInit() {
    this.loadVehicles(),
      (this.filteredVehicles = this.vehicleList()),
      this.paginateVehicles(),
      this.filterVehicles();
  }
  initializeForm() {
    this.useForm = new vt({
      vehicle_name: new Ze("", [
        we.required,
        we.minLength(2),
        we.maxLength(50),
      ]),
      VIN: new Ze("", [we.required]),
      type: new Ze("", [we.required]),
      YOM: new Ze("", [we.required]),
      chasis_number: new Ze("", [we.required]),
      demo_start_date: new Ze("", [we.required]),
      demo_end_date: new Ze("", [we.required]),
    });
  }
  loadVehicles() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (t) => {
        this.count.set(t.data.count),
          (this.vehicles = t.data.rows),
          this.vehicleList.set(this.vehicles),
          (this.filteredVehicles = [...this.vehicles]),
          (this.currentPage = 1),
          this.paginateVehicles();
      },
      error: (t) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", t);
      },
    });
  }
  openModal(t) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!t),
      console.log("hello"),
      t
        ? ((this.vehicleObj = ne({}, t)),
          this.useForm.patchValue({
            vehicle_name: t.vehicle_name || "",
            VIN: t.VIN || "",
            type: t.type || "",
            YOM: this.formatDate(t.YOM) || "",
            demo_start_date: t.demo_start_date
              ? this.formatDate(t.demo_start_date)
              : "",
            demo_end_date: t.demo_end_date
              ? this.formatDate(t.demo_end_date)
              : "",
            chasis_number: t.chasis_number || "",
          }))
        : ((this.vehicleObj = new ka()),
          (this.vehicleObj.vehicle_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.vehicleObj
          ));
  }
  onSave() {
    console.log("onsave being called"),
      console.log(this.useForm.value),
      console.log(
        "Form end_date value:",
        this.useForm.get("demo_end_date")?.value
      );
    let t = new Date(this.useForm.get("demo_start_date")?.value);
    if (new Date(this.useForm.get("demo_end_date")?.value) < t) {
      this.toastr.error(
        "End date cannot be before start date.",
        "Date Validation"
      );
      return;
    }
    if (this.useForm.invalid) {
      this.markFormGroupTouched(this.useForm),
        console.log("Form Values:", this.useForm.value),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let i = this.useForm.value;
    console.log("Form Data being sent to API:", i),
      this.masterSrv.createNewVehicle(i).subscribe({
        next: () => {
          this.toastr.success("Vehicle created successfully!", "Success"),
            this.getAllVehicle(),
            this.closeModal();
        },
        error: (o) => {
          console.error("Vehicle creation error:", o);
          let r = o.error?.message || "Failed to create vehicle";
          this.toastr.error(r, "Creation Error");
        },
      });
  }
  getAllVehicle() {
    this.masterSrv.getAllVehicle().subscribe({
      next: (t) => {
        t && t.data.rows
          ? (this.totalVehicle.set(t.data.count),
            this.vehicleList.set(t.data.rows),
            (this.paginatedVehicles = this.vehicleList().slice(
              (this.currentPage - 1) * this.itemsPerPage,
              this.currentPage * this.itemsPerPage
            )))
          : this.toastr.warning("No Vehicle found", "Information");
      },
      error: (t) => {
        console.error("Vehicle fetch error:", t),
          this.toastr.error(t.message || "Failed to fetch vehicles", "Error");
      },
    });
  }
  getShowingFrom() {
    return this.filteredVehicles.length === 0
      ? 0
      : (this.currentPage - 1) * this.itemsPerPage + 1;
  }
  getShowingTo() {
    return this.filteredVehicles.length === 0
      ? 0
      : Math.min(
          this.currentPage * this.itemsPerPage,
          this.filteredVehicles.length
        );
  }
  onUpdate() {
    if (!this.vehicleObj || !this.vehicleObj.vehicle_id) {
      this.toastr.warning("No vehicle selected for update!", "Warning");
      return;
    }
    (this.vehicleObj = ne(ne({}, this.vehicleObj), this.useForm.value)),
      console.log("Updating vehicle:", this.vehicleObj),
      this.masterSrv.updateVehicle(this.vehicleObj).subscribe(
        (t) => {
          t && t.status === 200
            ? (this.toastr.success(
                t.message || "Vehicle updated successfully",
                "Success"
              ),
              this.loadVehicles(),
              this.closeModal())
            : this.toastr.warning("Update failed, check data.", "Warning");
        },
        (t) => {
          this.toastr.error("Error updating vehicle", "Error");
        }
      );
  }
  getAllVehicles() {}
  onSearchChange() {
    (this.currentPage = 1), this.filterVehicles();
  }
  onItemsPerPageChange(t) {
    (this.itemsPerPage = +t.target.value),
      (this.currentPage = 1),
      this.paginateVehicles();
  }
  displayAllVehicles() {
    (this.filteredVehicles = this.vehicleList()), this.paginateVehicles();
  }
  filterVehicles() {
    let t = this.vehicleList();
    if (
      (console.log("\u{1F50D} Raw vehicle list:", t),
      console.log("\u{1F50E} Current search term:", this.searchTerm),
      !this.searchTerm || this.searchTerm.trim() === "")
    )
      console.log("\u{1F4C4} Empty search term. Showing full list."),
        (this.filteredVehicles = t);
    else {
      let e = this.searchTerm.trim().toLowerCase();
      console.log("\u{1F50D} Normalized search term:", e),
        (this.filteredVehicles = t.filter((i) => {
          let o =
            i.vehicle_name?.toLowerCase().includes(e) ||
            i.VIN?.toLowerCase().includes(e) ||
            i.chasis_number?.toLowerCase().includes(e) ||
            i.type?.toLowerCase().includes(e);
          return (
            console.log("\u{1F697} Checking vehicle:", i, "=> Match:", o), o
          );
        })),
        console.log("\u2705 Filtered vehicles:", this.filteredVehicles);
    }
    (this.currentPage = 1), this.paginateVehicles();
  }
  paginateVehicles() {
    (this.totalPages = Math.ceil(
      this.filteredVehicles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (t, e) => e + 1)),
      this.updatePaginatedVehicles();
  }
  updatePaginatedVehicles() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    this.paginatedVehicles = this.filteredVehicles.slice(t, e);
  }
  goToPage(t) {
    (this.currentPage = t), this.updatePaginatedVehicles();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updatePaginatedVehicles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updatePaginatedVehicles());
  }
  selectedVehicleForDeletion = null;
  selectVehicleForDeletion(t) {
    (this.selectedVehicleForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  openDeleteModal(t) {
    (this.selectedVehicleForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  deleteVehicleId() {
    let t = this.selectedVehicleForDeletion;
    if (t && t.vehicle_id) {
      let e = t.vehicle_id;
      this.masterSrv.deleteVehicle(e).subscribe(
        (i) => {
          this.toastr.success("Vehicle deleted successfully", "Success"),
            (this.isDeleteModalOpen = !1);
          let o = this.vehicleList().filter((r) => r.vehicle_id !== e);
          this.vehicleList.set(o),
            (this.filteredVehicles = [...o]),
            this.paginateVehicles();
        },
        (i) => {
          this.toastr.error("Server Error", "Error");
        }
      );
    } else alert("No Vehicle selected for deletion");
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  formatDateForInput(t) {
    if (!t) return "";
    let e = new Date(t);
    return isNaN(e.getTime()) ? "" : e.toISOString().split("T")[0];
  }
  onEdit(t) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", t?.vehicle_id),
      (this.vehicleObj = ne({}, t)),
      (this.previousValue = t.vehicle_name),
      this.useForm.patchValue({
        vehicle_name: t.vehicle_name,
        VIN: t.VIN,
        type: t.type,
        YOM: this.formatDate(t.YOM),
        chasis_number: t.chasis_number,
        demo_start_date: t.demo_start_date,
        demo_end_date: t.demo_end_date,
      }),
      console.log(
        "vehicleobj.vehicle_id after setting:",
        this.vehicleObj?.vehicle_id
      );
  }
  isVehicleNameChanged() {
    return this.useForm.dirty && this.useForm.value.name !== this.previousValue;
  }
  markFormGroupTouched(t) {
    Object.values(t.controls).forEach((e) => {
      e.markAsTouched(), e instanceof vt && this.markFormGroupTouched(e);
    });
  }
  formatDate(t) {
    return t ? new Date(t).toISOString().split("T")[0] : "";
  }
  isFieldInvalid(t) {
    let e = this.useForm.get(t);
    return !!(e && e.invalid && (e.dirty || e.touched));
  }
  isVehicleName() {
    return this.useForm.value.vehicle_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || n)(B(Xe));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-vehicle"]],
    standalone: !0,
    features: [re],
    decls: 82,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", "mt-10"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search Vehicles...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "dataTablesCard",
        "fs-14",
        "w-100",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", 2, "margin-top", "20px"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "9", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        2,
        "background-color",
        "#222fb9",
        "color",
        "white",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
      ],
      [1, "modal-dialog", "modal-lg"],
      [
        1,
        "modal-title",
        2,
        "align-items",
        "center",
        "margin-inline",
        "auto",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      [
        "for",
        "vehicle_name",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      ["style", "color: red;", 4, "ngIf"],
      [
        "id",
        "vehicle_name",
        "type",
        "text",
        "placeholder",
        "Vehicle Name",
        "formControlName",
        "vehicle_name",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "form-group", "col-md-6"],
      [
        "for",
        "YOM",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "YOM",
        "type",
        "date",
        "formControlName",
        "YOM",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "text",
        3,
        "ngClass",
      ],
      [
        "for",
        "typeSelect",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "typeSelect",
        "formControlName",
        "type",
        1,
        "form-control",
        "form-control-lg",
        2,
        "cursor",
        "pointer",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "petrol"],
      ["value", "diesel"],
      ["value", "EV"],
      [
        "for",
        "chasis_number",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "chasis_number",
        "type",
        "text",
        "placeholder",
        "Enter Chassis Number",
        "formControlName",
        "chasis_number",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "row", 2, "margin-left", "-3px !important"],
      [
        "for",
        "demo_start_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "demo_start_date",
        "type",
        "date",
        "placeholder",
        "start date",
        "formControlName",
        "demo_start_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "17px"],
      [
        "for",
        "demo_end_date",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
        "margin-left",
        "-2px",
      ],
      [
        "id",
        "demo_end_date",
        "type",
        "date",
        "placeholder",
        "end date",
        "formControlName",
        "demo_end_date",
        1,
        "form-control",
        "form-control-lg",
        2,
        "width",
        "350px",
        3,
        "ngClass",
      ],
      [1, "col-md-6", "form-group", 2, "margin-left", "5px"],
      [
        "for",
        "vin",
        1,
        "form-label",
        2,
        "display",
        "block",
        "width",
        "100%",
        "text-align",
        "left",
      ],
      [
        "id",
        "vin",
        "type",
        "text",
        "placeholder",
        "VIN",
        "formControlName",
        "VIN",
        1,
        "form-control",
        "form-control-lg",
        2,
        "margin-left",
        "-5px",
        3,
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [2, "color", "red"],
      [1, "text-danger"],
      ["style", "white-space: nowrap;", 4, "ngIf"],
      [2, "white-space", "nowrap"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        3,
        "click",
        "disabled",
        "ngClass",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Transaction"),
        l()(),
        c(7, "li", 7)(8, "a", 8),
        h(9, "Vehicle Master"),
        l()()()(),
        c(10, "div", 9)(11, "div", 10)(12, "a", 11),
        F("click", function () {
          return i.openModal();
        }),
        U(13, "i", 12),
        h(14, "Add Vehicle "),
        l()(),
        c(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Vehicle"),
        l(),
        c(19, "h3", 16),
        h(20),
        l()()()(),
        c(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        U(26, "label", 22),
        c(27, "select", 23),
        F("change", function (r) {
          return i.onItemsPerPageChange(r);
        }),
        c(28, "option", 24),
        h(29, "10"),
        l(),
        c(30, "option", 25),
        h(31, "25"),
        l(),
        c(32, "option", 26),
        h(33, "50"),
        l(),
        c(34, "option", 27),
        h(35, "100"),
        l()(),
        c(36, "label", 28),
        h(37, "records per page"),
        l()(),
        c(38, "div", 29)(39, "div", 30)(40, "input", 31),
        bt("ngModelChange", function (r) {
          return _t(i.searchTerm, r) || (i.searchTerm = r), r;
        }),
        F("input", function () {
          return i.onSearchChange();
        }),
        l()()()(),
        c(41, "div", 32)(42, "table", 33)(43, "thead")(44, "tr")(45, "th", 34),
        h(46, "Sr No"),
        l(),
        c(47, "th", 34),
        h(48, "Vehicle Name"),
        l(),
        c(49, "th", 34),
        h(50, "YOM"),
        l(),
        c(51, "th", 34),
        h(52, "Type"),
        l(),
        c(53, "th", 34),
        h(54, "VIN"),
        l(),
        c(55, "th", 34),
        h(56, "Chasis number"),
        l(),
        c(57, "th", 34),
        h(58, "Demo start date"),
        l(),
        c(59, "th", 34),
        h(60, "Demo end date"),
        l(),
        c(61, "th", 34),
        h(62, "Action"),
        l()()(),
        c(63, "tbody"),
        k(64, Iw, 4, 0, "tr", 35)(65, Pw, 23, 8, "tr", 36),
        l()()(),
        c(66, "div", 37)(67, "div", 38)(68, "div", 39),
        h(69),
        l()(),
        c(70, "div", 38)(71, "div", 40)(72, "ul", 41)(73, "li", 42)(
          74,
          "a",
          43
        ),
        F("click", function () {
          return i.previousPage();
        }),
        h(75, "Previous"),
        l()(),
        k(76, Aw, 3, 3, "li", 44),
        c(77, "li", 45)(78, "a", 43),
        F("click", function () {
          return i.nextPage();
        }),
        h(79, "Next"),
        l()()()()()()()()()(),
        k(80, Rw, 13, 0, "div", 46)(81, iD, 70, 39, "div", 47),
        l()),
        e & 2 &&
          (p(20),
          K(" ", i.count(), " "),
          p(20),
          gt("ngModel", i.searchTerm),
          p(24),
          y("ngIf", i.paginatedVehicles.length === 0),
          p(),
          y("ngForOf", i.paginatedVehicles),
          p(4),
          _i(
            " Showing ",
            i.getShowingFrom(),
            " to ",
            i.getShowingTo(),
            " of ",
            i.filteredVehicles.length,
            " entries "
          ),
          p(4),
          fe("disabled", i.currentPage === 1),
          p(3),
          y("ngForOf", i.pages),
          p(),
          fe("disabled", i.currentPage === i.totalPages),
          p(3),
          y("ngIf", i.isDeleteModalOpen),
          p(),
          y("ngIf", i.isModalOpen));
    },
    dependencies: [
      De,
      It,
      Bt,
      Ke,
      wi,
      ni,
      oi,
      Yt,
      zi,
      ii,
      Ci,
      Oi,
      wr,
      it,
      Ol,
      Uo,
      Tl,
      Ml,
      Ui,
      Ii,
      Pi,
      Yg,
      Mn,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}input[type=text][_ngcontent-%COMP%]::-ms-clear, input[type=text][_ngcontent-%COMP%]::-ms-reveal, input[type=text][_ngcontent-%COMP%]::-webkit-clear-button, input[type=text][_ngcontent-%COMP%]::-webkit-search-cancel-button{display:none;-webkit-appearance:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}.search-input[_ngcontent-%COMP%]:focus{border-color:#222fb9!important;outline:none}.btn-edit-enabled[_ngcontent-%COMP%]{border:1px solid #222fb9;color:#222fb9;background-color:transparent}.btn-edit-enabled[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn[disabled][_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff;border-color:#222fb9;transition:all .2s ease-in-out}.pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background-color:#222fb9;border-color:#222fb9;color:#fff}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}",
    ],
  });
};
var La = class {
  account_id;
  account_type;
  salutation;
  fname;
  lname;
  language;
  employment_status;
  lead_source;
  gender;
  industry;
  occupation;
  cust_journey_stage;
  national_id;
  phone;
  mobile;
  billing_street;
  billing_city;
  billing_state;
  billing_zip_code;
  billing_country;
  account_name;
  parent_account;
  company_fleet_size;
  website;
  account_owner;
  corporate_program_code;
  type;
  annual_revenue;
  email;
  household_income;
  birthdate;
  dealer_code;
  marital_status;
  children;
  no_of_people;
  dealer_id;
  constructor() {
    (this.dealer_code = 0),
      (this.dealer_id = ""),
      (this.account_id = ""),
      (this.account_type = ""),
      (this.salutation = null),
      (this.fname = ""),
      (this.lname = ""),
      (this.language = null),
      (this.employment_status = null),
      (this.lead_source = null),
      (this.gender = null),
      (this.industry = null),
      (this.occupation = null),
      (this.cust_journey_stage = null),
      (this.national_id = null),
      (this.phone = void 0),
      (this.mobile = void 0),
      (this.billing_street = null),
      (this.billing_city = null),
      (this.billing_state = null),
      (this.billing_zip_code = null),
      (this.billing_country = null),
      (this.account_name = ""),
      (this.parent_account = null),
      (this.company_fleet_size = null),
      (this.website = null),
      (this.account_owner = null),
      (this.corporate_program_code = null),
      (this.type = null),
      (this.annual_revenue = null),
      (this.email = ""),
      (this.household_income = null),
      (this.birthdate = null),
      (this.marital_status = null),
      (this.children = null),
      (this.no_of_people = null);
  }
};
var Fi = class n {
    static isArray(t, e = !0) {
      return Array.isArray(t) && (e || t.length !== 0);
    }
    static isObject(t, e = !0) {
      return (
        typeof t == "object" &&
        !Array.isArray(t) &&
        t != null &&
        (e || Object.keys(t).length !== 0)
      );
    }
    static equals(t, e, i) {
      return i
        ? this.resolveFieldData(t, i) === this.resolveFieldData(e, i)
        : this.equalsByValue(t, e);
    }
    static equalsByValue(t, e) {
      if (t === e) return !0;
      if (t && e && typeof t == "object" && typeof e == "object") {
        var i = Array.isArray(t),
          o = Array.isArray(e),
          r,
          a,
          d;
        if (i && o) {
          if (((a = t.length), a != e.length)) return !1;
          for (r = a; r-- !== 0; )
            if (!this.equalsByValue(t[r], e[r])) return !1;
          return !0;
        }
        if (i != o) return !1;
        var m = this.isDate(t),
          _ = this.isDate(e);
        if (m != _) return !1;
        if (m && _) return t.getTime() == e.getTime();
        var v = t instanceof RegExp,
          S = e instanceof RegExp;
        if (v != S) return !1;
        if (v && S) return t.toString() == e.toString();
        var T = Object.keys(t);
        if (((a = T.length), a !== Object.keys(e).length)) return !1;
        for (r = a; r-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, T[r])) return !1;
        for (r = a; r-- !== 0; )
          if (((d = T[r]), !this.equalsByValue(t[d], e[d]))) return !1;
        return !0;
      }
      return t !== t && e !== e;
    }
    static resolveFieldData(t, e) {
      if (t && e) {
        if (this.isFunction(e)) return e(t);
        if (e.indexOf(".") == -1) return t[e];
        {
          let i = e.split("."),
            o = t;
          for (let r = 0, a = i.length; r < a; ++r) {
            if (o == null) return null;
            o = o[i[r]];
          }
          return o;
        }
      } else return null;
    }
    static isFunction(t) {
      return !!(t && t.constructor && t.call && t.apply);
    }
    static reorderArray(t, e, i) {
      let o;
      t &&
        e !== i &&
        (i >= t.length && ((i %= t.length), (e %= t.length)),
        t.splice(i, 0, t.splice(e, 1)[0]));
    }
    static insertIntoOrderedArray(t, e, i, o) {
      if (i.length > 0) {
        let r = !1;
        for (let a = 0; a < i.length; a++)
          if (this.findIndexInList(i[a], o) > e) {
            i.splice(a, 0, t), (r = !0);
            break;
          }
        r || i.push(t);
      } else i.push(t);
    }
    static findIndexInList(t, e) {
      let i = -1;
      if (e) {
        for (let o = 0; o < e.length; o++)
          if (e[o] == t) {
            i = o;
            break;
          }
      }
      return i;
    }
    static contains(t, e) {
      if (t != null && e && e.length) {
        for (let i of e) if (this.equals(t, i)) return !0;
      }
      return !1;
    }
    static removeAccents(t) {
      return (
        t &&
          (t = t
            .normalize("NFKD")
            .replace(new RegExp("\\p{Diacritic}", "gu"), "")),
        t
      );
    }
    static isDate(t) {
      return Object.prototype.toString.call(t) === "[object Date]";
    }
    static isEmpty(t) {
      return (
        t == null ||
        t === "" ||
        (Array.isArray(t) && t.length === 0) ||
        (!this.isDate(t) && typeof t == "object" && Object.keys(t).length === 0)
      );
    }
    static isNotEmpty(t) {
      return !this.isEmpty(t);
    }
    static compare(t, e, i, o = 1) {
      let r = -1,
        a = this.isEmpty(t),
        d = this.isEmpty(e);
      return (
        a && d
          ? (r = 0)
          : a
          ? (r = o)
          : d
          ? (r = -o)
          : typeof t == "string" && typeof e == "string"
          ? (r = t.localeCompare(e, i, { numeric: !0 }))
          : (r = t < e ? -1 : t > e ? 1 : 0),
        r
      );
    }
    static sort(t, e, i = 1, o, r = 1) {
      let a = n.compare(t, e, o, i),
        d = i;
      return (n.isEmpty(t) || n.isEmpty(e)) && (d = r === 1 ? i : r), d * a;
    }
    static merge(t, e) {
      if (!(t == null && e == null)) {
        {
          if (
            (t == null || typeof t == "object") &&
            (e == null || typeof e == "object")
          )
            return ne(ne({}, t || {}), e || {});
          if (
            (t == null || typeof t == "string") &&
            (e == null || typeof e == "string")
          )
            return [t || "", e || ""].join(" ");
        }
        return e || t;
      }
    }
    static isPrintableCharacter(t = "") {
      return this.isNotEmpty(t) && t.length === 1 && t.match(/\S| /);
    }
    static getItemValue(t, ...e) {
      return this.isFunction(t) ? t(...e) : t;
    }
    static findLastIndex(t, e) {
      let i = -1;
      if (this.isNotEmpty(t))
        try {
          i = t.findLastIndex(e);
        } catch {
          i = t.lastIndexOf([...t].reverse().find(e));
        }
      return i;
    }
    static findLast(t, e) {
      let i;
      if (this.isNotEmpty(t))
        try {
          i = t.findLast(e);
        } catch {
          i = [...t].reverse().find(e);
        }
      return i;
    }
    static deepEquals(t, e) {
      if (t === e) return !0;
      if (t && e && typeof t == "object" && typeof e == "object") {
        var i = Array.isArray(t),
          o = Array.isArray(e),
          r,
          a,
          d;
        if (i && o) {
          if (((a = t.length), a != e.length)) return !1;
          for (r = a; r-- !== 0; ) if (!this.deepEquals(t[r], e[r])) return !1;
          return !0;
        }
        if (i != o) return !1;
        var m = t instanceof Date,
          _ = e instanceof Date;
        if (m != _) return !1;
        if (m && _) return t.getTime() == e.getTime();
        var v = t instanceof RegExp,
          S = e instanceof RegExp;
        if (v != S) return !1;
        if (v && S) return t.toString() == e.toString();
        var T = Object.keys(t);
        if (((a = T.length), a !== Object.keys(e).length)) return !1;
        for (r = a; r-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(e, T[r])) return !1;
        for (r = a; r-- !== 0; )
          if (((d = T[r]), !this.deepEquals(t[d], e[d]))) return !1;
        return !0;
      }
      return t !== t && e !== e;
    }
  },
  qg = 0;
function Ar(n = "pn_id_") {
  return qg++, `${n}${qg}`;
}
function nD() {
  let n = [],
    t = (r, a) => {
      let d = n.length > 0 ? n[n.length - 1] : { key: r, value: a },
        m = d.value + (d.key === r ? 0 : a) + 2;
      return n.push({ key: r, value: m }), m;
    },
    e = (r) => {
      n = n.filter((a) => a.value !== r);
    },
    i = () => (n.length > 0 ? n[n.length - 1].value : 0),
    o = (r) => (r && parseInt(r.style.zIndex, 10)) || 0;
  return {
    get: o,
    set: (r, a, d) => {
      a && (a.style.zIndex = String(t(r, d)));
    },
    clear: (r) => {
      r && (e(o(r)), (r.style.zIndex = ""));
    },
    getCurrent: () => i(),
  };
}
var Ba = nD();
var si = (() => {
  class n {
    static STARTS_WITH = "startsWith";
    static CONTAINS = "contains";
    static NOT_CONTAINS = "notContains";
    static ENDS_WITH = "endsWith";
    static EQUALS = "equals";
    static NOT_EQUALS = "notEquals";
    static IN = "in";
    static LESS_THAN = "lt";
    static LESS_THAN_OR_EQUAL_TO = "lte";
    static GREATER_THAN = "gt";
    static GREATER_THAN_OR_EQUAL_TO = "gte";
    static BETWEEN = "between";
    static IS = "is";
    static IS_NOT = "isNot";
    static BEFORE = "before";
    static AFTER = "after";
    static DATE_IS = "dateIs";
    static DATE_IS_NOT = "dateIsNot";
    static DATE_BEFORE = "dateBefore";
    static DATE_AFTER = "dateAfter";
  }
  return n;
})();
var Kg = (() => {
  class n {
    clickSource = new Ee();
    clickObservable = this.clickSource.asObservable();
    add(e) {
      e && this.clickSource.next(e);
    }
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
  }
  return n;
})();
var Pl = (() => {
  class n {
    ripple = !1;
    inputStyle = le("outlined");
    overlayOptions = {};
    csp = le({ nonce: void 0 });
    filterMatchModeOptions = {
      text: [
        si.STARTS_WITH,
        si.CONTAINS,
        si.NOT_CONTAINS,
        si.ENDS_WITH,
        si.EQUALS,
        si.NOT_EQUALS,
      ],
      numeric: [
        si.EQUALS,
        si.NOT_EQUALS,
        si.LESS_THAN,
        si.LESS_THAN_OR_EQUAL_TO,
        si.GREATER_THAN,
        si.GREATER_THAN_OR_EQUAL_TO,
      ],
      date: [si.DATE_IS, si.DATE_IS_NOT, si.DATE_BEFORE, si.DATE_AFTER],
    };
    translation = {
      startsWith: "Starts with",
      contains: "Contains",
      notContains: "Not contains",
      endsWith: "Ends with",
      equals: "Equals",
      notEquals: "Not equals",
      noFilter: "No Filter",
      lt: "Less than",
      lte: "Less than or equal to",
      gt: "Greater than",
      gte: "Greater than or equal to",
      is: "Is",
      isNot: "Is not",
      before: "Before",
      after: "After",
      dateIs: "Date is",
      dateIsNot: "Date is not",
      dateBefore: "Date is before",
      dateAfter: "Date is after",
      clear: "Clear",
      apply: "Apply",
      matchAll: "Match All",
      matchAny: "Match Any",
      addRule: "Add Rule",
      removeRule: "Remove Rule",
      accept: "Yes",
      reject: "No",
      choose: "Choose",
      upload: "Upload",
      cancel: "Cancel",
      pending: "Pending",
      fileSizeTypes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
      dayNames: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ],
      dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      monthNames: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
      ],
      monthNamesShort: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec",
      ],
      chooseYear: "Choose Year",
      chooseMonth: "Choose Month",
      chooseDate: "Choose Date",
      prevDecade: "Previous Decade",
      nextDecade: "Next Decade",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      prevHour: "Previous Hour",
      nextHour: "Next Hour",
      prevMinute: "Previous Minute",
      nextMinute: "Next Minute",
      prevSecond: "Previous Second",
      nextSecond: "Next Second",
      am: "am",
      pm: "pm",
      dateFormat: "mm/dd/yy",
      firstDayOfWeek: 0,
      today: "Today",
      weekHeader: "Wk",
      weak: "Weak",
      medium: "Medium",
      strong: "Strong",
      passwordPrompt: "Enter a password",
      emptyMessage: "No results found",
      searchMessage: "{0} results are available",
      selectionMessage: "{0} items selected",
      emptySelectionMessage: "No selected item",
      emptySearchMessage: "No results found",
      emptyFilterMessage: "No results found",
      aria: {
        trueLabel: "True",
        falseLabel: "False",
        nullLabel: "Not Selected",
        star: "1 star",
        stars: "{star} stars",
        selectAll: "All items selected",
        unselectAll: "All items unselected",
        close: "Close",
        previous: "Previous",
        next: "Next",
        navigation: "Navigation",
        scrollTop: "Scroll Top",
        moveTop: "Move Top",
        moveUp: "Move Up",
        moveDown: "Move Down",
        moveBottom: "Move Bottom",
        moveToTarget: "Move to Target",
        moveToSource: "Move to Source",
        moveAllToTarget: "Move All to Target",
        moveAllToSource: "Move All to Source",
        pageLabel: "{page}",
        firstPageLabel: "First Page",
        lastPageLabel: "Last Page",
        nextPageLabel: "Next Page",
        prevPageLabel: "Previous Page",
        rowsPerPageLabel: "Rows per page",
        previousPageLabel: "Previous Page",
        jumpToPageDropdownLabel: "Jump to Page Dropdown",
        jumpToPageInputLabel: "Jump to Page Input",
        selectRow: "Row Selected",
        unselectRow: "Row Unselected",
        expandRow: "Row Expanded",
        collapseRow: "Row Collapsed",
        showFilterMenu: "Show Filter Menu",
        hideFilterMenu: "Hide Filter Menu",
        filterOperator: "Filter Operator",
        filterConstraint: "Filter Constraint",
        editRow: "Row Edit",
        saveEdit: "Save Edit",
        cancelEdit: "Cancel Edit",
        listView: "List View",
        gridView: "Grid View",
        slide: "Slide",
        slideNumber: "{slideNumber}",
        zoomImage: "Zoom Image",
        zoomIn: "Zoom In",
        zoomOut: "Zoom Out",
        rotateRight: "Rotate Right",
        rotateLeft: "Rotate Left",
        listLabel: "Option List",
        selectColor: "Select a color",
        removeLabel: "Remove",
        browseFiles: "Browse Files",
        maximizeLabel: "Maximize",
      },
    };
    zIndex = { modal: 1100, overlay: 1e3, menu: 1e3, tooltip: 1100 };
    translationSource = new Ee();
    translationObserver = this.translationSource.asObservable();
    getTranslation(e) {
      return this.translation[e];
    }
    setTranslation(e) {
      (this.translation = ne(ne({}, this.translation), e)),
        this.translationSource.next(this.translation);
    }
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
  }
  return n;
})();
var Ha = (() => {
    class n {
      template;
      type;
      name;
      constructor(e) {
        this.template = e;
      }
      getType() {
        return this.name;
      }
      static ɵfac = function (i) {
        return new (i || n)(B(yn));
      };
      static ɵdir = Te({
        type: n,
        selectors: [["", "pTemplate", ""]],
        inputs: { type: "type", name: [0, "pTemplate", "name"] },
        standalone: !0,
      });
    }
    return n;
  })(),
  ln = (() => {
    class n {
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = _e({ type: n });
      static ɵinj = ge({});
    }
    return n;
  })(),
  cn = (() => {
    class n {
      static STARTS_WITH = "startsWith";
      static CONTAINS = "contains";
      static NOT_CONTAINS = "notContains";
      static ENDS_WITH = "endsWith";
      static EQUALS = "equals";
      static NOT_EQUALS = "notEquals";
      static NO_FILTER = "noFilter";
      static LT = "lt";
      static LTE = "lte";
      static GT = "gt";
      static GTE = "gte";
      static IS = "is";
      static IS_NOT = "isNot";
      static BEFORE = "before";
      static AFTER = "after";
      static CLEAR = "clear";
      static APPLY = "apply";
      static MATCH_ALL = "matchAll";
      static MATCH_ANY = "matchAny";
      static ADD_RULE = "addRule";
      static REMOVE_RULE = "removeRule";
      static ACCEPT = "accept";
      static REJECT = "reject";
      static CHOOSE = "choose";
      static UPLOAD = "upload";
      static CANCEL = "cancel";
      static PENDING = "pending";
      static FILE_SIZE_TYPES = "fileSizeTypes";
      static DAY_NAMES = "dayNames";
      static DAY_NAMES_SHORT = "dayNamesShort";
      static DAY_NAMES_MIN = "dayNamesMin";
      static MONTH_NAMES = "monthNames";
      static MONTH_NAMES_SHORT = "monthNamesShort";
      static FIRST_DAY_OF_WEEK = "firstDayOfWeek";
      static TODAY = "today";
      static WEEK_HEADER = "weekHeader";
      static WEAK = "weak";
      static MEDIUM = "medium";
      static STRONG = "strong";
      static PASSWORD_PROMPT = "passwordPrompt";
      static EMPTY_MESSAGE = "emptyMessage";
      static EMPTY_FILTER_MESSAGE = "emptyFilterMessage";
      static SHOW_FILTER_MENU = "showFilterMenu";
      static HIDE_FILTER_MENU = "hideFilterMenu";
      static SELECTION_MESSAGE = "selectionMessage";
      static ARIA = "aria";
      static SELECT_COLOR = "selectColor";
      static BROWSE_FILES = "browseFiles";
    }
    return n;
  })();
var de = (() => {
    class n {
      static zindex = 1e3;
      static calculatedScrollbarWidth = null;
      static calculatedScrollbarHeight = null;
      static browser;
      static addClass(e, i) {
        e && i && (e.classList ? e.classList.add(i) : (e.className += " " + i));
      }
      static addMultipleClasses(e, i) {
        if (e && i)
          if (e.classList) {
            let o = i.trim().split(" ");
            for (let r = 0; r < o.length; r++) e.classList.add(o[r]);
          } else {
            let o = i.split(" ");
            for (let r = 0; r < o.length; r++) e.className += " " + o[r];
          }
      }
      static removeClass(e, i) {
        e &&
          i &&
          (e.classList
            ? e.classList.remove(i)
            : (e.className = e.className.replace(
                new RegExp(
                  "(^|\\b)" + i.split(" ").join("|") + "(\\b|$)",
                  "gi"
                ),
                " "
              )));
      }
      static removeMultipleClasses(e, i) {
        e &&
          i &&
          [i]
            .flat()
            .filter(Boolean)
            .forEach((o) =>
              o.split(" ").forEach((r) => this.removeClass(e, r))
            );
      }
      static hasClass(e, i) {
        return e && i
          ? e.classList
            ? e.classList.contains(i)
            : new RegExp("(^| )" + i + "( |$)", "gi").test(e.className)
          : !1;
      }
      static siblings(e) {
        return Array.prototype.filter.call(e.parentNode.children, function (i) {
          return i !== e;
        });
      }
      static find(e, i) {
        return Array.from(e.querySelectorAll(i));
      }
      static findSingle(e, i) {
        return this.isElement(e) ? e.querySelector(i) : null;
      }
      static index(e) {
        let i = e.parentNode.childNodes,
          o = 0;
        for (var r = 0; r < i.length; r++) {
          if (i[r] == e) return o;
          i[r].nodeType == 1 && o++;
        }
        return -1;
      }
      static indexWithinGroup(e, i) {
        let o = e.parentNode ? e.parentNode.childNodes : [],
          r = 0;
        for (var a = 0; a < o.length; a++) {
          if (o[a] == e) return r;
          o[a].attributes && o[a].attributes[i] && o[a].nodeType == 1 && r++;
        }
        return -1;
      }
      static appendOverlay(e, i, o = "self") {
        o !== "self" && e && i && this.appendChild(e, i);
      }
      static alignOverlay(e, i, o = "self", r = !0) {
        e &&
          i &&
          (r && (e.style.minWidth = `${n.getOuterWidth(i)}px`),
          o === "self"
            ? this.relativePosition(e, i)
            : this.absolutePosition(e, i));
      }
      static relativePosition(e, i, o = !0) {
        let r = (ue) => {
            if (ue)
              return getComputedStyle(ue).getPropertyValue("position") ===
                "relative"
                ? ue
                : r(ue.parentElement);
          },
          a = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          d = i.offsetHeight ?? i.getBoundingClientRect().height,
          m = i.getBoundingClientRect(),
          _ = this.getWindowScrollTop(),
          v = this.getWindowScrollLeft(),
          S = this.getViewport(),
          M = r(e)?.getBoundingClientRect() || { top: -1 * _, left: -1 * v },
          A,
          j;
        m.top + d + a.height > S.height
          ? ((A = m.top - M.top - a.height),
            (e.style.transformOrigin = "bottom"),
            m.top + A < 0 && (A = -1 * m.top))
          : ((A = d + m.top - M.top), (e.style.transformOrigin = "top"));
        let z = m.left + a.width - S.width,
          L = m.left - M.left;
        a.width > S.width
          ? (j = (m.left - M.left) * -1)
          : z > 0
          ? (j = L - z)
          : (j = m.left - M.left),
          (e.style.top = A + "px"),
          (e.style.left = j + "px"),
          o &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static absolutePosition(e, i, o = !0) {
        let r = e.offsetParent
            ? { width: e.offsetWidth, height: e.offsetHeight }
            : this.getHiddenElementDimensions(e),
          a = r.height,
          d = r.width,
          m = i.offsetHeight ?? i.getBoundingClientRect().height,
          _ = i.offsetWidth ?? i.getBoundingClientRect().width,
          v = i.getBoundingClientRect(),
          S = this.getWindowScrollTop(),
          T = this.getWindowScrollLeft(),
          M = this.getViewport(),
          A,
          j;
        v.top + m + a > M.height
          ? ((A = v.top + S - a),
            (e.style.transformOrigin = "bottom"),
            A < 0 && (A = S))
          : ((A = m + v.top + S), (e.style.transformOrigin = "top")),
          v.left + d > M.width
            ? (j = Math.max(0, v.left + T + _ - d))
            : (j = v.left + T),
          (e.style.top = A + "px"),
          (e.style.left = j + "px"),
          o &&
            (e.style.marginTop =
              origin === "bottom"
                ? "calc(var(--p-anchor-gutter) * -1)"
                : "calc(var(--p-anchor-gutter))");
      }
      static getParents(e, i = []) {
        return e.parentNode === null
          ? i
          : this.getParents(e.parentNode, i.concat([e.parentNode]));
      }
      static getScrollableParents(e) {
        let i = [];
        if (e) {
          let o = this.getParents(e),
            r = /(auto|scroll)/,
            a = (d) => {
              let m = window.getComputedStyle(d, null);
              return (
                r.test(m.getPropertyValue("overflow")) ||
                r.test(m.getPropertyValue("overflowX")) ||
                r.test(m.getPropertyValue("overflowY"))
              );
            };
          for (let d of o) {
            let m = d.nodeType === 1 && d.dataset.scrollselectors;
            if (m) {
              let _ = m.split(",");
              for (let v of _) {
                let S = this.findSingle(d, v);
                S && a(S) && i.push(S);
              }
            }
            d.nodeType !== 9 && a(d) && i.push(d);
          }
        }
        return i;
      }
      static getHiddenElementOuterHeight(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let i = e.offsetHeight;
        return (e.style.display = "none"), (e.style.visibility = "visible"), i;
      }
      static getHiddenElementOuterWidth(e) {
        (e.style.visibility = "hidden"), (e.style.display = "block");
        let i = e.offsetWidth;
        return (e.style.display = "none"), (e.style.visibility = "visible"), i;
      }
      static getHiddenElementDimensions(e) {
        let i = {};
        return (
          (e.style.visibility = "hidden"),
          (e.style.display = "block"),
          (i.width = e.offsetWidth),
          (i.height = e.offsetHeight),
          (e.style.display = "none"),
          (e.style.visibility = "visible"),
          i
        );
      }
      static scrollInView(e, i) {
        let o = getComputedStyle(e).getPropertyValue("borderTopWidth"),
          r = o ? parseFloat(o) : 0,
          a = getComputedStyle(e).getPropertyValue("paddingTop"),
          d = a ? parseFloat(a) : 0,
          m = e.getBoundingClientRect(),
          v =
            i.getBoundingClientRect().top +
            document.body.scrollTop -
            (m.top + document.body.scrollTop) -
            r -
            d,
          S = e.scrollTop,
          T = e.clientHeight,
          M = this.getOuterHeight(i);
        v < 0
          ? (e.scrollTop = S + v)
          : v + M > T && (e.scrollTop = S + v - T + M);
      }
      static fadeIn(e, i) {
        e.style.opacity = 0;
        let o = +new Date(),
          r = 0,
          a = function () {
            (r =
              +e.style.opacity.replace(",", ".") +
              (new Date().getTime() - o) / i),
              (e.style.opacity = r),
              (o = +new Date()),
              +r < 1 &&
                ((window.requestAnimationFrame && requestAnimationFrame(a)) ||
                  setTimeout(a, 16));
          };
        a();
      }
      static fadeOut(e, i) {
        var o = 1,
          r = 50,
          a = i,
          d = r / a;
        let m = setInterval(() => {
          (o = o - d),
            o <= 0 && ((o = 0), clearInterval(m)),
            (e.style.opacity = o);
        }, r);
      }
      static getWindowScrollTop() {
        let e = document.documentElement;
        return (window.pageYOffset || e.scrollTop) - (e.clientTop || 0);
      }
      static getWindowScrollLeft() {
        let e = document.documentElement;
        return (window.pageXOffset || e.scrollLeft) - (e.clientLeft || 0);
      }
      static matches(e, i) {
        var o = Element.prototype,
          r =
            o.matches ||
            o.webkitMatchesSelector ||
            o.mozMatchesSelector ||
            o.msMatchesSelector ||
            function (a) {
              return [].indexOf.call(document.querySelectorAll(a), this) !== -1;
            };
        return r.call(e, i);
      }
      static getOuterWidth(e, i) {
        let o = e.offsetWidth;
        if (i) {
          let r = getComputedStyle(e);
          o += parseFloat(r.marginLeft) + parseFloat(r.marginRight);
        }
        return o;
      }
      static getHorizontalPadding(e) {
        let i = getComputedStyle(e);
        return parseFloat(i.paddingLeft) + parseFloat(i.paddingRight);
      }
      static getHorizontalMargin(e) {
        let i = getComputedStyle(e);
        return parseFloat(i.marginLeft) + parseFloat(i.marginRight);
      }
      static innerWidth(e) {
        let i = e.offsetWidth,
          o = getComputedStyle(e);
        return (i += parseFloat(o.paddingLeft) + parseFloat(o.paddingRight)), i;
      }
      static width(e) {
        let i = e.offsetWidth,
          o = getComputedStyle(e);
        return (i -= parseFloat(o.paddingLeft) + parseFloat(o.paddingRight)), i;
      }
      static getInnerHeight(e) {
        let i = e.offsetHeight,
          o = getComputedStyle(e);
        return (i += parseFloat(o.paddingTop) + parseFloat(o.paddingBottom)), i;
      }
      static getOuterHeight(e, i) {
        let o = e.offsetHeight;
        if (i) {
          let r = getComputedStyle(e);
          o += parseFloat(r.marginTop) + parseFloat(r.marginBottom);
        }
        return o;
      }
      static getHeight(e) {
        let i = e.offsetHeight,
          o = getComputedStyle(e);
        return (
          (i -=
            parseFloat(o.paddingTop) +
            parseFloat(o.paddingBottom) +
            parseFloat(o.borderTopWidth) +
            parseFloat(o.borderBottomWidth)),
          i
        );
      }
      static getWidth(e) {
        let i = e.offsetWidth,
          o = getComputedStyle(e);
        return (
          (i -=
            parseFloat(o.paddingLeft) +
            parseFloat(o.paddingRight) +
            parseFloat(o.borderLeftWidth) +
            parseFloat(o.borderRightWidth)),
          i
        );
      }
      static getViewport() {
        let e = window,
          i = document,
          o = i.documentElement,
          r = i.getElementsByTagName("body")[0],
          a = e.innerWidth || o.clientWidth || r.clientWidth,
          d = e.innerHeight || o.clientHeight || r.clientHeight;
        return { width: a, height: d };
      }
      static getOffset(e) {
        var i = e.getBoundingClientRect();
        return {
          top:
            i.top +
            (window.pageYOffset ||
              document.documentElement.scrollTop ||
              document.body.scrollTop ||
              0),
          left:
            i.left +
            (window.pageXOffset ||
              document.documentElement.scrollLeft ||
              document.body.scrollLeft ||
              0),
        };
      }
      static replaceElementWith(e, i) {
        let o = e.parentNode;
        if (!o) throw "Can't replace element";
        return o.replaceChild(i, e);
      }
      static getUserAgent() {
        if (navigator && this.isClient()) return navigator.userAgent;
      }
      static isIE() {
        var e = window.navigator.userAgent,
          i = e.indexOf("MSIE ");
        if (i > 0) return !0;
        var o = e.indexOf("Trident/");
        if (o > 0) {
          var r = e.indexOf("rv:");
          return !0;
        }
        var a = e.indexOf("Edge/");
        return a > 0;
      }
      static isIOS() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
      }
      static isAndroid() {
        return /(android)/i.test(navigator.userAgent);
      }
      static isTouchDevice() {
        return "ontouchstart" in window || navigator.maxTouchPoints > 0;
      }
      static appendChild(e, i) {
        if (this.isElement(i)) i.appendChild(e);
        else if (i && i.el && i.el.nativeElement)
          i.el.nativeElement.appendChild(e);
        else throw "Cannot append " + i + " to " + e;
      }
      static removeChild(e, i) {
        if (this.isElement(i)) i.removeChild(e);
        else if (i.el && i.el.nativeElement) i.el.nativeElement.removeChild(e);
        else throw "Cannot remove " + e + " from " + i;
      }
      static removeElement(e) {
        "remove" in Element.prototype
          ? e.remove()
          : e.parentNode.removeChild(e);
      }
      static isElement(e) {
        return typeof HTMLElement == "object"
          ? e instanceof HTMLElement
          : e &&
              typeof e == "object" &&
              e !== null &&
              e.nodeType === 1 &&
              typeof e.nodeName == "string";
      }
      static calculateScrollbarWidth(e) {
        if (e) {
          let i = getComputedStyle(e);
          return (
            e.offsetWidth -
            e.clientWidth -
            parseFloat(i.borderLeftWidth) -
            parseFloat(i.borderRightWidth)
          );
        } else {
          if (this.calculatedScrollbarWidth !== null)
            return this.calculatedScrollbarWidth;
          let i = document.createElement("div");
          (i.className = "p-scrollbar-measure"), document.body.appendChild(i);
          let o = i.offsetWidth - i.clientWidth;
          return (
            document.body.removeChild(i), (this.calculatedScrollbarWidth = o), o
          );
        }
      }
      static calculateScrollbarHeight() {
        if (this.calculatedScrollbarHeight !== null)
          return this.calculatedScrollbarHeight;
        let e = document.createElement("div");
        (e.className = "p-scrollbar-measure"), document.body.appendChild(e);
        let i = e.offsetHeight - e.clientHeight;
        return (
          document.body.removeChild(e), (this.calculatedScrollbarWidth = i), i
        );
      }
      static invokeElementMethod(e, i, o) {
        e[i].apply(e, o);
      }
      static clearSelection() {
        if (window.getSelection)
          window.getSelection().empty
            ? window.getSelection().empty()
            : window.getSelection().removeAllRanges &&
              window.getSelection().rangeCount > 0 &&
              window.getSelection().getRangeAt(0).getClientRects().length > 0 &&
              window.getSelection().removeAllRanges();
        else if (document.selection && document.selection.empty)
          try {
            document.selection.empty();
          } catch {}
      }
      static getBrowser() {
        if (!this.browser) {
          let e = this.resolveUserAgent();
          (this.browser = {}),
            e.browser &&
              ((this.browser[e.browser] = !0),
              (this.browser.version = e.version)),
            this.browser.chrome
              ? (this.browser.webkit = !0)
              : this.browser.webkit && (this.browser.safari = !0);
        }
        return this.browser;
      }
      static resolveUserAgent() {
        let e = navigator.userAgent.toLowerCase(),
          i =
            /(chrome)[ \/]([\w.]+)/.exec(e) ||
            /(webkit)[ \/]([\w.]+)/.exec(e) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) ||
            /(msie) ([\w.]+)/.exec(e) ||
            (e.indexOf("compatible") < 0 &&
              /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)) ||
            [];
        return { browser: i[1] || "", version: i[2] || "0" };
      }
      static isInteger(e) {
        return Number.isInteger
          ? Number.isInteger(e)
          : typeof e == "number" && isFinite(e) && Math.floor(e) === e;
      }
      static isHidden(e) {
        return !e || e.offsetParent === null;
      }
      static isVisible(e) {
        return e && e.offsetParent != null;
      }
      static isExist(e) {
        return e !== null && typeof e < "u" && e.nodeName && e.parentNode;
      }
      static focus(e, i) {
        e && document.activeElement !== e && e.focus(i);
      }
      static getFocusableSelectorString(e = "") {
        return `button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-inputtext:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
        .p-button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e}`;
      }
      static getFocusableElements(e, i = "") {
        let o = this.find(e, this.getFocusableSelectorString(i)),
          r = [];
        for (let a of o) {
          let d = getComputedStyle(a);
          this.isVisible(a) &&
            d.display != "none" &&
            d.visibility != "hidden" &&
            r.push(a);
        }
        return r;
      }
      static getFocusableElement(e, i = "") {
        let o = this.findSingle(e, this.getFocusableSelectorString(i));
        if (o) {
          let r = getComputedStyle(o);
          if (
            this.isVisible(o) &&
            r.display != "none" &&
            r.visibility != "hidden"
          )
            return o;
        }
        return null;
      }
      static getFirstFocusableElement(e, i = "") {
        let o = this.getFocusableElements(e, i);
        return o.length > 0 ? o[0] : null;
      }
      static getLastFocusableElement(e, i) {
        let o = this.getFocusableElements(e, i);
        return o.length > 0 ? o[o.length - 1] : null;
      }
      static getNextFocusableElement(e, i = !1) {
        let o = n.getFocusableElements(e),
          r = 0;
        if (o && o.length > 0) {
          let a = o.indexOf(o[0].ownerDocument.activeElement);
          i
            ? a == -1 || a === 0
              ? (r = o.length - 1)
              : (r = a - 1)
            : a != -1 && a !== o.length - 1 && (r = a + 1);
        }
        return o[r];
      }
      static generateZIndex() {
        return (this.zindex = this.zindex || 999), ++this.zindex;
      }
      static getSelection() {
        return window.getSelection
          ? window.getSelection().toString()
          : document.getSelection
          ? document.getSelection().toString()
          : document.selection
          ? document.selection.createRange().text
          : null;
      }
      static getTargetElement(e, i) {
        if (!e) return null;
        switch (e) {
          case "document":
            return document;
          case "window":
            return window;
          case "@next":
            return i?.nextElementSibling;
          case "@prev":
            return i?.previousElementSibling;
          case "@parent":
            return i?.parentElement;
          case "@grandparent":
            return i?.parentElement.parentElement;
          default:
            let o = typeof e;
            if (o === "string") return document.querySelector(e);
            if (o === "object" && e.hasOwnProperty("nativeElement"))
              return this.isExist(e.nativeElement) ? e.nativeElement : void 0;
            let a = ((d) => !!(d && d.constructor && d.call && d.apply))(e)
              ? e()
              : e;
            return (a && a.nodeType === 9) || this.isExist(a) ? a : null;
        }
      }
      static isClient() {
        return !!(
          typeof window < "u" &&
          window.document &&
          window.document.createElement
        );
      }
      static getAttribute(e, i) {
        if (e) {
          let o = e.getAttribute(i);
          return isNaN(o)
            ? o === "true" || o === "false"
              ? o === "true"
              : o
            : +o;
        }
      }
      static calculateBodyScrollbarWidth() {
        return window.innerWidth - document.documentElement.offsetWidth;
      }
      static blockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.setProperty(
          "--scrollbar-width",
          this.calculateBodyScrollbarWidth() + "px"
        ),
          this.addClass(document.body, e);
      }
      static unblockBodyScroll(e = "p-overflow-hidden") {
        document.body.style.removeProperty("--scrollbar-width"),
          this.removeClass(document.body, e);
      }
      static createElement(e, i = {}, ...o) {
        if (e) {
          let r = document.createElement(e);
          return this.setAttributes(r, i), r.append(...o), r;
        }
      }
      static setAttribute(e, i = "", o) {
        this.isElement(e) && o !== null && o !== void 0 && e.setAttribute(i, o);
      }
      static setAttributes(e, i = {}) {
        if (this.isElement(e)) {
          let o = (r, a) => {
            let d = e?.$attrs?.[r] ? [e?.$attrs?.[r]] : [];
            return [a].flat().reduce((m, _) => {
              if (_ != null) {
                let v = typeof _;
                if (v === "string" || v === "number") m.push(_);
                else if (v === "object") {
                  let S = Array.isArray(_)
                    ? o(r, _)
                    : Object.entries(_).map(([T, M]) =>
                        r === "style" && (M || M === 0)
                          ? `${T.replace(
                              /([a-z])([A-Z])/g,
                              "$1-$2"
                            ).toLowerCase()}:${M}`
                          : M
                          ? T
                          : void 0
                      );
                  m = S.length ? m.concat(S.filter((T) => !!T)) : m;
                }
              }
              return m;
            }, d);
          };
          Object.entries(i).forEach(([r, a]) => {
            if (a != null) {
              let d = r.match(/^on(.+)/);
              d
                ? e.addEventListener(d[1].toLowerCase(), a)
                : r === "pBind"
                ? this.setAttributes(e, a)
                : ((a =
                    r === "class"
                      ? [...new Set(o("class", a))].join(" ").trim()
                      : r === "style"
                      ? o("style", a).join(";").trim()
                      : a),
                  (e.$attrs = e.$attrs || {}) && (e.$attrs[r] = a),
                  e.setAttribute(r, a));
            }
          });
        }
      }
      static isFocusableElement(e, i = "") {
        return this.isElement(e)
          ? e.matches(`button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},
                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i}`)
          : !1;
      }
    }
    return n;
  })(),
  Al = class {
    element;
    listener;
    scrollableParents;
    constructor(t, e = () => {}) {
      (this.element = t), (this.listener = e);
    }
    bindScrollListener() {
      this.scrollableParents = de.getScrollableParents(this.element);
      for (let t = 0; t < this.scrollableParents.length; t++)
        this.scrollableParents[t].addEventListener("scroll", this.listener);
    }
    unbindScrollListener() {
      if (this.scrollableParents)
        for (let t = 0; t < this.scrollableParents.length; t++)
          this.scrollableParents[t].removeEventListener(
            "scroll",
            this.listener
          );
    }
    destroy() {
      this.unbindScrollListener(),
        (this.element = null),
        (this.listener = null),
        (this.scrollableParents = null);
    }
  };
var Rl = (() => {
    class n {
      autofocus = !1;
      focused = !1;
      platformId = J(Ti);
      document = J(Le);
      host = J(ke);
      ngAfterContentChecked() {
        this.autofocus === !1
          ? this.host.nativeElement.removeAttribute("autofocus")
          : this.host.nativeElement.setAttribute("autofocus", !0),
          this.focused || this.autoFocus();
      }
      ngAfterViewChecked() {
        this.focused || this.autoFocus();
      }
      autoFocus() {
        ji(this.platformId) &&
          this.autofocus &&
          setTimeout(() => {
            let e = de.getFocusableElements(this.host?.nativeElement);
            e.length === 0 && this.host.nativeElement.focus(),
              e.length > 0 && e[0].focus(),
              (this.focused = !0);
          });
      }
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵdir = Te({
        type: n,
        selectors: [["", "pAutoFocus", ""]],
        hostAttrs: [1, "p-element"],
        inputs: { autofocus: [2, "autofocus", "autofocus", xe] },
        standalone: !0,
        features: [kt],
      });
    }
    return n;
  })(),
  Xg = (() => {
    class n {
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = _e({ type: n });
      static ɵinj = ge({});
    }
    return n;
  })();
var rD = ["*"],
  li = (() => {
    class n {
      label;
      spin = !1;
      styleClass;
      role;
      ariaLabel;
      ariaHidden;
      ngOnInit() {
        this.getAttributes();
      }
      getAttributes() {
        let e = Fi.isEmpty(this.label);
        (this.role = e ? void 0 : "img"),
          (this.ariaLabel = e ? void 0 : this.label),
          (this.ariaHidden = e);
      }
      getClassNames() {
        return `p-icon ${this.styleClass ? this.styleClass + " " : ""}${
          this.spin ? "p-icon-spin" : ""
        }`;
      }
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵcmp = oe({
        type: n,
        selectors: [["ng-component"]],
        hostAttrs: [1, "p-element", "p-icon-wrapper"],
        inputs: {
          label: "label",
          spin: [2, "spin", "spin", xe],
          styleClass: "styleClass",
        },
        standalone: !0,
        features: [kt, re],
        ngContentSelectors: rD,
        decls: 1,
        vars: 0,
        template: function (i, o) {
          i & 1 && (Lt(), wt(0));
        },
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })();
var Zg = (() => {
  class n extends li {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + Ar() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = ut(n)))(o || n);
      };
    })();
    static ɵcmp = oe({
      type: n,
      selectors: [["SpinnerIcon"]],
      standalone: !0,
      features: [$e, re],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (i, o) {
        i & 1 &&
          (ct(),
          c(0, "svg", 0)(1, "g"),
          U(2, "path", 1),
          l(),
          c(3, "defs")(4, "clipPath", 2),
          U(5, "rect", 3),
          l()()()),
          i & 2 &&
            (Ae(o.getClassNames()),
            ae("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ),
            p(),
            ae("clip-path", o.pathId),
            p(3),
            y("id", o.pathId));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Fl = (() => {
    class n {
      document;
      platformId;
      renderer;
      el;
      zone;
      config;
      constructor(e, i, o, r, a, d) {
        (this.document = e),
          (this.platformId = i),
          (this.renderer = o),
          (this.el = r),
          (this.zone = a),
          (this.config = d);
      }
      animationListener;
      mouseDownListener;
      timeout;
      ngAfterViewInit() {
        ji(this.platformId) &&
          this.config &&
          this.config.ripple &&
          this.zone.runOutsideAngular(() => {
            this.create(),
              (this.mouseDownListener = this.renderer.listen(
                this.el.nativeElement,
                "mousedown",
                this.onMouseDown.bind(this)
              ));
          });
      }
      onMouseDown(e) {
        let i = this.getInk();
        if (
          !i ||
          this.document.defaultView?.getComputedStyle(i, null).display ===
            "none"
        )
          return;
        if (
          (de.removeClass(i, "p-ink-active"),
          !de.getHeight(i) && !de.getWidth(i))
        ) {
          let d = Math.max(
            de.getOuterWidth(this.el.nativeElement),
            de.getOuterHeight(this.el.nativeElement)
          );
          (i.style.height = d + "px"), (i.style.width = d + "px");
        }
        let o = de.getOffset(this.el.nativeElement),
          r =
            e.pageX -
            o.left +
            this.document.body.scrollTop -
            de.getWidth(i) / 2,
          a =
            e.pageY -
            o.top +
            this.document.body.scrollLeft -
            de.getHeight(i) / 2;
        this.renderer.setStyle(i, "top", a + "px"),
          this.renderer.setStyle(i, "left", r + "px"),
          de.addClass(i, "p-ink-active"),
          (this.timeout = setTimeout(() => {
            let d = this.getInk();
            d && de.removeClass(d, "p-ink-active");
          }, 401));
      }
      getInk() {
        let e = this.el.nativeElement.children;
        for (let i = 0; i < e.length; i++)
          if (
            typeof e[i].className == "string" &&
            e[i].className.indexOf("p-ink") !== -1
          )
            return e[i];
        return null;
      }
      resetInk() {
        let e = this.getInk();
        e && de.removeClass(e, "p-ink-active");
      }
      onAnimationEnd(e) {
        this.timeout && clearTimeout(this.timeout),
          de.removeClass(e.currentTarget, "p-ink-active");
      }
      create() {
        let e = this.renderer.createElement("span");
        this.renderer.addClass(e, "p-ink"),
          this.renderer.appendChild(this.el.nativeElement, e),
          this.renderer.setAttribute(e, "aria-hidden", "true"),
          this.renderer.setAttribute(e, "role", "presentation"),
          this.animationListener ||
            (this.animationListener = this.renderer.listen(
              e,
              "animationend",
              this.onAnimationEnd.bind(this)
            ));
      }
      remove() {
        let e = this.getInk();
        e &&
          (this.mouseDownListener && this.mouseDownListener(),
          this.animationListener && this.animationListener(),
          (this.mouseDownListener = null),
          (this.animationListener = null),
          de.removeElement(e));
      }
      ngOnDestroy() {
        this.config && this.config.ripple && this.remove();
      }
      static ɵfac = function (i) {
        return new (i || n)(B(Le), B(Ti), B(ui), B(ke), B(Oe), B(Pl, 8));
      };
      static ɵdir = Te({
        type: n,
        selectors: [["", "pRipple", ""]],
        hostAttrs: [1, "p-ripple", "p-element"],
        standalone: !0,
      });
    }
    return n;
  })(),
  Jg = (() => {
    class n {
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = _e({ type: n });
      static ɵinj = ge({});
    }
    return n;
  })();
var sD = ["*"],
  e0 = (n) => ({ class: n });
function lD(n, t) {
  n & 1 && rn(0);
}
function cD(n, t) {
  if ((n & 1 && U(0, "span", 8), n & 2)) {
    let e = w(3);
    y("ngClass", e.iconClass()),
      ae("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function dD(n, t) {
  if ((n & 1 && U(0, "SpinnerIcon", 9), n & 2)) {
    let e = w(3);
    y("styleClass", e.spinnerIconClass())("spin", !0),
      ae("aria-hidden", !0)("data-pc-section", "loadingicon");
  }
}
function uD(n, t) {
  if (
    (n & 1 &&
      (je(0), k(1, cD, 1, 3, "span", 6)(2, dD, 1, 4, "SpinnerIcon", 7), ze()),
    n & 2)
  ) {
    let e = w(2);
    p(), y("ngIf", e.loadingIcon), p(), y("ngIf", !e.loadingIcon);
  }
}
function hD(n, t) {}
function pD(n, t) {
  if ((n & 1 && k(0, hD, 0, 0, "ng-template", 10), n & 2)) {
    let e = w(2);
    y("ngIf", e.loadingIconTemplate);
  }
}
function mD(n, t) {
  if (
    (n & 1 &&
      (je(0), k(1, uD, 3, 2, "ng-container", 2)(2, pD, 1, 1, null, 5), ze()),
    n & 2)
  ) {
    let e = w();
    p(),
      y("ngIf", !e.loadingIconTemplate),
      p(),
      y("ngTemplateOutlet", e.loadingIconTemplate)(
        "ngTemplateOutletContext",
        he(3, e0, e.iconClass())
      );
  }
}
function fD(n, t) {
  if ((n & 1 && U(0, "span", 8), n & 2)) {
    let e = w(2);
    y("ngClass", e.iconClass()), ae("data-pc-section", "icon");
  }
}
function gD(n, t) {}
function _D(n, t) {
  if ((n & 1 && k(0, gD, 0, 0, "ng-template", 10), n & 2)) {
    let e = w(2);
    y("ngIf", !e.icon && e.iconTemplate);
  }
}
function bD(n, t) {
  if (
    (n & 1 && (je(0), k(1, fD, 1, 2, "span", 6)(2, _D, 1, 1, null, 5), ze()),
    n & 2)
  ) {
    let e = w();
    p(),
      y("ngIf", e.icon && !e.iconTemplate),
      p(),
      y("ngTemplateOutlet", e.iconTemplate)(
        "ngTemplateOutletContext",
        he(3, e0, e.iconClass())
      );
  }
}
function vD(n, t) {
  if ((n & 1 && (c(0, "span", 11), h(1), l()), n & 2)) {
    let e = w();
    ae("aria-hidden", e.icon && !e.label)("data-pc-section", "label"),
      p(),
      N(e.label);
  }
}
function yD(n, t) {
  if ((n & 1 && (c(0, "span", 8), h(1), l()), n & 2)) {
    let e = w();
    Ae(e.badgeClass),
      y("ngClass", e.badgeStyleClass()),
      ae("data-pc-section", "badge"),
      p(),
      N(e.badge);
  }
}
var mo = {
    button: "p-button",
    component: "p-component",
    iconOnly: "p-button-icon-only",
    disabled: "p-disabled",
    loading: "p-button-loading",
    labelOnly: "p-button-loading-label-only",
  },
  t0 = (() => {
    class n {
      el;
      document;
      iconPos = "left";
      loadingIcon;
      get label() {
        return this._label;
      }
      set label(e) {
        (this._label = e),
          this.initialized &&
            (this.updateLabel(), this.updateIcon(), this.setStyleClass());
      }
      get icon() {
        return this._icon;
      }
      set icon(e) {
        (this._icon = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      get loading() {
        return this._loading;
      }
      set loading(e) {
        (this._loading = e),
          this.initialized && (this.updateIcon(), this.setStyleClass());
      }
      severity;
      raised = !1;
      rounded = !1;
      text = !1;
      outlined = !1;
      size = null;
      plain = !1;
      _label;
      _icon;
      _loading = !1;
      initialized;
      get htmlElement() {
        return this.el.nativeElement;
      }
      _internalClasses = Object.values(mo);
      constructor(e, i) {
        (this.el = e), (this.document = i);
      }
      ngAfterViewInit() {
        de.addMultipleClasses(this.htmlElement, this.getStyleClass().join(" ")),
          this.createIcon(),
          this.createLabel(),
          (this.initialized = !0);
      }
      getStyleClass() {
        let e = [mo.button, mo.component];
        return (
          this.icon &&
            !this.label &&
            Fi.isEmpty(this.htmlElement.textContent) &&
            e.push(mo.iconOnly),
          this.loading &&
            (e.push(mo.disabled, mo.loading),
            !this.icon && this.label && e.push(mo.labelOnly),
            this.icon &&
              !this.label &&
              !Fi.isEmpty(this.htmlElement.textContent) &&
              e.push(mo.iconOnly)),
          this.text && e.push("p-button-text"),
          this.severity && e.push(`p-button-${this.severity}`),
          this.plain && e.push("p-button-plain"),
          this.raised && e.push("p-button-raised"),
          this.size && e.push(`p-button-${this.size}`),
          this.outlined && e.push("p-button-outlined"),
          this.rounded && e.push("p-button-rounded"),
          this.size === "small" && e.push("p-button-sm"),
          this.size === "large" && e.push("p-button-lg"),
          e
        );
      }
      setStyleClass() {
        let e = this.getStyleClass();
        this.htmlElement.classList.remove(...this._internalClasses),
          this.htmlElement.classList.add(...e);
      }
      createLabel() {
        if (!de.findSingle(this.htmlElement, ".p-button-label") && this.label) {
          let i = this.document.createElement("span");
          this.icon && !this.label && i.setAttribute("aria-hidden", "true"),
            (i.className = "p-button-label"),
            i.appendChild(this.document.createTextNode(this.label)),
            this.htmlElement.appendChild(i);
        }
      }
      createIcon() {
        if (
          !de.findSingle(this.htmlElement, ".p-button-icon") &&
          (this.icon || this.loading)
        ) {
          let i = this.document.createElement("span");
          (i.className = "p-button-icon"),
            i.setAttribute("aria-hidden", "true");
          let o = this.label ? "p-button-icon-" + this.iconPos : null;
          o && de.addClass(i, o);
          let r = this.getIconClass();
          r && de.addMultipleClasses(i, r),
            this.htmlElement.insertBefore(i, this.htmlElement.firstChild);
        }
      }
      updateLabel() {
        let e = de.findSingle(this.htmlElement, ".p-button-label");
        if (!this.label) {
          e && this.htmlElement.removeChild(e);
          return;
        }
        e ? (e.textContent = this.label) : this.createLabel();
      }
      updateIcon() {
        let e = de.findSingle(this.htmlElement, ".p-button-icon"),
          i = de.findSingle(this.htmlElement, ".p-button-label");
        e
          ? this.iconPos
            ? (e.className =
                "p-button-icon " +
                (i ? "p-button-icon-" + this.iconPos : "") +
                " " +
                this.getIconClass())
            : (e.className = "p-button-icon " + this.getIconClass())
          : this.createIcon();
      }
      getIconClass() {
        return this.loading
          ? "p-button-loading-icon pi-spin " +
              (this.loadingIcon ?? "pi pi-spinner")
          : this.icon || "p-hidden";
      }
      ngOnDestroy() {
        this.initialized = !1;
      }
      static ɵfac = function (i) {
        return new (i || n)(B(ke), B(Le));
      };
      static ɵdir = Te({
        type: n,
        selectors: [["", "pButton", ""]],
        hostAttrs: [1, "p-element"],
        inputs: {
          iconPos: "iconPos",
          loadingIcon: "loadingIcon",
          label: "label",
          icon: "icon",
          loading: "loading",
          severity: "severity",
          raised: [2, "raised", "raised", xe],
          rounded: [2, "rounded", "rounded", xe],
          text: [2, "text", "text", xe],
          outlined: [2, "outlined", "outlined", xe],
          size: "size",
          plain: [2, "plain", "plain", xe],
        },
        standalone: !0,
        features: [kt],
      });
    }
    return n;
  })(),
  xD = (() => {
    class n {
      el;
      type = "button";
      iconPos = "left";
      icon;
      badge;
      label;
      disabled;
      loading = !1;
      loadingIcon;
      raised = !1;
      rounded = !1;
      text = !1;
      plain = !1;
      severity;
      outlined = !1;
      link = !1;
      tabindex;
      size;
      style;
      styleClass;
      badgeClass;
      ariaLabel;
      autofocus;
      onClick = new ve();
      onFocus = new ve();
      onBlur = new ve();
      contentTemplate;
      loadingIconTemplate;
      iconTemplate;
      templates;
      constructor(e) {
        this.el = e;
      }
      spinnerIconClass() {
        return Object.entries(this.iconClass())
          .filter(([, e]) => !!e)
          .reduce((e, [i]) => e + ` ${i}`, "p-button-loading-icon");
      }
      iconClass() {
        let e = {
          "p-button-icon": !0,
          "p-button-icon-left": this.iconPos === "left" && this.label,
          "p-button-icon-right": this.iconPos === "right" && this.label,
          "p-button-icon-top": this.iconPos === "top" && this.label,
          "p-button-icon-bottom": this.iconPos === "bottom" && this.label,
        };
        return (
          this.loading
            ? (e[`p-button-loading-icon pi-spin ${this.loadingIcon ?? ""}`] =
                !0)
            : this.icon && (e[this.icon] = !0),
          e
        );
      }
      get buttonClass() {
        return {
          "p-button p-component": !0,
          "p-button-icon-only":
            (this.icon ||
              this.iconTemplate ||
              this.loadingIcon ||
              this.loadingIconTemplate) &&
            !this.label,
          "p-button-vertical":
            (this.iconPos === "top" || this.iconPos === "bottom") && this.label,
          "p-button-loading": this.loading,
          "p-button-loading-label-only":
            this.loading &&
            !this.icon &&
            this.label &&
            !this.loadingIcon &&
            this.iconPos === "left",
          "p-button-link": this.link,
          [`p-button-${this.severity}`]: this.severity,
          "p-button-raised": this.raised,
          "p-button-rounded": this.rounded,
          "p-button-text": this.text,
          "p-button-outlined": this.outlined,
          "p-button-sm": this.size === "small",
          "p-button-lg": this.size === "large",
          "p-button-plain": this.plain,
          [`${this.styleClass}`]: this.styleClass,
        };
      }
      ngAfterContentInit() {
        this.templates?.forEach((e) => {
          switch (e.getType()) {
            case "content":
              this.contentTemplate = e.template;
              break;
            case "icon":
              this.iconTemplate = e.template;
              break;
            case "loadingicon":
              this.loadingIconTemplate = e.template;
              break;
            default:
              this.contentTemplate = e.template;
              break;
          }
        });
      }
      badgeStyleClass() {
        return {
          "p-badge p-component": !0,
          "p-badge-no-gutter": this.badge && String(this.badge).length === 1,
        };
      }
      focus() {
        this.el.nativeElement.firstChild.focus();
      }
      static ɵfac = function (i) {
        return new (i || n)(B(ke));
      };
      static ɵcmp = oe({
        type: n,
        selectors: [["p-button"]],
        contentQueries: function (i, o, r) {
          if ((i & 1 && xn(r, Ha, 4), i & 2)) {
            let a;
            rt((a = at())) && (o.templates = a);
          }
        },
        hostAttrs: [1, "p-element"],
        hostVars: 2,
        hostBindings: function (i, o) {
          i & 2 && fe("p-disabled", o.disabled);
        },
        inputs: {
          type: "type",
          iconPos: "iconPos",
          icon: "icon",
          badge: "badge",
          label: "label",
          disabled: [2, "disabled", "disabled", xe],
          loading: [2, "loading", "loading", xe],
          loadingIcon: "loadingIcon",
          raised: [2, "raised", "raised", xe],
          rounded: [2, "rounded", "rounded", xe],
          text: [2, "text", "text", xe],
          plain: [2, "plain", "plain", xe],
          severity: "severity",
          outlined: [2, "outlined", "outlined", xe],
          link: [2, "link", "link", xe],
          tabindex: [2, "tabindex", "tabindex", Hi],
          size: "size",
          style: "style",
          styleClass: "styleClass",
          badgeClass: "badgeClass",
          ariaLabel: "ariaLabel",
          autofocus: [2, "autofocus", "autofocus", xe],
        },
        outputs: { onClick: "onClick", onFocus: "onFocus", onBlur: "onBlur" },
        standalone: !0,
        features: [kt, re],
        ngContentSelectors: sD,
        decls: 7,
        vars: 14,
        consts: [
          [
            "pRipple",
            "",
            "pAutoFocus",
            "",
            3,
            "click",
            "focus",
            "blur",
            "ngStyle",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngTemplateOutlet"],
          [4, "ngIf"],
          ["class", "p-button-label", 4, "ngIf"],
          [3, "ngClass", "class", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "ngClass", 4, "ngIf"],
          [3, "styleClass", "spin", 4, "ngIf"],
          [3, "ngClass"],
          [3, "styleClass", "spin"],
          [3, "ngIf"],
          [1, "p-button-label"],
        ],
        template: function (i, o) {
          i & 1 &&
            (Lt(),
            c(0, "button", 0),
            F("click", function (a) {
              return o.onClick.emit(a);
            })("focus", function (a) {
              return o.onFocus.emit(a);
            })("blur", function (a) {
              return o.onBlur.emit(a);
            }),
            wt(1),
            k(2, lD, 1, 0, "ng-container", 1)(3, mD, 3, 5, "ng-container", 2)(
              4,
              bD,
              3,
              5,
              "ng-container",
              2
            )(5, vD, 2, 3, "span", 3)(6, yD, 2, 5, "span", 4),
            l()),
            i & 2 &&
              (y("ngStyle", o.style)("disabled", o.disabled || o.loading)(
                "ngClass",
                o.buttonClass
              )("autofocus", o.autofocus),
              ae("type", o.type)("aria-label", o.ariaLabel)(
                "data-pc-name",
                "button"
              )("data-pc-section", "root")("tabindex", o.tabindex),
              p(2),
              y("ngTemplateOutlet", o.contentTemplate),
              p(),
              y("ngIf", o.loading),
              p(),
              y("ngIf", !o.loading),
              p(),
              y("ngIf", !o.contentTemplate && o.label),
              p(),
              y("ngIf", !o.contentTemplate && o.badge));
        },
        dependencies: [Ke, lr, sr, It, Fl, Rl, Zg],
        encapsulation: 2,
        changeDetection: 0,
      });
    }
    return n;
  })(),
  Gu = (() => {
    class n {
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = _e({ type: n });
      static ɵinj = ge({ imports: [xD, ln] });
    }
    return n;
  })();
var Yu = (() => {
  class n extends li {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = ut(n)))(o || n);
      };
    })();
    static ɵcmp = oe({
      type: n,
      selectors: [["ChevronLeftIcon"]],
      standalone: !0,
      features: [$e, re],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M9.61296 13C9.50997 13.0005 9.40792 12.9804 9.3128 12.9409C9.21767 12.9014 9.13139 12.8433 9.05902 12.7701L3.83313 7.54416C3.68634 7.39718 3.60388 7.19795 3.60388 6.99022C3.60388 6.78249 3.68634 6.58325 3.83313 6.43628L9.05902 1.21039C9.20762 1.07192 9.40416 0.996539 9.60724 1.00012C9.81032 1.00371 10.0041 1.08597 10.1477 1.22959C10.2913 1.37322 10.3736 1.56698 10.3772 1.77005C10.3808 1.97313 10.3054 2.16968 10.1669 2.31827L5.49496 6.99022L10.1669 11.6622C10.3137 11.8091 10.3962 12.0084 10.3962 12.2161C10.3962 12.4238 10.3137 12.6231 10.1669 12.7701C10.0945 12.8433 10.0083 12.9014 9.91313 12.9409C9.81801 12.9804 9.71596 13.0005 9.61296 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, o) {
        i & 1 && (ct(), c(0, "svg", 0), U(1, "path", 1), l()),
          i & 2 &&
            (Ae(o.getClassNames()),
            ae("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var ja = (() => {
  class n extends li {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = ut(n)))(o || n);
      };
    })();
    static ɵcmp = oe({
      type: n,
      selectors: [["ChevronRightIcon"]],
      standalone: !0,
      features: [$e, re],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M4.38708 13C4.28408 13.0005 4.18203 12.9804 4.08691 12.9409C3.99178 12.9014 3.9055 12.8433 3.83313 12.7701C3.68634 12.6231 3.60388 12.4238 3.60388 12.2161C3.60388 12.0084 3.68634 11.8091 3.83313 11.6622L8.50507 6.99022L3.83313 2.31827C3.69467 2.16968 3.61928 1.97313 3.62287 1.77005C3.62645 1.56698 3.70872 1.37322 3.85234 1.22959C3.99596 1.08597 4.18972 1.00371 4.3928 1.00012C4.59588 0.996539 4.79242 1.07192 4.94102 1.21039L10.1669 6.43628C10.3137 6.58325 10.3962 6.78249 10.3962 6.99022C10.3962 7.19795 10.3137 7.39718 10.1669 7.54416L4.94102 12.7701C4.86865 12.8433 4.78237 12.9014 4.68724 12.9409C4.59212 12.9804 4.49007 13.0005 4.38708 13Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, o) {
        i & 1 && (ct(), c(0, "svg", 0), U(1, "path", 1), l()),
          i & 2 &&
            (Ae(o.getClassNames()),
            ae("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var qu = (() => {
  class n extends li {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = ut(n)))(o || n);
      };
    })();
    static ɵcmp = oe({
      type: n,
      selectors: [["ChevronUpIcon"]],
      standalone: !0,
      features: [$e, re],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M12.2097 10.4113C12.1057 10.4118 12.0027 10.3915 11.9067 10.3516C11.8107 10.3118 11.7237 10.2532 11.6506 10.1792L6.93602 5.46461L2.22139 10.1476C2.07272 10.244 1.89599 10.2877 1.71953 10.2717C1.54307 10.2556 1.3771 10.1808 1.24822 10.0593C1.11933 9.93766 1.035 9.77633 1.00874 9.6011C0.982477 9.42587 1.0158 9.2469 1.10338 9.09287L6.37701 3.81923C6.52533 3.6711 6.72639 3.58789 6.93602 3.58789C7.14565 3.58789 7.3467 3.6711 7.49502 3.81923L12.7687 9.09287C12.9168 9.24119 13 9.44225 13 9.65187C13 9.8615 12.9168 10.0626 12.7687 10.2109C12.616 10.3487 12.4151 10.4207 12.2097 10.4113Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, o) {
        i & 1 && (ct(), c(0, "svg", 0), U(1, "path", 1), l()),
          i & 2 &&
            (Ae(o.getClassNames()),
            ae("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Ku = (() => {
  class n extends li {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = ut(n)))(o || n);
      };
    })();
    static ɵcmp = oe({
      type: n,
      selectors: [["ChevronDownIcon"]],
      standalone: !0,
      features: [$e, re],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, o) {
        i & 1 && (ct(), c(0, "svg", 0), U(1, "path", 1), l()),
          i & 2 &&
            (Ae(o.getClassNames()),
            ae("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Qu = (() => {
  class n extends li {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = ut(n)))(o || n);
      };
    })();
    static ɵcmp = oe({
      type: n,
      selectors: [["TimesIcon"]],
      standalone: !0,
      features: [$e, re],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, o) {
        i & 1 && (ct(), c(0, "svg", 0), U(1, "path", 1), l()),
          i & 2 &&
            (Ae(o.getClassNames()),
            ae("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var Xu = (() => {
  class n extends li {
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = ut(n)))(o || n);
      };
    })();
    static ɵcmp = oe({
      type: n,
      selectors: [["CalendarIcon"]],
      standalone: !0,
      features: [$e, re],
      decls: 2,
      vars: 5,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "d",
          "M10.7838 1.51351H9.83783V0.567568C9.83783 0.417039 9.77804 0.272676 9.6716 0.166237C9.56516 0.0597971 9.42079 0 9.27027 0C9.11974 0 8.97538 0.0597971 8.86894 0.166237C8.7625 0.272676 8.7027 0.417039 8.7027 0.567568V1.51351H5.29729V0.567568C5.29729 0.417039 5.2375 0.272676 5.13106 0.166237C5.02462 0.0597971 4.88025 0 4.72973 0C4.5792 0 4.43484 0.0597971 4.3284 0.166237C4.22196 0.272676 4.16216 0.417039 4.16216 0.567568V1.51351H3.21621C2.66428 1.51351 2.13494 1.73277 1.74467 2.12305C1.35439 2.51333 1.13513 3.04266 1.13513 3.59459V11.9189C1.13513 12.4709 1.35439 13.0002 1.74467 13.3905C2.13494 13.7807 2.66428 14 3.21621 14H10.7838C11.3357 14 11.865 13.7807 12.2553 13.3905C12.6456 13.0002 12.8649 12.4709 12.8649 11.9189V3.59459C12.8649 3.04266 12.6456 2.51333 12.2553 2.12305C11.865 1.73277 11.3357 1.51351 10.7838 1.51351ZM3.21621 2.64865H4.16216V3.59459C4.16216 3.74512 4.22196 3.88949 4.3284 3.99593C4.43484 4.10237 4.5792 4.16216 4.72973 4.16216C4.88025 4.16216 5.02462 4.10237 5.13106 3.99593C5.2375 3.88949 5.29729 3.74512 5.29729 3.59459V2.64865H8.7027V3.59459C8.7027 3.74512 8.7625 3.88949 8.86894 3.99593C8.97538 4.10237 9.11974 4.16216 9.27027 4.16216C9.42079 4.16216 9.56516 4.10237 9.6716 3.99593C9.77804 3.88949 9.83783 3.74512 9.83783 3.59459V2.64865H10.7838C11.0347 2.64865 11.2753 2.74831 11.4527 2.92571C11.6301 3.10311 11.7297 3.34371 11.7297 3.59459V5.67568H2.27027V3.59459C2.27027 3.34371 2.36993 3.10311 2.54733 2.92571C2.72473 2.74831 2.96533 2.64865 3.21621 2.64865ZM10.7838 12.8649H3.21621C2.96533 12.8649 2.72473 12.7652 2.54733 12.5878C2.36993 12.4104 2.27027 12.1698 2.27027 11.9189V6.81081H11.7297V11.9189C11.7297 12.1698 11.6301 12.4104 11.4527 12.5878C11.2753 12.7652 11.0347 12.8649 10.7838 12.8649Z",
          "fill",
          "currentColor",
        ],
      ],
      template: function (i, o) {
        i & 1 && (ct(), c(0, "svg", 0), U(1, "path", 1), l()),
          i & 2 &&
            (Ae(o.getClassNames()),
            ae("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var wD = ["container"],
  DD = ["inputfield"],
  SD = ["contentWrapper"],
  MD = [[["p-header"]], [["p-footer"]]],
  TD = ["p-header", "p-footer"],
  ED = (n, t, e, i, o) => ({
    "p-calendar": !0,
    "p-input-icon-right": n,
    "p-calendar-w-btn": t,
    "p-calendar-timeonly": e,
    "p-calendar-disabled": i,
    "p-focus": o,
  }),
  kD = (n) => ({ clickCallBack: n }),
  OD = (n) => ({ "p-datepicker-icon": n }),
  ID = (n, t, e, i, o, r) => ({
    "p-datepicker p-component": !0,
    "p-datepicker-inline": n,
    "p-disabled": t,
    "p-datepicker-timeonly": e,
    "p-datepicker-multiple-month": i,
    "p-datepicker-monthpicker": o,
    "p-datepicker-touch-ui": r,
  }),
  i0 = (n, t) => ({ showTransitionParams: n, hideTransitionParams: t }),
  PD = (n) => ({ value: "visibleTouchUI", params: n }),
  AD = (n) => ({ value: "visible", params: n }),
  Zu = (n) => ({ $implicit: n }),
  RD = (n, t) => ({ "p-datepicker-other-month": n, "p-datepicker-today": t }),
  FD = (n, t) => ({
    "p-highlight p-datepicker-current-day": n,
    "p-disabled": t,
  }),
  o0 = (n, t) => ({ "p-highlight": n, "p-disabled": t }),
  n0 = (n) => [n];
function ND(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "TimesIcon", 11),
      F("click", function () {
        O(e);
        let o = w(3);
        return I(o.clear());
      }),
      l();
  }
  n & 2 && y("styleClass", "p-calendar-clear-icon");
}
function VD(n, t) {}
function LD(n, t) {
  n & 1 && k(0, VD, 0, 0, "ng-template");
}
function BD(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "span", 12),
      F("click", function () {
        O(e);
        let o = w(3);
        return I(o.clear());
      }),
      k(1, LD, 1, 0, null, 13),
      l();
  }
  if (n & 2) {
    let e = w(3);
    p(), y("ngTemplateOutlet", e.clearIconTemplate);
  }
}
function HD(n, t) {
  if (
    (n & 1 &&
      (je(0), k(1, ND, 1, 1, "TimesIcon", 9)(2, BD, 2, 1, "span", 10), ze()),
    n & 2)
  ) {
    let e = w(2);
    p(), y("ngIf", !e.clearIconTemplate), p(), y("ngIf", e.clearIconTemplate);
  }
}
function jD(n, t) {
  if ((n & 1 && U(0, "span", 16), n & 2)) {
    let e = w(3);
    y("ngClass", e.icon);
  }
}
function zD(n, t) {
  n & 1 && U(0, "CalendarIcon");
}
function UD(n, t) {}
function WD(n, t) {
  n & 1 && k(0, UD, 0, 0, "ng-template");
}
function $D(n, t) {
  if (
    (n & 1 &&
      (je(0), k(1, zD, 1, 0, "CalendarIcon", 7)(2, WD, 1, 0, null, 13), ze()),
    n & 2)
  ) {
    let e = w(3);
    p(),
      y("ngIf", !e.triggerIconTemplate),
      p(),
      y("ngTemplateOutlet", e.triggerIconTemplate);
  }
}
function GD(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 14),
      F("click", function (o) {
        O(e), w();
        let r = ht(1),
          a = w();
        return I(a.onButtonClick(o, r));
      }),
      k(1, jD, 1, 1, "span", 15)(2, $D, 3, 2, "ng-container", 7),
      l();
  }
  if (n & 2) {
    let e,
      i = w(2);
    y("disabled", i.disabled),
      ae("aria-label", i.iconButtonAriaLabel)(
        "aria-expanded",
        (e = i.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", i.overlayVisible ? i.panelId : null),
      p(),
      y("ngIf", i.icon),
      p(),
      y("ngIf", !i.icon);
  }
}
function YD(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "CalendarIcon", 19),
      F("click", function (o) {
        O(e);
        let r = w(3);
        return I(r.onButtonClick(o));
      }),
      l();
  }
  if (n & 2) {
    let e = w(3);
    y("ngClass", he(1, OD, e.showOnFocus));
  }
}
function qD(n, t) {
  n & 1 && rn(0);
}
function KD(n, t) {
  if (
    (n & 1 &&
      (je(0),
      k(1, YD, 1, 3, "CalendarIcon", 17)(2, qD, 1, 0, "ng-container", 18),
      ze()),
    n & 2)
  ) {
    let e = w(2);
    p(),
      y("ngIf", !e.inputIconTemplate),
      p(),
      y("ngTemplateOutlet", e.inputIconTemplate)(
        "ngTemplateOutletContext",
        he(3, kD, e.onButtonClick.bind(e))
      );
  }
}
function QD(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "input", 6, 1),
      F("focus", function (o) {
        O(e);
        let r = w();
        return I(r.onInputFocus(o));
      })("keydown", function (o) {
        O(e);
        let r = w();
        return I(r.onInputKeydown(o));
      })("click", function () {
        O(e);
        let o = w();
        return I(o.onInputClick());
      })("blur", function (o) {
        O(e);
        let r = w();
        return I(r.onInputBlur(o));
      })("input", function (o) {
        O(e);
        let r = w();
        return I(r.onUserInput(o));
      }),
      l(),
      k(2, HD, 3, 2, "ng-container", 7)(3, GD, 3, 6, "button", 8)(
        4,
        KD,
        3,
        5,
        "ng-container",
        7
      );
  }
  if (n & 2) {
    let e,
      i = w();
    Ae(i.inputStyleClass),
      y("value", i.inputFieldValue)("readonly", i.readonlyInput)(
        "ngStyle",
        i.inputStyle
      )("placeholder", i.placeholder || "")("disabled", i.disabled)(
        "ngClass",
        i.inputClass
      )("autofocus", i.autofocus),
      ae("id", i.inputId)("name", i.name)("required", i.required)(
        "aria-required",
        i.required
      )(
        "aria-expanded",
        (e = i.overlayVisible) !== null && e !== void 0 ? e : !1
      )("aria-controls", i.overlayVisible ? i.panelId : null)(
        "aria-labelledby",
        i.ariaLabelledBy
      )("aria-label", i.ariaLabel)("tabindex", i.tabindex)(
        "inputmode",
        i.touchUI ? "off" : null
      ),
      p(2),
      y("ngIf", i.showClear && !i.disabled && i.value != null),
      p(),
      y("ngIf", i.showIcon && i.iconDisplay === "button"),
      p(),
      y("ngIf", i.iconDisplay === "input" && i.showIcon);
  }
}
function XD(n, t) {
  n & 1 && rn(0);
}
function ZD(n, t) {
  n & 1 && U(0, "ChevronLeftIcon", 40),
    n & 2 && y("styleClass", "p-datepicker-prev-icon");
}
function JD(n, t) {}
function eS(n, t) {
  n & 1 && k(0, JD, 0, 0, "ng-template");
}
function tS(n, t) {
  if ((n & 1 && (c(0, "span", 41), k(1, eS, 1, 0, null, 13), l()), n & 2)) {
    let e = w(5);
    p(), y("ngTemplateOutlet", e.previousIconTemplate);
  }
}
function iS(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 38),
      F("keydown", function (o) {
        O(e);
        let r = w(4);
        return I(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        O(e);
        let r = w(4);
        return I(r.onPrevButtonClick(o));
      }),
      k(1, ZD, 1, 1, "ChevronLeftIcon", 35)(2, tS, 2, 1, "span", 39),
      l();
  }
  if (n & 2) {
    let e = w(4);
    ae("aria-label", e.prevIconAriaLabel),
      p(),
      y("ngIf", !e.previousIconTemplate),
      p(),
      y("ngIf", e.previousIconTemplate);
  }
}
function nS(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 42),
      F("click", function (o) {
        O(e);
        let r = w(4);
        return I(r.switchToMonthView(o));
      })("keydown", function (o) {
        O(e);
        let r = w(4);
        return I(r.onContainerButtonKeydown(o));
      }),
      h(1),
      l();
  }
  if (n & 2) {
    let e = w().$implicit,
      i = w(3);
    y("disabled", i.switchViewButtonDisabled()),
      ae("aria-label", i.getTranslation("chooseMonth")),
      p(),
      K(" ", i.getMonthName(e.month), " ");
  }
}
function oS(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 43),
      F("click", function (o) {
        O(e);
        let r = w(4);
        return I(r.switchToYearView(o));
      })("keydown", function (o) {
        O(e);
        let r = w(4);
        return I(r.onContainerButtonKeydown(o));
      }),
      h(1),
      l();
  }
  if (n & 2) {
    let e = w().$implicit,
      i = w(3);
    y("disabled", i.switchViewButtonDisabled()),
      ae("aria-label", i.getTranslation("chooseYear")),
      p(),
      K(" ", i.getYear(e), " ");
  }
}
function rS(n, t) {
  if ((n & 1 && (je(0), h(1), ze()), n & 2)) {
    let e = w(5);
    p(),
      Qr(
        "",
        e.yearPickerValues()[0],
        " - ",
        e.yearPickerValues()[e.yearPickerValues().length - 1],
        ""
      );
  }
}
function aS(n, t) {
  n & 1 && rn(0);
}
function sS(n, t) {
  if (
    (n & 1 &&
      (c(0, "span", 44),
      k(1, rS, 2, 2, "ng-container", 7)(2, aS, 1, 0, "ng-container", 18),
      l()),
    n & 2)
  ) {
    let e = w(4);
    p(),
      y("ngIf", !e.decadeTemplate),
      p(),
      y("ngTemplateOutlet", e.decadeTemplate)(
        "ngTemplateOutletContext",
        he(3, Zu, e.yearPickerValues)
      );
  }
}
function lS(n, t) {
  n & 1 && U(0, "ChevronRightIcon", 40),
    n & 2 && y("styleClass", "p-datepicker-next-icon");
}
function cS(n, t) {}
function dS(n, t) {
  n & 1 && k(0, cS, 0, 0, "ng-template");
}
function uS(n, t) {
  if ((n & 1 && (c(0, "span", 45), k(1, dS, 1, 0, null, 13), l()), n & 2)) {
    let e = w(4);
    p(), y("ngTemplateOutlet", e.nextIconTemplate);
  }
}
function hS(n, t) {
  if ((n & 1 && (c(0, "th", 51)(1, "span"), h(2), l()()), n & 2)) {
    let e = w(5);
    p(2), N(e.getTranslation("weekHeader"));
  }
}
function pS(n, t) {
  if ((n & 1 && (c(0, "th", 52)(1, "span"), h(2), l()()), n & 2)) {
    let e = t.$implicit;
    p(2), N(e);
  }
}
function mS(n, t) {
  if ((n & 1 && (c(0, "td", 55)(1, "span", 56), h(2), l()()), n & 2)) {
    let e = w().index,
      i = w(2).$implicit;
    p(2), K(" ", i.weekNumbers[e], " ");
  }
}
function fS(n, t) {
  if ((n & 1 && (je(0), h(1), ze()), n & 2)) {
    let e = w(2).$implicit;
    p(), N(e.day);
  }
}
function gS(n, t) {
  n & 1 && rn(0);
}
function _S(n, t) {
  if ((n & 1 && (je(0), k(1, gS, 1, 0, "ng-container", 18), ze()), n & 2)) {
    let e = w(2).$implicit,
      i = w(6);
    p(),
      y("ngTemplateOutlet", i.dateTemplate)(
        "ngTemplateOutletContext",
        he(2, Zu, e)
      );
  }
}
function bS(n, t) {
  n & 1 && rn(0);
}
function vS(n, t) {
  if ((n & 1 && (je(0), k(1, bS, 1, 0, "ng-container", 18), ze()), n & 2)) {
    let e = w(2).$implicit,
      i = w(6);
    p(),
      y("ngTemplateOutlet", i.disabledDateTemplate)(
        "ngTemplateOutletContext",
        he(2, Zu, e)
      );
  }
}
function yS(n, t) {
  if ((n & 1 && (c(0, "div", 59), h(1), l()), n & 2)) {
    let e = w(2).$implicit;
    p(), K(" ", e.day, " ");
  }
}
function xS(n, t) {
  if (n & 1) {
    let e = ee();
    je(0),
      c(1, "span", 57),
      F("click", function (o) {
        O(e);
        let r = w().$implicit,
          a = w(6);
        return I(a.onDateSelect(o, r));
      })("keydown", function (o) {
        O(e);
        let r = w().$implicit,
          a = w(3).index,
          d = w(3);
        return I(d.onDateCellKeydown(o, r, a));
      }),
      k(2, fS, 2, 1, "ng-container", 7)(3, _S, 2, 4, "ng-container", 7)(
        4,
        vS,
        2,
        4,
        "ng-container",
        7
      ),
      l(),
      k(5, yS, 2, 1, "div", 58),
      ze();
  }
  if (n & 2) {
    let e = w().$implicit,
      i = w(6);
    p(),
      y("ngClass", Bi(6, FD, i.isSelected(e) && e.selectable, !e.selectable)),
      ae("data-date", i.formatDateKey(i.formatDateMetaToDate(e))),
      p(),
      y("ngIf", !i.dateTemplate && (e.selectable || !i.disabledDateTemplate)),
      p(),
      y("ngIf", e.selectable || !i.disabledDateTemplate),
      p(),
      y("ngIf", !e.selectable),
      p(),
      y("ngIf", i.isSelected(e));
  }
}
function CS(n, t) {
  if (
    (n & 1 && (c(0, "td", 16), k(1, xS, 6, 9, "ng-container", 7), l()), n & 2)
  ) {
    let e = t.$implicit,
      i = w(6);
    y("ngClass", Bi(3, RD, e.otherMonth, e.today)),
      ae("aria-label", e.day),
      p(),
      y("ngIf", e.otherMonth ? i.showOtherMonths : !0);
  }
}
function wS(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr"), k(1, mS, 3, 1, "td", 53)(2, CS, 2, 6, "td", 54), l()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = w(5);
    p(), y("ngIf", i.showWeek), p(), y("ngForOf", e);
  }
}
function DS(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 46)(1, "table", 47)(2, "thead")(3, "tr"),
      k(4, hS, 3, 1, "th", 48)(5, pS, 3, 1, "th", 49),
      l()(),
      c(6, "tbody"),
      k(7, wS, 3, 2, "tr", 50),
      l()()()),
    n & 2)
  ) {
    let e = w().$implicit,
      i = w(3);
    p(4),
      y("ngIf", i.showWeek),
      p(),
      y("ngForOf", i.weekDays),
      p(2),
      y("ngForOf", e.dates);
  }
}
function SS(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 27)(1, "div", 28),
      k(2, iS, 3, 3, "button", 29),
      c(3, "div", 30),
      k(4, nS, 2, 3, "button", 31)(5, oS, 2, 3, "button", 32)(
        6,
        sS,
        3,
        5,
        "span",
        33
      ),
      l(),
      c(7, "button", 34),
      F("keydown", function (o) {
        O(e);
        let r = w(3);
        return I(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        O(e);
        let r = w(3);
        return I(r.onNextButtonClick(o));
      }),
      k(8, lS, 1, 1, "ChevronRightIcon", 35)(9, uS, 2, 1, "span", 36),
      l()(),
      k(10, DS, 8, 3, "div", 37),
      l();
  }
  if (n & 2) {
    let e = t.index,
      i = w(3);
    p(2),
      y("ngIf", e === 0),
      p(2),
      y("ngIf", i.currentView === "date"),
      p(),
      y("ngIf", i.currentView !== "year"),
      p(),
      y("ngIf", i.currentView === "year"),
      p(),
      gi(
        "display",
        i.numberOfMonths === 1 || e === i.numberOfMonths - 1
          ? "inline-flex"
          : "none"
      ),
      ae("aria-label", i.nextIconAriaLabel),
      p(),
      y("ngIf", !i.nextIconTemplate),
      p(),
      y("ngIf", i.nextIconTemplate),
      p(),
      y("ngIf", i.currentView === "date");
  }
}
function MS(n, t) {
  if ((n & 1 && (c(0, "div", 59), h(1), l()), n & 2)) {
    let e = w().$implicit;
    p(), K(" ", e, " ");
  }
}
function TS(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "span", 62),
      F("click", function (o) {
        let r = O(e).index,
          a = w(4);
        return I(a.onMonthSelect(o, r));
      })("keydown", function (o) {
        let r = O(e).index,
          a = w(4);
        return I(a.onMonthCellKeydown(o, r));
      }),
      h(1),
      k(2, MS, 2, 1, "div", 58),
      l();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      o = w(4);
    y("ngClass", Bi(3, o0, o.isMonthSelected(i), o.isMonthDisabled(i))),
      p(),
      K(" ", e, " "),
      p(),
      y("ngIf", o.isMonthSelected(i));
  }
}
function ES(n, t) {
  if ((n & 1 && (c(0, "div", 60), k(1, TS, 3, 6, "span", 61), l()), n & 2)) {
    let e = w(3);
    p(), y("ngForOf", e.monthPickerValues());
  }
}
function kS(n, t) {
  if ((n & 1 && (c(0, "div", 59), h(1), l()), n & 2)) {
    let e = w().$implicit;
    p(), K(" ", e, " ");
  }
}
function OS(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "span", 65),
      F("click", function (o) {
        let r = O(e).$implicit,
          a = w(4);
        return I(a.onYearSelect(o, r));
      })("keydown", function (o) {
        let r = O(e).$implicit,
          a = w(4);
        return I(a.onYearCellKeydown(o, r));
      }),
      h(1),
      k(2, kS, 2, 1, "div", 58),
      l();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w(4);
    y("ngClass", Bi(3, o0, i.isYearSelected(e), i.isYearDisabled(e))),
      p(),
      K(" ", e, " "),
      p(),
      y("ngIf", i.isYearSelected(e));
  }
}
function IS(n, t) {
  if ((n & 1 && (c(0, "div", 63), k(1, OS, 3, 6, "span", 64), l()), n & 2)) {
    let e = w(3);
    p(), y("ngForOf", e.yearPickerValues());
  }
}
function PS(n, t) {
  if (
    (n & 1 &&
      (je(0),
      c(1, "div", 23),
      k(2, SS, 11, 10, "div", 24),
      l(),
      k(3, ES, 2, 1, "div", 25)(4, IS, 2, 1, "div", 26),
      ze()),
    n & 2)
  ) {
    let e = w(2);
    p(2),
      y("ngForOf", e.months),
      p(),
      y("ngIf", e.currentView === "month"),
      p(),
      y("ngIf", e.currentView === "year");
  }
}
function AS(n, t) {
  n & 1 && U(0, "ChevronUpIcon");
}
function RS(n, t) {}
function FS(n, t) {
  n & 1 && k(0, RS, 0, 0, "ng-template");
}
function NS(n, t) {
  n & 1 && (je(0), h(1, "0"), ze());
}
function VS(n, t) {
  n & 1 && U(0, "ChevronDownIcon");
}
function LS(n, t) {}
function BS(n, t) {
  n & 1 && k(0, LS, 0, 0, "ng-template");
}
function HS(n, t) {
  n & 1 && U(0, "ChevronUpIcon");
}
function jS(n, t) {}
function zS(n, t) {
  n & 1 && k(0, jS, 0, 0, "ng-template");
}
function US(n, t) {
  n & 1 && (je(0), h(1, "0"), ze());
}
function WS(n, t) {
  n & 1 && U(0, "ChevronDownIcon");
}
function $S(n, t) {}
function GS(n, t) {
  n & 1 && k(0, $S, 0, 0, "ng-template");
}
function YS(n, t) {
  if ((n & 1 && (c(0, "div", 69)(1, "span"), h(2), l()()), n & 2)) {
    let e = w(3);
    p(2), N(e.timeSeparator);
  }
}
function qS(n, t) {
  n & 1 && U(0, "ChevronUpIcon");
}
function KS(n, t) {}
function QS(n, t) {
  n & 1 && k(0, KS, 0, 0, "ng-template");
}
function XS(n, t) {
  n & 1 && (je(0), h(1, "0"), ze());
}
function ZS(n, t) {
  n & 1 && U(0, "ChevronDownIcon");
}
function JS(n, t) {}
function e2(n, t) {
  n & 1 && k(0, JS, 0, 0, "ng-template");
}
function t2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 74)(1, "button", 68),
      F("keydown", function (o) {
        O(e);
        let r = w(3);
        return I(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        O(e);
        let r = w(3);
        return I(r.incrementSecond(o));
      })("keydown.space", function (o) {
        O(e);
        let r = w(3);
        return I(r.incrementSecond(o));
      })("mousedown", function (o) {
        O(e);
        let r = w(3);
        return I(r.onTimePickerElementMouseDown(o, 2, 1));
      })("mouseup", function (o) {
        O(e);
        let r = w(3);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        O(e);
        let r = w(3);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        O(e);
        let r = w(3);
        return I(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        O(e);
        let o = w(3);
        return I(o.onTimePickerElementMouseLeave());
      }),
      k(2, qS, 1, 0, "ChevronUpIcon", 7)(3, QS, 1, 0, null, 13),
      l(),
      c(4, "span"),
      k(5, XS, 2, 0, "ng-container", 7),
      h(6),
      l(),
      c(7, "button", 68),
      F("keydown", function (o) {
        O(e);
        let r = w(3);
        return I(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        O(e);
        let r = w(3);
        return I(r.decrementSecond(o));
      })("keydown.space", function (o) {
        O(e);
        let r = w(3);
        return I(r.decrementSecond(o));
      })("mousedown", function (o) {
        O(e);
        let r = w(3);
        return I(r.onTimePickerElementMouseDown(o, 2, -1));
      })("mouseup", function (o) {
        O(e);
        let r = w(3);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        O(e);
        let r = w(3);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        O(e);
        let r = w(3);
        return I(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        O(e);
        let o = w(3);
        return I(o.onTimePickerElementMouseLeave());
      }),
      k(8, ZS, 1, 0, "ChevronDownIcon", 7)(9, e2, 1, 0, null, 13),
      l()();
  }
  if (n & 2) {
    let e = w(3);
    p(),
      ae("aria-label", e.getTranslation("nextSecond")),
      p(),
      y("ngIf", !e.incrementIconTemplate),
      p(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      p(2),
      y("ngIf", e.currentSecond < 10),
      p(),
      N(e.currentSecond),
      p(),
      ae("aria-label", e.getTranslation("prevSecond")),
      p(),
      y("ngIf", !e.decrementIconTemplate),
      p(),
      y("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function i2(n, t) {
  n & 1 && U(0, "ChevronUpIcon");
}
function n2(n, t) {}
function o2(n, t) {
  n & 1 && k(0, n2, 0, 0, "ng-template");
}
function r2(n, t) {
  n & 1 && U(0, "ChevronDownIcon");
}
function a2(n, t) {}
function s2(n, t) {
  n & 1 && k(0, a2, 0, 0, "ng-template");
}
function l2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 75)(1, "button", 76),
      F("keydown", function (o) {
        O(e);
        let r = w(3);
        return I(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        O(e);
        let r = w(3);
        return I(r.toggleAMPM(o));
      })("keydown.enter", function (o) {
        O(e);
        let r = w(3);
        return I(r.toggleAMPM(o));
      }),
      k(2, i2, 1, 0, "ChevronUpIcon", 7)(3, o2, 1, 0, null, 13),
      l(),
      c(4, "span"),
      h(5),
      l(),
      c(6, "button", 76),
      F("keydown", function (o) {
        O(e);
        let r = w(3);
        return I(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        O(e);
        let r = w(3);
        return I(r.toggleAMPM(o));
      })("keydown.enter", function (o) {
        O(e);
        let r = w(3);
        return I(r.toggleAMPM(o));
      }),
      k(7, r2, 1, 0, "ChevronDownIcon", 7)(8, s2, 1, 0, null, 13),
      l()();
  }
  if (n & 2) {
    let e = w(3);
    p(),
      ae("aria-label", e.getTranslation("am")),
      p(),
      y("ngIf", !e.incrementIconTemplate),
      p(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      p(2),
      N(e.pm ? "PM" : "AM"),
      p(),
      ae("aria-label", e.getTranslation("pm")),
      p(),
      y("ngIf", !e.decrementIconTemplate),
      p(),
      y("ngTemplateOutlet", e.decrementIconTemplate);
  }
}
function c2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 66)(1, "div", 67)(2, "button", 68),
      F("keydown", function (o) {
        O(e);
        let r = w(2);
        return I(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        O(e);
        let r = w(2);
        return I(r.incrementHour(o));
      })("keydown.space", function (o) {
        O(e);
        let r = w(2);
        return I(r.incrementHour(o));
      })("mousedown", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseDown(o, 0, 1));
      })("mouseup", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        O(e);
        let o = w(2);
        return I(o.onTimePickerElementMouseLeave());
      }),
      k(3, AS, 1, 0, "ChevronUpIcon", 7)(4, FS, 1, 0, null, 13),
      l(),
      c(5, "span"),
      k(6, NS, 2, 0, "ng-container", 7),
      h(7),
      l(),
      c(8, "button", 68),
      F("keydown", function (o) {
        O(e);
        let r = w(2);
        return I(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        O(e);
        let r = w(2);
        return I(r.decrementHour(o));
      })("keydown.space", function (o) {
        O(e);
        let r = w(2);
        return I(r.decrementHour(o));
      })("mousedown", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseDown(o, 0, -1));
      })("mouseup", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        O(e);
        let o = w(2);
        return I(o.onTimePickerElementMouseLeave());
      }),
      k(9, VS, 1, 0, "ChevronDownIcon", 7)(10, BS, 1, 0, null, 13),
      l()(),
      c(11, "div", 69)(12, "span"),
      h(13),
      l()(),
      c(14, "div", 70)(15, "button", 68),
      F("keydown", function (o) {
        O(e);
        let r = w(2);
        return I(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        O(e);
        let r = w(2);
        return I(r.incrementMinute(o));
      })("keydown.space", function (o) {
        O(e);
        let r = w(2);
        return I(r.incrementMinute(o));
      })("mousedown", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseDown(o, 1, 1));
      })("mouseup", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        O(e);
        let o = w(2);
        return I(o.onTimePickerElementMouseLeave());
      }),
      k(16, HS, 1, 0, "ChevronUpIcon", 7)(17, zS, 1, 0, null, 13),
      l(),
      c(18, "span"),
      k(19, US, 2, 0, "ng-container", 7),
      h(20),
      l(),
      c(21, "button", 68),
      F("keydown", function (o) {
        O(e);
        let r = w(2);
        return I(r.onContainerButtonKeydown(o));
      })("keydown.enter", function (o) {
        O(e);
        let r = w(2);
        return I(r.decrementMinute(o));
      })("keydown.space", function (o) {
        O(e);
        let r = w(2);
        return I(r.decrementMinute(o));
      })("mousedown", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseDown(o, 1, -1));
      })("mouseup", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.enter", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("keyup.space", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTimePickerElementMouseUp(o));
      })("mouseleave", function () {
        O(e);
        let o = w(2);
        return I(o.onTimePickerElementMouseLeave());
      }),
      k(22, WS, 1, 0, "ChevronDownIcon", 7)(23, GS, 1, 0, null, 13),
      l()(),
      k(24, YS, 3, 1, "div", 71)(25, t2, 10, 8, "div", 72)(
        26,
        l2,
        9,
        7,
        "div",
        73
      ),
      l();
  }
  if (n & 2) {
    let e = w(2);
    p(2),
      ae("aria-label", e.getTranslation("nextHour")),
      p(),
      y("ngIf", !e.incrementIconTemplate),
      p(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      p(2),
      y("ngIf", e.currentHour < 10),
      p(),
      N(e.currentHour),
      p(),
      ae("aria-label", e.getTranslation("prevHour")),
      p(),
      y("ngIf", !e.decrementIconTemplate),
      p(),
      y("ngTemplateOutlet", e.decrementIconTemplate),
      p(3),
      N(e.timeSeparator),
      p(2),
      ae("aria-label", e.getTranslation("nextMinute")),
      p(),
      y("ngIf", !e.incrementIconTemplate),
      p(),
      y("ngTemplateOutlet", e.incrementIconTemplate),
      p(2),
      y("ngIf", e.currentMinute < 10),
      p(),
      N(e.currentMinute),
      p(),
      ae("aria-label", e.getTranslation("prevMinute")),
      p(),
      y("ngIf", !e.decrementIconTemplate),
      p(),
      y("ngTemplateOutlet", e.decrementIconTemplate),
      p(),
      y("ngIf", e.showSeconds),
      p(),
      y("ngIf", e.showSeconds),
      p(),
      y("ngIf", e.hourFormat == "12");
  }
}
function d2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 77)(1, "button", 78),
      F("keydown", function (o) {
        O(e);
        let r = w(2);
        return I(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        O(e);
        let r = w(2);
        return I(r.onTodayButtonClick(o));
      }),
      l(),
      c(2, "button", 78),
      F("keydown", function (o) {
        O(e);
        let r = w(2);
        return I(r.onContainerButtonKeydown(o));
      })("click", function (o) {
        O(e);
        let r = w(2);
        return I(r.onClearButtonClick(o));
      }),
      l()();
  }
  if (n & 2) {
    let e = w(2);
    p(),
      y("label", e.getTranslation("today"))(
        "ngClass",
        he(4, n0, e.todayButtonStyleClass)
      ),
      p(),
      y("label", e.getTranslation("clear"))(
        "ngClass",
        he(6, n0, e.clearButtonStyleClass)
      );
  }
}
function u2(n, t) {
  n & 1 && rn(0);
}
function h2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 20, 2),
      F("@overlayAnimation.start", function (o) {
        O(e);
        let r = w();
        return I(r.onOverlayAnimationStart(o));
      })("@overlayAnimation.done", function (o) {
        O(e);
        let r = w();
        return I(r.onOverlayAnimationDone(o));
      })("click", function (o) {
        O(e);
        let r = w();
        return I(r.onOverlayClick(o));
      }),
      wt(2),
      k(3, XD, 1, 0, "ng-container", 13)(4, PS, 5, 3, "ng-container", 7)(
        5,
        c2,
        27,
        20,
        "div",
        21
      )(6, d2, 3, 8, "div", 22),
      wt(7, 1),
      k(8, u2, 1, 0, "ng-container", 13),
      l();
  }
  if (n & 2) {
    let e = w();
    Ae(e.panelStyleClass),
      y("ngStyle", e.panelStyle)(
        "ngClass",
        ip(
          15,
          ID,
          e.inline,
          e.disabled,
          e.timeOnly,
          e.numberOfMonths > 1,
          e.view === "month",
          e.touchUI
        )
      )(
        "@overlayAnimation",
        e.touchUI
          ? he(
              25,
              PD,
              Bi(22, i0, e.showTransitionOptions, e.hideTransitionOptions)
            )
          : he(
              30,
              AD,
              Bi(27, i0, e.showTransitionOptions, e.hideTransitionOptions)
            )
      )("@.disabled", e.inline === !0),
      ae("id", e.panelId)("aria-label", e.getTranslation("chooseDate"))(
        "role",
        e.inline ? null : "dialog"
      )("aria-modal", e.inline ? null : "true"),
      p(3),
      y("ngTemplateOutlet", e.headerTemplate),
      p(),
      y("ngIf", !e.timeOnly),
      p(),
      y("ngIf", (e.showTime || e.timeOnly) && e.currentView === "date"),
      p(),
      y("ngIf", e.showButtonBar),
      p(2),
      y("ngTemplateOutlet", e.footerTemplate);
  }
}
var p2 = { provide: ko, useExisting: ei(() => m2), multi: !0 },
  m2 = (() => {
    class n {
      document;
      el;
      renderer;
      cd;
      zone;
      config;
      overlayService;
      iconDisplay = "button";
      style;
      styleClass;
      inputStyle;
      inputId;
      name;
      inputStyleClass;
      placeholder;
      ariaLabelledBy;
      ariaLabel;
      iconAriaLabel;
      disabled;
      dateFormat;
      multipleSeparator = ",";
      rangeSeparator = "-";
      inline = !1;
      showOtherMonths = !0;
      selectOtherMonths;
      showIcon;
      icon;
      appendTo;
      readonlyInput;
      shortYearCutoff = "+10";
      monthNavigator;
      yearNavigator;
      hourFormat = "24";
      timeOnly;
      stepYearPicker = 10;
      stepHour = 1;
      stepMinute = 1;
      stepSecond = 1;
      showSeconds = !1;
      required;
      showOnFocus = !0;
      showWeek = !1;
      startWeekFromFirstDayOfYear = !1;
      showClear = !1;
      dataType = "date";
      selectionMode = "single";
      maxDateCount;
      showButtonBar;
      todayButtonStyleClass = "p-button-text";
      clearButtonStyleClass = "p-button-text";
      autofocus;
      autoZIndex = !0;
      baseZIndex = 0;
      panelStyleClass;
      panelStyle;
      keepInvalid = !1;
      hideOnDateTimeSelect = !0;
      touchUI;
      timeSeparator = ":";
      focusTrap = !0;
      showTransitionOptions = ".12s cubic-bezier(0, 0, 0.2, 1)";
      hideTransitionOptions = ".1s linear";
      tabindex;
      variant = "outlined";
      get minDate() {
        return this._minDate;
      }
      set minDate(e) {
        (this._minDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get maxDate() {
        return this._maxDate;
      }
      set maxDate(e) {
        (this._maxDate = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDates() {
        return this._disabledDates;
      }
      set disabledDates(e) {
        (this._disabledDates = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get disabledDays() {
        return this._disabledDays;
      }
      set disabledDays(e) {
        (this._disabledDays = e),
          this.currentMonth != null &&
            this.currentMonth != null &&
            this.currentYear &&
            this.createMonths(this.currentMonth, this.currentYear);
      }
      get yearRange() {
        return this._yearRange;
      }
      set yearRange(e) {
        if (((this._yearRange = e), e)) {
          let i = e.split(":"),
            o = parseInt(i[0]),
            r = parseInt(i[1]);
          this.populateYearOptions(o, r);
        }
      }
      get showTime() {
        return this._showTime;
      }
      set showTime(e) {
        (this._showTime = e),
          this.currentHour === void 0 &&
            this.initTime(this.value || new Date()),
          this.updateInputfield();
      }
      get responsiveOptions() {
        return this._responsiveOptions;
      }
      set responsiveOptions(e) {
        (this._responsiveOptions = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get numberOfMonths() {
        return this._numberOfMonths;
      }
      set numberOfMonths(e) {
        (this._numberOfMonths = e),
          this.destroyResponsiveStyleElement(),
          this.createResponsiveStyle();
      }
      get firstDayOfWeek() {
        return this._firstDayOfWeek;
      }
      set firstDayOfWeek(e) {
        (this._firstDayOfWeek = e), this.createWeekDays();
      }
      set locale(e) {
        console.warn(
          "Locale property has no effect, use new i18n API instead."
        );
      }
      get view() {
        return this._view;
      }
      set view(e) {
        (this._view = e), (this.currentView = this._view);
      }
      get defaultDate() {
        return this._defaultDate;
      }
      set defaultDate(e) {
        if (((this._defaultDate = e), this.initialized)) {
          let i = e || new Date();
          (this.currentMonth = i.getMonth()),
            (this.currentYear = i.getFullYear()),
            this.initTime(i),
            this.createMonths(this.currentMonth, this.currentYear);
        }
      }
      get inputClass() {
        return {
          "p-inputtext p-component": !0,
          "p-variant-filled":
            this.variant === "filled" || this.config.inputStyle() === "filled",
        };
      }
      onFocus = new ve();
      onBlur = new ve();
      onClose = new ve();
      onSelect = new ve();
      onClear = new ve();
      onInput = new ve();
      onTodayClick = new ve();
      onClearClick = new ve();
      onMonthChange = new ve();
      onYearChange = new ve();
      onClickOutside = new ve();
      onShow = new ve();
      templates;
      containerViewChild;
      inputfieldViewChild;
      set content(e) {
        (this.contentViewChild = e),
          this.contentViewChild &&
            (this.isMonthNavigate
              ? (Promise.resolve(null).then(() => this.updateFocus()),
                (this.isMonthNavigate = !1))
              : !this.focus && !this.inline && this.initFocusableCell());
      }
      contentViewChild;
      value;
      dates;
      months;
      weekDays;
      currentMonth;
      currentYear;
      currentHour;
      currentMinute;
      currentSecond;
      pm;
      mask;
      maskClickListener;
      overlay;
      responsiveStyleElement;
      overlayVisible;
      onModelChange = () => {};
      onModelTouched = () => {};
      calendarElement;
      timePickerTimer;
      documentClickListener;
      animationEndListener;
      ticksTo1970;
      yearOptions;
      focus;
      isKeydown;
      filled;
      inputFieldValue = null;
      _minDate;
      _maxDate;
      _showTime;
      _yearRange;
      preventDocumentListener;
      dateTemplate;
      headerTemplate;
      footerTemplate;
      disabledDateTemplate;
      decadeTemplate;
      previousIconTemplate;
      nextIconTemplate;
      triggerIconTemplate;
      clearIconTemplate;
      decrementIconTemplate;
      incrementIconTemplate;
      inputIconTemplate;
      _disabledDates;
      _disabledDays;
      selectElement;
      todayElement;
      focusElement;
      scrollHandler;
      documentResizeListener;
      navigationState = null;
      isMonthNavigate;
      initialized;
      translationSubscription;
      _locale;
      _responsiveOptions;
      currentView;
      attributeSelector;
      panelId;
      _numberOfMonths = 1;
      _firstDayOfWeek;
      _view = "date";
      preventFocus;
      _defaultDate;
      _focusKey = null;
      window;
      get locale() {
        return this._locale;
      }
      get iconButtonAriaLabel() {
        return this.iconAriaLabel
          ? this.iconAriaLabel
          : this.getTranslation("chooseDate");
      }
      get prevIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("prevDecade")
          : this.currentView === "month"
          ? this.getTranslation("prevYear")
          : this.getTranslation("prevMonth");
      }
      get nextIconAriaLabel() {
        return this.currentView === "year"
          ? this.getTranslation("nextDecade")
          : this.currentView === "month"
          ? this.getTranslation("nextYear")
          : this.getTranslation("nextMonth");
      }
      constructor(e, i, o, r, a, d, m) {
        (this.document = e),
          (this.el = i),
          (this.renderer = o),
          (this.cd = r),
          (this.zone = a),
          (this.config = d),
          (this.overlayService = m),
          (this.window = this.document.defaultView);
      }
      ngOnInit() {
        (this.attributeSelector = Ar()),
          (this.panelId = this.attributeSelector + "_panel");
        let e = this.defaultDate || new Date();
        this.createResponsiveStyle(),
          (this.currentMonth = e.getMonth()),
          (this.currentYear = e.getFullYear()),
          (this.yearOptions = []),
          (this.currentView = this.view),
          this.view === "date" &&
            (this.createWeekDays(),
            this.initTime(e),
            this.createMonths(this.currentMonth, this.currentYear),
            (this.ticksTo1970 =
              (1969 * 365 +
                Math.floor(1970 / 4) -
                Math.floor(1970 / 100) +
                Math.floor(1970 / 400)) *
              24 *
              60 *
              60 *
              1e7)),
          (this.translationSubscription =
            this.config.translationObserver.subscribe(() => {
              this.createWeekDays(), this.cd.markForCheck();
            })),
          (this.initialized = !0);
      }
      ngAfterContentInit() {
        this.templates.forEach((e) => {
          switch (e.getType()) {
            case "date":
              this.dateTemplate = e.template;
              break;
            case "decade":
              this.decadeTemplate = e.template;
              break;
            case "disabledDate":
              this.disabledDateTemplate = e.template;
              break;
            case "header":
              this.headerTemplate = e.template;
              break;
            case "inputicon":
              this.inputIconTemplate = e.template;
              break;
            case "previousicon":
              this.previousIconTemplate = e.template;
              break;
            case "nexticon":
              this.nextIconTemplate = e.template;
              break;
            case "triggericon":
              this.triggerIconTemplate = e.template;
              break;
            case "clearicon":
              this.clearIconTemplate = e.template;
              break;
            case "decrementicon":
              this.decrementIconTemplate = e.template;
              break;
            case "incrementicon":
              this.incrementIconTemplate = e.template;
              break;
            case "footer":
              this.footerTemplate = e.template;
              break;
            default:
              this.dateTemplate = e.template;
              break;
          }
        });
      }
      ngAfterViewInit() {
        this.inline &&
          (this.contentViewChild &&
            this.contentViewChild.nativeElement.setAttribute(
              this.attributeSelector,
              ""
            ),
          !this.disabled &&
            !this.inline &&
            (this.initFocusableCell(),
            this.numberOfMonths === 1 &&
              this.contentViewChild &&
              this.contentViewChild.nativeElement &&
              (this.contentViewChild.nativeElement.style.width =
                de.getOuterWidth(this.containerViewChild?.nativeElement) +
                "px")));
      }
      getTranslation(e) {
        return this.config.getTranslation(e);
      }
      populateYearOptions(e, i) {
        this.yearOptions = [];
        for (let o = e; o <= i; o++) this.yearOptions.push(o);
      }
      createWeekDays() {
        this.weekDays = [];
        let e = this.getFirstDateOfWeek(),
          i = this.getTranslation(cn.DAY_NAMES_MIN);
        for (let o = 0; o < 7; o++)
          this.weekDays.push(i[e]), (e = e == 6 ? 0 : ++e);
      }
      monthPickerValues() {
        let e = [];
        for (let i = 0; i <= 11; i++)
          e.push(this.config.getTranslation("monthNamesShort")[i]);
        return e;
      }
      yearPickerValues() {
        let e = [],
          i = this.currentYear - (this.currentYear % this.stepYearPicker);
        for (let o = 0; o < this.stepYearPicker; o++) e.push(i + o);
        return e;
      }
      createMonths(e, i) {
        this.months = this.months = [];
        for (let o = 0; o < this.numberOfMonths; o++) {
          let r = e + o,
            a = i;
          r > 11 && ((r = (r % 11) - 1), (a = i + 1)),
            this.months.push(this.createMonth(r, a));
        }
      }
      getWeekNumber(e) {
        let i = new Date(e.getTime());
        if (this.startWeekFromFirstDayOfYear) {
          let r = +this.getFirstDateOfWeek();
          i.setDate(i.getDate() + 6 + r - i.getDay());
        } else i.setDate(i.getDate() + 4 - (i.getDay() || 7));
        let o = i.getTime();
        return (
          i.setMonth(0),
          i.setDate(1),
          Math.floor(Math.round((o - i.getTime()) / 864e5) / 7) + 1
        );
      }
      createMonth(e, i) {
        let o = [],
          r = this.getFirstDayOfMonthIndex(e, i),
          a = this.getDaysCountInMonth(e, i),
          d = this.getDaysCountInPrevMonth(e, i),
          m = 1,
          _ = new Date(),
          v = [],
          S = Math.ceil((a + r) / 7);
        for (let T = 0; T < S; T++) {
          let M = [];
          if (T == 0) {
            for (let j = d - r + 1; j <= d; j++) {
              let z = this.getPreviousMonthAndYear(e, i);
              M.push({
                day: j,
                month: z.month,
                year: z.year,
                otherMonth: !0,
                today: this.isToday(_, j, z.month, z.year),
                selectable: this.isSelectable(j, z.month, z.year, !0),
              });
            }
            let A = 7 - M.length;
            for (let j = 0; j < A; j++)
              M.push({
                day: m,
                month: e,
                year: i,
                today: this.isToday(_, m, e, i),
                selectable: this.isSelectable(m, e, i, !1),
              }),
                m++;
          } else
            for (let A = 0; A < 7; A++) {
              if (m > a) {
                let j = this.getNextMonthAndYear(e, i);
                M.push({
                  day: m - a,
                  month: j.month,
                  year: j.year,
                  otherMonth: !0,
                  today: this.isToday(_, m - a, j.month, j.year),
                  selectable: this.isSelectable(m - a, j.month, j.year, !0),
                });
              } else
                M.push({
                  day: m,
                  month: e,
                  year: i,
                  today: this.isToday(_, m, e, i),
                  selectable: this.isSelectable(m, e, i, !1),
                });
              m++;
            }
          this.showWeek &&
            v.push(
              this.getWeekNumber(new Date(M[0].year, M[0].month, M[0].day))
            ),
            o.push(M);
        }
        return { month: e, year: i, dates: o, weekNumbers: v };
      }
      initTime(e) {
        (this.pm = e.getHours() > 11),
          this.showTime
            ? ((this.currentMinute = e.getMinutes()),
              (this.currentSecond = e.getSeconds()),
              this.setCurrentHourPM(e.getHours()))
            : this.timeOnly &&
              ((this.currentMinute = 0),
              (this.currentHour = 0),
              (this.currentSecond = 0));
      }
      navBackward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.decrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.decrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 0
                ? ((this.currentMonth = 11), this.decrementYear())
                : this.currentMonth--,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      navForward(e) {
        if (this.disabled) {
          e.preventDefault();
          return;
        }
        (this.isMonthNavigate = !0),
          this.currentView === "month"
            ? (this.incrementYear(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : this.currentView === "year"
            ? (this.incrementYearPickerStep(),
              setTimeout(() => {
                this.updateFocus();
              }, 1))
            : (this.currentMonth === 11
                ? ((this.currentMonth = 0), this.incrementYear())
                : this.currentMonth++,
              this.onMonthChange.emit({
                month: this.currentMonth + 1,
                year: this.currentYear,
              }),
              this.createMonths(this.currentMonth, this.currentYear));
      }
      decrementYear() {
        this.currentYear--;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear < e[0]) {
          let i = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] - i, e[e.length - 1] - i);
        }
      }
      decrementYearPickerStep() {
        this.currentYear = this.currentYear - this.stepYearPicker;
      }
      incrementYearPickerStep() {
        this.currentYear = this.currentYear + this.stepYearPicker;
      }
      incrementYear() {
        this.currentYear++;
        let e = this.yearOptions;
        if (this.yearNavigator && this.currentYear > e[e.length - 1]) {
          let i = e[e.length - 1] - e[0];
          this.populateYearOptions(e[0] + i, e[e.length - 1] + i);
        }
      }
      switchToMonthView(e) {
        this.setCurrentView("month"), e.preventDefault();
      }
      switchToYearView(e) {
        this.setCurrentView("year"), e.preventDefault();
      }
      onDateSelect(e, i) {
        if (this.disabled || !i.selectable) {
          e.preventDefault();
          return;
        }
        this.isMultipleSelection() && this.isSelected(i)
          ? ((this.value = this.value.filter(
              (o, r) => !this.isDateEquals(o, i)
            )),
            this.value.length === 0 && (this.value = null),
            this.updateModel(this.value))
          : this.shouldSelectDate(i) && this.selectDate(i),
          this.hideOnDateTimeSelect &&
            (this.isSingleSelection() ||
              (this.isRangeSelection() && this.value[1])) &&
            setTimeout(() => {
              e.preventDefault(),
                this.hideOverlay(),
                this.mask && this.disableModality(),
                this.cd.markForCheck();
            }, 150),
          this.updateInputfield(),
          e.preventDefault();
      }
      shouldSelectDate(e) {
        return this.isMultipleSelection() && this.maxDateCount != null
          ? this.maxDateCount > (this.value ? this.value.length : 0)
          : !0;
      }
      onMonthSelect(e, i) {
        this.view === "month"
          ? this.onDateSelect(e, {
              year: this.currentYear,
              month: i,
              day: 1,
              selectable: !0,
            })
          : ((this.currentMonth = i),
            this.createMonths(this.currentMonth, this.currentYear),
            this.setCurrentView("date"),
            this.onMonthChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      onYearSelect(e, i) {
        this.view === "year"
          ? this.onDateSelect(e, { year: i, month: 0, day: 1, selectable: !0 })
          : ((this.currentYear = i),
            this.setCurrentView("month"),
            this.onYearChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear,
            }));
      }
      updateInputfield() {
        let e = "";
        if (this.value) {
          if (this.isSingleSelection()) e = this.formatDateTime(this.value);
          else if (this.isMultipleSelection())
            for (let i = 0; i < this.value.length; i++) {
              let o = this.formatDateTime(this.value[i]);
              (e += o),
                i !== this.value.length - 1 &&
                  (e += this.multipleSeparator + " ");
            }
          else if (this.isRangeSelection() && this.value && this.value.length) {
            let i = this.value[0],
              o = this.value[1];
            (e = this.formatDateTime(i)),
              o &&
                (e += " " + this.rangeSeparator + " " + this.formatDateTime(o));
          }
        }
        (this.inputFieldValue = e),
          this.updateFilledState(),
          this.inputfieldViewChild &&
            this.inputfieldViewChild.nativeElement &&
            (this.inputfieldViewChild.nativeElement.value =
              this.inputFieldValue);
      }
      formatDateTime(e) {
        let i = this.keepInvalid ? e : null,
          o = this.isValidDateForTimeConstraints(e);
        return (
          this.isValidDate(e)
            ? this.timeOnly
              ? (i = this.formatTime(e))
              : ((i = this.formatDate(e, this.getDateFormat())),
                this.showTime && (i += " " + this.formatTime(e)))
            : this.dataType === "string" && (i = e),
          (i = o ? i : ""),
          i
        );
      }
      formatDateMetaToDate(e) {
        return new Date(e.year, e.month, e.day);
      }
      formatDateKey(e) {
        return `${e.getFullYear()}-${e.getMonth() + 1}-${e.getDate()}`;
      }
      setCurrentHourPM(e) {
        this.hourFormat == "12"
          ? ((this.pm = e > 11),
            e >= 12
              ? (this.currentHour = e == 12 ? 12 : e - 12)
              : (this.currentHour = e == 0 ? 12 : e))
          : (this.currentHour = e);
      }
      setCurrentView(e) {
        (this.currentView = e), this.cd.detectChanges(), this.alignOverlay();
      }
      selectDate(e) {
        let i = this.formatDateMetaToDate(e);
        if (
          (this.showTime &&
            (this.hourFormat == "12"
              ? this.currentHour === 12
                ? i.setHours(this.pm ? 12 : 0)
                : i.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
              : i.setHours(this.currentHour),
            i.setMinutes(this.currentMinute),
            i.setSeconds(this.currentSecond)),
          this.minDate &&
            this.minDate > i &&
            ((i = this.minDate),
            this.setCurrentHourPM(i.getHours()),
            (this.currentMinute = i.getMinutes()),
            (this.currentSecond = i.getSeconds())),
          this.maxDate &&
            this.maxDate < i &&
            ((i = this.maxDate),
            this.setCurrentHourPM(i.getHours()),
            (this.currentMinute = i.getMinutes()),
            (this.currentSecond = i.getSeconds())),
          this.isSingleSelection())
        )
          this.updateModel(i);
        else if (this.isMultipleSelection())
          this.updateModel(this.value ? [...this.value, i] : [i]);
        else if (this.isRangeSelection())
          if (this.value && this.value.length) {
            let o = this.value[0],
              r = this.value[1];
            !r && i.getTime() >= o.getTime() ? (r = i) : ((o = i), (r = null)),
              this.updateModel([o, r]);
          } else this.updateModel([i, null]);
        this.onSelect.emit(i);
      }
      updateModel(e) {
        if (((this.value = e), this.dataType == "date"))
          this.onModelChange(this.value);
        else if (this.dataType == "string")
          if (this.isSingleSelection())
            this.onModelChange(this.formatDateTime(this.value));
          else {
            let i = null;
            Array.isArray(this.value) &&
              (i = this.value.map((o) => this.formatDateTime(o))),
              this.onModelChange(i);
          }
      }
      getFirstDayOfMonthIndex(e, i) {
        let o = new Date();
        o.setDate(1), o.setMonth(e), o.setFullYear(i);
        let r = o.getDay() + this.getSundayIndex();
        return r >= 7 ? r - 7 : r;
      }
      getDaysCountInMonth(e, i) {
        return 32 - this.daylightSavingAdjust(new Date(i, e, 32)).getDate();
      }
      getDaysCountInPrevMonth(e, i) {
        let o = this.getPreviousMonthAndYear(e, i);
        return this.getDaysCountInMonth(o.month, o.year);
      }
      getPreviousMonthAndYear(e, i) {
        let o, r;
        return (
          e === 0 ? ((o = 11), (r = i - 1)) : ((o = e - 1), (r = i)),
          { month: o, year: r }
        );
      }
      getNextMonthAndYear(e, i) {
        let o, r;
        return (
          e === 11 ? ((o = 0), (r = i + 1)) : ((o = e + 1), (r = i)),
          { month: o, year: r }
        );
      }
      getSundayIndex() {
        let e = this.getFirstDateOfWeek();
        return e > 0 ? 7 - e : 0;
      }
      isSelected(e) {
        if (this.value) {
          if (this.isSingleSelection()) return this.isDateEquals(this.value, e);
          if (this.isMultipleSelection()) {
            let i = !1;
            for (let o of this.value)
              if (((i = this.isDateEquals(o, e)), i)) break;
            return i;
          } else if (this.isRangeSelection())
            return this.value[1]
              ? this.isDateEquals(this.value[0], e) ||
                  this.isDateEquals(this.value[1], e) ||
                  this.isDateBetween(this.value[0], this.value[1], e)
              : this.isDateEquals(this.value[0], e);
        } else return !1;
      }
      isComparable() {
        return this.value != null && typeof this.value != "string";
      }
      isMonthSelected(e) {
        if (this.isComparable() && !this.isMultipleSelection()) {
          let [i, o] = this.isRangeSelection()
              ? this.value
              : [this.value, this.value],
            r = new Date(this.currentYear, e, 1);
          return r >= i && r <= (o ?? i);
        }
        return !1;
      }
      isMonthDisabled(e, i) {
        let o = i ?? this.currentYear;
        for (let r = 1; r < this.getDaysCountInMonth(e, o) + 1; r++)
          if (this.isSelectable(r, e, o, !1)) return !1;
        return !0;
      }
      isYearDisabled(e) {
        return Array(12)
          .fill(0)
          .every((i, o) => this.isMonthDisabled(o, e));
      }
      isYearSelected(e) {
        if (!this.isComparable() || this.isMultipleSelection()) return !1;
        let i = this.isRangeSelection() ? this.value[0] : this.value;
        return i ? i.getFullYear() === e : !1;
      }
      isDateEquals(e, i) {
        return e && Fi.isDate(e)
          ? e.getDate() === i.day &&
              e.getMonth() === i.month &&
              e.getFullYear() === i.year
          : !1;
      }
      isDateBetween(e, i, o) {
        let r = !1;
        if (Fi.isDate(e) && Fi.isDate(i)) {
          let a = this.formatDateMetaToDate(o);
          return e.getTime() <= a.getTime() && i.getTime() >= a.getTime();
        }
        return r;
      }
      isSingleSelection() {
        return this.selectionMode === "single";
      }
      isRangeSelection() {
        return this.selectionMode === "range";
      }
      isMultipleSelection() {
        return this.selectionMode === "multiple";
      }
      isToday(e, i, o, r) {
        return e.getDate() === i && e.getMonth() === o && e.getFullYear() === r;
      }
      isSelectable(e, i, o, r) {
        let a = !0,
          d = !0,
          m = !0,
          _ = !0;
        return r && !this.selectOtherMonths
          ? !1
          : (this.minDate &&
              (this.minDate.getFullYear() > o ||
                (this.minDate.getFullYear() === o &&
                  this.currentView != "year" &&
                  (this.minDate.getMonth() > i ||
                    (this.minDate.getMonth() === i &&
                      this.minDate.getDate() > e)))) &&
              (a = !1),
            this.maxDate &&
              (this.maxDate.getFullYear() < o ||
                (this.maxDate.getFullYear() === o &&
                  (this.maxDate.getMonth() < i ||
                    (this.maxDate.getMonth() === i &&
                      this.maxDate.getDate() < e)))) &&
              (d = !1),
            this.disabledDates && (m = !this.isDateDisabled(e, i, o)),
            this.disabledDays && (_ = !this.isDayDisabled(e, i, o)),
            a && d && m && _);
      }
      isDateDisabled(e, i, o) {
        if (this.disabledDates) {
          for (let r of this.disabledDates)
            if (
              r.getFullYear() === o &&
              r.getMonth() === i &&
              r.getDate() === e
            )
              return !0;
        }
        return !1;
      }
      isDayDisabled(e, i, o) {
        if (this.disabledDays) {
          let a = new Date(o, i, e).getDay();
          return this.disabledDays.indexOf(a) !== -1;
        }
        return !1;
      }
      onInputFocus(e) {
        (this.focus = !0),
          this.showOnFocus && this.showOverlay(),
          this.onFocus.emit(e);
      }
      onInputClick() {
        this.showOnFocus && !this.overlayVisible && this.showOverlay();
      }
      onInputBlur(e) {
        (this.focus = !1),
          this.onBlur.emit(e),
          this.keepInvalid || this.updateInputfield(),
          this.onModelTouched();
      }
      onButtonClick(e, i = this.inputfieldViewChild?.nativeElement) {
        this.overlayVisible
          ? this.hideOverlay()
          : (i.focus(), this.showOverlay());
      }
      clear() {
        (this.inputFieldValue = null),
          (this.value = null),
          this.onModelChange(this.value),
          this.onClear.emit();
      }
      onOverlayClick(e) {
        this.overlayService.add({
          originalEvent: e,
          target: this.el.nativeElement,
        });
      }
      getMonthName(e) {
        return this.config.getTranslation("monthNames")[e];
      }
      getYear(e) {
        return this.currentView === "month" ? this.currentYear : e.year;
      }
      switchViewButtonDisabled() {
        return this.numberOfMonths > 1 || this.disabled;
      }
      onPrevButtonClick(e) {
        (this.navigationState = { backward: !0, button: !0 }),
          this.navBackward(e);
      }
      onNextButtonClick(e) {
        (this.navigationState = { backward: !1, button: !0 }),
          this.navForward(e);
      }
      onContainerButtonKeydown(e) {
        switch (e.which) {
          case 9:
            if ((this.inline || this.trapFocus(e), this.inline)) {
              let i = de.findSingle(
                  this.containerViewChild?.nativeElement,
                  ".p-datepicker-header"
                ),
                o = e.target;
              if (this.timeOnly) return;
              o == i.children[i?.children?.length - 1] &&
                this.initFocusableCell();
            }
            break;
          case 27:
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          default:
            break;
        }
      }
      onInputKeydown(e) {
        (this.isKeydown = !0),
          e.keyCode === 40 && this.contentViewChild
            ? this.trapFocus(e)
            : e.keyCode === 27
            ? this.overlayVisible &&
              (this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault())
            : e.keyCode === 13
            ? this.overlayVisible &&
              ((this.overlayVisible = !1), e.preventDefault())
            : e.keyCode === 9 &&
              this.contentViewChild &&
              (de
                .getFocusableElements(this.contentViewChild.nativeElement)
                .forEach((i) => (i.tabIndex = "-1")),
              this.overlayVisible && (this.overlayVisible = !1));
      }
      onDateCellKeydown(e, i, o) {
        let r = e.currentTarget,
          a = r.parentElement,
          d = this.formatDateMetaToDate(i);
        switch (e.which) {
          case 40: {
            r.tabIndex = "-1";
            let A = de.index(a),
              j = a.parentElement.nextElementSibling;
            if (j) {
              let z = j.children[A].children[0];
              de.hasClass(z, "p-disabled")
                ? ((this.navigationState = { backward: !1 }),
                  this.navForward(e))
                : ((j.children[A].children[0].tabIndex = "0"),
                  j.children[A].children[0].focus());
            } else
              (this.navigationState = { backward: !1 }), this.navForward(e);
            e.preventDefault();
            break;
          }
          case 38: {
            r.tabIndex = "-1";
            let A = de.index(a),
              j = a.parentElement.previousElementSibling;
            if (j) {
              let z = j.children[A].children[0];
              de.hasClass(z, "p-disabled")
                ? ((this.navigationState = { backward: !0 }),
                  this.navBackward(e))
                : ((z.tabIndex = "0"), z.focus());
            } else
              (this.navigationState = { backward: !0 }), this.navBackward(e);
            e.preventDefault();
            break;
          }
          case 37: {
            r.tabIndex = "-1";
            let A = a.previousElementSibling;
            if (A) {
              let j = A.children[0];
              de.hasClass(j, "p-disabled") ||
              de.hasClass(j.parentElement, "p-datepicker-weeknumber")
                ? this.navigateToMonth(!0, o)
                : ((j.tabIndex = "0"), j.focus());
            } else this.navigateToMonth(!0, o);
            e.preventDefault();
            break;
          }
          case 39: {
            r.tabIndex = "-1";
            let A = a.nextElementSibling;
            if (A) {
              let j = A.children[0];
              de.hasClass(j, "p-disabled")
                ? this.navigateToMonth(!1, o)
                : ((j.tabIndex = "0"), j.focus());
            } else this.navigateToMonth(!1, o);
            e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onDateSelect(e, i), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          case 33: {
            r.tabIndex = "-1";
            let A = new Date(d.getFullYear(), d.getMonth() - 1, d.getDate()),
              j = this.formatDateKey(A);
            this.navigateToMonth(
              !0,
              o,
              `span[data-date='${j}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 34: {
            r.tabIndex = "-1";
            let A = new Date(d.getFullYear(), d.getMonth() + 1, d.getDate()),
              j = this.formatDateKey(A);
            this.navigateToMonth(
              !1,
              o,
              `span[data-date='${j}']:not(.p-disabled):not(.p-ink)`
            ),
              e.preventDefault();
            break;
          }
          case 36:
            r.tabIndex = "-1";
            let m = new Date(d.getFullYear(), d.getMonth(), 1),
              _ = this.formatDateKey(m),
              v = de.findSingle(
                r.offsetParent,
                `span[data-date='${_}']:not(.p-disabled):not(.p-ink)`
              );
            v && ((v.tabIndex = "0"), v.focus()), e.preventDefault();
            break;
          case 35:
            r.tabIndex = "-1";
            let S = new Date(d.getFullYear(), d.getMonth() + 1, 0),
              T = this.formatDateKey(S),
              M = de.findSingle(
                r.offsetParent,
                `span[data-date='${T}']:not(.p-disabled):not(.p-ink)`
              );
            S && ((M.tabIndex = "0"), M.focus()), e.preventDefault();
            break;
          default:
            break;
        }
      }
      onMonthCellKeydown(e, i) {
        let o = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            o.tabIndex = "-1";
            var r = o.parentElement.children,
              a = de.index(o);
            let d = r[e.which === 40 ? a + 3 : a - 3];
            d && ((d.tabIndex = "0"), d.focus()), e.preventDefault();
            break;
          }
          case 37: {
            o.tabIndex = "-1";
            let d = o.previousElementSibling;
            d
              ? ((d.tabIndex = "0"), d.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            o.tabIndex = "-1";
            let d = o.nextElementSibling;
            d
              ? ((d.tabIndex = "0"), d.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onMonthSelect(e, i), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.inline || this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      onYearCellKeydown(e, i) {
        let o = e.currentTarget;
        switch (e.which) {
          case 38:
          case 40: {
            o.tabIndex = "-1";
            var r = o.parentElement.children,
              a = de.index(o);
            let d = r[e.which === 40 ? a + 2 : a - 2];
            d && ((d.tabIndex = "0"), d.focus()), e.preventDefault();
            break;
          }
          case 37: {
            o.tabIndex = "-1";
            let d = o.previousElementSibling;
            d
              ? ((d.tabIndex = "0"), d.focus())
              : ((this.navigationState = { backward: !0 }),
                this.navBackward(e)),
              e.preventDefault();
            break;
          }
          case 39: {
            o.tabIndex = "-1";
            let d = o.nextElementSibling;
            d
              ? ((d.tabIndex = "0"), d.focus())
              : ((this.navigationState = { backward: !1 }), this.navForward(e)),
              e.preventDefault();
            break;
          }
          case 13:
          case 32: {
            this.onYearSelect(e, i), e.preventDefault();
            break;
          }
          case 27: {
            this.inputfieldViewChild?.nativeElement.focus(),
              (this.overlayVisible = !1),
              e.preventDefault();
            break;
          }
          case 9: {
            this.trapFocus(e);
            break;
          }
          default:
            break;
        }
      }
      navigateToMonth(e, i, o) {
        if (e)
          if (this.numberOfMonths === 1 || i === 0)
            (this.navigationState = { backward: !0 }),
              (this._focusKey = o),
              this.navBackward(event);
          else {
            let r = this.contentViewChild.nativeElement.children[i - 1];
            if (o) {
              let a = de.findSingle(r, o);
              (a.tabIndex = "0"), a.focus();
            } else {
              let a = de.find(
                  r,
                  ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                ),
                d = a[a.length - 1];
              (d.tabIndex = "0"), d.focus();
            }
          }
        else if (this.numberOfMonths === 1 || i === this.numberOfMonths - 1)
          (this.navigationState = { backward: !1 }),
            (this._focusKey = o),
            this.navForward(event);
        else {
          let r = this.contentViewChild.nativeElement.children[i + 1];
          if (o) {
            let a = de.findSingle(r, o);
            (a.tabIndex = "0"), a.focus();
          } else {
            let a = de.findSingle(
              r,
              ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
            );
            (a.tabIndex = "0"), a.focus();
          }
        }
      }
      updateFocus() {
        let e;
        if (this.navigationState) {
          if (this.navigationState.button)
            this.initFocusableCell(),
              this.navigationState.backward
                ? de
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-prev"
                    )
                    .focus()
                : de
                    .findSingle(
                      this.contentViewChild.nativeElement,
                      ".p-datepicker-next"
                    )
                    .focus();
          else {
            if (this.navigationState.backward) {
              let i;
              this.currentView === "month"
                ? (i = de.find(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (i = de.find(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (i = de.find(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  )),
                i && i.length > 0 && (e = i[i.length - 1]);
            } else
              this.currentView === "month"
                ? (e = de.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ))
                : this.currentView === "year"
                ? (e = de.findSingle(
                    this.contentViewChild.nativeElement,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ))
                : (e = de.findSingle(
                    this.contentViewChild.nativeElement,
                    this._focusKey ||
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  ));
            e && ((e.tabIndex = "0"), e.focus());
          }
          (this.navigationState = null), (this._focusKey = null);
        } else this.initFocusableCell();
        this.alignOverlay();
      }
      initFocusableCell() {
        let e = this.contentViewChild?.nativeElement,
          i;
        if (this.currentView === "month") {
          let o = de.find(
              e,
              ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
            ),
            r = de.findSingle(
              e,
              ".p-monthpicker .p-monthpicker-month.p-highlight"
            );
          o.forEach((a) => (a.tabIndex = -1)),
            (i = r || o[0]),
            o.length === 0 &&
              de
                .find(
                  e,
                  '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = "0"]'
                )
                .forEach((d) => (d.tabIndex = -1));
        } else if (this.currentView === "year") {
          let o = de.find(
              e,
              ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
            ),
            r = de.findSingle(
              e,
              ".p-yearpicker .p-yearpicker-year.p-highlight"
            );
          o.forEach((a) => (a.tabIndex = -1)),
            (i = r || o[0]),
            o.length === 0 &&
              de
                .find(
                  e,
                  '.p-yearpicker .p-yearpicker-year.p-disabled[tabindex = "0"]'
                )
                .forEach((d) => (d.tabIndex = -1));
        } else if (((i = de.findSingle(e, "span.p-highlight")), !i)) {
          let o = de.findSingle(
            e,
            "td.p-datepicker-today span:not(.p-disabled):not(.p-ink)"
          );
          o
            ? (i = o)
            : (i = de.findSingle(
                e,
                ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
              ));
        }
        i &&
          ((i.tabIndex = "0"),
          !this.preventFocus &&
            (!this.navigationState || !this.navigationState.button) &&
            setTimeout(() => {
              this.disabled || i.focus();
            }, 1),
          (this.preventFocus = !1));
      }
      trapFocus(e) {
        let i = de.getFocusableElements(this.contentViewChild.nativeElement);
        if (i && i.length > 0)
          if (!i[0].ownerDocument.activeElement) i[0].focus();
          else {
            let o = i.indexOf(i[0].ownerDocument.activeElement);
            if (e.shiftKey)
              if (o == -1 || o === 0)
                if (this.focusTrap) i[i.length - 1].focus();
                else {
                  if (o === -1) return this.hideOverlay();
                  if (o === 0) return;
                }
              else i[o - 1].focus();
            else if (o == -1)
              if (this.timeOnly) i[0].focus();
              else {
                let r = 0;
                for (let a = 0; a < i.length; a++)
                  i[a].tagName === "SPAN" && (r = a);
                i[r].focus();
              }
            else if (o === i.length - 1) {
              if (!this.focusTrap && o != -1) return this.hideOverlay();
              i[0].focus();
            } else i[o + 1].focus();
          }
        e.preventDefault();
      }
      onMonthDropdownChange(e) {
        (this.currentMonth = parseInt(e)),
          this.onMonthChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      onYearDropdownChange(e) {
        (this.currentYear = parseInt(e)),
          this.onYearChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear,
          }),
          this.createMonths(this.currentMonth, this.currentYear);
      }
      convertTo24Hour(e, i) {
        return this.hourFormat == "12"
          ? e === 12
            ? i
              ? 12
              : 0
            : i
            ? e + 12
            : e
          : e;
      }
      constrainTime(e, i, o, r) {
        let a = [e, i, o],
          d,
          m = this.value,
          _ = this.convertTo24Hour(e, r),
          v = this.isRangeSelection(),
          S = this.isMultipleSelection();
        (v || S) &&
          (this.value || (this.value = [new Date(), new Date()]),
          v && (m = this.value[1] || this.value[0]),
          S && (m = this.value[this.value.length - 1]));
        let M = m ? m.toDateString() : null,
          A = this.minDate && M && this.minDate.toDateString() === M,
          j = this.maxDate && M && this.maxDate.toDateString() === M;
        switch ((A && (d = this.minDate.getHours() >= 12), !0)) {
          case A &&
            d &&
            this.minDate.getHours() === 12 &&
            this.minDate.getHours() > _:
            a[0] = 11;
          case A &&
            this.minDate.getHours() === _ &&
            this.minDate.getMinutes() > i:
            a[1] = this.minDate.getMinutes();
          case A &&
            this.minDate.getHours() === _ &&
            this.minDate.getMinutes() === i &&
            this.minDate.getSeconds() > o:
            a[2] = this.minDate.getSeconds();
            break;
          case A &&
            !d &&
            this.minDate.getHours() - 1 === _ &&
            this.minDate.getHours() > _:
            (a[0] = 11), (this.pm = !0);
          case A &&
            this.minDate.getHours() === _ &&
            this.minDate.getMinutes() > i:
            a[1] = this.minDate.getMinutes();
          case A &&
            this.minDate.getHours() === _ &&
            this.minDate.getMinutes() === i &&
            this.minDate.getSeconds() > o:
            a[2] = this.minDate.getSeconds();
            break;
          case A && d && this.minDate.getHours() > _ && _ !== 12:
            this.setCurrentHourPM(this.minDate.getHours()),
              (a[0] = this.currentHour);
          case A &&
            this.minDate.getHours() === _ &&
            this.minDate.getMinutes() > i:
            a[1] = this.minDate.getMinutes();
          case A &&
            this.minDate.getHours() === _ &&
            this.minDate.getMinutes() === i &&
            this.minDate.getSeconds() > o:
            a[2] = this.minDate.getSeconds();
            break;
          case A && this.minDate.getHours() > _:
            a[0] = this.minDate.getHours();
          case A &&
            this.minDate.getHours() === _ &&
            this.minDate.getMinutes() > i:
            a[1] = this.minDate.getMinutes();
          case A &&
            this.minDate.getHours() === _ &&
            this.minDate.getMinutes() === i &&
            this.minDate.getSeconds() > o:
            a[2] = this.minDate.getSeconds();
            break;
          case j && this.maxDate.getHours() < _:
            a[0] = this.maxDate.getHours();
          case j &&
            this.maxDate.getHours() === _ &&
            this.maxDate.getMinutes() < i:
            a[1] = this.maxDate.getMinutes();
          case j &&
            this.maxDate.getHours() === _ &&
            this.maxDate.getMinutes() === i &&
            this.maxDate.getSeconds() < o:
            a[2] = this.maxDate.getSeconds();
            break;
        }
        return a;
      }
      incrementHour(e) {
        let i = this.currentHour ?? 0,
          o = (this.currentHour ?? 0) + this.stepHour,
          r = this.pm;
        this.hourFormat == "24"
          ? (o = o >= 24 ? o - 24 : o)
          : this.hourFormat == "12" &&
            (i < 12 && o > 11 && (r = !this.pm), (o = o >= 13 ? o - 12 : o)),
          this.toggleAMPMIfNotMinDate(r),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(o, this.currentMinute, this.currentSecond, r)),
          e.preventDefault();
      }
      toggleAMPMIfNotMinDate(e) {
        let i = this.value;
        (this.selectionMode == "range" || this.selectionMode == "multiple") &&
          Array.isArray(i) &&
          i.length > 0 &&
          (i = i[i.length - 1]);
        let o = i ? i.toDateString() : null;
        this.minDate &&
        o &&
        this.minDate.toDateString() === o &&
        this.minDate.getHours() >= 12
          ? (this.pm = !0)
          : (this.pm = e);
      }
      onTimePickerElementMouseDown(e, i, o) {
        this.disabled || (this.repeat(e, null, i, o), e.preventDefault());
      }
      onTimePickerElementMouseUp(e) {
        this.disabled || (this.clearTimePickerTimer(), this.updateTime());
      }
      onTimePickerElementMouseLeave() {
        !this.disabled &&
          this.timePickerTimer &&
          (this.clearTimePickerTimer(), this.updateTime());
      }
      repeat(e, i, o, r) {
        let a = i || 500;
        switch (
          (this.clearTimePickerTimer(),
          (this.timePickerTimer = setTimeout(() => {
            this.repeat(e, 100, o, r), this.cd.markForCheck();
          }, a)),
          o)
        ) {
          case 0:
            r === 1 ? this.incrementHour(e) : this.decrementHour(e);
            break;
          case 1:
            r === 1 ? this.incrementMinute(e) : this.decrementMinute(e);
            break;
          case 2:
            r === 1 ? this.incrementSecond(e) : this.decrementSecond(e);
            break;
        }
        this.updateInputfield();
      }
      clearTimePickerTimer() {
        this.timePickerTimer &&
          (clearTimeout(this.timePickerTimer), (this.timePickerTimer = null));
      }
      decrementHour(e) {
        let i = (this.currentHour ?? 0) - this.stepHour,
          o = this.pm;
        this.hourFormat == "24"
          ? (i = i < 0 ? 24 + i : i)
          : this.hourFormat == "12" &&
            (this.currentHour === 12 && (o = !this.pm),
            (i = i <= 0 ? 12 + i : i)),
          this.toggleAMPMIfNotMinDate(o),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(i, this.currentMinute, this.currentSecond, o)),
          e.preventDefault();
      }
      incrementMinute(e) {
        let i = (this.currentMinute ?? 0) + this.stepMinute;
        (i = i > 59 ? i - 60 : i),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              i,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      decrementMinute(e) {
        let i = (this.currentMinute ?? 0) - this.stepMinute;
        (i = i < 0 ? 60 + i : i),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              i,
              this.currentSecond,
              this.pm
            )),
          e.preventDefault();
      }
      incrementSecond(e) {
        let i = this.currentSecond + this.stepSecond;
        (i = i > 59 ? i - 60 : i),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              i,
              this.pm
            )),
          e.preventDefault();
      }
      decrementSecond(e) {
        let i = this.currentSecond - this.stepSecond;
        (i = i < 0 ? 60 + i : i),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              i,
              this.pm
            )),
          e.preventDefault();
      }
      updateTime() {
        let e = this.value;
        this.isRangeSelection() && (e = this.value[1] || this.value[0]),
          this.isMultipleSelection() && (e = this.value[this.value.length - 1]),
          (e = e ? new Date(e.getTime()) : new Date()),
          this.hourFormat == "12"
            ? this.currentHour === 12
              ? e.setHours(this.pm ? 12 : 0)
              : e.setHours(this.pm ? this.currentHour + 12 : this.currentHour)
            : e.setHours(this.currentHour),
          e.setMinutes(this.currentMinute),
          e.setSeconds(this.currentSecond),
          this.isRangeSelection() &&
            (this.value[1] ? (e = [this.value[0], e]) : (e = [e, null])),
          this.isMultipleSelection() && (e = [...this.value.slice(0, -1), e]),
          this.updateModel(e),
          this.onSelect.emit(e),
          this.updateInputfield();
      }
      toggleAMPM(e) {
        let i = !this.pm;
        (this.pm = i),
          ([this.currentHour, this.currentMinute, this.currentSecond] =
            this.constrainTime(
              this.currentHour,
              this.currentMinute,
              this.currentSecond,
              i
            )),
          this.updateTime(),
          e.preventDefault();
      }
      onUserInput(e) {
        if (!this.isKeydown) return;
        this.isKeydown = !1;
        let i = e.target.value;
        try {
          let o = this.parseValueFromString(i);
          this.isValidSelection(o)
            ? (this.updateModel(o), this.updateUI())
            : this.keepInvalid && this.updateModel(o);
        } catch {
          let r = this.keepInvalid ? i : null;
          this.updateModel(r);
        }
        (this.filled = i != null && i.length), this.onInput.emit(e);
      }
      isValidSelection(e) {
        if (this.isSingleSelection())
          return this.isSelectable(
            e.getDate(),
            e.getMonth(),
            e.getFullYear(),
            !1
          );
        let i = e.every((o) =>
          this.isSelectable(o.getDate(), o.getMonth(), o.getFullYear(), !1)
        );
        return (
          i &&
            this.isRangeSelection() &&
            (i = e.length === 1 || (e.length > 1 && e[1] >= e[0])),
          i
        );
      }
      parseValueFromString(e) {
        if (!e || e.trim().length === 0) return null;
        let i;
        if (this.isSingleSelection()) i = this.parseDateTime(e);
        else if (this.isMultipleSelection()) {
          let o = e.split(this.multipleSeparator);
          i = [];
          for (let r of o) i.push(this.parseDateTime(r.trim()));
        } else if (this.isRangeSelection()) {
          let o = e.split(" " + this.rangeSeparator + " ");
          i = [];
          for (let r = 0; r < o.length; r++)
            i[r] = this.parseDateTime(o[r].trim());
        }
        return i;
      }
      parseDateTime(e) {
        let i,
          o = e.split(" ");
        if (this.timeOnly) (i = new Date()), this.populateTime(i, o[0], o[1]);
        else {
          let r = this.getDateFormat();
          if (this.showTime) {
            let a = this.hourFormat == "12" ? o.pop() : null,
              d = o.pop();
            (i = this.parseDate(o.join(" "), r)), this.populateTime(i, d, a);
          } else i = this.parseDate(e, r);
        }
        return i;
      }
      populateTime(e, i, o) {
        if (this.hourFormat == "12" && !o) throw "Invalid Time";
        this.pm = o === "PM" || o === "pm";
        let r = this.parseTime(i);
        e.setHours(r.hour), e.setMinutes(r.minute), e.setSeconds(r.second);
      }
      isValidDate(e) {
        return Fi.isDate(e) && Fi.isNotEmpty(e);
      }
      updateUI() {
        let e = this.value;
        Array.isArray(e) && (e = e[1] || e[0]);
        let i =
          this.defaultDate && this.isValidDate(this.defaultDate) && !this.value
            ? this.defaultDate
            : e && this.isValidDate(e)
            ? e
            : new Date();
        (this.currentMonth = i.getMonth()),
          (this.currentYear = i.getFullYear()),
          this.createMonths(this.currentMonth, this.currentYear),
          (this.showTime || this.timeOnly) &&
            (this.setCurrentHourPM(i.getHours()),
            (this.currentMinute = i.getMinutes()),
            (this.currentSecond = i.getSeconds()));
      }
      showOverlay() {
        this.overlayVisible ||
          (this.updateUI(),
          this.touchUI || (this.preventFocus = !0),
          (this.overlayVisible = !0));
      }
      hideOverlay() {
        this.inputfieldViewChild?.nativeElement.focus(),
          (this.overlayVisible = !1),
          this.clearTimePickerTimer(),
          this.touchUI && this.disableModality(),
          this.cd.markForCheck();
      }
      toggle() {
        this.inline ||
          (this.overlayVisible
            ? this.hideOverlay()
            : (this.showOverlay(),
              this.inputfieldViewChild?.nativeElement.focus()));
      }
      onOverlayAnimationStart(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              ((this.overlay = e.element),
              this.overlay?.setAttribute(this.attributeSelector, ""),
              this.appendOverlay(),
              this.updateFocus(),
              this.autoZIndex &&
                (this.touchUI
                  ? Ba.set(
                      "modal",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.modal
                    )
                  : Ba.set(
                      "overlay",
                      this.overlay,
                      this.baseZIndex || this.config.zIndex.overlay
                    )),
              this.alignOverlay(),
              this.onShow.emit(e));
            break;
          case "void":
            this.onOverlayHide(), this.onClose.emit(e);
            break;
        }
      }
      onOverlayAnimationDone(e) {
        switch (e.toState) {
          case "visible":
          case "visibleTouchUI":
            this.inline ||
              (this.bindDocumentClickListener(),
              this.bindDocumentResizeListener(),
              this.bindScrollListener());
            break;
          case "void":
            this.autoZIndex && Ba.clear(e.element);
            break;
        }
      }
      appendOverlay() {
        this.appendTo &&
          (this.appendTo === "body"
            ? this.document.body.appendChild(this.overlay)
            : de.appendChild(this.overlay, this.appendTo));
      }
      restoreOverlayAppend() {
        this.overlay &&
          this.appendTo &&
          this.el.nativeElement.appendChild(this.overlay);
      }
      alignOverlay() {
        this.touchUI
          ? this.enableModality(this.overlay)
          : this.overlay &&
            (this.appendTo
              ? (this.view === "date"
                  ? (this.overlay.style.width ||
                      (this.overlay.style.width =
                        de.getOuterWidth(this.overlay) + "px"),
                    this.overlay.style.minWidth ||
                      (this.overlay.style.minWidth =
                        de.getOuterWidth(
                          this.inputfieldViewChild?.nativeElement
                        ) + "px"))
                  : this.overlay.style.width ||
                    (this.overlay.style.width =
                      de.getOuterWidth(
                        this.inputfieldViewChild?.nativeElement
                      ) + "px"),
                de.absolutePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ))
              : de.relativePosition(
                  this.overlay,
                  this.inputfieldViewChild?.nativeElement
                ));
      }
      enableModality(e) {
        !this.mask &&
          this.touchUI &&
          ((this.mask = this.renderer.createElement("div")),
          this.renderer.setStyle(
            this.mask,
            "zIndex",
            String(parseInt(e.style.zIndex) - 1)
          ),
          de.addMultipleClasses(
            this.mask,
            "p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter"
          ),
          (this.maskClickListener = this.renderer.listen(
            this.mask,
            "click",
            (o) => {
              this.disableModality(), (this.overlayVisible = !1);
            }
          )),
          this.renderer.appendChild(this.document.body, this.mask),
          de.blockBodyScroll());
      }
      disableModality() {
        this.mask &&
          (de.addClass(this.mask, "p-component-overlay-leave"),
          this.animationEndListener ||
            (this.animationEndListener = this.renderer.listen(
              this.mask,
              "animationend",
              this.destroyMask.bind(this)
            )));
      }
      destroyMask() {
        if (!this.mask) return;
        this.renderer.removeChild(this.document.body, this.mask);
        let e = this.document.body.children,
          i;
        for (let o = 0; o < e.length; o++) {
          let r = e[o];
          if (de.hasClass(r, "p-datepicker-mask-scrollblocker")) {
            i = !0;
            break;
          }
        }
        i || de.unblockBodyScroll(),
          this.unbindAnimationEndListener(),
          this.unbindMaskClickListener(),
          (this.mask = null);
      }
      unbindMaskClickListener() {
        this.maskClickListener &&
          (this.maskClickListener(), (this.maskClickListener = null));
      }
      unbindAnimationEndListener() {
        this.animationEndListener &&
          this.mask &&
          (this.animationEndListener(), (this.animationEndListener = null));
      }
      writeValue(e) {
        if (((this.value = e), this.value && typeof this.value == "string"))
          try {
            this.value = this.parseValueFromString(this.value);
          } catch {
            this.keepInvalid && (this.value = e);
          }
        this.updateInputfield(), this.updateUI(), this.cd.markForCheck();
      }
      registerOnChange(e) {
        this.onModelChange = e;
      }
      registerOnTouched(e) {
        this.onModelTouched = e;
      }
      setDisabledState(e) {
        (this.disabled = e), this.cd.markForCheck();
      }
      getDateFormat() {
        return this.dateFormat || this.getTranslation("dateFormat");
      }
      getFirstDateOfWeek() {
        return (
          this._firstDayOfWeek || this.getTranslation(cn.FIRST_DAY_OF_WEEK)
        );
      }
      formatDate(e, i) {
        if (!e) return "";
        let o,
          r = (v) => {
            let S = o + 1 < i.length && i.charAt(o + 1) === v;
            return S && o++, S;
          },
          a = (v, S, T) => {
            let M = "" + S;
            if (r(v)) for (; M.length < T; ) M = "0" + M;
            return M;
          },
          d = (v, S, T, M) => (r(v) ? M[S] : T[S]),
          m = "",
          _ = !1;
        if (e)
          for (o = 0; o < i.length; o++)
            if (_)
              i.charAt(o) === "'" && !r("'") ? (_ = !1) : (m += i.charAt(o));
            else
              switch (i.charAt(o)) {
                case "d":
                  m += a("d", e.getDate(), 2);
                  break;
                case "D":
                  m += d(
                    "D",
                    e.getDay(),
                    this.getTranslation(cn.DAY_NAMES_SHORT),
                    this.getTranslation(cn.DAY_NAMES)
                  );
                  break;
                case "o":
                  m += a(
                    "o",
                    Math.round(
                      (new Date(
                        e.getFullYear(),
                        e.getMonth(),
                        e.getDate()
                      ).getTime() -
                        new Date(e.getFullYear(), 0, 0).getTime()) /
                        864e5
                    ),
                    3
                  );
                  break;
                case "m":
                  m += a("m", e.getMonth() + 1, 2);
                  break;
                case "M":
                  m += d(
                    "M",
                    e.getMonth(),
                    this.getTranslation(cn.MONTH_NAMES_SHORT),
                    this.getTranslation(cn.MONTH_NAMES)
                  );
                  break;
                case "y":
                  m += r("y")
                    ? e.getFullYear()
                    : (e.getFullYear() % 100 < 10 ? "0" : "") +
                      (e.getFullYear() % 100);
                  break;
                case "@":
                  m += e.getTime();
                  break;
                case "!":
                  m += e.getTime() * 1e4 + this.ticksTo1970;
                  break;
                case "'":
                  r("'") ? (m += "'") : (_ = !0);
                  break;
                default:
                  m += i.charAt(o);
              }
        return m;
      }
      formatTime(e) {
        if (!e) return "";
        let i = "",
          o = e.getHours(),
          r = e.getMinutes(),
          a = e.getSeconds();
        return (
          this.hourFormat == "12" && o > 11 && o != 12 && (o -= 12),
          this.hourFormat == "12"
            ? (i += o === 0 ? 12 : o < 10 ? "0" + o : o)
            : (i += o < 10 ? "0" + o : o),
          (i += ":"),
          (i += r < 10 ? "0" + r : r),
          this.showSeconds && ((i += ":"), (i += a < 10 ? "0" + a : a)),
          this.hourFormat == "12" && (i += e.getHours() > 11 ? " PM" : " AM"),
          i
        );
      }
      parseTime(e) {
        let i = e.split(":"),
          o = this.showSeconds ? 3 : 2;
        if (i.length !== o) throw "Invalid time";
        let r = parseInt(i[0]),
          a = parseInt(i[1]),
          d = this.showSeconds ? parseInt(i[2]) : null;
        if (
          isNaN(r) ||
          isNaN(a) ||
          r > 23 ||
          a > 59 ||
          (this.hourFormat == "12" && r > 12) ||
          (this.showSeconds && (isNaN(d) || d > 59))
        )
          throw "Invalid time";
        return (
          this.hourFormat == "12" &&
            (r !== 12 && this.pm
              ? (r += 12)
              : !this.pm && r === 12 && (r -= 12)),
          { hour: r, minute: a, second: d }
        );
      }
      parseDate(e, i) {
        if (i == null || e == null) throw "Invalid arguments";
        if (((e = typeof e == "object" ? e.toString() : e + ""), e === ""))
          return null;
        let o,
          r,
          a,
          d = 0,
          m =
            typeof this.shortYearCutoff != "string"
              ? this.shortYearCutoff
              : (new Date().getFullYear() % 100) +
                parseInt(this.shortYearCutoff, 10),
          _ = -1,
          v = -1,
          S = -1,
          T = -1,
          M = !1,
          A,
          j = (Ve) => {
            let Se = o + 1 < i.length && i.charAt(o + 1) === Ve;
            return Se && o++, Se;
          },
          z = (Ve) => {
            let Se = j(Ve),
              Re =
                Ve === "@"
                  ? 14
                  : Ve === "!"
                  ? 20
                  : Ve === "y" && Se
                  ? 4
                  : Ve === "o"
                  ? 3
                  : 2,
              b = Ve === "y" ? Re : 1,
              Be = new RegExp("^\\d{" + b + "," + Re + "}"),
              be = e.substring(d).match(Be);
            if (!be) throw "Missing number at position " + d;
            return (d += be[0].length), parseInt(be[0], 10);
          },
          L = (Ve, Se, Re) => {
            let b = -1,
              Be = j(Ve) ? Re : Se,
              be = [];
            for (let He = 0; He < Be.length; He++) be.push([He, Be[He]]);
            be.sort((He, st) => -(He[1].length - st[1].length));
            for (let He = 0; He < be.length; He++) {
              let st = be[He][1];
              if (e.substr(d, st.length).toLowerCase() === st.toLowerCase()) {
                (b = be[He][0]), (d += st.length);
                break;
              }
            }
            if (b !== -1) return b + 1;
            throw "Unknown name at position " + d;
          },
          ue = () => {
            if (e.charAt(d) !== i.charAt(o))
              throw "Unexpected literal at position " + d;
            d++;
          };
        for (this.view === "month" && (S = 1), o = 0; o < i.length; o++)
          if (M) i.charAt(o) === "'" && !j("'") ? (M = !1) : ue();
          else
            switch (i.charAt(o)) {
              case "d":
                S = z("d");
                break;
              case "D":
                L(
                  "D",
                  this.getTranslation(cn.DAY_NAMES_SHORT),
                  this.getTranslation(cn.DAY_NAMES)
                );
                break;
              case "o":
                T = z("o");
                break;
              case "m":
                v = z("m");
                break;
              case "M":
                v = L(
                  "M",
                  this.getTranslation(cn.MONTH_NAMES_SHORT),
                  this.getTranslation(cn.MONTH_NAMES)
                );
                break;
              case "y":
                _ = z("y");
                break;
              case "@":
                (A = new Date(z("@"))),
                  (_ = A.getFullYear()),
                  (v = A.getMonth() + 1),
                  (S = A.getDate());
                break;
              case "!":
                (A = new Date((z("!") - this.ticksTo1970) / 1e4)),
                  (_ = A.getFullYear()),
                  (v = A.getMonth() + 1),
                  (S = A.getDate());
                break;
              case "'":
                j("'") ? ue() : (M = !0);
                break;
              default:
                ue();
            }
        if (d < e.length && ((a = e.substr(d)), !/^\s+/.test(a)))
          throw "Extra/unparsed characters found in date: " + a;
        if (
          (_ === -1
            ? (_ = new Date().getFullYear())
            : _ < 100 &&
              (_ +=
                new Date().getFullYear() -
                (new Date().getFullYear() % 100) +
                (_ <= m ? 0 : -100)),
          T > -1)
        ) {
          (v = 1), (S = T);
          do {
            if (((r = this.getDaysCountInMonth(_, v - 1)), S <= r)) break;
            v++, (S -= r);
          } while (!0);
        }
        if (
          (this.view === "year" &&
            ((v = v === -1 ? 1 : v), (S = S === -1 ? 1 : S)),
          (A = this.daylightSavingAdjust(new Date(_, v - 1, S))),
          A.getFullYear() !== _ || A.getMonth() + 1 !== v || A.getDate() !== S)
        )
          throw "Invalid date";
        return A;
      }
      daylightSavingAdjust(e) {
        return e
          ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
          : null;
      }
      updateFilledState() {
        this.filled = this.inputFieldValue && this.inputFieldValue != "";
      }
      isValidDateForTimeConstraints(e) {
        return this.keepInvalid
          ? !0
          : (!this.minDate || e >= this.minDate) &&
              (!this.maxDate || e <= this.maxDate);
      }
      onTodayButtonClick(e) {
        let i = new Date(),
          o = {
            day: i.getDate(),
            month: i.getMonth(),
            year: i.getFullYear(),
            otherMonth:
              i.getMonth() !== this.currentMonth ||
              i.getFullYear() !== this.currentYear,
            today: !0,
            selectable: !0,
          };
        this.createMonths(i.getMonth(), i.getFullYear()),
          this.onDateSelect(e, o),
          this.onTodayClick.emit(i);
      }
      onClearButtonClick(e) {
        this.updateModel(null),
          this.updateInputfield(),
          this.hideOverlay(),
          this.onClearClick.emit(e);
      }
      createResponsiveStyle() {
        if (this.numberOfMonths > 1 && this.responsiveOptions) {
          this.responsiveStyleElement ||
            ((this.responsiveStyleElement =
              this.renderer.createElement("style")),
            (this.responsiveStyleElement.type = "text/css"),
            de.setAttribute(
              this.responsiveStyleElement,
              "nonce",
              this.config?.csp()?.nonce
            ),
            this.renderer.appendChild(
              this.document.body,
              this.responsiveStyleElement
            ));
          let e = "";
          if (this.responsiveOptions) {
            let i = [...this.responsiveOptions]
              .filter((o) => !!(o.breakpoint && o.numMonths))
              .sort(
                (o, r) =>
                  -1 *
                  o.breakpoint.localeCompare(r.breakpoint, void 0, {
                    numeric: !0,
                  })
              );
            for (let o = 0; o < i.length; o++) {
              let { breakpoint: r, numMonths: a } = i[o],
                d = `
                        .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${a}) .p-datepicker-next {
                            display: inline-flex !important;
                        }
                    `;
              for (let m = a; m < this.numberOfMonths; m++)
                d += `
                            .p-datepicker[${
                              this.attributeSelector
                            }] .p-datepicker-group:nth-child(${m + 1}) {
                                display: none !important;
                            }
                        `;
              e += `
                        @media screen and (max-width: ${r}) {
                            ${d}
                        }
                    `;
            }
          }
          this.responsiveStyleElement.innerHTML = e;
        }
      }
      destroyResponsiveStyleElement() {
        this.responsiveStyleElement &&
          (this.responsiveStyleElement.remove(),
          (this.responsiveStyleElement = null));
      }
      bindDocumentClickListener() {
        this.documentClickListener ||
          this.zone.runOutsideAngular(() => {
            let e = this.el
              ? this.el.nativeElement.ownerDocument
              : this.document;
            this.documentClickListener = this.renderer.listen(
              e,
              "mousedown",
              (i) => {
                this.isOutsideClicked(i) &&
                  this.overlayVisible &&
                  this.zone.run(() => {
                    this.hideOverlay(),
                      this.onClickOutside.emit(i),
                      this.cd.markForCheck();
                  });
              }
            );
          });
      }
      unbindDocumentClickListener() {
        this.documentClickListener &&
          (this.documentClickListener(), (this.documentClickListener = null));
      }
      bindDocumentResizeListener() {
        !this.documentResizeListener &&
          !this.touchUI &&
          (this.documentResizeListener = this.renderer.listen(
            this.window,
            "resize",
            this.onWindowResize.bind(this)
          ));
      }
      unbindDocumentResizeListener() {
        this.documentResizeListener &&
          (this.documentResizeListener(), (this.documentResizeListener = null));
      }
      bindScrollListener() {
        this.scrollHandler ||
          (this.scrollHandler = new Al(
            this.containerViewChild?.nativeElement,
            () => {
              this.overlayVisible && this.hideOverlay();
            }
          )),
          this.scrollHandler.bindScrollListener();
      }
      unbindScrollListener() {
        this.scrollHandler && this.scrollHandler.unbindScrollListener();
      }
      isOutsideClicked(e) {
        return !(
          this.el.nativeElement.isSameNode(e.target) ||
          this.isNavIconClicked(e) ||
          this.el.nativeElement.contains(e.target) ||
          (this.overlay && this.overlay.contains(e.target))
        );
      }
      isNavIconClicked(e) {
        return (
          de.hasClass(e.target, "p-datepicker-prev") ||
          de.hasClass(e.target, "p-datepicker-prev-icon") ||
          de.hasClass(e.target, "p-datepicker-next") ||
          de.hasClass(e.target, "p-datepicker-next-icon")
        );
      }
      onWindowResize() {
        this.overlayVisible && !de.isTouchDevice() && this.hideOverlay();
      }
      onOverlayHide() {
        (this.currentView = this.view),
          this.mask && this.destroyMask(),
          this.unbindDocumentClickListener(),
          this.unbindDocumentResizeListener(),
          this.unbindScrollListener(),
          (this.overlay = null);
      }
      ngOnDestroy() {
        this.scrollHandler &&
          (this.scrollHandler.destroy(), (this.scrollHandler = null)),
          this.translationSubscription &&
            this.translationSubscription.unsubscribe(),
          this.overlay && this.autoZIndex && Ba.clear(this.overlay),
          this.destroyResponsiveStyleElement(),
          this.clearTimePickerTimer(),
          this.restoreOverlayAppend(),
          this.onOverlayHide();
      }
      static ɵfac = function (i) {
        return new (i || n)(B(Le), B(ke), B(ui), B(Xe), B(Oe), B(Pl), B(Kg));
      };
      static ɵcmp = oe({
        type: n,
        selectors: [["p-calendar"]],
        contentQueries: function (i, o, r) {
          if ((i & 1 && xn(r, Ha, 4), i & 2)) {
            let a;
            rt((a = at())) && (o.templates = a);
          }
        },
        viewQuery: function (i, o) {
          if ((i & 1 && (Dt(wD, 5), Dt(DD, 5), Dt(SD, 5)), i & 2)) {
            let r;
            rt((r = at())) && (o.containerViewChild = r.first),
              rt((r = at())) && (o.inputfieldViewChild = r.first),
              rt((r = at())) && (o.content = r.first);
          }
        },
        hostAttrs: [1, "p-element", "p-inputwrapper"],
        hostVars: 6,
        hostBindings: function (i, o) {
          i & 2 &&
            fe("p-inputwrapper-filled", o.filled)(
              "p-inputwrapper-focus",
              o.focus
            )("p-calendar-clearable", o.showClear && !o.disabled);
        },
        inputs: {
          iconDisplay: "iconDisplay",
          style: "style",
          styleClass: "styleClass",
          inputStyle: "inputStyle",
          inputId: "inputId",
          name: "name",
          inputStyleClass: "inputStyleClass",
          placeholder: "placeholder",
          ariaLabelledBy: "ariaLabelledBy",
          ariaLabel: "ariaLabel",
          iconAriaLabel: "iconAriaLabel",
          disabled: [2, "disabled", "disabled", xe],
          dateFormat: "dateFormat",
          multipleSeparator: "multipleSeparator",
          rangeSeparator: "rangeSeparator",
          inline: [2, "inline", "inline", xe],
          showOtherMonths: [2, "showOtherMonths", "showOtherMonths", xe],
          selectOtherMonths: [2, "selectOtherMonths", "selectOtherMonths", xe],
          showIcon: [2, "showIcon", "showIcon", xe],
          icon: "icon",
          appendTo: "appendTo",
          readonlyInput: [2, "readonlyInput", "readonlyInput", xe],
          shortYearCutoff: "shortYearCutoff",
          monthNavigator: [2, "monthNavigator", "monthNavigator", xe],
          yearNavigator: [2, "yearNavigator", "yearNavigator", xe],
          hourFormat: "hourFormat",
          timeOnly: [2, "timeOnly", "timeOnly", xe],
          stepYearPicker: [2, "stepYearPicker", "stepYearPicker", Hi],
          stepHour: [2, "stepHour", "stepHour", Hi],
          stepMinute: [2, "stepMinute", "stepMinute", Hi],
          stepSecond: [2, "stepSecond", "stepSecond", Hi],
          showSeconds: [2, "showSeconds", "showSeconds", xe],
          required: [2, "required", "required", xe],
          showOnFocus: [2, "showOnFocus", "showOnFocus", xe],
          showWeek: [2, "showWeek", "showWeek", xe],
          startWeekFromFirstDayOfYear: "startWeekFromFirstDayOfYear",
          showClear: [2, "showClear", "showClear", xe],
          dataType: "dataType",
          selectionMode: "selectionMode",
          maxDateCount: [2, "maxDateCount", "maxDateCount", Hi],
          showButtonBar: [2, "showButtonBar", "showButtonBar", xe],
          todayButtonStyleClass: "todayButtonStyleClass",
          clearButtonStyleClass: "clearButtonStyleClass",
          autofocus: [2, "autofocus", "autofocus", xe],
          autoZIndex: [2, "autoZIndex", "autoZIndex", xe],
          baseZIndex: [2, "baseZIndex", "baseZIndex", Hi],
          panelStyleClass: "panelStyleClass",
          panelStyle: "panelStyle",
          keepInvalid: [2, "keepInvalid", "keepInvalid", xe],
          hideOnDateTimeSelect: [
            2,
            "hideOnDateTimeSelect",
            "hideOnDateTimeSelect",
            xe,
          ],
          touchUI: [2, "touchUI", "touchUI", xe],
          timeSeparator: "timeSeparator",
          focusTrap: [2, "focusTrap", "focusTrap", xe],
          showTransitionOptions: "showTransitionOptions",
          hideTransitionOptions: "hideTransitionOptions",
          tabindex: [2, "tabindex", "tabindex", Hi],
          variant: "variant",
          minDate: "minDate",
          maxDate: "maxDate",
          disabledDates: "disabledDates",
          disabledDays: "disabledDays",
          yearRange: "yearRange",
          showTime: "showTime",
          responsiveOptions: "responsiveOptions",
          numberOfMonths: "numberOfMonths",
          firstDayOfWeek: "firstDayOfWeek",
          locale: "locale",
          view: "view",
          defaultDate: "defaultDate",
        },
        outputs: {
          onFocus: "onFocus",
          onBlur: "onBlur",
          onClose: "onClose",
          onSelect: "onSelect",
          onClear: "onClear",
          onInput: "onInput",
          onTodayClick: "onTodayClick",
          onClearClick: "onClearClick",
          onMonthChange: "onMonthChange",
          onYearChange: "onYearChange",
          onClickOutside: "onClickOutside",
          onShow: "onShow",
        },
        features: [St([p2]), kt],
        ngContentSelectors: TD,
        decls: 4,
        vars: 12,
        consts: [
          ["container", ""],
          ["inputfield", ""],
          ["contentWrapper", ""],
          [3, "ngClass", "ngStyle"],
          [3, "ngIf"],
          [3, "class", "ngStyle", "ngClass", "click", 4, "ngIf"],
          [
            "type",
            "text",
            "role",
            "combobox",
            "aria-autocomplete",
            "none",
            "aria-haspopup",
            "dialog",
            "autocomplete",
            "off",
            "pAutoFocus",
            "",
            3,
            "focus",
            "keydown",
            "click",
            "blur",
            "input",
            "value",
            "readonly",
            "ngStyle",
            "placeholder",
            "disabled",
            "ngClass",
            "autofocus",
          ],
          [4, "ngIf"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "class",
            "p-datepicker-trigger p-button-icon-only",
            "tabindex",
            "0",
            3,
            "disabled",
            "click",
            4,
            "ngIf",
          ],
          [3, "styleClass", "click", 4, "ngIf"],
          ["class", "p-calendar-clear-icon", 3, "click", 4, "ngIf"],
          [3, "click", "styleClass"],
          [1, "p-calendar-clear-icon", 3, "click"],
          [4, "ngTemplateOutlet"],
          [
            "type",
            "button",
            "aria-haspopup",
            "dialog",
            "pButton",
            "",
            "pRipple",
            "",
            "tabindex",
            "0",
            1,
            "p-datepicker-trigger",
            "p-button-icon-only",
            3,
            "click",
            "disabled",
          ],
          [3, "ngClass", 4, "ngIf"],
          [3, "ngClass"],
          [3, "ngClass", "click", 4, "ngIf"],
          [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
          [3, "click", "ngClass"],
          [3, "click", "ngStyle", "ngClass"],
          ["class", "p-timepicker", 4, "ngIf"],
          ["class", "p-datepicker-buttonbar", 4, "ngIf"],
          [1, "p-datepicker-group-container"],
          ["class", "p-datepicker-group", 4, "ngFor", "ngForOf"],
          ["class", "p-monthpicker", 4, "ngIf"],
          ["class", "p-yearpicker", 4, "ngIf"],
          [1, "p-datepicker-group"],
          [1, "p-datepicker-header"],
          [
            "class",
            "p-datepicker-prev p-link",
            "type",
            "button",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            4,
            "ngIf",
          ],
          [1, "p-datepicker-title"],
          [
            "type",
            "button",
            "class",
            "p-datepicker-month p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          [
            "type",
            "button",
            "class",
            "p-datepicker-year p-link",
            3,
            "disabled",
            "click",
            "keydown",
            4,
            "ngIf",
          ],
          ["class", "p-datepicker-decade", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-next",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          [3, "styleClass", 4, "ngIf"],
          ["class", "p-datepicker-next-icon", 4, "ngIf"],
          ["class", "p-datepicker-calendar-container", 4, "ngIf"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-datepicker-prev",
            "p-link",
            3,
            "keydown",
            "click",
          ],
          ["class", "p-datepicker-prev-icon", 4, "ngIf"],
          [3, "styleClass"],
          [1, "p-datepicker-prev-icon"],
          [
            "type",
            "button",
            1,
            "p-datepicker-month",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [
            "type",
            "button",
            1,
            "p-datepicker-year",
            "p-link",
            3,
            "click",
            "keydown",
            "disabled",
          ],
          [1, "p-datepicker-decade"],
          [1, "p-datepicker-next-icon"],
          [1, "p-datepicker-calendar-container"],
          ["role", "grid", 1, "p-datepicker-calendar"],
          ["class", "p-datepicker-weekheader p-disabled", 4, "ngIf"],
          ["scope", "col", 4, "ngFor", "ngForOf"],
          [4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weekheader", "p-disabled"],
          ["scope", "col"],
          ["class", "p-datepicker-weeknumber", 4, "ngIf"],
          [3, "ngClass", 4, "ngFor", "ngForOf"],
          [1, "p-datepicker-weeknumber"],
          [1, "p-disabled"],
          [
            "draggable",
            "false",
            "pRipple",
            "",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          ["class", "p-hidden-accessible", "aria-live", "polite", 4, "ngIf"],
          ["aria-live", "polite", 1, "p-hidden-accessible"],
          [1, "p-monthpicker"],
          [
            "class",
            "p-monthpicker-month",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-monthpicker-month",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-yearpicker"],
          [
            "class",
            "p-yearpicker-year",
            "pRipple",
            "",
            3,
            "ngClass",
            "click",
            "keydown",
            4,
            "ngFor",
            "ngForOf",
          ],
          [
            "pRipple",
            "",
            1,
            "p-yearpicker-year",
            3,
            "click",
            "keydown",
            "ngClass",
          ],
          [1, "p-timepicker"],
          [1, "p-hour-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "keydown.enter",
            "keydown.space",
            "mousedown",
            "mouseup",
            "keyup.enter",
            "keyup.space",
            "mouseleave",
          ],
          [1, "p-separator"],
          [1, "p-minute-picker"],
          ["class", "p-separator", 4, "ngIf"],
          ["class", "p-second-picker", 4, "ngIf"],
          ["class", "p-ampm-picker", 4, "ngIf"],
          [1, "p-second-picker"],
          [1, "p-ampm-picker"],
          [
            "type",
            "button",
            "pRipple",
            "",
            1,
            "p-link",
            3,
            "keydown",
            "click",
            "keydown.enter",
          ],
          [1, "p-datepicker-buttonbar"],
          [
            "type",
            "button",
            "pButton",
            "",
            "pRipple",
            "",
            3,
            "keydown",
            "click",
            "label",
            "ngClass",
          ],
        ],
        template: function (i, o) {
          i & 1 &&
            (Lt(MD),
            c(0, "span", 3, 0),
            k(2, QD, 5, 22, "ng-template", 4)(3, h2, 9, 32, "div", 5),
            l()),
            i & 2 &&
              (Ae(o.styleClass),
              y(
                "ngClass",
                Rc(
                  6,
                  ED,
                  o.showIcon && o.iconDisplay === "input",
                  o.showIcon && o.iconDisplay === "button",
                  o.timeOnly,
                  o.disabled,
                  o.focus || o.overlayVisible
                )
              )("ngStyle", o.style),
              p(2),
              y("ngIf", !o.inline),
              p(),
              y("ngIf", o.inline || o.overlayVisible));
        },
        dependencies: () => [
          It,
          Bt,
          Ke,
          lr,
          sr,
          t0,
          Fl,
          Yu,
          ja,
          qu,
          Ku,
          Qu,
          Xu,
          Rl,
        ],
        styles: [
          `@layer primeng{.p-calendar{position:relative;display:inline-flex;max-width:100%}.p-calendar .p-inputtext{flex:1 1 auto;width:1%;text-overflow:ellipsis}.p-calendar-w-btn .p-inputtext{border-top-right-radius:0;border-bottom-right-radius:0}.p-calendar-w-btn .p-datepicker-trigger{border-top-left-radius:0;border-bottom-left-radius:0}.p-fluid .p-calendar{display:flex}.p-fluid .p-calendar .p-inputtext{width:1%}.p-calendar .p-datepicker{min-width:100%}.p-datepicker{width:auto;position:absolute;top:0;left:0}.p-datepicker-inline{display:inline-block;position:static;overflow-x:auto}.p-datepicker-header{display:flex;align-items:center;justify-content:space-between}.p-datepicker-header .p-datepicker-title{margin:0 auto}.p-datepicker-prev,.p-datepicker-next{cursor:pointer;display:inline-flex;justify-content:center;align-items:center;overflow:hidden;position:relative}.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group{flex:1 1 auto}.p-datepicker-multiple-month .p-datepicker-group-container{display:flex}.p-datepicker table{width:100%;border-collapse:collapse}.p-datepicker td>span{display:flex;justify-content:center;align-items:center;cursor:pointer;margin:0 auto;overflow:hidden;position:relative}.p-monthpicker-month{width:33.3%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-datepicker-buttonbar{display:flex;justify-content:space-between;align-items:center}.p-timepicker{display:flex;justify-content:center;align-items:center}.p-timepicker button{display:flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-timepicker>div{display:flex;align-items:center;flex-direction:column}.p-datepicker-touch-ui,.p-calendar .p-datepicker-touch-ui{position:fixed;top:50%;left:50%;min-width:80vw;transform:translate(-50%,-50%)}.p-yearpicker-year{width:50%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-calendar-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-datepicker-icon{pointer-events:none}.p-calendar-clearable{position:relative}}
`,
        ],
        encapsulation: 2,
        data: {
          animation: [
            To("overlayAnimation", [
              Ln(
                "visibleTouchUI",
                jt({ transform: "translate(-50%,-50%)", opacity: 1 })
              ),
              ki("void => visible", [
                jt({ opacity: 0, transform: "scaleY(0.8)" }),
                Ei(
                  "{{showTransitionParams}}",
                  jt({ opacity: 1, transform: "*" })
                ),
              ]),
              ki("visible => void", [
                Ei("{{hideTransitionParams}}", jt({ opacity: 0 })),
              ]),
              ki("void => visibleTouchUI", [
                jt({
                  opacity: 0,
                  transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                }),
                Ei("{{showTransitionParams}}"),
              ]),
              ki("visibleTouchUI => void", [
                Ei(
                  "{{hideTransitionParams}}",
                  jt({
                    opacity: 0,
                    transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                  })
                ),
              ]),
            ]),
          ],
        },
        changeDetection: 0,
      });
    }
    return n;
  })(),
  r0 = (() => {
    class n {
      static ɵfac = function (i) {
        return new (i || n)();
      };
      static ɵmod = _e({ type: n });
      static ɵinj = ge({
        imports: [De, Gu, ln, Jg, Yu, ja, qu, Ku, Qu, Xu, Xg, Gu, ln],
      });
    }
    return n;
  })();
var a0 = (() => {
  class n extends li {
    pathId;
    ngOnInit() {
      this.pathId = "url(#" + Ar() + ")";
    }
    static ɵfac = (() => {
      let e;
      return function (o) {
        return (e || (e = ut(n)))(o || n);
      };
    })();
    static ɵcmp = oe({
      type: n,
      selectors: [["HomeIcon"]],
      standalone: !0,
      features: [$e, re],
      decls: 6,
      vars: 7,
      consts: [
        [
          "width",
          "14",
          "height",
          "14",
          "viewBox",
          "0 0 14 14",
          "fill",
          "none",
          "xmlns",
          "http://www.w3.org/2000/svg",
        ],
        [
          "fill-rule",
          "evenodd",
          "clip-rule",
          "evenodd",
          "d",
          "M13.4175 6.79971C13.2874 6.80029 13.1608 6.75807 13.057 6.67955L12.4162 6.19913V12.6073C12.4141 12.7659 12.3502 12.9176 12.2379 13.0298C12.1257 13.142 11.9741 13.206 11.8154 13.208H8.61206C8.61179 13.208 8.61151 13.208 8.61123 13.2081C8.61095 13.208 8.61068 13.208 8.6104 13.208H5.41076C5.40952 13.208 5.40829 13.2081 5.40705 13.2081C5.40581 13.2081 5.40458 13.208 5.40334 13.208H2.20287C2.04418 13.206 1.89257 13.142 1.78035 13.0298C1.66813 12.9176 1.60416 12.7659 1.60209 12.6073V6.19914L0.961256 6.67955C0.833786 6.77515 0.673559 6.8162 0.515823 6.79367C0.358086 6.77114 0.215762 6.68686 0.120159 6.55939C0.0245566 6.43192 -0.0164931 6.2717 0.00604063 6.11396C0.0285744 5.95622 0.112846 5.8139 0.240316 5.7183L1.83796 4.52007L1.84689 4.51337L6.64868 0.912027C6.75267 0.834032 6.87915 0.79187 7.00915 0.79187C7.13914 0.79187 7.26562 0.834032 7.36962 0.912027L12.1719 4.51372L12.1799 4.51971L13.778 5.7183C13.8943 5.81278 13.9711 5.94732 13.9934 6.09553C14.0156 6.24373 13.9816 6.39489 13.8981 6.51934C13.8471 6.60184 13.7766 6.67054 13.6928 6.71942C13.609 6.76831 13.5144 6.79587 13.4175 6.79971ZM6.00783 12.0065H8.01045V7.60074H6.00783V12.0065ZM9.21201 12.0065V6.99995C9.20994 6.84126 9.14598 6.68965 9.03375 6.57743C8.92153 6.46521 8.76992 6.40124 8.61123 6.39917H5.40705C5.24836 6.40124 5.09675 6.46521 4.98453 6.57743C4.8723 6.68965 4.80834 6.84126 4.80627 6.99995V12.0065H2.80366V5.29836L7.00915 2.14564L11.2146 5.29836V12.0065H9.21201Z",
          "fill",
          "currentColor",
        ],
        [3, "id"],
        ["width", "14", "height", "14", "fill", "white"],
      ],
      template: function (i, o) {
        i & 1 &&
          (ct(),
          c(0, "svg", 0)(1, "g"),
          U(2, "path", 1),
          l(),
          c(3, "defs")(4, "clipPath", 2),
          U(5, "rect", 3),
          l()()()),
          i & 2 &&
            (Ae(o.getClassNames()),
            ae("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
              "role",
              o.role
            ),
            p(),
            ae("clip-path", o.pathId),
            p(3),
            y("id", o.pathId));
      },
      encapsulation: 2,
    });
  }
  return n;
})();
var za = (() => {
  class n {
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵmod = _e({ type: n });
    static ɵinj = ge({ imports: [De] });
  }
  return n;
})();
var s0 = (() => {
  class n {
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵmod = _e({ type: n });
    static ɵinj = ge({ imports: [De, xi, za, ja, a0, ln, xi, za, ln] });
  }
  return n;
})();
var $o = (n) => ({ "is-invalid": n });
function f2(n, t) {
  n & 1 &&
    (c(0, "tr")(1, "td", 53)(2, "p"), h(3, "No Accounts Found"), l()()());
}
function g2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "tr")(1, "td"),
      h(2),
      l(),
      c(3, "td"),
      h(4),
      l(),
      c(5, "td"),
      h(6),
      l(),
      c(7, "td"),
      h(8),
      l(),
      c(9, "td"),
      h(10),
      l(),
      c(11, "td", 55)(12, "a", 56),
      F("click", function () {
        let o = O(e).$implicit,
          r = w(2);
        return I(r.onEdit(o.account_id));
      }),
      U(13, "i", 57),
      l(),
      c(14, "a", 58),
      F("click", function () {
        let o = O(e).$implicit,
          r = w(2);
        return I(r.selectCustomerForDeletion(o));
      }),
      U(15, "i", 59),
      l(),
      c(16, "div", 60)(17, "div", 61)(18, "div", 23)(19, "div", 62)(
        20,
        "h5",
        63
      ),
      h(21, "Delete User"),
      l()(),
      c(22, "div", 64),
      h(23, "HEY ARE YOU SURE TO DELETE..!"),
      l(),
      c(24, "div", 50)(25, "button", 65),
      h(26, " Cancel "),
      l(),
      c(27, "button", 66),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.closeModal());
      })("click", function () {
        O(e);
        let o = w(2);
        return I(o.deleteCustomerId());
      }),
      h(28, " Delete "),
      l()()()()()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index;
    p(2),
      N(i + 1),
      p(2),
      N(e.fname),
      p(2),
      N(e.lname),
      p(2),
      N(e.email),
      p(2),
      N(e.phone);
  }
}
function _2(n, t) {
  if ((n & 1 && k(0, g2, 29, 5, "tr", 54), n & 2)) {
    let e = w();
    y("ngForOf", e.customerList());
  }
}
function b2(n, t) {
  n & 1 &&
    (c(0, "div", 67)(1, "span"), h(2, "Account Type is required."), l()());
}
function v2(n, t) {
  n & 1 && (c(0, "span"), h(1, "First Name is required."), l());
}
function y2(n, t) {
  n & 1 &&
    (c(0, "span"), h(1, "First Name must be at least 3 characters long."), l());
}
function x2(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 67),
      k(1, v2, 2, 0, "span", 68)(2, y2, 2, 0, "span", 68),
      l()),
    n & 2)
  ) {
    let e,
      i,
      o = w();
    p(),
      y(
        "ngIf",
        (e = o.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      p(),
      y(
        "ngIf",
        (i = o.useForm.get("fname")) == null || i.errors == null
          ? null
          : i.errors.minlength
      );
  }
}
function C2(n, t) {
  n & 1 && (c(0, "span"), h(1, "Last Name is required."), l());
}
function w2(n, t) {
  n & 1 &&
    (c(0, "span"), h(1, "Last Name must be at least 3 characters long."), l());
}
function D2(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 67),
      k(1, C2, 2, 0, "span", 68)(2, w2, 2, 0, "span", 68),
      l()),
    n & 2)
  ) {
    let e,
      i,
      o = w();
    p(),
      y(
        "ngIf",
        (e = o.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      p(),
      y(
        "ngIf",
        (i = o.useForm.get("lname")) == null || i.errors == null
          ? null
          : i.errors.minlength
      );
  }
}
function S2(n, t) {
  if ((n & 1 && (c(0, "option", 69), h(1), l()), n & 2)) {
    let e = t.$implicit;
    y("value", e.dealer_code), p(), K(" ", e.dealer_code, " ");
  }
}
function M2(n, t) {
  if ((n & 1 && (c(0, "option", 69), h(1), l()), n & 2)) {
    let e = t.$implicit;
    y("value", e.dealer_code), p(), K(" ", e.dealer_code, " ");
  }
}
function T2(n, t) {
  n & 1 && (c(0, "div", 67)(1, "span"), h(2, "Dealer is required."), l()());
}
function E2(n, t) {
  n & 1 && (c(0, "span"), h(1, "Email is required."), l());
}
function k2(n, t) {
  n & 1 && (c(0, "span"), h(1, "Please enter a valid email."), l());
}
function O2(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 67),
      k(1, E2, 2, 0, "span", 68)(2, k2, 2, 0, "span", 68),
      l()),
    n & 2)
  ) {
    let e,
      i,
      o = w();
    p(),
      y(
        "ngIf",
        (e = o.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      p(),
      y(
        "ngIf",
        (i = o.useForm.get("email")) == null || i.errors == null
          ? null
          : i.errors.email
      );
  }
}
function I2(n, t) {
  n & 1 && (c(0, "span"), h(1, "Phone is required."), l());
}
function P2(n, t) {
  n & 1 &&
    (c(0, "span"), h(1, "Phone must be at least 3 characters long."), l());
}
function A2(n, t) {
  n & 1 && (c(0, "span"), h(1, "Phone must contain only numbers."), l());
}
function R2(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 67),
      k(1, I2, 2, 0, "span", 68)(2, P2, 2, 0, "span", 68)(
        3,
        A2,
        2,
        0,
        "span",
        68
      ),
      l()),
    n & 2)
  ) {
    let e,
      i,
      o,
      r = w();
    p(),
      y(
        "ngIf",
        (e = r.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      p(),
      y(
        "ngIf",
        (i = r.useForm.get("phone")) == null || i.errors == null
          ? null
          : i.errors.minlength
      ),
      p(),
      y(
        "ngIf",
        (o = r.useForm.get("phone")) == null || o.errors == null
          ? null
          : o.errors.pattern
      );
  }
}
function F2(n, t) {
  n & 1 && (c(0, "span"), h(1, "Mobile is required."), l());
}
function N2(n, t) {
  n & 1 &&
    (c(0, "span"), h(1, "Mobile must be at least 3 characters long."), l());
}
function V2(n, t) {
  n & 1 && (c(0, "span"), h(1, "Mobile must contain only numbers."), l());
}
function L2(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 67),
      k(1, F2, 2, 0, "span", 68)(2, N2, 2, 0, "span", 68)(
        3,
        V2,
        2,
        0,
        "span",
        68
      ),
      l()),
    n & 2)
  ) {
    let e,
      i,
      o,
      r = w();
    p(),
      y(
        "ngIf",
        (e = r.useForm.get("mobile")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      p(),
      y(
        "ngIf",
        (i = r.useForm.get("mobile")) == null || i.errors == null
          ? null
          : i.errors.minlength
      ),
      p(),
      y(
        "ngIf",
        (o = r.useForm.get("mobile")) == null || o.errors == null
          ? null
          : o.errors.pattern
      );
  }
}
function B2(n, t) {
  if (n & 1) {
    let e = ee();
    je(0),
      c(1, "button", 70),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.onUpdate());
      }),
      h(2, " Edit "),
      l(),
      ze();
  }
  if (n & 2) {
    let e = w();
    p(), y("disabled", !e.isCustomerNameChanged());
  }
}
function H2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 66),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.onSave());
      }),
      h(1, " save "),
      l();
  }
  if (n & 2) {
    let e = w();
    ae("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
var Nl = class n {
  constructor(t, e) {
    this.modalService = t;
    this.cdRef = e;
    this.initializeForm();
  }
  totalCustomer = le(0);
  customerList = le([]);
  dealerList = le([]);
  masterSrv = J(We);
  toastr = J(ai);
  previousEmail = "";
  useForm = new vt({});
  customerObj = new La();
  dealerObj = new Yn();
  isEditMode = !1;
  previousValue = "";
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  ngOnInit() {
    this.initializeForm(),
      this.loadCustomers(),
      this.loadDealers(),
      this.getAllCustomer();
  }
  isModalVisible = !1;
  initializeForm() {
    this.useForm = new vt({
      account_type: new Ze("", [we.required]),
      fname: new Ze("", [we.required, we.minLength(3)]),
      lname: new Ze("", [we.required, we.minLength(3)]),
      email: new Ze("", [we.required, we.email]),
      phone: new Ze("", [we.required, we.pattern(/^\d+$/)]),
      mobile: new Ze("", [we.required, we.pattern(/^\d+$/)]),
      dealer_code: new Ze("", [we.required]),
    });
  }
  openModal(t) {
    (this.isEditMode = !1),
      console.log("hello openmodal", t),
      this.useForm.reset(),
      (this.isModalVisible = !0),
      t
        ? (console.log("\u{1F680} Customer Data:", t),
          (this.customerObj = ne({}, t)),
          (this.previousValue = t.account_name || ""),
          this.useForm.patchValue({
            account_type: t.account_type || "",
            fname: t.fname || "",
            lname: t.lname || "",
            email: t.email || "",
            phone: t.phone || "",
            mobile: t.mobile || "",
            dealer_code: t.dealer_code || "",
          }),
          (this.previousEmail = t.email || ""),
          console.log("Edit Mode: Customer Object ->", this.customerObj))
        : ((this.customerObj = new La()),
          (this.customerObj.account_id = ""),
          console.log(
            "New Customer Mode: Reset customerObj",
            this.customerObj
          ));
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalVisible = !1);
  }
  isEmailChange() {
    return this.useForm.value.email !== this.previousValue;
  }
  loadCustomers() {
    this.masterSrv.getAllCustomer().subscribe(
      (t) => {
        console.log("Fetched Accounts:", t),
          this.customerList.set(t.data.rows),
          this.totalCustomer.set(t.data.count);
      },
      (t) => {
        console.error("Error fetching customers:", t),
          this.toastr.error("Failed to load customers", "Error");
      }
    );
  }
  getDealerCode(t) {
    let e = this.dealerList().find((i) => i.dealer_id === t);
    return console.log(this.dealerList), e?.dealer_code?.toString() ?? "N/A";
  }
  onDealerChange() {
    console.log("on dealer chnage func called "),
      console.log("\u{1F4DD} Dealer List:", this.dealerList());
    let t = this.dealerList().find(
      (e) => e.dealer_id === this.customerObj.dealer_id
    );
    console.log("Selected Dealer:", t),
      t &&
        ((this.customerObj.dealer_code = t.dealer_code),
        this.useForm.patchValue({ dealer_code: t.dealer_code }));
  }
  loadDealers() {
    this.masterSrv.getAllDealer().subscribe(
      (t) => {
        this.dealerList.set(t.data.dealer.rows), console.log(t);
      },
      (t) => {
        this.toastr.error("Serverside Error", "Error");
      }
    );
  }
  createCustomer() {
    console.log("create cust called "),
      console.log("\u{1F6E0} Submitting customer data:", this.customerObj),
      console.log("\u{1F6E0} createCustomer() triggered!"),
      this.masterSrv.createCustomer(this.customerObj).subscribe(
        (t) => {
          this.toastr.success("Customerrr created successfully!", "Success"),
            this.getAllCustomer();
        },
        (t) => {
          this.toastr.error("Error creating dealer", "Error");
        }
      );
  }
  selectedCustomerForDeletion = null;
  selectCustomerForDeletion(t) {
    this.selectedCustomerForDeletion = t;
  }
  deleteCustomerId() {
    console.log(
      "this is the select user",
      this.selectCustomerForDeletion,
      this.selectedCustomerForDeletion
    ),
      this.selectedCustomerForDeletion &&
      this.selectedCustomerForDeletion.account_id
        ? this.masterSrv
            .deleteCustomer(this.selectedCustomerForDeletion.account_id)
            .subscribe(
              (t) => {
                this.toastr.success("Accounts deleted successfully", "Success"),
                  this.getAllCustomer(),
                  $("#deleteModal").modal("hide"),
                  $(".modal-backdrop").remove(),
                  $("body").removeClass("modal-open");
              },
              (t) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No accounts selected for deletion");
  }
  onUpdate() {
    console.log("onupdate called "),
      this.useForm.valid
        ? ((this.customerObj = ne(
            ne({}, this.customerObj),
            this.useForm.value
          )),
          console.log(
            "\u{1F680} Updated Payload before API call:",
            this.customerObj
          ),
          this.masterSrv.updateCustomer(this.customerObj).subscribe(
            (t) => {
              console.log("\u2705 API Response:", t),
                t.status === 200
                  ? (this.toastr.success(t.message, "Success"),
                    setTimeout(() => {
                      this.getAllCustomer();
                    }, 500))
                  : this.toastr.error(
                      "Update failed, no data received",
                      "Error"
                    );
            },
            (t) => {
              console.error("\u274C API Error:", t),
                this.toastr.error("Failed to update customer", "Error");
            }
          ))
        : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  getAllCustomer() {
    this.masterSrv.getAllCustomer().subscribe(
      (t) => {
        console.log("Fetched Customers:", t),
          console.log("customer list updated:", t.data.rows),
          this.customerList.set(t.data.rows),
          this.totalCustomer.set(t.data.count);
      },
      (t) => {
        this.toastr.error("Error fetching dealers", "Error");
      }
    );
  }
  onEdit(t) {
    console.log("Edit button clicked. Dealer ID:", t),
      (this.isEditMode = !0),
      this.masterSrv.getCustomerById(t).subscribe(
        (e) => {
          if ((console.log("API Response:", e), e?.data)) {
            let i = e.data;
            (this.customerObj = et(ne({}, i), {
              dealer_code: Number(i.dealer_code),
            })),
              this.useForm.patchValue({
                dealer_code: Number(i.dealer_code),
                dealer_name: i.account_name || "",
                account_type: i.account_type || "",
                fname: i.fname || "",
                lname: i.lname || "",
                email: i.email || "",
                phone: i.phone || "",
                mobile: i.mobile || "",
                account_id: i.account_id || "",
              }),
              console.log("Dealer data set, opening modal..."),
              setTimeout(() => {
                $("#exampleModalCenter").modal("show");
              }, 0);
          } else
            console.error("Dealer data is missing in response:", e),
              this.toastr.error("Dealer data not found", "Error");
        },
        (e) => {
          console.error("Error fetching dealer details:", e),
            this.toastr.error("Error fetching dealer details", "Error");
        }
      );
  }
  isCustomerNameChanged() {
    return this.useForm.value.name !== this.previousValue;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let t = this.useForm.value;
    console.log("Form Data being sent to API:", t),
      this.masterSrv.createCustomer(t).subscribe({
        next: () => {
          this.toastr.success("Accounts created successfully!", "Success"),
            this.getAllCustomer(),
            this.closeModal();
        },
        error: (e) => {
          console.error("Accounts creation error:", e),
            this.toastr.error(
              e.message || "Failed to create user",
              "Creation Error"
            );
        },
      });
  }
  createNewCustomer() {
    this.masterSrv.createCustomer(this.customerObj).subscribe(
      (t) => {
        this.toastr.success("customer created successfully!", "Success"),
          this.getAllCustomer();
      },
      (t) => {
        this.toastr.error("Error creating dealer", "Error");
      }
    );
  }
  static ɵfac = function (e) {
    return new (e || n)(B(Mn), B(Xe));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-customer"]],
    standalone: !0,
    features: [re],
    decls: 109,
    vars: 36,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-md-4", "col-sm-4", "mb-4", "mb-xl-0"],
      [
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "col-sm-4", "col-md-4", "mb-4", "mb-xl-0"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [1, "row"],
      [1, "col-lg-12"],
      [1, "table-responsive"],
      [
        "id",
        "example5",
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-lg",
        "custom-modal",
      ],
      [1, "modal-dialog", "modal-lg"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", 2, "align-items", "center", "margin-inline", "auto"],
      ["type", "button", "data-dismiss", "modal", 1, "close"],
      [1, "x"],
      [1, "modal-body", 3, "formGroup"],
      [1, "form-group", "col-md-6"],
      ["for", "account_type", 1, "form-label"],
      [
        "formControlName",
        "account_type",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["value", "null", "disabled", ""],
      ["value", "Individual"],
      ["value", "Corporate"],
      ["value", "Retailer"],
      ["class", "text-danger", 4, "ngIf"],
      ["for", "fname", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "First Name",
        "formControlName",
        "fname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "name", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Last Name",
        "formControlName",
        "lname",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_code", 1, "form-label"],
      [
        "id",
        "dealer_code",
        "formControlName",
        "dealer_code",
        1,
        "form-select",
        "form-control",
        "form-control-lg",
        3,
        "change",
        "disabled",
        "ngClass",
      ],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "email", 1, "form-label"],
      [
        "type",
        "email",
        "placeholder",
        "E-mail",
        "formControlName",
        "email",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "phone", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Phone",
        "formControlName",
        "phone",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "mobile", 1, "form-label"],
      [
        "type",
        "text",
        "placeholder",
        "Mobile",
        "formControlName",
        "mobile",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      ["colspan", "6", 1, "text-center"],
      [4, "ngFor", "ngForOf"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        "data-toggle",
        "modal",
        "data-target",
        ".bd-example-modal-sm",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [
        "tabindex",
        "-1",
        "role",
        "dialog",
        "aria-hidden",
        "true",
        1,
        "modal",
        "fade",
        "bd-example-modal-sm",
      ],
      [1, "modal-dialog", "modal-sm"],
      [1, "modal-header", "text-center", 2, "margin-inline", "auto"],
      [1, "modal-title", "text-center"],
      [1, "modal-body"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      [1, "text-danger"],
      [4, "ngIf"],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, i) {
      if (e & 1) {
        let o = ee();
        c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
          h(6, "Utils"),
          l()(),
          c(7, "li", 7)(8, "a", 8),
          h(9, "Accounts"),
          l()()()(),
          c(10, "div", 9)(11, "div", 10)(12, "a", 11),
          F("click", function () {
            return O(o), I(i.openModal(i.customerObj));
          }),
          U(13, "i", 12),
          h(14, "Add Account"),
          l()(),
          c(15, "div", 13)(16, "div", 14)(17, "p", 15),
          h(18, "Total Account"),
          l(),
          c(19, "h3", 16),
          h(20),
          l()()()(),
          c(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "table", 20)(
            25,
            "thead"
          )(26, "tr")(27, "th"),
          h(28, "Sr No"),
          l(),
          c(29, "th"),
          h(30, "Account Name"),
          l(),
          c(31, "th"),
          h(32, "Last Name"),
          l(),
          c(33, "th"),
          h(34, "E-mail"),
          l(),
          c(35, "th"),
          h(36, "Phone"),
          l(),
          c(37, "th"),
          h(38, "Action"),
          l()()(),
          c(39, "tbody"),
          k(40, f2, 4, 0, "tr")(41, _2, 1, 1, "tr"),
          l()()()()()()(),
          c(42, "div", 21)(43, "div", 22)(44, "div", 23)(45, "div", 24)(
            46,
            "h5",
            25
          ),
          h(47, " Add New Account "),
          l(),
          c(48, "button", 26)(49, "span", 27),
          h(50, "\xD7"),
          l()()(),
          c(51, "div", 28)(52, "div", 17)(53, "div", 29)(54, "label", 30),
          h(55, "Account Type"),
          l(),
          c(56, "select", 31)(57, "option", 32),
          h(58, "Select Account Type"),
          l(),
          c(59, "option", 33),
          h(60, "Individual"),
          l(),
          c(61, "option", 34),
          h(62, "Corporate"),
          l(),
          c(63, "option", 35),
          h(64, "Retailer"),
          l()(),
          k(65, b2, 3, 0, "div", 36),
          l(),
          c(66, "div", 29)(67, "label", 37),
          h(68, "First Name"),
          l(),
          U(69, "input", 38),
          k(70, x2, 3, 2, "div", 36),
          l()(),
          c(71, "div", 17)(72, "div", 29)(73, "label", 39),
          h(74, "Last Name"),
          l(),
          U(75, "input", 40),
          k(76, D2, 3, 2, "div", 36),
          l(),
          c(77, "div", 29)(78, "label", 41),
          h(79, "Dealer Code"),
          l(),
          c(80, "select", 42),
          F("change", function () {
            return O(o), I(i.onDealerChange());
          }),
          c(81, "option", 32),
          h(82, "Select Dealer"),
          l(),
          k(83, S2, 2, 2, "option", 43)(84, M2, 2, 2, "option", 43),
          l(),
          k(85, T2, 3, 0, "div", 36),
          l()(),
          c(86, "div", 17)(87, "div", 29)(88, "label", 44),
          h(89, "E-mail"),
          l(),
          U(90, "input", 45),
          k(91, O2, 3, 2, "div", 36),
          l(),
          c(92, "div", 29)(93, "label", 46),
          h(94, "Phone"),
          l(),
          U(95, "input", 47),
          k(96, R2, 4, 3, "div", 36),
          l()(),
          c(97, "div", 17)(98, "div", 29)(99, "label", 48),
          h(100, "Mobile"),
          l(),
          U(101, "input", 49),
          k(102, L2, 4, 3, "div", 36),
          l()()(),
          c(103, "div", 50),
          k(104, B2, 3, 1, "ng-container", 51),
          c(105, "button", 52),
          F("click", function () {
            return O(o), I(i.closeModal());
          }),
          h(106, " Close "),
          l(),
          k(107, H2, 2, 1, "ng-template", null, 0, Ot),
          l()()()();
      }
      if (e & 2) {
        let o,
          r,
          a,
          d,
          m,
          _,
          v,
          S,
          T,
          M,
          A,
          j,
          z,
          L,
          ue,
          Ve = ht(108);
        p(20),
          K(" ", i.totalCustomer(), " "),
          p(20),
          on(i.customerList().length === 0 ? 40 : 41),
          p(11),
          y("formGroup", i.useForm),
          p(5),
          y(
            "ngClass",
            he(
              22,
              $o,
              ((o = i.useForm.get("account_type")) == null
                ? null
                : o.touched) &&
                ((o = i.useForm.get("account_type")) == null ? null : o.invalid)
            )
          ),
          p(9),
          y(
            "ngIf",
            ((r = i.useForm.get("account_type")) == null ? null : r.touched) &&
              ((r = i.useForm.get("account_type")) == null ? null : r.invalid)
          ),
          p(4),
          y(
            "ngClass",
            he(
              24,
              $o,
              ((a = i.useForm.get("fname")) == null ? null : a.touched) &&
                ((a = i.useForm.get("fname")) == null ? null : a.invalid)
            )
          ),
          p(),
          y(
            "ngIf",
            ((d = i.useForm.get("fname")) == null ? null : d.touched) &&
              ((d = i.useForm.get("fname")) == null ? null : d.invalid)
          ),
          p(5),
          y(
            "ngClass",
            he(
              26,
              $o,
              ((m = i.useForm.get("lname")) == null ? null : m.touched) &&
                ((m = i.useForm.get("lname")) == null ? null : m.invalid)
            )
          ),
          p(),
          y(
            "ngIf",
            ((_ = i.useForm.get("lname")) == null ? null : _.touched) &&
              ((_ = i.useForm.get("lname")) == null ? null : _.invalid)
          ),
          p(4),
          y(
            "disabled",
            (v = i.useForm.get("account_id")) == null ? null : v.value
          )(
            "ngClass",
            he(
              28,
              $o,
              ((S = i.useForm.get("dealer_code")) == null ? null : S.touched) &&
                ((S = i.useForm.get("dealer_code")) == null ? null : S.invalid)
            )
          ),
          p(3),
          y("ngForOf", i.dealerList()),
          p(),
          y("ngForOf", i.staticDealerList),
          p(),
          y(
            "ngIf",
            ((T = i.useForm.get("dealer_code")) == null ? null : T.touched) &&
              ((T = i.useForm.get("dealer_code")) == null ? null : T.invalid)
          ),
          p(5),
          y(
            "ngClass",
            he(
              30,
              $o,
              ((M = i.useForm.get("email")) == null ? null : M.touched) &&
                ((M = i.useForm.get("email")) == null ? null : M.invalid)
            )
          ),
          p(),
          y(
            "ngIf",
            ((A = i.useForm.get("email")) == null ? null : A.touched) &&
              ((A = i.useForm.get("email")) == null ? null : A.invalid)
          ),
          p(4),
          y(
            "ngClass",
            he(
              32,
              $o,
              ((j = i.useForm.get("phone")) == null ? null : j.touched) &&
                ((j = i.useForm.get("phone")) == null ? null : j.invalid)
            )
          ),
          p(),
          y(
            "ngIf",
            ((z = i.useForm.get("phone")) == null ? null : z.touched) &&
              ((z = i.useForm.get("phone")) == null ? null : z.invalid)
          ),
          p(5),
          y(
            "ngClass",
            he(
              34,
              $o,
              ((L = i.useForm.get("mobile")) == null ? null : L.touched) &&
                ((L = i.useForm.get("mobile")) == null ? null : L.invalid)
            )
          ),
          p(),
          y(
            "ngIf",
            ((ue = i.useForm.get("mobile")) == null ? null : ue.touched) &&
              ((ue = i.useForm.get("mobile")) == null ? null : ue.invalid)
          ),
          p(2),
          y("ngIf", i.customerObj.account_id)("ngIfElse", Ve);
      }
    },
    dependencies: [
      De,
      It,
      Bt,
      Ke,
      wi,
      ni,
      oi,
      Yt,
      zi,
      ii,
      Ci,
      it,
      Ol,
      Uo,
      Tl,
      Ml,
      Ui,
      Ii,
      Pi,
      r0,
      s0,
      xi,
      Mn,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:350px;padding:20px;flex-grow:1}",
    ],
  });
};
var d0 = x_(c0());
var j2 = () => ["/Admin/dealer"],
  z2 = (n) => ["/Admin/single-task", n];
function U2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 11)(1, "div", 19)(2, "div", 29)(3, "div", 30)(4, "p", 31),
      h(5),
      l(),
      c(6, "h4", 32),
      h(7, " Dealer Code : "),
      c(8, "span", 33),
      h(9),
      l()()()()(),
      c(10, "div", 19)(11, "div", 34),
      F("click", function () {
        O(e);
        let o = w();
        return (
          o.toggleUsersTable(),
          I(o.getAllUser(o.dealerData.data.dealer.dealer_code))
        );
      }),
      c(12, "div", 30)(13, "p", 31),
      h(14, "Total Users"),
      l(),
      c(15, "h4", 32)(16, "span", 33),
      h(17),
      l(),
      h(18, " User "),
      l()()()(),
      c(19, "div", 19)(20, "div", 35),
      F("click", function () {
        O(e);
        let o = w();
        return (
          o.toggleOpportunityTable(),
          I(o.getAllOpp(o.dealerData.data.dealer.dealer_id))
        );
      }),
      c(21, "p", 31),
      h(22, "Total Opportunities"),
      l(),
      c(23, "h4", 32)(24, "span", 33),
      h(25),
      l(),
      h(26, " Opportunities "),
      l()()(),
      c(27, "div", 19)(28, "div", 34),
      F("click", function () {
        O(e);
        let o = w();
        return (
          o.toggleLeadsTable(),
          I(o.getAllLeads(o.dealerData.data.dealer.dealer_id))
        );
      }),
      c(29, "div", 30)(30, "p", 31),
      h(31, "Total Lead"),
      l(),
      c(32, "h4", 32)(33, "span", 33),
      h(34),
      l(),
      h(35, " Lead "),
      l()()()(),
      c(36, "div", 19)(37, "div", 34),
      F("click", function () {
        O(e);
        let o = w();
        return (
          o.toggleTasksTable(),
          I(o.getAllTasks(o.dealerData.data.dealer.dealer_id))
        );
      }),
      c(38, "div", 30)(39, "p", 31),
      h(40, "Total Tasks"),
      l(),
      c(41, "h4", 32)(42, "span", 33),
      h(43),
      l(),
      h(44, " Tasks "),
      l()()()(),
      c(45, "div", 19)(46, "div", 34),
      F("click", function () {
        O(e);
        let o = w();
        return (
          o.toggleEventTable(),
          I(o.getAllEvent(o.dealerData.data.dealer.dealer_id))
        );
      }),
      c(47, "div", 30)(48, "p", 31),
      h(49, "Total Events"),
      l(),
      c(50, "h4", 32)(51, "span", 33),
      h(52),
      l(),
      h(53, " Events "),
      l()()()()();
  }
  if (n & 2) {
    let e = w();
    p(5),
      K(" ", e.dealerData.data.dealer.dealer_name, " "),
      p(4),
      N(e.dealerData.data.dealer.dealer_code),
      p(8),
      N(e.dealerData.data.users),
      p(8),
      N(e.dealerData.data.opportunities),
      p(9),
      N(e.dealerData.data.leads),
      p(9),
      N(e.dealerData.data.tasks),
      p(9),
      K("", e.dealerData.data.events, " ");
  }
}
function W2(n, t) {
  n & 1 &&
    (c(0, "tr")(1, "td", 52)(2, "p", 53), h(3, " No Users Found "), l()()());
}
function $2(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr")(1, "td", 49),
      h(2),
      l(),
      c(3, "td", 49),
      h(4),
      l(),
      c(5, "td", 49),
      h(6),
      l(),
      c(7, "td", 49),
      h(8),
      l(),
      c(9, "td", 49),
      h(10),
      l(),
      c(11, "td", 49),
      h(12),
      l(),
      c(13, "td", 49),
      h(14),
      l()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      o = w(3);
    p(2),
      N((o.currentPage - 1) * o.itemsPerPage + i + 1),
      p(2),
      N(e.user_account_id || "N/A"),
      p(2),
      N(e.name || "N/A"),
      p(2),
      N(e.email || "N/A"),
      p(2),
      N(e.phone || "N/A"),
      p(2),
      N(e.user_role || "N/A"),
      p(2),
      N(e.dealer_code || "N/A");
  }
}
function G2(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 47)(1, "table", 48)(2, "thead")(3, "tr")(4, "th", 49),
      h(5, "Sr No"),
      l(),
      c(6, "th", 49),
      h(7, "Account ID"),
      l(),
      c(8, "th", 49),
      h(9, "Name"),
      l(),
      c(10, "th", 49),
      h(11, "Email"),
      l(),
      c(12, "th", 49),
      h(13, "Phone"),
      l(),
      c(14, "th", 49),
      h(15, "Role"),
      l(),
      c(16, "th", 49),
      h(17, "Dealer Code"),
      l()()(),
      c(18, "tbody"),
      k(19, W2, 4, 0, "tr", 50)(20, $2, 15, 7, "tr", 51),
      l()()()),
    n & 2)
  ) {
    let e = w(2);
    p(19),
      y("ngIf", !e.paginatedUsers || e.paginatedUsers.length === 0),
      p(),
      y("ngForOf", e.paginatedUsers);
  }
}
function Y2(n, t) {
  if ((n & 1 && (je(0), h(1), ze()), n & 2)) {
    let e = w(2);
    p(),
      _i(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalUsers,
        " entries "
      );
  }
}
function q2(n, t) {
  n & 1 && h(0, " No entries available ");
}
function K2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "li", 44)(1, "button", 45),
      F("click", function () {
        let o = O(e).$implicit,
          r = w(2);
        return I(r.goToPage(o));
      }),
      h(2),
      l()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w(2);
    fe("active", e === i.currentPage)(
      "disabled",
      !i.hasDataForPage(e) || i.totalUsers === 0
    ),
      p(),
      y("disabled", !i.hasDataForPage(e) || i.totalUsers === 0),
      p(),
      K(" ", e, " ");
  }
}
function Q2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 36),
      k(1, G2, 21, 2, "div", 37),
      c(2, "div", 38)(3, "div", 39)(4, "p", 40),
      k(5, Y2, 2, 3, "ng-container", 41)(
        6,
        q2,
        1,
        0,
        "ng-template",
        null,
        0,
        Ot
      ),
      l()(),
      c(8, "div", 39)(9, "nav", 42)(10, "ul", 43)(11, "li", 44)(
        12,
        "button",
        45
      ),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.goToPreviousPage());
      }),
      h(13, " Previous "),
      l()(),
      k(14, K2, 3, 6, "li", 46),
      c(15, "li", 44)(16, "button", 45),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.goToNextPage());
      }),
      h(17, " Next "),
      l()()()()()()();
  }
  if (n & 2) {
    let e = ht(7),
      i = w();
    p(),
      y("ngIf", i.selectedOption() === "users"),
      p(4),
      y(
        "ngIf",
        i.totalUsers > 0 && (i.currentPage - 1) * i.itemsPerPage < i.totalUsers
      )("ngIfElse", e),
      p(6),
      fe("disabled", i.currentPage === 1 || i.totalUsers === 0),
      p(),
      y("disabled", i.currentPage === 1 || i.totalUsers === 0),
      p(2),
      y("ngForOf", i.visiblePageNumbers),
      p(),
      fe("disabled", i.currentPage === i.totalPages || i.totalUsers === 0),
      p(),
      y("disabled", i.currentPage === i.totalPages || i.totalUsers === 0);
  }
}
function X2(n, t) {
  n & 1 &&
    (c(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Users Found "), l()()());
}
function Z2(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr", 49)(1, "td"),
      h(2),
      l(),
      c(3, "td"),
      h(4),
      l(),
      c(5, "td"),
      h(6),
      l(),
      c(7, "td"),
      h(8),
      l(),
      c(9, "td"),
      h(10),
      l(),
      c(11, "td"),
      h(12),
      l(),
      c(13, "td"),
      h(14),
      l(),
      c(15, "td"),
      h(16),
      l(),
      c(17, "td"),
      h(18),
      l(),
      c(19, "td"),
      h(20),
      l(),
      c(21, "td"),
      h(22),
      l(),
      c(23, "td"),
      h(24),
      l()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      o = w(2);
    p(2),
      N((o.currentPage - 1) * o.itemsPerPage + i + 1),
      p(2),
      N(e.lead_code || "N/A"),
      p(2),
      N(e.dealer_name || "N/A"),
      p(2),
      N(e.status || "N/A"),
      p(2),
      N(e.purchase_type || "N/A"),
      p(2),
      N(e.type || "N/A"),
      p(2),
      N(e.sub_type || "N/A"),
      p(2),
      N(e.brand || "N/A"),
      p(2),
      N(e.PMI || "N/A"),
      p(2),
      N(e.lead_source || "N/A"),
      p(2),
      N(e.lname || "N/A"),
      p(2),
      N(e.mobile || "N/A");
  }
}
function J2(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "li", 44)(1, "button", 45),
      F("click", function () {
        let o = O(e).$implicit,
          r = w(2);
        return I(r.goToLeadPage(o));
      }),
      h(2),
      l()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w(2);
    fe("active", e === i.currentPage)("disabled", i.totalLeads === 0),
      p(),
      y("disabled", i.totalLeads === 0),
      p(),
      K(" ", e, " ");
  }
}
function eM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead")(4, "tr")(
      5,
      "th",
      49
    ),
      h(6, "Sr No"),
      l(),
      c(7, "th", 49),
      h(8, "Lead"),
      U(9, "br"),
      h(10, " Code"),
      l(),
      c(11, "th", 49),
      h(12, "Dealer "),
      U(13, "br"),
      h(14, "Name"),
      l(),
      c(15, "th", 49),
      h(16, "Status"),
      l(),
      c(17, "th", 49),
      h(18, "Purchase "),
      U(19, "br"),
      h(20, " Type"),
      l(),
      c(21, "th", 49),
      h(22, "Type"),
      l(),
      c(23, "th", 49),
      h(24, "Sub "),
      U(25, "br"),
      h(26, "Type"),
      l(),
      c(27, "th", 49),
      h(28, "Brand"),
      l(),
      c(29, "th", 49),
      h(30, "PMI"),
      l(),
      c(31, "th", 49),
      h(32, "Lead"),
      U(33, "br"),
      h(34, " Source"),
      l(),
      c(35, "th", 49),
      h(36, "Last"),
      U(37, "br"),
      h(38, " Name"),
      l(),
      c(39, "th", 49),
      h(40, "Mobile"),
      l()()(),
      c(41, "tbody"),
      k(42, X2, 4, 0, "tr", 50)(43, Z2, 25, 12, "tr", 56),
      l()()(),
      c(44, "div", 38)(45, "div", 39)(46, "p", 40),
      h(47),
      l()(),
      c(48, "div", 39)(49, "nav", 42)(50, "ul", 43)(51, "li", 44)(
        52,
        "button",
        45
      ),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.goToPreviousLeadPage());
      }),
      h(53, " Previous "),
      l()(),
      k(54, J2, 3, 6, "li", 46),
      c(55, "li", 44)(56, "button", 45),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.goToNextLeadPage());
      }),
      h(57, " Next "),
      l()()()()()()();
  }
  if (n & 2) {
    let e = w();
    p(42),
      y("ngIf", !e.paginatedLeads || e.paginatedLeads.length === 0),
      p(),
      y("ngForOf", e.paginatedLeads),
      p(4),
      _i(
        " Showing ",
        (e.currentPage - 1) * e.itemsPerPage + 1,
        " \u2013 ",
        e.getRangeEnd(),
        " of ",
        e.totalLeads,
        " entries "
      ),
      p(4),
      fe("disabled", e.currentPage === 1 || e.totalLeads === 0),
      p(),
      y("disabled", e.currentPage === 1 || e.totalLeads === 0),
      p(2),
      y("ngForOf", e.visiblePageNumbers),
      p(),
      fe("disabled", e.currentPage === e.totalPages || e.totalLeads === 0),
      p(),
      y("disabled", e.currentPage === e.totalPages || e.totalLeads === 0);
  }
}
function tM(n, t) {
  n & 1 &&
    (c(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Users Found "), l()()());
}
function iM(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr", 49)(1, "td"),
      h(2),
      l(),
      c(3, "td"),
      h(4),
      l(),
      c(5, "td"),
      h(6),
      l(),
      c(7, "td"),
      h(8),
      l(),
      c(9, "td"),
      h(10),
      l(),
      c(11, "td"),
      h(12),
      l(),
      c(13, "td"),
      h(14),
      l(),
      c(15, "td"),
      h(16),
      l(),
      c(17, "td"),
      h(18),
      l(),
      c(19, "td"),
      h(20),
      l(),
      c(21, "td"),
      h(22),
      l(),
      c(23, "td"),
      h(24),
      l(),
      c(25, "td"),
      h(26),
      l()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      o = w(2);
    p(2),
      N((o.currentOpportunityPage - 1) * o.opportunityItemsPerPage + i + 1),
      p(2),
      K(" ", e.opportunity_name, " "),
      p(2),
      K(" ", e.stage, " "),
      p(2),
      K(" ", e.opportunity_record_type, " "),
      p(2),
      K(" ", e.account_name, " "),
      p(2),
      K(" ", e.close_date, " "),
      p(2),
      K(" ", e.VIN, " "),
      p(2),
      K(" ", e.purchase_type, " "),
      p(2),
      K(" ", e.type, " "),
      p(2),
      K(" ", e.sub_type, " "),
      p(2),
      K(" ", e.brand, " "),
      p(2),
      K(" ", e.PMI, " "),
      p(2),
      K(" ", e.description, " ");
  }
}
function nM(n, t) {
  if ((n & 1 && (c(0, "p", 40), h(1), l()), n & 2)) {
    let e = w(2);
    p(),
      _i(
        " Showing ",
        (e.currentOpportunityPage - 1) * e.opportunityItemsPerPage + 1,
        " \u2013 ",
        e.getOpportunityRangeEnd(),
        " of ",
        e.totalOpportunities,
        " entries "
      );
  }
}
function oM(n, t) {
  n & 1 && (c(0, "p", 40), h(1, " No entries available "), l());
}
function rM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "li", 44)(1, "button", 45),
      F("click", function () {
        let o = O(e).$implicit,
          r = w(2);
        return I(r.goToOpportunityPage(o));
      }),
      h(2),
      l()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w(2);
    fe("active", e === i.currentOpportunityPage)(
      "disabled",
      i.totalOpportunities === 0
    ),
      p(),
      y("disabled", i.totalOpportunities === 0),
      p(),
      K(" ", e, " ");
  }
}
function aM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
      5,
      "th"
    ),
      h(6, "Sr No"),
      l(),
      c(7, "th"),
      h(8, "Opportunity "),
      U(9, "br"),
      h(10, "Name"),
      l(),
      c(11, "th"),
      h(12, "stage"),
      l(),
      c(13, "th"),
      h(14, "Opportunities "),
      U(15, "br"),
      h(16, "Record"),
      l(),
      c(17, "th"),
      h(18, "account"),
      U(19, "br"),
      h(20, " Name"),
      l(),
      c(21, "th"),
      h(22, "close "),
      U(23, "br"),
      h(24, "Date"),
      l(),
      c(25, "th"),
      h(26, "Opportunity "),
      U(27, "br"),
      h(28, "Currency"),
      l(),
      c(29, "th"),
      h(30, "VIN"),
      l(),
      c(31, "th"),
      h(32, "Purchase"),
      U(33, "br"),
      h(34, " Type"),
      l(),
      c(35, "th"),
      h(36, "Sub"),
      U(37, "br"),
      h(38, " Type"),
      l(),
      c(39, "th"),
      h(40, "Brand"),
      l(),
      c(41, "th"),
      h(42, "PMI"),
      l()()(),
      c(43, "tbody"),
      k(44, tM, 4, 0, "tr", 50)(45, iM, 27, 13, "tr", 58),
      l()()(),
      c(46, "div", 38)(47, "div", 39),
      k(48, nM, 2, 3, "p", 59)(49, oM, 2, 0, "p", 59),
      l(),
      c(50, "div", 39)(51, "nav", 42)(52, "ul", 43)(53, "li", 44)(
        54,
        "button",
        45
      ),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.goToPreviousOpportunityPage());
      }),
      h(55, " Previous "),
      l()(),
      k(56, rM, 3, 6, "li", 46),
      c(57, "li", 44)(58, "button", 45),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.goToNextOpportunityPage());
      }),
      h(59, " Next "),
      l()()()()()()();
  }
  if (n & 2) {
    let e = w();
    p(44),
      y("ngIf", !e.OpportunityList || e.OpportunityList.length === 0),
      p(),
      y("ngForOf", e.paginatedOpportunities),
      p(3),
      y("ngIf", e.totalOpportunities > 0),
      p(),
      y("ngIf", e.totalOpportunities === 0),
      p(4),
      fe(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      p(),
      y(
        "disabled",
        e.currentOpportunityPage === 1 || e.totalOpportunities === 0
      ),
      p(2),
      y("ngForOf", e.visibleOpportunityPageNumbers),
      p(),
      fe(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      ),
      p(),
      y(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalOpportunities === 0
      );
  }
}
function sM(n, t) {
  n & 1 &&
    (c(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Users Found "), l()()());
}
function lM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "tr", 49)(1, "td"),
      h(2),
      l(),
      c(3, "td"),
      h(4),
      l(),
      c(5, "td"),
      h(6),
      l(),
      c(7, "td"),
      h(8),
      l(),
      c(9, "td"),
      h(10),
      l(),
      c(11, "td"),
      h(12),
      l(),
      c(13, "td"),
      h(14),
      l(),
      c(15, "td"),
      h(16),
      l(),
      c(17, "td"),
      h(18),
      l(),
      c(19, "td"),
      h(20),
      l(),
      c(21, "td")(22, "a", 60),
      F("click", function () {
        let o = O(e).$implicit;
        return I(o.task_id);
      }),
      c(23, "span", 61),
      U(24, "i", 62),
      l()()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      o = w(2);
    p(2),
      N((o.currentTaskPage - 1) * o.taskItemsPerPage + i + 1),
      p(2),
      K(" ", e.subject, " "),
      p(2),
      K(" ", e.status, " "),
      p(2),
      K(" ", e.priority, " "),
      p(2),
      K(" ", e.assigned_to, " "),
      p(2),
      K(" ", e.due_date, " "),
      p(2),
      K(" ", e.comments, " "),
      p(2),
      K(" ", e.lead_name, " "),
      p(2),
      K(" ", e.lead_email, " "),
      p(2),
      K(" ", e.lead_code, " "),
      p(2),
      y("routerLink", he(11, z2, e.task_id));
  }
}
function cM(n, t) {
  if ((n & 1 && (c(0, "p", 40), h(1), l()), n & 2)) {
    let e = w(2);
    p(),
      _i(
        " Showing ",
        (e.currentTaskPage - 1) * e.taskItemsPerPage + 1,
        " \u2013 ",
        e.getTaskRangeEnd(),
        " of ",
        e.totalTasks,
        " entries "
      );
  }
}
function dM(n, t) {
  n & 1 && (c(0, "p", 40), h(1, " No entries available "), l());
}
function uM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "li", 44)(1, "button", 45),
      F("click", function () {
        let o = O(e).$implicit,
          r = w(2);
        return I(r.goToTaskPage(o));
      }),
      h(2),
      l()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w(2);
    fe("active", e === i.currentTaskPage)("disabled", i.totalTasks === 0),
      p(),
      y("disabled", i.totalTasks === 0),
      p(),
      K(" ", e, " ");
  }
}
function hM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
      5,
      "th"
    ),
      h(6, "Sr No"),
      l(),
      c(7, "th"),
      h(8, "Subject"),
      l(),
      c(9, "th"),
      h(10, "Status"),
      l(),
      c(11, "th"),
      h(12, "Priority"),
      l(),
      c(13, "th"),
      h(14, "Assigned"),
      l(),
      c(15, "th"),
      h(16, "Due Date"),
      l(),
      c(17, "th"),
      h(18, "Comments"),
      l(),
      c(19, "th"),
      h(20, "Lead Name"),
      l(),
      c(21, "th"),
      h(22, "Actions"),
      l()()(),
      c(23, "tbody"),
      k(24, sM, 4, 0, "tr", 50)(25, lM, 25, 13, "tr", 58),
      l()()(),
      c(26, "div", 38)(27, "div", 39),
      k(28, cM, 2, 3, "p", 59)(29, dM, 2, 0, "p", 59),
      l(),
      c(30, "div", 39)(31, "nav", 42)(32, "ul", 43)(33, "li", 44)(
        34,
        "button",
        45
      ),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.goToPreviousTaskPage());
      }),
      h(35, " Previous "),
      l()(),
      k(36, uM, 3, 6, "li", 46),
      c(37, "li", 44)(38, "button", 45),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.goToNextTaskPage());
      }),
      h(39, " Next "),
      l()()()()()()();
  }
  if (n & 2) {
    let e = w();
    p(24),
      y("ngIf", !e.paginatedTasks || e.paginatedTasks.length === 0),
      p(),
      y("ngForOf", e.paginatedTasks),
      p(3),
      y("ngIf", e.totalTasks > 0),
      p(),
      y("ngIf", e.totalOpportunities === 0),
      p(4),
      fe("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      p(),
      y("disabled", e.currentTaskPage === 1 || e.totalTasks === 0),
      p(2),
      y("ngForOf", e.visibleOpportunityPageNumbers),
      p(),
      fe(
        "disabled",
        e.currentTaskPage === e.totalTaskPages || e.totalTasks === 0
      ),
      p(),
      y(
        "disabled",
        e.currentOpportunityPage === e.totalOpportunityPages ||
          e.totalTasks === 0
      );
  }
}
function pM(n, t) {
  n & 1 &&
    (c(0, "tr")(1, "td", 57)(2, "p", 53), h(3, " No Events Found "), l()()());
}
function mM(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr", 49)(1, "td"),
      h(2),
      l(),
      c(3, "td"),
      h(4),
      l(),
      c(5, "td"),
      h(6),
      l(),
      c(7, "td"),
      h(8),
      l(),
      c(9, "td"),
      h(10),
      l(),
      c(11, "td"),
      h(12),
      l(),
      c(13, "td"),
      h(14),
      l(),
      c(15, "td"),
      h(16),
      l(),
      c(17, "td"),
      h(18),
      l()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      o = w(2);
    p(2),
      N((o.currentEventPage - 1) * o.eventItemsPerPage + i + 1),
      p(2),
      N(e.subject),
      p(2),
      N(e.assigned_to),
      p(2),
      N(e.description),
      p(2),
      N(e.name),
      p(2),
      N(e.start_date),
      p(2),
      N(e.end_date),
      p(2),
      N(e.VIN),
      p(2),
      N(e.location);
  }
}
function fM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "li", 44)(1, "button", 65),
      F("click", function () {
        let o = O(e).$implicit,
          r = w(3);
        return I(r.goToEventPage(o));
      }),
      h(2),
      l()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w(3);
    fe("active", e === i.currentEventPage), p(2), K(" ", e, " ");
  }
}
function gM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 38)(1, "div", 39)(2, "p", 40),
      h(3),
      l()(),
      c(4, "div", 39)(5, "nav", 42)(6, "ul", 43)(7, "li", 44)(8, "button", 45),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.goToPreviousEventPage());
      }),
      h(9, " Previous "),
      l()(),
      k(10, fM, 3, 3, "li", 64),
      c(11, "li", 44)(12, "button", 45),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.goToNextEventPage());
      }),
      h(13, " Next "),
      l()()()()()();
  }
  if (n & 2) {
    let e = w(2);
    p(3),
      _i(
        " Showing ",
        (e.currentEventPage - 1) * e.eventItemsPerPage + 1,
        " \u2013 ",
        e.getEventsRangeEnd(),
        " of ",
        e.totalEvents,
        " entries "
      ),
      p(4),
      fe("disabled", e.currentEventPage === 1),
      p(),
      y("disabled", e.currentEventPage === 1),
      p(2),
      y("ngForOf", e.visibleEventPageNumbers),
      p(),
      fe("disabled", e.currentEventPage === e.totalEventPages),
      p(),
      y("disabled", e.currentEventPage === e.totalEventPages);
  }
}
function _M(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 36)(1, "div", 54)(2, "table", 55)(3, "thead", 49)(4, "tr")(
        5,
        "th"
      ),
      h(6, "Sr No"),
      l(),
      c(7, "th"),
      h(8, "Subject"),
      l(),
      c(9, "th"),
      h(10, "Assigned"),
      l(),
      c(11, "th"),
      h(12, "Description"),
      l(),
      c(13, "th"),
      h(14, "Account Name"),
      l(),
      c(15, "th"),
      h(16, "Start Date"),
      l(),
      c(17, "th"),
      h(18, "End Date"),
      l(),
      c(19, "th"),
      h(20, "VIN"),
      l(),
      c(21, "th"),
      h(22, "Locations"),
      l()()(),
      c(23, "tbody"),
      k(24, pM, 4, 0, "tr", 50)(25, mM, 19, 9, "tr", 58),
      l()()(),
      k(26, gM, 14, 10, "div", 63),
      l()),
    n & 2)
  ) {
    let e = w();
    p(24),
      y("ngIf", !e.EventList || e.EventList.length === 0),
      p(),
      y("ngForOf", e.paginatedEvents),
      p(),
      y("ngIf", e.EventList && e.EventList.length > 0);
  }
}
var Ua = class n {
  constructor(t, e, i, o, r) {
    this.route = t;
    this.http = e;
    this.location = i;
    this.cdr = o;
    this.zone = r;
  }
  UserList = [];
  loading = !1;
  leadList = [];
  TaskList = [];
  EventList = [];
  currentPage = 1;
  itemsPerPage = 10;
  currentEventPage = 1;
  eventItemsPerPage = 10;
  OpportunityList = le([]);
  paginatedUsers = [];
  dealerData;
  masterSrv = J(We);
  showUsersTable = !0;
  showLeadsTable = !1;
  showOpportunityTable = !1;
  showTaskTable = !1;
  showEventTable = !1;
  visiblePageNumbers = [];
  dealer_name = "";
  toastr;
  user;
  apiService;
  paginatedLeads = [];
  opportunityItemsPerPage = 10;
  currentOpportunityPage = 1;
  paginatedOpportunities = [];
  visibleOpportunityPageNumbers = [];
  taskItemsPerPage = 10;
  currentTaskPage = 1;
  paginatedTasks = [];
  visibleTaskPageNumbers = [];
  ngOnInit() {
    console.log("ngOnInit is called"),
      this.handleQueryParams(),
      this.handleRouteData(),
      this.handleDealerId((t) => {
        this.getAllUser(t),
          this.getAllLeads(t),
          this.getAllTasks(t),
          this.getAllEvent(t),
          console.log("API Data:", d0.data),
          console.log("dealerData:", this.dealerData),
          console.log("Fetched UserList:", this.UserList);
      }),
      (this.currentPage = 1),
      this.paginateUsers(),
      this.updateVisiblePages(),
      (this.currentPage = 1),
      this.paginateLeads(),
      this.updateVisibleLeadPages();
  }
  dropdownService = J(Wi);
  selectedOption = this.dropdownService.getSelectedOption();
  handleSelectionChange(t) {
    let e = t.target.value;
    switch (
      (this.dropdownService.setSelectedOption(e),
      console.log("this is option", this.selectedOption()),
      e)
    ) {
      case "leads":
        console.log("dealerData:", this.dealerData),
          this.dealerData
            ? (this.getAllLeads(this.dealerData.data.dealer.dealer_id),
              this.toggleLeadsTable())
            : console.warn("lead data is not available.");
        break;
      case "users":
        this.dealerData
          ? (this.getAllUser(this.dealerData.data.dealer.dealer_id),
            this.toggleUsersTable())
          : console.warn("Dealer data is not available.");
        break;
      case "opportunities":
        console.log(this.dealerData),
          this.toggleOpportunityTable(),
          this.dealerData &&
            this.getAllOpp(this.dealerData.data.dealer.dealer_id);
        break;
      case "events":
        this.toggleEventTable(),
          this.dealerData &&
            this.getAllEvent(this.dealerData.data.dealer.dealer_id);
        break;
      case "tasks":
        this.toggleTasksTable(),
          this.dealerData &&
            this.getAllTasks(this.dealerData.data.dealer.dealer_id);
        break;
    }
  }
  get totalUsers() {
    return this.UserList?.length || 0;
  }
  get totalPages() {
    return Math.ceil(this.totalUsers / this.itemsPerPage);
  }
  paginateUsers() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    this.paginatedUsers = this.UserList.slice(t, e);
  }
  updateVisiblePages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      i = Math.min(e + 3 - 1, this.totalPages);
    this.visiblePageNumbers = [];
    for (let o = e; o <= i; o++) this.visiblePageNumbers.push(o);
  }
  hasDataForPage(t) {
    return (t - 1) * this.itemsPerPage < this.totalUsers;
  }
  goToPreviousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateUsers(), this.updateVisiblePages());
  }
  goToNextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateUsers(), this.updateVisiblePages());
  }
  goToPage(t) {
    (t - 1) * this.itemsPerPage >= this.totalUsers ||
      ((this.currentPage = t), this.paginateUsers(), this.updateVisiblePages());
  }
  get totalLeads() {
    return this.leadList?.length || 0;
  }
  get totalLeadPages() {
    return Math.ceil(this.totalLeads / this.itemsPerPage);
  }
  paginateLeads() {
    if (!this.leadList || this.leadList.length === 0) {
      this.paginatedLeads = [];
      return;
    }
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    (this.paginatedLeads = this.leadList.slice(t, e)),
      console.log(
        `Paginating Leads | Page: ${this.currentPage}, Showing: ${
          t + 1
        } to ${Math.min(e, this.leadList.length)} of ${this.leadList.length}`
      ),
      console.table(this.paginatedLeads);
  }
  updateVisibleLeadPages() {
    let e = Math.floor((this.currentPage - 1) / 3) * 3 + 1,
      i = Math.min(e + 3 - 1, this.totalLeadPages);
    this.visiblePageNumbers = [];
    for (let o = e; o <= i; o++) this.visiblePageNumbers.push(o);
  }
  goToLeadPage(t) {
    (this.currentPage = t), this.paginateLeads(), this.updateVisibleLeadPages();
  }
  goToPreviousLeadPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  goToNextLeadPage() {
    this.currentPage < this.totalLeadPages &&
      (this.currentPage++, this.paginateLeads(), this.updateVisibleLeadPages());
  }
  get totalOpportunities() {
    return this.OpportunityList?.length || 0;
  }
  get totalOpportunityPages() {
    return Math.ceil(this.totalOpportunities / this.opportunityItemsPerPage);
  }
  paginateOpportunities() {
    let t = (this.currentOpportunityPage - 1) * this.opportunityItemsPerPage,
      e = t + this.opportunityItemsPerPage,
      i = this.OpportunityList();
    this.paginatedOpportunities = i.slice(t, e);
  }
  getOpportunityRangeEnd() {
    let t = this.currentOpportunityPage * this.opportunityItemsPerPage;
    return t > this.totalOpportunities ? this.totalOpportunities : t;
  }
  updateVisibleOpportunityPages() {
    let e = Math.floor((this.currentOpportunityPage - 1) / 3) * 3 + 1,
      i = Math.min(e + 3 - 1, this.totalOpportunityPages);
    this.visibleOpportunityPageNumbers = [];
    for (let o = e; o <= i; o++) this.visibleOpportunityPageNumbers.push(o);
  }
  goToOpportunityPage(t) {
    (this.currentOpportunityPage = t),
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages();
  }
  goToPreviousOpportunityPage() {
    this.currentOpportunityPage > 1 &&
      (this.currentOpportunityPage--,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  goToNextOpportunityPage() {
    this.currentOpportunityPage < this.totalOpportunityPages &&
      (this.currentOpportunityPage++,
      this.paginateOpportunities(),
      this.updateVisibleOpportunityPages());
  }
  get totalTasks() {
    return this.TaskList?.length || 0;
  }
  get totalTaskPages() {
    return Math.ceil(this.totalTasks / this.taskItemsPerPage);
  }
  paginateTasks() {
    let t = (this.currentTaskPage - 1) * this.taskItemsPerPage,
      e = t + this.taskItemsPerPage;
    this.paginatedTasks = this.TaskList.slice(t, e);
  }
  getTaskRangeEnd() {
    let t = this.currentTaskPage * this.taskItemsPerPage;
    return t > this.totalTasks ? this.totalTasks : t;
  }
  updateVisibleTaskPages() {
    let e = Math.floor((this.currentTaskPage - 1) / 3) * 3 + 1,
      i = Math.min(e + 3 - 1, this.totalTaskPages);
    this.visibleTaskPageNumbers = [];
    for (let o = e; o <= i; o++) this.visibleTaskPageNumbers.push(o);
  }
  goToPreviousTaskPage() {
    this.currentTaskPage > 1 &&
      (this.currentTaskPage--,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToNextTaskPage() {
    this.currentTaskPage < this.totalTaskPages &&
      (this.currentTaskPage++,
      this.paginateTasks(),
      this.updateVisibleTaskPages());
  }
  goToTaskPage(t) {
    (this.currentTaskPage = t),
      this.paginateTasks(),
      this.updateVisibleTaskPages();
  }
  getRangeEnd() {
    return Math.min(this.currentPage * this.itemsPerPage, this.totalUsers);
  }
  get totalEvents() {
    return this.EventList ? this.EventList.length : 0;
  }
  get paginatedEvents() {
    if (!this.EventList || this.EventList.length === 0) return [];
    let t = (this.currentEventPage - 1) * this.eventItemsPerPage,
      e = t + this.eventItemsPerPage;
    return this.EventList.slice(t, e);
  }
  get totalEventPages() {
    return Math.ceil(this.totalEvents / this.eventItemsPerPage);
  }
  getEventsRangeEnd() {
    let t = this.currentEventPage * this.eventItemsPerPage;
    return t > this.totalEvents ? this.totalEvents : t;
  }
  get visibleEventPageNumbers() {
    let t = this.totalEventPages,
      e = this.currentEventPage,
      i = 5,
      o = Math.floor(i / 2);
    if (t === 0) return [];
    let r = Math.max(1, e - o),
      a = Math.min(t, r + i - 1);
    a - r < i - 1 && (r = Math.max(1, a - i + 1));
    let d = [];
    for (let m = r; m <= a; m++) d.push(m);
    return d;
  }
  goToPreviousEventPage() {
    this.currentEventPage > 1 && this.currentEventPage--;
  }
  goToNextEventPage() {
    this.currentEventPage < this.totalEventPages && this.currentEventPage++;
  }
  goToEventPage(t) {
    t >= 1 && t <= this.totalEventPages && (this.currentEventPage = t);
  }
  toggleUsersTable() {
    (this.showLeadsTable = !1),
      (this.showUsersTable = !0),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleTasksTable() {
    (this.showTaskTable = !0),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showOpportunityTable = !1),
      (this.showEventTable = !1);
  }
  toggleLeadsTable() {
    (this.showLeadsTable = !0),
      (this.showUsersTable = !1),
      (this.showOpportunityTable = !1),
      (this.showTaskTable = !1),
      (this.showEventTable = !1);
  }
  toggleOpportunityTable() {
    (this.showOpportunityTable = !0),
      (this.showEventTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  toggleEventTable() {
    (this.showEventTable = !0),
      (this.showOpportunityTable = !1),
      (this.showUsersTable = !1),
      (this.showLeadsTable = !1),
      (this.showTaskTable = !1);
  }
  ngAfterViewInit() {
    console.log("ngOnInit is called"),
      console.log("hello"),
      console.log(typeof $.fn.DataTable),
      this.initializeDataTable();
  }
  initializeDataTable() {
    setTimeout(() => {
      let t = $("#example5").DataTable();
      t && t.destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 100);
  }
  handleQueryParams() {
    this.route.queryParams.subscribe((t) => {
      (this.dealer_name = t.dealer_name),
        console.log("Dealer Name : ", this.dealer_name);
    });
  }
  handleRouteData() {
    this.route.data.subscribe((t) => {
      if (((this.dealerData = t.dealerData), this.dealerData)) {
        let e = this.dealerData.data.dealer.dealer_id;
        this.getAllUser(e);
      } else console.log("Dealer Data not available from resolver");
    });
  }
  handleDealerId(t) {
    this.route.paramMap.subscribe((e) => {
      let i = e.get("dealer_id");
      i
        ? t(i)
        : this.dealerData ||
          console.error("Dealer ID not found in the URL and no resolver data.");
    });
  }
  getAllUser(t) {
    console.log("Calling API with dealerId:", t),
      this.masterSrv.getAllUser(t).subscribe({
        next: (e) => {
          console.log("\u2705 Full API Response:", e),
            console.log("Fetched Users:", e.data),
            e.data && Array.isArray(e.data) && e.data.length > 0
              ? ((this.UserList = e.data),
                (this.currentPage = 1),
                this.paginateUsers(),
                this.updateVisiblePages(),
                console.log("Users List:", this.UserList),
                (this.loading = !1))
              : (console.warn("No users found"),
                (this.UserList = []),
                this.paginateUsers(),
                this.updateVisiblePages()),
            this.zone.run(() => {
              Array.isArray(this.UserList)
                ? (console.log("\u2705 Assigned UserList:", this.UserList),
                  this.cdr.detectChanges(),
                  setTimeout(() => {
                    this.initializeDataTable();
                  }, 500))
                : (console.warn("\u26A0\uFE0F Invalid API Response Format:", e),
                  (this.UserList = []));
            });
        },
        error: (e) => {
          console.error("\u274C API Error:", e),
            (this.UserList = []),
            this.paginateUsers(),
            this.updateVisiblePages(),
            this.cdr.detectChanges();
        },
      });
  }
  reinitializeDataTable() {
    setTimeout(() => {
      $("#example5").DataTable().clear().destroy(),
        setTimeout(() => {
          $("#example5").DataTable();
        }, 100);
    }, 200);
  }
  getAllLeads(t) {
    if ((console.log("Calling API with dealerId for leads:", t), !t)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllLead(t).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.leadList = e.data),
              console.log("Leads List:", this.leadList),
              (this.currentPage = 1),
              this.paginateLeads(),
              this.updateVisibleLeadPages())
            : (console.warn("No leads found"),
              (this.leadList = []),
              (this.paginatedLeads = []),
              (this.visiblePageNumbers = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e),
          (this.leadList = []),
          (this.paginatedLeads = []),
          (this.visiblePageNumbers = []);
      },
    });
  }
  getAllEvent(t) {
    if ((console.log("Calling API with dealerId for leads:", t), !t)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getEventsAll(t).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.EventList = e.data),
              console.log("Event List:", this.EventList))
            : (console.warn("No events found"), (this.EventList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.EventList = []);
      },
    });
  }
  getAllTasks(t) {
    if ((console.log("Calling API with dealerId for leads:", t), !t)) {
      console.warn("dealerId is missing!");
      return;
    }
    this.masterSrv.getAllTask(t).subscribe({
      next: (e) => {
        console.log("\u2705 Full API Response:", e),
          e && e.data && e.data.length > 0
            ? ((this.TaskList = e.data),
              console.log("Task List:", this.TaskList))
            : (console.warn("No tasks found"), (this.TaskList = []));
      },
      error: (e) => {
        console.error("\u274C API Error:", e), (this.TaskList = []);
      },
    });
  }
  getAllOpp(t) {
    this.masterSrv.getAllOpportunities(t).subscribe({
      next: (e) => {
        this.OpportunityList.set(e), console.log("Leads data fetched:", e);
      },
      error: (e) => {
        alert(e.message || "An error occurred while fetching leads.");
      },
    });
  }
  router = J(yi);
  logUserId(t) {
    console.log("Navigating to user with ID:", t),
      this.dealerData?.data.dealer?.dealer_id
        ? localStorage.setItem(
            "previousRoute",
            this.dealerData.data.dealer.dealer_id
          )
        : console.warn("dealer_id is missing, previousRoute not stored.");
  }
  static ɵfac = function (e) {
    return new (e || n)(B(vi), B($t), B(us), B(Xe), B(Oe));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-single-dealer"]],
    standalone: !0,
    features: [re],
    decls: 46,
    vars: 11,
    consts: [
      ["noEntries", ""],
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [2, "cursor", "auto", "color", "#222fb9", 3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [2, "font-weight", "700 !important", "color", "black"],
      [
        "class",
        "col-xl-9",
        "style",
        `
        margin-top: 2em !important;
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
      `,
        4,
        "ngIf",
      ],
      [
        1,
        "col-xl-9",
        2,
        "margin-top",
        "2em !important",
        "display",
        "flex",
        "justify-content",
        "space-between",
        "align-items",
        "center",
        "width",
        "100%",
      ],
      [1, "card"],
      [
        1,
        "card-body",
        "py-9",
        "py-md-2",
        2,
        "margin-left",
        "0.2rem !important",
      ],
      [1, "row", "align-items-start"],
      [1, "mb-md-0"],
      [1, "media", "align-items-end"],
      [1, "media-body"],
      [
        1,
        "mb-0",
        2,
        "background-color",
        "none",
        "text-transform",
        "capitalize",
      ],
      [1, "form-group", 2, "margin-inline", "1em"],
      [1, "form-control", "form-control-lg", 3, "change", "value"],
      ["selected", "", "value", "users", 1, "drop"],
      ["value", "leads", 1, "drop"],
      ["value", "opportunities", 1, "drop"],
      ["value", "tasks", 1, "drop"],
      ["value", "events", 1, "drop"],
      [1, "row"],
      [1, "col-lg-12"],
      ["class", "p-3 bg-white rounded shadow-sm", 4, "ngIf"],
      [1, "media", "align-items-center"],
      [1, "media-body", "ml-1"],
      [1, "mb-0", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-22"],
      [1, "span"],
      [1, "media", "align-items-center", 3, "click"],
      [1, "media-body", "ml-1", 3, "click"],
      [1, "p-3", "bg-white", "rounded", "shadow-sm"],
      ["class", "table-responsive", 4, "ngIf"],
      [1, "row", "align-items-center", "mt-3"],
      [1, "col-md-6"],
      [1, "mb-0", "text-muted"],
      [4, "ngIf", "ngIfElse"],
      ["aria-label", "Page navigation"],
      [1, "pagination", "justify-content-end", "mb-0"],
      [1, "page-item"],
      [1, "page-link", 3, "click", "disabled"],
      ["class", "page-item", 3, "active", "disabled", 4, "ngFor", "ngForOf"],
      [1, "table-responsive"],
      [
        1,
        "table",
        "display",
        "mb-4",
        "table-responsive-xl",
        "dataTablesCard",
        "fs-14",
      ],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      ["colspan", "7"],
      [2, "color", "#555", "font-weight", "500", "text-align", "center"],
      [1, "table-responsive", 2, "overflow-x", "auto", "width", "100%"],
      [1, "table", "mb-4", "dataTablesCard", "fs-14"],
      ["style", "text-align: left;", 4, "ngFor", "ngForOf"],
      ["colspan", "12"],
      ["style", "text-align:left", 4, "ngFor", "ngForOf"],
      ["class", "mb-0 text-muted", 4, "ngIf"],
      [3, "click", "routerLink"],
      [1, ""],
      [1, "fa", "fa-eye"],
      ["class", "row align-items-center mt-3", 4, "ngIf"],
      ["class", "page-item", 3, "active", 4, "ngFor", "ngForOf"],
      [1, "page-link", 3, "click"],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Users"),
        l()(),
        c(7, "li", 5)(8, "a", 7),
        h(9, "Dealer"),
        l()(),
        c(10, "li", 8)(11, "a", 9),
        h(12),
        l()()()(),
        k(13, U2, 54, 7, "div", 10),
        c(14, "div", 11)(15, "div", 12)(16, "div", 13)(17, "div", 14)(
          18,
          "div",
          15
        )(19, "div", 16)(20, "div", 17)(21, "h3", 18),
        h(22),
        l()()()()()()(),
        c(23, "div", 19)(24, "select", 20),
        F("change", function (r) {
          return i.handleSelectionChange(r);
        }),
        c(25, "option", 21),
        h(26, "Users"),
        l(),
        c(27, "option", 22),
        h(28, "Leads"),
        l(),
        c(29, "option", 23),
        h(30, "Opportunities"),
        l(),
        c(31, "option", 24),
        h(32, "Tasks"),
        l(),
        c(33, "option", 25),
        h(34, "Events"),
        l()()()(),
        c(35, "div", 26)(36, "div", 27),
        k(37, Q2, 18, 10, "div", 28),
        c(38, "div", 27),
        k(39, eM, 58, 12, "div", 28),
        l(),
        c(40, "div", 27),
        k(41, aM, 60, 11, "div", 28),
        c(42, "div", 27),
        k(43, hM, 40, 11, "div", 28),
        c(44, "div", 27),
        k(45, _M, 27, 3, "div", 28),
        l()()()()()()()),
        e & 2 &&
          (p(8),
          y("routerLink", bi(10, j2)),
          p(4),
          K(
            "",
            i.dealerData == null ||
              i.dealerData.data == null ||
              i.dealerData.data.dealer == null
              ? null
              : i.dealerData.data.dealer.dealer_name,
            " "
          ),
          p(),
          y("ngIf", i.dealerData),
          p(9),
          K(" ", i.selectedOption(), " "),
          p(2),
          y("value", i.selectedOption()),
          p(13),
          y("ngIf", i.selectedOption() === "users"),
          p(2),
          y("ngIf", i.selectedOption() === "leads"),
          p(2),
          y("ngIf", i.selectedOption() === "opportunities"),
          p(2),
          y("ngIf", i.selectedOption() === "tasks"),
          p(2),
          y("ngIf", i.selectedOption() === "events"));
    },
    dependencies: [it, ni, oi, De, Bt, Ke, wi, Gt],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{flex-grow:1}.custom-scroll-wrapper[_ngcontent-%COMP%]{overflow-x:auto;display:block;width:100%}.table-scroll-container[_ngcontent-%COMP%]{overflow-x:auto;width:100%}.table-wrapper[_ngcontent-%COMP%]{border:1px solid #ccc;border-radius:20px;background-color:#fff}.bg-white[_ngcontent-%COMP%]{background-color:#fff!important}.shadow-sm[_ngcontent-%COMP%]{box-shadow:0 .125rem .25rem #00000013}.rounded[_ngcontent-%COMP%]{border-radius:.5rem}.table-responsive[_ngcontent-%COMP%]{overflow-x:auto;-webkit-overflow-scrolling:touch}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:hover, .pagination[_ngcontent-%COMP%]   .page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#fff;background-color:#222fb9;border-color:#222fb9}.pagination[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]:focus{box-shadow:none}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}",
    ],
  });
};
var bM = ["inputElement"];
function vM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "form", null, 0),
      U(2, "img", 9),
      c(3, "h2", 10),
      h(4, "Login to Smart Assist"),
      l(),
      c(5, "div", 11)(6, "div", 12),
      U(7, "i", 13),
      l(),
      c(8, "div", 14)(9, "h5", 15),
      h(10, "Email"),
      l(),
      c(11, "input", 16, 1),
      bt("ngModelChange", function (o) {
        O(e);
        let r = w();
        return _t(r.loginObj.email, o) || (r.loginObj.email = o), I(o);
      }),
      l()()(),
      c(13, "div", 17)(14, "div", 12),
      U(15, "i", 18),
      l(),
      c(16, "div", 14)(17, "h5"),
      h(18, "Password"),
      l(),
      c(19, "input", 19, 1),
      bt("ngModelChange", function (o) {
        O(e);
        let r = w();
        return _t(r.loginObj.password, o) || (r.loginObj.password = o), I(o);
      }),
      l(),
      c(21, "i", 20),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.togglePassword("password"));
      }),
      l()()(),
      c(22, "a", 21),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.showVerifyEmail());
      }),
      h(23, "Forgot Password?"),
      l(),
      c(24, "input", 22),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.onLogin());
      }),
      l()();
  }
  if (n & 2) {
    let e = w();
    p(11),
      gt("ngModel", e.loginObj.email),
      p(8),
      gt("ngModel", e.loginObj.password),
      y("type", e.showPassword ? "text" : "password"),
      p(2),
      Ae(
        "icon11 absolute right-8 top-1/2 transform -translate-y-1/2 cursor-pointer " +
          (e.showPassword ? "fas fa-eye-slash eye" : "fas fa-eye eye")
      );
  }
}
function yM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "form", null, 2)(2, "div", 23),
      U(3, "img", 9),
      l(),
      c(4, "h2", 10),
      h(5, " Verify Email "),
      l(),
      c(6, "div", 24)(7, "div", 12),
      U(8, "i", 25),
      l(),
      c(9, "div", 14)(10, "input", 26, 3),
      bt("ngModelChange", function (o) {
        O(e);
        let r = w();
        return _t(r.verifyObj.email, o) || (r.verifyObj.email = o), I(o);
      }),
      l()()(),
      c(12, "a", 27),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.backToLogin());
      }),
      h(13, "Back to Login"),
      l(),
      c(14, "input", 28),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.onVerifyEmail());
      }),
      l()();
  }
  if (n & 2) {
    let e = w();
    p(10), gt("ngModel", e.verifyObj.email);
  }
}
function xM(n, t) {
  if ((n & 1 && (c(0, "div", 37), h(1), l()), n & 2)) {
    let e = w(2);
    p(), K(" Time remaining: ", e.countdown, "s ");
  }
}
function CM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "a", 38),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.onVerifyEmail());
      }),
      h(1, "Resend OTP"),
      l();
  }
}
function wM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "form", null, 4)(2, "div", 23),
      U(3, "img", 9),
      l(),
      c(4, "h2", 10),
      h(5, " Verify OTP "),
      l(),
      k(6, xM, 2, 1, "div", 29),
      c(7, "div", 11)(8, "div", 12),
      U(9, "i", 30),
      l(),
      c(10, "div", 31)(11, "input", 32, 5),
      F("input", function (o) {
        O(e);
        let r = w();
        return I(r.onOtpInput(o));
      }),
      bt("ngModelChange", function (o) {
        O(e);
        let r = w();
        return _t(r.loginObj.otp, o) || (r.loginObj.otp = o), I(o);
      }),
      l()()(),
      c(13, "div", 33)(14, "a", 34),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.backToLogin());
      }),
      h(15, "Back to Login"),
      l(),
      k(16, CM, 2, 0, "a", 35),
      l(),
      c(17, "input", 36),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.onVerifyOtp());
      }),
      l()();
  }
  if (n & 2) {
    let e = ht(1),
      i = w();
    p(6),
      y("ngIf", i.countdown > 0),
      p(5),
      gt("ngModel", i.loginObj.otp),
      p(5),
      y("ngIf", i.countdown === 0),
      p(),
      y("disabled", e.invalid);
  }
}
function DM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "form")(1, "h2", 39),
      h(2, "Set New Password"),
      l(),
      c(3, "div", 17)(4, "div", 12),
      U(5, "i", 18),
      l(),
      c(6, "div", 14)(7, "h5"),
      h(8, "New Password"),
      l(),
      c(9, "input", 40, 1),
      bt("ngModelChange", function (o) {
        O(e);
        let r = w();
        return _t(r.loginObj.newPwd, o) || (r.loginObj.newPwd = o), I(o);
      }),
      l(),
      c(11, "i", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.togglePassword("password"));
      }),
      l()()(),
      c(12, "div", 17)(13, "div", 42),
      U(14, "i", 18),
      l(),
      c(15, "div", 14)(16, "h5"),
      h(17, "Confirm Password"),
      l(),
      c(18, "input", 43, 1),
      bt("ngModelChange", function (o) {
        O(e);
        let r = w();
        return (
          _t(r.loginObj.confirmPassword, o) || (r.loginObj.confirmPassword = o),
          I(o)
        );
      }),
      l(),
      c(20, "i", 41),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.togglePassword("confirmPassword"));
      }),
      l()()(),
      c(21, "div", 44)(22, "a", 34),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.backToLogin());
      }),
      h(23, "Back to Login"),
      l()(),
      c(24, "input", 45),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.onSetNewPassword());
      }),
      l()();
  }
  if (n & 2) {
    let e = w();
    p(9),
      gt("ngModel", e.loginObj.newPwd),
      y("type", e.showPassword ? "text" : "password"),
      p(2),
      Ae(e.showPassword ? "fas fa-eye-slash" : "fas fa-eye"),
      p(7),
      gt("ngModel", e.loginObj.confirmPassword),
      y("type", e.showConfirmPassword ? "text" : "password"),
      p(2),
      Ae(e.showConfirmPassword ? "fas fa-eye-slash" : "fas fa-eye");
  }
}
var Wa = class n {
  inputElements;
  loginObj = {
    email: "",
    password: "",
    otp: 0,
    confirmPassword: "",
    newPwd: "",
  };
  verifyObj = { email: "" };
  currentStep = "login";
  showPassword = !1;
  showConfirmPassword = !1;
  countdown = 0;
  countdownInterval;
  API_BASE_URL = "https://uat.smartassistapp.in/api/";
  SESSION_TIMEOUT = 60 * 60 * 1e3;
  http = J($t);
  router = J(yi);
  toastr = J(ai);
  renderer = J(ui);
  constructor() {}
  ngAfterViewInit() {
    this.inputElements &&
      this.inputElements.toArray().forEach((t) => {
        this.renderer.listen(
          t.nativeElement,
          "focus",
          this.addClass.bind(this)
        ),
          this.renderer.listen(
            t.nativeElement,
            "blur",
            this.removeClass.bind(this)
          );
      });
  }
  showVerifyEmail() {
    (this.currentStep = "verifyEmail"), this.resetFormExceptEmail();
  }
  showVerifyOtp() {
    this.currentStep = "verifyOtp";
  }
  showNewPassword() {
    this.currentStep = "newPassword";
  }
  backToLogin() {
    (this.currentStep = "login"),
      window.location.reload(),
      this.resetForm(),
      this.countdownInterval && clearInterval(this.countdownInterval);
  }
  resetForm() {
    this.loginObj = {
      email: "",
      newPwd: "",
      otp: null,
      confirmPassword: "",
      password: "",
    };
  }
  resetFormExceptEmail() {
    let t = this.loginObj.email;
    this.resetForm(), (this.loginObj.email = t);
  }
  togglePassword(t) {
    t === "password"
      ? (this.showPassword = !this.showPassword)
      : (this.showConfirmPassword = !this.showConfirmPassword);
  }
  validateLoginInput() {
    return !this.loginObj.email || !this.loginObj.password
      ? (this.toastr.error(
          "Please enter valid email and password",
          "Validation Error"
        ),
        !1)
      : this.isValidEmail(this.loginObj.email)
      ? !0
      : (this.toastr.error("Please enter a valid password", "Validation Error"),
        !1);
  }
  validateNewPassword() {
    return !this.loginObj.newPwd || !this.loginObj.confirmPassword
      ? (this.toastr.error("Please enter both passwords", "Validation Error"),
        !1)
      : this.loginObj.newPwd !== this.loginObj.confirmPassword
      ? (this.toastr.error("Passwords do not match", "Validation Error"), !1)
      : !0;
  }
  isValidEmail(t) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t);
  }
  onLogin() {
    this.validateLoginInput() &&
      this.http
        .post(`${this.API_BASE_URL}login/super-admin`, this.loginObj)
        .subscribe({
          next: (t) => {
            t.status === 200 && t.data?.token
              ? this.handleSuccessfulLogin(t.data.token)
              : this.toastr.error(t.message || "Invalid credentials", "Error");
          },
          error: (t) => {
            console.error("Login error:", t);
            let e = t.error?.message || "An error occurred";
            this.toastr.error(e, "Error");
          },
        });
  }
  onVerifyEmail() {
    if (!this.verifyObj.email || !this.isValidEmail(this.verifyObj.email)) {
      this.toastr.error(
        "Please enter a valid email address",
        "Validation Error"
      );
      return;
    }
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-email`, {
        email: this.verifyObj.email,
      })
      .subscribe({
        next: () => {
          this.toastr.success("OTP sent to your email", "Success"),
            this.showVerifyOtp(),
            this.startCountdown();
        },
        error: (t) => {
          console.error("Login error:", t);
          let e = t.error?.message || "An error occurred";
          this.toastr.error(e, "Error");
        },
      });
  }
  onVerifyOtp() {
    if (this.loginObj.otp === null || isNaN(Number(this.loginObj.otp))) {
      this.toastr.error("Please enter a valid OTP", "Validation Error");
      return;
    }
    let t = { otp: Number(this.loginObj.otp), email: this.verifyObj.email };
    this.http
      .post(`${this.API_BASE_URL}login/s-admin/forgot-pwd/verify-otp`, t)
      .subscribe({
        next: () => {
          this.toastr.success("OTP verified successfully", "Success"),
            this.showNewPassword();
        },
        error: (e) => {
          console.error("OTP verification error:", e);
          let i = e.error.error;
          this.toastr.error(i, "Error");
        },
      });
  }
  onOtpInput(t) {
    let e = t.target,
      i = e.value.replace(/[^0-9]/g, "");
    (this.loginObj.otp = i ? Number(i) : 0), (e.value = i);
  }
  onSetNewPassword() {
    if (!this.validateNewPassword()) return;
    let t = {
      email: this.verifyObj.email,
      newPwd: this.loginObj.newPwd,
      confirmPwd: this.loginObj.confirmPassword,
    };
    this.http
      .put(`${this.API_BASE_URL}login/s-admin/forgot-pwd/new-pwd`, t)
      .subscribe({
        next: (e) => {
          this.toastr.success("Password reset successfully", "Success"),
            window.location.reload(),
            this.backToLogin();
        },
        error: (e) => {
          if ((console.error("Password reset error:", e), e.status === 400))
            this.toastr.error(
              "Invalid request. Please check your inputs.",
              "Error"
            );
          else if (e.status === 404)
            this.toastr.error("User not found", "Error");
          else {
            let i = e.error.error;
            this.toastr.error(i, "Error");
          }
        },
        complete: () => {
          (this.loginObj.newPwd = ""), (this.loginObj.confirmPassword = "");
        },
      });
  }
  handleSuccessfulLogin(t) {
    sessionStorage.setItem("token", t),
      this.router
        .navigate(["/Admin/dashboard"])
        .then(() => {
          window.location.reload();
        })
        .catch((e) => {
          console.error("Navigation error:", e),
            this.toastr.error("Failed to navigate to dashboard", "Error");
        }),
      this.setupAutoLogout();
  }
  setupAutoLogout() {
    setTimeout(() => {
      sessionStorage.removeItem("token"),
        this.router
          .navigateByUrl("/login")
          .then(() => {
            this.toastr.info(
              "Session expired. Please log in again.",
              "Session Expired"
            );
          })
          .catch((t) => {
            console.error("Logout navigation error:", t);
          });
    }, this.SESSION_TIMEOUT);
  }
  startCountdown() {
    (this.countdown = 5 * 60),
      this.countdownInterval && clearInterval(this.countdownInterval),
      (this.countdownInterval = setInterval(() => {
        this.countdown--,
          this.countdown === 0 && clearInterval(this.countdownInterval);
      }, 1e3));
  }
  addClass(t) {
    let e = t.target.parentNode?.parentNode;
    e && e.classList.add("focus");
  }
  removeClass(t) {
    let e = t.target.parentNode?.parentNode;
    e && t.target.value === "" && e.classList.remove("focus");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-login-1"]],
    viewQuery: function (e, i) {
      if ((e & 1 && Dt(bM, 5), e & 2)) {
        let o;
        rt((o = at())) && (i.inputElements = o);
      }
    },
    standalone: !0,
    features: [re],
    decls: 6,
    vars: 4,
    consts: [
      ["loginForm", "ngForm"],
      ["inputElement", ""],
      ["verifyForm", "ngForm"],
      ["dealerEmail", "ngModel"],
      ["otpForm", "ngForm"],
      ["otp", "ngModel"],
      [1, "custom-container"],
      [1, "login-content"],
      [4, "ngIf"],
      [
        "src",
        "../../../assets/admin-img/jlr logo.svg",
        "alt",
        "Avatar Image",
        1,
        "mx-auto",
        "inline-flex",
        "items-center",
        "justify-center",
      ],
      [
        1,
        "title",
        2,
        "color",
        "#222fb9",
        "font-size",
        "20px",
        "text-transform",
        "capitalize",
        "margin-top",
        "15px",
      ],
      [1, "input-div", "one"],
      [1, "i", "mr-3"],
      [1, "fas", "fa-user"],
      [1, "div", "relative"],
      [1, "absolute", "left-2", "top-1", "text-gray-500", "text-sm"],
      [
        "type",
        "text",
        "name",
        "username",
        "required",
        "",
        1,
        "forms-control",
        3,
        "ngModelChange",
        "ngModel",
      ],
      [1, "input-div", "pass"],
      [1, "fas", "fa-lock"],
      [
        "name",
        "password",
        "required",
        "",
        "autocomplete",
        "new-password",
        1,
        "inputt",
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        2,
        "padding-left",
        "1px !important",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [3, "click"],
      ["href", "javascript:void(0)", 1, "forgot-password", 3, "click"],
      ["type", "submit", "value", "Login", 1, "btn", 3, "click"],
      [1, "flex", "justify-center"],
      [1, "input-div"],
      [1, "fas", "fa-envelope"],
      [
        "name",
        "dealer_email",
        "type",
        "email",
        "required",
        "",
        "email",
        "",
        "placeholder",
        "E-mail",
        3,
        "ngModelChange",
        "ngModel",
      ],
      ["href", "javascript:void(0)", 1, "back-to-login", 3, "click"],
      ["type", "submit", "value", "Send OTP", 1, "btn", 3, "click"],
      ["class", "text-center mb-4", 4, "ngIf"],
      [1, "fas", "fa-key", "color"],
      [1, "relative", "z-0", "w-full", "mb-1", "group", "flex", "flex-col"],
      [
        "type",
        "text",
        "name",
        "otp",
        "required",
        "",
        "placeholder",
        "OTP",
        1,
        "",
        3,
        "input",
        "ngModelChange",
        "ngModel",
      ],
      [1, "flex", "justify-end", "text-end", "w-full"],
      [1, "back-to-login", 2, "cursor", "pointer", 3, "click"],
      [
        "style",
        "cursor: pointer",
        "class",
        "resend-otp",
        3,
        "click",
        4,
        "ngIf",
      ],
      [
        "type",
        "submit",
        "value",
        "Verify OTP",
        1,
        "btn",
        3,
        "click",
        "disabled",
      ],
      [1, "text-center", "mb-4"],
      [1, "resend-otp", 2, "cursor", "pointer", 3, "click"],
      [1, "title"],
      [
        "name",
        "password",
        "required",
        "",
        1,
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [
        1,
        "icon11",
        "absolute",
        "right-8",
        "top-1/2",
        "transform",
        "-translate-y-1/2",
        "cursor-pointer",
        3,
        "click",
      ],
      [1, "i"],
      [
        "name",
        "confirm-password",
        "required",
        "",
        1,
        "focus:outline-none",
        "focus:border-none",
        "border-transparent",
        "focus:ring-0",
        "w-full",
        "py-2",
        "px-4",
        "bg-transparent",
        "text-gray-800",
        3,
        "ngModelChange",
        "ngModel",
        "type",
      ],
      [1, "flex", "justify-between", "w-full"],
      ["type", "submit", "value", "Reset Password", 1, "btn", 3, "click"],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 6)(1, "div", 7),
        k(2, vM, 25, 5, "form", 8)(3, yM, 15, 1, "form", 8)(
          4,
          wM,
          18,
          4,
          "form",
          8
        )(5, DM, 25, 8, "form", 8),
        l()()),
        e & 2 &&
          (p(2),
          y("ngIf", i.currentStep === "login"),
          p(),
          y("ngIf", i.currentStep === "verifyEmail"),
          p(),
          y("ngIf", i.currentStep === "verifyOtp"),
          p(),
          y("ngIf", i.currentStep === "newPassword"));
    },
    dependencies: [De, Ke, it, no, Yt, ii, Ci, Hn, qc, Oi, Gc, hs],
    styles: [
      '*[_ngcontent-%COMP%]{padding:0;margin:0;box-sizing:border-box}body[_ngcontent-%COMP%]{font-family:Poppins,sans-serif;overflow:hidden}.inputt[_ngcontent-%COMP%]{width:90%!important}.fas[_ngcontent-%COMP%]{color:#3b86e9!important}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%;margin:0;padding:0}.wave[_ngcontent-%COMP%]{position:fixed;bottom:0;left:0;height:100%;z-index:-1}.container[_ngcontent-%COMP%]{width:100%;grid-gap:7rem;padding:0 2rem}.img[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center}.login-content[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;text-align:center;height:97vh}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:500px}form[_ngcontent-%COMP%]{width:360px}.login-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:15px 0;color:#333;text-transform:uppercase;font-size:2.9rem}.login-content[_ngcontent-%COMP%]   .input-div[_ngcontent-%COMP%]{position:relative;display:grid;grid-template-columns:7% 93%;margin:25px 0;padding:5px 0;border-bottom:2px solid #d9d9d9}.login-content[_ngcontent-%COMP%]   .input-div.one[_ngcontent-%COMP%]{margin-top:0}.i[_ngcontent-%COMP%]{color:#d9d9d9;display:flex;justify-content:center;align-items:center}.i[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{transition:.3s}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;height:45px}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{position:absolute;left:10px;top:50%;transform:translateY(-50%);color:#999;font-size:18px;transition:.3s}.input-div[_ngcontent-%COMP%]:before, .input-div[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-2px;width:0%;height:2px;background-color:#3b86e9;transition:.4s}.input-div[_ngcontent-%COMP%]:before{right:50%}.input-div[_ngcontent-%COMP%]:after{left:50%}.input-div.focus[_ngcontent-%COMP%]:before, .input-div.focus[_ngcontent-%COMP%]:after{width:50%}.input-div.focus[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{top:-5px;font-size:15px}input.forms-control[_ngcontent-%COMP%]{background-color:transparent!important;box-shadow:none!important;transition:background-color 5000s ease-in-out 0s}input[_ngcontent-%COMP%]:-webkit-autofill, input[_ngcontent-%COMP%]:-webkit-autofill:hover, input[_ngcontent-%COMP%]:-webkit-autofill:focus{box-shadow:none!important;color:#000!important;transition:background-color 5000s ease-in-out 0s}.fas[_ngcontent-%COMP%]{color:#222fb9!important}.input-div.focus[_ngcontent-%COMP%] > .i[_ngcontent-%COMP%] > i[_ngcontent-%COMP%]{color:#5298ee}.input-div[_ngcontent-%COMP%]   .focus[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{top:-5px;font-size:15px;color:#7e7e7e}.input-div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > input[_ngcontent-%COMP%]{position:absolute;left:0;top:0;width:100%;height:100%;outline:none;background:none;font-size:1.2rem;border:none;color:#555;font-family:poppins,sans-serif}.password-toggle[_ngcontent-%COMP%]{position:absolute;right:10px;top:50%;transform:translateY(-50%);cursor:pointer;z-index:10}.width-input[_ngcontent-%COMP%]{width:90%!important}.icon11[_ngcontent-%COMP%]{margin-left:18em;margin-top:.7em}.password-toggle[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{color:#999;font-size:16px}.password-toggle[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{color:#666}.input-div.pass[_ngcontent-%COMP%], .input-div.verify[_ngcontent-%COMP%]{margin-bottom:4px}a[_ngcontent-%COMP%]{display:block;text-align:right;text-decoration:none;color:#999;font-size:.9rem;transition:.3s}a[_ngcontent-%COMP%]:hover{color:#3b86e9}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#3b86e9,#5496e7,#5298ee);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}@media screen and (max-width: 1050px){.container[_ngcontent-%COMP%]{grid-gap:5rem}}@media screen and (max-width: 1000px){form[_ngcontent-%COMP%]{width:290px}.login-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:2.4rem;margin:8px 0}.img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:400px}}@media screen and (max-width: 900px){.container[_ngcontent-%COMP%]{grid-template-columns:1fr}.img[_ngcontent-%COMP%], .wave[_ngcontent-%COMP%]{display:none}.login-content[_ngcontent-%COMP%]{justify-content:center}}.eye[_ngcontent-%COMP%]{color:#b9b8b8!important}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (min-width: 1024px) and (max-width: 1366px){.img[_ngcontent-%COMP%]{margin-top:-300px}}@media (min-width: 768px) and (max-width: 1023px){.login-content[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);margin-top:0;justify-content:center}}@media (max-width: 768px){.custom-container[_ngcontent-%COMP%]{margin-left:0!important}}input[type=password][_ngcontent-%COMP%]::-ms-reveal, input[type=password][_ngcontent-%COMP%]::-ms-clear{display:none}input[type=password][_ngcontent-%COMP%]::-webkit-password-toggle-button, input[type=password][_ngcontent-%COMP%]::-webkit-textfield-decoration-container{display:none!important}input[type=password][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-decoration, input[type=password][_ngcontent-%COMP%]::-webkit-search-cancel-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-button, input[type=password][_ngcontent-%COMP%]::-webkit-search-results-decoration{display:none!important}input[type=password][_ngcontent-%COMP%]{-moz-appearance:textfield}.new-custom[_ngcontent-%COMP%]{display:flex;justify-content:center}.div[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{position:absolute;top:12px;left:10px;font-size:16px;color:#9ca3af;pointer-events:none;transition:all .2s ease}.div[_ngcontent-%COMP%]   h5.floating[_ngcontent-%COMP%]{top:-10px;left:5px;font-size:12px;color:#3b86e9;background:#fff;padding:0 5px;z-index:10}.icon11[_ngcontent-%COMP%]{z-index:10;position:relative;pointer-events:auto;width:24px;height:24px;display:inline-flex;align-items:center;justify-content:center}.btn[_ngcontent-%COMP%]{display:block;width:100%;height:50px;border-radius:25px;outline:none;border:none;background-image:linear-gradient(to right,#222fb9);background-size:200%;font-size:1.2rem;color:#fff;font-family:Poppins,sans-serif;text-transform:uppercase;margin:1rem 0;cursor:pointer;transition:.5s}.btn[_ngcontent-%COMP%]:hover{background-position:right}',
    ],
  });
};
function SM(n, t) {
  if ((n & 1 && (c(0, "div", 12), h(1), l()), n & 2)) {
    let e = w().ngIf,
      i = w();
    p(), K(" ", i.getInitials(e.name), " ");
  }
}
function MM(n, t) {
  if ((n & 1 && U(0, "img", 13), n & 2)) {
    let e = w(2);
    y("src", e.profileImageUrl, Oc);
  }
}
function TM(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 6)(1, "div", 7),
      k(2, SM, 2, 1, "div", 8)(3, MM, 1, 1, "ng-template", null, 0, Ot),
      l(),
      c(5, "div", 9)(6, "h5", 10),
      h(7),
      l(),
      c(8, "p", 11),
      h(9),
      l()()()),
    n & 2)
  ) {
    let e = t.ngIf,
      i = ht(4),
      o = w();
    p(2),
      y("ngIf", !o.isCustomProfileImage())("ngIfElse", i),
      p(5),
      N(e.name),
      p(2),
      N(e.email);
  }
}
function EM(n, t) {
  n & 1 && (c(0, "div", 14), h(1, " Loading profile details... "), l());
}
var Ll = class n {
  constructor(t, e) {
    this.http = t;
    this.context = e;
  }
  masterSrv = J(We);
  profileImageUrl = "/assets/public/images/profile/default.png";
  profile = le(null);
  ngOnInit() {
    this.context.onSideBarClick$.next({
      role: "profile",
      pageTitle: "Profile Management",
    }),
      this.getProfileData(),
      this.getProfileImage();
  }
  isCustomProfileImage() {
    return this.profileImageUrl !== "/assets/public/images/profile/default.png";
  }
  getProfileData() {
    this.masterSrv.getProfileData().subscribe({
      next: (t) => {
        console.log("Fetched Profile Data:", t), this.profile.set(t.data);
      },
      error: (t) => {
        console.error("Error fetching profile data:", t),
          alert("Failed to fetch profile data.");
      },
    });
  }
  getProfileImage() {
    this.http
      .get("https://uat.smartassistapp.in/api/superAdmin/show-profile")
      .subscribe({
        next: (t) => {
          console.log("Fetched Profile Image:", t),
            t?.status === 200 && t.data?.image_url
              ? (this.profileImageUrl = t.data.image_url)
              : (this.profileImageUrl =
                  "/assets/public/images/profile/default.png");
        },
        error: (t) => {
          console.error("Error fetching profile image:", t),
            (this.profileImageUrl =
              "/assets/public/images/profile/default.png");
        },
      });
  }
  getInitials(t) {
    let e = t.trim().split(" ");
    return e.length === 1
      ? e[0].charAt(0).toUpperCase()
      : (e[0].charAt(0) + e[e.length - 1].charAt(0)).toUpperCase();
  }
  static ɵfac = function (e) {
    return new (e || n)(B($t), B(Wi));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-profile"]],
    standalone: !0,
    features: [re],
    decls: 5,
    vars: 2,
    consts: [
      ["profilePic", ""],
      [1, "container-fluid"],
      [
        1,
        "d-flex",
        "justify-content-center",
        "align-items-center",
        2,
        "min-height",
        "80vh",
      ],
      [1, "card", "rounded-4", "p-4", 2, "width", "100%"],
      ["class", "row g-3 align-items-center", 4, "ngIf"],
      ["class", "text-muted text-center py-3", 4, "ngIf"],
      [1, "row", "g-3", "align-items-center"],
      [1, "col-auto"],
      ["class", "avatar-circle shadow-sm", 4, "ngIf", "ngIfElse"],
      [1, "col"],
      [1, "text-dark", "mb-1", 2, "font-size", "22px"],
      [1, "text-muted", "mb-2", 2, "font-size", "17px"],
      [1, "avatar-circle", "shadow-sm"],
      ["alt", "Profile Photo", 1, "avatar-img", "shadow-sm", 3, "src"],
      [1, "text-muted", "text-center", "py-3"],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3),
        k(3, TM, 10, 4, "div", 4)(4, EM, 2, 0, "div", 5),
        l()()()),
        e & 2 && (p(3), y("ngIf", i.profile()), p(), y("ngIf", !i.profile()));
    },
    dependencies: [De, Ke],
    styles: [
      ".avatar-circle[_ngcontent-%COMP%]{width:90px;height:90px;background-color:#dce3fa;color:#3b4cca;font-size:42px;font-weight:600;border-radius:50%;display:flex;align-items:center;justify-content:center;text-transform:uppercase}.avatar-img[_ngcontent-%COMP%]{width:80px;height:80px;border-radius:50%;object-fit:cover}",
    ],
  });
};
var $a = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("id");
    return i ? this.masterSrv.getDealerById(i) : xt(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(We));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ga = class n {
  user_id;
  account_id;
  name;
  email;
  phone;
  user_role;
  password;
  otp_validated;
  otp;
  otp_expiration;
  corporate_id;
  dealer_code;
  dealer_id;
  role_id;
  role_name;
  team_id;
  team_name;
  fname;
  lname;
  team;
  role;
  constructor() {
    (this.user_id = ""),
      (this.account_id = ""),
      (this.name = ""),
      (this.phone = void 0),
      (this.email = ""),
      (this.user_role = ""),
      (this.password = ""),
      (this.otp_validated = ""),
      (this.otp = ""),
      (this.otp_expiration = ""),
      (this.dealer_code = void 0),
      (this.corporate_id = ""),
      (this.dealer_id = ""),
      (this.role_id = ""),
      (this.role_name = ""),
      (this.team_id = ""),
      (this.team_name = ""),
      (this.fname = ""),
      (this.lname = ""),
      (this.role = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var u0 = (() => {
  class n {
    static ɵfac = function (i) {
      return new (i || n)();
    };
    static ɵmod = _e({ type: n });
    static ɵinj = ge({ imports: [De, ln, xi, ln] });
  }
  return n;
})();
var mV = new qe("RowDef"),
  fV = new qe("DatatableComponentToken");
var h0 = (() => {
  class n {
    static forRoot(e) {
      return {
        ngModule: n,
        providers: [{ provide: "configuration", useValue: e }],
      };
    }
    static {
      this.ɵfac = function (i) {
        return new (i || n)();
      };
    }
    static {
      this.ɵmod = _e({ type: n });
    }
    static {
      this.ɵinj = ge({});
    }
  }
  return n;
})();
var Rr = class n {
  confirmationSubject = new Ee();
  confirm(t) {
    let e = window.confirm(t);
    return (
      this.confirmationSubject.next(e), this.confirmationSubject.asObservable()
    );
  }
  showAlert(t, e) {
    let i = document.createElement("div");
    (i.className = `alert alert-${t} alert-dismissible fade show fixed-top m-3`),
      (i.innerHTML = `
      <span class="alert-icon">
        <svg viewBox="0 0 24 24" width="24" height="24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 11 12 14 22 4"></polyline>
        </svg>
      </span>
      <strong>${t.charAt(0).toUpperCase() + t.slice(1)}!</strong> ${e}
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span>&times;</span>
      </button>
    `),
      document.body.appendChild(i),
      setTimeout(() => {
        i.classList.remove("show"), i.remove();
      }, 1e3);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Go = (n) => ({ "is-invalid": n });
function kM(n, t) {
  n & 1 && (c(0, "tr")(1, "td", 45), h(2, "No Users found"), l()());
}
function OM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "tr")(1, "td"),
      h(2),
      l(),
      c(3, "td"),
      h(4),
      l(),
      c(5, "td"),
      h(6),
      l(),
      c(7, "td"),
      h(8),
      l(),
      c(9, "td", 46)(10, "a", 47),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.onEdit(o));
      }),
      U(11, "i", 48),
      l(),
      c(12, "a", 49),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.openDeleteModal(o));
      }),
      U(13, "i", 50),
      l()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      o = w();
    p(2),
      N((o.currentPage - 1) * o.itemsPerPage + i + 1),
      p(2),
      N(e.name),
      p(2),
      N(e.email),
      p(2),
      N(e.user_role);
  }
}
function IM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "li", 51)(1, "a", 41),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.goToPage(o));
      }),
      h(2),
      l()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w();
    fe("active", e === i.currentPage), p(2), N(e);
  }
}
function PM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 52)(1, "div", 53)(2, "div", 54)(3, "div", 55)(4, "h5", 56),
      h(5, "Delete User"),
      l()(),
      c(6, "div", 57),
      h(7, "Are you sure you want to delete this user?"),
      l(),
      c(8, "div", 58)(9, "button", 59),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeDeleteModal());
      }),
      h(10, "Cancel"),
      l(),
      c(11, "button", 60),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.deleteUserId());
      }),
      h(12, "Delete"),
      l()()()()();
  }
}
function AM(n, t) {
  n & 1 && (c(0, "span"), h(1, "First name is required."), l());
}
function RM(n, t) {
  if ((n & 1 && (c(0, "div", 72), k(1, AM, 2, 0, "span", 33), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("fname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function FM(n, t) {
  n & 1 && (c(0, "span"), h(1, "Last name is required."), l());
}
function NM(n, t) {
  if ((n & 1 && (c(0, "div", 72), k(1, FM, 2, 0, "span", 33), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("lname")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function VM(n, t) {
  if ((n & 1 && (c(0, "option", 86), h(1), l()), n & 2)) {
    let e = t.$implicit;
    y("value", e.dealer_id), p(), K(" ", e.dealer_code, " ");
  }
}
function LM(n, t) {
  n & 1 && (c(0, "span"), h(1, " Dealer Code is required. "), l());
}
function BM(n, t) {
  if ((n & 1 && (c(0, "div", 72), k(1, LM, 2, 0, "span", 33), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("dealer_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function HM(n, t) {
  if ((n & 1 && (c(0, "option", 86), h(1), l()), n & 2)) {
    let e = t.$implicit;
    y("value", e.role_id), p(), K(" ", e.role_name, " ");
  }
}
function jM(n, t) {
  n & 1 && (c(0, "span"), h(1, " Role name is required. "), l());
}
function zM(n, t) {
  if ((n & 1 && (c(0, "div", 72), k(1, jM, 2, 0, "span", 33), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("role_id")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function UM(n, t) {
  n & 1 && (c(0, "span"), h(1, "Email is required."), l());
}
function WM(n, t) {
  n & 1 && (c(0, "span"), h(1, "Please enter a valid email address."), l());
}
function $M(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 72),
      k(1, UM, 2, 0, "span", 33)(2, WM, 2, 0, "span", 33),
      l()),
    n & 2)
  ) {
    let e,
      i,
      o = w(2);
    p(),
      y(
        "ngIf",
        (e = o.useForm.get("email")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      p(),
      y(
        "ngIf",
        (i = o.useForm.get("email")) == null || i.errors == null
          ? null
          : i.errors.email
      );
  }
}
function GM(n, t) {
  if ((n & 1 && (c(0, "option", 86), h(1), l()), n & 2)) {
    let e = t.$implicit;
    y("value", e.team_id), p(), K(" ", e.team_name, " ");
  }
}
function YM(n, t) {
  n & 1 && (c(0, "div", 72)(1, "span"), h(2, "Team name is required."), l()());
}
function qM(n, t) {
  n & 1 && (c(0, "span"), h(1, " Phone is required. "), l());
}
function KM(n, t) {
  n & 1 && (c(0, "span"), h(1, " Must not exceed 10 characters. "), l());
}
function QM(n, t) {
  n & 1 && (c(0, "span"), h(1, " Only numbers are allowed. "), l());
}
function XM(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 72),
      k(1, qM, 2, 0, "span", 33)(2, KM, 2, 0, "span", 33)(
        3,
        QM,
        2,
        0,
        "span",
        33
      ),
      l()),
    n & 2)
  ) {
    let e,
      i,
      o,
      r = w(2);
    p(),
      y(
        "ngIf",
        (e = r.useForm.get("phone")) == null || e.errors == null
          ? null
          : e.errors.required
      ),
      p(),
      y(
        "ngIf",
        (i = r.useForm.get("phone")) == null || i.errors == null
          ? null
          : i.errors.maxlength
      ),
      p(),
      y(
        "ngIf",
        (o = r.useForm.get("phone")) == null || o.errors == null
          ? null
          : o.errors.pattern
      );
  }
}
function ZM(n, t) {
  if (n & 1) {
    let e = ee();
    je(0),
      c(1, "button", 87),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.onUpdate());
      }),
      h(2, " Edit "),
      l(),
      ze();
  }
  if (n & 2) {
    let e = w(2);
    p(), y("disabled", !e.isUserNameChanged());
  }
}
function JM(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 59),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.onSave());
      }),
      h(1, " Save "),
      l();
  }
  if (n & 2) {
    let e = w(2);
    ae("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function eT(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 52)(1, "div", 61)(2, "div", 54)(3, "div", 55)(4, "h5", 62),
      h(5),
      l(),
      c(6, "button", 63),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeModal());
      }),
      c(7, "span", 64),
      h(8, "\xD7"),
      l()()(),
      c(9, "div", 65)(10, "form", 66)(11, "div", 67)(12, "div", 68)(
        13,
        "label",
        69
      ),
      h(14, "First Name"),
      l(),
      U(15, "input", 70),
      k(16, RM, 2, 1, "div", 71),
      l(),
      c(17, "div", 68)(18, "label", 69),
      h(19, " Last Name "),
      c(20, "span", 72),
      h(21, "*"),
      l()(),
      U(22, "input", 73),
      k(23, NM, 2, 1, "div", 71),
      l(),
      c(24, "div", 68)(25, "label", 74),
      h(26, " Dealer Code "),
      c(27, "span", 72),
      h(28, "*"),
      l()(),
      c(29, "select", 75)(30, "option", 76),
      h(31, "Select Dealer code"),
      l(),
      k(32, VM, 2, 2, "option", 77),
      l(),
      k(33, BM, 2, 1, "div", 71),
      l(),
      c(34, "div", 68)(35, "label", 78),
      h(36, " Role Name "),
      c(37, "span", 72),
      h(38, "*"),
      l()(),
      c(39, "select", 79)(40, "option", 76),
      h(41, "Select Role"),
      l(),
      k(42, HM, 2, 2, "option", 77),
      l(),
      k(43, zM, 2, 1, "div", 71),
      l(),
      c(44, "div", 68)(45, "label", 69),
      h(46, " Email "),
      c(47, "span", 72),
      h(48, "*"),
      l()(),
      U(49, "input", 80),
      k(50, $M, 3, 2, "div", 71),
      l(),
      c(51, "div", 68)(52, "label", 81),
      h(53, " Team name "),
      c(54, "span", 72),
      h(55, "*"),
      l()(),
      c(56, "select", 82),
      F("change", function () {
        O(e);
        let o = w();
        return I(o.onTeamChange());
      }),
      c(57, "option", 76),
      h(58, "Select team name"),
      l(),
      k(59, GM, 2, 2, "option", 77),
      l(),
      k(60, YM, 3, 0, "div", 71),
      l(),
      c(61, "div", 68)(62, "label", 69),
      h(63, " Phone "),
      c(64, "span", 72),
      h(65, "*"),
      l()(),
      c(66, "input", 83),
      F("keypress", function (o) {
        O(e);
        let r = w();
        return I(r.restrictToNumbers(o));
      }),
      l(),
      k(67, XM, 4, 3, "div", 71),
      l()()()(),
      c(68, "div", 58),
      k(69, ZM, 3, 1, "ng-container", 84),
      c(70, "button", 85),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeModal());
      }),
      h(71, " Close "),
      l(),
      k(72, JM, 2, 1, "ng-template", null, 0, Ot),
      l()()()();
  }
  if (n & 2) {
    let e,
      i,
      o,
      r,
      a,
      d,
      m,
      _,
      v,
      S,
      T,
      M,
      A,
      j,
      z = ht(73),
      L = w();
    p(5),
      K(" ", L.userObj.user_id ? "Edit User" : "Add New User", " "),
      p(5),
      y("formGroup", L.useForm),
      p(5),
      y(
        "ngClass",
        he(
          24,
          Go,
          ((e = L.useForm.get("fname")) == null ? null : e.touched) &&
            ((e = L.useForm.get("fname")) == null ? null : e.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        ((i = L.useForm.get("fname")) == null ? null : i.invalid) &&
          ((i = L.useForm.get("fname")) == null ? null : i.touched)
      ),
      p(6),
      y(
        "ngClass",
        he(
          26,
          Go,
          ((o = L.useForm.get("lname")) == null ? null : o.touched) &&
            ((o = L.useForm.get("lname")) == null ? null : o.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        ((r = L.useForm.get("lname")) == null ? null : r.invalid) &&
          ((r = L.useForm.get("lname")) == null ? null : r.touched)
      ),
      p(6),
      y(
        "ngClass",
        he(
          28,
          Go,
          ((a = L.useForm.get("dealer_id")) == null ? null : a.touched) &&
            ((a = L.useForm.get("dealer_id")) == null ? null : a.invalid)
        )
      ),
      p(),
      y("ngValue", null),
      p(2),
      y("ngForOf", L.dealerList()),
      p(),
      y(
        "ngIf",
        ((d = L.useForm.get("dealer_id")) == null ? null : d.touched) &&
          ((d = L.useForm.get("dealer_id")) == null ? null : d.invalid)
      ),
      p(6),
      y(
        "ngClass",
        he(
          30,
          Go,
          ((m = L.useForm.get("role_id")) == null ? null : m.touched) &&
            ((m = L.useForm.get("role_id")) == null ? null : m.invalid)
        )
      ),
      p(),
      y("ngValue", null),
      p(2),
      y("ngForOf", L.roleList()),
      p(),
      y(
        "ngIf",
        ((_ = L.useForm.get("role_id")) == null ? null : _.touched) &&
          ((_ = L.useForm.get("role_id")) == null ? null : _.invalid)
      ),
      p(6),
      y(
        "ngClass",
        he(
          32,
          Go,
          ((v = L.useForm.get("email")) == null ? null : v.touched) &&
            ((v = L.useForm.get("email")) == null ? null : v.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        ((S = L.useForm.get("email")) == null ? null : S.invalid) &&
          ((S = L.useForm.get("email")) == null ? null : S.touched)
      ),
      p(6),
      y(
        "ngClass",
        he(
          34,
          Go,
          ((T = L.useForm.get("team_id")) == null ? null : T.touched) &&
            ((T = L.useForm.get("team_id")) == null ? null : T.invalid)
        )
      ),
      p(),
      y("ngValue", null),
      p(2),
      y("ngForOf", L.teamList()),
      p(),
      y(
        "ngIf",
        ((M = L.useForm.get("team_id")) == null ? null : M.touched) &&
          ((M = L.useForm.get("team_id")) == null ? null : M.invalid)
      ),
      p(6),
      y(
        "ngClass",
        he(
          36,
          Go,
          ((A = L.useForm.get("phone")) == null ? null : A.touched) &&
            ((A = L.useForm.get("phone")) == null ? null : A.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        ((j = L.useForm.get("phone")) == null ? null : j.touched) &&
          ((j = L.useForm.get("phone")) == null ? null : j.invalid)
      ),
      p(2),
      y("ngIf", L.userObj == null ? null : L.userObj.user_id)("ngIfElse", z);
  }
}
var Bl = class n {
  constructor(t, e) {
    this.aleartsrv = t;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = le(0);
  userList = le([]);
  dealerList = le([]);
  totalDealer = le(0);
  isModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  teamList = le([]);
  totalteam = le(0);
  dealerObj = new Yn();
  roleList = le([]);
  masterSrv = J(We);
  toastr = J(ai);
  currentPage = 1;
  itemsPerPage = 10;
  searchTerm = "";
  filteredUsers = [];
  paginatedUsers = [];
  useForm = new vt({});
  userObj = new Ga();
  previousEmail = "";
  isEditMode = !1;
  count;
  Role;
  totalrole;
  previousValue;
  user_id = "";
  dataTable;
  totalPages = 0;
  pages = [];
  isDeleteModalOpen = !1;
  columns = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (t, e) => e + 1)),
      this.updateVisiblePages(),
      this.displayAllUser(),
      console.log("\u{1F4E6} Loaded Dealer List:", this.dealerList()),
      this.dealerList().length &&
        this.dealerList()[0] &&
        console.log("\u{1F50D} Sample dealer:", this.dealerList()[0]),
      this.displayAllUser(),
      this.getAllTeams(),
      this.loadRole(),
      (this.filteredUsers = this.userList()),
      this.paginateUsers(),
      this.getAllDealer(),
      this.useForm.get("role_id")?.valueChanges.subscribe((t) => {
        if (t) {
          let i = this.roleList().find((o) => o.role_id === t);
          i &&
            (console.log("Role ID:", t),
            console.log("Role Name:", i.role_name),
            this.useForm.patchValue({ user_role: i.role_name }));
        }
      });
  }
  initializeForm() {
    this.useForm = new vt({
      fname: new Ze("", [we.required, we.minLength(2), we.maxLength(50)]),
      lname: new Ze("", [we.required, we.minLength(2), we.maxLength(50)]),
      email: new Ze("", [we.required, we.email, we.maxLength(100)]),
      phone: new Ze(Number, [
        we.required,
        we.pattern(/^\d{10}$/),
        we.maxLength(10),
      ]),
      dealer_id: new Ze(null, [we.required]),
      team_id: new Ze(null, [we.required]),
      user_role: new Ze(null, [we.required]),
      role_id: new Ze(null, [we.required]),
    });
  }
  restrictToNumbers(t) {
    let e = t.key;
    /^\d$/.test(e) || t.preventDefault();
  }
  staticDealerList = [
    { dealer_code: 15255 },
    { dealer_code: 56424 },
    { dealer_code: 45252 },
    { dealer_code: 541248 },
  ];
  getAllDealer() {
    this.masterSrv.getAllDealer().subscribe({
      next: (t) => {
        console.log("\u{1F310} Full Dealer API Response:", t),
          t && t.data?.dealer?.rows?.length > 0
            ? (this.dealerList.set(t.data.dealer.rows),
              this.totalDealer.set(t.data.dealer.count),
              console.log("\u2705 Loaded Dealers:", this.dealerList()))
            : (console.warn(
                "\u26A0\uFE0F Dealer list empty or improperly structured"
              ),
              this.toastr.warning("No dealers found", "Information"));
      },
      error: (t) => {
        console.error("\u274C Dealer fetch error:", t),
          this.toastr.error(t.message || "Failed to fetch dealers", "Error");
      },
    });
  }
  getAllTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (t) => {
        t && t.data.rows && t.data.rows
          ? (this.teamList.set(t.data.rows),
            console.log("Fetched teams:", this.teamList()),
            this.totalteam.set(t.data.count))
          : this.toastr.warning("No teams found", "Information");
      },
      error: (t) => {
        console.error("teams fetch error:", t),
          this.toastr.error(t.message || "Failed to fetch teams", "Error");
      },
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (t) => {
        t && t.data && Array.isArray(t.data)
          ? (this.roleList.set(t.data),
            console.log("Fetched roles:", this.roleList()),
            this.totalrole.set(t.data.length))
          : this.toastr.warning("No roles found", "Information");
      },
      error: (t) => {
        console.error("Error fetching roles:", t),
          this.toastr.error(t.error?.error || "Error fetching roles", "Error");
      },
    });
  }
  onSearchChange() {
    this.filterUsers(), (this.currentPage = 1), this.paginateUsers();
  }
  filterUsers() {
    if (!this.searchTerm) this.filteredUsers = this.userList();
    else {
      let t = this.searchTerm.toLowerCase();
      this.filteredUsers = this.userList().filter(
        (e) =>
          e.name.toLowerCase().includes(t) ||
          e.email.toLowerCase().includes(t) ||
          (e.user_role?.toLowerCase().includes(t) ?? !1)
      );
    }
    (this.currentPage = 1), this.paginateUsers();
  }
  paginateUsers() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    (this.paginatedUsers = this.filteredUsers.slice(t, e)),
      (this.totalPages = Math.ceil(
        this.filteredUsers.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (i, o) => o + 1));
  }
  updatePages() {
    (this.totalPages = Math.ceil(
      this.filteredUsers.length / this.itemsPerPage
    )),
      (this.pages = Array(this.totalPages)
        .fill(0)
        .map((t, e) => e + 1));
  }
  initializeUsers() {
    let t = this.filteredUsers.length;
    (this.totalPages = Math.ceil(t / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, i) => i + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  updateVisiblePages() {
    let t =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(t, t + this.maxVisiblePages);
  }
  goToPage(t) {
    (this.currentPage = t), this.updateVisiblePages(), this.paginateUsers();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateUsers());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateUsers());
  }
  expand(t) {
    t.target.size = 6;
  }
  collapse(t) {
    t.target.size = 0;
  }
  onItemsPerPageChange(t) {
    (this.itemsPerPage = parseInt(t.target.value, 10)),
      (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateUsers();
  }
  min(t, e) {
    return Math.min(t, e);
  }
  openModal(t) {
    console.log("\u2705 openModal() function calledm of user"),
      console.log("User object received in openModal:", t),
      (this.isModalOpen = !0),
      t || (this.userObj = {}),
      this.useForm.reset(),
      (this.isEditMode = !!t),
      t
        ? (this.useForm.patchValue({
            user_id: t.user_id,
            name: t.name || "",
            account_id: t.account_id || "",
            email: t.email || "",
            phone: t.phone || "",
            role_id: t.role_id || "",
            user_role: t.role_name || "",
            team_id: t.team_id || null,
            team_name: t.team_name || "",
            fname: t.fname || "",
            lname: t.lname || "",
          }),
          (this.previousEmail = t.email || ""),
          console.log("User team info:", t.team),
          console.log("Form team values:", {
            team_id: this.useForm.get("team_id")?.value,
            team_name: this.useForm.get("team_name")?.value,
          }),
          (this.userObj = ne({}, t)))
        : (this.userObj = {});
  }
  onDealerChange() {
    let t = this.useForm.get("dealer_code"),
      e = this.useForm.get("dealer_id");
    if (t && e) {
      let i = this.dealerList().find((o) => o.dealer_code === t.value);
      i && e.setValue(i.dealer_id);
    }
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let t = this.useForm.get("team_name"),
      e = this.useForm.get("team_id");
    if (t && e && t.value) {
      console.log("Team name value:", t.value),
        console.log("Available teams:", this.teamList());
      let i = this.teamList().find((o) => o.team_name === t.value);
      i
        ? (console.log("Selected Team:", i), e.setValue(i.team_id))
        : console.warn("Team not found:", t.value);
    }
  }
  displayAllUser() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (t) => {
        t && t.data.rows
          ? (this.totalUser.set(t.data.count),
            this.userList.set(t.data.rows),
            (this.filteredUsers = t.data.rows),
            this.initializeUsers())
          : (this.userList.set([]),
            (this.filteredUsers = []),
            this.toastr.warning("No users found", "Information"),
            this.initializeUsers());
      },
      error: (t) => {
        console.error("Users fetch error:", t),
          this.toastr.error(t.message || "Failed to fetch users", "Error"),
          this.userList.set([]),
          (this.filteredUsers = []),
          this.initializeUsers();
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    let t = this.useForm.value,
      e = this.roleList().find((i) => i.role_id === t.role_id);
    (t.user_role = e?.role_name || ""),
      this.masterSrv.createNewUser(t).subscribe({
        next: () => {
          this.toastr.success("User created successfully!", "Success"),
            this.displayAllUser(),
            this.useForm.reset(),
            (this.userObj = new Ga()),
            this.closeModal();
        },
        error: (i) => {
          let o = i.error?.message || "Failed to create user";
          this.toastr.error(o, "Creation Error");
        },
      });
  }
  onSaveAndClose() {
    this.useForm.valid && (this.onSave(), this.closeModal());
  }
  onUpdate() {
    if (
      (console.log("on update"),
      console.log("Form Values:", this.useForm.value),
      this.useForm.valid)
    ) {
      let t = this.useForm.value,
        e = `${(t.fname || "").trim()} ${(t.lname || "").trim()}`.replace(
          /\s+/g,
          " "
        );
      (t.name = e),
        (this.userObj = ne(ne({}, this.userObj), t)),
        console.log("\u{1F4E4} Payload sent to backend:", this.userObj),
        console.log("\u{1F50D} Form Status:", this.useForm.status),
        console.log("\u{1F680} Updated Payload before API call:", this.userObj),
        this.masterSrv.updateUser(this.userObj).subscribe(
          (i) => {
            i.status === 200
              ? (console.log("API Response:", i),
                console.log("\u2705 Update Success:", i),
                this.toastr.success(i.message, "Success"),
                this.userList.set(
                  this.userList().map((o) =>
                    o.user_id === this.userObj.user_id
                      ? et(ne(ne({}, o), this.userObj), { name: e })
                      : o
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0),
                this.displayAllUser(),
                this.closeModal(),
                this.useForm.reset())
              : this.toastr.error("Update failed", "Error");
          },
          (i) => {
            console.error("\u274C API Error:", i),
              i.response
                ? this.toastr.error(i.response.data.message, "Error")
                : this.toastr.error("Failed to update user", "Error");
          }
        );
    } else
      this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  onEdit(t) {
    (this.isEditMode = !0),
      (this.isModalOpen = !0),
      console.log("user.userObj before setting:", t?.user_id),
      (this.userObj = ne({}, t)),
      (this.previousValue = t.name);
    let e = `${t.fname || ""} ${t.lname || ""}`.trim().replace(/\s+/g, " ");
    console.log("Formatted name onEdit:", e),
      this.useForm.patchValue({
        user_id: t.user_id,
        name: e,
        account_id: t.account_id || "",
        email: t.email || "",
        phone: t.phone || "",
        role_id: t.role_id || "",
        team_id: t.team_id || null,
        team_name: t.team_name || "",
        fname: t.fname || "",
        lname: t.lname || "",
        user_role: t.user_role || "",
        dealer_id: t.dealer_id || null,
      }),
      console.log("userObj.user_id after setting:", this.userObj?.user_id),
      setTimeout(() => {
        $("#myModal").modal({ backdrop: !1 });
      }, 100);
  }
  isUserNameChanged() {
    return (
      this.useForm.dirty &&
      (this.useForm.value.name !== this.previousValue ||
        this.useForm.value.email !== this.userObj.email ||
        this.useForm.value.phone !== this.userObj.phone ||
        this.useForm.value.role_id !== this.userObj.role_id ||
        this.useForm.value.team_id !== this.userObj.team_id ||
        this.useForm.value.fname !== this.userObj.fname ||
        this.useForm.value.lname !== this.userObj.lname)
    );
  }
  selectedUserForDeletion = null;
  selectUserForDeletion(t) {
    (this.selectedUserForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  setUserToDelete(t) {
    this.selectedUserForDeletion = t;
  }
  openDeleteModal(t) {
    (this.selectedUserForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  deleteUserId() {
    console.log("Deleting User ID:", this.selectedUserForDeletion?.user_id),
      this.selectedUserForDeletion && this.selectedUserForDeletion.user_id
        ? this.masterSrv
            .deleteUser(this.selectedUserForDeletion.user_id)
            .subscribe(
              (t) => {
                this.toastr.success("User deleted successfully", "Success"),
                  this.displayAllUser(),
                  (this.isDeleteModalOpen = !1);
              },
              (t) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No users selected for deletion");
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  closeModal() {
    $(".bd-example-modal-lg").modal("hide"), (this.isModalOpen = !1);
  }
  markFormGroupTouched(t) {
    Object.values(t.controls).forEach((e) => {
      e.markAsTouched(), e instanceof vt && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  static ɵfac = function (e) {
    return new (e || n)(B(Rr), B(Xe));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-users"]],
    standalone: !0,
    features: [re],
    decls: 74,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      ["id", "user", 1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "media-body", "ml-1"],
      [1, "mb-1", "fs-14", "text-center"],
      [1, "mb-0", "text-black", "font-w600", "fs-20", "text-center"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search users...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "colspan",
        "3",
        1,
        "text-center",
        2,
        "display",
        "flex",
        "margin-left",
        "120%",
        "white-space",
        "nowrap",
      ],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [
        1,
        "modal-dialog",
        "modal-lg",
        "modal-dialog-centered",
        "modal-dialog-scrollable",
        2,
        "top",
        "6%",
      ],
      [1, "modal-title", "text-center", "w-100", 2, "font-size", "18px"],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "fname", 1, "form-label"],
      [
        "id",
        "fname",
        "type",
        "text",
        "formControlName",
        "fname",
        "placeholder",
        "First Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [1, "text-danger"],
      [
        "id",
        "lname",
        "type",
        "text",
        "formControlName",
        "lname",
        "placeholder",
        "Last Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "dealer_id", 1, "form-label"],
      [
        "id",
        "dealer_id",
        "formControlName",
        "dealer_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["for", "role_id", 1, "form-label"],
      [
        "id",
        "role_id",
        "formControlName",
        "role_id",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      [
        "id",
        "email",
        "type",
        "email",
        "formControlName",
        "email",
        "placeholder",
        "E-mail",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["for", "team_name", 1, "form-label"],
      [
        "id",
        "team_name",
        "formControlName",
        "team_id",
        "placeholder",
        "team name",
        1,
        "form-control",
        "form-control-lg",
        3,
        "change",
        "ngClass",
      ],
      [
        "id",
        "phone",
        "formControlName",
        "phone",
        "placeholder",
        "Phone",
        "maxlength",
        "10",
        1,
        "form-control",
        "form-control-lg",
        3,
        "keypress",
        "ngClass",
      ],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Users"),
        l()(),
        c(7, "li", 7)(8, "a", 8),
        h(9, "User Master"),
        l()()()(),
        c(10, "div", 9)(11, "div", 10)(12, "a", 11),
        F("click", function () {
          return i.openModal();
        }),
        U(13, "i", 12),
        h(14, "Add Users "),
        l()(),
        c(15, "div", 10)(16, "div", 13)(17, "p", 14),
        h(18, "Total User"),
        l(),
        c(19, "h3", 15),
        h(20),
        l()()()(),
        c(21, "div", 16)(22, "div", 17)(23, "div", 18)(24, "div", 19)(
          25,
          "div",
          20
        ),
        U(26, "label", 21),
        c(27, "select", 22),
        F("change", function (r) {
          return i.onItemsPerPageChange(r);
        }),
        c(28, "option", 23),
        h(29, "10"),
        l(),
        c(30, "option", 24),
        h(31, "25"),
        l(),
        c(32, "option", 25),
        h(33, "50"),
        l(),
        c(34, "option", 26),
        h(35, "100"),
        l()(),
        c(36, "label", 27),
        h(37, "records per page"),
        l()(),
        c(38, "div", 28)(39, "div", 29)(40, "input", 30),
        bt("ngModelChange", function (r) {
          return _t(i.searchTerm, r) || (i.searchTerm = r), r;
        }),
        F("input", function () {
          return i.onSearchChange();
        }),
        l()()()(),
        c(41, "div", 31)(42, "table", 32)(43, "thead")(44, "tr")(45, "th"),
        h(46, "Sr No"),
        l(),
        c(47, "th"),
        h(48, "Name"),
        l(),
        c(49, "th"),
        h(50, "Email"),
        l(),
        c(51, "th"),
        h(52, "Role"),
        l(),
        c(53, "th"),
        h(54, "Action"),
        l()()(),
        c(55, "tbody"),
        k(56, kM, 3, 0, "tr", 33)(57, OM, 14, 4, "tr", 34),
        l()()(),
        c(58, "div", 35)(59, "div", 36)(60, "div", 37),
        h(61),
        l()(),
        c(62, "div", 36)(63, "div", 38)(64, "ul", 39)(65, "li", 40)(
          66,
          "a",
          41
        ),
        F("click", function () {
          return i.previousPage();
        }),
        h(67, "Previous"),
        l()(),
        k(68, IM, 3, 3, "li", 42),
        c(69, "li", 43)(70, "a", 41),
        F("click", function () {
          return i.nextPage();
        }),
        h(71, "Next"),
        l()()()()()()()()()()(),
        k(72, PM, 13, 0, "div", 44)(73, eT, 74, 38, "div", 44)),
        e & 2 &&
          (p(20),
          K(" ", i.totalUser(), " "),
          p(20),
          gt("ngModel", i.searchTerm),
          p(16),
          y("ngIf", i.paginatedUsers.length === 0),
          p(),
          y("ngForOf", i.paginatedUsers),
          p(4),
          _i(
            " Showing ",
            (i.currentPage - 1) * i.itemsPerPage + 1,
            " to ",
            i.currentPage * i.itemsPerPage < i.teamList().length
              ? i.currentPage * i.itemsPerPage
              : i.teamList().length,
            " of ",
            i.teamList().length,
            " entries "
          ),
          p(4),
          fe("disabled", i.currentPage === 1),
          p(3),
          y("ngForOf", i.visiblePages),
          p(),
          fe("disabled", i.currentPage === i.totalPages),
          p(3),
          y("ngIf", i.isDeleteModalOpen),
          p(),
          y("ngIf", i.isModalOpen));
    },
    dependencies: [
      De,
      It,
      Bt,
      Ke,
      wi,
      no,
      ni,
      oi,
      Yt,
      zi,
      ii,
      Ci,
      Hn,
      Kc,
      Oi,
      it,
      za,
      u0,
      Ui,
      Ii,
      Pi,
      Mn,
      h0,
    ],
    styles: [
      "body[_ngcontent-%COMP%]{display:flex;min-height:100vh;margin:0;padding:0}.custom-modal-position[_ngcontent-%COMP%]{top:18%}@media (max-width: 767px){.custom-modal-position[_ngcontent-%COMP%]{top:7%;border:2px solid red}}#user[_ngcontent-%COMP%]{margin-left:-2rem}.sidebar[_ngcontent-%COMP%]{width:250px;flex-shrink:0;background-color:#f8f9fa;z-index:1000}.content-body[_ngcontent-%COMP%]{flex-grow:1;padding:20px;box-sizing:border-box;overflow-x:hidden}@media (max-width: 768px){body[_ngcontent-%COMP%]{flex-direction:column}.sidebar[_ngcontent-%COMP%]{width:100%;height:auto;position:static}.content-body[_ngcontent-%COMP%]{margin-left:0;width:100%;padding:10px}}.sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}@media (max-width: 576px){.search-input[_ngcontent-%COMP%]{margin-left:0!important;width:100%!important}}.card-box[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 0 15px #00000014;border-radius:10px}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.modal-backdrop[_ngcontent-%COMP%]{z-index:1040!important}.modal[_ngcontent-%COMP%]{z-index:1051!important;position:fixed!important;pointer-events:auto!important}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}@media (max-width: 991.98px){.search-input[_ngcontent-%COMP%]{width:100%;margin-top:10px}}@media only screen and (max-width: 1600px){.content-body[_ngcontent-%COMP%]{margin-left:0}}.searchbar[_ngcontent-%COMP%]{display:flex;float:right}input.is-invalid[_ngcontent-%COMP%], select.form-control.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}@media (min-width: 760px) and (max-width: 820px){.delete-btn-ipad[_ngcontent-%COMP%]{margin-top:5px!important}}",
    ],
  });
};
var tT = () => ["/Admin/dealer"],
  m0 = (n) => ["/Admin/singleUser", n];
function iT(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Subject"),
      l(),
      c(5, "h5", 17),
      h(6),
      l()(),
      c(7, "div", 15)(8, "h4", 16),
      h(9, "Assigned"),
      l(),
      c(10, "h5", 17),
      h(11),
      l()(),
      c(12, "div", 15)(13, "h4", 16),
      h(14, "Description"),
      l(),
      c(15, "h5", 17),
      h(16),
      l()(),
      c(17, "div", 15)(18, "h4", 16),
      h(19, "account Name"),
      l(),
      c(20, "h5", 17),
      h(21),
      l()()(),
      c(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      h(25, "start Date"),
      l(),
      c(26, "h5", 17),
      h(27),
      l()(),
      c(28, "div", 15)(29, "h4", 16),
      h(30, "End Date"),
      l(),
      c(31, "h5", 17),
      h(32),
      l()(),
      c(33, "div", 15)(34, "h4", 16),
      h(35, "Name"),
      l(),
      c(36, "h5", 17),
      h(37),
      l()(),
      c(38, "div", 15)(39, "h4", 16),
      h(40, "Lead Code"),
      l(),
      c(41, "h5", 17),
      h(42),
      l()()(),
      U(43, "div", 18),
      c(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      h(47, "Lead Email"),
      l(),
      c(48, "h5", 17),
      h(49),
      l()(),
      c(50, "div", 15)(51, "h4", 16),
      h(52, "Flag"),
      l(),
      c(53, "h5", 17),
      h(54),
      l()()(),
      c(55, "div", 19)(56, "a", 20),
      h(57, "Go Back"),
      l()()()),
    n & 2)
  ) {
    let e,
      i,
      o,
      r,
      a,
      d,
      m,
      _,
      v,
      S,
      T = w();
    p(6),
      K(" ", (e = T.eventList()) == null ? null : e.subject, ""),
      p(5),
      N((i = T.eventList()) == null ? null : i.assigned_to),
      p(5),
      N((o = T.eventList()) == null ? null : o.description),
      p(5),
      N((r = T.eventList()) == null ? null : r.name),
      p(6),
      K(" ", (a = T.eventList()) == null ? null : a.start_date, ""),
      p(5),
      K(" ", (d = T.eventList()) == null ? null : d.end_date, ""),
      p(5),
      K(" ", (m = T.eventList()) == null ? null : m.name, ""),
      p(5),
      N((_ = T.eventList()) == null ? null : _.lead_code),
      p(7),
      K(" ", (v = T.eventList()) == null ? null : v.lead_email, ""),
      p(5),
      K(" ", (S = T.eventList()) == null ? null : S.flag, ""),
      p(2),
      y("routerLink", he(11, m0, T.previousRoute));
  }
}
var Hl = class n {
  constructor(t) {
    this.route = t;
  }
  eventList = le(null);
  masterSrv = J(We);
  eventData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((t) => {
        (this.eventData = t.leadData),
          this.eventData
            ? this.eventById(this.eventData.event_id)
            : console.warn("event data not available from resolver.");
      }),
      this.route.paramMap.subscribe((t) => {
        let e = t.get("eventId");
        e
          ? this.eventById(e)
          : this.eventData ||
            console.error(
              "event ID not found in the URL and no resolver data."
            );
      });
  }
  eventById(t) {
    console.log("Fetching lead data for leadId:", t),
      this.masterSrv.eventById(t).subscribe({
        next: (e) => {
          this.eventList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(B(vi));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-single-event"]],
    standalone: !0,
    features: [re],
    decls: 21,
    vars: 6,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "row", "mb-4", "text-center"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
          5,
          "a",
          5
        ),
        h(6, "Utils"),
        l()(),
        c(7, "li", 4)(8, "a", 6),
        h(9, "Dealer"),
        l()(),
        c(10, "li", 4)(11, "a", 6),
        h(12, "Single Dealer"),
        l()(),
        c(13, "li", 7)(14, "a", 8),
        h(15, "Single Event"),
        l()()()(),
        c(16, "div", 9)(17, "div", 10)(18, "h5", 11),
        h(19, "User Details"),
        l()(),
        k(20, iT, 58, 13, "div", 12),
        l()()()),
        e & 2 &&
          (p(8),
          y("routerLink", bi(3, tT)),
          p(3),
          y("routerLink", he(4, m0, i.previousRoute)),
          p(9),
          y("ngIf", i.eventList()));
    },
    dependencies: [De, Ke, it, Gt],
  });
};
var nT = () => ["/Admin/dealer"],
  f0 = (n) => ["/Admin/singleUser", n];
function oT(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Lead Code"),
      l(),
      c(5, "h5", 17),
      h(6),
      l()(),
      c(7, "div", 15)(8, "h4", 16),
      h(9, "Status"),
      l(),
      c(10, "h5", 17),
      h(11),
      l()(),
      c(12, "div", 15)(13, "h4", 16),
      h(14, "Purchase Type"),
      l(),
      c(15, "h5", 17),
      h(16),
      l()(),
      c(17, "div", 15)(18, "h4", 16),
      h(19, "Sub Type"),
      l(),
      c(20, "h5", 17),
      h(21),
      l()()(),
      c(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      h(25, "Type"),
      l(),
      c(26, "h5", 17),
      h(27),
      l()(),
      c(28, "div", 15)(29, "h4", 16),
      h(30, "Sub Type"),
      l(),
      c(31, "h5", 17),
      h(32),
      l()(),
      c(33, "div", 15)(34, "h4", 16),
      h(35, "Brand"),
      l(),
      c(36, "h5", 17),
      h(37),
      l()(),
      c(38, "div", 15)(39, "h4", 16),
      h(40, "PMI"),
      l(),
      c(41, "h5", 17),
      h(42),
      l()()(),
      c(43, "div", 14)(44, "div", 15)(45, "h4", 16),
      h(46, "Lead Source"),
      l(),
      c(47, "h5", 17),
      h(48),
      l()(),
      c(49, "div", 15)(50, "h4", 16),
      h(51, "Last Name"),
      l(),
      c(52, "h5", 17),
      h(53),
      l()(),
      c(54, "div", 15)(55, "h4", 16),
      h(56, "Mobile"),
      l(),
      c(57, "h5", 17),
      h(58),
      l()(),
      c(59, "div", 15)(60, "h4", 16),
      h(61, "Email"),
      l(),
      c(62, "h5", 17),
      h(63),
      l()()(),
      c(64, "div", 14)(65, "div", 15)(66, "h4", 16),
      h(67, "Lead Owner"),
      l(),
      c(68, "h5", 17),
      h(69),
      l()(),
      c(70, "div", 15)(71, "h4", 16),
      h(72, "Flag"),
      l(),
      c(73, "h5", 17),
      h(74),
      l()()(),
      c(75, "div", 18)(76, "a", 19),
      h(77, "Go Back"),
      l()()()),
    n & 2)
  ) {
    let e,
      i,
      o,
      r,
      a,
      d,
      m,
      _,
      v,
      S,
      T,
      M,
      A,
      j,
      z = w();
    p(6),
      N((e = z.leadList()) == null ? null : e.lead_code),
      p(5),
      N((i = z.leadList()) == null ? null : i.status),
      p(5),
      N((o = z.leadList()) == null ? null : o.status),
      p(5),
      N((r = z.leadList()) == null ? null : r.purchase_type),
      p(6),
      N((a = z.leadList()) == null ? null : a.type),
      p(5),
      N((d = z.leadList()) == null ? null : d.sub_type),
      p(5),
      N((m = z.leadList()) == null ? null : m.brand),
      p(5),
      N((_ = z.leadList()) == null ? null : _.PMI),
      p(6),
      N((v = z.leadList()) == null ? null : v.lead_source),
      p(5),
      N((S = z.leadList()) == null ? null : S.lname),
      p(5),
      N((T = z.leadList()) == null ? null : T.mobile),
      p(5),
      N((M = z.leadList()) == null ? null : M.email),
      p(6),
      N((A = z.leadList()) == null ? null : A.lead_owner),
      p(5),
      N((j = z.leadList()) == null ? null : j.flag),
      p(2),
      y("routerLink", he(15, f0, z.previousRoute));
  }
}
var jl = class n {
  constructor(t) {
    this.route = t;
  }
  leadList = le(null);
  masterSrv = J(We);
  leadData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((t) => {
        (this.leadData = t.leadData),
          this.leadData
            ? this.singleLeadData(this.leadData.lead_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((t) => {
        let e = t.get("leadId");
        e
          ? this.singleLeadData(e)
          : this.leadData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleLeadData(t) {
    console.log("Fetching lead data for leadId:", t),
      this.masterSrv.leadById(t).subscribe({
        next: (e) => {
          this.leadList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(B(vi));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-single-lead"]],
    standalone: !0,
    features: [re],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, i) {
      if (
        (e & 1 &&
          (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          l()(),
          c(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          l()(),
          c(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          l()(),
          c(13, "li", 7)(14, "a", 8),
          h(15),
          l()()()(),
          c(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19, "Leads Details"),
          l()(),
          k(20, oT, 78, 17, "div", 12),
          l()()()),
        e & 2)
      ) {
        let o;
        p(8),
          y("routerLink", bi(4, nT)),
          p(3),
          y("routerLink", he(5, f0, i.previousRoute)),
          p(4),
          N((o = i.leadList()) == null ? null : o.lead_owner),
          p(5),
          y("ngIf", i.leadList());
      }
    },
    dependencies: [De, Ke, it, Gt],
  });
};
var zl = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("id");
    return i ? this.masterSrv.leadById(i) : xt(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(We));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ul = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("eventId");
    return console.log(i), i ? this.masterSrv.eventById(i) : xt(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(We));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Wl = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("id");
    return i ? this.masterSrv.userById(i) : xt(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(We));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var rT = () => ["/Admin/dealer"],
  g0 = (n) => ["/Admin/singleUser", n];
function aT(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Name"),
      l(),
      c(5, "h5", 17),
      h(6),
      l()(),
      c(7, "div", 15)(8, "h4", 16),
      h(9, "Account ID"),
      l(),
      c(10, "h5", 17),
      h(11),
      l()()(),
      c(12, "div", 14)(13, "div", 15)(14, "h4", 16),
      h(15, "Email"),
      l(),
      c(16, "h5", 17),
      h(17),
      l()(),
      c(18, "div", 15)(19, "h4", 16),
      h(20, "Phone"),
      l(),
      c(21, "h5", 17),
      h(22),
      l()()(),
      c(23, "div", 14)(24, "div", 15)(25, "h4", 16),
      h(26, "Role"),
      l(),
      c(27, "h5", 17),
      h(28),
      l()(),
      c(29, "div", 15)(30, "h4", 16),
      h(31, "Dealer Code"),
      l(),
      c(32, "h5", 17),
      h(33),
      l()()(),
      c(34, "div", 18)(35, "a", 19),
      h(36, "Go Back"),
      l()()()),
    n & 2)
  ) {
    let e,
      i,
      o,
      r,
      a,
      d,
      m = w();
    p(6),
      N((e = m.userList()) == null ? null : e.name),
      p(5),
      N((i = m.userList()) == null ? null : i.account_id),
      p(6),
      N((o = m.userList()) == null ? null : o.email),
      p(5),
      N((r = m.userList()) == null ? null : r.phone),
      p(6),
      N((a = m.userList()) == null ? null : a.user_role),
      p(5),
      N((d = m.userList()) == null ? null : d.dealer_code),
      p(2),
      y("routerLink", he(7, g0, m.previousRoute));
  }
}
var $l = class n {
  constructor(t) {
    this.route = t;
  }
  masterSrv = J(We);
  userData;
  previousRoute;
  userList = le(null);
  ngOnInit() {
    this.previousRoute = localStorage.getItem("previousRoute");
    debugger;
    this.route.data.subscribe((t) => {
      console.log("Resolved userData:", t.userData),
        t.userData &&
        Array.isArray(t.userData.data) &&
        t.userData.data.length > 0
          ? (this.userData = t.userData.data[0])
          : console.warn("User data not available.");
    }),
      this.route.paramMap.subscribe((t) => {
        let e = t.get("user_id");
        e && this.fetchSingleUser(e);
      });
  }
  fetchSingleUser(t) {
    console.log("Calling fetchSingleUser with ID:", t),
      this.masterSrv.userById(t).subscribe({
        next: (e) => {
          console.log("API Response:", e);
          debugger;
          e &&
          e.status === 200 &&
          e.data &&
          Array.isArray(e.data) &&
          e.data.length > 0
            ? (console.log("User found:", e.data[0]),
              this.userList.set(e.data[0]),
              console.log("UserList signal after setting:", this.userList()))
            : console.error("Invalid or empty response:", e);
        },
        error: (e) => {
          console.error("API Error:", e),
            e.error && console.error("Error details:", e.error),
            e.message && console.error("Error message:", e.message),
            e.status && console.error("Error status:", e.status);
        },
        complete: () => {
          console.log("API call completed");
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(B(vi));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-single-user"]],
    standalone: !0,
    features: [re],
    decls: 21,
    vars: 8,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4"],
      [1, "col-md-6", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, i) {
      if (
        (e & 1 &&
          (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          l()(),
          c(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          l()(),
          c(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          l()(),
          c(13, "li", 7)(14, "a", 8),
          h(15),
          l()()()(),
          c(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19),
          l()(),
          k(20, aT, 37, 9, "div", 12),
          l()()()),
        e & 2)
      ) {
        let o, r;
        p(8),
          y("routerLink", bi(5, rT)),
          p(3),
          y("routerLink", he(6, g0, i.previousRoute)),
          p(4),
          N((o = i.userList()) == null ? null : o.name),
          p(4),
          K(" ", (r = i.userList()) == null ? null : r.name, " Details "),
          p(),
          y("ngIf", i.userList());
      }
    },
    dependencies: [xi, Gt, De, Ke],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{padding:20px;flex-grow:1}",
    ],
  });
};
var Gl = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("id");
    return i ? this.masterSrv.taskById(i) : xt(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(We));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var sT = () => ["/Admin/dealer"],
  _0 = (n) => ["/Admin/singleUser", n];
function lT(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Subject"),
      l(),
      c(5, "h5", 17),
      h(6),
      l()(),
      c(7, "div", 15)(8, "h4", 16),
      h(9, "Status"),
      l(),
      c(10, "h5", 17),
      h(11),
      l()(),
      c(12, "div", 15)(13, "h4", 16),
      h(14, "Assigned"),
      l(),
      c(15, "h5", 17),
      h(16),
      l()()(),
      c(17, "div", 14)(18, "div", 15)(19, "h4", 16),
      h(20, "Due Date"),
      l(),
      c(21, "h5", 17),
      h(22),
      l()(),
      c(23, "div", 15)(24, "h4", 16),
      h(25, "Comments"),
      l(),
      c(26, "h5", 17),
      h(27),
      l()(),
      c(28, "div", 15)(29, "h4", 16),
      h(30, "Lead Name"),
      l(),
      c(31, "h5", 17),
      h(32),
      l()()(),
      c(33, "div", 14)(34, "div", 15)(35, "h4", 16),
      h(36, "Lead Email"),
      l(),
      c(37, "h5", 17),
      h(38),
      l()(),
      c(39, "div", 15)(40, "h4", 16),
      h(41, "Lead Code"),
      l(),
      c(42, "h5", 17),
      h(43),
      l()()(),
      c(44, "div", 18)(45, "a", 19),
      h(46, "Go Back"),
      l()()()),
    n & 2)
  ) {
    let e,
      i,
      o,
      r,
      a,
      d,
      m,
      _,
      v = w();
    p(6),
      N((e = v.taskList()) == null ? null : e.subject),
      p(5),
      N((i = v.taskList()) == null ? null : i.status),
      p(5),
      N((o = v.taskList()) == null ? null : o.assigned_to),
      p(6),
      N((r = v.taskList()) == null ? null : r.due_date),
      p(5),
      N((a = v.taskList()) == null ? null : a.comments),
      p(5),
      N((d = v.taskList()) == null ? null : d.lead_name),
      p(6),
      N((m = v.taskList()) == null ? null : m.lead_email),
      p(5),
      N((_ = v.taskList()) == null ? null : _.lead_code),
      p(2),
      y("routerLink", he(9, _0, v.previousRoute));
  }
}
var Yl = class n {
  constructor(t) {
    this.route = t;
  }
  taskList = le(null);
  masterSrv = J(We);
  taskData;
  previousRoute;
  ngOnInit() {
    (this.previousRoute = localStorage.getItem("previousRoute")),
      this.route.data.subscribe((t) => {
        (this.taskData = t.taskData),
          this.taskData
            ? this.singleTaskData(this.taskData.task_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((t) => {
        let e = t.get("taskId");
        e
          ? this.singleTaskData(e)
          : this.taskData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleTaskData(t) {
    console.log("Fetching lead data for leadId:", t),
      this.masterSrv.taskById(t).subscribe({
        next: (e) => {
          this.taskList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(B(vi));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-single-task"]],
    standalone: !0,
    features: [re],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-center",
        2,
        "background-color",
        "#0276FE",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px;",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-4", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276FE !important",
        3,
        "routerLink",
      ],
    ],
    template: function (e, i) {
      if (
        (e & 1 &&
          (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          l()(),
          c(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          l()(),
          c(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          l()(),
          c(13, "li", 7)(14, "a", 8),
          h(15),
          l()()()(),
          c(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19, "Task Details"),
          l()(),
          k(20, lT, 47, 11, "div", 12),
          l()()()),
        e & 2)
      ) {
        let o;
        p(8),
          y("routerLink", bi(4, sT)),
          p(3),
          y("routerLink", he(5, _0, i.previousRoute)),
          p(4),
          N((o = i.taskList()) == null ? null : o.assigned_to),
          p(5),
          y("ngIf", i.taskList());
      }
    },
    dependencies: [De, Ke, it, Gt],
  });
};
var ql = class n {
  constructor(t) {
    this.router = t;
    this.initRouteTracking();
  }
  previousIdSubject = new en(null);
  previousId$ = this.previousIdSubject.asObservable();
  currentId = null;
  initRouteTracking() {
    this.router.events.pipe(di((t) => t instanceof cr)).subscribe(() => {
      let i = this.router.url.split("/")[3] || null;
      this.currentId && this.setPreviousId(this.currentId),
        (this.currentId = i);
    });
  }
  setPreviousId(t) {
    localStorage.setItem("previousId", t), this.previousIdSubject.next(t);
  }
  getPreviousId() {
    return localStorage.getItem("previousId");
  }
  clearPreviousId() {
    localStorage.removeItem("previousId"), this.previousIdSubject.next(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(yi));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var dT = () => ["/Admin/dealer"],
  uT = (n) => ["/Admin/singleUser", n];
function hT(n, t) {
  if (
    (n & 1 &&
      (c(0, "div", 13)(1, "div", 14)(2, "div", 15)(3, "h4", 16),
      h(4, "Opportunity Name"),
      l(),
      c(5, "h5", 17),
      h(6),
      l()(),
      c(7, "div", 15)(8, "h4", 16),
      h(9, "stage"),
      l(),
      c(10, "h5", 17),
      h(11),
      l()(),
      c(12, "div", 15)(13, "h4", 16),
      h(14, "Opportunities Record"),
      l(),
      c(15, "h5", 17),
      h(16),
      l()(),
      c(17, "div", 15)(18, "h4", 16),
      h(19, "account Name"),
      l(),
      c(20, "h5", 17),
      h(21),
      l()()(),
      c(22, "div", 14)(23, "div", 15)(24, "h4", 16),
      h(25, "close Date"),
      l(),
      c(26, "h5", 17),
      h(27),
      l()(),
      c(28, "div", 15)(29, "h4", 16),
      h(30, "Opportunity Currency"),
      l(),
      c(31, "h5", 17),
      h(32),
      l()(),
      c(33, "div", 15)(34, "h4", 16),
      h(35, "VIN"),
      l(),
      c(36, "h5", 17),
      h(37),
      l()(),
      c(38, "div", 15)(39, "h4", 16),
      h(40, "Purchase Type"),
      l(),
      c(41, "h5", 17),
      h(42),
      l()()(),
      U(43, "div", 14),
      c(44, "div", 14)(45, "div", 15)(46, "h4", 16),
      h(47, "Sub Type"),
      l(),
      c(48, "h5", 17),
      h(49),
      l()(),
      c(50, "div", 15)(51, "h4", 16),
      h(52, "Brand"),
      l(),
      c(53, "h5", 17),
      h(54),
      l()(),
      c(55, "div", 15)(56, "h4", 16),
      h(57, "PMI"),
      l(),
      c(58, "h5", 17),
      h(59),
      l()(),
      c(60, "div", 15)(61, "h4", 16),
      h(62, "Description"),
      l(),
      c(63, "h5", 17),
      h(64),
      l()()(),
      c(65, "div", 14)(66, "div", 15)(67, "h4", 16),
      h(68, "Mobile"),
      l(),
      c(69, "h5", 17),
      h(70),
      l()(),
      c(71, "div", 15)(72, "h4", 16),
      h(73, "Phone"),
      l(),
      c(74, "h5", 17),
      h(75),
      l()(),
      c(76, "div", 15)(77, "h4", 16),
      h(78, "E-mail"),
      l(),
      c(79, "h5", 17),
      h(80),
      l()(),
      c(81, "div", 15)(82, "h4", 16),
      h(83, "Enquiry Type"),
      l(),
      c(84, "h5", 17),
      h(85),
      l()()(),
      c(86, "div", 18)(87, "a", 19),
      h(88, "Go Back"),
      l()()()),
    n & 2)
  ) {
    let e,
      i,
      o,
      r,
      a,
      d,
      m,
      _,
      v,
      S,
      T,
      M,
      A,
      j,
      z,
      L,
      ue = w();
    p(6),
      N((e = ue.oppList()) == null ? null : e.opportunity_name),
      p(5),
      N((i = ue.oppList()) == null ? null : i.stage),
      p(5),
      N((o = ue.oppList()) == null ? null : o.opportunity_record_type),
      p(5),
      N((r = ue.oppList()) == null ? null : r.account_name),
      p(6),
      N((a = ue.oppList()) == null ? null : a.close_date),
      p(5),
      N((d = ue.oppList()) == null ? null : d.opportunity_currency),
      p(5),
      N((m = ue.oppList()) == null ? null : m.purchase_type),
      p(5),
      N((_ = ue.oppList()) == null ? null : _.type),
      p(7),
      N((v = ue.oppList()) == null ? null : v.sub_type),
      p(5),
      N((S = ue.oppList()) == null ? null : S.brand),
      p(5),
      N((T = ue.oppList()) == null ? null : T.PMI),
      p(5),
      N((M = ue.oppList()) == null ? null : M.description),
      p(6),
      N((A = ue.oppList()) == null ? null : A.mobile),
      p(5),
      N((j = ue.oppList()) == null ? null : j.phone),
      p(5),
      N((z = ue.oppList()) == null ? null : z.email),
      p(5),
      N((L = ue.oppList()) == null ? null : L.enquiry_type);
  }
}
var Kl = class n {
  constructor(t, e) {
    this.route = t;
    this.routeTrackingService = e;
  }
  oppList = le(null);
  masterSrv = J(We);
  oppData;
  previousRoutes;
  previousRoute = null;
  previousId = null;
  ngOnInit() {
    this.routeTrackingService.previousId$.subscribe((t) => {
      this.previousId = t;
    }),
      (this.previousId = this.routeTrackingService.getPreviousId()),
      this.route.data.subscribe((t) => {
        (this.oppData = t.oppData),
          this.oppData
            ? this.singleoppData(this.oppData.opportunity_id)
            : console.warn("Lead data not available from resolver.");
      }),
      this.route.paramMap.subscribe((t) => {
        let e = t.get("oppId");
        e
          ? this.singleoppData(e)
          : this.oppData ||
            console.error("Lead ID not found in the URL and no resolver data.");
      });
  }
  singleoppData(t) {
    console.log("Fetching lead data for leadId:", t),
      this.masterSrv.oppById(t).subscribe({
        next: (e) => {
          this.oppList.set(e), console.log("Lead data fetched:", e);
        },
        error: (e) => {
          console.error("Error fetching lead data:", e);
        },
      });
  }
  static ɵfac = function (e) {
    return new (e || n)(B(vi), B(ql));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-single-opp"]],
    standalone: !0,
    features: [re],
    decls: 21,
    vars: 7,
    consts: [
      [1, "container-fluid"],
      [1, "content-body"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [3, "routerLink"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [
        1,
        "card",
        2,
        "border-radius",
        "12px",
        "overflow",
        "hidden",
        "box-shadow",
        "0px 4px 6px rgba(0, 0, 0, 0.2)",
      ],
      [
        1,
        "card-header",
        "text-start",
        2,
        "background-color",
        "#0276fe",
        "color",
        "white",
        "padding",
        "15px",
      ],
      [1, "card-title", "m-0", 2, "color", "white !important"],
      [
        "class",
        "card-body",
        "style",
        "background-color: #f9f9f9; padding: 20px",
        4,
        "ngIf",
      ],
      [1, "card-body", 2, "background-color", "#f9f9f9", "padding", "20px"],
      [1, "row", "mb-4", "text-start"],
      [1, "col-md-3", "mb-3"],
      [1, "text-muted"],
      [1, "mb-0"],
      [1, "text-center"],
      [
        "href",
        "/Admin/dealer",
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-card",
        2,
        "background-color",
        "#0276fe !important",
      ],
    ],
    template: function (e, i) {
      if (
        (e & 1 &&
          (c(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "ol", 3)(4, "li", 4)(
            5,
            "a",
            5
          ),
          h(6, "Utils"),
          l()(),
          c(7, "li", 4)(8, "a", 6),
          h(9, "Dealer"),
          l()(),
          c(10, "li", 4)(11, "a", 6),
          h(12, "Single Dealer"),
          l()(),
          c(13, "li", 7)(14, "a", 8),
          h(15),
          l()()()(),
          c(16, "div", 9)(17, "div", 10)(18, "h5", 11),
          h(19, " Opportunities Details "),
          l()(),
          k(20, hT, 89, 16, "div", 12),
          l()()()),
        e & 2)
      ) {
        let o;
        p(8),
          y("routerLink", bi(4, dT)),
          p(3),
          y("routerLink", he(5, uT, i.previousId)),
          p(4),
          N((o = i.oppList()) == null ? null : o.opportunity_name),
          p(5),
          y("ngIf", i.oppList());
      }
    },
    dependencies: [it, De, Ke, Gt],
  });
};
var Ql = class n {
  constructor(t) {
    this.masterSrv = t;
  }
  resolve(t, e) {
    let i = t.paramMap.get("id");
    return i ? this.masterSrv.oppById(i) : xt(null);
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(We));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Wt = class n {
  constructor(t, e) {
    this.router = t;
    this.platformId = e;
  }
  canActivate(t, e) {
    if (!ji(this.platformId)) return !1;
    let i = this.getToken();
    if (!i) return this.router.navigate([""]), !1;
    try {
      let o = this.decodeToken(i);
      if (o.exp * 1e3 < Date.now())
        return this.removeToken(), this.router.navigate([""]), !1;
      if (t.data.roles) {
        let a = o.roles || [],
          d = t.data.roles;
        if (!this.checkRoles(a, d)) return this.router.navigate([""]), !1;
      }
      return !0;
    } catch (o) {
      return (
        console.error("Token validation error:", o),
        this.removeToken(),
        this.router.navigate([""]),
        !1
      );
    }
  }
  getToken() {
    try {
      return typeof sessionStorage < "u"
        ? sessionStorage.getItem("token")
        : null;
    } catch (t) {
      return console.error("Error accessing token:", t), null;
    }
  }
  removeToken() {
    try {
      typeof sessionStorage < "u" && sessionStorage.removeItem("token");
    } catch (t) {
      console.error("Error removing token:", t);
    }
  }
  decodeToken(t) {
    try {
      let e = t.split(".")[1];
      return JSON.parse(atob(e));
    } catch (e) {
      throw (console.error("Token decoding error:", e), e);
    }
  }
  checkRoles(t, e) {
    return e.some((i) => t.includes(i));
  }
  static ɵfac = function (e) {
    return new (e || n)(Z(yi), Z(Ti));
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var Ya = class n {
  role_id;
  role_name;
  description;
  constructor() {
    (this.role_id = ""), (this.role_name = ""), (this.description = "");
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var pT = (n) => ({ "is-invalid": n });
function mT(n, t) {
  n & 1 && (c(0, "tr")(1, "td", 30), h(2, "No Roles Found"), l()());
}
function fT(n, t) {
  if (
    (n & 1 &&
      (c(0, "tr")(1, "td", 24),
      h(2),
      l(),
      c(3, "td", 24),
      h(4),
      l(),
      c(5, "td", 24),
      h(6),
      l(),
      c(7, "td"),
      U(8, "div", 31),
      l()()),
    n & 2)
  ) {
    let e = t.$implicit,
      i = t.index,
      o = w();
    p(2),
      N((o.currentPage - 1) * o.itemsPerPage + i + 1),
      p(2),
      N(e.role_name),
      p(2),
      N(e.description);
  }
}
function gT(n, t) {
  if ((n & 1 && (c(0, "option", 53), h(1), l()), n & 2)) {
    let e = t.$implicit;
    y("value", e.dealer_code), p(), K(" ", e.dealer_code, " ");
  }
}
function _T(n, t) {
  n & 1 && (c(0, "span"), h(1, " Role Name is required. "), l());
}
function bT(n, t) {
  if ((n & 1 && (c(0, "div", 44), k(1, _T, 2, 0, "span", 25), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("role_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function vT(n, t) {
  if (
    (n & 1 && (je(0), c(1, "button", 54), h(2, " Edit "), l(), ze()), n & 2)
  ) {
    let e = w(2);
    p(), y("disabled", !e.isRoleNameChanged());
  }
}
function yT(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 55),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.onSave());
      }),
      h(1, " Save "),
      l();
  }
}
function xT(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 32)(1, "div", 33)(2, "div", 34)(3, "div", 35)(4, "h5", 36),
      h(5),
      l(),
      c(6, "button", 37),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeModal());
      }),
      c(7, "span", 38),
      h(8, "\xD7"),
      l()()(),
      c(9, "div", 39)(10, "form", 40)(11, "div", 41)(12, "div", 42)(
        13,
        "label",
        43
      ),
      h(14, " Role Name "),
      c(15, "span", 44),
      h(16, "*"),
      l()(),
      c(17, "select", 45)(18, "option", 46),
      h(19, "Select Role"),
      l(),
      k(20, gT, 2, 2, "option", 47),
      l(),
      k(21, bT, 2, 1, "div", 48),
      l(),
      c(22, "div", 42)(23, "label", 43),
      h(24, " Description "),
      l(),
      U(25, "input", 49),
      l()(),
      c(26, "div", 50),
      k(27, vT, 3, 1, "ng-container", 51),
      c(28, "button", 52),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeModal());
      }),
      h(29, " Close "),
      l(),
      k(30, yT, 2, 0, "ng-template", null, 0, Ot),
      l()()()()()();
  }
  if (n & 2) {
    let e,
      i,
      o = ht(31),
      r = w();
    p(5),
      K(
        " ",
        r.roleObj.role_name || r.roleObj.description
          ? "Edit User"
          : "Add New Role",
        " "
      ),
      p(5),
      y("formGroup", r.useForm),
      p(7),
      y(
        "ngClass",
        he(
          8,
          pT,
          ((e = r.useForm.get("role_name")) == null ? null : e.touched) &&
            ((e = r.useForm.get("role_name")) == null ? null : e.invalid)
        )
      ),
      p(),
      y("ngValue", null),
      p(2),
      y("ngForOf", r.staticDealerList),
      p(),
      y(
        "ngIf",
        ((i = r.useForm.get("role_name")) == null ? null : i.invalid) &&
          ((i = r.useForm.get("role_name")) == null ? null : i.touched)
      ),
      p(6),
      y("ngIf", r.roleObj.role_id)("ngIfElse", o);
  }
}
var Xl = class n {
  constructor(t) {
    this.cdr = t;
    console.log("Constructor called"), this.initializeForm();
  }
  http = J($t);
  useForm = new vt({});
  roleList = le([]);
  count = le(0);
  totalRoles = le(0);
  isModalOpen = !1;
  roleObj = new Ya();
  previousValue = "";
  isEditMode = !1;
  isSubmitting = !1;
  roleListAll = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  pages = [];
  totalPages = 1;
  filteredRoles = [];
  paginatedRoles = [];
  masterSrv = J(We);
  toastr = J(ai);
  staticDealerList = [
    { dealer_code: "Admin" },
    { dealer_code: "SM" },
    { dealer_code: "PS" },
    { dealer_code: "GM" },
    { dealer_code: "DP" },
  ];
  ngOnInit() {
    console.log("ngOnInit triggered"), this.loadRole();
  }
  initializeForm() {
    console.log("Initializing form..."),
      (this.useForm = new vt({
        role_name: new Ze("", [we.required]),
        description: new Ze(""),
      }));
  }
  openModal(t) {
    this.useForm.reset(),
      (this.isModalOpen = !0),
      (this.isSubmitting = !1),
      document.body.classList.add("modal-open"),
      (this.isEditMode = !!t),
      t
        ? (this.useForm.patchValue({
            role_name: t.role_name || "",
            description: t.description || "",
          }),
          (this.roleObj = ne({}, t)))
        : (this.roleObj = new Ya());
  }
  onSaveAndClose() {
    this.useForm.valid && this.onSave();
  }
  markFormGroupTouched(t) {
    Object.values(t.controls).forEach((e) => {
      e.markAsTouched(), e.controls && this.markFormGroupTouched(e);
    });
  }
  loadRole() {
    this.masterSrv.getAllRole().subscribe({
      next: (t) => {
        this.roleList.set(t.data),
          this.count.set(t.data.length),
          (this.filteredRoles = t.data),
          this.applyFilterAndPagination();
      },
      error: (t) => {
        this.toastr.error("Failed to load role", "Error"),
          console.error("role load error:", t);
      },
    });
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    if (!this.isSubmitting) {
      if (
        (this.markFormGroupTouched(this.useForm),
        console.log("Save button clicked"),
        this.useForm.invalid)
      ) {
        console.warn("Form is invalid:", this.useForm.value),
          this.useForm.markAllAsTouched();
        return;
      }
      console.log("Form is valid. Submitting:", this.useForm.value),
        (this.isSubmitting = !0),
        this.masterSrv.createRole(this.useForm.value).subscribe({
          next: (t) => {
            console.log("Role created successfully", t),
              this.toastr.success("Role created successfully!", "Success"),
              this.loadRole(),
              console.log("closing from next"),
              this.closeModal();
          },
          error: (t) => {
            console.error("Create role error:", t), (this.isSubmitting = !1);
            let e =
              t.error?.error || t.error?.message || "Failed to create role.";
            this.toastr.error(e, "Error"),
              this.closeModal(),
              console.log("closing from error");
          },
          complete: () => {
            this.isSubmitting = !1;
          },
        });
    }
  }
  onSearchChange() {
    (this.currentPage = 1), this.applyFilterAndPagination();
  }
  onItemsPerPageChange(t) {
    (this.itemsPerPage = parseInt(t.target.value, 10)),
      (this.currentPage = 1),
      this.applyFilterAndPagination();
  }
  applyFilterAndPagination() {
    let t = this.roleList(),
      e = (this.searchTerm ?? "").toLowerCase();
    (this.filteredRoles = t.filter(
      (i) =>
        (i.role_name ?? "").toLowerCase().includes(e) ||
        (i.description ?? "").toLowerCase().includes(e)
    )),
      (this.totalPages = Math.ceil(
        this.filteredRoles.length / this.itemsPerPage
      )),
      (this.pages = Array.from({ length: this.totalPages }, (i, o) => o + 1)),
      this.paginateRoles();
  }
  closeModal() {
    (this.isModalOpen = !1),
      document.body.classList.remove("modal-open"),
      console.log("Modal closed");
  }
  paginateRoles() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    this.paginatedRoles = this.filteredRoles.slice(t, e);
  }
  goToPage(t) {
    (this.currentPage = t), this.paginateRoles();
  }
  previousPage() {
    this.currentPage > 1 && (this.currentPage--, this.paginateRoles());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.paginateRoles());
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredRoles.length
    );
  }
  min(t, e) {
    return Math.min(t, e);
  }
  updatePagination() {
    (this.totalPages = Math.ceil(
      this.filteredRoles.length / this.itemsPerPage
    )),
      (this.pages = Array.from({ length: this.totalPages }, (t, e) => e + 1)),
      (this.paginatedRoles = this.filteredRoles.slice(
        (this.currentPage - 1) * this.itemsPerPage,
        this.currentPage * this.itemsPerPage
      ));
  }
  isRoleNameChanged() {
    return this.useForm.value.role_name !== this.previousValue;
  }
  static ɵfac = function (e) {
    return new (e || n)(B(Xe));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-role"]],
    standalone: !0,
    features: [re],
    decls: 42,
    vars: 4,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto", "color", "#222fb9"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "400 !important",
        "color",
        "#6e7d8b",
        "font-size",
        "1rem",
        "font-family",
        "'poppins', sans-serif",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "col-lg-3", "col-md-4", "mb-4", "mb-md-0"],
      [
        1,
        "btn",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        "background-color",
        "#222fb9",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [2, "text-align", "left"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3"],
      [1, "col-md-6"],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "4", 1, "text-center"],
      [1, "d-flex"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "role_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "role_name",
        "formControlName",
        "role_name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["disabled", "", "hidden", "", 3, "ngValue"],
      [3, "value", 4, "ngFor", "ngForOf"],
      ["class", "text-danger", 4, "ngIf"],
      [
        "id",
        "description",
        "type",
        "text",
        "formControlName",
        "description",
        "placeholder",
        "Description",
        1,
        "form-control",
        "form-control-lg",
      ],
      [1, "modal-footer"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [3, "value"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "disabled",
      ],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Users"),
        l()(),
        c(7, "li", 7)(8, "a", 8),
        h(9, "Role Master"),
        l()()()(),
        c(10, "div", 9)(11, "div", 10)(12, "a", 11),
        F("click", function () {
          return i.openModal();
        }),
        U(13, "i", 12),
        h(14, "Add Roles "),
        l()(),
        c(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Roles"),
        l(),
        c(19, "h3", 16),
        h(20),
        l()()()(),
        c(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20),
        U(25, "div", 21),
        l()()(),
        c(26, "div", 22)(27, "table", 23)(28, "thead")(29, "tr")(30, "th", 24),
        h(31, "Sr No"),
        l(),
        c(32, "th", 24),
        h(33, "Role Name"),
        l(),
        c(34, "th", 24),
        h(35, "Description"),
        l()()(),
        c(36, "tbody"),
        k(37, mT, 3, 0, "tr", 25)(38, fT, 9, 3, "tr", 26),
        l()()(),
        c(39, "div", 27),
        U(40, "div", 28),
        l()()(),
        k(41, xT, 32, 10, "div", 29),
        l()),
        e & 2 &&
          (p(20),
          K(" ", i.filteredRoles.length, " "),
          p(17),
          y("ngIf", i.paginatedRoles.length === 0),
          p(),
          y("ngForOf", i.paginatedRoles),
          p(3),
          y("ngIf", i.isModalOpen));
    },
    dependencies: [
      it,
      no,
      ni,
      oi,
      Yt,
      zi,
      ii,
      Ci,
      Hn,
      Ui,
      Ii,
      Pi,
      De,
      It,
      Bt,
      Ke,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.table-responsive[_ngcontent-%COMP%]{width:100%;overflow-x:auto}table[_ngcontent-%COMP%]{width:100%!important;table-layout:auto}body[_ngcontent-%COMP%]{overflow-x:hidden}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}select.form-control.is-invalid[_ngcontent-%COMP%], select.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}.btn-outline-primary[_ngcontent-%COMP%]:hover{background-color:#222fb9;color:#fff}.btn-outline-primary[_ngcontent-%COMP%]{border-color:#222fb9;color:#222fb9}#closebtn[_ngcontent-%COMP%]{color:#ff2625}#example5.table[_ngcontent-%COMP%]{border:none!important;border-collapse:collapse}#example5.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], #example5.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-left:none!important;border-right:none!important;border-top:none!important}#example5.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid #f1f1f1!important}#example5.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child{border-bottom:none!important}.table-responsive[_ngcontent-%COMP%]{border:none!important}.toast-warning[_ngcontent-%COMP%]{background-color:#ff9800!important;color:#fff!important}.toast-info[_ngcontent-%COMP%]{background-color:#222fb9!important;color:#fff!important}",
    ],
  });
};
var Zl = class n {
  dtOptions = {};
  ngOnInit() {
    this.dtOptions = { pagingType: "full_numbers" };
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-datatable"]],
    standalone: !0,
    features: [re],
    decls: 94,
    vars: 1,
    consts: [["datatable", "", 1, "row-border", "hover", 3, "dtOptions"]],
    template: function (e, i) {
      e & 1 &&
        (c(0, "table", 0)(1, "thead")(2, "tr")(3, "th"),
        h(4, "ID"),
        l(),
        c(5, "th"),
        h(6, "First name"),
        l(),
        c(7, "th"),
        h(8, "Last name"),
        l()()(),
        c(9, "tbody")(10, "tr")(11, "td"),
        h(12, "1"),
        l(),
        c(13, "td"),
        h(14, "Foo"),
        l(),
        c(15, "td"),
        h(16, "Bar"),
        l()(),
        c(17, "tr")(18, "td"),
        h(19, "2"),
        l(),
        c(20, "td"),
        h(21, "Someone"),
        l(),
        c(22, "td"),
        h(23, "Youknow"),
        l()(),
        c(24, "tr")(25, "td"),
        h(26, "3"),
        l(),
        c(27, "td"),
        h(28, "Iamout"),
        l(),
        c(29, "td"),
        h(30, "Ofinspiration"),
        l()(),
        c(31, "tr")(32, "td"),
        h(33, "4"),
        l(),
        c(34, "td"),
        h(35, "Yoda"),
        l(),
        c(36, "td"),
        h(37, "Skywalker"),
        l()(),
        c(38, "tr")(39, "td"),
        h(40, "5"),
        l(),
        c(41, "td"),
        h(42, "Patrick"),
        l(),
        c(43, "td"),
        h(44, "Dupont"),
        l()(),
        c(45, "tr")(46, "td"),
        h(47, "6"),
        l(),
        c(48, "td"),
        h(49, "Barack"),
        l(),
        c(50, "td"),
        h(51, "Obama"),
        l()(),
        c(52, "tr")(53, "td"),
        h(54, "7"),
        l(),
        c(55, "td"),
        h(56, "Fran\xE7ois"),
        l(),
        c(57, "td"),
        h(58, "Holland"),
        l()(),
        c(59, "tr")(60, "td"),
        h(61, "8"),
        l(),
        c(62, "td"),
        h(63, "Michel"),
        l(),
        c(64, "td"),
        h(65, "Popo"),
        l()(),
        c(66, "tr")(67, "td"),
        h(68, "9"),
        l(),
        c(69, "td"),
        h(70, "Chuck"),
        l(),
        c(71, "td"),
        h(72, "Norris"),
        l()(),
        c(73, "tr")(74, "td"),
        h(75, "10"),
        l(),
        c(76, "td"),
        h(77, "Simon"),
        l(),
        c(78, "td"),
        h(79, "Robin"),
        l()(),
        c(80, "tr")(81, "td"),
        h(82, "11"),
        l(),
        c(83, "td"),
        h(84, "Louis"),
        l(),
        c(85, "td"),
        h(86, "Lin"),
        l()(),
        c(87, "tr")(88, "td"),
        h(89, "12"),
        l(),
        c(90, "td"),
        h(91, "Zelda"),
        l(),
        c(92, "td"),
        h(93, "Link"),
        l()()()()),
        e & 2 && y("dtOptions", i.dtOptions);
    },
    dependencies: [wr, $f],
  });
};
var Fr = class n {
  team_id;
  team_name;
  team_lead_id;
  team_lead_email;
  total_teams;
  constructor() {
    (this.team_id = ""),
      (this.team_name = ""),
      (this.team_lead_id = ""),
      (this.team_lead_email = ""),
      (this.total_teams = 0);
  }
  static ɵfac = function (e) {
    return new (e || n)();
  };
  static ɵprov = ie({ token: n, factory: n.ɵfac, providedIn: "root" });
};
var CT = (n) => ({ "is-invalid": n });
function wT(n, t) {
  n & 1 && (c(0, "tr")(1, "td", 47), h(2, "No Teams Found"), l()());
}
function DT(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "tr")(1, "td"),
      h(2),
      l(),
      c(3, "td"),
      h(4),
      l(),
      c(5, "td", 48)(6, "a", 49),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.onEdit(o));
      }),
      U(7, "i", 50),
      l(),
      c(8, "a", 51),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.openDeleteModal(o));
      }),
      U(9, "i", 52),
      l()()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = t.index,
      o = w();
    p(2), N((o.currentPage - 1) * o.itemsPerPage + i + 1), p(2), N(e.team_name);
  }
}
function ST(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "li", 53)(1, "a", 42),
      F("click", function () {
        let o = O(e).$implicit,
          r = w();
        return I(r.goToPage(o));
      }),
      h(2),
      l()();
  }
  if (n & 2) {
    let e = t.$implicit,
      i = w();
    fe("active", e === i.currentPage), p(2), N(e);
  }
}
function MT(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 54)(1, "div", 55)(2, "div", 56)(3, "div", 57)(4, "h5", 58),
      h(5, "Delete User"),
      l()(),
      c(6, "div", 59),
      h(7, "Are you sure you want to delete this user?"),
      l(),
      c(8, "div", 60)(9, "button", 61),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeDeleteModal());
      }),
      h(10, "Cancel"),
      l(),
      c(11, "button", 62),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.deleteTeamid());
      }),
      h(12, "Delete"),
      l()()()()();
  }
}
function TT(n, t) {
  n & 1 && (c(0, "span"), h(1, "Team Name is required."), l());
}
function ET(n, t) {
  if ((n & 1 && (c(0, "div", 73), k(1, TT, 2, 0, "span", 34), l()), n & 2)) {
    let e,
      i = w(2);
    p(),
      y(
        "ngIf",
        (e = i.useForm.get("team_name")) == null || e.errors == null
          ? null
          : e.errors.required
      );
  }
}
function kT(n, t) {
  if (n & 1) {
    let e = ee();
    je(0),
      c(1, "button", 78),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.onUpdate());
      }),
      h(2, " Edit "),
      l(),
      ze();
  }
  if (n & 2) {
    let e = w(2);
    p(), y("disabled", !e.isTeamNameChanged());
  }
}
function OT(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "button", 61),
      F("click", function () {
        O(e);
        let o = w(2);
        return I(o.onSave());
      }),
      h(1, " save "),
      l();
  }
  if (n & 2) {
    let e = w(2);
    ae("data-dismiss", e.useForm.valid ? "modal" : null);
  }
}
function IT(n, t) {
  if (n & 1) {
    let e = ee();
    c(0, "div", 63)(1, "div", 64)(2, "div", 56)(3, "div", 57)(4, "h5", 65),
      h(5),
      l(),
      c(6, "button", 66),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeModal());
      }),
      c(7, "span", 67),
      h(8, "\xD7"),
      l()()(),
      c(9, "div", 68)(10, "form", 69)(11, "div", 70)(12, "div", 71)(
        13,
        "label",
        72
      ),
      h(14, " Team Name "),
      c(15, "span", 73),
      h(16, "*"),
      l()(),
      U(17, "input", 74),
      k(18, ET, 2, 1, "div", 75),
      l()()()(),
      c(19, "div", 60),
      k(20, kT, 3, 1, "ng-container", 76),
      c(21, "button", 77),
      F("click", function () {
        O(e);
        let o = w();
        return I(o.closeModal());
      }),
      h(22, " Close "),
      l(),
      k(23, OT, 2, 1, "ng-template", null, 0, Ot),
      l()()()();
  }
  if (n & 2) {
    let e,
      i,
      o = ht(24),
      r = w();
    p(5),
      K(
        " ",
        r.userObj.team_name || r.userObj.team_lead_email
          ? "Edit User"
          : "Add New Team",
        " "
      ),
      p(5),
      y("formGroup", r.useForm),
      p(7),
      y(
        "ngClass",
        he(
          6,
          CT,
          ((e = r.useForm.get("team_name")) == null ? null : e.touched) &&
            ((e = r.useForm.get("team_name")) == null ? null : e.invalid)
        )
      ),
      p(),
      y(
        "ngIf",
        ((i = r.useForm.get("team_name")) == null ? null : i.invalid) &&
          ((i = r.useForm.get("team_name")) == null ? null : i.touched)
      ),
      p(2),
      y("ngIf", r.teamObj.team_id)("ngIfElse", o);
  }
}
var Jl = class n {
  constructor(t, e) {
    this.aleartsrv = t;
    this.cdr = e;
    this.initializeForm();
  }
  totalUser = le(0);
  teamList = le([]);
  totalteam = le(0);
  userList = le([]);
  teamObj = new Fr();
  count = le(0);
  userObj = new Fr();
  previousValue = "";
  totalPages = 0;
  isModalOpen = !1;
  masterSrv = J(We);
  toastr = J(ai);
  useForm = new vt({});
  isEditMode = !1;
  previousEmail = "";
  allUsers = [];
  pages = [];
  filteredTeams = [];
  searchTerm = "";
  itemsPerPage = 10;
  currentPage = 1;
  filteredTeam = [];
  isDeleteModalOpen = !1;
  visiblePages = [];
  maxVisiblePages = 3;
  totalItems = 0;
  paginatedTeams = [];
  filteredTeamList = [];
  ngOnInit() {
    (this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (t, e) => e + 1)),
      this.updateVisiblePages(),
      this.getAllTeams(),
      this.getAllTeams(),
      this.displayAllTeams(),
      (this.filteredTeams = this.teamList()),
      this.paginateTeams(),
      this.filterTeams();
  }
  initializeForm() {
    this.useForm = new vt({
      team_name: new Ze("", [we.required, we.minLength(2), we.maxLength(50)]),
    });
  }
  openModal(t) {
    console.log("\u2705 openModal() function called"),
      (this.isModalOpen = !0),
      this.useForm.reset(),
      (this.isEditMode = !!t),
      t
        ? ((this.teamObj = ne({}, t)),
          this.useForm.patchValue({
            team_name: t.team_name,
            team_lead_email: t.team_lead_email,
            team_lead_id: t.team_lead_id,
          }),
          console.log("fhgir"),
          console.log("\u{1F539} Edit Mode: team Object ->", this.teamObj),
          console.log("\u{1F539} teamobj.team_id ->", this.teamObj.team_id))
        : ((this.teamObj = new Fr()),
          (this.teamObj.team_id = void 0),
          console.log(
            "\u{1F195} New Vehicle Mode: Reset vehicleObj",
            this.teamObj
          ));
  }
  onEdit(t) {
    console.log("Edit button clicked. Team ID:", t?.team_id),
      (this.isEditMode = !0),
      (this.isModalOpen = !0),
      (this.teamObj = ne({}, t)),
      this.masterSrv.getTeamById(t.team_id).subscribe(
        (e) => {
          if (e?.status === 200) {
            let i = e.data?.TeamDetails;
            i
              ? (console.log("Team Details:", i),
                this.useForm.patchValue({
                  team_name: i.team_name,
                  team_lead_email: i.team_lead_email,
                  team_lead_id: i.team_lead_id,
                }),
                console.log("Form data patched, opening modal..."),
                setTimeout(() => {
                  $("#exampleModalCenter").modal("show");
                }, 0))
              : (console.error("No team details found"),
                this.toastr.error("Team details not found", "Error"));
          }
        },
        (e) => {
          console.error("Error fetching team details:", e),
            this.toastr.error("Error fetching team details", "Error");
        }
      );
  }
  isTeamNameChanged() {
    return (
      this.useForm.dirty && this.useForm.value.team_name !== this.previousValue
    );
  }
  selectedteamForDeletion = null;
  selectteamForDeletion(t) {
    (this.selectedteamForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  closeDeleteModal() {
    this.isDeleteModalOpen = !1;
  }
  onTeamChange() {
    console.log("onTeamChange() function called");
    let t = this.useForm.get("team_name"),
      e = this.useForm.get("team_lead_email"),
      i = this.useForm.get("team_id");
    if (t && i && t.value) {
      console.log("Team name value:", t.value),
        console.log("Available teams:", this.teamList());
      let o = this.teamList().find((r) => r.team_name === t.value);
      o
        ? (console.log("Selected Team:", o),
          i.setValue(o.team_id),
          e?.setValue(o.team_lead_email))
        : console.warn("Team not found:", t.value);
    }
  }
  openDeleteModal(t) {
    (this.selectedteamForDeletion = t), (this.isDeleteModalOpen = !0);
  }
  getAllTeams() {
    this.masterSrv.getMultipleUser().subscribe({
      next: (t) => {
        t && t.data.rows
          ? (this.allUsers = t.data.rows)
          : this.toastr.warning("No teams found", "Information");
      },
      error: (t) => {
        console.error("teams fetch error:", t),
          this.toastr.error(t.message || "Failed to fetch users", "Error");
      },
    });
  }
  updatePagination() {
    let t = this.filteredTeams,
      e = (this.currentPage - 1) * this.itemsPerPage,
      i = e + this.itemsPerPage;
    (this.paginatedTeams = t.slice(e, i)),
      (this.totalPages = Math.ceil(t.length / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (o, r) => r + 1));
  }
  onSearchChange() {
    (this.currentPage = 1), this.filterTeams();
  }
  getShowingTo() {
    return Math.min(
      this.currentPage * this.itemsPerPage,
      this.filteredTeam.length
    );
  }
  onItemsPerPageChange(t) {
    (this.itemsPerPage = +t.target.value),
      (this.currentPage = 1),
      this.filterTeams();
  }
  filterTeams() {
    (this.filteredTeams = this.teamList().filter((t) =>
      t.team_name.toLowerCase().includes(this.searchTerm.toLowerCase())
    )),
      this.paginateTeams();
  }
  paginateTeams() {
    let t = (this.currentPage - 1) * this.itemsPerPage,
      e = t + this.itemsPerPage;
    this.paginatedTeams = this.filteredTeams.slice(t, e);
  }
  updateVisiblePages() {
    let t =
      Math.floor((this.currentPage - 1) / this.maxVisiblePages) *
      this.maxVisiblePages;
    this.visiblePages = this.pages.slice(t, t + this.maxVisiblePages);
  }
  goToPage(t) {
    (this.currentPage = t), this.updateVisiblePages(), this.paginateTeams();
  }
  previousPage() {
    this.currentPage > 1 &&
      (this.currentPage--, this.updateVisiblePages(), this.paginateTeams());
  }
  nextPage() {
    this.currentPage < this.totalPages &&
      (this.currentPage++, this.updateVisiblePages(), this.paginateTeams());
  }
  deleteTeamid() {
    console.log(
      "this is the select user",
      this.selectteamForDeletion,
      this.selectedteamForDeletion
    ),
      this.selectedteamForDeletion && this.selectedteamForDeletion.team_id
        ? this.masterSrv
            .deleteTeam(this.selectedteamForDeletion.team_id)
            .subscribe(
              (t) => {
                this.toastr.success("Team deleted successfully", "Success"),
                  (this.isDeleteModalOpen = !1),
                  this.displayAllTeams();
              },
              (t) => {
                this.toastr.error("Server Error", "Error");
              }
            )
        : alert("No Team selected for deletion");
  }
  displayAllTeams() {
    console.log("Fetching all teams..."),
      this.masterSrv.getMultipleTeams().subscribe({
        next: (t) => {
          t && t.data.rows
            ? (this.teamList.set(t.data.rows),
              (this.filteredTeams = t.data.rows),
              this.totalteam.set(t.data.rows.length),
              this.initializeTeamPagination())
            : (this.teamList.set([]),
              (this.filteredTeams = []),
              this.toastr.warning("No team found", "Information"),
              this.totalteam.set(0),
              this.initializeTeamPagination());
        },
        error: (t) => {
          console.error("team fetch error:", t),
            this.toastr.error(t.message || "Failed to fetch team", "Error"),
            this.teamList.set([]),
            (this.filteredTeams = []),
            this.totalteam.set(0),
            this.initializeTeamPagination();
        },
      });
  }
  initializeTeamPagination() {
    let t = this.filteredTeams.length;
    (this.totalPages = Math.ceil(t / this.itemsPerPage)),
      (this.pages = Array.from({ length: this.totalPages }, (e, i) => i + 1)),
      this.currentPage > this.totalPages && (this.currentPage = 1),
      this.updateVisiblePages(),
      this.paginateTeams();
  }
  min(t, e) {
    return Math.min(t, e);
  }
  onUpdate() {
    this.useForm.valid
      ? ((this.teamObj = ne(ne({}, this.teamObj), this.useForm.value)),
        console.log("\u{1F680} Updated Payload before API call:", this.teamObj),
        this.masterSrv.updateTeam(this.teamObj).subscribe(
          (t) => {
            t.status === 200
              ? (console.log("\u2705 Update Success:", t),
                this.toastr.success(t.message, "Success"),
                this.displayAllTeams(),
                this.closeModal(),
                this.userList.set(
                  this.userList().map((e) =>
                    e.team_id === this.teamObj.team_id
                      ? ne(ne({}, e), this.teamObj)
                      : e
                  )
                ),
                setTimeout(() => {
                  this.cdr.detectChanges(), this.cdr.markForCheck();
                }, 0))
              : this.toastr.error("Update failed", "Error");
          },
          (t) => {
            console.error("\u274C API Error:", t),
              this.toastr.error("Failed to update team", "Error");
          }
        ))
      : this.toastr.error("Invalid form data. Please check inputs.", "Error");
  }
  closeModal() {
    this.isModalOpen = !1;
  }
  markFormGroupTouched(t) {
    Object.values(t.controls).forEach((e) => {
      e.markAsTouched(), e instanceof vt && this.markFormGroupTouched(e);
    });
  }
  isEmailChange() {
    return this.useForm.get("email")?.value !== this.previousEmail;
  }
  onSave() {
    if (this.useForm.invalid) {
      this.useForm.markAllAsTouched(),
        this.toastr.warning(
          "Please fill all required fields correctly",
          "Validation"
        );
      return;
    }
    console.log("\u{1F4E6} Payload Before API Call:", this.useForm.value);
    let t = this.useForm.value;
    console.log("Form Data being sent to API:", t),
      this.masterSrv.createNewTeam(t).subscribe({
        next: (e) => {
          this.toastr.success("Team created successfully!", "Success"),
            this.displayAllTeams(),
            this.closeModal(),
            setTimeout(() => {
              this.cdr.detectChanges(), this.cdr.markForCheck();
            }, 0);
        },
        error: (e) => {
          console.error("Team creation error:", e);
          let i = e?.error?.message || "Failed to create team";
          this.toastr.error(i, "Creation Error");
        },
      });
  }
  loadTeams() {
    this.masterSrv.getAllTeams().subscribe({
      next: (t) => {
        this.count.set(t.data.count), this.teamList.set(t.data.rows);
      },
      error: (t) => {
        this.toastr.error("Failed to load vehicles", "Error"),
          console.error("Vehicle load error:", t);
      },
    });
  }
  static ɵfac = function (e) {
    return new (e || n)(B(Rr), B(Xe));
  };
  static ɵcmp = oe({
    type: n,
    selectors: [["app-team"]],
    standalone: !0,
    features: [re],
    decls: 71,
    vars: 14,
    consts: [
      ["saveButton", ""],
      [1, "container-fluid"],
      [1, "content-section", "active"],
      [1, "page-titles"],
      [1, "breadcrumb"],
      [1, "breadcrumb-item"],
      ["href", "javascript:void(0)", 2, "cursor", "auto"],
      [1, "breadcrumb-item", "active"],
      [
        "href",
        "javascript:void(0)",
        2,
        "cursor",
        "auto",
        "font-weight",
        "700 !important",
        "color",
        "black",
      ],
      [1, "row", "mb-5", "align-items-center"],
      [1, "col-xl-2", "mb-4", "mb-xl-0"],
      [
        1,
        "btn",
        "btn-primary",
        "light",
        "btn-lg",
        "btn-block",
        "rounded",
        "shadow",
        "px-2",
        "buttons",
        2,
        "cursor",
        "pointer",
        "color",
        "white !important",
        3,
        "click",
      ],
      [1, "fa", "fa-plus", "mr-1"],
      [1, "col-xl-2", "mb-4", "mb-xl-0", 2, "margin-left", "-2%"],
      [1, "media-body", "text-center"],
      [1, "mb-1", "fs-14"],
      [1, "mb-0", "text-black", "font-w600", "fs-20"],
      [
        1,
        "card-box",
        "p-4",
        "mb-5",
        2,
        "background-color",
        "#fff",
        "box-shadow",
        "0 0 15px rgba(0, 0, 0, 0.08)",
        "border-radius",
        "10px",
      ],
      [1, "row", "mb-4", "align-items-center"],
      [1, "col-12"],
      [1, "row", "mb-3"],
      [1, "col-md-6", "d-flex", "align-items-center"],
      [1, "mr-2"],
      [
        1,
        "form-control",
        2,
        "width",
        "80px",
        "display",
        "inline-block",
        "border-radius",
        "5px",
        "height",
        "45px",
        3,
        "change",
      ],
      ["value", "10"],
      ["value", "25"],
      ["value", "50"],
      ["value", "100"],
      [1, "ml-2"],
      [1, "col-md-6", "d-flex", "justify-content-end", "align-items-center"],
      [1, "search-wrapper"],
      [
        "type",
        "text",
        "placeholder",
        "Search teams...",
        1,
        "form-control",
        "search-input",
        3,
        "ngModelChange",
        "input",
        "ngModel",
      ],
      [1, "table-responsive"],
      [1, "table", "display", "mb-4", "dataTablesCard", "fs-14", "w-100"],
      [4, "ngIf"],
      [4, "ngFor", "ngForOf"],
      [1, "row", "mt-3", "align-items-center", 2, "width", "100%"],
      [1, "col-md-6"],
      [1, "dataTables_info"],
      [1, "dataTables_paginate", "paging_simple_numbers", "float-right"],
      [1, "pagination"],
      [1, "paginate_button", "page-item", "previous"],
      [1, "page-link", 3, "click"],
      [
        "class",
        "paginate_button page-item",
        3,
        "active",
        4,
        "ngFor",
        "ngForOf",
      ],
      [1, "paginate_button", "page-item", "next"],
      [
        "class",
        "modal d-block",
        "tabindex",
        "-1",
        "style",
        "background: rgba(0, 0, 0, 0.5); z-index: 1050;",
        4,
        "ngIf",
      ],
      [
        "class",
        "modal d-block",
        "style",
        "background-color: rgba(0, 0, 0, 0.5);",
        4,
        "ngIf",
      ],
      ["colspan", "3", 1, "text-center"],
      [1, "d-flex"],
      [
        "href",
        "javascript:void(0);",
        "data-target",
        ".bd-example-modal-lg",
        "data-toggle",
        "modal",
        "data-backdrop",
        "false",
        1,
        "btn",
        "btn-primary",
        "shadow",
        "btn-xs",
        "sharp",
        "mr-1",
        3,
        "click",
      ],
      [1, "fa", "fa-pencil"],
      [
        "href",
        "javascript:void(0);",
        "type",
        "button",
        1,
        "btn",
        "btn-danger",
        "shadow",
        "btn-xs",
        "sharp",
        "delete-btn-ipad",
        3,
        "click",
      ],
      [1, "fa", "fa-trash"],
      [1, "paginate_button", "page-item"],
      [
        "tabindex",
        "-1",
        1,
        "modal",
        "d-block",
        2,
        "background",
        "rgba(0, 0, 0, 0.5)",
        "z-index",
        "1050",
      ],
      [1, "modal-dialog", "modal-sm", 2, "top", "20%"],
      [1, "modal-content"],
      [1, "modal-header"],
      [1, "modal-title", "text-center", "w-100"],
      [1, "modal-body", "text-center"],
      [1, "modal-footer"],
      ["type", "button", 1, "btn", "btn-outline-primary", 3, "click"],
      ["type", "button", 1, "btn", "btn-outline-danger", 3, "click"],
      [1, "modal", "d-block", 2, "background-color", "rgba(0, 0, 0, 0.5)"],
      [1, "modal-dialog", "modal-lg", 2, "top", "18%"],
      [
        1,
        "modal-title",
        2,
        "text-align",
        "center",
        "width",
        "100%",
        "font-size",
        "18px",
      ],
      ["type", "button", 1, "close", 3, "click"],
      [1, "x"],
      [1, "modal-body"],
      [3, "formGroup"],
      [1, "row"],
      [1, "col-md-6", "form-group"],
      ["for", "team_name", 1, "form-label"],
      [1, "text-danger"],
      [
        "id",
        "team_name",
        "type",
        "text",
        "formControlName",
        "team_name",
        "placeholder",
        "Team Name",
        "required",
        "",
        1,
        "form-control",
        "form-control-lg",
        3,
        "ngClass",
      ],
      ["class", "text-danger", 4, "ngIf"],
      [4, "ngIf", "ngIfElse"],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-danger",
        3,
        "click",
      ],
      [
        "type",
        "button",
        "data-dismiss",
        "modal",
        1,
        "btn",
        "btn-outline-primary",
        3,
        "click",
        "disabled",
      ],
    ],
    template: function (e, i) {
      e & 1 &&
        (c(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "ol", 4)(4, "li", 5)(
          5,
          "a",
          6
        ),
        h(6, "Utils"),
        l()(),
        c(7, "li", 7)(8, "a", 8),
        h(9, "Team Master"),
        l()()()(),
        c(10, "div", 9)(11, "div", 10)(12, "a", 11),
        F("click", function () {
          return i.openModal();
        }),
        U(13, "i", 12),
        h(14, "Add Team "),
        l()(),
        c(15, "div", 13)(16, "div", 14)(17, "p", 15),
        h(18, "Total Team"),
        l(),
        c(19, "h3", 16),
        h(20),
        l()()()(),
        c(21, "div", 17)(22, "div", 18)(23, "div", 19)(24, "div", 20)(
          25,
          "div",
          21
        ),
        U(26, "label", 22),
        c(27, "select", 23),
        F("change", function (r) {
          return i.onItemsPerPageChange(r);
        }),
        c(28, "option", 24),
        h(29, "10"),
        l(),
        c(30, "option", 25),
        h(31, "25"),
        l(),
        c(32, "option", 26),
        h(33, "50"),
        l(),
        c(34, "option", 27),
        h(35, "100"),
        l()(),
        c(36, "label", 28),
        h(37, "records per page"),
        l()(),
        c(38, "div", 29)(39, "div", 30)(40, "input", 31),
        bt("ngModelChange", function (r) {
          return _t(i.searchTerm, r) || (i.searchTerm = r), r;
        }),
        F("input", function () {
          return i.onSearchChange();
        }),
        l()()()(),
        h(41, " \xA0\xA0 "),
        l(),
        c(42, "div", 32)(43, "table", 33)(44, "thead")(45, "tr")(46, "th"),
        h(47, "Sr No"),
        l(),
        c(48, "th"),
        h(49, "Team Name"),
        l(),
        c(50, "th"),
        h(51, "Action"),
        l()()(),
        c(52, "tbody"),
        k(53, wT, 3, 0, "tr", 34)(54, DT, 10, 2, "tr", 35),
        l()()(),
        c(55, "div", 36)(56, "div", 37)(57, "div", 38),
        h(58),
        l()(),
        c(59, "div", 37)(60, "div", 39)(61, "ul", 40)(62, "li", 41)(
          63,
          "a",
          42
        ),
        F("click", function () {
          return i.previousPage();
        }),
        h(64, "Previous"),
        l()(),
        k(65, ST, 3, 3, "li", 43),
        c(66, "li", 44)(67, "a", 42),
        F("click", function () {
          return i.nextPage();
        }),
        h(68, "Next"),
        l()()()()()()()()()(),
        k(69, MT, 13, 0, "div", 45)(70, IT, 25, 8, "div", 46)),
        e & 2 &&
          (p(20),
          K(" ", i.totalteam(), " "),
          p(20),
          gt("ngModel", i.searchTerm),
          p(13),
          y("ngIf", i.paginatedTeams.length === 0),
          p(),
          y("ngForOf", i.paginatedTeams),
          p(4),
          _i(
            " Showing ",
            (i.currentPage - 1) * i.itemsPerPage + 1,
            " to ",
            i.currentPage * i.itemsPerPage < i.teamList().length
              ? i.currentPage * i.itemsPerPage
              : i.teamList().length,
            " of ",
            i.teamList().length,
            " entries "
          ),
          p(4),
          fe("disabled", i.currentPage === 1),
          p(3),
          y("ngForOf", i.visiblePages),
          p(),
          fe("disabled", i.currentPage === i.totalPages),
          p(3),
          y("ngIf", i.isDeleteModalOpen),
          p(),
          y("ngIf", i.isModalOpen));
    },
    dependencies: [
      De,
      It,
      Bt,
      Ke,
      it,
      no,
      ni,
      oi,
      Yt,
      ii,
      Ci,
      Hn,
      Oi,
      Ui,
      Ii,
      Pi,
    ],
    styles: [
      ".sidebar[_ngcontent-%COMP%]{width:250px;position:fixed;top:0;left:0;height:100%;background-color:#f8f9fa}.content-body[_ngcontent-%COMP%]{margin-left:14%;padding:20px;flex-grow:1}.search-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.search-input[_ngcontent-%COMP%]{width:200px;max-width:100%}.page-titles[_ngcontent-%COMP%]{margin-top:0;padding-top:8px}@media (max-width: 768px){.sidebar[_ngcontent-%COMP%]{display:none}.content-body[_ngcontent-%COMP%]{margin-left:0;padding:10px}}input.form-control.is-invalid[_ngcontent-%COMP%], input.form-control.form-control-lg.is-invalid[_ngcontent-%COMP%]{background-image:none!important;padding-right:.75rem!important}",
    ],
  });
};
var b0 = [
  { path: "dataTable", component: Zl },
  { path: "", component: Wa, pathMatch: "full" },
  { path: "login", component: Wa },
  {
    path: "Admin",
    component: Is,
    canActivate: [Wt],
    children: [
      { path: "", redirectTo: "dashboard", pathMatch: "full" },
      {
        path: "dashboard",
        component: dl,
        data: { title: "Dashboard" },
        canActivate: [Wt],
      },
      {
        path: "dealer",
        component: ml,
        data: { title: "Dealer" },
        canActivate: [Wt],
      },
      {
        path: "team",
        component: Jl,
        data: { title: "team" },
        canActivate: [Wt],
      },
      {
        path: "vehicle",
        component: Il,
        data: { title: "Vehicle" },
        canActivate: [Wt],
      },
      {
        path: "role",
        component: Xl,
        data: { title: "Role" },
        canActivate: [Wt],
      },
      {
        path: "user-all",
        component: Bl,
        data: { title: "Users-All" },
        canActivate: [Wt],
      },
      {
        path: "customer",
        component: Nl,
        data: { title: "Customer" },
        canActivate: [Wt],
      },
      {
        path: "profile",
        component: Ll,
        data: { title: "Profile" },
        canActivate: [Wt],
      },
      {
        path: "singleUser/:dealer_id",
        component: Ua,
        resolve: { dealerData: $a },
        data: { title: "Multiple" },
        canActivate: [Wt],
      },
      {
        path: "single-events/:eventId",
        component: Hl,
        resolve: { eventData: Ul },
        data: { title: "Single events" },
        canActivate: [Wt],
      },
      {
        path: "single-lead/:dealerId/:leadId",
        component: jl,
        resolve: { leadData: zl },
        data: { title: "Single Lead Data" },
        canActivate: [Wt],
      },
      {
        path: "single-user/:user_id",
        component: $l,
        resolve: { userData: Wl },
        data: { title: "Single user Data" },
        canActivate: [Wt],
      },
      {
        path: "single-task/:taskId",
        component: Yl,
        resolve: { taskData: Gl },
        data: { title: "Single Task Data" },
        canActivate: [Wt],
      },
      {
        path: "single-opportunities/:oppId",
        component: Kl,
        resolve: { oppData: Ql },
        data: { title: "Single Opportunities Data" },
        canActivate: [Wt],
      },
      {
        path: "admin/singleDealer/:id",
        component: Ua,
        resolve: { dealerData: $a },
        data: { title: "Single dealer Data" },
        canActivate: [Wt],
      },
    ],
  },
];
var PT = "@",
  AT = (() => {
    class n {
      constructor(e, i, o, r, a) {
        (this.doc = e),
          (this.delegate = i),
          (this.zone = o),
          (this.animationType = r),
          (this.moduleImpl = a),
          (this._rendererFactoryPromise = null),
          (this.scheduler = J(Qh, { optional: !0 })),
          (this.loadingSchedulerFn = J(RT, { optional: !0 }));
      }
      ngOnDestroy() {
        this._engine?.flush();
      }
      loadImpl() {
        let e = () =>
            this.moduleImpl ?? import("./chunk-OA7VD4S6.mjs").then((o) => o),
          i;
        return (
          this.loadingSchedulerFn
            ? (i = this.loadingSchedulerFn(e))
            : (i = e()),
          i
            .catch((o) => {
              throw new nr(5300, !1);
            })
            .then(({ ɵcreateEngine: o, ɵAnimationRendererFactory: r }) => {
              this._engine = o(this.animationType, this.doc);
              let a = new r(this.delegate, this._engine, this.zone);
              return (this.delegate = a), a;
            })
        );
      }
      createRenderer(e, i) {
        let o = this.delegate.createRenderer(e, i);
        if (o.ɵtype === 0) return o;
        typeof o.throwOnSyntheticProps == "boolean" &&
          (o.throwOnSyntheticProps = !1);
        let r = new Ju(o);
        return (
          i?.data?.animation &&
            !this._rendererFactoryPromise &&
            (this._rendererFactoryPromise = this.loadImpl()),
          this._rendererFactoryPromise
            ?.then((a) => {
              let d = a.createRenderer(e, i);
              r.use(d), this.scheduler?.notify(10);
            })
            .catch((a) => {
              r.use(o);
            }),
          r
        );
      }
      begin() {
        this.delegate.begin?.();
      }
      end() {
        this.delegate.end?.();
      }
      whenRenderingDone() {
        return this.delegate.whenRenderingDone?.() ?? Promise.resolve();
      }
      static {
        this.ɵfac = function (i) {
          or();
        };
      }
      static {
        this.ɵprov = ie({ token: n, factory: n.ɵfac });
      }
    }
    return n;
  })(),
  Ju = class {
    constructor(t) {
      (this.delegate = t), (this.replay = []), (this.ɵtype = 1);
    }
    use(t) {
      if (((this.delegate = t), this.replay !== null)) {
        for (let e of this.replay) e(t);
        this.replay = null;
      }
    }
    get data() {
      return this.delegate.data;
    }
    destroy() {
      (this.replay = null), this.delegate.destroy();
    }
    createElement(t, e) {
      return this.delegate.createElement(t, e);
    }
    createComment(t) {
      return this.delegate.createComment(t);
    }
    createText(t) {
      return this.delegate.createText(t);
    }
    get destroyNode() {
      return this.delegate.destroyNode;
    }
    appendChild(t, e) {
      this.delegate.appendChild(t, e);
    }
    insertBefore(t, e, i, o) {
      this.delegate.insertBefore(t, e, i, o);
    }
    removeChild(t, e, i) {
      this.delegate.removeChild(t, e, i);
    }
    selectRootElement(t, e) {
      return this.delegate.selectRootElement(t, e);
    }
    parentNode(t) {
      return this.delegate.parentNode(t);
    }
    nextSibling(t) {
      return this.delegate.nextSibling(t);
    }
    setAttribute(t, e, i, o) {
      this.delegate.setAttribute(t, e, i, o);
    }
    removeAttribute(t, e, i) {
      this.delegate.removeAttribute(t, e, i);
    }
    addClass(t, e) {
      this.delegate.addClass(t, e);
    }
    removeClass(t, e) {
      this.delegate.removeClass(t, e);
    }
    setStyle(t, e, i, o) {
      this.delegate.setStyle(t, e, i, o);
    }
    removeStyle(t, e, i) {
      this.delegate.removeStyle(t, e, i);
    }
    setProperty(t, e, i) {
      this.shouldReplay(e) && this.replay.push((o) => o.setProperty(t, e, i)),
        this.delegate.setProperty(t, e, i);
    }
    setValue(t, e) {
      this.delegate.setValue(t, e);
    }
    listen(t, e, i) {
      return (
        this.shouldReplay(e) && this.replay.push((o) => o.listen(t, e, i)),
        this.delegate.listen(t, e, i)
      );
    }
    shouldReplay(t) {
      return this.replay !== null && t.startsWith(PT);
    }
  },
  RT = new qe("");
function v0(n = "animations") {
  return (
    Zh("NgAsyncAnimations"),
    ss([
      {
        provide: Xh,
        useFactory: (t, e, i) => new AT(t, e, i, n),
        deps: [Le, lp, Oe],
      },
      {
        provide: vn,
        useValue: n === "noop" ? "NoopAnimations" : "BrowserAnimations",
      },
    ])
  );
}
var y0 = {
  providers: [
    op({ eventCoalescing: !0 }),
    pp(b0),
    wr,
    up(),
    sp(),
    v0(),
    $h(
      Bf.forRoot({
        timeOut: 3e3,
        positionClass: "toast-top-right",
        preventDuplicates: !0,
        progressBar: !0,
      })
    ),
  ],
};
var FT = { providers: [hp()] },
  x0 = rp(y0, FT);
var NT = () => cp(ms, x0),
  b4 = NT;
export { b4 as a };
